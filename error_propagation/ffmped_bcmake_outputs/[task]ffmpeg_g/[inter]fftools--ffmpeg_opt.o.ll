; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g/[inter]fftools--ffmpeg_opt.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g/[inter]fftools--ffmpeg_opt.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.HWAccel = type { i8*, i32 (%struct.AVCodecContext*)*, i32, i32 }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, {}*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, {}*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, {}*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.OptionGroupDef = type { i8*, i8*, i32 }
%struct.OptionDef = type { i8*, i32, %union.anon.0, i8*, i8* }
%union.anon.0 = type { i8* }
%struct.HWDevice = type { i8*, i32, %struct.AVBufferRef* }
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.InputFile = type { %struct.AVFormatContext*, i32, i32, i32, i32, i64, %struct.AVRational, i64, i64, i64, i64, i32, i64, i32, i32, i32, i32, %struct.AVThreadMessageQueue*, i64, i32, i32, i32 }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type opaque
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, i32 (%struct.AVFormatContext*)*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, %struct.anon*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, %struct.AVPacketList*, %struct.AVProbeData, [17 x i64], %struct.AVIndexEntry*, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], i64, i8, i8, i32, %struct.AVRational, %struct.AVStreamInternal* }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVStreamInternal = type opaque
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVFormatInternal = type opaque
%struct.AVThreadMessageQueue = type opaque
%struct.InputStream = type { i32, %struct.AVStream*, i32, i32, i32, %struct.AVCodecContext*, %struct.AVCodec*, %struct.AVFrame*, %struct.AVFrame*, i64, i64, i64, i64, i64, i32, i64, i64, i64, i64, i64, double, i32, %struct.AVDictionary*, %struct.AVRational, i32, i32, i32, i32, %struct.anon.2, %struct.sub2video, i32, %struct.InputFilter**, i32, i32, i32, i32, i8*, i32, i8*, void (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32, i32, %struct.AVBufferRef*, i64, i64, i64, i64, i64*, i32, i32 }
%struct.anon.2 = type { i32, i32, %struct.AVSubtitle }
%struct.sub2video = type { i64, i64, %struct.AVFifoBuffer*, %struct.AVFrame*, i32, i32 }
%struct.AVFifoBuffer = type { i8*, i8*, i8*, i8*, i32, i32 }
%struct.InputFilter = type { %struct.AVFilterContext*, %struct.InputStream*, %struct.FilterGraph*, i8*, i32, %struct.AVFifoBuffer*, i32, i32, i32, %struct.AVRational, i32, i32, i64, %struct.AVBufferRef*, i32 }
%struct.AVFilterContext = type { %struct.AVClass*, %struct.AVFilter*, i8*, %struct.AVFilterPad*, %struct.AVFilterLink**, i32, %struct.AVFilterPad*, %struct.AVFilterLink**, i32, i8*, %struct.AVFilterGraph*, i32, %struct.AVFilterInternal*, %struct.AVFilterCommand*, i8*, i8*, double*, i32, %struct.AVBufferRef*, i32, i32, i32 }
%struct.AVFilter = type { i8*, i8*, %struct.AVFilterPad*, %struct.AVFilterPad*, %struct.AVClass*, i32, i32 (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)*, void (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*)*, i32, i32, %struct.AVFilter*, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)*, i32 (%struct.AVFilterContext*, i8*)*, i32 (%struct.AVFilterContext*)* }
%struct.AVFilterPad = type opaque
%struct.AVFilterLink = type { %struct.AVFilterContext*, %struct.AVFilterPad*, %struct.AVFilterContext*, %struct.AVFilterPad*, i32, i32, i32, %struct.AVRational, i64, i32, i32, %struct.AVRational, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts*, i32, i32, %struct.AVFilterGraph*, i64, i64, i32, %struct.AVRational, %struct.AVFrame*, i32, i32, i32, i32, i32, i64, i64, i8*, i32, %struct.AVBufferRef*, [61440 x i8] }
%struct.AVFilterFormats = type opaque
%struct.AVFilterChannelLayouts = type opaque
%struct.AVFilterGraph = type { %struct.AVClass*, %struct.AVFilterContext**, i32, i8*, i8*, i32, i32, %struct.AVFilterGraphInternal*, i8*, i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i8*, %struct.AVFilterLink**, i32, i32 }
%struct.AVFilterGraphInternal = type opaque
%struct.AVFilterInternal = type opaque
%struct.AVFilterCommand = type opaque
%struct.FilterGraph = type { i32, i8*, %struct.AVFilterGraph*, i32, %struct.InputFilter**, i32, %struct.OutputFilter**, i32 }
%struct.OutputFilter = type { %struct.AVFilterContext*, %struct.OutputStream*, %struct.FilterGraph*, i8*, %struct.AVFilterInOut*, i32, i32, i32, %struct.AVRational, i32, i32, i64, i32*, i64*, i32* }
%struct.OutputStream = type { i32, i32, i32, %struct.AVStream*, i32, i32, %struct.InputStream*, i64, i64, i64, %struct.AVRational, %struct.AVRational, i32, %struct.AVBSFContext**, %struct.AVCodecContext*, %struct.AVCodecParameters*, %struct.AVCodec*, i64, %struct.AVFrame*, %struct.AVFrame*, i32, [3 x i32], i8*, %struct.AVRational, i32, i32, i32, i32, double, %struct.AVRational, i64, i64*, i32, i32, i8*, %struct.AVExpr*, [5 x double], i32*, i32, i8*, %struct._IO_FILE*, %struct.OutputFilter*, i8*, i8*, i8*, %struct.AVDictionary*, %struct.AVDictionary*, %struct.AVDictionary*, %struct.AVDictionary*, i8*, i32, i32, i32, i32, i32, i8*, i32, i32, i8*, i32, i64, i64, i64, i64, i32, i32, %struct.AVFifoBuffer*, i32, [4 x i64] }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVExpr = type opaque
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.AVFilterInOut = type { i8*, %struct.AVFilterContext*, i32, %struct.AVFilterInOut* }
%struct.OutputFile = type { %struct.AVFormatContext*, %struct.AVDictionary*, i32, i64, i64, i64, i32, i32 }
%struct.OptionParseContext = type { %struct.OptionGroup, %struct.OptionGroupList*, i32, %struct.OptionGroup }
%struct.OptionGroupList = type { %struct.OptionGroupDef*, %struct.OptionGroup*, i32 }
%struct.OptionGroup = type { %struct.OptionGroupDef*, i8*, %struct.Option*, i32, %struct.AVDictionary*, %struct.AVDictionary*, %struct.AVDictionary*, %struct.AVDictionary*, %struct.AVDictionary* }
%struct.Option = type { %struct.OptionDef*, i8*, i8* }
%struct.OptionsContext = type { %struct.OptionGroup*, i64, i64, i32, i8*, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, i64, i32, i32, i32, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.StreamMap*, i32, %struct.AudioChannelMap*, i32, i32, i32, i32, i8**, i32, i32, i64, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32, %struct.SpecifierOpt*, i32 }
%struct.StreamMap = type { i32, i32, i32, i32, i32, i8* }
%struct.AudioChannelMap = type { i32, i32, i32, i32, i32 }
%struct.SpecifierOpt = type { i8*, %union.anon.1 }
%union.anon.1 = type { i8* }
%struct.AVDictionaryEntry = type { i8*, i8* }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%union.unaligned_32 = type { i32 }

@hwaccels = constant [1 x %struct.HWAccel] zeroinitializer, align 16
@audio_drift_threshold = global float 0x3FB99999A0000000, align 4
@dts_delta_threshold = global float 1.000000e+01, align 4
@dts_error_threshold = global float 1.080000e+05, align 4
@audio_volume = global i32 256, align 4
@audio_sync_method = global i32 0, align 4
@video_sync_method = global i32 -1, align 4
@frame_drop_threshold = global float 0.000000e+00, align 4
@do_deinterlace = global i32 0, align 4
@do_benchmark = global i32 0, align 4
@do_benchmark_all = global i32 0, align 4
@do_hex_dump = global i32 0, align 4
@do_pkt_dump = global i32 0, align 4
@copy_ts = global i32 0, align 4
@start_at_zero = global i32 0, align 4
@copy_tb = global i32 -1, align 4
@debug_ts = global i32 0, align 4
@exit_on_error = global i32 0, align 4
@abort_on_flags = global i32 0, align 4
@print_stats = global i32 -1, align 4
@qp_hist = global i32 0, align 4
@stdin_interaction = global i32 1, align 4
@frame_bits_per_raw_sample = global i32 0, align 4
@max_error_rate = global float 0x3FE5555560000000, align 4
@filter_nbthreads = global i32 0, align 4
@filter_complex_nbthreads = global i32 0, align 4
@vstats_version = global i32 2, align 4
@.str = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"Unknown help option '%s'.\0A\00", align 1
@.str.3 = private unnamed_addr constant [328 x i8] c"Getting help:\0A    -h      -- print basic options\0A    -h long -- print more options\0A    -h full -- print all options (including all format and codec specific options, very long)\0A    -h type=name -- print all options for the named decoder/encoder/demuxer/muxer/filter/bsf\0A    See man %s for detailed description of the options.\0A\0A\00", align 1
@program_name = external constant [0 x i8], align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"Print help / information / capabilities:\00", align 1
@.str.5 = private unnamed_addr constant [63 x i8] c"Global options (affect whole program instead of just one file:\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"Advanced global options:\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"Per-file main options:\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"Advanced per-file options:\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"Video options:\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"Advanced Video options:\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"Audio options:\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"Advanced Audio options:\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"Subtitle options:\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.15 = private unnamed_addr constant [36 x i8] c"Hyper fast Audio and Video encoder\0A\00", align 1
@.str.16 = private unnamed_addr constant [84 x i8] c"usage: %s [options] [[infile options] -i infile]... {[outfile options] outfile}...\0A\00", align 1
@groups = internal constant [2 x %struct.OptionGroupDef] [%struct.OptionGroupDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.423, i32 0, i32 0), i8* null, i32 524288 }, %struct.OptionGroupDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.424, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.425, i32 0, i32 0), i32 262144 }], align 16
@.str.17 = private unnamed_addr constant [36 x i8] c"Error splitting the argument list: \00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"Error parsing global options: \00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.20 = private unnamed_addr constant [28 x i8] c"Error opening input files: \00", align 1
@.str.21 = private unnamed_addr constant [37 x i8] c"Error initializing complex filters.\0A\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.23 = private unnamed_addr constant [29 x i8] c"Error opening output files: \00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"show license\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"show help\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"topic\00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"-help\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"show version\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"buildconf\00", align 1
@.str.36 = private unnamed_addr constant [25 x i8] c"show build configuration\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"formats\00", align 1
@.str.38 = private unnamed_addr constant [23 x i8] c"show available formats\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"muxers\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"show available muxers\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"demuxers\00", align 1
@.str.42 = private unnamed_addr constant [24 x i8] c"show available demuxers\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"devices\00", align 1
@.str.44 = private unnamed_addr constant [23 x i8] c"show available devices\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"codecs\00", align 1
@.str.46 = private unnamed_addr constant [22 x i8] c"show available codecs\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"decoders\00", align 1
@.str.48 = private unnamed_addr constant [24 x i8] c"show available decoders\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"encoders\00", align 1
@.str.50 = private unnamed_addr constant [24 x i8] c"show available encoders\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"bsfs\00", align 1
@.str.52 = private unnamed_addr constant [34 x i8] c"show available bit stream filters\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"protocols\00", align 1
@.str.54 = private unnamed_addr constant [25 x i8] c"show available protocols\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"filters\00", align 1
@.str.56 = private unnamed_addr constant [23 x i8] c"show available filters\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"pix_fmts\00", align 1
@.str.58 = private unnamed_addr constant [29 x i8] c"show available pixel formats\00", align 1
@.str.59 = private unnamed_addr constant [8 x i8] c"layouts\00", align 1
@.str.60 = private unnamed_addr constant [30 x i8] c"show standard channel layouts\00", align 1
@.str.61 = private unnamed_addr constant [12 x i8] c"sample_fmts\00", align 1
@.str.62 = private unnamed_addr constant [36 x i8] c"show available audio sample formats\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"colors\00", align 1
@.str.64 = private unnamed_addr constant [27 x i8] c"show available color names\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"loglevel\00", align 1
@.str.66 = private unnamed_addr constant [18 x i8] c"set logging level\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"report\00", align 1
@.str.69 = private unnamed_addr constant [18 x i8] c"generate a report\00", align 1
@.str.70 = private unnamed_addr constant [10 x i8] c"max_alloc\00", align 1
@.str.71 = private unnamed_addr constant [45 x i8] c"set maximum size of a single allocated block\00", align 1
@.str.72 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.73 = private unnamed_addr constant [9 x i8] c"cpuflags\00", align 1
@.str.74 = private unnamed_addr constant [25 x i8] c"force specific cpu flags\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.76 = private unnamed_addr constant [12 x i8] c"hide_banner\00", align 1
@hide_banner = external global i32, align 4
@.str.77 = private unnamed_addr constant [27 x i8] c"do not show program banner\00", align 1
@.str.78 = private unnamed_addr constant [8 x i8] c"sources\00", align 1
@.str.79 = private unnamed_addr constant [33 x i8] c"list sources of the input device\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"device\00", align 1
@.str.81 = private unnamed_addr constant [6 x i8] c"sinks\00", align 1
@.str.82 = private unnamed_addr constant [32 x i8] c"list sinks of the output device\00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.84 = private unnamed_addr constant [13 x i8] c"force format\00", align 1
@.str.85 = private unnamed_addr constant [4 x i8] c"fmt\00", align 1
@.str.86 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@file_overwrite = internal global i32 0, align 4
@.str.87 = private unnamed_addr constant [23 x i8] c"overwrite output files\00", align 1
@.str.88 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@no_file_overwrite = internal global i32 0, align 4
@.str.89 = private unnamed_addr constant [29 x i8] c"never overwrite output files\00", align 1
@.str.90 = private unnamed_addr constant [15 x i8] c"ignore_unknown\00", align 1
@ignore_unknown_streams = internal global i32 0, align 4
@.str.91 = private unnamed_addr constant [28 x i8] c"Ignore unknown stream types\00", align 1
@.str.92 = private unnamed_addr constant [13 x i8] c"copy_unknown\00", align 1
@copy_unknown_streams = internal global i32 0, align 4
@.str.93 = private unnamed_addr constant [26 x i8] c"Copy unknown stream types\00", align 1
@.str.94 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.95 = private unnamed_addr constant [11 x i8] c"codec name\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"codec\00", align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"pre\00", align 1
@.str.98 = private unnamed_addr constant [12 x i8] c"preset name\00", align 1
@.str.99 = private unnamed_addr constant [7 x i8] c"preset\00", align 1
@.str.100 = private unnamed_addr constant [4 x i8] c"map\00", align 1
@.str.101 = private unnamed_addr constant [25 x i8] c"set input stream mapping\00", align 1
@.str.102 = private unnamed_addr constant [70 x i8] c"[-]input_file_id[:stream_specifier][,sync_file_id[:stream_specifier]]\00", align 1
@.str.103 = private unnamed_addr constant [12 x i8] c"map_channel\00", align 1
@.str.104 = private unnamed_addr constant [48 x i8] c"map an audio channel from one stream to another\00", align 1
@.str.105 = private unnamed_addr constant [42 x i8] c"file.stream.channel[:syncfile.syncstream]\00", align 1
@.str.106 = private unnamed_addr constant [13 x i8] c"map_metadata\00", align 1
@.str.107 = private unnamed_addr constant [48 x i8] c"set metadata information of outfile from infile\00", align 1
@.str.108 = private unnamed_addr constant [37 x i8] c"outfile[,metadata]:infile[,metadata]\00", align 1
@.str.109 = private unnamed_addr constant [13 x i8] c"map_chapters\00", align 1
@.str.110 = private unnamed_addr constant [21 x i8] c"set chapters mapping\00", align 1
@.str.111 = private unnamed_addr constant [17 x i8] c"input_file_index\00", align 1
@.str.112 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.113 = private unnamed_addr constant [54 x i8] c"record or transcode \22duration\22 seconds of audio/video\00", align 1
@.str.114 = private unnamed_addr constant [9 x i8] c"duration\00", align 1
@.str.115 = private unnamed_addr constant [3 x i8] c"to\00", align 1
@.str.116 = private unnamed_addr constant [30 x i8] c"record or transcode stop time\00", align 1
@.str.117 = private unnamed_addr constant [10 x i8] c"time_stop\00", align 1
@.str.118 = private unnamed_addr constant [3 x i8] c"fs\00", align 1
@.str.119 = private unnamed_addr constant [33 x i8] c"set the limit file size in bytes\00", align 1
@.str.120 = private unnamed_addr constant [11 x i8] c"limit_size\00", align 1
@.str.121 = private unnamed_addr constant [3 x i8] c"ss\00", align 1
@.str.122 = private unnamed_addr constant [26 x i8] c"set the start time offset\00", align 1
@.str.123 = private unnamed_addr constant [9 x i8] c"time_off\00", align 1
@.str.124 = private unnamed_addr constant [6 x i8] c"sseof\00", align 1
@.str.125 = private unnamed_addr constant [42 x i8] c"set the start time offset relative to EOF\00", align 1
@.str.126 = private unnamed_addr constant [15 x i8] c"seek_timestamp\00", align 1
@.str.127 = private unnamed_addr constant [45 x i8] c"enable/disable seeking by timestamp with -ss\00", align 1
@.str.128 = private unnamed_addr constant [14 x i8] c"accurate_seek\00", align 1
@.str.129 = private unnamed_addr constant [41 x i8] c"enable/disable accurate seeking with -ss\00", align 1
@.str.130 = private unnamed_addr constant [10 x i8] c"itsoffset\00", align 1
@.str.131 = private unnamed_addr constant [24 x i8] c"set the input ts offset\00", align 1
@.str.132 = private unnamed_addr constant [9 x i8] c"itsscale\00", align 1
@.str.133 = private unnamed_addr constant [23 x i8] c"set the input ts scale\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"scale\00", align 1
@.str.135 = private unnamed_addr constant [10 x i8] c"timestamp\00", align 1
@.str.136 = private unnamed_addr constant [60 x i8] c"set the recording timestamp ('now' to set the current time)\00", align 1
@.str.137 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.138 = private unnamed_addr constant [9 x i8] c"metadata\00", align 1
@.str.139 = private unnamed_addr constant [13 x i8] c"add metadata\00", align 1
@.str.140 = private unnamed_addr constant [14 x i8] c"string=string\00", align 1
@.str.141 = private unnamed_addr constant [8 x i8] c"program\00", align 1
@.str.142 = private unnamed_addr constant [35 x i8] c"add program with specified streams\00", align 1
@.str.143 = private unnamed_addr constant [26 x i8] c"title=string:st=number...\00", align 1
@.str.144 = private unnamed_addr constant [8 x i8] c"dframes\00", align 1
@.str.145 = private unnamed_addr constant [40 x i8] c"set the number of data frames to output\00", align 1
@.str.146 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.147 = private unnamed_addr constant [10 x i8] c"benchmark\00", align 1
@.str.148 = private unnamed_addr constant [29 x i8] c"add timings for benchmarking\00", align 1
@.str.149 = private unnamed_addr constant [14 x i8] c"benchmark_all\00", align 1
@.str.150 = private unnamed_addr constant [26 x i8] c"add timings for each task\00", align 1
@.str.151 = private unnamed_addr constant [9 x i8] c"progress\00", align 1
@.str.152 = private unnamed_addr constant [44 x i8] c"write program-readable progress information\00", align 1
@.str.153 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.154 = private unnamed_addr constant [6 x i8] c"stdin\00", align 1
@.str.155 = private unnamed_addr constant [48 x i8] c"enable or disable interaction on standard input\00", align 1
@.str.156 = private unnamed_addr constant [10 x i8] c"timelimit\00", align 1
@.str.157 = private unnamed_addr constant [27 x i8] c"set max runtime in seconds\00", align 1
@.str.158 = private unnamed_addr constant [6 x i8] c"limit\00", align 1
@.str.159 = private unnamed_addr constant [5 x i8] c"dump\00", align 1
@.str.160 = private unnamed_addr constant [23 x i8] c"dump each input packet\00", align 1
@.str.161 = private unnamed_addr constant [4 x i8] c"hex\00", align 1
@.str.162 = private unnamed_addr constant [44 x i8] c"when dumping packets, also dump the payload\00", align 1
@.str.163 = private unnamed_addr constant [3 x i8] c"re\00", align 1
@.str.164 = private unnamed_addr constant [32 x i8] c"read input at native frame rate\00", align 1
@.str.165 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.166 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.167 = private unnamed_addr constant [114 x i8] c"specify target file type (\22vcd\22, \22svcd\22, \22dvd\22, \22dv\22 or \22dv50\22 with optional prefixes \22pal-\22, \22ntsc-\22 or \22film-\22)\00", align 1
@.str.168 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.169 = private unnamed_addr constant [6 x i8] c"vsync\00", align 1
@.str.170 = private unnamed_addr constant [18 x i8] c"video sync method\00", align 1
@.str.171 = private unnamed_addr constant [21 x i8] c"frame_drop_threshold\00", align 1
@.str.172 = private unnamed_addr constant [21 x i8] c"frame drop threshold\00", align 1
@.str.173 = private unnamed_addr constant [6 x i8] c"async\00", align 1
@.str.174 = private unnamed_addr constant [18 x i8] c"audio sync method\00", align 1
@.str.175 = private unnamed_addr constant [17 x i8] c"adrift_threshold\00", align 1
@.str.176 = private unnamed_addr constant [22 x i8] c"audio drift threshold\00", align 1
@.str.177 = private unnamed_addr constant [10 x i8] c"threshold\00", align 1
@.str.178 = private unnamed_addr constant [7 x i8] c"copyts\00", align 1
@.str.179 = private unnamed_addr constant [16 x i8] c"copy timestamps\00", align 1
@.str.180 = private unnamed_addr constant [14 x i8] c"start_at_zero\00", align 1
@.str.181 = private unnamed_addr constant [55 x i8] c"shift input timestamps to start at 0 when using copyts\00", align 1
@.str.182 = private unnamed_addr constant [7 x i8] c"copytb\00", align 1
@.str.183 = private unnamed_addr constant [48 x i8] c"copy input stream time base when stream copying\00", align 1
@.str.184 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.185 = private unnamed_addr constant [9 x i8] c"shortest\00", align 1
@.str.186 = private unnamed_addr constant [38 x i8] c"finish encoding within shortest input\00", align 1
@.str.187 = private unnamed_addr constant [9 x i8] c"bitexact\00", align 1
@.str.188 = private unnamed_addr constant [14 x i8] c"bitexact mode\00", align 1
@.str.189 = private unnamed_addr constant [5 x i8] c"apad\00", align 1
@.str.190 = private unnamed_addr constant [10 x i8] c"audio pad\00", align 1
@.str.191 = private unnamed_addr constant [20 x i8] c"dts_delta_threshold\00", align 1
@.str.192 = private unnamed_addr constant [40 x i8] c"timestamp discontinuity delta threshold\00", align 1
@.str.193 = private unnamed_addr constant [20 x i8] c"dts_error_threshold\00", align 1
@.str.194 = private unnamed_addr constant [32 x i8] c"timestamp error delta threshold\00", align 1
@.str.195 = private unnamed_addr constant [7 x i8] c"xerror\00", align 1
@.str.196 = private unnamed_addr constant [14 x i8] c"exit on error\00", align 1
@.str.197 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.198 = private unnamed_addr constant [9 x i8] c"abort_on\00", align 1
@.str.199 = private unnamed_addr constant [39 x i8] c"abort on the specified condition flags\00", align 1
@.str.200 = private unnamed_addr constant [9 x i8] c"copyinkf\00", align 1
@.str.201 = private unnamed_addr constant [27 x i8] c"copy initial non-keyframes\00", align 1
@.str.202 = private unnamed_addr constant [12 x i8] c"copypriorss\00", align 1
@.str.203 = private unnamed_addr constant [41 x i8] c"copy or discard frames before start time\00", align 1
@.str.204 = private unnamed_addr constant [7 x i8] c"frames\00", align 1
@.str.205 = private unnamed_addr constant [35 x i8] c"set the number of frames to output\00", align 1
@.str.206 = private unnamed_addr constant [4 x i8] c"tag\00", align 1
@.str.207 = private unnamed_addr constant [23 x i8] c"force codec tag/fourcc\00", align 1
@.str.208 = private unnamed_addr constant [11 x i8] c"fourcc/tag\00", align 1
@.str.209 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str.210 = private unnamed_addr constant [30 x i8] c"use fixed quality scale (VBR)\00", align 1
@.str.211 = private unnamed_addr constant [7 x i8] c"qscale\00", align 1
@.str.212 = private unnamed_addr constant [8 x i8] c"profile\00", align 1
@.str.213 = private unnamed_addr constant [12 x i8] c"set profile\00", align 1
@.str.214 = private unnamed_addr constant [7 x i8] c"filter\00", align 1
@.str.215 = private unnamed_addr constant [23 x i8] c"set stream filtergraph\00", align 1
@.str.216 = private unnamed_addr constant [13 x i8] c"filter_graph\00", align 1
@.str.217 = private unnamed_addr constant [15 x i8] c"filter_threads\00", align 1
@.str.218 = private unnamed_addr constant [37 x i8] c"number of non-complex filter threads\00", align 1
@.str.219 = private unnamed_addr constant [14 x i8] c"filter_script\00", align 1
@.str.220 = private unnamed_addr constant [48 x i8] c"read stream filtergraph description from a file\00", align 1
@.str.221 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@.str.222 = private unnamed_addr constant [14 x i8] c"reinit_filter\00", align 1
@.str.223 = private unnamed_addr constant [46 x i8] c"reinit filtergraph on input parameter changes\00", align 1
@.str.224 = private unnamed_addr constant [15 x i8] c"filter_complex\00", align 1
@.str.225 = private unnamed_addr constant [29 x i8] c"create a complex filtergraph\00", align 1
@.str.226 = private unnamed_addr constant [18 x i8] c"graph_description\00", align 1
@.str.227 = private unnamed_addr constant [23 x i8] c"filter_complex_threads\00", align 1
@.str.228 = private unnamed_addr constant [38 x i8] c"number of threads for -filter_complex\00", align 1
@.str.229 = private unnamed_addr constant [6 x i8] c"lavfi\00", align 1
@.str.230 = private unnamed_addr constant [22 x i8] c"filter_complex_script\00", align 1
@.str.231 = private unnamed_addr constant [49 x i8] c"read complex filtergraph description from a file\00", align 1
@.str.232 = private unnamed_addr constant [6 x i8] c"stats\00", align 1
@.str.233 = private unnamed_addr constant [38 x i8] c"print progress report during encoding\00", align 1
@.str.234 = private unnamed_addr constant [7 x i8] c"attach\00", align 1
@.str.235 = private unnamed_addr constant [37 x i8] c"add an attachment to the output file\00", align 1
@.str.236 = private unnamed_addr constant [16 x i8] c"dump_attachment\00", align 1
@.str.237 = private unnamed_addr constant [34 x i8] c"extract an attachment into a file\00", align 1
@.str.238 = private unnamed_addr constant [12 x i8] c"stream_loop\00", align 1
@.str.239 = private unnamed_addr constant [49 x i8] c"set number of times input stream shall be looped\00", align 1
@.str.240 = private unnamed_addr constant [11 x i8] c"loop count\00", align 1
@.str.241 = private unnamed_addr constant [9 x i8] c"debug_ts\00", align 1
@.str.242 = private unnamed_addr constant [31 x i8] c"print timestamp debugging info\00", align 1
@.str.243 = private unnamed_addr constant [15 x i8] c"max_error_rate\00", align 1
@.str.244 = private unnamed_addr constant [107 x i8] c"ratio of errors (0.0: no errors, 1.0: 100% errors) above which ffmpeg returns an error instead of success.\00", align 1
@.str.245 = private unnamed_addr constant [19 x i8] c"maximum error rate\00", align 1
@.str.246 = private unnamed_addr constant [8 x i8] c"discard\00", align 1
@.str.247 = private unnamed_addr constant [12 x i8] c"disposition\00", align 1
@.str.248 = private unnamed_addr constant [18 x i8] c"thread_queue_size\00", align 1
@.str.249 = private unnamed_addr constant [58 x i8] c"set the maximum number of queued packets from the demuxer\00", align 1
@.str.250 = private unnamed_addr constant [17 x i8] c"find_stream_info\00", align 1
@find_stream_info = internal global i32 1, align 4
@.str.251 = private unnamed_addr constant [72 x i8] c"read and decode the streams to fill missing information with heuristics\00", align 1
@.str.252 = private unnamed_addr constant [8 x i8] c"vframes\00", align 1
@.str.253 = private unnamed_addr constant [41 x i8] c"set the number of video frames to output\00", align 1
@.str.254 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.255 = private unnamed_addr constant [52 x i8] c"set frame rate (Hz value, fraction or abbreviation)\00", align 1
@.str.256 = private unnamed_addr constant [5 x i8] c"rate\00", align 1
@.str.257 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.258 = private unnamed_addr constant [37 x i8] c"set frame size (WxH or abbreviation)\00", align 1
@.str.259 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.260 = private unnamed_addr constant [7 x i8] c"aspect\00", align 1
@.str.261 = private unnamed_addr constant [47 x i8] c"set aspect ratio (4:3, 16:9 or 1.3333, 1.7777)\00", align 1
@.str.262 = private unnamed_addr constant [8 x i8] c"pix_fmt\00", align 1
@.str.263 = private unnamed_addr constant [17 x i8] c"set pixel format\00", align 1
@.str.264 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.265 = private unnamed_addr constant [20 x i8] c"bits_per_raw_sample\00", align 1
@.str.266 = private unnamed_addr constant [38 x i8] c"set the number of bits per raw sample\00", align 1
@.str.267 = private unnamed_addr constant [6 x i8] c"intra\00", align 1
@intra_only = internal global i32 0, align 4
@.str.268 = private unnamed_addr constant [20 x i8] c"deprecated use -g 1\00", align 1
@.str.269 = private unnamed_addr constant [3 x i8] c"vn\00", align 1
@.str.270 = private unnamed_addr constant [14 x i8] c"disable video\00", align 1
@.str.271 = private unnamed_addr constant [12 x i8] c"rc_override\00", align 1
@.str.272 = private unnamed_addr constant [45 x i8] c"rate control override for specific intervals\00", align 1
@.str.273 = private unnamed_addr constant [9 x i8] c"override\00", align 1
@.str.274 = private unnamed_addr constant [7 x i8] c"vcodec\00", align 1
@.str.275 = private unnamed_addr constant [42 x i8] c"force video codec ('copy' to copy stream)\00", align 1
@.str.276 = private unnamed_addr constant [6 x i8] c"sameq\00", align 1
@.str.277 = private unnamed_addr constant [8 x i8] c"Removed\00", align 1
@.str.278 = private unnamed_addr constant [11 x i8] c"same_quant\00", align 1
@.str.279 = private unnamed_addr constant [9 x i8] c"timecode\00", align 1
@.str.280 = private unnamed_addr constant [28 x i8] c"set initial TimeCode value.\00", align 1
@.str.281 = private unnamed_addr constant [16 x i8] c"hh:mm:ss[:;.]ff\00", align 1
@.str.282 = private unnamed_addr constant [5 x i8] c"pass\00", align 1
@.str.283 = private unnamed_addr constant [32 x i8] c"select the pass number (1 to 3)\00", align 1
@.str.284 = private unnamed_addr constant [12 x i8] c"passlogfile\00", align 1
@.str.285 = private unnamed_addr constant [37 x i8] c"select two pass log file name prefix\00", align 1
@.str.286 = private unnamed_addr constant [7 x i8] c"prefix\00", align 1
@.str.287 = private unnamed_addr constant [12 x i8] c"deinterlace\00", align 1
@.str.288 = private unnamed_addr constant [56 x i8] c"this option is deprecated, use the yadif filter instead\00", align 1
@.str.289 = private unnamed_addr constant [5 x i8] c"psnr\00", align 1
@do_psnr = internal global i32 0, align 4
@.str.290 = private unnamed_addr constant [36 x i8] c"calculate PSNR of compressed frames\00", align 1
@.str.291 = private unnamed_addr constant [7 x i8] c"vstats\00", align 1
@.str.292 = private unnamed_addr constant [37 x i8] c"dump video coding statistics to file\00", align 1
@.str.293 = private unnamed_addr constant [12 x i8] c"vstats_file\00", align 1
@.str.294 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.295 = private unnamed_addr constant [15 x i8] c"vstats_version\00", align 1
@.str.296 = private unnamed_addr constant [37 x i8] c"Version of the vstats format to use.\00", align 1
@.str.297 = private unnamed_addr constant [3 x i8] c"vf\00", align 1
@.str.298 = private unnamed_addr constant [18 x i8] c"set video filters\00", align 1
@.str.299 = private unnamed_addr constant [13 x i8] c"intra_matrix\00", align 1
@.str.300 = private unnamed_addr constant [28 x i8] c"specify intra matrix coeffs\00", align 1
@.str.301 = private unnamed_addr constant [7 x i8] c"matrix\00", align 1
@.str.302 = private unnamed_addr constant [13 x i8] c"inter_matrix\00", align 1
@.str.303 = private unnamed_addr constant [28 x i8] c"specify inter matrix coeffs\00", align 1
@.str.304 = private unnamed_addr constant [20 x i8] c"chroma_intra_matrix\00", align 1
@.str.305 = private unnamed_addr constant [4 x i8] c"top\00", align 1
@.str.306 = private unnamed_addr constant [35 x i8] c"top=1/bottom=0/auto=-1 field first\00", align 1
@.str.307 = private unnamed_addr constant [5 x i8] c"vtag\00", align 1
@.str.308 = private unnamed_addr constant [23 x i8] c"force video tag/fourcc\00", align 1
@.str.309 = private unnamed_addr constant [7 x i8] c"qphist\00", align 1
@.str.310 = private unnamed_addr constant [18 x i8] c"show QP histogram\00", align 1
@.str.311 = private unnamed_addr constant [10 x i8] c"force_fps\00", align 1
@.str.312 = private unnamed_addr constant [77 x i8] c"force the selected framerate, disable the best supported framerate selection\00", align 1
@.str.313 = private unnamed_addr constant [9 x i8] c"streamid\00", align 1
@.str.314 = private unnamed_addr constant [37 x i8] c"set the value of an outfile streamid\00", align 1
@.str.315 = private unnamed_addr constant [18 x i8] c"streamIndex:value\00", align 1
@.str.316 = private unnamed_addr constant [17 x i8] c"force_key_frames\00", align 1
@.str.317 = private unnamed_addr constant [41 x i8] c"force key frames at specified timestamps\00", align 1
@.str.318 = private unnamed_addr constant [11 x i8] c"timestamps\00", align 1
@.str.319 = private unnamed_addr constant [3 x i8] c"ab\00", align 1
@.str.320 = private unnamed_addr constant [32 x i8] c"audio bitrate (please use -b:a)\00", align 1
@.str.321 = private unnamed_addr constant [8 x i8] c"bitrate\00", align 1
@.str.322 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.323 = private unnamed_addr constant [32 x i8] c"video bitrate (please use -b:v)\00", align 1
@.str.324 = private unnamed_addr constant [8 x i8] c"hwaccel\00", align 1
@.str.325 = private unnamed_addr constant [28 x i8] c"use HW accelerated decoding\00", align 1
@.str.326 = private unnamed_addr constant [13 x i8] c"hwaccel name\00", align 1
@.str.327 = private unnamed_addr constant [15 x i8] c"hwaccel_device\00", align 1
@.str.328 = private unnamed_addr constant [36 x i8] c"select a device for HW acceleration\00", align 1
@.str.329 = private unnamed_addr constant [11 x i8] c"devicename\00", align 1
@.str.330 = private unnamed_addr constant [22 x i8] c"hwaccel_output_format\00", align 1
@.str.331 = private unnamed_addr constant [55 x i8] c"select output format used with HW accelerated decoding\00", align 1
@.str.332 = private unnamed_addr constant [9 x i8] c"hwaccels\00", align 1
@.str.333 = private unnamed_addr constant [39 x i8] c"show available HW acceleration methods\00", align 1
@.str.334 = private unnamed_addr constant [11 x i8] c"autorotate\00", align 1
@.str.335 = private unnamed_addr constant [44 x i8] c"automatically insert correct rotate filters\00", align 1
@.str.336 = private unnamed_addr constant [8 x i8] c"aframes\00", align 1
@.str.337 = private unnamed_addr constant [41 x i8] c"set the number of audio frames to output\00", align 1
@.str.338 = private unnamed_addr constant [3 x i8] c"aq\00", align 1
@.str.339 = private unnamed_addr constant [35 x i8] c"set audio quality (codec-specific)\00", align 1
@.str.340 = private unnamed_addr constant [8 x i8] c"quality\00", align 1
@.str.341 = private unnamed_addr constant [3 x i8] c"ar\00", align 1
@.str.342 = private unnamed_addr constant [32 x i8] c"set audio sampling rate (in Hz)\00", align 1
@.str.343 = private unnamed_addr constant [3 x i8] c"ac\00", align 1
@.str.344 = private unnamed_addr constant [29 x i8] c"set number of audio channels\00", align 1
@.str.345 = private unnamed_addr constant [9 x i8] c"channels\00", align 1
@.str.346 = private unnamed_addr constant [3 x i8] c"an\00", align 1
@.str.347 = private unnamed_addr constant [14 x i8] c"disable audio\00", align 1
@.str.348 = private unnamed_addr constant [7 x i8] c"acodec\00", align 1
@.str.349 = private unnamed_addr constant [42 x i8] c"force audio codec ('copy' to copy stream)\00", align 1
@.str.350 = private unnamed_addr constant [5 x i8] c"atag\00", align 1
@.str.351 = private unnamed_addr constant [23 x i8] c"force audio tag/fourcc\00", align 1
@.str.352 = private unnamed_addr constant [4 x i8] c"vol\00", align 1
@.str.353 = private unnamed_addr constant [33 x i8] c"change audio volume (256=normal)\00", align 1
@.str.354 = private unnamed_addr constant [7 x i8] c"volume\00", align 1
@.str.355 = private unnamed_addr constant [11 x i8] c"sample_fmt\00", align 1
@.str.356 = private unnamed_addr constant [18 x i8] c"set sample format\00", align 1
@.str.357 = private unnamed_addr constant [15 x i8] c"channel_layout\00", align 1
@.str.358 = private unnamed_addr constant [19 x i8] c"set channel layout\00", align 1
@.str.359 = private unnamed_addr constant [7 x i8] c"layout\00", align 1
@.str.360 = private unnamed_addr constant [3 x i8] c"af\00", align 1
@.str.361 = private unnamed_addr constant [18 x i8] c"set audio filters\00", align 1
@.str.362 = private unnamed_addr constant [17 x i8] c"guess_layout_max\00", align 1
@.str.363 = private unnamed_addr constant [70 x i8] c"set the maximum number of channels to try to guess the channel layout\00", align 1
@.str.364 = private unnamed_addr constant [3 x i8] c"sn\00", align 1
@.str.365 = private unnamed_addr constant [17 x i8] c"disable subtitle\00", align 1
@.str.366 = private unnamed_addr constant [7 x i8] c"scodec\00", align 1
@.str.367 = private unnamed_addr constant [45 x i8] c"force subtitle codec ('copy' to copy stream)\00", align 1
@.str.368 = private unnamed_addr constant [5 x i8] c"stag\00", align 1
@.str.369 = private unnamed_addr constant [26 x i8] c"force subtitle tag/fourcc\00", align 1
@.str.370 = private unnamed_addr constant [17 x i8] c"fix_sub_duration\00", align 1
@.str.371 = private unnamed_addr constant [23 x i8] c"fix subtitles duration\00", align 1
@.str.372 = private unnamed_addr constant [12 x i8] c"canvas_size\00", align 1
@.str.373 = private unnamed_addr constant [38 x i8] c"set canvas size (WxH or abbreviation)\00", align 1
@.str.374 = private unnamed_addr constant [3 x i8] c"vc\00", align 1
@.str.375 = private unnamed_addr constant [25 x i8] c"deprecated, use -channel\00", align 1
@.str.376 = private unnamed_addr constant [8 x i8] c"channel\00", align 1
@.str.377 = private unnamed_addr constant [6 x i8] c"tvstd\00", align 1
@.str.378 = private unnamed_addr constant [26 x i8] c"deprecated, use -standard\00", align 1
@.str.379 = private unnamed_addr constant [9 x i8] c"standard\00", align 1
@.str.380 = private unnamed_addr constant [6 x i8] c"isync\00", align 1
@input_sync = internal global i32 0, align 4
@.str.381 = private unnamed_addr constant [43 x i8] c"this option is deprecated and does nothing\00", align 1
@.str.382 = private unnamed_addr constant [9 x i8] c"muxdelay\00", align 1
@.str.383 = private unnamed_addr constant [35 x i8] c"set the maximum demux-decode delay\00", align 1
@.str.384 = private unnamed_addr constant [8 x i8] c"seconds\00", align 1
@.str.385 = private unnamed_addr constant [11 x i8] c"muxpreload\00", align 1
@.str.386 = private unnamed_addr constant [35 x i8] c"set the initial demux-decode delay\00", align 1
@.str.387 = private unnamed_addr constant [9 x i8] c"sdp_file\00", align 1
@.str.388 = private unnamed_addr constant [49 x i8] c"specify a file in which to print sdp information\00", align 1
@.str.389 = private unnamed_addr constant [10 x i8] c"time_base\00", align 1
@.str.390 = private unnamed_addr constant [87 x i8] c"set the desired time base hint for output stream (1:24, 1:48000 or 0.04166, 2.0833e-5)\00", align 1
@.str.391 = private unnamed_addr constant [6 x i8] c"ratio\00", align 1
@.str.392 = private unnamed_addr constant [14 x i8] c"enc_time_base\00", align 1
@.str.393 = private unnamed_addr constant [192 x i8] c"set the desired time base for the encoder (1:24, 1:48000 or 0.04166, 2.0833e-5). two special values are defined - 0 = use frame rate (video) or sample rate (audio),-1 = match source time base\00", align 1
@.str.394 = private unnamed_addr constant [4 x i8] c"bsf\00", align 1
@.str.395 = private unnamed_addr constant [44 x i8] c"A comma-separated list of bitstream filters\00", align 1
@.str.396 = private unnamed_addr constant [18 x i8] c"bitstream_filters\00", align 1
@.str.397 = private unnamed_addr constant [5 x i8] c"absf\00", align 1
@.str.398 = private unnamed_addr constant [11 x i8] c"deprecated\00", align 1
@.str.399 = private unnamed_addr constant [24 x i8] c"audio bitstream_filters\00", align 1
@.str.400 = private unnamed_addr constant [5 x i8] c"vbsf\00", align 1
@.str.401 = private unnamed_addr constant [24 x i8] c"video bitstream_filters\00", align 1
@.str.402 = private unnamed_addr constant [5 x i8] c"apre\00", align 1
@.str.403 = private unnamed_addr constant [46 x i8] c"set the audio options to the indicated preset\00", align 1
@.str.404 = private unnamed_addr constant [5 x i8] c"vpre\00", align 1
@.str.405 = private unnamed_addr constant [46 x i8] c"set the video options to the indicated preset\00", align 1
@.str.406 = private unnamed_addr constant [5 x i8] c"spre\00", align 1
@.str.407 = private unnamed_addr constant [49 x i8] c"set the subtitle options to the indicated preset\00", align 1
@.str.408 = private unnamed_addr constant [5 x i8] c"fpre\00", align 1
@.str.409 = private unnamed_addr constant [39 x i8] c"set options from indicated preset file\00", align 1
@.str.410 = private unnamed_addr constant [22 x i8] c"max_muxing_queue_size\00", align 1
@.str.411 = private unnamed_addr constant [91 x i8] c"maximum number of packets that can be buffered while waiting for all streams to initialize\00", align 1
@.str.412 = private unnamed_addr constant [8 x i8] c"packets\00", align 1
@.str.413 = private unnamed_addr constant [7 x i8] c"dcodec\00", align 1
@.str.414 = private unnamed_addr constant [41 x i8] c"force data codec ('copy' to copy stream)\00", align 1
@.str.415 = private unnamed_addr constant [3 x i8] c"dn\00", align 1
@.str.416 = private unnamed_addr constant [13 x i8] c"disable data\00", align 1
@.str.417 = private unnamed_addr constant [15 x i8] c"init_hw_device\00", align 1
@.str.418 = private unnamed_addr constant [27 x i8] c"initialise hardware device\00", align 1
@.str.419 = private unnamed_addr constant [5 x i8] c"args\00", align 1
@.str.420 = private unnamed_addr constant [17 x i8] c"filter_hw_device\00", align 1
@.str.421 = private unnamed_addr constant [40 x i8] c"set hardware device used when filtering\00", align 1
@options = constant <{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }> <{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_license }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_help }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_help }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_help }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_help }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_version }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_buildconf }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_formats }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.38, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_muxers }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_demuxers }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.42, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_devices }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.44, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_codecs }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_decoders }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_encoders }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_bsfs }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.52, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_protocols }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.54, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_filters }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_pix_fmts }, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.58, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_layouts }, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.60, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_sample_fmts }, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.62, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_colors }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.64, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0), i32 1, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_loglevel }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i32 0, i32 0), i32 1, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_loglevel }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), i32 0, %union.anon.0 { i8* bitcast (i32 (i8*)* @opt_report to i8*) }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.69, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.70, i32 0, i32 0), i32 1, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_max_alloc }, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.73, i32 0, i32 0), i32 5, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_cpuflags }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.76, i32 0, i32 0), i32 6, %union.anon.0 { i8* bitcast (i32* @hide_banner to i8*) }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.76, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i32 0, i32 0), i32 2049, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_sources }, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i32 2049, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_sinks }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), i32 802825, { i64 } { i64 32 }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86, i32 0, i32 0), i32 2, %union.anon.0 { i8* bitcast (i32* @file_overwrite to i8*) }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.87, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.88, i32 0, i32 0), i32 2, %union.anon.0 { i8* bitcast (i32* @no_file_overwrite to i8*) }, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.89, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.90, i32 0, i32 0), i32 2, %union.anon.0 { i8* bitcast (i32* @ignore_unknown_streams to i8*) }, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.91, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i32 0, i32 0), i32 6, %union.anon.0 { i8* bitcast (i32* @copy_unknown_streams to i8*) }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.93, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.94, i32 0, i32 0), i32 819209, { i64 } { i64 40 }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0), i32 819209, { i64 } { i64 40 }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i32 0, i32 0), i32 557065, { i64 } { i64 624 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.100, i32 0, i32 0), i32 532485, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_map }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.102, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.103, i32 0, i32 0), i32 532485, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_map_channel }, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.105, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.106, i32 0, i32 0), i32 557065, { i64 } { i64 608 }, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.108, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.109, i32 0, i32 0), i32 540805, { i64 } { i64 308 }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.111, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112, i32 0, i32 0), i32 868353, { i64 } { i64 312 }, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.114, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.115, i32 0, i32 0), i32 868353, { i64 } { i64 320 }, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.117, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.118, i32 0, i32 0), i32 541697, { i64 } { i64 328 }, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.120, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.121, i32 0, i32 0), i32 868353, { i64 } { i64 8 }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.123, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.124, i32 0, i32 0), i32 344065, { i64 } { i64 16 }, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.123, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.126, i32 0, i32 0), i32 278657, { i64 } { i64 24 }, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.127, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128, i32 0, i32 0), i32 278534, { i64 } { i64 152 }, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.129, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.130, i32 0, i32 0), i32 344069, { i64 } { i64 136 }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.123, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.132, i32 0, i32 0), i32 425989, { i64 } { i64 160 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.135, i32 0, i32 0), i32 532481, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_recording_timestamp }, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.137, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.138, i32 0, i32 0), i32 557065, { i64 } { i64 384 }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.140, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.141, i32 0, i32 0), i32 557065, { i64 } { i64 864 }, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.143, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.144, i32 0, i32 0), i32 532485, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_data_frames }, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.146, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.147, i32 0, i32 0), i32 6, %union.anon.0 { i8* bitcast (i32* @do_benchmark to i8*) }, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.148, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.149, i32 0, i32 0), i32 6, %union.anon.0 { i8* bitcast (i32* @do_benchmark_all to i8*) }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.150, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.151, i32 0, i32 0), i32 5, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_progress }, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.153, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.154, i32 0, i32 0), i32 6, %union.anon.0 { i8* bitcast (i32* @stdin_interaction to i8*) }, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.155, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.156, i32 0, i32 0), i32 5, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_timelimit }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.158, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.159, i32 0, i32 0), i32 6, %union.anon.0 { i8* bitcast (i32* @do_pkt_dump to i8*) }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.160, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.161, i32 0, i32 0), i32 6, %union.anon.0 { i8* bitcast (i32* @do_hex_dump to i8*) }, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.162, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.163, i32 0, i32 0), i32 278534, { i64 } { i64 148 }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.166, i32 0, i32 0), i32 532481, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_target }, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.169, i32 0, i32 0), i32 5, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_vsync }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.171, i32 0, i32 0), i32 261, %union.anon.0 { i8* bitcast (float* @frame_drop_threshold to i8*) }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), i32 133, %union.anon.0 { i8* bitcast (i32* @audio_sync_method to i8*) }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.175, i32 0, i32 0), i32 261, %union.anon.0 { i8* bitcast (float* @audio_drift_threshold to i8*) }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.177, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.178, i32 0, i32 0), i32 6, %union.anon.0 { i8* bitcast (i32* @copy_ts to i8*) }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.179, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.180, i32 0, i32 0), i32 6, %union.anon.0 { i8* bitcast (i32* @start_at_zero to i8*) }, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.181, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.182, i32 0, i32 0), i32 133, %union.anon.0 { i8* bitcast (i32* @copy_tb to i8*) }, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.184, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.185, i32 0, i32 0), i32 540678, { i64 } { i64 344 }, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.186, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.187, i32 0, i32 0), i32 802822, { i64 } { i64 348 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.188, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.189, i32 0, i32 0), i32 557065, { i64 } { i64 816 }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.191, i32 0, i32 0), i32 261, %union.anon.0 { i8* bitcast (float* @dts_delta_threshold to i8*) }, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.177, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.193, i32 0, i32 0), i32 261, %union.anon.0 { i8* bitcast (float* @dts_error_threshold to i8*) }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.177, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.195, i32 0, i32 0), i32 6, %union.anon.0 { i8* bitcast (i32* @exit_on_error to i8*) }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.197, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.198, i32 0, i32 0), i32 5, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_abort_on }, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.200, i32 0, i32 0), i32 557062, { i64 } { i64 640 }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.201, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.202, i32 0, i32 0), i32 557189, { i64 } { i64 656 }, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.203, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.204, i32 0, i32 0), i32 558081, { i64 } { i64 400 }, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.146, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.206, i32 0, i32 0), i32 819213, { i64 } { i64 432 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.208, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.209, i32 0, i32 0), i32 688133, { i64 } { i64 464 }, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.209, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.211, i32 0, i32 0), i32 532485, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_qscale }, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.209, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.212, i32 0, i32 0), i32 532485, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_profile }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.212, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.214, i32 0, i32 0), i32 557065, { i64 } { i64 672 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.216, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.217, i32 0, i32 0), i32 129, %union.anon.0 { i8* bitcast (i32* @filter_nbthreads to i8*) }, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.218, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.219, i32 0, i32 0), i32 557065, { i64 } { i64 688 }, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.221, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.222, i32 0, i32 0), i32 295041, { i64 } { i64 704 }, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.223, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.224, i32 0, i32 0), i32 5, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_filter_complex }, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.226, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.227, i32 0, i32 0), i32 129, %union.anon.0 { i8* bitcast (i32* @filter_complex_nbthreads to i8*) }, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.228, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.229, i32 0, i32 0), i32 5, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_filter_complex }, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.226, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.230, i32 0, i32 0), i32 5, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_filter_complex_script }, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.231, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.221, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.232, i32 0, i32 0), i32 2, %union.anon.0 { i8* bitcast (i32* @print_stats to i8*) }, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.233, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.234, i32 0, i32 0), i32 532485, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_attach }, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.221, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.236, i32 0, i32 0), i32 294925, { i64 } { i64 176 }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.237, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.221, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.238, i32 0, i32 0), i32 278661, { i64 } { i64 144 }, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.240, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.241, i32 0, i32 0), i32 6, %union.anon.0 { i8* bitcast (i32* @debug_ts to i8*) }, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.242, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.243, i32 0, i32 0), i32 257, %union.anon.0 { i8* bitcast (float* @max_error_rate to i8*) }, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.244, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.245, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.246, i32 0, i32 0), i32 294921, { i64 } { i64 832 }, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.246, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.247, i32 0, i32 0), i32 557065, { i64 } { i64 848 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.247, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.248, i32 0, i32 0), i32 278661, { i64 } { i64 156 }, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.249, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.250, i32 0, i32 0), i32 270342, %union.anon.0 { i8* bitcast (i32* @find_stream_info to i8*) }, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.251, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.252, i32 0, i32 0), i32 532497, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_video_frames }, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.253, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.146, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.254, i32 0, i32 0), i32 819225, { i64 } { i64 88 }, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.255, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.256, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.257, i32 0, i32 0), i32 819737, { i64 } { i64 104 }, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.258, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.259, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.260, i32 0, i32 0), i32 557081, { i64 } { i64 512 }, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.261, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.260, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.262, i32 0, i32 0), i32 819229, { i64 } { i64 120 }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.263, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.264, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.265, i32 0, i32 0), i32 145, %union.anon.0 { i8* bitcast (i32* @frame_bits_per_raw_sample to i8*) }, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.266, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.146, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.267, i32 0, i32 0), i32 22, %union.anon.0 { i8* bitcast (i32* @intra_only to i8*) }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.268, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.269, i32 0, i32 0), i32 802834, { i64 } { i64 352 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.270, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.271, i32 0, i32 0), i32 557085, { i64 } { i64 528 }, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.272, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.273, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.274, i32 0, i32 0), i32 794641, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_video_codec }, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.275, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.276, i32 0, i32 0), i32 20, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_sameq }, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.277, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.278, i32 0, i32 0), i32 20, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_sameq }, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.277, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.279, i32 0, i32 0), i32 532497, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_timecode }, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.280, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.281, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.282, i32 0, i32 0), i32 557201, { i64 } { i64 752 }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.283, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.88, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.284, i32 0, i32 0), i32 557085, { i64 } { i64 768 }, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.285, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.286, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.287, i32 0, i32 0), i32 22, %union.anon.0 { i8* bitcast (i32* @do_deinterlace to i8*) }, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.288, i32 0, i32 0), i8* null }, %struct.OptionDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.289, i32 0, i32 0), i32 22, %union.anon.0 { i8* bitcast (i32* @do_psnr to i8*) }, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.290, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.291, i32 0, i32 0), i32 20, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_vstats }, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.292, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.293, i32 0, i32 0), i32 21, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_vstats_file }, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.292, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.294, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.295, i32 0, i32 0), i32 149, %union.anon.0 { i8* bitcast (i32* @vstats_version to i8*) }, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.296, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.297, i32 0, i32 0), i32 532497, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_video_filters }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.216, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.299, i32 0, i32 0), i32 557085, { i64 } { i64 544 }, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.301, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.302, i32 0, i32 0), i32 557085, { i64 } { i64 560 }, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.303, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.301, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.304, i32 0, i32 0), i32 557085, { i64 } { i64 576 }, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.301, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.305, i32 0, i32 0), i32 819349, { i64 } { i64 592 }, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.306, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.307, i32 0, i32 0), i32 794645, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_old2new }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.208, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.309, i32 0, i32 0), i32 22, %union.anon.0 { i8* bitcast (i32* @qp_hist to i8*) }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.310, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.311, i32 0, i32 0), i32 557078, { i64 } { i64 496 }, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.312, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.313, i32 0, i32 0), i32 532501, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_streamid }, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.314, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.315, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.316, i32 0, i32 0), i32 557085, { i64 } { i64 480 }, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.318, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.319, i32 0, i32 0), i32 532497, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_bitrate }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.320, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.321, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.322, i32 0, i32 0), i32 532497, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_bitrate }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.323, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.321, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.324, i32 0, i32 0), i32 294941, { i64 } { i64 192 }, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.325, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.326, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.327, i32 0, i32 0), i32 294941, { i64 } { i64 208 }, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.328, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.329, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.330, i32 0, i32 0), i32 294941, { i64 } { i64 224 }, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.331, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.264, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.332, i32 0, i32 0), i32 2048, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @show_hwaccels }, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.333, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.334, i32 0, i32 0), i32 294919, { i64 } { i64 240 }, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.335, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.336, i32 0, i32 0), i32 532513, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_audio_frames }, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.337, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.146, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.338, i32 0, i32 0), i32 532513, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_audio_qscale }, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.339, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.340, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.341, i32 0, i32 0), i32 819361, { i64 } { i64 72 }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.342, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.256, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.343, i32 0, i32 0), i32 819361, { i64 } { i64 56 }, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.345, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.346, i32 0, i32 0), i32 802850, { i64 } { i64 356 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.347, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.348, i32 0, i32 0), i32 794657, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_audio_codec }, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.349, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.350, i32 0, i32 0), i32 532517, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_old2new }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.351, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.208, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.352, i32 0, i32 0), i32 161, %union.anon.0 { i8* bitcast (i32* @audio_volume to i8*) }, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.353, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.354, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.355, i32 0, i32 0), i32 819245, { i64 } { i64 448 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.356, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.264, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.357, i32 0, i32 0), i32 794661, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_channel_layout }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.358, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.359, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.360, i32 0, i32 0), i32 532513, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_audio_filters }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.361, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.216, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.362, i32 0, i32 0), i32 295077, { i64 } { i64 800 }, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.363, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.364, i32 0, i32 0), i32 803330, { i64 } { i64 360 }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.365, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.366, i32 0, i32 0), i32 795137, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_subtitle_codec }, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.367, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.368, i32 0, i32 0), i32 532997, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_old2new }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.369, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.208, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.370, i32 0, i32 0), i32 295430, { i64 } { i64 720 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.371, i32 0, i32 0), i8* null }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.372, i32 0, i32 0), i32 295433, { i64 } { i64 736 }, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.373, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.259, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.374, i32 0, i32 0), i32 21, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_video_channel }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.375, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.376, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.377, i32 0, i32 0), i32 21, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_video_standard }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.378, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.379, i32 0, i32 0) }, %struct.OptionDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.380, i32 0, i32 0), i32 6, %union.anon.0 { i8* bitcast (i32* @input_sync to i8*) }, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.381, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.382, i32 0, i32 0), i32 540933, { i64 } { i64 340 }, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.383, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.385, i32 0, i32 0), i32 540933, { i64 } { i64 336 }, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.386, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.387, i32 0, i32 0), i32 524293, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_sdp_file }, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.388, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.294, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.389, i32 0, i32 0), i32 557069, { i64 } { i64 880 }, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.390, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.391, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.392, i32 0, i32 0), i32 557069, { i64 } { i64 896 }, i8* getelementptr inbounds ([192 x i8], [192 x i8]* @.str.393, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.391, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.394, i32 0, i32 0), i32 557069, { i64 } { i64 416 }, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.395, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.396, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.397, i32 0, i32 0), i32 532517, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_old2new }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.398, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.399, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.400, i32 0, i32 0), i32 532501, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_old2new }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.398, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.401, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.402, i32 0, i32 0), i32 532517, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_preset }, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.404, i32 0, i32 0), i32 532501, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_preset }, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.405, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.406, i32 0, i32 0), i32 532997, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_preset }, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.407, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.408, i32 0, i32 0), i32 532485, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_preset }, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.409, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.221, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.410, i32 0, i32 0), i32 557189, { i64 } { i64 784 }, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.411, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.412, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.413, i32 0, i32 0), i32 798725, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_data_codec }, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.414, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0) }, { i8*, i32, { i64 }, i8*, i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.415, i32 0, i32 0), i32 802834, { i64 } { i64 364 }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.416, i32 0, i32 0), i8* null }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.417, i32 0, i32 0), i32 5, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_init_hw_device }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.418, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.419, i32 0, i32 0) }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.420, i32 0, i32 0), i32 5, { i32 (i8*, i8*, i8*)* } { i32 (i8*, i8*, i8*)* @opt_filter_hw_device }, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.421, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0) }, %struct.OptionDef zeroinitializer }>, align 16
@hw_device_ctx = common global %struct.AVBufferRef* null, align 8
@filter_hw_device = common global %struct.HWDevice* null, align 8
@vstats_filename = common global i8* null, align 8
@sdp_filename = common global i8* null, align 8
@.str.423 = private unnamed_addr constant [11 x i8] c"output url\00", align 1
@.str.424 = private unnamed_addr constant [10 x i8] c"input url\00", align 1
@.str.425 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.426 = private unnamed_addr constant [39 x i8] c"Error parsing options for %s file %s.\0A\00", align 1
@.str.427 = private unnamed_addr constant [25 x i8] c"Opening an %s file: %s.\0A\00", align 1
@.str.428 = private unnamed_addr constant [27 x i8] c"Error opening %s file %s.\0A\00", align 1
@.str.429 = private unnamed_addr constant [31 x i8] c"Successfully opened the file.\0A\00", align 1
@.str.430 = private unnamed_addr constant [47 x i8] c"-t and -to cannot be used together; using -t.\0A\00", align 1
@.str.431 = private unnamed_addr constant [39 x i8] c"-to value smaller than -ss; aborting.\0A\00", align 1
@.str.432 = private unnamed_addr constant [28 x i8] c"Unknown input format: '%s'\0A\00", align 1
@.str.433 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.434 = private unnamed_addr constant [6 x i8] c"pipe:\00", align 1
@.str.435 = private unnamed_addr constant [11 x i8] c"/dev/stdin\00", align 1
@.str.436 = private unnamed_addr constant [12 x i8] c"sample_rate\00", align 1
@.str.437 = private unnamed_addr constant [10 x i8] c"framerate\00", align 1
@.str.438 = private unnamed_addr constant [11 x i8] c"video_size\00", align 1
@.str.439 = private unnamed_addr constant [13 x i8] c"pixel_format\00", align 1
@.str.440 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.441 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@int_cb = external constant %struct.AVIOInterruptCB, align 8
@.str.442 = private unnamed_addr constant [14 x i8] c"scan_all_pmts\00", align 1
@.str.443 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.444 = private unnamed_addr constant [23 x i8] c"Did you mean file:%s?\0A\00", align 1
@.str.445 = private unnamed_addr constant [37 x i8] c"%s: could not find codec parameters\0A\00", align 1
@.str.446 = private unnamed_addr constant [50 x i8] c"Cannot use -ss and -sseof both, using -ss for %s\0A\00", align 1
@.str.447 = private unnamed_addr constant [41 x i8] c"-sseof value must be negative; aborting\0A\00", align 1
@.str.448 = private unnamed_addr constant [56 x i8] c"-sseof value seeks to before start of file %s; ignored\0A\00", align 1
@.str.449 = private unnamed_addr constant [45 x i8] c"Cannot use -sseof, duration of %s not known\0A\00", align 1
@.str.450 = private unnamed_addr constant [38 x i8] c"%s: could not seek to position %0.3f\0A\00", align 1
@nb_input_files = external global i32, align 4
@input_files = external global %struct.InputFile**, align 8
@nb_input_streams = external global i32, align 4
@input_streams = external global %struct.InputStream**, align 8
@.str.451 = private unnamed_addr constant [84 x i8] c"Codec AVOption %s (%s) specified for input file #%d (%s) is not a decoding option.\0A\00", align 1
@.str.452 = private unnamed_addr constant [271 x i8] c"Codec AVOption %s (%s) specified for input file #%d (%s) has not been used for any stream. The most likely reason is either wrong type (e.g. a video option with no video streams) or that it is a private option of some decoder which was not actually used for any stream.\0A\00", align 1
@input_stream_potentially_available = internal global i32 0, align 4
@.str.453 = private unnamed_addr constant [8 x i8] c"encoder\00", align 1
@.str.454 = private unnamed_addr constant [8 x i8] c"decoder\00", align 1
@.str.455 = private unnamed_addr constant [33 x i8] c"Matched %s '%s' for codec '%s'.\0A\00", align 1
@.str.456 = private unnamed_addr constant [17 x i8] c"Unknown %s '%s'\0A\00", align 1
@.str.457 = private unnamed_addr constant [22 x i8] c"Invalid %s type '%s'\0A\00", align 1
@.str.458 = private unnamed_addr constant [11 x i8] c"skip_frame\00", align 1
@.str.459 = private unnamed_addr constant [27 x i8] c"Error parsing discard %s.\0A\00", align 1
@.str.460 = private unnamed_addr constant [39 x i8] c"Error allocating the decoder context.\0A\00", align 1
@.str.461 = private unnamed_addr constant [41 x i8] c"Error initializing the decoder context.\0A\00", align 1
@.str.462 = private unnamed_addr constant [29 x i8] c"Error parsing framerate %s.\0A\00", align 1
@.str.463 = private unnamed_addr constant [6 x i8] c"nvdec\00", align 1
@.str.464 = private unnamed_addr constant [5 x i8] c"cuda\00", align 1
@.str.465 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.466 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.467 = private unnamed_addr constant [27 x i8] c"Unrecognized hwaccel: %s.\0A\00", align 1
@.str.468 = private unnamed_addr constant [21 x i8] c"Supported hwaccels: \00", align 1
@.str.469 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.470 = private unnamed_addr constant [39 x i8] c"Unrecognised hwaccel output format: %s\00", align 1
@.str.471 = private unnamed_addr constant [26 x i8] c"Invalid canvas size: %s.\0A\00", align 1
@.str.472 = private unnamed_addr constant [40 x i8] c"No extradata to dump in stream #%d:%d.\0A\00", align 1
@.str.473 = private unnamed_addr constant [62 x i8] c"No filename specified and no 'filename' tagin stream #%d:%d.\0A\00", align 1
@.str.474 = private unnamed_addr constant [37 x i8] c"Could not open file %s for writing.\0A\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.475 = private unnamed_addr constant [42 x i8] c"Error, both -y and -n supplied. Exiting.\0A\00", align 1
@.str.476 = private unnamed_addr constant [45 x i8] c"File '%s' already exists. Overwrite ? [y/N] \00", align 1
@.str.477 = private unnamed_addr constant [27 x i8] c"Not overwriting - exiting\0A\00", align 1
@.str.478 = private unnamed_addr constant [36 x i8] c"File '%s' already exists. Exiting.\0A\00", align 1
@.str.479 = private unnamed_addr constant [39 x i8] c"Output %s same as Input #%d - exiting\0A\00", align 1
@.str.480 = private unnamed_addr constant [45 x i8] c"FFmpeg cannot edit existing files in-place.\0A\00", align 1
@nb_filtergraphs = external global i32, align 4
@filtergraphs = external global %struct.FilterGraph**, align 8
@output_files = external global %struct.OutputFile**, align 8
@nb_output_files = external global i32, align 4
@nb_output_streams = external global i32, align 4
@.str.481 = private unnamed_addr constant [7 x i8] c"fflags\00", align 1
@.str.482 = private unnamed_addr constant [99 x i8] c"Output with label '%s' does not exist in any defined filter graph, or was already used elsewhere.\0A\00", align 1
@.str.483 = private unnamed_addr constant [49 x i8] c"Stream #%d:%d is disabled and cannot be mapped.\0A\00", align 1
@.str.484 = private unnamed_addr constant [46 x i8] c"Cannot map stream #%d:%d - unsupported type.\0A\00", align 1
@.str.485 = private unnamed_addr constant [147 x i8] c"If you want unsupported types ignored instead of failing, please use the -ignore_unknown option\0AIf you want them copied, please use -copy_unknown\0A\00", align 1
@.str.486 = private unnamed_addr constant [36 x i8] c"Could not open attachment file %s.\0A\00", align 1
@.str.487 = private unnamed_addr constant [42 x i8] c"Could not get size of the attachment %s.\0A\00", align 1
@.str.488 = private unnamed_addr constant [45 x i8] c"Attachment %s too large to fit into memory.\0A\00", align 1
@output_streams = external global %struct.OutputStream**, align 8
@.str.489 = private unnamed_addr constant [45 x i8] c"Output file #%d does not contain any stream\0A\00", align 1
@.str.490 = private unnamed_addr constant [86 x i8] c"Codec AVOption %s (%s) specified for output file #%d (%s) is not an encoding option.\0A\00", align 1
@.str.491 = private unnamed_addr constant [13 x i8] c"gop_timecode\00", align 1
@.str.492 = private unnamed_addr constant [272 x i8] c"Codec AVOption %s (%s) specified for output file #%d (%s) has not been used for any stream. The most likely reason is either wrong type (e.g. a video option with no video streams) or that it is a private option of some encoder which was not actually used for any stream.\0A\00", align 1
@.str.493 = private unnamed_addr constant [70 x i8] c"Error initializing a simple filtergraph between streams %d:%d->%d:%d\0A\00", align 1
@.str.494 = private unnamed_addr constant [51 x i8] c"No input streams but output needs an input stream\0A\00", align 1
@.str.495 = private unnamed_addr constant [7 x i8] c"image2\00", align 1
@.str.496 = private unnamed_addr constant [8 x i8] c"preload\00", align 1
@.str.497 = private unnamed_addr constant [60 x i8] c"Invalid input file index %d while processing metadata maps\0A\00", align 1
@.str.498 = private unnamed_addr constant [49 x i8] c"Invalid input file index %d in chapter mapping.\0A\00", align 1
@.str.499 = private unnamed_addr constant [14 x i8] c"creation_time\00", align 1
@.str.500 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.501 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.502 = private unnamed_addr constant [12 x i8] c"program_num\00", align 1
@.str.503 = private unnamed_addr constant [40 x i8] c"No '=' character in program string %s.\0A\00", align 1
@.str.504 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.505 = private unnamed_addr constant [3 x i8] c"st\00", align 1
@.str.506 = private unnamed_addr constant [25 x i8] c"Unknown program key %s.\0A\00", align 1
@.str.507 = private unnamed_addr constant [41 x i8] c"No '=' character in metadata string %s.\0A\00", align 1
@.str.508 = private unnamed_addr constant [7 x i8] c"rotate\00", align 1
@.str.509 = private unnamed_addr constant [49 x i8] c"Invalid chapter index %d in metadata specifier.\0A\00", align 1
@.str.510 = private unnamed_addr constant [49 x i8] c"Invalid program index %d in metadata specifier.\0A\00", align 1
@.str.511 = private unnamed_addr constant [32 x i8] c"Invalid metadata specifier %s.\0A\00", align 1
@.str.512 = private unnamed_addr constant [55 x i8] c"Only video and audio filters are supported currently.\0A\00", align 1
@.str.513 = private unnamed_addr constant [138 x i8] c"Streamcopy requested for output stream %d:%d, which is fed from a complex filtergraph. Filtering and streamcopy cannot be used together.\0A\00", align 1
@.str.514 = private unnamed_addr constant [16 x i8] c"-vf/-af/-filter\00", align 1
@.str.515 = private unnamed_addr constant [15 x i8] c"-filter_script\00", align 1
@.str.516 = private unnamed_addr constant [179 x i8] c"%s '%s' was specified through the %s option for output stream %d:%d, which is fed from a complex filtergraph.\0A%s and -filter_complex cannot be used together for the same stream.\0A\00", align 1
@.str.517 = private unnamed_addr constant [12 x i8] c"Filtergraph\00", align 1
@.str.518 = private unnamed_addr constant [19 x i8] c"Filtergraph script\00", align 1
@.str.519 = private unnamed_addr constant [29 x i8] c"Invalid framerate value: %s\0A\00", align 1
@.str.520 = private unnamed_addr constant [56 x i8] c"Using -vsync 0 and -r can produce invalid output files\0A\00", align 1
@.str.521 = private unnamed_addr constant [26 x i8] c"Invalid aspect ratio: %s\0A\00", align 1
@.str.522 = private unnamed_addr constant [81 x i8] c"Only '-vf %s' read, ignoring remaining -vf options: Use ',' to separate filters\0A\00", align 1
@.str.523 = private unnamed_addr constant [25 x i8] c"Invalid frame size: %s.\0A\00", align 1
@.str.524 = private unnamed_addr constant [37 x i8] c"Unknown pixel format requested: %s.\0A\00", align 1
@.str.525 = private unnamed_addr constant [45 x i8] c"Could not allocate memory for intra matrix.\0A\00", align 1
@.str.526 = private unnamed_addr constant [45 x i8] c"Could not allocate memory for inter matrix.\0A\00", align 1
@.str.527 = private unnamed_addr constant [9 x i8] c"%d,%d,%d\00", align 1
@.str.528 = private unnamed_addr constant [27 x i8] c"error parsing rc_override\0A\00", align 1
@.str.529 = private unnamed_addr constant [48 x i8] c"Could not (re)allocate memory for rc_override.\0A\00", align 1
@.str.530 = private unnamed_addr constant [7 x i8] c"+pass1\00", align 1
@.str.531 = private unnamed_addr constant [7 x i8] c"+pass2\00", align 1
@.str.532 = private unnamed_addr constant [10 x i8] c"%s-%d.log\00", align 1
@.str.533 = private unnamed_addr constant [12 x i8] c"ffmpeg2pass\00", align 1
@.str.534 = private unnamed_addr constant [8 x i8] c"libx264\00", align 1
@.str.535 = private unnamed_addr constant [49 x i8] c"Error reading log file '%s' for pass-2 encoding\0A\00", align 1
@.str.536 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.537 = private unnamed_addr constant [52 x i8] c"Cannot write log file '%s' for pass-1 encoding: %s\0A\00", align 1
@.str.538 = private unnamed_addr constant [25 x i8] c"Could not alloc stream.\0A\00", align 1
@.str.539 = private unnamed_addr constant [45 x i8] c"Error selecting an encoder for stream %d:%d\0A\00", align 1
@.str.540 = private unnamed_addr constant [40 x i8] c"Error allocating the encoding context.\0A\00", align 1
@.str.541 = private unnamed_addr constant [43 x i8] c"Error allocating the encoding parameters.\0A\00", align 1
@.str.542 = private unnamed_addr constant [40 x i8] c"Invalid line found in the preset file.\0A\00", align 1
@.str.543 = private unnamed_addr constant [64 x i8] c"Preset %s specified for stream %d:%d, but could not be opened.\0A\00", align 1
@.str.544 = private unnamed_addr constant [23 x i8] c"Invalid time base: %s\0A\00", align 1
@.str.545 = private unnamed_addr constant [78 x i8] c"Applying unspecific -frames to non video streams, maybe you meant -vframes ?\0A\00", align 1
@.str.546 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.547 = private unnamed_addr constant [29 x i8] c"Unknown bitstream filter %s\0A\00", align 1
@.str.548 = private unnamed_addr constant [45 x i8] c"Error allocating a bitstream filter context\0A\00", align 1
@.str.549 = private unnamed_addr constant [47 x i8] c"Error parsing options for bitstream filter %s\0A\00", align 1
@.str.550 = private unnamed_addr constant [19 x i8] c"output_sample_bits\00", align 1
@.str.551 = private unnamed_addr constant [3 x i8] c"24\00", align 1
@.str.552 = private unnamed_addr constant [160 x i8] c"Automatic encoder selection failed for output stream #%d:%d. Default encoder for format %s (codec %s) is probably disabled. Please choose an encoder manually.\0A\00", align 1
@.str.553 = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@.str.554 = private unnamed_addr constant [15 x i8] c"AVCONV_DATADIR\00", align 1
@.str.555 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@.str.556 = private unnamed_addr constant [24 x i8] c"/usr/local/share/ffmpeg\00", align 1
@.str.557 = private unnamed_addr constant [20 x i8] c"%s%s/%s-%s.avpreset\00", align 1
@.str.558 = private unnamed_addr constant [9 x i8] c"/.avconv\00", align 1
@.str.559 = private unnamed_addr constant [17 x i8] c"%s%s/%s.avpreset\00", align 1
@.str.560 = private unnamed_addr constant [44 x i8] c"Could not alloc buffer for reading preset.\0A\00", align 1
@.str.561 = private unnamed_addr constant [41 x i8] c"Syntax error in matrix \22%s\22 at coeff %d\0A\00", align 1
@.str.562 = private unnamed_addr constant [24 x i8] c"Error opening file %s.\0A\00", align 1
@.str.563 = private unnamed_addr constant [63 x i8] c"Both -filter and -filter_script set for output stream #%d:%d.\0A\00", align 1
@.str.564 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.565 = private unnamed_addr constant [6 x i8] c"anull\00", align 1
@.str.566 = private unnamed_addr constant [127 x i8] c"%s '%s' was defined for %s output stream %d:%d but codec copy was selected.\0AFiltering and streamcopy cannot be used together.\0A\00", align 1
@.str.567 = private unnamed_addr constant [81 x i8] c"Only '-af %s' read, ignoring remaining -af options: Use ',' to separate filters\0A\00", align 1
@.str.568 = private unnamed_addr constant [28 x i8] c"Invalid sample format '%s'\0A\00", align 1
@.str.569 = private unnamed_addr constant [57 x i8] c"Cannot determine input stream for channel mapping %d.%d\0A\00", align 1
@.str.570 = private unnamed_addr constant [58 x i8] c"Data stream encoding not supported yet (only streamcopy)\0A\00", align 1
@.str.571 = private unnamed_addr constant [61 x i8] c"Unknown stream encoding not supported yet (only streamcopy)\0A\00", align 1
@.str.572 = private unnamed_addr constant [53 x i8] c"Invalid %s index %d while processing metadata maps.\0A\00", align 1
@.str.573 = private unnamed_addr constant [8 x i8] c"chapter\00", align 1
@.str.574 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.575 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.576 = private unnamed_addr constant [21 x i8] c"fftools/ffmpeg_opt.c\00", align 1
@.str.577 = private unnamed_addr constant [50 x i8] c"Stream specifier %s does not match  any streams.\0A\00", align 1
@.str.578 = private unnamed_addr constant [27 x i8] c"Invalid metadata type %c.\0A\00", align 1
@.str.579 = private unnamed_addr constant [30 x i8] c"Invalid sync file index: %d.\0A\00", align 1
@.str.580 = private unnamed_addr constant [65 x i8] c"Sync stream specification in map %s does not match any streams.\0A\00", align 1
@.str.581 = private unnamed_addr constant [70 x i8] c"Sync stream specification in map %s matches a disabled input stream.\0A\00", align 1
@.str.582 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.583 = private unnamed_addr constant [32 x i8] c"Invalid output link label: %s.\0A\00", align 1
@.str.584 = private unnamed_addr constant [31 x i8] c"Invalid input file index: %d.\0A\00", align 1
@.str.585 = private unnamed_addr constant [47 x i8] c"Stream map '%s' matches no streams; ignoring.\0A\00", align 1
@.str.586 = private unnamed_addr constant [90 x i8] c"Stream map '%s' matches disabled streams.\0ATo ignore this, add a trailing '?' to the map.\0A\00", align 1
@.str.587 = private unnamed_addr constant [84 x i8] c"Stream map '%s' matches no streams.\0ATo ignore this, add a trailing '?' to the map.\0A\00", align 1
@.str.588 = private unnamed_addr constant [9 x i8] c"%d:%d.%d\00", align 1
@.str.589 = private unnamed_addr constant [15 x i8] c"%d.%d.%d:%d.%d\00", align 1
@.str.590 = private unnamed_addr constant [77 x i8] c"Syntax error, mapchan usage: [file.stream.channel|-1][:syncfile:syncstream]\0A\00", align 1
@.str.591 = private unnamed_addr constant [39 x i8] c"mapchan: invalid input file index: %d\0A\00", align 1
@.str.592 = private unnamed_addr constant [49 x i8] c"mapchan: invalid input file stream index #%d.%d\0A\00", align 1
@.str.593 = private unnamed_addr constant [48 x i8] c"mapchan: stream #%d.%d is not an audio stream.\0A\00", align 1
@.str.594 = private unnamed_addr constant [42 x i8] c"mapchan: invalid audio channel #%d.%d.%d\0A\00", align 1
@.str.595 = private unnamed_addr constant [97 x i8] c"mapchan: invalid audio channel #%d.%d.%d\0ATo ignore this, add a trailing '?' to the map_channel.\0A\00", align 1
@.str.596 = private unnamed_addr constant [34 x i8] c"creation_time=%Y-%m-%dT%H:%M:%S%z\00", align 1
@.str.597 = private unnamed_addr constant [65 x i8] c"%s is deprecated, set the 'creation_time' metadata tag instead.\0A\00", align 1
@.str.598 = private unnamed_addr constant [9 x i8] c"frames:d\00", align 1
@.str.599 = private unnamed_addr constant [38 x i8] c"Failed to open progress URL \22%s\22: %s\0A\00", align 1
@progress_avio = external global %struct.AVIOContext*, align 8
@opt_target.frame_rates = internal constant [3 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.600, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.601, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.602, i32 0, i32 0)], align 16
@.str.600 = private unnamed_addr constant [3 x i8] c"25\00", align 1
@.str.601 = private unnamed_addr constant [11 x i8] c"30000/1001\00", align 1
@.str.602 = private unnamed_addr constant [11 x i8] c"24000/1001\00", align 1
@.str.603 = private unnamed_addr constant [5 x i8] c"pal-\00", align 1
@.str.604 = private unnamed_addr constant [6 x i8] c"ntsc-\00", align 1
@.str.605 = private unnamed_addr constant [6 x i8] c"film-\00", align 1
@.str.606 = private unnamed_addr constant [25 x i8] c"Assuming %s for target.\0A\00", align 1
@.str.607 = private unnamed_addr constant [4 x i8] c"PAL\00", align 1
@.str.608 = private unnamed_addr constant [5 x i8] c"NTSC\00", align 1
@.str.609 = private unnamed_addr constant [59 x i8] c"Could not determine norm (PAL/NTSC/NTSC-Film) for target.\0A\00", align 1
@.str.610 = private unnamed_addr constant [55 x i8] c"Please prefix target with \22pal-\22, \22ntsc-\22 or \22film-\22,\0A\00", align 1
@.str.611 = private unnamed_addr constant [35 x i8] c"or set a framerate with \22-r xxx\22.\0A\00", align 1
@.str.612 = private unnamed_addr constant [4 x i8] c"vcd\00", align 1
@.str.613 = private unnamed_addr constant [4 x i8] c"c:v\00", align 1
@.str.614 = private unnamed_addr constant [11 x i8] c"mpeg1video\00", align 1
@.str.615 = private unnamed_addr constant [4 x i8] c"c:a\00", align 1
@.str.616 = private unnamed_addr constant [4 x i8] c"mp2\00", align 1
@.str.617 = private unnamed_addr constant [8 x i8] c"352x288\00", align 1
@.str.618 = private unnamed_addr constant [8 x i8] c"352x240\00", align 1
@.str.619 = private unnamed_addr constant [2 x i8] c"g\00", align 1
@.str.620 = private unnamed_addr constant [3 x i8] c"15\00", align 1
@.str.621 = private unnamed_addr constant [3 x i8] c"18\00", align 1
@.str.622 = private unnamed_addr constant [4 x i8] c"b:v\00", align 1
@.str.623 = private unnamed_addr constant [8 x i8] c"1150000\00", align 1
@.str.624 = private unnamed_addr constant [10 x i8] c"maxrate:v\00", align 1
@.str.625 = private unnamed_addr constant [10 x i8] c"minrate:v\00", align 1
@.str.626 = private unnamed_addr constant [10 x i8] c"bufsize:v\00", align 1
@.str.627 = private unnamed_addr constant [7 x i8] c"327680\00", align 1
@.str.628 = private unnamed_addr constant [4 x i8] c"b:a\00", align 1
@.str.629 = private unnamed_addr constant [7 x i8] c"224000\00", align 1
@.str.630 = private unnamed_addr constant [6 x i8] c"44100\00", align 1
@.str.631 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.632 = private unnamed_addr constant [11 x i8] c"packetsize\00", align 1
@.str.633 = private unnamed_addr constant [5 x i8] c"2324\00", align 1
@.str.634 = private unnamed_addr constant [8 x i8] c"muxrate\00", align 1
@.str.635 = private unnamed_addr constant [8 x i8] c"1411200\00", align 1
@.str.636 = private unnamed_addr constant [5 x i8] c"svcd\00", align 1
@.str.637 = private unnamed_addr constant [11 x i8] c"mpeg2video\00", align 1
@.str.638 = private unnamed_addr constant [8 x i8] c"480x576\00", align 1
@.str.639 = private unnamed_addr constant [8 x i8] c"480x480\00", align 1
@.str.640 = private unnamed_addr constant [8 x i8] c"yuv420p\00", align 1
@.str.641 = private unnamed_addr constant [8 x i8] c"2040000\00", align 1
@.str.642 = private unnamed_addr constant [8 x i8] c"2516000\00", align 1
@.str.643 = private unnamed_addr constant [8 x i8] c"1835008\00", align 1
@.str.644 = private unnamed_addr constant [12 x i8] c"scan_offset\00", align 1
@.str.645 = private unnamed_addr constant [4 x i8] c"dvd\00", align 1
@.str.646 = private unnamed_addr constant [4 x i8] c"ac3\00", align 1
@.str.647 = private unnamed_addr constant [8 x i8] c"720x576\00", align 1
@.str.648 = private unnamed_addr constant [8 x i8] c"720x480\00", align 1
@.str.649 = private unnamed_addr constant [8 x i8] c"6000000\00", align 1
@.str.650 = private unnamed_addr constant [8 x i8] c"9000000\00", align 1
@.str.651 = private unnamed_addr constant [5 x i8] c"2048\00", align 1
@.str.652 = private unnamed_addr constant [9 x i8] c"10080000\00", align 1
@.str.653 = private unnamed_addr constant [7 x i8] c"448000\00", align 1
@.str.654 = private unnamed_addr constant [6 x i8] c"48000\00", align 1
@.str.655 = private unnamed_addr constant [3 x i8] c"dv\00", align 1
@.str.656 = private unnamed_addr constant [5 x i8] c"dv50\00", align 1
@.str.657 = private unnamed_addr constant [8 x i8] c"yuv422p\00", align 1
@.str.658 = private unnamed_addr constant [8 x i8] c"yuv411p\00", align 1
@.str.659 = private unnamed_addr constant [20 x i8] c"Unknown target: %s\0A\00", align 1
@codec_opts = external global %struct.AVDictionary*, align 8
@format_opts = external global %struct.AVDictionary*, align 8
@.str.660 = private unnamed_addr constant [4 x i8] c"cfr\00", align 1
@.str.661 = private unnamed_addr constant [4 x i8] c"vfr\00", align 1
@.str.662 = private unnamed_addr constant [12 x i8] c"passthrough\00", align 1
@.str.663 = private unnamed_addr constant [5 x i8] c"drop\00", align 1
@opt_abort_on.opts = internal constant [3 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.198, i32 0, i32 0), i8* null, i32 0, i32 0, %union.anon zeroinitializer, double 0xC3E0000000000000, double 0x43E0000000000000, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.664, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0.000000e+00, double 0.000000e+00, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0) }, %struct.AVOption zeroinitializer], align 16
@.str.664 = private unnamed_addr constant [13 x i8] c"empty_output\00", align 1
@opt_abort_on.class = internal constant %struct.AVClass { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([3 x %struct.AVOption], [3 x %struct.AVOption]* @opt_abort_on.opts, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@.str.665 = private unnamed_addr constant [47 x i8] c"Please use -q:a or -q:v, -qscale is ambiguous\0A\00", align 1
@.str.666 = private unnamed_addr constant [4 x i8] c"q:v\00", align 1
@.str.667 = private unnamed_addr constant [4 x i8] c"q%s\00", align 1
@.str.668 = private unnamed_addr constant [60 x i8] c"Please use -profile:a or -profile:v, -profile is ambiguous\0A\00", align 1
@.str.669 = private unnamed_addr constant [10 x i8] c"profile:v\00", align 1
@.str.670 = private unnamed_addr constant [9 x i8] c"frames:v\00", align 1
@.str.671 = private unnamed_addr constant [8 x i8] c"codec:v\00", align 1
@.str.672 = private unnamed_addr constant [170 x i8] c"Option '%s' was removed. If you are looking for an option to preserve the quality (which is not what -%s was for), use -qscale 0 or an equivalent quality factor option.\0A\00", align 1
@.str.673 = private unnamed_addr constant [12 x i8] c"timecode=%s\00", align 1
@.str.674 = private unnamed_addr constant [11 x i8] c"metadata:g\00", align 1
@.str.675 = private unnamed_addr constant [32 x i8] c"Unable to get current time: %s\0A\00", align 1
@.str.676 = private unnamed_addr constant [24 x i8] c"vstats_%02d%02d%02d.log\00", align 1
@.str.677 = private unnamed_addr constant [9 x i8] c"filter:v\00", align 1
@.str.678 = private unnamed_addr constant [6 x i8] c"%s:%c\00", align 1
@.str.679 = private unnamed_addr constant [70 x i8] c"Invalid value '%s' for option '%s', required syntax is 'index:value'\0A\00", align 1
@.str.680 = private unnamed_addr constant [42 x i8] c"Please use -b:a or -b:v, -b is ambiguous\0A\00", align 1
@.str.681 = private unnamed_addr constant [32 x i8] c"Hardware acceleration methods:\0A\00", align 1
@.str.682 = private unnamed_addr constant [9 x i8] c"frames:a\00", align 1
@.str.683 = private unnamed_addr constant [4 x i8] c"q:a\00", align 1
@.str.684 = private unnamed_addr constant [8 x i8] c"codec:a\00", align 1
@.str.685 = private unnamed_addr constant [28 x i8] c"Unknown channel layout: %s\0A\00", align 1
@.str.686 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.687 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.688 = private unnamed_addr constant [9 x i8] c"filter:a\00", align 1
@.str.689 = private unnamed_addr constant [8 x i8] c"codec:s\00", align 1
@.str.690 = private unnamed_addr constant [42 x i8] c"This option is deprecated, use -channel.\0A\00", align 1
@.str.691 = private unnamed_addr constant [43 x i8] c"This option is deprecated, use -standard.\0A\00", align 1
@.str.692 = private unnamed_addr constant [17 x i8] c"libx264-lossless\00", align 1
@.str.693 = private unnamed_addr constant [34 x i8] c"Please use -preset <speed> -qp 0\0A\00", align 1
@.str.694 = private unnamed_addr constant [32 x i8] c"File for preset '%s' not found\0A\00", align 1
@.str.695 = private unnamed_addr constant [4 x i8] c"#\0A\0D\00", align 1
@.str.696 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.697 = private unnamed_addr constant [26 x i8] c"%s: Invalid syntax: '%s'\0A\00", align 1
@.str.698 = private unnamed_addr constant [31 x i8] c"ffpreset[%s]: set '%s' = '%s'\0A\00", align 1
@.str.699 = private unnamed_addr constant [61 x i8] c"%s: Invalid option or argument: '%s', parsed as '%s' = '%s'\0A\00", align 1
@.str.700 = private unnamed_addr constant [8 x i8] c"codec:d\00", align 1
@.str.701 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.702 = private unnamed_addr constant [34 x i8] c"Supported hardware device types:\0A\00", align 1
@.str.703 = private unnamed_addr constant [37 x i8] c"Only one filter device can be used.\0A\00", align 1
@.str.704 = private unnamed_addr constant [27 x i8] c"Invalid filter device %s.\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @show_help_default(i8* %opt, i8* %arg) #0 !dbg !1894 {
entry:
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %per_file = alloca i32, align 4
  %show_advanced = alloca i32, align 4
  %show_avoptions = alloca i32, align 4
  %flags = alloca i32, align 4
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !1897, metadata !1898), !dbg !1899
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1900, metadata !1898), !dbg !1901
  call void @llvm.dbg.declare(metadata i32* %per_file, metadata !1902, metadata !1898), !dbg !1903
  store i32 57344, i32* %per_file, align 4, !dbg !1903
  call void @llvm.dbg.declare(metadata i32* %show_advanced, metadata !1904, metadata !1898), !dbg !1905
  store i32 0, i32* %show_advanced, align 4, !dbg !1905
  call void @llvm.dbg.declare(metadata i32* %show_avoptions, metadata !1906, metadata !1898), !dbg !1907
  store i32 0, i32* %show_avoptions, align 4, !dbg !1907
  %0 = load i8*, i8** %opt.addr, align 8, !dbg !1908
  %tobool = icmp ne i8* %0, null, !dbg !1908
  br i1 %tobool, label %land.lhs.true, label %if.end9, !dbg !1910

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %opt.addr, align 8, !dbg !1911
  %2 = load i8, i8* %1, align 1, !dbg !1913
  %conv = sext i8 %2 to i32, !dbg !1913
  %tobool1 = icmp ne i32 %conv, 0, !dbg !1913
  br i1 %tobool1, label %if.then, label %if.end9, !dbg !1914

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %opt.addr, align 8, !dbg !1915
  %call = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #10, !dbg !1918
  %tobool2 = icmp ne i32 %call, 0, !dbg !1918
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !1919

if.then3:                                         ; preds = %if.then
  store i32 1, i32* %show_advanced, align 4, !dbg !1920
  br label %if.end8, !dbg !1921

if.else:                                          ; preds = %if.then
  %4 = load i8*, i8** %opt.addr, align 8, !dbg !1922
  %call4 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0)) #10, !dbg !1924
  %tobool5 = icmp ne i32 %call4, 0, !dbg !1924
  br i1 %tobool5, label %if.else7, label %if.then6, !dbg !1925

if.then6:                                         ; preds = %if.else
  store i32 1, i32* %show_avoptions, align 4, !dbg !1926
  store i32 1, i32* %show_advanced, align 4, !dbg !1927
  br label %if.end, !dbg !1928

if.else7:                                         ; preds = %if.else
  %5 = load i8*, i8** %opt.addr, align 8, !dbg !1929
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i32 0, i32 0), i8* %5), !dbg !1930
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then6
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then3
  br label %if.end9, !dbg !1931

if.end9:                                          ; preds = %if.end8, %land.lhs.true, %entry
  call void @show_usage(), !dbg !1932
  %call10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([328 x i8], [328 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @program_name, i32 0, i32 0)), !dbg !1933
  call void @show_help_options(%struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i32 0, i32 0), i32 2048, i32 0, i32 0), !dbg !1934
  call void @show_help_options(%struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.5, i32 0, i32 0), i32 0, i32 59396, i32 0), !dbg !1935
  %6 = load i32, i32* %show_advanced, align 4, !dbg !1936
  %tobool11 = icmp ne i32 %6, 0, !dbg !1936
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !1938

if.then12:                                        ; preds = %if.end9
  call void @show_help_options(%struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i32 4, i32 59392, i32 0), !dbg !1939
  br label %if.end13, !dbg !1939

if.end13:                                         ; preds = %if.then12, %if.end9
  call void @show_help_options(%struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0), i32 0, i32 2612, i32 57344), !dbg !1940
  %7 = load i32, i32* %show_advanced, align 4, !dbg !1941
  %tobool14 = icmp ne i32 %7, 0, !dbg !1941
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !1943

if.then15:                                        ; preds = %if.end13
  call void @show_help_options(%struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i32 4, i32 560, i32 57344), !dbg !1944
  br label %if.end16, !dbg !1944

if.end16:                                         ; preds = %if.then15, %if.end13
  call void @show_help_options(%struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i32 0, i32 0), i32 16, i32 36, i32 0), !dbg !1945
  %8 = load i32, i32* %show_advanced, align 4, !dbg !1946
  %tobool17 = icmp ne i32 %8, 0, !dbg !1946
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !1948

if.then18:                                        ; preds = %if.end16
  call void @show_help_options(%struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i32 0, i32 0), i32 20, i32 32, i32 0), !dbg !1949
  br label %if.end19, !dbg !1949

if.end19:                                         ; preds = %if.then18, %if.end16
  call void @show_help_options(%struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i32 32, i32 20, i32 0), !dbg !1950
  %9 = load i32, i32* %show_advanced, align 4, !dbg !1951
  %tobool20 = icmp ne i32 %9, 0, !dbg !1951
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !1953

if.then21:                                        ; preds = %if.end19
  call void @show_help_options(%struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i32 36, i32 16, i32 0), !dbg !1954
  br label %if.end22, !dbg !1954

if.end22:                                         ; preds = %if.then21, %if.end19
  call void @show_help_options(%struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i32 0, i32 0), i32 512, i32 0, i32 0), !dbg !1955
  %call23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0)), !dbg !1956
  %10 = load i32, i32* %show_avoptions, align 4, !dbg !1957
  %tobool24 = icmp ne i32 %10, 0, !dbg !1957
  br i1 %tobool24, label %if.then25, label %if.end32, !dbg !1959

if.then25:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !1960, metadata !1898), !dbg !1962
  store i32 3, i32* %flags, align 4, !dbg !1962
  %call26 = call %struct.AVClass* @avcodec_get_class(), !dbg !1963
  %11 = load i32, i32* %flags, align 4, !dbg !1964
  call void @show_help_children(%struct.AVClass* %call26, i32 %11), !dbg !1965
  %call27 = call %struct.AVClass* @avformat_get_class(), !dbg !1967
  %12 = load i32, i32* %flags, align 4, !dbg !1968
  call void @show_help_children(%struct.AVClass* %call27, i32 %12), !dbg !1969
  %call28 = call %struct.AVClass* @sws_get_class(), !dbg !1970
  %13 = load i32, i32* %flags, align 4, !dbg !1971
  call void @show_help_children(%struct.AVClass* %call28, i32 %13), !dbg !1972
  %call29 = call %struct.AVClass* @swr_get_class(), !dbg !1973
  call void @show_help_children(%struct.AVClass* %call29, i32 8), !dbg !1974
  %call30 = call %struct.AVClass* @avfilter_get_class(), !dbg !1975
  call void @show_help_children(%struct.AVClass* %call30, i32 65560), !dbg !1976
  %call31 = call %struct.AVClass* @av_bsf_get_class(), !dbg !1977
  call void @show_help_children(%struct.AVClass* %call31, i32 280), !dbg !1978
  br label %if.end32, !dbg !1979

if.end32:                                         ; preds = %if.then25, %if.end22
  ret void, !dbg !1980
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #2

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: nounwind uwtable
define void @show_usage() #0 !dbg !1981 {
entry:
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.15, i32 0, i32 0)), !dbg !1984
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @program_name, i32 0, i32 0)), !dbg !1985
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0)), !dbg !1986
  ret void, !dbg !1987
}

declare i32 @printf(i8*, ...) #3

declare void @show_help_options(%struct.OptionDef*, i8*, i32, i32, i32) #3

declare void @show_help_children(%struct.AVClass*, i32) #3

declare %struct.AVClass* @avcodec_get_class() #3

declare %struct.AVClass* @avformat_get_class() #3

declare %struct.AVClass* @sws_get_class() #3

declare %struct.AVClass* @swr_get_class() #3

declare %struct.AVClass* @avfilter_get_class() #3

declare %struct.AVClass* @av_bsf_get_class() #3

; Function Attrs: nounwind uwtable
define i32 @ffmpeg_parse_options(i32 %argc, i8** %argv) #0 !dbg !1988 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %octx = alloca %struct.OptionParseContext, align 8
  %error = alloca [128 x i8], align 16
  %ret = alloca i32, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !1992, metadata !1898), !dbg !1993
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !1994, metadata !1898), !dbg !1995
  call void @llvm.dbg.declare(metadata %struct.OptionParseContext* %octx, metadata !1996, metadata !1898), !dbg !2033
  call void @llvm.dbg.declare(metadata [128 x i8]* %error, metadata !2034, metadata !1898), !dbg !2038
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2039, metadata !1898), !dbg !2040
  %0 = bitcast %struct.OptionParseContext* %octx to i8*, !dbg !2041
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 160, i32 8, i1 false), !dbg !2041
  %1 = load i32, i32* %argc.addr, align 4, !dbg !2042
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !2043
  %call = call i32 @split_commandline(%struct.OptionParseContext* %octx, i32 %1, i8** %2, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0), %struct.OptionGroupDef* getelementptr inbounds ([2 x %struct.OptionGroupDef], [2 x %struct.OptionGroupDef]* @groups, i32 0, i32 0), i32 2), !dbg !2044
  store i32 %call, i32* %ret, align 4, !dbg !2045
  %3 = load i32, i32* %ret, align 4, !dbg !2046
  %cmp = icmp slt i32 %3, 0, !dbg !2048
  br i1 %cmp, label %if.then, label %if.end, !dbg !2049

if.then:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.17, i32 0, i32 0)), !dbg !2050
  br label %fail, !dbg !2052

if.end:                                           ; preds = %entry
  %global_opts = getelementptr inbounds %struct.OptionParseContext, %struct.OptionParseContext* %octx, i32 0, i32 0, !dbg !2053
  %call1 = call i32 @parse_optgroup(i8* null, %struct.OptionGroup* %global_opts), !dbg !2054
  store i32 %call1, i32* %ret, align 4, !dbg !2055
  %4 = load i32, i32* %ret, align 4, !dbg !2056
  %cmp2 = icmp slt i32 %4, 0, !dbg !2058
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2059

if.then3:                                         ; preds = %if.end
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0)), !dbg !2060
  br label %fail, !dbg !2062

if.end4:                                          ; preds = %if.end
  call void @term_init(), !dbg !2063
  %groups = getelementptr inbounds %struct.OptionParseContext, %struct.OptionParseContext* %octx, i32 0, i32 1, !dbg !2064
  %5 = load %struct.OptionGroupList*, %struct.OptionGroupList** %groups, align 8, !dbg !2064
  %arrayidx = getelementptr inbounds %struct.OptionGroupList, %struct.OptionGroupList* %5, i64 1, !dbg !2065
  %call5 = call i32 @open_files(%struct.OptionGroupList* %arrayidx, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i32 0, i32 0), i32 (%struct.OptionsContext*, i8*)* @open_input_file), !dbg !2066
  store i32 %call5, i32* %ret, align 4, !dbg !2067
  %6 = load i32, i32* %ret, align 4, !dbg !2068
  %cmp6 = icmp slt i32 %6, 0, !dbg !2070
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2071

if.then7:                                         ; preds = %if.end4
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20, i32 0, i32 0)), !dbg !2072
  br label %fail, !dbg !2074

if.end8:                                          ; preds = %if.end4
  %call9 = call i32 @init_complex_filters(), !dbg !2075
  store i32 %call9, i32* %ret, align 4, !dbg !2076
  %7 = load i32, i32* %ret, align 4, !dbg !2077
  %cmp10 = icmp slt i32 %7, 0, !dbg !2079
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !2080

if.then11:                                        ; preds = %if.end8
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.21, i32 0, i32 0)), !dbg !2081
  br label %fail, !dbg !2083

if.end12:                                         ; preds = %if.end8
  %groups13 = getelementptr inbounds %struct.OptionParseContext, %struct.OptionParseContext* %octx, i32 0, i32 1, !dbg !2084
  %8 = load %struct.OptionGroupList*, %struct.OptionGroupList** %groups13, align 8, !dbg !2084
  %arrayidx14 = getelementptr inbounds %struct.OptionGroupList, %struct.OptionGroupList* %8, i64 0, !dbg !2085
  %call15 = call i32 @open_files(%struct.OptionGroupList* %arrayidx14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), i32 (%struct.OptionsContext*, i8*)* @open_output_file), !dbg !2086
  store i32 %call15, i32* %ret, align 4, !dbg !2087
  %9 = load i32, i32* %ret, align 4, !dbg !2088
  %cmp16 = icmp slt i32 %9, 0, !dbg !2090
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !2091

if.then17:                                        ; preds = %if.end12
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i32 0, i32 0)), !dbg !2092
  br label %fail, !dbg !2094

if.end18:                                         ; preds = %if.end12
  call void @check_filter_outputs(), !dbg !2095
  br label %fail, !dbg !2095

fail:                                             ; preds = %if.end18, %if.then17, %if.then11, %if.then7, %if.then3, %if.then
  call void @uninit_parse_context(%struct.OptionParseContext* %octx), !dbg !2096
  %10 = load i32, i32* %ret, align 4, !dbg !2097
  %cmp19 = icmp slt i32 %10, 0, !dbg !2099
  br i1 %cmp19, label %if.then20, label %if.end23, !dbg !2100

if.then20:                                        ; preds = %fail
  %11 = load i32, i32* %ret, align 4, !dbg !2101
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %error, i32 0, i32 0, !dbg !2103
  %call21 = call i32 @av_strerror(i32 %11, i8* %arraydecay, i64 128), !dbg !2104
  %arraydecay22 = getelementptr inbounds [128 x i8], [128 x i8]* %error, i32 0, i32 0, !dbg !2105
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0), i8* %arraydecay22), !dbg !2106
  br label %if.end23, !dbg !2107

if.end23:                                         ; preds = %if.then20, %fail
  %12 = load i32, i32* %ret, align 4, !dbg !2108
  ret i32 %12, !dbg !2109
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

declare i32 @split_commandline(%struct.OptionParseContext*, i32, i8**, %struct.OptionDef*, %struct.OptionGroupDef*, i32) #3

declare i32 @parse_optgroup(i8*, %struct.OptionGroup*) #3

declare void @term_init() #3

; Function Attrs: nounwind uwtable
define internal i32 @open_files(%struct.OptionGroupList* %l, i8* %inout, i32 (%struct.OptionsContext*, i8*)* %open_file) #0 !dbg !2110 {
entry:
  %retval = alloca i32, align 4
  %l.addr = alloca %struct.OptionGroupList*, align 8
  %inout.addr = alloca i8*, align 8
  %open_file.addr = alloca i32 (%struct.OptionsContext*, i8*)*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %g = alloca %struct.OptionGroup*, align 8
  %o = alloca %struct.OptionsContext, align 8
  store %struct.OptionGroupList* %l, %struct.OptionGroupList** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionGroupList** %l.addr, metadata !2277, metadata !1898), !dbg !2278
  store i8* %inout, i8** %inout.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %inout.addr, metadata !2279, metadata !1898), !dbg !2280
  store i32 (%struct.OptionsContext*, i8*)* %open_file, i32 (%struct.OptionsContext*, i8*)** %open_file.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.OptionsContext*, i8*)** %open_file.addr, metadata !2281, metadata !1898), !dbg !2282
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2283, metadata !1898), !dbg !2284
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2285, metadata !1898), !dbg !2286
  store i32 0, i32* %i, align 4, !dbg !2287
  br label %for.cond, !dbg !2289

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2290
  %1 = load %struct.OptionGroupList*, %struct.OptionGroupList** %l.addr, align 8, !dbg !2293
  %nb_groups = getelementptr inbounds %struct.OptionGroupList, %struct.OptionGroupList* %1, i32 0, i32 2, !dbg !2294
  %2 = load i32, i32* %nb_groups, align 8, !dbg !2294
  %cmp = icmp slt i32 %0, %2, !dbg !2295
  br i1 %cmp, label %for.body, label %for.end, !dbg !2296

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.OptionGroup** %g, metadata !2297, metadata !1898), !dbg !2299
  %3 = load i32, i32* %i, align 4, !dbg !2300
  %idxprom = sext i32 %3 to i64, !dbg !2301
  %4 = load %struct.OptionGroupList*, %struct.OptionGroupList** %l.addr, align 8, !dbg !2301
  %groups = getelementptr inbounds %struct.OptionGroupList, %struct.OptionGroupList* %4, i32 0, i32 1, !dbg !2302
  %5 = load %struct.OptionGroup*, %struct.OptionGroup** %groups, align 8, !dbg !2302
  %arrayidx = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %5, i64 %idxprom, !dbg !2301
  store %struct.OptionGroup* %arrayidx, %struct.OptionGroup** %g, align 8, !dbg !2299
  call void @llvm.dbg.declare(metadata %struct.OptionsContext* %o, metadata !2303, metadata !1898), !dbg !2304
  call void @init_options(%struct.OptionsContext* %o), !dbg !2305
  %6 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !2306
  %g1 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %o, i32 0, i32 0, !dbg !2307
  store %struct.OptionGroup* %6, %struct.OptionGroup** %g1, align 8, !dbg !2308
  %7 = bitcast %struct.OptionsContext* %o to i8*, !dbg !2309
  %8 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !2310
  %call = call i32 @parse_optgroup(i8* %7, %struct.OptionGroup* %8), !dbg !2311
  store i32 %call, i32* %ret, align 4, !dbg !2312
  %9 = load i32, i32* %ret, align 4, !dbg !2313
  %cmp2 = icmp slt i32 %9, 0, !dbg !2315
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2316

if.then:                                          ; preds = %for.body
  %10 = load i8*, i8** %inout.addr, align 8, !dbg !2317
  %11 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !2319
  %arg = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %11, i32 0, i32 1, !dbg !2320
  %12 = load i8*, i8** %arg, align 8, !dbg !2320
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.426, i32 0, i32 0), i8* %10, i8* %12), !dbg !2321
  %13 = load i32, i32* %ret, align 4, !dbg !2322
  store i32 %13, i32* %retval, align 4, !dbg !2323
  br label %return, !dbg !2323

if.end:                                           ; preds = %for.body
  %14 = load i8*, i8** %inout.addr, align 8, !dbg !2324
  %15 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !2325
  %arg3 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %15, i32 0, i32 1, !dbg !2326
  %16 = load i8*, i8** %arg3, align 8, !dbg !2326
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 48, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.427, i32 0, i32 0), i8* %14, i8* %16), !dbg !2327
  %17 = load i32 (%struct.OptionsContext*, i8*)*, i32 (%struct.OptionsContext*, i8*)** %open_file.addr, align 8, !dbg !2328
  %18 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !2329
  %arg4 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %18, i32 0, i32 1, !dbg !2330
  %19 = load i8*, i8** %arg4, align 8, !dbg !2330
  %call5 = call i32 %17(%struct.OptionsContext* %o, i8* %19), !dbg !2328
  store i32 %call5, i32* %ret, align 4, !dbg !2331
  call void @uninit_options(%struct.OptionsContext* %o), !dbg !2332
  %20 = load i32, i32* %ret, align 4, !dbg !2333
  %cmp6 = icmp slt i32 %20, 0, !dbg !2335
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !2336

if.then7:                                         ; preds = %if.end
  %21 = load i8*, i8** %inout.addr, align 8, !dbg !2337
  %22 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !2339
  %arg8 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %22, i32 0, i32 1, !dbg !2340
  %23 = load i8*, i8** %arg8, align 8, !dbg !2340
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.428, i32 0, i32 0), i8* %21, i8* %23), !dbg !2341
  %24 = load i32, i32* %ret, align 4, !dbg !2342
  store i32 %24, i32* %retval, align 4, !dbg !2343
  br label %return, !dbg !2343

if.end9:                                          ; preds = %if.end
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 48, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.429, i32 0, i32 0)), !dbg !2344
  br label %for.inc, !dbg !2345

for.inc:                                          ; preds = %if.end9
  %25 = load i32, i32* %i, align 4, !dbg !2346
  %inc = add nsw i32 %25, 1, !dbg !2346
  store i32 %inc, i32* %i, align 4, !dbg !2346
  br label %for.cond, !dbg !2348, !llvm.loop !2349

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !2351
  br label %return, !dbg !2351

return:                                           ; preds = %for.end, %if.then7, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !2352
  ret i32 %26, !dbg !2352
}

; Function Attrs: nounwind uwtable
define internal i32 @open_input_file(%struct.OptionsContext* %o, i8* %filename) #0 !dbg !2353 {
entry:
  %o.addr = alloca %struct.OptionsContext*, align 8
  %filename.addr = alloca i8*, align 8
  %f = alloca %struct.InputFile*, align 8
  %ic = alloca %struct.AVFormatContext*, align 8
  %file_iformat = alloca %struct.AVInputFormat*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %timestamp = alloca i64, align 8
  %unused_opts = alloca %struct.AVDictionary*, align 8
  %e = alloca %struct.AVDictionaryEntry*, align 8
  %video_codec_name = alloca i8*, align 8
  %audio_codec_name = alloca i8*, align 8
  %subtitle_codec_name = alloca i8*, align 8
  %data_codec_name = alloca i8*, align 8
  %scan_all_pmts_set = alloca i32, align 4
  %start_time = alloca i64, align 8
  %i112 = alloca i32, align 4
  %spec = alloca i8*, align 8
  %i126 = alloca i32, align 4
  %spec132 = alloca i8*, align 8
  %i149 = alloca i32, align 4
  %spec155 = alloca i8*, align 8
  %i172 = alloca i32, align 4
  %spec178 = alloca i8*, align 8
  %opts = alloca %struct.AVDictionary**, align 8
  %orig_nb_streams = alloca i32, align 4
  %seek_timestamp364 = alloca i64, align 8
  %dts_heuristic = alloca i32, align 4
  %par = alloca %struct.AVCodecParameters*, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  %class = alloca %struct.AVClass*, align 8
  %option = alloca %struct.AVOption*, align 8
  %fclass = alloca %struct.AVClass*, align 8
  %foption = alloca %struct.AVOption*, align 8
  %j = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !2354, metadata !1898), !dbg !2355
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !2356, metadata !1898), !dbg !2357
  call void @llvm.dbg.declare(metadata %struct.InputFile** %f, metadata !2358, metadata !1898), !dbg !2919
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %ic, metadata !2920, metadata !1898), !dbg !2921
  call void @llvm.dbg.declare(metadata %struct.AVInputFormat** %file_iformat, metadata !2922, metadata !1898), !dbg !2925
  store %struct.AVInputFormat* null, %struct.AVInputFormat** %file_iformat, align 8, !dbg !2925
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2926, metadata !1898), !dbg !2927
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2928, metadata !1898), !dbg !2929
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2930, metadata !1898), !dbg !2931
  call void @llvm.dbg.declare(metadata i64* %timestamp, metadata !2932, metadata !1898), !dbg !2933
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %unused_opts, metadata !2934, metadata !1898), !dbg !2935
  store %struct.AVDictionary* null, %struct.AVDictionary** %unused_opts, align 8, !dbg !2935
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %e, metadata !2936, metadata !1898), !dbg !2943
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %e, align 8, !dbg !2943
  call void @llvm.dbg.declare(metadata i8** %video_codec_name, metadata !2944, metadata !1898), !dbg !2945
  store i8* null, i8** %video_codec_name, align 8, !dbg !2945
  call void @llvm.dbg.declare(metadata i8** %audio_codec_name, metadata !2946, metadata !1898), !dbg !2947
  store i8* null, i8** %audio_codec_name, align 8, !dbg !2947
  call void @llvm.dbg.declare(metadata i8** %subtitle_codec_name, metadata !2948, metadata !1898), !dbg !2949
  store i8* null, i8** %subtitle_codec_name, align 8, !dbg !2949
  call void @llvm.dbg.declare(metadata i8** %data_codec_name, metadata !2950, metadata !1898), !dbg !2951
  store i8* null, i8** %data_codec_name, align 8, !dbg !2951
  call void @llvm.dbg.declare(metadata i32* %scan_all_pmts_set, metadata !2952, metadata !1898), !dbg !2953
  store i32 0, i32* %scan_all_pmts_set, align 4, !dbg !2953
  %0 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !2954
  %stop_time = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %0, i32 0, i32 45, !dbg !2956
  %1 = load i64, i64* %stop_time, align 8, !dbg !2956
  %cmp = icmp ne i64 %1, 9223372036854775807, !dbg !2957
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2958

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !2959
  %recording_time = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %2, i32 0, i32 44, !dbg !2961
  %3 = load i64, i64* %recording_time, align 8, !dbg !2961
  %cmp1 = icmp ne i64 %3, 9223372036854775807, !dbg !2962
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2963

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !2964
  %stop_time2 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %4, i32 0, i32 45, !dbg !2966
  store i64 9223372036854775807, i64* %stop_time2, align 8, !dbg !2967
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.430, i32 0, i32 0)), !dbg !2968
  br label %if.end, !dbg !2969

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !2970
  %stop_time3 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %5, i32 0, i32 45, !dbg !2972
  %6 = load i64, i64* %stop_time3, align 8, !dbg !2972
  %cmp4 = icmp ne i64 %6, 9223372036854775807, !dbg !2973
  br i1 %cmp4, label %land.lhs.true5, label %if.end18, !dbg !2974

land.lhs.true5:                                   ; preds = %if.end
  %7 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !2975
  %recording_time6 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %7, i32 0, i32 44, !dbg !2977
  %8 = load i64, i64* %recording_time6, align 8, !dbg !2977
  %cmp7 = icmp eq i64 %8, 9223372036854775807, !dbg !2978
  br i1 %cmp7, label %if.then8, label %if.end18, !dbg !2979

if.then8:                                         ; preds = %land.lhs.true5
  call void @llvm.dbg.declare(metadata i64* %start_time, metadata !2980, metadata !1898), !dbg !2982
  %9 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !2983
  %start_time9 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %9, i32 0, i32 1, !dbg !2984
  %10 = load i64, i64* %start_time9, align 8, !dbg !2984
  %cmp10 = icmp eq i64 %10, -9223372036854775808, !dbg !2985
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !2983

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !2986

cond.false:                                       ; preds = %if.then8
  %11 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !2988
  %start_time11 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %11, i32 0, i32 1, !dbg !2990
  %12 = load i64, i64* %start_time11, align 8, !dbg !2990
  br label %cond.end, !dbg !2991

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %12, %cond.false ], !dbg !2992
  store i64 %cond, i64* %start_time, align 8, !dbg !2994
  %13 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !2995
  %stop_time12 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %13, i32 0, i32 45, !dbg !2997
  %14 = load i64, i64* %stop_time12, align 8, !dbg !2997
  %15 = load i64, i64* %start_time, align 8, !dbg !2998
  %cmp13 = icmp sle i64 %14, %15, !dbg !2999
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !3000

if.then14:                                        ; preds = %cond.end
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.431, i32 0, i32 0)), !dbg !3001
  call void @exit_program(i32 1) #11, !dbg !3003
  unreachable, !dbg !3003

if.else:                                          ; preds = %cond.end
  %16 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3004
  %stop_time15 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %16, i32 0, i32 45, !dbg !3006
  %17 = load i64, i64* %stop_time15, align 8, !dbg !3006
  %18 = load i64, i64* %start_time, align 8, !dbg !3007
  %sub = sub nsw i64 %17, %18, !dbg !3008
  %19 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3009
  %recording_time16 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %19, i32 0, i32 44, !dbg !3010
  store i64 %sub, i64* %recording_time16, align 8, !dbg !3011
  br label %if.end17

if.end17:                                         ; preds = %if.else
  br label %if.end18, !dbg !3012

if.end18:                                         ; preds = %if.end17, %land.lhs.true5, %if.end
  %20 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3013
  %format = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %20, i32 0, i32 4, !dbg !3015
  %21 = load i8*, i8** %format, align 8, !dbg !3015
  %tobool = icmp ne i8* %21, null, !dbg !3013
  br i1 %tobool, label %if.then19, label %if.end25, !dbg !3016

if.then19:                                        ; preds = %if.end18
  %22 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3017
  %format20 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %22, i32 0, i32 4, !dbg !3020
  %23 = load i8*, i8** %format20, align 8, !dbg !3020
  %call = call %struct.AVInputFormat* @av_find_input_format(i8* %23), !dbg !3021
  store %struct.AVInputFormat* %call, %struct.AVInputFormat** %file_iformat, align 8, !dbg !3022
  %tobool21 = icmp ne %struct.AVInputFormat* %call, null, !dbg !3022
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !3023

if.then22:                                        ; preds = %if.then19
  %24 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3024
  %format23 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %24, i32 0, i32 4, !dbg !3026
  %25 = load i8*, i8** %format23, align 8, !dbg !3026
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.432, i32 0, i32 0), i8* %25), !dbg !3027
  call void @exit_program(i32 1) #11, !dbg !3028
  unreachable, !dbg !3028

if.end24:                                         ; preds = %if.then19
  br label %if.end25, !dbg !3029

if.end25:                                         ; preds = %if.end24, %if.end18
  %26 = load i8*, i8** %filename.addr, align 8, !dbg !3030
  %call26 = call i32 @strcmp(i8* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.433, i32 0, i32 0)) #10, !dbg !3032
  %tobool27 = icmp ne i32 %call26, 0, !dbg !3032
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !3033

if.then28:                                        ; preds = %if.end25
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.434, i32 0, i32 0), i8** %filename.addr, align 8, !dbg !3034
  br label %if.end29, !dbg !3035

if.end29:                                         ; preds = %if.then28, %if.end25
  %27 = load i8*, i8** %filename.addr, align 8, !dbg !3036
  %call30 = call i32 @strncmp(i8* %27, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.434, i32 0, i32 0), i64 5) #10, !dbg !3037
  %tobool31 = icmp ne i32 %call30, 0, !dbg !3037
  br i1 %tobool31, label %land.rhs, label %land.end, !dbg !3038

land.rhs:                                         ; preds = %if.end29
  %28 = load i8*, i8** %filename.addr, align 8, !dbg !3039
  %call32 = call i32 @strcmp(i8* %28, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.435, i32 0, i32 0)) #10, !dbg !3040
  %tobool33 = icmp ne i32 %call32, 0, !dbg !3041
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end29
  %29 = phi i1 [ false, %if.end29 ], [ %tobool33, %land.rhs ]
  %land.ext = zext i1 %29 to i32, !dbg !3043
  %30 = load i32, i32* @stdin_interaction, align 4, !dbg !3045
  %and = and i32 %30, %land.ext, !dbg !3045
  store i32 %and, i32* @stdin_interaction, align 4, !dbg !3045
  %call34 = call %struct.AVFormatContext* @avformat_alloc_context(), !dbg !3046
  store %struct.AVFormatContext* %call34, %struct.AVFormatContext** %ic, align 8, !dbg !3047
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3048
  %tobool35 = icmp ne %struct.AVFormatContext* %31, null, !dbg !3048
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !3050

if.then36:                                        ; preds = %land.end
  %32 = load i8*, i8** %filename.addr, align 8, !dbg !3051
  call void @print_error(i8* %32, i32 -12), !dbg !3053
  call void @exit_program(i32 1) #11, !dbg !3054
  unreachable, !dbg !3054

if.end37:                                         ; preds = %land.end
  %33 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3055
  %nb_audio_sample_rate = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %33, i32 0, i32 10, !dbg !3057
  %34 = load i32, i32* %nb_audio_sample_rate, align 8, !dbg !3057
  %tobool38 = icmp ne i32 %34, 0, !dbg !3055
  br i1 %tobool38, label %if.then39, label %if.end44, !dbg !3058

if.then39:                                        ; preds = %if.end37
  %35 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3059
  %g = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %35, i32 0, i32 0, !dbg !3061
  %36 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !3061
  %format_opts = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %36, i32 0, i32 5, !dbg !3062
  %37 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3063
  %nb_audio_sample_rate40 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %37, i32 0, i32 10, !dbg !3064
  %38 = load i32, i32* %nb_audio_sample_rate40, align 8, !dbg !3064
  %sub41 = sub nsw i32 %38, 1, !dbg !3065
  %idxprom = sext i32 %sub41 to i64, !dbg !3066
  %39 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3066
  %audio_sample_rate = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %39, i32 0, i32 9, !dbg !3067
  %40 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %audio_sample_rate, align 8, !dbg !3067
  %arrayidx = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %40, i64 %idxprom, !dbg !3066
  %u = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx, i32 0, i32 1, !dbg !3068
  %i42 = bitcast %union.anon.1* %u to i32*, !dbg !3069
  %41 = load i32, i32* %i42, align 8, !dbg !3069
  %conv = sext i32 %41 to i64, !dbg !3066
  %call43 = call i32 @av_dict_set_int(%struct.AVDictionary** %format_opts, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.436, i32 0, i32 0), i64 %conv, i32 0), !dbg !3070
  br label %if.end44, !dbg !3071

if.end44:                                         ; preds = %if.then39, %if.end37
  %42 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3072
  %nb_audio_channels = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %42, i32 0, i32 8, !dbg !3074
  %43 = load i32, i32* %nb_audio_channels, align 8, !dbg !3074
  %tobool45 = icmp ne i32 %43, 0, !dbg !3072
  br i1 %tobool45, label %if.then46, label %if.end66, !dbg !3075

if.then46:                                        ; preds = %if.end44
  %44 = load %struct.AVInputFormat*, %struct.AVInputFormat** %file_iformat, align 8, !dbg !3076
  %tobool47 = icmp ne %struct.AVInputFormat* %44, null, !dbg !3076
  br i1 %tobool47, label %land.lhs.true48, label %if.end65, !dbg !3079

land.lhs.true48:                                  ; preds = %if.then46
  %45 = load %struct.AVInputFormat*, %struct.AVInputFormat** %file_iformat, align 8, !dbg !3080
  %priv_class = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %45, i32 0, i32 5, !dbg !3082
  %46 = load %struct.AVClass*, %struct.AVClass** %priv_class, align 8, !dbg !3082
  %tobool49 = icmp ne %struct.AVClass* %46, null, !dbg !3080
  br i1 %tobool49, label %land.lhs.true50, label %if.end65, !dbg !3083

land.lhs.true50:                                  ; preds = %land.lhs.true48
  %47 = load %struct.AVInputFormat*, %struct.AVInputFormat** %file_iformat, align 8, !dbg !3084
  %priv_class51 = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %47, i32 0, i32 5, !dbg !3085
  %48 = bitcast %struct.AVClass** %priv_class51 to i8*, !dbg !3086
  %call52 = call %struct.AVOption* @av_opt_find(i8* %48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.345, i32 0, i32 0), i8* null, i32 0, i32 2), !dbg !3087
  %tobool53 = icmp ne %struct.AVOption* %call52, null, !dbg !3087
  br i1 %tobool53, label %if.then54, label %if.end65, !dbg !3088

if.then54:                                        ; preds = %land.lhs.true50
  %49 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3090
  %g55 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %49, i32 0, i32 0, !dbg !3092
  %50 = load %struct.OptionGroup*, %struct.OptionGroup** %g55, align 8, !dbg !3092
  %format_opts56 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %50, i32 0, i32 5, !dbg !3093
  %51 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3094
  %nb_audio_channels57 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %51, i32 0, i32 8, !dbg !3095
  %52 = load i32, i32* %nb_audio_channels57, align 8, !dbg !3095
  %sub58 = sub nsw i32 %52, 1, !dbg !3096
  %idxprom59 = sext i32 %sub58 to i64, !dbg !3097
  %53 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3097
  %audio_channels = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %53, i32 0, i32 7, !dbg !3098
  %54 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %audio_channels, align 8, !dbg !3098
  %arrayidx60 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %54, i64 %idxprom59, !dbg !3097
  %u61 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx60, i32 0, i32 1, !dbg !3099
  %i62 = bitcast %union.anon.1* %u61 to i32*, !dbg !3100
  %55 = load i32, i32* %i62, align 8, !dbg !3100
  %conv63 = sext i32 %55 to i64, !dbg !3097
  %call64 = call i32 @av_dict_set_int(%struct.AVDictionary** %format_opts56, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.345, i32 0, i32 0), i64 %conv63, i32 0), !dbg !3101
  br label %if.end65, !dbg !3102

if.end65:                                         ; preds = %if.then54, %land.lhs.true50, %land.lhs.true48, %if.then46
  br label %if.end66, !dbg !3103

if.end66:                                         ; preds = %if.end65, %if.end44
  %56 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3104
  %nb_frame_rates = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %56, i32 0, i32 12, !dbg !3106
  %57 = load i32, i32* %nb_frame_rates, align 8, !dbg !3106
  %tobool67 = icmp ne i32 %57, 0, !dbg !3104
  br i1 %tobool67, label %if.then68, label %if.end87, !dbg !3107

if.then68:                                        ; preds = %if.end66
  %58 = load %struct.AVInputFormat*, %struct.AVInputFormat** %file_iformat, align 8, !dbg !3108
  %tobool69 = icmp ne %struct.AVInputFormat* %58, null, !dbg !3108
  br i1 %tobool69, label %land.lhs.true70, label %if.end86, !dbg !3111

land.lhs.true70:                                  ; preds = %if.then68
  %59 = load %struct.AVInputFormat*, %struct.AVInputFormat** %file_iformat, align 8, !dbg !3112
  %priv_class71 = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %59, i32 0, i32 5, !dbg !3114
  %60 = load %struct.AVClass*, %struct.AVClass** %priv_class71, align 8, !dbg !3114
  %tobool72 = icmp ne %struct.AVClass* %60, null, !dbg !3112
  br i1 %tobool72, label %land.lhs.true73, label %if.end86, !dbg !3115

land.lhs.true73:                                  ; preds = %land.lhs.true70
  %61 = load %struct.AVInputFormat*, %struct.AVInputFormat** %file_iformat, align 8, !dbg !3116
  %priv_class74 = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %61, i32 0, i32 5, !dbg !3117
  %62 = bitcast %struct.AVClass** %priv_class74 to i8*, !dbg !3118
  %call75 = call %struct.AVOption* @av_opt_find(i8* %62, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.437, i32 0, i32 0), i8* null, i32 0, i32 2), !dbg !3119
  %tobool76 = icmp ne %struct.AVOption* %call75, null, !dbg !3119
  br i1 %tobool76, label %if.then77, label %if.end86, !dbg !3120

if.then77:                                        ; preds = %land.lhs.true73
  %63 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3122
  %g78 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %63, i32 0, i32 0, !dbg !3124
  %64 = load %struct.OptionGroup*, %struct.OptionGroup** %g78, align 8, !dbg !3124
  %format_opts79 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %64, i32 0, i32 5, !dbg !3125
  %65 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3126
  %nb_frame_rates80 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %65, i32 0, i32 12, !dbg !3127
  %66 = load i32, i32* %nb_frame_rates80, align 8, !dbg !3127
  %sub81 = sub nsw i32 %66, 1, !dbg !3128
  %idxprom82 = sext i32 %sub81 to i64, !dbg !3129
  %67 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3129
  %frame_rates = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %67, i32 0, i32 11, !dbg !3130
  %68 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_rates, align 8, !dbg !3130
  %arrayidx83 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %68, i64 %idxprom82, !dbg !3129
  %u84 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx83, i32 0, i32 1, !dbg !3131
  %str = bitcast %union.anon.1* %u84 to i8**, !dbg !3132
  %69 = load i8*, i8** %str, align 8, !dbg !3132
  %call85 = call i32 @av_dict_set(%struct.AVDictionary** %format_opts79, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.437, i32 0, i32 0), i8* %69, i32 0), !dbg !3133
  br label %if.end86, !dbg !3134

if.end86:                                         ; preds = %if.then77, %land.lhs.true73, %land.lhs.true70, %if.then68
  br label %if.end87, !dbg !3135

if.end87:                                         ; preds = %if.end86, %if.end66
  %70 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3136
  %nb_frame_sizes = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %70, i32 0, i32 14, !dbg !3138
  %71 = load i32, i32* %nb_frame_sizes, align 8, !dbg !3138
  %tobool88 = icmp ne i32 %71, 0, !dbg !3136
  br i1 %tobool88, label %if.then89, label %if.end99, !dbg !3139

if.then89:                                        ; preds = %if.end87
  %72 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3140
  %g90 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %72, i32 0, i32 0, !dbg !3142
  %73 = load %struct.OptionGroup*, %struct.OptionGroup** %g90, align 8, !dbg !3142
  %format_opts91 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %73, i32 0, i32 5, !dbg !3143
  %74 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3144
  %nb_frame_sizes92 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %74, i32 0, i32 14, !dbg !3145
  %75 = load i32, i32* %nb_frame_sizes92, align 8, !dbg !3145
  %sub93 = sub nsw i32 %75, 1, !dbg !3146
  %idxprom94 = sext i32 %sub93 to i64, !dbg !3147
  %76 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3147
  %frame_sizes = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %76, i32 0, i32 13, !dbg !3148
  %77 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_sizes, align 8, !dbg !3148
  %arrayidx95 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %77, i64 %idxprom94, !dbg !3147
  %u96 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx95, i32 0, i32 1, !dbg !3149
  %str97 = bitcast %union.anon.1* %u96 to i8**, !dbg !3150
  %78 = load i8*, i8** %str97, align 8, !dbg !3150
  %call98 = call i32 @av_dict_set(%struct.AVDictionary** %format_opts91, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.438, i32 0, i32 0), i8* %78, i32 0), !dbg !3151
  br label %if.end99, !dbg !3152

if.end99:                                         ; preds = %if.then89, %if.end87
  %79 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3153
  %nb_frame_pix_fmts = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %79, i32 0, i32 16, !dbg !3155
  %80 = load i32, i32* %nb_frame_pix_fmts, align 8, !dbg !3155
  %tobool100 = icmp ne i32 %80, 0, !dbg !3153
  br i1 %tobool100, label %if.then101, label %if.end111, !dbg !3156

if.then101:                                       ; preds = %if.end99
  %81 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3157
  %g102 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %81, i32 0, i32 0, !dbg !3158
  %82 = load %struct.OptionGroup*, %struct.OptionGroup** %g102, align 8, !dbg !3158
  %format_opts103 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %82, i32 0, i32 5, !dbg !3159
  %83 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3160
  %nb_frame_pix_fmts104 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %83, i32 0, i32 16, !dbg !3161
  %84 = load i32, i32* %nb_frame_pix_fmts104, align 8, !dbg !3161
  %sub105 = sub nsw i32 %84, 1, !dbg !3162
  %idxprom106 = sext i32 %sub105 to i64, !dbg !3163
  %85 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3163
  %frame_pix_fmts = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %85, i32 0, i32 15, !dbg !3164
  %86 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_pix_fmts, align 8, !dbg !3164
  %arrayidx107 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %86, i64 %idxprom106, !dbg !3163
  %u108 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx107, i32 0, i32 1, !dbg !3165
  %str109 = bitcast %union.anon.1* %u108 to i8**, !dbg !3166
  %87 = load i8*, i8** %str109, align 8, !dbg !3166
  %call110 = call i32 @av_dict_set(%struct.AVDictionary** %format_opts103, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.439, i32 0, i32 0), i8* %87, i32 0), !dbg !3167
  br label %if.end111, !dbg !3167

if.end111:                                        ; preds = %if.then101, %if.end99
  call void @llvm.dbg.declare(metadata i32* %i112, metadata !3168, metadata !1898), !dbg !3170
  store i32 0, i32* %i112, align 4, !dbg !3171
  br label %for.cond, !dbg !3173

for.cond:                                         ; preds = %for.inc, %if.end111
  %88 = load i32, i32* %i112, align 4, !dbg !3174
  %89 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3177
  %nb_codec_names = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %89, i32 0, i32 6, !dbg !3178
  %90 = load i32, i32* %nb_codec_names, align 8, !dbg !3178
  %cmp113 = icmp slt i32 %88, %90, !dbg !3179
  br i1 %cmp113, label %for.body, label %for.end, !dbg !3180

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %spec, metadata !3181, metadata !1898), !dbg !3183
  %91 = load i32, i32* %i112, align 4, !dbg !3184
  %idxprom115 = sext i32 %91 to i64, !dbg !3186
  %92 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3186
  %codec_names = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %92, i32 0, i32 5, !dbg !3187
  %93 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names, align 8, !dbg !3187
  %arrayidx116 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %93, i64 %idxprom115, !dbg !3186
  %specifier = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx116, i32 0, i32 0, !dbg !3188
  %94 = load i8*, i8** %specifier, align 8, !dbg !3188
  store i8* %94, i8** %spec, align 8, !dbg !3189
  %95 = load i8*, i8** %spec, align 8, !dbg !3190
  %call117 = call i32 @strcmp(i8* %95, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i32 0, i32 0)) #10, !dbg !3191
  %tobool118 = icmp ne i32 %call117, 0, !dbg !3191
  br i1 %tobool118, label %if.end125, label %if.then119, !dbg !3192

if.then119:                                       ; preds = %for.body
  %96 = load i32, i32* %i112, align 4, !dbg !3193
  %idxprom120 = sext i32 %96 to i64, !dbg !3196
  %97 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3196
  %codec_names121 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %97, i32 0, i32 5, !dbg !3197
  %98 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names121, align 8, !dbg !3197
  %arrayidx122 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %98, i64 %idxprom120, !dbg !3196
  %u123 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx122, i32 0, i32 1, !dbg !3198
  %str124 = bitcast %union.anon.1* %u123 to i8**, !dbg !3199
  %99 = load i8*, i8** %str124, align 8, !dbg !3199
  store i8* %99, i8** %video_codec_name, align 8, !dbg !3200
  br label %if.end125, !dbg !3201

if.end125:                                        ; preds = %if.then119, %for.body
  br label %for.inc, !dbg !3202

for.inc:                                          ; preds = %if.end125
  %100 = load i32, i32* %i112, align 4, !dbg !3204
  %inc = add nsw i32 %100, 1, !dbg !3204
  store i32 %inc, i32* %i112, align 4, !dbg !3204
  br label %for.cond, !dbg !3206, !llvm.loop !3207

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i126, metadata !3209, metadata !1898), !dbg !3211
  store i32 0, i32* %i126, align 4, !dbg !3212
  br label %for.cond127, !dbg !3214

for.cond127:                                      ; preds = %for.inc146, %for.end
  %101 = load i32, i32* %i126, align 4, !dbg !3215
  %102 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3218
  %nb_codec_names128 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %102, i32 0, i32 6, !dbg !3219
  %103 = load i32, i32* %nb_codec_names128, align 8, !dbg !3219
  %cmp129 = icmp slt i32 %101, %103, !dbg !3220
  br i1 %cmp129, label %for.body131, label %for.end148, !dbg !3221

for.body131:                                      ; preds = %for.cond127
  call void @llvm.dbg.declare(metadata i8** %spec132, metadata !3222, metadata !1898), !dbg !3224
  %104 = load i32, i32* %i126, align 4, !dbg !3225
  %idxprom133 = sext i32 %104 to i64, !dbg !3227
  %105 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3227
  %codec_names134 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %105, i32 0, i32 5, !dbg !3228
  %106 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names134, align 8, !dbg !3228
  %arrayidx135 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %106, i64 %idxprom133, !dbg !3227
  %specifier136 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx135, i32 0, i32 0, !dbg !3229
  %107 = load i8*, i8** %specifier136, align 8, !dbg !3229
  store i8* %107, i8** %spec132, align 8, !dbg !3230
  %108 = load i8*, i8** %spec132, align 8, !dbg !3231
  %call137 = call i32 @strcmp(i8* %108, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.440, i32 0, i32 0)) #10, !dbg !3232
  %tobool138 = icmp ne i32 %call137, 0, !dbg !3232
  br i1 %tobool138, label %if.end145, label %if.then139, !dbg !3233

if.then139:                                       ; preds = %for.body131
  %109 = load i32, i32* %i126, align 4, !dbg !3234
  %idxprom140 = sext i32 %109 to i64, !dbg !3237
  %110 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3237
  %codec_names141 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %110, i32 0, i32 5, !dbg !3238
  %111 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names141, align 8, !dbg !3238
  %arrayidx142 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %111, i64 %idxprom140, !dbg !3237
  %u143 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx142, i32 0, i32 1, !dbg !3239
  %str144 = bitcast %union.anon.1* %u143 to i8**, !dbg !3240
  %112 = load i8*, i8** %str144, align 8, !dbg !3240
  store i8* %112, i8** %audio_codec_name, align 8, !dbg !3241
  br label %if.end145, !dbg !3242

if.end145:                                        ; preds = %if.then139, %for.body131
  br label %for.inc146, !dbg !3243

for.inc146:                                       ; preds = %if.end145
  %113 = load i32, i32* %i126, align 4, !dbg !3245
  %inc147 = add nsw i32 %113, 1, !dbg !3245
  store i32 %inc147, i32* %i126, align 4, !dbg !3245
  br label %for.cond127, !dbg !3247, !llvm.loop !3248

for.end148:                                       ; preds = %for.cond127
  call void @llvm.dbg.declare(metadata i32* %i149, metadata !3250, metadata !1898), !dbg !3252
  store i32 0, i32* %i149, align 4, !dbg !3253
  br label %for.cond150, !dbg !3255

for.cond150:                                      ; preds = %for.inc169, %for.end148
  %114 = load i32, i32* %i149, align 4, !dbg !3256
  %115 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3259
  %nb_codec_names151 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %115, i32 0, i32 6, !dbg !3260
  %116 = load i32, i32* %nb_codec_names151, align 8, !dbg !3260
  %cmp152 = icmp slt i32 %114, %116, !dbg !3261
  br i1 %cmp152, label %for.body154, label %for.end171, !dbg !3262

for.body154:                                      ; preds = %for.cond150
  call void @llvm.dbg.declare(metadata i8** %spec155, metadata !3263, metadata !1898), !dbg !3265
  %117 = load i32, i32* %i149, align 4, !dbg !3266
  %idxprom156 = sext i32 %117 to i64, !dbg !3268
  %118 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3268
  %codec_names157 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %118, i32 0, i32 5, !dbg !3269
  %119 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names157, align 8, !dbg !3269
  %arrayidx158 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %119, i64 %idxprom156, !dbg !3268
  %specifier159 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx158, i32 0, i32 0, !dbg !3270
  %120 = load i8*, i8** %specifier159, align 8, !dbg !3270
  store i8* %120, i8** %spec155, align 8, !dbg !3271
  %121 = load i8*, i8** %spec155, align 8, !dbg !3272
  %call160 = call i32 @strcmp(i8* %121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.257, i32 0, i32 0)) #10, !dbg !3273
  %tobool161 = icmp ne i32 %call160, 0, !dbg !3273
  br i1 %tobool161, label %if.end168, label %if.then162, !dbg !3274

if.then162:                                       ; preds = %for.body154
  %122 = load i32, i32* %i149, align 4, !dbg !3275
  %idxprom163 = sext i32 %122 to i64, !dbg !3278
  %123 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3278
  %codec_names164 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %123, i32 0, i32 5, !dbg !3279
  %124 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names164, align 8, !dbg !3279
  %arrayidx165 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %124, i64 %idxprom163, !dbg !3278
  %u166 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx165, i32 0, i32 1, !dbg !3280
  %str167 = bitcast %union.anon.1* %u166 to i8**, !dbg !3281
  %125 = load i8*, i8** %str167, align 8, !dbg !3281
  store i8* %125, i8** %subtitle_codec_name, align 8, !dbg !3282
  br label %if.end168, !dbg !3283

if.end168:                                        ; preds = %if.then162, %for.body154
  br label %for.inc169, !dbg !3284

for.inc169:                                       ; preds = %if.end168
  %126 = load i32, i32* %i149, align 4, !dbg !3286
  %inc170 = add nsw i32 %126, 1, !dbg !3286
  store i32 %inc170, i32* %i149, align 4, !dbg !3286
  br label %for.cond150, !dbg !3288, !llvm.loop !3289

for.end171:                                       ; preds = %for.cond150
  call void @llvm.dbg.declare(metadata i32* %i172, metadata !3291, metadata !1898), !dbg !3293
  store i32 0, i32* %i172, align 4, !dbg !3294
  br label %for.cond173, !dbg !3296

for.cond173:                                      ; preds = %for.inc192, %for.end171
  %127 = load i32, i32* %i172, align 4, !dbg !3297
  %128 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3300
  %nb_codec_names174 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %128, i32 0, i32 6, !dbg !3301
  %129 = load i32, i32* %nb_codec_names174, align 8, !dbg !3301
  %cmp175 = icmp slt i32 %127, %129, !dbg !3302
  br i1 %cmp175, label %for.body177, label %for.end194, !dbg !3303

for.body177:                                      ; preds = %for.cond173
  call void @llvm.dbg.declare(metadata i8** %spec178, metadata !3304, metadata !1898), !dbg !3306
  %130 = load i32, i32* %i172, align 4, !dbg !3307
  %idxprom179 = sext i32 %130 to i64, !dbg !3309
  %131 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3309
  %codec_names180 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %131, i32 0, i32 5, !dbg !3310
  %132 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names180, align 8, !dbg !3310
  %arrayidx181 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %132, i64 %idxprom179, !dbg !3309
  %specifier182 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx181, i32 0, i32 0, !dbg !3311
  %133 = load i8*, i8** %specifier182, align 8, !dbg !3311
  store i8* %133, i8** %spec178, align 8, !dbg !3312
  %134 = load i8*, i8** %spec178, align 8, !dbg !3313
  %call183 = call i32 @strcmp(i8* %134, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.441, i32 0, i32 0)) #10, !dbg !3314
  %tobool184 = icmp ne i32 %call183, 0, !dbg !3314
  br i1 %tobool184, label %if.end191, label %if.then185, !dbg !3315

if.then185:                                       ; preds = %for.body177
  %135 = load i32, i32* %i172, align 4, !dbg !3316
  %idxprom186 = sext i32 %135 to i64, !dbg !3319
  %136 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3319
  %codec_names187 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %136, i32 0, i32 5, !dbg !3320
  %137 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names187, align 8, !dbg !3320
  %arrayidx188 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %137, i64 %idxprom186, !dbg !3319
  %u189 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx188, i32 0, i32 1, !dbg !3321
  %str190 = bitcast %union.anon.1* %u189 to i8**, !dbg !3322
  %138 = load i8*, i8** %str190, align 8, !dbg !3322
  store i8* %138, i8** %data_codec_name, align 8, !dbg !3323
  br label %if.end191, !dbg !3324

if.end191:                                        ; preds = %if.then185, %for.body177
  br label %for.inc192, !dbg !3325

for.inc192:                                       ; preds = %if.end191
  %139 = load i32, i32* %i172, align 4, !dbg !3327
  %inc193 = add nsw i32 %139, 1, !dbg !3327
  store i32 %inc193, i32* %i172, align 4, !dbg !3327
  br label %for.cond173, !dbg !3329, !llvm.loop !3330

for.end194:                                       ; preds = %for.cond173
  %140 = load i8*, i8** %video_codec_name, align 8, !dbg !3332
  %tobool195 = icmp ne i8* %140, null, !dbg !3332
  br i1 %tobool195, label %if.then196, label %if.end198, !dbg !3334

if.then196:                                       ; preds = %for.end194
  %141 = load i8*, i8** %video_codec_name, align 8, !dbg !3335
  %call197 = call %struct.AVCodec* @find_codec_or_die(i8* %141, i32 0, i32 0), !dbg !3336
  %142 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3337
  %video_codec = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %142, i32 0, i32 57, !dbg !3338
  store %struct.AVCodec* %call197, %struct.AVCodec** %video_codec, align 8, !dbg !3339
  br label %if.end198, !dbg !3337

if.end198:                                        ; preds = %if.then196, %for.end194
  %143 = load i8*, i8** %audio_codec_name, align 8, !dbg !3340
  %tobool199 = icmp ne i8* %143, null, !dbg !3340
  br i1 %tobool199, label %if.then200, label %if.end202, !dbg !3342

if.then200:                                       ; preds = %if.end198
  %144 = load i8*, i8** %audio_codec_name, align 8, !dbg !3343
  %call201 = call %struct.AVCodec* @find_codec_or_die(i8* %144, i32 1, i32 0), !dbg !3344
  %145 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3345
  %audio_codec = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %145, i32 0, i32 58, !dbg !3346
  store %struct.AVCodec* %call201, %struct.AVCodec** %audio_codec, align 8, !dbg !3347
  br label %if.end202, !dbg !3345

if.end202:                                        ; preds = %if.then200, %if.end198
  %146 = load i8*, i8** %subtitle_codec_name, align 8, !dbg !3348
  %tobool203 = icmp ne i8* %146, null, !dbg !3348
  br i1 %tobool203, label %if.then204, label %if.end206, !dbg !3350

if.then204:                                       ; preds = %if.end202
  %147 = load i8*, i8** %subtitle_codec_name, align 8, !dbg !3351
  %call205 = call %struct.AVCodec* @find_codec_or_die(i8* %147, i32 3, i32 0), !dbg !3352
  %148 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3353
  %subtitle_codec = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %148, i32 0, i32 59, !dbg !3354
  store %struct.AVCodec* %call205, %struct.AVCodec** %subtitle_codec, align 8, !dbg !3355
  br label %if.end206, !dbg !3353

if.end206:                                        ; preds = %if.then204, %if.end202
  %149 = load i8*, i8** %data_codec_name, align 8, !dbg !3356
  %tobool207 = icmp ne i8* %149, null, !dbg !3356
  br i1 %tobool207, label %if.then208, label %if.end210, !dbg !3358

if.then208:                                       ; preds = %if.end206
  %150 = load i8*, i8** %data_codec_name, align 8, !dbg !3359
  %call209 = call %struct.AVCodec* @find_codec_or_die(i8* %150, i32 2, i32 0), !dbg !3360
  %151 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3361
  %data_codec = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %151, i32 0, i32 60, !dbg !3362
  store %struct.AVCodec* %call209, %struct.AVCodec** %data_codec, align 8, !dbg !3363
  br label %if.end210, !dbg !3361

if.end210:                                        ; preds = %if.then208, %if.end206
  %152 = load i8*, i8** %video_codec_name, align 8, !dbg !3364
  %tobool211 = icmp ne i8* %152, null, !dbg !3364
  br i1 %tobool211, label %cond.true212, label %cond.false214, !dbg !3364

cond.true212:                                     ; preds = %if.end210
  %153 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3365
  %video_codec213 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %153, i32 0, i32 57, !dbg !3366
  %154 = load %struct.AVCodec*, %struct.AVCodec** %video_codec213, align 8, !dbg !3366
  %id = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %154, i32 0, i32 3, !dbg !3367
  %155 = load i32, i32* %id, align 4, !dbg !3367
  br label %cond.end215, !dbg !3368

cond.false214:                                    ; preds = %if.end210
  br label %cond.end215, !dbg !3369

cond.end215:                                      ; preds = %cond.false214, %cond.true212
  %cond216 = phi i32 [ %155, %cond.true212 ], [ 0, %cond.false214 ], !dbg !3370
  %156 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3372
  %video_codec_id = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %156, i32 0, i32 22, !dbg !3373
  store i32 %cond216, i32* %video_codec_id, align 8, !dbg !3374
  %157 = load i8*, i8** %audio_codec_name, align 8, !dbg !3375
  %tobool217 = icmp ne i8* %157, null, !dbg !3375
  br i1 %tobool217, label %cond.true218, label %cond.false221, !dbg !3375

cond.true218:                                     ; preds = %cond.end215
  %158 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3376
  %audio_codec219 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %158, i32 0, i32 58, !dbg !3377
  %159 = load %struct.AVCodec*, %struct.AVCodec** %audio_codec219, align 8, !dbg !3377
  %id220 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %159, i32 0, i32 3, !dbg !3378
  %160 = load i32, i32* %id220, align 4, !dbg !3378
  br label %cond.end222, !dbg !3379

cond.false221:                                    ; preds = %cond.end215
  br label %cond.end222, !dbg !3380

cond.end222:                                      ; preds = %cond.false221, %cond.true218
  %cond223 = phi i32 [ %160, %cond.true218 ], [ 0, %cond.false221 ], !dbg !3381
  %161 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3382
  %audio_codec_id = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %161, i32 0, i32 23, !dbg !3383
  store i32 %cond223, i32* %audio_codec_id, align 4, !dbg !3384
  %162 = load i8*, i8** %subtitle_codec_name, align 8, !dbg !3385
  %tobool224 = icmp ne i8* %162, null, !dbg !3385
  br i1 %tobool224, label %cond.true225, label %cond.false228, !dbg !3385

cond.true225:                                     ; preds = %cond.end222
  %163 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3386
  %subtitle_codec226 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %163, i32 0, i32 59, !dbg !3387
  %164 = load %struct.AVCodec*, %struct.AVCodec** %subtitle_codec226, align 8, !dbg !3387
  %id227 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %164, i32 0, i32 3, !dbg !3388
  %165 = load i32, i32* %id227, align 4, !dbg !3388
  br label %cond.end229, !dbg !3389

cond.false228:                                    ; preds = %cond.end222
  br label %cond.end229, !dbg !3390

cond.end229:                                      ; preds = %cond.false228, %cond.true225
  %cond230 = phi i32 [ %165, %cond.true225 ], [ 0, %cond.false228 ], !dbg !3391
  %166 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3392
  %subtitle_codec_id = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %166, i32 0, i32 24, !dbg !3393
  store i32 %cond230, i32* %subtitle_codec_id, align 8, !dbg !3394
  %167 = load i8*, i8** %data_codec_name, align 8, !dbg !3395
  %tobool231 = icmp ne i8* %167, null, !dbg !3395
  br i1 %tobool231, label %cond.true232, label %cond.false235, !dbg !3395

cond.true232:                                     ; preds = %cond.end229
  %168 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3396
  %data_codec233 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %168, i32 0, i32 60, !dbg !3397
  %169 = load %struct.AVCodec*, %struct.AVCodec** %data_codec233, align 8, !dbg !3397
  %id234 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %169, i32 0, i32 3, !dbg !3398
  %170 = load i32, i32* %id234, align 4, !dbg !3398
  br label %cond.end236, !dbg !3399

cond.false235:                                    ; preds = %cond.end229
  br label %cond.end236, !dbg !3400

cond.end236:                                      ; preds = %cond.false235, %cond.true232
  %cond237 = phi i32 [ %170, %cond.true232 ], [ 0, %cond.false235 ], !dbg !3401
  %171 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3402
  %data_codec_id = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %171, i32 0, i32 66, !dbg !3403
  store i32 %cond237, i32* %data_codec_id, align 8, !dbg !3404
  %172 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3405
  %flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %172, i32 0, i32 15, !dbg !3406
  %173 = load i32, i32* %flags, align 8, !dbg !3407
  %or = or i32 %173, 4, !dbg !3407
  store i32 %or, i32* %flags, align 8, !dbg !3407
  %174 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3408
  %bitexact = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %174, i32 0, i32 50, !dbg !3410
  %175 = load i32, i32* %bitexact, align 4, !dbg !3410
  %tobool238 = icmp ne i32 %175, 0, !dbg !3408
  br i1 %tobool238, label %if.then239, label %if.end242, !dbg !3411

if.then239:                                       ; preds = %cond.end236
  %176 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3412
  %flags240 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %176, i32 0, i32 15, !dbg !3413
  %177 = load i32, i32* %flags240, align 8, !dbg !3414
  %or241 = or i32 %177, 1024, !dbg !3414
  store i32 %or241, i32* %flags240, align 8, !dbg !3414
  br label %if.end242, !dbg !3412

if.end242:                                        ; preds = %if.then239, %cond.end236
  %178 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3415
  %interrupt_callback = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %178, i32 0, i32 33, !dbg !3416
  %179 = bitcast %struct.AVIOInterruptCB* %interrupt_callback to i8*, !dbg !3417
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %179, i8* bitcast (%struct.AVIOInterruptCB* @int_cb to i8*), i64 16, i32 8, i1 false), !dbg !3417
  %180 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3418
  %g243 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %180, i32 0, i32 0, !dbg !3420
  %181 = load %struct.OptionGroup*, %struct.OptionGroup** %g243, align 8, !dbg !3420
  %format_opts244 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %181, i32 0, i32 5, !dbg !3421
  %182 = load %struct.AVDictionary*, %struct.AVDictionary** %format_opts244, align 8, !dbg !3421
  %call245 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %182, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.442, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 1), !dbg !3422
  %tobool246 = icmp ne %struct.AVDictionaryEntry* %call245, null, !dbg !3422
  br i1 %tobool246, label %if.end251, label %if.then247, !dbg !3423

if.then247:                                       ; preds = %if.end242
  %183 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3424
  %g248 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %183, i32 0, i32 0, !dbg !3426
  %184 = load %struct.OptionGroup*, %struct.OptionGroup** %g248, align 8, !dbg !3426
  %format_opts249 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %184, i32 0, i32 5, !dbg !3427
  %call250 = call i32 @av_dict_set(%struct.AVDictionary** %format_opts249, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.442, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.443, i32 0, i32 0), i32 16), !dbg !3428
  store i32 1, i32* %scan_all_pmts_set, align 4, !dbg !3429
  br label %if.end251, !dbg !3430

if.end251:                                        ; preds = %if.then247, %if.end242
  %185 = load i8*, i8** %filename.addr, align 8, !dbg !3431
  %186 = load %struct.AVInputFormat*, %struct.AVInputFormat** %file_iformat, align 8, !dbg !3432
  %187 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3433
  %g252 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %187, i32 0, i32 0, !dbg !3434
  %188 = load %struct.OptionGroup*, %struct.OptionGroup** %g252, align 8, !dbg !3434
  %format_opts253 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %188, i32 0, i32 5, !dbg !3435
  %call254 = call i32 @avformat_open_input(%struct.AVFormatContext** %ic, i8* %185, %struct.AVInputFormat* %186, %struct.AVDictionary** %format_opts253), !dbg !3436
  store i32 %call254, i32* %err, align 4, !dbg !3437
  %189 = load i32, i32* %err, align 4, !dbg !3438
  %cmp255 = icmp slt i32 %189, 0, !dbg !3440
  br i1 %cmp255, label %if.then257, label %if.end262, !dbg !3441

if.then257:                                       ; preds = %if.end251
  %190 = load i8*, i8** %filename.addr, align 8, !dbg !3442
  %191 = load i32, i32* %err, align 4, !dbg !3444
  call void @print_error(i8* %190, i32 %191), !dbg !3445
  %192 = load i32, i32* %err, align 4, !dbg !3446
  %cmp258 = icmp eq i32 %192, -1330794744, !dbg !3448
  br i1 %cmp258, label %if.then260, label %if.end261, !dbg !3449

if.then260:                                       ; preds = %if.then257
  %193 = load i8*, i8** %filename.addr, align 8, !dbg !3450
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.444, i32 0, i32 0), i8* %193), !dbg !3451
  br label %if.end261, !dbg !3451

if.end261:                                        ; preds = %if.then260, %if.then257
  call void @exit_program(i32 1) #11, !dbg !3452
  unreachable, !dbg !3452

if.end262:                                        ; preds = %if.end251
  %194 = load i32, i32* %scan_all_pmts_set, align 4, !dbg !3453
  %tobool263 = icmp ne i32 %194, 0, !dbg !3453
  br i1 %tobool263, label %if.then264, label %if.end268, !dbg !3455

if.then264:                                       ; preds = %if.end262
  %195 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3456
  %g265 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %195, i32 0, i32 0, !dbg !3457
  %196 = load %struct.OptionGroup*, %struct.OptionGroup** %g265, align 8, !dbg !3457
  %format_opts266 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %196, i32 0, i32 5, !dbg !3458
  %call267 = call i32 @av_dict_set(%struct.AVDictionary** %format_opts266, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.442, i32 0, i32 0), i8* null, i32 1), !dbg !3459
  br label %if.end268, !dbg !3459

if.end268:                                        ; preds = %if.then264, %if.end262
  %197 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3460
  %g269 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %197, i32 0, i32 0, !dbg !3461
  %198 = load %struct.OptionGroup*, %struct.OptionGroup** %g269, align 8, !dbg !3461
  %format_opts270 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %198, i32 0, i32 5, !dbg !3462
  %199 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3463
  %g271 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %199, i32 0, i32 0, !dbg !3464
  %200 = load %struct.OptionGroup*, %struct.OptionGroup** %g271, align 8, !dbg !3464
  %codec_opts = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %200, i32 0, i32 4, !dbg !3465
  %201 = load %struct.AVDictionary*, %struct.AVDictionary** %codec_opts, align 8, !dbg !3465
  call void @remove_avoptions(%struct.AVDictionary** %format_opts270, %struct.AVDictionary* %201), !dbg !3466
  %202 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3467
  %g272 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %202, i32 0, i32 0, !dbg !3468
  %203 = load %struct.OptionGroup*, %struct.OptionGroup** %g272, align 8, !dbg !3468
  %format_opts273 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %203, i32 0, i32 5, !dbg !3469
  %204 = load %struct.AVDictionary*, %struct.AVDictionary** %format_opts273, align 8, !dbg !3469
  call void @assert_avoptions(%struct.AVDictionary* %204), !dbg !3470
  store i32 0, i32* %i, align 4, !dbg !3471
  br label %for.cond274, !dbg !3473

for.cond274:                                      ; preds = %for.inc281, %if.end268
  %205 = load i32, i32* %i, align 4, !dbg !3474
  %206 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3477
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %206, i32 0, i32 6, !dbg !3478
  %207 = load i32, i32* %nb_streams, align 4, !dbg !3478
  %cmp275 = icmp ult i32 %205, %207, !dbg !3479
  br i1 %cmp275, label %for.body277, label %for.end283, !dbg !3480

for.body277:                                      ; preds = %for.cond274
  %208 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3481
  %209 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3482
  %210 = load i32, i32* %i, align 4, !dbg !3483
  %idxprom278 = sext i32 %210 to i64, !dbg !3484
  %211 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3484
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %211, i32 0, i32 7, !dbg !3485
  %212 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !3485
  %arrayidx279 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %212, i64 %idxprom278, !dbg !3484
  %213 = load %struct.AVStream*, %struct.AVStream** %arrayidx279, align 8, !dbg !3484
  %call280 = call %struct.AVCodec* @choose_decoder(%struct.OptionsContext* %208, %struct.AVFormatContext* %209, %struct.AVStream* %213), !dbg !3486
  br label %for.inc281, !dbg !3486

for.inc281:                                       ; preds = %for.body277
  %214 = load i32, i32* %i, align 4, !dbg !3487
  %inc282 = add nsw i32 %214, 1, !dbg !3487
  store i32 %inc282, i32* %i, align 4, !dbg !3487
  br label %for.cond274, !dbg !3489, !llvm.loop !3490

for.end283:                                       ; preds = %for.cond274
  %215 = load i32, i32* @find_stream_info, align 4, !dbg !3492
  %tobool284 = icmp ne i32 %215, 0, !dbg !3492
  br i1 %tobool284, label %if.then285, label %if.end309, !dbg !3494

if.then285:                                       ; preds = %for.end283
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %opts, metadata !3495, metadata !1898), !dbg !3497
  %216 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3498
  %217 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3499
  %g286 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %217, i32 0, i32 0, !dbg !3500
  %218 = load %struct.OptionGroup*, %struct.OptionGroup** %g286, align 8, !dbg !3500
  %codec_opts287 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %218, i32 0, i32 4, !dbg !3501
  %219 = load %struct.AVDictionary*, %struct.AVDictionary** %codec_opts287, align 8, !dbg !3501
  %call288 = call %struct.AVDictionary** @setup_find_stream_info_opts(%struct.AVFormatContext* %216, %struct.AVDictionary* %219), !dbg !3502
  store %struct.AVDictionary** %call288, %struct.AVDictionary*** %opts, align 8, !dbg !3497
  call void @llvm.dbg.declare(metadata i32* %orig_nb_streams, metadata !3503, metadata !1898), !dbg !3504
  %220 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3505
  %nb_streams289 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %220, i32 0, i32 6, !dbg !3506
  %221 = load i32, i32* %nb_streams289, align 4, !dbg !3506
  store i32 %221, i32* %orig_nb_streams, align 4, !dbg !3504
  %222 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3507
  %223 = load %struct.AVDictionary**, %struct.AVDictionary*** %opts, align 8, !dbg !3508
  %call290 = call i32 @avformat_find_stream_info(%struct.AVFormatContext* %222, %struct.AVDictionary** %223), !dbg !3509
  store i32 %call290, i32* %ret, align 4, !dbg !3510
  store i32 0, i32* %i, align 4, !dbg !3511
  br label %for.cond291, !dbg !3513

for.cond291:                                      ; preds = %for.inc297, %if.then285
  %224 = load i32, i32* %i, align 4, !dbg !3514
  %225 = load i32, i32* %orig_nb_streams, align 4, !dbg !3517
  %cmp292 = icmp slt i32 %224, %225, !dbg !3518
  br i1 %cmp292, label %for.body294, label %for.end299, !dbg !3519

for.body294:                                      ; preds = %for.cond291
  %226 = load i32, i32* %i, align 4, !dbg !3520
  %idxprom295 = sext i32 %226 to i64, !dbg !3521
  %227 = load %struct.AVDictionary**, %struct.AVDictionary*** %opts, align 8, !dbg !3521
  %arrayidx296 = getelementptr inbounds %struct.AVDictionary*, %struct.AVDictionary** %227, i64 %idxprom295, !dbg !3521
  call void @av_dict_free(%struct.AVDictionary** %arrayidx296), !dbg !3522
  br label %for.inc297, !dbg !3522

for.inc297:                                       ; preds = %for.body294
  %228 = load i32, i32* %i, align 4, !dbg !3523
  %inc298 = add nsw i32 %228, 1, !dbg !3523
  store i32 %inc298, i32* %i, align 4, !dbg !3523
  br label %for.cond291, !dbg !3525, !llvm.loop !3526

for.end299:                                       ; preds = %for.cond291
  %229 = bitcast %struct.AVDictionary*** %opts to i8*, !dbg !3528
  call void @av_freep(i8* %229), !dbg !3529
  %230 = load i32, i32* %ret, align 4, !dbg !3530
  %cmp300 = icmp slt i32 %230, 0, !dbg !3532
  br i1 %cmp300, label %if.then302, label %if.end308, !dbg !3533

if.then302:                                       ; preds = %for.end299
  %231 = load i8*, i8** %filename.addr, align 8, !dbg !3534
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.445, i32 0, i32 0), i8* %231), !dbg !3536
  %232 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3537
  %nb_streams303 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %232, i32 0, i32 6, !dbg !3539
  %233 = load i32, i32* %nb_streams303, align 4, !dbg !3539
  %cmp304 = icmp eq i32 %233, 0, !dbg !3540
  br i1 %cmp304, label %if.then306, label %if.end307, !dbg !3541

if.then306:                                       ; preds = %if.then302
  call void @avformat_close_input(%struct.AVFormatContext** %ic), !dbg !3542
  call void @exit_program(i32 1) #11, !dbg !3544
  unreachable, !dbg !3544

if.end307:                                        ; preds = %if.then302
  br label %if.end308, !dbg !3545

if.end308:                                        ; preds = %if.end307, %for.end299
  br label %if.end309, !dbg !3546

if.end309:                                        ; preds = %if.end308, %for.end283
  %234 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3547
  %start_time310 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %234, i32 0, i32 1, !dbg !3549
  %235 = load i64, i64* %start_time310, align 8, !dbg !3549
  %cmp311 = icmp ne i64 %235, -9223372036854775808, !dbg !3550
  br i1 %cmp311, label %land.lhs.true313, label %if.end318, !dbg !3551

land.lhs.true313:                                 ; preds = %if.end309
  %236 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3552
  %start_time_eof = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %236, i32 0, i32 2, !dbg !3554
  %237 = load i64, i64* %start_time_eof, align 8, !dbg !3554
  %cmp314 = icmp ne i64 %237, -9223372036854775808, !dbg !3555
  br i1 %cmp314, label %if.then316, label %if.end318, !dbg !3556

if.then316:                                       ; preds = %land.lhs.true313
  %238 = load i8*, i8** %filename.addr, align 8, !dbg !3557
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.446, i32 0, i32 0), i8* %238), !dbg !3559
  %239 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3560
  %start_time_eof317 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %239, i32 0, i32 2, !dbg !3561
  store i64 -9223372036854775808, i64* %start_time_eof317, align 8, !dbg !3562
  br label %if.end318, !dbg !3563

if.end318:                                        ; preds = %if.then316, %land.lhs.true313, %if.end309
  %240 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3564
  %start_time_eof319 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %240, i32 0, i32 2, !dbg !3566
  %241 = load i64, i64* %start_time_eof319, align 8, !dbg !3566
  %cmp320 = icmp ne i64 %241, -9223372036854775808, !dbg !3567
  br i1 %cmp320, label %if.then322, label %if.end342, !dbg !3568

if.then322:                                       ; preds = %if.end318
  %242 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3569
  %start_time_eof323 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %242, i32 0, i32 2, !dbg !3572
  %243 = load i64, i64* %start_time_eof323, align 8, !dbg !3572
  %cmp324 = icmp sge i64 %243, 0, !dbg !3573
  br i1 %cmp324, label %if.then326, label %if.end327, !dbg !3574

if.then326:                                       ; preds = %if.then322
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.447, i32 0, i32 0)), !dbg !3575
  call void @exit_program(i32 1) #11, !dbg !3577
  unreachable, !dbg !3577

if.end327:                                        ; preds = %if.then322
  %244 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3578
  %duration = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %244, i32 0, i32 11, !dbg !3580
  %245 = load i64, i64* %duration, align 8, !dbg !3580
  %cmp328 = icmp sgt i64 %245, 0, !dbg !3581
  br i1 %cmp328, label %if.then330, label %if.else340, !dbg !3582

if.then330:                                       ; preds = %if.end327
  %246 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3583
  %start_time_eof331 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %246, i32 0, i32 2, !dbg !3585
  %247 = load i64, i64* %start_time_eof331, align 8, !dbg !3585
  %248 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3586
  %duration332 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %248, i32 0, i32 11, !dbg !3587
  %249 = load i64, i64* %duration332, align 8, !dbg !3587
  %add = add nsw i64 %247, %249, !dbg !3588
  %250 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3589
  %start_time333 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %250, i32 0, i32 1, !dbg !3590
  store i64 %add, i64* %start_time333, align 8, !dbg !3591
  %251 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3592
  %start_time334 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %251, i32 0, i32 1, !dbg !3594
  %252 = load i64, i64* %start_time334, align 8, !dbg !3594
  %cmp335 = icmp slt i64 %252, 0, !dbg !3595
  br i1 %cmp335, label %if.then337, label %if.end339, !dbg !3596

if.then337:                                       ; preds = %if.then330
  %253 = load i8*, i8** %filename.addr, align 8, !dbg !3597
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.448, i32 0, i32 0), i8* %253), !dbg !3599
  %254 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3600
  %start_time338 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %254, i32 0, i32 1, !dbg !3601
  store i64 -9223372036854775808, i64* %start_time338, align 8, !dbg !3602
  br label %if.end339, !dbg !3603

if.end339:                                        ; preds = %if.then337, %if.then330
  br label %if.end341, !dbg !3604

if.else340:                                       ; preds = %if.end327
  %255 = load i8*, i8** %filename.addr, align 8, !dbg !3605
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.449, i32 0, i32 0), i8* %255), !dbg !3606
  br label %if.end341

if.end341:                                        ; preds = %if.else340, %if.end339
  br label %if.end342, !dbg !3607

if.end342:                                        ; preds = %if.end341, %if.end318
  %256 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3608
  %start_time343 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %256, i32 0, i32 1, !dbg !3609
  %257 = load i64, i64* %start_time343, align 8, !dbg !3609
  %cmp344 = icmp eq i64 %257, -9223372036854775808, !dbg !3610
  br i1 %cmp344, label %cond.true346, label %cond.false347, !dbg !3611

cond.true346:                                     ; preds = %if.end342
  br label %cond.end349, !dbg !3612

cond.false347:                                    ; preds = %if.end342
  %258 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3613
  %start_time348 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %258, i32 0, i32 1, !dbg !3614
  %259 = load i64, i64* %start_time348, align 8, !dbg !3614
  br label %cond.end349, !dbg !3615

cond.end349:                                      ; preds = %cond.false347, %cond.true346
  %cond350 = phi i64 [ 0, %cond.true346 ], [ %259, %cond.false347 ], !dbg !3616
  store i64 %cond350, i64* %timestamp, align 8, !dbg !3617
  %260 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3618
  %seek_timestamp = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %260, i32 0, i32 3, !dbg !3620
  %261 = load i32, i32* %seek_timestamp, align 8, !dbg !3620
  %tobool351 = icmp ne i32 %261, 0, !dbg !3618
  br i1 %tobool351, label %if.end359, label %land.lhs.true352, !dbg !3621

land.lhs.true352:                                 ; preds = %cond.end349
  %262 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3622
  %start_time353 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %262, i32 0, i32 10, !dbg !3624
  %263 = load i64, i64* %start_time353, align 8, !dbg !3624
  %cmp354 = icmp ne i64 %263, -9223372036854775808, !dbg !3625
  br i1 %cmp354, label %if.then356, label %if.end359, !dbg !3626

if.then356:                                       ; preds = %land.lhs.true352
  %264 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3627
  %start_time357 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %264, i32 0, i32 10, !dbg !3628
  %265 = load i64, i64* %start_time357, align 8, !dbg !3628
  %266 = load i64, i64* %timestamp, align 8, !dbg !3629
  %add358 = add nsw i64 %266, %265, !dbg !3629
  store i64 %add358, i64* %timestamp, align 8, !dbg !3629
  br label %if.end359, !dbg !3630

if.end359:                                        ; preds = %if.then356, %land.lhs.true352, %cond.end349
  %267 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3631
  %start_time360 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %267, i32 0, i32 1, !dbg !3633
  %268 = load i64, i64* %start_time360, align 8, !dbg !3633
  %cmp361 = icmp ne i64 %268, -9223372036854775808, !dbg !3634
  br i1 %cmp361, label %if.then363, label %if.end394, !dbg !3635

if.then363:                                       ; preds = %if.end359
  call void @llvm.dbg.declare(metadata i64* %seek_timestamp364, metadata !3636, metadata !1898), !dbg !3638
  %269 = load i64, i64* %timestamp, align 8, !dbg !3639
  store i64 %269, i64* %seek_timestamp364, align 8, !dbg !3638
  %270 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3640
  %iformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %270, i32 0, i32 1, !dbg !3642
  %271 = load %struct.AVInputFormat*, %struct.AVInputFormat** %iformat, align 8, !dbg !3642
  %flags365 = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %271, i32 0, i32 2, !dbg !3643
  %272 = load i32, i32* %flags365, align 8, !dbg !3643
  %and366 = and i32 %272, 67108864, !dbg !3644
  %tobool367 = icmp ne i32 %and366, 0, !dbg !3644
  br i1 %tobool367, label %if.end387, label %if.then368, !dbg !3645

if.then368:                                       ; preds = %if.then363
  call void @llvm.dbg.declare(metadata i32* %dts_heuristic, metadata !3646, metadata !1898), !dbg !3648
  store i32 0, i32* %dts_heuristic, align 4, !dbg !3648
  store i32 0, i32* %i, align 4, !dbg !3649
  br label %for.cond369, !dbg !3651

for.cond369:                                      ; preds = %for.inc380, %if.then368
  %273 = load i32, i32* %i, align 4, !dbg !3652
  %274 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3655
  %nb_streams370 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %274, i32 0, i32 6, !dbg !3656
  %275 = load i32, i32* %nb_streams370, align 4, !dbg !3656
  %cmp371 = icmp ult i32 %273, %275, !dbg !3657
  br i1 %cmp371, label %for.body373, label %for.end382, !dbg !3658

for.body373:                                      ; preds = %for.cond369
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par, metadata !3659, metadata !1898), !dbg !3663
  %276 = load i32, i32* %i, align 4, !dbg !3664
  %idxprom374 = sext i32 %276 to i64, !dbg !3665
  %277 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3665
  %streams375 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %277, i32 0, i32 7, !dbg !3666
  %278 = load %struct.AVStream**, %struct.AVStream*** %streams375, align 8, !dbg !3666
  %arrayidx376 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %278, i64 %idxprom374, !dbg !3665
  %279 = load %struct.AVStream*, %struct.AVStream** %arrayidx376, align 8, !dbg !3665
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %279, i32 0, i32 19, !dbg !3667
  %280 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !3667
  store %struct.AVCodecParameters* %280, %struct.AVCodecParameters** %par, align 8, !dbg !3663
  %281 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !3668
  %video_delay = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %281, i32 0, i32 20, !dbg !3670
  %282 = load i32, i32* %video_delay, align 8, !dbg !3670
  %tobool377 = icmp ne i32 %282, 0, !dbg !3668
  br i1 %tobool377, label %if.then378, label %if.end379, !dbg !3671

if.then378:                                       ; preds = %for.body373
  store i32 1, i32* %dts_heuristic, align 4, !dbg !3672
  br label %for.end382, !dbg !3674

if.end379:                                        ; preds = %for.body373
  br label %for.inc380, !dbg !3675

for.inc380:                                       ; preds = %if.end379
  %283 = load i32, i32* %i, align 4, !dbg !3676
  %inc381 = add nsw i32 %283, 1, !dbg !3676
  store i32 %inc381, i32* %i, align 4, !dbg !3676
  br label %for.cond369, !dbg !3678, !llvm.loop !3679

for.end382:                                       ; preds = %if.then378, %for.cond369
  %284 = load i32, i32* %dts_heuristic, align 4, !dbg !3681
  %tobool383 = icmp ne i32 %284, 0, !dbg !3681
  br i1 %tobool383, label %if.then384, label %if.end386, !dbg !3683

if.then384:                                       ; preds = %for.end382
  %285 = load i64, i64* %seek_timestamp364, align 8, !dbg !3684
  %sub385 = sub nsw i64 %285, 130434, !dbg !3684
  store i64 %sub385, i64* %seek_timestamp364, align 8, !dbg !3684
  br label %if.end386, !dbg !3686

if.end386:                                        ; preds = %if.then384, %for.end382
  br label %if.end387, !dbg !3687

if.end387:                                        ; preds = %if.end386, %if.then363
  %286 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3688
  %287 = load i64, i64* %seek_timestamp364, align 8, !dbg !3689
  %288 = load i64, i64* %seek_timestamp364, align 8, !dbg !3690
  %call388 = call i32 @avformat_seek_file(%struct.AVFormatContext* %286, i32 -1, i64 -9223372036854775808, i64 %287, i64 %288, i32 0), !dbg !3691
  store i32 %call388, i32* %ret, align 4, !dbg !3692
  %289 = load i32, i32* %ret, align 4, !dbg !3693
  %cmp389 = icmp slt i32 %289, 0, !dbg !3695
  br i1 %cmp389, label %if.then391, label %if.end393, !dbg !3696

if.then391:                                       ; preds = %if.end387
  %290 = load i8*, i8** %filename.addr, align 8, !dbg !3697
  %291 = load i64, i64* %timestamp, align 8, !dbg !3699
  %conv392 = sitofp i64 %291 to double, !dbg !3700
  %div = fdiv double %conv392, 1.000000e+06, !dbg !3701
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.450, i32 0, i32 0), i8* %290, double %div), !dbg !3702
  br label %if.end393, !dbg !3703

if.end393:                                        ; preds = %if.then391, %if.end387
  br label %if.end394, !dbg !3704

if.end394:                                        ; preds = %if.end393, %if.end359
  %292 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3705
  %293 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3706
  call void @add_input_streams(%struct.OptionsContext* %292, %struct.AVFormatContext* %293), !dbg !3707
  %294 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3708
  %295 = load i32, i32* @nb_input_files, align 4, !dbg !3709
  %296 = load i8*, i8** %filename.addr, align 8, !dbg !3710
  call void @av_dump_format(%struct.AVFormatContext* %294, i32 %295, i8* %296, i32 0), !dbg !3711
  %297 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !3712
  %298 = bitcast %struct.InputFile** %297 to i8*, !dbg !3712
  %299 = load i32, i32* @nb_input_files, align 4, !dbg !3713
  %add395 = add nsw i32 %299, 1, !dbg !3714
  %call396 = call i8* @grow_array(i8* %298, i32 8, i32* @nb_input_files, i32 %add395), !dbg !3715
  %300 = bitcast i8* %call396 to %struct.InputFile**, !dbg !3715
  store %struct.InputFile** %300, %struct.InputFile*** @input_files, align 8, !dbg !3716
  %call397 = call noalias i8* @av_mallocz(i64 136), !dbg !3717
  %301 = bitcast i8* %call397 to %struct.InputFile*, !dbg !3717
  store %struct.InputFile* %301, %struct.InputFile** %f, align 8, !dbg !3718
  %302 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3719
  %tobool398 = icmp ne %struct.InputFile* %302, null, !dbg !3719
  br i1 %tobool398, label %if.end400, label %if.then399, !dbg !3721

if.then399:                                       ; preds = %if.end394
  call void @exit_program(i32 1) #11, !dbg !3722
  unreachable, !dbg !3722

if.end400:                                        ; preds = %if.end394
  %303 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3723
  %304 = load i32, i32* @nb_input_files, align 4, !dbg !3724
  %sub401 = sub nsw i32 %304, 1, !dbg !3725
  %idxprom402 = sext i32 %sub401 to i64, !dbg !3726
  %305 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !3726
  %arrayidx403 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %305, i64 %idxprom402, !dbg !3726
  store %struct.InputFile* %303, %struct.InputFile** %arrayidx403, align 8, !dbg !3727
  %306 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3728
  %307 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3729
  %ctx = getelementptr inbounds %struct.InputFile, %struct.InputFile* %307, i32 0, i32 0, !dbg !3730
  store %struct.AVFormatContext* %306, %struct.AVFormatContext** %ctx, align 8, !dbg !3731
  %308 = load i32, i32* @nb_input_streams, align 4, !dbg !3732
  %309 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3733
  %nb_streams404 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %309, i32 0, i32 6, !dbg !3734
  %310 = load i32, i32* %nb_streams404, align 4, !dbg !3734
  %sub405 = sub i32 %308, %310, !dbg !3735
  %311 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3736
  %ist_index = getelementptr inbounds %struct.InputFile, %struct.InputFile* %311, i32 0, i32 3, !dbg !3737
  store i32 %sub405, i32* %ist_index, align 8, !dbg !3738
  %312 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3739
  %start_time406 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %312, i32 0, i32 1, !dbg !3740
  %313 = load i64, i64* %start_time406, align 8, !dbg !3740
  %314 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3741
  %start_time407 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %314, i32 0, i32 10, !dbg !3742
  store i64 %313, i64* %start_time407, align 8, !dbg !3743
  %315 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3744
  %recording_time408 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %315, i32 0, i32 44, !dbg !3745
  %316 = load i64, i64* %recording_time408, align 8, !dbg !3745
  %317 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3746
  %recording_time409 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %317, i32 0, i32 12, !dbg !3747
  store i64 %316, i64* %recording_time409, align 8, !dbg !3748
  %318 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3749
  %input_ts_offset = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %318, i32 0, i32 17, !dbg !3750
  %319 = load i64, i64* %input_ts_offset, align 8, !dbg !3750
  %320 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3751
  %input_ts_offset410 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %320, i32 0, i32 7, !dbg !3752
  store i64 %319, i64* %input_ts_offset410, align 8, !dbg !3753
  %321 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3754
  %input_ts_offset411 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %321, i32 0, i32 17, !dbg !3755
  %322 = load i64, i64* %input_ts_offset411, align 8, !dbg !3755
  %323 = load i32, i32* @copy_ts, align 4, !dbg !3756
  %tobool412 = icmp ne i32 %323, 0, !dbg !3756
  br i1 %tobool412, label %cond.true413, label %cond.false424, !dbg !3756

cond.true413:                                     ; preds = %if.end400
  %324 = load i32, i32* @start_at_zero, align 4, !dbg !3757
  %tobool414 = icmp ne i32 %324, 0, !dbg !3757
  br i1 %tobool414, label %land.lhs.true415, label %cond.false421, !dbg !3758

land.lhs.true415:                                 ; preds = %cond.true413
  %325 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3759
  %start_time416 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %325, i32 0, i32 10, !dbg !3760
  %326 = load i64, i64* %start_time416, align 8, !dbg !3760
  %cmp417 = icmp ne i64 %326, -9223372036854775808, !dbg !3761
  br i1 %cmp417, label %cond.true419, label %cond.false421, !dbg !3762

cond.true419:                                     ; preds = %land.lhs.true415
  %327 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3763
  %start_time420 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %327, i32 0, i32 10, !dbg !3764
  %328 = load i64, i64* %start_time420, align 8, !dbg !3764
  br label %cond.end422, !dbg !3765

cond.false421:                                    ; preds = %land.lhs.true415, %cond.true413
  br label %cond.end422, !dbg !3766

cond.end422:                                      ; preds = %cond.false421, %cond.true419
  %cond423 = phi i64 [ %328, %cond.true419 ], [ 0, %cond.false421 ], !dbg !3768
  br label %cond.end425, !dbg !3770

cond.false424:                                    ; preds = %if.end400
  %329 = load i64, i64* %timestamp, align 8, !dbg !3771
  br label %cond.end425, !dbg !3773

cond.end425:                                      ; preds = %cond.false424, %cond.end422
  %cond426 = phi i64 [ %cond423, %cond.end422 ], [ %329, %cond.false424 ], !dbg !3774
  %sub427 = sub nsw i64 %322, %cond426, !dbg !3776
  %330 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3777
  %ts_offset = getelementptr inbounds %struct.InputFile, %struct.InputFile* %330, i32 0, i32 8, !dbg !3778
  store i64 %sub427, i64* %ts_offset, align 8, !dbg !3779
  %331 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3780
  %nb_streams428 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %331, i32 0, i32 6, !dbg !3781
  %332 = load i32, i32* %nb_streams428, align 4, !dbg !3781
  %333 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3782
  %nb_streams429 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %333, i32 0, i32 13, !dbg !3783
  store i32 %332, i32* %nb_streams429, align 8, !dbg !3784
  %334 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3785
  %rate_emu = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %334, i32 0, i32 19, !dbg !3786
  %335 = load i32, i32* %rate_emu, align 4, !dbg !3786
  %336 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3787
  %rate_emu430 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %336, i32 0, i32 15, !dbg !3788
  store i32 %335, i32* %rate_emu430, align 8, !dbg !3789
  %337 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3790
  %accurate_seek = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %337, i32 0, i32 20, !dbg !3791
  %338 = load i32, i32* %accurate_seek, align 8, !dbg !3791
  %339 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3792
  %accurate_seek431 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %339, i32 0, i32 16, !dbg !3793
  store i32 %338, i32* %accurate_seek431, align 4, !dbg !3794
  %340 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3795
  %loop = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %340, i32 0, i32 18, !dbg !3796
  %341 = load i32, i32* %loop, align 8, !dbg !3796
  %342 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3797
  %loop432 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %342, i32 0, i32 4, !dbg !3798
  store i32 %341, i32* %loop432, align 4, !dbg !3799
  %343 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3800
  %duration433 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %343, i32 0, i32 5, !dbg !3801
  store i64 0, i64* %duration433, align 8, !dbg !3802
  %344 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3803
  %time_base = getelementptr inbounds %struct.InputFile, %struct.InputFile* %344, i32 0, i32 6, !dbg !3804
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !3805
  store i32 1, i32* %num, align 4, !dbg !3805
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !3805
  store i32 1, i32* %den, align 4, !dbg !3805
  %345 = bitcast %struct.AVRational* %time_base to i8*, !dbg !3806
  %346 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !3806
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %345, i8* %346, i64 8, i32 4, i1 false), !dbg !3806
  %347 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3807
  %thread_queue_size = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %347, i32 0, i32 21, !dbg !3808
  %348 = load i32, i32* %thread_queue_size, align 4, !dbg !3808
  %cmp434 = icmp sgt i32 %348, 0, !dbg !3809
  br i1 %cmp434, label %cond.true436, label %cond.false438, !dbg !3807

cond.true436:                                     ; preds = %cond.end425
  %349 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3810
  %thread_queue_size437 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %349, i32 0, i32 21, !dbg !3811
  %350 = load i32, i32* %thread_queue_size437, align 4, !dbg !3811
  br label %cond.end439, !dbg !3812

cond.false438:                                    ; preds = %cond.end425
  br label %cond.end439, !dbg !3813

cond.end439:                                      ; preds = %cond.false438, %cond.true436
  %cond440 = phi i32 [ %350, %cond.true436 ], [ 8, %cond.false438 ], !dbg !3814
  %351 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3815
  %thread_queue_size441 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %351, i32 0, i32 21, !dbg !3816
  store i32 %cond440, i32* %thread_queue_size441, align 8, !dbg !3817
  %352 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3818
  %g442 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %352, i32 0, i32 0, !dbg !3819
  %353 = load %struct.OptionGroup*, %struct.OptionGroup** %g442, align 8, !dbg !3819
  %codec_opts443 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %353, i32 0, i32 4, !dbg !3820
  %354 = load %struct.AVDictionary*, %struct.AVDictionary** %codec_opts443, align 8, !dbg !3820
  %call444 = call %struct.AVDictionary* @strip_specifiers(%struct.AVDictionary* %354), !dbg !3821
  store %struct.AVDictionary* %call444, %struct.AVDictionary** %unused_opts, align 8, !dbg !3822
  %355 = load %struct.InputFile*, %struct.InputFile** %f, align 8, !dbg !3823
  %ist_index445 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %355, i32 0, i32 3, !dbg !3825
  %356 = load i32, i32* %ist_index445, align 8, !dbg !3825
  store i32 %356, i32* %i, align 4, !dbg !3826
  br label %for.cond446, !dbg !3827

for.cond446:                                      ; preds = %for.inc455, %cond.end439
  %357 = load i32, i32* %i, align 4, !dbg !3828
  %358 = load i32, i32* @nb_input_streams, align 4, !dbg !3831
  %cmp447 = icmp slt i32 %357, %358, !dbg !3832
  br i1 %cmp447, label %for.body449, label %for.end457, !dbg !3833

for.body449:                                      ; preds = %for.cond446
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %e, align 8, !dbg !3834
  br label %while.cond, !dbg !3836

while.cond:                                       ; preds = %while.body, %for.body449
  %359 = load i32, i32* %i, align 4, !dbg !3837
  %idxprom450 = sext i32 %359 to i64, !dbg !3839
  %360 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !3839
  %arrayidx451 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %360, i64 %idxprom450, !dbg !3839
  %361 = load %struct.InputStream*, %struct.InputStream** %arrayidx451, align 8, !dbg !3839
  %decoder_opts = getelementptr inbounds %struct.InputStream, %struct.InputStream* %361, i32 0, i32 22, !dbg !3840
  %362 = load %struct.AVDictionary*, %struct.AVDictionary** %decoder_opts, align 8, !dbg !3840
  %363 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !3841
  %call452 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %362, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0), %struct.AVDictionaryEntry* %363, i32 2), !dbg !3842
  store %struct.AVDictionaryEntry* %call452, %struct.AVDictionaryEntry** %e, align 8, !dbg !3843
  %tobool453 = icmp ne %struct.AVDictionaryEntry* %call452, null, !dbg !3844
  br i1 %tobool453, label %while.body, label %while.end, !dbg !3844

while.body:                                       ; preds = %while.cond
  %364 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !3845
  %key = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %364, i32 0, i32 0, !dbg !3846
  %365 = load i8*, i8** %key, align 8, !dbg !3846
  %call454 = call i32 @av_dict_set(%struct.AVDictionary** %unused_opts, i8* %365, i8* null, i32 0), !dbg !3847
  br label %while.cond, !dbg !3848, !llvm.loop !3850

while.end:                                        ; preds = %while.cond
  br label %for.inc455, !dbg !3851

for.inc455:                                       ; preds = %while.end
  %366 = load i32, i32* %i, align 4, !dbg !3852
  %inc456 = add nsw i32 %366, 1, !dbg !3852
  store i32 %inc456, i32* %i, align 4, !dbg !3852
  br label %for.cond446, !dbg !3854, !llvm.loop !3855

for.end457:                                       ; preds = %for.cond446
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %e, align 8, !dbg !3857
  br label %while.cond458, !dbg !3858

while.cond458:                                    ; preds = %cond.end491, %if.then470, %for.end457
  %367 = load %struct.AVDictionary*, %struct.AVDictionary** %unused_opts, align 8, !dbg !3859
  %368 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !3860
  %call459 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %367, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0), %struct.AVDictionaryEntry* %368, i32 2), !dbg !3861
  store %struct.AVDictionaryEntry* %call459, %struct.AVDictionaryEntry** %e, align 8, !dbg !3862
  %tobool460 = icmp ne %struct.AVDictionaryEntry* %call459, null, !dbg !3863
  br i1 %tobool460, label %while.body461, label %while.end494, !dbg !3863

while.body461:                                    ; preds = %while.cond458
  call void @llvm.dbg.declare(metadata %struct.AVClass** %class, metadata !3864, metadata !1898), !dbg !3866
  %call462 = call %struct.AVClass* @avcodec_get_class(), !dbg !3867
  store %struct.AVClass* %call462, %struct.AVClass** %class, align 8, !dbg !3866
  call void @llvm.dbg.declare(metadata %struct.AVOption** %option, metadata !3868, metadata !1898), !dbg !3870
  %369 = bitcast %struct.AVClass** %class to i8*, !dbg !3871
  %370 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !3872
  %key463 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %370, i32 0, i32 0, !dbg !3873
  %371 = load i8*, i8** %key463, align 8, !dbg !3873
  %call464 = call %struct.AVOption* @av_opt_find(i8* %369, i8* %371, i8* null, i32 0, i32 3), !dbg !3874
  store %struct.AVOption* %call464, %struct.AVOption** %option, align 8, !dbg !3870
  call void @llvm.dbg.declare(metadata %struct.AVClass** %fclass, metadata !3875, metadata !1898), !dbg !3876
  %call465 = call %struct.AVClass* @avformat_get_class(), !dbg !3877
  store %struct.AVClass* %call465, %struct.AVClass** %fclass, align 8, !dbg !3876
  call void @llvm.dbg.declare(metadata %struct.AVOption** %foption, metadata !3878, metadata !1898), !dbg !3879
  %372 = bitcast %struct.AVClass** %fclass to i8*, !dbg !3880
  %373 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !3881
  %key466 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %373, i32 0, i32 0, !dbg !3882
  %374 = load i8*, i8** %key466, align 8, !dbg !3882
  %call467 = call %struct.AVOption* @av_opt_find(i8* %372, i8* %374, i8* null, i32 0, i32 3), !dbg !3883
  store %struct.AVOption* %call467, %struct.AVOption** %foption, align 8, !dbg !3879
  %375 = load %struct.AVOption*, %struct.AVOption** %option, align 8, !dbg !3884
  %tobool468 = icmp ne %struct.AVOption* %375, null, !dbg !3884
  br i1 %tobool468, label %lor.lhs.false, label %if.then470, !dbg !3886

lor.lhs.false:                                    ; preds = %while.body461
  %376 = load %struct.AVOption*, %struct.AVOption** %foption, align 8, !dbg !3887
  %tobool469 = icmp ne %struct.AVOption* %376, null, !dbg !3887
  br i1 %tobool469, label %if.then470, label %if.end471, !dbg !3889

if.then470:                                       ; preds = %lor.lhs.false, %while.body461
  br label %while.cond458, !dbg !3890, !llvm.loop !3891

if.end471:                                        ; preds = %lor.lhs.false
  %377 = load %struct.AVOption*, %struct.AVOption** %option, align 8, !dbg !3892
  %flags472 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %377, i32 0, i32 7, !dbg !3894
  %378 = load i32, i32* %flags472, align 8, !dbg !3894
  %and473 = and i32 %378, 2, !dbg !3895
  %tobool474 = icmp ne i32 %and473, 0, !dbg !3895
  br i1 %tobool474, label %if.end484, label %if.then475, !dbg !3896

if.then475:                                       ; preds = %if.end471
  %379 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !3897
  %key476 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %379, i32 0, i32 0, !dbg !3899
  %380 = load i8*, i8** %key476, align 8, !dbg !3899
  %381 = load %struct.AVOption*, %struct.AVOption** %option, align 8, !dbg !3900
  %help = getelementptr inbounds %struct.AVOption, %struct.AVOption* %381, i32 0, i32 1, !dbg !3901
  %382 = load i8*, i8** %help, align 8, !dbg !3901
  %tobool477 = icmp ne i8* %382, null, !dbg !3900
  br i1 %tobool477, label %cond.true478, label %cond.false480, !dbg !3900

cond.true478:                                     ; preds = %if.then475
  %383 = load %struct.AVOption*, %struct.AVOption** %option, align 8, !dbg !3902
  %help479 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %383, i32 0, i32 1, !dbg !3904
  %384 = load i8*, i8** %help479, align 8, !dbg !3904
  br label %cond.end481, !dbg !3905

cond.false480:                                    ; preds = %if.then475
  br label %cond.end481, !dbg !3906

cond.end481:                                      ; preds = %cond.false480, %cond.true478
  %cond482 = phi i8* [ %384, %cond.true478 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0), %cond.false480 ], !dbg !3908
  %385 = load i32, i32* @nb_input_files, align 4, !dbg !3910
  %sub483 = sub nsw i32 %385, 1, !dbg !3911
  %386 = load i8*, i8** %filename.addr, align 8, !dbg !3912
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.451, i32 0, i32 0), i8* %380, i8* %cond482, i32 %sub483, i8* %386), !dbg !3913
  call void @exit_program(i32 1) #11, !dbg !3914
  unreachable, !dbg !3914

if.end484:                                        ; preds = %if.end471
  %387 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !3915
  %key485 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %387, i32 0, i32 0, !dbg !3916
  %388 = load i8*, i8** %key485, align 8, !dbg !3916
  %389 = load %struct.AVOption*, %struct.AVOption** %option, align 8, !dbg !3917
  %help486 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %389, i32 0, i32 1, !dbg !3918
  %390 = load i8*, i8** %help486, align 8, !dbg !3918
  %tobool487 = icmp ne i8* %390, null, !dbg !3917
  br i1 %tobool487, label %cond.true488, label %cond.false490, !dbg !3917

cond.true488:                                     ; preds = %if.end484
  %391 = load %struct.AVOption*, %struct.AVOption** %option, align 8, !dbg !3919
  %help489 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %391, i32 0, i32 1, !dbg !3921
  %392 = load i8*, i8** %help489, align 8, !dbg !3921
  br label %cond.end491, !dbg !3922

cond.false490:                                    ; preds = %if.end484
  br label %cond.end491, !dbg !3923

cond.end491:                                      ; preds = %cond.false490, %cond.true488
  %cond492 = phi i8* [ %392, %cond.true488 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0), %cond.false490 ], !dbg !3925
  %393 = load i32, i32* @nb_input_files, align 4, !dbg !3927
  %sub493 = sub nsw i32 %393, 1, !dbg !3928
  %394 = load i8*, i8** %filename.addr, align 8, !dbg !3929
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([271 x i8], [271 x i8]* @.str.452, i32 0, i32 0), i8* %388, i8* %cond492, i32 %sub493, i8* %394), !dbg !3930
  br label %while.cond458, !dbg !3931, !llvm.loop !3891

while.end494:                                     ; preds = %while.cond458
  call void @av_dict_free(%struct.AVDictionary** %unused_opts), !dbg !3932
  store i32 0, i32* %i, align 4, !dbg !3933
  br label %for.cond495, !dbg !3935

for.cond495:                                      ; preds = %for.inc523, %while.end494
  %395 = load i32, i32* %i, align 4, !dbg !3936
  %396 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3939
  %nb_dump_attachment = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %396, i32 0, i32 25, !dbg !3940
  %397 = load i32, i32* %nb_dump_attachment, align 8, !dbg !3940
  %cmp496 = icmp slt i32 %395, %397, !dbg !3941
  br i1 %cmp496, label %for.body498, label %for.end525, !dbg !3942

for.body498:                                      ; preds = %for.cond495
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3943, metadata !1898), !dbg !3945
  store i32 0, i32* %j, align 4, !dbg !3946
  br label %for.cond499, !dbg !3948

for.cond499:                                      ; preds = %for.inc520, %for.body498
  %398 = load i32, i32* %j, align 4, !dbg !3949
  %399 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3952
  %nb_streams500 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %399, i32 0, i32 6, !dbg !3953
  %400 = load i32, i32* %nb_streams500, align 4, !dbg !3953
  %cmp501 = icmp ult i32 %398, %400, !dbg !3954
  br i1 %cmp501, label %for.body503, label %for.end522, !dbg !3955

for.body503:                                      ; preds = %for.cond499
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !3956, metadata !1898), !dbg !3958
  %401 = load i32, i32* %j, align 4, !dbg !3959
  %idxprom504 = sext i32 %401 to i64, !dbg !3960
  %402 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3960
  %streams505 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %402, i32 0, i32 7, !dbg !3961
  %403 = load %struct.AVStream**, %struct.AVStream*** %streams505, align 8, !dbg !3961
  %arrayidx506 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %403, i64 %idxprom504, !dbg !3960
  %404 = load %struct.AVStream*, %struct.AVStream** %arrayidx506, align 8, !dbg !3960
  store %struct.AVStream* %404, %struct.AVStream** %st, align 8, !dbg !3958
  %405 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic, align 8, !dbg !3962
  %406 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3964
  %407 = load i32, i32* %i, align 4, !dbg !3965
  %idxprom507 = sext i32 %407 to i64, !dbg !3966
  %408 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3966
  %dump_attachment = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %408, i32 0, i32 24, !dbg !3967
  %409 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %dump_attachment, align 8, !dbg !3967
  %arrayidx508 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %409, i64 %idxprom507, !dbg !3966
  %specifier509 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx508, i32 0, i32 0, !dbg !3968
  %410 = load i8*, i8** %specifier509, align 8, !dbg !3968
  %call510 = call i32 @check_stream_specifier(%struct.AVFormatContext* %405, %struct.AVStream* %406, i8* %410), !dbg !3969
  %cmp511 = icmp eq i32 %call510, 1, !dbg !3970
  br i1 %cmp511, label %if.then513, label %if.end519, !dbg !3971

if.then513:                                       ; preds = %for.body503
  %411 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3972
  %412 = load i32, i32* %i, align 4, !dbg !3973
  %idxprom514 = sext i32 %412 to i64, !dbg !3974
  %413 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !3974
  %dump_attachment515 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %413, i32 0, i32 24, !dbg !3975
  %414 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %dump_attachment515, align 8, !dbg !3975
  %arrayidx516 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %414, i64 %idxprom514, !dbg !3974
  %u517 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx516, i32 0, i32 1, !dbg !3976
  %str518 = bitcast %union.anon.1* %u517 to i8**, !dbg !3977
  %415 = load i8*, i8** %str518, align 8, !dbg !3977
  call void @dump_attachment(%struct.AVStream* %411, i8* %415), !dbg !3978
  br label %if.end519, !dbg !3978

if.end519:                                        ; preds = %if.then513, %for.body503
  br label %for.inc520, !dbg !3979

for.inc520:                                       ; preds = %if.end519
  %416 = load i32, i32* %j, align 4, !dbg !3980
  %inc521 = add nsw i32 %416, 1, !dbg !3980
  store i32 %inc521, i32* %j, align 4, !dbg !3980
  br label %for.cond499, !dbg !3982, !llvm.loop !3983

for.end522:                                       ; preds = %for.cond499
  br label %for.inc523, !dbg !3985

for.inc523:                                       ; preds = %for.end522
  %417 = load i32, i32* %i, align 4, !dbg !3986
  %inc524 = add nsw i32 %417, 1, !dbg !3986
  store i32 %inc524, i32* %i, align 4, !dbg !3986
  br label %for.cond495, !dbg !3988, !llvm.loop !3989

for.end525:                                       ; preds = %for.cond495
  store i32 1, i32* @input_stream_potentially_available, align 4, !dbg !3991
  ret i32 0, !dbg !3992
}

; Function Attrs: nounwind uwtable
define internal i32 @init_complex_filters() #0 !dbg !3993 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3996, metadata !1898), !dbg !3997
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3998, metadata !1898), !dbg !3999
  store i32 0, i32* %ret, align 4, !dbg !3999
  store i32 0, i32* %i, align 4, !dbg !4000
  br label %for.cond, !dbg !4002

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4003
  %1 = load i32, i32* @nb_filtergraphs, align 4, !dbg !4006
  %cmp = icmp slt i32 %0, %1, !dbg !4007
  br i1 %cmp, label %for.body, label %for.end, !dbg !4008

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !4009
  %idxprom = sext i32 %2 to i64, !dbg !4011
  %3 = load %struct.FilterGraph**, %struct.FilterGraph*** @filtergraphs, align 8, !dbg !4011
  %arrayidx = getelementptr inbounds %struct.FilterGraph*, %struct.FilterGraph** %3, i64 %idxprom, !dbg !4011
  %4 = load %struct.FilterGraph*, %struct.FilterGraph** %arrayidx, align 8, !dbg !4011
  %call = call i32 @init_complex_filtergraph(%struct.FilterGraph* %4), !dbg !4012
  store i32 %call, i32* %ret, align 4, !dbg !4013
  %5 = load i32, i32* %ret, align 4, !dbg !4014
  %cmp1 = icmp slt i32 %5, 0, !dbg !4016
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4017

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %ret, align 4, !dbg !4018
  store i32 %6, i32* %retval, align 4, !dbg !4019
  br label %return, !dbg !4019

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4020

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !4021
  %inc = add nsw i32 %7, 1, !dbg !4021
  store i32 %inc, i32* %i, align 4, !dbg !4021
  br label %for.cond, !dbg !4023, !llvm.loop !4024

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !4026
  br label %return, !dbg !4026

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4027
  ret i32 %8, !dbg !4027
}

; Function Attrs: nounwind uwtable
define internal i32 @open_output_file(%struct.OptionsContext* %o, i8* %filename) #0 !dbg !4028 {
entry:
  %o.addr = alloca %struct.OptionsContext*, align 8
  %filename.addr = alloca i8*, align 8
  %oc = alloca %struct.AVFormatContext*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %err = alloca i32, align 4
  %of = alloca %struct.OutputFile*, align 8
  %ost = alloca %struct.OutputStream*, align 8
  %ist = alloca %struct.InputStream*, align 8
  %unused_opts = alloca %struct.AVDictionary*, align 8
  %e = alloca %struct.AVDictionaryEntry*, align 8
  %format_flags = alloca i32, align 4
  %start_time = alloca i64, align 8
  %o48 = alloca %struct.AVOption*, align 8
  %fg = alloca %struct.FilterGraph*, align 8
  %ofilter = alloca %struct.OutputFilter*, align 8
  %subtitle_codec_name = alloca i8*, align 8
  %area = alloca i32, align 4
  %idx = alloca i32, align 4
  %qcr = alloca i32, align 4
  %new_area = alloca i32, align 4
  %best_score = alloca i32, align 4
  %idx136 = alloca i32, align 4
  %score = alloca i32, align 4
  %i173 = alloca i32, align 4
  %spec = alloca i8*, align 8
  %input_descriptor = alloca %struct.AVCodecDescriptor*, align 8
  %output_descriptor = alloca %struct.AVCodecDescriptor*, align 8
  %output_codec = alloca %struct.AVCodec*, align 8
  %input_props = alloca i32, align 4
  %output_props = alloca i32, align 4
  %codec_id259 = alloca i32, align 4
  %map = alloca %struct.StreamMap*, align 8
  %fg304 = alloca %struct.FilterGraph*, align 8
  %ofilter305 = alloca %struct.OutputFilter*, align 8
  %j306 = alloca i32, align 4
  %k = alloca i32, align 4
  %out = alloca %struct.AVFilterInOut*, align 8
  %src_idx = alloca i32, align 4
  %pb = alloca %struct.AVIOContext*, align 8
  %attachment = alloca i8*, align 8
  %p = alloca i8*, align 8
  %len = alloca i64, align 8
  %e497 = alloca %struct.AVDictionaryEntry*, align 8
  %class = alloca %struct.AVClass*, align 8
  %option = alloca %struct.AVOption*, align 8
  %fclass = alloca %struct.AVClass*, align 8
  %foption = alloca %struct.AVOption*, align 8
  %ost606 = alloca %struct.OutputStream*, align 8
  %ist614 = alloca %struct.InputStream*, align 8
  %f = alloca %struct.OutputFilter*, align 8
  %count = alloca i32, align 4
  %p861 = alloca i8*, align 8
  %in_file_index = alloca i32, align 4
  %ist960 = alloca %struct.InputStream*, align 8
  %p999 = alloca i8*, align 8
  %progid = alloca i32, align 4
  %program1005 = alloca %struct.AVProgram*, align 8
  %p2 = alloca i8*, align 8
  %to_dealloc = alloca i8*, align 8
  %key1010 = alloca i8*, align 8
  %p21040 = alloca i8*, align 8
  %to_dealloc1042 = alloca i8*, align 8
  %key1043 = alloca i8*, align 8
  %st_num = alloca i32, align 4
  %m = alloca %struct.AVDictionary**, align 8
  %type1086 = alloca i8, align 1
  %val = alloca i8*, align 8
  %stream_spec = alloca i8*, align 8
  %index1087 = alloca i32, align 4
  %j1088 = alloca i32, align 4
  %ret = alloca i32, align 4
  %tail = alloca i8*, align 8
  %theta = alloca double, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !4029, metadata !1898), !dbg !4030
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !4031, metadata !1898), !dbg !4032
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc, metadata !4033, metadata !1898), !dbg !4034
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4035, metadata !1898), !dbg !4036
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4037, metadata !1898), !dbg !4038
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4039, metadata !1898), !dbg !4040
  call void @llvm.dbg.declare(metadata %struct.OutputFile** %of, metadata !4041, metadata !1898), !dbg !4054
  call void @llvm.dbg.declare(metadata %struct.OutputStream** %ost, metadata !4055, metadata !1898), !dbg !4372
  call void @llvm.dbg.declare(metadata %struct.InputStream** %ist, metadata !4373, metadata !1898), !dbg !4376
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %unused_opts, metadata !4377, metadata !1898), !dbg !4378
  store %struct.AVDictionary* null, %struct.AVDictionary** %unused_opts, align 8, !dbg !4378
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %e, metadata !4379, metadata !1898), !dbg !4380
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %e, align 8, !dbg !4380
  call void @llvm.dbg.declare(metadata i32* %format_flags, metadata !4381, metadata !1898), !dbg !4382
  store i32 0, i32* %format_flags, align 4, !dbg !4382
  %0 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4383
  %stop_time = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %0, i32 0, i32 45, !dbg !4385
  %1 = load i64, i64* %stop_time, align 8, !dbg !4385
  %cmp = icmp ne i64 %1, 9223372036854775807, !dbg !4386
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4387

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4388
  %recording_time = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %2, i32 0, i32 44, !dbg !4390
  %3 = load i64, i64* %recording_time, align 8, !dbg !4390
  %cmp1 = icmp ne i64 %3, 9223372036854775807, !dbg !4391
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4392

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4393
  %stop_time2 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %4, i32 0, i32 45, !dbg !4395
  store i64 9223372036854775807, i64* %stop_time2, align 8, !dbg !4396
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.430, i32 0, i32 0)), !dbg !4397
  br label %if.end, !dbg !4398

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4399
  %stop_time3 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %5, i32 0, i32 45, !dbg !4401
  %6 = load i64, i64* %stop_time3, align 8, !dbg !4401
  %cmp4 = icmp ne i64 %6, 9223372036854775807, !dbg !4402
  br i1 %cmp4, label %land.lhs.true5, label %if.end18, !dbg !4403

land.lhs.true5:                                   ; preds = %if.end
  %7 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4404
  %recording_time6 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %7, i32 0, i32 44, !dbg !4406
  %8 = load i64, i64* %recording_time6, align 8, !dbg !4406
  %cmp7 = icmp eq i64 %8, 9223372036854775807, !dbg !4407
  br i1 %cmp7, label %if.then8, label %if.end18, !dbg !4408

if.then8:                                         ; preds = %land.lhs.true5
  call void @llvm.dbg.declare(metadata i64* %start_time, metadata !4409, metadata !1898), !dbg !4411
  %9 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4412
  %start_time9 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %9, i32 0, i32 1, !dbg !4413
  %10 = load i64, i64* %start_time9, align 8, !dbg !4413
  %cmp10 = icmp eq i64 %10, -9223372036854775808, !dbg !4414
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !4412

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !4415

cond.false:                                       ; preds = %if.then8
  %11 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4417
  %start_time11 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %11, i32 0, i32 1, !dbg !4419
  %12 = load i64, i64* %start_time11, align 8, !dbg !4419
  br label %cond.end, !dbg !4420

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %12, %cond.false ], !dbg !4421
  store i64 %cond, i64* %start_time, align 8, !dbg !4423
  %13 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4424
  %stop_time12 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %13, i32 0, i32 45, !dbg !4426
  %14 = load i64, i64* %stop_time12, align 8, !dbg !4426
  %15 = load i64, i64* %start_time, align 8, !dbg !4427
  %cmp13 = icmp sle i64 %14, %15, !dbg !4428
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !4429

if.then14:                                        ; preds = %cond.end
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.431, i32 0, i32 0)), !dbg !4430
  call void @exit_program(i32 1) #11, !dbg !4432
  unreachable, !dbg !4432

if.else:                                          ; preds = %cond.end
  %16 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4433
  %stop_time15 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %16, i32 0, i32 45, !dbg !4435
  %17 = load i64, i64* %stop_time15, align 8, !dbg !4435
  %18 = load i64, i64* %start_time, align 8, !dbg !4436
  %sub = sub nsw i64 %17, %18, !dbg !4437
  %19 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4438
  %recording_time16 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %19, i32 0, i32 44, !dbg !4439
  store i64 %sub, i64* %recording_time16, align 8, !dbg !4440
  br label %if.end17

if.end17:                                         ; preds = %if.else
  br label %if.end18, !dbg !4441

if.end18:                                         ; preds = %if.end17, %land.lhs.true5, %if.end
  %20 = load %struct.OutputFile**, %struct.OutputFile*** @output_files, align 8, !dbg !4442
  %21 = bitcast %struct.OutputFile** %20 to i8*, !dbg !4442
  %22 = load i32, i32* @nb_output_files, align 4, !dbg !4443
  %add = add nsw i32 %22, 1, !dbg !4444
  %call = call i8* @grow_array(i8* %21, i32 8, i32* @nb_output_files, i32 %add), !dbg !4445
  %23 = bitcast i8* %call to %struct.OutputFile**, !dbg !4445
  store %struct.OutputFile** %23, %struct.OutputFile*** @output_files, align 8, !dbg !4446
  %call19 = call noalias i8* @av_mallocz(i64 56), !dbg !4447
  %24 = bitcast i8* %call19 to %struct.OutputFile*, !dbg !4447
  store %struct.OutputFile* %24, %struct.OutputFile** %of, align 8, !dbg !4448
  %25 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !4449
  %tobool = icmp ne %struct.OutputFile* %25, null, !dbg !4449
  br i1 %tobool, label %if.end21, label %if.then20, !dbg !4451

if.then20:                                        ; preds = %if.end18
  call void @exit_program(i32 1) #11, !dbg !4452
  unreachable, !dbg !4452

if.end21:                                         ; preds = %if.end18
  %26 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !4453
  %27 = load i32, i32* @nb_output_files, align 4, !dbg !4454
  %sub22 = sub nsw i32 %27, 1, !dbg !4455
  %idxprom = sext i32 %sub22 to i64, !dbg !4456
  %28 = load %struct.OutputFile**, %struct.OutputFile*** @output_files, align 8, !dbg !4456
  %arrayidx = getelementptr inbounds %struct.OutputFile*, %struct.OutputFile** %28, i64 %idxprom, !dbg !4456
  store %struct.OutputFile* %26, %struct.OutputFile** %arrayidx, align 8, !dbg !4457
  %29 = load i32, i32* @nb_output_streams, align 4, !dbg !4458
  %30 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !4459
  %ost_index = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %30, i32 0, i32 2, !dbg !4460
  store i32 %29, i32* %ost_index, align 8, !dbg !4461
  %31 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4462
  %recording_time23 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %31, i32 0, i32 44, !dbg !4463
  %32 = load i64, i64* %recording_time23, align 8, !dbg !4463
  %33 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !4464
  %recording_time24 = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %33, i32 0, i32 3, !dbg !4465
  store i64 %32, i64* %recording_time24, align 8, !dbg !4466
  %34 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4467
  %start_time25 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %34, i32 0, i32 1, !dbg !4468
  %35 = load i64, i64* %start_time25, align 8, !dbg !4468
  %36 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !4469
  %start_time26 = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %36, i32 0, i32 4, !dbg !4470
  store i64 %35, i64* %start_time26, align 8, !dbg !4471
  %37 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4472
  %limit_filesize = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %37, i32 0, i32 46, !dbg !4473
  %38 = load i64, i64* %limit_filesize, align 8, !dbg !4473
  %39 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !4474
  %limit_filesize27 = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %39, i32 0, i32 5, !dbg !4475
  store i64 %38, i64* %limit_filesize27, align 8, !dbg !4476
  %40 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4477
  %shortest = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %40, i32 0, i32 49, !dbg !4478
  %41 = load i32, i32* %shortest, align 8, !dbg !4478
  %42 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !4479
  %shortest28 = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %42, i32 0, i32 6, !dbg !4480
  store i32 %41, i32* %shortest28, align 8, !dbg !4481
  %43 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !4482
  %opts = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %43, i32 0, i32 1, !dbg !4483
  %44 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4484
  %g = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %44, i32 0, i32 0, !dbg !4485
  %45 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !4485
  %format_opts = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %45, i32 0, i32 5, !dbg !4486
  %46 = load %struct.AVDictionary*, %struct.AVDictionary** %format_opts, align 8, !dbg !4486
  %call29 = call i32 @av_dict_copy(%struct.AVDictionary** %opts, %struct.AVDictionary* %46, i32 0), !dbg !4487
  %47 = load i8*, i8** %filename.addr, align 8, !dbg !4488
  %call30 = call i32 @strcmp(i8* %47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.433, i32 0, i32 0)) #10, !dbg !4490
  %tobool31 = icmp ne i32 %call30, 0, !dbg !4490
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !4491

if.then32:                                        ; preds = %if.end21
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.434, i32 0, i32 0), i8** %filename.addr, align 8, !dbg !4492
  br label %if.end33, !dbg !4493

if.end33:                                         ; preds = %if.then32, %if.end21
  %48 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4494
  %format = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %48, i32 0, i32 4, !dbg !4495
  %49 = load i8*, i8** %format, align 8, !dbg !4495
  %50 = load i8*, i8** %filename.addr, align 8, !dbg !4496
  %call34 = call i32 @avformat_alloc_output_context2(%struct.AVFormatContext** %oc, %struct.AVOutputFormat* null, i8* %49, i8* %50), !dbg !4497
  store i32 %call34, i32* %err, align 4, !dbg !4498
  %51 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4499
  %tobool35 = icmp ne %struct.AVFormatContext* %51, null, !dbg !4499
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !4501

if.then36:                                        ; preds = %if.end33
  %52 = load i8*, i8** %filename.addr, align 8, !dbg !4502
  %53 = load i32, i32* %err, align 4, !dbg !4504
  call void @print_error(i8* %52, i32 %53), !dbg !4505
  call void @exit_program(i32 1) #11, !dbg !4506
  unreachable, !dbg !4506

if.end37:                                         ; preds = %if.end33
  %54 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4507
  %55 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !4508
  %ctx = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %55, i32 0, i32 0, !dbg !4509
  store %struct.AVFormatContext* %54, %struct.AVFormatContext** %ctx, align 8, !dbg !4510
  %56 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4511
  %recording_time38 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %56, i32 0, i32 44, !dbg !4513
  %57 = load i64, i64* %recording_time38, align 8, !dbg !4513
  %cmp39 = icmp ne i64 %57, 9223372036854775807, !dbg !4514
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !4515

if.then40:                                        ; preds = %if.end37
  %58 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4516
  %recording_time41 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %58, i32 0, i32 44, !dbg !4517
  %59 = load i64, i64* %recording_time41, align 8, !dbg !4517
  %60 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4518
  %duration = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %60, i32 0, i32 11, !dbg !4519
  store i64 %59, i64* %duration, align 8, !dbg !4520
  br label %if.end42, !dbg !4518

if.end42:                                         ; preds = %if.then40, %if.end37
  %61 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4521
  %interrupt_callback = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %61, i32 0, i32 33, !dbg !4522
  %62 = bitcast %struct.AVIOInterruptCB* %interrupt_callback to i8*, !dbg !4523
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* bitcast (%struct.AVIOInterruptCB* @int_cb to i8*), i64 16, i32 8, i1 false), !dbg !4523
  %63 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4524
  %g43 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %63, i32 0, i32 0, !dbg !4525
  %64 = load %struct.OptionGroup*, %struct.OptionGroup** %g43, align 8, !dbg !4525
  %format_opts44 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %64, i32 0, i32 5, !dbg !4526
  %65 = load %struct.AVDictionary*, %struct.AVDictionary** %format_opts44, align 8, !dbg !4526
  %call45 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %65, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.481, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !4527
  store %struct.AVDictionaryEntry* %call45, %struct.AVDictionaryEntry** %e, align 8, !dbg !4528
  %66 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !4529
  %tobool46 = icmp ne %struct.AVDictionaryEntry* %66, null, !dbg !4529
  br i1 %tobool46, label %if.then47, label %if.end51, !dbg !4531

if.then47:                                        ; preds = %if.end42
  call void @llvm.dbg.declare(metadata %struct.AVOption** %o48, metadata !4532, metadata !1898), !dbg !4534
  %67 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4535
  %68 = bitcast %struct.AVFormatContext* %67 to i8*, !dbg !4535
  %call49 = call %struct.AVOption* @av_opt_find(i8* %68, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.481, i32 0, i32 0), i8* null, i32 0, i32 0), !dbg !4536
  store %struct.AVOption* %call49, %struct.AVOption** %o48, align 8, !dbg !4534
  %69 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4537
  %70 = bitcast %struct.AVFormatContext* %69 to i8*, !dbg !4537
  %71 = load %struct.AVOption*, %struct.AVOption** %o48, align 8, !dbg !4538
  %72 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !4539
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %72, i32 0, i32 1, !dbg !4540
  %73 = load i8*, i8** %value, align 8, !dbg !4540
  %call50 = call i32 @av_opt_eval_flags(i8* %70, %struct.AVOption* %71, i8* %73, i32* %format_flags), !dbg !4541
  br label %if.end51, !dbg !4542

if.end51:                                         ; preds = %if.then47, %if.end42
  %74 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4543
  %bitexact = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %74, i32 0, i32 50, !dbg !4545
  %75 = load i32, i32* %bitexact, align 4, !dbg !4545
  %tobool52 = icmp ne i32 %75, 0, !dbg !4543
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !4546

if.then53:                                        ; preds = %if.end51
  %76 = load i32, i32* %format_flags, align 4, !dbg !4547
  %or = or i32 %76, 1024, !dbg !4547
  store i32 %or, i32* %format_flags, align 4, !dbg !4547
  %77 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4549
  %flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %77, i32 0, i32 15, !dbg !4550
  %78 = load i32, i32* %flags, align 8, !dbg !4551
  %or54 = or i32 %78, 1024, !dbg !4551
  store i32 %or54, i32* %flags, align 8, !dbg !4551
  br label %if.end55, !dbg !4552

if.end55:                                         ; preds = %if.then53, %if.end51
  store i32 0, i32* %i, align 4, !dbg !4553
  br label %for.cond, !dbg !4555

for.cond:                                         ; preds = %for.inc71, %if.end55
  %79 = load i32, i32* %i, align 4, !dbg !4556
  %80 = load i32, i32* @nb_filtergraphs, align 4, !dbg !4559
  %cmp56 = icmp slt i32 %79, %80, !dbg !4560
  br i1 %cmp56, label %for.body, label %for.end73, !dbg !4561

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.FilterGraph** %fg, metadata !4562, metadata !1898), !dbg !4566
  %81 = load i32, i32* %i, align 4, !dbg !4567
  %idxprom57 = sext i32 %81 to i64, !dbg !4568
  %82 = load %struct.FilterGraph**, %struct.FilterGraph*** @filtergraphs, align 8, !dbg !4568
  %arrayidx58 = getelementptr inbounds %struct.FilterGraph*, %struct.FilterGraph** %82, i64 %idxprom57, !dbg !4568
  %83 = load %struct.FilterGraph*, %struct.FilterGraph** %arrayidx58, align 8, !dbg !4568
  store %struct.FilterGraph* %83, %struct.FilterGraph** %fg, align 8, !dbg !4566
  store i32 0, i32* %j, align 4, !dbg !4569
  br label %for.cond59, !dbg !4571

for.cond59:                                       ; preds = %for.inc, %for.body
  %84 = load i32, i32* %j, align 4, !dbg !4572
  %85 = load %struct.FilterGraph*, %struct.FilterGraph** %fg, align 8, !dbg !4575
  %nb_outputs = getelementptr inbounds %struct.FilterGraph, %struct.FilterGraph* %85, i32 0, i32 7, !dbg !4576
  %86 = load i32, i32* %nb_outputs, align 8, !dbg !4576
  %cmp60 = icmp slt i32 %84, %86, !dbg !4577
  br i1 %cmp60, label %for.body61, label %for.end, !dbg !4578

for.body61:                                       ; preds = %for.cond59
  call void @llvm.dbg.declare(metadata %struct.OutputFilter** %ofilter, metadata !4579, metadata !1898), !dbg !4581
  %87 = load i32, i32* %j, align 4, !dbg !4582
  %idxprom62 = sext i32 %87 to i64, !dbg !4583
  %88 = load %struct.FilterGraph*, %struct.FilterGraph** %fg, align 8, !dbg !4583
  %outputs = getelementptr inbounds %struct.FilterGraph, %struct.FilterGraph* %88, i32 0, i32 6, !dbg !4584
  %89 = load %struct.OutputFilter**, %struct.OutputFilter*** %outputs, align 8, !dbg !4584
  %arrayidx63 = getelementptr inbounds %struct.OutputFilter*, %struct.OutputFilter** %89, i64 %idxprom62, !dbg !4583
  %90 = load %struct.OutputFilter*, %struct.OutputFilter** %arrayidx63, align 8, !dbg !4583
  store %struct.OutputFilter* %90, %struct.OutputFilter** %ofilter, align 8, !dbg !4581
  %91 = load %struct.OutputFilter*, %struct.OutputFilter** %ofilter, align 8, !dbg !4585
  %out_tmp = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %91, i32 0, i32 4, !dbg !4587
  %92 = load %struct.AVFilterInOut*, %struct.AVFilterInOut** %out_tmp, align 8, !dbg !4587
  %tobool64 = icmp ne %struct.AVFilterInOut* %92, null, !dbg !4585
  br i1 %tobool64, label %lor.lhs.false, label %if.then67, !dbg !4588

lor.lhs.false:                                    ; preds = %for.body61
  %93 = load %struct.OutputFilter*, %struct.OutputFilter** %ofilter, align 8, !dbg !4589
  %out_tmp65 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %93, i32 0, i32 4, !dbg !4591
  %94 = load %struct.AVFilterInOut*, %struct.AVFilterInOut** %out_tmp65, align 8, !dbg !4591
  %name = getelementptr inbounds %struct.AVFilterInOut, %struct.AVFilterInOut* %94, i32 0, i32 0, !dbg !4592
  %95 = load i8*, i8** %name, align 8, !dbg !4592
  %tobool66 = icmp ne i8* %95, null, !dbg !4589
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !4593

if.then67:                                        ; preds = %lor.lhs.false, %for.body61
  br label %for.inc, !dbg !4594

if.end68:                                         ; preds = %lor.lhs.false
  %96 = load %struct.OutputFilter*, %struct.OutputFilter** %ofilter, align 8, !dbg !4595
  %type = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %96, i32 0, i32 5, !dbg !4596
  %97 = load i32, i32* %type, align 8, !dbg !4596
  switch i32 %97, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb69
    i32 3, label %sw.bb70
  ], !dbg !4597

sw.bb:                                            ; preds = %if.end68
  %98 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4598
  %video_disable = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %98, i32 0, i32 51, !dbg !4600
  store i32 1, i32* %video_disable, align 8, !dbg !4601
  br label %sw.epilog, !dbg !4602

sw.bb69:                                          ; preds = %if.end68
  %99 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4603
  %audio_disable = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %99, i32 0, i32 52, !dbg !4604
  store i32 1, i32* %audio_disable, align 4, !dbg !4605
  br label %sw.epilog, !dbg !4606

sw.bb70:                                          ; preds = %if.end68
  %100 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4607
  %subtitle_disable = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %100, i32 0, i32 53, !dbg !4608
  store i32 1, i32* %subtitle_disable, align 8, !dbg !4609
  br label %sw.epilog, !dbg !4610

sw.epilog:                                        ; preds = %if.end68, %sw.bb70, %sw.bb69, %sw.bb
  %101 = load %struct.OutputFilter*, %struct.OutputFilter** %ofilter, align 8, !dbg !4611
  %102 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4612
  %103 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4613
  call void @init_output_filter(%struct.OutputFilter* %101, %struct.OptionsContext* %102, %struct.AVFormatContext* %103), !dbg !4614
  br label %for.inc, !dbg !4615

for.inc:                                          ; preds = %sw.epilog, %if.then67
  %104 = load i32, i32* %j, align 4, !dbg !4616
  %inc = add nsw i32 %104, 1, !dbg !4616
  store i32 %inc, i32* %j, align 4, !dbg !4616
  br label %for.cond59, !dbg !4618, !llvm.loop !4619

for.end:                                          ; preds = %for.cond59
  br label %for.inc71, !dbg !4621

for.inc71:                                        ; preds = %for.end
  %105 = load i32, i32* %i, align 4, !dbg !4622
  %inc72 = add nsw i32 %105, 1, !dbg !4622
  store i32 %inc72, i32* %i, align 4, !dbg !4622
  br label %for.cond, !dbg !4624, !llvm.loop !4625

for.end73:                                        ; preds = %for.cond
  %106 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4627
  %nb_stream_maps = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %106, i32 0, i32 35, !dbg !4629
  %107 = load i32, i32* %nb_stream_maps, align 8, !dbg !4629
  %tobool74 = icmp ne i32 %107, 0, !dbg !4627
  br i1 %tobool74, label %if.else292, label %if.then75, !dbg !4630

if.then75:                                        ; preds = %for.end73
  call void @llvm.dbg.declare(metadata i8** %subtitle_codec_name, metadata !4631, metadata !1898), !dbg !4633
  store i8* null, i8** %subtitle_codec_name, align 8, !dbg !4633
  %108 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4634
  %video_disable76 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %108, i32 0, i32 51, !dbg !4636
  %109 = load i32, i32* %video_disable76, align 8, !dbg !4636
  %tobool77 = icmp ne i32 %109, 0, !dbg !4634
  br i1 %tobool77, label %if.end128, label %land.lhs.true78, !dbg !4637

land.lhs.true78:                                  ; preds = %if.then75
  %110 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4638
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %110, i32 0, i32 2, !dbg !4640
  %111 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !4640
  %112 = load i8*, i8** %filename.addr, align 8, !dbg !4641
  %call79 = call i32 @av_guess_codec(%struct.AVOutputFormat* %111, i8* null, i8* %112, i8* null, i32 0), !dbg !4642
  %cmp80 = icmp ne i32 %call79, 0, !dbg !4643
  br i1 %cmp80, label %if.then81, label %if.end128, !dbg !4644

if.then81:                                        ; preds = %land.lhs.true78
  call void @llvm.dbg.declare(metadata i32* %area, metadata !4645, metadata !1898), !dbg !4647
  store i32 0, i32* %area, align 4, !dbg !4647
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !4648, metadata !1898), !dbg !4649
  store i32 -1, i32* %idx, align 4, !dbg !4649
  call void @llvm.dbg.declare(metadata i32* %qcr, metadata !4650, metadata !1898), !dbg !4651
  %113 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4652
  %oformat82 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %113, i32 0, i32 2, !dbg !4653
  %114 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat82, align 8, !dbg !4653
  %115 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4654
  %oformat83 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %115, i32 0, i32 2, !dbg !4655
  %116 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat83, align 8, !dbg !4655
  %video_codec = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %116, i32 0, i32 5, !dbg !4656
  %117 = load i32, i32* %video_codec, align 4, !dbg !4656
  %call84 = call i32 @avformat_query_codec(%struct.AVOutputFormat* %114, i32 %117, i32 0), !dbg !4657
  store i32 %call84, i32* %qcr, align 4, !dbg !4651
  store i32 0, i32* %i, align 4, !dbg !4658
  br label %for.cond85, !dbg !4660

for.cond85:                                       ; preds = %for.inc121, %if.then81
  %118 = load i32, i32* %i, align 4, !dbg !4661
  %119 = load i32, i32* @nb_input_streams, align 4, !dbg !4664
  %cmp86 = icmp slt i32 %118, %119, !dbg !4665
  br i1 %cmp86, label %for.body87, label %for.end123, !dbg !4666

for.body87:                                       ; preds = %for.cond85
  call void @llvm.dbg.declare(metadata i32* %new_area, metadata !4667, metadata !1898), !dbg !4669
  %120 = load i32, i32* %i, align 4, !dbg !4670
  %idxprom88 = sext i32 %120 to i64, !dbg !4671
  %121 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !4671
  %arrayidx89 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %121, i64 %idxprom88, !dbg !4671
  %122 = load %struct.InputStream*, %struct.InputStream** %arrayidx89, align 8, !dbg !4671
  store %struct.InputStream* %122, %struct.InputStream** %ist, align 8, !dbg !4672
  %123 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !4673
  %st = getelementptr inbounds %struct.InputStream, %struct.InputStream* %123, i32 0, i32 1, !dbg !4674
  %124 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4674
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %124, i32 0, i32 19, !dbg !4675
  %125 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !4675
  %width = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %125, i32 0, i32 11, !dbg !4676
  %126 = load i32, i32* %width, align 8, !dbg !4676
  %127 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !4677
  %st90 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %127, i32 0, i32 1, !dbg !4678
  %128 = load %struct.AVStream*, %struct.AVStream** %st90, align 8, !dbg !4678
  %codecpar91 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %128, i32 0, i32 19, !dbg !4679
  %129 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar91, align 8, !dbg !4679
  %height = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %129, i32 0, i32 12, !dbg !4680
  %130 = load i32, i32* %height, align 4, !dbg !4680
  %mul = mul nsw i32 %126, %130, !dbg !4681
  %131 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !4682
  %st92 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %131, i32 0, i32 1, !dbg !4683
  %132 = load %struct.AVStream*, %struct.AVStream** %st92, align 8, !dbg !4683
  %codec_info_nb_frames = getelementptr inbounds %struct.AVStream, %struct.AVStream* %132, i32 0, i32 27, !dbg !4684
  %133 = load i32, i32* %codec_info_nb_frames, align 8, !dbg !4684
  %tobool93 = icmp ne i32 %133, 0, !dbg !4685
  %lnot = xor i1 %tobool93, true, !dbg !4685
  %lnot94 = xor i1 %lnot, true, !dbg !4686
  %lnot.ext = zext i1 %lnot94 to i32, !dbg !4686
  %mul95 = mul nsw i32 100000000, %lnot.ext, !dbg !4687
  %add96 = add nsw i32 %mul, %mul95, !dbg !4688
  store i32 %add96, i32* %new_area, align 4, !dbg !4689
  %134 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !4690
  %user_set_discard = getelementptr inbounds %struct.InputStream, %struct.InputStream* %134, i32 0, i32 3, !dbg !4692
  %135 = load i32, i32* %user_set_discard, align 4, !dbg !4692
  %cmp97 = icmp eq i32 %135, 48, !dbg !4693
  br i1 %cmp97, label %if.then98, label %if.end99, !dbg !4694

if.then98:                                        ; preds = %for.body87
  br label %for.inc121, !dbg !4695

if.end99:                                         ; preds = %for.body87
  %136 = load i32, i32* %qcr, align 4, !dbg !4696
  %cmp100 = icmp ne i32 %136, 1128878145, !dbg !4698
  br i1 %cmp100, label %land.lhs.true101, label %if.end105, !dbg !4699

land.lhs.true101:                                 ; preds = %if.end99
  %137 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !4700
  %st102 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %137, i32 0, i32 1, !dbg !4702
  %138 = load %struct.AVStream*, %struct.AVStream** %st102, align 8, !dbg !4702
  %disposition = getelementptr inbounds %struct.AVStream, %struct.AVStream* %138, i32 0, i32 8, !dbg !4703
  %139 = load i32, i32* %disposition, align 8, !dbg !4703
  %and = and i32 %139, 1024, !dbg !4704
  %tobool103 = icmp ne i32 %and, 0, !dbg !4704
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !4705

if.then104:                                       ; preds = %land.lhs.true101
  store i32 1, i32* %new_area, align 4, !dbg !4706
  br label %if.end105, !dbg !4707

if.end105:                                        ; preds = %if.then104, %land.lhs.true101, %if.end99
  %140 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !4708
  %st106 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %140, i32 0, i32 1, !dbg !4710
  %141 = load %struct.AVStream*, %struct.AVStream** %st106, align 8, !dbg !4710
  %codecpar107 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %141, i32 0, i32 19, !dbg !4711
  %142 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar107, align 8, !dbg !4711
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %142, i32 0, i32 0, !dbg !4712
  %143 = load i32, i32* %codec_type, align 8, !dbg !4712
  %cmp108 = icmp eq i32 %143, 0, !dbg !4713
  br i1 %cmp108, label %land.lhs.true109, label %if.end120, !dbg !4714

land.lhs.true109:                                 ; preds = %if.end105
  %144 = load i32, i32* %new_area, align 4, !dbg !4715
  %145 = load i32, i32* %area, align 4, !dbg !4716
  %cmp110 = icmp sgt i32 %144, %145, !dbg !4717
  br i1 %cmp110, label %if.then111, label %if.end120, !dbg !4718

if.then111:                                       ; preds = %land.lhs.true109
  %146 = load i32, i32* %qcr, align 4, !dbg !4720
  %cmp112 = icmp eq i32 %146, 1128878145, !dbg !4723
  br i1 %cmp112, label %land.lhs.true113, label %if.end119, !dbg !4724

land.lhs.true113:                                 ; preds = %if.then111
  %147 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !4725
  %st114 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %147, i32 0, i32 1, !dbg !4727
  %148 = load %struct.AVStream*, %struct.AVStream** %st114, align 8, !dbg !4727
  %disposition115 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %148, i32 0, i32 8, !dbg !4728
  %149 = load i32, i32* %disposition115, align 8, !dbg !4728
  %and116 = and i32 %149, 1024, !dbg !4729
  %tobool117 = icmp ne i32 %and116, 0, !dbg !4729
  br i1 %tobool117, label %if.end119, label %if.then118, !dbg !4730

if.then118:                                       ; preds = %land.lhs.true113
  br label %for.inc121, !dbg !4731

if.end119:                                        ; preds = %land.lhs.true113, %if.then111
  %150 = load i32, i32* %new_area, align 4, !dbg !4732
  store i32 %150, i32* %area, align 4, !dbg !4733
  %151 = load i32, i32* %i, align 4, !dbg !4734
  store i32 %151, i32* %idx, align 4, !dbg !4735
  br label %if.end120, !dbg !4736

if.end120:                                        ; preds = %if.end119, %land.lhs.true109, %if.end105
  br label %for.inc121, !dbg !4737

for.inc121:                                       ; preds = %if.end120, %if.then118, %if.then98
  %152 = load i32, i32* %i, align 4, !dbg !4738
  %inc122 = add nsw i32 %152, 1, !dbg !4738
  store i32 %inc122, i32* %i, align 4, !dbg !4738
  br label %for.cond85, !dbg !4740, !llvm.loop !4741

for.end123:                                       ; preds = %for.cond85
  %153 = load i32, i32* %idx, align 4, !dbg !4743
  %cmp124 = icmp sge i32 %153, 0, !dbg !4745
  br i1 %cmp124, label %if.then125, label %if.end127, !dbg !4746

if.then125:                                       ; preds = %for.end123
  %154 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4747
  %155 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4748
  %156 = load i32, i32* %idx, align 4, !dbg !4749
  %call126 = call %struct.OutputStream* @new_video_stream(%struct.OptionsContext* %154, %struct.AVFormatContext* %155, i32 %156), !dbg !4750
  br label %if.end127, !dbg !4750

if.end127:                                        ; preds = %if.then125, %for.end123
  br label %if.end128, !dbg !4751

if.end128:                                        ; preds = %if.end127, %land.lhs.true78, %if.then75
  %157 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4752
  %audio_disable129 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %157, i32 0, i32 52, !dbg !4754
  %158 = load i32, i32* %audio_disable129, align 4, !dbg !4754
  %tobool130 = icmp ne i32 %158, 0, !dbg !4752
  br i1 %tobool130, label %if.end172, label %land.lhs.true131, !dbg !4755

land.lhs.true131:                                 ; preds = %if.end128
  %159 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4756
  %oformat132 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %159, i32 0, i32 2, !dbg !4758
  %160 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat132, align 8, !dbg !4758
  %161 = load i8*, i8** %filename.addr, align 8, !dbg !4759
  %call133 = call i32 @av_guess_codec(%struct.AVOutputFormat* %160, i8* null, i8* %161, i8* null, i32 1), !dbg !4760
  %cmp134 = icmp ne i32 %call133, 0, !dbg !4761
  br i1 %cmp134, label %if.then135, label %if.end172, !dbg !4762

if.then135:                                       ; preds = %land.lhs.true131
  call void @llvm.dbg.declare(metadata i32* %best_score, metadata !4763, metadata !1898), !dbg !4765
  store i32 0, i32* %best_score, align 4, !dbg !4765
  call void @llvm.dbg.declare(metadata i32* %idx136, metadata !4766, metadata !1898), !dbg !4767
  store i32 -1, i32* %idx136, align 4, !dbg !4767
  store i32 0, i32* %i, align 4, !dbg !4768
  br label %for.cond137, !dbg !4770

for.cond137:                                      ; preds = %for.inc165, %if.then135
  %162 = load i32, i32* %i, align 4, !dbg !4771
  %163 = load i32, i32* @nb_input_streams, align 4, !dbg !4774
  %cmp138 = icmp slt i32 %162, %163, !dbg !4775
  br i1 %cmp138, label %for.body139, label %for.end167, !dbg !4776

for.body139:                                      ; preds = %for.cond137
  call void @llvm.dbg.declare(metadata i32* %score, metadata !4777, metadata !1898), !dbg !4779
  %164 = load i32, i32* %i, align 4, !dbg !4780
  %idxprom140 = sext i32 %164 to i64, !dbg !4781
  %165 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !4781
  %arrayidx141 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %165, i64 %idxprom140, !dbg !4781
  %166 = load %struct.InputStream*, %struct.InputStream** %arrayidx141, align 8, !dbg !4781
  store %struct.InputStream* %166, %struct.InputStream** %ist, align 8, !dbg !4782
  %167 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !4783
  %st142 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %167, i32 0, i32 1, !dbg !4784
  %168 = load %struct.AVStream*, %struct.AVStream** %st142, align 8, !dbg !4784
  %codecpar143 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %168, i32 0, i32 19, !dbg !4785
  %169 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar143, align 8, !dbg !4785
  %channels = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %169, i32 0, i32 22, !dbg !4786
  %170 = load i32, i32* %channels, align 8, !dbg !4786
  %171 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !4787
  %st144 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %171, i32 0, i32 1, !dbg !4788
  %172 = load %struct.AVStream*, %struct.AVStream** %st144, align 8, !dbg !4788
  %codec_info_nb_frames145 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %172, i32 0, i32 27, !dbg !4789
  %173 = load i32, i32* %codec_info_nb_frames145, align 8, !dbg !4789
  %tobool146 = icmp ne i32 %173, 0, !dbg !4790
  %lnot147 = xor i1 %tobool146, true, !dbg !4790
  %lnot149 = xor i1 %lnot147, true, !dbg !4791
  %lnot.ext150 = zext i1 %lnot149 to i32, !dbg !4791
  %mul151 = mul nsw i32 100000000, %lnot.ext150, !dbg !4792
  %add152 = add nsw i32 %170, %mul151, !dbg !4793
  store i32 %add152, i32* %score, align 4, !dbg !4794
  %174 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !4795
  %user_set_discard153 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %174, i32 0, i32 3, !dbg !4797
  %175 = load i32, i32* %user_set_discard153, align 4, !dbg !4797
  %cmp154 = icmp eq i32 %175, 48, !dbg !4798
  br i1 %cmp154, label %if.then155, label %if.end156, !dbg !4799

if.then155:                                       ; preds = %for.body139
  br label %for.inc165, !dbg !4800

if.end156:                                        ; preds = %for.body139
  %176 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !4801
  %st157 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %176, i32 0, i32 1, !dbg !4803
  %177 = load %struct.AVStream*, %struct.AVStream** %st157, align 8, !dbg !4803
  %codecpar158 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %177, i32 0, i32 19, !dbg !4804
  %178 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar158, align 8, !dbg !4804
  %codec_type159 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %178, i32 0, i32 0, !dbg !4805
  %179 = load i32, i32* %codec_type159, align 8, !dbg !4805
  %cmp160 = icmp eq i32 %179, 1, !dbg !4806
  br i1 %cmp160, label %land.lhs.true161, label %if.end164, !dbg !4807

land.lhs.true161:                                 ; preds = %if.end156
  %180 = load i32, i32* %score, align 4, !dbg !4808
  %181 = load i32, i32* %best_score, align 4, !dbg !4809
  %cmp162 = icmp sgt i32 %180, %181, !dbg !4810
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !4811

if.then163:                                       ; preds = %land.lhs.true161
  %182 = load i32, i32* %score, align 4, !dbg !4813
  store i32 %182, i32* %best_score, align 4, !dbg !4815
  %183 = load i32, i32* %i, align 4, !dbg !4816
  store i32 %183, i32* %idx136, align 4, !dbg !4817
  br label %if.end164, !dbg !4818

if.end164:                                        ; preds = %if.then163, %land.lhs.true161, %if.end156
  br label %for.inc165, !dbg !4819

for.inc165:                                       ; preds = %if.end164, %if.then155
  %184 = load i32, i32* %i, align 4, !dbg !4820
  %inc166 = add nsw i32 %184, 1, !dbg !4820
  store i32 %inc166, i32* %i, align 4, !dbg !4820
  br label %for.cond137, !dbg !4822, !llvm.loop !4823

for.end167:                                       ; preds = %for.cond137
  %185 = load i32, i32* %idx136, align 4, !dbg !4825
  %cmp168 = icmp sge i32 %185, 0, !dbg !4827
  br i1 %cmp168, label %if.then169, label %if.end171, !dbg !4828

if.then169:                                       ; preds = %for.end167
  %186 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4829
  %187 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4830
  %188 = load i32, i32* %idx136, align 4, !dbg !4831
  %call170 = call %struct.OutputStream* @new_audio_stream(%struct.OptionsContext* %186, %struct.AVFormatContext* %187, i32 %188), !dbg !4832
  br label %if.end171, !dbg !4832

if.end171:                                        ; preds = %if.then169, %for.end167
  br label %if.end172, !dbg !4833

if.end172:                                        ; preds = %if.end171, %land.lhs.true131, %if.end128
  call void @llvm.dbg.declare(metadata i32* %i173, metadata !4834, metadata !1898), !dbg !4836
  store i32 0, i32* %i173, align 4, !dbg !4837
  br label %for.cond174, !dbg !4839

for.cond174:                                      ; preds = %for.inc186, %if.end172
  %189 = load i32, i32* %i173, align 4, !dbg !4840
  %190 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4843
  %nb_codec_names = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %190, i32 0, i32 6, !dbg !4844
  %191 = load i32, i32* %nb_codec_names, align 8, !dbg !4844
  %cmp175 = icmp slt i32 %189, %191, !dbg !4845
  br i1 %cmp175, label %for.body176, label %for.end188, !dbg !4846

for.body176:                                      ; preds = %for.cond174
  call void @llvm.dbg.declare(metadata i8** %spec, metadata !4847, metadata !1898), !dbg !4849
  %192 = load i32, i32* %i173, align 4, !dbg !4850
  %idxprom177 = sext i32 %192 to i64, !dbg !4852
  %193 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4852
  %codec_names = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %193, i32 0, i32 5, !dbg !4853
  %194 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names, align 8, !dbg !4853
  %arrayidx178 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %194, i64 %idxprom177, !dbg !4852
  %specifier = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx178, i32 0, i32 0, !dbg !4854
  %195 = load i8*, i8** %specifier, align 8, !dbg !4854
  store i8* %195, i8** %spec, align 8, !dbg !4855
  %196 = load i8*, i8** %spec, align 8, !dbg !4856
  %call179 = call i32 @strcmp(i8* %196, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.257, i32 0, i32 0)) #10, !dbg !4857
  %tobool180 = icmp ne i32 %call179, 0, !dbg !4857
  br i1 %tobool180, label %if.end185, label %if.then181, !dbg !4858

if.then181:                                       ; preds = %for.body176
  %197 = load i32, i32* %i173, align 4, !dbg !4859
  %idxprom182 = sext i32 %197 to i64, !dbg !4862
  %198 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4862
  %codec_names183 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %198, i32 0, i32 5, !dbg !4863
  %199 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names183, align 8, !dbg !4863
  %arrayidx184 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %199, i64 %idxprom182, !dbg !4862
  %u = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx184, i32 0, i32 1, !dbg !4864
  %str = bitcast %union.anon.1* %u to i8**, !dbg !4865
  %200 = load i8*, i8** %str, align 8, !dbg !4865
  store i8* %200, i8** %subtitle_codec_name, align 8, !dbg !4866
  br label %if.end185, !dbg !4867

if.end185:                                        ; preds = %if.then181, %for.body176
  br label %for.inc186, !dbg !4868

for.inc186:                                       ; preds = %if.end185
  %201 = load i32, i32* %i173, align 4, !dbg !4870
  %inc187 = add nsw i32 %201, 1, !dbg !4870
  store i32 %inc187, i32* %i173, align 4, !dbg !4870
  br label %for.cond174, !dbg !4872, !llvm.loop !4873

for.end188:                                       ; preds = %for.cond174
  %202 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4875
  %subtitle_disable189 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %202, i32 0, i32 53, !dbg !4877
  %203 = load i32, i32* %subtitle_disable189, align 8, !dbg !4877
  %tobool190 = icmp ne i32 %203, 0, !dbg !4875
  br i1 %tobool190, label %if.end256, label %land.lhs.true191, !dbg !4878

land.lhs.true191:                                 ; preds = %for.end188
  %204 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4879
  %oformat192 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %204, i32 0, i32 2, !dbg !4881
  %205 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat192, align 8, !dbg !4881
  %subtitle_codec = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %205, i32 0, i32 6, !dbg !4882
  %206 = load i32, i32* %subtitle_codec, align 8, !dbg !4882
  %call193 = call %struct.AVCodec* @avcodec_find_encoder(i32 %206), !dbg !4883
  %tobool194 = icmp ne %struct.AVCodec* %call193, null, !dbg !4883
  br i1 %tobool194, label %if.then197, label %lor.lhs.false195, !dbg !4884

lor.lhs.false195:                                 ; preds = %land.lhs.true191
  %207 = load i8*, i8** %subtitle_codec_name, align 8, !dbg !4885
  %tobool196 = icmp ne i8* %207, null, !dbg !4885
  br i1 %tobool196, label %if.then197, label %if.end256, !dbg !4887

if.then197:                                       ; preds = %lor.lhs.false195, %land.lhs.true191
  store i32 0, i32* %i, align 4, !dbg !4888
  br label %for.cond198, !dbg !4891

for.cond198:                                      ; preds = %for.inc253, %if.then197
  %208 = load i32, i32* %i, align 4, !dbg !4892
  %209 = load i32, i32* @nb_input_streams, align 4, !dbg !4895
  %cmp199 = icmp slt i32 %208, %209, !dbg !4896
  br i1 %cmp199, label %for.body200, label %for.end255, !dbg !4897

for.body200:                                      ; preds = %for.cond198
  %210 = load i32, i32* %i, align 4, !dbg !4898
  %idxprom201 = sext i32 %210 to i64, !dbg !4900
  %211 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !4900
  %arrayidx202 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %211, i64 %idxprom201, !dbg !4900
  %212 = load %struct.InputStream*, %struct.InputStream** %arrayidx202, align 8, !dbg !4900
  %st203 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %212, i32 0, i32 1, !dbg !4901
  %213 = load %struct.AVStream*, %struct.AVStream** %st203, align 8, !dbg !4901
  %codecpar204 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %213, i32 0, i32 19, !dbg !4902
  %214 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar204, align 8, !dbg !4902
  %codec_type205 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %214, i32 0, i32 0, !dbg !4903
  %215 = load i32, i32* %codec_type205, align 8, !dbg !4903
  %cmp206 = icmp eq i32 %215, 3, !dbg !4904
  br i1 %cmp206, label %if.then207, label %if.end252, !dbg !4905

if.then207:                                       ; preds = %for.body200
  call void @llvm.dbg.declare(metadata %struct.AVCodecDescriptor** %input_descriptor, metadata !4906, metadata !1898), !dbg !4908
  %216 = load i32, i32* %i, align 4, !dbg !4909
  %idxprom208 = sext i32 %216 to i64, !dbg !4910
  %217 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !4910
  %arrayidx209 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %217, i64 %idxprom208, !dbg !4910
  %218 = load %struct.InputStream*, %struct.InputStream** %arrayidx209, align 8, !dbg !4910
  %st210 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %218, i32 0, i32 1, !dbg !4911
  %219 = load %struct.AVStream*, %struct.AVStream** %st210, align 8, !dbg !4911
  %codecpar211 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %219, i32 0, i32 19, !dbg !4912
  %220 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar211, align 8, !dbg !4912
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %220, i32 0, i32 1, !dbg !4913
  %221 = load i32, i32* %codec_id, align 4, !dbg !4913
  %call212 = call %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32 %221), !dbg !4914
  store %struct.AVCodecDescriptor* %call212, %struct.AVCodecDescriptor** %input_descriptor, align 8, !dbg !4908
  call void @llvm.dbg.declare(metadata %struct.AVCodecDescriptor** %output_descriptor, metadata !4915, metadata !1898), !dbg !4916
  store %struct.AVCodecDescriptor* null, %struct.AVCodecDescriptor** %output_descriptor, align 8, !dbg !4916
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %output_codec, metadata !4917, metadata !1898), !dbg !4920
  %222 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4921
  %oformat213 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %222, i32 0, i32 2, !dbg !4922
  %223 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat213, align 8, !dbg !4922
  %subtitle_codec214 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %223, i32 0, i32 6, !dbg !4923
  %224 = load i32, i32* %subtitle_codec214, align 8, !dbg !4923
  %call215 = call %struct.AVCodec* @avcodec_find_encoder(i32 %224), !dbg !4924
  store %struct.AVCodec* %call215, %struct.AVCodec** %output_codec, align 8, !dbg !4920
  call void @llvm.dbg.declare(metadata i32* %input_props, metadata !4925, metadata !1898), !dbg !4926
  store i32 0, i32* %input_props, align 4, !dbg !4926
  call void @llvm.dbg.declare(metadata i32* %output_props, metadata !4927, metadata !1898), !dbg !4928
  store i32 0, i32* %output_props, align 4, !dbg !4928
  %225 = load i32, i32* %i, align 4, !dbg !4929
  %idxprom216 = sext i32 %225 to i64, !dbg !4931
  %226 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !4931
  %arrayidx217 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %226, i64 %idxprom216, !dbg !4931
  %227 = load %struct.InputStream*, %struct.InputStream** %arrayidx217, align 8, !dbg !4931
  %user_set_discard218 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %227, i32 0, i32 3, !dbg !4932
  %228 = load i32, i32* %user_set_discard218, align 4, !dbg !4932
  %cmp219 = icmp eq i32 %228, 48, !dbg !4933
  br i1 %cmp219, label %if.then220, label %if.end221, !dbg !4934

if.then220:                                       ; preds = %if.then207
  br label %for.inc253, !dbg !4935

if.end221:                                        ; preds = %if.then207
  %229 = load %struct.AVCodec*, %struct.AVCodec** %output_codec, align 8, !dbg !4936
  %tobool222 = icmp ne %struct.AVCodec* %229, null, !dbg !4936
  br i1 %tobool222, label %if.then223, label %if.end225, !dbg !4938

if.then223:                                       ; preds = %if.end221
  %230 = load %struct.AVCodec*, %struct.AVCodec** %output_codec, align 8, !dbg !4939
  %id = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %230, i32 0, i32 3, !dbg !4940
  %231 = load i32, i32* %id, align 4, !dbg !4940
  %call224 = call %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32 %231), !dbg !4941
  store %struct.AVCodecDescriptor* %call224, %struct.AVCodecDescriptor** %output_descriptor, align 8, !dbg !4942
  br label %if.end225, !dbg !4943

if.end225:                                        ; preds = %if.then223, %if.end221
  %232 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %input_descriptor, align 8, !dbg !4944
  %tobool226 = icmp ne %struct.AVCodecDescriptor* %232, null, !dbg !4944
  br i1 %tobool226, label %if.then227, label %if.end229, !dbg !4946

if.then227:                                       ; preds = %if.end225
  %233 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %input_descriptor, align 8, !dbg !4947
  %props = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %233, i32 0, i32 4, !dbg !4948
  %234 = load i32, i32* %props, align 8, !dbg !4948
  %and228 = and i32 %234, 196608, !dbg !4949
  store i32 %and228, i32* %input_props, align 4, !dbg !4950
  br label %if.end229, !dbg !4951

if.end229:                                        ; preds = %if.then227, %if.end225
  %235 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %output_descriptor, align 8, !dbg !4952
  %tobool230 = icmp ne %struct.AVCodecDescriptor* %235, null, !dbg !4952
  br i1 %tobool230, label %if.then231, label %if.end234, !dbg !4954

if.then231:                                       ; preds = %if.end229
  %236 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %output_descriptor, align 8, !dbg !4955
  %props232 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %236, i32 0, i32 4, !dbg !4956
  %237 = load i32, i32* %props232, align 8, !dbg !4956
  %and233 = and i32 %237, 196608, !dbg !4957
  store i32 %and233, i32* %output_props, align 4, !dbg !4958
  br label %if.end234, !dbg !4959

if.end234:                                        ; preds = %if.then231, %if.end229
  %238 = load i8*, i8** %subtitle_codec_name, align 8, !dbg !4960
  %tobool235 = icmp ne i8* %238, null, !dbg !4960
  br i1 %tobool235, label %if.then249, label %lor.lhs.false236, !dbg !4962

lor.lhs.false236:                                 ; preds = %if.end234
  %239 = load i32, i32* %input_props, align 4, !dbg !4963
  %240 = load i32, i32* %output_props, align 4, !dbg !4964
  %and237 = and i32 %239, %240, !dbg !4965
  %tobool238 = icmp ne i32 %and237, 0, !dbg !4965
  br i1 %tobool238, label %if.then249, label %lor.lhs.false239, !dbg !4966

lor.lhs.false239:                                 ; preds = %lor.lhs.false236
  %241 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %input_descriptor, align 8, !dbg !4967
  %tobool240 = icmp ne %struct.AVCodecDescriptor* %241, null, !dbg !4967
  br i1 %tobool240, label %land.lhs.true241, label %if.end251, !dbg !4968

land.lhs.true241:                                 ; preds = %lor.lhs.false239
  %242 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %output_descriptor, align 8, !dbg !4969
  %tobool242 = icmp ne %struct.AVCodecDescriptor* %242, null, !dbg !4969
  br i1 %tobool242, label %land.lhs.true243, label %if.end251, !dbg !4971

land.lhs.true243:                                 ; preds = %land.lhs.true241
  %243 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %input_descriptor, align 8, !dbg !4972
  %props244 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %243, i32 0, i32 4, !dbg !4973
  %244 = load i32, i32* %props244, align 8, !dbg !4973
  %tobool245 = icmp ne i32 %244, 0, !dbg !4972
  br i1 %tobool245, label %lor.lhs.false246, label %if.then249, !dbg !4974

lor.lhs.false246:                                 ; preds = %land.lhs.true243
  %245 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %output_descriptor, align 8, !dbg !4975
  %props247 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %245, i32 0, i32 4, !dbg !4976
  %246 = load i32, i32* %props247, align 8, !dbg !4976
  %tobool248 = icmp ne i32 %246, 0, !dbg !4975
  br i1 %tobool248, label %if.end251, label %if.then249, !dbg !4977

if.then249:                                       ; preds = %lor.lhs.false246, %land.lhs.true243, %lor.lhs.false236, %if.end234
  %247 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4979
  %248 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !4981
  %249 = load i32, i32* %i, align 4, !dbg !4982
  %call250 = call %struct.OutputStream* @new_subtitle_stream(%struct.OptionsContext* %247, %struct.AVFormatContext* %248, i32 %249), !dbg !4983
  br label %for.end255, !dbg !4984

if.end251:                                        ; preds = %lor.lhs.false246, %land.lhs.true241, %lor.lhs.false239
  br label %if.end252, !dbg !4985

if.end252:                                        ; preds = %if.end251, %for.body200
  br label %for.inc253, !dbg !4986

for.inc253:                                       ; preds = %if.end252, %if.then220
  %250 = load i32, i32* %i, align 4, !dbg !4988
  %inc254 = add nsw i32 %250, 1, !dbg !4988
  store i32 %inc254, i32* %i, align 4, !dbg !4988
  br label %for.cond198, !dbg !4990, !llvm.loop !4991

for.end255:                                       ; preds = %if.then249, %for.cond198
  br label %if.end256, !dbg !4993

if.end256:                                        ; preds = %for.end255, %lor.lhs.false195, %for.end188
  %251 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !4994
  %data_disable = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %251, i32 0, i32 54, !dbg !4996
  %252 = load i32, i32* %data_disable, align 4, !dbg !4996
  %tobool257 = icmp ne i32 %252, 0, !dbg !4994
  br i1 %tobool257, label %if.end291, label %if.then258, !dbg !4997

if.then258:                                       ; preds = %if.end256
  call void @llvm.dbg.declare(metadata i32* %codec_id259, metadata !4998, metadata !1898), !dbg !5000
  %253 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5001
  %oformat260 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %253, i32 0, i32 2, !dbg !5002
  %254 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat260, align 8, !dbg !5002
  %255 = load i8*, i8** %filename.addr, align 8, !dbg !5003
  %call261 = call i32 @av_guess_codec(%struct.AVOutputFormat* %254, i8* null, i8* %255, i8* null, i32 2), !dbg !5004
  store i32 %call261, i32* %codec_id259, align 4, !dbg !5000
  store i32 0, i32* %i, align 4, !dbg !5005
  br label %for.cond262, !dbg !5007

for.cond262:                                      ; preds = %for.inc288, %if.then258
  %256 = load i32, i32* %codec_id259, align 4, !dbg !5008
  %cmp263 = icmp ne i32 %256, 0, !dbg !5011
  br i1 %cmp263, label %land.rhs, label %land.end, !dbg !5012

land.rhs:                                         ; preds = %for.cond262
  %257 = load i32, i32* %i, align 4, !dbg !5013
  %258 = load i32, i32* @nb_input_streams, align 4, !dbg !5015
  %cmp264 = icmp slt i32 %257, %258, !dbg !5016
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond262
  %259 = phi i1 [ false, %for.cond262 ], [ %cmp264, %land.rhs ]
  br i1 %259, label %for.body265, label %for.end290, !dbg !5017

for.body265:                                      ; preds = %land.end
  %260 = load i32, i32* %i, align 4, !dbg !5019
  %idxprom266 = sext i32 %260 to i64, !dbg !5022
  %261 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !5022
  %arrayidx267 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %261, i64 %idxprom266, !dbg !5022
  %262 = load %struct.InputStream*, %struct.InputStream** %arrayidx267, align 8, !dbg !5022
  %user_set_discard268 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %262, i32 0, i32 3, !dbg !5023
  %263 = load i32, i32* %user_set_discard268, align 4, !dbg !5023
  %cmp269 = icmp eq i32 %263, 48, !dbg !5024
  br i1 %cmp269, label %if.then270, label %if.end271, !dbg !5025

if.then270:                                       ; preds = %for.body265
  br label %for.inc288, !dbg !5026

if.end271:                                        ; preds = %for.body265
  %264 = load i32, i32* %i, align 4, !dbg !5027
  %idxprom272 = sext i32 %264 to i64, !dbg !5029
  %265 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !5029
  %arrayidx273 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %265, i64 %idxprom272, !dbg !5029
  %266 = load %struct.InputStream*, %struct.InputStream** %arrayidx273, align 8, !dbg !5029
  %st274 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %266, i32 0, i32 1, !dbg !5030
  %267 = load %struct.AVStream*, %struct.AVStream** %st274, align 8, !dbg !5030
  %codecpar275 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %267, i32 0, i32 19, !dbg !5031
  %268 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar275, align 8, !dbg !5031
  %codec_type276 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %268, i32 0, i32 0, !dbg !5032
  %269 = load i32, i32* %codec_type276, align 8, !dbg !5032
  %cmp277 = icmp eq i32 %269, 2, !dbg !5033
  br i1 %cmp277, label %land.lhs.true278, label %if.end287, !dbg !5034

land.lhs.true278:                                 ; preds = %if.end271
  %270 = load i32, i32* %i, align 4, !dbg !5035
  %idxprom279 = sext i32 %270 to i64, !dbg !5037
  %271 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !5037
  %arrayidx280 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %271, i64 %idxprom279, !dbg !5037
  %272 = load %struct.InputStream*, %struct.InputStream** %arrayidx280, align 8, !dbg !5037
  %st281 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %272, i32 0, i32 1, !dbg !5038
  %273 = load %struct.AVStream*, %struct.AVStream** %st281, align 8, !dbg !5038
  %codecpar282 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %273, i32 0, i32 19, !dbg !5039
  %274 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar282, align 8, !dbg !5039
  %codec_id283 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %274, i32 0, i32 1, !dbg !5040
  %275 = load i32, i32* %codec_id283, align 4, !dbg !5040
  %276 = load i32, i32* %codec_id259, align 4, !dbg !5041
  %cmp284 = icmp eq i32 %275, %276, !dbg !5042
  br i1 %cmp284, label %if.then285, label %if.end287, !dbg !5043

if.then285:                                       ; preds = %land.lhs.true278
  %277 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5045
  %278 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5046
  %279 = load i32, i32* %i, align 4, !dbg !5047
  %call286 = call %struct.OutputStream* @new_data_stream(%struct.OptionsContext* %277, %struct.AVFormatContext* %278, i32 %279), !dbg !5048
  br label %if.end287, !dbg !5048

if.end287:                                        ; preds = %if.then285, %land.lhs.true278, %if.end271
  br label %for.inc288, !dbg !5049

for.inc288:                                       ; preds = %if.end287, %if.then270
  %280 = load i32, i32* %i, align 4, !dbg !5050
  %inc289 = add nsw i32 %280, 1, !dbg !5050
  store i32 %inc289, i32* %i, align 4, !dbg !5050
  br label %for.cond262, !dbg !5052, !llvm.loop !5053

for.end290:                                       ; preds = %land.end
  br label %if.end291, !dbg !5055

if.end291:                                        ; preds = %for.end290, %if.end256
  br label %if.end434, !dbg !5056

if.else292:                                       ; preds = %for.end73
  store i32 0, i32* %i, align 4, !dbg !5057
  br label %for.cond293, !dbg !5060

for.cond293:                                      ; preds = %for.inc431, %if.else292
  %281 = load i32, i32* %i, align 4, !dbg !5061
  %282 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5064
  %nb_stream_maps294 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %282, i32 0, i32 35, !dbg !5065
  %283 = load i32, i32* %nb_stream_maps294, align 8, !dbg !5065
  %cmp295 = icmp slt i32 %281, %283, !dbg !5066
  br i1 %cmp295, label %for.body296, label %for.end433, !dbg !5067

for.body296:                                      ; preds = %for.cond293
  call void @llvm.dbg.declare(metadata %struct.StreamMap** %map, metadata !5068, metadata !1898), !dbg !5070
  %284 = load i32, i32* %i, align 4, !dbg !5071
  %idxprom297 = sext i32 %284 to i64, !dbg !5072
  %285 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5072
  %stream_maps = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %285, i32 0, i32 34, !dbg !5073
  %286 = load %struct.StreamMap*, %struct.StreamMap** %stream_maps, align 8, !dbg !5073
  %arrayidx298 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %286, i64 %idxprom297, !dbg !5072
  store %struct.StreamMap* %arrayidx298, %struct.StreamMap** %map, align 8, !dbg !5070
  %287 = load %struct.StreamMap*, %struct.StreamMap** %map, align 8, !dbg !5074
  %disabled = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %287, i32 0, i32 0, !dbg !5076
  %288 = load i32, i32* %disabled, align 8, !dbg !5076
  %tobool299 = icmp ne i32 %288, 0, !dbg !5074
  br i1 %tobool299, label %if.then300, label %if.end301, !dbg !5077

if.then300:                                       ; preds = %for.body296
  br label %for.inc431, !dbg !5078

if.end301:                                        ; preds = %for.body296
  %289 = load %struct.StreamMap*, %struct.StreamMap** %map, align 8, !dbg !5079
  %linklabel = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %289, i32 0, i32 5, !dbg !5081
  %290 = load i8*, i8** %linklabel, align 8, !dbg !5081
  %tobool302 = icmp ne i8* %290, null, !dbg !5079
  br i1 %tobool302, label %if.then303, label %if.else341, !dbg !5082

if.then303:                                       ; preds = %if.end301
  call void @llvm.dbg.declare(metadata %struct.FilterGraph** %fg304, metadata !5083, metadata !1898), !dbg !5085
  call void @llvm.dbg.declare(metadata %struct.OutputFilter** %ofilter305, metadata !5086, metadata !1898), !dbg !5087
  store %struct.OutputFilter* null, %struct.OutputFilter** %ofilter305, align 8, !dbg !5087
  call void @llvm.dbg.declare(metadata i32* %j306, metadata !5088, metadata !1898), !dbg !5089
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5090, metadata !1898), !dbg !5091
  store i32 0, i32* %j306, align 4, !dbg !5092
  br label %for.cond307, !dbg !5094

for.cond307:                                      ; preds = %for.inc334, %if.then303
  %291 = load i32, i32* %j306, align 4, !dbg !5095
  %292 = load i32, i32* @nb_filtergraphs, align 4, !dbg !5098
  %cmp308 = icmp slt i32 %291, %292, !dbg !5099
  br i1 %cmp308, label %for.body309, label %for.end336, !dbg !5100

for.body309:                                      ; preds = %for.cond307
  %293 = load i32, i32* %j306, align 4, !dbg !5101
  %idxprom310 = sext i32 %293 to i64, !dbg !5103
  %294 = load %struct.FilterGraph**, %struct.FilterGraph*** @filtergraphs, align 8, !dbg !5103
  %arrayidx311 = getelementptr inbounds %struct.FilterGraph*, %struct.FilterGraph** %294, i64 %idxprom310, !dbg !5103
  %295 = load %struct.FilterGraph*, %struct.FilterGraph** %arrayidx311, align 8, !dbg !5103
  store %struct.FilterGraph* %295, %struct.FilterGraph** %fg304, align 8, !dbg !5104
  store i32 0, i32* %k, align 4, !dbg !5105
  br label %for.cond312, !dbg !5107

for.cond312:                                      ; preds = %for.inc331, %for.body309
  %296 = load i32, i32* %k, align 4, !dbg !5108
  %297 = load %struct.FilterGraph*, %struct.FilterGraph** %fg304, align 8, !dbg !5111
  %nb_outputs313 = getelementptr inbounds %struct.FilterGraph, %struct.FilterGraph* %297, i32 0, i32 7, !dbg !5112
  %298 = load i32, i32* %nb_outputs313, align 8, !dbg !5112
  %cmp314 = icmp slt i32 %296, %298, !dbg !5113
  br i1 %cmp314, label %for.body315, label %for.end333, !dbg !5114

for.body315:                                      ; preds = %for.cond312
  call void @llvm.dbg.declare(metadata %struct.AVFilterInOut** %out, metadata !5115, metadata !1898), !dbg !5117
  %299 = load i32, i32* %k, align 4, !dbg !5118
  %idxprom316 = sext i32 %299 to i64, !dbg !5119
  %300 = load %struct.FilterGraph*, %struct.FilterGraph** %fg304, align 8, !dbg !5119
  %outputs317 = getelementptr inbounds %struct.FilterGraph, %struct.FilterGraph* %300, i32 0, i32 6, !dbg !5120
  %301 = load %struct.OutputFilter**, %struct.OutputFilter*** %outputs317, align 8, !dbg !5120
  %arrayidx318 = getelementptr inbounds %struct.OutputFilter*, %struct.OutputFilter** %301, i64 %idxprom316, !dbg !5119
  %302 = load %struct.OutputFilter*, %struct.OutputFilter** %arrayidx318, align 8, !dbg !5119
  %out_tmp319 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %302, i32 0, i32 4, !dbg !5121
  %303 = load %struct.AVFilterInOut*, %struct.AVFilterInOut** %out_tmp319, align 8, !dbg !5121
  store %struct.AVFilterInOut* %303, %struct.AVFilterInOut** %out, align 8, !dbg !5117
  %304 = load %struct.AVFilterInOut*, %struct.AVFilterInOut** %out, align 8, !dbg !5122
  %tobool320 = icmp ne %struct.AVFilterInOut* %304, null, !dbg !5122
  br i1 %tobool320, label %land.lhs.true321, label %if.end330, !dbg !5124

land.lhs.true321:                                 ; preds = %for.body315
  %305 = load %struct.AVFilterInOut*, %struct.AVFilterInOut** %out, align 8, !dbg !5125
  %name322 = getelementptr inbounds %struct.AVFilterInOut, %struct.AVFilterInOut* %305, i32 0, i32 0, !dbg !5127
  %306 = load i8*, i8** %name322, align 8, !dbg !5127
  %307 = load %struct.StreamMap*, %struct.StreamMap** %map, align 8, !dbg !5128
  %linklabel323 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %307, i32 0, i32 5, !dbg !5129
  %308 = load i8*, i8** %linklabel323, align 8, !dbg !5129
  %call324 = call i32 @strcmp(i8* %306, i8* %308) #10, !dbg !5130
  %tobool325 = icmp ne i32 %call324, 0, !dbg !5130
  br i1 %tobool325, label %if.end330, label %if.then326, !dbg !5131

if.then326:                                       ; preds = %land.lhs.true321
  %309 = load i32, i32* %k, align 4, !dbg !5132
  %idxprom327 = sext i32 %309 to i64, !dbg !5134
  %310 = load %struct.FilterGraph*, %struct.FilterGraph** %fg304, align 8, !dbg !5134
  %outputs328 = getelementptr inbounds %struct.FilterGraph, %struct.FilterGraph* %310, i32 0, i32 6, !dbg !5135
  %311 = load %struct.OutputFilter**, %struct.OutputFilter*** %outputs328, align 8, !dbg !5135
  %arrayidx329 = getelementptr inbounds %struct.OutputFilter*, %struct.OutputFilter** %311, i64 %idxprom327, !dbg !5134
  %312 = load %struct.OutputFilter*, %struct.OutputFilter** %arrayidx329, align 8, !dbg !5134
  store %struct.OutputFilter* %312, %struct.OutputFilter** %ofilter305, align 8, !dbg !5136
  br label %loop_end, !dbg !5137

if.end330:                                        ; preds = %land.lhs.true321, %for.body315
  br label %for.inc331, !dbg !5138

for.inc331:                                       ; preds = %if.end330
  %313 = load i32, i32* %k, align 4, !dbg !5139
  %inc332 = add nsw i32 %313, 1, !dbg !5139
  store i32 %inc332, i32* %k, align 4, !dbg !5139
  br label %for.cond312, !dbg !5141, !llvm.loop !5142

for.end333:                                       ; preds = %for.cond312
  br label %for.inc334, !dbg !5144

for.inc334:                                       ; preds = %for.end333
  %314 = load i32, i32* %j306, align 4, !dbg !5145
  %inc335 = add nsw i32 %314, 1, !dbg !5145
  store i32 %inc335, i32* %j306, align 4, !dbg !5145
  br label %for.cond307, !dbg !5147, !llvm.loop !5148

for.end336:                                       ; preds = %for.cond307
  br label %loop_end, !dbg !5150

loop_end:                                         ; preds = %for.end336, %if.then326
  %315 = load %struct.OutputFilter*, %struct.OutputFilter** %ofilter305, align 8, !dbg !5152
  %tobool337 = icmp ne %struct.OutputFilter* %315, null, !dbg !5152
  br i1 %tobool337, label %if.end340, label %if.then338, !dbg !5154

if.then338:                                       ; preds = %loop_end
  %316 = load %struct.StreamMap*, %struct.StreamMap** %map, align 8, !dbg !5155
  %linklabel339 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %316, i32 0, i32 5, !dbg !5157
  %317 = load i8*, i8** %linklabel339, align 8, !dbg !5157
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.482, i32 0, i32 0), i8* %317), !dbg !5158
  call void @exit_program(i32 1) #11, !dbg !5159
  unreachable, !dbg !5159

if.end340:                                        ; preds = %loop_end
  %318 = load %struct.OutputFilter*, %struct.OutputFilter** %ofilter305, align 8, !dbg !5160
  %319 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5161
  %320 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5162
  call void @init_output_filter(%struct.OutputFilter* %318, %struct.OptionsContext* %319, %struct.AVFormatContext* %320), !dbg !5163
  br label %if.end430, !dbg !5164

if.else341:                                       ; preds = %if.end301
  call void @llvm.dbg.declare(metadata i32* %src_idx, metadata !5165, metadata !1898), !dbg !5167
  %321 = load %struct.StreamMap*, %struct.StreamMap** %map, align 8, !dbg !5168
  %file_index = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %321, i32 0, i32 1, !dbg !5169
  %322 = load i32, i32* %file_index, align 4, !dbg !5169
  %idxprom342 = sext i32 %322 to i64, !dbg !5170
  %323 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !5170
  %arrayidx343 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %323, i64 %idxprom342, !dbg !5170
  %324 = load %struct.InputFile*, %struct.InputFile** %arrayidx343, align 8, !dbg !5170
  %ist_index = getelementptr inbounds %struct.InputFile, %struct.InputFile* %324, i32 0, i32 3, !dbg !5171
  %325 = load i32, i32* %ist_index, align 8, !dbg !5171
  %326 = load %struct.StreamMap*, %struct.StreamMap** %map, align 8, !dbg !5172
  %stream_index = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %326, i32 0, i32 2, !dbg !5173
  %327 = load i32, i32* %stream_index, align 8, !dbg !5173
  %add344 = add nsw i32 %325, %327, !dbg !5174
  store i32 %add344, i32* %src_idx, align 4, !dbg !5167
  %328 = load %struct.StreamMap*, %struct.StreamMap** %map, align 8, !dbg !5175
  %file_index345 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %328, i32 0, i32 1, !dbg !5176
  %329 = load i32, i32* %file_index345, align 4, !dbg !5176
  %idxprom346 = sext i32 %329 to i64, !dbg !5177
  %330 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !5177
  %arrayidx347 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %330, i64 %idxprom346, !dbg !5177
  %331 = load %struct.InputFile*, %struct.InputFile** %arrayidx347, align 8, !dbg !5177
  %ist_index348 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %331, i32 0, i32 3, !dbg !5178
  %332 = load i32, i32* %ist_index348, align 8, !dbg !5178
  %333 = load %struct.StreamMap*, %struct.StreamMap** %map, align 8, !dbg !5179
  %stream_index349 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %333, i32 0, i32 2, !dbg !5180
  %334 = load i32, i32* %stream_index349, align 8, !dbg !5180
  %add350 = add nsw i32 %332, %334, !dbg !5181
  %idxprom351 = sext i32 %add350 to i64, !dbg !5182
  %335 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !5182
  %arrayidx352 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %335, i64 %idxprom351, !dbg !5182
  %336 = load %struct.InputStream*, %struct.InputStream** %arrayidx352, align 8, !dbg !5182
  store %struct.InputStream* %336, %struct.InputStream** %ist, align 8, !dbg !5183
  %337 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !5184
  %user_set_discard353 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %337, i32 0, i32 3, !dbg !5186
  %338 = load i32, i32* %user_set_discard353, align 4, !dbg !5186
  %cmp354 = icmp eq i32 %338, 48, !dbg !5187
  br i1 %cmp354, label %if.then355, label %if.end358, !dbg !5188

if.then355:                                       ; preds = %if.else341
  %339 = load %struct.StreamMap*, %struct.StreamMap** %map, align 8, !dbg !5189
  %file_index356 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %339, i32 0, i32 1, !dbg !5191
  %340 = load i32, i32* %file_index356, align 4, !dbg !5191
  %341 = load %struct.StreamMap*, %struct.StreamMap** %map, align 8, !dbg !5192
  %stream_index357 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %341, i32 0, i32 2, !dbg !5193
  %342 = load i32, i32* %stream_index357, align 8, !dbg !5193
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.483, i32 0, i32 0), i32 %340, i32 %342), !dbg !5194
  call void @exit_program(i32 1) #11, !dbg !5195
  unreachable, !dbg !5195

if.end358:                                        ; preds = %if.else341
  %343 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5196
  %subtitle_disable359 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %343, i32 0, i32 53, !dbg !5198
  %344 = load i32, i32* %subtitle_disable359, align 8, !dbg !5198
  %tobool360 = icmp ne i32 %344, 0, !dbg !5196
  br i1 %tobool360, label %land.lhs.true361, label %if.end367, !dbg !5199

land.lhs.true361:                                 ; preds = %if.end358
  %345 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !5200
  %st362 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %345, i32 0, i32 1, !dbg !5202
  %346 = load %struct.AVStream*, %struct.AVStream** %st362, align 8, !dbg !5202
  %codecpar363 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %346, i32 0, i32 19, !dbg !5203
  %347 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar363, align 8, !dbg !5203
  %codec_type364 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %347, i32 0, i32 0, !dbg !5204
  %348 = load i32, i32* %codec_type364, align 8, !dbg !5204
  %cmp365 = icmp eq i32 %348, 3, !dbg !5205
  br i1 %cmp365, label %if.then366, label %if.end367, !dbg !5206

if.then366:                                       ; preds = %land.lhs.true361
  br label %for.inc431, !dbg !5207

if.end367:                                        ; preds = %land.lhs.true361, %if.end358
  %349 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5208
  %audio_disable368 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %349, i32 0, i32 52, !dbg !5210
  %350 = load i32, i32* %audio_disable368, align 4, !dbg !5210
  %tobool369 = icmp ne i32 %350, 0, !dbg !5208
  br i1 %tobool369, label %land.lhs.true370, label %if.end376, !dbg !5211

land.lhs.true370:                                 ; preds = %if.end367
  %351 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !5212
  %st371 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %351, i32 0, i32 1, !dbg !5214
  %352 = load %struct.AVStream*, %struct.AVStream** %st371, align 8, !dbg !5214
  %codecpar372 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %352, i32 0, i32 19, !dbg !5215
  %353 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar372, align 8, !dbg !5215
  %codec_type373 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %353, i32 0, i32 0, !dbg !5216
  %354 = load i32, i32* %codec_type373, align 8, !dbg !5216
  %cmp374 = icmp eq i32 %354, 1, !dbg !5217
  br i1 %cmp374, label %if.then375, label %if.end376, !dbg !5218

if.then375:                                       ; preds = %land.lhs.true370
  br label %for.inc431, !dbg !5219

if.end376:                                        ; preds = %land.lhs.true370, %if.end367
  %355 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5220
  %video_disable377 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %355, i32 0, i32 51, !dbg !5222
  %356 = load i32, i32* %video_disable377, align 8, !dbg !5222
  %tobool378 = icmp ne i32 %356, 0, !dbg !5220
  br i1 %tobool378, label %land.lhs.true379, label %if.end385, !dbg !5223

land.lhs.true379:                                 ; preds = %if.end376
  %357 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !5224
  %st380 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %357, i32 0, i32 1, !dbg !5226
  %358 = load %struct.AVStream*, %struct.AVStream** %st380, align 8, !dbg !5226
  %codecpar381 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %358, i32 0, i32 19, !dbg !5227
  %359 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar381, align 8, !dbg !5227
  %codec_type382 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %359, i32 0, i32 0, !dbg !5228
  %360 = load i32, i32* %codec_type382, align 8, !dbg !5228
  %cmp383 = icmp eq i32 %360, 0, !dbg !5229
  br i1 %cmp383, label %if.then384, label %if.end385, !dbg !5230

if.then384:                                       ; preds = %land.lhs.true379
  br label %for.inc431, !dbg !5231

if.end385:                                        ; preds = %land.lhs.true379, %if.end376
  %361 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5232
  %data_disable386 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %361, i32 0, i32 54, !dbg !5234
  %362 = load i32, i32* %data_disable386, align 4, !dbg !5234
  %tobool387 = icmp ne i32 %362, 0, !dbg !5232
  br i1 %tobool387, label %land.lhs.true388, label %if.end394, !dbg !5235

land.lhs.true388:                                 ; preds = %if.end385
  %363 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !5236
  %st389 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %363, i32 0, i32 1, !dbg !5238
  %364 = load %struct.AVStream*, %struct.AVStream** %st389, align 8, !dbg !5238
  %codecpar390 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %364, i32 0, i32 19, !dbg !5239
  %365 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar390, align 8, !dbg !5239
  %codec_type391 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %365, i32 0, i32 0, !dbg !5240
  %366 = load i32, i32* %codec_type391, align 8, !dbg !5240
  %cmp392 = icmp eq i32 %366, 2, !dbg !5241
  br i1 %cmp392, label %if.then393, label %if.end394, !dbg !5242

if.then393:                                       ; preds = %land.lhs.true388
  br label %for.inc431, !dbg !5243

if.end394:                                        ; preds = %land.lhs.true388, %if.end385
  store %struct.OutputStream* null, %struct.OutputStream** %ost, align 8, !dbg !5244
  %367 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !5245
  %st395 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %367, i32 0, i32 1, !dbg !5246
  %368 = load %struct.AVStream*, %struct.AVStream** %st395, align 8, !dbg !5246
  %codecpar396 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %368, i32 0, i32 19, !dbg !5247
  %369 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar396, align 8, !dbg !5247
  %codec_type397 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %369, i32 0, i32 0, !dbg !5248
  %370 = load i32, i32* %codec_type397, align 8, !dbg !5248
  switch i32 %370, label %sw.default [
    i32 0, label %sw.bb398
    i32 1, label %sw.bb400
    i32 3, label %sw.bb402
    i32 2, label %sw.bb404
    i32 4, label %sw.bb406
    i32 -1, label %sw.bb408
  ], !dbg !5249

sw.bb398:                                         ; preds = %if.end394
  %371 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5250
  %372 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5252
  %373 = load i32, i32* %src_idx, align 4, !dbg !5253
  %call399 = call %struct.OutputStream* @new_video_stream(%struct.OptionsContext* %371, %struct.AVFormatContext* %372, i32 %373), !dbg !5254
  store %struct.OutputStream* %call399, %struct.OutputStream** %ost, align 8, !dbg !5255
  br label %sw.epilog420, !dbg !5256

sw.bb400:                                         ; preds = %if.end394
  %374 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5257
  %375 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5258
  %376 = load i32, i32* %src_idx, align 4, !dbg !5259
  %call401 = call %struct.OutputStream* @new_audio_stream(%struct.OptionsContext* %374, %struct.AVFormatContext* %375, i32 %376), !dbg !5260
  store %struct.OutputStream* %call401, %struct.OutputStream** %ost, align 8, !dbg !5261
  br label %sw.epilog420, !dbg !5262

sw.bb402:                                         ; preds = %if.end394
  %377 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5263
  %378 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5264
  %379 = load i32, i32* %src_idx, align 4, !dbg !5265
  %call403 = call %struct.OutputStream* @new_subtitle_stream(%struct.OptionsContext* %377, %struct.AVFormatContext* %378, i32 %379), !dbg !5266
  store %struct.OutputStream* %call403, %struct.OutputStream** %ost, align 8, !dbg !5267
  br label %sw.epilog420, !dbg !5268

sw.bb404:                                         ; preds = %if.end394
  %380 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5269
  %381 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5270
  %382 = load i32, i32* %src_idx, align 4, !dbg !5271
  %call405 = call %struct.OutputStream* @new_data_stream(%struct.OptionsContext* %380, %struct.AVFormatContext* %381, i32 %382), !dbg !5272
  store %struct.OutputStream* %call405, %struct.OutputStream** %ost, align 8, !dbg !5273
  br label %sw.epilog420, !dbg !5274

sw.bb406:                                         ; preds = %if.end394
  %383 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5275
  %384 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5276
  %385 = load i32, i32* %src_idx, align 4, !dbg !5277
  %call407 = call %struct.OutputStream* @new_attachment_stream(%struct.OptionsContext* %383, %struct.AVFormatContext* %384, i32 %385), !dbg !5278
  store %struct.OutputStream* %call407, %struct.OutputStream** %ost, align 8, !dbg !5279
  br label %sw.epilog420, !dbg !5280

sw.bb408:                                         ; preds = %if.end394
  %386 = load i32, i32* @copy_unknown_streams, align 4, !dbg !5281
  %tobool409 = icmp ne i32 %386, 0, !dbg !5281
  br i1 %tobool409, label %if.then410, label %if.end412, !dbg !5283

if.then410:                                       ; preds = %sw.bb408
  %387 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5284
  %388 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5286
  %389 = load i32, i32* %src_idx, align 4, !dbg !5287
  %call411 = call %struct.OutputStream* @new_unknown_stream(%struct.OptionsContext* %387, %struct.AVFormatContext* %388, i32 %389), !dbg !5288
  store %struct.OutputStream* %call411, %struct.OutputStream** %ost, align 8, !dbg !5289
  br label %sw.epilog420, !dbg !5290

if.end412:                                        ; preds = %sw.bb408
  br label %sw.default, !dbg !5291

sw.default:                                       ; preds = %if.end394, %if.end412
  %390 = load i32, i32* @ignore_unknown_streams, align 4, !dbg !5293
  %tobool413 = icmp ne i32 %390, 0, !dbg !5293
  %cond414 = select i1 %tobool413, i32 24, i32 8, !dbg !5293
  %391 = load %struct.StreamMap*, %struct.StreamMap** %map, align 8, !dbg !5294
  %file_index415 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %391, i32 0, i32 1, !dbg !5295
  %392 = load i32, i32* %file_index415, align 4, !dbg !5295
  %393 = load %struct.StreamMap*, %struct.StreamMap** %map, align 8, !dbg !5296
  %stream_index416 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %393, i32 0, i32 2, !dbg !5297
  %394 = load i32, i32* %stream_index416, align 8, !dbg !5297
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 %cond414, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.484, i32 0, i32 0), i32 %392, i32 %394), !dbg !5298
  %395 = load i32, i32* @ignore_unknown_streams, align 4, !dbg !5299
  %tobool417 = icmp ne i32 %395, 0, !dbg !5299
  br i1 %tobool417, label %if.end419, label %if.then418, !dbg !5301

if.then418:                                       ; preds = %sw.default
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @.str.485, i32 0, i32 0)), !dbg !5302
  call void @exit_program(i32 1) #11, !dbg !5304
  unreachable, !dbg !5304

if.end419:                                        ; preds = %sw.default
  br label %sw.epilog420, !dbg !5305

sw.epilog420:                                     ; preds = %if.end419, %if.then410, %sw.bb406, %sw.bb404, %sw.bb402, %sw.bb400, %sw.bb398
  %396 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !5306
  %tobool421 = icmp ne %struct.OutputStream* %396, null, !dbg !5306
  br i1 %tobool421, label %if.then422, label %if.end429, !dbg !5308

if.then422:                                       ; preds = %sw.epilog420
  %397 = load %struct.StreamMap*, %struct.StreamMap** %map, align 8, !dbg !5309
  %sync_file_index = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %397, i32 0, i32 3, !dbg !5310
  %398 = load i32, i32* %sync_file_index, align 4, !dbg !5310
  %idxprom423 = sext i32 %398 to i64, !dbg !5311
  %399 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !5311
  %arrayidx424 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %399, i64 %idxprom423, !dbg !5311
  %400 = load %struct.InputFile*, %struct.InputFile** %arrayidx424, align 8, !dbg !5311
  %ist_index425 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %400, i32 0, i32 3, !dbg !5312
  %401 = load i32, i32* %ist_index425, align 8, !dbg !5312
  %402 = load %struct.StreamMap*, %struct.StreamMap** %map, align 8, !dbg !5313
  %sync_stream_index = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %402, i32 0, i32 4, !dbg !5314
  %403 = load i32, i32* %sync_stream_index, align 8, !dbg !5314
  %add426 = add nsw i32 %401, %403, !dbg !5315
  %idxprom427 = sext i32 %add426 to i64, !dbg !5316
  %404 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !5316
  %arrayidx428 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %404, i64 %idxprom427, !dbg !5316
  %405 = load %struct.InputStream*, %struct.InputStream** %arrayidx428, align 8, !dbg !5316
  %406 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !5317
  %sync_ist = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %406, i32 0, i32 6, !dbg !5318
  store %struct.InputStream* %405, %struct.InputStream** %sync_ist, align 8, !dbg !5319
  br label %if.end429, !dbg !5317

if.end429:                                        ; preds = %if.then422, %sw.epilog420
  br label %if.end430

if.end430:                                        ; preds = %if.end429, %if.end340
  br label %for.inc431, !dbg !5320

for.inc431:                                       ; preds = %if.end430, %if.then393, %if.then384, %if.then375, %if.then366, %if.then300
  %407 = load i32, i32* %i, align 4, !dbg !5321
  %inc432 = add nsw i32 %407, 1, !dbg !5321
  store i32 %inc432, i32* %i, align 4, !dbg !5321
  br label %for.cond293, !dbg !5323, !llvm.loop !5324

for.end433:                                       ; preds = %for.cond293
  br label %if.end434

if.end434:                                        ; preds = %for.end433, %if.end291
  store i32 0, i32* %i, align 4, !dbg !5326
  br label %for.cond435, !dbg !5328

for.cond435:                                      ; preds = %for.inc489, %if.end434
  %408 = load i32, i32* %i, align 4, !dbg !5329
  %409 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5332
  %nb_attachments = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %409, i32 0, i32 42, !dbg !5333
  %410 = load i32, i32* %nb_attachments, align 8, !dbg !5333
  %cmp436 = icmp slt i32 %408, %410, !dbg !5334
  br i1 %cmp436, label %for.body437, label %for.end491, !dbg !5335

for.body437:                                      ; preds = %for.cond435
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !5336, metadata !1898), !dbg !5338
  call void @llvm.dbg.declare(metadata i8** %attachment, metadata !5339, metadata !1898), !dbg !5340
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5341, metadata !1898), !dbg !5342
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5343, metadata !1898), !dbg !5344
  %411 = load i32, i32* %i, align 4, !dbg !5345
  %idxprom438 = sext i32 %411 to i64, !dbg !5347
  %412 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5347
  %attachments = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %412, i32 0, i32 41, !dbg !5348
  %413 = load i8**, i8*** %attachments, align 8, !dbg !5348
  %arrayidx439 = getelementptr inbounds i8*, i8** %413, i64 %idxprom438, !dbg !5347
  %414 = load i8*, i8** %arrayidx439, align 8, !dbg !5347
  %call440 = call i32 @avio_open2(%struct.AVIOContext** %pb, i8* %414, i32 1, %struct.AVIOInterruptCB* @int_cb, %struct.AVDictionary** null), !dbg !5349
  store i32 %call440, i32* %err, align 4, !dbg !5350
  %cmp441 = icmp slt i32 %call440, 0, !dbg !5351
  br i1 %cmp441, label %if.then442, label %if.end446, !dbg !5352

if.then442:                                       ; preds = %for.body437
  %415 = load i32, i32* %i, align 4, !dbg !5353
  %idxprom443 = sext i32 %415 to i64, !dbg !5355
  %416 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5355
  %attachments444 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %416, i32 0, i32 41, !dbg !5356
  %417 = load i8**, i8*** %attachments444, align 8, !dbg !5356
  %arrayidx445 = getelementptr inbounds i8*, i8** %417, i64 %idxprom443, !dbg !5355
  %418 = load i8*, i8** %arrayidx445, align 8, !dbg !5355
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.486, i32 0, i32 0), i8* %418), !dbg !5357
  call void @exit_program(i32 1) #11, !dbg !5358
  unreachable, !dbg !5358

if.end446:                                        ; preds = %for.body437
  %419 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5359
  %call447 = call i64 @avio_size(%struct.AVIOContext* %419), !dbg !5361
  store i64 %call447, i64* %len, align 8, !dbg !5362
  %cmp448 = icmp sle i64 %call447, 0, !dbg !5363
  br i1 %cmp448, label %if.then449, label %if.end453, !dbg !5364

if.then449:                                       ; preds = %if.end446
  %420 = load i32, i32* %i, align 4, !dbg !5365
  %idxprom450 = sext i32 %420 to i64, !dbg !5367
  %421 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5367
  %attachments451 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %421, i32 0, i32 41, !dbg !5368
  %422 = load i8**, i8*** %attachments451, align 8, !dbg !5368
  %arrayidx452 = getelementptr inbounds i8*, i8** %422, i64 %idxprom450, !dbg !5367
  %423 = load i8*, i8** %arrayidx452, align 8, !dbg !5367
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.487, i32 0, i32 0), i8* %423), !dbg !5369
  call void @exit_program(i32 1) #11, !dbg !5370
  unreachable, !dbg !5370

if.end453:                                        ; preds = %if.end446
  %424 = load i64, i64* %len, align 8, !dbg !5371
  %call454 = call noalias i8* @av_malloc(i64 %424), !dbg !5373
  store i8* %call454, i8** %attachment, align 8, !dbg !5374
  %tobool455 = icmp ne i8* %call454, null, !dbg !5374
  br i1 %tobool455, label %if.end460, label %if.then456, !dbg !5375

if.then456:                                       ; preds = %if.end453
  %425 = load i32, i32* %i, align 4, !dbg !5376
  %idxprom457 = sext i32 %425 to i64, !dbg !5378
  %426 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5378
  %attachments458 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %426, i32 0, i32 41, !dbg !5379
  %427 = load i8**, i8*** %attachments458, align 8, !dbg !5379
  %arrayidx459 = getelementptr inbounds i8*, i8** %427, i64 %idxprom457, !dbg !5378
  %428 = load i8*, i8** %arrayidx459, align 8, !dbg !5378
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.488, i32 0, i32 0), i8* %428), !dbg !5380
  call void @exit_program(i32 1) #11, !dbg !5381
  unreachable, !dbg !5381

if.end460:                                        ; preds = %if.end453
  %429 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5382
  %430 = load i8*, i8** %attachment, align 8, !dbg !5383
  %431 = load i64, i64* %len, align 8, !dbg !5384
  %conv = trunc i64 %431 to i32, !dbg !5384
  %call461 = call i32 @avio_read(%struct.AVIOContext* %429, i8* %430, i32 %conv), !dbg !5385
  %432 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5386
  %433 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5387
  %call462 = call %struct.OutputStream* @new_attachment_stream(%struct.OptionsContext* %432, %struct.AVFormatContext* %433, i32 -1), !dbg !5388
  store %struct.OutputStream* %call462, %struct.OutputStream** %ost, align 8, !dbg !5389
  %434 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !5390
  %stream_copy = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %434, i32 0, i32 52, !dbg !5391
  store i32 0, i32* %stream_copy, align 8, !dbg !5392
  %435 = load i32, i32* %i, align 4, !dbg !5393
  %idxprom463 = sext i32 %435 to i64, !dbg !5394
  %436 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5394
  %attachments464 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %436, i32 0, i32 41, !dbg !5395
  %437 = load i8**, i8*** %attachments464, align 8, !dbg !5395
  %arrayidx465 = getelementptr inbounds i8*, i8** %437, i64 %idxprom463, !dbg !5394
  %438 = load i8*, i8** %arrayidx465, align 8, !dbg !5394
  %439 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !5396
  %attachment_filename = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %439, i32 0, i32 55, !dbg !5397
  store i8* %438, i8** %attachment_filename, align 8, !dbg !5398
  %440 = load i8*, i8** %attachment, align 8, !dbg !5399
  %441 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !5400
  %st466 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %441, i32 0, i32 3, !dbg !5401
  %442 = load %struct.AVStream*, %struct.AVStream** %st466, align 8, !dbg !5401
  %codecpar467 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %442, i32 0, i32 19, !dbg !5402
  %443 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar467, align 8, !dbg !5402
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %443, i32 0, i32 3, !dbg !5403
  store i8* %440, i8** %extradata, align 8, !dbg !5404
  %444 = load i64, i64* %len, align 8, !dbg !5405
  %conv468 = trunc i64 %444 to i32, !dbg !5405
  %445 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !5406
  %st469 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %445, i32 0, i32 3, !dbg !5407
  %446 = load %struct.AVStream*, %struct.AVStream** %st469, align 8, !dbg !5407
  %codecpar470 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %446, i32 0, i32 19, !dbg !5408
  %447 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar470, align 8, !dbg !5408
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %447, i32 0, i32 4, !dbg !5409
  store i32 %conv468, i32* %extradata_size, align 8, !dbg !5410
  %448 = load i32, i32* %i, align 4, !dbg !5411
  %idxprom471 = sext i32 %448 to i64, !dbg !5412
  %449 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5412
  %attachments472 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %449, i32 0, i32 41, !dbg !5413
  %450 = load i8**, i8*** %attachments472, align 8, !dbg !5413
  %arrayidx473 = getelementptr inbounds i8*, i8** %450, i64 %idxprom471, !dbg !5412
  %451 = load i8*, i8** %arrayidx473, align 8, !dbg !5412
  %call474 = call i8* @strrchr(i8* %451, i32 47) #10, !dbg !5414
  store i8* %call474, i8** %p, align 8, !dbg !5415
  %452 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !5416
  %st475 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %452, i32 0, i32 3, !dbg !5417
  %453 = load %struct.AVStream*, %struct.AVStream** %st475, align 8, !dbg !5417
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %453, i32 0, i32 11, !dbg !5418
  %454 = load i8*, i8** %p, align 8, !dbg !5419
  %tobool476 = icmp ne i8* %454, null, !dbg !5419
  br i1 %tobool476, label %land.lhs.true477, label %cond.false481, !dbg !5420

land.lhs.true477:                                 ; preds = %if.end460
  %455 = load i8*, i8** %p, align 8, !dbg !5421
  %456 = load i8, i8* %455, align 1, !dbg !5423
  %conv478 = sext i8 %456 to i32, !dbg !5423
  %tobool479 = icmp ne i32 %conv478, 0, !dbg !5423
  br i1 %tobool479, label %cond.true480, label %cond.false481, !dbg !5424

cond.true480:                                     ; preds = %land.lhs.true477
  %457 = load i8*, i8** %p, align 8, !dbg !5425
  %add.ptr = getelementptr inbounds i8, i8* %457, i64 1, !dbg !5427
  br label %cond.end485, !dbg !5428

cond.false481:                                    ; preds = %land.lhs.true477, %if.end460
  %458 = load i32, i32* %i, align 4, !dbg !5429
  %idxprom482 = sext i32 %458 to i64, !dbg !5431
  %459 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5431
  %attachments483 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %459, i32 0, i32 41, !dbg !5432
  %460 = load i8**, i8*** %attachments483, align 8, !dbg !5432
  %arrayidx484 = getelementptr inbounds i8*, i8** %460, i64 %idxprom482, !dbg !5431
  %461 = load i8*, i8** %arrayidx484, align 8, !dbg !5431
  br label %cond.end485, !dbg !5433

cond.end485:                                      ; preds = %cond.false481, %cond.true480
  %cond486 = phi i8* [ %add.ptr, %cond.true480 ], [ %461, %cond.false481 ], !dbg !5434
  %call487 = call i32 @av_dict_set(%struct.AVDictionary** %metadata, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.221, i32 0, i32 0), i8* %cond486, i32 16), !dbg !5436
  %call488 = call i32 @avio_closep(%struct.AVIOContext** %pb), !dbg !5437
  br label %for.inc489, !dbg !5438

for.inc489:                                       ; preds = %cond.end485
  %462 = load i32, i32* %i, align 4, !dbg !5439
  %inc490 = add nsw i32 %462, 1, !dbg !5439
  store i32 %inc490, i32* %i, align 4, !dbg !5439
  br label %for.cond435, !dbg !5441, !llvm.loop !5442

for.end491:                                       ; preds = %for.cond435
  %463 = load i32, i32* @nb_output_streams, align 4, !dbg !5444
  %464 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5446
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %464, i32 0, i32 6, !dbg !5447
  %465 = load i32, i32* %nb_streams, align 4, !dbg !5447
  %sub492 = sub i32 %463, %465, !dbg !5448
  store i32 %sub492, i32* %i, align 4, !dbg !5449
  br label %for.cond493, !dbg !5450

for.cond493:                                      ; preds = %for.inc527, %for.end491
  %466 = load i32, i32* %i, align 4, !dbg !5451
  %467 = load i32, i32* @nb_output_streams, align 4, !dbg !5454
  %cmp494 = icmp slt i32 %466, %467, !dbg !5455
  br i1 %cmp494, label %for.body496, label %for.end529, !dbg !5456

for.body496:                                      ; preds = %for.cond493
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %e497, metadata !5457, metadata !1898), !dbg !5459
  %468 = load i32, i32* %i, align 4, !dbg !5460
  %idxprom498 = sext i32 %468 to i64, !dbg !5461
  %469 = load %struct.OutputStream**, %struct.OutputStream*** @output_streams, align 8, !dbg !5461
  %arrayidx499 = getelementptr inbounds %struct.OutputStream*, %struct.OutputStream** %469, i64 %idxprom498, !dbg !5461
  %470 = load %struct.OutputStream*, %struct.OutputStream** %arrayidx499, align 8, !dbg !5461
  store %struct.OutputStream* %470, %struct.OutputStream** %ost, align 8, !dbg !5462
  %471 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !5463
  %stream_copy500 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %471, i32 0, i32 52, !dbg !5465
  %472 = load i32, i32* %stream_copy500, align 8, !dbg !5465
  %tobool501 = icmp ne i32 %472, 0, !dbg !5463
  br i1 %tobool501, label %land.lhs.true505, label %lor.lhs.false502, !dbg !5466

lor.lhs.false502:                                 ; preds = %for.body496
  %473 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !5467
  %attachment_filename503 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %473, i32 0, i32 55, !dbg !5469
  %474 = load i8*, i8** %attachment_filename503, align 8, !dbg !5469
  %tobool504 = icmp ne i8* %474, null, !dbg !5467
  br i1 %tobool504, label %land.lhs.true505, label %if.end526, !dbg !5470

land.lhs.true505:                                 ; preds = %lor.lhs.false502, %for.body496
  %475 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5471
  %g506 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %475, i32 0, i32 0, !dbg !5472
  %476 = load %struct.OptionGroup*, %struct.OptionGroup** %g506, align 8, !dbg !5472
  %codec_opts = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %476, i32 0, i32 4, !dbg !5473
  %477 = load %struct.AVDictionary*, %struct.AVDictionary** %codec_opts, align 8, !dbg !5473
  %call507 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %477, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 2), !dbg !5474
  store %struct.AVDictionaryEntry* %call507, %struct.AVDictionaryEntry** %e497, align 8, !dbg !5475
  %tobool508 = icmp ne %struct.AVDictionaryEntry* %call507, null, !dbg !5475
  br i1 %tobool508, label %land.lhs.true509, label %if.end526, !dbg !5476

land.lhs.true509:                                 ; preds = %land.lhs.true505
  %478 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e497, align 8, !dbg !5477
  %key = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %478, i32 0, i32 0, !dbg !5478
  %479 = load i8*, i8** %key, align 8, !dbg !5478
  %arrayidx510 = getelementptr inbounds i8, i8* %479, i64 5, !dbg !5477
  %480 = load i8, i8* %arrayidx510, align 1, !dbg !5477
  %tobool511 = icmp ne i8 %480, 0, !dbg !5477
  br i1 %tobool511, label %lor.lhs.false512, label %if.then518, !dbg !5479

lor.lhs.false512:                                 ; preds = %land.lhs.true509
  %481 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5480
  %482 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !5482
  %st513 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %482, i32 0, i32 3, !dbg !5483
  %483 = load %struct.AVStream*, %struct.AVStream** %st513, align 8, !dbg !5483
  %484 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e497, align 8, !dbg !5484
  %key514 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %484, i32 0, i32 0, !dbg !5485
  %485 = load i8*, i8** %key514, align 8, !dbg !5485
  %add.ptr515 = getelementptr inbounds i8, i8* %485, i64 6, !dbg !5486
  %call516 = call i32 @check_stream_specifier(%struct.AVFormatContext* %481, %struct.AVStream* %483, i8* %add.ptr515), !dbg !5487
  %tobool517 = icmp ne i32 %call516, 0, !dbg !5487
  br i1 %tobool517, label %if.then518, label %if.end526, !dbg !5488

if.then518:                                       ; preds = %lor.lhs.false512, %land.lhs.true509
  %486 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !5490
  %st519 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %486, i32 0, i32 3, !dbg !5492
  %487 = load %struct.AVStream*, %struct.AVStream** %st519, align 8, !dbg !5492
  %codec = getelementptr inbounds %struct.AVStream, %struct.AVStream* %487, i32 0, i32 2, !dbg !5493
  %488 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec, align 8, !dbg !5493
  %489 = bitcast %struct.AVCodecContext* %488 to i8*, !dbg !5490
  %490 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e497, align 8, !dbg !5494
  %value520 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %490, i32 0, i32 1, !dbg !5495
  %491 = load i8*, i8** %value520, align 8, !dbg !5495
  %call521 = call i32 @av_opt_set(i8* %489, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), i8* %491, i32 0), !dbg !5496
  %cmp522 = icmp slt i32 %call521, 0, !dbg !5497
  br i1 %cmp522, label %if.then524, label %if.end525, !dbg !5498

if.then524:                                       ; preds = %if.then518
  call void @exit_program(i32 1) #11, !dbg !5499
  unreachable, !dbg !5499

if.end525:                                        ; preds = %if.then518
  br label %if.end526, !dbg !5500

if.end526:                                        ; preds = %if.end525, %lor.lhs.false512, %land.lhs.true505, %lor.lhs.false502
  br label %for.inc527, !dbg !5502

for.inc527:                                       ; preds = %if.end526
  %492 = load i32, i32* %i, align 4, !dbg !5503
  %inc528 = add nsw i32 %492, 1, !dbg !5503
  store i32 %inc528, i32* %i, align 4, !dbg !5503
  br label %for.cond493, !dbg !5505, !llvm.loop !5506

for.end529:                                       ; preds = %for.cond493
  %493 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5508
  %nb_streams530 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %493, i32 0, i32 6, !dbg !5510
  %494 = load i32, i32* %nb_streams530, align 4, !dbg !5510
  %tobool531 = icmp ne i32 %494, 0, !dbg !5508
  br i1 %tobool531, label %if.end540, label %land.lhs.true532, !dbg !5511

land.lhs.true532:                                 ; preds = %for.end529
  %495 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5512
  %oformat533 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %495, i32 0, i32 2, !dbg !5514
  %496 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat533, align 8, !dbg !5514
  %flags534 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %496, i32 0, i32 7, !dbg !5515
  %497 = load i32, i32* %flags534, align 4, !dbg !5515
  %and535 = and i32 %497, 4096, !dbg !5516
  %tobool536 = icmp ne i32 %and535, 0, !dbg !5516
  br i1 %tobool536, label %if.end540, label %if.then537, !dbg !5517

if.then537:                                       ; preds = %land.lhs.true532
  %498 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5518
  %499 = load i32, i32* @nb_output_files, align 4, !dbg !5520
  %sub538 = sub nsw i32 %499, 1, !dbg !5521
  %500 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5522
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %500, i32 0, i32 9, !dbg !5523
  %501 = load i8*, i8** %url, align 8, !dbg !5523
  call void @av_dump_format(%struct.AVFormatContext* %498, i32 %sub538, i8* %501, i32 1), !dbg !5524
  %502 = load i32, i32* @nb_output_files, align 4, !dbg !5525
  %sub539 = sub nsw i32 %502, 1, !dbg !5526
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.489, i32 0, i32 0), i32 %sub539), !dbg !5527
  call void @exit_program(i32 1) #11, !dbg !5528
  unreachable, !dbg !5528

if.end540:                                        ; preds = %land.lhs.true532, %for.end529
  %503 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !5529
  %g541 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %503, i32 0, i32 0, !dbg !5530
  %504 = load %struct.OptionGroup*, %struct.OptionGroup** %g541, align 8, !dbg !5530
  %codec_opts542 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %504, i32 0, i32 4, !dbg !5531
  %505 = load %struct.AVDictionary*, %struct.AVDictionary** %codec_opts542, align 8, !dbg !5531
  %call543 = call %struct.AVDictionary* @strip_specifiers(%struct.AVDictionary* %505), !dbg !5532
  store %struct.AVDictionary* %call543, %struct.AVDictionary** %unused_opts, align 8, !dbg !5533
  %506 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !5534
  %ost_index544 = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %506, i32 0, i32 2, !dbg !5536
  %507 = load i32, i32* %ost_index544, align 8, !dbg !5536
  store i32 %507, i32* %i, align 4, !dbg !5537
  br label %for.cond545, !dbg !5538

for.cond545:                                      ; preds = %for.inc555, %if.end540
  %508 = load i32, i32* %i, align 4, !dbg !5539
  %509 = load i32, i32* @nb_output_streams, align 4, !dbg !5542
  %cmp546 = icmp slt i32 %508, %509, !dbg !5543
  br i1 %cmp546, label %for.body548, label %for.end557, !dbg !5544

for.body548:                                      ; preds = %for.cond545
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %e, align 8, !dbg !5545
  br label %while.cond, !dbg !5547

while.cond:                                       ; preds = %while.body, %for.body548
  %510 = load i32, i32* %i, align 4, !dbg !5548
  %idxprom549 = sext i32 %510 to i64, !dbg !5550
  %511 = load %struct.OutputStream**, %struct.OutputStream*** @output_streams, align 8, !dbg !5550
  %arrayidx550 = getelementptr inbounds %struct.OutputStream*, %struct.OutputStream** %511, i64 %idxprom549, !dbg !5550
  %512 = load %struct.OutputStream*, %struct.OutputStream** %arrayidx550, align 8, !dbg !5550
  %encoder_opts = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %512, i32 0, i32 45, !dbg !5551
  %513 = load %struct.AVDictionary*, %struct.AVDictionary** %encoder_opts, align 8, !dbg !5551
  %514 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !5552
  %call551 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %513, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0), %struct.AVDictionaryEntry* %514, i32 2), !dbg !5553
  store %struct.AVDictionaryEntry* %call551, %struct.AVDictionaryEntry** %e, align 8, !dbg !5554
  %tobool552 = icmp ne %struct.AVDictionaryEntry* %call551, null, !dbg !5555
  br i1 %tobool552, label %while.body, label %while.end, !dbg !5555

while.body:                                       ; preds = %while.cond
  %515 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !5556
  %key553 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %515, i32 0, i32 0, !dbg !5557
  %516 = load i8*, i8** %key553, align 8, !dbg !5557
  %call554 = call i32 @av_dict_set(%struct.AVDictionary** %unused_opts, i8* %516, i8* null, i32 0), !dbg !5558
  br label %while.cond, !dbg !5559, !llvm.loop !5561

while.end:                                        ; preds = %while.cond
  br label %for.inc555, !dbg !5562

for.inc555:                                       ; preds = %while.end
  %517 = load i32, i32* %i, align 4, !dbg !5563
  %inc556 = add nsw i32 %517, 1, !dbg !5563
  store i32 %inc556, i32* %i, align 4, !dbg !5563
  br label %for.cond545, !dbg !5565, !llvm.loop !5566

for.end557:                                       ; preds = %for.cond545
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %e, align 8, !dbg !5568
  br label %while.cond558, !dbg !5569

while.cond558:                                    ; preds = %cond.end597, %if.then589, %if.then571, %for.end557
  %518 = load %struct.AVDictionary*, %struct.AVDictionary** %unused_opts, align 8, !dbg !5570
  %519 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !5572
  %call559 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %518, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0), %struct.AVDictionaryEntry* %519, i32 2), !dbg !5573
  store %struct.AVDictionaryEntry* %call559, %struct.AVDictionaryEntry** %e, align 8, !dbg !5574
  %tobool560 = icmp ne %struct.AVDictionaryEntry* %call559, null, !dbg !5575
  br i1 %tobool560, label %while.body561, label %while.end600, !dbg !5575

while.body561:                                    ; preds = %while.cond558
  call void @llvm.dbg.declare(metadata %struct.AVClass** %class, metadata !5576, metadata !1898), !dbg !5578
  %call562 = call %struct.AVClass* @avcodec_get_class(), !dbg !5579
  store %struct.AVClass* %call562, %struct.AVClass** %class, align 8, !dbg !5578
  call void @llvm.dbg.declare(metadata %struct.AVOption** %option, metadata !5580, metadata !1898), !dbg !5581
  %520 = bitcast %struct.AVClass** %class to i8*, !dbg !5582
  %521 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !5583
  %key563 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %521, i32 0, i32 0, !dbg !5584
  %522 = load i8*, i8** %key563, align 8, !dbg !5584
  %call564 = call %struct.AVOption* @av_opt_find(i8* %520, i8* %522, i8* null, i32 0, i32 3), !dbg !5585
  store %struct.AVOption* %call564, %struct.AVOption** %option, align 8, !dbg !5581
  call void @llvm.dbg.declare(metadata %struct.AVClass** %fclass, metadata !5586, metadata !1898), !dbg !5587
  %call565 = call %struct.AVClass* @avformat_get_class(), !dbg !5588
  store %struct.AVClass* %call565, %struct.AVClass** %fclass, align 8, !dbg !5587
  call void @llvm.dbg.declare(metadata %struct.AVOption** %foption, metadata !5589, metadata !1898), !dbg !5590
  %523 = bitcast %struct.AVClass** %fclass to i8*, !dbg !5591
  %524 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !5592
  %key566 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %524, i32 0, i32 0, !dbg !5593
  %525 = load i8*, i8** %key566, align 8, !dbg !5593
  %call567 = call %struct.AVOption* @av_opt_find(i8* %523, i8* %525, i8* null, i32 0, i32 3), !dbg !5594
  store %struct.AVOption* %call567, %struct.AVOption** %foption, align 8, !dbg !5590
  %526 = load %struct.AVOption*, %struct.AVOption** %option, align 8, !dbg !5595
  %tobool568 = icmp ne %struct.AVOption* %526, null, !dbg !5595
  br i1 %tobool568, label %lor.lhs.false569, label %if.then571, !dbg !5597

lor.lhs.false569:                                 ; preds = %while.body561
  %527 = load %struct.AVOption*, %struct.AVOption** %foption, align 8, !dbg !5598
  %tobool570 = icmp ne %struct.AVOption* %527, null, !dbg !5598
  br i1 %tobool570, label %if.then571, label %if.end572, !dbg !5600

if.then571:                                       ; preds = %lor.lhs.false569, %while.body561
  br label %while.cond558, !dbg !5601, !llvm.loop !5602

if.end572:                                        ; preds = %lor.lhs.false569
  %528 = load %struct.AVOption*, %struct.AVOption** %option, align 8, !dbg !5603
  %flags573 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %528, i32 0, i32 7, !dbg !5605
  %529 = load i32, i32* %flags573, align 8, !dbg !5605
  %and574 = and i32 %529, 1, !dbg !5606
  %tobool575 = icmp ne i32 %and574, 0, !dbg !5606
  br i1 %tobool575, label %if.end585, label %if.then576, !dbg !5607

if.then576:                                       ; preds = %if.end572
  %530 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !5608
  %key577 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %530, i32 0, i32 0, !dbg !5610
  %531 = load i8*, i8** %key577, align 8, !dbg !5610
  %532 = load %struct.AVOption*, %struct.AVOption** %option, align 8, !dbg !5611
  %help = getelementptr inbounds %struct.AVOption, %struct.AVOption* %532, i32 0, i32 1, !dbg !5612
  %533 = load i8*, i8** %help, align 8, !dbg !5612
  %tobool578 = icmp ne i8* %533, null, !dbg !5611
  br i1 %tobool578, label %cond.true579, label %cond.false581, !dbg !5611

cond.true579:                                     ; preds = %if.then576
  %534 = load %struct.AVOption*, %struct.AVOption** %option, align 8, !dbg !5613
  %help580 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %534, i32 0, i32 1, !dbg !5615
  %535 = load i8*, i8** %help580, align 8, !dbg !5615
  br label %cond.end582, !dbg !5616

cond.false581:                                    ; preds = %if.then576
  br label %cond.end582, !dbg !5617

cond.end582:                                      ; preds = %cond.false581, %cond.true579
  %cond583 = phi i8* [ %535, %cond.true579 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0), %cond.false581 ], !dbg !5619
  %536 = load i32, i32* @nb_output_files, align 4, !dbg !5621
  %sub584 = sub nsw i32 %536, 1, !dbg !5622
  %537 = load i8*, i8** %filename.addr, align 8, !dbg !5623
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.490, i32 0, i32 0), i8* %531, i8* %cond583, i32 %sub584, i8* %537), !dbg !5624
  call void @exit_program(i32 1) #11, !dbg !5625
  unreachable, !dbg !5625

if.end585:                                        ; preds = %if.end572
  %538 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !5626
  %key586 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %538, i32 0, i32 0, !dbg !5628
  %539 = load i8*, i8** %key586, align 8, !dbg !5628
  %call587 = call i32 @strcmp(i8* %539, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.491, i32 0, i32 0)) #10, !dbg !5629
  %tobool588 = icmp ne i32 %call587, 0, !dbg !5629
  br i1 %tobool588, label %if.end590, label %if.then589, !dbg !5630

if.then589:                                       ; preds = %if.end585
  br label %while.cond558, !dbg !5631, !llvm.loop !5602

if.end590:                                        ; preds = %if.end585
  %540 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !5632
  %key591 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %540, i32 0, i32 0, !dbg !5633
  %541 = load i8*, i8** %key591, align 8, !dbg !5633
  %542 = load %struct.AVOption*, %struct.AVOption** %option, align 8, !dbg !5634
  %help592 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %542, i32 0, i32 1, !dbg !5635
  %543 = load i8*, i8** %help592, align 8, !dbg !5635
  %tobool593 = icmp ne i8* %543, null, !dbg !5634
  br i1 %tobool593, label %cond.true594, label %cond.false596, !dbg !5634

cond.true594:                                     ; preds = %if.end590
  %544 = load %struct.AVOption*, %struct.AVOption** %option, align 8, !dbg !5636
  %help595 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %544, i32 0, i32 1, !dbg !5638
  %545 = load i8*, i8** %help595, align 8, !dbg !5638
  br label %cond.end597, !dbg !5639

cond.false596:                                    ; preds = %if.end590
  br label %cond.end597, !dbg !5640

cond.end597:                                      ; preds = %cond.false596, %cond.true594
  %cond598 = phi i8* [ %545, %cond.true594 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0), %cond.false596 ], !dbg !5642
  %546 = load i32, i32* @nb_output_files, align 4, !dbg !5644
  %sub599 = sub nsw i32 %546, 1, !dbg !5645
  %547 = load i8*, i8** %filename.addr, align 8, !dbg !5646
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([272 x i8], [272 x i8]* @.str.492, i32 0, i32 0), i8* %541, i8* %cond598, i32 %sub599, i8* %547), !dbg !5647
  br label %while.cond558, !dbg !5648, !llvm.loop !5602

while.end600:                                     ; preds = %while.cond558
  call void @av_dict_free(%struct.AVDictionary** %unused_opts), !dbg !5650
  %548 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !5651
  %ost_index601 = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %548, i32 0, i32 2, !dbg !5653
  %549 = load i32, i32* %ost_index601, align 8, !dbg !5653
  store i32 %549, i32* %i, align 4, !dbg !5654
  br label %for.cond602, !dbg !5655

for.cond602:                                      ; preds = %for.inc799, %while.end600
  %550 = load i32, i32* %i, align 4, !dbg !5656
  %551 = load i32, i32* @nb_output_streams, align 4, !dbg !5659
  %cmp603 = icmp slt i32 %550, %551, !dbg !5660
  br i1 %cmp603, label %for.body605, label %for.end801, !dbg !5661

for.body605:                                      ; preds = %for.cond602
  call void @llvm.dbg.declare(metadata %struct.OutputStream** %ost606, metadata !5662, metadata !1898), !dbg !5664
  %552 = load i32, i32* %i, align 4, !dbg !5665
  %idxprom607 = sext i32 %552 to i64, !dbg !5666
  %553 = load %struct.OutputStream**, %struct.OutputStream*** @output_streams, align 8, !dbg !5666
  %arrayidx608 = getelementptr inbounds %struct.OutputStream*, %struct.OutputStream** %553, i64 %idxprom607, !dbg !5666
  %554 = load %struct.OutputStream*, %struct.OutputStream** %arrayidx608, align 8, !dbg !5666
  store %struct.OutputStream* %554, %struct.OutputStream** %ost606, align 8, !dbg !5664
  %555 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5667
  %encoding_needed = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %555, i32 0, i32 4, !dbg !5669
  %556 = load i32, i32* %encoding_needed, align 8, !dbg !5669
  %tobool609 = icmp ne i32 %556, 0, !dbg !5667
  br i1 %tobool609, label %land.lhs.true610, label %if.end641, !dbg !5670

land.lhs.true610:                                 ; preds = %for.body605
  %557 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5671
  %source_index = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %557, i32 0, i32 2, !dbg !5673
  %558 = load i32, i32* %source_index, align 8, !dbg !5673
  %cmp611 = icmp sge i32 %558, 0, !dbg !5674
  br i1 %cmp611, label %if.then613, label %if.end641, !dbg !5675

if.then613:                                       ; preds = %land.lhs.true610
  call void @llvm.dbg.declare(metadata %struct.InputStream** %ist614, metadata !5676, metadata !1898), !dbg !5678
  %559 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5679
  %source_index615 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %559, i32 0, i32 2, !dbg !5680
  %560 = load i32, i32* %source_index615, align 8, !dbg !5680
  %idxprom616 = sext i32 %560 to i64, !dbg !5681
  %561 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !5681
  %arrayidx617 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %561, i64 %idxprom616, !dbg !5681
  %562 = load %struct.InputStream*, %struct.InputStream** %arrayidx617, align 8, !dbg !5681
  store %struct.InputStream* %562, %struct.InputStream** %ist614, align 8, !dbg !5678
  %563 = load %struct.InputStream*, %struct.InputStream** %ist614, align 8, !dbg !5682
  %decoding_needed = getelementptr inbounds %struct.InputStream, %struct.InputStream* %563, i32 0, i32 4, !dbg !5683
  %564 = load i32, i32* %decoding_needed, align 8, !dbg !5684
  %or618 = or i32 %564, 1, !dbg !5684
  store i32 %or618, i32* %decoding_needed, align 8, !dbg !5684
  %565 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5685
  %st619 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %565, i32 0, i32 3, !dbg !5687
  %566 = load %struct.AVStream*, %struct.AVStream** %st619, align 8, !dbg !5687
  %codecpar620 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %566, i32 0, i32 19, !dbg !5688
  %567 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar620, align 8, !dbg !5688
  %codec_type621 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %567, i32 0, i32 0, !dbg !5689
  %568 = load i32, i32* %codec_type621, align 8, !dbg !5689
  %cmp622 = icmp eq i32 %568, 0, !dbg !5690
  br i1 %cmp622, label %if.then630, label %lor.lhs.false624, !dbg !5691

lor.lhs.false624:                                 ; preds = %if.then613
  %569 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5692
  %st625 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %569, i32 0, i32 3, !dbg !5693
  %570 = load %struct.AVStream*, %struct.AVStream** %st625, align 8, !dbg !5693
  %codecpar626 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %570, i32 0, i32 19, !dbg !5694
  %571 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar626, align 8, !dbg !5694
  %codec_type627 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %571, i32 0, i32 0, !dbg !5695
  %572 = load i32, i32* %codec_type627, align 8, !dbg !5695
  %cmp628 = icmp eq i32 %572, 1, !dbg !5696
  br i1 %cmp628, label %if.then630, label %if.end640, !dbg !5697

if.then630:                                       ; preds = %lor.lhs.false624, %if.then613
  %573 = load %struct.InputStream*, %struct.InputStream** %ist614, align 8, !dbg !5699
  %574 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5701
  %call631 = call i32 @init_simple_filtergraph(%struct.InputStream* %573, %struct.OutputStream* %574), !dbg !5702
  store i32 %call631, i32* %err, align 4, !dbg !5703
  %575 = load i32, i32* %err, align 4, !dbg !5704
  %cmp632 = icmp slt i32 %575, 0, !dbg !5706
  br i1 %cmp632, label %if.then634, label %if.end639, !dbg !5707

if.then634:                                       ; preds = %if.then630
  %576 = load %struct.InputStream*, %struct.InputStream** %ist614, align 8, !dbg !5708
  %file_index635 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %576, i32 0, i32 0, !dbg !5710
  %577 = load i32, i32* %file_index635, align 8, !dbg !5710
  %578 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5711
  %source_index636 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %578, i32 0, i32 2, !dbg !5712
  %579 = load i32, i32* %source_index636, align 8, !dbg !5712
  %580 = load i32, i32* @nb_output_files, align 4, !dbg !5713
  %sub637 = sub nsw i32 %580, 1, !dbg !5714
  %581 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5715
  %st638 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %581, i32 0, i32 3, !dbg !5716
  %582 = load %struct.AVStream*, %struct.AVStream** %st638, align 8, !dbg !5716
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %582, i32 0, i32 0, !dbg !5717
  %583 = load i32, i32* %index, align 8, !dbg !5717
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.493, i32 0, i32 0), i32 %577, i32 %579, i32 %sub637, i32 %583), !dbg !5718
  call void @exit_program(i32 1) #11, !dbg !5719
  unreachable, !dbg !5719

if.end639:                                        ; preds = %if.then630
  br label %if.end640, !dbg !5720

if.end640:                                        ; preds = %if.end639, %lor.lhs.false624
  br label %if.end641, !dbg !5721

if.end641:                                        ; preds = %if.end640, %land.lhs.true610, %for.body605
  %584 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5722
  %filter = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %584, i32 0, i32 41, !dbg !5724
  %585 = load %struct.OutputFilter*, %struct.OutputFilter** %filter, align 8, !dbg !5724
  %tobool642 = icmp ne %struct.OutputFilter* %585, null, !dbg !5722
  br i1 %tobool642, label %if.then643, label %if.end798, !dbg !5725

if.then643:                                       ; preds = %if.end641
  call void @llvm.dbg.declare(metadata %struct.OutputFilter** %f, metadata !5726, metadata !1898), !dbg !5728
  %586 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5729
  %filter644 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %586, i32 0, i32 41, !dbg !5730
  %587 = load %struct.OutputFilter*, %struct.OutputFilter** %filter644, align 8, !dbg !5730
  store %struct.OutputFilter* %587, %struct.OutputFilter** %f, align 8, !dbg !5728
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5731, metadata !1898), !dbg !5732
  %588 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5733
  %enc_ctx = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %588, i32 0, i32 14, !dbg !5734
  %589 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx, align 8, !dbg !5734
  %codec_type645 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %589, i32 0, i32 2, !dbg !5735
  %590 = load i32, i32* %codec_type645, align 4, !dbg !5735
  switch i32 %590, label %sw.epilog797 [
    i32 0, label %sw.bb646
    i32 1, label %sw.bb689
  ], !dbg !5736

sw.bb646:                                         ; preds = %if.then643
  %591 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5737
  %frame_rate = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %591, i32 0, i32 8, !dbg !5739
  %592 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5740
  %frame_rate647 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %592, i32 0, i32 23, !dbg !5741
  %593 = bitcast %struct.AVRational* %frame_rate to i8*, !dbg !5741
  %594 = bitcast %struct.AVRational* %frame_rate647 to i8*, !dbg !5741
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %593, i8* %594, i64 8, i32 4, i1 false), !dbg !5741
  %595 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5742
  %enc_ctx648 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %595, i32 0, i32 14, !dbg !5743
  %596 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx648, align 8, !dbg !5743
  %width649 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %596, i32 0, i32 20, !dbg !5744
  %597 = load i32, i32* %width649, align 4, !dbg !5744
  %598 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5745
  %width650 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %598, i32 0, i32 6, !dbg !5746
  store i32 %597, i32* %width650, align 4, !dbg !5747
  %599 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5748
  %enc_ctx651 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %599, i32 0, i32 14, !dbg !5749
  %600 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx651, align 8, !dbg !5749
  %height652 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %600, i32 0, i32 21, !dbg !5750
  %601 = load i32, i32* %height652, align 8, !dbg !5750
  %602 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5751
  %height653 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %602, i32 0, i32 7, !dbg !5752
  store i32 %601, i32* %height653, align 8, !dbg !5753
  %603 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5754
  %enc_ctx654 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %603, i32 0, i32 14, !dbg !5756
  %604 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx654, align 8, !dbg !5756
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %604, i32 0, i32 25, !dbg !5757
  %605 = load i32, i32* %pix_fmt, align 8, !dbg !5757
  %cmp655 = icmp ne i32 %605, -1, !dbg !5758
  br i1 %cmp655, label %if.then657, label %if.else661, !dbg !5759

if.then657:                                       ; preds = %sw.bb646
  %606 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5760
  %enc_ctx658 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %606, i32 0, i32 14, !dbg !5762
  %607 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx658, align 8, !dbg !5762
  %pix_fmt659 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %607, i32 0, i32 25, !dbg !5763
  %608 = load i32, i32* %pix_fmt659, align 8, !dbg !5763
  %609 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5764
  %format660 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %609, i32 0, i32 9, !dbg !5765
  store i32 %608, i32* %format660, align 4, !dbg !5766
  br label %if.end688, !dbg !5767

if.else661:                                       ; preds = %sw.bb646
  %610 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5768
  %enc = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %610, i32 0, i32 16, !dbg !5771
  %611 = load %struct.AVCodec*, %struct.AVCodec** %enc, align 8, !dbg !5771
  %pix_fmts = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %611, i32 0, i32 6, !dbg !5772
  %612 = load i32*, i32** %pix_fmts, align 8, !dbg !5772
  %tobool662 = icmp ne i32* %612, null, !dbg !5768
  br i1 %tobool662, label %if.then663, label %if.end687, !dbg !5768

if.then663:                                       ; preds = %if.else661
  store i32 0, i32* %count, align 4, !dbg !5773
  br label %while.cond664, !dbg !5775

while.cond664:                                    ; preds = %while.body671, %if.then663
  %613 = load i32, i32* %count, align 4, !dbg !5776
  %idxprom665 = sext i32 %613 to i64, !dbg !5778
  %614 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5778
  %enc666 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %614, i32 0, i32 16, !dbg !5779
  %615 = load %struct.AVCodec*, %struct.AVCodec** %enc666, align 8, !dbg !5779
  %pix_fmts667 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %615, i32 0, i32 6, !dbg !5780
  %616 = load i32*, i32** %pix_fmts667, align 8, !dbg !5780
  %arrayidx668 = getelementptr inbounds i32, i32* %616, i64 %idxprom665, !dbg !5778
  %617 = load i32, i32* %arrayidx668, align 4, !dbg !5778
  %cmp669 = icmp ne i32 %617, -1, !dbg !5781
  br i1 %cmp669, label %while.body671, label %while.end673, !dbg !5782

while.body671:                                    ; preds = %while.cond664
  %618 = load i32, i32* %count, align 4, !dbg !5783
  %inc672 = add nsw i32 %618, 1, !dbg !5783
  store i32 %inc672, i32* %count, align 4, !dbg !5783
  br label %while.cond664, !dbg !5784, !llvm.loop !5786

while.end673:                                     ; preds = %while.cond664
  %619 = load i32, i32* %count, align 4, !dbg !5787
  %add674 = add nsw i32 %619, 1, !dbg !5788
  %conv675 = sext i32 %add674 to i64, !dbg !5787
  %call676 = call i8* @av_mallocz_array(i64 %conv675, i64 4), !dbg !5789
  %620 = bitcast i8* %call676 to i32*, !dbg !5789
  %621 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5790
  %formats = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %621, i32 0, i32 12, !dbg !5791
  store i32* %620, i32** %formats, align 8, !dbg !5792
  %622 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5793
  %formats677 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %622, i32 0, i32 12, !dbg !5795
  %623 = load i32*, i32** %formats677, align 8, !dbg !5795
  %tobool678 = icmp ne i32* %623, null, !dbg !5793
  br i1 %tobool678, label %if.end680, label %if.then679, !dbg !5796

if.then679:                                       ; preds = %while.end673
  call void @exit_program(i32 1) #11, !dbg !5797
  unreachable, !dbg !5797

if.end680:                                        ; preds = %while.end673
  %624 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5798
  %formats681 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %624, i32 0, i32 12, !dbg !5799
  %625 = load i32*, i32** %formats681, align 8, !dbg !5799
  %626 = bitcast i32* %625 to i8*, !dbg !5800
  %627 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5801
  %enc682 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %627, i32 0, i32 16, !dbg !5802
  %628 = load %struct.AVCodec*, %struct.AVCodec** %enc682, align 8, !dbg !5802
  %pix_fmts683 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %628, i32 0, i32 6, !dbg !5803
  %629 = load i32*, i32** %pix_fmts683, align 8, !dbg !5803
  %630 = bitcast i32* %629 to i8*, !dbg !5800
  %631 = load i32, i32* %count, align 4, !dbg !5804
  %add684 = add nsw i32 %631, 1, !dbg !5805
  %conv685 = sext i32 %add684 to i64, !dbg !5806
  %mul686 = mul i64 %conv685, 4, !dbg !5807
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %626, i8* %630, i64 %mul686, i32 4, i1 false), !dbg !5800
  br label %if.end687, !dbg !5808

if.end687:                                        ; preds = %if.end680, %if.else661
  br label %if.end688

if.end688:                                        ; preds = %if.end687, %if.then657
  br label %sw.epilog797, !dbg !5809

sw.bb689:                                         ; preds = %if.then643
  %632 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5810
  %enc_ctx690 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %632, i32 0, i32 14, !dbg !5812
  %633 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx690, align 8, !dbg !5812
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %633, i32 0, i32 84, !dbg !5813
  %634 = load i32, i32* %sample_fmt, align 8, !dbg !5813
  %cmp691 = icmp ne i32 %634, -1, !dbg !5814
  br i1 %cmp691, label %if.then693, label %if.else697, !dbg !5815

if.then693:                                       ; preds = %sw.bb689
  %635 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5816
  %enc_ctx694 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %635, i32 0, i32 14, !dbg !5818
  %636 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx694, align 8, !dbg !5818
  %sample_fmt695 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %636, i32 0, i32 84, !dbg !5819
  %637 = load i32, i32* %sample_fmt695, align 8, !dbg !5819
  %638 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5820
  %format696 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %638, i32 0, i32 9, !dbg !5821
  store i32 %637, i32* %format696, align 4, !dbg !5822
  br label %if.end726, !dbg !5823

if.else697:                                       ; preds = %sw.bb689
  %639 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5824
  %enc698 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %639, i32 0, i32 16, !dbg !5827
  %640 = load %struct.AVCodec*, %struct.AVCodec** %enc698, align 8, !dbg !5827
  %sample_fmts = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %640, i32 0, i32 8, !dbg !5828
  %641 = load i32*, i32** %sample_fmts, align 8, !dbg !5828
  %tobool699 = icmp ne i32* %641, null, !dbg !5824
  br i1 %tobool699, label %if.then700, label %if.end725, !dbg !5824

if.then700:                                       ; preds = %if.else697
  store i32 0, i32* %count, align 4, !dbg !5829
  br label %while.cond701, !dbg !5831

while.cond701:                                    ; preds = %while.body708, %if.then700
  %642 = load i32, i32* %count, align 4, !dbg !5832
  %idxprom702 = sext i32 %642 to i64, !dbg !5834
  %643 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5834
  %enc703 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %643, i32 0, i32 16, !dbg !5835
  %644 = load %struct.AVCodec*, %struct.AVCodec** %enc703, align 8, !dbg !5835
  %sample_fmts704 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %644, i32 0, i32 8, !dbg !5836
  %645 = load i32*, i32** %sample_fmts704, align 8, !dbg !5836
  %arrayidx705 = getelementptr inbounds i32, i32* %645, i64 %idxprom702, !dbg !5834
  %646 = load i32, i32* %arrayidx705, align 4, !dbg !5834
  %cmp706 = icmp ne i32 %646, -1, !dbg !5837
  br i1 %cmp706, label %while.body708, label %while.end710, !dbg !5838

while.body708:                                    ; preds = %while.cond701
  %647 = load i32, i32* %count, align 4, !dbg !5839
  %inc709 = add nsw i32 %647, 1, !dbg !5839
  store i32 %inc709, i32* %count, align 4, !dbg !5839
  br label %while.cond701, !dbg !5840, !llvm.loop !5842

while.end710:                                     ; preds = %while.cond701
  %648 = load i32, i32* %count, align 4, !dbg !5843
  %add711 = add nsw i32 %648, 1, !dbg !5844
  %conv712 = sext i32 %add711 to i64, !dbg !5843
  %call713 = call i8* @av_mallocz_array(i64 %conv712, i64 4), !dbg !5845
  %649 = bitcast i8* %call713 to i32*, !dbg !5845
  %650 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5846
  %formats714 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %650, i32 0, i32 12, !dbg !5847
  store i32* %649, i32** %formats714, align 8, !dbg !5848
  %651 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5849
  %formats715 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %651, i32 0, i32 12, !dbg !5851
  %652 = load i32*, i32** %formats715, align 8, !dbg !5851
  %tobool716 = icmp ne i32* %652, null, !dbg !5849
  br i1 %tobool716, label %if.end718, label %if.then717, !dbg !5852

if.then717:                                       ; preds = %while.end710
  call void @exit_program(i32 1) #11, !dbg !5853
  unreachable, !dbg !5853

if.end718:                                        ; preds = %while.end710
  %653 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5854
  %formats719 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %653, i32 0, i32 12, !dbg !5855
  %654 = load i32*, i32** %formats719, align 8, !dbg !5855
  %655 = bitcast i32* %654 to i8*, !dbg !5856
  %656 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5857
  %enc720 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %656, i32 0, i32 16, !dbg !5858
  %657 = load %struct.AVCodec*, %struct.AVCodec** %enc720, align 8, !dbg !5858
  %sample_fmts721 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %657, i32 0, i32 8, !dbg !5859
  %658 = load i32*, i32** %sample_fmts721, align 8, !dbg !5859
  %659 = bitcast i32* %658 to i8*, !dbg !5856
  %660 = load i32, i32* %count, align 4, !dbg !5860
  %add722 = add nsw i32 %660, 1, !dbg !5861
  %conv723 = sext i32 %add722 to i64, !dbg !5862
  %mul724 = mul i64 %conv723, 4, !dbg !5863
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %655, i8* %659, i64 %mul724, i32 4, i1 false), !dbg !5856
  br label %if.end725, !dbg !5864

if.end725:                                        ; preds = %if.end718, %if.else697
  br label %if.end726

if.end726:                                        ; preds = %if.end725, %if.then693
  %661 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5865
  %enc_ctx727 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %661, i32 0, i32 14, !dbg !5867
  %662 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx727, align 8, !dbg !5867
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %662, i32 0, i32 82, !dbg !5868
  %663 = load i32, i32* %sample_rate, align 8, !dbg !5868
  %tobool728 = icmp ne i32 %663, 0, !dbg !5865
  br i1 %tobool728, label %if.then729, label %if.else733, !dbg !5869

if.then729:                                       ; preds = %if.end726
  %664 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5870
  %enc_ctx730 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %664, i32 0, i32 14, !dbg !5872
  %665 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx730, align 8, !dbg !5872
  %sample_rate731 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %665, i32 0, i32 82, !dbg !5873
  %666 = load i32, i32* %sample_rate731, align 8, !dbg !5873
  %667 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5874
  %sample_rate732 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %667, i32 0, i32 10, !dbg !5875
  store i32 %666, i32* %sample_rate732, align 8, !dbg !5876
  br label %if.end760, !dbg !5877

if.else733:                                       ; preds = %if.end726
  %668 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5878
  %enc734 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %668, i32 0, i32 16, !dbg !5881
  %669 = load %struct.AVCodec*, %struct.AVCodec** %enc734, align 8, !dbg !5881
  %supported_samplerates = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %669, i32 0, i32 7, !dbg !5882
  %670 = load i32*, i32** %supported_samplerates, align 8, !dbg !5882
  %tobool735 = icmp ne i32* %670, null, !dbg !5878
  br i1 %tobool735, label %if.then736, label %if.end759, !dbg !5878

if.then736:                                       ; preds = %if.else733
  store i32 0, i32* %count, align 4, !dbg !5883
  br label %while.cond737, !dbg !5885

while.cond737:                                    ; preds = %while.body743, %if.then736
  %671 = load i32, i32* %count, align 4, !dbg !5886
  %idxprom738 = sext i32 %671 to i64, !dbg !5888
  %672 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5888
  %enc739 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %672, i32 0, i32 16, !dbg !5889
  %673 = load %struct.AVCodec*, %struct.AVCodec** %enc739, align 8, !dbg !5889
  %supported_samplerates740 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %673, i32 0, i32 7, !dbg !5890
  %674 = load i32*, i32** %supported_samplerates740, align 8, !dbg !5890
  %arrayidx741 = getelementptr inbounds i32, i32* %674, i64 %idxprom738, !dbg !5888
  %675 = load i32, i32* %arrayidx741, align 4, !dbg !5888
  %tobool742 = icmp ne i32 %675, 0, !dbg !5891
  br i1 %tobool742, label %while.body743, label %while.end745, !dbg !5891

while.body743:                                    ; preds = %while.cond737
  %676 = load i32, i32* %count, align 4, !dbg !5892
  %inc744 = add nsw i32 %676, 1, !dbg !5892
  store i32 %inc744, i32* %count, align 4, !dbg !5892
  br label %while.cond737, !dbg !5893, !llvm.loop !5895

while.end745:                                     ; preds = %while.cond737
  %677 = load i32, i32* %count, align 4, !dbg !5896
  %add746 = add nsw i32 %677, 1, !dbg !5897
  %conv747 = sext i32 %add746 to i64, !dbg !5896
  %call748 = call i8* @av_mallocz_array(i64 %conv747, i64 4), !dbg !5898
  %678 = bitcast i8* %call748 to i32*, !dbg !5898
  %679 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5899
  %sample_rates = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %679, i32 0, i32 14, !dbg !5900
  store i32* %678, i32** %sample_rates, align 8, !dbg !5901
  %680 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5902
  %sample_rates749 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %680, i32 0, i32 14, !dbg !5904
  %681 = load i32*, i32** %sample_rates749, align 8, !dbg !5904
  %tobool750 = icmp ne i32* %681, null, !dbg !5902
  br i1 %tobool750, label %if.end752, label %if.then751, !dbg !5905

if.then751:                                       ; preds = %while.end745
  call void @exit_program(i32 1) #11, !dbg !5906
  unreachable, !dbg !5906

if.end752:                                        ; preds = %while.end745
  %682 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5907
  %sample_rates753 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %682, i32 0, i32 14, !dbg !5908
  %683 = load i32*, i32** %sample_rates753, align 8, !dbg !5908
  %684 = bitcast i32* %683 to i8*, !dbg !5909
  %685 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5910
  %enc754 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %685, i32 0, i32 16, !dbg !5911
  %686 = load %struct.AVCodec*, %struct.AVCodec** %enc754, align 8, !dbg !5911
  %supported_samplerates755 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %686, i32 0, i32 7, !dbg !5912
  %687 = load i32*, i32** %supported_samplerates755, align 8, !dbg !5912
  %688 = bitcast i32* %687 to i8*, !dbg !5909
  %689 = load i32, i32* %count, align 4, !dbg !5913
  %add756 = add nsw i32 %689, 1, !dbg !5914
  %conv757 = sext i32 %add756 to i64, !dbg !5915
  %mul758 = mul i64 %conv757, 4, !dbg !5916
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %684, i8* %688, i64 %mul758, i32 4, i1 false), !dbg !5909
  br label %if.end759, !dbg !5917

if.end759:                                        ; preds = %if.end752, %if.else733
  br label %if.end760

if.end760:                                        ; preds = %if.end759, %if.then729
  %690 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5918
  %enc_ctx761 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %690, i32 0, i32 14, !dbg !5920
  %691 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx761, align 8, !dbg !5920
  %channels762 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %691, i32 0, i32 83, !dbg !5921
  %692 = load i32, i32* %channels762, align 4, !dbg !5921
  %tobool763 = icmp ne i32 %692, 0, !dbg !5918
  br i1 %tobool763, label %if.then764, label %if.else768, !dbg !5922

if.then764:                                       ; preds = %if.end760
  %693 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5923
  %enc_ctx765 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %693, i32 0, i32 14, !dbg !5925
  %694 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx765, align 8, !dbg !5925
  %channels766 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %694, i32 0, i32 83, !dbg !5926
  %695 = load i32, i32* %channels766, align 4, !dbg !5926
  %call767 = call i64 @av_get_default_channel_layout(i32 %695), !dbg !5927
  %696 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5928
  %channel_layout = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %696, i32 0, i32 11, !dbg !5929
  store i64 %call767, i64* %channel_layout, align 8, !dbg !5930
  br label %if.end796, !dbg !5931

if.else768:                                       ; preds = %if.end760
  %697 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5932
  %enc769 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %697, i32 0, i32 16, !dbg !5935
  %698 = load %struct.AVCodec*, %struct.AVCodec** %enc769, align 8, !dbg !5935
  %channel_layouts = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %698, i32 0, i32 9, !dbg !5936
  %699 = load i64*, i64** %channel_layouts, align 8, !dbg !5936
  %tobool770 = icmp ne i64* %699, null, !dbg !5932
  br i1 %tobool770, label %if.then771, label %if.end795, !dbg !5932

if.then771:                                       ; preds = %if.else768
  store i32 0, i32* %count, align 4, !dbg !5937
  br label %while.cond772, !dbg !5939

while.cond772:                                    ; preds = %while.body778, %if.then771
  %700 = load i32, i32* %count, align 4, !dbg !5940
  %idxprom773 = sext i32 %700 to i64, !dbg !5942
  %701 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5942
  %enc774 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %701, i32 0, i32 16, !dbg !5943
  %702 = load %struct.AVCodec*, %struct.AVCodec** %enc774, align 8, !dbg !5943
  %channel_layouts775 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %702, i32 0, i32 9, !dbg !5944
  %703 = load i64*, i64** %channel_layouts775, align 8, !dbg !5944
  %arrayidx776 = getelementptr inbounds i64, i64* %703, i64 %idxprom773, !dbg !5942
  %704 = load i64, i64* %arrayidx776, align 8, !dbg !5942
  %tobool777 = icmp ne i64 %704, 0, !dbg !5945
  br i1 %tobool777, label %while.body778, label %while.end780, !dbg !5945

while.body778:                                    ; preds = %while.cond772
  %705 = load i32, i32* %count, align 4, !dbg !5946
  %inc779 = add nsw i32 %705, 1, !dbg !5946
  store i32 %inc779, i32* %count, align 4, !dbg !5946
  br label %while.cond772, !dbg !5947, !llvm.loop !5949

while.end780:                                     ; preds = %while.cond772
  %706 = load i32, i32* %count, align 4, !dbg !5950
  %add781 = add nsw i32 %706, 1, !dbg !5951
  %conv782 = sext i32 %add781 to i64, !dbg !5950
  %call783 = call i8* @av_mallocz_array(i64 %conv782, i64 8), !dbg !5952
  %707 = bitcast i8* %call783 to i64*, !dbg !5952
  %708 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5953
  %channel_layouts784 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %708, i32 0, i32 13, !dbg !5954
  store i64* %707, i64** %channel_layouts784, align 8, !dbg !5955
  %709 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5956
  %channel_layouts785 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %709, i32 0, i32 13, !dbg !5958
  %710 = load i64*, i64** %channel_layouts785, align 8, !dbg !5958
  %tobool786 = icmp ne i64* %710, null, !dbg !5956
  br i1 %tobool786, label %if.end788, label %if.then787, !dbg !5959

if.then787:                                       ; preds = %while.end780
  call void @exit_program(i32 1) #11, !dbg !5960
  unreachable, !dbg !5960

if.end788:                                        ; preds = %while.end780
  %711 = load %struct.OutputFilter*, %struct.OutputFilter** %f, align 8, !dbg !5961
  %channel_layouts789 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %711, i32 0, i32 13, !dbg !5962
  %712 = load i64*, i64** %channel_layouts789, align 8, !dbg !5962
  %713 = bitcast i64* %712 to i8*, !dbg !5963
  %714 = load %struct.OutputStream*, %struct.OutputStream** %ost606, align 8, !dbg !5964
  %enc790 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %714, i32 0, i32 16, !dbg !5965
  %715 = load %struct.AVCodec*, %struct.AVCodec** %enc790, align 8, !dbg !5965
  %channel_layouts791 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %715, i32 0, i32 9, !dbg !5966
  %716 = load i64*, i64** %channel_layouts791, align 8, !dbg !5966
  %717 = bitcast i64* %716 to i8*, !dbg !5963
  %718 = load i32, i32* %count, align 4, !dbg !5967
  %add792 = add nsw i32 %718, 1, !dbg !5968
  %conv793 = sext i32 %add792 to i64, !dbg !5969
  %mul794 = mul i64 %conv793, 8, !dbg !5970
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %713, i8* %717, i64 %mul794, i32 8, i1 false), !dbg !5963
  br label %if.end795, !dbg !5971

if.end795:                                        ; preds = %if.end788, %if.else768
  br label %if.end796

if.end796:                                        ; preds = %if.end795, %if.then764
  br label %sw.epilog797, !dbg !5972

sw.epilog797:                                     ; preds = %if.then643, %if.end796, %if.end688
  br label %if.end798, !dbg !5973

if.end798:                                        ; preds = %sw.epilog797, %if.end641
  br label %for.inc799, !dbg !5974

for.inc799:                                       ; preds = %if.end798
  %719 = load i32, i32* %i, align 4, !dbg !5975
  %inc800 = add nsw i32 %719, 1, !dbg !5975
  store i32 %inc800, i32* %i, align 4, !dbg !5975
  br label %for.cond602, !dbg !5977, !llvm.loop !5978

for.end801:                                       ; preds = %for.cond602
  %720 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5980
  %oformat802 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %720, i32 0, i32 2, !dbg !5982
  %721 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat802, align 8, !dbg !5982
  %flags803 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %721, i32 0, i32 7, !dbg !5983
  %722 = load i32, i32* %flags803, align 4, !dbg !5983
  %and804 = and i32 %722, 2, !dbg !5984
  %tobool805 = icmp ne i32 %and804, 0, !dbg !5984
  br i1 %tobool805, label %if.then806, label %if.end813, !dbg !5985

if.then806:                                       ; preds = %for.end801
  %723 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5986
  %url807 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %723, i32 0, i32 9, !dbg !5989
  %724 = load i8*, i8** %url807, align 8, !dbg !5989
  %call808 = call i32 @av_filename_number_test(i8* %724), !dbg !5990
  %tobool809 = icmp ne i32 %call808, 0, !dbg !5990
  br i1 %tobool809, label %if.end812, label %if.then810, !dbg !5991

if.then810:                                       ; preds = %if.then806
  %725 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5992
  %url811 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %725, i32 0, i32 9, !dbg !5994
  %726 = load i8*, i8** %url811, align 8, !dbg !5994
  call void @print_error(i8* %726, i32 -22), !dbg !5995
  call void @exit_program(i32 1) #11, !dbg !5996
  unreachable, !dbg !5996

if.end812:                                        ; preds = %if.then806
  br label %if.end813, !dbg !5997

if.end813:                                        ; preds = %if.end812, %for.end801
  %727 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !5998
  %oformat814 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %727, i32 0, i32 2, !dbg !6000
  %728 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat814, align 8, !dbg !6000
  %flags815 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %728, i32 0, i32 7, !dbg !6001
  %729 = load i32, i32* %flags815, align 4, !dbg !6001
  %and816 = and i32 %729, 4096, !dbg !6002
  %tobool817 = icmp ne i32 %and816, 0, !dbg !6002
  br i1 %tobool817, label %if.end821, label %land.lhs.true818, !dbg !6003

land.lhs.true818:                                 ; preds = %if.end813
  %730 = load i32, i32* @input_stream_potentially_available, align 4, !dbg !6004
  %tobool819 = icmp ne i32 %730, 0, !dbg !6004
  br i1 %tobool819, label %if.end821, label %if.then820, !dbg !6006

if.then820:                                       ; preds = %land.lhs.true818
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.494, i32 0, i32 0)), !dbg !6007
  call void @exit_program(i32 1) #11, !dbg !6009
  unreachable, !dbg !6009

if.end821:                                        ; preds = %land.lhs.true818, %if.end813
  %731 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6010
  %oformat822 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %731, i32 0, i32 2, !dbg !6012
  %732 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat822, align 8, !dbg !6012
  %flags823 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %732, i32 0, i32 7, !dbg !6013
  %733 = load i32, i32* %flags823, align 4, !dbg !6013
  %and824 = and i32 %733, 1, !dbg !6014
  %tobool825 = icmp ne i32 %and824, 0, !dbg !6014
  br i1 %tobool825, label %if.else835, label %if.then826, !dbg !6015

if.then826:                                       ; preds = %if.end821
  %734 = load i8*, i8** %filename.addr, align 8, !dbg !6016
  call void @assert_file_overwrite(i8* %734), !dbg !6018
  %735 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6019
  %pb827 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %735, i32 0, i32 4, !dbg !6021
  %736 = load i8*, i8** %filename.addr, align 8, !dbg !6022
  %737 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6023
  %interrupt_callback828 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %737, i32 0, i32 33, !dbg !6024
  %738 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !6025
  %opts829 = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %738, i32 0, i32 1, !dbg !6026
  %call830 = call i32 @avio_open2(%struct.AVIOContext** %pb827, i8* %736, i32 2, %struct.AVIOInterruptCB* %interrupt_callback828, %struct.AVDictionary** %opts829), !dbg !6027
  store i32 %call830, i32* %err, align 4, !dbg !6028
  %cmp831 = icmp slt i32 %call830, 0, !dbg !6029
  br i1 %cmp831, label %if.then833, label %if.end834, !dbg !6030

if.then833:                                       ; preds = %if.then826
  %739 = load i8*, i8** %filename.addr, align 8, !dbg !6031
  %740 = load i32, i32* %err, align 4, !dbg !6033
  call void @print_error(i8* %739, i32 %740), !dbg !6034
  call void @exit_program(i32 1) #11, !dbg !6035
  unreachable, !dbg !6035

if.end834:                                        ; preds = %if.then826
  br label %if.end846, !dbg !6036

if.else835:                                       ; preds = %if.end821
  %741 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6037
  %oformat836 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %741, i32 0, i32 2, !dbg !6040
  %742 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat836, align 8, !dbg !6040
  %name837 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %742, i32 0, i32 0, !dbg !6041
  %743 = load i8*, i8** %name837, align 8, !dbg !6041
  %call838 = call i32 @strcmp(i8* %743, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.495, i32 0, i32 0)) #10, !dbg !6042
  %cmp839 = icmp eq i32 %call838, 0, !dbg !6043
  br i1 %cmp839, label %land.lhs.true841, label %if.end845, !dbg !6044

land.lhs.true841:                                 ; preds = %if.else835
  %744 = load i8*, i8** %filename.addr, align 8, !dbg !6045
  %call842 = call i32 @av_filename_number_test(i8* %744), !dbg !6047
  %tobool843 = icmp ne i32 %call842, 0, !dbg !6047
  br i1 %tobool843, label %if.end845, label %if.then844, !dbg !6048

if.then844:                                       ; preds = %land.lhs.true841
  %745 = load i8*, i8** %filename.addr, align 8, !dbg !6049
  call void @assert_file_overwrite(i8* %745), !dbg !6050
  br label %if.end845, !dbg !6050

if.end845:                                        ; preds = %if.then844, %land.lhs.true841, %if.else835
  br label %if.end846

if.end846:                                        ; preds = %if.end845, %if.end834
  %746 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6051
  %mux_preload = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %746, i32 0, i32 47, !dbg !6053
  %747 = load float, float* %mux_preload, align 8, !dbg !6053
  %tobool847 = fcmp une float %747, 0.000000e+00, !dbg !6051
  br i1 %tobool847, label %if.then848, label %if.end854, !dbg !6054

if.then848:                                       ; preds = %if.end846
  %748 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !6055
  %opts849 = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %748, i32 0, i32 1, !dbg !6057
  %749 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6058
  %mux_preload850 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %749, i32 0, i32 47, !dbg !6059
  %750 = load float, float* %mux_preload850, align 8, !dbg !6059
  %mul851 = fmul float %750, 1.000000e+06, !dbg !6060
  %conv852 = fptosi float %mul851 to i64, !dbg !6058
  %call853 = call i32 @av_dict_set_int(%struct.AVDictionary** %opts849, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.496, i32 0, i32 0), i64 %conv852, i32 0), !dbg !6061
  br label %if.end854, !dbg !6062

if.end854:                                        ; preds = %if.then848, %if.end846
  %751 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6063
  %mux_max_delay = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %751, i32 0, i32 48, !dbg !6064
  %752 = load float, float* %mux_max_delay, align 4, !dbg !6064
  %mul855 = fmul float %752, 1.000000e+06, !dbg !6065
  %conv856 = fptosi float %mul855 to i32, !dbg !6066
  %753 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6067
  %max_delay = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %753, i32 0, i32 14, !dbg !6068
  store i32 %conv856, i32* %max_delay, align 4, !dbg !6069
  store i32 0, i32* %i, align 4, !dbg !6070
  br label %for.cond857, !dbg !6072

for.cond857:                                      ; preds = %for.inc893, %if.end854
  %754 = load i32, i32* %i, align 4, !dbg !6073
  %755 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6076
  %nb_metadata_map = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %755, i32 0, i32 86, !dbg !6077
  %756 = load i32, i32* %nb_metadata_map, align 8, !dbg !6077
  %cmp858 = icmp slt i32 %754, %756, !dbg !6078
  br i1 %cmp858, label %for.body860, label %for.end895, !dbg !6079

for.body860:                                      ; preds = %for.cond857
  call void @llvm.dbg.declare(metadata i8** %p861, metadata !6080, metadata !1898), !dbg !6082
  call void @llvm.dbg.declare(metadata i32* %in_file_index, metadata !6083, metadata !1898), !dbg !6084
  %757 = load i32, i32* %i, align 4, !dbg !6085
  %idxprom862 = sext i32 %757 to i64, !dbg !6086
  %758 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6086
  %metadata_map = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %758, i32 0, i32 85, !dbg !6087
  %759 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %metadata_map, align 8, !dbg !6087
  %arrayidx863 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %759, i64 %idxprom862, !dbg !6086
  %u864 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx863, i32 0, i32 1, !dbg !6088
  %str865 = bitcast %union.anon.1* %u864 to i8**, !dbg !6089
  %760 = load i8*, i8** %str865, align 8, !dbg !6089
  %call866 = call i64 @strtol(i8* %760, i8** %p861, i32 0) #12, !dbg !6090
  %conv867 = trunc i64 %call866 to i32, !dbg !6090
  store i32 %conv867, i32* %in_file_index, align 4, !dbg !6084
  %761 = load i32, i32* %in_file_index, align 4, !dbg !6091
  %762 = load i32, i32* @nb_input_files, align 4, !dbg !6093
  %cmp868 = icmp sge i32 %761, %762, !dbg !6094
  br i1 %cmp868, label %if.then870, label %if.end871, !dbg !6095

if.then870:                                       ; preds = %for.body860
  %763 = load i32, i32* %in_file_index, align 4, !dbg !6096
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.497, i32 0, i32 0), i32 %763), !dbg !6098
  call void @exit_program(i32 1) #11, !dbg !6099
  unreachable, !dbg !6099

if.end871:                                        ; preds = %for.body860
  %764 = load i32, i32* %i, align 4, !dbg !6100
  %idxprom872 = sext i32 %764 to i64, !dbg !6101
  %765 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6101
  %metadata_map873 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %765, i32 0, i32 85, !dbg !6102
  %766 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %metadata_map873, align 8, !dbg !6102
  %arrayidx874 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %766, i64 %idxprom872, !dbg !6101
  %specifier875 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx874, i32 0, i32 0, !dbg !6103
  %767 = load i8*, i8** %specifier875, align 8, !dbg !6103
  %768 = load i8*, i8** %p861, align 8, !dbg !6104
  %769 = load i8, i8* %768, align 1, !dbg !6105
  %conv876 = sext i8 %769 to i32, !dbg !6105
  %tobool877 = icmp ne i32 %conv876, 0, !dbg !6105
  br i1 %tobool877, label %cond.true878, label %cond.false880, !dbg !6105

cond.true878:                                     ; preds = %if.end871
  %770 = load i8*, i8** %p861, align 8, !dbg !6106
  %add.ptr879 = getelementptr inbounds i8, i8* %770, i64 1, !dbg !6108
  br label %cond.end881, !dbg !6109

cond.false880:                                    ; preds = %if.end871
  %771 = load i8*, i8** %p861, align 8, !dbg !6110
  br label %cond.end881, !dbg !6112

cond.end881:                                      ; preds = %cond.false880, %cond.true878
  %cond882 = phi i8* [ %add.ptr879, %cond.true878 ], [ %771, %cond.false880 ], !dbg !6113
  %772 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6115
  %773 = load i32, i32* %in_file_index, align 4, !dbg !6116
  %cmp883 = icmp sge i32 %773, 0, !dbg !6117
  br i1 %cmp883, label %cond.true885, label %cond.false889, !dbg !6116

cond.true885:                                     ; preds = %cond.end881
  %774 = load i32, i32* %in_file_index, align 4, !dbg !6118
  %idxprom886 = sext i32 %774 to i64, !dbg !6119
  %775 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6119
  %arrayidx887 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %775, i64 %idxprom886, !dbg !6119
  %776 = load %struct.InputFile*, %struct.InputFile** %arrayidx887, align 8, !dbg !6119
  %ctx888 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %776, i32 0, i32 0, !dbg !6120
  %777 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx888, align 8, !dbg !6120
  br label %cond.end890, !dbg !6121

cond.false889:                                    ; preds = %cond.end881
  br label %cond.end890, !dbg !6122

cond.end890:                                      ; preds = %cond.false889, %cond.true885
  %cond891 = phi %struct.AVFormatContext* [ %777, %cond.true885 ], [ null, %cond.false889 ], !dbg !6123
  %778 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6124
  %call892 = call i32 @copy_metadata(i8* %767, i8* %cond882, %struct.AVFormatContext* %772, %struct.AVFormatContext* %cond891, %struct.OptionsContext* %778), !dbg !6125
  br label %for.inc893, !dbg !6127

for.inc893:                                       ; preds = %cond.end890
  %779 = load i32, i32* %i, align 4, !dbg !6128
  %inc894 = add nsw i32 %779, 1, !dbg !6128
  store i32 %inc894, i32* %i, align 4, !dbg !6128
  br label %for.cond857, !dbg !6130, !llvm.loop !6131

for.end895:                                       ; preds = %for.cond857
  %780 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6133
  %chapters_input_file = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %780, i32 0, i32 43, !dbg !6135
  %781 = load i32, i32* %chapters_input_file, align 4, !dbg !6135
  %782 = load i32, i32* @nb_input_files, align 4, !dbg !6136
  %cmp896 = icmp sge i32 %781, %782, !dbg !6137
  br i1 %cmp896, label %if.then898, label %if.end921, !dbg !6138

if.then898:                                       ; preds = %for.end895
  %783 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6139
  %chapters_input_file899 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %783, i32 0, i32 43, !dbg !6142
  %784 = load i32, i32* %chapters_input_file899, align 4, !dbg !6142
  %cmp900 = icmp eq i32 %784, 2147483647, !dbg !6143
  br i1 %cmp900, label %if.then902, label %if.else918, !dbg !6144

if.then902:                                       ; preds = %if.then898
  %785 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6145
  %chapters_input_file903 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %785, i32 0, i32 43, !dbg !6147
  store i32 -1, i32* %chapters_input_file903, align 4, !dbg !6148
  store i32 0, i32* %i, align 4, !dbg !6149
  br label %for.cond904, !dbg !6151

for.cond904:                                      ; preds = %for.inc915, %if.then902
  %786 = load i32, i32* %i, align 4, !dbg !6152
  %787 = load i32, i32* @nb_input_files, align 4, !dbg !6155
  %cmp905 = icmp slt i32 %786, %787, !dbg !6156
  br i1 %cmp905, label %for.body907, label %for.end917, !dbg !6157

for.body907:                                      ; preds = %for.cond904
  %788 = load i32, i32* %i, align 4, !dbg !6158
  %idxprom908 = sext i32 %788 to i64, !dbg !6160
  %789 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6160
  %arrayidx909 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %789, i64 %idxprom908, !dbg !6160
  %790 = load %struct.InputFile*, %struct.InputFile** %arrayidx909, align 8, !dbg !6160
  %ctx910 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %790, i32 0, i32 0, !dbg !6161
  %791 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx910, align 8, !dbg !6161
  %nb_chapters = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %791, i32 0, i32 27, !dbg !6162
  %792 = load i32, i32* %nb_chapters, align 4, !dbg !6162
  %tobool911 = icmp ne i32 %792, 0, !dbg !6160
  br i1 %tobool911, label %if.then912, label %if.end914, !dbg !6163

if.then912:                                       ; preds = %for.body907
  %793 = load i32, i32* %i, align 4, !dbg !6164
  %794 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6166
  %chapters_input_file913 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %794, i32 0, i32 43, !dbg !6167
  store i32 %793, i32* %chapters_input_file913, align 4, !dbg !6168
  br label %for.end917, !dbg !6169

if.end914:                                        ; preds = %for.body907
  br label %for.inc915, !dbg !6170

for.inc915:                                       ; preds = %if.end914
  %795 = load i32, i32* %i, align 4, !dbg !6172
  %inc916 = add nsw i32 %795, 1, !dbg !6172
  store i32 %inc916, i32* %i, align 4, !dbg !6172
  br label %for.cond904, !dbg !6174, !llvm.loop !6175

for.end917:                                       ; preds = %if.then912, %for.cond904
  br label %if.end920, !dbg !6177

if.else918:                                       ; preds = %if.then898
  %796 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6178
  %chapters_input_file919 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %796, i32 0, i32 43, !dbg !6180
  %797 = load i32, i32* %chapters_input_file919, align 4, !dbg !6180
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.498, i32 0, i32 0), i32 %797), !dbg !6181
  call void @exit_program(i32 1) #11, !dbg !6182
  unreachable, !dbg !6182

if.end920:                                        ; preds = %for.end917
  br label %if.end921, !dbg !6183

if.end921:                                        ; preds = %if.end920, %for.end895
  %798 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6184
  %chapters_input_file922 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %798, i32 0, i32 43, !dbg !6186
  %799 = load i32, i32* %chapters_input_file922, align 4, !dbg !6186
  %cmp923 = icmp sge i32 %799, 0, !dbg !6187
  br i1 %cmp923, label %if.then925, label %if.end933, !dbg !6188

if.then925:                                       ; preds = %if.end921
  %800 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6189
  %chapters_input_file926 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %800, i32 0, i32 43, !dbg !6190
  %801 = load i32, i32* %chapters_input_file926, align 4, !dbg !6190
  %idxprom927 = sext i32 %801 to i64, !dbg !6191
  %802 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6191
  %arrayidx928 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %802, i64 %idxprom927, !dbg !6191
  %803 = load %struct.InputFile*, %struct.InputFile** %arrayidx928, align 8, !dbg !6191
  %804 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !6192
  %805 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6193
  %metadata_chapters_manual = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %805, i32 0, i32 40, !dbg !6194
  %806 = load i32, i32* %metadata_chapters_manual, align 4, !dbg !6194
  %tobool929 = icmp ne i32 %806, 0, !dbg !6195
  %lnot930 = xor i1 %tobool929, true, !dbg !6195
  %lnot.ext931 = zext i1 %lnot930 to i32, !dbg !6195
  %call932 = call i32 @copy_chapters(%struct.InputFile* %803, %struct.OutputFile* %804, i32 %lnot.ext931), !dbg !6196
  br label %if.end933, !dbg !6196

if.end933:                                        ; preds = %if.then925, %if.end921
  %807 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6197
  %metadata_global_manual = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %807, i32 0, i32 38, !dbg !6199
  %808 = load i32, i32* %metadata_global_manual, align 4, !dbg !6199
  %tobool934 = icmp ne i32 %808, 0, !dbg !6197
  br i1 %tobool934, label %if.end952, label %land.lhs.true935, !dbg !6200

land.lhs.true935:                                 ; preds = %if.end933
  %809 = load i32, i32* @nb_input_files, align 4, !dbg !6201
  %tobool936 = icmp ne i32 %809, 0, !dbg !6201
  br i1 %tobool936, label %if.then937, label %if.end952, !dbg !6203

if.then937:                                       ; preds = %land.lhs.true935
  %810 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6204
  %metadata938 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %810, i32 0, i32 29, !dbg !6206
  %811 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6207
  %arrayidx939 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %811, i64 0, !dbg !6207
  %812 = load %struct.InputFile*, %struct.InputFile** %arrayidx939, align 8, !dbg !6207
  %ctx940 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %812, i32 0, i32 0, !dbg !6208
  %813 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx940, align 8, !dbg !6208
  %metadata941 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %813, i32 0, i32 29, !dbg !6209
  %814 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata941, align 8, !dbg !6209
  %call942 = call i32 @av_dict_copy(%struct.AVDictionary** %metadata938, %struct.AVDictionary* %814, i32 16), !dbg !6210
  %815 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6211
  %recording_time943 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %815, i32 0, i32 44, !dbg !6213
  %816 = load i64, i64* %recording_time943, align 8, !dbg !6213
  %cmp944 = icmp ne i64 %816, 9223372036854775807, !dbg !6214
  br i1 %cmp944, label %if.then946, label %if.end949, !dbg !6215

if.then946:                                       ; preds = %if.then937
  %817 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6216
  %metadata947 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %817, i32 0, i32 29, !dbg !6217
  %call948 = call i32 @av_dict_set(%struct.AVDictionary** %metadata947, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.114, i32 0, i32 0), i8* null, i32 0), !dbg !6218
  br label %if.end949, !dbg !6218

if.end949:                                        ; preds = %if.then946, %if.then937
  %818 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6219
  %metadata950 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %818, i32 0, i32 29, !dbg !6220
  %call951 = call i32 @av_dict_set(%struct.AVDictionary** %metadata950, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.499, i32 0, i32 0), i8* null, i32 0), !dbg !6221
  br label %if.end952, !dbg !6222

if.end952:                                        ; preds = %if.end949, %land.lhs.true935, %if.end933
  %819 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6223
  %metadata_streams_manual = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %819, i32 0, i32 39, !dbg !6225
  %820 = load i32, i32* %metadata_streams_manual, align 8, !dbg !6225
  %tobool953 = icmp ne i32 %820, 0, !dbg !6223
  br i1 %tobool953, label %if.end994, label %if.then954, !dbg !6226

if.then954:                                       ; preds = %if.end952
  %821 = load %struct.OutputFile*, %struct.OutputFile** %of, align 8, !dbg !6227
  %ost_index955 = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %821, i32 0, i32 2, !dbg !6229
  %822 = load i32, i32* %ost_index955, align 8, !dbg !6229
  store i32 %822, i32* %i, align 4, !dbg !6230
  br label %for.cond956, !dbg !6231

for.cond956:                                      ; preds = %for.inc991, %if.then954
  %823 = load i32, i32* %i, align 4, !dbg !6232
  %824 = load i32, i32* @nb_output_streams, align 4, !dbg !6235
  %cmp957 = icmp slt i32 %823, %824, !dbg !6236
  br i1 %cmp957, label %for.body959, label %for.end993, !dbg !6237

for.body959:                                      ; preds = %for.cond956
  call void @llvm.dbg.declare(metadata %struct.InputStream** %ist960, metadata !6238, metadata !1898), !dbg !6240
  %825 = load i32, i32* %i, align 4, !dbg !6241
  %idxprom961 = sext i32 %825 to i64, !dbg !6243
  %826 = load %struct.OutputStream**, %struct.OutputStream*** @output_streams, align 8, !dbg !6243
  %arrayidx962 = getelementptr inbounds %struct.OutputStream*, %struct.OutputStream** %826, i64 %idxprom961, !dbg !6243
  %827 = load %struct.OutputStream*, %struct.OutputStream** %arrayidx962, align 8, !dbg !6243
  %source_index963 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %827, i32 0, i32 2, !dbg !6244
  %828 = load i32, i32* %source_index963, align 8, !dbg !6244
  %cmp964 = icmp slt i32 %828, 0, !dbg !6245
  br i1 %cmp964, label %if.then966, label %if.end967, !dbg !6246

if.then966:                                       ; preds = %for.body959
  br label %for.inc991, !dbg !6247

if.end967:                                        ; preds = %for.body959
  %829 = load i32, i32* %i, align 4, !dbg !6248
  %idxprom968 = sext i32 %829 to i64, !dbg !6249
  %830 = load %struct.OutputStream**, %struct.OutputStream*** @output_streams, align 8, !dbg !6249
  %arrayidx969 = getelementptr inbounds %struct.OutputStream*, %struct.OutputStream** %830, i64 %idxprom968, !dbg !6249
  %831 = load %struct.OutputStream*, %struct.OutputStream** %arrayidx969, align 8, !dbg !6249
  %source_index970 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %831, i32 0, i32 2, !dbg !6250
  %832 = load i32, i32* %source_index970, align 8, !dbg !6250
  %idxprom971 = sext i32 %832 to i64, !dbg !6251
  %833 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !6251
  %arrayidx972 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %833, i64 %idxprom971, !dbg !6251
  %834 = load %struct.InputStream*, %struct.InputStream** %arrayidx972, align 8, !dbg !6251
  store %struct.InputStream* %834, %struct.InputStream** %ist960, align 8, !dbg !6252
  %835 = load i32, i32* %i, align 4, !dbg !6253
  %idxprom973 = sext i32 %835 to i64, !dbg !6254
  %836 = load %struct.OutputStream**, %struct.OutputStream*** @output_streams, align 8, !dbg !6254
  %arrayidx974 = getelementptr inbounds %struct.OutputStream*, %struct.OutputStream** %836, i64 %idxprom973, !dbg !6254
  %837 = load %struct.OutputStream*, %struct.OutputStream** %arrayidx974, align 8, !dbg !6254
  %st975 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %837, i32 0, i32 3, !dbg !6255
  %838 = load %struct.AVStream*, %struct.AVStream** %st975, align 8, !dbg !6255
  %metadata976 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %838, i32 0, i32 11, !dbg !6256
  %839 = load %struct.InputStream*, %struct.InputStream** %ist960, align 8, !dbg !6257
  %st977 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %839, i32 0, i32 1, !dbg !6258
  %840 = load %struct.AVStream*, %struct.AVStream** %st977, align 8, !dbg !6258
  %metadata978 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %840, i32 0, i32 11, !dbg !6259
  %841 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata978, align 8, !dbg !6259
  %call979 = call i32 @av_dict_copy(%struct.AVDictionary** %metadata976, %struct.AVDictionary* %841, i32 16), !dbg !6260
  %842 = load i32, i32* %i, align 4, !dbg !6261
  %idxprom980 = sext i32 %842 to i64, !dbg !6263
  %843 = load %struct.OutputStream**, %struct.OutputStream*** @output_streams, align 8, !dbg !6263
  %arrayidx981 = getelementptr inbounds %struct.OutputStream*, %struct.OutputStream** %843, i64 %idxprom980, !dbg !6263
  %844 = load %struct.OutputStream*, %struct.OutputStream** %arrayidx981, align 8, !dbg !6263
  %stream_copy982 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %844, i32 0, i32 52, !dbg !6264
  %845 = load i32, i32* %stream_copy982, align 8, !dbg !6264
  %tobool983 = icmp ne i32 %845, 0, !dbg !6263
  br i1 %tobool983, label %if.end990, label %if.then984, !dbg !6265

if.then984:                                       ; preds = %if.end967
  %846 = load i32, i32* %i, align 4, !dbg !6266
  %idxprom985 = sext i32 %846 to i64, !dbg !6268
  %847 = load %struct.OutputStream**, %struct.OutputStream*** @output_streams, align 8, !dbg !6268
  %arrayidx986 = getelementptr inbounds %struct.OutputStream*, %struct.OutputStream** %847, i64 %idxprom985, !dbg !6268
  %848 = load %struct.OutputStream*, %struct.OutputStream** %arrayidx986, align 8, !dbg !6268
  %st987 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %848, i32 0, i32 3, !dbg !6269
  %849 = load %struct.AVStream*, %struct.AVStream** %st987, align 8, !dbg !6269
  %metadata988 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %849, i32 0, i32 11, !dbg !6270
  %call989 = call i32 @av_dict_set(%struct.AVDictionary** %metadata988, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.453, i32 0, i32 0), i8* null, i32 0), !dbg !6271
  br label %if.end990, !dbg !6272

if.end990:                                        ; preds = %if.then984, %if.end967
  br label %for.inc991, !dbg !6273

for.inc991:                                       ; preds = %if.end990, %if.then966
  %850 = load i32, i32* %i, align 4, !dbg !6274
  %inc992 = add nsw i32 %850, 1, !dbg !6274
  store i32 %inc992, i32* %i, align 4, !dbg !6274
  br label %for.cond956, !dbg !6276, !llvm.loop !6277

for.end993:                                       ; preds = %for.cond956
  br label %if.end994, !dbg !6279

if.end994:                                        ; preds = %for.end993, %if.end952
  store i32 0, i32* %i, align 4, !dbg !6281
  br label %for.cond995, !dbg !6283

for.cond995:                                      ; preds = %for.inc1079, %if.end994
  %851 = load i32, i32* %i, align 4, !dbg !6284
  %852 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6287
  %nb_program = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %852, i32 0, i32 118, !dbg !6288
  %853 = load i32, i32* %nb_program, align 8, !dbg !6288
  %cmp996 = icmp slt i32 %851, %853, !dbg !6289
  br i1 %cmp996, label %for.body998, label %for.end1081, !dbg !6290

for.body998:                                      ; preds = %for.cond995
  call void @llvm.dbg.declare(metadata i8** %p999, metadata !6291, metadata !1898), !dbg !6293
  %854 = load i32, i32* %i, align 4, !dbg !6294
  %idxprom1000 = sext i32 %854 to i64, !dbg !6295
  %855 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6295
  %program = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %855, i32 0, i32 117, !dbg !6296
  %856 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %program, align 8, !dbg !6296
  %arrayidx1001 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %856, i64 %idxprom1000, !dbg !6295
  %u1002 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx1001, i32 0, i32 1, !dbg !6297
  %str1003 = bitcast %union.anon.1* %u1002 to i8**, !dbg !6298
  %857 = load i8*, i8** %str1003, align 8, !dbg !6298
  store i8* %857, i8** %p999, align 8, !dbg !6293
  call void @llvm.dbg.declare(metadata i32* %progid, metadata !6299, metadata !1898), !dbg !6300
  %858 = load i32, i32* %i, align 4, !dbg !6301
  %add1004 = add nsw i32 %858, 1, !dbg !6302
  store i32 %add1004, i32* %progid, align 4, !dbg !6300
  call void @llvm.dbg.declare(metadata %struct.AVProgram** %program1005, metadata !6303, metadata !1898), !dbg !6304
  br label %while.cond1006, !dbg !6305

while.cond1006:                                   ; preds = %if.end1029, %for.body998
  %859 = load i8*, i8** %p999, align 8, !dbg !6306
  %860 = load i8, i8* %859, align 1, !dbg !6308
  %tobool1007 = icmp ne i8 %860, 0, !dbg !6309
  br i1 %tobool1007, label %while.body1008, label %while.end1030, !dbg !6309

while.body1008:                                   ; preds = %while.cond1006
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !6310, metadata !1898), !dbg !6312
  %call1009 = call i8* @av_get_token(i8** %p999, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.500, i32 0, i32 0)), !dbg !6313
  store i8* %call1009, i8** %p2, align 8, !dbg !6312
  call void @llvm.dbg.declare(metadata i8** %to_dealloc, metadata !6314, metadata !1898), !dbg !6315
  %861 = load i8*, i8** %p2, align 8, !dbg !6316
  store i8* %861, i8** %to_dealloc, align 8, !dbg !6315
  call void @llvm.dbg.declare(metadata i8** %key1010, metadata !6317, metadata !1898), !dbg !6318
  %862 = load i8*, i8** %p2, align 8, !dbg !6319
  %tobool1011 = icmp ne i8* %862, null, !dbg !6319
  br i1 %tobool1011, label %if.end1013, label %if.then1012, !dbg !6321

if.then1012:                                      ; preds = %while.body1008
  br label %while.end1030, !dbg !6322

if.end1013:                                       ; preds = %while.body1008
  %863 = load i8*, i8** %p999, align 8, !dbg !6323
  %864 = load i8, i8* %863, align 1, !dbg !6325
  %tobool1014 = icmp ne i8 %864, 0, !dbg !6325
  br i1 %tobool1014, label %if.then1015, label %if.end1016, !dbg !6326

if.then1015:                                      ; preds = %if.end1013
  %865 = load i8*, i8** %p999, align 8, !dbg !6327
  %incdec.ptr = getelementptr inbounds i8, i8* %865, i32 1, !dbg !6327
  store i8* %incdec.ptr, i8** %p999, align 8, !dbg !6327
  br label %if.end1016, !dbg !6329

if.end1016:                                       ; preds = %if.then1015, %if.end1013
  %call1017 = call i8* @av_get_token(i8** %p2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.501, i32 0, i32 0)), !dbg !6330
  store i8* %call1017, i8** %key1010, align 8, !dbg !6331
  %866 = load i8*, i8** %key1010, align 8, !dbg !6332
  %tobool1018 = icmp ne i8* %866, null, !dbg !6332
  br i1 %tobool1018, label %lor.lhs.false1019, label %if.then1021, !dbg !6334

lor.lhs.false1019:                                ; preds = %if.end1016
  %867 = load i8*, i8** %p2, align 8, !dbg !6335
  %868 = load i8, i8* %867, align 1, !dbg !6337
  %tobool1020 = icmp ne i8 %868, 0, !dbg !6337
  br i1 %tobool1020, label %if.end1022, label %if.then1021, !dbg !6338

if.then1021:                                      ; preds = %lor.lhs.false1019, %if.end1016
  %869 = bitcast i8** %to_dealloc to i8*, !dbg !6339
  call void @av_freep(i8* %869), !dbg !6341
  %870 = bitcast i8** %key1010 to i8*, !dbg !6342
  call void @av_freep(i8* %870), !dbg !6343
  br label %while.end1030, !dbg !6344

if.end1022:                                       ; preds = %lor.lhs.false1019
  %871 = load i8*, i8** %p2, align 8, !dbg !6345
  %incdec.ptr1023 = getelementptr inbounds i8, i8* %871, i32 1, !dbg !6345
  store i8* %incdec.ptr1023, i8** %p2, align 8, !dbg !6345
  %872 = load i8*, i8** %key1010, align 8, !dbg !6346
  %call1024 = call i32 @strcmp(i8* %872, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.502, i32 0, i32 0)) #10, !dbg !6348
  %tobool1025 = icmp ne i32 %call1024, 0, !dbg !6348
  br i1 %tobool1025, label %if.end1029, label %if.then1026, !dbg !6349

if.then1026:                                      ; preds = %if.end1022
  %873 = load i8*, i8** %p2, align 8, !dbg !6350
  %call1027 = call i64 @strtol(i8* %873, i8** null, i32 0) #12, !dbg !6351
  %conv1028 = trunc i64 %call1027 to i32, !dbg !6351
  store i32 %conv1028, i32* %progid, align 4, !dbg !6352
  br label %if.end1029, !dbg !6353

if.end1029:                                       ; preds = %if.then1026, %if.end1022
  %874 = bitcast i8** %to_dealloc to i8*, !dbg !6354
  call void @av_freep(i8* %874), !dbg !6355
  %875 = bitcast i8** %key1010 to i8*, !dbg !6356
  call void @av_freep(i8* %875), !dbg !6357
  br label %while.cond1006, !dbg !6358, !llvm.loop !6360

while.end1030:                                    ; preds = %if.then1021, %if.then1012, %while.cond1006
  %876 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6361
  %877 = load i32, i32* %progid, align 4, !dbg !6362
  %call1031 = call %struct.AVProgram* @av_new_program(%struct.AVFormatContext* %876, i32 %877), !dbg !6363
  store %struct.AVProgram* %call1031, %struct.AVProgram** %program1005, align 8, !dbg !6364
  %878 = load i32, i32* %i, align 4, !dbg !6365
  %idxprom1032 = sext i32 %878 to i64, !dbg !6366
  %879 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6366
  %program1033 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %879, i32 0, i32 117, !dbg !6367
  %880 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %program1033, align 8, !dbg !6367
  %arrayidx1034 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %880, i64 %idxprom1032, !dbg !6366
  %u1035 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx1034, i32 0, i32 1, !dbg !6368
  %str1036 = bitcast %union.anon.1* %u1035 to i8**, !dbg !6369
  %881 = load i8*, i8** %str1036, align 8, !dbg !6369
  store i8* %881, i8** %p999, align 8, !dbg !6370
  br label %while.cond1037, !dbg !6371

while.cond1037:                                   ; preds = %if.end1077, %while.end1030
  %882 = load i8*, i8** %p999, align 8, !dbg !6372
  %883 = load i8, i8* %882, align 1, !dbg !6373
  %tobool1038 = icmp ne i8 %883, 0, !dbg !6374
  br i1 %tobool1038, label %while.body1039, label %while.end1078, !dbg !6374

while.body1039:                                   ; preds = %while.cond1037
  call void @llvm.dbg.declare(metadata i8** %p21040, metadata !6375, metadata !1898), !dbg !6377
  %call1041 = call i8* @av_get_token(i8** %p999, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.500, i32 0, i32 0)), !dbg !6378
  store i8* %call1041, i8** %p21040, align 8, !dbg !6377
  call void @llvm.dbg.declare(metadata i8** %to_dealloc1042, metadata !6379, metadata !1898), !dbg !6380
  %884 = load i8*, i8** %p21040, align 8, !dbg !6381
  store i8* %884, i8** %to_dealloc1042, align 8, !dbg !6380
  call void @llvm.dbg.declare(metadata i8** %key1043, metadata !6382, metadata !1898), !dbg !6383
  %885 = load i8*, i8** %p21040, align 8, !dbg !6384
  %tobool1044 = icmp ne i8* %885, null, !dbg !6384
  br i1 %tobool1044, label %if.end1046, label %if.then1045, !dbg !6386

if.then1045:                                      ; preds = %while.body1039
  br label %while.end1078, !dbg !6387

if.end1046:                                       ; preds = %while.body1039
  %886 = load i8*, i8** %p999, align 8, !dbg !6388
  %887 = load i8, i8* %886, align 1, !dbg !6390
  %tobool1047 = icmp ne i8 %887, 0, !dbg !6390
  br i1 %tobool1047, label %if.then1048, label %if.end1050, !dbg !6391

if.then1048:                                      ; preds = %if.end1046
  %888 = load i8*, i8** %p999, align 8, !dbg !6392
  %incdec.ptr1049 = getelementptr inbounds i8, i8* %888, i32 1, !dbg !6392
  store i8* %incdec.ptr1049, i8** %p999, align 8, !dbg !6392
  br label %if.end1050, !dbg !6394

if.end1050:                                       ; preds = %if.then1048, %if.end1046
  %call1051 = call i8* @av_get_token(i8** %p21040, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.501, i32 0, i32 0)), !dbg !6395
  store i8* %call1051, i8** %key1043, align 8, !dbg !6396
  %889 = load i8*, i8** %key1043, align 8, !dbg !6397
  %tobool1052 = icmp ne i8* %889, null, !dbg !6397
  br i1 %tobool1052, label %if.end1054, label %if.then1053, !dbg !6399

if.then1053:                                      ; preds = %if.end1050
  %890 = load i8*, i8** %p21040, align 8, !dbg !6400
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.503, i32 0, i32 0), i8* %890), !dbg !6402
  call void @exit_program(i32 1) #11, !dbg !6403
  unreachable, !dbg !6403

if.end1054:                                       ; preds = %if.end1050
  %891 = load i8*, i8** %p21040, align 8, !dbg !6404
  %892 = load i8, i8* %891, align 1, !dbg !6406
  %tobool1055 = icmp ne i8 %892, 0, !dbg !6406
  br i1 %tobool1055, label %if.end1057, label %if.then1056, !dbg !6407

if.then1056:                                      ; preds = %if.end1054
  call void @exit_program(i32 1) #11, !dbg !6408
  unreachable, !dbg !6408

if.end1057:                                       ; preds = %if.end1054
  %893 = load i8*, i8** %p21040, align 8, !dbg !6409
  %incdec.ptr1058 = getelementptr inbounds i8, i8* %893, i32 1, !dbg !6409
  store i8* %incdec.ptr1058, i8** %p21040, align 8, !dbg !6409
  %894 = load i8*, i8** %key1043, align 8, !dbg !6410
  %call1059 = call i32 @strcmp(i8* %894, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.504, i32 0, i32 0)) #10, !dbg !6412
  %tobool1060 = icmp ne i32 %call1059, 0, !dbg !6412
  br i1 %tobool1060, label %if.else1064, label %if.then1061, !dbg !6413

if.then1061:                                      ; preds = %if.end1057
  %895 = load %struct.AVProgram*, %struct.AVProgram** %program1005, align 8, !dbg !6414
  %metadata1062 = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %895, i32 0, i32 5, !dbg !6416
  %896 = load i8*, i8** %p21040, align 8, !dbg !6417
  %call1063 = call i32 @av_dict_set(%struct.AVDictionary** %metadata1062, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.504, i32 0, i32 0), i8* %896, i32 0), !dbg !6418
  br label %if.end1077, !dbg !6419

if.else1064:                                      ; preds = %if.end1057
  %897 = load i8*, i8** %key1043, align 8, !dbg !6420
  %call1065 = call i32 @strcmp(i8* %897, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.502, i32 0, i32 0)) #10, !dbg !6423
  %tobool1066 = icmp ne i32 %call1065, 0, !dbg !6423
  br i1 %tobool1066, label %if.else1068, label %if.then1067, !dbg !6424

if.then1067:                                      ; preds = %if.else1064
  br label %if.end1076, !dbg !6425

if.else1068:                                      ; preds = %if.else1064
  %898 = load i8*, i8** %key1043, align 8, !dbg !6427
  %call1069 = call i32 @strcmp(i8* %898, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.505, i32 0, i32 0)) #10, !dbg !6430
  %tobool1070 = icmp ne i32 %call1069, 0, !dbg !6430
  br i1 %tobool1070, label %if.else1074, label %if.then1071, !dbg !6431

if.then1071:                                      ; preds = %if.else1068
  call void @llvm.dbg.declare(metadata i32* %st_num, metadata !6432, metadata !1898), !dbg !6434
  %899 = load i8*, i8** %p21040, align 8, !dbg !6435
  %call1072 = call i64 @strtol(i8* %899, i8** null, i32 0) #12, !dbg !6436
  %conv1073 = trunc i64 %call1072 to i32, !dbg !6436
  store i32 %conv1073, i32* %st_num, align 4, !dbg !6434
  %900 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6437
  %901 = load i32, i32* %progid, align 4, !dbg !6438
  %902 = load i32, i32* %st_num, align 4, !dbg !6439
  call void @av_program_add_stream_index(%struct.AVFormatContext* %900, i32 %901, i32 %902), !dbg !6440
  br label %if.end1075, !dbg !6441

if.else1074:                                      ; preds = %if.else1068
  %903 = load i8*, i8** %key1043, align 8, !dbg !6442
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.506, i32 0, i32 0), i8* %903), !dbg !6444
  call void @exit_program(i32 1) #11, !dbg !6445
  unreachable, !dbg !6445

if.end1075:                                       ; preds = %if.then1071
  br label %if.end1076

if.end1076:                                       ; preds = %if.end1075, %if.then1067
  br label %if.end1077

if.end1077:                                       ; preds = %if.end1076, %if.then1061
  %904 = bitcast i8** %to_dealloc1042 to i8*, !dbg !6446
  call void @av_freep(i8* %904), !dbg !6447
  %905 = bitcast i8** %key1043 to i8*, !dbg !6448
  call void @av_freep(i8* %905), !dbg !6449
  br label %while.cond1037, !dbg !6450, !llvm.loop !6451

while.end1078:                                    ; preds = %if.then1045, %while.cond1037
  br label %for.inc1079, !dbg !6452

for.inc1079:                                      ; preds = %while.end1078
  %906 = load i32, i32* %i, align 4, !dbg !6453
  %inc1080 = add nsw i32 %906, 1, !dbg !6453
  store i32 %inc1080, i32* %i, align 4, !dbg !6453
  br label %for.cond995, !dbg !6455, !llvm.loop !6456

for.end1081:                                      ; preds = %for.cond995
  store i32 0, i32* %i, align 4, !dbg !6458
  br label %for.cond1082, !dbg !6460

for.cond1082:                                     ; preds = %for.inc1213, %for.end1081
  %907 = load i32, i32* %i, align 4, !dbg !6461
  %908 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6464
  %nb_metadata = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %908, i32 0, i32 58, !dbg !6465
  %909 = load i32, i32* %nb_metadata, align 8, !dbg !6465
  %cmp1083 = icmp slt i32 %907, %909, !dbg !6466
  br i1 %cmp1083, label %for.body1085, label %for.end1215, !dbg !6467

for.body1085:                                     ; preds = %for.cond1082
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %m, metadata !6468, metadata !1898), !dbg !6470
  call void @llvm.dbg.declare(metadata i8* %type1086, metadata !6471, metadata !1898), !dbg !6472
  call void @llvm.dbg.declare(metadata i8** %val, metadata !6473, metadata !1898), !dbg !6474
  call void @llvm.dbg.declare(metadata i8** %stream_spec, metadata !6475, metadata !1898), !dbg !6476
  call void @llvm.dbg.declare(metadata i32* %index1087, metadata !6477, metadata !1898), !dbg !6478
  store i32 0, i32* %index1087, align 4, !dbg !6478
  call void @llvm.dbg.declare(metadata i32* %j1088, metadata !6479, metadata !1898), !dbg !6480
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6481, metadata !1898), !dbg !6482
  store i32 0, i32* %ret, align 4, !dbg !6482
  %910 = load i32, i32* %i, align 4, !dbg !6483
  %idxprom1089 = sext i32 %910 to i64, !dbg !6484
  %911 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6484
  %metadata1090 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %911, i32 0, i32 57, !dbg !6485
  %912 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %metadata1090, align 8, !dbg !6485
  %arrayidx1091 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %912, i64 %idxprom1089, !dbg !6484
  %u1092 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx1091, i32 0, i32 1, !dbg !6486
  %str1093 = bitcast %union.anon.1* %u1092 to i8**, !dbg !6487
  %913 = load i8*, i8** %str1093, align 8, !dbg !6487
  %call1094 = call i8* @strchr(i8* %913, i32 61) #10, !dbg !6488
  store i8* %call1094, i8** %val, align 8, !dbg !6489
  %914 = load i8*, i8** %val, align 8, !dbg !6490
  %tobool1095 = icmp ne i8* %914, null, !dbg !6490
  br i1 %tobool1095, label %if.end1102, label %if.then1096, !dbg !6492

if.then1096:                                      ; preds = %for.body1085
  %915 = load i32, i32* %i, align 4, !dbg !6493
  %idxprom1097 = sext i32 %915 to i64, !dbg !6495
  %916 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6495
  %metadata1098 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %916, i32 0, i32 57, !dbg !6496
  %917 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %metadata1098, align 8, !dbg !6496
  %arrayidx1099 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %917, i64 %idxprom1097, !dbg !6495
  %u1100 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx1099, i32 0, i32 1, !dbg !6497
  %str1101 = bitcast %union.anon.1* %u1100 to i8**, !dbg !6498
  %918 = load i8*, i8** %str1101, align 8, !dbg !6498
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.507, i32 0, i32 0), i8* %918), !dbg !6499
  call void @exit_program(i32 1) #11, !dbg !6500
  unreachable, !dbg !6500

if.end1102:                                       ; preds = %for.body1085
  %919 = load i8*, i8** %val, align 8, !dbg !6501
  %incdec.ptr1103 = getelementptr inbounds i8, i8* %919, i32 1, !dbg !6501
  store i8* %incdec.ptr1103, i8** %val, align 8, !dbg !6501
  store i8 0, i8* %919, align 1, !dbg !6502
  %920 = load i32, i32* %i, align 4, !dbg !6503
  %idxprom1104 = sext i32 %920 to i64, !dbg !6504
  %921 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6504
  %metadata1105 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %921, i32 0, i32 57, !dbg !6505
  %922 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %metadata1105, align 8, !dbg !6505
  %arrayidx1106 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %922, i64 %idxprom1104, !dbg !6504
  %specifier1107 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx1106, i32 0, i32 0, !dbg !6506
  %923 = load i8*, i8** %specifier1107, align 8, !dbg !6506
  call void @parse_meta_type(i8* %923, i8* %type1086, i32* %index1087, i8** %stream_spec), !dbg !6507
  %924 = load i8, i8* %type1086, align 1, !dbg !6508
  %conv1108 = sext i8 %924 to i32, !dbg !6508
  %cmp1109 = icmp eq i32 %conv1108, 115, !dbg !6510
  br i1 %cmp1109, label %if.then1111, label %if.else1167, !dbg !6511

if.then1111:                                      ; preds = %if.end1102
  store i32 0, i32* %j1088, align 4, !dbg !6512
  br label %for.cond1112, !dbg !6515

for.cond1112:                                     ; preds = %for.inc1164, %if.then1111
  %925 = load i32, i32* %j1088, align 4, !dbg !6516
  %926 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6519
  %nb_streams1113 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %926, i32 0, i32 6, !dbg !6520
  %927 = load i32, i32* %nb_streams1113, align 4, !dbg !6520
  %cmp1114 = icmp ult i32 %925, %927, !dbg !6521
  br i1 %cmp1114, label %for.body1116, label %for.end1166, !dbg !6522

for.body1116:                                     ; preds = %for.cond1112
  %928 = load i32, i32* @nb_output_streams, align 4, !dbg !6523
  %929 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6525
  %nb_streams1117 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %929, i32 0, i32 6, !dbg !6526
  %930 = load i32, i32* %nb_streams1117, align 4, !dbg !6526
  %sub1118 = sub i32 %928, %930, !dbg !6527
  %931 = load i32, i32* %j1088, align 4, !dbg !6528
  %add1119 = add i32 %sub1118, %931, !dbg !6529
  %idxprom1120 = zext i32 %add1119 to i64, !dbg !6530
  %932 = load %struct.OutputStream**, %struct.OutputStream*** @output_streams, align 8, !dbg !6530
  %arrayidx1121 = getelementptr inbounds %struct.OutputStream*, %struct.OutputStream** %932, i64 %idxprom1120, !dbg !6530
  %933 = load %struct.OutputStream*, %struct.OutputStream** %arrayidx1121, align 8, !dbg !6530
  store %struct.OutputStream* %933, %struct.OutputStream** %ost, align 8, !dbg !6531
  %934 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6532
  %935 = load i32, i32* %j1088, align 4, !dbg !6534
  %idxprom1122 = sext i32 %935 to i64, !dbg !6535
  %936 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6535
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %936, i32 0, i32 7, !dbg !6536
  %937 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !6536
  %arrayidx1123 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %937, i64 %idxprom1122, !dbg !6535
  %938 = load %struct.AVStream*, %struct.AVStream** %arrayidx1123, align 8, !dbg !6535
  %939 = load i8*, i8** %stream_spec, align 8, !dbg !6537
  %call1124 = call i32 @check_stream_specifier(%struct.AVFormatContext* %934, %struct.AVStream* %938, i8* %939), !dbg !6538
  store i32 %call1124, i32* %ret, align 4, !dbg !6539
  %cmp1125 = icmp sgt i32 %call1124, 0, !dbg !6540
  br i1 %cmp1125, label %if.then1127, label %if.else1158, !dbg !6541

if.then1127:                                      ; preds = %for.body1116
  %940 = load i32, i32* %i, align 4, !dbg !6542
  %idxprom1128 = sext i32 %940 to i64, !dbg !6545
  %941 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6545
  %metadata1129 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %941, i32 0, i32 57, !dbg !6546
  %942 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %metadata1129, align 8, !dbg !6546
  %arrayidx1130 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %942, i64 %idxprom1128, !dbg !6545
  %u1131 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx1130, i32 0, i32 1, !dbg !6547
  %str1132 = bitcast %union.anon.1* %u1131 to i8**, !dbg !6548
  %943 = load i8*, i8** %str1132, align 8, !dbg !6548
  %call1133 = call i32 @strcmp(i8* %943, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.508, i32 0, i32 0)) #10, !dbg !6549
  %tobool1134 = icmp ne i32 %call1133, 0, !dbg !6549
  br i1 %tobool1134, label %if.else1140, label %if.then1135, !dbg !6550

if.then1135:                                      ; preds = %if.then1127
  call void @llvm.dbg.declare(metadata i8** %tail, metadata !6551, metadata !1898), !dbg !6553
  call void @llvm.dbg.declare(metadata double* %theta, metadata !6554, metadata !1898), !dbg !6555
  %944 = load i8*, i8** %val, align 8, !dbg !6556
  %call1136 = call double @av_strtod(i8* %944, i8** %tail), !dbg !6557
  store double %call1136, double* %theta, align 8, !dbg !6555
  %945 = load i8*, i8** %tail, align 8, !dbg !6558
  %946 = load i8, i8* %945, align 1, !dbg !6560
  %tobool1137 = icmp ne i8 %946, 0, !dbg !6560
  br i1 %tobool1137, label %if.end1139, label %if.then1138, !dbg !6561

if.then1138:                                      ; preds = %if.then1135
  %947 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !6562
  %rotate_overridden = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %947, i32 0, i32 27, !dbg !6564
  store i32 1, i32* %rotate_overridden, align 4, !dbg !6565
  %948 = load double, double* %theta, align 8, !dbg !6566
  %949 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !6567
  %rotate_override_value = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %949, i32 0, i32 28, !dbg !6568
  store double %948, double* %rotate_override_value, align 8, !dbg !6569
  br label %if.end1139, !dbg !6570

if.end1139:                                       ; preds = %if.then1138, %if.then1135
  br label %if.end1157, !dbg !6571

if.else1140:                                      ; preds = %if.then1127
  %950 = load i32, i32* %j1088, align 4, !dbg !6572
  %idxprom1141 = sext i32 %950 to i64, !dbg !6574
  %951 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6574
  %streams1142 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %951, i32 0, i32 7, !dbg !6575
  %952 = load %struct.AVStream**, %struct.AVStream*** %streams1142, align 8, !dbg !6575
  %arrayidx1143 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %952, i64 %idxprom1141, !dbg !6574
  %953 = load %struct.AVStream*, %struct.AVStream** %arrayidx1143, align 8, !dbg !6574
  %metadata1144 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %953, i32 0, i32 11, !dbg !6576
  %954 = load i32, i32* %i, align 4, !dbg !6577
  %idxprom1145 = sext i32 %954 to i64, !dbg !6578
  %955 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6578
  %metadata1146 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %955, i32 0, i32 57, !dbg !6579
  %956 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %metadata1146, align 8, !dbg !6579
  %arrayidx1147 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %956, i64 %idxprom1145, !dbg !6578
  %u1148 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx1147, i32 0, i32 1, !dbg !6580
  %str1149 = bitcast %union.anon.1* %u1148 to i8**, !dbg !6581
  %957 = load i8*, i8** %str1149, align 8, !dbg !6581
  %958 = load i8*, i8** %val, align 8, !dbg !6582
  %959 = load i8, i8* %958, align 1, !dbg !6583
  %conv1150 = sext i8 %959 to i32, !dbg !6583
  %tobool1151 = icmp ne i32 %conv1150, 0, !dbg !6583
  br i1 %tobool1151, label %cond.true1152, label %cond.false1153, !dbg !6583

cond.true1152:                                    ; preds = %if.else1140
  %960 = load i8*, i8** %val, align 8, !dbg !6584
  br label %cond.end1154, !dbg !6586

cond.false1153:                                   ; preds = %if.else1140
  br label %cond.end1154, !dbg !6587

cond.end1154:                                     ; preds = %cond.false1153, %cond.true1152
  %cond1155 = phi i8* [ %960, %cond.true1152 ], [ null, %cond.false1153 ], !dbg !6589
  %call1156 = call i32 @av_dict_set(%struct.AVDictionary** %metadata1144, i8* %957, i8* %cond1155, i32 0), !dbg !6591
  br label %if.end1157

if.end1157:                                       ; preds = %cond.end1154, %if.end1139
  br label %if.end1163, !dbg !6592

if.else1158:                                      ; preds = %for.body1116
  %961 = load i32, i32* %ret, align 4, !dbg !6593
  %cmp1159 = icmp slt i32 %961, 0, !dbg !6596
  br i1 %cmp1159, label %if.then1161, label %if.end1162, !dbg !6593

if.then1161:                                      ; preds = %if.else1158
  call void @exit_program(i32 1) #11, !dbg !6597
  unreachable, !dbg !6597

if.end1162:                                       ; preds = %if.else1158
  br label %if.end1163

if.end1163:                                       ; preds = %if.end1162, %if.end1157
  br label %for.inc1164, !dbg !6598

for.inc1164:                                      ; preds = %if.end1163
  %962 = load i32, i32* %j1088, align 4, !dbg !6599
  %inc1165 = add nsw i32 %962, 1, !dbg !6599
  store i32 %inc1165, i32* %j1088, align 4, !dbg !6599
  br label %for.cond1112, !dbg !6601, !llvm.loop !6602

for.end1166:                                      ; preds = %for.cond1112
  br label %if.end1212, !dbg !6604

if.else1167:                                      ; preds = %if.end1102
  %963 = load i8, i8* %type1086, align 1, !dbg !6605
  %conv1168 = sext i8 %963 to i32, !dbg !6605
  switch i32 %conv1168, label %sw.default1194 [
    i32 103, label %sw.bb1169
    i32 99, label %sw.bb1171
    i32 112, label %sw.bb1183
  ], !dbg !6607

sw.bb1169:                                        ; preds = %if.else1167
  %964 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6608
  %metadata1170 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %964, i32 0, i32 29, !dbg !6610
  store %struct.AVDictionary** %metadata1170, %struct.AVDictionary*** %m, align 8, !dbg !6611
  br label %sw.epilog1199, !dbg !6612

sw.bb1171:                                        ; preds = %if.else1167
  %965 = load i32, i32* %index1087, align 4, !dbg !6613
  %cmp1172 = icmp slt i32 %965, 0, !dbg !6615
  br i1 %cmp1172, label %if.then1178, label %lor.lhs.false1174, !dbg !6616

lor.lhs.false1174:                                ; preds = %sw.bb1171
  %966 = load i32, i32* %index1087, align 4, !dbg !6617
  %967 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6619
  %nb_chapters1175 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %967, i32 0, i32 27, !dbg !6620
  %968 = load i32, i32* %nb_chapters1175, align 4, !dbg !6620
  %cmp1176 = icmp uge i32 %966, %968, !dbg !6621
  br i1 %cmp1176, label %if.then1178, label %if.end1179, !dbg !6622

if.then1178:                                      ; preds = %lor.lhs.false1174, %sw.bb1171
  %969 = load i32, i32* %index1087, align 4, !dbg !6623
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.509, i32 0, i32 0), i32 %969), !dbg !6625
  call void @exit_program(i32 1) #11, !dbg !6626
  unreachable, !dbg !6626

if.end1179:                                       ; preds = %lor.lhs.false1174
  %970 = load i32, i32* %index1087, align 4, !dbg !6627
  %idxprom1180 = sext i32 %970 to i64, !dbg !6628
  %971 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6628
  %chapters = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %971, i32 0, i32 28, !dbg !6629
  %972 = load %struct.AVChapter**, %struct.AVChapter*** %chapters, align 8, !dbg !6629
  %arrayidx1181 = getelementptr inbounds %struct.AVChapter*, %struct.AVChapter** %972, i64 %idxprom1180, !dbg !6628
  %973 = load %struct.AVChapter*, %struct.AVChapter** %arrayidx1181, align 8, !dbg !6628
  %metadata1182 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %973, i32 0, i32 4, !dbg !6630
  store %struct.AVDictionary** %metadata1182, %struct.AVDictionary*** %m, align 8, !dbg !6631
  br label %sw.epilog1199, !dbg !6632

sw.bb1183:                                        ; preds = %if.else1167
  %974 = load i32, i32* %index1087, align 4, !dbg !6633
  %cmp1184 = icmp slt i32 %974, 0, !dbg !6635
  br i1 %cmp1184, label %if.then1189, label %lor.lhs.false1186, !dbg !6636

lor.lhs.false1186:                                ; preds = %sw.bb1183
  %975 = load i32, i32* %index1087, align 4, !dbg !6637
  %976 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6639
  %nb_programs = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %976, i32 0, i32 20, !dbg !6640
  %977 = load i32, i32* %nb_programs, align 4, !dbg !6640
  %cmp1187 = icmp uge i32 %975, %977, !dbg !6641
  br i1 %cmp1187, label %if.then1189, label %if.end1190, !dbg !6642

if.then1189:                                      ; preds = %lor.lhs.false1186, %sw.bb1183
  %978 = load i32, i32* %index1087, align 4, !dbg !6643
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.510, i32 0, i32 0), i32 %978), !dbg !6645
  call void @exit_program(i32 1) #11, !dbg !6646
  unreachable, !dbg !6646

if.end1190:                                       ; preds = %lor.lhs.false1186
  %979 = load i32, i32* %index1087, align 4, !dbg !6647
  %idxprom1191 = sext i32 %979 to i64, !dbg !6648
  %980 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc, align 8, !dbg !6648
  %programs = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %980, i32 0, i32 21, !dbg !6649
  %981 = load %struct.AVProgram**, %struct.AVProgram*** %programs, align 8, !dbg !6649
  %arrayidx1192 = getelementptr inbounds %struct.AVProgram*, %struct.AVProgram** %981, i64 %idxprom1191, !dbg !6648
  %982 = load %struct.AVProgram*, %struct.AVProgram** %arrayidx1192, align 8, !dbg !6648
  %metadata1193 = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %982, i32 0, i32 5, !dbg !6650
  store %struct.AVDictionary** %metadata1193, %struct.AVDictionary*** %m, align 8, !dbg !6651
  br label %sw.epilog1199, !dbg !6652

sw.default1194:                                   ; preds = %if.else1167
  %983 = load i32, i32* %i, align 4, !dbg !6653
  %idxprom1195 = sext i32 %983 to i64, !dbg !6654
  %984 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6654
  %metadata1196 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %984, i32 0, i32 57, !dbg !6655
  %985 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %metadata1196, align 8, !dbg !6655
  %arrayidx1197 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %985, i64 %idxprom1195, !dbg !6654
  %specifier1198 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx1197, i32 0, i32 0, !dbg !6656
  %986 = load i8*, i8** %specifier1198, align 8, !dbg !6656
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.511, i32 0, i32 0), i8* %986), !dbg !6657
  call void @exit_program(i32 1) #11, !dbg !6658
  unreachable, !dbg !6658

sw.epilog1199:                                    ; preds = %if.end1190, %if.end1179, %sw.bb1169
  %987 = load %struct.AVDictionary**, %struct.AVDictionary*** %m, align 8, !dbg !6659
  %988 = load i32, i32* %i, align 4, !dbg !6660
  %idxprom1200 = sext i32 %988 to i64, !dbg !6661
  %989 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !6661
  %metadata1201 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %989, i32 0, i32 57, !dbg !6662
  %990 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %metadata1201, align 8, !dbg !6662
  %arrayidx1202 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %990, i64 %idxprom1200, !dbg !6661
  %u1203 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx1202, i32 0, i32 1, !dbg !6663
  %str1204 = bitcast %union.anon.1* %u1203 to i8**, !dbg !6664
  %991 = load i8*, i8** %str1204, align 8, !dbg !6664
  %992 = load i8*, i8** %val, align 8, !dbg !6665
  %993 = load i8, i8* %992, align 1, !dbg !6666
  %conv1205 = sext i8 %993 to i32, !dbg !6666
  %tobool1206 = icmp ne i32 %conv1205, 0, !dbg !6666
  br i1 %tobool1206, label %cond.true1207, label %cond.false1208, !dbg !6666

cond.true1207:                                    ; preds = %sw.epilog1199
  %994 = load i8*, i8** %val, align 8, !dbg !6667
  br label %cond.end1209, !dbg !6669

cond.false1208:                                   ; preds = %sw.epilog1199
  br label %cond.end1209, !dbg !6670

cond.end1209:                                     ; preds = %cond.false1208, %cond.true1207
  %cond1210 = phi i8* [ %994, %cond.true1207 ], [ null, %cond.false1208 ], !dbg !6672
  %call1211 = call i32 @av_dict_set(%struct.AVDictionary** %987, i8* %991, i8* %cond1210, i32 0), !dbg !6674
  br label %if.end1212

if.end1212:                                       ; preds = %cond.end1209, %for.end1166
  br label %for.inc1213, !dbg !6675

for.inc1213:                                      ; preds = %if.end1212
  %995 = load i32, i32* %i, align 4, !dbg !6676
  %inc1214 = add nsw i32 %995, 1, !dbg !6676
  store i32 %inc1214, i32* %i, align 4, !dbg !6676
  br label %for.cond1082, !dbg !6678, !llvm.loop !6679

for.end1215:                                      ; preds = %for.cond1082
  ret i32 0, !dbg !6681
}

declare void @check_filter_outputs() #3

declare void @uninit_parse_context(%struct.OptionParseContext*) #3

declare i32 @av_strerror(i32, i8*, i64) #3

declare i32 @show_license(i8*, i8*, i8*) #3

declare i32 @show_help(i8*, i8*, i8*) #3

declare i32 @show_version(i8*, i8*, i8*) #3

declare i32 @show_buildconf(i8*, i8*, i8*) #3

declare i32 @show_formats(i8*, i8*, i8*) #3

declare i32 @show_muxers(i8*, i8*, i8*) #3

declare i32 @show_demuxers(i8*, i8*, i8*) #3

declare i32 @show_devices(i8*, i8*, i8*) #3

declare i32 @show_codecs(i8*, i8*, i8*) #3

declare i32 @show_decoders(i8*, i8*, i8*) #3

declare i32 @show_encoders(i8*, i8*, i8*) #3

declare i32 @show_bsfs(i8*, i8*, i8*) #3

declare i32 @show_protocols(i8*, i8*, i8*) #3

declare i32 @show_filters(i8*, i8*, i8*) #3

declare i32 @show_pix_fmts(i8*, i8*, i8*) #3

declare i32 @show_layouts(i8*, i8*, i8*) #3

declare i32 @show_sample_fmts(i8*, i8*, i8*) #3

declare i32 @show_colors(i8*, i8*, i8*) #3

declare i32 @opt_loglevel(i8*, i8*, i8*) #3

declare i32 @opt_report(i8*) #3

declare i32 @opt_max_alloc(i8*, i8*, i8*) #3

declare i32 @opt_cpuflags(i8*, i8*, i8*) #3

declare i32 @show_sources(i8*, i8*, i8*) #3

declare i32 @show_sinks(i8*, i8*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @opt_map(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !6682 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  %m = alloca %struct.StreamMap*, align 8
  %i = alloca i32, align 4
  %negative = alloca i32, align 4
  %file_idx = alloca i32, align 4
  %disabled = alloca i32, align 4
  %sync_file_idx = alloca i32, align 4
  %sync_stream_idx = alloca i32, align 4
  %p = alloca i8*, align 8
  %sync = alloca i8*, align 8
  %map = alloca i8*, align 8
  %allow_unused = alloca i8*, align 8
  %c = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !6683, metadata !1898), !dbg !6684
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !6685, metadata !1898), !dbg !6686
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !6687, metadata !1898), !dbg !6688
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !6689, metadata !1898), !dbg !6690
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !6691
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !6691
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !6690
  call void @llvm.dbg.declare(metadata %struct.StreamMap** %m, metadata !6692, metadata !1898), !dbg !6693
  store %struct.StreamMap* null, %struct.StreamMap** %m, align 8, !dbg !6693
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6694, metadata !1898), !dbg !6695
  call void @llvm.dbg.declare(metadata i32* %negative, metadata !6696, metadata !1898), !dbg !6697
  store i32 0, i32* %negative, align 4, !dbg !6697
  call void @llvm.dbg.declare(metadata i32* %file_idx, metadata !6698, metadata !1898), !dbg !6699
  call void @llvm.dbg.declare(metadata i32* %disabled, metadata !6700, metadata !1898), !dbg !6701
  store i32 0, i32* %disabled, align 4, !dbg !6701
  call void @llvm.dbg.declare(metadata i32* %sync_file_idx, metadata !6702, metadata !1898), !dbg !6703
  store i32 -1, i32* %sync_file_idx, align 4, !dbg !6703
  call void @llvm.dbg.declare(metadata i32* %sync_stream_idx, metadata !6704, metadata !1898), !dbg !6705
  store i32 0, i32* %sync_stream_idx, align 4, !dbg !6705
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6706, metadata !1898), !dbg !6707
  call void @llvm.dbg.declare(metadata i8** %sync, metadata !6708, metadata !1898), !dbg !6709
  call void @llvm.dbg.declare(metadata i8** %map, metadata !6710, metadata !1898), !dbg !6711
  call void @llvm.dbg.declare(metadata i8** %allow_unused, metadata !6712, metadata !1898), !dbg !6713
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !6714
  %3 = load i8, i8* %2, align 1, !dbg !6716
  %conv = sext i8 %3 to i32, !dbg !6716
  %cmp = icmp eq i32 %conv, 45, !dbg !6717
  br i1 %cmp, label %if.then, label %if.end, !dbg !6718

if.then:                                          ; preds = %entry
  store i32 1, i32* %negative, align 4, !dbg !6719
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !6721
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !6721
  store i8* %incdec.ptr, i8** %arg.addr, align 8, !dbg !6721
  br label %if.end, !dbg !6722

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !6723
  %call = call noalias i8* @av_strdup(i8* %5), !dbg !6724
  store i8* %call, i8** %map, align 8, !dbg !6725
  %6 = load i8*, i8** %map, align 8, !dbg !6726
  %tobool = icmp ne i8* %6, null, !dbg !6726
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !6728

if.then2:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !6729
  br label %return, !dbg !6729

if.end3:                                          ; preds = %if.end
  %7 = load i8*, i8** %map, align 8, !dbg !6730
  %call4 = call i8* @strchr(i8* %7, i32 44) #10, !dbg !6732
  store i8* %call4, i8** %sync, align 8, !dbg !6733
  %tobool5 = icmp ne i8* %call4, null, !dbg !6733
  br i1 %tobool5, label %if.then6, label %if.end48, !dbg !6734

if.then6:                                         ; preds = %if.end3
  %8 = load i8*, i8** %sync, align 8, !dbg !6735
  store i8 0, i8* %8, align 1, !dbg !6737
  %9 = load i8*, i8** %sync, align 8, !dbg !6738
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 1, !dbg !6739
  %call7 = call i64 @strtol(i8* %add.ptr, i8** %sync, i32 0) #12, !dbg !6740
  %conv8 = trunc i64 %call7 to i32, !dbg !6740
  store i32 %conv8, i32* %sync_file_idx, align 4, !dbg !6741
  %10 = load i32, i32* %sync_file_idx, align 4, !dbg !6742
  %11 = load i32, i32* @nb_input_files, align 4, !dbg !6744
  %cmp9 = icmp sge i32 %10, %11, !dbg !6745
  br i1 %cmp9, label %if.then13, label %lor.lhs.false, !dbg !6746

lor.lhs.false:                                    ; preds = %if.then6
  %12 = load i32, i32* %sync_file_idx, align 4, !dbg !6747
  %cmp11 = icmp slt i32 %12, 0, !dbg !6749
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !6750

if.then13:                                        ; preds = %lor.lhs.false, %if.then6
  %13 = load i32, i32* %sync_file_idx, align 4, !dbg !6751
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.579, i32 0, i32 0), i32 %13), !dbg !6753
  call void @exit_program(i32 1) #11, !dbg !6754
  unreachable, !dbg !6754

if.end14:                                         ; preds = %lor.lhs.false
  %14 = load i8*, i8** %sync, align 8, !dbg !6755
  %15 = load i8, i8* %14, align 1, !dbg !6757
  %tobool15 = icmp ne i8 %15, 0, !dbg !6757
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !6758

if.then16:                                        ; preds = %if.end14
  %16 = load i8*, i8** %sync, align 8, !dbg !6759
  %incdec.ptr17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !6759
  store i8* %incdec.ptr17, i8** %sync, align 8, !dbg !6759
  br label %if.end18, !dbg !6760

if.end18:                                         ; preds = %if.then16, %if.end14
  store i32 0, i32* %i, align 4, !dbg !6761
  br label %for.cond, !dbg !6763

for.cond:                                         ; preds = %for.inc, %if.end18
  %17 = load i32, i32* %i, align 4, !dbg !6764
  %18 = load i32, i32* %sync_file_idx, align 4, !dbg !6767
  %idxprom = sext i32 %18 to i64, !dbg !6768
  %19 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6768
  %arrayidx = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %19, i64 %idxprom, !dbg !6768
  %20 = load %struct.InputFile*, %struct.InputFile** %arrayidx, align 8, !dbg !6768
  %nb_streams = getelementptr inbounds %struct.InputFile, %struct.InputFile* %20, i32 0, i32 13, !dbg !6769
  %21 = load i32, i32* %nb_streams, align 8, !dbg !6769
  %cmp19 = icmp slt i32 %17, %21, !dbg !6770
  br i1 %cmp19, label %for.body, label %for.end, !dbg !6771

for.body:                                         ; preds = %for.cond
  %22 = load i32, i32* %sync_file_idx, align 4, !dbg !6772
  %idxprom21 = sext i32 %22 to i64, !dbg !6774
  %23 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6774
  %arrayidx22 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %23, i64 %idxprom21, !dbg !6774
  %24 = load %struct.InputFile*, %struct.InputFile** %arrayidx22, align 8, !dbg !6774
  %ctx = getelementptr inbounds %struct.InputFile, %struct.InputFile* %24, i32 0, i32 0, !dbg !6775
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !6775
  %26 = load i32, i32* %i, align 4, !dbg !6776
  %idxprom23 = sext i32 %26 to i64, !dbg !6777
  %27 = load i32, i32* %sync_file_idx, align 4, !dbg !6778
  %idxprom24 = sext i32 %27 to i64, !dbg !6777
  %28 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6777
  %arrayidx25 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %28, i64 %idxprom24, !dbg !6777
  %29 = load %struct.InputFile*, %struct.InputFile** %arrayidx25, align 8, !dbg !6777
  %ctx26 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %29, i32 0, i32 0, !dbg !6779
  %30 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx26, align 8, !dbg !6779
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %30, i32 0, i32 7, !dbg !6780
  %31 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !6780
  %arrayidx27 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %31, i64 %idxprom23, !dbg !6777
  %32 = load %struct.AVStream*, %struct.AVStream** %arrayidx27, align 8, !dbg !6777
  %33 = load i8*, i8** %sync, align 8, !dbg !6781
  %call28 = call i32 @check_stream_specifier(%struct.AVFormatContext* %25, %struct.AVStream* %32, i8* %33), !dbg !6782
  %cmp29 = icmp eq i32 %call28, 1, !dbg !6783
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !6784

if.then31:                                        ; preds = %for.body
  %34 = load i32, i32* %i, align 4, !dbg !6785
  store i32 %34, i32* %sync_stream_idx, align 4, !dbg !6787
  br label %for.end, !dbg !6788

if.end32:                                         ; preds = %for.body
  br label %for.inc, !dbg !6789

for.inc:                                          ; preds = %if.end32
  %35 = load i32, i32* %i, align 4, !dbg !6791
  %inc = add nsw i32 %35, 1, !dbg !6791
  store i32 %inc, i32* %i, align 4, !dbg !6791
  br label %for.cond, !dbg !6793, !llvm.loop !6794

for.end:                                          ; preds = %if.then31, %for.cond
  %36 = load i32, i32* %i, align 4, !dbg !6796
  %37 = load i32, i32* %sync_file_idx, align 4, !dbg !6798
  %idxprom33 = sext i32 %37 to i64, !dbg !6799
  %38 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6799
  %arrayidx34 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %38, i64 %idxprom33, !dbg !6799
  %39 = load %struct.InputFile*, %struct.InputFile** %arrayidx34, align 8, !dbg !6799
  %nb_streams35 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %39, i32 0, i32 13, !dbg !6800
  %40 = load i32, i32* %nb_streams35, align 8, !dbg !6800
  %cmp36 = icmp eq i32 %36, %40, !dbg !6801
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !6802

if.then38:                                        ; preds = %for.end
  %41 = load i8*, i8** %arg.addr, align 8, !dbg !6803
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.580, i32 0, i32 0), i8* %41), !dbg !6805
  call void @exit_program(i32 1) #11, !dbg !6806
  unreachable, !dbg !6806

if.end39:                                         ; preds = %for.end
  %42 = load i32, i32* %sync_file_idx, align 4, !dbg !6807
  %idxprom40 = sext i32 %42 to i64, !dbg !6809
  %43 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6809
  %arrayidx41 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %43, i64 %idxprom40, !dbg !6809
  %44 = load %struct.InputFile*, %struct.InputFile** %arrayidx41, align 8, !dbg !6809
  %ist_index = getelementptr inbounds %struct.InputFile, %struct.InputFile* %44, i32 0, i32 3, !dbg !6810
  %45 = load i32, i32* %ist_index, align 8, !dbg !6810
  %46 = load i32, i32* %sync_stream_idx, align 4, !dbg !6811
  %add = add nsw i32 %45, %46, !dbg !6812
  %idxprom42 = sext i32 %add to i64, !dbg !6813
  %47 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !6813
  %arrayidx43 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %47, i64 %idxprom42, !dbg !6813
  %48 = load %struct.InputStream*, %struct.InputStream** %arrayidx43, align 8, !dbg !6813
  %user_set_discard = getelementptr inbounds %struct.InputStream, %struct.InputStream* %48, i32 0, i32 3, !dbg !6814
  %49 = load i32, i32* %user_set_discard, align 4, !dbg !6814
  %cmp44 = icmp eq i32 %49, 48, !dbg !6815
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !6816

if.then46:                                        ; preds = %if.end39
  %50 = load i8*, i8** %arg.addr, align 8, !dbg !6817
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.581, i32 0, i32 0), i8* %50), !dbg !6819
  call void @exit_program(i32 1) #11, !dbg !6820
  unreachable, !dbg !6820

if.end47:                                         ; preds = %if.end39
  br label %if.end48, !dbg !6821

if.end48:                                         ; preds = %if.end47, %if.end3
  %51 = load i8*, i8** %map, align 8, !dbg !6822
  %arrayidx49 = getelementptr inbounds i8, i8* %51, i64 0, !dbg !6822
  %52 = load i8, i8* %arrayidx49, align 1, !dbg !6822
  %conv50 = sext i8 %52 to i32, !dbg !6822
  %cmp51 = icmp eq i32 %conv50, 91, !dbg !6824
  br i1 %cmp51, label %if.then53, label %if.else, !dbg !6825

if.then53:                                        ; preds = %if.end48
  call void @llvm.dbg.declare(metadata i8** %c, metadata !6826, metadata !1898), !dbg !6828
  %53 = load i8*, i8** %map, align 8, !dbg !6829
  %add.ptr54 = getelementptr inbounds i8, i8* %53, i64 1, !dbg !6830
  store i8* %add.ptr54, i8** %c, align 8, !dbg !6828
  %54 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !6831
  %stream_maps = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %54, i32 0, i32 34, !dbg !6832
  %55 = load %struct.StreamMap*, %struct.StreamMap** %stream_maps, align 8, !dbg !6832
  %56 = bitcast %struct.StreamMap* %55 to i8*, !dbg !6831
  %57 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !6833
  %nb_stream_maps = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %57, i32 0, i32 35, !dbg !6834
  %58 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !6835
  %nb_stream_maps55 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %58, i32 0, i32 35, !dbg !6836
  %59 = load i32, i32* %nb_stream_maps55, align 8, !dbg !6836
  %add56 = add nsw i32 %59, 1, !dbg !6837
  %call57 = call i8* @grow_array(i8* %56, i32 32, i32* %nb_stream_maps, i32 %add56), !dbg !6838
  %60 = bitcast i8* %call57 to %struct.StreamMap*, !dbg !6838
  %61 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !6839
  %stream_maps58 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %61, i32 0, i32 34, !dbg !6840
  store %struct.StreamMap* %60, %struct.StreamMap** %stream_maps58, align 8, !dbg !6841
  %62 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !6842
  %nb_stream_maps59 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %62, i32 0, i32 35, !dbg !6843
  %63 = load i32, i32* %nb_stream_maps59, align 8, !dbg !6843
  %sub = sub nsw i32 %63, 1, !dbg !6844
  %idxprom60 = sext i32 %sub to i64, !dbg !6845
  %64 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !6845
  %stream_maps61 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %64, i32 0, i32 34, !dbg !6846
  %65 = load %struct.StreamMap*, %struct.StreamMap** %stream_maps61, align 8, !dbg !6846
  %arrayidx62 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %65, i64 %idxprom60, !dbg !6845
  store %struct.StreamMap* %arrayidx62, %struct.StreamMap** %m, align 8, !dbg !6847
  %call63 = call i8* @av_get_token(i8** %c, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.582, i32 0, i32 0)), !dbg !6848
  %66 = load %struct.StreamMap*, %struct.StreamMap** %m, align 8, !dbg !6849
  %linklabel = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %66, i32 0, i32 5, !dbg !6850
  store i8* %call63, i8** %linklabel, align 8, !dbg !6851
  %67 = load %struct.StreamMap*, %struct.StreamMap** %m, align 8, !dbg !6852
  %linklabel64 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %67, i32 0, i32 5, !dbg !6854
  %68 = load i8*, i8** %linklabel64, align 8, !dbg !6854
  %tobool65 = icmp ne i8* %68, null, !dbg !6852
  br i1 %tobool65, label %if.end67, label %if.then66, !dbg !6855

if.then66:                                        ; preds = %if.then53
  %69 = load i8*, i8** %map, align 8, !dbg !6856
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.583, i32 0, i32 0), i8* %69), !dbg !6858
  call void @exit_program(i32 1) #11, !dbg !6859
  unreachable, !dbg !6859

if.end67:                                         ; preds = %if.then53
  br label %if.end182, !dbg !6860

if.else:                                          ; preds = %if.end48
  %70 = load i8*, i8** %map, align 8, !dbg !6861
  %call68 = call i8* @strchr(i8* %70, i32 63) #10, !dbg !6864
  store i8* %call68, i8** %allow_unused, align 8, !dbg !6865
  %tobool69 = icmp ne i8* %call68, null, !dbg !6865
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !6866

if.then70:                                        ; preds = %if.else
  %71 = load i8*, i8** %allow_unused, align 8, !dbg !6867
  store i8 0, i8* %71, align 1, !dbg !6868
  br label %if.end71, !dbg !6869

if.end71:                                         ; preds = %if.then70, %if.else
  %72 = load i8*, i8** %map, align 8, !dbg !6870
  %call72 = call i64 @strtol(i8* %72, i8** %p, i32 0) #12, !dbg !6871
  %conv73 = trunc i64 %call72 to i32, !dbg !6871
  store i32 %conv73, i32* %file_idx, align 4, !dbg !6872
  %73 = load i32, i32* %file_idx, align 4, !dbg !6873
  %74 = load i32, i32* @nb_input_files, align 4, !dbg !6875
  %cmp74 = icmp sge i32 %73, %74, !dbg !6876
  br i1 %cmp74, label %if.then79, label %lor.lhs.false76, !dbg !6877

lor.lhs.false76:                                  ; preds = %if.end71
  %75 = load i32, i32* %file_idx, align 4, !dbg !6878
  %cmp77 = icmp slt i32 %75, 0, !dbg !6880
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !6881

if.then79:                                        ; preds = %lor.lhs.false76, %if.end71
  %76 = load i32, i32* %file_idx, align 4, !dbg !6882
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.584, i32 0, i32 0), i32 %76), !dbg !6884
  call void @exit_program(i32 1) #11, !dbg !6885
  unreachable, !dbg !6885

if.end80:                                         ; preds = %lor.lhs.false76
  %77 = load i32, i32* %negative, align 4, !dbg !6886
  %tobool81 = icmp ne i32 %77, 0, !dbg !6886
  br i1 %tobool81, label %if.then82, label %if.else117, !dbg !6888

if.then82:                                        ; preds = %if.end80
  store i32 0, i32* %i, align 4, !dbg !6889
  br label %for.cond83, !dbg !6891

for.cond83:                                       ; preds = %for.inc114, %if.then82
  %78 = load i32, i32* %i, align 4, !dbg !6892
  %79 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !6895
  %nb_stream_maps84 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %79, i32 0, i32 35, !dbg !6896
  %80 = load i32, i32* %nb_stream_maps84, align 8, !dbg !6896
  %cmp85 = icmp slt i32 %78, %80, !dbg !6897
  br i1 %cmp85, label %for.body87, label %for.end116, !dbg !6898

for.body87:                                       ; preds = %for.cond83
  %81 = load i32, i32* %i, align 4, !dbg !6899
  %idxprom88 = sext i32 %81 to i64, !dbg !6901
  %82 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !6901
  %stream_maps89 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %82, i32 0, i32 34, !dbg !6902
  %83 = load %struct.StreamMap*, %struct.StreamMap** %stream_maps89, align 8, !dbg !6902
  %arrayidx90 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %83, i64 %idxprom88, !dbg !6901
  store %struct.StreamMap* %arrayidx90, %struct.StreamMap** %m, align 8, !dbg !6903
  %84 = load i32, i32* %file_idx, align 4, !dbg !6904
  %85 = load %struct.StreamMap*, %struct.StreamMap** %m, align 8, !dbg !6906
  %file_index = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %85, i32 0, i32 1, !dbg !6907
  %86 = load i32, i32* %file_index, align 4, !dbg !6907
  %cmp91 = icmp eq i32 %84, %86, !dbg !6908
  br i1 %cmp91, label %land.lhs.true, label %if.end113, !dbg !6909

land.lhs.true:                                    ; preds = %for.body87
  %87 = load %struct.StreamMap*, %struct.StreamMap** %m, align 8, !dbg !6910
  %file_index93 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %87, i32 0, i32 1, !dbg !6911
  %88 = load i32, i32* %file_index93, align 4, !dbg !6911
  %idxprom94 = sext i32 %88 to i64, !dbg !6912
  %89 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6912
  %arrayidx95 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %89, i64 %idxprom94, !dbg !6912
  %90 = load %struct.InputFile*, %struct.InputFile** %arrayidx95, align 8, !dbg !6912
  %ctx96 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %90, i32 0, i32 0, !dbg !6913
  %91 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx96, align 8, !dbg !6913
  %92 = load %struct.StreamMap*, %struct.StreamMap** %m, align 8, !dbg !6914
  %stream_index = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %92, i32 0, i32 2, !dbg !6915
  %93 = load i32, i32* %stream_index, align 8, !dbg !6915
  %idxprom97 = sext i32 %93 to i64, !dbg !6916
  %94 = load %struct.StreamMap*, %struct.StreamMap** %m, align 8, !dbg !6917
  %file_index98 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %94, i32 0, i32 1, !dbg !6918
  %95 = load i32, i32* %file_index98, align 4, !dbg !6918
  %idxprom99 = sext i32 %95 to i64, !dbg !6916
  %96 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6916
  %arrayidx100 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %96, i64 %idxprom99, !dbg !6916
  %97 = load %struct.InputFile*, %struct.InputFile** %arrayidx100, align 8, !dbg !6916
  %ctx101 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %97, i32 0, i32 0, !dbg !6919
  %98 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx101, align 8, !dbg !6919
  %streams102 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %98, i32 0, i32 7, !dbg !6920
  %99 = load %struct.AVStream**, %struct.AVStream*** %streams102, align 8, !dbg !6920
  %arrayidx103 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %99, i64 %idxprom97, !dbg !6916
  %100 = load %struct.AVStream*, %struct.AVStream** %arrayidx103, align 8, !dbg !6916
  %101 = load i8*, i8** %p, align 8, !dbg !6921
  %102 = load i8, i8* %101, align 1, !dbg !6922
  %conv104 = sext i8 %102 to i32, !dbg !6922
  %cmp105 = icmp eq i32 %conv104, 58, !dbg !6923
  br i1 %cmp105, label %cond.true, label %cond.false, !dbg !6922

cond.true:                                        ; preds = %land.lhs.true
  %103 = load i8*, i8** %p, align 8, !dbg !6924
  %add.ptr107 = getelementptr inbounds i8, i8* %103, i64 1, !dbg !6926
  br label %cond.end, !dbg !6927

cond.false:                                       ; preds = %land.lhs.true
  %104 = load i8*, i8** %p, align 8, !dbg !6928
  br label %cond.end, !dbg !6930

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr107, %cond.true ], [ %104, %cond.false ], !dbg !6931
  %call108 = call i32 @check_stream_specifier(%struct.AVFormatContext* %91, %struct.AVStream* %100, i8* %cond), !dbg !6933
  %cmp109 = icmp sgt i32 %call108, 0, !dbg !6934
  br i1 %cmp109, label %if.then111, label %if.end113, !dbg !6935

if.then111:                                       ; preds = %cond.end
  %105 = load %struct.StreamMap*, %struct.StreamMap** %m, align 8, !dbg !6937
  %disabled112 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %105, i32 0, i32 0, !dbg !6938
  store i32 1, i32* %disabled112, align 8, !dbg !6939
  br label %if.end113, !dbg !6937

if.end113:                                        ; preds = %if.then111, %cond.end, %for.body87
  br label %for.inc114, !dbg !6940

for.inc114:                                       ; preds = %if.end113
  %106 = load i32, i32* %i, align 4, !dbg !6941
  %inc115 = add nsw i32 %106, 1, !dbg !6941
  store i32 %inc115, i32* %i, align 4, !dbg !6941
  br label %for.cond83, !dbg !6943, !llvm.loop !6944

for.end116:                                       ; preds = %for.cond83
  br label %if.end181, !dbg !6946

if.else117:                                       ; preds = %if.end80
  store i32 0, i32* %i, align 4, !dbg !6948
  br label %for.cond118, !dbg !6950

for.cond118:                                      ; preds = %for.inc178, %if.else117
  %107 = load i32, i32* %i, align 4, !dbg !6951
  %108 = load i32, i32* %file_idx, align 4, !dbg !6954
  %idxprom119 = sext i32 %108 to i64, !dbg !6955
  %109 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6955
  %arrayidx120 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %109, i64 %idxprom119, !dbg !6955
  %110 = load %struct.InputFile*, %struct.InputFile** %arrayidx120, align 8, !dbg !6955
  %nb_streams121 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %110, i32 0, i32 13, !dbg !6956
  %111 = load i32, i32* %nb_streams121, align 8, !dbg !6956
  %cmp122 = icmp slt i32 %107, %111, !dbg !6957
  br i1 %cmp122, label %for.body124, label %for.end180, !dbg !6958

for.body124:                                      ; preds = %for.cond118
  %112 = load i32, i32* %file_idx, align 4, !dbg !6959
  %idxprom125 = sext i32 %112 to i64, !dbg !6962
  %113 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6962
  %arrayidx126 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %113, i64 %idxprom125, !dbg !6962
  %114 = load %struct.InputFile*, %struct.InputFile** %arrayidx126, align 8, !dbg !6962
  %ctx127 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %114, i32 0, i32 0, !dbg !6963
  %115 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx127, align 8, !dbg !6963
  %116 = load i32, i32* %i, align 4, !dbg !6964
  %idxprom128 = sext i32 %116 to i64, !dbg !6965
  %117 = load i32, i32* %file_idx, align 4, !dbg !6966
  %idxprom129 = sext i32 %117 to i64, !dbg !6965
  %118 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6965
  %arrayidx130 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %118, i64 %idxprom129, !dbg !6965
  %119 = load %struct.InputFile*, %struct.InputFile** %arrayidx130, align 8, !dbg !6965
  %ctx131 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %119, i32 0, i32 0, !dbg !6967
  %120 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx131, align 8, !dbg !6967
  %streams132 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %120, i32 0, i32 7, !dbg !6968
  %121 = load %struct.AVStream**, %struct.AVStream*** %streams132, align 8, !dbg !6968
  %arrayidx133 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %121, i64 %idxprom128, !dbg !6965
  %122 = load %struct.AVStream*, %struct.AVStream** %arrayidx133, align 8, !dbg !6965
  %123 = load i8*, i8** %p, align 8, !dbg !6969
  %124 = load i8, i8* %123, align 1, !dbg !6970
  %conv134 = sext i8 %124 to i32, !dbg !6970
  %cmp135 = icmp eq i32 %conv134, 58, !dbg !6971
  br i1 %cmp135, label %cond.true137, label %cond.false139, !dbg !6970

cond.true137:                                     ; preds = %for.body124
  %125 = load i8*, i8** %p, align 8, !dbg !6972
  %add.ptr138 = getelementptr inbounds i8, i8* %125, i64 1, !dbg !6974
  br label %cond.end140, !dbg !6975

cond.false139:                                    ; preds = %for.body124
  %126 = load i8*, i8** %p, align 8, !dbg !6976
  br label %cond.end140, !dbg !6978

cond.end140:                                      ; preds = %cond.false139, %cond.true137
  %cond141 = phi i8* [ %add.ptr138, %cond.true137 ], [ %126, %cond.false139 ], !dbg !6979
  %call142 = call i32 @check_stream_specifier(%struct.AVFormatContext* %115, %struct.AVStream* %122, i8* %cond141), !dbg !6981
  %cmp143 = icmp sle i32 %call142, 0, !dbg !6982
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !6981

if.then145:                                       ; preds = %cond.end140
  br label %for.inc178, !dbg !6983

if.end146:                                        ; preds = %cond.end140
  %127 = load i32, i32* %file_idx, align 4, !dbg !6984
  %idxprom147 = sext i32 %127 to i64, !dbg !6986
  %128 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !6986
  %arrayidx148 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %128, i64 %idxprom147, !dbg !6986
  %129 = load %struct.InputFile*, %struct.InputFile** %arrayidx148, align 8, !dbg !6986
  %ist_index149 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %129, i32 0, i32 3, !dbg !6987
  %130 = load i32, i32* %ist_index149, align 8, !dbg !6987
  %131 = load i32, i32* %i, align 4, !dbg !6988
  %add150 = add nsw i32 %130, %131, !dbg !6989
  %idxprom151 = sext i32 %add150 to i64, !dbg !6990
  %132 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !6990
  %arrayidx152 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %132, i64 %idxprom151, !dbg !6990
  %133 = load %struct.InputStream*, %struct.InputStream** %arrayidx152, align 8, !dbg !6990
  %user_set_discard153 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %133, i32 0, i32 3, !dbg !6991
  %134 = load i32, i32* %user_set_discard153, align 4, !dbg !6991
  %cmp154 = icmp eq i32 %134, 48, !dbg !6992
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !6993

if.then156:                                       ; preds = %if.end146
  store i32 1, i32* %disabled, align 4, !dbg !6994
  br label %for.inc178, !dbg !6996

if.end157:                                        ; preds = %if.end146
  %135 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !6997
  %stream_maps158 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %135, i32 0, i32 34, !dbg !6998
  %136 = load %struct.StreamMap*, %struct.StreamMap** %stream_maps158, align 8, !dbg !6998
  %137 = bitcast %struct.StreamMap* %136 to i8*, !dbg !6997
  %138 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !6999
  %nb_stream_maps159 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %138, i32 0, i32 35, !dbg !7000
  %139 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7001
  %nb_stream_maps160 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %139, i32 0, i32 35, !dbg !7002
  %140 = load i32, i32* %nb_stream_maps160, align 8, !dbg !7002
  %add161 = add nsw i32 %140, 1, !dbg !7003
  %call162 = call i8* @grow_array(i8* %137, i32 32, i32* %nb_stream_maps159, i32 %add161), !dbg !7004
  %141 = bitcast i8* %call162 to %struct.StreamMap*, !dbg !7004
  %142 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7005
  %stream_maps163 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %142, i32 0, i32 34, !dbg !7006
  store %struct.StreamMap* %141, %struct.StreamMap** %stream_maps163, align 8, !dbg !7007
  %143 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7008
  %nb_stream_maps164 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %143, i32 0, i32 35, !dbg !7009
  %144 = load i32, i32* %nb_stream_maps164, align 8, !dbg !7009
  %sub165 = sub nsw i32 %144, 1, !dbg !7010
  %idxprom166 = sext i32 %sub165 to i64, !dbg !7011
  %145 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7011
  %stream_maps167 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %145, i32 0, i32 34, !dbg !7012
  %146 = load %struct.StreamMap*, %struct.StreamMap** %stream_maps167, align 8, !dbg !7012
  %arrayidx168 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %146, i64 %idxprom166, !dbg !7011
  store %struct.StreamMap* %arrayidx168, %struct.StreamMap** %m, align 8, !dbg !7013
  %147 = load i32, i32* %file_idx, align 4, !dbg !7014
  %148 = load %struct.StreamMap*, %struct.StreamMap** %m, align 8, !dbg !7015
  %file_index169 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %148, i32 0, i32 1, !dbg !7016
  store i32 %147, i32* %file_index169, align 4, !dbg !7017
  %149 = load i32, i32* %i, align 4, !dbg !7018
  %150 = load %struct.StreamMap*, %struct.StreamMap** %m, align 8, !dbg !7019
  %stream_index170 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %150, i32 0, i32 2, !dbg !7020
  store i32 %149, i32* %stream_index170, align 8, !dbg !7021
  %151 = load i32, i32* %sync_file_idx, align 4, !dbg !7022
  %cmp171 = icmp sge i32 %151, 0, !dbg !7024
  br i1 %cmp171, label %if.then173, label %if.else174, !dbg !7025

if.then173:                                       ; preds = %if.end157
  %152 = load i32, i32* %sync_file_idx, align 4, !dbg !7026
  %153 = load %struct.StreamMap*, %struct.StreamMap** %m, align 8, !dbg !7028
  %sync_file_index = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %153, i32 0, i32 3, !dbg !7029
  store i32 %152, i32* %sync_file_index, align 4, !dbg !7030
  %154 = load i32, i32* %sync_stream_idx, align 4, !dbg !7031
  %155 = load %struct.StreamMap*, %struct.StreamMap** %m, align 8, !dbg !7032
  %sync_stream_index = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %155, i32 0, i32 4, !dbg !7033
  store i32 %154, i32* %sync_stream_index, align 8, !dbg !7034
  br label %if.end177, !dbg !7035

if.else174:                                       ; preds = %if.end157
  %156 = load i32, i32* %file_idx, align 4, !dbg !7036
  %157 = load %struct.StreamMap*, %struct.StreamMap** %m, align 8, !dbg !7038
  %sync_file_index175 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %157, i32 0, i32 3, !dbg !7039
  store i32 %156, i32* %sync_file_index175, align 4, !dbg !7040
  %158 = load i32, i32* %i, align 4, !dbg !7041
  %159 = load %struct.StreamMap*, %struct.StreamMap** %m, align 8, !dbg !7042
  %sync_stream_index176 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %159, i32 0, i32 4, !dbg !7043
  store i32 %158, i32* %sync_stream_index176, align 8, !dbg !7044
  br label %if.end177

if.end177:                                        ; preds = %if.else174, %if.then173
  br label %for.inc178, !dbg !7045

for.inc178:                                       ; preds = %if.end177, %if.then156, %if.then145
  %160 = load i32, i32* %i, align 4, !dbg !7046
  %inc179 = add nsw i32 %160, 1, !dbg !7046
  store i32 %inc179, i32* %i, align 4, !dbg !7046
  br label %for.cond118, !dbg !7048, !llvm.loop !7049

for.end180:                                       ; preds = %for.cond118
  br label %if.end181

if.end181:                                        ; preds = %for.end180, %for.end116
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %if.end67
  %161 = load %struct.StreamMap*, %struct.StreamMap** %m, align 8, !dbg !7051
  %tobool183 = icmp ne %struct.StreamMap* %161, null, !dbg !7051
  br i1 %tobool183, label %if.end192, label %if.then184, !dbg !7053

if.then184:                                       ; preds = %if.end182
  %162 = load i8*, i8** %allow_unused, align 8, !dbg !7054
  %tobool185 = icmp ne i8* %162, null, !dbg !7054
  br i1 %tobool185, label %if.then186, label %if.else187, !dbg !7057

if.then186:                                       ; preds = %if.then184
  %163 = load i8*, i8** %arg.addr, align 8, !dbg !7058
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 40, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.585, i32 0, i32 0), i8* %163), !dbg !7060
  br label %if.end191, !dbg !7061

if.else187:                                       ; preds = %if.then184
  %164 = load i32, i32* %disabled, align 4, !dbg !7062
  %tobool188 = icmp ne i32 %164, 0, !dbg !7062
  br i1 %tobool188, label %if.then189, label %if.else190, !dbg !7062

if.then189:                                       ; preds = %if.else187
  %165 = load i8*, i8** %arg.addr, align 8, !dbg !7065
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.586, i32 0, i32 0), i8* %165), !dbg !7067
  call void @exit_program(i32 1) #11, !dbg !7068
  unreachable, !dbg !7068

if.else190:                                       ; preds = %if.else187
  %166 = load i8*, i8** %arg.addr, align 8, !dbg !7069
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.587, i32 0, i32 0), i8* %166), !dbg !7071
  call void @exit_program(i32 1) #11, !dbg !7072
  unreachable, !dbg !7072

if.end191:                                        ; preds = %if.then186
  br label %if.end192, !dbg !7073

if.end192:                                        ; preds = %if.end191, %if.end182
  %167 = bitcast i8** %map to i8*, !dbg !7074
  call void @av_freep(i8* %167), !dbg !7075
  store i32 0, i32* %retval, align 4, !dbg !7076
  br label %return, !dbg !7076

return:                                           ; preds = %if.end192, %if.then2
  %168 = load i32, i32* %retval, align 4, !dbg !7077
  ret i32 %168, !dbg !7077
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_map_channel(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !7078 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  %n = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %m = alloca %struct.AudioChannelMap*, align 8
  %allow_unused = alloca i8*, align 8
  %mapchan = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7079, metadata !1898), !dbg !7080
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7081, metadata !1898), !dbg !7082
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7083, metadata !1898), !dbg !7084
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !7085, metadata !1898), !dbg !7086
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !7087
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !7087
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !7086
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7088, metadata !1898), !dbg !7089
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !7090, metadata !1898), !dbg !7091
  call void @llvm.dbg.declare(metadata %struct.AudioChannelMap** %m, metadata !7092, metadata !1898), !dbg !7093
  call void @llvm.dbg.declare(metadata i8** %allow_unused, metadata !7094, metadata !1898), !dbg !7095
  call void @llvm.dbg.declare(metadata i8** %mapchan, metadata !7096, metadata !1898), !dbg !7097
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !7098
  %call = call noalias i8* @av_strdup(i8* %2), !dbg !7099
  store i8* %call, i8** %mapchan, align 8, !dbg !7100
  %3 = load i8*, i8** %mapchan, align 8, !dbg !7101
  %tobool = icmp ne i8* %3, null, !dbg !7101
  br i1 %tobool, label %if.end, label %if.then, !dbg !7103

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7104
  br label %return, !dbg !7104

if.end:                                           ; preds = %entry
  %4 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7105
  %audio_channel_maps = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %4, i32 0, i32 36, !dbg !7106
  %5 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %audio_channel_maps, align 8, !dbg !7106
  %6 = bitcast %struct.AudioChannelMap* %5 to i8*, !dbg !7105
  %7 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7107
  %nb_audio_channel_maps = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %7, i32 0, i32 37, !dbg !7108
  %8 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7109
  %nb_audio_channel_maps1 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %8, i32 0, i32 37, !dbg !7110
  %9 = load i32, i32* %nb_audio_channel_maps1, align 8, !dbg !7110
  %add = add nsw i32 %9, 1, !dbg !7111
  %call2 = call i8* @grow_array(i8* %6, i32 20, i32* %nb_audio_channel_maps, i32 %add), !dbg !7112
  %10 = bitcast i8* %call2 to %struct.AudioChannelMap*, !dbg !7112
  %11 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7113
  %audio_channel_maps3 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %11, i32 0, i32 36, !dbg !7114
  store %struct.AudioChannelMap* %10, %struct.AudioChannelMap** %audio_channel_maps3, align 8, !dbg !7115
  %12 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7116
  %nb_audio_channel_maps4 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %12, i32 0, i32 37, !dbg !7117
  %13 = load i32, i32* %nb_audio_channel_maps4, align 8, !dbg !7117
  %sub = sub nsw i32 %13, 1, !dbg !7118
  %idxprom = sext i32 %sub to i64, !dbg !7119
  %14 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7119
  %audio_channel_maps5 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %14, i32 0, i32 36, !dbg !7120
  %15 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %audio_channel_maps5, align 8, !dbg !7120
  %arrayidx = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %15, i64 %idxprom, !dbg !7119
  store %struct.AudioChannelMap* %arrayidx, %struct.AudioChannelMap** %m, align 8, !dbg !7121
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !7122
  %17 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7123
  %channel_idx = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %17, i32 0, i32 2, !dbg !7124
  %18 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7125
  %ofile_idx = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %18, i32 0, i32 3, !dbg !7126
  %19 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7127
  %ostream_idx = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %19, i32 0, i32 4, !dbg !7128
  %call6 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.588, i32 0, i32 0), i32* %channel_idx, i32* %ofile_idx, i32* %ostream_idx) #12, !dbg !7129
  store i32 %call6, i32* %n, align 4, !dbg !7130
  %20 = load i32, i32* %n, align 4, !dbg !7131
  %cmp = icmp eq i32 %20, 1, !dbg !7133
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !7134

lor.lhs.false:                                    ; preds = %if.end
  %21 = load i32, i32* %n, align 4, !dbg !7135
  %cmp7 = icmp eq i32 %21, 3, !dbg !7137
  br i1 %cmp7, label %land.lhs.true, label %if.end16, !dbg !7138

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %22 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7139
  %channel_idx8 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %22, i32 0, i32 2, !dbg !7141
  %23 = load i32, i32* %channel_idx8, align 4, !dbg !7141
  %cmp9 = icmp eq i32 %23, -1, !dbg !7142
  br i1 %cmp9, label %if.then10, label %if.end16, !dbg !7143

if.then10:                                        ; preds = %land.lhs.true
  %24 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7144
  %stream_idx = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %24, i32 0, i32 1, !dbg !7146
  store i32 -1, i32* %stream_idx, align 4, !dbg !7147
  %25 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7148
  %file_idx = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %25, i32 0, i32 0, !dbg !7149
  store i32 -1, i32* %file_idx, align 4, !dbg !7150
  %26 = load i32, i32* %n, align 4, !dbg !7151
  %cmp11 = icmp eq i32 %26, 1, !dbg !7153
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !7154

if.then12:                                        ; preds = %if.then10
  %27 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7155
  %ostream_idx13 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %27, i32 0, i32 4, !dbg !7156
  store i32 -1, i32* %ostream_idx13, align 4, !dbg !7157
  %28 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7158
  %ofile_idx14 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %28, i32 0, i32 3, !dbg !7159
  store i32 -1, i32* %ofile_idx14, align 4, !dbg !7160
  br label %if.end15, !dbg !7158

if.end15:                                         ; preds = %if.then12, %if.then10
  %29 = load i8*, i8** %mapchan, align 8, !dbg !7161
  call void @av_free(i8* %29), !dbg !7162
  store i32 0, i32* %retval, align 4, !dbg !7163
  br label %return, !dbg !7163

if.end16:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %30 = load i8*, i8** %arg.addr, align 8, !dbg !7164
  %31 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7165
  %file_idx17 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %31, i32 0, i32 0, !dbg !7166
  %32 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7167
  %stream_idx18 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %32, i32 0, i32 1, !dbg !7168
  %33 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7169
  %channel_idx19 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %33, i32 0, i32 2, !dbg !7170
  %34 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7171
  %ofile_idx20 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %34, i32 0, i32 3, !dbg !7172
  %35 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7173
  %ostream_idx21 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %35, i32 0, i32 4, !dbg !7174
  %call22 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %30, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.589, i32 0, i32 0), i32* %file_idx17, i32* %stream_idx18, i32* %channel_idx19, i32* %ofile_idx20, i32* %ostream_idx21) #12, !dbg !7175
  store i32 %call22, i32* %n, align 4, !dbg !7176
  %36 = load i32, i32* %n, align 4, !dbg !7177
  %cmp23 = icmp ne i32 %36, 3, !dbg !7179
  br i1 %cmp23, label %land.lhs.true24, label %if.end27, !dbg !7180

land.lhs.true24:                                  ; preds = %if.end16
  %37 = load i32, i32* %n, align 4, !dbg !7181
  %cmp25 = icmp ne i32 %37, 5, !dbg !7183
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !7184

if.then26:                                        ; preds = %land.lhs.true24
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.590, i32 0, i32 0)), !dbg !7185
  call void @exit_program(i32 1) #11, !dbg !7187
  unreachable, !dbg !7187

if.end27:                                         ; preds = %land.lhs.true24, %if.end16
  %38 = load i32, i32* %n, align 4, !dbg !7188
  %cmp28 = icmp ne i32 %38, 5, !dbg !7190
  br i1 %cmp28, label %if.then29, label %if.end32, !dbg !7191

if.then29:                                        ; preds = %if.end27
  %39 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7192
  %ostream_idx30 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %39, i32 0, i32 4, !dbg !7193
  store i32 -1, i32* %ostream_idx30, align 4, !dbg !7194
  %40 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7195
  %ofile_idx31 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %40, i32 0, i32 3, !dbg !7196
  store i32 -1, i32* %ofile_idx31, align 4, !dbg !7197
  br label %if.end32, !dbg !7195

if.end32:                                         ; preds = %if.then29, %if.end27
  %41 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7198
  %file_idx33 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %41, i32 0, i32 0, !dbg !7200
  %42 = load i32, i32* %file_idx33, align 4, !dbg !7200
  %cmp34 = icmp slt i32 %42, 0, !dbg !7201
  br i1 %cmp34, label %if.then38, label %lor.lhs.false35, !dbg !7202

lor.lhs.false35:                                  ; preds = %if.end32
  %43 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7203
  %file_idx36 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %43, i32 0, i32 0, !dbg !7205
  %44 = load i32, i32* %file_idx36, align 4, !dbg !7205
  %45 = load i32, i32* @nb_input_files, align 4, !dbg !7206
  %cmp37 = icmp sge i32 %44, %45, !dbg !7207
  br i1 %cmp37, label %if.then38, label %if.end40, !dbg !7208

if.then38:                                        ; preds = %lor.lhs.false35, %if.end32
  %46 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7209
  %file_idx39 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %46, i32 0, i32 0, !dbg !7211
  %47 = load i32, i32* %file_idx39, align 4, !dbg !7211
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.591, i32 0, i32 0), i32 %47), !dbg !7212
  call void @exit_program(i32 1) #11, !dbg !7213
  unreachable, !dbg !7213

if.end40:                                         ; preds = %lor.lhs.false35
  %48 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7214
  %stream_idx41 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %48, i32 0, i32 1, !dbg !7216
  %49 = load i32, i32* %stream_idx41, align 4, !dbg !7216
  %cmp42 = icmp slt i32 %49, 0, !dbg !7217
  br i1 %cmp42, label %if.then49, label %lor.lhs.false43, !dbg !7218

lor.lhs.false43:                                  ; preds = %if.end40
  %50 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7219
  %stream_idx44 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %50, i32 0, i32 1, !dbg !7220
  %51 = load i32, i32* %stream_idx44, align 4, !dbg !7220
  %52 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7221
  %file_idx45 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %52, i32 0, i32 0, !dbg !7222
  %53 = load i32, i32* %file_idx45, align 4, !dbg !7222
  %idxprom46 = sext i32 %53 to i64, !dbg !7223
  %54 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !7223
  %arrayidx47 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %54, i64 %idxprom46, !dbg !7223
  %55 = load %struct.InputFile*, %struct.InputFile** %arrayidx47, align 8, !dbg !7223
  %nb_streams = getelementptr inbounds %struct.InputFile, %struct.InputFile* %55, i32 0, i32 13, !dbg !7224
  %56 = load i32, i32* %nb_streams, align 8, !dbg !7224
  %cmp48 = icmp sge i32 %51, %56, !dbg !7225
  br i1 %cmp48, label %if.then49, label %if.end52, !dbg !7226

if.then49:                                        ; preds = %lor.lhs.false43, %if.end40
  %57 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7228
  %file_idx50 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %57, i32 0, i32 0, !dbg !7230
  %58 = load i32, i32* %file_idx50, align 4, !dbg !7230
  %59 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7231
  %stream_idx51 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %59, i32 0, i32 1, !dbg !7232
  %60 = load i32, i32* %stream_idx51, align 4, !dbg !7232
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.592, i32 0, i32 0), i32 %58, i32 %60), !dbg !7233
  call void @exit_program(i32 1) #11, !dbg !7234
  unreachable, !dbg !7234

if.end52:                                         ; preds = %lor.lhs.false43
  %61 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7235
  %stream_idx53 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %61, i32 0, i32 1, !dbg !7236
  %62 = load i32, i32* %stream_idx53, align 4, !dbg !7236
  %idxprom54 = sext i32 %62 to i64, !dbg !7237
  %63 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7238
  %file_idx55 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %63, i32 0, i32 0, !dbg !7239
  %64 = load i32, i32* %file_idx55, align 4, !dbg !7239
  %idxprom56 = sext i32 %64 to i64, !dbg !7237
  %65 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !7237
  %arrayidx57 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %65, i64 %idxprom56, !dbg !7237
  %66 = load %struct.InputFile*, %struct.InputFile** %arrayidx57, align 8, !dbg !7237
  %ctx = getelementptr inbounds %struct.InputFile, %struct.InputFile* %66, i32 0, i32 0, !dbg !7240
  %67 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !7240
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %67, i32 0, i32 7, !dbg !7241
  %68 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !7241
  %arrayidx58 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %68, i64 %idxprom54, !dbg !7237
  %69 = load %struct.AVStream*, %struct.AVStream** %arrayidx58, align 8, !dbg !7237
  store %struct.AVStream* %69, %struct.AVStream** %st, align 8, !dbg !7242
  %70 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !7243
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %70, i32 0, i32 19, !dbg !7245
  %71 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !7245
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %71, i32 0, i32 0, !dbg !7246
  %72 = load i32, i32* %codec_type, align 8, !dbg !7246
  %cmp59 = icmp ne i32 %72, 1, !dbg !7247
  br i1 %cmp59, label %if.then60, label %if.end63, !dbg !7248

if.then60:                                        ; preds = %if.end52
  %73 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7249
  %file_idx61 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %73, i32 0, i32 0, !dbg !7251
  %74 = load i32, i32* %file_idx61, align 4, !dbg !7251
  %75 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7252
  %stream_idx62 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %75, i32 0, i32 1, !dbg !7253
  %76 = load i32, i32* %stream_idx62, align 4, !dbg !7253
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.593, i32 0, i32 0), i32 %74, i32 %76), !dbg !7254
  call void @exit_program(i32 1) #11, !dbg !7255
  unreachable, !dbg !7255

if.end63:                                         ; preds = %if.end52
  %77 = load i8*, i8** %mapchan, align 8, !dbg !7256
  %call64 = call i8* @strchr(i8* %77, i32 63) #10, !dbg !7258
  store i8* %call64, i8** %allow_unused, align 8, !dbg !7259
  %tobool65 = icmp ne i8* %call64, null, !dbg !7259
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !7260

if.then66:                                        ; preds = %if.end63
  %78 = load i8*, i8** %allow_unused, align 8, !dbg !7261
  store i8 0, i8* %78, align 1, !dbg !7262
  br label %if.end67, !dbg !7263

if.end67:                                         ; preds = %if.then66, %if.end63
  %79 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7264
  %channel_idx68 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %79, i32 0, i32 2, !dbg !7266
  %80 = load i32, i32* %channel_idx68, align 4, !dbg !7266
  %cmp69 = icmp slt i32 %80, 0, !dbg !7267
  br i1 %cmp69, label %if.then83, label %lor.lhs.false70, !dbg !7268

lor.lhs.false70:                                  ; preds = %if.end67
  %81 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7269
  %channel_idx71 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %81, i32 0, i32 2, !dbg !7271
  %82 = load i32, i32* %channel_idx71, align 4, !dbg !7271
  %83 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !7272
  %codecpar72 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %83, i32 0, i32 19, !dbg !7273
  %84 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar72, align 8, !dbg !7273
  %channels = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %84, i32 0, i32 22, !dbg !7274
  %85 = load i32, i32* %channels, align 8, !dbg !7274
  %cmp73 = icmp sge i32 %82, %85, !dbg !7275
  br i1 %cmp73, label %if.then83, label %lor.lhs.false74, !dbg !7276

lor.lhs.false74:                                  ; preds = %lor.lhs.false70
  %86 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7277
  %file_idx75 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %86, i32 0, i32 0, !dbg !7278
  %87 = load i32, i32* %file_idx75, align 4, !dbg !7278
  %idxprom76 = sext i32 %87 to i64, !dbg !7279
  %88 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !7279
  %arrayidx77 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %88, i64 %idxprom76, !dbg !7279
  %89 = load %struct.InputFile*, %struct.InputFile** %arrayidx77, align 8, !dbg !7279
  %ist_index = getelementptr inbounds %struct.InputFile, %struct.InputFile* %89, i32 0, i32 3, !dbg !7280
  %90 = load i32, i32* %ist_index, align 8, !dbg !7280
  %91 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7281
  %stream_idx78 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %91, i32 0, i32 1, !dbg !7282
  %92 = load i32, i32* %stream_idx78, align 4, !dbg !7282
  %add79 = add nsw i32 %90, %92, !dbg !7283
  %idxprom80 = sext i32 %add79 to i64, !dbg !7284
  %93 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !7284
  %arrayidx81 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %93, i64 %idxprom80, !dbg !7284
  %94 = load %struct.InputStream*, %struct.InputStream** %arrayidx81, align 8, !dbg !7284
  %user_set_discard = getelementptr inbounds %struct.InputStream, %struct.InputStream* %94, i32 0, i32 3, !dbg !7285
  %95 = load i32, i32* %user_set_discard, align 4, !dbg !7285
  %cmp82 = icmp eq i32 %95, 48, !dbg !7286
  br i1 %cmp82, label %if.then83, label %if.end93, !dbg !7287

if.then83:                                        ; preds = %lor.lhs.false74, %lor.lhs.false70, %if.end67
  %96 = load i8*, i8** %allow_unused, align 8, !dbg !7289
  %tobool84 = icmp ne i8* %96, null, !dbg !7289
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !7292

if.then85:                                        ; preds = %if.then83
  %97 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7293
  %file_idx86 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %97, i32 0, i32 0, !dbg !7295
  %98 = load i32, i32* %file_idx86, align 4, !dbg !7295
  %99 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7296
  %stream_idx87 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %99, i32 0, i32 1, !dbg !7297
  %100 = load i32, i32* %stream_idx87, align 4, !dbg !7297
  %101 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7298
  %channel_idx88 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %101, i32 0, i32 2, !dbg !7299
  %102 = load i32, i32* %channel_idx88, align 4, !dbg !7299
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 40, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.594, i32 0, i32 0), i32 %98, i32 %100, i32 %102), !dbg !7300
  br label %if.end92, !dbg !7301

if.else:                                          ; preds = %if.then83
  %103 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7302
  %file_idx89 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %103, i32 0, i32 0, !dbg !7304
  %104 = load i32, i32* %file_idx89, align 4, !dbg !7304
  %105 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7305
  %stream_idx90 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %105, i32 0, i32 1, !dbg !7306
  %106 = load i32, i32* %stream_idx90, align 4, !dbg !7306
  %107 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %m, align 8, !dbg !7307
  %channel_idx91 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %107, i32 0, i32 2, !dbg !7308
  %108 = load i32, i32* %channel_idx91, align 4, !dbg !7308
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.595, i32 0, i32 0), i32 %104, i32 %106, i32 %108), !dbg !7309
  call void @exit_program(i32 1) #11, !dbg !7310
  unreachable, !dbg !7310

if.end92:                                         ; preds = %if.then85
  br label %if.end93, !dbg !7311

if.end93:                                         ; preds = %if.end92, %lor.lhs.false74
  %109 = load i8*, i8** %mapchan, align 8, !dbg !7312
  call void @av_free(i8* %109), !dbg !7313
  store i32 0, i32* %retval, align 4, !dbg !7314
  br label %return, !dbg !7314

return:                                           ; preds = %if.end93, %if.end15, %if.then
  %110 = load i32, i32* %retval, align 4, !dbg !7315
  ret i32 %110, !dbg !7315
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_recording_timestamp(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !7316 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  %buf = alloca [128 x i8], align 16
  %recording_timestamp = alloca i64, align 8
  %time = alloca %struct.tm, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7317, metadata !1898), !dbg !7318
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7319, metadata !1898), !dbg !7320
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7321, metadata !1898), !dbg !7322
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !7323, metadata !1898), !dbg !7324
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !7325
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !7325
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !7324
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !7326, metadata !1898), !dbg !7328
  call void @llvm.dbg.declare(metadata i64* %recording_timestamp, metadata !7329, metadata !1898), !dbg !7330
  %2 = load i8*, i8** %opt.addr, align 8, !dbg !7331
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !7332
  %call = call i64 @parse_time_or_die(i8* %2, i8* %3, i32 0), !dbg !7333
  %conv = sitofp i64 %call to double, !dbg !7333
  %div = fdiv double %conv, 1.000000e+06, !dbg !7334
  %conv1 = fptosi double %div to i64, !dbg !7333
  store i64 %conv1, i64* %recording_timestamp, align 8, !dbg !7330
  call void @llvm.dbg.declare(metadata %struct.tm* %time, metadata !7335, metadata !1898), !dbg !7349
  %call2 = call %struct.tm* @gmtime(i64* %recording_timestamp) #12, !dbg !7350
  %4 = bitcast %struct.tm* %time to i8*, !dbg !7351
  %5 = bitcast %struct.tm* %call2 to i8*, !dbg !7351
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 56, i32 8, i1 false), !dbg !7352
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !7354
  %call3 = call i64 @strftime(i8* %arraydecay, i64 128, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.596, i32 0, i32 0), %struct.tm* %time) #12, !dbg !7356
  %tobool = icmp ne i64 %call3, 0, !dbg !7356
  br i1 %tobool, label %if.end, label %if.then, !dbg !7357

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !7358
  br label %return, !dbg !7358

if.end:                                           ; preds = %entry
  %6 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7359
  %7 = bitcast %struct.OptionsContext* %6 to i8*, !dbg !7359
  %arraydecay4 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !7360
  %call5 = call i32 @parse_option(i8* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.138, i32 0, i32 0), i8* %arraydecay4, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7361
  %8 = load i8*, i8** %opt.addr, align 8, !dbg !7362
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.597, i32 0, i32 0), i8* %8), !dbg !7363
  store i32 0, i32* %retval, align 4, !dbg !7364
  br label %return, !dbg !7364

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7365
  ret i32 %9, !dbg !7365
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_data_frames(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !7366 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7367, metadata !1898), !dbg !7368
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7369, metadata !1898), !dbg !7370
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7371, metadata !1898), !dbg !7372
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !7373, metadata !1898), !dbg !7374
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !7375
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !7375
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !7374
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7376
  %3 = bitcast %struct.OptionsContext* %2 to i8*, !dbg !7376
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !7377
  %call = call i32 @parse_option(i8* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.598, i32 0, i32 0), i8* %4, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7378
  ret i32 %call, !dbg !7379
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_progress(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !7380 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %avio = alloca %struct.AVIOContext*, align 8
  %ret = alloca i32, align 4
  %.compoundliteral = alloca [64 x i8], align 1
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7381, metadata !1898), !dbg !7382
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7383, metadata !1898), !dbg !7384
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7385, metadata !1898), !dbg !7386
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %avio, metadata !7387, metadata !1898), !dbg !7388
  store %struct.AVIOContext* null, %struct.AVIOContext** %avio, align 8, !dbg !7388
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7389, metadata !1898), !dbg !7390
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7391
  %call = call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.433, i32 0, i32 0)) #10, !dbg !7393
  %tobool = icmp ne i32 %call, 0, !dbg !7393
  br i1 %tobool, label %if.end, label %if.then, !dbg !7394

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.434, i32 0, i32 0), i8** %arg.addr, align 8, !dbg !7395
  br label %if.end, !dbg !7396

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7397
  %call1 = call i32 @avio_open2(%struct.AVIOContext** %avio, i8* %1, i32 2, %struct.AVIOInterruptCB* @int_cb, %struct.AVDictionary** null), !dbg !7398
  store i32 %call1, i32* %ret, align 4, !dbg !7399
  %2 = load i32, i32* %ret, align 4, !dbg !7400
  %cmp = icmp slt i32 %2, 0, !dbg !7402
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !7403

if.then2:                                         ; preds = %if.end
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !7404
  %4 = bitcast [64 x i8]* %.compoundliteral to i8*, !dbg !7406
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 64, i32 1, i1 false), !dbg !7406
  %arrayinit.begin = getelementptr inbounds [64 x i8], [64 x i8]* %.compoundliteral, i64 0, i64 0, !dbg !7407
  store i8 0, i8* %arrayinit.begin, align 1, !dbg !7407
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %.compoundliteral, i32 0, i32 0, !dbg !7406
  %5 = load i32, i32* %ret, align 4, !dbg !7408
  %call3 = call i8* @av_make_error_string(i8* %arraydecay, i64 64, i32 %5), !dbg !7409
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.599, i32 0, i32 0), i8* %3, i8* %call3), !dbg !7411
  %6 = load i32, i32* %ret, align 4, !dbg !7412
  store i32 %6, i32* %retval, align 4, !dbg !7413
  br label %return, !dbg !7413

if.end4:                                          ; preds = %if.end
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %avio, align 8, !dbg !7414
  store %struct.AVIOContext* %7, %struct.AVIOContext** @progress_avio, align 8, !dbg !7415
  store i32 0, i32* %retval, align 4, !dbg !7416
  br label %return, !dbg !7416

return:                                           ; preds = %if.end4, %if.then2
  %8 = load i32, i32* %retval, align 4, !dbg !7417
  ret i32 %8, !dbg !7417
}

declare i32 @opt_timelimit(i8*, i8*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @opt_target(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !1322 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  %norm = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %fr = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7418, metadata !1898), !dbg !7419
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7420, metadata !1898), !dbg !7421
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7422, metadata !1898), !dbg !7423
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !7424, metadata !1898), !dbg !7425
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !7426
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !7426
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !7425
  call void @llvm.dbg.declare(metadata i32* %norm, metadata !7427, metadata !1898), !dbg !7428
  store i32 3, i32* %norm, align 4, !dbg !7428
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !7429
  %call = call i32 @strncmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.603, i32 0, i32 0), i64 4) #10, !dbg !7431
  %tobool = icmp ne i32 %call, 0, !dbg !7431
  br i1 %tobool, label %if.else, label %if.then, !dbg !7432

if.then:                                          ; preds = %entry
  store i32 0, i32* %norm, align 4, !dbg !7433
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !7435
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 4, !dbg !7435
  store i8* %add.ptr, i8** %arg.addr, align 8, !dbg !7435
  br label %if.end44, !dbg !7436

if.else:                                          ; preds = %entry
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !7437
  %call1 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.604, i32 0, i32 0), i64 5) #10, !dbg !7440
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7440
  br i1 %tobool2, label %if.else5, label %if.then3, !dbg !7441

if.then3:                                         ; preds = %if.else
  store i32 1, i32* %norm, align 4, !dbg !7442
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !7444
  %add.ptr4 = getelementptr inbounds i8, i8* %5, i64 5, !dbg !7444
  store i8* %add.ptr4, i8** %arg.addr, align 8, !dbg !7444
  br label %if.end43, !dbg !7445

if.else5:                                         ; preds = %if.else
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !7446
  %call6 = call i32 @strncmp(i8* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.605, i32 0, i32 0), i64 5) #10, !dbg !7449
  %tobool7 = icmp ne i32 %call6, 0, !dbg !7449
  br i1 %tobool7, label %if.else10, label %if.then8, !dbg !7450

if.then8:                                         ; preds = %if.else5
  store i32 2, i32* %norm, align 4, !dbg !7451
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !7453
  %add.ptr9 = getelementptr inbounds i8, i8* %7, i64 5, !dbg !7453
  store i8* %add.ptr9, i8** %arg.addr, align 8, !dbg !7453
  br label %if.end42, !dbg !7454

if.else10:                                        ; preds = %if.else5
  %8 = load i32, i32* @nb_input_files, align 4, !dbg !7455
  %tobool11 = icmp ne i32 %8, 0, !dbg !7455
  br i1 %tobool11, label %if.then12, label %if.end37, !dbg !7458

if.then12:                                        ; preds = %if.else10
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7459, metadata !1898), !dbg !7461
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7462, metadata !1898), !dbg !7463
  call void @llvm.dbg.declare(metadata i32* %fr, metadata !7464, metadata !1898), !dbg !7465
  store i32 0, i32* %j, align 4, !dbg !7466
  br label %for.cond, !dbg !7468

for.cond:                                         ; preds = %for.inc34, %if.then12
  %9 = load i32, i32* %j, align 4, !dbg !7469
  %10 = load i32, i32* @nb_input_files, align 4, !dbg !7472
  %cmp = icmp slt i32 %9, %10, !dbg !7473
  br i1 %cmp, label %for.body, label %for.end36, !dbg !7474

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7475
  br label %for.cond13, !dbg !7478

for.cond13:                                       ; preds = %for.inc, %for.body
  %11 = load i32, i32* %i, align 4, !dbg !7479
  %12 = load i32, i32* %j, align 4, !dbg !7482
  %idxprom = sext i32 %12 to i64, !dbg !7483
  %13 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !7483
  %arrayidx = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %13, i64 %idxprom, !dbg !7483
  %14 = load %struct.InputFile*, %struct.InputFile** %arrayidx, align 8, !dbg !7483
  %nb_streams = getelementptr inbounds %struct.InputFile, %struct.InputFile* %14, i32 0, i32 13, !dbg !7484
  %15 = load i32, i32* %nb_streams, align 8, !dbg !7484
  %cmp14 = icmp slt i32 %11, %15, !dbg !7485
  br i1 %cmp14, label %for.body15, label %for.end, !dbg !7486

for.body15:                                       ; preds = %for.cond13
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !7487, metadata !1898), !dbg !7489
  %16 = load i32, i32* %i, align 4, !dbg !7490
  %idxprom16 = sext i32 %16 to i64, !dbg !7491
  %17 = load i32, i32* %j, align 4, !dbg !7492
  %idxprom17 = sext i32 %17 to i64, !dbg !7491
  %18 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !7491
  %arrayidx18 = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %18, i64 %idxprom17, !dbg !7491
  %19 = load %struct.InputFile*, %struct.InputFile** %arrayidx18, align 8, !dbg !7491
  %ctx = getelementptr inbounds %struct.InputFile, %struct.InputFile* %19, i32 0, i32 0, !dbg !7493
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !7493
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i32 0, i32 7, !dbg !7494
  %21 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !7494
  %arrayidx19 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %21, i64 %idxprom16, !dbg !7491
  %22 = load %struct.AVStream*, %struct.AVStream** %arrayidx19, align 8, !dbg !7491
  store %struct.AVStream* %22, %struct.AVStream** %st, align 8, !dbg !7489
  %23 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !7495
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %23, i32 0, i32 19, !dbg !7497
  %24 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !7497
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %24, i32 0, i32 0, !dbg !7498
  %25 = load i32, i32* %codec_type, align 8, !dbg !7498
  %cmp20 = icmp ne i32 %25, 0, !dbg !7499
  br i1 %cmp20, label %if.then21, label %if.end, !dbg !7500

if.then21:                                        ; preds = %for.body15
  br label %for.inc, !dbg !7501

if.end:                                           ; preds = %for.body15
  %26 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !7502
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %26, i32 0, i32 4, !dbg !7503
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 1, !dbg !7504
  %27 = load i32, i32* %den, align 4, !dbg !7504
  %mul = mul nsw i32 %27, 1000, !dbg !7505
  %28 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !7506
  %time_base22 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %28, i32 0, i32 4, !dbg !7507
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base22, i32 0, i32 0, !dbg !7508
  %29 = load i32, i32* %num, align 8, !dbg !7508
  %div = sdiv i32 %mul, %29, !dbg !7509
  store i32 %div, i32* %fr, align 4, !dbg !7510
  %30 = load i32, i32* %fr, align 4, !dbg !7511
  %cmp23 = icmp eq i32 %30, 25000, !dbg !7513
  br i1 %cmp23, label %if.then24, label %if.else25, !dbg !7514

if.then24:                                        ; preds = %if.end
  store i32 0, i32* %norm, align 4, !dbg !7515
  br label %for.end, !dbg !7517

if.else25:                                        ; preds = %if.end
  %31 = load i32, i32* %fr, align 4, !dbg !7518
  %cmp26 = icmp eq i32 %31, 29970, !dbg !7520
  br i1 %cmp26, label %if.then28, label %lor.lhs.false, !dbg !7521

lor.lhs.false:                                    ; preds = %if.else25
  %32 = load i32, i32* %fr, align 4, !dbg !7522
  %cmp27 = icmp eq i32 %32, 23976, !dbg !7524
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !7525

if.then28:                                        ; preds = %lor.lhs.false, %if.else25
  store i32 1, i32* %norm, align 4, !dbg !7526
  br label %for.end, !dbg !7528

if.end29:                                         ; preds = %lor.lhs.false
  br label %if.end30

if.end30:                                         ; preds = %if.end29
  br label %for.inc, !dbg !7529

for.inc:                                          ; preds = %if.end30, %if.then21
  %33 = load i32, i32* %i, align 4, !dbg !7530
  %inc = add nsw i32 %33, 1, !dbg !7530
  store i32 %inc, i32* %i, align 4, !dbg !7530
  br label %for.cond13, !dbg !7532, !llvm.loop !7533

for.end:                                          ; preds = %if.then28, %if.then24, %for.cond13
  %34 = load i32, i32* %norm, align 4, !dbg !7535
  %cmp31 = icmp ne i32 %34, 3, !dbg !7537
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !7538

if.then32:                                        ; preds = %for.end
  br label %for.end36, !dbg !7539

if.end33:                                         ; preds = %for.end
  br label %for.inc34, !dbg !7540

for.inc34:                                        ; preds = %if.end33
  %35 = load i32, i32* %j, align 4, !dbg !7541
  %inc35 = add nsw i32 %35, 1, !dbg !7541
  store i32 %inc35, i32* %j, align 4, !dbg !7541
  br label %for.cond, !dbg !7543, !llvm.loop !7544

for.end36:                                        ; preds = %if.then32, %for.cond
  br label %if.end37, !dbg !7546

if.end37:                                         ; preds = %for.end36, %if.else10
  %36 = load i32, i32* %norm, align 4, !dbg !7547
  %cmp38 = icmp ne i32 %36, 3, !dbg !7549
  br i1 %cmp38, label %if.then39, label %if.end41, !dbg !7550

if.then39:                                        ; preds = %if.end37
  %37 = load i32, i32* %norm, align 4, !dbg !7551
  %cmp40 = icmp eq i32 %37, 0, !dbg !7552
  %cond = select i1 %cmp40, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.607, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.608, i32 0, i32 0), !dbg !7551
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.606, i32 0, i32 0), i8* %cond), !dbg !7553
  br label %if.end41, !dbg !7553

if.end41:                                         ; preds = %if.then39, %if.end37
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then8
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then3
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then
  %38 = load i32, i32* %norm, align 4, !dbg !7554
  %cmp45 = icmp eq i32 %38, 3, !dbg !7556
  br i1 %cmp45, label %if.then46, label %if.end47, !dbg !7557

if.then46:                                        ; preds = %if.end44
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.609, i32 0, i32 0)), !dbg !7558
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.610, i32 0, i32 0)), !dbg !7560
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.611, i32 0, i32 0)), !dbg !7561
  call void @exit_program(i32 1) #11, !dbg !7562
  unreachable, !dbg !7562

if.end47:                                         ; preds = %if.end44
  %39 = load i8*, i8** %arg.addr, align 8, !dbg !7563
  %call48 = call i32 @strcmp(i8* %39, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.612, i32 0, i32 0)) #10, !dbg !7565
  %tobool49 = icmp ne i32 %call48, 0, !dbg !7565
  br i1 %tobool49, label %if.else72, label %if.then50, !dbg !7566

if.then50:                                        ; preds = %if.end47
  %40 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7567
  %41 = bitcast %struct.OptionsContext* %40 to i8*, !dbg !7567
  %call51 = call i32 @opt_video_codec(i8* %41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.613, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.614, i32 0, i32 0)), !dbg !7569
  %42 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7570
  %43 = bitcast %struct.OptionsContext* %42 to i8*, !dbg !7570
  %call52 = call i32 @opt_audio_codec(i8* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.615, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.616, i32 0, i32 0)), !dbg !7571
  %44 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7572
  %45 = bitcast %struct.OptionsContext* %44 to i8*, !dbg !7572
  %call53 = call i32 @parse_option(i8* %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.612, i32 0, i32 0), %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7573
  %46 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7574
  %47 = bitcast %struct.OptionsContext* %46 to i8*, !dbg !7574
  %48 = load i32, i32* %norm, align 4, !dbg !7575
  %cmp54 = icmp eq i32 %48, 0, !dbg !7576
  %cond55 = select i1 %cmp54, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.617, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.618, i32 0, i32 0), !dbg !7575
  %call56 = call i32 @parse_option(i8* %47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.257, i32 0, i32 0), i8* %cond55, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7577
  %49 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7578
  %50 = bitcast %struct.OptionsContext* %49 to i8*, !dbg !7578
  %51 = load i32, i32* %norm, align 4, !dbg !7579
  %idxprom57 = zext i32 %51 to i64, !dbg !7580
  %arrayidx58 = getelementptr inbounds [3 x i8*], [3 x i8*]* @opt_target.frame_rates, i64 0, i64 %idxprom57, !dbg !7580
  %52 = load i8*, i8** %arrayidx58, align 8, !dbg !7580
  %call59 = call i32 @parse_option(i8* %50, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.254, i32 0, i32 0), i8* %52, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7581
  %53 = load i32, i32* %norm, align 4, !dbg !7582
  %cmp60 = icmp eq i32 %53, 0, !dbg !7583
  %cond61 = select i1 %cmp60, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.620, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.621, i32 0, i32 0), !dbg !7582
  %call62 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.619, i32 0, i32 0), i8* %cond61), !dbg !7584
  %call63 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.622, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.623, i32 0, i32 0)), !dbg !7585
  %call64 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.624, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.623, i32 0, i32 0)), !dbg !7586
  %call65 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.625, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.623, i32 0, i32 0)), !dbg !7587
  %call66 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.626, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.627, i32 0, i32 0)), !dbg !7588
  %call67 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.628, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.629, i32 0, i32 0)), !dbg !7589
  %54 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7590
  %55 = bitcast %struct.OptionsContext* %54 to i8*, !dbg !7590
  %call68 = call i32 @parse_option(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.341, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.630, i32 0, i32 0), %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7591
  %56 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7592
  %57 = bitcast %struct.OptionsContext* %56 to i8*, !dbg !7592
  %call69 = call i32 @parse_option(i8* %57, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.343, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.631, i32 0, i32 0), %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7593
  %call70 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.632, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.633, i32 0, i32 0)), !dbg !7594
  %call71 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.634, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.635, i32 0, i32 0)), !dbg !7595
  %58 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7596
  %mux_preload = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %58, i32 0, i32 47, !dbg !7597
  store float 0x3FDC28F5C0000000, float* %mux_preload, align 8, !dbg !7598
  br label %if.end145, !dbg !7599

if.else72:                                        ; preds = %if.end47
  %59 = load i8*, i8** %arg.addr, align 8, !dbg !7600
  %call73 = call i32 @strcmp(i8* %59, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.636, i32 0, i32 0)) #10, !dbg !7603
  %tobool74 = icmp ne i32 %call73, 0, !dbg !7603
  br i1 %tobool74, label %if.else97, label %if.then75, !dbg !7604

if.then75:                                        ; preds = %if.else72
  %60 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7605
  %61 = bitcast %struct.OptionsContext* %60 to i8*, !dbg !7605
  %call76 = call i32 @opt_video_codec(i8* %61, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.613, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.637, i32 0, i32 0)), !dbg !7607
  %62 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7608
  %63 = bitcast %struct.OptionsContext* %62 to i8*, !dbg !7608
  %call77 = call i32 @opt_audio_codec(i8* %63, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.615, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.616, i32 0, i32 0)), !dbg !7609
  %64 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7610
  %65 = bitcast %struct.OptionsContext* %64 to i8*, !dbg !7610
  %call78 = call i32 @parse_option(i8* %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.636, i32 0, i32 0), %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7611
  %66 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7612
  %67 = bitcast %struct.OptionsContext* %66 to i8*, !dbg !7612
  %68 = load i32, i32* %norm, align 4, !dbg !7613
  %cmp79 = icmp eq i32 %68, 0, !dbg !7614
  %cond80 = select i1 %cmp79, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.638, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.639, i32 0, i32 0), !dbg !7613
  %call81 = call i32 @parse_option(i8* %67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.257, i32 0, i32 0), i8* %cond80, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7615
  %69 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7616
  %70 = bitcast %struct.OptionsContext* %69 to i8*, !dbg !7616
  %71 = load i32, i32* %norm, align 4, !dbg !7617
  %idxprom82 = zext i32 %71 to i64, !dbg !7618
  %arrayidx83 = getelementptr inbounds [3 x i8*], [3 x i8*]* @opt_target.frame_rates, i64 0, i64 %idxprom82, !dbg !7618
  %72 = load i8*, i8** %arrayidx83, align 8, !dbg !7618
  %call84 = call i32 @parse_option(i8* %70, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.254, i32 0, i32 0), i8* %72, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7619
  %73 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7620
  %74 = bitcast %struct.OptionsContext* %73 to i8*, !dbg !7620
  %call85 = call i32 @parse_option(i8* %74, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.262, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.640, i32 0, i32 0), %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7621
  %75 = load i32, i32* %norm, align 4, !dbg !7622
  %cmp86 = icmp eq i32 %75, 0, !dbg !7623
  %cond87 = select i1 %cmp86, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.620, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.621, i32 0, i32 0), !dbg !7622
  %call88 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.619, i32 0, i32 0), i8* %cond87), !dbg !7624
  %call89 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.622, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.641, i32 0, i32 0)), !dbg !7625
  %call90 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.624, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.642, i32 0, i32 0)), !dbg !7626
  %call91 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.625, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.575, i32 0, i32 0)), !dbg !7627
  %call92 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.626, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.643, i32 0, i32 0)), !dbg !7628
  %call93 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.644, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.443, i32 0, i32 0)), !dbg !7629
  %call94 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.628, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.629, i32 0, i32 0)), !dbg !7630
  %76 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7631
  %77 = bitcast %struct.OptionsContext* %76 to i8*, !dbg !7631
  %call95 = call i32 @parse_option(i8* %77, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.341, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.630, i32 0, i32 0), %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7632
  %call96 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.632, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.633, i32 0, i32 0)), !dbg !7633
  br label %if.end144, !dbg !7634

if.else97:                                        ; preds = %if.else72
  %78 = load i8*, i8** %arg.addr, align 8, !dbg !7635
  %call98 = call i32 @strcmp(i8* %78, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.645, i32 0, i32 0)) #10, !dbg !7638
  %tobool99 = icmp ne i32 %call98, 0, !dbg !7638
  br i1 %tobool99, label %if.else122, label %if.then100, !dbg !7639

if.then100:                                       ; preds = %if.else97
  %79 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7640
  %80 = bitcast %struct.OptionsContext* %79 to i8*, !dbg !7640
  %call101 = call i32 @opt_video_codec(i8* %80, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.613, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.637, i32 0, i32 0)), !dbg !7642
  %81 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7643
  %82 = bitcast %struct.OptionsContext* %81 to i8*, !dbg !7643
  %call102 = call i32 @opt_audio_codec(i8* %82, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.615, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.646, i32 0, i32 0)), !dbg !7644
  %83 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7645
  %84 = bitcast %struct.OptionsContext* %83 to i8*, !dbg !7645
  %call103 = call i32 @parse_option(i8* %84, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.645, i32 0, i32 0), %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7646
  %85 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7647
  %86 = bitcast %struct.OptionsContext* %85 to i8*, !dbg !7647
  %87 = load i32, i32* %norm, align 4, !dbg !7648
  %cmp104 = icmp eq i32 %87, 0, !dbg !7649
  %cond105 = select i1 %cmp104, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.647, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.648, i32 0, i32 0), !dbg !7648
  %call106 = call i32 @parse_option(i8* %86, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.257, i32 0, i32 0), i8* %cond105, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7650
  %88 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7651
  %89 = bitcast %struct.OptionsContext* %88 to i8*, !dbg !7651
  %90 = load i32, i32* %norm, align 4, !dbg !7652
  %idxprom107 = zext i32 %90 to i64, !dbg !7653
  %arrayidx108 = getelementptr inbounds [3 x i8*], [3 x i8*]* @opt_target.frame_rates, i64 0, i64 %idxprom107, !dbg !7653
  %91 = load i8*, i8** %arrayidx108, align 8, !dbg !7653
  %call109 = call i32 @parse_option(i8* %89, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.254, i32 0, i32 0), i8* %91, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7654
  %92 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7655
  %93 = bitcast %struct.OptionsContext* %92 to i8*, !dbg !7655
  %call110 = call i32 @parse_option(i8* %93, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.262, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.640, i32 0, i32 0), %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7656
  %94 = load i32, i32* %norm, align 4, !dbg !7657
  %cmp111 = icmp eq i32 %94, 0, !dbg !7658
  %cond112 = select i1 %cmp111, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.620, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.621, i32 0, i32 0), !dbg !7657
  %call113 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.619, i32 0, i32 0), i8* %cond112), !dbg !7659
  %call114 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.622, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.649, i32 0, i32 0)), !dbg !7660
  %call115 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.624, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.650, i32 0, i32 0)), !dbg !7661
  %call116 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.625, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.575, i32 0, i32 0)), !dbg !7662
  %call117 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.626, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.643, i32 0, i32 0)), !dbg !7663
  %call118 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.632, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.651, i32 0, i32 0)), !dbg !7664
  %call119 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.634, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.652, i32 0, i32 0)), !dbg !7665
  %call120 = call i32 @opt_default(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.628, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.653, i32 0, i32 0)), !dbg !7666
  %95 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7667
  %96 = bitcast %struct.OptionsContext* %95 to i8*, !dbg !7667
  %call121 = call i32 @parse_option(i8* %96, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.341, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.654, i32 0, i32 0), %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7668
  br label %if.end143, !dbg !7669

if.else122:                                       ; preds = %if.else97
  %97 = load i8*, i8** %arg.addr, align 8, !dbg !7670
  %call123 = call i32 @strncmp(i8* %97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.655, i32 0, i32 0), i64 2) #10, !dbg !7673
  %tobool124 = icmp ne i32 %call123, 0, !dbg !7673
  br i1 %tobool124, label %if.else141, label %if.then125, !dbg !7674

if.then125:                                       ; preds = %if.else122
  %98 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7675
  %99 = bitcast %struct.OptionsContext* %98 to i8*, !dbg !7675
  %call126 = call i32 @parse_option(i8* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.655, i32 0, i32 0), %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7677
  %100 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7678
  %101 = bitcast %struct.OptionsContext* %100 to i8*, !dbg !7678
  %102 = load i32, i32* %norm, align 4, !dbg !7679
  %cmp127 = icmp eq i32 %102, 0, !dbg !7680
  %cond128 = select i1 %cmp127, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.647, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.648, i32 0, i32 0), !dbg !7679
  %call129 = call i32 @parse_option(i8* %101, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.257, i32 0, i32 0), i8* %cond128, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7681
  %103 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7682
  %104 = bitcast %struct.OptionsContext* %103 to i8*, !dbg !7682
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !7683
  %call130 = call i32 @strncmp(i8* %105, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.656, i32 0, i32 0), i64 4) #10, !dbg !7684
  %tobool131 = icmp ne i32 %call130, 0, !dbg !7684
  br i1 %tobool131, label %cond.false, label %cond.true, !dbg !7685

cond.true:                                        ; preds = %if.then125
  br label %cond.end, !dbg !7686

cond.false:                                       ; preds = %if.then125
  %106 = load i32, i32* %norm, align 4, !dbg !7688
  %cmp132 = icmp eq i32 %106, 0, !dbg !7689
  %cond133 = select i1 %cmp132, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.640, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.658, i32 0, i32 0), !dbg !7688
  br label %cond.end, !dbg !7690

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond134 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.657, i32 0, i32 0), %cond.true ], [ %cond133, %cond.false ], !dbg !7692
  %call135 = call i32 @parse_option(i8* %104, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.262, i32 0, i32 0), i8* %cond134, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7694
  %107 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7695
  %108 = bitcast %struct.OptionsContext* %107 to i8*, !dbg !7695
  %109 = load i32, i32* %norm, align 4, !dbg !7696
  %idxprom136 = zext i32 %109 to i64, !dbg !7697
  %arrayidx137 = getelementptr inbounds [3 x i8*], [3 x i8*]* @opt_target.frame_rates, i64 0, i64 %idxprom136, !dbg !7697
  %110 = load i8*, i8** %arrayidx137, align 8, !dbg !7697
  %call138 = call i32 @parse_option(i8* %108, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.254, i32 0, i32 0), i8* %110, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7698
  %111 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7699
  %112 = bitcast %struct.OptionsContext* %111 to i8*, !dbg !7699
  %call139 = call i32 @parse_option(i8* %112, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.341, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.654, i32 0, i32 0), %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7700
  %113 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7701
  %114 = bitcast %struct.OptionsContext* %113 to i8*, !dbg !7701
  %call140 = call i32 @parse_option(i8* %114, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.343, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.631, i32 0, i32 0), %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7702
  br label %if.end142, !dbg !7703

if.else141:                                       ; preds = %if.else122
  %115 = load i8*, i8** %arg.addr, align 8, !dbg !7704
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.659, i32 0, i32 0), i8* %115), !dbg !7706
  store i32 -22, i32* %retval, align 4, !dbg !7707
  br label %return, !dbg !7707

if.end142:                                        ; preds = %cond.end
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.then100
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.then75
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.then50
  %116 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7708
  %g = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %116, i32 0, i32 0, !dbg !7709
  %117 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !7709
  %codec_opts = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %117, i32 0, i32 4, !dbg !7710
  %118 = load %struct.AVDictionary*, %struct.AVDictionary** @codec_opts, align 8, !dbg !7711
  %call146 = call i32 @av_dict_copy(%struct.AVDictionary** %codec_opts, %struct.AVDictionary* %118, i32 16), !dbg !7712
  %119 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7713
  %g147 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %119, i32 0, i32 0, !dbg !7714
  %120 = load %struct.OptionGroup*, %struct.OptionGroup** %g147, align 8, !dbg !7714
  %format_opts = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %120, i32 0, i32 5, !dbg !7715
  %121 = load %struct.AVDictionary*, %struct.AVDictionary** @format_opts, align 8, !dbg !7716
  %call148 = call i32 @av_dict_copy(%struct.AVDictionary** %format_opts, %struct.AVDictionary* %121, i32 16), !dbg !7717
  store i32 0, i32* %retval, align 4, !dbg !7718
  br label %return, !dbg !7718

return:                                           ; preds = %if.end145, %if.else141
  %122 = load i32, i32* %retval, align 4, !dbg !7719
  ret i32 %122, !dbg !7719
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_vsync(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !7720 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7721, metadata !1898), !dbg !7722
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7723, metadata !1898), !dbg !7724
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7725, metadata !1898), !dbg !7726
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7727
  %call = call i32 @av_strcasecmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.660, i32 0, i32 0)), !dbg !7729
  %tobool = icmp ne i32 %call, 0, !dbg !7729
  br i1 %tobool, label %if.else, label %if.then, !dbg !7730

if.then:                                          ; preds = %entry
  store i32 1, i32* @video_sync_method, align 4, !dbg !7731
  br label %if.end14, !dbg !7733

if.else:                                          ; preds = %entry
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7734
  %call1 = call i32 @av_strcasecmp(i8* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.661, i32 0, i32 0)), !dbg !7736
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7736
  br i1 %tobool2, label %if.else4, label %if.then3, !dbg !7737

if.then3:                                         ; preds = %if.else
  store i32 2, i32* @video_sync_method, align 4, !dbg !7738
  br label %if.end13, !dbg !7740

if.else4:                                         ; preds = %if.else
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !7741
  %call5 = call i32 @av_strcasecmp(i8* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.662, i32 0, i32 0)), !dbg !7743
  %tobool6 = icmp ne i32 %call5, 0, !dbg !7743
  br i1 %tobool6, label %if.else8, label %if.then7, !dbg !7744

if.then7:                                         ; preds = %if.else4
  store i32 0, i32* @video_sync_method, align 4, !dbg !7745
  br label %if.end12, !dbg !7747

if.else8:                                         ; preds = %if.else4
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !7748
  %call9 = call i32 @av_strcasecmp(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.663, i32 0, i32 0)), !dbg !7750
  %tobool10 = icmp ne i32 %call9, 0, !dbg !7750
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !7751

if.then11:                                        ; preds = %if.else8
  store i32 255, i32* @video_sync_method, align 4, !dbg !7752
  br label %if.end, !dbg !7754

if.end:                                           ; preds = %if.then11, %if.else8
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then7
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then3
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then
  %4 = load i32, i32* @video_sync_method, align 4, !dbg !7755
  %cmp = icmp eq i32 %4, -1, !dbg !7757
  br i1 %cmp, label %if.then15, label %if.end17, !dbg !7758

if.then15:                                        ; preds = %if.end14
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !7759
  %call16 = call double @parse_number_or_die(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.169, i32 0, i32 0), i8* %5, i32 128, double -1.000000e+00, double 2.000000e+00), !dbg !7760
  %conv = fptosi double %call16 to i32, !dbg !7760
  store i32 %conv, i32* @video_sync_method, align 4, !dbg !7761
  br label %if.end17, !dbg !7762

if.end17:                                         ; preds = %if.then15, %if.end14
  ret i32 0, !dbg !7763
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_abort_on(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !1883 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %pclass = alloca %struct.AVClass*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7764, metadata !1898), !dbg !7765
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7766, metadata !1898), !dbg !7767
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7768, metadata !1898), !dbg !7769
  call void @llvm.dbg.declare(metadata %struct.AVClass** %pclass, metadata !7770, metadata !1898), !dbg !7771
  store %struct.AVClass* @opt_abort_on.class, %struct.AVClass** %pclass, align 8, !dbg !7771
  %0 = bitcast %struct.AVClass** %pclass to i8*, !dbg !7772
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7773
  %call = call i32 @av_opt_eval_flags(i8* %0, %struct.AVOption* getelementptr inbounds ([3 x %struct.AVOption], [3 x %struct.AVOption]* @opt_abort_on.opts, i64 0, i64 0), i8* %1, i32* @abort_on_flags), !dbg !7774
  ret i32 %call, !dbg !7775
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_qscale(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !7776 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  %s = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7777, metadata !1898), !dbg !7778
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7779, metadata !1898), !dbg !7780
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7781, metadata !1898), !dbg !7782
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !7783, metadata !1898), !dbg !7784
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !7785
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !7785
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !7784
  call void @llvm.dbg.declare(metadata i8** %s, metadata !7786, metadata !1898), !dbg !7787
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7788, metadata !1898), !dbg !7789
  %2 = load i8*, i8** %opt.addr, align 8, !dbg !7790
  %call = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.211, i32 0, i32 0)) #10, !dbg !7792
  %tobool = icmp ne i32 %call, 0, !dbg !7792
  br i1 %tobool, label %if.end, label %if.then, !dbg !7793

if.then:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.665, i32 0, i32 0)), !dbg !7794
  %3 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7796
  %4 = bitcast %struct.OptionsContext* %3 to i8*, !dbg !7796
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !7797
  %call1 = call i32 @parse_option(i8* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.666, i32 0, i32 0), i8* %5, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7798
  store i32 %call1, i32* %retval, align 4, !dbg !7799
  br label %return, !dbg !7799

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %opt.addr, align 8, !dbg !7800
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 6, !dbg !7801
  %call2 = call i8* (i8*, ...) @av_asprintf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.667, i32 0, i32 0), i8* %add.ptr), !dbg !7802
  store i8* %call2, i8** %s, align 8, !dbg !7803
  %7 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7804
  %8 = bitcast %struct.OptionsContext* %7 to i8*, !dbg !7804
  %9 = load i8*, i8** %s, align 8, !dbg !7805
  %10 = load i8*, i8** %arg.addr, align 8, !dbg !7806
  %call3 = call i32 @parse_option(i8* %8, i8* %9, i8* %10, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7807
  store i32 %call3, i32* %ret, align 4, !dbg !7808
  %11 = load i8*, i8** %s, align 8, !dbg !7809
  call void @av_free(i8* %11), !dbg !7810
  %12 = load i32, i32* %ret, align 4, !dbg !7811
  store i32 %12, i32* %retval, align 4, !dbg !7812
  br label %return, !dbg !7812

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !7813
  ret i32 %13, !dbg !7813
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_profile(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !7814 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7815, metadata !1898), !dbg !7816
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7817, metadata !1898), !dbg !7818
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7819, metadata !1898), !dbg !7820
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !7821, metadata !1898), !dbg !7822
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !7823
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !7823
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !7822
  %2 = load i8*, i8** %opt.addr, align 8, !dbg !7824
  %call = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.212, i32 0, i32 0)) #10, !dbg !7826
  %tobool = icmp ne i32 %call, 0, !dbg !7826
  br i1 %tobool, label %if.end, label %if.then, !dbg !7827

if.then:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.668, i32 0, i32 0)), !dbg !7828
  %3 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7830
  %g = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %3, i32 0, i32 0, !dbg !7831
  %4 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !7831
  %codec_opts = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %4, i32 0, i32 4, !dbg !7832
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !7833
  %call1 = call i32 @av_dict_set(%struct.AVDictionary** %codec_opts, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.669, i32 0, i32 0), i8* %5, i32 0), !dbg !7834
  store i32 0, i32* %retval, align 4, !dbg !7835
  br label %return, !dbg !7835

if.end:                                           ; preds = %entry
  %6 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7836
  %g2 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %6, i32 0, i32 0, !dbg !7837
  %7 = load %struct.OptionGroup*, %struct.OptionGroup** %g2, align 8, !dbg !7837
  %codec_opts3 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %7, i32 0, i32 4, !dbg !7838
  %8 = load i8*, i8** %opt.addr, align 8, !dbg !7839
  %9 = load i8*, i8** %arg.addr, align 8, !dbg !7840
  %call4 = call i32 @av_dict_set(%struct.AVDictionary** %codec_opts3, i8* %8, i8* %9, i32 0), !dbg !7841
  store i32 0, i32* %retval, align 4, !dbg !7842
  br label %return, !dbg !7842

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !7843
  ret i32 %10, !dbg !7843
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_filter_complex(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !7844 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7845, metadata !1898), !dbg !7846
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7847, metadata !1898), !dbg !7848
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7849, metadata !1898), !dbg !7850
  %0 = load %struct.FilterGraph**, %struct.FilterGraph*** @filtergraphs, align 8, !dbg !7851
  %1 = bitcast %struct.FilterGraph** %0 to i8*, !dbg !7851
  %2 = load i32, i32* @nb_filtergraphs, align 4, !dbg !7852
  %add = add nsw i32 %2, 1, !dbg !7853
  %call = call i8* @grow_array(i8* %1, i32 8, i32* @nb_filtergraphs, i32 %add), !dbg !7854
  %3 = bitcast i8* %call to %struct.FilterGraph**, !dbg !7854
  store %struct.FilterGraph** %3, %struct.FilterGraph*** @filtergraphs, align 8, !dbg !7855
  %call1 = call noalias i8* @av_mallocz(i64 64), !dbg !7856
  %4 = bitcast i8* %call1 to %struct.FilterGraph*, !dbg !7856
  %5 = load i32, i32* @nb_filtergraphs, align 4, !dbg !7858
  %sub = sub nsw i32 %5, 1, !dbg !7859
  %idxprom = sext i32 %sub to i64, !dbg !7860
  %6 = load %struct.FilterGraph**, %struct.FilterGraph*** @filtergraphs, align 8, !dbg !7860
  %arrayidx = getelementptr inbounds %struct.FilterGraph*, %struct.FilterGraph** %6, i64 %idxprom, !dbg !7860
  store %struct.FilterGraph* %4, %struct.FilterGraph** %arrayidx, align 8, !dbg !7861
  %tobool = icmp ne %struct.FilterGraph* %4, null, !dbg !7861
  br i1 %tobool, label %if.end, label %if.then, !dbg !7862

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7863
  br label %return, !dbg !7863

if.end:                                           ; preds = %entry
  %7 = load i32, i32* @nb_filtergraphs, align 4, !dbg !7864
  %sub2 = sub nsw i32 %7, 1, !dbg !7865
  %8 = load i32, i32* @nb_filtergraphs, align 4, !dbg !7866
  %sub3 = sub nsw i32 %8, 1, !dbg !7867
  %idxprom4 = sext i32 %sub3 to i64, !dbg !7868
  %9 = load %struct.FilterGraph**, %struct.FilterGraph*** @filtergraphs, align 8, !dbg !7868
  %arrayidx5 = getelementptr inbounds %struct.FilterGraph*, %struct.FilterGraph** %9, i64 %idxprom4, !dbg !7868
  %10 = load %struct.FilterGraph*, %struct.FilterGraph** %arrayidx5, align 8, !dbg !7868
  %index = getelementptr inbounds %struct.FilterGraph, %struct.FilterGraph* %10, i32 0, i32 0, !dbg !7869
  store i32 %sub2, i32* %index, align 8, !dbg !7870
  %11 = load i8*, i8** %arg.addr, align 8, !dbg !7871
  %call6 = call noalias i8* @av_strdup(i8* %11), !dbg !7872
  %12 = load i32, i32* @nb_filtergraphs, align 4, !dbg !7873
  %sub7 = sub nsw i32 %12, 1, !dbg !7874
  %idxprom8 = sext i32 %sub7 to i64, !dbg !7875
  %13 = load %struct.FilterGraph**, %struct.FilterGraph*** @filtergraphs, align 8, !dbg !7875
  %arrayidx9 = getelementptr inbounds %struct.FilterGraph*, %struct.FilterGraph** %13, i64 %idxprom8, !dbg !7875
  %14 = load %struct.FilterGraph*, %struct.FilterGraph** %arrayidx9, align 8, !dbg !7875
  %graph_desc = getelementptr inbounds %struct.FilterGraph, %struct.FilterGraph* %14, i32 0, i32 1, !dbg !7876
  store i8* %call6, i8** %graph_desc, align 8, !dbg !7877
  %15 = load i32, i32* @nb_filtergraphs, align 4, !dbg !7878
  %sub10 = sub nsw i32 %15, 1, !dbg !7880
  %idxprom11 = sext i32 %sub10 to i64, !dbg !7881
  %16 = load %struct.FilterGraph**, %struct.FilterGraph*** @filtergraphs, align 8, !dbg !7881
  %arrayidx12 = getelementptr inbounds %struct.FilterGraph*, %struct.FilterGraph** %16, i64 %idxprom11, !dbg !7881
  %17 = load %struct.FilterGraph*, %struct.FilterGraph** %arrayidx12, align 8, !dbg !7881
  %graph_desc13 = getelementptr inbounds %struct.FilterGraph, %struct.FilterGraph* %17, i32 0, i32 1, !dbg !7882
  %18 = load i8*, i8** %graph_desc13, align 8, !dbg !7882
  %tobool14 = icmp ne i8* %18, null, !dbg !7881
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !7883

if.then15:                                        ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !7884
  br label %return, !dbg !7884

if.end16:                                         ; preds = %if.end
  store i32 1, i32* @input_stream_potentially_available, align 4, !dbg !7885
  store i32 0, i32* %retval, align 4, !dbg !7886
  br label %return, !dbg !7886

return:                                           ; preds = %if.end16, %if.then15, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !7887
  ret i32 %19, !dbg !7887
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_filter_complex_script(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !7888 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %graph_desc = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7889, metadata !1898), !dbg !7890
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7891, metadata !1898), !dbg !7892
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7893, metadata !1898), !dbg !7894
  call void @llvm.dbg.declare(metadata i8** %graph_desc, metadata !7895, metadata !1898), !dbg !7896
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7897
  %call = call i8* @read_file(i8* %0), !dbg !7898
  store i8* %call, i8** %graph_desc, align 8, !dbg !7896
  %1 = load i8*, i8** %graph_desc, align 8, !dbg !7899
  %tobool = icmp ne i8* %1, null, !dbg !7899
  br i1 %tobool, label %if.end, label %if.then, !dbg !7901

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7902
  br label %return, !dbg !7902

if.end:                                           ; preds = %entry
  %2 = load %struct.FilterGraph**, %struct.FilterGraph*** @filtergraphs, align 8, !dbg !7903
  %3 = bitcast %struct.FilterGraph** %2 to i8*, !dbg !7903
  %4 = load i32, i32* @nb_filtergraphs, align 4, !dbg !7904
  %add = add nsw i32 %4, 1, !dbg !7905
  %call1 = call i8* @grow_array(i8* %3, i32 8, i32* @nb_filtergraphs, i32 %add), !dbg !7906
  %5 = bitcast i8* %call1 to %struct.FilterGraph**, !dbg !7906
  store %struct.FilterGraph** %5, %struct.FilterGraph*** @filtergraphs, align 8, !dbg !7907
  %call2 = call noalias i8* @av_mallocz(i64 64), !dbg !7908
  %6 = bitcast i8* %call2 to %struct.FilterGraph*, !dbg !7908
  %7 = load i32, i32* @nb_filtergraphs, align 4, !dbg !7910
  %sub = sub nsw i32 %7, 1, !dbg !7911
  %idxprom = sext i32 %sub to i64, !dbg !7912
  %8 = load %struct.FilterGraph**, %struct.FilterGraph*** @filtergraphs, align 8, !dbg !7912
  %arrayidx = getelementptr inbounds %struct.FilterGraph*, %struct.FilterGraph** %8, i64 %idxprom, !dbg !7912
  store %struct.FilterGraph* %6, %struct.FilterGraph** %arrayidx, align 8, !dbg !7913
  %tobool3 = icmp ne %struct.FilterGraph* %6, null, !dbg !7913
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !7914

if.then4:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !7915
  br label %return, !dbg !7915

if.end5:                                          ; preds = %if.end
  %9 = load i32, i32* @nb_filtergraphs, align 4, !dbg !7916
  %sub6 = sub nsw i32 %9, 1, !dbg !7917
  %10 = load i32, i32* @nb_filtergraphs, align 4, !dbg !7918
  %sub7 = sub nsw i32 %10, 1, !dbg !7919
  %idxprom8 = sext i32 %sub7 to i64, !dbg !7920
  %11 = load %struct.FilterGraph**, %struct.FilterGraph*** @filtergraphs, align 8, !dbg !7920
  %arrayidx9 = getelementptr inbounds %struct.FilterGraph*, %struct.FilterGraph** %11, i64 %idxprom8, !dbg !7920
  %12 = load %struct.FilterGraph*, %struct.FilterGraph** %arrayidx9, align 8, !dbg !7920
  %index = getelementptr inbounds %struct.FilterGraph, %struct.FilterGraph* %12, i32 0, i32 0, !dbg !7921
  store i32 %sub6, i32* %index, align 8, !dbg !7922
  %13 = load i8*, i8** %graph_desc, align 8, !dbg !7923
  %14 = load i32, i32* @nb_filtergraphs, align 4, !dbg !7924
  %sub10 = sub nsw i32 %14, 1, !dbg !7925
  %idxprom11 = sext i32 %sub10 to i64, !dbg !7926
  %15 = load %struct.FilterGraph**, %struct.FilterGraph*** @filtergraphs, align 8, !dbg !7926
  %arrayidx12 = getelementptr inbounds %struct.FilterGraph*, %struct.FilterGraph** %15, i64 %idxprom11, !dbg !7926
  %16 = load %struct.FilterGraph*, %struct.FilterGraph** %arrayidx12, align 8, !dbg !7926
  %graph_desc13 = getelementptr inbounds %struct.FilterGraph, %struct.FilterGraph* %16, i32 0, i32 1, !dbg !7927
  store i8* %13, i8** %graph_desc13, align 8, !dbg !7928
  store i32 1, i32* @input_stream_potentially_available, align 4, !dbg !7929
  store i32 0, i32* %retval, align 4, !dbg !7930
  br label %return, !dbg !7930

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !7931
  ret i32 %17, !dbg !7931
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_attach(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !7932 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7933, metadata !1898), !dbg !7934
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7935, metadata !1898), !dbg !7936
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7937, metadata !1898), !dbg !7938
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !7939, metadata !1898), !dbg !7940
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !7941
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !7941
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !7940
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7942
  %attachments = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %2, i32 0, i32 41, !dbg !7943
  %3 = load i8**, i8*** %attachments, align 8, !dbg !7943
  %4 = bitcast i8** %3 to i8*, !dbg !7942
  %5 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7944
  %nb_attachments = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %5, i32 0, i32 42, !dbg !7945
  %6 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7946
  %nb_attachments1 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %6, i32 0, i32 42, !dbg !7947
  %7 = load i32, i32* %nb_attachments1, align 8, !dbg !7947
  %add = add nsw i32 %7, 1, !dbg !7948
  %call = call i8* @grow_array(i8* %4, i32 8, i32* %nb_attachments, i32 %add), !dbg !7949
  %8 = bitcast i8* %call to i8**, !dbg !7949
  %9 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7950
  %attachments2 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %9, i32 0, i32 41, !dbg !7951
  store i8** %8, i8*** %attachments2, align 8, !dbg !7952
  %10 = load i8*, i8** %arg.addr, align 8, !dbg !7953
  %11 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7954
  %nb_attachments3 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %11, i32 0, i32 42, !dbg !7955
  %12 = load i32, i32* %nb_attachments3, align 8, !dbg !7955
  %sub = sub nsw i32 %12, 1, !dbg !7956
  %idxprom = sext i32 %sub to i64, !dbg !7957
  %13 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7957
  %attachments4 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %13, i32 0, i32 41, !dbg !7958
  %14 = load i8**, i8*** %attachments4, align 8, !dbg !7958
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %idxprom, !dbg !7957
  store i8* %10, i8** %arrayidx, align 8, !dbg !7959
  ret i32 0, !dbg !7960
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_video_frames(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !7961 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7962, metadata !1898), !dbg !7963
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7964, metadata !1898), !dbg !7965
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7966, metadata !1898), !dbg !7967
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !7968, metadata !1898), !dbg !7969
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !7970
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !7970
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !7969
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7971
  %3 = bitcast %struct.OptionsContext* %2 to i8*, !dbg !7971
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !7972
  %call = call i32 @parse_option(i8* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.670, i32 0, i32 0), i8* %4, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7973
  ret i32 %call, !dbg !7974
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_video_codec(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !7975 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7976, metadata !1898), !dbg !7977
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7978, metadata !1898), !dbg !7979
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7980, metadata !1898), !dbg !7981
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !7982, metadata !1898), !dbg !7983
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !7984
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !7984
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !7983
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !7985
  %3 = bitcast %struct.OptionsContext* %2 to i8*, !dbg !7985
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !7986
  %call = call i32 @parse_option(i8* %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.671, i32 0, i32 0), i8* %4, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !7987
  ret i32 %call, !dbg !7988
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_sameq(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !7989 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !7990, metadata !1898), !dbg !7991
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !7992, metadata !1898), !dbg !7993
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7994, metadata !1898), !dbg !7995
  %0 = load i8*, i8** %opt.addr, align 8, !dbg !7996
  %1 = load i8*, i8** %opt.addr, align 8, !dbg !7997
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([170 x i8], [170 x i8]* @.str.672, i32 0, i32 0), i8* %0, i8* %1), !dbg !7998
  ret i32 -22, !dbg !7999
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_timecode(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8000 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  %tcr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8001, metadata !1898), !dbg !8002
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8003, metadata !1898), !dbg !8004
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8005, metadata !1898), !dbg !8006
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !8007, metadata !1898), !dbg !8008
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8009
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !8009
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !8008
  call void @llvm.dbg.declare(metadata i8** %tcr, metadata !8010, metadata !1898), !dbg !8011
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !8012
  %call = call i8* (i8*, ...) @av_asprintf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.673, i32 0, i32 0), i8* %2), !dbg !8013
  store i8* %call, i8** %tcr, align 8, !dbg !8011
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8014, metadata !1898), !dbg !8015
  %3 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8016
  %4 = bitcast %struct.OptionsContext* %3 to i8*, !dbg !8016
  %5 = load i8*, i8** %tcr, align 8, !dbg !8017
  %call1 = call i32 @parse_option(i8* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.674, i32 0, i32 0), i8* %5, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !8018
  store i32 %call1, i32* %ret, align 4, !dbg !8015
  %6 = load i32, i32* %ret, align 4, !dbg !8019
  %cmp = icmp sge i32 %6, 0, !dbg !8021
  br i1 %cmp, label %if.then, label %if.end, !dbg !8022

if.then:                                          ; preds = %entry
  %7 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8023
  %g = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %7, i32 0, i32 0, !dbg !8024
  %8 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !8024
  %codec_opts = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %8, i32 0, i32 4, !dbg !8025
  %9 = load i8*, i8** %arg.addr, align 8, !dbg !8026
  %call2 = call i32 @av_dict_set(%struct.AVDictionary** %codec_opts, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.491, i32 0, i32 0), i8* %9, i32 0), !dbg !8027
  store i32 %call2, i32* %ret, align 4, !dbg !8028
  br label %if.end, !dbg !8029

if.end:                                           ; preds = %if.then, %entry
  %10 = load i8*, i8** %tcr, align 8, !dbg !8030
  call void @av_free(i8* %10), !dbg !8031
  %11 = load i32, i32* %ret, align 4, !dbg !8032
  ret i32 %11, !dbg !8033
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_vstats(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8034 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %filename = alloca [40 x i8], align 16
  %today2 = alloca i64, align 8
  %today = alloca %struct.tm*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8035, metadata !1898), !dbg !8036
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8037, metadata !1898), !dbg !8038
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8039, metadata !1898), !dbg !8040
  call void @llvm.dbg.declare(metadata [40 x i8]* %filename, metadata !8041, metadata !1898), !dbg !8045
  call void @llvm.dbg.declare(metadata i64* %today2, metadata !8046, metadata !1898), !dbg !8047
  %call = call i64 @time(i64* null) #12, !dbg !8048
  store i64 %call, i64* %today2, align 8, !dbg !8047
  call void @llvm.dbg.declare(metadata %struct.tm** %today, metadata !8049, metadata !1898), !dbg !8051
  %call1 = call %struct.tm* @localtime(i64* %today2) #12, !dbg !8052
  store %struct.tm* %call1, %struct.tm** %today, align 8, !dbg !8051
  %0 = load %struct.tm*, %struct.tm** %today, align 8, !dbg !8053
  %tobool = icmp ne %struct.tm* %0, null, !dbg !8053
  br i1 %tobool, label %if.end, label %if.then, !dbg !8055

if.then:                                          ; preds = %entry
  %call2 = call i32* @__errno_location() #1, !dbg !8056
  %1 = load i32, i32* %call2, align 4, !dbg !8058
  %call3 = call i8* @strerror(i32 %1) #12, !dbg !8059
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.675, i32 0, i32 0), i8* %call3), !dbg !8061
  call void @exit_program(i32 1) #11, !dbg !8063
  unreachable, !dbg !8063

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [40 x i8], [40 x i8]* %filename, i32 0, i32 0, !dbg !8064
  %2 = load %struct.tm*, %struct.tm** %today, align 8, !dbg !8065
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %2, i32 0, i32 2, !dbg !8066
  %3 = load i32, i32* %tm_hour, align 8, !dbg !8066
  %4 = load %struct.tm*, %struct.tm** %today, align 8, !dbg !8067
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %4, i32 0, i32 1, !dbg !8068
  %5 = load i32, i32* %tm_min, align 4, !dbg !8068
  %6 = load %struct.tm*, %struct.tm** %today, align 8, !dbg !8069
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %6, i32 0, i32 0, !dbg !8070
  %7 = load i32, i32* %tm_sec, align 8, !dbg !8070
  %call4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 40, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.676, i32 0, i32 0), i32 %3, i32 %5, i32 %7) #12, !dbg !8071
  %8 = load i8*, i8** %opt.addr, align 8, !dbg !8072
  %arraydecay5 = getelementptr inbounds [40 x i8], [40 x i8]* %filename, i32 0, i32 0, !dbg !8073
  %call6 = call i32 @opt_vstats_file(i8* null, i8* %8, i8* %arraydecay5), !dbg !8074
  ret i32 %call6, !dbg !8075
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_vstats_file(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8076 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8077, metadata !1898), !dbg !8078
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8079, metadata !1898), !dbg !8080
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8081, metadata !1898), !dbg !8082
  %0 = load i8*, i8** @vstats_filename, align 8, !dbg !8083
  call void @av_free(i8* %0), !dbg !8084
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8085
  %call = call noalias i8* @av_strdup(i8* %1), !dbg !8086
  store i8* %call, i8** @vstats_filename, align 8, !dbg !8087
  ret i32 0, !dbg !8088
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_video_filters(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8089 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8090, metadata !1898), !dbg !8091
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8092, metadata !1898), !dbg !8093
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8094, metadata !1898), !dbg !8095
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !8096, metadata !1898), !dbg !8097
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8098
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !8098
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !8097
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8099
  %3 = bitcast %struct.OptionsContext* %2 to i8*, !dbg !8099
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !8100
  %call = call i32 @parse_option(i8* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.677, i32 0, i32 0), i8* %4, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !8101
  ret i32 %call, !dbg !8102
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_old2new(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8103 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  %s = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8104, metadata !1898), !dbg !8105
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8106, metadata !1898), !dbg !8107
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8108, metadata !1898), !dbg !8109
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !8110, metadata !1898), !dbg !8111
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8112
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !8112
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !8111
  call void @llvm.dbg.declare(metadata i8** %s, metadata !8113, metadata !1898), !dbg !8114
  %2 = load i8*, i8** %opt.addr, align 8, !dbg !8115
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 1, !dbg !8116
  %3 = load i8*, i8** %opt.addr, align 8, !dbg !8117
  %4 = load i8, i8* %3, align 1, !dbg !8118
  %conv = sext i8 %4 to i32, !dbg !8118
  %call = call i8* (i8*, ...) @av_asprintf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.678, i32 0, i32 0), i8* %add.ptr, i32 %conv), !dbg !8119
  store i8* %call, i8** %s, align 8, !dbg !8114
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8120, metadata !1898), !dbg !8121
  %5 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8122
  %6 = bitcast %struct.OptionsContext* %5 to i8*, !dbg !8122
  %7 = load i8*, i8** %s, align 8, !dbg !8123
  %8 = load i8*, i8** %arg.addr, align 8, !dbg !8124
  %call1 = call i32 @parse_option(i8* %6, i8* %7, i8* %8, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !8125
  store i32 %call1, i32* %ret, align 4, !dbg !8121
  %9 = load i8*, i8** %s, align 8, !dbg !8126
  call void @av_free(i8* %9), !dbg !8127
  %10 = load i32, i32* %ret, align 4, !dbg !8128
  ret i32 %10, !dbg !8129
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_streamid(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8130 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  %idx = alloca i32, align 4
  %p = alloca i8*, align 8
  %idx_str = alloca [16 x i8], align 16
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8131, metadata !1898), !dbg !8132
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8133, metadata !1898), !dbg !8134
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8135, metadata !1898), !dbg !8136
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !8137, metadata !1898), !dbg !8138
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8139
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !8139
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !8138
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !8140, metadata !1898), !dbg !8141
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8142, metadata !1898), !dbg !8143
  call void @llvm.dbg.declare(metadata [16 x i8]* %idx_str, metadata !8144, metadata !1898), !dbg !8148
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %idx_str, i32 0, i32 0, !dbg !8149
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !8150
  %call = call i64 @av_strlcpy(i8* %arraydecay, i8* %2, i64 16), !dbg !8151
  %arraydecay1 = getelementptr inbounds [16 x i8], [16 x i8]* %idx_str, i32 0, i32 0, !dbg !8152
  %call2 = call i8* @strchr(i8* %arraydecay1, i32 58) #10, !dbg !8153
  store i8* %call2, i8** %p, align 8, !dbg !8154
  %3 = load i8*, i8** %p, align 8, !dbg !8155
  %tobool = icmp ne i8* %3, null, !dbg !8155
  br i1 %tobool, label %if.end, label %if.then, !dbg !8157

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !8158
  %5 = load i8*, i8** %opt.addr, align 8, !dbg !8160
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.679, i32 0, i32 0), i8* %4, i8* %5), !dbg !8161
  call void @exit_program(i32 1) #11, !dbg !8162
  unreachable, !dbg !8162

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %p, align 8, !dbg !8163
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8163
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8163
  store i8 0, i8* %6, align 1, !dbg !8164
  %7 = load i8*, i8** %opt.addr, align 8, !dbg !8165
  %arraydecay3 = getelementptr inbounds [16 x i8], [16 x i8]* %idx_str, i32 0, i32 0, !dbg !8166
  %call4 = call double @parse_number_or_die(i8* %7, i8* %arraydecay3, i32 128, double 0.000000e+00, double 1.023000e+03), !dbg !8167
  %conv = fptosi double %call4 to i32, !dbg !8167
  store i32 %conv, i32* %idx, align 4, !dbg !8168
  %8 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8169
  %streamid_map = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %8, i32 0, i32 55, !dbg !8170
  %9 = load i32*, i32** %streamid_map, align 8, !dbg !8170
  %10 = bitcast i32* %9 to i8*, !dbg !8169
  %11 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8171
  %nb_streamid_map = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %11, i32 0, i32 56, !dbg !8172
  %12 = load i32, i32* %idx, align 4, !dbg !8173
  %add = add nsw i32 %12, 1, !dbg !8174
  %call5 = call i8* @grow_array(i8* %10, i32 4, i32* %nb_streamid_map, i32 %add), !dbg !8175
  %13 = bitcast i8* %call5 to i32*, !dbg !8175
  %14 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8176
  %streamid_map6 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %14, i32 0, i32 55, !dbg !8177
  store i32* %13, i32** %streamid_map6, align 8, !dbg !8178
  %15 = load i8*, i8** %opt.addr, align 8, !dbg !8179
  %16 = load i8*, i8** %p, align 8, !dbg !8180
  %call7 = call double @parse_number_or_die(i8* %15, i8* %16, i32 128, double 0.000000e+00, double 0x41DFFFFFFFC00000), !dbg !8181
  %conv8 = fptosi double %call7 to i32, !dbg !8181
  %17 = load i32, i32* %idx, align 4, !dbg !8182
  %idxprom = sext i32 %17 to i64, !dbg !8183
  %18 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8183
  %streamid_map9 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %18, i32 0, i32 55, !dbg !8184
  %19 = load i32*, i32** %streamid_map9, align 8, !dbg !8184
  %arrayidx = getelementptr inbounds i32, i32* %19, i64 %idxprom, !dbg !8183
  store i32 %conv8, i32* %arrayidx, align 4, !dbg !8185
  ret i32 0, !dbg !8186
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_bitrate(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8187 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8188, metadata !1898), !dbg !8189
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8190, metadata !1898), !dbg !8191
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8192, metadata !1898), !dbg !8193
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !8194, metadata !1898), !dbg !8195
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8196
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !8196
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !8195
  %2 = load i8*, i8** %opt.addr, align 8, !dbg !8197
  %call = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.319, i32 0, i32 0)) #10, !dbg !8199
  %tobool = icmp ne i32 %call, 0, !dbg !8199
  br i1 %tobool, label %if.else, label %if.then, !dbg !8200

if.then:                                          ; preds = %entry
  %3 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8201
  %g = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %3, i32 0, i32 0, !dbg !8203
  %4 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !8203
  %codec_opts = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %4, i32 0, i32 4, !dbg !8204
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !8205
  %call1 = call i32 @av_dict_set(%struct.AVDictionary** %codec_opts, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.628, i32 0, i32 0), i8* %5, i32 0), !dbg !8206
  store i32 0, i32* %retval, align 4, !dbg !8207
  br label %return, !dbg !8207

if.else:                                          ; preds = %entry
  %6 = load i8*, i8** %opt.addr, align 8, !dbg !8208
  %call2 = call i32 @strcmp(i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.322, i32 0, i32 0)) #10, !dbg !8210
  %tobool3 = icmp ne i32 %call2, 0, !dbg !8210
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !8211

if.then4:                                         ; preds = %if.else
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.680, i32 0, i32 0)), !dbg !8212
  %7 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8214
  %g5 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %7, i32 0, i32 0, !dbg !8215
  %8 = load %struct.OptionGroup*, %struct.OptionGroup** %g5, align 8, !dbg !8215
  %codec_opts6 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %8, i32 0, i32 4, !dbg !8216
  %9 = load i8*, i8** %arg.addr, align 8, !dbg !8217
  %call7 = call i32 @av_dict_set(%struct.AVDictionary** %codec_opts6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.622, i32 0, i32 0), i8* %9, i32 0), !dbg !8218
  store i32 0, i32* %retval, align 4, !dbg !8219
  br label %return, !dbg !8219

if.end:                                           ; preds = %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end
  %10 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8220
  %g9 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %10, i32 0, i32 0, !dbg !8221
  %11 = load %struct.OptionGroup*, %struct.OptionGroup** %g9, align 8, !dbg !8221
  %codec_opts10 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %11, i32 0, i32 4, !dbg !8222
  %12 = load i8*, i8** %opt.addr, align 8, !dbg !8223
  %13 = load i8*, i8** %arg.addr, align 8, !dbg !8224
  %call11 = call i32 @av_dict_set(%struct.AVDictionary** %codec_opts10, i8* %12, i8* %13, i32 0), !dbg !8225
  store i32 0, i32* %retval, align 4, !dbg !8226
  br label %return, !dbg !8226

return:                                           ; preds = %if.end8, %if.then4, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !8227
  ret i32 %14, !dbg !8227
}

; Function Attrs: nounwind uwtable
define internal i32 @show_hwaccels(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8228 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %type = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8229, metadata !1898), !dbg !8230
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8231, metadata !1898), !dbg !8232
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8233, metadata !1898), !dbg !8234
  call void @llvm.dbg.declare(metadata i32* %type, metadata !8235, metadata !1898), !dbg !8236
  store i32 0, i32* %type, align 4, !dbg !8236
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8237, metadata !1898), !dbg !8238
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.681, i32 0, i32 0)), !dbg !8239
  br label %while.cond, !dbg !8240

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %type, align 4, !dbg !8241
  %call1 = call i32 @av_hwdevice_iterate_types(i32 %0), !dbg !8243
  store i32 %call1, i32* %type, align 4, !dbg !8244
  %cmp = icmp ne i32 %call1, 0, !dbg !8245
  br i1 %cmp, label %while.body, label %while.end, !dbg !8246

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %type, align 4, !dbg !8247
  %call2 = call i8* @av_hwdevice_get_type_name(i32 %1), !dbg !8248
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0), i8* %call2), !dbg !8249
  br label %while.cond, !dbg !8250, !llvm.loop !8252

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %i, align 4, !dbg !8253
  br label %for.cond, !dbg !8255

for.cond:                                         ; preds = %for.inc, %while.end
  %2 = load i32, i32* %i, align 4, !dbg !8256
  %idxprom = sext i32 %2 to i64, !dbg !8259
  %arrayidx = getelementptr inbounds [1 x %struct.HWAccel], [1 x %struct.HWAccel]* @hwaccels, i64 0, i64 %idxprom, !dbg !8259
  %name = getelementptr inbounds %struct.HWAccel, %struct.HWAccel* %arrayidx, i32 0, i32 0, !dbg !8260
  %3 = load i8*, i8** %name, align 8, !dbg !8260
  %tobool = icmp ne i8* %3, null, !dbg !8261
  br i1 %tobool, label %for.body, label %for.end, !dbg !8261

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !8262
  %idxprom4 = sext i32 %4 to i64, !dbg !8263
  %arrayidx5 = getelementptr inbounds [1 x %struct.HWAccel], [1 x %struct.HWAccel]* @hwaccels, i64 0, i64 %idxprom4, !dbg !8263
  %name6 = getelementptr inbounds %struct.HWAccel, %struct.HWAccel* %arrayidx5, i32 0, i32 0, !dbg !8264
  %5 = load i8*, i8** %name6, align 8, !dbg !8264
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0), i8* %5), !dbg !8265
  br label %for.inc, !dbg !8265

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !8266
  %inc = add nsw i32 %6, 1, !dbg !8266
  store i32 %inc, i32* %i, align 4, !dbg !8266
  br label %for.cond, !dbg !8268, !llvm.loop !8269

for.end:                                          ; preds = %for.cond
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0)), !dbg !8271
  ret i32 0, !dbg !8272
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_audio_frames(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8273 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8274, metadata !1898), !dbg !8275
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8276, metadata !1898), !dbg !8277
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8278, metadata !1898), !dbg !8279
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !8280, metadata !1898), !dbg !8281
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8282
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !8282
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !8281
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8283
  %3 = bitcast %struct.OptionsContext* %2 to i8*, !dbg !8283
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !8284
  %call = call i32 @parse_option(i8* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.682, i32 0, i32 0), i8* %4, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !8285
  ret i32 %call, !dbg !8286
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_audio_qscale(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8287 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8288, metadata !1898), !dbg !8289
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8290, metadata !1898), !dbg !8291
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8292, metadata !1898), !dbg !8293
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !8294, metadata !1898), !dbg !8295
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8296
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !8296
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !8295
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8297
  %3 = bitcast %struct.OptionsContext* %2 to i8*, !dbg !8297
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !8298
  %call = call i32 @parse_option(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.683, i32 0, i32 0), i8* %4, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !8299
  ret i32 %call, !dbg !8300
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_audio_codec(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8301 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8302, metadata !1898), !dbg !8303
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8304, metadata !1898), !dbg !8305
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8306, metadata !1898), !dbg !8307
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !8308, metadata !1898), !dbg !8309
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8310
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !8310
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !8309
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8311
  %3 = bitcast %struct.OptionsContext* %2 to i8*, !dbg !8311
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !8312
  %call = call i32 @parse_option(i8* %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.684, i32 0, i32 0), i8* %4, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !8313
  ret i32 %call, !dbg !8314
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_channel_layout(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8315 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  %layout_str = alloca [32 x i8], align 16
  %stream_str = alloca i8*, align 8
  %ac_str = alloca i8*, align 8
  %ret = alloca i32, align 4
  %channels = alloca i32, align 4
  %ac_str_size = alloca i32, align 4
  %layout = alloca i64, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8316, metadata !1898), !dbg !8317
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8318, metadata !1898), !dbg !8319
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8320, metadata !1898), !dbg !8321
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !8322, metadata !1898), !dbg !8323
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8324
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !8324
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !8323
  call void @llvm.dbg.declare(metadata [32 x i8]* %layout_str, metadata !8325, metadata !1898), !dbg !8329
  call void @llvm.dbg.declare(metadata i8** %stream_str, metadata !8330, metadata !1898), !dbg !8331
  call void @llvm.dbg.declare(metadata i8** %ac_str, metadata !8332, metadata !1898), !dbg !8333
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8334, metadata !1898), !dbg !8335
  call void @llvm.dbg.declare(metadata i32* %channels, metadata !8336, metadata !1898), !dbg !8337
  call void @llvm.dbg.declare(metadata i32* %ac_str_size, metadata !8338, metadata !1898), !dbg !8339
  call void @llvm.dbg.declare(metadata i64* %layout, metadata !8340, metadata !1898), !dbg !8341
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !8342
  %call = call i64 @av_get_channel_layout(i8* %2), !dbg !8343
  store i64 %call, i64* %layout, align 8, !dbg !8344
  %3 = load i64, i64* %layout, align 8, !dbg !8345
  %tobool = icmp ne i64 %3, 0, !dbg !8345
  br i1 %tobool, label %if.end, label %if.then, !dbg !8347

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !8348
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.685, i32 0, i32 0), i8* %4), !dbg !8350
  store i32 -22, i32* %retval, align 4, !dbg !8351
  br label %return, !dbg !8351

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %layout_str, i32 0, i32 0, !dbg !8352
  %5 = load i64, i64* %layout, align 8, !dbg !8353
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.686, i32 0, i32 0), i64 %5) #12, !dbg !8354
  %6 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8355
  %7 = load i8*, i8** %opt.addr, align 8, !dbg !8356
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %layout_str, i32 0, i32 0, !dbg !8357
  %call3 = call i32 @opt_default_new(%struct.OptionsContext* %6, i8* %7, i8* %arraydecay2), !dbg !8358
  store i32 %call3, i32* %ret, align 4, !dbg !8359
  %8 = load i32, i32* %ret, align 4, !dbg !8360
  %cmp = icmp slt i32 %8, 0, !dbg !8362
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !8363

if.then4:                                         ; preds = %if.end
  %9 = load i32, i32* %ret, align 4, !dbg !8364
  store i32 %9, i32* %retval, align 4, !dbg !8365
  br label %return, !dbg !8365

if.end5:                                          ; preds = %if.end
  %10 = load i64, i64* %layout, align 8, !dbg !8366
  %call6 = call i32 @av_get_channel_layout_nb_channels(i64 %10), !dbg !8367
  store i32 %call6, i32* %channels, align 4, !dbg !8368
  %arraydecay7 = getelementptr inbounds [32 x i8], [32 x i8]* %layout_str, i32 0, i32 0, !dbg !8369
  %11 = load i32, i32* %channels, align 4, !dbg !8370
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay7, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.687, i32 0, i32 0), i32 %11) #12, !dbg !8371
  %12 = load i8*, i8** %opt.addr, align 8, !dbg !8372
  %call9 = call i8* @strchr(i8* %12, i32 58) #10, !dbg !8373
  store i8* %call9, i8** %stream_str, align 8, !dbg !8374
  %13 = load i8*, i8** %stream_str, align 8, !dbg !8375
  %tobool10 = icmp ne i8* %13, null, !dbg !8375
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !8375

cond.true:                                        ; preds = %if.end5
  %14 = load i8*, i8** %stream_str, align 8, !dbg !8376
  %call11 = call i64 @strlen(i8* %14) #10, !dbg !8378
  br label %cond.end, !dbg !8379

cond.false:                                       ; preds = %if.end5
  br label %cond.end, !dbg !8380

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call11, %cond.true ], [ 0, %cond.false ], !dbg !8382
  %add = add i64 3, %cond, !dbg !8384
  %conv = trunc i64 %add to i32, !dbg !8385
  store i32 %conv, i32* %ac_str_size, align 4, !dbg !8386
  %15 = load i32, i32* %ac_str_size, align 4, !dbg !8387
  %conv12 = sext i32 %15 to i64, !dbg !8387
  %call13 = call noalias i8* @av_mallocz(i64 %conv12), !dbg !8388
  store i8* %call13, i8** %ac_str, align 8, !dbg !8389
  %16 = load i8*, i8** %ac_str, align 8, !dbg !8390
  %tobool14 = icmp ne i8* %16, null, !dbg !8390
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !8392

if.then15:                                        ; preds = %cond.end
  store i32 -12, i32* %retval, align 4, !dbg !8393
  br label %return, !dbg !8393

if.end16:                                         ; preds = %cond.end
  %17 = load i8*, i8** %ac_str, align 8, !dbg !8394
  %call17 = call i64 @av_strlcpy(i8* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.343, i32 0, i32 0), i64 3), !dbg !8395
  %18 = load i8*, i8** %stream_str, align 8, !dbg !8396
  %tobool18 = icmp ne i8* %18, null, !dbg !8396
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !8398

if.then19:                                        ; preds = %if.end16
  %19 = load i8*, i8** %ac_str, align 8, !dbg !8399
  %20 = load i8*, i8** %stream_str, align 8, !dbg !8400
  %21 = load i32, i32* %ac_str_size, align 4, !dbg !8401
  %conv20 = sext i32 %21 to i64, !dbg !8401
  %call21 = call i64 @av_strlcat(i8* %19, i8* %20, i64 %conv20), !dbg !8402
  br label %if.end22, !dbg !8402

if.end22:                                         ; preds = %if.then19, %if.end16
  %22 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8403
  %23 = bitcast %struct.OptionsContext* %22 to i8*, !dbg !8403
  %24 = load i8*, i8** %ac_str, align 8, !dbg !8404
  %arraydecay23 = getelementptr inbounds [32 x i8], [32 x i8]* %layout_str, i32 0, i32 0, !dbg !8405
  %call24 = call i32 @parse_option(i8* %23, i8* %24, i8* %arraydecay23, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !8406
  store i32 %call24, i32* %ret, align 4, !dbg !8407
  %25 = load i8*, i8** %ac_str, align 8, !dbg !8408
  call void @av_free(i8* %25), !dbg !8409
  %26 = load i32, i32* %ret, align 4, !dbg !8410
  store i32 %26, i32* %retval, align 4, !dbg !8411
  br label %return, !dbg !8411

return:                                           ; preds = %if.end22, %if.then15, %if.then4, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !8412
  ret i32 %27, !dbg !8412
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_audio_filters(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8413 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8414, metadata !1898), !dbg !8415
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8416, metadata !1898), !dbg !8417
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8418, metadata !1898), !dbg !8419
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !8420, metadata !1898), !dbg !8421
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8422
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !8422
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !8421
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8423
  %3 = bitcast %struct.OptionsContext* %2 to i8*, !dbg !8423
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !8424
  %call = call i32 @parse_option(i8* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.688, i32 0, i32 0), i8* %4, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !8425
  ret i32 %call, !dbg !8426
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_subtitle_codec(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8427 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8428, metadata !1898), !dbg !8429
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8430, metadata !1898), !dbg !8431
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8432, metadata !1898), !dbg !8433
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !8434, metadata !1898), !dbg !8435
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8436
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !8436
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !8435
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8437
  %3 = bitcast %struct.OptionsContext* %2 to i8*, !dbg !8437
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !8438
  %call = call i32 @parse_option(i8* %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.689, i32 0, i32 0), i8* %4, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !8439
  ret i32 %call, !dbg !8440
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_video_channel(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8441 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8442, metadata !1898), !dbg !8443
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8444, metadata !1898), !dbg !8445
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8446, metadata !1898), !dbg !8447
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.690, i32 0, i32 0)), !dbg !8448
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8449
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8450
  %call = call i32 @opt_default(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.376, i32 0, i32 0), i8* %1), !dbg !8451
  ret i32 %call, !dbg !8452
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_video_standard(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8453 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8454, metadata !1898), !dbg !8455
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8456, metadata !1898), !dbg !8457
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8458, metadata !1898), !dbg !8459
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.691, i32 0, i32 0)), !dbg !8460
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8461
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8462
  %call = call i32 @opt_default(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.379, i32 0, i32 0), i8* %1), !dbg !8463
  ret i32 %call, !dbg !8464
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_sdp_file(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8465 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8466, metadata !1898), !dbg !8467
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8468, metadata !1898), !dbg !8469
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8470, metadata !1898), !dbg !8471
  %0 = load i8*, i8** @sdp_filename, align 8, !dbg !8472
  call void @av_free(i8* %0), !dbg !8473
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8474
  %call = call noalias i8* @av_strdup(i8* %1), !dbg !8475
  store i8* %call, i8** @sdp_filename, align 8, !dbg !8476
  ret i32 0, !dbg !8477
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_preset(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8478 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  %f = alloca %struct._IO_FILE*, align 8
  %filename = alloca [1000 x i8], align 16
  %line = alloca [1000 x i8], align 16
  %tmp_line = alloca [1000 x i8], align 16
  %codec_name = alloca i8*, align 8
  %i = alloca i32, align 4
  %spec = alloca i8*, align 8
  %key = alloca i8*, align 8
  %value = alloca i8*, align 8
  %endptr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8479, metadata !1898), !dbg !8480
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8481, metadata !1898), !dbg !8482
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8483, metadata !1898), !dbg !8484
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !8485, metadata !1898), !dbg !8486
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8487
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !8487
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !8486
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %f, metadata !8488, metadata !1898), !dbg !8489
  store %struct._IO_FILE* null, %struct._IO_FILE** %f, align 8, !dbg !8489
  call void @llvm.dbg.declare(metadata [1000 x i8]* %filename, metadata !8490, metadata !1898), !dbg !8494
  call void @llvm.dbg.declare(metadata [1000 x i8]* %line, metadata !8495, metadata !1898), !dbg !8496
  call void @llvm.dbg.declare(metadata [1000 x i8]* %tmp_line, metadata !8497, metadata !1898), !dbg !8498
  call void @llvm.dbg.declare(metadata i8** %codec_name, metadata !8499, metadata !1898), !dbg !8500
  store i8* null, i8** %codec_name, align 8, !dbg !8500
  %2 = load i8*, i8** %opt.addr, align 8, !dbg !8501
  %3 = load i8, i8* %2, align 1, !dbg !8502
  %arrayidx = getelementptr inbounds [1000 x i8], [1000 x i8]* %tmp_line, i64 0, i64 0, !dbg !8503
  store i8 %3, i8* %arrayidx, align 16, !dbg !8504
  %arrayidx1 = getelementptr inbounds [1000 x i8], [1000 x i8]* %tmp_line, i64 0, i64 1, !dbg !8505
  store i8 0, i8* %arrayidx1, align 1, !dbg !8506
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8507, metadata !1898), !dbg !8509
  store i32 0, i32* %i, align 4, !dbg !8510
  br label %for.cond, !dbg !8512

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !8513
  %5 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8516
  %nb_codec_names = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %5, i32 0, i32 6, !dbg !8517
  %6 = load i32, i32* %nb_codec_names, align 8, !dbg !8517
  %cmp = icmp slt i32 %4, %6, !dbg !8518
  br i1 %cmp, label %for.body, label %for.end, !dbg !8519

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %spec, metadata !8520, metadata !1898), !dbg !8522
  %7 = load i32, i32* %i, align 4, !dbg !8523
  %idxprom = sext i32 %7 to i64, !dbg !8525
  %8 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8525
  %codec_names = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %8, i32 0, i32 5, !dbg !8526
  %9 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names, align 8, !dbg !8526
  %arrayidx2 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %9, i64 %idxprom, !dbg !8525
  %specifier = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx2, i32 0, i32 0, !dbg !8527
  %10 = load i8*, i8** %specifier, align 8, !dbg !8527
  store i8* %10, i8** %spec, align 8, !dbg !8528
  %11 = load i8*, i8** %spec, align 8, !dbg !8529
  %arraydecay = getelementptr inbounds [1000 x i8], [1000 x i8]* %tmp_line, i32 0, i32 0, !dbg !8530
  %call = call i32 @strcmp(i8* %11, i8* %arraydecay) #10, !dbg !8531
  %tobool = icmp ne i32 %call, 0, !dbg !8531
  br i1 %tobool, label %if.end, label %if.then, !dbg !8532

if.then:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !8533
  %idxprom3 = sext i32 %12 to i64, !dbg !8536
  %13 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8536
  %codec_names4 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %13, i32 0, i32 5, !dbg !8537
  %14 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names4, align 8, !dbg !8537
  %arrayidx5 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %14, i64 %idxprom3, !dbg !8536
  %u = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx5, i32 0, i32 1, !dbg !8538
  %str = bitcast %union.anon.1* %u to i8**, !dbg !8539
  %15 = load i8*, i8** %str, align 8, !dbg !8539
  store i8* %15, i8** %codec_name, align 8, !dbg !8540
  br label %if.end, !dbg !8541

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !8542

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !dbg !8544
  %inc = add nsw i32 %16, 1, !dbg !8544
  store i32 %inc, i32* %i, align 4, !dbg !8544
  br label %for.cond, !dbg !8546, !llvm.loop !8547

for.end:                                          ; preds = %for.cond
  %arraydecay6 = getelementptr inbounds [1000 x i8], [1000 x i8]* %filename, i32 0, i32 0, !dbg !8549
  %17 = load i8*, i8** %arg.addr, align 8, !dbg !8551
  %18 = load i8*, i8** %opt.addr, align 8, !dbg !8552
  %19 = load i8, i8* %18, align 1, !dbg !8553
  %conv = sext i8 %19 to i32, !dbg !8553
  %cmp7 = icmp eq i32 %conv, 102, !dbg !8554
  %conv8 = zext i1 %cmp7 to i32, !dbg !8554
  %20 = load i8*, i8** %codec_name, align 8, !dbg !8555
  %call9 = call %struct._IO_FILE* @get_preset_file(i8* %arraydecay6, i64 1000, i8* %17, i32 %conv8, i8* %20), !dbg !8556
  store %struct._IO_FILE* %call9, %struct._IO_FILE** %f, align 8, !dbg !8557
  %tobool10 = icmp ne %struct._IO_FILE* %call9, null, !dbg !8557
  br i1 %tobool10, label %if.end16, label %if.then11, !dbg !8558

if.then11:                                        ; preds = %for.end
  %21 = load i8*, i8** %arg.addr, align 8, !dbg !8559
  %call12 = call i32 @strncmp(i8* %21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.692, i32 0, i32 0), i64 16) #10, !dbg !8562
  %tobool13 = icmp ne i32 %call12, 0, !dbg !8562
  br i1 %tobool13, label %if.else, label %if.then14, !dbg !8563

if.then14:                                        ; preds = %if.then11
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.693, i32 0, i32 0)), !dbg !8564
  br label %if.end15, !dbg !8566

if.else:                                          ; preds = %if.then11
  %22 = load i8*, i8** %arg.addr, align 8, !dbg !8567
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.694, i32 0, i32 0), i8* %22), !dbg !8568
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then14
  call void @exit_program(i32 1) #11, !dbg !8569
  unreachable, !dbg !8569

if.end16:                                         ; preds = %for.end
  br label %while.cond, !dbg !8570

while.cond:                                       ; preds = %if.end69, %if.then25, %if.end16
  %arraydecay17 = getelementptr inbounds [1000 x i8], [1000 x i8]* %line, i32 0, i32 0, !dbg !8571
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %f, align 8, !dbg !8573
  %call18 = call i8* @fgets(i8* %arraydecay17, i32 1000, %struct._IO_FILE* %23), !dbg !8574
  %tobool19 = icmp ne i8* %call18, null, !dbg !8575
  br i1 %tobool19, label %while.body, label %while.end, !dbg !8575

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %key, metadata !8576, metadata !1898), !dbg !8578
  %arraydecay20 = getelementptr inbounds [1000 x i8], [1000 x i8]* %tmp_line, i32 0, i32 0, !dbg !8579
  store i8* %arraydecay20, i8** %key, align 8, !dbg !8578
  call void @llvm.dbg.declare(metadata i8** %value, metadata !8580, metadata !1898), !dbg !8581
  call void @llvm.dbg.declare(metadata i8** %endptr, metadata !8582, metadata !1898), !dbg !8583
  %arraydecay21 = getelementptr inbounds [1000 x i8], [1000 x i8]* %line, i32 0, i32 0, !dbg !8584
  %call22 = call i64 @strcspn(i8* %arraydecay21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.695, i32 0, i32 0)) #10, !dbg !8586
  %cmp23 = icmp eq i64 %call22, 0, !dbg !8587
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !8588

if.then25:                                        ; preds = %while.body
  br label %while.cond, !dbg !8589, !llvm.loop !8590

if.end26:                                         ; preds = %while.body
  %arraydecay27 = getelementptr inbounds [1000 x i8], [1000 x i8]* %tmp_line, i32 0, i32 0, !dbg !8591
  %arraydecay28 = getelementptr inbounds [1000 x i8], [1000 x i8]* %line, i32 0, i32 0, !dbg !8592
  %call29 = call i64 @av_strlcpy(i8* %arraydecay27, i8* %arraydecay28, i64 1000), !dbg !8593
  %24 = load i8*, i8** %key, align 8, !dbg !8594
  %call30 = call i8* @av_strtok(i8* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.501, i32 0, i32 0), i8** %value), !dbg !8596
  %tobool31 = icmp ne i8* %call30, null, !dbg !8596
  br i1 %tobool31, label %lor.lhs.false, label %if.then34, !dbg !8597

lor.lhs.false:                                    ; preds = %if.end26
  %25 = load i8*, i8** %value, align 8, !dbg !8598
  %call32 = call i8* @av_strtok(i8* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.696, i32 0, i32 0), i8** %endptr), !dbg !8599
  %tobool33 = icmp ne i8* %call32, null, !dbg !8599
  br i1 %tobool33, label %if.end37, label %if.then34, !dbg !8600

if.then34:                                        ; preds = %lor.lhs.false, %if.end26
  %arraydecay35 = getelementptr inbounds [1000 x i8], [1000 x i8]* %filename, i32 0, i32 0, !dbg !8602
  %arraydecay36 = getelementptr inbounds [1000 x i8], [1000 x i8]* %line, i32 0, i32 0, !dbg !8604
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.697, i32 0, i32 0), i8* %arraydecay35, i8* %arraydecay36), !dbg !8605
  call void @exit_program(i32 1) #11, !dbg !8606
  unreachable, !dbg !8606

if.end37:                                         ; preds = %lor.lhs.false
  %arraydecay38 = getelementptr inbounds [1000 x i8], [1000 x i8]* %filename, i32 0, i32 0, !dbg !8607
  %26 = load i8*, i8** %key, align 8, !dbg !8608
  %27 = load i8*, i8** %value, align 8, !dbg !8609
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 48, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.698, i32 0, i32 0), i8* %arraydecay38, i8* %26, i8* %27), !dbg !8610
  %28 = load i8*, i8** %key, align 8, !dbg !8611
  %call39 = call i32 @strcmp(i8* %28, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.348, i32 0, i32 0)) #10, !dbg !8613
  %tobool40 = icmp ne i32 %call39, 0, !dbg !8613
  br i1 %tobool40, label %if.else43, label %if.then41, !dbg !8614

if.then41:                                        ; preds = %if.end37
  %29 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8615
  %30 = bitcast %struct.OptionsContext* %29 to i8*, !dbg !8615
  %31 = load i8*, i8** %key, align 8, !dbg !8617
  %32 = load i8*, i8** %value, align 8, !dbg !8618
  %call42 = call i32 @opt_audio_codec(i8* %30, i8* %31, i8* %32), !dbg !8619
  br label %if.end69, !dbg !8619

if.else43:                                        ; preds = %if.end37
  %33 = load i8*, i8** %key, align 8, !dbg !8620
  %call44 = call i32 @strcmp(i8* %33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.274, i32 0, i32 0)) #10, !dbg !8622
  %tobool45 = icmp ne i32 %call44, 0, !dbg !8622
  br i1 %tobool45, label %if.else48, label %if.then46, !dbg !8623

if.then46:                                        ; preds = %if.else43
  %34 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8624
  %35 = bitcast %struct.OptionsContext* %34 to i8*, !dbg !8624
  %36 = load i8*, i8** %key, align 8, !dbg !8626
  %37 = load i8*, i8** %value, align 8, !dbg !8627
  %call47 = call i32 @opt_video_codec(i8* %35, i8* %36, i8* %37), !dbg !8628
  br label %if.end68, !dbg !8628

if.else48:                                        ; preds = %if.else43
  %38 = load i8*, i8** %key, align 8, !dbg !8629
  %call49 = call i32 @strcmp(i8* %38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.366, i32 0, i32 0)) #10, !dbg !8631
  %tobool50 = icmp ne i32 %call49, 0, !dbg !8631
  br i1 %tobool50, label %if.else53, label %if.then51, !dbg !8632

if.then51:                                        ; preds = %if.else48
  %39 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8633
  %40 = bitcast %struct.OptionsContext* %39 to i8*, !dbg !8633
  %41 = load i8*, i8** %key, align 8, !dbg !8635
  %42 = load i8*, i8** %value, align 8, !dbg !8636
  %call52 = call i32 @opt_subtitle_codec(i8* %40, i8* %41, i8* %42), !dbg !8637
  br label %if.end67, !dbg !8637

if.else53:                                        ; preds = %if.else48
  %43 = load i8*, i8** %key, align 8, !dbg !8638
  %call54 = call i32 @strcmp(i8* %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.413, i32 0, i32 0)) #10, !dbg !8640
  %tobool55 = icmp ne i32 %call54, 0, !dbg !8640
  br i1 %tobool55, label %if.else58, label %if.then56, !dbg !8641

if.then56:                                        ; preds = %if.else53
  %44 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8642
  %45 = bitcast %struct.OptionsContext* %44 to i8*, !dbg !8642
  %46 = load i8*, i8** %key, align 8, !dbg !8644
  %47 = load i8*, i8** %value, align 8, !dbg !8645
  %call57 = call i32 @opt_data_codec(i8* %45, i8* %46, i8* %47), !dbg !8646
  br label %if.end66, !dbg !8646

if.else58:                                        ; preds = %if.else53
  %48 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8647
  %49 = load i8*, i8** %key, align 8, !dbg !8649
  %50 = load i8*, i8** %value, align 8, !dbg !8650
  %call59 = call i32 @opt_default_new(%struct.OptionsContext* %48, i8* %49, i8* %50), !dbg !8651
  %cmp60 = icmp slt i32 %call59, 0, !dbg !8652
  br i1 %cmp60, label %if.then62, label %if.end65, !dbg !8653

if.then62:                                        ; preds = %if.else58
  %arraydecay63 = getelementptr inbounds [1000 x i8], [1000 x i8]* %filename, i32 0, i32 0, !dbg !8654
  %arraydecay64 = getelementptr inbounds [1000 x i8], [1000 x i8]* %line, i32 0, i32 0, !dbg !8656
  %51 = load i8*, i8** %key, align 8, !dbg !8657
  %52 = load i8*, i8** %value, align 8, !dbg !8658
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.699, i32 0, i32 0), i8* %arraydecay63, i8* %arraydecay64, i8* %51, i8* %52), !dbg !8659
  call void @exit_program(i32 1) #11, !dbg !8660
  unreachable, !dbg !8660

if.end65:                                         ; preds = %if.else58
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then56
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then51
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then46
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then41
  br label %while.cond, !dbg !8661, !llvm.loop !8590

while.end:                                        ; preds = %while.cond
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %f, align 8, !dbg !8663
  %call70 = call i32 @fclose(%struct._IO_FILE* %53), !dbg !8664
  ret i32 0, !dbg !8665
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_data_codec(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8666 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.OptionsContext*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8667, metadata !1898), !dbg !8668
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8669, metadata !1898), !dbg !8670
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8671, metadata !1898), !dbg !8672
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o, metadata !8673, metadata !1898), !dbg !8674
  %0 = load i8*, i8** %optctx.addr, align 8, !dbg !8675
  %1 = bitcast i8* %0 to %struct.OptionsContext*, !dbg !8675
  store %struct.OptionsContext* %1, %struct.OptionsContext** %o, align 8, !dbg !8674
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o, align 8, !dbg !8676
  %3 = bitcast %struct.OptionsContext* %2 to i8*, !dbg !8676
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !8677
  %call = call i32 @parse_option(i8* %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.700, i32 0, i32 0), i8* %4, %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0)), !dbg !8678
  ret i32 %call, !dbg !8679
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_init_hw_device(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8680 {
entry:
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %type = alloca i32, align 4
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8681, metadata !1898), !dbg !8682
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8683, metadata !1898), !dbg !8684
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8685, metadata !1898), !dbg !8686
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8687
  %call = call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.701, i32 0, i32 0)) #10, !dbg !8689
  %tobool = icmp ne i32 %call, 0, !dbg !8689
  br i1 %tobool, label %if.else, label %if.then, !dbg !8690

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %type, metadata !8691, metadata !1898), !dbg !8693
  store i32 0, i32* %type, align 4, !dbg !8693
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.702, i32 0, i32 0)), !dbg !8694
  br label %while.cond, !dbg !8695

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load i32, i32* %type, align 4, !dbg !8696
  %call2 = call i32 @av_hwdevice_iterate_types(i32 %1), !dbg !8698
  store i32 %call2, i32* %type, align 4, !dbg !8699
  %cmp = icmp ne i32 %call2, 0, !dbg !8700
  br i1 %cmp, label %while.body, label %while.end, !dbg !8701

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %type, align 4, !dbg !8702
  %call3 = call i8* @av_hwdevice_get_type_name(i32 %2), !dbg !8703
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0), i8* %call3), !dbg !8704
  br label %while.cond, !dbg !8705, !llvm.loop !8707

while.end:                                        ; preds = %while.cond
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0)), !dbg !8708
  call void @exit_program(i32 0) #11, !dbg !8709
  unreachable, !dbg !8709

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !8710
  %call6 = call i32 @hw_device_init_from_string(i8* %3, %struct.HWDevice** null), !dbg !8712
  ret i32 %call6, !dbg !8713
}

; Function Attrs: nounwind uwtable
define internal i32 @opt_filter_hw_device(i8* %optctx, i8* %opt, i8* %arg) #0 !dbg !8714 {
entry:
  %retval = alloca i32, align 4
  %optctx.addr = alloca i8*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %optctx, i8** %optctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %optctx.addr, metadata !8715, metadata !1898), !dbg !8716
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !8717, metadata !1898), !dbg !8718
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8719, metadata !1898), !dbg !8720
  %0 = load %struct.HWDevice*, %struct.HWDevice** @filter_hw_device, align 8, !dbg !8721
  %tobool = icmp ne %struct.HWDevice* %0, null, !dbg !8721
  br i1 %tobool, label %if.then, label %if.end, !dbg !8723

if.then:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.703, i32 0, i32 0)), !dbg !8724
  store i32 -22, i32* %retval, align 4, !dbg !8726
  br label %return, !dbg !8726

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8727
  %call = call %struct.HWDevice* @hw_device_get_by_name(i8* %1), !dbg !8728
  store %struct.HWDevice* %call, %struct.HWDevice** @filter_hw_device, align 8, !dbg !8729
  %2 = load %struct.HWDevice*, %struct.HWDevice** @filter_hw_device, align 8, !dbg !8730
  %tobool1 = icmp ne %struct.HWDevice* %2, null, !dbg !8730
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !8732

if.then2:                                         ; preds = %if.end
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !8733
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.704, i32 0, i32 0), i8* %3), !dbg !8735
  store i32 -22, i32* %retval, align 4, !dbg !8736
  br label %return, !dbg !8736

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8737
  br label %return, !dbg !8737

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !8738
  ret i32 %4, !dbg !8738
}

; Function Attrs: nounwind uwtable
define internal void @init_options(%struct.OptionsContext* %o) #0 !dbg !8739 {
entry:
  %o.addr = alloca %struct.OptionsContext*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !8742, metadata !1898), !dbg !8743
  %0 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8744
  %1 = bitcast %struct.OptionsContext* %0 to i8*, !dbg !8745
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 912, i32 8, i1 false), !dbg !8745
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8746
  %stop_time = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %2, i32 0, i32 45, !dbg !8747
  store i64 9223372036854775807, i64* %stop_time, align 8, !dbg !8748
  %3 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8749
  %mux_max_delay = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %3, i32 0, i32 48, !dbg !8750
  store float 0x3FE6666660000000, float* %mux_max_delay, align 4, !dbg !8751
  %4 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8752
  %start_time = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %4, i32 0, i32 1, !dbg !8753
  store i64 -9223372036854775808, i64* %start_time, align 8, !dbg !8754
  %5 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8755
  %start_time_eof = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %5, i32 0, i32 2, !dbg !8756
  store i64 -9223372036854775808, i64* %start_time_eof, align 8, !dbg !8757
  %6 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8758
  %recording_time = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %6, i32 0, i32 44, !dbg !8759
  store i64 9223372036854775807, i64* %recording_time, align 8, !dbg !8760
  %7 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8761
  %limit_filesize = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %7, i32 0, i32 46, !dbg !8762
  store i64 -1, i64* %limit_filesize, align 8, !dbg !8763
  %8 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8764
  %chapters_input_file = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %8, i32 0, i32 43, !dbg !8765
  store i32 2147483647, i32* %chapters_input_file, align 4, !dbg !8766
  %9 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8767
  %accurate_seek = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %9, i32 0, i32 20, !dbg !8768
  store i32 1, i32* %accurate_seek, align 8, !dbg !8769
  ret void, !dbg !8770
}

; Function Attrs: nounwind uwtable
define internal void @uninit_options(%struct.OptionsContext* %o) #0 !dbg !8771 {
entry:
  %o.addr = alloca %struct.OptionsContext*, align 8
  %po = alloca %struct.OptionDef*, align 8
  %i = alloca i32, align 4
  %dst = alloca i8*, align 8
  %so = alloca %struct.SpecifierOpt**, align 8
  %i2 = alloca i32, align 4
  %count = alloca i32*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !8772, metadata !1898), !dbg !8773
  call void @llvm.dbg.declare(metadata %struct.OptionDef** %po, metadata !8774, metadata !1898), !dbg !8775
  store %struct.OptionDef* getelementptr inbounds ([0 x %struct.OptionDef], [0 x %struct.OptionDef]* bitcast (<{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options to [0 x %struct.OptionDef]*), i32 0, i32 0), %struct.OptionDef** %po, align 8, !dbg !8775
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8776, metadata !1898), !dbg !8777
  br label %while.cond, !dbg !8778

while.cond:                                       ; preds = %if.end19, %entry
  %0 = load %struct.OptionDef*, %struct.OptionDef** %po, align 8, !dbg !8779
  %name = getelementptr inbounds %struct.OptionDef, %struct.OptionDef* %0, i32 0, i32 0, !dbg !8781
  %1 = load i8*, i8** %name, align 8, !dbg !8781
  %tobool = icmp ne i8* %1, null, !dbg !8782
  br i1 %tobool, label %while.body, label %while.end, !dbg !8782

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !8783, metadata !1898), !dbg !8785
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8786
  %3 = bitcast %struct.OptionsContext* %2 to i8*, !dbg !8787
  %4 = load %struct.OptionDef*, %struct.OptionDef** %po, align 8, !dbg !8788
  %u = getelementptr inbounds %struct.OptionDef, %struct.OptionDef* %4, i32 0, i32 2, !dbg !8789
  %off = bitcast %union.anon.0* %u to i64*, !dbg !8790
  %5 = load i64, i64* %off, align 8, !dbg !8790
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %5, !dbg !8791
  store i8* %add.ptr, i8** %dst, align 8, !dbg !8785
  %6 = load %struct.OptionDef*, %struct.OptionDef** %po, align 8, !dbg !8792
  %flags = getelementptr inbounds %struct.OptionDef, %struct.OptionDef* %6, i32 0, i32 1, !dbg !8794
  %7 = load i32, i32* %flags, align 8, !dbg !8794
  %and = and i32 %7, 32768, !dbg !8795
  %tobool1 = icmp ne i32 %and, 0, !dbg !8795
  br i1 %tobool1, label %if.then, label %if.else, !dbg !8796

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.SpecifierOpt*** %so, metadata !8797, metadata !1898), !dbg !8800
  %8 = load i8*, i8** %dst, align 8, !dbg !8801
  %9 = bitcast i8* %8 to %struct.SpecifierOpt**, !dbg !8801
  store %struct.SpecifierOpt** %9, %struct.SpecifierOpt*** %so, align 8, !dbg !8800
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !8802, metadata !1898), !dbg !8803
  call void @llvm.dbg.declare(metadata i32** %count, metadata !8804, metadata !1898), !dbg !8805
  %10 = load %struct.SpecifierOpt**, %struct.SpecifierOpt*** %so, align 8, !dbg !8806
  %add.ptr3 = getelementptr inbounds %struct.SpecifierOpt*, %struct.SpecifierOpt** %10, i64 1, !dbg !8807
  %11 = bitcast %struct.SpecifierOpt** %add.ptr3 to i32*, !dbg !8808
  store i32* %11, i32** %count, align 8, !dbg !8805
  store i32 0, i32* %i2, align 4, !dbg !8809
  br label %for.cond, !dbg !8811

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %i2, align 4, !dbg !8812
  %13 = load i32*, i32** %count, align 8, !dbg !8815
  %14 = load i32, i32* %13, align 4, !dbg !8816
  %cmp = icmp slt i32 %12, %14, !dbg !8817
  br i1 %cmp, label %for.body, label %for.end, !dbg !8818

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %i2, align 4, !dbg !8819
  %idxprom = sext i32 %15 to i64, !dbg !8821
  %16 = load %struct.SpecifierOpt**, %struct.SpecifierOpt*** %so, align 8, !dbg !8822
  %17 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %16, align 8, !dbg !8823
  %arrayidx = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %17, i64 %idxprom, !dbg !8821
  %specifier = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx, i32 0, i32 0, !dbg !8824
  %18 = bitcast i8** %specifier to i8*, !dbg !8825
  call void @av_freep(i8* %18), !dbg !8826
  %19 = load %struct.OptionDef*, %struct.OptionDef** %po, align 8, !dbg !8827
  %flags4 = getelementptr inbounds %struct.OptionDef, %struct.OptionDef* %19, i32 0, i32 1, !dbg !8829
  %20 = load i32, i32* %flags4, align 8, !dbg !8829
  %and5 = and i32 %20, 8, !dbg !8830
  %tobool6 = icmp ne i32 %and5, 0, !dbg !8830
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !8831

if.then7:                                         ; preds = %for.body
  %21 = load i32, i32* %i2, align 4, !dbg !8832
  %idxprom8 = sext i32 %21 to i64, !dbg !8833
  %22 = load %struct.SpecifierOpt**, %struct.SpecifierOpt*** %so, align 8, !dbg !8834
  %23 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %22, align 8, !dbg !8835
  %arrayidx9 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %23, i64 %idxprom8, !dbg !8833
  %u10 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx9, i32 0, i32 1, !dbg !8836
  %str = bitcast %union.anon.1* %u10 to i8**, !dbg !8837
  %24 = bitcast i8** %str to i8*, !dbg !8838
  call void @av_freep(i8* %24), !dbg !8839
  br label %if.end, !dbg !8839

if.end:                                           ; preds = %if.then7, %for.body
  br label %for.inc, !dbg !8840

for.inc:                                          ; preds = %if.end
  %25 = load i32, i32* %i2, align 4, !dbg !8841
  %inc = add nsw i32 %25, 1, !dbg !8841
  store i32 %inc, i32* %i2, align 4, !dbg !8841
  br label %for.cond, !dbg !8843, !llvm.loop !8844

for.end:                                          ; preds = %for.cond
  %26 = load %struct.SpecifierOpt**, %struct.SpecifierOpt*** %so, align 8, !dbg !8846
  %27 = bitcast %struct.SpecifierOpt** %26 to i8*, !dbg !8846
  call void @av_freep(i8* %27), !dbg !8847
  %28 = load i32*, i32** %count, align 8, !dbg !8848
  store i32 0, i32* %28, align 4, !dbg !8849
  br label %if.end19, !dbg !8850

if.else:                                          ; preds = %while.body
  %29 = load %struct.OptionDef*, %struct.OptionDef** %po, align 8, !dbg !8851
  %flags11 = getelementptr inbounds %struct.OptionDef, %struct.OptionDef* %29, i32 0, i32 1, !dbg !8854
  %30 = load i32, i32* %flags11, align 8, !dbg !8854
  %and12 = and i32 %30, 16384, !dbg !8855
  %tobool13 = icmp ne i32 %and12, 0, !dbg !8855
  br i1 %tobool13, label %land.lhs.true, label %if.end18, !dbg !8856

land.lhs.true:                                    ; preds = %if.else
  %31 = load %struct.OptionDef*, %struct.OptionDef** %po, align 8, !dbg !8857
  %flags14 = getelementptr inbounds %struct.OptionDef, %struct.OptionDef* %31, i32 0, i32 1, !dbg !8859
  %32 = load i32, i32* %flags14, align 8, !dbg !8859
  %and15 = and i32 %32, 8, !dbg !8860
  %tobool16 = icmp ne i32 %and15, 0, !dbg !8860
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !8861

if.then17:                                        ; preds = %land.lhs.true
  %33 = load i8*, i8** %dst, align 8, !dbg !8862
  call void @av_freep(i8* %33), !dbg !8863
  br label %if.end18, !dbg !8863

if.end18:                                         ; preds = %if.then17, %land.lhs.true, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %for.end
  %34 = load %struct.OptionDef*, %struct.OptionDef** %po, align 8, !dbg !8864
  %incdec.ptr = getelementptr inbounds %struct.OptionDef, %struct.OptionDef* %34, i32 1, !dbg !8864
  store %struct.OptionDef* %incdec.ptr, %struct.OptionDef** %po, align 8, !dbg !8864
  br label %while.cond, !dbg !8865, !llvm.loop !8867

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %i, align 4, !dbg !8868
  br label %for.cond20, !dbg !8870

for.cond20:                                       ; preds = %for.inc25, %while.end
  %35 = load i32, i32* %i, align 4, !dbg !8871
  %36 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8874
  %nb_stream_maps = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %36, i32 0, i32 35, !dbg !8875
  %37 = load i32, i32* %nb_stream_maps, align 8, !dbg !8875
  %cmp21 = icmp slt i32 %35, %37, !dbg !8876
  br i1 %cmp21, label %for.body22, label %for.end27, !dbg !8877

for.body22:                                       ; preds = %for.cond20
  %38 = load i32, i32* %i, align 4, !dbg !8878
  %idxprom23 = sext i32 %38 to i64, !dbg !8879
  %39 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8879
  %stream_maps = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %39, i32 0, i32 34, !dbg !8880
  %40 = load %struct.StreamMap*, %struct.StreamMap** %stream_maps, align 8, !dbg !8880
  %arrayidx24 = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %40, i64 %idxprom23, !dbg !8879
  %linklabel = getelementptr inbounds %struct.StreamMap, %struct.StreamMap* %arrayidx24, i32 0, i32 5, !dbg !8881
  %41 = bitcast i8** %linklabel to i8*, !dbg !8882
  call void @av_freep(i8* %41), !dbg !8883
  br label %for.inc25, !dbg !8883

for.inc25:                                        ; preds = %for.body22
  %42 = load i32, i32* %i, align 4, !dbg !8884
  %inc26 = add nsw i32 %42, 1, !dbg !8884
  store i32 %inc26, i32* %i, align 4, !dbg !8884
  br label %for.cond20, !dbg !8886, !llvm.loop !8887

for.end27:                                        ; preds = %for.cond20
  %43 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8889
  %stream_maps28 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %43, i32 0, i32 34, !dbg !8890
  %44 = bitcast %struct.StreamMap** %stream_maps28 to i8*, !dbg !8891
  call void @av_freep(i8* %44), !dbg !8892
  %45 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8893
  %audio_channel_maps = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %45, i32 0, i32 36, !dbg !8894
  %46 = bitcast %struct.AudioChannelMap** %audio_channel_maps to i8*, !dbg !8895
  call void @av_freep(i8* %46), !dbg !8896
  %47 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8897
  %streamid_map = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %47, i32 0, i32 55, !dbg !8898
  %48 = bitcast i32** %streamid_map to i8*, !dbg !8899
  call void @av_freep(i8* %48), !dbg !8900
  %49 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !8901
  %attachments = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %49, i32 0, i32 41, !dbg !8902
  %50 = bitcast i8*** %attachments to i8*, !dbg !8903
  call void @av_freep(i8* %50), !dbg !8904
  ret void, !dbg !8905
}

declare void @av_freep(i8*) #3

; Function Attrs: noreturn
declare void @exit_program(i32) #5

declare %struct.AVInputFormat* @av_find_input_format(i8*) #3

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #2

declare %struct.AVFormatContext* @avformat_alloc_context() #3

declare void @print_error(i8*, i32) #3

declare i32 @av_dict_set_int(%struct.AVDictionary**, i8*, i64, i32) #3

declare %struct.AVOption* @av_opt_find(i8*, i8*, i8*, i32, i32) #3

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) #3

; Function Attrs: nounwind uwtable
define internal %struct.AVCodec* @find_codec_or_die(i8* %name, i32 %type, i32 %encoder) #0 !dbg !8906 {
entry:
  %name.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %encoder.addr = alloca i32, align 4
  %desc = alloca %struct.AVCodecDescriptor*, align 8
  %codec_string = alloca i8*, align 8
  %codec = alloca %struct.AVCodec*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8909, metadata !1898), !dbg !8910
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8911, metadata !1898), !dbg !8912
  store i32 %encoder, i32* %encoder.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %encoder.addr, metadata !8913, metadata !1898), !dbg !8914
  call void @llvm.dbg.declare(metadata %struct.AVCodecDescriptor** %desc, metadata !8915, metadata !1898), !dbg !8916
  call void @llvm.dbg.declare(metadata i8** %codec_string, metadata !8917, metadata !1898), !dbg !8918
  %0 = load i32, i32* %encoder.addr, align 4, !dbg !8919
  %tobool = icmp ne i32 %0, 0, !dbg !8919
  %cond = select i1 %tobool, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.453, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.454, i32 0, i32 0), !dbg !8919
  store i8* %cond, i8** %codec_string, align 8, !dbg !8918
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec, metadata !8920, metadata !1898), !dbg !8921
  %1 = load i32, i32* %encoder.addr, align 4, !dbg !8922
  %tobool1 = icmp ne i32 %1, 0, !dbg !8922
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !8922

cond.true:                                        ; preds = %entry
  %2 = load i8*, i8** %name.addr, align 8, !dbg !8923
  %call = call %struct.AVCodec* @avcodec_find_encoder_by_name(i8* %2), !dbg !8924
  br label %cond.end, !dbg !8925

cond.false:                                       ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8927
  %call2 = call %struct.AVCodec* @avcodec_find_decoder_by_name(i8* %3), !dbg !8928
  br label %cond.end, !dbg !8929

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi %struct.AVCodec* [ %call, %cond.true ], [ %call2, %cond.false ], !dbg !8931
  store %struct.AVCodec* %cond3, %struct.AVCodec** %codec, align 8, !dbg !8933
  %4 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !8934
  %tobool4 = icmp ne %struct.AVCodec* %4, null, !dbg !8934
  br i1 %tobool4, label %if.end19, label %land.lhs.true, !dbg !8936

land.lhs.true:                                    ; preds = %cond.end
  %5 = load i8*, i8** %name.addr, align 8, !dbg !8937
  %call5 = call %struct.AVCodecDescriptor* @avcodec_descriptor_get_by_name(i8* %5), !dbg !8939
  store %struct.AVCodecDescriptor* %call5, %struct.AVCodecDescriptor** %desc, align 8, !dbg !8940
  %tobool6 = icmp ne %struct.AVCodecDescriptor* %call5, null, !dbg !8940
  br i1 %tobool6, label %if.then, label %if.end19, !dbg !8941

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, i32* %encoder.addr, align 4, !dbg !8942
  %tobool7 = icmp ne i32 %6, 0, !dbg !8942
  br i1 %tobool7, label %cond.true8, label %cond.false10, !dbg !8942

cond.true8:                                       ; preds = %if.then
  %7 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %desc, align 8, !dbg !8944
  %id = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %7, i32 0, i32 0, !dbg !8946
  %8 = load i32, i32* %id, align 8, !dbg !8946
  %call9 = call %struct.AVCodec* @avcodec_find_encoder(i32 %8), !dbg !8947
  br label %cond.end13, !dbg !8948

cond.false10:                                     ; preds = %if.then
  %9 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %desc, align 8, !dbg !8949
  %id11 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %9, i32 0, i32 0, !dbg !8950
  %10 = load i32, i32* %id11, align 8, !dbg !8950
  %call12 = call %struct.AVCodec* @avcodec_find_decoder(i32 %10), !dbg !8951
  br label %cond.end13, !dbg !8952

cond.end13:                                       ; preds = %cond.false10, %cond.true8
  %cond14 = phi %struct.AVCodec* [ %call9, %cond.true8 ], [ %call12, %cond.false10 ], !dbg !8954
  store %struct.AVCodec* %cond14, %struct.AVCodec** %codec, align 8, !dbg !8956
  %11 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !8957
  %tobool15 = icmp ne %struct.AVCodec* %11, null, !dbg !8957
  br i1 %tobool15, label %if.then16, label %if.end, !dbg !8959

if.then16:                                        ; preds = %cond.end13
  %12 = load i8*, i8** %codec_string, align 8, !dbg !8960
  %13 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !8961
  %name17 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %13, i32 0, i32 0, !dbg !8962
  %14 = load i8*, i8** %name17, align 8, !dbg !8962
  %15 = load %struct.AVCodecDescriptor*, %struct.AVCodecDescriptor** %desc, align 8, !dbg !8963
  %name18 = getelementptr inbounds %struct.AVCodecDescriptor, %struct.AVCodecDescriptor* %15, i32 0, i32 2, !dbg !8964
  %16 = load i8*, i8** %name18, align 8, !dbg !8964
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 40, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.455, i32 0, i32 0), i8* %12, i8* %14, i8* %16), !dbg !8965
  br label %if.end, !dbg !8965

if.end:                                           ; preds = %if.then16, %cond.end13
  br label %if.end19, !dbg !8966

if.end19:                                         ; preds = %if.end, %land.lhs.true, %cond.end
  %17 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !8967
  %tobool20 = icmp ne %struct.AVCodec* %17, null, !dbg !8967
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !8969

if.then21:                                        ; preds = %if.end19
  %18 = load i8*, i8** %codec_string, align 8, !dbg !8970
  %19 = load i8*, i8** %name.addr, align 8, !dbg !8972
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.456, i32 0, i32 0), i8* %18, i8* %19), !dbg !8973
  call void @exit_program(i32 1) #11, !dbg !8974
  unreachable, !dbg !8974

if.end22:                                         ; preds = %if.end19
  %20 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !8975
  %type23 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %20, i32 0, i32 2, !dbg !8977
  %21 = load i32, i32* %type23, align 8, !dbg !8977
  %22 = load i32, i32* %type.addr, align 4, !dbg !8978
  %cmp = icmp ne i32 %21, %22, !dbg !8979
  br i1 %cmp, label %if.then24, label %if.end25, !dbg !8980

if.then24:                                        ; preds = %if.end22
  %23 = load i8*, i8** %codec_string, align 8, !dbg !8981
  %24 = load i8*, i8** %name.addr, align 8, !dbg !8983
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.457, i32 0, i32 0), i8* %23, i8* %24), !dbg !8984
  call void @exit_program(i32 1) #11, !dbg !8985
  unreachable, !dbg !8985

if.end25:                                         ; preds = %if.end22
  %25 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !8986
  ret %struct.AVCodec* %25, !dbg !8987
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) #3

declare i32 @avformat_open_input(%struct.AVFormatContext**, i8*, %struct.AVInputFormat*, %struct.AVDictionary**) #3

declare void @remove_avoptions(%struct.AVDictionary**, %struct.AVDictionary*) #3

declare void @assert_avoptions(%struct.AVDictionary*) #3

; Function Attrs: nounwind uwtable
define internal %struct.AVCodec* @choose_decoder(%struct.OptionsContext* %o, %struct.AVFormatContext* %s, %struct.AVStream* %st) #0 !dbg !8988 {
entry:
  %retval = alloca %struct.AVCodec*, align 8
  %o.addr = alloca %struct.OptionsContext*, align 8
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %codec_name = alloca i8*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %spec = alloca i8*, align 8
  %codec = alloca %struct.AVCodec*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !8991, metadata !1898), !dbg !8992
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8993, metadata !1898), !dbg !8994
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !8995, metadata !1898), !dbg !8996
  call void @llvm.dbg.declare(metadata i8** %codec_name, metadata !8997, metadata !1898), !dbg !8998
  store i8* null, i8** %codec_name, align 8, !dbg !8998
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8999, metadata !1898), !dbg !9001
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9002, metadata !1898), !dbg !9003
  store i32 0, i32* %i, align 4, !dbg !9004
  br label %for.cond, !dbg !9006

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9007
  %1 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9010
  %nb_codec_names = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %1, i32 0, i32 6, !dbg !9011
  %2 = load i32, i32* %nb_codec_names, align 8, !dbg !9011
  %cmp = icmp slt i32 %0, %2, !dbg !9012
  br i1 %cmp, label %for.body, label %for.end, !dbg !9013

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %spec, metadata !9014, metadata !1898), !dbg !9016
  %3 = load i32, i32* %i, align 4, !dbg !9017
  %idxprom = sext i32 %3 to i64, !dbg !9019
  %4 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9019
  %codec_names = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %4, i32 0, i32 5, !dbg !9020
  %5 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names, align 8, !dbg !9020
  %arrayidx = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %5, i64 %idxprom, !dbg !9019
  %specifier = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx, i32 0, i32 0, !dbg !9021
  %6 = load i8*, i8** %specifier, align 8, !dbg !9021
  store i8* %6, i8** %spec, align 8, !dbg !9022
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9023
  %8 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9024
  %9 = load i8*, i8** %spec, align 8, !dbg !9025
  %call = call i32 @check_stream_specifier(%struct.AVFormatContext* %7, %struct.AVStream* %8, i8* %9), !dbg !9026
  store i32 %call, i32* %ret, align 4, !dbg !9027
  %cmp1 = icmp sgt i32 %call, 0, !dbg !9028
  br i1 %cmp1, label %if.then, label %if.else, !dbg !9029

if.then:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !9030
  %idxprom2 = sext i32 %10 to i64, !dbg !9033
  %11 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9033
  %codec_names3 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %11, i32 0, i32 5, !dbg !9034
  %12 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names3, align 8, !dbg !9034
  %arrayidx4 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %12, i64 %idxprom2, !dbg !9033
  %u = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx4, i32 0, i32 1, !dbg !9035
  %str = bitcast %union.anon.1* %u to i8**, !dbg !9036
  %13 = load i8*, i8** %str, align 8, !dbg !9036
  store i8* %13, i8** %codec_name, align 8, !dbg !9037
  br label %if.end7, !dbg !9038

if.else:                                          ; preds = %for.body
  %14 = load i32, i32* %ret, align 4, !dbg !9039
  %cmp5 = icmp slt i32 %14, 0, !dbg !9042
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !9039

if.then6:                                         ; preds = %if.else
  call void @exit_program(i32 1) #11, !dbg !9043
  unreachable, !dbg !9043

if.end:                                           ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !9045

for.inc:                                          ; preds = %if.end7
  %15 = load i32, i32* %i, align 4, !dbg !9047
  %inc = add nsw i32 %15, 1, !dbg !9047
  store i32 %inc, i32* %i, align 4, !dbg !9047
  br label %for.cond, !dbg !9049, !llvm.loop !9050

for.end:                                          ; preds = %for.cond
  %16 = load i8*, i8** %codec_name, align 8, !dbg !9052
  %tobool = icmp ne i8* %16, null, !dbg !9052
  br i1 %tobool, label %if.then8, label %if.else11, !dbg !9054

if.then8:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.AVCodec** %codec, metadata !9055, metadata !1898), !dbg !9057
  %17 = load i8*, i8** %codec_name, align 8, !dbg !9058
  %18 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9059
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i32 0, i32 19, !dbg !9060
  %19 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !9060
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %19, i32 0, i32 0, !dbg !9061
  %20 = load i32, i32* %codec_type, align 8, !dbg !9061
  %call9 = call %struct.AVCodec* @find_codec_or_die(i8* %17, i32 %20, i32 0), !dbg !9062
  store %struct.AVCodec* %call9, %struct.AVCodec** %codec, align 8, !dbg !9057
  %21 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !9063
  %id = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %21, i32 0, i32 3, !dbg !9064
  %22 = load i32, i32* %id, align 4, !dbg !9064
  %23 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9065
  %codecpar10 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %23, i32 0, i32 19, !dbg !9066
  %24 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar10, align 8, !dbg !9066
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %24, i32 0, i32 1, !dbg !9067
  store i32 %22, i32* %codec_id, align 4, !dbg !9068
  %25 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !9069
  store %struct.AVCodec* %25, %struct.AVCodec** %retval, align 8, !dbg !9070
  br label %return, !dbg !9070

if.else11:                                        ; preds = %for.end
  %26 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9071
  %codecpar12 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %26, i32 0, i32 19, !dbg !9072
  %27 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar12, align 8, !dbg !9072
  %codec_id13 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %27, i32 0, i32 1, !dbg !9073
  %28 = load i32, i32* %codec_id13, align 4, !dbg !9073
  %call14 = call %struct.AVCodec* @avcodec_find_decoder(i32 %28), !dbg !9074
  store %struct.AVCodec* %call14, %struct.AVCodec** %retval, align 8, !dbg !9075
  br label %return, !dbg !9075

return:                                           ; preds = %if.else11, %if.then8
  %29 = load %struct.AVCodec*, %struct.AVCodec** %retval, align 8, !dbg !9076
  ret %struct.AVCodec* %29, !dbg !9076
}

declare %struct.AVDictionary** @setup_find_stream_info_opts(%struct.AVFormatContext*, %struct.AVDictionary*) #3

declare i32 @avformat_find_stream_info(%struct.AVFormatContext*, %struct.AVDictionary**) #3

declare void @av_dict_free(%struct.AVDictionary**) #3

declare void @avformat_close_input(%struct.AVFormatContext**) #3

declare i32 @avformat_seek_file(%struct.AVFormatContext*, i32, i64, i64, i64, i32) #3

; Function Attrs: nounwind uwtable
define internal void @add_input_streams(%struct.OptionsContext* %o, %struct.AVFormatContext* %ic) #0 !dbg !9077 {
entry:
  %o.addr = alloca %struct.OptionsContext*, align 8
  %ic.addr = alloca %struct.AVFormatContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %par = alloca %struct.AVCodecParameters*, align 8
  %ist = alloca %struct.InputStream*, align 8
  %framerate = alloca i8*, align 8
  %hwaccel_device = alloca i8*, align 8
  %hwaccel = alloca i8*, align 8
  %hwaccel_output_format = alloca i8*, align 8
  %codec_tag = alloca i8*, align 8
  %next = alloca i8*, align 8
  %discard_str = alloca i8*, align 8
  %cc = alloca %struct.AVClass*, align 8
  %discard_opt = alloca %struct.AVOption*, align 8
  %i8 = alloca i32, align 4
  %ret9 = alloca i32, align 4
  %spec = alloca i8*, align 8
  %i27 = alloca i32, align 4
  %ret28 = alloca i32, align 4
  %spec32 = alloca i8*, align 8
  %i54 = alloca i32, align 4
  %ret55 = alloca i32, align 4
  %spec59 = alloca i8*, align 8
  %tag = alloca i32, align 4
  %i92 = alloca i32, align 4
  %ret93 = alloca i32, align 4
  %spec98 = alloca i8*, align 8
  %i122 = alloca i32, align 4
  %ret123 = alloca i32, align 4
  %spec128 = alloca i8*, align 8
  %i235 = alloca i32, align 4
  %ret236 = alloca i32, align 4
  %spec241 = alloca i8*, align 8
  %i271 = alloca i32, align 4
  %ret272 = alloca i32, align 4
  %spec277 = alloca i8*, align 8
  %i301 = alloca i32, align 4
  %ret302 = alloca i32, align 4
  %spec307 = alloca i8*, align 8
  %type = alloca i32, align 4
  %i344 = alloca i32, align 4
  %i396 = alloca i32, align 4
  %ret397 = alloca i32, align 4
  %spec402 = alloca i8*, align 8
  %i433 = alloca i32, align 4
  %ret434 = alloca i32, align 4
  %spec439 = alloca i8*, align 8
  %i474 = alloca i32, align 4
  %ret475 = alloca i32, align 4
  %spec480 = alloca i8*, align 8
  %canvas_size = alloca i8*, align 8
  %i513 = alloca i32, align 4
  %ret514 = alloca i32, align 4
  %spec519 = alloca i8*, align 8
  %i542 = alloca i32, align 4
  %ret543 = alloca i32, align 4
  %spec548 = alloca i8*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !9080, metadata !1898), !dbg !9081
  store %struct.AVFormatContext* %ic, %struct.AVFormatContext** %ic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %ic.addr, metadata !9082, metadata !1898), !dbg !9083
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9084, metadata !1898), !dbg !9085
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9086, metadata !1898), !dbg !9087
  store i32 0, i32* %i, align 4, !dbg !9088
  br label %for.cond, !dbg !9090

for.cond:                                         ; preds = %for.inc588, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9091
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !9094
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 6, !dbg !9095
  %2 = load i32, i32* %nb_streams, align 4, !dbg !9095
  %cmp = icmp ult i32 %0, %2, !dbg !9096
  br i1 %cmp, label %for.body, label %for.end590, !dbg !9097

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !9098, metadata !1898), !dbg !9100
  %3 = load i32, i32* %i, align 4, !dbg !9101
  %idxprom = sext i32 %3 to i64, !dbg !9102
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !9102
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 7, !dbg !9103
  %5 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !9103
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %5, i64 %idxprom, !dbg !9102
  %6 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !9102
  store %struct.AVStream* %6, %struct.AVStream** %st, align 8, !dbg !9100
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par, metadata !9104, metadata !1898), !dbg !9105
  %7 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9106
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %7, i32 0, i32 19, !dbg !9107
  %8 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !9107
  store %struct.AVCodecParameters* %8, %struct.AVCodecParameters** %par, align 8, !dbg !9105
  call void @llvm.dbg.declare(metadata %struct.InputStream** %ist, metadata !9108, metadata !1898), !dbg !9109
  %call = call noalias i8* @av_mallocz(i64 424), !dbg !9110
  %9 = bitcast i8* %call to %struct.InputStream*, !dbg !9110
  store %struct.InputStream* %9, %struct.InputStream** %ist, align 8, !dbg !9109
  call void @llvm.dbg.declare(metadata i8** %framerate, metadata !9111, metadata !1898), !dbg !9112
  store i8* null, i8** %framerate, align 8, !dbg !9112
  call void @llvm.dbg.declare(metadata i8** %hwaccel_device, metadata !9113, metadata !1898), !dbg !9114
  store i8* null, i8** %hwaccel_device, align 8, !dbg !9114
  call void @llvm.dbg.declare(metadata i8** %hwaccel, metadata !9115, metadata !1898), !dbg !9116
  store i8* null, i8** %hwaccel, align 8, !dbg !9116
  call void @llvm.dbg.declare(metadata i8** %hwaccel_output_format, metadata !9117, metadata !1898), !dbg !9118
  store i8* null, i8** %hwaccel_output_format, align 8, !dbg !9118
  call void @llvm.dbg.declare(metadata i8** %codec_tag, metadata !9119, metadata !1898), !dbg !9120
  store i8* null, i8** %codec_tag, align 8, !dbg !9120
  call void @llvm.dbg.declare(metadata i8** %next, metadata !9121, metadata !1898), !dbg !9122
  call void @llvm.dbg.declare(metadata i8** %discard_str, metadata !9123, metadata !1898), !dbg !9124
  store i8* null, i8** %discard_str, align 8, !dbg !9124
  call void @llvm.dbg.declare(metadata %struct.AVClass** %cc, metadata !9125, metadata !1898), !dbg !9126
  %call1 = call %struct.AVClass* @avcodec_get_class(), !dbg !9127
  store %struct.AVClass* %call1, %struct.AVClass** %cc, align 8, !dbg !9126
  call void @llvm.dbg.declare(metadata %struct.AVOption** %discard_opt, metadata !9128, metadata !1898), !dbg !9129
  %10 = bitcast %struct.AVClass** %cc to i8*, !dbg !9130
  %call2 = call %struct.AVOption* @av_opt_find(i8* %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.458, i32 0, i32 0), i8* null, i32 0, i32 0), !dbg !9131
  store %struct.AVOption* %call2, %struct.AVOption** %discard_opt, align 8, !dbg !9129
  %11 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9132
  %tobool = icmp ne %struct.InputStream* %11, null, !dbg !9132
  br i1 %tobool, label %if.end, label %if.then, !dbg !9134

if.then:                                          ; preds = %for.body
  call void @exit_program(i32 1) #11, !dbg !9135
  unreachable, !dbg !9135

if.end:                                           ; preds = %for.body
  %12 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !9136
  %13 = bitcast %struct.InputStream** %12 to i8*, !dbg !9136
  %14 = load i32, i32* @nb_input_streams, align 4, !dbg !9137
  %add = add nsw i32 %14, 1, !dbg !9138
  %call3 = call i8* @grow_array(i8* %13, i32 8, i32* @nb_input_streams, i32 %add), !dbg !9139
  %15 = bitcast i8* %call3 to %struct.InputStream**, !dbg !9139
  store %struct.InputStream** %15, %struct.InputStream*** @input_streams, align 8, !dbg !9140
  %16 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9141
  %17 = load i32, i32* @nb_input_streams, align 4, !dbg !9142
  %sub = sub nsw i32 %17, 1, !dbg !9143
  %idxprom4 = sext i32 %sub to i64, !dbg !9144
  %18 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !9144
  %arrayidx5 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %18, i64 %idxprom4, !dbg !9144
  store %struct.InputStream* %16, %struct.InputStream** %arrayidx5, align 8, !dbg !9145
  %19 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9146
  %20 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9147
  %st6 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %20, i32 0, i32 1, !dbg !9148
  store %struct.AVStream* %19, %struct.AVStream** %st6, align 8, !dbg !9149
  %21 = load i32, i32* @nb_input_files, align 4, !dbg !9150
  %22 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9151
  %file_index = getelementptr inbounds %struct.InputStream, %struct.InputStream* %22, i32 0, i32 0, !dbg !9152
  store i32 %21, i32* %file_index, align 8, !dbg !9153
  %23 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9154
  %discard = getelementptr inbounds %struct.InputStream, %struct.InputStream* %23, i32 0, i32 2, !dbg !9155
  store i32 1, i32* %discard, align 8, !dbg !9156
  %24 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9157
  %discard7 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %24, i32 0, i32 9, !dbg !9158
  store i32 48, i32* %discard7, align 4, !dbg !9159
  %25 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9160
  %nb_samples = getelementptr inbounds %struct.InputStream, %struct.InputStream* %25, i32 0, i32 19, !dbg !9161
  store i64 0, i64* %nb_samples, align 8, !dbg !9162
  %26 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9163
  %min_pts = getelementptr inbounds %struct.InputStream, %struct.InputStream* %26, i32 0, i32 16, !dbg !9164
  store i64 9223372036854775807, i64* %min_pts, align 8, !dbg !9165
  %27 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9166
  %max_pts = getelementptr inbounds %struct.InputStream, %struct.InputStream* %27, i32 0, i32 17, !dbg !9167
  store i64 -9223372036854775808, i64* %max_pts, align 8, !dbg !9168
  %28 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9169
  %ts_scale = getelementptr inbounds %struct.InputStream, %struct.InputStream* %28, i32 0, i32 20, !dbg !9170
  store double 1.000000e+00, double* %ts_scale, align 8, !dbg !9171
  call void @llvm.dbg.declare(metadata i32* %i8, metadata !9172, metadata !1898), !dbg !9174
  call void @llvm.dbg.declare(metadata i32* %ret9, metadata !9175, metadata !1898), !dbg !9176
  store i32 0, i32* %i8, align 4, !dbg !9177
  br label %for.cond10, !dbg !9179

for.cond10:                                       ; preds = %for.inc, %if.end
  %29 = load i32, i32* %i8, align 4, !dbg !9180
  %30 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9183
  %nb_ts_scale = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %30, i32 0, i32 23, !dbg !9184
  %31 = load i32, i32* %nb_ts_scale, align 8, !dbg !9184
  %cmp11 = icmp slt i32 %29, %31, !dbg !9185
  br i1 %cmp11, label %for.body12, label %for.end, !dbg !9186

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i8** %spec, metadata !9187, metadata !1898), !dbg !9189
  %32 = load i32, i32* %i8, align 4, !dbg !9190
  %idxprom13 = sext i32 %32 to i64, !dbg !9192
  %33 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9192
  %ts_scale14 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %33, i32 0, i32 22, !dbg !9193
  %34 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %ts_scale14, align 8, !dbg !9193
  %arrayidx15 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %34, i64 %idxprom13, !dbg !9192
  %specifier = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx15, i32 0, i32 0, !dbg !9194
  %35 = load i8*, i8** %specifier, align 8, !dbg !9194
  store i8* %35, i8** %spec, align 8, !dbg !9195
  %36 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !9196
  %37 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9197
  %38 = load i8*, i8** %spec, align 8, !dbg !9198
  %call16 = call i32 @check_stream_specifier(%struct.AVFormatContext* %36, %struct.AVStream* %37, i8* %38), !dbg !9199
  store i32 %call16, i32* %ret9, align 4, !dbg !9200
  %cmp17 = icmp sgt i32 %call16, 0, !dbg !9201
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !9202

if.then18:                                        ; preds = %for.body12
  %39 = load i32, i32* %i8, align 4, !dbg !9203
  %idxprom19 = sext i32 %39 to i64, !dbg !9206
  %40 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9206
  %ts_scale20 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %40, i32 0, i32 22, !dbg !9207
  %41 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %ts_scale20, align 8, !dbg !9207
  %arrayidx21 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %41, i64 %idxprom19, !dbg !9206
  %u = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx21, i32 0, i32 1, !dbg !9208
  %dbl = bitcast %union.anon.1* %u to double*, !dbg !9209
  %42 = load double, double* %dbl, align 8, !dbg !9209
  %43 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9210
  %ts_scale22 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %43, i32 0, i32 20, !dbg !9211
  store double %42, double* %ts_scale22, align 8, !dbg !9212
  br label %if.end26, !dbg !9210

if.else:                                          ; preds = %for.body12
  %44 = load i32, i32* %ret9, align 4, !dbg !9213
  %cmp23 = icmp slt i32 %44, 0, !dbg !9216
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !9213

if.then24:                                        ; preds = %if.else
  call void @exit_program(i32 1) #11, !dbg !9217
  unreachable, !dbg !9217

if.end25:                                         ; preds = %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then18
  br label %for.inc, !dbg !9219

for.inc:                                          ; preds = %if.end26
  %45 = load i32, i32* %i8, align 4, !dbg !9221
  %inc = add nsw i32 %45, 1, !dbg !9221
  store i32 %inc, i32* %i8, align 4, !dbg !9221
  br label %for.cond10, !dbg !9223, !llvm.loop !9224

for.end:                                          ; preds = %for.cond10
  %46 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9226
  %autorotate = getelementptr inbounds %struct.InputStream, %struct.InputStream* %46, i32 0, i32 26, !dbg !9227
  store i32 1, i32* %autorotate, align 8, !dbg !9228
  call void @llvm.dbg.declare(metadata i32* %i27, metadata !9229, metadata !1898), !dbg !9231
  call void @llvm.dbg.declare(metadata i32* %ret28, metadata !9232, metadata !1898), !dbg !9233
  store i32 0, i32* %i27, align 4, !dbg !9234
  br label %for.cond29, !dbg !9236

for.cond29:                                       ; preds = %for.inc51, %for.end
  %47 = load i32, i32* %i27, align 4, !dbg !9237
  %48 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9240
  %nb_autorotate = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %48, i32 0, i32 33, !dbg !9241
  %49 = load i32, i32* %nb_autorotate, align 8, !dbg !9241
  %cmp30 = icmp slt i32 %47, %49, !dbg !9242
  br i1 %cmp30, label %for.body31, label %for.end53, !dbg !9243

for.body31:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata i8** %spec32, metadata !9244, metadata !1898), !dbg !9246
  %50 = load i32, i32* %i27, align 4, !dbg !9247
  %idxprom33 = sext i32 %50 to i64, !dbg !9249
  %51 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9249
  %autorotate34 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %51, i32 0, i32 32, !dbg !9250
  %52 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %autorotate34, align 8, !dbg !9250
  %arrayidx35 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %52, i64 %idxprom33, !dbg !9249
  %specifier36 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx35, i32 0, i32 0, !dbg !9251
  %53 = load i8*, i8** %specifier36, align 8, !dbg !9251
  store i8* %53, i8** %spec32, align 8, !dbg !9252
  %54 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !9253
  %55 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9254
  %56 = load i8*, i8** %spec32, align 8, !dbg !9255
  %call37 = call i32 @check_stream_specifier(%struct.AVFormatContext* %54, %struct.AVStream* %55, i8* %56), !dbg !9256
  store i32 %call37, i32* %ret28, align 4, !dbg !9257
  %cmp38 = icmp sgt i32 %call37, 0, !dbg !9258
  br i1 %cmp38, label %if.then39, label %if.else46, !dbg !9259

if.then39:                                        ; preds = %for.body31
  %57 = load i32, i32* %i27, align 4, !dbg !9260
  %idxprom40 = sext i32 %57 to i64, !dbg !9263
  %58 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9263
  %autorotate41 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %58, i32 0, i32 32, !dbg !9264
  %59 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %autorotate41, align 8, !dbg !9264
  %arrayidx42 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %59, i64 %idxprom40, !dbg !9263
  %u43 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx42, i32 0, i32 1, !dbg !9265
  %i44 = bitcast %union.anon.1* %u43 to i32*, !dbg !9266
  %60 = load i32, i32* %i44, align 8, !dbg !9266
  %61 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9267
  %autorotate45 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %61, i32 0, i32 26, !dbg !9268
  store i32 %60, i32* %autorotate45, align 8, !dbg !9269
  br label %if.end50, !dbg !9267

if.else46:                                        ; preds = %for.body31
  %62 = load i32, i32* %ret28, align 4, !dbg !9270
  %cmp47 = icmp slt i32 %62, 0, !dbg !9273
  br i1 %cmp47, label %if.then48, label %if.end49, !dbg !9270

if.then48:                                        ; preds = %if.else46
  call void @exit_program(i32 1) #11, !dbg !9274
  unreachable, !dbg !9274

if.end49:                                         ; preds = %if.else46
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then39
  br label %for.inc51, !dbg !9276

for.inc51:                                        ; preds = %if.end50
  %63 = load i32, i32* %i27, align 4, !dbg !9278
  %inc52 = add nsw i32 %63, 1, !dbg !9278
  store i32 %inc52, i32* %i27, align 4, !dbg !9278
  br label %for.cond29, !dbg !9280, !llvm.loop !9281

for.end53:                                        ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata i32* %i54, metadata !9283, metadata !1898), !dbg !9285
  call void @llvm.dbg.declare(metadata i32* %ret55, metadata !9286, metadata !1898), !dbg !9287
  store i32 0, i32* %i54, align 4, !dbg !9288
  br label %for.cond56, !dbg !9290

for.cond56:                                       ; preds = %for.inc75, %for.end53
  %64 = load i32, i32* %i54, align 4, !dbg !9291
  %65 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9294
  %nb_codec_tags = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %65, i32 0, i32 64, !dbg !9295
  %66 = load i32, i32* %nb_codec_tags, align 8, !dbg !9295
  %cmp57 = icmp slt i32 %64, %66, !dbg !9296
  br i1 %cmp57, label %for.body58, label %for.end77, !dbg !9297

for.body58:                                       ; preds = %for.cond56
  call void @llvm.dbg.declare(metadata i8** %spec59, metadata !9298, metadata !1898), !dbg !9300
  %67 = load i32, i32* %i54, align 4, !dbg !9301
  %idxprom60 = sext i32 %67 to i64, !dbg !9303
  %68 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9303
  %codec_tags = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %68, i32 0, i32 63, !dbg !9304
  %69 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_tags, align 8, !dbg !9304
  %arrayidx61 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %69, i64 %idxprom60, !dbg !9303
  %specifier62 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx61, i32 0, i32 0, !dbg !9305
  %70 = load i8*, i8** %specifier62, align 8, !dbg !9305
  store i8* %70, i8** %spec59, align 8, !dbg !9306
  %71 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !9307
  %72 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9308
  %73 = load i8*, i8** %spec59, align 8, !dbg !9309
  %call63 = call i32 @check_stream_specifier(%struct.AVFormatContext* %71, %struct.AVStream* %72, i8* %73), !dbg !9310
  store i32 %call63, i32* %ret55, align 4, !dbg !9311
  %cmp64 = icmp sgt i32 %call63, 0, !dbg !9312
  br i1 %cmp64, label %if.then65, label %if.else70, !dbg !9313

if.then65:                                        ; preds = %for.body58
  %74 = load i32, i32* %i54, align 4, !dbg !9314
  %idxprom66 = sext i32 %74 to i64, !dbg !9317
  %75 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9317
  %codec_tags67 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %75, i32 0, i32 63, !dbg !9318
  %76 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_tags67, align 8, !dbg !9318
  %arrayidx68 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %76, i64 %idxprom66, !dbg !9317
  %u69 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx68, i32 0, i32 1, !dbg !9319
  %str = bitcast %union.anon.1* %u69 to i8**, !dbg !9320
  %77 = load i8*, i8** %str, align 8, !dbg !9320
  store i8* %77, i8** %codec_tag, align 8, !dbg !9321
  br label %if.end74, !dbg !9322

if.else70:                                        ; preds = %for.body58
  %78 = load i32, i32* %ret55, align 4, !dbg !9323
  %cmp71 = icmp slt i32 %78, 0, !dbg !9326
  br i1 %cmp71, label %if.then72, label %if.end73, !dbg !9323

if.then72:                                        ; preds = %if.else70
  call void @exit_program(i32 1) #11, !dbg !9327
  unreachable, !dbg !9327

if.end73:                                         ; preds = %if.else70
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then65
  br label %for.inc75, !dbg !9329

for.inc75:                                        ; preds = %if.end74
  %79 = load i32, i32* %i54, align 4, !dbg !9331
  %inc76 = add nsw i32 %79, 1, !dbg !9331
  store i32 %inc76, i32* %i54, align 4, !dbg !9331
  br label %for.cond56, !dbg !9333, !llvm.loop !9334

for.end77:                                        ; preds = %for.cond56
  %80 = load i8*, i8** %codec_tag, align 8, !dbg !9336
  %tobool78 = icmp ne i8* %80, null, !dbg !9336
  br i1 %tobool78, label %if.then79, label %if.end86, !dbg !9338

if.then79:                                        ; preds = %for.end77
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !9339, metadata !1898), !dbg !9341
  %81 = load i8*, i8** %codec_tag, align 8, !dbg !9342
  %call80 = call i64 @strtol(i8* %81, i8** %next, i32 0) #12, !dbg !9343
  %conv = trunc i64 %call80 to i32, !dbg !9343
  store i32 %conv, i32* %tag, align 4, !dbg !9341
  %82 = load i8*, i8** %next, align 8, !dbg !9344
  %83 = load i8, i8* %82, align 1, !dbg !9346
  %tobool81 = icmp ne i8 %83, 0, !dbg !9346
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !9347

if.then82:                                        ; preds = %if.then79
  %84 = load i8*, i8** %codec_tag, align 8, !dbg !9348
  %85 = bitcast i8* %84 to %union.unaligned_32*, !dbg !9349
  %l = bitcast %union.unaligned_32* %85 to i32*, !dbg !9349
  %86 = load i32, i32* %l, align 1, !dbg !9349
  store i32 %86, i32* %tag, align 4, !dbg !9350
  br label %if.end83, !dbg !9351

if.end83:                                         ; preds = %if.then82, %if.then79
  %87 = load i32, i32* %tag, align 4, !dbg !9352
  %88 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9353
  %codecpar84 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %88, i32 0, i32 19, !dbg !9354
  %89 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar84, align 8, !dbg !9354
  %codec_tag85 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %89, i32 0, i32 2, !dbg !9355
  store i32 %87, i32* %codec_tag85, align 8, !dbg !9356
  br label %if.end86, !dbg !9357

if.end86:                                         ; preds = %if.end83, %for.end77
  %90 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9358
  %91 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !9359
  %92 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9360
  %call87 = call %struct.AVCodec* @choose_decoder(%struct.OptionsContext* %90, %struct.AVFormatContext* %91, %struct.AVStream* %92), !dbg !9361
  %93 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9362
  %dec = getelementptr inbounds %struct.InputStream, %struct.InputStream* %93, i32 0, i32 6, !dbg !9363
  store %struct.AVCodec* %call87, %struct.AVCodec** %dec, align 8, !dbg !9364
  %94 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9365
  %g = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %94, i32 0, i32 0, !dbg !9366
  %95 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !9366
  %codec_opts = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %95, i32 0, i32 4, !dbg !9367
  %96 = load %struct.AVDictionary*, %struct.AVDictionary** %codec_opts, align 8, !dbg !9367
  %97 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9368
  %st88 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %97, i32 0, i32 1, !dbg !9369
  %98 = load %struct.AVStream*, %struct.AVStream** %st88, align 8, !dbg !9369
  %codecpar89 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %98, i32 0, i32 19, !dbg !9370
  %99 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar89, align 8, !dbg !9370
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %99, i32 0, i32 1, !dbg !9371
  %100 = load i32, i32* %codec_id, align 4, !dbg !9371
  %101 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !9372
  %102 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9373
  %103 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9374
  %dec90 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %103, i32 0, i32 6, !dbg !9375
  %104 = load %struct.AVCodec*, %struct.AVCodec** %dec90, align 8, !dbg !9375
  %call91 = call %struct.AVDictionary* @filter_codec_opts(%struct.AVDictionary* %96, i32 %100, %struct.AVFormatContext* %101, %struct.AVStream* %102, %struct.AVCodec* %104), !dbg !9376
  %105 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9377
  %decoder_opts = getelementptr inbounds %struct.InputStream, %struct.InputStream* %105, i32 0, i32 22, !dbg !9378
  store %struct.AVDictionary* %call91, %struct.AVDictionary** %decoder_opts, align 8, !dbg !9379
  %106 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9380
  %reinit_filters = getelementptr inbounds %struct.InputStream, %struct.InputStream* %106, i32 0, i32 33, !dbg !9381
  store i32 -1, i32* %reinit_filters, align 4, !dbg !9382
  call void @llvm.dbg.declare(metadata i32* %i92, metadata !9383, metadata !1898), !dbg !9385
  call void @llvm.dbg.declare(metadata i32* %ret93, metadata !9386, metadata !1898), !dbg !9387
  store i32 0, i32* %i92, align 4, !dbg !9388
  br label %for.cond94, !dbg !9390

for.cond94:                                       ; preds = %for.inc119, %if.end86
  %107 = load i32, i32* %i92, align 4, !dbg !9391
  %108 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9394
  %nb_reinit_filters = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %108, i32 0, i32 98, !dbg !9395
  %109 = load i32, i32* %nb_reinit_filters, align 8, !dbg !9395
  %cmp95 = icmp slt i32 %107, %109, !dbg !9396
  br i1 %cmp95, label %for.body97, label %for.end121, !dbg !9397

for.body97:                                       ; preds = %for.cond94
  call void @llvm.dbg.declare(metadata i8** %spec98, metadata !9398, metadata !1898), !dbg !9400
  %110 = load i32, i32* %i92, align 4, !dbg !9401
  %idxprom99 = sext i32 %110 to i64, !dbg !9403
  %111 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9403
  %reinit_filters100 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %111, i32 0, i32 97, !dbg !9404
  %112 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %reinit_filters100, align 8, !dbg !9404
  %arrayidx101 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %112, i64 %idxprom99, !dbg !9403
  %specifier102 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx101, i32 0, i32 0, !dbg !9405
  %113 = load i8*, i8** %specifier102, align 8, !dbg !9405
  store i8* %113, i8** %spec98, align 8, !dbg !9406
  %114 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !9407
  %115 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9408
  %116 = load i8*, i8** %spec98, align 8, !dbg !9409
  %call103 = call i32 @check_stream_specifier(%struct.AVFormatContext* %114, %struct.AVStream* %115, i8* %116), !dbg !9410
  store i32 %call103, i32* %ret93, align 4, !dbg !9411
  %cmp104 = icmp sgt i32 %call103, 0, !dbg !9412
  br i1 %cmp104, label %if.then106, label %if.else113, !dbg !9413

if.then106:                                       ; preds = %for.body97
  %117 = load i32, i32* %i92, align 4, !dbg !9414
  %idxprom107 = sext i32 %117 to i64, !dbg !9417
  %118 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9417
  %reinit_filters108 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %118, i32 0, i32 97, !dbg !9418
  %119 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %reinit_filters108, align 8, !dbg !9418
  %arrayidx109 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %119, i64 %idxprom107, !dbg !9417
  %u110 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx109, i32 0, i32 1, !dbg !9419
  %i111 = bitcast %union.anon.1* %u110 to i32*, !dbg !9420
  %120 = load i32, i32* %i111, align 8, !dbg !9420
  %121 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9421
  %reinit_filters112 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %121, i32 0, i32 33, !dbg !9422
  store i32 %120, i32* %reinit_filters112, align 4, !dbg !9423
  br label %if.end118, !dbg !9421

if.else113:                                       ; preds = %for.body97
  %122 = load i32, i32* %ret93, align 4, !dbg !9424
  %cmp114 = icmp slt i32 %122, 0, !dbg !9427
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !9424

if.then116:                                       ; preds = %if.else113
  call void @exit_program(i32 1) #11, !dbg !9428
  unreachable, !dbg !9428

if.end117:                                        ; preds = %if.else113
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then106
  br label %for.inc119, !dbg !9430

for.inc119:                                       ; preds = %if.end118
  %123 = load i32, i32* %i92, align 4, !dbg !9432
  %inc120 = add nsw i32 %123, 1, !dbg !9432
  store i32 %inc120, i32* %i92, align 4, !dbg !9432
  br label %for.cond94, !dbg !9434, !llvm.loop !9435

for.end121:                                       ; preds = %for.cond94
  call void @llvm.dbg.declare(metadata i32* %i122, metadata !9437, metadata !1898), !dbg !9439
  call void @llvm.dbg.declare(metadata i32* %ret123, metadata !9440, metadata !1898), !dbg !9441
  store i32 0, i32* %i122, align 4, !dbg !9442
  br label %for.cond124, !dbg !9444

for.cond124:                                      ; preds = %for.inc148, %for.end121
  %124 = load i32, i32* %i122, align 4, !dbg !9445
  %125 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9448
  %nb_discard = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %125, i32 0, i32 114, !dbg !9449
  %126 = load i32, i32* %nb_discard, align 8, !dbg !9449
  %cmp125 = icmp slt i32 %124, %126, !dbg !9450
  br i1 %cmp125, label %for.body127, label %for.end150, !dbg !9451

for.body127:                                      ; preds = %for.cond124
  call void @llvm.dbg.declare(metadata i8** %spec128, metadata !9452, metadata !1898), !dbg !9454
  %127 = load i32, i32* %i122, align 4, !dbg !9455
  %idxprom129 = sext i32 %127 to i64, !dbg !9457
  %128 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9457
  %discard130 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %128, i32 0, i32 113, !dbg !9458
  %129 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %discard130, align 8, !dbg !9458
  %arrayidx131 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %129, i64 %idxprom129, !dbg !9457
  %specifier132 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx131, i32 0, i32 0, !dbg !9459
  %130 = load i8*, i8** %specifier132, align 8, !dbg !9459
  store i8* %130, i8** %spec128, align 8, !dbg !9460
  %131 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !9461
  %132 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9462
  %133 = load i8*, i8** %spec128, align 8, !dbg !9463
  %call133 = call i32 @check_stream_specifier(%struct.AVFormatContext* %131, %struct.AVStream* %132, i8* %133), !dbg !9464
  store i32 %call133, i32* %ret123, align 4, !dbg !9465
  %cmp134 = icmp sgt i32 %call133, 0, !dbg !9466
  br i1 %cmp134, label %if.then136, label %if.else142, !dbg !9467

if.then136:                                       ; preds = %for.body127
  %134 = load i32, i32* %i122, align 4, !dbg !9468
  %idxprom137 = sext i32 %134 to i64, !dbg !9471
  %135 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9471
  %discard138 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %135, i32 0, i32 113, !dbg !9472
  %136 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %discard138, align 8, !dbg !9472
  %arrayidx139 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %136, i64 %idxprom137, !dbg !9471
  %u140 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx139, i32 0, i32 1, !dbg !9473
  %str141 = bitcast %union.anon.1* %u140 to i8**, !dbg !9474
  %137 = load i8*, i8** %str141, align 8, !dbg !9474
  store i8* %137, i8** %discard_str, align 8, !dbg !9475
  br label %if.end147, !dbg !9476

if.else142:                                       ; preds = %for.body127
  %138 = load i32, i32* %ret123, align 4, !dbg !9477
  %cmp143 = icmp slt i32 %138, 0, !dbg !9480
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !9477

if.then145:                                       ; preds = %if.else142
  call void @exit_program(i32 1) #11, !dbg !9481
  unreachable, !dbg !9481

if.end146:                                        ; preds = %if.else142
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.then136
  br label %for.inc148, !dbg !9483

for.inc148:                                       ; preds = %if.end147
  %139 = load i32, i32* %i122, align 4, !dbg !9485
  %inc149 = add nsw i32 %139, 1, !dbg !9485
  store i32 %inc149, i32* %i122, align 4, !dbg !9485
  br label %for.cond124, !dbg !9487, !llvm.loop !9488

for.end150:                                       ; preds = %for.cond124
  %140 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9490
  %user_set_discard = getelementptr inbounds %struct.InputStream, %struct.InputStream* %140, i32 0, i32 3, !dbg !9491
  store i32 -16, i32* %user_set_discard, align 4, !dbg !9492
  %141 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9493
  %video_disable = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %141, i32 0, i32 51, !dbg !9495
  %142 = load i32, i32* %video_disable, align 8, !dbg !9495
  %tobool151 = icmp ne i32 %142, 0, !dbg !9493
  br i1 %tobool151, label %land.lhs.true, label %lor.lhs.false, !dbg !9496

land.lhs.true:                                    ; preds = %for.end150
  %143 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9497
  %st152 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %143, i32 0, i32 1, !dbg !9499
  %144 = load %struct.AVStream*, %struct.AVStream** %st152, align 8, !dbg !9499
  %codecpar153 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %144, i32 0, i32 19, !dbg !9500
  %145 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar153, align 8, !dbg !9500
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %145, i32 0, i32 0, !dbg !9501
  %146 = load i32, i32* %codec_type, align 8, !dbg !9501
  %cmp154 = icmp eq i32 %146, 0, !dbg !9502
  br i1 %cmp154, label %if.then179, label %lor.lhs.false, !dbg !9503

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.end150
  %147 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9504
  %audio_disable = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %147, i32 0, i32 52, !dbg !9505
  %148 = load i32, i32* %audio_disable, align 4, !dbg !9505
  %tobool156 = icmp ne i32 %148, 0, !dbg !9504
  br i1 %tobool156, label %land.lhs.true157, label %lor.lhs.false163, !dbg !9506

land.lhs.true157:                                 ; preds = %lor.lhs.false
  %149 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9507
  %st158 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %149, i32 0, i32 1, !dbg !9508
  %150 = load %struct.AVStream*, %struct.AVStream** %st158, align 8, !dbg !9508
  %codecpar159 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %150, i32 0, i32 19, !dbg !9509
  %151 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar159, align 8, !dbg !9509
  %codec_type160 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %151, i32 0, i32 0, !dbg !9510
  %152 = load i32, i32* %codec_type160, align 8, !dbg !9510
  %cmp161 = icmp eq i32 %152, 1, !dbg !9511
  br i1 %cmp161, label %if.then179, label %lor.lhs.false163, !dbg !9512

lor.lhs.false163:                                 ; preds = %land.lhs.true157, %lor.lhs.false
  %153 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9513
  %subtitle_disable = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %153, i32 0, i32 53, !dbg !9514
  %154 = load i32, i32* %subtitle_disable, align 8, !dbg !9514
  %tobool164 = icmp ne i32 %154, 0, !dbg !9513
  br i1 %tobool164, label %land.lhs.true165, label %lor.lhs.false171, !dbg !9515

land.lhs.true165:                                 ; preds = %lor.lhs.false163
  %155 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9516
  %st166 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %155, i32 0, i32 1, !dbg !9517
  %156 = load %struct.AVStream*, %struct.AVStream** %st166, align 8, !dbg !9517
  %codecpar167 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %156, i32 0, i32 19, !dbg !9518
  %157 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar167, align 8, !dbg !9518
  %codec_type168 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %157, i32 0, i32 0, !dbg !9519
  %158 = load i32, i32* %codec_type168, align 8, !dbg !9519
  %cmp169 = icmp eq i32 %158, 3, !dbg !9520
  br i1 %cmp169, label %if.then179, label %lor.lhs.false171, !dbg !9521

lor.lhs.false171:                                 ; preds = %land.lhs.true165, %lor.lhs.false163
  %159 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9522
  %data_disable = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %159, i32 0, i32 54, !dbg !9523
  %160 = load i32, i32* %data_disable, align 4, !dbg !9523
  %tobool172 = icmp ne i32 %160, 0, !dbg !9522
  br i1 %tobool172, label %land.lhs.true173, label %if.end181, !dbg !9524

land.lhs.true173:                                 ; preds = %lor.lhs.false171
  %161 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9525
  %st174 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %161, i32 0, i32 1, !dbg !9526
  %162 = load %struct.AVStream*, %struct.AVStream** %st174, align 8, !dbg !9526
  %codecpar175 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %162, i32 0, i32 19, !dbg !9527
  %163 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar175, align 8, !dbg !9527
  %codec_type176 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %163, i32 0, i32 0, !dbg !9528
  %164 = load i32, i32* %codec_type176, align 8, !dbg !9528
  %cmp177 = icmp eq i32 %164, 2, !dbg !9529
  br i1 %cmp177, label %if.then179, label %if.end181, !dbg !9530

if.then179:                                       ; preds = %land.lhs.true173, %land.lhs.true165, %land.lhs.true157, %land.lhs.true
  %165 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9532
  %user_set_discard180 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %165, i32 0, i32 3, !dbg !9533
  store i32 48, i32* %user_set_discard180, align 4, !dbg !9534
  br label %if.end181, !dbg !9532

if.end181:                                        ; preds = %if.then179, %land.lhs.true173, %lor.lhs.false171
  %166 = load i8*, i8** %discard_str, align 8, !dbg !9535
  %tobool182 = icmp ne i8* %166, null, !dbg !9535
  br i1 %tobool182, label %land.lhs.true183, label %if.end189, !dbg !9537

land.lhs.true183:                                 ; preds = %if.end181
  %167 = bitcast %struct.AVClass** %cc to i8*, !dbg !9538
  %168 = load %struct.AVOption*, %struct.AVOption** %discard_opt, align 8, !dbg !9540
  %169 = load i8*, i8** %discard_str, align 8, !dbg !9541
  %170 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9542
  %user_set_discard184 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %170, i32 0, i32 3, !dbg !9543
  %call185 = call i32 @av_opt_eval_int(i8* %167, %struct.AVOption* %168, i8* %169, i32* %user_set_discard184), !dbg !9544
  %cmp186 = icmp slt i32 %call185, 0, !dbg !9545
  br i1 %cmp186, label %if.then188, label %if.end189, !dbg !9546

if.then188:                                       ; preds = %land.lhs.true183
  %171 = load i8*, i8** %discard_str, align 8, !dbg !9547
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.459, i32 0, i32 0), i8* %171), !dbg !9549
  call void @exit_program(i32 1) #11, !dbg !9550
  unreachable, !dbg !9550

if.end189:                                        ; preds = %land.lhs.true183, %if.end181
  %172 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9551
  %filter_in_rescale_delta_last = getelementptr inbounds %struct.InputStream, %struct.InputStream* %172, i32 0, i32 15, !dbg !9552
  store i64 -9223372036854775808, i64* %filter_in_rescale_delta_last, align 8, !dbg !9553
  %173 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9554
  %dec190 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %173, i32 0, i32 6, !dbg !9555
  %174 = load %struct.AVCodec*, %struct.AVCodec** %dec190, align 8, !dbg !9555
  %call191 = call %struct.AVCodecContext* @avcodec_alloc_context3(%struct.AVCodec* %174), !dbg !9556
  %175 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9557
  %dec_ctx = getelementptr inbounds %struct.InputStream, %struct.InputStream* %175, i32 0, i32 5, !dbg !9558
  store %struct.AVCodecContext* %call191, %struct.AVCodecContext** %dec_ctx, align 8, !dbg !9559
  %176 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9560
  %dec_ctx192 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %176, i32 0, i32 5, !dbg !9562
  %177 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx192, align 8, !dbg !9562
  %tobool193 = icmp ne %struct.AVCodecContext* %177, null, !dbg !9560
  br i1 %tobool193, label %if.end195, label %if.then194, !dbg !9563

if.then194:                                       ; preds = %if.end189
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.460, i32 0, i32 0)), !dbg !9564
  call void @exit_program(i32 1) #11, !dbg !9566
  unreachable, !dbg !9566

if.end195:                                        ; preds = %if.end189
  %178 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9567
  %dec_ctx196 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %178, i32 0, i32 5, !dbg !9568
  %179 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx196, align 8, !dbg !9568
  %180 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9569
  %call197 = call i32 @avcodec_parameters_to_context(%struct.AVCodecContext* %179, %struct.AVCodecParameters* %180), !dbg !9570
  store i32 %call197, i32* %ret, align 4, !dbg !9571
  %181 = load i32, i32* %ret, align 4, !dbg !9572
  %cmp198 = icmp slt i32 %181, 0, !dbg !9574
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !9575

if.then200:                                       ; preds = %if.end195
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.461, i32 0, i32 0)), !dbg !9576
  call void @exit_program(i32 1) #11, !dbg !9578
  unreachable, !dbg !9578

if.end201:                                        ; preds = %if.end195
  %182 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9579
  %bitexact = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %182, i32 0, i32 50, !dbg !9581
  %183 = load i32, i32* %bitexact, align 4, !dbg !9581
  %tobool202 = icmp ne i32 %183, 0, !dbg !9579
  br i1 %tobool202, label %if.then203, label %if.end205, !dbg !9582

if.then203:                                       ; preds = %if.end201
  %184 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9583
  %dec_ctx204 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %184, i32 0, i32 5, !dbg !9584
  %185 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx204, align 8, !dbg !9584
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %185, i32 0, i32 13, !dbg !9585
  %186 = load i32, i32* %flags, align 4, !dbg !9586
  %or = or i32 %186, 8388608, !dbg !9586
  store i32 %or, i32* %flags, align 4, !dbg !9586
  br label %if.end205, !dbg !9583

if.end205:                                        ; preds = %if.then203, %if.end201
  %187 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9587
  %codec_type206 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %187, i32 0, i32 0, !dbg !9588
  %188 = load i32, i32* %codec_type206, align 8, !dbg !9588
  switch i32 %188, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb473
    i32 2, label %sw.bb505
    i32 3, label %sw.bb505
    i32 4, label %sw.bb581
    i32 -1, label %sw.bb581
  ], !dbg !9589

sw.bb:                                            ; preds = %if.end205
  %189 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9590
  %dec207 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %189, i32 0, i32 6, !dbg !9593
  %190 = load %struct.AVCodec*, %struct.AVCodec** %dec207, align 8, !dbg !9593
  %tobool208 = icmp ne %struct.AVCodec* %190, null, !dbg !9590
  br i1 %tobool208, label %if.end213, label %if.then209, !dbg !9594

if.then209:                                       ; preds = %sw.bb
  %191 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !9595
  %codec_id210 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %191, i32 0, i32 1, !dbg !9596
  %192 = load i32, i32* %codec_id210, align 4, !dbg !9596
  %call211 = call %struct.AVCodec* @avcodec_find_decoder(i32 %192), !dbg !9597
  %193 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9598
  %dec212 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %193, i32 0, i32 6, !dbg !9599
  store %struct.AVCodec* %call211, %struct.AVCodec** %dec212, align 8, !dbg !9600
  br label %if.end213, !dbg !9598

if.end213:                                        ; preds = %if.then209, %sw.bb
  %194 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9601
  %codec = getelementptr inbounds %struct.AVStream, %struct.AVStream* %194, i32 0, i32 2, !dbg !9603
  %195 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec, align 8, !dbg !9603
  %lowres = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %195, i32 0, i32 144, !dbg !9604
  %196 = load i32, i32* %lowres, align 8, !dbg !9604
  %tobool214 = icmp ne i32 %196, 0, !dbg !9601
  br i1 %tobool214, label %if.then215, label %if.end232, !dbg !9605

if.then215:                                       ; preds = %if.end213
  %197 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9606
  %codec216 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %197, i32 0, i32 2, !dbg !9608
  %198 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec216, align 8, !dbg !9608
  %lowres217 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %198, i32 0, i32 144, !dbg !9609
  %199 = load i32, i32* %lowres217, align 8, !dbg !9609
  %200 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9610
  %dec_ctx218 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %200, i32 0, i32 5, !dbg !9611
  %201 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx218, align 8, !dbg !9611
  %lowres219 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %201, i32 0, i32 144, !dbg !9612
  store i32 %199, i32* %lowres219, align 8, !dbg !9613
  %202 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9614
  %codec220 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %202, i32 0, i32 2, !dbg !9615
  %203 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec220, align 8, !dbg !9615
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %203, i32 0, i32 20, !dbg !9616
  %204 = load i32, i32* %width, align 4, !dbg !9616
  %205 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9617
  %dec_ctx221 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %205, i32 0, i32 5, !dbg !9618
  %206 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx221, align 8, !dbg !9618
  %width222 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %206, i32 0, i32 20, !dbg !9619
  store i32 %204, i32* %width222, align 4, !dbg !9620
  %207 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9621
  %codec223 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %207, i32 0, i32 2, !dbg !9622
  %208 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec223, align 8, !dbg !9622
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %208, i32 0, i32 21, !dbg !9623
  %209 = load i32, i32* %height, align 8, !dbg !9623
  %210 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9624
  %dec_ctx224 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %210, i32 0, i32 5, !dbg !9625
  %211 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx224, align 8, !dbg !9625
  %height225 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %211, i32 0, i32 21, !dbg !9626
  store i32 %209, i32* %height225, align 8, !dbg !9627
  %212 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9628
  %codec226 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %212, i32 0, i32 2, !dbg !9629
  %213 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec226, align 8, !dbg !9629
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %213, i32 0, i32 22, !dbg !9630
  %214 = load i32, i32* %coded_width, align 4, !dbg !9630
  %215 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9631
  %dec_ctx227 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %215, i32 0, i32 5, !dbg !9632
  %216 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx227, align 8, !dbg !9632
  %coded_width228 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %216, i32 0, i32 22, !dbg !9633
  store i32 %214, i32* %coded_width228, align 4, !dbg !9634
  %217 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9635
  %codec229 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %217, i32 0, i32 2, !dbg !9636
  %218 = load %struct.AVCodecContext*, %struct.AVCodecContext** %codec229, align 8, !dbg !9636
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %218, i32 0, i32 23, !dbg !9637
  %219 = load i32, i32* %coded_height, align 8, !dbg !9637
  %220 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9638
  %dec_ctx230 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %220, i32 0, i32 5, !dbg !9639
  %221 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx230, align 8, !dbg !9639
  %coded_height231 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %221, i32 0, i32 23, !dbg !9640
  store i32 %219, i32* %coded_height231, align 8, !dbg !9641
  br label %if.end232, !dbg !9642

if.end232:                                        ; preds = %if.then215, %if.end213
  %222 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9643
  %dec_ctx233 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %222, i32 0, i32 5, !dbg !9644
  %223 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx233, align 8, !dbg !9644
  %framerate234 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %223, i32 0, i32 163, !dbg !9645
  %224 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9646
  %avg_frame_rate = getelementptr inbounds %struct.AVStream, %struct.AVStream* %224, i32 0, i32 12, !dbg !9647
  %225 = bitcast %struct.AVRational* %framerate234 to i8*, !dbg !9647
  %226 = bitcast %struct.AVRational* %avg_frame_rate to i8*, !dbg !9647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %225, i8* %226, i64 8, i32 8, i1 false), !dbg !9647
  call void @llvm.dbg.declare(metadata i32* %i235, metadata !9648, metadata !1898), !dbg !9650
  call void @llvm.dbg.declare(metadata i32* %ret236, metadata !9651, metadata !1898), !dbg !9652
  store i32 0, i32* %i235, align 4, !dbg !9653
  br label %for.cond237, !dbg !9655

for.cond237:                                      ; preds = %for.inc260, %if.end232
  %227 = load i32, i32* %i235, align 4, !dbg !9656
  %228 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9659
  %nb_frame_rates = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %228, i32 0, i32 12, !dbg !9660
  %229 = load i32, i32* %nb_frame_rates, align 8, !dbg !9660
  %cmp238 = icmp slt i32 %227, %229, !dbg !9661
  br i1 %cmp238, label %for.body240, label %for.end262, !dbg !9662

for.body240:                                      ; preds = %for.cond237
  call void @llvm.dbg.declare(metadata i8** %spec241, metadata !9663, metadata !1898), !dbg !9665
  %230 = load i32, i32* %i235, align 4, !dbg !9666
  %idxprom242 = sext i32 %230 to i64, !dbg !9668
  %231 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9668
  %frame_rates = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %231, i32 0, i32 11, !dbg !9669
  %232 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_rates, align 8, !dbg !9669
  %arrayidx243 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %232, i64 %idxprom242, !dbg !9668
  %specifier244 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx243, i32 0, i32 0, !dbg !9670
  %233 = load i8*, i8** %specifier244, align 8, !dbg !9670
  store i8* %233, i8** %spec241, align 8, !dbg !9671
  %234 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !9672
  %235 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9673
  %236 = load i8*, i8** %spec241, align 8, !dbg !9674
  %call245 = call i32 @check_stream_specifier(%struct.AVFormatContext* %234, %struct.AVStream* %235, i8* %236), !dbg !9675
  store i32 %call245, i32* %ret236, align 4, !dbg !9676
  %cmp246 = icmp sgt i32 %call245, 0, !dbg !9677
  br i1 %cmp246, label %if.then248, label %if.else254, !dbg !9678

if.then248:                                       ; preds = %for.body240
  %237 = load i32, i32* %i235, align 4, !dbg !9679
  %idxprom249 = sext i32 %237 to i64, !dbg !9682
  %238 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9682
  %frame_rates250 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %238, i32 0, i32 11, !dbg !9683
  %239 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_rates250, align 8, !dbg !9683
  %arrayidx251 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %239, i64 %idxprom249, !dbg !9682
  %u252 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx251, i32 0, i32 1, !dbg !9684
  %str253 = bitcast %union.anon.1* %u252 to i8**, !dbg !9685
  %240 = load i8*, i8** %str253, align 8, !dbg !9685
  store i8* %240, i8** %framerate, align 8, !dbg !9686
  br label %if.end259, !dbg !9687

if.else254:                                       ; preds = %for.body240
  %241 = load i32, i32* %ret236, align 4, !dbg !9688
  %cmp255 = icmp slt i32 %241, 0, !dbg !9691
  br i1 %cmp255, label %if.then257, label %if.end258, !dbg !9688

if.then257:                                       ; preds = %if.else254
  call void @exit_program(i32 1) #11, !dbg !9692
  unreachable, !dbg !9692

if.end258:                                        ; preds = %if.else254
  br label %if.end259

if.end259:                                        ; preds = %if.end258, %if.then248
  br label %for.inc260, !dbg !9694

for.inc260:                                       ; preds = %if.end259
  %242 = load i32, i32* %i235, align 4, !dbg !9696
  %inc261 = add nsw i32 %242, 1, !dbg !9696
  store i32 %inc261, i32* %i235, align 4, !dbg !9696
  br label %for.cond237, !dbg !9698, !llvm.loop !9699

for.end262:                                       ; preds = %for.cond237
  %243 = load i8*, i8** %framerate, align 8, !dbg !9701
  %tobool263 = icmp ne i8* %243, null, !dbg !9701
  br i1 %tobool263, label %land.lhs.true264, label %if.end270, !dbg !9703

land.lhs.true264:                                 ; preds = %for.end262
  %244 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9704
  %framerate265 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %244, i32 0, i32 23, !dbg !9706
  %245 = load i8*, i8** %framerate, align 8, !dbg !9707
  %call266 = call i32 @av_parse_video_rate(%struct.AVRational* %framerate265, i8* %245), !dbg !9708
  %cmp267 = icmp slt i32 %call266, 0, !dbg !9709
  br i1 %cmp267, label %if.then269, label %if.end270, !dbg !9710

if.then269:                                       ; preds = %land.lhs.true264
  %246 = load i8*, i8** %framerate, align 8, !dbg !9711
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.462, i32 0, i32 0), i8* %246), !dbg !9713
  call void @exit_program(i32 1) #11, !dbg !9714
  unreachable, !dbg !9714

if.end270:                                        ; preds = %land.lhs.true264, %for.end262
  %247 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9715
  %top_field_first = getelementptr inbounds %struct.InputStream, %struct.InputStream* %247, i32 0, i32 24, !dbg !9716
  store i32 -1, i32* %top_field_first, align 8, !dbg !9717
  call void @llvm.dbg.declare(metadata i32* %i271, metadata !9718, metadata !1898), !dbg !9720
  call void @llvm.dbg.declare(metadata i32* %ret272, metadata !9721, metadata !1898), !dbg !9722
  store i32 0, i32* %i271, align 4, !dbg !9723
  br label %for.cond273, !dbg !9725

for.cond273:                                      ; preds = %for.inc298, %if.end270
  %248 = load i32, i32* %i271, align 4, !dbg !9726
  %249 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9729
  %nb_top_field_first = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %249, i32 0, i32 84, !dbg !9730
  %250 = load i32, i32* %nb_top_field_first, align 8, !dbg !9730
  %cmp274 = icmp slt i32 %248, %250, !dbg !9731
  br i1 %cmp274, label %for.body276, label %for.end300, !dbg !9732

for.body276:                                      ; preds = %for.cond273
  call void @llvm.dbg.declare(metadata i8** %spec277, metadata !9733, metadata !1898), !dbg !9735
  %251 = load i32, i32* %i271, align 4, !dbg !9736
  %idxprom278 = sext i32 %251 to i64, !dbg !9738
  %252 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9738
  %top_field_first279 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %252, i32 0, i32 83, !dbg !9739
  %253 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %top_field_first279, align 8, !dbg !9739
  %arrayidx280 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %253, i64 %idxprom278, !dbg !9738
  %specifier281 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx280, i32 0, i32 0, !dbg !9740
  %254 = load i8*, i8** %specifier281, align 8, !dbg !9740
  store i8* %254, i8** %spec277, align 8, !dbg !9741
  %255 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !9742
  %256 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9743
  %257 = load i8*, i8** %spec277, align 8, !dbg !9744
  %call282 = call i32 @check_stream_specifier(%struct.AVFormatContext* %255, %struct.AVStream* %256, i8* %257), !dbg !9745
  store i32 %call282, i32* %ret272, align 4, !dbg !9746
  %cmp283 = icmp sgt i32 %call282, 0, !dbg !9747
  br i1 %cmp283, label %if.then285, label %if.else292, !dbg !9748

if.then285:                                       ; preds = %for.body276
  %258 = load i32, i32* %i271, align 4, !dbg !9749
  %idxprom286 = sext i32 %258 to i64, !dbg !9752
  %259 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9752
  %top_field_first287 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %259, i32 0, i32 83, !dbg !9753
  %260 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %top_field_first287, align 8, !dbg !9753
  %arrayidx288 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %260, i64 %idxprom286, !dbg !9752
  %u289 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx288, i32 0, i32 1, !dbg !9754
  %i290 = bitcast %union.anon.1* %u289 to i32*, !dbg !9755
  %261 = load i32, i32* %i290, align 8, !dbg !9755
  %262 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9756
  %top_field_first291 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %262, i32 0, i32 24, !dbg !9757
  store i32 %261, i32* %top_field_first291, align 8, !dbg !9758
  br label %if.end297, !dbg !9756

if.else292:                                       ; preds = %for.body276
  %263 = load i32, i32* %ret272, align 4, !dbg !9759
  %cmp293 = icmp slt i32 %263, 0, !dbg !9762
  br i1 %cmp293, label %if.then295, label %if.end296, !dbg !9759

if.then295:                                       ; preds = %if.else292
  call void @exit_program(i32 1) #11, !dbg !9763
  unreachable, !dbg !9763

if.end296:                                        ; preds = %if.else292
  br label %if.end297

if.end297:                                        ; preds = %if.end296, %if.then285
  br label %for.inc298, !dbg !9765

for.inc298:                                       ; preds = %if.end297
  %264 = load i32, i32* %i271, align 4, !dbg !9767
  %inc299 = add nsw i32 %264, 1, !dbg !9767
  store i32 %inc299, i32* %i271, align 4, !dbg !9767
  br label %for.cond273, !dbg !9769, !llvm.loop !9770

for.end300:                                       ; preds = %for.cond273
  call void @llvm.dbg.declare(metadata i32* %i301, metadata !9772, metadata !1898), !dbg !9774
  call void @llvm.dbg.declare(metadata i32* %ret302, metadata !9775, metadata !1898), !dbg !9776
  store i32 0, i32* %i301, align 4, !dbg !9777
  br label %for.cond303, !dbg !9779

for.cond303:                                      ; preds = %for.inc326, %for.end300
  %265 = load i32, i32* %i301, align 4, !dbg !9780
  %266 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9783
  %nb_hwaccels = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %266, i32 0, i32 27, !dbg !9784
  %267 = load i32, i32* %nb_hwaccels, align 8, !dbg !9784
  %cmp304 = icmp slt i32 %265, %267, !dbg !9785
  br i1 %cmp304, label %for.body306, label %for.end328, !dbg !9786

for.body306:                                      ; preds = %for.cond303
  call void @llvm.dbg.declare(metadata i8** %spec307, metadata !9787, metadata !1898), !dbg !9789
  %268 = load i32, i32* %i301, align 4, !dbg !9790
  %idxprom308 = sext i32 %268 to i64, !dbg !9792
  %269 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9792
  %hwaccels = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %269, i32 0, i32 26, !dbg !9793
  %270 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %hwaccels, align 8, !dbg !9793
  %arrayidx309 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %270, i64 %idxprom308, !dbg !9792
  %specifier310 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx309, i32 0, i32 0, !dbg !9794
  %271 = load i8*, i8** %specifier310, align 8, !dbg !9794
  store i8* %271, i8** %spec307, align 8, !dbg !9795
  %272 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !9796
  %273 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9797
  %274 = load i8*, i8** %spec307, align 8, !dbg !9798
  %call311 = call i32 @check_stream_specifier(%struct.AVFormatContext* %272, %struct.AVStream* %273, i8* %274), !dbg !9799
  store i32 %call311, i32* %ret302, align 4, !dbg !9800
  %cmp312 = icmp sgt i32 %call311, 0, !dbg !9801
  br i1 %cmp312, label %if.then314, label %if.else320, !dbg !9802

if.then314:                                       ; preds = %for.body306
  %275 = load i32, i32* %i301, align 4, !dbg !9803
  %idxprom315 = sext i32 %275 to i64, !dbg !9806
  %276 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9806
  %hwaccels316 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %276, i32 0, i32 26, !dbg !9807
  %277 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %hwaccels316, align 8, !dbg !9807
  %arrayidx317 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %277, i64 %idxprom315, !dbg !9806
  %u318 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx317, i32 0, i32 1, !dbg !9808
  %str319 = bitcast %union.anon.1* %u318 to i8**, !dbg !9809
  %278 = load i8*, i8** %str319, align 8, !dbg !9809
  store i8* %278, i8** %hwaccel, align 8, !dbg !9810
  br label %if.end325, !dbg !9811

if.else320:                                       ; preds = %for.body306
  %279 = load i32, i32* %ret302, align 4, !dbg !9812
  %cmp321 = icmp slt i32 %279, 0, !dbg !9815
  br i1 %cmp321, label %if.then323, label %if.end324, !dbg !9812

if.then323:                                       ; preds = %if.else320
  call void @exit_program(i32 1) #11, !dbg !9816
  unreachable, !dbg !9816

if.end324:                                        ; preds = %if.else320
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %if.then314
  br label %for.inc326, !dbg !9818

for.inc326:                                       ; preds = %if.end325
  %280 = load i32, i32* %i301, align 4, !dbg !9820
  %inc327 = add nsw i32 %280, 1, !dbg !9820
  store i32 %inc327, i32* %i301, align 4, !dbg !9820
  br label %for.cond303, !dbg !9822, !llvm.loop !9823

for.end328:                                       ; preds = %for.cond303
  %281 = load i8*, i8** %hwaccel, align 8, !dbg !9825
  %tobool329 = icmp ne i8* %281, null, !dbg !9825
  br i1 %tobool329, label %if.then330, label %if.end395, !dbg !9827

if.then330:                                       ; preds = %for.end328
  %282 = load i8*, i8** %hwaccel, align 8, !dbg !9828
  %call331 = call i32 @strcmp(i8* %282, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.463, i32 0, i32 0)) #10, !dbg !9831
  %tobool332 = icmp ne i32 %call331, 0, !dbg !9831
  br i1 %tobool332, label %if.end334, label %if.then333, !dbg !9832

if.then333:                                       ; preds = %if.then330
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.464, i32 0, i32 0), i8** %hwaccel, align 8, !dbg !9833
  br label %if.end334, !dbg !9834

if.end334:                                        ; preds = %if.then333, %if.then330
  %283 = load i8*, i8** %hwaccel, align 8, !dbg !9835
  %call335 = call i32 @strcmp(i8* %283, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.465, i32 0, i32 0)) #10, !dbg !9837
  %tobool336 = icmp ne i32 %call335, 0, !dbg !9837
  br i1 %tobool336, label %if.else338, label %if.then337, !dbg !9838

if.then337:                                       ; preds = %if.end334
  %284 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9839
  %hwaccel_id = getelementptr inbounds %struct.InputStream, %struct.InputStream* %284, i32 0, i32 34, !dbg !9840
  store i32 0, i32* %hwaccel_id, align 8, !dbg !9841
  br label %if.end394, !dbg !9839

if.else338:                                       ; preds = %if.end334
  %285 = load i8*, i8** %hwaccel, align 8, !dbg !9842
  %call339 = call i32 @strcmp(i8* %285, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.466, i32 0, i32 0)) #10, !dbg !9844
  %tobool340 = icmp ne i32 %call339, 0, !dbg !9844
  br i1 %tobool340, label %if.else343, label %if.then341, !dbg !9845

if.then341:                                       ; preds = %if.else338
  %286 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9846
  %hwaccel_id342 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %286, i32 0, i32 34, !dbg !9847
  store i32 1, i32* %hwaccel_id342, align 8, !dbg !9848
  br label %if.end393, !dbg !9846

if.else343:                                       ; preds = %if.else338
  call void @llvm.dbg.declare(metadata i32* %type, metadata !9849, metadata !1898), !dbg !9851
  call void @llvm.dbg.declare(metadata i32* %i344, metadata !9852, metadata !1898), !dbg !9853
  store i32 0, i32* %i344, align 4, !dbg !9854
  br label %for.cond345, !dbg !9856

for.cond345:                                      ; preds = %for.inc360, %if.else343
  %287 = load i32, i32* %i344, align 4, !dbg !9857
  %idxprom346 = sext i32 %287 to i64, !dbg !9860
  %arrayidx347 = getelementptr inbounds [1 x %struct.HWAccel], [1 x %struct.HWAccel]* @hwaccels, i64 0, i64 %idxprom346, !dbg !9860
  %name = getelementptr inbounds %struct.HWAccel, %struct.HWAccel* %arrayidx347, i32 0, i32 0, !dbg !9861
  %288 = load i8*, i8** %name, align 8, !dbg !9861
  %tobool348 = icmp ne i8* %288, null, !dbg !9862
  br i1 %tobool348, label %for.body349, label %for.end362, !dbg !9862

for.body349:                                      ; preds = %for.cond345
  %289 = load i32, i32* %i344, align 4, !dbg !9863
  %idxprom350 = sext i32 %289 to i64, !dbg !9866
  %arrayidx351 = getelementptr inbounds [1 x %struct.HWAccel], [1 x %struct.HWAccel]* @hwaccels, i64 0, i64 %idxprom350, !dbg !9866
  %name352 = getelementptr inbounds %struct.HWAccel, %struct.HWAccel* %arrayidx351, i32 0, i32 0, !dbg !9867
  %290 = load i8*, i8** %name352, align 8, !dbg !9867
  %291 = load i8*, i8** %hwaccel, align 8, !dbg !9868
  %call353 = call i32 @strcmp(i8* %290, i8* %291) #10, !dbg !9869
  %tobool354 = icmp ne i32 %call353, 0, !dbg !9869
  br i1 %tobool354, label %if.end359, label %if.then355, !dbg !9870

if.then355:                                       ; preds = %for.body349
  %292 = load i32, i32* %i344, align 4, !dbg !9871
  %idxprom356 = sext i32 %292 to i64, !dbg !9873
  %arrayidx357 = getelementptr inbounds [1 x %struct.HWAccel], [1 x %struct.HWAccel]* @hwaccels, i64 0, i64 %idxprom356, !dbg !9873
  %id = getelementptr inbounds %struct.HWAccel, %struct.HWAccel* %arrayidx357, i32 0, i32 2, !dbg !9874
  %293 = load i32, i32* %id, align 8, !dbg !9874
  %294 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9875
  %hwaccel_id358 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %294, i32 0, i32 34, !dbg !9876
  store i32 %293, i32* %hwaccel_id358, align 8, !dbg !9877
  br label %for.end362, !dbg !9878

if.end359:                                        ; preds = %for.body349
  br label %for.inc360, !dbg !9879

for.inc360:                                       ; preds = %if.end359
  %295 = load i32, i32* %i344, align 4, !dbg !9880
  %inc361 = add nsw i32 %295, 1, !dbg !9880
  store i32 %inc361, i32* %i344, align 4, !dbg !9880
  br label %for.cond345, !dbg !9882, !llvm.loop !9883

for.end362:                                       ; preds = %if.then355, %for.cond345
  %296 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9885
  %hwaccel_id363 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %296, i32 0, i32 34, !dbg !9887
  %297 = load i32, i32* %hwaccel_id363, align 8, !dbg !9887
  %tobool364 = icmp ne i32 %297, 0, !dbg !9885
  br i1 %tobool364, label %if.end372, label %if.then365, !dbg !9888

if.then365:                                       ; preds = %for.end362
  %298 = load i8*, i8** %hwaccel, align 8, !dbg !9889
  %call366 = call i32 @av_hwdevice_find_type_by_name(i8* %298), !dbg !9891
  store i32 %call366, i32* %type, align 4, !dbg !9892
  %299 = load i32, i32* %type, align 4, !dbg !9893
  %cmp367 = icmp ne i32 %299, 0, !dbg !9895
  br i1 %cmp367, label %if.then369, label %if.end371, !dbg !9896

if.then369:                                       ; preds = %if.then365
  %300 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9897
  %hwaccel_id370 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %300, i32 0, i32 34, !dbg !9899
  store i32 2, i32* %hwaccel_id370, align 8, !dbg !9900
  %301 = load i32, i32* %type, align 4, !dbg !9901
  %302 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9902
  %hwaccel_device_type = getelementptr inbounds %struct.InputStream, %struct.InputStream* %302, i32 0, i32 35, !dbg !9903
  store i32 %301, i32* %hwaccel_device_type, align 4, !dbg !9904
  br label %if.end371, !dbg !9905

if.end371:                                        ; preds = %if.then369, %if.then365
  br label %if.end372, !dbg !9906

if.end372:                                        ; preds = %if.end371, %for.end362
  %303 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !9907
  %hwaccel_id373 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %303, i32 0, i32 34, !dbg !9909
  %304 = load i32, i32* %hwaccel_id373, align 8, !dbg !9909
  %tobool374 = icmp ne i32 %304, 0, !dbg !9907
  br i1 %tobool374, label %if.end392, label %if.then375, !dbg !9910

if.then375:                                       ; preds = %if.end372
  %305 = load i8*, i8** %hwaccel, align 8, !dbg !9911
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.467, i32 0, i32 0), i8* %305), !dbg !9913
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.468, i32 0, i32 0)), !dbg !9914
  store i32 0, i32* %type, align 4, !dbg !9915
  br label %while.cond, !dbg !9916

while.cond:                                       ; preds = %while.body, %if.then375
  %306 = load i32, i32* %type, align 4, !dbg !9917
  %call376 = call i32 @av_hwdevice_iterate_types(i32 %306), !dbg !9919
  store i32 %call376, i32* %type, align 4, !dbg !9920
  %cmp377 = icmp ne i32 %call376, 0, !dbg !9921
  br i1 %cmp377, label %while.body, label %while.end, !dbg !9922

while.body:                                       ; preds = %while.cond
  %307 = load i32, i32* %type, align 4, !dbg !9923
  %call379 = call i8* @av_hwdevice_get_type_name(i32 %307), !dbg !9924
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.469, i32 0, i32 0), i8* %call379), !dbg !9925
  br label %while.cond, !dbg !9926, !llvm.loop !9928

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %i344, align 4, !dbg !9929
  br label %for.cond380, !dbg !9931

for.cond380:                                      ; preds = %for.inc389, %while.end
  %308 = load i32, i32* %i344, align 4, !dbg !9932
  %idxprom381 = sext i32 %308 to i64, !dbg !9935
  %arrayidx382 = getelementptr inbounds [1 x %struct.HWAccel], [1 x %struct.HWAccel]* @hwaccels, i64 0, i64 %idxprom381, !dbg !9935
  %name383 = getelementptr inbounds %struct.HWAccel, %struct.HWAccel* %arrayidx382, i32 0, i32 0, !dbg !9936
  %309 = load i8*, i8** %name383, align 8, !dbg !9936
  %tobool384 = icmp ne i8* %309, null, !dbg !9937
  br i1 %tobool384, label %for.body385, label %for.end391, !dbg !9937

for.body385:                                      ; preds = %for.cond380
  %310 = load i32, i32* %i344, align 4, !dbg !9938
  %idxprom386 = sext i32 %310 to i64, !dbg !9939
  %arrayidx387 = getelementptr inbounds [1 x %struct.HWAccel], [1 x %struct.HWAccel]* @hwaccels, i64 0, i64 %idxprom386, !dbg !9939
  %name388 = getelementptr inbounds %struct.HWAccel, %struct.HWAccel* %arrayidx387, i32 0, i32 0, !dbg !9940
  %311 = load i8*, i8** %name388, align 8, !dbg !9940
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.469, i32 0, i32 0), i8* %311), !dbg !9941
  br label %for.inc389, !dbg !9941

for.inc389:                                       ; preds = %for.body385
  %312 = load i32, i32* %i344, align 4, !dbg !9942
  %inc390 = add nsw i32 %312, 1, !dbg !9942
  store i32 %inc390, i32* %i344, align 4, !dbg !9942
  br label %for.cond380, !dbg !9944, !llvm.loop !9945

for.end391:                                       ; preds = %for.cond380
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0)), !dbg !9947
  call void @exit_program(i32 1) #11, !dbg !9948
  unreachable, !dbg !9948

if.end392:                                        ; preds = %if.end372
  br label %if.end393

if.end393:                                        ; preds = %if.end392, %if.then341
  br label %if.end394

if.end394:                                        ; preds = %if.end393, %if.then337
  br label %if.end395, !dbg !9949

if.end395:                                        ; preds = %if.end394, %for.end328
  call void @llvm.dbg.declare(metadata i32* %i396, metadata !9950, metadata !1898), !dbg !9952
  call void @llvm.dbg.declare(metadata i32* %ret397, metadata !9953, metadata !1898), !dbg !9954
  store i32 0, i32* %i396, align 4, !dbg !9955
  br label %for.cond398, !dbg !9957

for.cond398:                                      ; preds = %for.inc421, %if.end395
  %313 = load i32, i32* %i396, align 4, !dbg !9958
  %314 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9961
  %nb_hwaccel_devices = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %314, i32 0, i32 29, !dbg !9962
  %315 = load i32, i32* %nb_hwaccel_devices, align 8, !dbg !9962
  %cmp399 = icmp slt i32 %313, %315, !dbg !9963
  br i1 %cmp399, label %for.body401, label %for.end423, !dbg !9964

for.body401:                                      ; preds = %for.cond398
  call void @llvm.dbg.declare(metadata i8** %spec402, metadata !9965, metadata !1898), !dbg !9967
  %316 = load i32, i32* %i396, align 4, !dbg !9968
  %idxprom403 = sext i32 %316 to i64, !dbg !9970
  %317 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9970
  %hwaccel_devices = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %317, i32 0, i32 28, !dbg !9971
  %318 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %hwaccel_devices, align 8, !dbg !9971
  %arrayidx404 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %318, i64 %idxprom403, !dbg !9970
  %specifier405 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx404, i32 0, i32 0, !dbg !9972
  %319 = load i8*, i8** %specifier405, align 8, !dbg !9972
  store i8* %319, i8** %spec402, align 8, !dbg !9973
  %320 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !9974
  %321 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9975
  %322 = load i8*, i8** %spec402, align 8, !dbg !9976
  %call406 = call i32 @check_stream_specifier(%struct.AVFormatContext* %320, %struct.AVStream* %321, i8* %322), !dbg !9977
  store i32 %call406, i32* %ret397, align 4, !dbg !9978
  %cmp407 = icmp sgt i32 %call406, 0, !dbg !9979
  br i1 %cmp407, label %if.then409, label %if.else415, !dbg !9980

if.then409:                                       ; preds = %for.body401
  %323 = load i32, i32* %i396, align 4, !dbg !9981
  %idxprom410 = sext i32 %323 to i64, !dbg !9984
  %324 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !9984
  %hwaccel_devices411 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %324, i32 0, i32 28, !dbg !9985
  %325 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %hwaccel_devices411, align 8, !dbg !9985
  %arrayidx412 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %325, i64 %idxprom410, !dbg !9984
  %u413 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx412, i32 0, i32 1, !dbg !9986
  %str414 = bitcast %union.anon.1* %u413 to i8**, !dbg !9987
  %326 = load i8*, i8** %str414, align 8, !dbg !9987
  store i8* %326, i8** %hwaccel_device, align 8, !dbg !9988
  br label %if.end420, !dbg !9989

if.else415:                                       ; preds = %for.body401
  %327 = load i32, i32* %ret397, align 4, !dbg !9990
  %cmp416 = icmp slt i32 %327, 0, !dbg !9993
  br i1 %cmp416, label %if.then418, label %if.end419, !dbg !9990

if.then418:                                       ; preds = %if.else415
  call void @exit_program(i32 1) #11, !dbg !9994
  unreachable, !dbg !9994

if.end419:                                        ; preds = %if.else415
  br label %if.end420

if.end420:                                        ; preds = %if.end419, %if.then409
  br label %for.inc421, !dbg !9996

for.inc421:                                       ; preds = %if.end420
  %328 = load i32, i32* %i396, align 4, !dbg !9998
  %inc422 = add nsw i32 %328, 1, !dbg !9998
  store i32 %inc422, i32* %i396, align 4, !dbg !9998
  br label %for.cond398, !dbg !10000, !llvm.loop !10001

for.end423:                                       ; preds = %for.cond398
  %329 = load i8*, i8** %hwaccel_device, align 8, !dbg !10003
  %tobool424 = icmp ne i8* %329, null, !dbg !10003
  br i1 %tobool424, label %if.then425, label %if.end432, !dbg !10005

if.then425:                                       ; preds = %for.end423
  %330 = load i8*, i8** %hwaccel_device, align 8, !dbg !10006
  %call426 = call noalias i8* @av_strdup(i8* %330), !dbg !10008
  %331 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10009
  %hwaccel_device427 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %331, i32 0, i32 36, !dbg !10010
  store i8* %call426, i8** %hwaccel_device427, align 8, !dbg !10011
  %332 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10012
  %hwaccel_device428 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %332, i32 0, i32 36, !dbg !10014
  %333 = load i8*, i8** %hwaccel_device428, align 8, !dbg !10014
  %tobool429 = icmp ne i8* %333, null, !dbg !10012
  br i1 %tobool429, label %if.end431, label %if.then430, !dbg !10015

if.then430:                                       ; preds = %if.then425
  call void @exit_program(i32 1) #11, !dbg !10016
  unreachable, !dbg !10016

if.end431:                                        ; preds = %if.then425
  br label %if.end432, !dbg !10017

if.end432:                                        ; preds = %if.end431, %for.end423
  call void @llvm.dbg.declare(metadata i32* %i433, metadata !10018, metadata !1898), !dbg !10020
  call void @llvm.dbg.declare(metadata i32* %ret434, metadata !10021, metadata !1898), !dbg !10022
  store i32 0, i32* %i433, align 4, !dbg !10023
  br label %for.cond435, !dbg !10025

for.cond435:                                      ; preds = %for.inc458, %if.end432
  %334 = load i32, i32* %i433, align 4, !dbg !10026
  %335 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10029
  %nb_hwaccel_output_formats = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %335, i32 0, i32 31, !dbg !10030
  %336 = load i32, i32* %nb_hwaccel_output_formats, align 8, !dbg !10030
  %cmp436 = icmp slt i32 %334, %336, !dbg !10031
  br i1 %cmp436, label %for.body438, label %for.end460, !dbg !10032

for.body438:                                      ; preds = %for.cond435
  call void @llvm.dbg.declare(metadata i8** %spec439, metadata !10033, metadata !1898), !dbg !10035
  %337 = load i32, i32* %i433, align 4, !dbg !10036
  %idxprom440 = sext i32 %337 to i64, !dbg !10038
  %338 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10038
  %hwaccel_output_formats = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %338, i32 0, i32 30, !dbg !10039
  %339 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %hwaccel_output_formats, align 8, !dbg !10039
  %arrayidx441 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %339, i64 %idxprom440, !dbg !10038
  %specifier442 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx441, i32 0, i32 0, !dbg !10040
  %340 = load i8*, i8** %specifier442, align 8, !dbg !10040
  store i8* %340, i8** %spec439, align 8, !dbg !10041
  %341 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !10042
  %342 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10043
  %343 = load i8*, i8** %spec439, align 8, !dbg !10044
  %call443 = call i32 @check_stream_specifier(%struct.AVFormatContext* %341, %struct.AVStream* %342, i8* %343), !dbg !10045
  store i32 %call443, i32* %ret434, align 4, !dbg !10046
  %cmp444 = icmp sgt i32 %call443, 0, !dbg !10047
  br i1 %cmp444, label %if.then446, label %if.else452, !dbg !10048

if.then446:                                       ; preds = %for.body438
  %344 = load i32, i32* %i433, align 4, !dbg !10049
  %idxprom447 = sext i32 %344 to i64, !dbg !10052
  %345 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10052
  %hwaccel_output_formats448 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %345, i32 0, i32 30, !dbg !10053
  %346 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %hwaccel_output_formats448, align 8, !dbg !10053
  %arrayidx449 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %346, i64 %idxprom447, !dbg !10052
  %u450 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx449, i32 0, i32 1, !dbg !10054
  %str451 = bitcast %union.anon.1* %u450 to i8**, !dbg !10055
  %347 = load i8*, i8** %str451, align 8, !dbg !10055
  store i8* %347, i8** %hwaccel_output_format, align 8, !dbg !10056
  br label %if.end457, !dbg !10057

if.else452:                                       ; preds = %for.body438
  %348 = load i32, i32* %ret434, align 4, !dbg !10058
  %cmp453 = icmp slt i32 %348, 0, !dbg !10061
  br i1 %cmp453, label %if.then455, label %if.end456, !dbg !10058

if.then455:                                       ; preds = %if.else452
  call void @exit_program(i32 1) #11, !dbg !10062
  unreachable, !dbg !10062

if.end456:                                        ; preds = %if.else452
  br label %if.end457

if.end457:                                        ; preds = %if.end456, %if.then446
  br label %for.inc458, !dbg !10064

for.inc458:                                       ; preds = %if.end457
  %349 = load i32, i32* %i433, align 4, !dbg !10066
  %inc459 = add nsw i32 %349, 1, !dbg !10066
  store i32 %inc459, i32* %i433, align 4, !dbg !10066
  br label %for.cond435, !dbg !10068, !llvm.loop !10069

for.end460:                                       ; preds = %for.cond435
  %350 = load i8*, i8** %hwaccel_output_format, align 8, !dbg !10071
  %tobool461 = icmp ne i8* %350, null, !dbg !10071
  br i1 %tobool461, label %if.then462, label %if.else470, !dbg !10073

if.then462:                                       ; preds = %for.end460
  %351 = load i8*, i8** %hwaccel_output_format, align 8, !dbg !10074
  %call463 = call i32 @av_get_pix_fmt(i8* %351), !dbg !10076
  %352 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10077
  %hwaccel_output_format464 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %352, i32 0, i32 37, !dbg !10078
  store i32 %call463, i32* %hwaccel_output_format464, align 8, !dbg !10079
  %353 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10080
  %hwaccel_output_format465 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %353, i32 0, i32 37, !dbg !10082
  %354 = load i32, i32* %hwaccel_output_format465, align 8, !dbg !10082
  %cmp466 = icmp eq i32 %354, -1, !dbg !10083
  br i1 %cmp466, label %if.then468, label %if.end469, !dbg !10084

if.then468:                                       ; preds = %if.then462
  %355 = load i8*, i8** %hwaccel_output_format, align 8, !dbg !10085
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.470, i32 0, i32 0), i8* %355), !dbg !10087
  br label %if.end469, !dbg !10088

if.end469:                                        ; preds = %if.then468, %if.then462
  br label %if.end472, !dbg !10089

if.else470:                                       ; preds = %for.end460
  %356 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10090
  %hwaccel_output_format471 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %356, i32 0, i32 37, !dbg !10092
  store i32 -1, i32* %hwaccel_output_format471, align 8, !dbg !10093
  br label %if.end472

if.end472:                                        ; preds = %if.else470, %if.end469
  %357 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10094
  %hwaccel_pix_fmt = getelementptr inbounds %struct.InputStream, %struct.InputStream* %357, i32 0, i32 42, !dbg !10095
  store i32 -1, i32* %hwaccel_pix_fmt, align 8, !dbg !10096
  br label %sw.epilog, !dbg !10097

sw.bb473:                                         ; preds = %if.end205
  %358 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10098
  %guess_layout_max = getelementptr inbounds %struct.InputStream, %struct.InputStream* %358, i32 0, i32 25, !dbg !10099
  store i32 2147483647, i32* %guess_layout_max, align 4, !dbg !10100
  call void @llvm.dbg.declare(metadata i32* %i474, metadata !10101, metadata !1898), !dbg !10103
  call void @llvm.dbg.declare(metadata i32* %ret475, metadata !10104, metadata !1898), !dbg !10105
  store i32 0, i32* %i474, align 4, !dbg !10106
  br label %for.cond476, !dbg !10108

for.cond476:                                      ; preds = %for.inc501, %sw.bb473
  %359 = load i32, i32* %i474, align 4, !dbg !10109
  %360 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10112
  %nb_guess_layout_max = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %360, i32 0, i32 110, !dbg !10113
  %361 = load i32, i32* %nb_guess_layout_max, align 8, !dbg !10113
  %cmp477 = icmp slt i32 %359, %361, !dbg !10114
  br i1 %cmp477, label %for.body479, label %for.end503, !dbg !10115

for.body479:                                      ; preds = %for.cond476
  call void @llvm.dbg.declare(metadata i8** %spec480, metadata !10116, metadata !1898), !dbg !10118
  %362 = load i32, i32* %i474, align 4, !dbg !10119
  %idxprom481 = sext i32 %362 to i64, !dbg !10121
  %363 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10121
  %guess_layout_max482 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %363, i32 0, i32 109, !dbg !10122
  %364 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %guess_layout_max482, align 8, !dbg !10122
  %arrayidx483 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %364, i64 %idxprom481, !dbg !10121
  %specifier484 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx483, i32 0, i32 0, !dbg !10123
  %365 = load i8*, i8** %specifier484, align 8, !dbg !10123
  store i8* %365, i8** %spec480, align 8, !dbg !10124
  %366 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !10125
  %367 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10126
  %368 = load i8*, i8** %spec480, align 8, !dbg !10127
  %call485 = call i32 @check_stream_specifier(%struct.AVFormatContext* %366, %struct.AVStream* %367, i8* %368), !dbg !10128
  store i32 %call485, i32* %ret475, align 4, !dbg !10129
  %cmp486 = icmp sgt i32 %call485, 0, !dbg !10130
  br i1 %cmp486, label %if.then488, label %if.else495, !dbg !10131

if.then488:                                       ; preds = %for.body479
  %369 = load i32, i32* %i474, align 4, !dbg !10132
  %idxprom489 = sext i32 %369 to i64, !dbg !10135
  %370 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10135
  %guess_layout_max490 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %370, i32 0, i32 109, !dbg !10136
  %371 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %guess_layout_max490, align 8, !dbg !10136
  %arrayidx491 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %371, i64 %idxprom489, !dbg !10135
  %u492 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx491, i32 0, i32 1, !dbg !10137
  %i493 = bitcast %union.anon.1* %u492 to i32*, !dbg !10138
  %372 = load i32, i32* %i493, align 8, !dbg !10138
  %373 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10139
  %guess_layout_max494 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %373, i32 0, i32 25, !dbg !10140
  store i32 %372, i32* %guess_layout_max494, align 4, !dbg !10141
  br label %if.end500, !dbg !10139

if.else495:                                       ; preds = %for.body479
  %374 = load i32, i32* %ret475, align 4, !dbg !10142
  %cmp496 = icmp slt i32 %374, 0, !dbg !10145
  br i1 %cmp496, label %if.then498, label %if.end499, !dbg !10142

if.then498:                                       ; preds = %if.else495
  call void @exit_program(i32 1) #11, !dbg !10146
  unreachable, !dbg !10146

if.end499:                                        ; preds = %if.else495
  br label %if.end500

if.end500:                                        ; preds = %if.end499, %if.then488
  br label %for.inc501, !dbg !10148

for.inc501:                                       ; preds = %if.end500
  %375 = load i32, i32* %i474, align 4, !dbg !10150
  %inc502 = add nsw i32 %375, 1, !dbg !10150
  store i32 %inc502, i32* %i474, align 4, !dbg !10150
  br label %for.cond476, !dbg !10152, !llvm.loop !10153

for.end503:                                       ; preds = %for.cond476
  %376 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10155
  %call504 = call i32 @guess_input_channel_layout(%struct.InputStream* %376), !dbg !10156
  br label %sw.epilog, !dbg !10157

sw.bb505:                                         ; preds = %if.end205, %if.end205
  call void @llvm.dbg.declare(metadata i8** %canvas_size, metadata !10158, metadata !1898), !dbg !10160
  store i8* null, i8** %canvas_size, align 8, !dbg !10160
  %377 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10161
  %dec506 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %377, i32 0, i32 6, !dbg !10163
  %378 = load %struct.AVCodec*, %struct.AVCodec** %dec506, align 8, !dbg !10163
  %tobool507 = icmp ne %struct.AVCodec* %378, null, !dbg !10161
  br i1 %tobool507, label %if.end512, label %if.then508, !dbg !10164

if.then508:                                       ; preds = %sw.bb505
  %379 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !10165
  %codec_id509 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %379, i32 0, i32 1, !dbg !10166
  %380 = load i32, i32* %codec_id509, align 4, !dbg !10166
  %call510 = call %struct.AVCodec* @avcodec_find_decoder(i32 %380), !dbg !10167
  %381 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10168
  %dec511 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %381, i32 0, i32 6, !dbg !10169
  store %struct.AVCodec* %call510, %struct.AVCodec** %dec511, align 8, !dbg !10170
  br label %if.end512, !dbg !10168

if.end512:                                        ; preds = %if.then508, %sw.bb505
  call void @llvm.dbg.declare(metadata i32* %i513, metadata !10171, metadata !1898), !dbg !10173
  call void @llvm.dbg.declare(metadata i32* %ret514, metadata !10174, metadata !1898), !dbg !10175
  store i32 0, i32* %i513, align 4, !dbg !10176
  br label %for.cond515, !dbg !10178

for.cond515:                                      ; preds = %for.inc539, %if.end512
  %382 = load i32, i32* %i513, align 4, !dbg !10179
  %383 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10182
  %nb_fix_sub_duration = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %383, i32 0, i32 100, !dbg !10183
  %384 = load i32, i32* %nb_fix_sub_duration, align 8, !dbg !10183
  %cmp516 = icmp slt i32 %382, %384, !dbg !10184
  br i1 %cmp516, label %for.body518, label %for.end541, !dbg !10185

for.body518:                                      ; preds = %for.cond515
  call void @llvm.dbg.declare(metadata i8** %spec519, metadata !10186, metadata !1898), !dbg !10188
  %385 = load i32, i32* %i513, align 4, !dbg !10189
  %idxprom520 = sext i32 %385 to i64, !dbg !10191
  %386 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10191
  %fix_sub_duration = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %386, i32 0, i32 99, !dbg !10192
  %387 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %fix_sub_duration, align 8, !dbg !10192
  %arrayidx521 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %387, i64 %idxprom520, !dbg !10191
  %specifier522 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx521, i32 0, i32 0, !dbg !10193
  %388 = load i8*, i8** %specifier522, align 8, !dbg !10193
  store i8* %388, i8** %spec519, align 8, !dbg !10194
  %389 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !10195
  %390 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10196
  %391 = load i8*, i8** %spec519, align 8, !dbg !10197
  %call523 = call i32 @check_stream_specifier(%struct.AVFormatContext* %389, %struct.AVStream* %390, i8* %391), !dbg !10198
  store i32 %call523, i32* %ret514, align 4, !dbg !10199
  %cmp524 = icmp sgt i32 %call523, 0, !dbg !10200
  br i1 %cmp524, label %if.then526, label %if.else533, !dbg !10201

if.then526:                                       ; preds = %for.body518
  %392 = load i32, i32* %i513, align 4, !dbg !10202
  %idxprom527 = sext i32 %392 to i64, !dbg !10205
  %393 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10205
  %fix_sub_duration528 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %393, i32 0, i32 99, !dbg !10206
  %394 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %fix_sub_duration528, align 8, !dbg !10206
  %arrayidx529 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %394, i64 %idxprom527, !dbg !10205
  %u530 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx529, i32 0, i32 1, !dbg !10207
  %i531 = bitcast %union.anon.1* %u530 to i32*, !dbg !10208
  %395 = load i32, i32* %i531, align 8, !dbg !10208
  %396 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10209
  %fix_sub_duration532 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %396, i32 0, i32 27, !dbg !10210
  store i32 %395, i32* %fix_sub_duration532, align 4, !dbg !10211
  br label %if.end538, !dbg !10209

if.else533:                                       ; preds = %for.body518
  %397 = load i32, i32* %ret514, align 4, !dbg !10212
  %cmp534 = icmp slt i32 %397, 0, !dbg !10215
  br i1 %cmp534, label %if.then536, label %if.end537, !dbg !10212

if.then536:                                       ; preds = %if.else533
  call void @exit_program(i32 1) #11, !dbg !10216
  unreachable, !dbg !10216

if.end537:                                        ; preds = %if.else533
  br label %if.end538

if.end538:                                        ; preds = %if.end537, %if.then526
  br label %for.inc539, !dbg !10218

for.inc539:                                       ; preds = %if.end538
  %398 = load i32, i32* %i513, align 4, !dbg !10220
  %inc540 = add nsw i32 %398, 1, !dbg !10220
  store i32 %inc540, i32* %i513, align 4, !dbg !10220
  br label %for.cond515, !dbg !10222, !llvm.loop !10223

for.end541:                                       ; preds = %for.cond515
  call void @llvm.dbg.declare(metadata i32* %i542, metadata !10225, metadata !1898), !dbg !10227
  call void @llvm.dbg.declare(metadata i32* %ret543, metadata !10228, metadata !1898), !dbg !10229
  store i32 0, i32* %i542, align 4, !dbg !10230
  br label %for.cond544, !dbg !10232

for.cond544:                                      ; preds = %for.inc567, %for.end541
  %399 = load i32, i32* %i542, align 4, !dbg !10233
  %400 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10236
  %nb_canvas_sizes = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %400, i32 0, i32 102, !dbg !10237
  %401 = load i32, i32* %nb_canvas_sizes, align 8, !dbg !10237
  %cmp545 = icmp slt i32 %399, %401, !dbg !10238
  br i1 %cmp545, label %for.body547, label %for.end569, !dbg !10239

for.body547:                                      ; preds = %for.cond544
  call void @llvm.dbg.declare(metadata i8** %spec548, metadata !10240, metadata !1898), !dbg !10242
  %402 = load i32, i32* %i542, align 4, !dbg !10243
  %idxprom549 = sext i32 %402 to i64, !dbg !10245
  %403 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10245
  %canvas_sizes = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %403, i32 0, i32 101, !dbg !10246
  %404 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %canvas_sizes, align 8, !dbg !10246
  %arrayidx550 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %404, i64 %idxprom549, !dbg !10245
  %specifier551 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx550, i32 0, i32 0, !dbg !10247
  %405 = load i8*, i8** %specifier551, align 8, !dbg !10247
  store i8* %405, i8** %spec548, align 8, !dbg !10248
  %406 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !10249
  %407 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10250
  %408 = load i8*, i8** %spec548, align 8, !dbg !10251
  %call552 = call i32 @check_stream_specifier(%struct.AVFormatContext* %406, %struct.AVStream* %407, i8* %408), !dbg !10252
  store i32 %call552, i32* %ret543, align 4, !dbg !10253
  %cmp553 = icmp sgt i32 %call552, 0, !dbg !10254
  br i1 %cmp553, label %if.then555, label %if.else561, !dbg !10255

if.then555:                                       ; preds = %for.body547
  %409 = load i32, i32* %i542, align 4, !dbg !10256
  %idxprom556 = sext i32 %409 to i64, !dbg !10259
  %410 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10259
  %canvas_sizes557 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %410, i32 0, i32 101, !dbg !10260
  %411 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %canvas_sizes557, align 8, !dbg !10260
  %arrayidx558 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %411, i64 %idxprom556, !dbg !10259
  %u559 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx558, i32 0, i32 1, !dbg !10261
  %str560 = bitcast %union.anon.1* %u559 to i8**, !dbg !10262
  %412 = load i8*, i8** %str560, align 8, !dbg !10262
  store i8* %412, i8** %canvas_size, align 8, !dbg !10263
  br label %if.end566, !dbg !10264

if.else561:                                       ; preds = %for.body547
  %413 = load i32, i32* %ret543, align 4, !dbg !10265
  %cmp562 = icmp slt i32 %413, 0, !dbg !10268
  br i1 %cmp562, label %if.then564, label %if.end565, !dbg !10265

if.then564:                                       ; preds = %if.else561
  call void @exit_program(i32 1) #11, !dbg !10269
  unreachable, !dbg !10269

if.end565:                                        ; preds = %if.else561
  br label %if.end566

if.end566:                                        ; preds = %if.end565, %if.then555
  br label %for.inc567, !dbg !10271

for.inc567:                                       ; preds = %if.end566
  %414 = load i32, i32* %i542, align 4, !dbg !10273
  %inc568 = add nsw i32 %414, 1, !dbg !10273
  store i32 %inc568, i32* %i542, align 4, !dbg !10273
  br label %for.cond544, !dbg !10275, !llvm.loop !10276

for.end569:                                       ; preds = %for.cond544
  %415 = load i8*, i8** %canvas_size, align 8, !dbg !10278
  %tobool570 = icmp ne i8* %415, null, !dbg !10278
  br i1 %tobool570, label %land.lhs.true571, label %if.end580, !dbg !10280

land.lhs.true571:                                 ; preds = %for.end569
  %416 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10281
  %dec_ctx572 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %416, i32 0, i32 5, !dbg !10282
  %417 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx572, align 8, !dbg !10282
  %width573 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %417, i32 0, i32 20, !dbg !10283
  %418 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10284
  %dec_ctx574 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %418, i32 0, i32 5, !dbg !10285
  %419 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx574, align 8, !dbg !10285
  %height575 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %419, i32 0, i32 21, !dbg !10286
  %420 = load i8*, i8** %canvas_size, align 8, !dbg !10287
  %call576 = call i32 @av_parse_video_size(i32* %width573, i32* %height575, i8* %420), !dbg !10288
  %cmp577 = icmp slt i32 %call576, 0, !dbg !10289
  br i1 %cmp577, label %if.then579, label %if.end580, !dbg !10290

if.then579:                                       ; preds = %land.lhs.true571
  %421 = load i8*, i8** %canvas_size, align 8, !dbg !10292
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.471, i32 0, i32 0), i8* %421), !dbg !10294
  call void @exit_program(i32 1) #11, !dbg !10295
  unreachable, !dbg !10295

if.end580:                                        ; preds = %land.lhs.true571, %for.end569
  br label %sw.epilog, !dbg !10296

sw.bb581:                                         ; preds = %if.end205, %if.end205
  br label %sw.epilog, !dbg !10297

sw.default:                                       ; preds = %if.end205
  call void @abort() #13, !dbg !10298
  unreachable, !dbg !10298

sw.epilog:                                        ; preds = %sw.bb581, %if.end580, %for.end503, %if.end472
  %422 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !10299
  %423 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !10300
  %dec_ctx582 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %423, i32 0, i32 5, !dbg !10301
  %424 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dec_ctx582, align 8, !dbg !10301
  %call583 = call i32 @avcodec_parameters_from_context(%struct.AVCodecParameters* %422, %struct.AVCodecContext* %424), !dbg !10302
  store i32 %call583, i32* %ret, align 4, !dbg !10303
  %425 = load i32, i32* %ret, align 4, !dbg !10304
  %cmp584 = icmp slt i32 %425, 0, !dbg !10306
  br i1 %cmp584, label %if.then586, label %if.end587, !dbg !10307

if.then586:                                       ; preds = %sw.epilog
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.461, i32 0, i32 0)), !dbg !10308
  call void @exit_program(i32 1) #11, !dbg !10310
  unreachable, !dbg !10310

if.end587:                                        ; preds = %sw.epilog
  br label %for.inc588, !dbg !10311

for.inc588:                                       ; preds = %if.end587
  %426 = load i32, i32* %i, align 4, !dbg !10312
  %inc589 = add nsw i32 %426, 1, !dbg !10312
  store i32 %inc589, i32* %i, align 4, !dbg !10312
  br label %for.cond, !dbg !10314, !llvm.loop !10315

for.end590:                                       ; preds = %for.cond
  ret void, !dbg !10317
}

declare void @av_dump_format(%struct.AVFormatContext*, i32, i8*, i32) #3

declare i8* @grow_array(i8*, i32, i32*, i32) #3

declare noalias i8* @av_mallocz(i64) #3

; Function Attrs: nounwind uwtable
define internal %struct.AVDictionary* @strip_specifiers(%struct.AVDictionary* %dict) #0 !dbg !10318 {
entry:
  %dict.addr = alloca %struct.AVDictionary*, align 8
  %e = alloca %struct.AVDictionaryEntry*, align 8
  %ret = alloca %struct.AVDictionary*, align 8
  %p = alloca i8*, align 8
  store %struct.AVDictionary* %dict, %struct.AVDictionary** %dict.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %dict.addr, metadata !10321, metadata !1898), !dbg !10322
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %e, metadata !10323, metadata !1898), !dbg !10324
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %e, align 8, !dbg !10324
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %ret, metadata !10325, metadata !1898), !dbg !10326
  store %struct.AVDictionary* null, %struct.AVDictionary** %ret, align 8, !dbg !10326
  br label %while.cond, !dbg !10327

while.cond:                                       ; preds = %if.end7, %entry
  %0 = load %struct.AVDictionary*, %struct.AVDictionary** %dict.addr, align 8, !dbg !10328
  %1 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !10330
  %call = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0), %struct.AVDictionaryEntry* %1, i32 2), !dbg !10331
  store %struct.AVDictionaryEntry* %call, %struct.AVDictionaryEntry** %e, align 8, !dbg !10332
  %tobool = icmp ne %struct.AVDictionaryEntry* %call, null, !dbg !10333
  br i1 %tobool, label %while.body, label %while.end, !dbg !10333

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10334, metadata !1898), !dbg !10336
  %2 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !10337
  %key = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %2, i32 0, i32 0, !dbg !10338
  %3 = load i8*, i8** %key, align 8, !dbg !10338
  %call1 = call i8* @strchr(i8* %3, i32 58) #10, !dbg !10339
  store i8* %call1, i8** %p, align 8, !dbg !10336
  %4 = load i8*, i8** %p, align 8, !dbg !10340
  %tobool2 = icmp ne i8* %4, null, !dbg !10340
  br i1 %tobool2, label %if.then, label %if.end, !dbg !10342

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p, align 8, !dbg !10343
  store i8 0, i8* %5, align 1, !dbg !10344
  br label %if.end, !dbg !10345

if.end:                                           ; preds = %if.then, %while.body
  %6 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !10346
  %key3 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %6, i32 0, i32 0, !dbg !10347
  %7 = load i8*, i8** %key3, align 8, !dbg !10347
  %8 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !10348
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %8, i32 0, i32 1, !dbg !10349
  %9 = load i8*, i8** %value, align 8, !dbg !10349
  %call4 = call i32 @av_dict_set(%struct.AVDictionary** %ret, i8* %7, i8* %9, i32 0), !dbg !10350
  %10 = load i8*, i8** %p, align 8, !dbg !10351
  %tobool5 = icmp ne i8* %10, null, !dbg !10351
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10353

if.then6:                                         ; preds = %if.end
  %11 = load i8*, i8** %p, align 8, !dbg !10354
  store i8 58, i8* %11, align 1, !dbg !10355
  br label %if.end7, !dbg !10356

if.end7:                                          ; preds = %if.then6, %if.end
  br label %while.cond, !dbg !10357, !llvm.loop !10359

while.end:                                        ; preds = %while.cond
  %12 = load %struct.AVDictionary*, %struct.AVDictionary** %ret, align 8, !dbg !10360
  ret %struct.AVDictionary* %12, !dbg !10361
}

declare i32 @check_stream_specifier(%struct.AVFormatContext*, %struct.AVStream*, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @dump_attachment(%struct.AVStream* %st, i8* %filename) #0 !dbg !10362 {
entry:
  %st.addr = alloca %struct.AVStream*, align 8
  %filename.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %out = alloca %struct.AVIOContext*, align 8
  %e = alloca %struct.AVDictionaryEntry*, align 8
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !10365, metadata !1898), !dbg !10366
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !10367, metadata !1898), !dbg !10368
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10369, metadata !1898), !dbg !10370
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %out, metadata !10371, metadata !1898), !dbg !10372
  store %struct.AVIOContext* null, %struct.AVIOContext** %out, align 8, !dbg !10372
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %e, metadata !10373, metadata !1898), !dbg !10374
  %0 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !10375
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %0, i32 0, i32 19, !dbg !10377
  %1 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !10377
  %extradata_size = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %1, i32 0, i32 4, !dbg !10378
  %2 = load i32, i32* %extradata_size, align 8, !dbg !10378
  %tobool = icmp ne i32 %2, 0, !dbg !10375
  br i1 %tobool, label %if.end, label %if.then, !dbg !10379

if.then:                                          ; preds = %entry
  %3 = load i32, i32* @nb_input_files, align 4, !dbg !10380
  %sub = sub nsw i32 %3, 1, !dbg !10382
  %4 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !10383
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %4, i32 0, i32 0, !dbg !10384
  %5 = load i32, i32* %index, align 8, !dbg !10384
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.472, i32 0, i32 0), i32 %sub, i32 %5), !dbg !10385
  br label %return, !dbg !10386

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %filename.addr, align 8, !dbg !10387
  %7 = load i8, i8* %6, align 1, !dbg !10389
  %tobool1 = icmp ne i8 %7, 0, !dbg !10389
  br i1 %tobool1, label %if.end4, label %land.lhs.true, !dbg !10390

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !10391
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %8, i32 0, i32 11, !dbg !10393
  %9 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !10393
  %call = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.221, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !10394
  store %struct.AVDictionaryEntry* %call, %struct.AVDictionaryEntry** %e, align 8, !dbg !10395
  %tobool2 = icmp ne %struct.AVDictionaryEntry* %call, null, !dbg !10395
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !10396

if.then3:                                         ; preds = %land.lhs.true
  %10 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !10397
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %10, i32 0, i32 1, !dbg !10398
  %11 = load i8*, i8** %value, align 8, !dbg !10398
  store i8* %11, i8** %filename.addr, align 8, !dbg !10399
  br label %if.end4, !dbg !10400

if.end4:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %12 = load i8*, i8** %filename.addr, align 8, !dbg !10401
  %13 = load i8, i8* %12, align 1, !dbg !10403
  %tobool5 = icmp ne i8 %13, 0, !dbg !10403
  br i1 %tobool5, label %if.end9, label %if.then6, !dbg !10404

if.then6:                                         ; preds = %if.end4
  %14 = load i32, i32* @nb_input_files, align 4, !dbg !10405
  %sub7 = sub nsw i32 %14, 1, !dbg !10407
  %15 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !10408
  %index8 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %15, i32 0, i32 0, !dbg !10409
  %16 = load i32, i32* %index8, align 8, !dbg !10409
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.473, i32 0, i32 0), i32 %sub7, i32 %16), !dbg !10410
  call void @exit_program(i32 1) #11, !dbg !10411
  unreachable, !dbg !10411

if.end9:                                          ; preds = %if.end4
  %17 = load i8*, i8** %filename.addr, align 8, !dbg !10412
  call void @assert_file_overwrite(i8* %17), !dbg !10413
  %18 = load i8*, i8** %filename.addr, align 8, !dbg !10414
  %call10 = call i32 @avio_open2(%struct.AVIOContext** %out, i8* %18, i32 2, %struct.AVIOInterruptCB* @int_cb, %struct.AVDictionary** null), !dbg !10416
  store i32 %call10, i32* %ret, align 4, !dbg !10417
  %cmp = icmp slt i32 %call10, 0, !dbg !10418
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !10419

if.then11:                                        ; preds = %if.end9
  %19 = load i8*, i8** %filename.addr, align 8, !dbg !10420
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.474, i32 0, i32 0), i8* %19), !dbg !10422
  call void @exit_program(i32 1) #11, !dbg !10423
  unreachable, !dbg !10423

if.end12:                                         ; preds = %if.end9
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %out, align 8, !dbg !10424
  %21 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !10425
  %codecpar13 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i32 0, i32 19, !dbg !10426
  %22 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar13, align 8, !dbg !10426
  %extradata = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %22, i32 0, i32 3, !dbg !10427
  %23 = load i8*, i8** %extradata, align 8, !dbg !10427
  %24 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !10428
  %codecpar14 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %24, i32 0, i32 19, !dbg !10429
  %25 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar14, align 8, !dbg !10429
  %extradata_size15 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %25, i32 0, i32 4, !dbg !10430
  %26 = load i32, i32* %extradata_size15, align 8, !dbg !10430
  call void @avio_write(%struct.AVIOContext* %20, i8* %23, i32 %26), !dbg !10431
  %27 = load %struct.AVIOContext*, %struct.AVIOContext** %out, align 8, !dbg !10432
  call void @avio_flush(%struct.AVIOContext* %27), !dbg !10433
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %out, align 8, !dbg !10434
  %call16 = call i32 @avio_close(%struct.AVIOContext* %28), !dbg !10435
  br label %return, !dbg !10436

return:                                           ; preds = %if.end12, %if.then
  ret void, !dbg !10437
}

declare %struct.AVCodec* @avcodec_find_encoder_by_name(i8*) #3

declare %struct.AVCodec* @avcodec_find_decoder_by_name(i8*) #3

declare %struct.AVCodecDescriptor* @avcodec_descriptor_get_by_name(i8*) #3

declare %struct.AVCodec* @avcodec_find_encoder(i32) #3

declare %struct.AVCodec* @avcodec_find_decoder(i32) #3

; Function Attrs: nounwind
declare i64 @strtol(i8*, i8**, i32) #6

declare %struct.AVDictionary* @filter_codec_opts(%struct.AVDictionary*, i32, %struct.AVFormatContext*, %struct.AVStream*, %struct.AVCodec*) #3

declare i32 @av_opt_eval_int(i8*, %struct.AVOption*, i8*, i32*) #3

declare %struct.AVCodecContext* @avcodec_alloc_context3(%struct.AVCodec*) #3

declare i32 @avcodec_parameters_to_context(%struct.AVCodecContext*, %struct.AVCodecParameters*) #3

declare i32 @av_parse_video_rate(%struct.AVRational*, i8*) #3

declare i32 @av_hwdevice_find_type_by_name(i8*) #3

declare i32 @av_hwdevice_iterate_types(i32) #3

declare i8* @av_hwdevice_get_type_name(i32) #3

declare noalias i8* @av_strdup(i8*) #3

declare i32 @av_get_pix_fmt(i8*) #3

declare i32 @guess_input_channel_layout(%struct.InputStream*) #3

declare i32 @av_parse_video_size(i32*, i32*, i8*) #3

; Function Attrs: noreturn nounwind
declare void @abort() #7

declare i32 @avcodec_parameters_from_context(%struct.AVCodecParameters*, %struct.AVCodecContext*) #3

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @assert_file_overwrite(i8* %filename) #0 !dbg !10439 {
entry:
  %filename.addr = alloca i8*, align 8
  %proto_name = alloca i8*, align 8
  %i = alloca i32, align 4
  %file = alloca %struct.InputFile*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !10442, metadata !1898), !dbg !10443
  call void @llvm.dbg.declare(metadata i8** %proto_name, metadata !10444, metadata !1898), !dbg !10445
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !10446
  %call = call i8* @avio_find_protocol_name(i8* %0), !dbg !10447
  store i8* %call, i8** %proto_name, align 8, !dbg !10445
  %1 = load i32, i32* @file_overwrite, align 4, !dbg !10448
  %tobool = icmp ne i32 %1, 0, !dbg !10448
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10450

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @no_file_overwrite, align 4, !dbg !10451
  %tobool1 = icmp ne i32 %2, 0, !dbg !10451
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10453

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10454
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.475, i32 0, i32 0)), !dbg !10456
  call void @exit_program(i32 1) #11, !dbg !10457
  unreachable, !dbg !10457

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load i32, i32* @file_overwrite, align 4, !dbg !10458
  %tobool3 = icmp ne i32 %4, 0, !dbg !10458
  br i1 %tobool3, label %if.end25, label %if.then4, !dbg !10460

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %proto_name, align 8, !dbg !10461
  %tobool5 = icmp ne i8* %5, null, !dbg !10461
  br i1 %tobool5, label %land.lhs.true6, label %if.end24, !dbg !10464

land.lhs.true6:                                   ; preds = %if.then4
  %6 = load i8*, i8** %proto_name, align 8, !dbg !10465
  %call7 = call i32 @strcmp(i8* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.294, i32 0, i32 0)) #10, !dbg !10467
  %tobool8 = icmp ne i32 %call7, 0, !dbg !10467
  br i1 %tobool8, label %if.end24, label %land.lhs.true9, !dbg !10468

land.lhs.true9:                                   ; preds = %land.lhs.true6
  %7 = load i8*, i8** %filename.addr, align 8, !dbg !10469
  %call10 = call i32 @avio_check(i8* %7, i32 0), !dbg !10471
  %cmp = icmp eq i32 %call10, 0, !dbg !10472
  br i1 %cmp, label %if.then11, label %if.end24, !dbg !10473

if.then11:                                        ; preds = %land.lhs.true9
  %8 = load i32, i32* @stdin_interaction, align 4, !dbg !10474
  %tobool12 = icmp ne i32 %8, 0, !dbg !10474
  br i1 %tobool12, label %land.lhs.true13, label %if.else, !dbg !10477

land.lhs.true13:                                  ; preds = %if.then11
  %9 = load i32, i32* @no_file_overwrite, align 4, !dbg !10478
  %tobool14 = icmp ne i32 %9, 0, !dbg !10478
  br i1 %tobool14, label %if.else, label %if.then15, !dbg !10480

if.then15:                                        ; preds = %land.lhs.true13
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10481
  %11 = load i8*, i8** %filename.addr, align 8, !dbg !10483
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.476, i32 0, i32 0), i8* %11), !dbg !10484
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10485
  %call17 = call i32 @fflush(%struct._IO_FILE* %12), !dbg !10486
  call void @term_exit(), !dbg !10487
  %call18 = call void (i32)* @__sysv_signal(i32 2, void (i32)* null) #12, !dbg !10488
  %call19 = call i32 @read_yesno(), !dbg !10489
  %tobool20 = icmp ne i32 %call19, 0, !dbg !10489
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !10491

if.then21:                                        ; preds = %if.then15
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.477, i32 0, i32 0)), !dbg !10492
  call void @exit_program(i32 1) #11, !dbg !10494
  unreachable, !dbg !10494

if.end22:                                         ; preds = %if.then15
  call void @term_init(), !dbg !10495
  br label %if.end23, !dbg !10496

if.else:                                          ; preds = %land.lhs.true13, %if.then11
  %13 = load i8*, i8** %filename.addr, align 8, !dbg !10497
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.478, i32 0, i32 0), i8* %13), !dbg !10499
  call void @exit_program(i32 1) #11, !dbg !10500
  unreachable, !dbg !10500

if.end23:                                         ; preds = %if.end22
  br label %if.end24, !dbg !10501

if.end24:                                         ; preds = %if.end23, %land.lhs.true9, %land.lhs.true6, %if.then4
  br label %if.end25, !dbg !10502

if.end25:                                         ; preds = %if.end24, %if.end
  %14 = load i8*, i8** %proto_name, align 8, !dbg !10503
  %tobool26 = icmp ne i8* %14, null, !dbg !10503
  br i1 %tobool26, label %land.lhs.true27, label %if.end40, !dbg !10505

land.lhs.true27:                                  ; preds = %if.end25
  %15 = load i8*, i8** %proto_name, align 8, !dbg !10506
  %call28 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.294, i32 0, i32 0)) #10, !dbg !10508
  %tobool29 = icmp ne i32 %call28, 0, !dbg !10508
  br i1 %tobool29, label %if.end40, label %if.then30, !dbg !10509

if.then30:                                        ; preds = %land.lhs.true27
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10510, metadata !1898), !dbg !10513
  store i32 0, i32* %i, align 4, !dbg !10513
  br label %for.cond, !dbg !10514

for.cond:                                         ; preds = %for.inc, %if.then30
  %16 = load i32, i32* %i, align 4, !dbg !10515
  %17 = load i32, i32* @nb_input_files, align 4, !dbg !10518
  %cmp31 = icmp slt i32 %16, %17, !dbg !10519
  br i1 %cmp31, label %for.body, label %for.end, !dbg !10520

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.InputFile** %file, metadata !10521, metadata !1898), !dbg !10523
  %18 = load i32, i32* %i, align 4, !dbg !10524
  %idxprom = sext i32 %18 to i64, !dbg !10525
  %19 = load %struct.InputFile**, %struct.InputFile*** @input_files, align 8, !dbg !10525
  %arrayidx = getelementptr inbounds %struct.InputFile*, %struct.InputFile** %19, i64 %idxprom, !dbg !10525
  %20 = load %struct.InputFile*, %struct.InputFile** %arrayidx, align 8, !dbg !10525
  store %struct.InputFile* %20, %struct.InputFile** %file, align 8, !dbg !10523
  %21 = load %struct.InputFile*, %struct.InputFile** %file, align 8, !dbg !10526
  %ctx = getelementptr inbounds %struct.InputFile, %struct.InputFile* %21, i32 0, i32 0, !dbg !10528
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !10528
  %iformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i32 0, i32 1, !dbg !10529
  %23 = load %struct.AVInputFormat*, %struct.AVInputFormat** %iformat, align 8, !dbg !10529
  %flags = getelementptr inbounds %struct.AVInputFormat, %struct.AVInputFormat* %23, i32 0, i32 2, !dbg !10530
  %24 = load i32, i32* %flags, align 8, !dbg !10530
  %and = and i32 %24, 1, !dbg !10531
  %tobool32 = icmp ne i32 %and, 0, !dbg !10531
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !10532

if.then33:                                        ; preds = %for.body
  br label %for.inc, !dbg !10533

if.end34:                                         ; preds = %for.body
  %25 = load i8*, i8** %filename.addr, align 8, !dbg !10534
  %26 = load %struct.InputFile*, %struct.InputFile** %file, align 8, !dbg !10536
  %ctx35 = getelementptr inbounds %struct.InputFile, %struct.InputFile* %26, i32 0, i32 0, !dbg !10537
  %27 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx35, align 8, !dbg !10537
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %27, i32 0, i32 9, !dbg !10538
  %28 = load i8*, i8** %url, align 8, !dbg !10538
  %call36 = call i32 @strcmp(i8* %25, i8* %28) #10, !dbg !10539
  %tobool37 = icmp ne i32 %call36, 0, !dbg !10539
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !10540

if.then38:                                        ; preds = %if.end34
  %29 = load i8*, i8** %filename.addr, align 8, !dbg !10541
  %30 = load i32, i32* %i, align 4, !dbg !10543
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.479, i32 0, i32 0), i8* %29, i32 %30), !dbg !10544
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.480, i32 0, i32 0)), !dbg !10545
  call void @exit_program(i32 1) #11, !dbg !10546
  unreachable, !dbg !10546

if.end39:                                         ; preds = %if.end34
  br label %for.inc, !dbg !10547

for.inc:                                          ; preds = %if.end39, %if.then33
  %31 = load i32, i32* %i, align 4, !dbg !10548
  %inc = add nsw i32 %31, 1, !dbg !10548
  store i32 %inc, i32* %i, align 4, !dbg !10548
  br label %for.cond, !dbg !10550, !llvm.loop !10551

for.end:                                          ; preds = %for.cond
  br label %if.end40, !dbg !10553

if.end40:                                         ; preds = %for.end, %land.lhs.true27, %if.end25
  ret void, !dbg !10554
}

declare i32 @avio_open2(%struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**) #3

declare void @avio_write(%struct.AVIOContext*, i8*, i32) #3

declare void @avio_flush(%struct.AVIOContext*) #3

declare i32 @avio_close(%struct.AVIOContext*) #3

declare i8* @avio_find_protocol_name(i8*) #3

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare i32 @avio_check(i8*, i32) #3

declare i32 @fflush(%struct._IO_FILE*) #3

declare void @term_exit() #3

; Function Attrs: nounwind
declare void (i32)* @__sysv_signal(i32, void (i32)*) #6

declare i32 @read_yesno() #3

declare i32 @init_complex_filtergraph(%struct.FilterGraph*) #3

declare i32 @av_dict_copy(%struct.AVDictionary**, %struct.AVDictionary*, i32) #3

declare i32 @avformat_alloc_output_context2(%struct.AVFormatContext**, %struct.AVOutputFormat*, i8*, i8*) #3

declare i32 @av_opt_eval_flags(i8*, %struct.AVOption*, i8*, i32*) #3

; Function Attrs: nounwind uwtable
define internal void @init_output_filter(%struct.OutputFilter* %ofilter, %struct.OptionsContext* %o, %struct.AVFormatContext* %oc) #0 !dbg !10555 {
entry:
  %ofilter.addr = alloca %struct.OutputFilter*, align 8
  %o.addr = alloca %struct.OptionsContext*, align 8
  %oc.addr = alloca %struct.AVFormatContext*, align 8
  %ost = alloca %struct.OutputStream*, align 8
  %opt = alloca i8*, align 8
  store %struct.OutputFilter* %ofilter, %struct.OutputFilter** %ofilter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OutputFilter** %ofilter.addr, metadata !10558, metadata !1898), !dbg !10559
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !10560, metadata !1898), !dbg !10561
  store %struct.AVFormatContext* %oc, %struct.AVFormatContext** %oc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc.addr, metadata !10562, metadata !1898), !dbg !10563
  call void @llvm.dbg.declare(metadata %struct.OutputStream** %ost, metadata !10564, metadata !1898), !dbg !10565
  %0 = load %struct.OutputFilter*, %struct.OutputFilter** %ofilter.addr, align 8, !dbg !10566
  %type = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %0, i32 0, i32 5, !dbg !10567
  %1 = load i32, i32* %type, align 8, !dbg !10567
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !10568

sw.bb:                                            ; preds = %entry
  %2 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10569
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !10571
  %call = call %struct.OutputStream* @new_video_stream(%struct.OptionsContext* %2, %struct.AVFormatContext* %3, i32 -1), !dbg !10572
  store %struct.OutputStream* %call, %struct.OutputStream** %ost, align 8, !dbg !10573
  br label %sw.epilog, !dbg !10574

sw.bb1:                                           ; preds = %entry
  %4 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10575
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !10576
  %call2 = call %struct.OutputStream* @new_audio_stream(%struct.OptionsContext* %4, %struct.AVFormatContext* %5, i32 -1), !dbg !10577
  store %struct.OutputStream* %call2, %struct.OutputStream** %ost, align 8, !dbg !10578
  br label %sw.epilog, !dbg !10579

sw.default:                                       ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.512, i32 0, i32 0)), !dbg !10580
  call void @exit_program(i32 1) #11, !dbg !10581
  unreachable, !dbg !10581

sw.epilog:                                        ; preds = %sw.bb1, %sw.bb
  %6 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10582
  %source_index = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %6, i32 0, i32 2, !dbg !10583
  store i32 -1, i32* %source_index, align 8, !dbg !10584
  %7 = load %struct.OutputFilter*, %struct.OutputFilter** %ofilter.addr, align 8, !dbg !10585
  %8 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10586
  %filter = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %8, i32 0, i32 41, !dbg !10587
  store %struct.OutputFilter* %7, %struct.OutputFilter** %filter, align 8, !dbg !10588
  %9 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10589
  %10 = load %struct.OutputFilter*, %struct.OutputFilter** %ofilter.addr, align 8, !dbg !10590
  %ost3 = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %10, i32 0, i32 1, !dbg !10591
  store %struct.OutputStream* %9, %struct.OutputStream** %ost3, align 8, !dbg !10592
  %11 = load %struct.OutputFilter*, %struct.OutputFilter** %ofilter.addr, align 8, !dbg !10593
  %format = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %11, i32 0, i32 9, !dbg !10594
  store i32 -1, i32* %format, align 4, !dbg !10595
  %12 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10596
  %stream_copy = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %12, i32 0, i32 52, !dbg !10598
  %13 = load i32, i32* %stream_copy, align 8, !dbg !10598
  %tobool = icmp ne i32 %13, 0, !dbg !10596
  br i1 %tobool, label %if.then, label %if.end, !dbg !10599

if.then:                                          ; preds = %sw.epilog
  %14 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10600
  %file_index = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %14, i32 0, i32 0, !dbg !10602
  %15 = load i32, i32* %file_index, align 8, !dbg !10602
  %16 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10603
  %index = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %16, i32 0, i32 1, !dbg !10604
  %17 = load i32, i32* %index, align 4, !dbg !10604
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([138 x i8], [138 x i8]* @.str.513, i32 0, i32 0), i32 %15, i32 %17), !dbg !10605
  call void @exit_program(i32 1) #11, !dbg !10606
  unreachable, !dbg !10606

if.end:                                           ; preds = %sw.epilog
  %18 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10607
  %avfilter = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %18, i32 0, i32 42, !dbg !10609
  %19 = load i8*, i8** %avfilter, align 8, !dbg !10609
  %tobool4 = icmp ne i8* %19, null, !dbg !10607
  br i1 %tobool4, label %land.lhs.true, label %if.end20, !dbg !10610

land.lhs.true:                                    ; preds = %if.end
  %20 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10611
  %filters = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %20, i32 0, i32 43, !dbg !10613
  %21 = load i8*, i8** %filters, align 8, !dbg !10613
  %tobool5 = icmp ne i8* %21, null, !dbg !10611
  br i1 %tobool5, label %if.then7, label %lor.lhs.false, !dbg !10614

lor.lhs.false:                                    ; preds = %land.lhs.true
  %22 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10615
  %filters_script = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %22, i32 0, i32 44, !dbg !10617
  %23 = load i8*, i8** %filters_script, align 8, !dbg !10617
  %tobool6 = icmp ne i8* %23, null, !dbg !10615
  br i1 %tobool6, label %if.then7, label %if.end20, !dbg !10618

if.then7:                                         ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %opt, metadata !10619, metadata !1898), !dbg !10621
  %24 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10622
  %filters8 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %24, i32 0, i32 43, !dbg !10623
  %25 = load i8*, i8** %filters8, align 8, !dbg !10623
  %tobool9 = icmp ne i8* %25, null, !dbg !10622
  %cond = select i1 %tobool9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.514, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.515, i32 0, i32 0), !dbg !10622
  store i8* %cond, i8** %opt, align 8, !dbg !10621
  %26 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10624
  %filters10 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %26, i32 0, i32 43, !dbg !10625
  %27 = load i8*, i8** %filters10, align 8, !dbg !10625
  %tobool11 = icmp ne i8* %27, null, !dbg !10624
  %cond12 = select i1 %tobool11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.517, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.518, i32 0, i32 0), !dbg !10624
  %28 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10626
  %filters13 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %28, i32 0, i32 43, !dbg !10627
  %29 = load i8*, i8** %filters13, align 8, !dbg !10627
  %tobool14 = icmp ne i8* %29, null, !dbg !10626
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !10626

cond.true:                                        ; preds = %if.then7
  %30 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10628
  %filters15 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %30, i32 0, i32 43, !dbg !10630
  %31 = load i8*, i8** %filters15, align 8, !dbg !10630
  br label %cond.end, !dbg !10631

cond.false:                                       ; preds = %if.then7
  %32 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10632
  %filters_script16 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %32, i32 0, i32 44, !dbg !10634
  %33 = load i8*, i8** %filters_script16, align 8, !dbg !10634
  br label %cond.end, !dbg !10635

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond17 = phi i8* [ %31, %cond.true ], [ %33, %cond.false ], !dbg !10636
  %34 = load i8*, i8** %opt, align 8, !dbg !10638
  %35 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10639
  %file_index18 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %35, i32 0, i32 0, !dbg !10640
  %36 = load i32, i32* %file_index18, align 8, !dbg !10640
  %37 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10641
  %index19 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %37, i32 0, i32 1, !dbg !10642
  %38 = load i32, i32* %index19, align 4, !dbg !10642
  %39 = load i8*, i8** %opt, align 8, !dbg !10643
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([179 x i8], [179 x i8]* @.str.516, i32 0, i32 0), i8* %cond12, i8* %cond17, i8* %34, i32 %36, i32 %38, i8* %39), !dbg !10644
  call void @exit_program(i32 1) #11, !dbg !10645
  unreachable, !dbg !10645

if.end20:                                         ; preds = %lor.lhs.false, %if.end
  %40 = load %struct.OutputFilter*, %struct.OutputFilter** %ofilter.addr, align 8, !dbg !10646
  %out_tmp = getelementptr inbounds %struct.OutputFilter, %struct.OutputFilter* %40, i32 0, i32 4, !dbg !10647
  call void @avfilter_inout_free(%struct.AVFilterInOut** %out_tmp), !dbg !10648
  ret void, !dbg !10649
}

declare i32 @av_guess_codec(%struct.AVOutputFormat*, i8*, i8*, i8*, i32) #3

declare i32 @avformat_query_codec(%struct.AVOutputFormat*, i32, i32) #3

; Function Attrs: nounwind uwtable
define internal %struct.OutputStream* @new_video_stream(%struct.OptionsContext* %o, %struct.AVFormatContext* %oc, i32 %source_index) #0 !dbg !10650 {
entry:
  %o.addr = alloca %struct.OptionsContext*, align 8
  %oc.addr = alloca %struct.AVFormatContext*, align 8
  %source_index.addr = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %ost = alloca %struct.OutputStream*, align 8
  %video_enc = alloca %struct.AVCodecContext*, align 8
  %frame_rate = alloca i8*, align 8
  %frame_aspect_ratio = alloca i8*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %spec = alloca i8*, align 8
  %i20 = alloca i32, align 4
  %ret21 = alloca i32, align 4
  %spec25 = alloca i8*, align 8
  %q = alloca %struct.AVRational, align 4
  %i56 = alloca i32, align 4
  %ret57 = alloca i32, align 4
  %spec61 = alloca i8*, align 8
  %i81 = alloca i32, align 4
  %ret82 = alloca i32, align 4
  %spec86 = alloca i8*, align 8
  %p = alloca i8*, align 8
  %frame_size = alloca i8*, align 8
  %frame_pix_fmt = alloca i8*, align 8
  %intra_matrix = alloca i8*, align 8
  %inter_matrix = alloca i8*, align 8
  %chroma_intra_matrix = alloca i8*, align 8
  %do_pass = alloca i32, align 4
  %i114 = alloca i32, align 4
  %i115 = alloca i32, align 4
  %ret116 = alloca i32, align 4
  %spec120 = alloca i8*, align 8
  %i146 = alloca i32, align 4
  %ret147 = alloca i32, align 4
  %spec151 = alloca i8*, align 8
  %i191 = alloca i32, align 4
  %ret192 = alloca i32, align 4
  %spec197 = alloca i8*, align 8
  %i228 = alloca i32, align 4
  %ret229 = alloca i32, align 4
  %spec234 = alloca i8*, align 8
  %p258 = alloca i16*, align 8
  %i265 = alloca i32, align 4
  %ret266 = alloca i32, align 4
  %spec271 = alloca i8*, align 8
  %i302 = alloca i32, align 4
  %ret303 = alloca i32, align 4
  %spec308 = alloca i8*, align 8
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %q333 = alloca i32, align 4
  %e = alloca i32, align 4
  %i384 = alloca i32, align 4
  %ret385 = alloca i32, align 4
  %spec390 = alloca i8*, align 8
  %i429 = alloca i32, align 4
  %ret430 = alloca i32, align 4
  %spec435 = alloca i8*, align 8
  %logfilename = alloca [1024 x i8], align 16
  %f = alloca %struct._IO_FILE*, align 8
  %logbuffer = alloca i8*, align 8
  %i505 = alloca i32, align 4
  %ret506 = alloca i32, align 4
  %spec511 = alloca i8*, align 8
  %i540 = alloca i32, align 4
  %ret541 = alloca i32, align 4
  %spec546 = alloca i8*, align 8
  %i569 = alloca i32, align 4
  %ret570 = alloca i32, align 4
  %spec575 = alloca i8*, align 8
  %i605 = alloca i32, align 4
  %ret606 = alloca i32, align 4
  %spec611 = alloca i8*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !10653, metadata !1898), !dbg !10654
  store %struct.AVFormatContext* %oc, %struct.AVFormatContext** %oc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc.addr, metadata !10655, metadata !1898), !dbg !10656
  store i32 %source_index, i32* %source_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_index.addr, metadata !10657, metadata !1898), !dbg !10658
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !10659, metadata !1898), !dbg !10660
  call void @llvm.dbg.declare(metadata %struct.OutputStream** %ost, metadata !10661, metadata !1898), !dbg !10662
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %video_enc, metadata !10663, metadata !1898), !dbg !10664
  call void @llvm.dbg.declare(metadata i8** %frame_rate, metadata !10665, metadata !1898), !dbg !10666
  store i8* null, i8** %frame_rate, align 8, !dbg !10666
  call void @llvm.dbg.declare(metadata i8** %frame_aspect_ratio, metadata !10667, metadata !1898), !dbg !10668
  store i8* null, i8** %frame_aspect_ratio, align 8, !dbg !10668
  %0 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10669
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !10670
  %2 = load i32, i32* %source_index.addr, align 4, !dbg !10671
  %call = call %struct.OutputStream* @new_output_stream(%struct.OptionsContext* %0, %struct.AVFormatContext* %1, i32 0, i32 %2), !dbg !10672
  store %struct.OutputStream* %call, %struct.OutputStream** %ost, align 8, !dbg !10673
  %3 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10674
  %st1 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %3, i32 0, i32 3, !dbg !10675
  %4 = load %struct.AVStream*, %struct.AVStream** %st1, align 8, !dbg !10675
  store %struct.AVStream* %4, %struct.AVStream** %st, align 8, !dbg !10676
  %5 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10677
  %enc_ctx = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %5, i32 0, i32 14, !dbg !10678
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx, align 8, !dbg !10678
  store %struct.AVCodecContext* %6, %struct.AVCodecContext** %video_enc, align 8, !dbg !10679
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10680, metadata !1898), !dbg !10682
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10683, metadata !1898), !dbg !10684
  store i32 0, i32* %i, align 4, !dbg !10685
  br label %for.cond, !dbg !10687

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !10688
  %8 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10691
  %nb_frame_rates = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %8, i32 0, i32 12, !dbg !10692
  %9 = load i32, i32* %nb_frame_rates, align 8, !dbg !10692
  %cmp = icmp slt i32 %7, %9, !dbg !10693
  br i1 %cmp, label %for.body, label %for.end, !dbg !10694

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %spec, metadata !10695, metadata !1898), !dbg !10697
  %10 = load i32, i32* %i, align 4, !dbg !10698
  %idxprom = sext i32 %10 to i64, !dbg !10700
  %11 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10700
  %frame_rates = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %11, i32 0, i32 11, !dbg !10701
  %12 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_rates, align 8, !dbg !10701
  %arrayidx = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %12, i64 %idxprom, !dbg !10700
  %specifier = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx, i32 0, i32 0, !dbg !10702
  %13 = load i8*, i8** %specifier, align 8, !dbg !10702
  store i8* %13, i8** %spec, align 8, !dbg !10703
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !10704
  %15 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10705
  %16 = load i8*, i8** %spec, align 8, !dbg !10706
  %call2 = call i32 @check_stream_specifier(%struct.AVFormatContext* %14, %struct.AVStream* %15, i8* %16), !dbg !10707
  store i32 %call2, i32* %ret, align 4, !dbg !10708
  %cmp3 = icmp sgt i32 %call2, 0, !dbg !10709
  br i1 %cmp3, label %if.then, label %if.else, !dbg !10710

if.then:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !10711
  %idxprom4 = sext i32 %17 to i64, !dbg !10714
  %18 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10714
  %frame_rates5 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %18, i32 0, i32 11, !dbg !10715
  %19 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_rates5, align 8, !dbg !10715
  %arrayidx6 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %19, i64 %idxprom4, !dbg !10714
  %u = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx6, i32 0, i32 1, !dbg !10716
  %str = bitcast %union.anon.1* %u to i8**, !dbg !10717
  %20 = load i8*, i8** %str, align 8, !dbg !10717
  store i8* %20, i8** %frame_rate, align 8, !dbg !10718
  br label %if.end9, !dbg !10719

if.else:                                          ; preds = %for.body
  %21 = load i32, i32* %ret, align 4, !dbg !10720
  %cmp7 = icmp slt i32 %21, 0, !dbg !10723
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !10720

if.then8:                                         ; preds = %if.else
  call void @exit_program(i32 1) #11, !dbg !10724
  unreachable, !dbg !10724

if.end:                                           ; preds = %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10726

for.inc:                                          ; preds = %if.end9
  %22 = load i32, i32* %i, align 4, !dbg !10728
  %inc = add nsw i32 %22, 1, !dbg !10728
  store i32 %inc, i32* %i, align 4, !dbg !10728
  br label %for.cond, !dbg !10730, !llvm.loop !10731

for.end:                                          ; preds = %for.cond
  %23 = load i8*, i8** %frame_rate, align 8, !dbg !10733
  %tobool = icmp ne i8* %23, null, !dbg !10733
  br i1 %tobool, label %land.lhs.true, label %if.end14, !dbg !10735

land.lhs.true:                                    ; preds = %for.end
  %24 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10736
  %frame_rate10 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %24, i32 0, i32 23, !dbg !10738
  %25 = load i8*, i8** %frame_rate, align 8, !dbg !10739
  %call11 = call i32 @av_parse_video_rate(%struct.AVRational* %frame_rate10, i8* %25), !dbg !10740
  %cmp12 = icmp slt i32 %call11, 0, !dbg !10741
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10742

if.then13:                                        ; preds = %land.lhs.true
  %26 = load i8*, i8** %frame_rate, align 8, !dbg !10743
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.519, i32 0, i32 0), i8* %26), !dbg !10745
  call void @exit_program(i32 1) #11, !dbg !10746
  unreachable, !dbg !10746

if.end14:                                         ; preds = %land.lhs.true, %for.end
  %27 = load i8*, i8** %frame_rate, align 8, !dbg !10747
  %tobool15 = icmp ne i8* %27, null, !dbg !10747
  br i1 %tobool15, label %land.lhs.true16, label %if.end19, !dbg !10749

land.lhs.true16:                                  ; preds = %if.end14
  %28 = load i32, i32* @video_sync_method, align 4, !dbg !10750
  %cmp17 = icmp eq i32 %28, 0, !dbg !10752
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !10753

if.then18:                                        ; preds = %land.lhs.true16
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.520, i32 0, i32 0)), !dbg !10754
  br label %if.end19, !dbg !10754

if.end19:                                         ; preds = %if.then18, %land.lhs.true16, %if.end14
  call void @llvm.dbg.declare(metadata i32* %i20, metadata !10755, metadata !1898), !dbg !10757
  call void @llvm.dbg.declare(metadata i32* %ret21, metadata !10758, metadata !1898), !dbg !10759
  store i32 0, i32* %i20, align 4, !dbg !10760
  br label %for.cond22, !dbg !10762

for.cond22:                                       ; preds = %for.inc42, %if.end19
  %29 = load i32, i32* %i20, align 4, !dbg !10763
  %30 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10766
  %nb_frame_aspect_ratios = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %30, i32 0, i32 74, !dbg !10767
  %31 = load i32, i32* %nb_frame_aspect_ratios, align 8, !dbg !10767
  %cmp23 = icmp slt i32 %29, %31, !dbg !10768
  br i1 %cmp23, label %for.body24, label %for.end44, !dbg !10769

for.body24:                                       ; preds = %for.cond22
  call void @llvm.dbg.declare(metadata i8** %spec25, metadata !10770, metadata !1898), !dbg !10772
  %32 = load i32, i32* %i20, align 4, !dbg !10773
  %idxprom26 = sext i32 %32 to i64, !dbg !10775
  %33 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10775
  %frame_aspect_ratios = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %33, i32 0, i32 73, !dbg !10776
  %34 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_aspect_ratios, align 8, !dbg !10776
  %arrayidx27 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %34, i64 %idxprom26, !dbg !10775
  %specifier28 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx27, i32 0, i32 0, !dbg !10777
  %35 = load i8*, i8** %specifier28, align 8, !dbg !10777
  store i8* %35, i8** %spec25, align 8, !dbg !10778
  %36 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !10779
  %37 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10780
  %38 = load i8*, i8** %spec25, align 8, !dbg !10781
  %call29 = call i32 @check_stream_specifier(%struct.AVFormatContext* %36, %struct.AVStream* %37, i8* %38), !dbg !10782
  store i32 %call29, i32* %ret21, align 4, !dbg !10783
  %cmp30 = icmp sgt i32 %call29, 0, !dbg !10784
  br i1 %cmp30, label %if.then31, label %if.else37, !dbg !10785

if.then31:                                        ; preds = %for.body24
  %39 = load i32, i32* %i20, align 4, !dbg !10786
  %idxprom32 = sext i32 %39 to i64, !dbg !10789
  %40 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10789
  %frame_aspect_ratios33 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %40, i32 0, i32 73, !dbg !10790
  %41 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_aspect_ratios33, align 8, !dbg !10790
  %arrayidx34 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %41, i64 %idxprom32, !dbg !10789
  %u35 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx34, i32 0, i32 1, !dbg !10791
  %str36 = bitcast %union.anon.1* %u35 to i8**, !dbg !10792
  %42 = load i8*, i8** %str36, align 8, !dbg !10792
  store i8* %42, i8** %frame_aspect_ratio, align 8, !dbg !10793
  br label %if.end41, !dbg !10794

if.else37:                                        ; preds = %for.body24
  %43 = load i32, i32* %ret21, align 4, !dbg !10795
  %cmp38 = icmp slt i32 %43, 0, !dbg !10798
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !10795

if.then39:                                        ; preds = %if.else37
  call void @exit_program(i32 1) #11, !dbg !10799
  unreachable, !dbg !10799

if.end40:                                         ; preds = %if.else37
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then31
  br label %for.inc42, !dbg !10801

for.inc42:                                        ; preds = %if.end41
  %44 = load i32, i32* %i20, align 4, !dbg !10803
  %inc43 = add nsw i32 %44, 1, !dbg !10803
  store i32 %inc43, i32* %i20, align 4, !dbg !10803
  br label %for.cond22, !dbg !10805, !llvm.loop !10806

for.end44:                                        ; preds = %for.cond22
  %45 = load i8*, i8** %frame_aspect_ratio, align 8, !dbg !10808
  %tobool45 = icmp ne i8* %45, null, !dbg !10808
  br i1 %tobool45, label %if.then46, label %if.end55, !dbg !10810

if.then46:                                        ; preds = %for.end44
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q, metadata !10811, metadata !1898), !dbg !10813
  %46 = load i8*, i8** %frame_aspect_ratio, align 8, !dbg !10814
  %call47 = call i32 @av_parse_ratio(%struct.AVRational* %q, i8* %46, i32 255, i32 0, i8* null), !dbg !10816
  %cmp48 = icmp slt i32 %call47, 0, !dbg !10817
  br i1 %cmp48, label %if.then52, label %lor.lhs.false, !dbg !10818

lor.lhs.false:                                    ; preds = %if.then46
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q, i32 0, i32 0, !dbg !10819
  %47 = load i32, i32* %num, align 4, !dbg !10819
  %cmp49 = icmp sle i32 %47, 0, !dbg !10820
  br i1 %cmp49, label %if.then52, label %lor.lhs.false50, !dbg !10821

lor.lhs.false50:                                  ; preds = %lor.lhs.false
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q, i32 0, i32 1, !dbg !10822
  %48 = load i32, i32* %den, align 4, !dbg !10822
  %cmp51 = icmp sle i32 %48, 0, !dbg !10824
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !10825

if.then52:                                        ; preds = %lor.lhs.false50, %lor.lhs.false, %if.then46
  %49 = load i8*, i8** %frame_aspect_ratio, align 8, !dbg !10827
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.521, i32 0, i32 0), i8* %49), !dbg !10829
  call void @exit_program(i32 1) #11, !dbg !10830
  unreachable, !dbg !10830

if.end53:                                         ; preds = %lor.lhs.false50
  %50 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10831
  %frame_aspect_ratio54 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %50, i32 0, i32 29, !dbg !10832
  %51 = bitcast %struct.AVRational* %frame_aspect_ratio54 to i8*, !dbg !10833
  %52 = bitcast %struct.AVRational* %q to i8*, !dbg !10833
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 4, i1 false), !dbg !10833
  br label %if.end55, !dbg !10834

if.end55:                                         ; preds = %if.end53, %for.end44
  call void @llvm.dbg.declare(metadata i32* %i56, metadata !10835, metadata !1898), !dbg !10837
  call void @llvm.dbg.declare(metadata i32* %ret57, metadata !10838, metadata !1898), !dbg !10839
  store i32 0, i32* %i56, align 4, !dbg !10840
  br label %for.cond58, !dbg !10842

for.cond58:                                       ; preds = %for.inc78, %if.end55
  %53 = load i32, i32* %i56, align 4, !dbg !10843
  %54 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10846
  %nb_filter_scripts = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %54, i32 0, i32 96, !dbg !10847
  %55 = load i32, i32* %nb_filter_scripts, align 8, !dbg !10847
  %cmp59 = icmp slt i32 %53, %55, !dbg !10848
  br i1 %cmp59, label %for.body60, label %for.end80, !dbg !10849

for.body60:                                       ; preds = %for.cond58
  call void @llvm.dbg.declare(metadata i8** %spec61, metadata !10850, metadata !1898), !dbg !10852
  %56 = load i32, i32* %i56, align 4, !dbg !10853
  %idxprom62 = sext i32 %56 to i64, !dbg !10855
  %57 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10855
  %filter_scripts = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %57, i32 0, i32 95, !dbg !10856
  %58 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %filter_scripts, align 8, !dbg !10856
  %arrayidx63 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %58, i64 %idxprom62, !dbg !10855
  %specifier64 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx63, i32 0, i32 0, !dbg !10857
  %59 = load i8*, i8** %specifier64, align 8, !dbg !10857
  store i8* %59, i8** %spec61, align 8, !dbg !10858
  %60 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !10859
  %61 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10860
  %62 = load i8*, i8** %spec61, align 8, !dbg !10861
  %call65 = call i32 @check_stream_specifier(%struct.AVFormatContext* %60, %struct.AVStream* %61, i8* %62), !dbg !10862
  store i32 %call65, i32* %ret57, align 4, !dbg !10863
  %cmp66 = icmp sgt i32 %call65, 0, !dbg !10864
  br i1 %cmp66, label %if.then67, label %if.else73, !dbg !10865

if.then67:                                        ; preds = %for.body60
  %63 = load i32, i32* %i56, align 4, !dbg !10866
  %idxprom68 = sext i32 %63 to i64, !dbg !10869
  %64 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10869
  %filter_scripts69 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %64, i32 0, i32 95, !dbg !10870
  %65 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %filter_scripts69, align 8, !dbg !10870
  %arrayidx70 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %65, i64 %idxprom68, !dbg !10869
  %u71 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx70, i32 0, i32 1, !dbg !10871
  %str72 = bitcast %union.anon.1* %u71 to i8**, !dbg !10872
  %66 = load i8*, i8** %str72, align 8, !dbg !10872
  %67 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10873
  %filters_script = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %67, i32 0, i32 44, !dbg !10874
  store i8* %66, i8** %filters_script, align 8, !dbg !10875
  br label %if.end77, !dbg !10873

if.else73:                                        ; preds = %for.body60
  %68 = load i32, i32* %ret57, align 4, !dbg !10876
  %cmp74 = icmp slt i32 %68, 0, !dbg !10879
  br i1 %cmp74, label %if.then75, label %if.end76, !dbg !10876

if.then75:                                        ; preds = %if.else73
  call void @exit_program(i32 1) #11, !dbg !10880
  unreachable, !dbg !10880

if.end76:                                         ; preds = %if.else73
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then67
  br label %for.inc78, !dbg !10882

for.inc78:                                        ; preds = %if.end77
  %69 = load i32, i32* %i56, align 4, !dbg !10884
  %inc79 = add nsw i32 %69, 1, !dbg !10884
  store i32 %inc79, i32* %i56, align 4, !dbg !10884
  br label %for.cond58, !dbg !10886, !llvm.loop !10887

for.end80:                                        ; preds = %for.cond58
  call void @llvm.dbg.declare(metadata i32* %i81, metadata !10889, metadata !1898), !dbg !10891
  call void @llvm.dbg.declare(metadata i32* %ret82, metadata !10892, metadata !1898), !dbg !10893
  store i32 0, i32* %i81, align 4, !dbg !10894
  br label %for.cond83, !dbg !10896

for.cond83:                                       ; preds = %for.inc104, %for.end80
  %70 = load i32, i32* %i81, align 4, !dbg !10897
  %71 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10900
  %nb_filters = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %71, i32 0, i32 94, !dbg !10901
  %72 = load i32, i32* %nb_filters, align 8, !dbg !10901
  %cmp84 = icmp slt i32 %70, %72, !dbg !10902
  br i1 %cmp84, label %for.body85, label %for.end106, !dbg !10903

for.body85:                                       ; preds = %for.cond83
  call void @llvm.dbg.declare(metadata i8** %spec86, metadata !10904, metadata !1898), !dbg !10906
  %73 = load i32, i32* %i81, align 4, !dbg !10907
  %idxprom87 = sext i32 %73 to i64, !dbg !10909
  %74 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10909
  %filters = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %74, i32 0, i32 93, !dbg !10910
  %75 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %filters, align 8, !dbg !10910
  %arrayidx88 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %75, i64 %idxprom87, !dbg !10909
  %specifier89 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx88, i32 0, i32 0, !dbg !10911
  %76 = load i8*, i8** %specifier89, align 8, !dbg !10911
  store i8* %76, i8** %spec86, align 8, !dbg !10912
  %77 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !10913
  %78 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10914
  %79 = load i8*, i8** %spec86, align 8, !dbg !10915
  %call90 = call i32 @check_stream_specifier(%struct.AVFormatContext* %77, %struct.AVStream* %78, i8* %79), !dbg !10916
  store i32 %call90, i32* %ret82, align 4, !dbg !10917
  %cmp91 = icmp sgt i32 %call90, 0, !dbg !10918
  br i1 %cmp91, label %if.then92, label %if.else99, !dbg !10919

if.then92:                                        ; preds = %for.body85
  %80 = load i32, i32* %i81, align 4, !dbg !10920
  %idxprom93 = sext i32 %80 to i64, !dbg !10923
  %81 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10923
  %filters94 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %81, i32 0, i32 93, !dbg !10924
  %82 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %filters94, align 8, !dbg !10924
  %arrayidx95 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %82, i64 %idxprom93, !dbg !10923
  %u96 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx95, i32 0, i32 1, !dbg !10925
  %str97 = bitcast %union.anon.1* %u96 to i8**, !dbg !10926
  %83 = load i8*, i8** %str97, align 8, !dbg !10926
  %84 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10927
  %filters98 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %84, i32 0, i32 43, !dbg !10928
  store i8* %83, i8** %filters98, align 8, !dbg !10929
  br label %if.end103, !dbg !10927

if.else99:                                        ; preds = %for.body85
  %85 = load i32, i32* %ret82, align 4, !dbg !10930
  %cmp100 = icmp slt i32 %85, 0, !dbg !10933
  br i1 %cmp100, label %if.then101, label %if.end102, !dbg !10930

if.then101:                                       ; preds = %if.else99
  call void @exit_program(i32 1) #11, !dbg !10934
  unreachable, !dbg !10934

if.end102:                                        ; preds = %if.else99
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then92
  br label %for.inc104, !dbg !10936

for.inc104:                                       ; preds = %if.end103
  %86 = load i32, i32* %i81, align 4, !dbg !10938
  %inc105 = add nsw i32 %86, 1, !dbg !10938
  store i32 %inc105, i32* %i81, align 4, !dbg !10938
  br label %for.cond83, !dbg !10940, !llvm.loop !10941

for.end106:                                       ; preds = %for.cond83
  %87 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10943
  %nb_filters107 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %87, i32 0, i32 94, !dbg !10945
  %88 = load i32, i32* %nb_filters107, align 8, !dbg !10945
  %cmp108 = icmp sgt i32 %88, 1, !dbg !10946
  br i1 %cmp108, label %if.then109, label %if.end111, !dbg !10947

if.then109:                                       ; preds = %for.end106
  %89 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10948
  %filters110 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %89, i32 0, i32 43, !dbg !10949
  %90 = load i8*, i8** %filters110, align 8, !dbg !10949
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.522, i32 0, i32 0), i8* %90), !dbg !10950
  br label %if.end111, !dbg !10950

if.end111:                                        ; preds = %if.then109, %for.end106
  %91 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !10951
  %stream_copy = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %91, i32 0, i32 52, !dbg !10953
  %92 = load i32, i32* %stream_copy, align 8, !dbg !10953
  %tobool112 = icmp ne i32 %92, 0, !dbg !10951
  br i1 %tobool112, label %if.else604, label %if.then113, !dbg !10954

if.then113:                                       ; preds = %if.end111
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10955, metadata !1898), !dbg !10957
  store i8* null, i8** %p, align 8, !dbg !10957
  call void @llvm.dbg.declare(metadata i8** %frame_size, metadata !10958, metadata !1898), !dbg !10959
  store i8* null, i8** %frame_size, align 8, !dbg !10959
  call void @llvm.dbg.declare(metadata i8** %frame_pix_fmt, metadata !10960, metadata !1898), !dbg !10961
  store i8* null, i8** %frame_pix_fmt, align 8, !dbg !10961
  call void @llvm.dbg.declare(metadata i8** %intra_matrix, metadata !10962, metadata !1898), !dbg !10963
  store i8* null, i8** %intra_matrix, align 8, !dbg !10963
  call void @llvm.dbg.declare(metadata i8** %inter_matrix, metadata !10964, metadata !1898), !dbg !10965
  store i8* null, i8** %inter_matrix, align 8, !dbg !10965
  call void @llvm.dbg.declare(metadata i8** %chroma_intra_matrix, metadata !10966, metadata !1898), !dbg !10967
  store i8* null, i8** %chroma_intra_matrix, align 8, !dbg !10967
  call void @llvm.dbg.declare(metadata i32* %do_pass, metadata !10968, metadata !1898), !dbg !10969
  store i32 0, i32* %do_pass, align 4, !dbg !10969
  call void @llvm.dbg.declare(metadata i32* %i114, metadata !10970, metadata !1898), !dbg !10971
  call void @llvm.dbg.declare(metadata i32* %i115, metadata !10972, metadata !1898), !dbg !10974
  call void @llvm.dbg.declare(metadata i32* %ret116, metadata !10975, metadata !1898), !dbg !10976
  store i32 0, i32* %i115, align 4, !dbg !10977
  br label %for.cond117, !dbg !10979

for.cond117:                                      ; preds = %for.inc137, %if.then113
  %93 = load i32, i32* %i115, align 4, !dbg !10980
  %94 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10983
  %nb_frame_sizes = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %94, i32 0, i32 14, !dbg !10984
  %95 = load i32, i32* %nb_frame_sizes, align 8, !dbg !10984
  %cmp118 = icmp slt i32 %93, %95, !dbg !10985
  br i1 %cmp118, label %for.body119, label %for.end139, !dbg !10986

for.body119:                                      ; preds = %for.cond117
  call void @llvm.dbg.declare(metadata i8** %spec120, metadata !10987, metadata !1898), !dbg !10989
  %96 = load i32, i32* %i115, align 4, !dbg !10990
  %idxprom121 = sext i32 %96 to i64, !dbg !10992
  %97 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !10992
  %frame_sizes = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %97, i32 0, i32 13, !dbg !10993
  %98 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_sizes, align 8, !dbg !10993
  %arrayidx122 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %98, i64 %idxprom121, !dbg !10992
  %specifier123 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx122, i32 0, i32 0, !dbg !10994
  %99 = load i8*, i8** %specifier123, align 8, !dbg !10994
  store i8* %99, i8** %spec120, align 8, !dbg !10995
  %100 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !10996
  %101 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !10997
  %102 = load i8*, i8** %spec120, align 8, !dbg !10998
  %call124 = call i32 @check_stream_specifier(%struct.AVFormatContext* %100, %struct.AVStream* %101, i8* %102), !dbg !10999
  store i32 %call124, i32* %ret116, align 4, !dbg !11000
  %cmp125 = icmp sgt i32 %call124, 0, !dbg !11001
  br i1 %cmp125, label %if.then126, label %if.else132, !dbg !11002

if.then126:                                       ; preds = %for.body119
  %103 = load i32, i32* %i115, align 4, !dbg !11003
  %idxprom127 = sext i32 %103 to i64, !dbg !11006
  %104 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11006
  %frame_sizes128 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %104, i32 0, i32 13, !dbg !11007
  %105 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_sizes128, align 8, !dbg !11007
  %arrayidx129 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %105, i64 %idxprom127, !dbg !11006
  %u130 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx129, i32 0, i32 1, !dbg !11008
  %str131 = bitcast %union.anon.1* %u130 to i8**, !dbg !11009
  %106 = load i8*, i8** %str131, align 8, !dbg !11009
  store i8* %106, i8** %frame_size, align 8, !dbg !11010
  br label %if.end136, !dbg !11011

if.else132:                                       ; preds = %for.body119
  %107 = load i32, i32* %ret116, align 4, !dbg !11012
  %cmp133 = icmp slt i32 %107, 0, !dbg !11015
  br i1 %cmp133, label %if.then134, label %if.end135, !dbg !11012

if.then134:                                       ; preds = %if.else132
  call void @exit_program(i32 1) #11, !dbg !11016
  unreachable, !dbg !11016

if.end135:                                        ; preds = %if.else132
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.then126
  br label %for.inc137, !dbg !11018

for.inc137:                                       ; preds = %if.end136
  %108 = load i32, i32* %i115, align 4, !dbg !11020
  %inc138 = add nsw i32 %108, 1, !dbg !11020
  store i32 %inc138, i32* %i115, align 4, !dbg !11020
  br label %for.cond117, !dbg !11022, !llvm.loop !11023

for.end139:                                       ; preds = %for.cond117
  %109 = load i8*, i8** %frame_size, align 8, !dbg !11025
  %tobool140 = icmp ne i8* %109, null, !dbg !11025
  br i1 %tobool140, label %land.lhs.true141, label %if.end145, !dbg !11027

land.lhs.true141:                                 ; preds = %for.end139
  %110 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11028
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %110, i32 0, i32 20, !dbg !11030
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11031
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %111, i32 0, i32 21, !dbg !11032
  %112 = load i8*, i8** %frame_size, align 8, !dbg !11033
  %call142 = call i32 @av_parse_video_size(i32* %width, i32* %height, i8* %112), !dbg !11034
  %cmp143 = icmp slt i32 %call142, 0, !dbg !11035
  br i1 %cmp143, label %if.then144, label %if.end145, !dbg !11036

if.then144:                                       ; preds = %land.lhs.true141
  %113 = load i8*, i8** %frame_size, align 8, !dbg !11037
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.523, i32 0, i32 0), i8* %113), !dbg !11039
  call void @exit_program(i32 1) #11, !dbg !11040
  unreachable, !dbg !11040

if.end145:                                        ; preds = %land.lhs.true141, %for.end139
  %114 = load i32, i32* @frame_bits_per_raw_sample, align 4, !dbg !11041
  %115 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11042
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %115, i32 0, i32 143, !dbg !11043
  store i32 %114, i32* %bits_per_raw_sample, align 4, !dbg !11044
  call void @llvm.dbg.declare(metadata i32* %i146, metadata !11045, metadata !1898), !dbg !11047
  call void @llvm.dbg.declare(metadata i32* %ret147, metadata !11048, metadata !1898), !dbg !11049
  store i32 0, i32* %i146, align 4, !dbg !11050
  br label %for.cond148, !dbg !11052

for.cond148:                                      ; preds = %for.inc168, %if.end145
  %116 = load i32, i32* %i146, align 4, !dbg !11053
  %117 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11056
  %nb_frame_pix_fmts = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %117, i32 0, i32 16, !dbg !11057
  %118 = load i32, i32* %nb_frame_pix_fmts, align 8, !dbg !11057
  %cmp149 = icmp slt i32 %116, %118, !dbg !11058
  br i1 %cmp149, label %for.body150, label %for.end170, !dbg !11059

for.body150:                                      ; preds = %for.cond148
  call void @llvm.dbg.declare(metadata i8** %spec151, metadata !11060, metadata !1898), !dbg !11062
  %119 = load i32, i32* %i146, align 4, !dbg !11063
  %idxprom152 = sext i32 %119 to i64, !dbg !11065
  %120 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11065
  %frame_pix_fmts = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %120, i32 0, i32 15, !dbg !11066
  %121 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_pix_fmts, align 8, !dbg !11066
  %arrayidx153 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %121, i64 %idxprom152, !dbg !11065
  %specifier154 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx153, i32 0, i32 0, !dbg !11067
  %122 = load i8*, i8** %specifier154, align 8, !dbg !11067
  store i8* %122, i8** %spec151, align 8, !dbg !11068
  %123 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !11069
  %124 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !11070
  %125 = load i8*, i8** %spec151, align 8, !dbg !11071
  %call155 = call i32 @check_stream_specifier(%struct.AVFormatContext* %123, %struct.AVStream* %124, i8* %125), !dbg !11072
  store i32 %call155, i32* %ret147, align 4, !dbg !11073
  %cmp156 = icmp sgt i32 %call155, 0, !dbg !11074
  br i1 %cmp156, label %if.then157, label %if.else163, !dbg !11075

if.then157:                                       ; preds = %for.body150
  %126 = load i32, i32* %i146, align 4, !dbg !11076
  %idxprom158 = sext i32 %126 to i64, !dbg !11079
  %127 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11079
  %frame_pix_fmts159 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %127, i32 0, i32 15, !dbg !11080
  %128 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_pix_fmts159, align 8, !dbg !11080
  %arrayidx160 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %128, i64 %idxprom158, !dbg !11079
  %u161 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx160, i32 0, i32 1, !dbg !11081
  %str162 = bitcast %union.anon.1* %u161 to i8**, !dbg !11082
  %129 = load i8*, i8** %str162, align 8, !dbg !11082
  store i8* %129, i8** %frame_pix_fmt, align 8, !dbg !11083
  br label %if.end167, !dbg !11084

if.else163:                                       ; preds = %for.body150
  %130 = load i32, i32* %ret147, align 4, !dbg !11085
  %cmp164 = icmp slt i32 %130, 0, !dbg !11088
  br i1 %cmp164, label %if.then165, label %if.end166, !dbg !11085

if.then165:                                       ; preds = %if.else163
  call void @exit_program(i32 1) #11, !dbg !11089
  unreachable, !dbg !11089

if.end166:                                        ; preds = %if.else163
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.then157
  br label %for.inc168, !dbg !11091

for.inc168:                                       ; preds = %if.end167
  %131 = load i32, i32* %i146, align 4, !dbg !11093
  %inc169 = add nsw i32 %131, 1, !dbg !11093
  store i32 %inc169, i32* %i146, align 4, !dbg !11093
  br label %for.cond148, !dbg !11095, !llvm.loop !11096

for.end170:                                       ; preds = %for.cond148
  %132 = load i8*, i8** %frame_pix_fmt, align 8, !dbg !11098
  %tobool171 = icmp ne i8* %132, null, !dbg !11098
  br i1 %tobool171, label %land.lhs.true172, label %if.end179, !dbg !11100

land.lhs.true172:                                 ; preds = %for.end170
  %133 = load i8*, i8** %frame_pix_fmt, align 8, !dbg !11101
  %134 = load i8, i8* %133, align 1, !dbg !11103
  %conv = sext i8 %134 to i32, !dbg !11103
  %cmp173 = icmp eq i32 %conv, 43, !dbg !11104
  br i1 %cmp173, label %if.then175, label %if.end179, !dbg !11105

if.then175:                                       ; preds = %land.lhs.true172
  %135 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11106
  %keep_pix_fmt = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %135, i32 0, i32 59, !dbg !11108
  store i32 1, i32* %keep_pix_fmt, align 8, !dbg !11109
  %136 = load i8*, i8** %frame_pix_fmt, align 8, !dbg !11110
  %incdec.ptr = getelementptr inbounds i8, i8* %136, i32 1, !dbg !11110
  store i8* %incdec.ptr, i8** %frame_pix_fmt, align 8, !dbg !11110
  %137 = load i8, i8* %incdec.ptr, align 1, !dbg !11112
  %tobool176 = icmp ne i8 %137, 0, !dbg !11112
  br i1 %tobool176, label %if.end178, label %if.then177, !dbg !11113

if.then177:                                       ; preds = %if.then175
  store i8* null, i8** %frame_pix_fmt, align 8, !dbg !11114
  br label %if.end178, !dbg !11115

if.end178:                                        ; preds = %if.then177, %if.then175
  br label %if.end179, !dbg !11116

if.end179:                                        ; preds = %if.end178, %land.lhs.true172, %for.end170
  %138 = load i8*, i8** %frame_pix_fmt, align 8, !dbg !11117
  %tobool180 = icmp ne i8* %138, null, !dbg !11117
  br i1 %tobool180, label %land.lhs.true181, label %if.end186, !dbg !11119

land.lhs.true181:                                 ; preds = %if.end179
  %139 = load i8*, i8** %frame_pix_fmt, align 8, !dbg !11120
  %call182 = call i32 @av_get_pix_fmt(i8* %139), !dbg !11122
  %140 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11123
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %140, i32 0, i32 25, !dbg !11124
  store i32 %call182, i32* %pix_fmt, align 8, !dbg !11125
  %cmp183 = icmp eq i32 %call182, -1, !dbg !11126
  br i1 %cmp183, label %if.then185, label %if.end186, !dbg !11127

if.then185:                                       ; preds = %land.lhs.true181
  %141 = load i8*, i8** %frame_pix_fmt, align 8, !dbg !11128
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.524, i32 0, i32 0), i8* %141), !dbg !11130
  call void @exit_program(i32 1) #11, !dbg !11131
  unreachable, !dbg !11131

if.end186:                                        ; preds = %land.lhs.true181, %if.end179
  %142 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !11132
  %sample_aspect_ratio = getelementptr inbounds %struct.AVStream, %struct.AVStream* %142, i32 0, i32 10, !dbg !11133
  %143 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11134
  %sample_aspect_ratio187 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %143, i32 0, i32 44, !dbg !11135
  %144 = bitcast %struct.AVRational* %sample_aspect_ratio to i8*, !dbg !11135
  %145 = bitcast %struct.AVRational* %sample_aspect_ratio187 to i8*, !dbg !11135
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %144, i8* %145, i64 8, i32 8, i1 false), !dbg !11135
  %146 = load i32, i32* @intra_only, align 4, !dbg !11136
  %tobool188 = icmp ne i32 %146, 0, !dbg !11136
  br i1 %tobool188, label %if.then189, label %if.end190, !dbg !11138

if.then189:                                       ; preds = %if.end186
  %147 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11139
  %gop_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %147, i32 0, i32 24, !dbg !11140
  store i32 0, i32* %gop_size, align 4, !dbg !11141
  br label %if.end190, !dbg !11139

if.end190:                                        ; preds = %if.then189, %if.end186
  call void @llvm.dbg.declare(metadata i32* %i191, metadata !11142, metadata !1898), !dbg !11144
  call void @llvm.dbg.declare(metadata i32* %ret192, metadata !11145, metadata !1898), !dbg !11146
  store i32 0, i32* %i191, align 4, !dbg !11147
  br label %for.cond193, !dbg !11149

for.cond193:                                      ; preds = %for.inc216, %if.end190
  %148 = load i32, i32* %i191, align 4, !dbg !11150
  %149 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11153
  %nb_intra_matrices = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %149, i32 0, i32 78, !dbg !11154
  %150 = load i32, i32* %nb_intra_matrices, align 8, !dbg !11154
  %cmp194 = icmp slt i32 %148, %150, !dbg !11155
  br i1 %cmp194, label %for.body196, label %for.end218, !dbg !11156

for.body196:                                      ; preds = %for.cond193
  call void @llvm.dbg.declare(metadata i8** %spec197, metadata !11157, metadata !1898), !dbg !11159
  %151 = load i32, i32* %i191, align 4, !dbg !11160
  %idxprom198 = sext i32 %151 to i64, !dbg !11162
  %152 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11162
  %intra_matrices = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %152, i32 0, i32 77, !dbg !11163
  %153 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %intra_matrices, align 8, !dbg !11163
  %arrayidx199 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %153, i64 %idxprom198, !dbg !11162
  %specifier200 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx199, i32 0, i32 0, !dbg !11164
  %154 = load i8*, i8** %specifier200, align 8, !dbg !11164
  store i8* %154, i8** %spec197, align 8, !dbg !11165
  %155 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !11166
  %156 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !11167
  %157 = load i8*, i8** %spec197, align 8, !dbg !11168
  %call201 = call i32 @check_stream_specifier(%struct.AVFormatContext* %155, %struct.AVStream* %156, i8* %157), !dbg !11169
  store i32 %call201, i32* %ret192, align 4, !dbg !11170
  %cmp202 = icmp sgt i32 %call201, 0, !dbg !11171
  br i1 %cmp202, label %if.then204, label %if.else210, !dbg !11172

if.then204:                                       ; preds = %for.body196
  %158 = load i32, i32* %i191, align 4, !dbg !11173
  %idxprom205 = sext i32 %158 to i64, !dbg !11176
  %159 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11176
  %intra_matrices206 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %159, i32 0, i32 77, !dbg !11177
  %160 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %intra_matrices206, align 8, !dbg !11177
  %arrayidx207 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %160, i64 %idxprom205, !dbg !11176
  %u208 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx207, i32 0, i32 1, !dbg !11178
  %str209 = bitcast %union.anon.1* %u208 to i8**, !dbg !11179
  %161 = load i8*, i8** %str209, align 8, !dbg !11179
  store i8* %161, i8** %intra_matrix, align 8, !dbg !11180
  br label %if.end215, !dbg !11181

if.else210:                                       ; preds = %for.body196
  %162 = load i32, i32* %ret192, align 4, !dbg !11182
  %cmp211 = icmp slt i32 %162, 0, !dbg !11185
  br i1 %cmp211, label %if.then213, label %if.end214, !dbg !11182

if.then213:                                       ; preds = %if.else210
  call void @exit_program(i32 1) #11, !dbg !11186
  unreachable, !dbg !11186

if.end214:                                        ; preds = %if.else210
  br label %if.end215

if.end215:                                        ; preds = %if.end214, %if.then204
  br label %for.inc216, !dbg !11188

for.inc216:                                       ; preds = %if.end215
  %163 = load i32, i32* %i191, align 4, !dbg !11190
  %inc217 = add nsw i32 %163, 1, !dbg !11190
  store i32 %inc217, i32* %i191, align 4, !dbg !11190
  br label %for.cond193, !dbg !11192, !llvm.loop !11193

for.end218:                                       ; preds = %for.cond193
  %164 = load i8*, i8** %intra_matrix, align 8, !dbg !11195
  %tobool219 = icmp ne i8* %164, null, !dbg !11195
  br i1 %tobool219, label %if.then220, label %if.end227, !dbg !11197

if.then220:                                       ; preds = %for.end218
  %call221 = call noalias i8* @av_mallocz(i64 128), !dbg !11198
  %165 = bitcast i8* %call221 to i16*, !dbg !11198
  %166 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11201
  %intra_matrix222 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %166, i32 0, i32 58, !dbg !11202
  store i16* %165, i16** %intra_matrix222, align 8, !dbg !11203
  %tobool223 = icmp ne i16* %165, null, !dbg !11203
  br i1 %tobool223, label %if.end225, label %if.then224, !dbg !11204

if.then224:                                       ; preds = %if.then220
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.525, i32 0, i32 0)), !dbg !11205
  call void @exit_program(i32 1) #11, !dbg !11207
  unreachable, !dbg !11207

if.end225:                                        ; preds = %if.then220
  %167 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11208
  %intra_matrix226 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %167, i32 0, i32 58, !dbg !11209
  %168 = load i16*, i16** %intra_matrix226, align 8, !dbg !11209
  %169 = load i8*, i8** %intra_matrix, align 8, !dbg !11210
  call void @parse_matrix_coeffs(i16* %168, i8* %169), !dbg !11211
  br label %if.end227, !dbg !11212

if.end227:                                        ; preds = %if.end225, %for.end218
  call void @llvm.dbg.declare(metadata i32* %i228, metadata !11213, metadata !1898), !dbg !11215
  call void @llvm.dbg.declare(metadata i32* %ret229, metadata !11216, metadata !1898), !dbg !11217
  store i32 0, i32* %i228, align 4, !dbg !11218
  br label %for.cond230, !dbg !11220

for.cond230:                                      ; preds = %for.inc253, %if.end227
  %170 = load i32, i32* %i228, align 4, !dbg !11221
  %171 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11224
  %nb_chroma_intra_matrices = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %171, i32 0, i32 82, !dbg !11225
  %172 = load i32, i32* %nb_chroma_intra_matrices, align 8, !dbg !11225
  %cmp231 = icmp slt i32 %170, %172, !dbg !11226
  br i1 %cmp231, label %for.body233, label %for.end255, !dbg !11227

for.body233:                                      ; preds = %for.cond230
  call void @llvm.dbg.declare(metadata i8** %spec234, metadata !11228, metadata !1898), !dbg !11230
  %173 = load i32, i32* %i228, align 4, !dbg !11231
  %idxprom235 = sext i32 %173 to i64, !dbg !11233
  %174 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11233
  %chroma_intra_matrices = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %174, i32 0, i32 81, !dbg !11234
  %175 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %chroma_intra_matrices, align 8, !dbg !11234
  %arrayidx236 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %175, i64 %idxprom235, !dbg !11233
  %specifier237 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx236, i32 0, i32 0, !dbg !11235
  %176 = load i8*, i8** %specifier237, align 8, !dbg !11235
  store i8* %176, i8** %spec234, align 8, !dbg !11236
  %177 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !11237
  %178 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !11238
  %179 = load i8*, i8** %spec234, align 8, !dbg !11239
  %call238 = call i32 @check_stream_specifier(%struct.AVFormatContext* %177, %struct.AVStream* %178, i8* %179), !dbg !11240
  store i32 %call238, i32* %ret229, align 4, !dbg !11241
  %cmp239 = icmp sgt i32 %call238, 0, !dbg !11242
  br i1 %cmp239, label %if.then241, label %if.else247, !dbg !11243

if.then241:                                       ; preds = %for.body233
  %180 = load i32, i32* %i228, align 4, !dbg !11244
  %idxprom242 = sext i32 %180 to i64, !dbg !11247
  %181 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11247
  %chroma_intra_matrices243 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %181, i32 0, i32 81, !dbg !11248
  %182 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %chroma_intra_matrices243, align 8, !dbg !11248
  %arrayidx244 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %182, i64 %idxprom242, !dbg !11247
  %u245 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx244, i32 0, i32 1, !dbg !11249
  %str246 = bitcast %union.anon.1* %u245 to i8**, !dbg !11250
  %183 = load i8*, i8** %str246, align 8, !dbg !11250
  store i8* %183, i8** %chroma_intra_matrix, align 8, !dbg !11251
  br label %if.end252, !dbg !11252

if.else247:                                       ; preds = %for.body233
  %184 = load i32, i32* %ret229, align 4, !dbg !11253
  %cmp248 = icmp slt i32 %184, 0, !dbg !11256
  br i1 %cmp248, label %if.then250, label %if.end251, !dbg !11253

if.then250:                                       ; preds = %if.else247
  call void @exit_program(i32 1) #11, !dbg !11257
  unreachable, !dbg !11257

if.end251:                                        ; preds = %if.else247
  br label %if.end252

if.end252:                                        ; preds = %if.end251, %if.then241
  br label %for.inc253, !dbg !11259

for.inc253:                                       ; preds = %if.end252
  %185 = load i32, i32* %i228, align 4, !dbg !11261
  %inc254 = add nsw i32 %185, 1, !dbg !11261
  store i32 %inc254, i32* %i228, align 4, !dbg !11261
  br label %for.cond230, !dbg !11263, !llvm.loop !11264

for.end255:                                       ; preds = %for.cond230
  %186 = load i8*, i8** %chroma_intra_matrix, align 8, !dbg !11266
  %tobool256 = icmp ne i8* %186, null, !dbg !11266
  br i1 %tobool256, label %if.then257, label %if.end264, !dbg !11268

if.then257:                                       ; preds = %for.end255
  call void @llvm.dbg.declare(metadata i16** %p258, metadata !11269, metadata !1898), !dbg !11271
  %call259 = call noalias i8* @av_mallocz(i64 128), !dbg !11272
  %187 = bitcast i8* %call259 to i16*, !dbg !11272
  store i16* %187, i16** %p258, align 8, !dbg !11271
  %188 = load i16*, i16** %p258, align 8, !dbg !11273
  %tobool260 = icmp ne i16* %188, null, !dbg !11273
  br i1 %tobool260, label %if.end262, label %if.then261, !dbg !11275

if.then261:                                       ; preds = %if.then257
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.525, i32 0, i32 0)), !dbg !11276
  call void @exit_program(i32 1) #11, !dbg !11278
  unreachable, !dbg !11278

if.end262:                                        ; preds = %if.then257
  %189 = load i16*, i16** %p258, align 8, !dbg !11279
  %190 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11280
  %chroma_intra_matrix263 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %190, i32 0, i32 176, !dbg !11281
  store i16* %189, i16** %chroma_intra_matrix263, align 8, !dbg !11282
  %191 = load i16*, i16** %p258, align 8, !dbg !11283
  %192 = load i8*, i8** %chroma_intra_matrix, align 8, !dbg !11284
  call void @parse_matrix_coeffs(i16* %191, i8* %192), !dbg !11285
  br label %if.end264, !dbg !11286

if.end264:                                        ; preds = %if.end262, %for.end255
  call void @llvm.dbg.declare(metadata i32* %i265, metadata !11287, metadata !1898), !dbg !11289
  call void @llvm.dbg.declare(metadata i32* %ret266, metadata !11290, metadata !1898), !dbg !11291
  store i32 0, i32* %i265, align 4, !dbg !11292
  br label %for.cond267, !dbg !11294

for.cond267:                                      ; preds = %for.inc290, %if.end264
  %193 = load i32, i32* %i265, align 4, !dbg !11295
  %194 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11298
  %nb_inter_matrices = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %194, i32 0, i32 80, !dbg !11299
  %195 = load i32, i32* %nb_inter_matrices, align 8, !dbg !11299
  %cmp268 = icmp slt i32 %193, %195, !dbg !11300
  br i1 %cmp268, label %for.body270, label %for.end292, !dbg !11301

for.body270:                                      ; preds = %for.cond267
  call void @llvm.dbg.declare(metadata i8** %spec271, metadata !11302, metadata !1898), !dbg !11304
  %196 = load i32, i32* %i265, align 4, !dbg !11305
  %idxprom272 = sext i32 %196 to i64, !dbg !11307
  %197 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11307
  %inter_matrices = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %197, i32 0, i32 79, !dbg !11308
  %198 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %inter_matrices, align 8, !dbg !11308
  %arrayidx273 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %198, i64 %idxprom272, !dbg !11307
  %specifier274 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx273, i32 0, i32 0, !dbg !11309
  %199 = load i8*, i8** %specifier274, align 8, !dbg !11309
  store i8* %199, i8** %spec271, align 8, !dbg !11310
  %200 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !11311
  %201 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !11312
  %202 = load i8*, i8** %spec271, align 8, !dbg !11313
  %call275 = call i32 @check_stream_specifier(%struct.AVFormatContext* %200, %struct.AVStream* %201, i8* %202), !dbg !11314
  store i32 %call275, i32* %ret266, align 4, !dbg !11315
  %cmp276 = icmp sgt i32 %call275, 0, !dbg !11316
  br i1 %cmp276, label %if.then278, label %if.else284, !dbg !11317

if.then278:                                       ; preds = %for.body270
  %203 = load i32, i32* %i265, align 4, !dbg !11318
  %idxprom279 = sext i32 %203 to i64, !dbg !11321
  %204 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11321
  %inter_matrices280 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %204, i32 0, i32 79, !dbg !11322
  %205 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %inter_matrices280, align 8, !dbg !11322
  %arrayidx281 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %205, i64 %idxprom279, !dbg !11321
  %u282 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx281, i32 0, i32 1, !dbg !11323
  %str283 = bitcast %union.anon.1* %u282 to i8**, !dbg !11324
  %206 = load i8*, i8** %str283, align 8, !dbg !11324
  store i8* %206, i8** %inter_matrix, align 8, !dbg !11325
  br label %if.end289, !dbg !11326

if.else284:                                       ; preds = %for.body270
  %207 = load i32, i32* %ret266, align 4, !dbg !11327
  %cmp285 = icmp slt i32 %207, 0, !dbg !11330
  br i1 %cmp285, label %if.then287, label %if.end288, !dbg !11327

if.then287:                                       ; preds = %if.else284
  call void @exit_program(i32 1) #11, !dbg !11331
  unreachable, !dbg !11331

if.end288:                                        ; preds = %if.else284
  br label %if.end289

if.end289:                                        ; preds = %if.end288, %if.then278
  br label %for.inc290, !dbg !11333

for.inc290:                                       ; preds = %if.end289
  %208 = load i32, i32* %i265, align 4, !dbg !11335
  %inc291 = add nsw i32 %208, 1, !dbg !11335
  store i32 %inc291, i32* %i265, align 4, !dbg !11335
  br label %for.cond267, !dbg !11337, !llvm.loop !11338

for.end292:                                       ; preds = %for.cond267
  %209 = load i8*, i8** %inter_matrix, align 8, !dbg !11340
  %tobool293 = icmp ne i8* %209, null, !dbg !11340
  br i1 %tobool293, label %if.then294, label %if.end301, !dbg !11342

if.then294:                                       ; preds = %for.end292
  %call295 = call noalias i8* @av_mallocz(i64 128), !dbg !11343
  %210 = bitcast i8* %call295 to i16*, !dbg !11343
  %211 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11346
  %inter_matrix296 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %211, i32 0, i32 59, !dbg !11347
  store i16* %210, i16** %inter_matrix296, align 8, !dbg !11348
  %tobool297 = icmp ne i16* %210, null, !dbg !11348
  br i1 %tobool297, label %if.end299, label %if.then298, !dbg !11349

if.then298:                                       ; preds = %if.then294
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.526, i32 0, i32 0)), !dbg !11350
  call void @exit_program(i32 1) #11, !dbg !11352
  unreachable, !dbg !11352

if.end299:                                        ; preds = %if.then294
  %212 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11353
  %inter_matrix300 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %212, i32 0, i32 59, !dbg !11354
  %213 = load i16*, i16** %inter_matrix300, align 8, !dbg !11354
  %214 = load i8*, i8** %inter_matrix, align 8, !dbg !11355
  call void @parse_matrix_coeffs(i16* %213, i8* %214), !dbg !11356
  br label %if.end301, !dbg !11357

if.end301:                                        ; preds = %if.end299, %for.end292
  call void @llvm.dbg.declare(metadata i32* %i302, metadata !11358, metadata !1898), !dbg !11360
  call void @llvm.dbg.declare(metadata i32* %ret303, metadata !11361, metadata !1898), !dbg !11362
  store i32 0, i32* %i302, align 4, !dbg !11363
  br label %for.cond304, !dbg !11365

for.cond304:                                      ; preds = %for.inc327, %if.end301
  %215 = load i32, i32* %i302, align 4, !dbg !11366
  %216 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11369
  %nb_rc_overrides = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %216, i32 0, i32 76, !dbg !11370
  %217 = load i32, i32* %nb_rc_overrides, align 8, !dbg !11370
  %cmp305 = icmp slt i32 %215, %217, !dbg !11371
  br i1 %cmp305, label %for.body307, label %for.end329, !dbg !11372

for.body307:                                      ; preds = %for.cond304
  call void @llvm.dbg.declare(metadata i8** %spec308, metadata !11373, metadata !1898), !dbg !11375
  %218 = load i32, i32* %i302, align 4, !dbg !11376
  %idxprom309 = sext i32 %218 to i64, !dbg !11378
  %219 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11378
  %rc_overrides = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %219, i32 0, i32 75, !dbg !11379
  %220 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %rc_overrides, align 8, !dbg !11379
  %arrayidx310 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %220, i64 %idxprom309, !dbg !11378
  %specifier311 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx310, i32 0, i32 0, !dbg !11380
  %221 = load i8*, i8** %specifier311, align 8, !dbg !11380
  store i8* %221, i8** %spec308, align 8, !dbg !11381
  %222 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !11382
  %223 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !11383
  %224 = load i8*, i8** %spec308, align 8, !dbg !11384
  %call312 = call i32 @check_stream_specifier(%struct.AVFormatContext* %222, %struct.AVStream* %223, i8* %224), !dbg !11385
  store i32 %call312, i32* %ret303, align 4, !dbg !11386
  %cmp313 = icmp sgt i32 %call312, 0, !dbg !11387
  br i1 %cmp313, label %if.then315, label %if.else321, !dbg !11388

if.then315:                                       ; preds = %for.body307
  %225 = load i32, i32* %i302, align 4, !dbg !11389
  %idxprom316 = sext i32 %225 to i64, !dbg !11392
  %226 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11392
  %rc_overrides317 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %226, i32 0, i32 75, !dbg !11393
  %227 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %rc_overrides317, align 8, !dbg !11393
  %arrayidx318 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %227, i64 %idxprom316, !dbg !11392
  %u319 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx318, i32 0, i32 1, !dbg !11394
  %str320 = bitcast %union.anon.1* %u319 to i8**, !dbg !11395
  %228 = load i8*, i8** %str320, align 8, !dbg !11395
  store i8* %228, i8** %p, align 8, !dbg !11396
  br label %if.end326, !dbg !11397

if.else321:                                       ; preds = %for.body307
  %229 = load i32, i32* %ret303, align 4, !dbg !11398
  %cmp322 = icmp slt i32 %229, 0, !dbg !11401
  br i1 %cmp322, label %if.then324, label %if.end325, !dbg !11398

if.then324:                                       ; preds = %if.else321
  call void @exit_program(i32 1) #11, !dbg !11402
  unreachable, !dbg !11402

if.end325:                                        ; preds = %if.else321
  br label %if.end326

if.end326:                                        ; preds = %if.end325, %if.then315
  br label %for.inc327, !dbg !11404

for.inc327:                                       ; preds = %if.end326
  %230 = load i32, i32* %i302, align 4, !dbg !11406
  %inc328 = add nsw i32 %230, 1, !dbg !11406
  store i32 %inc328, i32* %i302, align 4, !dbg !11406
  br label %for.cond304, !dbg !11408, !llvm.loop !11409

for.end329:                                       ; preds = %for.cond304
  store i32 0, i32* %i114, align 4, !dbg !11411
  br label %for.cond330, !dbg !11413

for.cond330:                                      ; preds = %for.inc378, %for.end329
  %231 = load i8*, i8** %p, align 8, !dbg !11414
  %tobool331 = icmp ne i8* %231, null, !dbg !11417
  br i1 %tobool331, label %for.body332, label %for.end380, !dbg !11417

for.body332:                                      ; preds = %for.cond330
  call void @llvm.dbg.declare(metadata i32* %start, metadata !11418, metadata !1898), !dbg !11420
  call void @llvm.dbg.declare(metadata i32* %end, metadata !11421, metadata !1898), !dbg !11422
  call void @llvm.dbg.declare(metadata i32* %q333, metadata !11423, metadata !1898), !dbg !11424
  call void @llvm.dbg.declare(metadata i32* %e, metadata !11425, metadata !1898), !dbg !11426
  %232 = load i8*, i8** %p, align 8, !dbg !11427
  %call334 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %232, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.527, i32 0, i32 0), i32* %start, i32* %end, i32* %q333) #12, !dbg !11428
  store i32 %call334, i32* %e, align 4, !dbg !11426
  %233 = load i32, i32* %e, align 4, !dbg !11429
  %cmp335 = icmp ne i32 %233, 3, !dbg !11431
  br i1 %cmp335, label %if.then337, label %if.end338, !dbg !11432

if.then337:                                       ; preds = %for.body332
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.528, i32 0, i32 0)), !dbg !11433
  call void @exit_program(i32 1) #11, !dbg !11435
  unreachable, !dbg !11435

if.end338:                                        ; preds = %for.body332
  %234 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11436
  %rc_override = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %234, i32 0, i32 102, !dbg !11437
  %235 = load %struct.RcOverride*, %struct.RcOverride** %rc_override, align 8, !dbg !11437
  %236 = bitcast %struct.RcOverride* %235 to i8*, !dbg !11436
  %237 = load i32, i32* %i114, align 4, !dbg !11438
  %add = add nsw i32 %237, 1, !dbg !11439
  %conv339 = sext i32 %add to i64, !dbg !11438
  %call340 = call i8* @av_realloc_array(i8* %236, i64 %conv339, i64 16), !dbg !11440
  %238 = bitcast i8* %call340 to %struct.RcOverride*, !dbg !11440
  %239 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11441
  %rc_override341 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %239, i32 0, i32 102, !dbg !11442
  store %struct.RcOverride* %238, %struct.RcOverride** %rc_override341, align 8, !dbg !11443
  %240 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11444
  %rc_override342 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %240, i32 0, i32 102, !dbg !11446
  %241 = load %struct.RcOverride*, %struct.RcOverride** %rc_override342, align 8, !dbg !11446
  %tobool343 = icmp ne %struct.RcOverride* %241, null, !dbg !11444
  br i1 %tobool343, label %if.end345, label %if.then344, !dbg !11447

if.then344:                                       ; preds = %if.end338
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.529, i32 0, i32 0)), !dbg !11448
  call void @exit_program(i32 1) #11, !dbg !11450
  unreachable, !dbg !11450

if.end345:                                        ; preds = %if.end338
  %242 = load i32, i32* %start, align 4, !dbg !11451
  %243 = load i32, i32* %i114, align 4, !dbg !11452
  %idxprom346 = sext i32 %243 to i64, !dbg !11453
  %244 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11453
  %rc_override347 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %244, i32 0, i32 102, !dbg !11454
  %245 = load %struct.RcOverride*, %struct.RcOverride** %rc_override347, align 8, !dbg !11454
  %arrayidx348 = getelementptr inbounds %struct.RcOverride, %struct.RcOverride* %245, i64 %idxprom346, !dbg !11453
  %start_frame = getelementptr inbounds %struct.RcOverride, %struct.RcOverride* %arrayidx348, i32 0, i32 0, !dbg !11455
  store i32 %242, i32* %start_frame, align 4, !dbg !11456
  %246 = load i32, i32* %end, align 4, !dbg !11457
  %247 = load i32, i32* %i114, align 4, !dbg !11458
  %idxprom349 = sext i32 %247 to i64, !dbg !11459
  %248 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11459
  %rc_override350 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %248, i32 0, i32 102, !dbg !11460
  %249 = load %struct.RcOverride*, %struct.RcOverride** %rc_override350, align 8, !dbg !11460
  %arrayidx351 = getelementptr inbounds %struct.RcOverride, %struct.RcOverride* %249, i64 %idxprom349, !dbg !11459
  %end_frame = getelementptr inbounds %struct.RcOverride, %struct.RcOverride* %arrayidx351, i32 0, i32 1, !dbg !11461
  store i32 %246, i32* %end_frame, align 4, !dbg !11462
  %250 = load i32, i32* %q333, align 4, !dbg !11463
  %cmp352 = icmp sgt i32 %250, 0, !dbg !11465
  br i1 %cmp352, label %if.then354, label %if.else361, !dbg !11466

if.then354:                                       ; preds = %if.end345
  %251 = load i32, i32* %q333, align 4, !dbg !11467
  %252 = load i32, i32* %i114, align 4, !dbg !11469
  %idxprom355 = sext i32 %252 to i64, !dbg !11470
  %253 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11470
  %rc_override356 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %253, i32 0, i32 102, !dbg !11471
  %254 = load %struct.RcOverride*, %struct.RcOverride** %rc_override356, align 8, !dbg !11471
  %arrayidx357 = getelementptr inbounds %struct.RcOverride, %struct.RcOverride* %254, i64 %idxprom355, !dbg !11470
  %qscale = getelementptr inbounds %struct.RcOverride, %struct.RcOverride* %arrayidx357, i32 0, i32 2, !dbg !11472
  store i32 %251, i32* %qscale, align 4, !dbg !11473
  %255 = load i32, i32* %i114, align 4, !dbg !11474
  %idxprom358 = sext i32 %255 to i64, !dbg !11475
  %256 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11475
  %rc_override359 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %256, i32 0, i32 102, !dbg !11476
  %257 = load %struct.RcOverride*, %struct.RcOverride** %rc_override359, align 8, !dbg !11476
  %arrayidx360 = getelementptr inbounds %struct.RcOverride, %struct.RcOverride* %257, i64 %idxprom358, !dbg !11475
  %quality_factor = getelementptr inbounds %struct.RcOverride, %struct.RcOverride* %arrayidx360, i32 0, i32 3, !dbg !11477
  store float 1.000000e+00, float* %quality_factor, align 4, !dbg !11478
  br label %if.end372, !dbg !11479

if.else361:                                       ; preds = %if.end345
  %258 = load i32, i32* %i114, align 4, !dbg !11480
  %idxprom362 = sext i32 %258 to i64, !dbg !11482
  %259 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11482
  %rc_override363 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %259, i32 0, i32 102, !dbg !11483
  %260 = load %struct.RcOverride*, %struct.RcOverride** %rc_override363, align 8, !dbg !11483
  %arrayidx364 = getelementptr inbounds %struct.RcOverride, %struct.RcOverride* %260, i64 %idxprom362, !dbg !11482
  %qscale365 = getelementptr inbounds %struct.RcOverride, %struct.RcOverride* %arrayidx364, i32 0, i32 2, !dbg !11484
  store i32 0, i32* %qscale365, align 4, !dbg !11485
  %261 = load i32, i32* %q333, align 4, !dbg !11486
  %sub = sub nsw i32 0, %261, !dbg !11487
  %conv366 = sitofp i32 %sub to double, !dbg !11487
  %div = fdiv double %conv366, 1.000000e+02, !dbg !11488
  %conv367 = fptrunc double %div to float, !dbg !11487
  %262 = load i32, i32* %i114, align 4, !dbg !11489
  %idxprom368 = sext i32 %262 to i64, !dbg !11490
  %263 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11490
  %rc_override369 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %263, i32 0, i32 102, !dbg !11491
  %264 = load %struct.RcOverride*, %struct.RcOverride** %rc_override369, align 8, !dbg !11491
  %arrayidx370 = getelementptr inbounds %struct.RcOverride, %struct.RcOverride* %264, i64 %idxprom368, !dbg !11490
  %quality_factor371 = getelementptr inbounds %struct.RcOverride, %struct.RcOverride* %arrayidx370, i32 0, i32 3, !dbg !11492
  store float %conv367, float* %quality_factor371, align 4, !dbg !11493
  br label %if.end372

if.end372:                                        ; preds = %if.else361, %if.then354
  %265 = load i8*, i8** %p, align 8, !dbg !11494
  %call373 = call i8* @strchr(i8* %265, i32 47) #10, !dbg !11495
  store i8* %call373, i8** %p, align 8, !dbg !11496
  %266 = load i8*, i8** %p, align 8, !dbg !11497
  %tobool374 = icmp ne i8* %266, null, !dbg !11497
  br i1 %tobool374, label %if.then375, label %if.end377, !dbg !11499

if.then375:                                       ; preds = %if.end372
  %267 = load i8*, i8** %p, align 8, !dbg !11500
  %incdec.ptr376 = getelementptr inbounds i8, i8* %267, i32 1, !dbg !11500
  store i8* %incdec.ptr376, i8** %p, align 8, !dbg !11500
  br label %if.end377, !dbg !11502

if.end377:                                        ; preds = %if.then375, %if.end372
  br label %for.inc378, !dbg !11503

for.inc378:                                       ; preds = %if.end377
  %268 = load i32, i32* %i114, align 4, !dbg !11504
  %inc379 = add nsw i32 %268, 1, !dbg !11504
  store i32 %inc379, i32* %i114, align 4, !dbg !11504
  br label %for.cond330, !dbg !11506, !llvm.loop !11507

for.end380:                                       ; preds = %for.cond330
  %269 = load i32, i32* %i114, align 4, !dbg !11509
  %270 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11510
  %rc_override_count = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %270, i32 0, i32 101, !dbg !11511
  store i32 %269, i32* %rc_override_count, align 4, !dbg !11512
  %271 = load i32, i32* @do_psnr, align 4, !dbg !11513
  %tobool381 = icmp ne i32 %271, 0, !dbg !11513
  br i1 %tobool381, label %if.then382, label %if.end383, !dbg !11515

if.then382:                                       ; preds = %for.end380
  %272 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11516
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %272, i32 0, i32 13, !dbg !11517
  %273 = load i32, i32* %flags, align 4, !dbg !11518
  %or = or i32 %273, 32768, !dbg !11518
  store i32 %or, i32* %flags, align 4, !dbg !11518
  br label %if.end383, !dbg !11516

if.end383:                                        ; preds = %if.then382, %for.end380
  call void @llvm.dbg.declare(metadata i32* %i384, metadata !11519, metadata !1898), !dbg !11521
  call void @llvm.dbg.declare(metadata i32* %ret385, metadata !11522, metadata !1898), !dbg !11523
  store i32 0, i32* %i384, align 4, !dbg !11524
  br label %for.cond386, !dbg !11526

for.cond386:                                      ; preds = %for.inc409, %if.end383
  %274 = load i32, i32* %i384, align 4, !dbg !11527
  %275 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11530
  %nb_pass = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %275, i32 0, i32 104, !dbg !11531
  %276 = load i32, i32* %nb_pass, align 8, !dbg !11531
  %cmp387 = icmp slt i32 %274, %276, !dbg !11532
  br i1 %cmp387, label %for.body389, label %for.end411, !dbg !11533

for.body389:                                      ; preds = %for.cond386
  call void @llvm.dbg.declare(metadata i8** %spec390, metadata !11534, metadata !1898), !dbg !11536
  %277 = load i32, i32* %i384, align 4, !dbg !11537
  %idxprom391 = sext i32 %277 to i64, !dbg !11539
  %278 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11539
  %pass = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %278, i32 0, i32 103, !dbg !11540
  %279 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %pass, align 8, !dbg !11540
  %arrayidx392 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %279, i64 %idxprom391, !dbg !11539
  %specifier393 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx392, i32 0, i32 0, !dbg !11541
  %280 = load i8*, i8** %specifier393, align 8, !dbg !11541
  store i8* %280, i8** %spec390, align 8, !dbg !11542
  %281 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !11543
  %282 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !11544
  %283 = load i8*, i8** %spec390, align 8, !dbg !11545
  %call394 = call i32 @check_stream_specifier(%struct.AVFormatContext* %281, %struct.AVStream* %282, i8* %283), !dbg !11546
  store i32 %call394, i32* %ret385, align 4, !dbg !11547
  %cmp395 = icmp sgt i32 %call394, 0, !dbg !11548
  br i1 %cmp395, label %if.then397, label %if.else403, !dbg !11549

if.then397:                                       ; preds = %for.body389
  %284 = load i32, i32* %i384, align 4, !dbg !11550
  %idxprom398 = sext i32 %284 to i64, !dbg !11553
  %285 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11553
  %pass399 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %285, i32 0, i32 103, !dbg !11554
  %286 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %pass399, align 8, !dbg !11554
  %arrayidx400 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %286, i64 %idxprom398, !dbg !11553
  %u401 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx400, i32 0, i32 1, !dbg !11555
  %i402 = bitcast %union.anon.1* %u401 to i32*, !dbg !11556
  %287 = load i32, i32* %i402, align 8, !dbg !11556
  store i32 %287, i32* %do_pass, align 4, !dbg !11557
  br label %if.end408, !dbg !11558

if.else403:                                       ; preds = %for.body389
  %288 = load i32, i32* %ret385, align 4, !dbg !11559
  %cmp404 = icmp slt i32 %288, 0, !dbg !11562
  br i1 %cmp404, label %if.then406, label %if.end407, !dbg !11559

if.then406:                                       ; preds = %if.else403
  call void @exit_program(i32 1) #11, !dbg !11563
  unreachable, !dbg !11563

if.end407:                                        ; preds = %if.else403
  br label %if.end408

if.end408:                                        ; preds = %if.end407, %if.then397
  br label %for.inc409, !dbg !11565

for.inc409:                                       ; preds = %if.end408
  %289 = load i32, i32* %i384, align 4, !dbg !11567
  %inc410 = add nsw i32 %289, 1, !dbg !11567
  store i32 %inc410, i32* %i384, align 4, !dbg !11567
  br label %for.cond386, !dbg !11569, !llvm.loop !11570

for.end411:                                       ; preds = %for.cond386
  %290 = load i32, i32* %do_pass, align 4, !dbg !11572
  %tobool412 = icmp ne i32 %290, 0, !dbg !11572
  br i1 %tobool412, label %if.then413, label %if.end428, !dbg !11574

if.then413:                                       ; preds = %for.end411
  %291 = load i32, i32* %do_pass, align 4, !dbg !11575
  %and = and i32 %291, 1, !dbg !11578
  %tobool414 = icmp ne i32 %and, 0, !dbg !11578
  br i1 %tobool414, label %if.then415, label %if.end419, !dbg !11579

if.then415:                                       ; preds = %if.then413
  %292 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11580
  %flags416 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %292, i32 0, i32 13, !dbg !11582
  %293 = load i32, i32* %flags416, align 4, !dbg !11583
  %or417 = or i32 %293, 512, !dbg !11583
  store i32 %or417, i32* %flags416, align 4, !dbg !11583
  %294 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11584
  %encoder_opts = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %294, i32 0, i32 45, !dbg !11585
  %call418 = call i32 @av_dict_set(%struct.AVDictionary** %encoder_opts, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.530, i32 0, i32 0), i32 32), !dbg !11586
  br label %if.end419, !dbg !11587

if.end419:                                        ; preds = %if.then415, %if.then413
  %295 = load i32, i32* %do_pass, align 4, !dbg !11588
  %and420 = and i32 %295, 2, !dbg !11590
  %tobool421 = icmp ne i32 %and420, 0, !dbg !11590
  br i1 %tobool421, label %if.then422, label %if.end427, !dbg !11591

if.then422:                                       ; preds = %if.end419
  %296 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11592
  %flags423 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %296, i32 0, i32 13, !dbg !11594
  %297 = load i32, i32* %flags423, align 4, !dbg !11595
  %or424 = or i32 %297, 1024, !dbg !11595
  store i32 %or424, i32* %flags423, align 4, !dbg !11595
  %298 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11596
  %encoder_opts425 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %298, i32 0, i32 45, !dbg !11597
  %call426 = call i32 @av_dict_set(%struct.AVDictionary** %encoder_opts425, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.531, i32 0, i32 0), i32 32), !dbg !11598
  br label %if.end427, !dbg !11599

if.end427:                                        ; preds = %if.then422, %if.end419
  br label %if.end428, !dbg !11600

if.end428:                                        ; preds = %if.end427, %for.end411
  call void @llvm.dbg.declare(metadata i32* %i429, metadata !11601, metadata !1898), !dbg !11603
  call void @llvm.dbg.declare(metadata i32* %ret430, metadata !11604, metadata !1898), !dbg !11605
  store i32 0, i32* %i429, align 4, !dbg !11606
  br label %for.cond431, !dbg !11608

for.cond431:                                      ; preds = %for.inc454, %if.end428
  %299 = load i32, i32* %i429, align 4, !dbg !11609
  %300 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11612
  %nb_passlogfiles = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %300, i32 0, i32 106, !dbg !11613
  %301 = load i32, i32* %nb_passlogfiles, align 8, !dbg !11613
  %cmp432 = icmp slt i32 %299, %301, !dbg !11614
  br i1 %cmp432, label %for.body434, label %for.end456, !dbg !11615

for.body434:                                      ; preds = %for.cond431
  call void @llvm.dbg.declare(metadata i8** %spec435, metadata !11616, metadata !1898), !dbg !11618
  %302 = load i32, i32* %i429, align 4, !dbg !11619
  %idxprom436 = sext i32 %302 to i64, !dbg !11621
  %303 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11621
  %passlogfiles = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %303, i32 0, i32 105, !dbg !11622
  %304 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %passlogfiles, align 8, !dbg !11622
  %arrayidx437 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %304, i64 %idxprom436, !dbg !11621
  %specifier438 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx437, i32 0, i32 0, !dbg !11623
  %305 = load i8*, i8** %specifier438, align 8, !dbg !11623
  store i8* %305, i8** %spec435, align 8, !dbg !11624
  %306 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !11625
  %307 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !11626
  %308 = load i8*, i8** %spec435, align 8, !dbg !11627
  %call439 = call i32 @check_stream_specifier(%struct.AVFormatContext* %306, %struct.AVStream* %307, i8* %308), !dbg !11628
  store i32 %call439, i32* %ret430, align 4, !dbg !11629
  %cmp440 = icmp sgt i32 %call439, 0, !dbg !11630
  br i1 %cmp440, label %if.then442, label %if.else448, !dbg !11631

if.then442:                                       ; preds = %for.body434
  %309 = load i32, i32* %i429, align 4, !dbg !11632
  %idxprom443 = sext i32 %309 to i64, !dbg !11635
  %310 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11635
  %passlogfiles444 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %310, i32 0, i32 105, !dbg !11636
  %311 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %passlogfiles444, align 8, !dbg !11636
  %arrayidx445 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %311, i64 %idxprom443, !dbg !11635
  %u446 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx445, i32 0, i32 1, !dbg !11637
  %str447 = bitcast %union.anon.1* %u446 to i8**, !dbg !11638
  %312 = load i8*, i8** %str447, align 8, !dbg !11638
  %313 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11639
  %logfile_prefix = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %313, i32 0, i32 39, !dbg !11640
  store i8* %312, i8** %logfile_prefix, align 8, !dbg !11641
  br label %if.end453, !dbg !11639

if.else448:                                       ; preds = %for.body434
  %314 = load i32, i32* %ret430, align 4, !dbg !11642
  %cmp449 = icmp slt i32 %314, 0, !dbg !11645
  br i1 %cmp449, label %if.then451, label %if.end452, !dbg !11642

if.then451:                                       ; preds = %if.else448
  call void @exit_program(i32 1) #11, !dbg !11646
  unreachable, !dbg !11646

if.end452:                                        ; preds = %if.else448
  br label %if.end453

if.end453:                                        ; preds = %if.end452, %if.then442
  br label %for.inc454, !dbg !11648

for.inc454:                                       ; preds = %if.end453
  %315 = load i32, i32* %i429, align 4, !dbg !11650
  %inc455 = add nsw i32 %315, 1, !dbg !11650
  store i32 %inc455, i32* %i429, align 4, !dbg !11650
  br label %for.cond431, !dbg !11652, !llvm.loop !11653

for.end456:                                       ; preds = %for.cond431
  %316 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11655
  %logfile_prefix457 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %316, i32 0, i32 39, !dbg !11657
  %317 = load i8*, i8** %logfile_prefix457, align 8, !dbg !11657
  %tobool458 = icmp ne i8* %317, null, !dbg !11655
  br i1 %tobool458, label %land.lhs.true459, label %if.end465, !dbg !11658

land.lhs.true459:                                 ; preds = %for.end456
  %318 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11659
  %logfile_prefix460 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %318, i32 0, i32 39, !dbg !11660
  %319 = load i8*, i8** %logfile_prefix460, align 8, !dbg !11660
  %call461 = call noalias i8* @av_strdup(i8* %319), !dbg !11661
  %320 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11662
  %logfile_prefix462 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %320, i32 0, i32 39, !dbg !11663
  store i8* %call461, i8** %logfile_prefix462, align 8, !dbg !11664
  %tobool463 = icmp ne i8* %call461, null, !dbg !11664
  br i1 %tobool463, label %if.end465, label %if.then464, !dbg !11665

if.then464:                                       ; preds = %land.lhs.true459
  call void @exit_program(i32 1) #11, !dbg !11667
  unreachable, !dbg !11667

if.end465:                                        ; preds = %land.lhs.true459, %for.end456
  %321 = load i32, i32* %do_pass, align 4, !dbg !11668
  %tobool466 = icmp ne i32 %321, 0, !dbg !11668
  br i1 %tobool466, label %if.then467, label %if.end504, !dbg !11670

if.then467:                                       ; preds = %if.end465
  call void @llvm.dbg.declare(metadata [1024 x i8]* %logfilename, metadata !11671, metadata !1898), !dbg !11673
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %f, metadata !11674, metadata !1898), !dbg !11675
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %logfilename, i32 0, i32 0, !dbg !11676
  %322 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11677
  %logfile_prefix468 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %322, i32 0, i32 39, !dbg !11678
  %323 = load i8*, i8** %logfile_prefix468, align 8, !dbg !11678
  %tobool469 = icmp ne i8* %323, null, !dbg !11677
  br i1 %tobool469, label %cond.true, label %cond.false, !dbg !11677

cond.true:                                        ; preds = %if.then467
  %324 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11679
  %logfile_prefix470 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %324, i32 0, i32 39, !dbg !11681
  %325 = load i8*, i8** %logfile_prefix470, align 8, !dbg !11681
  br label %cond.end, !dbg !11682

cond.false:                                       ; preds = %if.then467
  br label %cond.end, !dbg !11683

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %325, %cond.true ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.533, i32 0, i32 0), %cond.false ], !dbg !11685
  %326 = load i32, i32* %i114, align 4, !dbg !11687
  %call471 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 1024, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.532, i32 0, i32 0), i8* %cond, i32 %326) #12, !dbg !11688
  %327 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11689
  %enc = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %327, i32 0, i32 16, !dbg !11691
  %328 = load %struct.AVCodec*, %struct.AVCodec** %enc, align 8, !dbg !11691
  %name = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %328, i32 0, i32 0, !dbg !11692
  %329 = load i8*, i8** %name, align 8, !dbg !11692
  %call472 = call i32 @strcmp(i8* %329, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.534, i32 0, i32 0)) #10, !dbg !11693
  %tobool473 = icmp ne i32 %call472, 0, !dbg !11693
  br i1 %tobool473, label %if.else478, label %if.then474, !dbg !11694

if.then474:                                       ; preds = %cond.end
  %330 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11695
  %encoder_opts475 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %330, i32 0, i32 45, !dbg !11697
  %arraydecay476 = getelementptr inbounds [1024 x i8], [1024 x i8]* %logfilename, i32 0, i32 0, !dbg !11698
  %call477 = call i32 @av_dict_set(%struct.AVDictionary** %encoder_opts475, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.232, i32 0, i32 0), i8* %arraydecay476, i32 16), !dbg !11699
  br label %if.end503, !dbg !11700

if.else478:                                       ; preds = %cond.end
  %331 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11701
  %flags479 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %331, i32 0, i32 13, !dbg !11704
  %332 = load i32, i32* %flags479, align 4, !dbg !11704
  %and480 = and i32 %332, 1024, !dbg !11705
  %tobool481 = icmp ne i32 %and480, 0, !dbg !11705
  br i1 %tobool481, label %if.then482, label %if.end489, !dbg !11706

if.then482:                                       ; preds = %if.else478
  call void @llvm.dbg.declare(metadata i8** %logbuffer, metadata !11707, metadata !1898), !dbg !11709
  %arraydecay483 = getelementptr inbounds [1024 x i8], [1024 x i8]* %logfilename, i32 0, i32 0, !dbg !11710
  %call484 = call i8* @read_file(i8* %arraydecay483), !dbg !11711
  store i8* %call484, i8** %logbuffer, align 8, !dbg !11709
  %333 = load i8*, i8** %logbuffer, align 8, !dbg !11712
  %tobool485 = icmp ne i8* %333, null, !dbg !11712
  br i1 %tobool485, label %if.end488, label %if.then486, !dbg !11714

if.then486:                                       ; preds = %if.then482
  %arraydecay487 = getelementptr inbounds [1024 x i8], [1024 x i8]* %logfilename, i32 0, i32 0, !dbg !11715
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.535, i32 0, i32 0), i8* %arraydecay487), !dbg !11717
  call void @exit_program(i32 1) #11, !dbg !11718
  unreachable, !dbg !11718

if.end488:                                        ; preds = %if.then482
  %334 = load i8*, i8** %logbuffer, align 8, !dbg !11719
  %335 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11720
  %stats_in = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %335, i32 0, i32 130, !dbg !11721
  store i8* %334, i8** %stats_in, align 8, !dbg !11722
  br label %if.end489, !dbg !11723

if.end489:                                        ; preds = %if.end488, %if.else478
  %336 = load %struct.AVCodecContext*, %struct.AVCodecContext** %video_enc, align 8, !dbg !11724
  %flags490 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %336, i32 0, i32 13, !dbg !11726
  %337 = load i32, i32* %flags490, align 4, !dbg !11726
  %and491 = and i32 %337, 512, !dbg !11727
  %tobool492 = icmp ne i32 %and491, 0, !dbg !11727
  br i1 %tobool492, label %if.then493, label %if.end502, !dbg !11728

if.then493:                                       ; preds = %if.end489
  %arraydecay494 = getelementptr inbounds [1024 x i8], [1024 x i8]* %logfilename, i32 0, i32 0, !dbg !11729
  %call495 = call %struct._IO_FILE* @av_fopen_utf8(i8* %arraydecay494, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.536, i32 0, i32 0)), !dbg !11731
  store %struct._IO_FILE* %call495, %struct._IO_FILE** %f, align 8, !dbg !11732
  %338 = load %struct._IO_FILE*, %struct._IO_FILE** %f, align 8, !dbg !11733
  %tobool496 = icmp ne %struct._IO_FILE* %338, null, !dbg !11733
  br i1 %tobool496, label %if.end501, label %if.then497, !dbg !11735

if.then497:                                       ; preds = %if.then493
  %arraydecay498 = getelementptr inbounds [1024 x i8], [1024 x i8]* %logfilename, i32 0, i32 0, !dbg !11736
  %call499 = call i32* @__errno_location() #1, !dbg !11738
  %339 = load i32, i32* %call499, align 4, !dbg !11739
  %call500 = call i8* @strerror(i32 %339) #12, !dbg !11740
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.537, i32 0, i32 0), i8* %arraydecay498, i8* %call500), !dbg !11742
  call void @exit_program(i32 1) #11, !dbg !11743
  unreachable, !dbg !11743

if.end501:                                        ; preds = %if.then493
  %340 = load %struct._IO_FILE*, %struct._IO_FILE** %f, align 8, !dbg !11744
  %341 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11745
  %logfile = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %341, i32 0, i32 40, !dbg !11746
  store %struct._IO_FILE* %340, %struct._IO_FILE** %logfile, align 8, !dbg !11747
  br label %if.end502, !dbg !11748

if.end502:                                        ; preds = %if.end501, %if.end489
  br label %if.end503

if.end503:                                        ; preds = %if.end502, %if.then474
  br label %if.end504, !dbg !11749

if.end504:                                        ; preds = %if.end503, %if.end465
  call void @llvm.dbg.declare(metadata i32* %i505, metadata !11750, metadata !1898), !dbg !11752
  call void @llvm.dbg.declare(metadata i32* %ret506, metadata !11753, metadata !1898), !dbg !11754
  store i32 0, i32* %i505, align 4, !dbg !11755
  br label %for.cond507, !dbg !11757

for.cond507:                                      ; preds = %for.inc530, %if.end504
  %342 = load i32, i32* %i505, align 4, !dbg !11758
  %343 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11761
  %nb_forced_key_frames = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %343, i32 0, i32 70, !dbg !11762
  %344 = load i32, i32* %nb_forced_key_frames, align 8, !dbg !11762
  %cmp508 = icmp slt i32 %342, %344, !dbg !11763
  br i1 %cmp508, label %for.body510, label %for.end532, !dbg !11764

for.body510:                                      ; preds = %for.cond507
  call void @llvm.dbg.declare(metadata i8** %spec511, metadata !11765, metadata !1898), !dbg !11767
  %345 = load i32, i32* %i505, align 4, !dbg !11768
  %idxprom512 = sext i32 %345 to i64, !dbg !11770
  %346 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11770
  %forced_key_frames = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %346, i32 0, i32 69, !dbg !11771
  %347 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %forced_key_frames, align 8, !dbg !11771
  %arrayidx513 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %347, i64 %idxprom512, !dbg !11770
  %specifier514 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx513, i32 0, i32 0, !dbg !11772
  %348 = load i8*, i8** %specifier514, align 8, !dbg !11772
  store i8* %348, i8** %spec511, align 8, !dbg !11773
  %349 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !11774
  %350 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !11775
  %351 = load i8*, i8** %spec511, align 8, !dbg !11776
  %call515 = call i32 @check_stream_specifier(%struct.AVFormatContext* %349, %struct.AVStream* %350, i8* %351), !dbg !11777
  store i32 %call515, i32* %ret506, align 4, !dbg !11778
  %cmp516 = icmp sgt i32 %call515, 0, !dbg !11779
  br i1 %cmp516, label %if.then518, label %if.else524, !dbg !11780

if.then518:                                       ; preds = %for.body510
  %352 = load i32, i32* %i505, align 4, !dbg !11781
  %idxprom519 = sext i32 %352 to i64, !dbg !11784
  %353 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11784
  %forced_key_frames520 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %353, i32 0, i32 69, !dbg !11785
  %354 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %forced_key_frames520, align 8, !dbg !11785
  %arrayidx521 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %354, i64 %idxprom519, !dbg !11784
  %u522 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx521, i32 0, i32 1, !dbg !11786
  %str523 = bitcast %union.anon.1* %u522 to i8**, !dbg !11787
  %355 = load i8*, i8** %str523, align 8, !dbg !11787
  %356 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11788
  %forced_keyframes = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %356, i32 0, i32 34, !dbg !11789
  store i8* %355, i8** %forced_keyframes, align 8, !dbg !11790
  br label %if.end529, !dbg !11788

if.else524:                                       ; preds = %for.body510
  %357 = load i32, i32* %ret506, align 4, !dbg !11791
  %cmp525 = icmp slt i32 %357, 0, !dbg !11794
  br i1 %cmp525, label %if.then527, label %if.end528, !dbg !11791

if.then527:                                       ; preds = %if.else524
  call void @exit_program(i32 1) #11, !dbg !11795
  unreachable, !dbg !11795

if.end528:                                        ; preds = %if.else524
  br label %if.end529

if.end529:                                        ; preds = %if.end528, %if.then518
  br label %for.inc530, !dbg !11797

for.inc530:                                       ; preds = %if.end529
  %358 = load i32, i32* %i505, align 4, !dbg !11799
  %inc531 = add nsw i32 %358, 1, !dbg !11799
  store i32 %inc531, i32* %i505, align 4, !dbg !11799
  br label %for.cond507, !dbg !11801, !llvm.loop !11802

for.end532:                                       ; preds = %for.cond507
  %359 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11804
  %forced_keyframes533 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %359, i32 0, i32 34, !dbg !11806
  %360 = load i8*, i8** %forced_keyframes533, align 8, !dbg !11806
  %tobool534 = icmp ne i8* %360, null, !dbg !11804
  br i1 %tobool534, label %if.then535, label %if.end539, !dbg !11807

if.then535:                                       ; preds = %for.end532
  %361 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11808
  %forced_keyframes536 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %361, i32 0, i32 34, !dbg !11809
  %362 = load i8*, i8** %forced_keyframes536, align 8, !dbg !11809
  %call537 = call noalias i8* @av_strdup(i8* %362), !dbg !11810
  %363 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11811
  %forced_keyframes538 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %363, i32 0, i32 34, !dbg !11812
  store i8* %call537, i8** %forced_keyframes538, align 8, !dbg !11813
  br label %if.end539, !dbg !11811

if.end539:                                        ; preds = %if.then535, %for.end532
  call void @llvm.dbg.declare(metadata i32* %i540, metadata !11814, metadata !1898), !dbg !11816
  call void @llvm.dbg.declare(metadata i32* %ret541, metadata !11817, metadata !1898), !dbg !11818
  store i32 0, i32* %i540, align 4, !dbg !11819
  br label %for.cond542, !dbg !11821

for.cond542:                                      ; preds = %for.inc566, %if.end539
  %364 = load i32, i32* %i540, align 4, !dbg !11822
  %365 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11825
  %nb_force_fps = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %365, i32 0, i32 72, !dbg !11826
  %366 = load i32, i32* %nb_force_fps, align 8, !dbg !11826
  %cmp543 = icmp slt i32 %364, %366, !dbg !11827
  br i1 %cmp543, label %for.body545, label %for.end568, !dbg !11828

for.body545:                                      ; preds = %for.cond542
  call void @llvm.dbg.declare(metadata i8** %spec546, metadata !11829, metadata !1898), !dbg !11831
  %367 = load i32, i32* %i540, align 4, !dbg !11832
  %idxprom547 = sext i32 %367 to i64, !dbg !11834
  %368 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11834
  %force_fps = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %368, i32 0, i32 71, !dbg !11835
  %369 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %force_fps, align 8, !dbg !11835
  %arrayidx548 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %369, i64 %idxprom547, !dbg !11834
  %specifier549 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx548, i32 0, i32 0, !dbg !11836
  %370 = load i8*, i8** %specifier549, align 8, !dbg !11836
  store i8* %370, i8** %spec546, align 8, !dbg !11837
  %371 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !11838
  %372 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !11839
  %373 = load i8*, i8** %spec546, align 8, !dbg !11840
  %call550 = call i32 @check_stream_specifier(%struct.AVFormatContext* %371, %struct.AVStream* %372, i8* %373), !dbg !11841
  store i32 %call550, i32* %ret541, align 4, !dbg !11842
  %cmp551 = icmp sgt i32 %call550, 0, !dbg !11843
  br i1 %cmp551, label %if.then553, label %if.else560, !dbg !11844

if.then553:                                       ; preds = %for.body545
  %374 = load i32, i32* %i540, align 4, !dbg !11845
  %idxprom554 = sext i32 %374 to i64, !dbg !11848
  %375 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11848
  %force_fps555 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %375, i32 0, i32 71, !dbg !11849
  %376 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %force_fps555, align 8, !dbg !11849
  %arrayidx556 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %376, i64 %idxprom554, !dbg !11848
  %u557 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx556, i32 0, i32 1, !dbg !11850
  %i558 = bitcast %union.anon.1* %u557 to i32*, !dbg !11851
  %377 = load i32, i32* %i558, align 8, !dbg !11851
  %378 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11852
  %force_fps559 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %378, i32 0, i32 25, !dbg !11853
  store i32 %377, i32* %force_fps559, align 4, !dbg !11854
  br label %if.end565, !dbg !11852

if.else560:                                       ; preds = %for.body545
  %379 = load i32, i32* %ret541, align 4, !dbg !11855
  %cmp561 = icmp slt i32 %379, 0, !dbg !11858
  br i1 %cmp561, label %if.then563, label %if.end564, !dbg !11855

if.then563:                                       ; preds = %if.else560
  call void @exit_program(i32 1) #11, !dbg !11859
  unreachable, !dbg !11859

if.end564:                                        ; preds = %if.else560
  br label %if.end565

if.end565:                                        ; preds = %if.end564, %if.then553
  br label %for.inc566, !dbg !11861

for.inc566:                                       ; preds = %if.end565
  %380 = load i32, i32* %i540, align 4, !dbg !11863
  %inc567 = add nsw i32 %380, 1, !dbg !11863
  store i32 %inc567, i32* %i540, align 4, !dbg !11863
  br label %for.cond542, !dbg !11865, !llvm.loop !11866

for.end568:                                       ; preds = %for.cond542
  %381 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11868
  %top_field_first = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %381, i32 0, i32 26, !dbg !11869
  store i32 -1, i32* %top_field_first, align 8, !dbg !11870
  call void @llvm.dbg.declare(metadata i32* %i569, metadata !11871, metadata !1898), !dbg !11873
  call void @llvm.dbg.declare(metadata i32* %ret570, metadata !11874, metadata !1898), !dbg !11875
  store i32 0, i32* %i569, align 4, !dbg !11876
  br label %for.cond571, !dbg !11878

for.cond571:                                      ; preds = %for.inc596, %for.end568
  %382 = load i32, i32* %i569, align 4, !dbg !11879
  %383 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11882
  %nb_top_field_first = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %383, i32 0, i32 84, !dbg !11883
  %384 = load i32, i32* %nb_top_field_first, align 8, !dbg !11883
  %cmp572 = icmp slt i32 %382, %384, !dbg !11884
  br i1 %cmp572, label %for.body574, label %for.end598, !dbg !11885

for.body574:                                      ; preds = %for.cond571
  call void @llvm.dbg.declare(metadata i8** %spec575, metadata !11886, metadata !1898), !dbg !11888
  %385 = load i32, i32* %i569, align 4, !dbg !11889
  %idxprom576 = sext i32 %385 to i64, !dbg !11891
  %386 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11891
  %top_field_first577 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %386, i32 0, i32 83, !dbg !11892
  %387 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %top_field_first577, align 8, !dbg !11892
  %arrayidx578 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %387, i64 %idxprom576, !dbg !11891
  %specifier579 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx578, i32 0, i32 0, !dbg !11893
  %388 = load i8*, i8** %specifier579, align 8, !dbg !11893
  store i8* %388, i8** %spec575, align 8, !dbg !11894
  %389 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !11895
  %390 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !11896
  %391 = load i8*, i8** %spec575, align 8, !dbg !11897
  %call580 = call i32 @check_stream_specifier(%struct.AVFormatContext* %389, %struct.AVStream* %390, i8* %391), !dbg !11898
  store i32 %call580, i32* %ret570, align 4, !dbg !11899
  %cmp581 = icmp sgt i32 %call580, 0, !dbg !11900
  br i1 %cmp581, label %if.then583, label %if.else590, !dbg !11901

if.then583:                                       ; preds = %for.body574
  %392 = load i32, i32* %i569, align 4, !dbg !11902
  %idxprom584 = sext i32 %392 to i64, !dbg !11905
  %393 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11905
  %top_field_first585 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %393, i32 0, i32 83, !dbg !11906
  %394 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %top_field_first585, align 8, !dbg !11906
  %arrayidx586 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %394, i64 %idxprom584, !dbg !11905
  %u587 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx586, i32 0, i32 1, !dbg !11907
  %i588 = bitcast %union.anon.1* %u587 to i32*, !dbg !11908
  %395 = load i32, i32* %i588, align 8, !dbg !11908
  %396 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11909
  %top_field_first589 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %396, i32 0, i32 26, !dbg !11910
  store i32 %395, i32* %top_field_first589, align 8, !dbg !11911
  br label %if.end595, !dbg !11909

if.else590:                                       ; preds = %for.body574
  %397 = load i32, i32* %ret570, align 4, !dbg !11912
  %cmp591 = icmp slt i32 %397, 0, !dbg !11915
  br i1 %cmp591, label %if.then593, label %if.end594, !dbg !11912

if.then593:                                       ; preds = %if.else590
  call void @exit_program(i32 1) #11, !dbg !11916
  unreachable, !dbg !11916

if.end594:                                        ; preds = %if.else590
  br label %if.end595

if.end595:                                        ; preds = %if.end594, %if.then583
  br label %for.inc596, !dbg !11918

for.inc596:                                       ; preds = %if.end595
  %398 = load i32, i32* %i569, align 4, !dbg !11920
  %inc597 = add nsw i32 %398, 1, !dbg !11920
  store i32 %inc597, i32* %i569, align 4, !dbg !11920
  br label %for.cond571, !dbg !11922, !llvm.loop !11923

for.end598:                                       ; preds = %for.cond571
  %399 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11925
  %400 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !11926
  %401 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11927
  %call599 = call i8* @get_ost_filters(%struct.OptionsContext* %399, %struct.AVFormatContext* %400, %struct.OutputStream* %401), !dbg !11928
  %402 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11929
  %avfilter = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %402, i32 0, i32 42, !dbg !11930
  store i8* %call599, i8** %avfilter, align 8, !dbg !11931
  %403 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11932
  %avfilter600 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %403, i32 0, i32 42, !dbg !11934
  %404 = load i8*, i8** %avfilter600, align 8, !dbg !11934
  %tobool601 = icmp ne i8* %404, null, !dbg !11932
  br i1 %tobool601, label %if.end603, label %if.then602, !dbg !11935

if.then602:                                       ; preds = %for.end598
  call void @exit_program(i32 1) #11, !dbg !11936
  unreachable, !dbg !11936

if.end603:                                        ; preds = %for.end598
  br label %if.end634, !dbg !11937

if.else604:                                       ; preds = %if.end111
  call void @llvm.dbg.declare(metadata i32* %i605, metadata !11938, metadata !1898), !dbg !11941
  call void @llvm.dbg.declare(metadata i32* %ret606, metadata !11942, metadata !1898), !dbg !11943
  store i32 0, i32* %i605, align 4, !dbg !11944
  br label %for.cond607, !dbg !11946

for.cond607:                                      ; preds = %for.inc631, %if.else604
  %405 = load i32, i32* %i605, align 4, !dbg !11947
  %406 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11950
  %nb_copy_initial_nonkeyframes = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %406, i32 0, i32 90, !dbg !11951
  %407 = load i32, i32* %nb_copy_initial_nonkeyframes, align 8, !dbg !11951
  %cmp608 = icmp slt i32 %405, %407, !dbg !11952
  br i1 %cmp608, label %for.body610, label %for.end633, !dbg !11953

for.body610:                                      ; preds = %for.cond607
  call void @llvm.dbg.declare(metadata i8** %spec611, metadata !11954, metadata !1898), !dbg !11956
  %408 = load i32, i32* %i605, align 4, !dbg !11957
  %idxprom612 = sext i32 %408 to i64, !dbg !11959
  %409 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11959
  %copy_initial_nonkeyframes = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %409, i32 0, i32 89, !dbg !11960
  %410 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %copy_initial_nonkeyframes, align 8, !dbg !11960
  %arrayidx613 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %410, i64 %idxprom612, !dbg !11959
  %specifier614 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx613, i32 0, i32 0, !dbg !11961
  %411 = load i8*, i8** %specifier614, align 8, !dbg !11961
  store i8* %411, i8** %spec611, align 8, !dbg !11962
  %412 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !11963
  %413 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !11964
  %414 = load i8*, i8** %spec611, align 8, !dbg !11965
  %call615 = call i32 @check_stream_specifier(%struct.AVFormatContext* %412, %struct.AVStream* %413, i8* %414), !dbg !11966
  store i32 %call615, i32* %ret606, align 4, !dbg !11967
  %cmp616 = icmp sgt i32 %call615, 0, !dbg !11968
  br i1 %cmp616, label %if.then618, label %if.else625, !dbg !11969

if.then618:                                       ; preds = %for.body610
  %415 = load i32, i32* %i605, align 4, !dbg !11970
  %idxprom619 = sext i32 %415 to i64, !dbg !11973
  %416 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11973
  %copy_initial_nonkeyframes620 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %416, i32 0, i32 89, !dbg !11974
  %417 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %copy_initial_nonkeyframes620, align 8, !dbg !11974
  %arrayidx621 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %417, i64 %idxprom619, !dbg !11973
  %u622 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx621, i32 0, i32 1, !dbg !11975
  %i623 = bitcast %union.anon.1* %u622 to i32*, !dbg !11976
  %418 = load i32, i32* %i623, align 8, !dbg !11976
  %419 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11977
  %copy_initial_nonkeyframes624 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %419, i32 0, i32 56, !dbg !11978
  store i32 %418, i32* %copy_initial_nonkeyframes624, align 8, !dbg !11979
  br label %if.end630, !dbg !11977

if.else625:                                       ; preds = %for.body610
  %420 = load i32, i32* %ret606, align 4, !dbg !11980
  %cmp626 = icmp slt i32 %420, 0, !dbg !11983
  br i1 %cmp626, label %if.then628, label %if.end629, !dbg !11980

if.then628:                                       ; preds = %if.else625
  call void @exit_program(i32 1) #11, !dbg !11984
  unreachable, !dbg !11984

if.end629:                                        ; preds = %if.else625
  br label %if.end630

if.end630:                                        ; preds = %if.end629, %if.then618
  br label %for.inc631, !dbg !11986

for.inc631:                                       ; preds = %if.end630
  %421 = load i32, i32* %i605, align 4, !dbg !11988
  %inc632 = add nsw i32 %421, 1, !dbg !11988
  store i32 %inc632, i32* %i605, align 4, !dbg !11988
  br label %for.cond607, !dbg !11990, !llvm.loop !11991

for.end633:                                       ; preds = %for.cond607
  br label %if.end634

if.end634:                                        ; preds = %for.end633, %if.end603
  %422 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11993
  %stream_copy635 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %422, i32 0, i32 52, !dbg !11995
  %423 = load i32, i32* %stream_copy635, align 8, !dbg !11995
  %tobool636 = icmp ne i32 %423, 0, !dbg !11993
  br i1 %tobool636, label %if.then637, label %if.end638, !dbg !11996

if.then637:                                       ; preds = %if.end634
  %424 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !11997
  %425 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !11998
  %426 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !11999
  call void @check_streamcopy_filters(%struct.OptionsContext* %424, %struct.AVFormatContext* %425, %struct.OutputStream* %426, i32 0), !dbg !12000
  br label %if.end638, !dbg !12000

if.end638:                                        ; preds = %if.then637, %if.end634
  %427 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12001
  ret %struct.OutputStream* %427, !dbg !12002
}

; Function Attrs: nounwind uwtable
define internal %struct.OutputStream* @new_audio_stream(%struct.OptionsContext* %o, %struct.AVFormatContext* %oc, i32 %source_index) #0 !dbg !12003 {
entry:
  %o.addr = alloca %struct.OptionsContext*, align 8
  %oc.addr = alloca %struct.AVFormatContext*, align 8
  %source_index.addr = alloca i32, align 4
  %n = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %ost = alloca %struct.OutputStream*, align 8
  %audio_enc = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %spec = alloca i8*, align 8
  %i10 = alloca i32, align 4
  %ret11 = alloca i32, align 4
  %spec15 = alloca i8*, align 8
  %sample_fmt = alloca i8*, align 8
  %i42 = alloca i32, align 4
  %ret43 = alloca i32, align 4
  %spec47 = alloca i8*, align 8
  %i67 = alloca i32, align 4
  %ret68 = alloca i32, align 4
  %spec72 = alloca i8*, align 8
  %i98 = alloca i32, align 4
  %ret99 = alloca i32, align 4
  %spec103 = alloca i8*, align 8
  %i123 = alloca i32, align 4
  %ret124 = alloca i32, align 4
  %spec128 = alloca i8*, align 8
  %map = alloca %struct.AudioChannelMap*, align 8
  %ist = alloca %struct.InputStream*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !12004, metadata !1898), !dbg !12005
  store %struct.AVFormatContext* %oc, %struct.AVFormatContext** %oc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc.addr, metadata !12006, metadata !1898), !dbg !12007
  store i32 %source_index, i32* %source_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_index.addr, metadata !12008, metadata !1898), !dbg !12009
  call void @llvm.dbg.declare(metadata i32* %n, metadata !12010, metadata !1898), !dbg !12011
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !12012, metadata !1898), !dbg !12013
  call void @llvm.dbg.declare(metadata %struct.OutputStream** %ost, metadata !12014, metadata !1898), !dbg !12015
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %audio_enc, metadata !12016, metadata !1898), !dbg !12017
  %0 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12018
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12019
  %2 = load i32, i32* %source_index.addr, align 4, !dbg !12020
  %call = call %struct.OutputStream* @new_output_stream(%struct.OptionsContext* %0, %struct.AVFormatContext* %1, i32 1, i32 %2), !dbg !12021
  store %struct.OutputStream* %call, %struct.OutputStream** %ost, align 8, !dbg !12022
  %3 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12023
  %st1 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %3, i32 0, i32 3, !dbg !12024
  %4 = load %struct.AVStream*, %struct.AVStream** %st1, align 8, !dbg !12024
  store %struct.AVStream* %4, %struct.AVStream** %st, align 8, !dbg !12025
  %5 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12026
  %enc_ctx = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %5, i32 0, i32 14, !dbg !12027
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx, align 8, !dbg !12027
  store %struct.AVCodecContext* %6, %struct.AVCodecContext** %audio_enc, align 8, !dbg !12028
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %audio_enc, align 8, !dbg !12029
  %codec_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 2, !dbg !12030
  store i32 1, i32* %codec_type, align 4, !dbg !12031
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12032, metadata !1898), !dbg !12034
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12035, metadata !1898), !dbg !12036
  store i32 0, i32* %i, align 4, !dbg !12037
  br label %for.cond, !dbg !12039

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !12040
  %9 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12043
  %nb_filter_scripts = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %9, i32 0, i32 96, !dbg !12044
  %10 = load i32, i32* %nb_filter_scripts, align 8, !dbg !12044
  %cmp = icmp slt i32 %8, %10, !dbg !12045
  br i1 %cmp, label %for.body, label %for.end, !dbg !12046

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %spec, metadata !12047, metadata !1898), !dbg !12049
  %11 = load i32, i32* %i, align 4, !dbg !12050
  %idxprom = sext i32 %11 to i64, !dbg !12052
  %12 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12052
  %filter_scripts = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %12, i32 0, i32 95, !dbg !12053
  %13 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %filter_scripts, align 8, !dbg !12053
  %arrayidx = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %13, i64 %idxprom, !dbg !12052
  %specifier = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx, i32 0, i32 0, !dbg !12054
  %14 = load i8*, i8** %specifier, align 8, !dbg !12054
  store i8* %14, i8** %spec, align 8, !dbg !12055
  %15 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12056
  %16 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !12057
  %17 = load i8*, i8** %spec, align 8, !dbg !12058
  %call2 = call i32 @check_stream_specifier(%struct.AVFormatContext* %15, %struct.AVStream* %16, i8* %17), !dbg !12059
  store i32 %call2, i32* %ret, align 4, !dbg !12060
  %cmp3 = icmp sgt i32 %call2, 0, !dbg !12061
  br i1 %cmp3, label %if.then, label %if.else, !dbg !12062

if.then:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !12063
  %idxprom4 = sext i32 %18 to i64, !dbg !12066
  %19 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12066
  %filter_scripts5 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %19, i32 0, i32 95, !dbg !12067
  %20 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %filter_scripts5, align 8, !dbg !12067
  %arrayidx6 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %20, i64 %idxprom4, !dbg !12066
  %u = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx6, i32 0, i32 1, !dbg !12068
  %str = bitcast %union.anon.1* %u to i8**, !dbg !12069
  %21 = load i8*, i8** %str, align 8, !dbg !12069
  %22 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12070
  %filters_script = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %22, i32 0, i32 44, !dbg !12071
  store i8* %21, i8** %filters_script, align 8, !dbg !12072
  br label %if.end9, !dbg !12070

if.else:                                          ; preds = %for.body
  %23 = load i32, i32* %ret, align 4, !dbg !12073
  %cmp7 = icmp slt i32 %23, 0, !dbg !12076
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !12073

if.then8:                                         ; preds = %if.else
  call void @exit_program(i32 1) #11, !dbg !12077
  unreachable, !dbg !12077

if.end:                                           ; preds = %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !12079

for.inc:                                          ; preds = %if.end9
  %24 = load i32, i32* %i, align 4, !dbg !12081
  %inc = add nsw i32 %24, 1, !dbg !12081
  store i32 %inc, i32* %i, align 4, !dbg !12081
  br label %for.cond, !dbg !12083, !llvm.loop !12084

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i10, metadata !12086, metadata !1898), !dbg !12088
  call void @llvm.dbg.declare(metadata i32* %ret11, metadata !12089, metadata !1898), !dbg !12090
  store i32 0, i32* %i10, align 4, !dbg !12091
  br label %for.cond12, !dbg !12093

for.cond12:                                       ; preds = %for.inc33, %for.end
  %25 = load i32, i32* %i10, align 4, !dbg !12094
  %26 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12097
  %nb_filters = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %26, i32 0, i32 94, !dbg !12098
  %27 = load i32, i32* %nb_filters, align 8, !dbg !12098
  %cmp13 = icmp slt i32 %25, %27, !dbg !12099
  br i1 %cmp13, label %for.body14, label %for.end35, !dbg !12100

for.body14:                                       ; preds = %for.cond12
  call void @llvm.dbg.declare(metadata i8** %spec15, metadata !12101, metadata !1898), !dbg !12103
  %28 = load i32, i32* %i10, align 4, !dbg !12104
  %idxprom16 = sext i32 %28 to i64, !dbg !12106
  %29 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12106
  %filters = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %29, i32 0, i32 93, !dbg !12107
  %30 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %filters, align 8, !dbg !12107
  %arrayidx17 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %30, i64 %idxprom16, !dbg !12106
  %specifier18 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx17, i32 0, i32 0, !dbg !12108
  %31 = load i8*, i8** %specifier18, align 8, !dbg !12108
  store i8* %31, i8** %spec15, align 8, !dbg !12109
  %32 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12110
  %33 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !12111
  %34 = load i8*, i8** %spec15, align 8, !dbg !12112
  %call19 = call i32 @check_stream_specifier(%struct.AVFormatContext* %32, %struct.AVStream* %33, i8* %34), !dbg !12113
  store i32 %call19, i32* %ret11, align 4, !dbg !12114
  %cmp20 = icmp sgt i32 %call19, 0, !dbg !12115
  br i1 %cmp20, label %if.then21, label %if.else28, !dbg !12116

if.then21:                                        ; preds = %for.body14
  %35 = load i32, i32* %i10, align 4, !dbg !12117
  %idxprom22 = sext i32 %35 to i64, !dbg !12120
  %36 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12120
  %filters23 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %36, i32 0, i32 93, !dbg !12121
  %37 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %filters23, align 8, !dbg !12121
  %arrayidx24 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %37, i64 %idxprom22, !dbg !12120
  %u25 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx24, i32 0, i32 1, !dbg !12122
  %str26 = bitcast %union.anon.1* %u25 to i8**, !dbg !12123
  %38 = load i8*, i8** %str26, align 8, !dbg !12123
  %39 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12124
  %filters27 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %39, i32 0, i32 43, !dbg !12125
  store i8* %38, i8** %filters27, align 8, !dbg !12126
  br label %if.end32, !dbg !12124

if.else28:                                        ; preds = %for.body14
  %40 = load i32, i32* %ret11, align 4, !dbg !12127
  %cmp29 = icmp slt i32 %40, 0, !dbg !12130
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !12127

if.then30:                                        ; preds = %if.else28
  call void @exit_program(i32 1) #11, !dbg !12131
  unreachable, !dbg !12131

if.end31:                                         ; preds = %if.else28
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then21
  br label %for.inc33, !dbg !12133

for.inc33:                                        ; preds = %if.end32
  %41 = load i32, i32* %i10, align 4, !dbg !12135
  %inc34 = add nsw i32 %41, 1, !dbg !12135
  store i32 %inc34, i32* %i10, align 4, !dbg !12135
  br label %for.cond12, !dbg !12137, !llvm.loop !12138

for.end35:                                        ; preds = %for.cond12
  %42 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12140
  %nb_filters36 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %42, i32 0, i32 94, !dbg !12142
  %43 = load i32, i32* %nb_filters36, align 8, !dbg !12142
  %cmp37 = icmp sgt i32 %43, 1, !dbg !12143
  br i1 %cmp37, label %if.then38, label %if.end40, !dbg !12144

if.then38:                                        ; preds = %for.end35
  %44 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12145
  %filters39 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %44, i32 0, i32 43, !dbg !12146
  %45 = load i8*, i8** %filters39, align 8, !dbg !12146
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.567, i32 0, i32 0), i8* %45), !dbg !12147
  br label %if.end40, !dbg !12147

if.end40:                                         ; preds = %if.then38, %for.end35
  %46 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12148
  %stream_copy = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %46, i32 0, i32 52, !dbg !12150
  %47 = load i32, i32* %stream_copy, align 8, !dbg !12150
  %tobool = icmp ne i32 %47, 0, !dbg !12148
  br i1 %tobool, label %if.end212, label %if.then41, !dbg !12151

if.then41:                                        ; preds = %if.end40
  call void @llvm.dbg.declare(metadata i8** %sample_fmt, metadata !12152, metadata !1898), !dbg !12154
  store i8* null, i8** %sample_fmt, align 8, !dbg !12154
  call void @llvm.dbg.declare(metadata i32* %i42, metadata !12155, metadata !1898), !dbg !12157
  call void @llvm.dbg.declare(metadata i32* %ret43, metadata !12158, metadata !1898), !dbg !12159
  store i32 0, i32* %i42, align 4, !dbg !12160
  br label %for.cond44, !dbg !12162

for.cond44:                                       ; preds = %for.inc64, %if.then41
  %48 = load i32, i32* %i42, align 4, !dbg !12163
  %49 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12166
  %nb_audio_channels = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %49, i32 0, i32 8, !dbg !12167
  %50 = load i32, i32* %nb_audio_channels, align 8, !dbg !12167
  %cmp45 = icmp slt i32 %48, %50, !dbg !12168
  br i1 %cmp45, label %for.body46, label %for.end66, !dbg !12169

for.body46:                                       ; preds = %for.cond44
  call void @llvm.dbg.declare(metadata i8** %spec47, metadata !12170, metadata !1898), !dbg !12172
  %51 = load i32, i32* %i42, align 4, !dbg !12173
  %idxprom48 = sext i32 %51 to i64, !dbg !12175
  %52 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12175
  %audio_channels = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %52, i32 0, i32 7, !dbg !12176
  %53 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %audio_channels, align 8, !dbg !12176
  %arrayidx49 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %53, i64 %idxprom48, !dbg !12175
  %specifier50 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx49, i32 0, i32 0, !dbg !12177
  %54 = load i8*, i8** %specifier50, align 8, !dbg !12177
  store i8* %54, i8** %spec47, align 8, !dbg !12178
  %55 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12179
  %56 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !12180
  %57 = load i8*, i8** %spec47, align 8, !dbg !12181
  %call51 = call i32 @check_stream_specifier(%struct.AVFormatContext* %55, %struct.AVStream* %56, i8* %57), !dbg !12182
  store i32 %call51, i32* %ret43, align 4, !dbg !12183
  %cmp52 = icmp sgt i32 %call51, 0, !dbg !12184
  br i1 %cmp52, label %if.then53, label %if.else59, !dbg !12185

if.then53:                                        ; preds = %for.body46
  %58 = load i32, i32* %i42, align 4, !dbg !12186
  %idxprom54 = sext i32 %58 to i64, !dbg !12189
  %59 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12189
  %audio_channels55 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %59, i32 0, i32 7, !dbg !12190
  %60 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %audio_channels55, align 8, !dbg !12190
  %arrayidx56 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %60, i64 %idxprom54, !dbg !12189
  %u57 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx56, i32 0, i32 1, !dbg !12191
  %i58 = bitcast %union.anon.1* %u57 to i32*, !dbg !12192
  %61 = load i32, i32* %i58, align 8, !dbg !12192
  %62 = load %struct.AVCodecContext*, %struct.AVCodecContext** %audio_enc, align 8, !dbg !12193
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %62, i32 0, i32 83, !dbg !12194
  store i32 %61, i32* %channels, align 4, !dbg !12195
  br label %if.end63, !dbg !12193

if.else59:                                        ; preds = %for.body46
  %63 = load i32, i32* %ret43, align 4, !dbg !12196
  %cmp60 = icmp slt i32 %63, 0, !dbg !12199
  br i1 %cmp60, label %if.then61, label %if.end62, !dbg !12196

if.then61:                                        ; preds = %if.else59
  call void @exit_program(i32 1) #11, !dbg !12200
  unreachable, !dbg !12200

if.end62:                                         ; preds = %if.else59
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then53
  br label %for.inc64, !dbg !12202

for.inc64:                                        ; preds = %if.end63
  %64 = load i32, i32* %i42, align 4, !dbg !12204
  %inc65 = add nsw i32 %64, 1, !dbg !12204
  store i32 %inc65, i32* %i42, align 4, !dbg !12204
  br label %for.cond44, !dbg !12206, !llvm.loop !12207

for.end66:                                        ; preds = %for.cond44
  call void @llvm.dbg.declare(metadata i32* %i67, metadata !12209, metadata !1898), !dbg !12211
  call void @llvm.dbg.declare(metadata i32* %ret68, metadata !12212, metadata !1898), !dbg !12213
  store i32 0, i32* %i67, align 4, !dbg !12214
  br label %for.cond69, !dbg !12216

for.cond69:                                       ; preds = %for.inc89, %for.end66
  %65 = load i32, i32* %i67, align 4, !dbg !12217
  %66 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12220
  %nb_sample_fmts = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %66, i32 0, i32 66, !dbg !12221
  %67 = load i32, i32* %nb_sample_fmts, align 8, !dbg !12221
  %cmp70 = icmp slt i32 %65, %67, !dbg !12222
  br i1 %cmp70, label %for.body71, label %for.end91, !dbg !12223

for.body71:                                       ; preds = %for.cond69
  call void @llvm.dbg.declare(metadata i8** %spec72, metadata !12224, metadata !1898), !dbg !12226
  %68 = load i32, i32* %i67, align 4, !dbg !12227
  %idxprom73 = sext i32 %68 to i64, !dbg !12229
  %69 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12229
  %sample_fmts = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %69, i32 0, i32 65, !dbg !12230
  %70 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %sample_fmts, align 8, !dbg !12230
  %arrayidx74 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %70, i64 %idxprom73, !dbg !12229
  %specifier75 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx74, i32 0, i32 0, !dbg !12231
  %71 = load i8*, i8** %specifier75, align 8, !dbg !12231
  store i8* %71, i8** %spec72, align 8, !dbg !12232
  %72 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12233
  %73 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !12234
  %74 = load i8*, i8** %spec72, align 8, !dbg !12235
  %call76 = call i32 @check_stream_specifier(%struct.AVFormatContext* %72, %struct.AVStream* %73, i8* %74), !dbg !12236
  store i32 %call76, i32* %ret68, align 4, !dbg !12237
  %cmp77 = icmp sgt i32 %call76, 0, !dbg !12238
  br i1 %cmp77, label %if.then78, label %if.else84, !dbg !12239

if.then78:                                        ; preds = %for.body71
  %75 = load i32, i32* %i67, align 4, !dbg !12240
  %idxprom79 = sext i32 %75 to i64, !dbg !12243
  %76 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12243
  %sample_fmts80 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %76, i32 0, i32 65, !dbg !12244
  %77 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %sample_fmts80, align 8, !dbg !12244
  %arrayidx81 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %77, i64 %idxprom79, !dbg !12243
  %u82 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx81, i32 0, i32 1, !dbg !12245
  %str83 = bitcast %union.anon.1* %u82 to i8**, !dbg !12246
  %78 = load i8*, i8** %str83, align 8, !dbg !12246
  store i8* %78, i8** %sample_fmt, align 8, !dbg !12247
  br label %if.end88, !dbg !12248

if.else84:                                        ; preds = %for.body71
  %79 = load i32, i32* %ret68, align 4, !dbg !12249
  %cmp85 = icmp slt i32 %79, 0, !dbg !12252
  br i1 %cmp85, label %if.then86, label %if.end87, !dbg !12249

if.then86:                                        ; preds = %if.else84
  call void @exit_program(i32 1) #11, !dbg !12253
  unreachable, !dbg !12253

if.end87:                                         ; preds = %if.else84
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then78
  br label %for.inc89, !dbg !12255

for.inc89:                                        ; preds = %if.end88
  %80 = load i32, i32* %i67, align 4, !dbg !12257
  %inc90 = add nsw i32 %80, 1, !dbg !12257
  store i32 %inc90, i32* %i67, align 4, !dbg !12257
  br label %for.cond69, !dbg !12259, !llvm.loop !12260

for.end91:                                        ; preds = %for.cond69
  %81 = load i8*, i8** %sample_fmt, align 8, !dbg !12262
  %tobool92 = icmp ne i8* %81, null, !dbg !12262
  br i1 %tobool92, label %land.lhs.true, label %if.end97, !dbg !12264

land.lhs.true:                                    ; preds = %for.end91
  %82 = load i8*, i8** %sample_fmt, align 8, !dbg !12265
  %call93 = call i32 @av_get_sample_fmt(i8* %82), !dbg !12266
  %83 = load %struct.AVCodecContext*, %struct.AVCodecContext** %audio_enc, align 8, !dbg !12267
  %sample_fmt94 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %83, i32 0, i32 84, !dbg !12268
  store i32 %call93, i32* %sample_fmt94, align 8, !dbg !12269
  %cmp95 = icmp eq i32 %call93, -1, !dbg !12270
  br i1 %cmp95, label %if.then96, label %if.end97, !dbg !12271

if.then96:                                        ; preds = %land.lhs.true
  %84 = load i8*, i8** %sample_fmt, align 8, !dbg !12273
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.568, i32 0, i32 0), i8* %84), !dbg !12275
  call void @exit_program(i32 1) #11, !dbg !12276
  unreachable, !dbg !12276

if.end97:                                         ; preds = %land.lhs.true, %for.end91
  call void @llvm.dbg.declare(metadata i32* %i98, metadata !12277, metadata !1898), !dbg !12279
  call void @llvm.dbg.declare(metadata i32* %ret99, metadata !12280, metadata !1898), !dbg !12281
  store i32 0, i32* %i98, align 4, !dbg !12282
  br label %for.cond100, !dbg !12284

for.cond100:                                      ; preds = %for.inc120, %if.end97
  %85 = load i32, i32* %i98, align 4, !dbg !12285
  %86 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12288
  %nb_audio_sample_rate = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %86, i32 0, i32 10, !dbg !12289
  %87 = load i32, i32* %nb_audio_sample_rate, align 8, !dbg !12289
  %cmp101 = icmp slt i32 %85, %87, !dbg !12290
  br i1 %cmp101, label %for.body102, label %for.end122, !dbg !12291

for.body102:                                      ; preds = %for.cond100
  call void @llvm.dbg.declare(metadata i8** %spec103, metadata !12292, metadata !1898), !dbg !12294
  %88 = load i32, i32* %i98, align 4, !dbg !12295
  %idxprom104 = sext i32 %88 to i64, !dbg !12297
  %89 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12297
  %audio_sample_rate = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %89, i32 0, i32 9, !dbg !12298
  %90 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %audio_sample_rate, align 8, !dbg !12298
  %arrayidx105 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %90, i64 %idxprom104, !dbg !12297
  %specifier106 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx105, i32 0, i32 0, !dbg !12299
  %91 = load i8*, i8** %specifier106, align 8, !dbg !12299
  store i8* %91, i8** %spec103, align 8, !dbg !12300
  %92 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12301
  %93 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !12302
  %94 = load i8*, i8** %spec103, align 8, !dbg !12303
  %call107 = call i32 @check_stream_specifier(%struct.AVFormatContext* %92, %struct.AVStream* %93, i8* %94), !dbg !12304
  store i32 %call107, i32* %ret99, align 4, !dbg !12305
  %cmp108 = icmp sgt i32 %call107, 0, !dbg !12306
  br i1 %cmp108, label %if.then109, label %if.else115, !dbg !12307

if.then109:                                       ; preds = %for.body102
  %95 = load i32, i32* %i98, align 4, !dbg !12308
  %idxprom110 = sext i32 %95 to i64, !dbg !12311
  %96 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12311
  %audio_sample_rate111 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %96, i32 0, i32 9, !dbg !12312
  %97 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %audio_sample_rate111, align 8, !dbg !12312
  %arrayidx112 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %97, i64 %idxprom110, !dbg !12311
  %u113 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx112, i32 0, i32 1, !dbg !12313
  %i114 = bitcast %union.anon.1* %u113 to i32*, !dbg !12314
  %98 = load i32, i32* %i114, align 8, !dbg !12314
  %99 = load %struct.AVCodecContext*, %struct.AVCodecContext** %audio_enc, align 8, !dbg !12315
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %99, i32 0, i32 82, !dbg !12316
  store i32 %98, i32* %sample_rate, align 8, !dbg !12317
  br label %if.end119, !dbg !12315

if.else115:                                       ; preds = %for.body102
  %100 = load i32, i32* %ret99, align 4, !dbg !12318
  %cmp116 = icmp slt i32 %100, 0, !dbg !12321
  br i1 %cmp116, label %if.then117, label %if.end118, !dbg !12318

if.then117:                                       ; preds = %if.else115
  call void @exit_program(i32 1) #11, !dbg !12322
  unreachable, !dbg !12322

if.end118:                                        ; preds = %if.else115
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.then109
  br label %for.inc120, !dbg !12324

for.inc120:                                       ; preds = %if.end119
  %101 = load i32, i32* %i98, align 4, !dbg !12326
  %inc121 = add nsw i32 %101, 1, !dbg !12326
  store i32 %inc121, i32* %i98, align 4, !dbg !12326
  br label %for.cond100, !dbg !12328, !llvm.loop !12329

for.end122:                                       ; preds = %for.cond100
  call void @llvm.dbg.declare(metadata i32* %i123, metadata !12331, metadata !1898), !dbg !12333
  call void @llvm.dbg.declare(metadata i32* %ret124, metadata !12334, metadata !1898), !dbg !12335
  store i32 0, i32* %i123, align 4, !dbg !12336
  br label %for.cond125, !dbg !12338

for.cond125:                                      ; preds = %for.inc146, %for.end122
  %102 = load i32, i32* %i123, align 4, !dbg !12339
  %103 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12342
  %nb_apad = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %103, i32 0, i32 112, !dbg !12343
  %104 = load i32, i32* %nb_apad, align 8, !dbg !12343
  %cmp126 = icmp slt i32 %102, %104, !dbg !12344
  br i1 %cmp126, label %for.body127, label %for.end148, !dbg !12345

for.body127:                                      ; preds = %for.cond125
  call void @llvm.dbg.declare(metadata i8** %spec128, metadata !12346, metadata !1898), !dbg !12348
  %105 = load i32, i32* %i123, align 4, !dbg !12349
  %idxprom129 = sext i32 %105 to i64, !dbg !12351
  %106 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12351
  %apad = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %106, i32 0, i32 111, !dbg !12352
  %107 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %apad, align 8, !dbg !12352
  %arrayidx130 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %107, i64 %idxprom129, !dbg !12351
  %specifier131 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx130, i32 0, i32 0, !dbg !12353
  %108 = load i8*, i8** %specifier131, align 8, !dbg !12353
  store i8* %108, i8** %spec128, align 8, !dbg !12354
  %109 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12355
  %110 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !12356
  %111 = load i8*, i8** %spec128, align 8, !dbg !12357
  %call132 = call i32 @check_stream_specifier(%struct.AVFormatContext* %109, %struct.AVStream* %110, i8* %111), !dbg !12358
  store i32 %call132, i32* %ret124, align 4, !dbg !12359
  %cmp133 = icmp sgt i32 %call132, 0, !dbg !12360
  br i1 %cmp133, label %if.then134, label %if.else141, !dbg !12361

if.then134:                                       ; preds = %for.body127
  %112 = load i32, i32* %i123, align 4, !dbg !12362
  %idxprom135 = sext i32 %112 to i64, !dbg !12365
  %113 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12365
  %apad136 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %113, i32 0, i32 111, !dbg !12366
  %114 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %apad136, align 8, !dbg !12366
  %arrayidx137 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %114, i64 %idxprom135, !dbg !12365
  %u138 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx137, i32 0, i32 1, !dbg !12367
  %str139 = bitcast %union.anon.1* %u138 to i8**, !dbg !12368
  %115 = load i8*, i8** %str139, align 8, !dbg !12368
  %116 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12369
  %apad140 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %116, i32 0, i32 49, !dbg !12370
  store i8* %115, i8** %apad140, align 8, !dbg !12371
  br label %if.end145, !dbg !12369

if.else141:                                       ; preds = %for.body127
  %117 = load i32, i32* %ret124, align 4, !dbg !12372
  %cmp142 = icmp slt i32 %117, 0, !dbg !12375
  br i1 %cmp142, label %if.then143, label %if.end144, !dbg !12372

if.then143:                                       ; preds = %if.else141
  call void @exit_program(i32 1) #11, !dbg !12376
  unreachable, !dbg !12376

if.end144:                                        ; preds = %if.else141
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.then134
  br label %for.inc146, !dbg !12378

for.inc146:                                       ; preds = %if.end145
  %118 = load i32, i32* %i123, align 4, !dbg !12380
  %inc147 = add nsw i32 %118, 1, !dbg !12380
  store i32 %inc147, i32* %i123, align 4, !dbg !12380
  br label %for.cond125, !dbg !12382, !llvm.loop !12383

for.end148:                                       ; preds = %for.cond125
  %119 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12385
  %apad149 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %119, i32 0, i32 49, !dbg !12386
  %120 = load i8*, i8** %apad149, align 8, !dbg !12386
  %call150 = call noalias i8* @av_strdup(i8* %120), !dbg !12387
  %121 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12388
  %apad151 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %121, i32 0, i32 49, !dbg !12389
  store i8* %call150, i8** %apad151, align 8, !dbg !12390
  %122 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12391
  %123 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12392
  %124 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12393
  %call152 = call i8* @get_ost_filters(%struct.OptionsContext* %122, %struct.AVFormatContext* %123, %struct.OutputStream* %124), !dbg !12394
  %125 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12395
  %avfilter = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %125, i32 0, i32 42, !dbg !12396
  store i8* %call152, i8** %avfilter, align 8, !dbg !12397
  %126 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12398
  %avfilter153 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %126, i32 0, i32 42, !dbg !12400
  %127 = load i8*, i8** %avfilter153, align 8, !dbg !12400
  %tobool154 = icmp ne i8* %127, null, !dbg !12398
  br i1 %tobool154, label %if.end156, label %if.then155, !dbg !12401

if.then155:                                       ; preds = %for.end148
  call void @exit_program(i32 1) #11, !dbg !12402
  unreachable, !dbg !12402

if.end156:                                        ; preds = %for.end148
  store i32 0, i32* %n, align 4, !dbg !12403
  br label %for.cond157, !dbg !12405

for.cond157:                                      ; preds = %for.inc209, %if.end156
  %128 = load i32, i32* %n, align 4, !dbg !12406
  %129 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12409
  %nb_audio_channel_maps = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %129, i32 0, i32 37, !dbg !12410
  %130 = load i32, i32* %nb_audio_channel_maps, align 8, !dbg !12410
  %cmp158 = icmp slt i32 %128, %130, !dbg !12411
  br i1 %cmp158, label %for.body159, label %for.end211, !dbg !12412

for.body159:                                      ; preds = %for.cond157
  call void @llvm.dbg.declare(metadata %struct.AudioChannelMap** %map, metadata !12413, metadata !1898), !dbg !12415
  %131 = load i32, i32* %n, align 4, !dbg !12416
  %idxprom160 = sext i32 %131 to i64, !dbg !12417
  %132 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12417
  %audio_channel_maps = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %132, i32 0, i32 36, !dbg !12418
  %133 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %audio_channel_maps, align 8, !dbg !12418
  %arrayidx161 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %133, i64 %idxprom160, !dbg !12417
  store %struct.AudioChannelMap* %arrayidx161, %struct.AudioChannelMap** %map, align 8, !dbg !12415
  %134 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %map, align 8, !dbg !12419
  %ofile_idx = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %134, i32 0, i32 3, !dbg !12421
  %135 = load i32, i32* %ofile_idx, align 4, !dbg !12421
  %cmp162 = icmp eq i32 %135, -1, !dbg !12422
  br i1 %cmp162, label %land.lhs.true165, label %lor.lhs.false, !dbg !12423

lor.lhs.false:                                    ; preds = %for.body159
  %136 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12424
  %file_index = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %136, i32 0, i32 0, !dbg !12426
  %137 = load i32, i32* %file_index, align 8, !dbg !12426
  %138 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %map, align 8, !dbg !12427
  %ofile_idx163 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %138, i32 0, i32 3, !dbg !12428
  %139 = load i32, i32* %ofile_idx163, align 4, !dbg !12428
  %cmp164 = icmp eq i32 %137, %139, !dbg !12429
  br i1 %cmp164, label %land.lhs.true165, label %if.end208, !dbg !12430

land.lhs.true165:                                 ; preds = %lor.lhs.false, %for.body159
  %140 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %map, align 8, !dbg !12431
  %ostream_idx = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %140, i32 0, i32 4, !dbg !12432
  %141 = load i32, i32* %ostream_idx, align 4, !dbg !12432
  %cmp166 = icmp eq i32 %141, -1, !dbg !12433
  br i1 %cmp166, label %if.then171, label %lor.lhs.false167, !dbg !12434

lor.lhs.false167:                                 ; preds = %land.lhs.true165
  %142 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12435
  %st168 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %142, i32 0, i32 3, !dbg !12436
  %143 = load %struct.AVStream*, %struct.AVStream** %st168, align 8, !dbg !12436
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %143, i32 0, i32 0, !dbg !12437
  %144 = load i32, i32* %index, align 8, !dbg !12437
  %145 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %map, align 8, !dbg !12438
  %ostream_idx169 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %145, i32 0, i32 4, !dbg !12439
  %146 = load i32, i32* %ostream_idx169, align 4, !dbg !12439
  %cmp170 = icmp eq i32 %144, %146, !dbg !12440
  br i1 %cmp170, label %if.then171, label %if.end208, !dbg !12441

if.then171:                                       ; preds = %lor.lhs.false167, %land.lhs.true165
  call void @llvm.dbg.declare(metadata %struct.InputStream** %ist, metadata !12443, metadata !1898), !dbg !12445
  %147 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %map, align 8, !dbg !12446
  %channel_idx = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %147, i32 0, i32 2, !dbg !12448
  %148 = load i32, i32* %channel_idx, align 4, !dbg !12448
  %cmp172 = icmp eq i32 %148, -1, !dbg !12449
  br i1 %cmp172, label %if.then173, label %if.else174, !dbg !12450

if.then173:                                       ; preds = %if.then171
  store %struct.InputStream* null, %struct.InputStream** %ist, align 8, !dbg !12451
  br label %if.end186, !dbg !12453

if.else174:                                       ; preds = %if.then171
  %149 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12454
  %source_index175 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %149, i32 0, i32 2, !dbg !12457
  %150 = load i32, i32* %source_index175, align 8, !dbg !12457
  %cmp176 = icmp slt i32 %150, 0, !dbg !12458
  br i1 %cmp176, label %if.then177, label %if.else181, !dbg !12454

if.then177:                                       ; preds = %if.else174
  %151 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12459
  %file_index178 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %151, i32 0, i32 0, !dbg !12461
  %152 = load i32, i32* %file_index178, align 8, !dbg !12461
  %153 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12462
  %st179 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %153, i32 0, i32 3, !dbg !12463
  %154 = load %struct.AVStream*, %struct.AVStream** %st179, align 8, !dbg !12463
  %index180 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %154, i32 0, i32 0, !dbg !12464
  %155 = load i32, i32* %index180, align 8, !dbg !12464
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.569, i32 0, i32 0), i32 %152, i32 %155), !dbg !12465
  br label %for.inc209, !dbg !12466

if.else181:                                       ; preds = %if.else174
  %156 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12467
  %source_index182 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %156, i32 0, i32 2, !dbg !12469
  %157 = load i32, i32* %source_index182, align 8, !dbg !12469
  %idxprom183 = sext i32 %157 to i64, !dbg !12470
  %158 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !12470
  %arrayidx184 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %158, i64 %idxprom183, !dbg !12470
  %159 = load %struct.InputStream*, %struct.InputStream** %arrayidx184, align 8, !dbg !12470
  store %struct.InputStream* %159, %struct.InputStream** %ist, align 8, !dbg !12471
  br label %if.end185

if.end185:                                        ; preds = %if.else181
  br label %if.end186

if.end186:                                        ; preds = %if.end185, %if.then173
  %160 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !12472
  %tobool187 = icmp ne %struct.InputStream* %160, null, !dbg !12472
  br i1 %tobool187, label %lor.lhs.false188, label %if.then195, !dbg !12474

lor.lhs.false188:                                 ; preds = %if.end186
  %161 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !12475
  %file_index189 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %161, i32 0, i32 0, !dbg !12477
  %162 = load i32, i32* %file_index189, align 8, !dbg !12477
  %163 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %map, align 8, !dbg !12478
  %file_idx = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %163, i32 0, i32 0, !dbg !12479
  %164 = load i32, i32* %file_idx, align 4, !dbg !12479
  %cmp190 = icmp eq i32 %162, %164, !dbg !12480
  br i1 %cmp190, label %land.lhs.true191, label %if.end207, !dbg !12481

land.lhs.true191:                                 ; preds = %lor.lhs.false188
  %165 = load %struct.InputStream*, %struct.InputStream** %ist, align 8, !dbg !12482
  %st192 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %165, i32 0, i32 1, !dbg !12484
  %166 = load %struct.AVStream*, %struct.AVStream** %st192, align 8, !dbg !12484
  %index193 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %166, i32 0, i32 0, !dbg !12485
  %167 = load i32, i32* %index193, align 8, !dbg !12485
  %168 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %map, align 8, !dbg !12486
  %stream_idx = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %168, i32 0, i32 1, !dbg !12487
  %169 = load i32, i32* %stream_idx, align 4, !dbg !12487
  %cmp194 = icmp eq i32 %167, %169, !dbg !12488
  br i1 %cmp194, label %if.then195, label %if.end207, !dbg !12489

if.then195:                                       ; preds = %land.lhs.true191, %if.end186
  %170 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12490
  %audio_channels_map = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %170, i32 0, i32 37, !dbg !12493
  %171 = bitcast i32** %audio_channels_map to i8*, !dbg !12494
  %172 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12495
  %audio_channels_mapped = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %172, i32 0, i32 38, !dbg !12496
  %173 = load i32, i32* %audio_channels_mapped, align 8, !dbg !12496
  %add = add nsw i32 %173, 1, !dbg !12497
  %conv = sext i32 %add to i64, !dbg !12495
  %call196 = call i32 @av_reallocp_array(i8* %171, i64 %conv, i64 4), !dbg !12498
  %cmp197 = icmp slt i32 %call196, 0, !dbg !12499
  br i1 %cmp197, label %if.then199, label %if.end200, !dbg !12500

if.then199:                                       ; preds = %if.then195
  call void @exit_program(i32 1) #11, !dbg !12501
  unreachable, !dbg !12501

if.end200:                                        ; preds = %if.then195
  %174 = load %struct.AudioChannelMap*, %struct.AudioChannelMap** %map, align 8, !dbg !12502
  %channel_idx201 = getelementptr inbounds %struct.AudioChannelMap, %struct.AudioChannelMap* %174, i32 0, i32 2, !dbg !12503
  %175 = load i32, i32* %channel_idx201, align 4, !dbg !12503
  %176 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12504
  %audio_channels_mapped202 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %176, i32 0, i32 38, !dbg !12505
  %177 = load i32, i32* %audio_channels_mapped202, align 8, !dbg !12506
  %inc203 = add nsw i32 %177, 1, !dbg !12506
  store i32 %inc203, i32* %audio_channels_mapped202, align 8, !dbg !12506
  %idxprom204 = sext i32 %177 to i64, !dbg !12507
  %178 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12507
  %audio_channels_map205 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %178, i32 0, i32 37, !dbg !12508
  %179 = load i32*, i32** %audio_channels_map205, align 8, !dbg !12508
  %arrayidx206 = getelementptr inbounds i32, i32* %179, i64 %idxprom204, !dbg !12507
  store i32 %175, i32* %arrayidx206, align 4, !dbg !12509
  br label %if.end207, !dbg !12510

if.end207:                                        ; preds = %if.end200, %land.lhs.true191, %lor.lhs.false188
  br label %if.end208, !dbg !12511

if.end208:                                        ; preds = %if.end207, %lor.lhs.false167, %lor.lhs.false
  br label %for.inc209, !dbg !12512

for.inc209:                                       ; preds = %if.end208, %if.then177
  %180 = load i32, i32* %n, align 4, !dbg !12513
  %inc210 = add nsw i32 %180, 1, !dbg !12513
  store i32 %inc210, i32* %n, align 4, !dbg !12513
  br label %for.cond157, !dbg !12515, !llvm.loop !12516

for.end211:                                       ; preds = %for.cond157
  br label %if.end212, !dbg !12518

if.end212:                                        ; preds = %for.end211, %if.end40
  %181 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12519
  %stream_copy213 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %181, i32 0, i32 52, !dbg !12521
  %182 = load i32, i32* %stream_copy213, align 8, !dbg !12521
  %tobool214 = icmp ne i32 %182, 0, !dbg !12519
  br i1 %tobool214, label %if.then215, label %if.end216, !dbg !12522

if.then215:                                       ; preds = %if.end212
  %183 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12523
  %184 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12524
  %185 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12525
  call void @check_streamcopy_filters(%struct.OptionsContext* %183, %struct.AVFormatContext* %184, %struct.OutputStream* %185, i32 1), !dbg !12526
  br label %if.end216, !dbg !12526

if.end216:                                        ; preds = %if.then215, %if.end212
  %186 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12527
  ret %struct.OutputStream* %186, !dbg !12528
}

declare %struct.AVCodecDescriptor* @avcodec_descriptor_get(i32) #3

; Function Attrs: nounwind uwtable
define internal %struct.OutputStream* @new_subtitle_stream(%struct.OptionsContext* %o, %struct.AVFormatContext* %oc, i32 %source_index) #0 !dbg !12529 {
entry:
  %o.addr = alloca %struct.OptionsContext*, align 8
  %oc.addr = alloca %struct.AVFormatContext*, align 8
  %source_index.addr = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %ost = alloca %struct.OutputStream*, align 8
  %subtitle_enc = alloca %struct.AVCodecContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %spec = alloca i8*, align 8
  %frame_size = alloca i8*, align 8
  %i13 = alloca i32, align 4
  %ret14 = alloca i32, align 4
  %spec18 = alloca i8*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !12530, metadata !1898), !dbg !12531
  store %struct.AVFormatContext* %oc, %struct.AVFormatContext** %oc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc.addr, metadata !12532, metadata !1898), !dbg !12533
  store i32 %source_index, i32* %source_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_index.addr, metadata !12534, metadata !1898), !dbg !12535
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !12536, metadata !1898), !dbg !12537
  call void @llvm.dbg.declare(metadata %struct.OutputStream** %ost, metadata !12538, metadata !1898), !dbg !12539
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %subtitle_enc, metadata !12540, metadata !1898), !dbg !12541
  %0 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12542
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12543
  %2 = load i32, i32* %source_index.addr, align 4, !dbg !12544
  %call = call %struct.OutputStream* @new_output_stream(%struct.OptionsContext* %0, %struct.AVFormatContext* %1, i32 3, i32 %2), !dbg !12545
  store %struct.OutputStream* %call, %struct.OutputStream** %ost, align 8, !dbg !12546
  %3 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12547
  %st1 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %3, i32 0, i32 3, !dbg !12548
  %4 = load %struct.AVStream*, %struct.AVStream** %st1, align 8, !dbg !12548
  store %struct.AVStream* %4, %struct.AVStream** %st, align 8, !dbg !12549
  %5 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12550
  %enc_ctx = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %5, i32 0, i32 14, !dbg !12551
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx, align 8, !dbg !12551
  store %struct.AVCodecContext* %6, %struct.AVCodecContext** %subtitle_enc, align 8, !dbg !12552
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %subtitle_enc, align 8, !dbg !12553
  %codec_type = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 2, !dbg !12554
  store i32 3, i32* %codec_type, align 4, !dbg !12555
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12556, metadata !1898), !dbg !12558
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12559, metadata !1898), !dbg !12560
  store i32 0, i32* %i, align 4, !dbg !12561
  br label %for.cond, !dbg !12563

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !12564
  %9 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12567
  %nb_copy_initial_nonkeyframes = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %9, i32 0, i32 90, !dbg !12568
  %10 = load i32, i32* %nb_copy_initial_nonkeyframes, align 8, !dbg !12568
  %cmp = icmp slt i32 %8, %10, !dbg !12569
  br i1 %cmp, label %for.body, label %for.end, !dbg !12570

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %spec, metadata !12571, metadata !1898), !dbg !12573
  %11 = load i32, i32* %i, align 4, !dbg !12574
  %idxprom = sext i32 %11 to i64, !dbg !12576
  %12 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12576
  %copy_initial_nonkeyframes = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %12, i32 0, i32 89, !dbg !12577
  %13 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %copy_initial_nonkeyframes, align 8, !dbg !12577
  %arrayidx = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %13, i64 %idxprom, !dbg !12576
  %specifier = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx, i32 0, i32 0, !dbg !12578
  %14 = load i8*, i8** %specifier, align 8, !dbg !12578
  store i8* %14, i8** %spec, align 8, !dbg !12579
  %15 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12580
  %16 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !12581
  %17 = load i8*, i8** %spec, align 8, !dbg !12582
  %call2 = call i32 @check_stream_specifier(%struct.AVFormatContext* %15, %struct.AVStream* %16, i8* %17), !dbg !12583
  store i32 %call2, i32* %ret, align 4, !dbg !12584
  %cmp3 = icmp sgt i32 %call2, 0, !dbg !12585
  br i1 %cmp3, label %if.then, label %if.else, !dbg !12586

if.then:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !12587
  %idxprom4 = sext i32 %18 to i64, !dbg !12590
  %19 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12590
  %copy_initial_nonkeyframes5 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %19, i32 0, i32 89, !dbg !12591
  %20 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %copy_initial_nonkeyframes5, align 8, !dbg !12591
  %arrayidx6 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %20, i64 %idxprom4, !dbg !12590
  %u = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx6, i32 0, i32 1, !dbg !12592
  %i7 = bitcast %union.anon.1* %u to i32*, !dbg !12593
  %21 = load i32, i32* %i7, align 8, !dbg !12593
  %22 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12594
  %copy_initial_nonkeyframes8 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %22, i32 0, i32 56, !dbg !12595
  store i32 %21, i32* %copy_initial_nonkeyframes8, align 8, !dbg !12596
  br label %if.end11, !dbg !12594

if.else:                                          ; preds = %for.body
  %23 = load i32, i32* %ret, align 4, !dbg !12597
  %cmp9 = icmp slt i32 %23, 0, !dbg !12600
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !12597

if.then10:                                        ; preds = %if.else
  call void @exit_program(i32 1) #11, !dbg !12601
  unreachable, !dbg !12601

if.end:                                           ; preds = %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !12603

for.inc:                                          ; preds = %if.end11
  %24 = load i32, i32* %i, align 4, !dbg !12605
  %inc = add nsw i32 %24, 1, !dbg !12605
  store i32 %inc, i32* %i, align 4, !dbg !12605
  br label %for.cond, !dbg !12607, !llvm.loop !12608

for.end:                                          ; preds = %for.cond
  %25 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12610
  %stream_copy = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %25, i32 0, i32 52, !dbg !12612
  %26 = load i32, i32* %stream_copy, align 8, !dbg !12612
  %tobool = icmp ne i32 %26, 0, !dbg !12610
  br i1 %tobool, label %if.end42, label %if.then12, !dbg !12613

if.then12:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %frame_size, metadata !12614, metadata !1898), !dbg !12616
  store i8* null, i8** %frame_size, align 8, !dbg !12616
  call void @llvm.dbg.declare(metadata i32* %i13, metadata !12617, metadata !1898), !dbg !12619
  call void @llvm.dbg.declare(metadata i32* %ret14, metadata !12620, metadata !1898), !dbg !12621
  store i32 0, i32* %i13, align 4, !dbg !12622
  br label %for.cond15, !dbg !12624

for.cond15:                                       ; preds = %for.inc34, %if.then12
  %27 = load i32, i32* %i13, align 4, !dbg !12625
  %28 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12628
  %nb_frame_sizes = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %28, i32 0, i32 14, !dbg !12629
  %29 = load i32, i32* %nb_frame_sizes, align 8, !dbg !12629
  %cmp16 = icmp slt i32 %27, %29, !dbg !12630
  br i1 %cmp16, label %for.body17, label %for.end36, !dbg !12631

for.body17:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata i8** %spec18, metadata !12632, metadata !1898), !dbg !12634
  %30 = load i32, i32* %i13, align 4, !dbg !12635
  %idxprom19 = sext i32 %30 to i64, !dbg !12637
  %31 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12637
  %frame_sizes = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %31, i32 0, i32 13, !dbg !12638
  %32 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_sizes, align 8, !dbg !12638
  %arrayidx20 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %32, i64 %idxprom19, !dbg !12637
  %specifier21 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx20, i32 0, i32 0, !dbg !12639
  %33 = load i8*, i8** %specifier21, align 8, !dbg !12639
  store i8* %33, i8** %spec18, align 8, !dbg !12640
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12641
  %35 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !12642
  %36 = load i8*, i8** %spec18, align 8, !dbg !12643
  %call22 = call i32 @check_stream_specifier(%struct.AVFormatContext* %34, %struct.AVStream* %35, i8* %36), !dbg !12644
  store i32 %call22, i32* %ret14, align 4, !dbg !12645
  %cmp23 = icmp sgt i32 %call22, 0, !dbg !12646
  br i1 %cmp23, label %if.then24, label %if.else29, !dbg !12647

if.then24:                                        ; preds = %for.body17
  %37 = load i32, i32* %i13, align 4, !dbg !12648
  %idxprom25 = sext i32 %37 to i64, !dbg !12651
  %38 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12651
  %frame_sizes26 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %38, i32 0, i32 13, !dbg !12652
  %39 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %frame_sizes26, align 8, !dbg !12652
  %arrayidx27 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %39, i64 %idxprom25, !dbg !12651
  %u28 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx27, i32 0, i32 1, !dbg !12653
  %str = bitcast %union.anon.1* %u28 to i8**, !dbg !12654
  %40 = load i8*, i8** %str, align 8, !dbg !12654
  store i8* %40, i8** %frame_size, align 8, !dbg !12655
  br label %if.end33, !dbg !12656

if.else29:                                        ; preds = %for.body17
  %41 = load i32, i32* %ret14, align 4, !dbg !12657
  %cmp30 = icmp slt i32 %41, 0, !dbg !12660
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !12657

if.then31:                                        ; preds = %if.else29
  call void @exit_program(i32 1) #11, !dbg !12661
  unreachable, !dbg !12661

if.end32:                                         ; preds = %if.else29
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then24
  br label %for.inc34, !dbg !12663

for.inc34:                                        ; preds = %if.end33
  %42 = load i32, i32* %i13, align 4, !dbg !12665
  %inc35 = add nsw i32 %42, 1, !dbg !12665
  store i32 %inc35, i32* %i13, align 4, !dbg !12665
  br label %for.cond15, !dbg !12667, !llvm.loop !12668

for.end36:                                        ; preds = %for.cond15
  %43 = load i8*, i8** %frame_size, align 8, !dbg !12670
  %tobool37 = icmp ne i8* %43, null, !dbg !12670
  br i1 %tobool37, label %land.lhs.true, label %if.end41, !dbg !12672

land.lhs.true:                                    ; preds = %for.end36
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %subtitle_enc, align 8, !dbg !12673
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %44, i32 0, i32 20, !dbg !12675
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %subtitle_enc, align 8, !dbg !12676
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %45, i32 0, i32 21, !dbg !12677
  %46 = load i8*, i8** %frame_size, align 8, !dbg !12678
  %call38 = call i32 @av_parse_video_size(i32* %width, i32* %height, i8* %46), !dbg !12679
  %cmp39 = icmp slt i32 %call38, 0, !dbg !12680
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !12681

if.then40:                                        ; preds = %land.lhs.true
  %47 = load i8*, i8** %frame_size, align 8, !dbg !12682
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.523, i32 0, i32 0), i8* %47), !dbg !12684
  call void @exit_program(i32 1) #11, !dbg !12685
  unreachable, !dbg !12685

if.end41:                                         ; preds = %land.lhs.true, %for.end36
  br label %if.end42, !dbg !12686

if.end42:                                         ; preds = %if.end41, %for.end
  %48 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12687
  ret %struct.OutputStream* %48, !dbg !12688
}

; Function Attrs: nounwind uwtable
define internal %struct.OutputStream* @new_data_stream(%struct.OptionsContext* %o, %struct.AVFormatContext* %oc, i32 %source_index) #0 !dbg !12689 {
entry:
  %o.addr = alloca %struct.OptionsContext*, align 8
  %oc.addr = alloca %struct.AVFormatContext*, align 8
  %source_index.addr = alloca i32, align 4
  %ost = alloca %struct.OutputStream*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !12690, metadata !1898), !dbg !12691
  store %struct.AVFormatContext* %oc, %struct.AVFormatContext** %oc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc.addr, metadata !12692, metadata !1898), !dbg !12693
  store i32 %source_index, i32* %source_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_index.addr, metadata !12694, metadata !1898), !dbg !12695
  call void @llvm.dbg.declare(metadata %struct.OutputStream** %ost, metadata !12696, metadata !1898), !dbg !12697
  %0 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12698
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12699
  %2 = load i32, i32* %source_index.addr, align 4, !dbg !12700
  %call = call %struct.OutputStream* @new_output_stream(%struct.OptionsContext* %0, %struct.AVFormatContext* %1, i32 2, i32 %2), !dbg !12701
  store %struct.OutputStream* %call, %struct.OutputStream** %ost, align 8, !dbg !12702
  %3 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12703
  %stream_copy = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %3, i32 0, i32 52, !dbg !12705
  %4 = load i32, i32* %stream_copy, align 8, !dbg !12705
  %tobool = icmp ne i32 %4, 0, !dbg !12703
  br i1 %tobool, label %if.end, label %if.then, !dbg !12706

if.then:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.570, i32 0, i32 0)), !dbg !12707
  call void @exit_program(i32 1) #11, !dbg !12709
  unreachable, !dbg !12709

if.end:                                           ; preds = %entry
  %5 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12710
  ret %struct.OutputStream* %5, !dbg !12711
}

; Function Attrs: nounwind uwtable
define internal %struct.OutputStream* @new_attachment_stream(%struct.OptionsContext* %o, %struct.AVFormatContext* %oc, i32 %source_index) #0 !dbg !12712 {
entry:
  %o.addr = alloca %struct.OptionsContext*, align 8
  %oc.addr = alloca %struct.AVFormatContext*, align 8
  %source_index.addr = alloca i32, align 4
  %ost = alloca %struct.OutputStream*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !12713, metadata !1898), !dbg !12714
  store %struct.AVFormatContext* %oc, %struct.AVFormatContext** %oc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc.addr, metadata !12715, metadata !1898), !dbg !12716
  store i32 %source_index, i32* %source_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_index.addr, metadata !12717, metadata !1898), !dbg !12718
  call void @llvm.dbg.declare(metadata %struct.OutputStream** %ost, metadata !12719, metadata !1898), !dbg !12720
  %0 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12721
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12722
  %2 = load i32, i32* %source_index.addr, align 4, !dbg !12723
  %call = call %struct.OutputStream* @new_output_stream(%struct.OptionsContext* %0, %struct.AVFormatContext* %1, i32 4, i32 %2), !dbg !12724
  store %struct.OutputStream* %call, %struct.OutputStream** %ost, align 8, !dbg !12720
  %3 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12725
  %stream_copy = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %3, i32 0, i32 52, !dbg !12726
  store i32 1, i32* %stream_copy, align 8, !dbg !12727
  %4 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12728
  %finished = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %4, i32 0, i32 50, !dbg !12729
  store i32 1, i32* %finished, align 8, !dbg !12730
  %5 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12731
  ret %struct.OutputStream* %5, !dbg !12732
}

; Function Attrs: nounwind uwtable
define internal %struct.OutputStream* @new_unknown_stream(%struct.OptionsContext* %o, %struct.AVFormatContext* %oc, i32 %source_index) #0 !dbg !12733 {
entry:
  %o.addr = alloca %struct.OptionsContext*, align 8
  %oc.addr = alloca %struct.AVFormatContext*, align 8
  %source_index.addr = alloca i32, align 4
  %ost = alloca %struct.OutputStream*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !12734, metadata !1898), !dbg !12735
  store %struct.AVFormatContext* %oc, %struct.AVFormatContext** %oc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc.addr, metadata !12736, metadata !1898), !dbg !12737
  store i32 %source_index, i32* %source_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_index.addr, metadata !12738, metadata !1898), !dbg !12739
  call void @llvm.dbg.declare(metadata %struct.OutputStream** %ost, metadata !12740, metadata !1898), !dbg !12741
  %0 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12742
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12743
  %2 = load i32, i32* %source_index.addr, align 4, !dbg !12744
  %call = call %struct.OutputStream* @new_output_stream(%struct.OptionsContext* %0, %struct.AVFormatContext* %1, i32 -1, i32 %2), !dbg !12745
  store %struct.OutputStream* %call, %struct.OutputStream** %ost, align 8, !dbg !12746
  %3 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12747
  %stream_copy = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %3, i32 0, i32 52, !dbg !12749
  %4 = load i32, i32* %stream_copy, align 8, !dbg !12749
  %tobool = icmp ne i32 %4, 0, !dbg !12747
  br i1 %tobool, label %if.end, label %if.then, !dbg !12750

if.then:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.571, i32 0, i32 0)), !dbg !12751
  call void @exit_program(i32 1) #11, !dbg !12753
  unreachable, !dbg !12753

if.end:                                           ; preds = %entry
  %5 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !12754
  ret %struct.OutputStream* %5, !dbg !12755
}

declare i64 @avio_size(%struct.AVIOContext*) #3

declare noalias i8* @av_malloc(i64) #3

declare i32 @avio_read(%struct.AVIOContext*, i8*, i32) #3

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #2

declare i32 @avio_closep(%struct.AVIOContext**) #3

declare i32 @av_opt_set(i8*, i8*, i8*, i32) #3

declare i32 @init_simple_filtergraph(%struct.InputStream*, %struct.OutputStream*) #3

declare i8* @av_mallocz_array(i64, i64) #3

declare i64 @av_get_default_channel_layout(i32) #3

declare i32 @av_filename_number_test(i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @copy_metadata(i8* %outspec, i8* %inspec, %struct.AVFormatContext* %oc, %struct.AVFormatContext* %ic, %struct.OptionsContext* %o) #0 !dbg !12756 {
entry:
  %retval = alloca i32, align 4
  %outspec.addr = alloca i8*, align 8
  %inspec.addr = alloca i8*, align 8
  %oc.addr = alloca %struct.AVFormatContext*, align 8
  %ic.addr = alloca %struct.AVFormatContext*, align 8
  %o.addr = alloca %struct.OptionsContext*, align 8
  %meta_in = alloca %struct.AVDictionary**, align 8
  %meta_out = alloca %struct.AVDictionary**, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %type_in = alloca i8, align 1
  %type_out = alloca i8, align 1
  %istream_spec = alloca i8*, align 8
  %ostream_spec = alloca i8*, align 8
  %idx_in = alloca i32, align 4
  %idx_out = alloca i32, align 4
  store i8* %outspec, i8** %outspec.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %outspec.addr, metadata !12759, metadata !1898), !dbg !12760
  store i8* %inspec, i8** %inspec.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %inspec.addr, metadata !12761, metadata !1898), !dbg !12762
  store %struct.AVFormatContext* %oc, %struct.AVFormatContext** %oc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc.addr, metadata !12763, metadata !1898), !dbg !12764
  store %struct.AVFormatContext* %ic, %struct.AVFormatContext** %ic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %ic.addr, metadata !12765, metadata !1898), !dbg !12766
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !12767, metadata !1898), !dbg !12768
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %meta_in, metadata !12769, metadata !1898), !dbg !12770
  store %struct.AVDictionary** null, %struct.AVDictionary*** %meta_in, align 8, !dbg !12770
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %meta_out, metadata !12771, metadata !1898), !dbg !12772
  store %struct.AVDictionary** null, %struct.AVDictionary*** %meta_out, align 8, !dbg !12772
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12773, metadata !1898), !dbg !12774
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12775, metadata !1898), !dbg !12776
  store i32 0, i32* %ret, align 4, !dbg !12776
  call void @llvm.dbg.declare(metadata i8* %type_in, metadata !12777, metadata !1898), !dbg !12778
  call void @llvm.dbg.declare(metadata i8* %type_out, metadata !12779, metadata !1898), !dbg !12780
  call void @llvm.dbg.declare(metadata i8** %istream_spec, metadata !12781, metadata !1898), !dbg !12782
  store i8* null, i8** %istream_spec, align 8, !dbg !12782
  call void @llvm.dbg.declare(metadata i8** %ostream_spec, metadata !12783, metadata !1898), !dbg !12784
  store i8* null, i8** %ostream_spec, align 8, !dbg !12784
  call void @llvm.dbg.declare(metadata i32* %idx_in, metadata !12785, metadata !1898), !dbg !12786
  store i32 0, i32* %idx_in, align 4, !dbg !12786
  call void @llvm.dbg.declare(metadata i32* %idx_out, metadata !12787, metadata !1898), !dbg !12788
  store i32 0, i32* %idx_out, align 4, !dbg !12788
  %0 = load i8*, i8** %inspec.addr, align 8, !dbg !12789
  call void @parse_meta_type(i8* %0, i8* %type_in, i32* %idx_in, i8** %istream_spec), !dbg !12790
  %1 = load i8*, i8** %outspec.addr, align 8, !dbg !12791
  call void @parse_meta_type(i8* %1, i8* %type_out, i32* %idx_out, i8** %ostream_spec), !dbg !12792
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !12793
  %tobool = icmp ne %struct.AVFormatContext* %2, null, !dbg !12793
  br i1 %tobool, label %if.end18, label %if.then, !dbg !12795

if.then:                                          ; preds = %entry
  %3 = load i8, i8* %type_out, align 1, !dbg !12796
  %conv = sext i8 %3 to i32, !dbg !12796
  %cmp = icmp eq i32 %conv, 103, !dbg !12799
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !12800

lor.lhs.false:                                    ; preds = %if.then
  %4 = load i8*, i8** %outspec.addr, align 8, !dbg !12801
  %5 = load i8, i8* %4, align 1, !dbg !12803
  %tobool2 = icmp ne i8 %5, 0, !dbg !12803
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !12804

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  %6 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12805
  %metadata_global_manual = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %6, i32 0, i32 38, !dbg !12806
  store i32 1, i32* %metadata_global_manual, align 4, !dbg !12807
  br label %if.end, !dbg !12805

if.end:                                           ; preds = %if.then3, %lor.lhs.false
  %7 = load i8, i8* %type_out, align 1, !dbg !12808
  %conv4 = sext i8 %7 to i32, !dbg !12808
  %cmp5 = icmp eq i32 %conv4, 115, !dbg !12810
  br i1 %cmp5, label %if.then9, label %lor.lhs.false7, !dbg !12811

lor.lhs.false7:                                   ; preds = %if.end
  %8 = load i8*, i8** %outspec.addr, align 8, !dbg !12812
  %9 = load i8, i8* %8, align 1, !dbg !12814
  %tobool8 = icmp ne i8 %9, 0, !dbg !12814
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !12815

if.then9:                                         ; preds = %lor.lhs.false7, %if.end
  %10 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12816
  %metadata_streams_manual = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %10, i32 0, i32 39, !dbg !12817
  store i32 1, i32* %metadata_streams_manual, align 8, !dbg !12818
  br label %if.end10, !dbg !12816

if.end10:                                         ; preds = %if.then9, %lor.lhs.false7
  %11 = load i8, i8* %type_out, align 1, !dbg !12819
  %conv11 = sext i8 %11 to i32, !dbg !12819
  %cmp12 = icmp eq i32 %conv11, 99, !dbg !12821
  br i1 %cmp12, label %if.then16, label %lor.lhs.false14, !dbg !12822

lor.lhs.false14:                                  ; preds = %if.end10
  %12 = load i8*, i8** %outspec.addr, align 8, !dbg !12823
  %13 = load i8, i8* %12, align 1, !dbg !12825
  %tobool15 = icmp ne i8 %13, 0, !dbg !12825
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !12826

if.then16:                                        ; preds = %lor.lhs.false14, %if.end10
  %14 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12827
  %metadata_chapters_manual = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %14, i32 0, i32 40, !dbg !12828
  store i32 1, i32* %metadata_chapters_manual, align 4, !dbg !12829
  br label %if.end17, !dbg !12827

if.end17:                                         ; preds = %if.then16, %lor.lhs.false14
  store i32 0, i32* %retval, align 4, !dbg !12830
  br label %return, !dbg !12830

if.end18:                                         ; preds = %entry
  %15 = load i8, i8* %type_in, align 1, !dbg !12831
  %conv19 = sext i8 %15 to i32, !dbg !12831
  %cmp20 = icmp eq i32 %conv19, 103, !dbg !12833
  br i1 %cmp20, label %if.then26, label %lor.lhs.false22, !dbg !12834

lor.lhs.false22:                                  ; preds = %if.end18
  %16 = load i8, i8* %type_out, align 1, !dbg !12835
  %conv23 = sext i8 %16 to i32, !dbg !12835
  %cmp24 = icmp eq i32 %conv23, 103, !dbg !12837
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !12838

if.then26:                                        ; preds = %lor.lhs.false22, %if.end18
  %17 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12839
  %metadata_global_manual27 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %17, i32 0, i32 38, !dbg !12840
  store i32 1, i32* %metadata_global_manual27, align 4, !dbg !12841
  br label %if.end28, !dbg !12839

if.end28:                                         ; preds = %if.then26, %lor.lhs.false22
  %18 = load i8, i8* %type_in, align 1, !dbg !12842
  %conv29 = sext i8 %18 to i32, !dbg !12842
  %cmp30 = icmp eq i32 %conv29, 115, !dbg !12844
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !12845

lor.lhs.false32:                                  ; preds = %if.end28
  %19 = load i8, i8* %type_out, align 1, !dbg !12846
  %conv33 = sext i8 %19 to i32, !dbg !12846
  %cmp34 = icmp eq i32 %conv33, 115, !dbg !12848
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !12849

if.then36:                                        ; preds = %lor.lhs.false32, %if.end28
  %20 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12850
  %metadata_streams_manual37 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %20, i32 0, i32 39, !dbg !12851
  store i32 1, i32* %metadata_streams_manual37, align 8, !dbg !12852
  br label %if.end38, !dbg !12850

if.end38:                                         ; preds = %if.then36, %lor.lhs.false32
  %21 = load i8, i8* %type_in, align 1, !dbg !12853
  %conv39 = sext i8 %21 to i32, !dbg !12853
  %cmp40 = icmp eq i32 %conv39, 99, !dbg !12855
  br i1 %cmp40, label %if.then46, label %lor.lhs.false42, !dbg !12856

lor.lhs.false42:                                  ; preds = %if.end38
  %22 = load i8, i8* %type_out, align 1, !dbg !12857
  %conv43 = sext i8 %22 to i32, !dbg !12857
  %cmp44 = icmp eq i32 %conv43, 99, !dbg !12859
  br i1 %cmp44, label %if.then46, label %if.end48, !dbg !12860

if.then46:                                        ; preds = %lor.lhs.false42, %if.end38
  %23 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !12861
  %metadata_chapters_manual47 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %23, i32 0, i32 40, !dbg !12862
  store i32 1, i32* %metadata_chapters_manual47, align 4, !dbg !12863
  br label %if.end48, !dbg !12861

if.end48:                                         ; preds = %if.then46, %lor.lhs.false42
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !12864
  %tobool49 = icmp ne %struct.AVFormatContext* %24, null, !dbg !12864
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !12866

if.then50:                                        ; preds = %if.end48
  store i32 0, i32* %retval, align 4, !dbg !12867
  br label %return, !dbg !12867

if.end51:                                         ; preds = %if.end48
  %25 = load i8, i8* %type_in, align 1, !dbg !12868
  %conv52 = sext i8 %25 to i32, !dbg !12868
  switch i32 %conv52, label %sw.default [
    i32 103, label %sw.bb
    i32 99, label %sw.bb53
    i32 112, label %sw.bb62
    i32 115, label %sw.bb73
  ], !dbg !12869

sw.bb:                                            ; preds = %if.end51
  %26 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !12870
  %metadata = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %26, i32 0, i32 29, !dbg !12873
  store %struct.AVDictionary** %metadata, %struct.AVDictionary*** %meta_in, align 8, !dbg !12874
  br label %sw.epilog, !dbg !12875

sw.bb53:                                          ; preds = %if.end51
  %27 = load i32, i32* %idx_in, align 4, !dbg !12876
  %cmp54 = icmp slt i32 %27, 0, !dbg !12879
  br i1 %cmp54, label %if.then59, label %lor.lhs.false56, !dbg !12880

lor.lhs.false56:                                  ; preds = %sw.bb53
  %28 = load i32, i32* %idx_in, align 4, !dbg !12881
  %29 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !12883
  %nb_chapters = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %29, i32 0, i32 27, !dbg !12884
  %30 = load i32, i32* %nb_chapters, align 4, !dbg !12884
  %cmp57 = icmp uge i32 %28, %30, !dbg !12885
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !12886

if.then59:                                        ; preds = %lor.lhs.false56, %sw.bb53
  %31 = load i32, i32* %idx_in, align 4, !dbg !12887
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.572, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.573, i32 0, i32 0), i32 %31), !dbg !12890
  call void @exit_program(i32 1) #11, !dbg !12891
  unreachable, !dbg !12893

if.end60:                                         ; preds = %lor.lhs.false56
  %32 = load i32, i32* %idx_in, align 4, !dbg !12894
  %idxprom = sext i32 %32 to i64, !dbg !12896
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !12896
  %chapters = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %33, i32 0, i32 28, !dbg !12897
  %34 = load %struct.AVChapter**, %struct.AVChapter*** %chapters, align 8, !dbg !12897
  %arrayidx = getelementptr inbounds %struct.AVChapter*, %struct.AVChapter** %34, i64 %idxprom, !dbg !12896
  %35 = load %struct.AVChapter*, %struct.AVChapter** %arrayidx, align 8, !dbg !12896
  %metadata61 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %35, i32 0, i32 4, !dbg !12898
  store %struct.AVDictionary** %metadata61, %struct.AVDictionary*** %meta_in, align 8, !dbg !12899
  br label %sw.epilog, !dbg !12900

sw.bb62:                                          ; preds = %if.end51
  %36 = load i32, i32* %idx_in, align 4, !dbg !12901
  %cmp63 = icmp slt i32 %36, 0, !dbg !12904
  br i1 %cmp63, label %if.then68, label %lor.lhs.false65, !dbg !12905

lor.lhs.false65:                                  ; preds = %sw.bb62
  %37 = load i32, i32* %idx_in, align 4, !dbg !12906
  %38 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !12908
  %nb_programs = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %38, i32 0, i32 20, !dbg !12909
  %39 = load i32, i32* %nb_programs, align 4, !dbg !12909
  %cmp66 = icmp uge i32 %37, %39, !dbg !12910
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !12911

if.then68:                                        ; preds = %lor.lhs.false65, %sw.bb62
  %40 = load i32, i32* %idx_in, align 4, !dbg !12912
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.572, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.141, i32 0, i32 0), i32 %40), !dbg !12915
  call void @exit_program(i32 1) #11, !dbg !12916
  unreachable, !dbg !12918

if.end69:                                         ; preds = %lor.lhs.false65
  %41 = load i32, i32* %idx_in, align 4, !dbg !12919
  %idxprom70 = sext i32 %41 to i64, !dbg !12921
  %42 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !12921
  %programs = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %42, i32 0, i32 21, !dbg !12922
  %43 = load %struct.AVProgram**, %struct.AVProgram*** %programs, align 8, !dbg !12922
  %arrayidx71 = getelementptr inbounds %struct.AVProgram*, %struct.AVProgram** %43, i64 %idxprom70, !dbg !12921
  %44 = load %struct.AVProgram*, %struct.AVProgram** %arrayidx71, align 8, !dbg !12921
  %metadata72 = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %44, i32 0, i32 5, !dbg !12923
  store %struct.AVDictionary** %metadata72, %struct.AVDictionary*** %meta_in, align 8, !dbg !12924
  br label %sw.epilog, !dbg !12925

sw.bb73:                                          ; preds = %if.end51
  br label %sw.epilog, !dbg !12926

sw.default:                                       ; preds = %if.end51
  br label %do.body, !dbg !12928, !llvm.loop !12930

do.body:                                          ; preds = %sw.default
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.574, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.575, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.576, i32 0, i32 0), i32 619), !dbg !12932
  call void @abort() #13, !dbg !12937
  unreachable, !dbg !12939

do.end:                                           ; No predecessors!
  br label %sw.epilog, !dbg !12940

sw.epilog:                                        ; preds = %do.end, %sw.bb73, %if.end69, %if.end60, %sw.bb
  %45 = load i8, i8* %type_out, align 1, !dbg !12942
  %conv74 = sext i8 %45 to i32, !dbg !12942
  switch i32 %conv74, label %sw.default104 [
    i32 103, label %sw.bb75
    i32 99, label %sw.bb77
    i32 112, label %sw.bb90
    i32 115, label %sw.bb103
  ], !dbg !12943

sw.bb75:                                          ; preds = %sw.epilog
  %46 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12944
  %metadata76 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %46, i32 0, i32 29, !dbg !12947
  store %struct.AVDictionary** %metadata76, %struct.AVDictionary*** %meta_out, align 8, !dbg !12948
  br label %sw.epilog107, !dbg !12949

sw.bb77:                                          ; preds = %sw.epilog
  %47 = load i32, i32* %idx_out, align 4, !dbg !12950
  %cmp78 = icmp slt i32 %47, 0, !dbg !12953
  br i1 %cmp78, label %if.then84, label %lor.lhs.false80, !dbg !12954

lor.lhs.false80:                                  ; preds = %sw.bb77
  %48 = load i32, i32* %idx_out, align 4, !dbg !12955
  %49 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12957
  %nb_chapters81 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %49, i32 0, i32 27, !dbg !12958
  %50 = load i32, i32* %nb_chapters81, align 4, !dbg !12958
  %cmp82 = icmp uge i32 %48, %50, !dbg !12959
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !12960

if.then84:                                        ; preds = %lor.lhs.false80, %sw.bb77
  %51 = load i32, i32* %idx_out, align 4, !dbg !12961
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.572, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.573, i32 0, i32 0), i32 %51), !dbg !12964
  call void @exit_program(i32 1) #11, !dbg !12965
  unreachable, !dbg !12967

if.end85:                                         ; preds = %lor.lhs.false80
  %52 = load i32, i32* %idx_out, align 4, !dbg !12968
  %idxprom86 = sext i32 %52 to i64, !dbg !12970
  %53 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12970
  %chapters87 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %53, i32 0, i32 28, !dbg !12971
  %54 = load %struct.AVChapter**, %struct.AVChapter*** %chapters87, align 8, !dbg !12971
  %arrayidx88 = getelementptr inbounds %struct.AVChapter*, %struct.AVChapter** %54, i64 %idxprom86, !dbg !12970
  %55 = load %struct.AVChapter*, %struct.AVChapter** %arrayidx88, align 8, !dbg !12970
  %metadata89 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %55, i32 0, i32 4, !dbg !12972
  store %struct.AVDictionary** %metadata89, %struct.AVDictionary*** %meta_out, align 8, !dbg !12973
  br label %sw.epilog107, !dbg !12974

sw.bb90:                                          ; preds = %sw.epilog
  %56 = load i32, i32* %idx_out, align 4, !dbg !12975
  %cmp91 = icmp slt i32 %56, 0, !dbg !12978
  br i1 %cmp91, label %if.then97, label %lor.lhs.false93, !dbg !12979

lor.lhs.false93:                                  ; preds = %sw.bb90
  %57 = load i32, i32* %idx_out, align 4, !dbg !12980
  %58 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12982
  %nb_programs94 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %58, i32 0, i32 20, !dbg !12983
  %59 = load i32, i32* %nb_programs94, align 4, !dbg !12983
  %cmp95 = icmp uge i32 %57, %59, !dbg !12984
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !12985

if.then97:                                        ; preds = %lor.lhs.false93, %sw.bb90
  %60 = load i32, i32* %idx_out, align 4, !dbg !12986
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.572, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.141, i32 0, i32 0), i32 %60), !dbg !12989
  call void @exit_program(i32 1) #11, !dbg !12990
  unreachable, !dbg !12992

if.end98:                                         ; preds = %lor.lhs.false93
  %61 = load i32, i32* %idx_out, align 4, !dbg !12993
  %idxprom99 = sext i32 %61 to i64, !dbg !12995
  %62 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !12995
  %programs100 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %62, i32 0, i32 21, !dbg !12996
  %63 = load %struct.AVProgram**, %struct.AVProgram*** %programs100, align 8, !dbg !12996
  %arrayidx101 = getelementptr inbounds %struct.AVProgram*, %struct.AVProgram** %63, i64 %idxprom99, !dbg !12995
  %64 = load %struct.AVProgram*, %struct.AVProgram** %arrayidx101, align 8, !dbg !12995
  %metadata102 = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %64, i32 0, i32 5, !dbg !12997
  store %struct.AVDictionary** %metadata102, %struct.AVDictionary*** %meta_out, align 8, !dbg !12998
  br label %sw.epilog107, !dbg !12999

sw.bb103:                                         ; preds = %sw.epilog
  br label %sw.epilog107, !dbg !13000

sw.default104:                                    ; preds = %sw.epilog
  br label %do.body105, !dbg !13002, !llvm.loop !13004

do.body105:                                       ; preds = %sw.default104
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.574, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.575, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.576, i32 0, i32 0), i32 620), !dbg !13006
  call void @abort() #13, !dbg !13011
  unreachable, !dbg !13013

do.end106:                                        ; No predecessors!
  br label %sw.epilog107, !dbg !13014

sw.epilog107:                                     ; preds = %do.end106, %sw.bb103, %if.end98, %if.end85, %sw.bb75
  %65 = load i8, i8* %type_in, align 1, !dbg !13016
  %conv108 = sext i8 %65 to i32, !dbg !13016
  %cmp109 = icmp eq i32 %conv108, 115, !dbg !13018
  br i1 %cmp109, label %if.then111, label %if.end131, !dbg !13019

if.then111:                                       ; preds = %sw.epilog107
  store i32 0, i32* %i, align 4, !dbg !13020
  br label %for.cond, !dbg !13023

for.cond:                                         ; preds = %for.inc, %if.then111
  %66 = load i32, i32* %i, align 4, !dbg !13024
  %67 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !13027
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %67, i32 0, i32 6, !dbg !13028
  %68 = load i32, i32* %nb_streams, align 4, !dbg !13028
  %cmp112 = icmp ult i32 %66, %68, !dbg !13029
  br i1 %cmp112, label %for.body, label %for.end, !dbg !13030

for.body:                                         ; preds = %for.cond
  %69 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !13031
  %70 = load i32, i32* %i, align 4, !dbg !13034
  %idxprom114 = sext i32 %70 to i64, !dbg !13035
  %71 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !13035
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %71, i32 0, i32 7, !dbg !13036
  %72 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !13036
  %arrayidx115 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %72, i64 %idxprom114, !dbg !13035
  %73 = load %struct.AVStream*, %struct.AVStream** %arrayidx115, align 8, !dbg !13035
  %74 = load i8*, i8** %istream_spec, align 8, !dbg !13037
  %call = call i32 @check_stream_specifier(%struct.AVFormatContext* %69, %struct.AVStream* %73, i8* %74), !dbg !13038
  store i32 %call, i32* %ret, align 4, !dbg !13039
  %cmp116 = icmp sgt i32 %call, 0, !dbg !13040
  br i1 %cmp116, label %if.then118, label %if.else, !dbg !13041

if.then118:                                       ; preds = %for.body
  %75 = load i32, i32* %i, align 4, !dbg !13042
  %idxprom119 = sext i32 %75 to i64, !dbg !13044
  %76 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ic.addr, align 8, !dbg !13044
  %streams120 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %76, i32 0, i32 7, !dbg !13045
  %77 = load %struct.AVStream**, %struct.AVStream*** %streams120, align 8, !dbg !13045
  %arrayidx121 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %77, i64 %idxprom119, !dbg !13044
  %78 = load %struct.AVStream*, %struct.AVStream** %arrayidx121, align 8, !dbg !13044
  %metadata122 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %78, i32 0, i32 11, !dbg !13046
  store %struct.AVDictionary** %metadata122, %struct.AVDictionary*** %meta_in, align 8, !dbg !13047
  br label %for.end, !dbg !13048

if.else:                                          ; preds = %for.body
  %79 = load i32, i32* %ret, align 4, !dbg !13049
  %cmp123 = icmp slt i32 %79, 0, !dbg !13051
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !13052

if.then125:                                       ; preds = %if.else
  call void @exit_program(i32 1) #11, !dbg !13053
  unreachable, !dbg !13053

if.end126:                                        ; preds = %if.else
  br label %if.end127

if.end127:                                        ; preds = %if.end126
  br label %for.inc, !dbg !13054

for.inc:                                          ; preds = %if.end127
  %80 = load i32, i32* %i, align 4, !dbg !13055
  %inc = add nsw i32 %80, 1, !dbg !13055
  store i32 %inc, i32* %i, align 4, !dbg !13055
  br label %for.cond, !dbg !13057, !llvm.loop !13058

for.end:                                          ; preds = %if.then118, %for.cond
  %81 = load %struct.AVDictionary**, %struct.AVDictionary*** %meta_in, align 8, !dbg !13060
  %tobool128 = icmp ne %struct.AVDictionary** %81, null, !dbg !13060
  br i1 %tobool128, label %if.end130, label %if.then129, !dbg !13062

if.then129:                                       ; preds = %for.end
  %82 = load i8*, i8** %istream_spec, align 8, !dbg !13063
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.577, i32 0, i32 0), i8* %82), !dbg !13065
  call void @exit_program(i32 1) #11, !dbg !13066
  unreachable, !dbg !13066

if.end130:                                        ; preds = %for.end
  br label %if.end131, !dbg !13067

if.end131:                                        ; preds = %if.end130, %sw.epilog107
  %83 = load i8, i8* %type_out, align 1, !dbg !13068
  %conv132 = sext i8 %83 to i32, !dbg !13068
  %cmp133 = icmp eq i32 %conv132, 115, !dbg !13070
  br i1 %cmp133, label %if.then135, label %if.else162, !dbg !13071

if.then135:                                       ; preds = %if.end131
  store i32 0, i32* %i, align 4, !dbg !13072
  br label %for.cond136, !dbg !13075

for.cond136:                                      ; preds = %for.inc159, %if.then135
  %84 = load i32, i32* %i, align 4, !dbg !13076
  %85 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13079
  %nb_streams137 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %85, i32 0, i32 6, !dbg !13080
  %86 = load i32, i32* %nb_streams137, align 4, !dbg !13080
  %cmp138 = icmp ult i32 %84, %86, !dbg !13081
  br i1 %cmp138, label %for.body140, label %for.end161, !dbg !13082

for.body140:                                      ; preds = %for.cond136
  %87 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13083
  %88 = load i32, i32* %i, align 4, !dbg !13086
  %idxprom141 = sext i32 %88 to i64, !dbg !13087
  %89 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13087
  %streams142 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %89, i32 0, i32 7, !dbg !13088
  %90 = load %struct.AVStream**, %struct.AVStream*** %streams142, align 8, !dbg !13088
  %arrayidx143 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %90, i64 %idxprom141, !dbg !13087
  %91 = load %struct.AVStream*, %struct.AVStream** %arrayidx143, align 8, !dbg !13087
  %92 = load i8*, i8** %ostream_spec, align 8, !dbg !13089
  %call144 = call i32 @check_stream_specifier(%struct.AVFormatContext* %87, %struct.AVStream* %91, i8* %92), !dbg !13090
  store i32 %call144, i32* %ret, align 4, !dbg !13091
  %cmp145 = icmp sgt i32 %call144, 0, !dbg !13092
  br i1 %cmp145, label %if.then147, label %if.else153, !dbg !13093

if.then147:                                       ; preds = %for.body140
  %93 = load i32, i32* %i, align 4, !dbg !13094
  %idxprom148 = sext i32 %93 to i64, !dbg !13096
  %94 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13096
  %streams149 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %94, i32 0, i32 7, !dbg !13097
  %95 = load %struct.AVStream**, %struct.AVStream*** %streams149, align 8, !dbg !13097
  %arrayidx150 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %95, i64 %idxprom148, !dbg !13096
  %96 = load %struct.AVStream*, %struct.AVStream** %arrayidx150, align 8, !dbg !13096
  %metadata151 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %96, i32 0, i32 11, !dbg !13098
  store %struct.AVDictionary** %metadata151, %struct.AVDictionary*** %meta_out, align 8, !dbg !13099
  %97 = load %struct.AVDictionary**, %struct.AVDictionary*** %meta_out, align 8, !dbg !13100
  %98 = load %struct.AVDictionary**, %struct.AVDictionary*** %meta_in, align 8, !dbg !13101
  %99 = load %struct.AVDictionary*, %struct.AVDictionary** %98, align 8, !dbg !13102
  %call152 = call i32 @av_dict_copy(%struct.AVDictionary** %97, %struct.AVDictionary* %99, i32 16), !dbg !13103
  br label %if.end158, !dbg !13104

if.else153:                                       ; preds = %for.body140
  %100 = load i32, i32* %ret, align 4, !dbg !13105
  %cmp154 = icmp slt i32 %100, 0, !dbg !13108
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !13105

if.then156:                                       ; preds = %if.else153
  call void @exit_program(i32 1) #11, !dbg !13109
  unreachable, !dbg !13109

if.end157:                                        ; preds = %if.else153
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.then147
  br label %for.inc159, !dbg !13110

for.inc159:                                       ; preds = %if.end158
  %101 = load i32, i32* %i, align 4, !dbg !13111
  %inc160 = add nsw i32 %101, 1, !dbg !13111
  store i32 %inc160, i32* %i, align 4, !dbg !13111
  br label %for.cond136, !dbg !13113, !llvm.loop !13114

for.end161:                                       ; preds = %for.cond136
  br label %if.end164, !dbg !13116

if.else162:                                       ; preds = %if.end131
  %102 = load %struct.AVDictionary**, %struct.AVDictionary*** %meta_out, align 8, !dbg !13117
  %103 = load %struct.AVDictionary**, %struct.AVDictionary*** %meta_in, align 8, !dbg !13118
  %104 = load %struct.AVDictionary*, %struct.AVDictionary** %103, align 8, !dbg !13119
  %call163 = call i32 @av_dict_copy(%struct.AVDictionary** %102, %struct.AVDictionary* %104, i32 16), !dbg !13120
  br label %if.end164

if.end164:                                        ; preds = %if.else162, %for.end161
  store i32 0, i32* %retval, align 4, !dbg !13121
  br label %return, !dbg !13121

return:                                           ; preds = %if.end164, %if.then50, %if.end17
  %105 = load i32, i32* %retval, align 4, !dbg !13122
  ret i32 %105, !dbg !13122
}

; Function Attrs: nounwind uwtable
define internal i32 @copy_chapters(%struct.InputFile* %ifile, %struct.OutputFile* %ofile, i32 %copy_metadata) #0 !dbg !13123 {
entry:
  %retval = alloca i32, align 4
  %ifile.addr = alloca %struct.InputFile*, align 8
  %ofile.addr = alloca %struct.OutputFile*, align 8
  %copy_metadata.addr = alloca i32, align 4
  %is = alloca %struct.AVFormatContext*, align 8
  %os = alloca %struct.AVFormatContext*, align 8
  %tmp = alloca %struct.AVChapter**, align 8
  %i = alloca i32, align 4
  %in_ch = alloca %struct.AVChapter*, align 8
  %out_ch = alloca %struct.AVChapter*, align 8
  %start_time = alloca i64, align 8
  %ts_off = alloca i64, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  %rt = alloca i64, align 8
  %.compoundliteral23 = alloca %struct.AVRational, align 4
  store %struct.InputFile* %ifile, %struct.InputFile** %ifile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.InputFile** %ifile.addr, metadata !13126, metadata !1898), !dbg !13127
  store %struct.OutputFile* %ofile, %struct.OutputFile** %ofile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OutputFile** %ofile.addr, metadata !13128, metadata !1898), !dbg !13129
  store i32 %copy_metadata, i32* %copy_metadata.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %copy_metadata.addr, metadata !13130, metadata !1898), !dbg !13131
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %is, metadata !13132, metadata !1898), !dbg !13133
  %0 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !13134
  %ctx = getelementptr inbounds %struct.InputFile, %struct.InputFile* %0, i32 0, i32 0, !dbg !13135
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !13135
  store %struct.AVFormatContext* %1, %struct.AVFormatContext** %is, align 8, !dbg !13133
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %os, metadata !13136, metadata !1898), !dbg !13137
  %2 = load %struct.OutputFile*, %struct.OutputFile** %ofile.addr, align 8, !dbg !13138
  %ctx1 = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %2, i32 0, i32 0, !dbg !13139
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx1, align 8, !dbg !13139
  store %struct.AVFormatContext* %3, %struct.AVFormatContext** %os, align 8, !dbg !13137
  call void @llvm.dbg.declare(metadata %struct.AVChapter*** %tmp, metadata !13140, metadata !1898), !dbg !13141
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13142, metadata !1898), !dbg !13143
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %os, align 8, !dbg !13144
  %chapters = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 28, !dbg !13145
  %5 = load %struct.AVChapter**, %struct.AVChapter*** %chapters, align 8, !dbg !13145
  %6 = bitcast %struct.AVChapter** %5 to i8*, !dbg !13144
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %is, align 8, !dbg !13146
  %nb_chapters = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 27, !dbg !13147
  %8 = load i32, i32* %nb_chapters, align 4, !dbg !13147
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %os, align 8, !dbg !13148
  %nb_chapters3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i32 0, i32 27, !dbg !13149
  %10 = load i32, i32* %nb_chapters3, align 4, !dbg !13149
  %add = add i32 %8, %10, !dbg !13150
  %conv = zext i32 %add to i64, !dbg !13146
  %call = call i8* @av_realloc_f(i8* %6, i64 %conv, i64 8), !dbg !13151
  %11 = bitcast i8* %call to %struct.AVChapter**, !dbg !13151
  store %struct.AVChapter** %11, %struct.AVChapter*** %tmp, align 8, !dbg !13152
  %12 = load %struct.AVChapter**, %struct.AVChapter*** %tmp, align 8, !dbg !13153
  %tobool = icmp ne %struct.AVChapter** %12, null, !dbg !13153
  br i1 %tobool, label %if.end, label %if.then, !dbg !13155

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !13156
  br label %return, !dbg !13156

if.end:                                           ; preds = %entry
  %13 = load %struct.AVChapter**, %struct.AVChapter*** %tmp, align 8, !dbg !13157
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %os, align 8, !dbg !13158
  %chapters4 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %14, i32 0, i32 28, !dbg !13159
  store %struct.AVChapter** %13, %struct.AVChapter*** %chapters4, align 8, !dbg !13160
  store i32 0, i32* %i, align 4, !dbg !13161
  br label %for.cond, !dbg !13163

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32, i32* %i, align 4, !dbg !13164
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %is, align 8, !dbg !13167
  %nb_chapters5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %16, i32 0, i32 27, !dbg !13168
  %17 = load i32, i32* %nb_chapters5, align 4, !dbg !13168
  %cmp = icmp ult i32 %15, %17, !dbg !13169
  br i1 %cmp, label %for.body, label %for.end, !dbg !13170

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVChapter** %in_ch, metadata !13171, metadata !1898), !dbg !13173
  %18 = load i32, i32* %i, align 4, !dbg !13174
  %idxprom = sext i32 %18 to i64, !dbg !13175
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %is, align 8, !dbg !13175
  %chapters8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %19, i32 0, i32 28, !dbg !13176
  %20 = load %struct.AVChapter**, %struct.AVChapter*** %chapters8, align 8, !dbg !13176
  %arrayidx = getelementptr inbounds %struct.AVChapter*, %struct.AVChapter** %20, i64 %idxprom, !dbg !13175
  %21 = load %struct.AVChapter*, %struct.AVChapter** %arrayidx, align 8, !dbg !13175
  store %struct.AVChapter* %21, %struct.AVChapter** %in_ch, align 8, !dbg !13173
  call void @llvm.dbg.declare(metadata %struct.AVChapter** %out_ch, metadata !13177, metadata !1898), !dbg !13178
  call void @llvm.dbg.declare(metadata i64* %start_time, metadata !13179, metadata !1898), !dbg !13180
  %22 = load %struct.OutputFile*, %struct.OutputFile** %ofile.addr, align 8, !dbg !13181
  %start_time11 = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %22, i32 0, i32 4, !dbg !13182
  %23 = load i64, i64* %start_time11, align 8, !dbg !13182
  %cmp12 = icmp eq i64 %23, -9223372036854775808, !dbg !13183
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !13184

cond.true:                                        ; preds = %for.body
  br label %cond.end, !dbg !13185

cond.false:                                       ; preds = %for.body
  %24 = load %struct.OutputFile*, %struct.OutputFile** %ofile.addr, align 8, !dbg !13187
  %start_time14 = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %24, i32 0, i32 4, !dbg !13189
  %25 = load i64, i64* %start_time14, align 8, !dbg !13189
  br label %cond.end, !dbg !13190

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %25, %cond.false ], !dbg !13191
  store i64 %cond, i64* %start_time, align 8, !dbg !13193
  call void @llvm.dbg.declare(metadata i64* %ts_off, metadata !13194, metadata !1898), !dbg !13195
  %26 = load i64, i64* %start_time, align 8, !dbg !13196
  %27 = load %struct.InputFile*, %struct.InputFile** %ifile.addr, align 8, !dbg !13197
  %ts_offset = getelementptr inbounds %struct.InputFile, %struct.InputFile* %27, i32 0, i32 8, !dbg !13198
  %28 = load i64, i64* %ts_offset, align 8, !dbg !13198
  %sub = sub nsw i64 %26, %28, !dbg !13199
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !13200
  store i32 1, i32* %num, align 4, !dbg !13200
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !13200
  store i32 1000000, i32* %den, align 4, !dbg !13200
  %29 = load %struct.AVChapter*, %struct.AVChapter** %in_ch, align 8, !dbg !13201
  %time_base = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %29, i32 0, i32 1, !dbg !13202
  %30 = bitcast %struct.AVRational* %.compoundliteral to i64*, !dbg !13203
  %31 = load i64, i64* %30, align 4, !dbg !13203
  %32 = bitcast %struct.AVRational* %time_base to i64*, !dbg !13203
  %33 = load i64, i64* %32, align 4, !dbg !13203
  %call16 = call i64 @av_rescale_q(i64 %sub, i64 %31, i64 %33) #1, !dbg !13203
  store i64 %call16, i64* %ts_off, align 8, !dbg !13195
  call void @llvm.dbg.declare(metadata i64* %rt, metadata !13204, metadata !1898), !dbg !13205
  %34 = load %struct.OutputFile*, %struct.OutputFile** %ofile.addr, align 8, !dbg !13206
  %recording_time = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %34, i32 0, i32 3, !dbg !13207
  %35 = load i64, i64* %recording_time, align 8, !dbg !13207
  %cmp18 = icmp eq i64 %35, 9223372036854775807, !dbg !13208
  br i1 %cmp18, label %cond.true20, label %cond.false21, !dbg !13209

cond.true20:                                      ; preds = %cond.end
  br label %cond.end28, !dbg !13210

cond.false21:                                     ; preds = %cond.end
  %36 = load %struct.OutputFile*, %struct.OutputFile** %ofile.addr, align 8, !dbg !13211
  %recording_time22 = getelementptr inbounds %struct.OutputFile, %struct.OutputFile* %36, i32 0, i32 3, !dbg !13212
  %37 = load i64, i64* %recording_time22, align 8, !dbg !13212
  %num24 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral23, i32 0, i32 0, !dbg !13213
  store i32 1, i32* %num24, align 4, !dbg !13213
  %den25 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral23, i32 0, i32 1, !dbg !13213
  store i32 1000000, i32* %den25, align 4, !dbg !13213
  %38 = load %struct.AVChapter*, %struct.AVChapter** %in_ch, align 8, !dbg !13214
  %time_base26 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %38, i32 0, i32 1, !dbg !13215
  %39 = bitcast %struct.AVRational* %.compoundliteral23 to i64*, !dbg !13216
  %40 = load i64, i64* %39, align 4, !dbg !13216
  %41 = bitcast %struct.AVRational* %time_base26 to i64*, !dbg !13216
  %42 = load i64, i64* %41, align 4, !dbg !13216
  %call27 = call i64 @av_rescale_q(i64 %37, i64 %40, i64 %42) #1, !dbg !13216
  br label %cond.end28, !dbg !13217

cond.end28:                                       ; preds = %cond.false21, %cond.true20
  %cond29 = phi i64 [ 9223372036854775807, %cond.true20 ], [ %call27, %cond.false21 ], !dbg !13218
  store i64 %cond29, i64* %rt, align 8, !dbg !13219
  %43 = load %struct.AVChapter*, %struct.AVChapter** %in_ch, align 8, !dbg !13220
  %end = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %43, i32 0, i32 3, !dbg !13222
  %44 = load i64, i64* %end, align 8, !dbg !13222
  %45 = load i64, i64* %ts_off, align 8, !dbg !13223
  %cmp30 = icmp slt i64 %44, %45, !dbg !13224
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !13225

if.then32:                                        ; preds = %cond.end28
  br label %for.inc, !dbg !13226

if.end33:                                         ; preds = %cond.end28
  %46 = load i64, i64* %rt, align 8, !dbg !13227
  %cmp34 = icmp ne i64 %46, 9223372036854775807, !dbg !13229
  br i1 %cmp34, label %land.lhs.true, label %if.end40, !dbg !13230

land.lhs.true:                                    ; preds = %if.end33
  %47 = load %struct.AVChapter*, %struct.AVChapter** %in_ch, align 8, !dbg !13231
  %start = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %47, i32 0, i32 2, !dbg !13233
  %48 = load i64, i64* %start, align 8, !dbg !13233
  %49 = load i64, i64* %rt, align 8, !dbg !13234
  %50 = load i64, i64* %ts_off, align 8, !dbg !13235
  %add36 = add nsw i64 %49, %50, !dbg !13236
  %cmp37 = icmp sgt i64 %48, %add36, !dbg !13237
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !13238

if.then39:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !13239

if.end40:                                         ; preds = %land.lhs.true, %if.end33
  %call41 = call noalias i8* @av_mallocz(i64 40), !dbg !13240
  %51 = bitcast i8* %call41 to %struct.AVChapter*, !dbg !13240
  store %struct.AVChapter* %51, %struct.AVChapter** %out_ch, align 8, !dbg !13241
  %52 = load %struct.AVChapter*, %struct.AVChapter** %out_ch, align 8, !dbg !13242
  %tobool42 = icmp ne %struct.AVChapter* %52, null, !dbg !13242
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !13244

if.then43:                                        ; preds = %if.end40
  store i32 -12, i32* %retval, align 4, !dbg !13245
  br label %return, !dbg !13245

if.end44:                                         ; preds = %if.end40
  %53 = load %struct.AVChapter*, %struct.AVChapter** %in_ch, align 8, !dbg !13246
  %id = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %53, i32 0, i32 0, !dbg !13247
  %54 = load i32, i32* %id, align 8, !dbg !13247
  %55 = load %struct.AVChapter*, %struct.AVChapter** %out_ch, align 8, !dbg !13248
  %id45 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %55, i32 0, i32 0, !dbg !13249
  store i32 %54, i32* %id45, align 8, !dbg !13250
  %56 = load %struct.AVChapter*, %struct.AVChapter** %out_ch, align 8, !dbg !13251
  %time_base46 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %56, i32 0, i32 1, !dbg !13252
  %57 = load %struct.AVChapter*, %struct.AVChapter** %in_ch, align 8, !dbg !13253
  %time_base47 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %57, i32 0, i32 1, !dbg !13254
  %58 = bitcast %struct.AVRational* %time_base46 to i8*, !dbg !13254
  %59 = bitcast %struct.AVRational* %time_base47 to i8*, !dbg !13254
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 8, i32 4, i1 false), !dbg !13254
  %60 = load %struct.AVChapter*, %struct.AVChapter** %in_ch, align 8, !dbg !13255
  %start48 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %60, i32 0, i32 2, !dbg !13256
  %61 = load i64, i64* %start48, align 8, !dbg !13256
  %62 = load i64, i64* %ts_off, align 8, !dbg !13257
  %sub49 = sub nsw i64 %61, %62, !dbg !13258
  %cmp50 = icmp sgt i64 0, %sub49, !dbg !13259
  br i1 %cmp50, label %cond.true52, label %cond.false53, !dbg !13260

cond.true52:                                      ; preds = %if.end44
  br label %cond.end56, !dbg !13261

cond.false53:                                     ; preds = %if.end44
  %63 = load %struct.AVChapter*, %struct.AVChapter** %in_ch, align 8, !dbg !13262
  %start54 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %63, i32 0, i32 2, !dbg !13263
  %64 = load i64, i64* %start54, align 8, !dbg !13263
  %65 = load i64, i64* %ts_off, align 8, !dbg !13264
  %sub55 = sub nsw i64 %64, %65, !dbg !13265
  br label %cond.end56, !dbg !13266

cond.end56:                                       ; preds = %cond.false53, %cond.true52
  %cond57 = phi i64 [ 0, %cond.true52 ], [ %sub55, %cond.false53 ], !dbg !13267
  %66 = load %struct.AVChapter*, %struct.AVChapter** %out_ch, align 8, !dbg !13268
  %start58 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %66, i32 0, i32 2, !dbg !13269
  store i64 %cond57, i64* %start58, align 8, !dbg !13270
  %67 = load i64, i64* %rt, align 8, !dbg !13271
  %68 = load %struct.AVChapter*, %struct.AVChapter** %in_ch, align 8, !dbg !13272
  %end59 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %68, i32 0, i32 3, !dbg !13273
  %69 = load i64, i64* %end59, align 8, !dbg !13273
  %70 = load i64, i64* %ts_off, align 8, !dbg !13274
  %sub60 = sub nsw i64 %69, %70, !dbg !13275
  %cmp61 = icmp sgt i64 %67, %sub60, !dbg !13276
  br i1 %cmp61, label %cond.true63, label %cond.false66, !dbg !13277

cond.true63:                                      ; preds = %cond.end56
  %71 = load %struct.AVChapter*, %struct.AVChapter** %in_ch, align 8, !dbg !13278
  %end64 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %71, i32 0, i32 3, !dbg !13279
  %72 = load i64, i64* %end64, align 8, !dbg !13279
  %73 = load i64, i64* %ts_off, align 8, !dbg !13280
  %sub65 = sub nsw i64 %72, %73, !dbg !13281
  br label %cond.end67, !dbg !13282

cond.false66:                                     ; preds = %cond.end56
  %74 = load i64, i64* %rt, align 8, !dbg !13283
  br label %cond.end67, !dbg !13284

cond.end67:                                       ; preds = %cond.false66, %cond.true63
  %cond68 = phi i64 [ %sub65, %cond.true63 ], [ %74, %cond.false66 ], !dbg !13285
  %75 = load %struct.AVChapter*, %struct.AVChapter** %out_ch, align 8, !dbg !13286
  %end69 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %75, i32 0, i32 3, !dbg !13287
  store i64 %cond68, i64* %end69, align 8, !dbg !13288
  %76 = load i32, i32* %copy_metadata.addr, align 4, !dbg !13289
  %tobool70 = icmp ne i32 %76, 0, !dbg !13289
  br i1 %tobool70, label %if.then71, label %if.end74, !dbg !13291

if.then71:                                        ; preds = %cond.end67
  %77 = load %struct.AVChapter*, %struct.AVChapter** %out_ch, align 8, !dbg !13292
  %metadata = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %77, i32 0, i32 4, !dbg !13293
  %78 = load %struct.AVChapter*, %struct.AVChapter** %in_ch, align 8, !dbg !13294
  %metadata72 = getelementptr inbounds %struct.AVChapter, %struct.AVChapter* %78, i32 0, i32 4, !dbg !13295
  %79 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata72, align 8, !dbg !13295
  %call73 = call i32 @av_dict_copy(%struct.AVDictionary** %metadata, %struct.AVDictionary* %79, i32 0), !dbg !13296
  br label %if.end74, !dbg !13296

if.end74:                                         ; preds = %if.then71, %cond.end67
  %80 = load %struct.AVChapter*, %struct.AVChapter** %out_ch, align 8, !dbg !13297
  %81 = load %struct.AVFormatContext*, %struct.AVFormatContext** %os, align 8, !dbg !13298
  %nb_chapters75 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %81, i32 0, i32 27, !dbg !13299
  %82 = load i32, i32* %nb_chapters75, align 4, !dbg !13300
  %inc = add i32 %82, 1, !dbg !13300
  store i32 %inc, i32* %nb_chapters75, align 4, !dbg !13300
  %idxprom76 = zext i32 %82 to i64, !dbg !13301
  %83 = load %struct.AVFormatContext*, %struct.AVFormatContext** %os, align 8, !dbg !13301
  %chapters77 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %83, i32 0, i32 28, !dbg !13302
  %84 = load %struct.AVChapter**, %struct.AVChapter*** %chapters77, align 8, !dbg !13302
  %arrayidx78 = getelementptr inbounds %struct.AVChapter*, %struct.AVChapter** %84, i64 %idxprom76, !dbg !13301
  store %struct.AVChapter* %80, %struct.AVChapter** %arrayidx78, align 8, !dbg !13303
  br label %for.inc, !dbg !13304

for.inc:                                          ; preds = %if.end74, %if.then32
  %85 = load i32, i32* %i, align 4, !dbg !13305
  %inc79 = add nsw i32 %85, 1, !dbg !13305
  store i32 %inc79, i32* %i, align 4, !dbg !13305
  br label %for.cond, !dbg !13307, !llvm.loop !13308

for.end:                                          ; preds = %if.then39, %for.cond
  store i32 0, i32* %retval, align 4, !dbg !13310
  br label %return, !dbg !13310

return:                                           ; preds = %for.end, %if.then43, %if.then
  %86 = load i32, i32* %retval, align 4, !dbg !13311
  ret i32 %86, !dbg !13311
}

declare i8* @av_get_token(i8**, i8*) #3

declare %struct.AVProgram* @av_new_program(%struct.AVFormatContext*, i32) #3

declare void @av_program_add_stream_index(%struct.AVFormatContext*, i32, i32) #3

; Function Attrs: nounwind uwtable
define internal void @parse_meta_type(i8* %arg, i8* %type, i32* %index, i8** %stream_spec) #0 !dbg !13312 {
entry:
  %arg.addr = alloca i8*, align 8
  %type.addr = alloca i8*, align 8
  %index.addr = alloca i32*, align 8
  %stream_spec.addr = alloca i8**, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13315, metadata !1898), !dbg !13316
  store i8* %type, i8** %type.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %type.addr, metadata !13317, metadata !1898), !dbg !13318
  store i32* %index, i32** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index.addr, metadata !13319, metadata !1898), !dbg !13320
  store i8** %stream_spec, i8*** %stream_spec.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %stream_spec.addr, metadata !13321, metadata !1898), !dbg !13322
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !13323
  %1 = load i8, i8* %0, align 1, !dbg !13325
  %tobool = icmp ne i8 %1, 0, !dbg !13325
  br i1 %tobool, label %if.then, label %if.else, !dbg !13326

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !13327
  %3 = load i8, i8* %2, align 1, !dbg !13329
  %4 = load i8*, i8** %type.addr, align 8, !dbg !13330
  store i8 %3, i8* %4, align 1, !dbg !13331
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !13332
  %6 = load i8, i8* %5, align 1, !dbg !13333
  %conv = sext i8 %6 to i32, !dbg !13333
  switch i32 %conv, label %sw.default [
    i32 103, label %sw.bb
    i32 115, label %sw.bb1
    i32 99, label %sw.bb10
    i32 112, label %sw.bb10
  ], !dbg !13334

sw.bb:                                            ; preds = %if.then
  br label %sw.epilog, !dbg !13335

sw.bb1:                                           ; preds = %if.then
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !13337
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !13337
  store i8* %incdec.ptr, i8** %arg.addr, align 8, !dbg !13337
  %8 = load i8, i8* %incdec.ptr, align 1, !dbg !13339
  %conv2 = sext i8 %8 to i32, !dbg !13339
  %tobool3 = icmp ne i32 %conv2, 0, !dbg !13339
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !13340

land.lhs.true:                                    ; preds = %sw.bb1
  %9 = load i8*, i8** %arg.addr, align 8, !dbg !13341
  %10 = load i8, i8* %9, align 1, !dbg !13343
  %conv4 = sext i8 %10 to i32, !dbg !13343
  %cmp = icmp ne i32 %conv4, 58, !dbg !13344
  br i1 %cmp, label %if.then6, label %if.end, !dbg !13345

if.then6:                                         ; preds = %land.lhs.true
  %11 = load i8*, i8** %arg.addr, align 8, !dbg !13346
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.511, i32 0, i32 0), i8* %11), !dbg !13348
  call void @exit_program(i32 1) #11, !dbg !13349
  unreachable, !dbg !13349

if.end:                                           ; preds = %land.lhs.true, %sw.bb1
  %12 = load i8*, i8** %arg.addr, align 8, !dbg !13350
  %13 = load i8, i8* %12, align 1, !dbg !13351
  %conv7 = sext i8 %13 to i32, !dbg !13351
  %cmp8 = icmp eq i32 %conv7, 58, !dbg !13352
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !13351

cond.true:                                        ; preds = %if.end
  %14 = load i8*, i8** %arg.addr, align 8, !dbg !13353
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 1, !dbg !13355
  br label %cond.end, !dbg !13356

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !13357

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0), %cond.false ], !dbg !13359
  %15 = load i8**, i8*** %stream_spec.addr, align 8, !dbg !13361
  store i8* %cond, i8** %15, align 8, !dbg !13362
  br label %sw.epilog, !dbg !13363

sw.bb10:                                          ; preds = %if.then, %if.then
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !13364
  %incdec.ptr11 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !13364
  store i8* %incdec.ptr11, i8** %arg.addr, align 8, !dbg !13364
  %17 = load i8, i8* %incdec.ptr11, align 1, !dbg !13366
  %conv12 = sext i8 %17 to i32, !dbg !13366
  %cmp13 = icmp eq i32 %conv12, 58, !dbg !13367
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !13368

if.then15:                                        ; preds = %sw.bb10
  %18 = load i8*, i8** %arg.addr, align 8, !dbg !13369
  %incdec.ptr16 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !13369
  store i8* %incdec.ptr16, i8** %arg.addr, align 8, !dbg !13369
  %call = call i64 @strtol(i8* %incdec.ptr16, i8** null, i32 0) #12, !dbg !13370
  %conv17 = trunc i64 %call to i32, !dbg !13370
  %19 = load i32*, i32** %index.addr, align 8, !dbg !13371
  store i32 %conv17, i32* %19, align 4, !dbg !13372
  br label %if.end18, !dbg !13373

if.end18:                                         ; preds = %if.then15, %sw.bb10
  br label %sw.epilog, !dbg !13374

sw.default:                                       ; preds = %if.then
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !13375
  %21 = load i8, i8* %20, align 1, !dbg !13376
  %conv19 = sext i8 %21 to i32, !dbg !13376
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.578, i32 0, i32 0), i32 %conv19), !dbg !13377
  call void @exit_program(i32 1) #11, !dbg !13378
  unreachable, !dbg !13378

sw.epilog:                                        ; preds = %if.end18, %cond.end, %sw.bb
  br label %if.end20, !dbg !13379

if.else:                                          ; preds = %entry
  %22 = load i8*, i8** %type.addr, align 8, !dbg !13380
  store i8 103, i8* %22, align 1, !dbg !13381
  br label %if.end20

if.end20:                                         ; preds = %if.else, %sw.epilog
  ret void, !dbg !13382
}

declare double @av_strtod(i8*, i8**) #3

declare void @avfilter_inout_free(%struct.AVFilterInOut**) #3

; Function Attrs: nounwind uwtable
define internal %struct.OutputStream* @new_output_stream(%struct.OptionsContext* %o, %struct.AVFormatContext* %oc, i32 %type, i32 %source_index) #0 !dbg !13383 {
entry:
  %o.addr = alloca %struct.OptionsContext*, align 8
  %oc.addr = alloca %struct.AVFormatContext*, align 8
  %type.addr = alloca i32, align 4
  %source_index.addr = alloca i32, align 4
  %ost = alloca %struct.OutputStream*, align 8
  %st = alloca %struct.AVStream*, align 8
  %idx = alloca i32, align 4
  %ret = alloca i32, align 4
  %bsfs = alloca i8*, align 8
  %time_base = alloca i8*, align 8
  %next = alloca i8*, align 8
  %codec_tag = alloca i8*, align 8
  %qscale = alloca double, align 8
  %i = alloca i32, align 4
  %s = alloca %struct.AVIOContext*, align 8
  %buf = alloca i8*, align 8
  %arg = alloca i8*, align 8
  %preset = alloca i8*, align 8
  %i42 = alloca i32, align 4
  %ret43 = alloca i32, align 4
  %spec = alloca i8*, align 8
  %i94 = alloca i32, align 4
  %ret95 = alloca i32, align 4
  %spec100 = alloca i8*, align 8
  %q = alloca %struct.AVRational, align 4
  %i137 = alloca i32, align 4
  %ret138 = alloca i32, align 4
  %spec143 = alloca i8*, align 8
  %q167 = alloca %struct.AVRational, align 4
  %i178 = alloca i32, align 4
  %ret179 = alloca i32, align 4
  %spec184 = alloca i8*, align 8
  %p = alloca i8*, align 8
  %i225 = alloca i32, align 4
  %ret226 = alloca i32, align 4
  %spec231 = alloca i8*, align 8
  %i255 = alloca i32, align 4
  %ret256 = alloca i32, align 4
  %spec261 = alloca i8*, align 8
  %filter = alloca %struct.AVBitStreamFilter*, align 8
  %bsf = alloca i8*, align 8
  %bsf_options_str = alloca i8*, align 8
  %bsf_name = alloca i8*, align 8
  %opt = alloca %struct.AVOption*, align 8
  %shorthand = alloca [2 x i8*], align 16
  %i349 = alloca i32, align 4
  %ret350 = alloca i32, align 4
  %spec355 = alloca i8*, align 8
  %tag = alloca i32, align 4
  %i390 = alloca i32, align 4
  %ret391 = alloca i32, align 4
  %spec396 = alloca i8*, align 8
  %i427 = alloca i32, align 4
  %ret428 = alloca i32, align 4
  %spec433 = alloca i8*, align 8
  %i459 = alloca i32, align 4
  %ret460 = alloca i32, align 4
  %spec465 = alloca i8*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !13386, metadata !1898), !dbg !13387
  store %struct.AVFormatContext* %oc, %struct.AVFormatContext** %oc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc.addr, metadata !13388, metadata !1898), !dbg !13389
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !13390, metadata !1898), !dbg !13391
  store i32 %source_index, i32* %source_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_index.addr, metadata !13392, metadata !1898), !dbg !13393
  call void @llvm.dbg.declare(metadata %struct.OutputStream** %ost, metadata !13394, metadata !1898), !dbg !13395
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !13396, metadata !1898), !dbg !13397
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13398
  %call = call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %0, %struct.AVCodec* null), !dbg !13399
  store %struct.AVStream* %call, %struct.AVStream** %st, align 8, !dbg !13397
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !13400, metadata !1898), !dbg !13401
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13402
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 6, !dbg !13403
  %2 = load i32, i32* %nb_streams, align 4, !dbg !13403
  %sub = sub i32 %2, 1, !dbg !13404
  store i32 %sub, i32* %idx, align 4, !dbg !13401
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13405, metadata !1898), !dbg !13406
  store i32 0, i32* %ret, align 4, !dbg !13406
  call void @llvm.dbg.declare(metadata i8** %bsfs, metadata !13407, metadata !1898), !dbg !13408
  store i8* null, i8** %bsfs, align 8, !dbg !13408
  call void @llvm.dbg.declare(metadata i8** %time_base, metadata !13409, metadata !1898), !dbg !13410
  store i8* null, i8** %time_base, align 8, !dbg !13410
  call void @llvm.dbg.declare(metadata i8** %next, metadata !13411, metadata !1898), !dbg !13412
  call void @llvm.dbg.declare(metadata i8** %codec_tag, metadata !13413, metadata !1898), !dbg !13414
  store i8* null, i8** %codec_tag, align 8, !dbg !13414
  call void @llvm.dbg.declare(metadata double* %qscale, metadata !13415, metadata !1898), !dbg !13416
  store double -1.000000e+00, double* %qscale, align 8, !dbg !13416
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13417, metadata !1898), !dbg !13418
  %3 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !13419
  %tobool = icmp ne %struct.AVStream* %3, null, !dbg !13419
  br i1 %tobool, label %if.end, label %if.then, !dbg !13421

if.then:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.538, i32 0, i32 0)), !dbg !13422
  call void @exit_program(i32 1) #11, !dbg !13424
  unreachable, !dbg !13424

if.end:                                           ; preds = %entry
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13425
  %nb_streams1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 6, !dbg !13427
  %5 = load i32, i32* %nb_streams1, align 4, !dbg !13427
  %sub2 = sub i32 %5, 1, !dbg !13428
  %6 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13429
  %nb_streamid_map = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %6, i32 0, i32 56, !dbg !13430
  %7 = load i32, i32* %nb_streamid_map, align 8, !dbg !13430
  %cmp = icmp ult i32 %sub2, %7, !dbg !13431
  br i1 %cmp, label %if.then3, label %if.end6, !dbg !13432

if.then3:                                         ; preds = %if.end
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13433
  %nb_streams4 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i32 0, i32 6, !dbg !13434
  %9 = load i32, i32* %nb_streams4, align 4, !dbg !13434
  %sub5 = sub i32 %9, 1, !dbg !13435
  %idxprom = zext i32 %sub5 to i64, !dbg !13436
  %10 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13436
  %streamid_map = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %10, i32 0, i32 55, !dbg !13437
  %11 = load i32*, i32** %streamid_map, align 8, !dbg !13437
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom, !dbg !13436
  %12 = load i32, i32* %arrayidx, align 4, !dbg !13436
  %13 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !13438
  %id = getelementptr inbounds %struct.AVStream, %struct.AVStream* %13, i32 0, i32 1, !dbg !13439
  store i32 %12, i32* %id, align 4, !dbg !13440
  br label %if.end6, !dbg !13438

if.end6:                                          ; preds = %if.then3, %if.end
  %14 = load %struct.OutputStream**, %struct.OutputStream*** @output_streams, align 8, !dbg !13441
  %15 = bitcast %struct.OutputStream** %14 to i8*, !dbg !13441
  %16 = load i32, i32* @nb_output_streams, align 4, !dbg !13442
  %add = add nsw i32 %16, 1, !dbg !13443
  %call7 = call i8* @grow_array(i8* %15, i32 8, i32* @nb_output_streams, i32 %add), !dbg !13444
  %17 = bitcast i8* %call7 to %struct.OutputStream**, !dbg !13444
  store %struct.OutputStream** %17, %struct.OutputStream*** @output_streams, align 8, !dbg !13445
  %call8 = call noalias i8* @av_mallocz(i64 536), !dbg !13446
  %18 = bitcast i8* %call8 to %struct.OutputStream*, !dbg !13446
  store %struct.OutputStream* %18, %struct.OutputStream** %ost, align 8, !dbg !13448
  %tobool9 = icmp ne %struct.OutputStream* %18, null, !dbg !13448
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !13449

if.then10:                                        ; preds = %if.end6
  call void @exit_program(i32 1) #11, !dbg !13450
  unreachable, !dbg !13450

if.end11:                                         ; preds = %if.end6
  %19 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13451
  %20 = load i32, i32* @nb_output_streams, align 4, !dbg !13452
  %sub12 = sub nsw i32 %20, 1, !dbg !13453
  %idxprom13 = sext i32 %sub12 to i64, !dbg !13454
  %21 = load %struct.OutputStream**, %struct.OutputStream*** @output_streams, align 8, !dbg !13454
  %arrayidx14 = getelementptr inbounds %struct.OutputStream*, %struct.OutputStream** %21, i64 %idxprom13, !dbg !13454
  store %struct.OutputStream* %19, %struct.OutputStream** %arrayidx14, align 8, !dbg !13455
  %22 = load i32, i32* @nb_output_files, align 4, !dbg !13456
  %sub15 = sub nsw i32 %22, 1, !dbg !13457
  %23 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13458
  %file_index = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %23, i32 0, i32 0, !dbg !13459
  store i32 %sub15, i32* %file_index, align 8, !dbg !13460
  %24 = load i32, i32* %idx, align 4, !dbg !13461
  %25 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13462
  %index = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %25, i32 0, i32 1, !dbg !13463
  store i32 %24, i32* %index, align 4, !dbg !13464
  %26 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !13465
  %27 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13466
  %st16 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %27, i32 0, i32 3, !dbg !13467
  store %struct.AVStream* %26, %struct.AVStream** %st16, align 8, !dbg !13468
  %28 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13469
  %forced_kf_ref_pts = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %28, i32 0, i32 30, !dbg !13470
  store i64 -9223372036854775808, i64* %forced_kf_ref_pts, align 8, !dbg !13471
  %29 = load i32, i32* %type.addr, align 4, !dbg !13472
  %30 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !13473
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i32 0, i32 19, !dbg !13474
  %31 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !13474
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %31, i32 0, i32 0, !dbg !13475
  store i32 %29, i32* %codec_type, align 8, !dbg !13476
  %32 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13477
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13478
  %34 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13479
  %call17 = call i32 @choose_encoder(%struct.OptionsContext* %32, %struct.AVFormatContext* %33, %struct.OutputStream* %34), !dbg !13480
  store i32 %call17, i32* %ret, align 4, !dbg !13481
  %35 = load i32, i32* %ret, align 4, !dbg !13482
  %cmp18 = icmp slt i32 %35, 0, !dbg !13484
  br i1 %cmp18, label %if.then19, label %if.end22, !dbg !13485

if.then19:                                        ; preds = %if.end11
  %36 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13486
  %file_index20 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %36, i32 0, i32 0, !dbg !13488
  %37 = load i32, i32* %file_index20, align 8, !dbg !13488
  %38 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13489
  %index21 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %38, i32 0, i32 1, !dbg !13490
  %39 = load i32, i32* %index21, align 4, !dbg !13490
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.539, i32 0, i32 0), i32 %37, i32 %39), !dbg !13491
  call void @exit_program(i32 1) #11, !dbg !13492
  unreachable, !dbg !13492

if.end22:                                         ; preds = %if.end11
  %40 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13493
  %enc = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %40, i32 0, i32 16, !dbg !13494
  %41 = load %struct.AVCodec*, %struct.AVCodec** %enc, align 8, !dbg !13494
  %call23 = call %struct.AVCodecContext* @avcodec_alloc_context3(%struct.AVCodec* %41), !dbg !13495
  %42 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13496
  %enc_ctx = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %42, i32 0, i32 14, !dbg !13497
  store %struct.AVCodecContext* %call23, %struct.AVCodecContext** %enc_ctx, align 8, !dbg !13498
  %43 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13499
  %enc_ctx24 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %43, i32 0, i32 14, !dbg !13501
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx24, align 8, !dbg !13501
  %tobool25 = icmp ne %struct.AVCodecContext* %44, null, !dbg !13499
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !13502

if.then26:                                        ; preds = %if.end22
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.540, i32 0, i32 0)), !dbg !13503
  call void @exit_program(i32 1) #11, !dbg !13505
  unreachable, !dbg !13505

if.end27:                                         ; preds = %if.end22
  %45 = load i32, i32* %type.addr, align 4, !dbg !13506
  %46 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13507
  %enc_ctx28 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %46, i32 0, i32 14, !dbg !13508
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx28, align 8, !dbg !13508
  %codec_type29 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %47, i32 0, i32 2, !dbg !13509
  store i32 %45, i32* %codec_type29, align 4, !dbg !13510
  %call30 = call %struct.AVCodecParameters* @avcodec_parameters_alloc(), !dbg !13511
  %48 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13512
  %ref_par = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %48, i32 0, i32 15, !dbg !13513
  store %struct.AVCodecParameters* %call30, %struct.AVCodecParameters** %ref_par, align 8, !dbg !13514
  %49 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13515
  %ref_par31 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %49, i32 0, i32 15, !dbg !13517
  %50 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %ref_par31, align 8, !dbg !13517
  %tobool32 = icmp ne %struct.AVCodecParameters* %50, null, !dbg !13515
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !13518

if.then33:                                        ; preds = %if.end27
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.541, i32 0, i32 0)), !dbg !13519
  call void @exit_program(i32 1) #11, !dbg !13521
  unreachable, !dbg !13521

if.end34:                                         ; preds = %if.end27
  %51 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13522
  %enc35 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %51, i32 0, i32 16, !dbg !13524
  %52 = load %struct.AVCodec*, %struct.AVCodec** %enc35, align 8, !dbg !13524
  %tobool36 = icmp ne %struct.AVCodec* %52, null, !dbg !13522
  br i1 %tobool36, label %if.then37, label %if.else84, !dbg !13525

if.then37:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s, metadata !13526, metadata !1898), !dbg !13528
  store %struct.AVIOContext* null, %struct.AVIOContext** %s, align 8, !dbg !13528
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !13529, metadata !1898), !dbg !13530
  store i8* null, i8** %buf, align 8, !dbg !13530
  call void @llvm.dbg.declare(metadata i8** %arg, metadata !13531, metadata !1898), !dbg !13532
  store i8* null, i8** %arg, align 8, !dbg !13532
  call void @llvm.dbg.declare(metadata i8** %preset, metadata !13533, metadata !1898), !dbg !13534
  store i8* null, i8** %preset, align 8, !dbg !13534
  %53 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13535
  %g = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %53, i32 0, i32 0, !dbg !13536
  %54 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !13536
  %codec_opts = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %54, i32 0, i32 4, !dbg !13537
  %55 = load %struct.AVDictionary*, %struct.AVDictionary** %codec_opts, align 8, !dbg !13537
  %56 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13538
  %enc38 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %56, i32 0, i32 16, !dbg !13539
  %57 = load %struct.AVCodec*, %struct.AVCodec** %enc38, align 8, !dbg !13539
  %id39 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %57, i32 0, i32 3, !dbg !13540
  %58 = load i32, i32* %id39, align 4, !dbg !13540
  %59 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13541
  %60 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !13542
  %61 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13543
  %enc40 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %61, i32 0, i32 16, !dbg !13544
  %62 = load %struct.AVCodec*, %struct.AVCodec** %enc40, align 8, !dbg !13544
  %call41 = call %struct.AVDictionary* @filter_codec_opts(%struct.AVDictionary* %55, i32 %58, %struct.AVFormatContext* %59, %struct.AVStream* %60, %struct.AVCodec* %62), !dbg !13545
  %63 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13546
  %encoder_opts = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %63, i32 0, i32 45, !dbg !13547
  store %struct.AVDictionary* %call41, %struct.AVDictionary** %encoder_opts, align 8, !dbg !13548
  call void @llvm.dbg.declare(metadata i32* %i42, metadata !13549, metadata !1898), !dbg !13551
  call void @llvm.dbg.declare(metadata i32* %ret43, metadata !13552, metadata !1898), !dbg !13553
  store i32 0, i32* %i42, align 4, !dbg !13554
  br label %for.cond, !dbg !13556

for.cond:                                         ; preds = %for.inc, %if.then37
  %64 = load i32, i32* %i42, align 4, !dbg !13557
  %65 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13560
  %nb_presets = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %65, i32 0, i32 88, !dbg !13561
  %66 = load i32, i32* %nb_presets, align 8, !dbg !13561
  %cmp44 = icmp slt i32 %64, %66, !dbg !13562
  br i1 %cmp44, label %for.body, label %for.end, !dbg !13563

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %spec, metadata !13564, metadata !1898), !dbg !13566
  %67 = load i32, i32* %i42, align 4, !dbg !13567
  %idxprom45 = sext i32 %67 to i64, !dbg !13569
  %68 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13569
  %presets = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %68, i32 0, i32 87, !dbg !13570
  %69 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %presets, align 8, !dbg !13570
  %arrayidx46 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %69, i64 %idxprom45, !dbg !13569
  %specifier = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx46, i32 0, i32 0, !dbg !13571
  %70 = load i8*, i8** %specifier, align 8, !dbg !13571
  store i8* %70, i8** %spec, align 8, !dbg !13572
  %71 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13573
  %72 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !13574
  %73 = load i8*, i8** %spec, align 8, !dbg !13575
  %call47 = call i32 @check_stream_specifier(%struct.AVFormatContext* %71, %struct.AVStream* %72, i8* %73), !dbg !13576
  store i32 %call47, i32* %ret43, align 4, !dbg !13577
  %cmp48 = icmp sgt i32 %call47, 0, !dbg !13578
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !13579

if.then49:                                        ; preds = %for.body
  %74 = load i32, i32* %i42, align 4, !dbg !13580
  %idxprom50 = sext i32 %74 to i64, !dbg !13583
  %75 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13583
  %presets51 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %75, i32 0, i32 87, !dbg !13584
  %76 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %presets51, align 8, !dbg !13584
  %arrayidx52 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %76, i64 %idxprom50, !dbg !13583
  %u = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx52, i32 0, i32 1, !dbg !13585
  %str = bitcast %union.anon.1* %u to i8**, !dbg !13586
  %77 = load i8*, i8** %str, align 8, !dbg !13586
  store i8* %77, i8** %preset, align 8, !dbg !13587
  br label %if.end56, !dbg !13588

if.else:                                          ; preds = %for.body
  %78 = load i32, i32* %ret43, align 4, !dbg !13589
  %cmp53 = icmp slt i32 %78, 0, !dbg !13592
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !13589

if.then54:                                        ; preds = %if.else
  call void @exit_program(i32 1) #11, !dbg !13593
  unreachable, !dbg !13593

if.end55:                                         ; preds = %if.else
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then49
  br label %for.inc, !dbg !13595

for.inc:                                          ; preds = %if.end56
  %79 = load i32, i32* %i42, align 4, !dbg !13597
  %inc = add nsw i32 %79, 1, !dbg !13597
  store i32 %inc, i32* %i42, align 4, !dbg !13597
  br label %for.cond, !dbg !13599, !llvm.loop !13600

for.end:                                          ; preds = %for.cond
  %80 = load i8*, i8** %preset, align 8, !dbg !13602
  %tobool57 = icmp ne i8* %80, null, !dbg !13602
  br i1 %tobool57, label %land.lhs.true, label %if.end78, !dbg !13604

land.lhs.true:                                    ; preds = %for.end
  %81 = load i8*, i8** %preset, align 8, !dbg !13605
  %82 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13607
  %enc58 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %82, i32 0, i32 16, !dbg !13608
  %83 = load %struct.AVCodec*, %struct.AVCodec** %enc58, align 8, !dbg !13608
  %name = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %83, i32 0, i32 0, !dbg !13609
  %84 = load i8*, i8** %name, align 8, !dbg !13609
  %call59 = call i32 @get_preset_file_2(i8* %81, i8* %84, %struct.AVIOContext** %s), !dbg !13610
  store i32 %call59, i32* %ret, align 4, !dbg !13611
  %tobool60 = icmp ne i32 %call59, 0, !dbg !13611
  br i1 %tobool60, label %if.end78, label %if.then61, !dbg !13612

if.then61:                                        ; preds = %land.lhs.true
  br label %do.body, !dbg !13613, !llvm.loop !13615

do.body:                                          ; preds = %do.cond, %if.then61
  %85 = load %struct.AVIOContext*, %struct.AVIOContext** %s, align 8, !dbg !13616
  %call62 = call i8* @get_line(%struct.AVIOContext* %85), !dbg !13618
  store i8* %call62, i8** %buf, align 8, !dbg !13619
  %86 = load i8*, i8** %buf, align 8, !dbg !13620
  %arrayidx63 = getelementptr inbounds i8, i8* %86, i64 0, !dbg !13620
  %87 = load i8, i8* %arrayidx63, align 1, !dbg !13620
  %tobool64 = icmp ne i8 %87, 0, !dbg !13620
  br i1 %tobool64, label %lor.lhs.false, label %if.then68, !dbg !13622

lor.lhs.false:                                    ; preds = %do.body
  %88 = load i8*, i8** %buf, align 8, !dbg !13623
  %arrayidx65 = getelementptr inbounds i8, i8* %88, i64 0, !dbg !13623
  %89 = load i8, i8* %arrayidx65, align 1, !dbg !13623
  %conv = sext i8 %89 to i32, !dbg !13623
  %cmp66 = icmp eq i32 %conv, 35, !dbg !13625
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !13626

if.then68:                                        ; preds = %lor.lhs.false, %do.body
  %90 = load i8*, i8** %buf, align 8, !dbg !13627
  call void @av_free(i8* %90), !dbg !13629
  br label %do.cond, !dbg !13630

if.end69:                                         ; preds = %lor.lhs.false
  %91 = load i8*, i8** %buf, align 8, !dbg !13631
  %call70 = call i8* @strchr(i8* %91, i32 61) #10, !dbg !13633
  store i8* %call70, i8** %arg, align 8, !dbg !13634
  %tobool71 = icmp ne i8* %call70, null, !dbg !13634
  br i1 %tobool71, label %if.end73, label %if.then72, !dbg !13635

if.then72:                                        ; preds = %if.end69
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.542, i32 0, i32 0)), !dbg !13636
  call void @exit_program(i32 1) #11, !dbg !13638
  unreachable, !dbg !13638

if.end73:                                         ; preds = %if.end69
  %92 = load i8*, i8** %arg, align 8, !dbg !13639
  %incdec.ptr = getelementptr inbounds i8, i8* %92, i32 1, !dbg !13639
  store i8* %incdec.ptr, i8** %arg, align 8, !dbg !13639
  store i8 0, i8* %92, align 1, !dbg !13640
  %93 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13641
  %encoder_opts74 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %93, i32 0, i32 45, !dbg !13642
  %94 = load i8*, i8** %buf, align 8, !dbg !13643
  %95 = load i8*, i8** %arg, align 8, !dbg !13644
  %call75 = call i32 @av_dict_set(%struct.AVDictionary** %encoder_opts74, i8* %94, i8* %95, i32 16), !dbg !13645
  %96 = load i8*, i8** %buf, align 8, !dbg !13646
  call void @av_free(i8* %96), !dbg !13647
  br label %do.cond, !dbg !13648

do.cond:                                          ; preds = %if.end73, %if.then68
  %97 = load %struct.AVIOContext*, %struct.AVIOContext** %s, align 8, !dbg !13649
  %eof_reached = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %97, i32 0, i32 10, !dbg !13651
  %98 = load i32, i32* %eof_reached, align 8, !dbg !13651
  %tobool76 = icmp ne i32 %98, 0, !dbg !13652
  %lnot = xor i1 %tobool76, true, !dbg !13652
  br i1 %lnot, label %do.body, label %do.end, !dbg !13653, !llvm.loop !13615

do.end:                                           ; preds = %do.cond
  %call77 = call i32 @avio_closep(%struct.AVIOContext** %s), !dbg !13654
  br label %if.end78, !dbg !13655

if.end78:                                         ; preds = %do.end, %land.lhs.true, %for.end
  %99 = load i32, i32* %ret, align 4, !dbg !13656
  %tobool79 = icmp ne i32 %99, 0, !dbg !13656
  br i1 %tobool79, label %if.then80, label %if.end83, !dbg !13658

if.then80:                                        ; preds = %if.end78
  %100 = load i8*, i8** %preset, align 8, !dbg !13659
  %101 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13661
  %file_index81 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %101, i32 0, i32 0, !dbg !13662
  %102 = load i32, i32* %file_index81, align 8, !dbg !13662
  %103 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13663
  %index82 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %103, i32 0, i32 1, !dbg !13664
  %104 = load i32, i32* %index82, align 4, !dbg !13664
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.543, i32 0, i32 0), i8* %100, i32 %102, i32 %104), !dbg !13665
  call void @exit_program(i32 1) #11, !dbg !13666
  unreachable, !dbg !13666

if.end83:                                         ; preds = %if.end78
  br label %if.end89, !dbg !13667

if.else84:                                        ; preds = %if.end34
  %105 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13668
  %g85 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %105, i32 0, i32 0, !dbg !13670
  %106 = load %struct.OptionGroup*, %struct.OptionGroup** %g85, align 8, !dbg !13670
  %codec_opts86 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %106, i32 0, i32 4, !dbg !13671
  %107 = load %struct.AVDictionary*, %struct.AVDictionary** %codec_opts86, align 8, !dbg !13671
  %108 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13672
  %109 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !13673
  %call87 = call %struct.AVDictionary* @filter_codec_opts(%struct.AVDictionary* %107, i32 0, %struct.AVFormatContext* %108, %struct.AVStream* %109, %struct.AVCodec* null), !dbg !13674
  %110 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13675
  %encoder_opts88 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %110, i32 0, i32 45, !dbg !13676
  store %struct.AVDictionary* %call87, %struct.AVDictionary** %encoder_opts88, align 8, !dbg !13677
  br label %if.end89

if.end89:                                         ; preds = %if.else84, %if.end83
  %111 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13678
  %bitexact = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %111, i32 0, i32 50, !dbg !13680
  %112 = load i32, i32* %bitexact, align 4, !dbg !13680
  %tobool90 = icmp ne i32 %112, 0, !dbg !13678
  br i1 %tobool90, label %if.then91, label %if.end93, !dbg !13681

if.then91:                                        ; preds = %if.end89
  %113 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13682
  %enc_ctx92 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %113, i32 0, i32 14, !dbg !13683
  %114 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx92, align 8, !dbg !13683
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %114, i32 0, i32 13, !dbg !13684
  %115 = load i32, i32* %flags, align 4, !dbg !13685
  %or = or i32 %115, 8388608, !dbg !13685
  store i32 %or, i32* %flags, align 4, !dbg !13685
  br label %if.end93, !dbg !13682

if.end93:                                         ; preds = %if.then91, %if.end89
  call void @llvm.dbg.declare(metadata i32* %i94, metadata !13686, metadata !1898), !dbg !13688
  call void @llvm.dbg.declare(metadata i32* %ret95, metadata !13689, metadata !1898), !dbg !13690
  store i32 0, i32* %i94, align 4, !dbg !13691
  br label %for.cond96, !dbg !13693

for.cond96:                                       ; preds = %for.inc119, %if.end93
  %116 = load i32, i32* %i94, align 4, !dbg !13694
  %117 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13697
  %nb_time_bases = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %117, i32 0, i32 120, !dbg !13698
  %118 = load i32, i32* %nb_time_bases, align 8, !dbg !13698
  %cmp97 = icmp slt i32 %116, %118, !dbg !13699
  br i1 %cmp97, label %for.body99, label %for.end121, !dbg !13700

for.body99:                                       ; preds = %for.cond96
  call void @llvm.dbg.declare(metadata i8** %spec100, metadata !13701, metadata !1898), !dbg !13703
  %119 = load i32, i32* %i94, align 4, !dbg !13704
  %idxprom101 = sext i32 %119 to i64, !dbg !13706
  %120 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13706
  %time_bases = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %120, i32 0, i32 119, !dbg !13707
  %121 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %time_bases, align 8, !dbg !13707
  %arrayidx102 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %121, i64 %idxprom101, !dbg !13706
  %specifier103 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx102, i32 0, i32 0, !dbg !13708
  %122 = load i8*, i8** %specifier103, align 8, !dbg !13708
  store i8* %122, i8** %spec100, align 8, !dbg !13709
  %123 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13710
  %124 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !13711
  %125 = load i8*, i8** %spec100, align 8, !dbg !13712
  %call104 = call i32 @check_stream_specifier(%struct.AVFormatContext* %123, %struct.AVStream* %124, i8* %125), !dbg !13713
  store i32 %call104, i32* %ret95, align 4, !dbg !13714
  %cmp105 = icmp sgt i32 %call104, 0, !dbg !13715
  br i1 %cmp105, label %if.then107, label %if.else113, !dbg !13716

if.then107:                                       ; preds = %for.body99
  %126 = load i32, i32* %i94, align 4, !dbg !13717
  %idxprom108 = sext i32 %126 to i64, !dbg !13720
  %127 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13720
  %time_bases109 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %127, i32 0, i32 119, !dbg !13721
  %128 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %time_bases109, align 8, !dbg !13721
  %arrayidx110 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %128, i64 %idxprom108, !dbg !13720
  %u111 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx110, i32 0, i32 1, !dbg !13722
  %str112 = bitcast %union.anon.1* %u111 to i8**, !dbg !13723
  %129 = load i8*, i8** %str112, align 8, !dbg !13723
  store i8* %129, i8** %time_base, align 8, !dbg !13724
  br label %if.end118, !dbg !13725

if.else113:                                       ; preds = %for.body99
  %130 = load i32, i32* %ret95, align 4, !dbg !13726
  %cmp114 = icmp slt i32 %130, 0, !dbg !13729
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !13726

if.then116:                                       ; preds = %if.else113
  call void @exit_program(i32 1) #11, !dbg !13730
  unreachable, !dbg !13730

if.end117:                                        ; preds = %if.else113
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then107
  br label %for.inc119, !dbg !13732

for.inc119:                                       ; preds = %if.end118
  %131 = load i32, i32* %i94, align 4, !dbg !13734
  %inc120 = add nsw i32 %131, 1, !dbg !13734
  store i32 %inc120, i32* %i94, align 4, !dbg !13734
  br label %for.cond96, !dbg !13736, !llvm.loop !13737

for.end121:                                       ; preds = %for.cond96
  %132 = load i8*, i8** %time_base, align 8, !dbg !13739
  %tobool122 = icmp ne i8* %132, null, !dbg !13739
  br i1 %tobool122, label %if.then123, label %if.end136, !dbg !13741

if.then123:                                       ; preds = %for.end121
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q, metadata !13742, metadata !1898), !dbg !13744
  %133 = load i8*, i8** %time_base, align 8, !dbg !13745
  %call124 = call i32 @av_parse_ratio(%struct.AVRational* %q, i8* %133, i32 2147483647, i32 0, i8* null), !dbg !13747
  %cmp125 = icmp slt i32 %call124, 0, !dbg !13748
  br i1 %cmp125, label %if.then133, label %lor.lhs.false127, !dbg !13749

lor.lhs.false127:                                 ; preds = %if.then123
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q, i32 0, i32 0, !dbg !13750
  %134 = load i32, i32* %num, align 4, !dbg !13750
  %cmp128 = icmp sle i32 %134, 0, !dbg !13751
  br i1 %cmp128, label %if.then133, label %lor.lhs.false130, !dbg !13752

lor.lhs.false130:                                 ; preds = %lor.lhs.false127
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q, i32 0, i32 1, !dbg !13753
  %135 = load i32, i32* %den, align 4, !dbg !13753
  %cmp131 = icmp sle i32 %135, 0, !dbg !13755
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !13756

if.then133:                                       ; preds = %lor.lhs.false130, %lor.lhs.false127, %if.then123
  %136 = load i8*, i8** %time_base, align 8, !dbg !13758
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.544, i32 0, i32 0), i8* %136), !dbg !13760
  call void @exit_program(i32 1) #11, !dbg !13761
  unreachable, !dbg !13761

if.end134:                                        ; preds = %lor.lhs.false130
  %137 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !13762
  %time_base135 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %137, i32 0, i32 4, !dbg !13763
  %138 = bitcast %struct.AVRational* %time_base135 to i8*, !dbg !13764
  %139 = bitcast %struct.AVRational* %q to i8*, !dbg !13764
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %139, i64 8, i32 4, i1 false), !dbg !13764
  br label %if.end136, !dbg !13765

if.end136:                                        ; preds = %if.end134, %for.end121
  call void @llvm.dbg.declare(metadata i32* %i137, metadata !13766, metadata !1898), !dbg !13768
  call void @llvm.dbg.declare(metadata i32* %ret138, metadata !13769, metadata !1898), !dbg !13770
  store i32 0, i32* %i137, align 4, !dbg !13771
  br label %for.cond139, !dbg !13773

for.cond139:                                      ; preds = %for.inc162, %if.end136
  %140 = load i32, i32* %i137, align 4, !dbg !13774
  %141 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13777
  %nb_enc_time_bases = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %141, i32 0, i32 122, !dbg !13778
  %142 = load i32, i32* %nb_enc_time_bases, align 8, !dbg !13778
  %cmp140 = icmp slt i32 %140, %142, !dbg !13779
  br i1 %cmp140, label %for.body142, label %for.end164, !dbg !13780

for.body142:                                      ; preds = %for.cond139
  call void @llvm.dbg.declare(metadata i8** %spec143, metadata !13781, metadata !1898), !dbg !13783
  %143 = load i32, i32* %i137, align 4, !dbg !13784
  %idxprom144 = sext i32 %143 to i64, !dbg !13786
  %144 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13786
  %enc_time_bases = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %144, i32 0, i32 121, !dbg !13787
  %145 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %enc_time_bases, align 8, !dbg !13787
  %arrayidx145 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %145, i64 %idxprom144, !dbg !13786
  %specifier146 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx145, i32 0, i32 0, !dbg !13788
  %146 = load i8*, i8** %specifier146, align 8, !dbg !13788
  store i8* %146, i8** %spec143, align 8, !dbg !13789
  %147 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13790
  %148 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !13791
  %149 = load i8*, i8** %spec143, align 8, !dbg !13792
  %call147 = call i32 @check_stream_specifier(%struct.AVFormatContext* %147, %struct.AVStream* %148, i8* %149), !dbg !13793
  store i32 %call147, i32* %ret138, align 4, !dbg !13794
  %cmp148 = icmp sgt i32 %call147, 0, !dbg !13795
  br i1 %cmp148, label %if.then150, label %if.else156, !dbg !13796

if.then150:                                       ; preds = %for.body142
  %150 = load i32, i32* %i137, align 4, !dbg !13797
  %idxprom151 = sext i32 %150 to i64, !dbg !13800
  %151 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13800
  %enc_time_bases152 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %151, i32 0, i32 121, !dbg !13801
  %152 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %enc_time_bases152, align 8, !dbg !13801
  %arrayidx153 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %152, i64 %idxprom151, !dbg !13800
  %u154 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx153, i32 0, i32 1, !dbg !13802
  %str155 = bitcast %union.anon.1* %u154 to i8**, !dbg !13803
  %153 = load i8*, i8** %str155, align 8, !dbg !13803
  store i8* %153, i8** %time_base, align 8, !dbg !13804
  br label %if.end161, !dbg !13805

if.else156:                                       ; preds = %for.body142
  %154 = load i32, i32* %ret138, align 4, !dbg !13806
  %cmp157 = icmp slt i32 %154, 0, !dbg !13809
  br i1 %cmp157, label %if.then159, label %if.end160, !dbg !13806

if.then159:                                       ; preds = %if.else156
  call void @exit_program(i32 1) #11, !dbg !13810
  unreachable, !dbg !13810

if.end160:                                        ; preds = %if.else156
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then150
  br label %for.inc162, !dbg !13812

for.inc162:                                       ; preds = %if.end161
  %155 = load i32, i32* %i137, align 4, !dbg !13814
  %inc163 = add nsw i32 %155, 1, !dbg !13814
  store i32 %inc163, i32* %i137, align 4, !dbg !13814
  br label %for.cond139, !dbg !13816, !llvm.loop !13817

for.end164:                                       ; preds = %for.cond139
  %156 = load i8*, i8** %time_base, align 8, !dbg !13819
  %tobool165 = icmp ne i8* %156, null, !dbg !13819
  br i1 %tobool165, label %if.then166, label %if.end177, !dbg !13821

if.then166:                                       ; preds = %for.end164
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q167, metadata !13822, metadata !1898), !dbg !13824
  %157 = load i8*, i8** %time_base, align 8, !dbg !13825
  %call168 = call i32 @av_parse_ratio(%struct.AVRational* %q167, i8* %157, i32 2147483647, i32 0, i8* null), !dbg !13827
  %cmp169 = icmp slt i32 %call168, 0, !dbg !13828
  br i1 %cmp169, label %if.then175, label %lor.lhs.false171, !dbg !13829

lor.lhs.false171:                                 ; preds = %if.then166
  %den172 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q167, i32 0, i32 1, !dbg !13830
  %158 = load i32, i32* %den172, align 4, !dbg !13830
  %cmp173 = icmp sle i32 %158, 0, !dbg !13831
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !13832

if.then175:                                       ; preds = %lor.lhs.false171, %if.then166
  %159 = load i8*, i8** %time_base, align 8, !dbg !13834
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.544, i32 0, i32 0), i8* %159), !dbg !13836
  call void @exit_program(i32 1) #11, !dbg !13837
  unreachable, !dbg !13837

if.end176:                                        ; preds = %lor.lhs.false171
  %160 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13838
  %enc_timebase = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %160, i32 0, i32 11, !dbg !13839
  %161 = bitcast %struct.AVRational* %enc_timebase to i8*, !dbg !13840
  %162 = bitcast %struct.AVRational* %q167 to i8*, !dbg !13840
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %161, i8* %162, i64 8, i32 4, i1 false), !dbg !13840
  br label %if.end177, !dbg !13841

if.end177:                                        ; preds = %if.end176, %for.end164
  %163 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13842
  %max_frames = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %163, i32 0, i32 17, !dbg !13843
  store i64 9223372036854775807, i64* %max_frames, align 8, !dbg !13844
  call void @llvm.dbg.declare(metadata i32* %i178, metadata !13845, metadata !1898), !dbg !13847
  call void @llvm.dbg.declare(metadata i32* %ret179, metadata !13848, metadata !1898), !dbg !13849
  store i32 0, i32* %i178, align 4, !dbg !13850
  br label %for.cond180, !dbg !13852

for.cond180:                                      ; preds = %for.inc204, %if.end177
  %164 = load i32, i32* %i178, align 4, !dbg !13853
  %165 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13856
  %nb_max_frames = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %165, i32 0, i32 60, !dbg !13857
  %166 = load i32, i32* %nb_max_frames, align 8, !dbg !13857
  %cmp181 = icmp slt i32 %164, %166, !dbg !13858
  br i1 %cmp181, label %for.body183, label %for.end206, !dbg !13859

for.body183:                                      ; preds = %for.cond180
  call void @llvm.dbg.declare(metadata i8** %spec184, metadata !13860, metadata !1898), !dbg !13862
  %167 = load i32, i32* %i178, align 4, !dbg !13863
  %idxprom185 = sext i32 %167 to i64, !dbg !13865
  %168 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13865
  %max_frames186 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %168, i32 0, i32 59, !dbg !13866
  %169 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %max_frames186, align 8, !dbg !13866
  %arrayidx187 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %169, i64 %idxprom185, !dbg !13865
  %specifier188 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx187, i32 0, i32 0, !dbg !13867
  %170 = load i8*, i8** %specifier188, align 8, !dbg !13867
  store i8* %170, i8** %spec184, align 8, !dbg !13868
  %171 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13869
  %172 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !13870
  %173 = load i8*, i8** %spec184, align 8, !dbg !13871
  %call189 = call i32 @check_stream_specifier(%struct.AVFormatContext* %171, %struct.AVStream* %172, i8* %173), !dbg !13872
  store i32 %call189, i32* %ret179, align 4, !dbg !13873
  %cmp190 = icmp sgt i32 %call189, 0, !dbg !13874
  br i1 %cmp190, label %if.then192, label %if.else198, !dbg !13875

if.then192:                                       ; preds = %for.body183
  %174 = load i32, i32* %i178, align 4, !dbg !13876
  %idxprom193 = sext i32 %174 to i64, !dbg !13879
  %175 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13879
  %max_frames194 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %175, i32 0, i32 59, !dbg !13880
  %176 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %max_frames194, align 8, !dbg !13880
  %arrayidx195 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %176, i64 %idxprom193, !dbg !13879
  %u196 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx195, i32 0, i32 1, !dbg !13881
  %i64 = bitcast %union.anon.1* %u196 to i64*, !dbg !13882
  %177 = load i64, i64* %i64, align 8, !dbg !13882
  %178 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13883
  %max_frames197 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %178, i32 0, i32 17, !dbg !13884
  store i64 %177, i64* %max_frames197, align 8, !dbg !13885
  br label %if.end203, !dbg !13883

if.else198:                                       ; preds = %for.body183
  %179 = load i32, i32* %ret179, align 4, !dbg !13886
  %cmp199 = icmp slt i32 %179, 0, !dbg !13889
  br i1 %cmp199, label %if.then201, label %if.end202, !dbg !13886

if.then201:                                       ; preds = %if.else198
  call void @exit_program(i32 1) #11, !dbg !13890
  unreachable, !dbg !13890

if.end202:                                        ; preds = %if.else198
  br label %if.end203

if.end203:                                        ; preds = %if.end202, %if.then192
  br label %for.inc204, !dbg !13892

for.inc204:                                       ; preds = %if.end203
  %180 = load i32, i32* %i178, align 4, !dbg !13894
  %inc205 = add nsw i32 %180, 1, !dbg !13894
  store i32 %inc205, i32* %i178, align 4, !dbg !13894
  br label %for.cond180, !dbg !13896, !llvm.loop !13897

for.end206:                                       ; preds = %for.cond180
  store i32 0, i32* %i, align 4, !dbg !13899
  br label %for.cond207, !dbg !13901

for.cond207:                                      ; preds = %for.inc222, %for.end206
  %181 = load i32, i32* %i, align 4, !dbg !13902
  %182 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13905
  %nb_max_frames208 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %182, i32 0, i32 60, !dbg !13906
  %183 = load i32, i32* %nb_max_frames208, align 8, !dbg !13906
  %cmp209 = icmp slt i32 %181, %183, !dbg !13907
  br i1 %cmp209, label %for.body211, label %for.end224, !dbg !13908

for.body211:                                      ; preds = %for.cond207
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13909, metadata !1898), !dbg !13911
  %184 = load i32, i32* %i, align 4, !dbg !13912
  %idxprom212 = sext i32 %184 to i64, !dbg !13913
  %185 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13913
  %max_frames213 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %185, i32 0, i32 59, !dbg !13914
  %186 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %max_frames213, align 8, !dbg !13914
  %arrayidx214 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %186, i64 %idxprom212, !dbg !13913
  %specifier215 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx214, i32 0, i32 0, !dbg !13915
  %187 = load i8*, i8** %specifier215, align 8, !dbg !13915
  store i8* %187, i8** %p, align 8, !dbg !13911
  %188 = load i8*, i8** %p, align 8, !dbg !13916
  %189 = load i8, i8* %188, align 1, !dbg !13918
  %tobool216 = icmp ne i8 %189, 0, !dbg !13918
  br i1 %tobool216, label %if.end221, label %land.lhs.true217, !dbg !13919

land.lhs.true217:                                 ; preds = %for.body211
  %190 = load i32, i32* %type.addr, align 4, !dbg !13920
  %cmp218 = icmp ne i32 %190, 0, !dbg !13922
  br i1 %cmp218, label %if.then220, label %if.end221, !dbg !13923

if.then220:                                       ; preds = %land.lhs.true217
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.545, i32 0, i32 0)), !dbg !13924
  br label %for.end224, !dbg !13926

if.end221:                                        ; preds = %land.lhs.true217, %for.body211
  br label %for.inc222, !dbg !13927

for.inc222:                                       ; preds = %if.end221
  %191 = load i32, i32* %i, align 4, !dbg !13928
  %inc223 = add nsw i32 %191, 1, !dbg !13928
  store i32 %inc223, i32* %i, align 4, !dbg !13928
  br label %for.cond207, !dbg !13930, !llvm.loop !13931

for.end224:                                       ; preds = %if.then220, %for.cond207
  %192 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13933
  %copy_prior_start = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %192, i32 0, i32 57, !dbg !13934
  store i32 -1, i32* %copy_prior_start, align 4, !dbg !13935
  call void @llvm.dbg.declare(metadata i32* %i225, metadata !13936, metadata !1898), !dbg !13938
  call void @llvm.dbg.declare(metadata i32* %ret226, metadata !13939, metadata !1898), !dbg !13940
  store i32 0, i32* %i225, align 4, !dbg !13941
  br label %for.cond227, !dbg !13943

for.cond227:                                      ; preds = %for.inc252, %for.end224
  %193 = load i32, i32* %i225, align 4, !dbg !13944
  %194 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13947
  %nb_copy_prior_start = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %194, i32 0, i32 92, !dbg !13948
  %195 = load i32, i32* %nb_copy_prior_start, align 8, !dbg !13948
  %cmp228 = icmp slt i32 %193, %195, !dbg !13949
  br i1 %cmp228, label %for.body230, label %for.end254, !dbg !13950

for.body230:                                      ; preds = %for.cond227
  call void @llvm.dbg.declare(metadata i8** %spec231, metadata !13951, metadata !1898), !dbg !13953
  %196 = load i32, i32* %i225, align 4, !dbg !13954
  %idxprom232 = sext i32 %196 to i64, !dbg !13956
  %197 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13956
  %copy_prior_start233 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %197, i32 0, i32 91, !dbg !13957
  %198 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %copy_prior_start233, align 8, !dbg !13957
  %arrayidx234 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %198, i64 %idxprom232, !dbg !13956
  %specifier235 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx234, i32 0, i32 0, !dbg !13958
  %199 = load i8*, i8** %specifier235, align 8, !dbg !13958
  store i8* %199, i8** %spec231, align 8, !dbg !13959
  %200 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !13960
  %201 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !13961
  %202 = load i8*, i8** %spec231, align 8, !dbg !13962
  %call236 = call i32 @check_stream_specifier(%struct.AVFormatContext* %200, %struct.AVStream* %201, i8* %202), !dbg !13963
  store i32 %call236, i32* %ret226, align 4, !dbg !13964
  %cmp237 = icmp sgt i32 %call236, 0, !dbg !13965
  br i1 %cmp237, label %if.then239, label %if.else246, !dbg !13966

if.then239:                                       ; preds = %for.body230
  %203 = load i32, i32* %i225, align 4, !dbg !13967
  %idxprom240 = sext i32 %203 to i64, !dbg !13970
  %204 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !13970
  %copy_prior_start241 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %204, i32 0, i32 91, !dbg !13971
  %205 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %copy_prior_start241, align 8, !dbg !13971
  %arrayidx242 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %205, i64 %idxprom240, !dbg !13970
  %u243 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx242, i32 0, i32 1, !dbg !13972
  %i244 = bitcast %union.anon.1* %u243 to i32*, !dbg !13973
  %206 = load i32, i32* %i244, align 8, !dbg !13973
  %207 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !13974
  %copy_prior_start245 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %207, i32 0, i32 57, !dbg !13975
  store i32 %206, i32* %copy_prior_start245, align 4, !dbg !13976
  br label %if.end251, !dbg !13974

if.else246:                                       ; preds = %for.body230
  %208 = load i32, i32* %ret226, align 4, !dbg !13977
  %cmp247 = icmp slt i32 %208, 0, !dbg !13980
  br i1 %cmp247, label %if.then249, label %if.end250, !dbg !13977

if.then249:                                       ; preds = %if.else246
  call void @exit_program(i32 1) #11, !dbg !13981
  unreachable, !dbg !13981

if.end250:                                        ; preds = %if.else246
  br label %if.end251

if.end251:                                        ; preds = %if.end250, %if.then239
  br label %for.inc252, !dbg !13983

for.inc252:                                       ; preds = %if.end251
  %209 = load i32, i32* %i225, align 4, !dbg !13985
  %inc253 = add nsw i32 %209, 1, !dbg !13985
  store i32 %inc253, i32* %i225, align 4, !dbg !13985
  br label %for.cond227, !dbg !13987, !llvm.loop !13988

for.end254:                                       ; preds = %for.cond227
  call void @llvm.dbg.declare(metadata i32* %i255, metadata !13990, metadata !1898), !dbg !13992
  call void @llvm.dbg.declare(metadata i32* %ret256, metadata !13993, metadata !1898), !dbg !13994
  store i32 0, i32* %i255, align 4, !dbg !13995
  br label %for.cond257, !dbg !13997

for.cond257:                                      ; preds = %for.inc280, %for.end254
  %210 = load i32, i32* %i255, align 4, !dbg !13998
  %211 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14001
  %nb_bitstream_filters = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %211, i32 0, i32 62, !dbg !14002
  %212 = load i32, i32* %nb_bitstream_filters, align 8, !dbg !14002
  %cmp258 = icmp slt i32 %210, %212, !dbg !14003
  br i1 %cmp258, label %for.body260, label %for.end282, !dbg !14004

for.body260:                                      ; preds = %for.cond257
  call void @llvm.dbg.declare(metadata i8** %spec261, metadata !14005, metadata !1898), !dbg !14007
  %213 = load i32, i32* %i255, align 4, !dbg !14008
  %idxprom262 = sext i32 %213 to i64, !dbg !14010
  %214 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14010
  %bitstream_filters = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %214, i32 0, i32 61, !dbg !14011
  %215 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %bitstream_filters, align 8, !dbg !14011
  %arrayidx263 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %215, i64 %idxprom262, !dbg !14010
  %specifier264 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx263, i32 0, i32 0, !dbg !14012
  %216 = load i8*, i8** %specifier264, align 8, !dbg !14012
  store i8* %216, i8** %spec261, align 8, !dbg !14013
  %217 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !14014
  %218 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !14015
  %219 = load i8*, i8** %spec261, align 8, !dbg !14016
  %call265 = call i32 @check_stream_specifier(%struct.AVFormatContext* %217, %struct.AVStream* %218, i8* %219), !dbg !14017
  store i32 %call265, i32* %ret256, align 4, !dbg !14018
  %cmp266 = icmp sgt i32 %call265, 0, !dbg !14019
  br i1 %cmp266, label %if.then268, label %if.else274, !dbg !14020

if.then268:                                       ; preds = %for.body260
  %220 = load i32, i32* %i255, align 4, !dbg !14021
  %idxprom269 = sext i32 %220 to i64, !dbg !14024
  %221 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14024
  %bitstream_filters270 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %221, i32 0, i32 61, !dbg !14025
  %222 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %bitstream_filters270, align 8, !dbg !14025
  %arrayidx271 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %222, i64 %idxprom269, !dbg !14024
  %u272 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx271, i32 0, i32 1, !dbg !14026
  %str273 = bitcast %union.anon.1* %u272 to i8**, !dbg !14027
  %223 = load i8*, i8** %str273, align 8, !dbg !14027
  store i8* %223, i8** %bsfs, align 8, !dbg !14028
  br label %if.end279, !dbg !14029

if.else274:                                       ; preds = %for.body260
  %224 = load i32, i32* %ret256, align 4, !dbg !14030
  %cmp275 = icmp slt i32 %224, 0, !dbg !14033
  br i1 %cmp275, label %if.then277, label %if.end278, !dbg !14030

if.then277:                                       ; preds = %if.else274
  call void @exit_program(i32 1) #11, !dbg !14034
  unreachable, !dbg !14034

if.end278:                                        ; preds = %if.else274
  br label %if.end279

if.end279:                                        ; preds = %if.end278, %if.then268
  br label %for.inc280, !dbg !14036

for.inc280:                                       ; preds = %if.end279
  %225 = load i32, i32* %i255, align 4, !dbg !14038
  %inc281 = add nsw i32 %225, 1, !dbg !14038
  store i32 %inc281, i32* %i255, align 4, !dbg !14038
  br label %for.cond257, !dbg !14040, !llvm.loop !14041

for.end282:                                       ; preds = %for.cond257
  br label %while.cond, !dbg !14043

while.cond:                                       ; preds = %if.end348, %for.end282
  %226 = load i8*, i8** %bsfs, align 8, !dbg !14044
  %tobool283 = icmp ne i8* %226, null, !dbg !14044
  br i1 %tobool283, label %land.rhs, label %land.end, !dbg !14046

land.rhs:                                         ; preds = %while.cond
  %227 = load i8*, i8** %bsfs, align 8, !dbg !14047
  %228 = load i8, i8* %227, align 1, !dbg !14049
  %conv284 = sext i8 %228 to i32, !dbg !14049
  %tobool285 = icmp ne i32 %conv284, 0, !dbg !14050
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %229 = phi i1 [ false, %while.cond ], [ %tobool285, %land.rhs ]
  br i1 %229, label %while.body, label %while.end, !dbg !14051

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.AVBitStreamFilter** %filter, metadata !14053, metadata !1898), !dbg !14058
  call void @llvm.dbg.declare(metadata i8** %bsf, metadata !14059, metadata !1898), !dbg !14060
  call void @llvm.dbg.declare(metadata i8** %bsf_options_str, metadata !14061, metadata !1898), !dbg !14062
  call void @llvm.dbg.declare(metadata i8** %bsf_name, metadata !14063, metadata !1898), !dbg !14064
  %call286 = call i8* @av_get_token(i8** %bsfs, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.546, i32 0, i32 0)), !dbg !14065
  store i8* %call286, i8** %bsf, align 8, !dbg !14066
  %230 = load i8*, i8** %bsf, align 8, !dbg !14067
  %tobool287 = icmp ne i8* %230, null, !dbg !14067
  br i1 %tobool287, label %if.end289, label %if.then288, !dbg !14069

if.then288:                                       ; preds = %while.body
  call void @exit_program(i32 1) #11, !dbg !14070
  unreachable, !dbg !14070

if.end289:                                        ; preds = %while.body
  %231 = load i8*, i8** %bsf, align 8, !dbg !14071
  %call290 = call i8* @av_strtok(i8* %231, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.501, i32 0, i32 0), i8** %bsf_options_str), !dbg !14072
  store i8* %call290, i8** %bsf_name, align 8, !dbg !14073
  %232 = load i8*, i8** %bsf_name, align 8, !dbg !14074
  %tobool291 = icmp ne i8* %232, null, !dbg !14074
  br i1 %tobool291, label %if.end293, label %if.then292, !dbg !14076

if.then292:                                       ; preds = %if.end289
  call void @exit_program(i32 1) #11, !dbg !14077
  unreachable, !dbg !14077

if.end293:                                        ; preds = %if.end289
  %233 = load i8*, i8** %bsf_name, align 8, !dbg !14078
  %call294 = call %struct.AVBitStreamFilter* @av_bsf_get_by_name(i8* %233), !dbg !14079
  store %struct.AVBitStreamFilter* %call294, %struct.AVBitStreamFilter** %filter, align 8, !dbg !14080
  %234 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %filter, align 8, !dbg !14081
  %tobool295 = icmp ne %struct.AVBitStreamFilter* %234, null, !dbg !14081
  br i1 %tobool295, label %if.end297, label %if.then296, !dbg !14083

if.then296:                                       ; preds = %if.end293
  %235 = load i8*, i8** %bsf_name, align 8, !dbg !14084
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.547, i32 0, i32 0), i8* %235), !dbg !14086
  call void @exit_program(i32 1) #11, !dbg !14087
  unreachable, !dbg !14087

if.end297:                                        ; preds = %if.end293
  %236 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14088
  %bsf_ctx = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %236, i32 0, i32 13, !dbg !14089
  %237 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsf_ctx, align 8, !dbg !14089
  %238 = bitcast %struct.AVBSFContext** %237 to i8*, !dbg !14088
  %239 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14090
  %nb_bitstream_filters298 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %239, i32 0, i32 12, !dbg !14091
  %240 = load i32, i32* %nb_bitstream_filters298, align 8, !dbg !14091
  %add299 = add nsw i32 %240, 1, !dbg !14092
  %conv300 = sext i32 %add299 to i64, !dbg !14090
  %call301 = call i8* @av_realloc_array(i8* %238, i64 %conv300, i64 8), !dbg !14093
  %241 = bitcast i8* %call301 to %struct.AVBSFContext**, !dbg !14093
  %242 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14094
  %bsf_ctx302 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %242, i32 0, i32 13, !dbg !14095
  store %struct.AVBSFContext** %241, %struct.AVBSFContext*** %bsf_ctx302, align 8, !dbg !14096
  %243 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14097
  %bsf_ctx303 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %243, i32 0, i32 13, !dbg !14099
  %244 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsf_ctx303, align 8, !dbg !14099
  %tobool304 = icmp ne %struct.AVBSFContext** %244, null, !dbg !14097
  br i1 %tobool304, label %if.end306, label %if.then305, !dbg !14100

if.then305:                                       ; preds = %if.end297
  call void @exit_program(i32 1) #11, !dbg !14101
  unreachable, !dbg !14101

if.end306:                                        ; preds = %if.end297
  %245 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %filter, align 8, !dbg !14102
  %246 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14103
  %nb_bitstream_filters307 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %246, i32 0, i32 12, !dbg !14104
  %247 = load i32, i32* %nb_bitstream_filters307, align 8, !dbg !14104
  %idxprom308 = sext i32 %247 to i64, !dbg !14105
  %248 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14105
  %bsf_ctx309 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %248, i32 0, i32 13, !dbg !14106
  %249 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsf_ctx309, align 8, !dbg !14106
  %arrayidx310 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %249, i64 %idxprom308, !dbg !14105
  %call311 = call i32 @av_bsf_alloc(%struct.AVBitStreamFilter* %245, %struct.AVBSFContext** %arrayidx310), !dbg !14107
  store i32 %call311, i32* %ret, align 4, !dbg !14108
  %250 = load i32, i32* %ret, align 4, !dbg !14109
  %cmp312 = icmp slt i32 %250, 0, !dbg !14111
  br i1 %cmp312, label %if.then314, label %if.end315, !dbg !14112

if.then314:                                       ; preds = %if.end306
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.548, i32 0, i32 0)), !dbg !14113
  call void @exit_program(i32 1) #11, !dbg !14115
  unreachable, !dbg !14115

if.end315:                                        ; preds = %if.end306
  %251 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14116
  %nb_bitstream_filters316 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %251, i32 0, i32 12, !dbg !14117
  %252 = load i32, i32* %nb_bitstream_filters316, align 8, !dbg !14118
  %inc317 = add nsw i32 %252, 1, !dbg !14118
  store i32 %inc317, i32* %nb_bitstream_filters316, align 8, !dbg !14118
  %253 = load i8*, i8** %bsf_options_str, align 8, !dbg !14119
  %tobool318 = icmp ne i8* %253, null, !dbg !14119
  br i1 %tobool318, label %land.lhs.true319, label %if.end344, !dbg !14121

land.lhs.true319:                                 ; preds = %if.end315
  %254 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %filter, align 8, !dbg !14122
  %priv_class = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %254, i32 0, i32 2, !dbg !14124
  %255 = load %struct.AVClass*, %struct.AVClass** %priv_class, align 8, !dbg !14124
  %tobool320 = icmp ne %struct.AVClass* %255, null, !dbg !14122
  br i1 %tobool320, label %if.then321, label %if.end344, !dbg !14125

if.then321:                                       ; preds = %land.lhs.true319
  call void @llvm.dbg.declare(metadata %struct.AVOption** %opt, metadata !14126, metadata !1898), !dbg !14128
  %256 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14129
  %nb_bitstream_filters322 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %256, i32 0, i32 12, !dbg !14130
  %257 = load i32, i32* %nb_bitstream_filters322, align 8, !dbg !14130
  %sub323 = sub nsw i32 %257, 1, !dbg !14131
  %idxprom324 = sext i32 %sub323 to i64, !dbg !14132
  %258 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14132
  %bsf_ctx325 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %258, i32 0, i32 13, !dbg !14133
  %259 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsf_ctx325, align 8, !dbg !14133
  %arrayidx326 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %259, i64 %idxprom324, !dbg !14132
  %260 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx326, align 8, !dbg !14132
  %priv_data = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %260, i32 0, i32 3, !dbg !14134
  %261 = load i8*, i8** %priv_data, align 8, !dbg !14134
  %call327 = call %struct.AVOption* @av_opt_next(i8* %261, %struct.AVOption* null), !dbg !14135
  store %struct.AVOption* %call327, %struct.AVOption** %opt, align 8, !dbg !14128
  call void @llvm.dbg.declare(metadata [2 x i8*]* %shorthand, metadata !14136, metadata !1898), !dbg !14138
  %262 = bitcast [2 x i8*]* %shorthand to i8*, !dbg !14138
  call void @llvm.memset.p0i8.i64(i8* %262, i8 0, i64 16, i32 16, i1 false), !dbg !14138
  %263 = load %struct.AVOption*, %struct.AVOption** %opt, align 8, !dbg !14139
  %tobool328 = icmp ne %struct.AVOption* %263, null, !dbg !14139
  br i1 %tobool328, label %if.then329, label %if.end332, !dbg !14141

if.then329:                                       ; preds = %if.then321
  %264 = load %struct.AVOption*, %struct.AVOption** %opt, align 8, !dbg !14142
  %name330 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %264, i32 0, i32 0, !dbg !14143
  %265 = load i8*, i8** %name330, align 8, !dbg !14143
  %arrayidx331 = getelementptr inbounds [2 x i8*], [2 x i8*]* %shorthand, i64 0, i64 0, !dbg !14144
  store i8* %265, i8** %arrayidx331, align 16, !dbg !14145
  br label %if.end332, !dbg !14144

if.end332:                                        ; preds = %if.then329, %if.then321
  %266 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14146
  %nb_bitstream_filters333 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %266, i32 0, i32 12, !dbg !14147
  %267 = load i32, i32* %nb_bitstream_filters333, align 8, !dbg !14147
  %sub334 = sub nsw i32 %267, 1, !dbg !14148
  %idxprom335 = sext i32 %sub334 to i64, !dbg !14149
  %268 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14149
  %bsf_ctx336 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %268, i32 0, i32 13, !dbg !14150
  %269 = load %struct.AVBSFContext**, %struct.AVBSFContext*** %bsf_ctx336, align 8, !dbg !14150
  %arrayidx337 = getelementptr inbounds %struct.AVBSFContext*, %struct.AVBSFContext** %269, i64 %idxprom335, !dbg !14149
  %270 = load %struct.AVBSFContext*, %struct.AVBSFContext** %arrayidx337, align 8, !dbg !14149
  %priv_data338 = getelementptr inbounds %struct.AVBSFContext, %struct.AVBSFContext* %270, i32 0, i32 3, !dbg !14151
  %271 = load i8*, i8** %priv_data338, align 8, !dbg !14151
  %272 = load i8*, i8** %bsf_options_str, align 8, !dbg !14152
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %shorthand, i32 0, i32 0, !dbg !14153
  %call339 = call i32 @av_opt_set_from_string(i8* %271, i8* %272, i8** %arraydecay, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.501, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.500, i32 0, i32 0)), !dbg !14154
  store i32 %call339, i32* %ret, align 4, !dbg !14155
  %273 = load i32, i32* %ret, align 4, !dbg !14156
  %cmp340 = icmp slt i32 %273, 0, !dbg !14158
  br i1 %cmp340, label %if.then342, label %if.end343, !dbg !14159

if.then342:                                       ; preds = %if.end332
  %274 = load i8*, i8** %bsf_name, align 8, !dbg !14160
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.549, i32 0, i32 0), i8* %274), !dbg !14162
  call void @exit_program(i32 1) #11, !dbg !14163
  unreachable, !dbg !14163

if.end343:                                        ; preds = %if.end332
  br label %if.end344, !dbg !14164

if.end344:                                        ; preds = %if.end343, %land.lhs.true319, %if.end315
  %275 = bitcast i8** %bsf to i8*, !dbg !14165
  call void @av_freep(i8* %275), !dbg !14166
  %276 = load i8*, i8** %bsfs, align 8, !dbg !14167
  %277 = load i8, i8* %276, align 1, !dbg !14169
  %tobool345 = icmp ne i8 %277, 0, !dbg !14169
  br i1 %tobool345, label %if.then346, label %if.end348, !dbg !14170

if.then346:                                       ; preds = %if.end344
  %278 = load i8*, i8** %bsfs, align 8, !dbg !14171
  %incdec.ptr347 = getelementptr inbounds i8, i8* %278, i32 1, !dbg !14171
  store i8* %incdec.ptr347, i8** %bsfs, align 8, !dbg !14171
  br label %if.end348, !dbg !14172

if.end348:                                        ; preds = %if.then346, %if.end344
  br label %while.cond, !dbg !14173, !llvm.loop !14175

while.end:                                        ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %i349, metadata !14176, metadata !1898), !dbg !14178
  call void @llvm.dbg.declare(metadata i32* %ret350, metadata !14179, metadata !1898), !dbg !14180
  store i32 0, i32* %i349, align 4, !dbg !14181
  br label %for.cond351, !dbg !14183

for.cond351:                                      ; preds = %for.inc374, %while.end
  %279 = load i32, i32* %i349, align 4, !dbg !14184
  %280 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14187
  %nb_codec_tags = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %280, i32 0, i32 64, !dbg !14188
  %281 = load i32, i32* %nb_codec_tags, align 8, !dbg !14188
  %cmp352 = icmp slt i32 %279, %281, !dbg !14189
  br i1 %cmp352, label %for.body354, label %for.end376, !dbg !14190

for.body354:                                      ; preds = %for.cond351
  call void @llvm.dbg.declare(metadata i8** %spec355, metadata !14191, metadata !1898), !dbg !14193
  %282 = load i32, i32* %i349, align 4, !dbg !14194
  %idxprom356 = sext i32 %282 to i64, !dbg !14196
  %283 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14196
  %codec_tags = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %283, i32 0, i32 63, !dbg !14197
  %284 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_tags, align 8, !dbg !14197
  %arrayidx357 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %284, i64 %idxprom356, !dbg !14196
  %specifier358 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx357, i32 0, i32 0, !dbg !14198
  %285 = load i8*, i8** %specifier358, align 8, !dbg !14198
  store i8* %285, i8** %spec355, align 8, !dbg !14199
  %286 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !14200
  %287 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !14201
  %288 = load i8*, i8** %spec355, align 8, !dbg !14202
  %call359 = call i32 @check_stream_specifier(%struct.AVFormatContext* %286, %struct.AVStream* %287, i8* %288), !dbg !14203
  store i32 %call359, i32* %ret350, align 4, !dbg !14204
  %cmp360 = icmp sgt i32 %call359, 0, !dbg !14205
  br i1 %cmp360, label %if.then362, label %if.else368, !dbg !14206

if.then362:                                       ; preds = %for.body354
  %289 = load i32, i32* %i349, align 4, !dbg !14207
  %idxprom363 = sext i32 %289 to i64, !dbg !14210
  %290 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14210
  %codec_tags364 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %290, i32 0, i32 63, !dbg !14211
  %291 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_tags364, align 8, !dbg !14211
  %arrayidx365 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %291, i64 %idxprom363, !dbg !14210
  %u366 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx365, i32 0, i32 1, !dbg !14212
  %str367 = bitcast %union.anon.1* %u366 to i8**, !dbg !14213
  %292 = load i8*, i8** %str367, align 8, !dbg !14213
  store i8* %292, i8** %codec_tag, align 8, !dbg !14214
  br label %if.end373, !dbg !14215

if.else368:                                       ; preds = %for.body354
  %293 = load i32, i32* %ret350, align 4, !dbg !14216
  %cmp369 = icmp slt i32 %293, 0, !dbg !14219
  br i1 %cmp369, label %if.then371, label %if.end372, !dbg !14216

if.then371:                                       ; preds = %if.else368
  call void @exit_program(i32 1) #11, !dbg !14220
  unreachable, !dbg !14220

if.end372:                                        ; preds = %if.else368
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %if.then362
  br label %for.inc374, !dbg !14222

for.inc374:                                       ; preds = %if.end373
  %294 = load i32, i32* %i349, align 4, !dbg !14224
  %inc375 = add nsw i32 %294, 1, !dbg !14224
  store i32 %inc375, i32* %i349, align 4, !dbg !14224
  br label %for.cond351, !dbg !14226, !llvm.loop !14227

for.end376:                                       ; preds = %for.cond351
  %295 = load i8*, i8** %codec_tag, align 8, !dbg !14229
  %tobool377 = icmp ne i8* %295, null, !dbg !14229
  br i1 %tobool377, label %if.then378, label %if.end389, !dbg !14231

if.then378:                                       ; preds = %for.end376
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !14232, metadata !1898), !dbg !14234
  %296 = load i8*, i8** %codec_tag, align 8, !dbg !14235
  %call379 = call i64 @strtol(i8* %296, i8** %next, i32 0) #12, !dbg !14236
  %conv380 = trunc i64 %call379 to i32, !dbg !14236
  store i32 %conv380, i32* %tag, align 4, !dbg !14234
  %297 = load i8*, i8** %next, align 8, !dbg !14237
  %298 = load i8, i8* %297, align 1, !dbg !14239
  %tobool381 = icmp ne i8 %298, 0, !dbg !14239
  br i1 %tobool381, label %if.then382, label %if.end383, !dbg !14240

if.then382:                                       ; preds = %if.then378
  %299 = load i8*, i8** %codec_tag, align 8, !dbg !14241
  %300 = bitcast i8* %299 to %union.unaligned_32*, !dbg !14242
  %l = bitcast %union.unaligned_32* %300 to i32*, !dbg !14242
  %301 = load i32, i32* %l, align 1, !dbg !14242
  store i32 %301, i32* %tag, align 4, !dbg !14243
  br label %if.end383, !dbg !14244

if.end383:                                        ; preds = %if.then382, %if.then378
  %302 = load i32, i32* %tag, align 4, !dbg !14245
  %303 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14246
  %enc_ctx384 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %303, i32 0, i32 14, !dbg !14247
  %304 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx384, align 8, !dbg !14247
  %codec_tag385 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %304, i32 0, i32 5, !dbg !14248
  store i32 %302, i32* %codec_tag385, align 4, !dbg !14249
  %305 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14250
  %st386 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %305, i32 0, i32 3, !dbg !14251
  %306 = load %struct.AVStream*, %struct.AVStream** %st386, align 8, !dbg !14251
  %codecpar387 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %306, i32 0, i32 19, !dbg !14252
  %307 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar387, align 8, !dbg !14252
  %codec_tag388 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %307, i32 0, i32 2, !dbg !14253
  store i32 %302, i32* %codec_tag388, align 8, !dbg !14254
  br label %if.end389, !dbg !14255

if.end389:                                        ; preds = %if.end383, %for.end376
  call void @llvm.dbg.declare(metadata i32* %i390, metadata !14256, metadata !1898), !dbg !14258
  call void @llvm.dbg.declare(metadata i32* %ret391, metadata !14259, metadata !1898), !dbg !14260
  store i32 0, i32* %i390, align 4, !dbg !14261
  br label %for.cond392, !dbg !14263

for.cond392:                                      ; preds = %for.inc415, %if.end389
  %308 = load i32, i32* %i390, align 4, !dbg !14264
  %309 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14267
  %nb_qscale = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %309, i32 0, i32 68, !dbg !14268
  %310 = load i32, i32* %nb_qscale, align 8, !dbg !14268
  %cmp393 = icmp slt i32 %308, %310, !dbg !14269
  br i1 %cmp393, label %for.body395, label %for.end417, !dbg !14270

for.body395:                                      ; preds = %for.cond392
  call void @llvm.dbg.declare(metadata i8** %spec396, metadata !14271, metadata !1898), !dbg !14273
  %311 = load i32, i32* %i390, align 4, !dbg !14274
  %idxprom397 = sext i32 %311 to i64, !dbg !14276
  %312 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14276
  %qscale398 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %312, i32 0, i32 67, !dbg !14277
  %313 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %qscale398, align 8, !dbg !14277
  %arrayidx399 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %313, i64 %idxprom397, !dbg !14276
  %specifier400 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx399, i32 0, i32 0, !dbg !14278
  %314 = load i8*, i8** %specifier400, align 8, !dbg !14278
  store i8* %314, i8** %spec396, align 8, !dbg !14279
  %315 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !14280
  %316 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !14281
  %317 = load i8*, i8** %spec396, align 8, !dbg !14282
  %call401 = call i32 @check_stream_specifier(%struct.AVFormatContext* %315, %struct.AVStream* %316, i8* %317), !dbg !14283
  store i32 %call401, i32* %ret391, align 4, !dbg !14284
  %cmp402 = icmp sgt i32 %call401, 0, !dbg !14285
  br i1 %cmp402, label %if.then404, label %if.else409, !dbg !14286

if.then404:                                       ; preds = %for.body395
  %318 = load i32, i32* %i390, align 4, !dbg !14287
  %idxprom405 = sext i32 %318 to i64, !dbg !14290
  %319 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14290
  %qscale406 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %319, i32 0, i32 67, !dbg !14291
  %320 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %qscale406, align 8, !dbg !14291
  %arrayidx407 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %320, i64 %idxprom405, !dbg !14290
  %u408 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx407, i32 0, i32 1, !dbg !14292
  %dbl = bitcast %union.anon.1* %u408 to double*, !dbg !14293
  %321 = load double, double* %dbl, align 8, !dbg !14293
  store double %321, double* %qscale, align 8, !dbg !14294
  br label %if.end414, !dbg !14295

if.else409:                                       ; preds = %for.body395
  %322 = load i32, i32* %ret391, align 4, !dbg !14296
  %cmp410 = icmp slt i32 %322, 0, !dbg !14299
  br i1 %cmp410, label %if.then412, label %if.end413, !dbg !14296

if.then412:                                       ; preds = %if.else409
  call void @exit_program(i32 1) #11, !dbg !14300
  unreachable, !dbg !14300

if.end413:                                        ; preds = %if.else409
  br label %if.end414

if.end414:                                        ; preds = %if.end413, %if.then404
  br label %for.inc415, !dbg !14302

for.inc415:                                       ; preds = %if.end414
  %323 = load i32, i32* %i390, align 4, !dbg !14304
  %inc416 = add nsw i32 %323, 1, !dbg !14304
  store i32 %inc416, i32* %i390, align 4, !dbg !14304
  br label %for.cond392, !dbg !14306, !llvm.loop !14307

for.end417:                                       ; preds = %for.cond392
  %324 = load double, double* %qscale, align 8, !dbg !14309
  %cmp418 = fcmp oge double %324, 0.000000e+00, !dbg !14311
  br i1 %cmp418, label %if.then420, label %if.end426, !dbg !14312

if.then420:                                       ; preds = %for.end417
  %325 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14313
  %enc_ctx421 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %325, i32 0, i32 14, !dbg !14315
  %326 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx421, align 8, !dbg !14315
  %flags422 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %326, i32 0, i32 13, !dbg !14316
  %327 = load i32, i32* %flags422, align 4, !dbg !14317
  %or423 = or i32 %327, 2, !dbg !14317
  store i32 %or423, i32* %flags422, align 4, !dbg !14317
  %328 = load double, double* %qscale, align 8, !dbg !14318
  %mul = fmul double 1.180000e+02, %328, !dbg !14319
  %conv424 = fptosi double %mul to i32, !dbg !14320
  %329 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14321
  %enc_ctx425 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %329, i32 0, i32 14, !dbg !14322
  %330 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx425, align 8, !dbg !14322
  %global_quality = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %330, i32 0, i32 11, !dbg !14323
  store i32 %conv424, i32* %global_quality, align 4, !dbg !14324
  br label %if.end426, !dbg !14325

if.end426:                                        ; preds = %if.then420, %for.end417
  call void @llvm.dbg.declare(metadata i32* %i427, metadata !14326, metadata !1898), !dbg !14328
  call void @llvm.dbg.declare(metadata i32* %ret428, metadata !14329, metadata !1898), !dbg !14330
  store i32 0, i32* %i427, align 4, !dbg !14331
  br label %for.cond429, !dbg !14333

for.cond429:                                      ; preds = %for.inc453, %if.end426
  %331 = load i32, i32* %i427, align 4, !dbg !14334
  %332 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14337
  %nb_disposition = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %332, i32 0, i32 116, !dbg !14338
  %333 = load i32, i32* %nb_disposition, align 8, !dbg !14338
  %cmp430 = icmp slt i32 %331, %333, !dbg !14339
  br i1 %cmp430, label %for.body432, label %for.end455, !dbg !14340

for.body432:                                      ; preds = %for.cond429
  call void @llvm.dbg.declare(metadata i8** %spec433, metadata !14341, metadata !1898), !dbg !14343
  %334 = load i32, i32* %i427, align 4, !dbg !14344
  %idxprom434 = sext i32 %334 to i64, !dbg !14346
  %335 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14346
  %disposition = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %335, i32 0, i32 115, !dbg !14347
  %336 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %disposition, align 8, !dbg !14347
  %arrayidx435 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %336, i64 %idxprom434, !dbg !14346
  %specifier436 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx435, i32 0, i32 0, !dbg !14348
  %337 = load i8*, i8** %specifier436, align 8, !dbg !14348
  store i8* %337, i8** %spec433, align 8, !dbg !14349
  %338 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !14350
  %339 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !14351
  %340 = load i8*, i8** %spec433, align 8, !dbg !14352
  %call437 = call i32 @check_stream_specifier(%struct.AVFormatContext* %338, %struct.AVStream* %339, i8* %340), !dbg !14353
  store i32 %call437, i32* %ret428, align 4, !dbg !14354
  %cmp438 = icmp sgt i32 %call437, 0, !dbg !14355
  br i1 %cmp438, label %if.then440, label %if.else447, !dbg !14356

if.then440:                                       ; preds = %for.body432
  %341 = load i32, i32* %i427, align 4, !dbg !14357
  %idxprom441 = sext i32 %341 to i64, !dbg !14360
  %342 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14360
  %disposition442 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %342, i32 0, i32 115, !dbg !14361
  %343 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %disposition442, align 8, !dbg !14361
  %arrayidx443 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %343, i64 %idxprom441, !dbg !14360
  %u444 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx443, i32 0, i32 1, !dbg !14362
  %str445 = bitcast %union.anon.1* %u444 to i8**, !dbg !14363
  %344 = load i8*, i8** %str445, align 8, !dbg !14363
  %345 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14364
  %disposition446 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %345, i32 0, i32 58, !dbg !14365
  store i8* %344, i8** %disposition446, align 8, !dbg !14366
  br label %if.end452, !dbg !14364

if.else447:                                       ; preds = %for.body432
  %346 = load i32, i32* %ret428, align 4, !dbg !14367
  %cmp448 = icmp slt i32 %346, 0, !dbg !14370
  br i1 %cmp448, label %if.then450, label %if.end451, !dbg !14367

if.then450:                                       ; preds = %if.else447
  call void @exit_program(i32 1) #11, !dbg !14371
  unreachable, !dbg !14371

if.end451:                                        ; preds = %if.else447
  br label %if.end452

if.end452:                                        ; preds = %if.end451, %if.then440
  br label %for.inc453, !dbg !14373

for.inc453:                                       ; preds = %if.end452
  %347 = load i32, i32* %i427, align 4, !dbg !14375
  %inc454 = add nsw i32 %347, 1, !dbg !14375
  store i32 %inc454, i32* %i427, align 4, !dbg !14375
  br label %for.cond429, !dbg !14377, !llvm.loop !14378

for.end455:                                       ; preds = %for.cond429
  %348 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14380
  %disposition456 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %348, i32 0, i32 58, !dbg !14381
  %349 = load i8*, i8** %disposition456, align 8, !dbg !14381
  %call457 = call noalias i8* @av_strdup(i8* %349), !dbg !14382
  %350 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14383
  %disposition458 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %350, i32 0, i32 58, !dbg !14384
  store i8* %call457, i8** %disposition458, align 8, !dbg !14385
  %351 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14386
  %max_muxing_queue_size = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %351, i32 0, i32 65, !dbg !14387
  store i32 128, i32* %max_muxing_queue_size, align 4, !dbg !14388
  call void @llvm.dbg.declare(metadata i32* %i459, metadata !14389, metadata !1898), !dbg !14391
  call void @llvm.dbg.declare(metadata i32* %ret460, metadata !14392, metadata !1898), !dbg !14393
  store i32 0, i32* %i459, align 4, !dbg !14394
  br label %for.cond461, !dbg !14396

for.cond461:                                      ; preds = %for.inc486, %for.end455
  %352 = load i32, i32* %i459, align 4, !dbg !14397
  %353 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14400
  %nb_max_muxing_queue_size = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %353, i32 0, i32 108, !dbg !14401
  %354 = load i32, i32* %nb_max_muxing_queue_size, align 8, !dbg !14401
  %cmp462 = icmp slt i32 %352, %354, !dbg !14402
  br i1 %cmp462, label %for.body464, label %for.end488, !dbg !14403

for.body464:                                      ; preds = %for.cond461
  call void @llvm.dbg.declare(metadata i8** %spec465, metadata !14404, metadata !1898), !dbg !14406
  %355 = load i32, i32* %i459, align 4, !dbg !14407
  %idxprom466 = sext i32 %355 to i64, !dbg !14409
  %356 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14409
  %max_muxing_queue_size467 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %356, i32 0, i32 107, !dbg !14410
  %357 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %max_muxing_queue_size467, align 8, !dbg !14410
  %arrayidx468 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %357, i64 %idxprom466, !dbg !14409
  %specifier469 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx468, i32 0, i32 0, !dbg !14411
  %358 = load i8*, i8** %specifier469, align 8, !dbg !14411
  store i8* %358, i8** %spec465, align 8, !dbg !14412
  %359 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !14413
  %360 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !14414
  %361 = load i8*, i8** %spec465, align 8, !dbg !14415
  %call470 = call i32 @check_stream_specifier(%struct.AVFormatContext* %359, %struct.AVStream* %360, i8* %361), !dbg !14416
  store i32 %call470, i32* %ret460, align 4, !dbg !14417
  %cmp471 = icmp sgt i32 %call470, 0, !dbg !14418
  br i1 %cmp471, label %if.then473, label %if.else480, !dbg !14419

if.then473:                                       ; preds = %for.body464
  %362 = load i32, i32* %i459, align 4, !dbg !14420
  %idxprom474 = sext i32 %362 to i64, !dbg !14423
  %363 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14423
  %max_muxing_queue_size475 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %363, i32 0, i32 107, !dbg !14424
  %364 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %max_muxing_queue_size475, align 8, !dbg !14424
  %arrayidx476 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %364, i64 %idxprom474, !dbg !14423
  %u477 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx476, i32 0, i32 1, !dbg !14425
  %i478 = bitcast %union.anon.1* %u477 to i32*, !dbg !14426
  %365 = load i32, i32* %i478, align 8, !dbg !14426
  %366 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14427
  %max_muxing_queue_size479 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %366, i32 0, i32 65, !dbg !14428
  store i32 %365, i32* %max_muxing_queue_size479, align 4, !dbg !14429
  br label %if.end485, !dbg !14427

if.else480:                                       ; preds = %for.body464
  %367 = load i32, i32* %ret460, align 4, !dbg !14430
  %cmp481 = icmp slt i32 %367, 0, !dbg !14433
  br i1 %cmp481, label %if.then483, label %if.end484, !dbg !14430

if.then483:                                       ; preds = %if.else480
  call void @exit_program(i32 1) #11, !dbg !14434
  unreachable, !dbg !14434

if.end484:                                        ; preds = %if.else480
  br label %if.end485

if.end485:                                        ; preds = %if.end484, %if.then473
  br label %for.inc486, !dbg !14436

for.inc486:                                       ; preds = %if.end485
  %368 = load i32, i32* %i459, align 4, !dbg !14438
  %inc487 = add nsw i32 %368, 1, !dbg !14438
  store i32 %inc487, i32* %i459, align 4, !dbg !14438
  br label %for.cond461, !dbg !14440, !llvm.loop !14441

for.end488:                                       ; preds = %for.cond461
  %369 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14443
  %max_muxing_queue_size489 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %369, i32 0, i32 65, !dbg !14444
  %370 = load i32, i32* %max_muxing_queue_size489, align 4, !dbg !14445
  %conv490 = sext i32 %370 to i64, !dbg !14445
  %mul491 = mul i64 %conv490, 88, !dbg !14445
  %conv492 = trunc i64 %mul491 to i32, !dbg !14445
  store i32 %conv492, i32* %max_muxing_queue_size489, align 4, !dbg !14445
  %371 = load %struct.AVFormatContext*, %struct.AVFormatContext** %oc.addr, align 8, !dbg !14446
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %371, i32 0, i32 2, !dbg !14448
  %372 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !14448
  %flags493 = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %372, i32 0, i32 7, !dbg !14449
  %373 = load i32, i32* %flags493, align 4, !dbg !14449
  %and = and i32 %373, 64, !dbg !14450
  %tobool494 = icmp ne i32 %and, 0, !dbg !14450
  br i1 %tobool494, label %if.then495, label %if.end499, !dbg !14451

if.then495:                                       ; preds = %for.end488
  %374 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14452
  %enc_ctx496 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %374, i32 0, i32 14, !dbg !14453
  %375 = load %struct.AVCodecContext*, %struct.AVCodecContext** %enc_ctx496, align 8, !dbg !14453
  %flags497 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %375, i32 0, i32 13, !dbg !14454
  %376 = load i32, i32* %flags497, align 4, !dbg !14455
  %or498 = or i32 %376, 4194304, !dbg !14455
  store i32 %or498, i32* %flags497, align 4, !dbg !14455
  br label %if.end499, !dbg !14452

if.end499:                                        ; preds = %if.then495, %for.end488
  %377 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14456
  %sws_dict = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %377, i32 0, i32 46, !dbg !14457
  %378 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14458
  %g500 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %378, i32 0, i32 0, !dbg !14459
  %379 = load %struct.OptionGroup*, %struct.OptionGroup** %g500, align 8, !dbg !14459
  %sws_dict501 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %379, i32 0, i32 7, !dbg !14460
  %380 = load %struct.AVDictionary*, %struct.AVDictionary** %sws_dict501, align 8, !dbg !14460
  %call502 = call i32 @av_dict_copy(%struct.AVDictionary** %sws_dict, %struct.AVDictionary* %380, i32 0), !dbg !14461
  %381 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14462
  %swr_opts = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %381, i32 0, i32 47, !dbg !14463
  %382 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14464
  %g503 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %382, i32 0, i32 0, !dbg !14465
  %383 = load %struct.OptionGroup*, %struct.OptionGroup** %g503, align 8, !dbg !14465
  %swr_opts504 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %383, i32 0, i32 8, !dbg !14466
  %384 = load %struct.AVDictionary*, %struct.AVDictionary** %swr_opts504, align 8, !dbg !14466
  %call505 = call i32 @av_dict_copy(%struct.AVDictionary** %swr_opts, %struct.AVDictionary* %384, i32 0), !dbg !14467
  %385 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14468
  %enc506 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %385, i32 0, i32 16, !dbg !14470
  %386 = load %struct.AVCodec*, %struct.AVCodec** %enc506, align 8, !dbg !14470
  %tobool507 = icmp ne %struct.AVCodec* %386, null, !dbg !14468
  br i1 %tobool507, label %land.lhs.true508, label %if.end517, !dbg !14471

land.lhs.true508:                                 ; preds = %if.end499
  %387 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14472
  %enc509 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %387, i32 0, i32 16, !dbg !14474
  %388 = load %struct.AVCodec*, %struct.AVCodec** %enc509, align 8, !dbg !14474
  %id510 = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %388, i32 0, i32 3, !dbg !14475
  %389 = load i32, i32* %id510, align 4, !dbg !14475
  %call511 = call i32 @av_get_exact_bits_per_sample(i32 %389), !dbg !14476
  %cmp512 = icmp eq i32 %call511, 24, !dbg !14477
  br i1 %cmp512, label %if.then514, label %if.end517, !dbg !14478

if.then514:                                       ; preds = %land.lhs.true508
  %390 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14479
  %swr_opts515 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %390, i32 0, i32 47, !dbg !14480
  %call516 = call i32 @av_dict_set(%struct.AVDictionary** %swr_opts515, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.550, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.551, i32 0, i32 0), i32 0), !dbg !14481
  br label %if.end517, !dbg !14481

if.end517:                                        ; preds = %if.then514, %land.lhs.true508, %if.end499
  %391 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14482
  %resample_opts = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %391, i32 0, i32 48, !dbg !14483
  %392 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14484
  %g518 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %392, i32 0, i32 0, !dbg !14485
  %393 = load %struct.OptionGroup*, %struct.OptionGroup** %g518, align 8, !dbg !14485
  %resample_opts519 = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %393, i32 0, i32 6, !dbg !14486
  %394 = load %struct.AVDictionary*, %struct.AVDictionary** %resample_opts519, align 8, !dbg !14486
  %call520 = call i32 @av_dict_copy(%struct.AVDictionary** %resample_opts, %struct.AVDictionary* %394, i32 0), !dbg !14487
  %395 = load i32, i32* %source_index.addr, align 4, !dbg !14488
  %396 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14489
  %source_index521 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %396, i32 0, i32 2, !dbg !14490
  store i32 %395, i32* %source_index521, align 8, !dbg !14491
  %397 = load i32, i32* %source_index.addr, align 4, !dbg !14492
  %cmp522 = icmp sge i32 %397, 0, !dbg !14494
  br i1 %cmp522, label %if.then524, label %if.end535, !dbg !14495

if.then524:                                       ; preds = %if.end517
  %398 = load i32, i32* %source_index.addr, align 4, !dbg !14496
  %idxprom525 = sext i32 %398 to i64, !dbg !14498
  %399 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !14498
  %arrayidx526 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %399, i64 %idxprom525, !dbg !14498
  %400 = load %struct.InputStream*, %struct.InputStream** %arrayidx526, align 8, !dbg !14498
  %401 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14499
  %sync_ist = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %401, i32 0, i32 6, !dbg !14500
  store %struct.InputStream* %400, %struct.InputStream** %sync_ist, align 8, !dbg !14501
  %402 = load i32, i32* %source_index.addr, align 4, !dbg !14502
  %idxprom527 = sext i32 %402 to i64, !dbg !14503
  %403 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !14503
  %arrayidx528 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %403, i64 %idxprom527, !dbg !14503
  %404 = load %struct.InputStream*, %struct.InputStream** %arrayidx528, align 8, !dbg !14503
  %discard = getelementptr inbounds %struct.InputStream, %struct.InputStream* %404, i32 0, i32 2, !dbg !14504
  store i32 0, i32* %discard, align 8, !dbg !14505
  %405 = load i32, i32* %source_index.addr, align 4, !dbg !14506
  %idxprom529 = sext i32 %405 to i64, !dbg !14507
  %406 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !14507
  %arrayidx530 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %406, i64 %idxprom529, !dbg !14507
  %407 = load %struct.InputStream*, %struct.InputStream** %arrayidx530, align 8, !dbg !14507
  %user_set_discard = getelementptr inbounds %struct.InputStream, %struct.InputStream* %407, i32 0, i32 3, !dbg !14508
  %408 = load i32, i32* %user_set_discard, align 4, !dbg !14508
  %409 = load i32, i32* %source_index.addr, align 4, !dbg !14509
  %idxprom531 = sext i32 %409 to i64, !dbg !14510
  %410 = load %struct.InputStream**, %struct.InputStream*** @input_streams, align 8, !dbg !14510
  %arrayidx532 = getelementptr inbounds %struct.InputStream*, %struct.InputStream** %410, i64 %idxprom531, !dbg !14510
  %411 = load %struct.InputStream*, %struct.InputStream** %arrayidx532, align 8, !dbg !14510
  %st533 = getelementptr inbounds %struct.InputStream, %struct.InputStream* %411, i32 0, i32 1, !dbg !14511
  %412 = load %struct.AVStream*, %struct.AVStream** %st533, align 8, !dbg !14511
  %discard534 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %412, i32 0, i32 9, !dbg !14512
  store i32 %408, i32* %discard534, align 4, !dbg !14513
  br label %if.end535, !dbg !14514

if.end535:                                        ; preds = %if.then524, %if.end517
  %413 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14515
  %last_mux_dts = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %413, i32 0, i32 9, !dbg !14516
  store i64 -9223372036854775808, i64* %last_mux_dts, align 8, !dbg !14517
  %call536 = call %struct.AVFifoBuffer* @av_fifo_alloc(i32 704), !dbg !14518
  %414 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14519
  %muxing_queue = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %414, i32 0, i32 66, !dbg !14520
  store %struct.AVFifoBuffer* %call536, %struct.AVFifoBuffer** %muxing_queue, align 8, !dbg !14521
  %415 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14522
  %muxing_queue537 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %415, i32 0, i32 66, !dbg !14524
  %416 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %muxing_queue537, align 8, !dbg !14524
  %tobool538 = icmp ne %struct.AVFifoBuffer* %416, null, !dbg !14522
  br i1 %tobool538, label %if.end540, label %if.then539, !dbg !14525

if.then539:                                       ; preds = %if.end535
  call void @exit_program(i32 1) #11, !dbg !14526
  unreachable, !dbg !14526

if.end540:                                        ; preds = %if.end535
  %417 = load %struct.OutputStream*, %struct.OutputStream** %ost, align 8, !dbg !14527
  ret %struct.OutputStream* %417, !dbg !14528
}

declare i32 @av_parse_ratio(%struct.AVRational*, i8*, i32, i32, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @parse_matrix_coeffs(i16* %dest, i8* %str) #0 !dbg !14529 {
entry:
  %dest.addr = alloca i16*, align 8
  %str.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %p = alloca i8*, align 8
  store i16* %dest, i16** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dest.addr, metadata !14532, metadata !1898), !dbg !14533
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !14534, metadata !1898), !dbg !14535
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14536, metadata !1898), !dbg !14537
  call void @llvm.dbg.declare(metadata i8** %p, metadata !14538, metadata !1898), !dbg !14539
  %0 = load i8*, i8** %str.addr, align 8, !dbg !14540
  store i8* %0, i8** %p, align 8, !dbg !14539
  store i32 0, i32* %i, align 4, !dbg !14541
  br label %for.cond, !dbg !14543

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %p, align 8, !dbg !14544
  %call = call i32 @atoi(i8* %1) #10, !dbg !14547
  %conv = trunc i32 %call to i16, !dbg !14547
  %2 = load i32, i32* %i, align 4, !dbg !14548
  %idxprom = sext i32 %2 to i64, !dbg !14549
  %3 = load i16*, i16** %dest.addr, align 8, !dbg !14549
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !14549
  store i16 %conv, i16* %arrayidx, align 2, !dbg !14550
  %4 = load i32, i32* %i, align 4, !dbg !14551
  %cmp = icmp eq i32 %4, 63, !dbg !14553
  br i1 %cmp, label %if.then, label %if.end, !dbg !14554

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !14555

if.end:                                           ; preds = %for.cond
  %5 = load i8*, i8** %p, align 8, !dbg !14556
  %call2 = call i8* @strchr(i8* %5, i32 44) #10, !dbg !14557
  store i8* %call2, i8** %p, align 8, !dbg !14558
  %6 = load i8*, i8** %p, align 8, !dbg !14559
  %tobool = icmp ne i8* %6, null, !dbg !14559
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !14561

if.then3:                                         ; preds = %if.end
  %7 = load i8*, i8** %str.addr, align 8, !dbg !14562
  %8 = load i32, i32* %i, align 4, !dbg !14564
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.561, i32 0, i32 0), i8* %7, i32 %8), !dbg !14565
  call void @exit_program(i32 1) #11, !dbg !14566
  unreachable, !dbg !14566

if.end4:                                          ; preds = %if.end
  %9 = load i8*, i8** %p, align 8, !dbg !14567
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !14567
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !14567
  br label %for.inc, !dbg !14568

for.inc:                                          ; preds = %if.end4
  %10 = load i32, i32* %i, align 4, !dbg !14569
  %inc = add nsw i32 %10, 1, !dbg !14569
  store i32 %inc, i32* %i, align 4, !dbg !14569
  br label %for.cond, !dbg !14571, !llvm.loop !14572

for.end:                                          ; preds = %if.then
  ret void, !dbg !14574
}

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #6

declare i8* @av_realloc_array(i8*, i64, i64) #3

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #6

; Function Attrs: nounwind uwtable
define internal i8* @read_file(i8* %filename) #0 !dbg !14575 {
entry:
  %retval = alloca i8*, align 8
  %filename.addr = alloca i8*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %dyn_buf = alloca %struct.AVIOContext*, align 8
  %ret = alloca i32, align 4
  %buf = alloca [1024 x i8], align 16
  %str = alloca i8*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !14578, metadata !1898), !dbg !14579
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !14580, metadata !1898), !dbg !14581
  store %struct.AVIOContext* null, %struct.AVIOContext** %pb, align 8, !dbg !14581
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %dyn_buf, metadata !14582, metadata !1898), !dbg !14583
  store %struct.AVIOContext* null, %struct.AVIOContext** %dyn_buf, align 8, !dbg !14583
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14584, metadata !1898), !dbg !14585
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !14586
  %call = call i32 @avio_open(%struct.AVIOContext** %pb, i8* %0, i32 1), !dbg !14587
  store i32 %call, i32* %ret, align 4, !dbg !14585
  call void @llvm.dbg.declare(metadata [1024 x i8]* %buf, metadata !14588, metadata !1898), !dbg !14590
  call void @llvm.dbg.declare(metadata i8** %str, metadata !14591, metadata !1898), !dbg !14592
  %1 = load i32, i32* %ret, align 4, !dbg !14593
  %cmp = icmp slt i32 %1, 0, !dbg !14595
  br i1 %cmp, label %if.then, label %if.end, !dbg !14596

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %filename.addr, align 8, !dbg !14597
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.562, i32 0, i32 0), i8* %2), !dbg !14599
  store i8* null, i8** %retval, align 8, !dbg !14600
  br label %return, !dbg !14600

if.end:                                           ; preds = %entry
  %call1 = call i32 @avio_open_dyn_buf(%struct.AVIOContext** %dyn_buf), !dbg !14601
  store i32 %call1, i32* %ret, align 4, !dbg !14602
  %3 = load i32, i32* %ret, align 4, !dbg !14603
  %cmp2 = icmp slt i32 %3, 0, !dbg !14605
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !14606

if.then3:                                         ; preds = %if.end
  %call4 = call i32 @avio_closep(%struct.AVIOContext** %pb), !dbg !14607
  store i8* null, i8** %retval, align 8, !dbg !14609
  br label %return, !dbg !14609

if.end5:                                          ; preds = %if.end
  br label %while.cond, !dbg !14610

while.cond:                                       ; preds = %while.body, %if.end5
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !14611
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0, !dbg !14613
  %call6 = call i32 @avio_read(%struct.AVIOContext* %4, i8* %arraydecay, i32 1024), !dbg !14614
  store i32 %call6, i32* %ret, align 4, !dbg !14615
  %cmp7 = icmp sgt i32 %call6, 0, !dbg !14616
  br i1 %cmp7, label %while.body, label %while.end, !dbg !14617

while.body:                                       ; preds = %while.cond
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_buf, align 8, !dbg !14618
  %arraydecay8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0, !dbg !14619
  %6 = load i32, i32* %ret, align 4, !dbg !14620
  call void @avio_write(%struct.AVIOContext* %5, i8* %arraydecay8, i32 %6), !dbg !14621
  br label %while.cond, !dbg !14622, !llvm.loop !14624

while.end:                                        ; preds = %while.cond
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_buf, align 8, !dbg !14625
  call void @avio_w8(%struct.AVIOContext* %7, i32 0), !dbg !14626
  %call9 = call i32 @avio_closep(%struct.AVIOContext** %pb), !dbg !14627
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %dyn_buf, align 8, !dbg !14628
  %call10 = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %8, i8** %str), !dbg !14629
  store i32 %call10, i32* %ret, align 4, !dbg !14630
  %9 = load i32, i32* %ret, align 4, !dbg !14631
  %cmp11 = icmp slt i32 %9, 0, !dbg !14633
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !14634

if.then12:                                        ; preds = %while.end
  store i8* null, i8** %retval, align 8, !dbg !14635
  br label %return, !dbg !14635

if.end13:                                         ; preds = %while.end
  %10 = load i8*, i8** %str, align 8, !dbg !14636
  store i8* %10, i8** %retval, align 8, !dbg !14637
  br label %return, !dbg !14637

return:                                           ; preds = %if.end13, %if.then12, %if.then3, %if.then
  %11 = load i8*, i8** %retval, align 8, !dbg !14638
  ret i8* %11, !dbg !14638
}

declare %struct._IO_FILE* @av_fopen_utf8(i8*, i8*) #3

; Function Attrs: nounwind
declare i8* @strerror(i32) #6

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #8

; Function Attrs: nounwind uwtable
define internal i8* @get_ost_filters(%struct.OptionsContext* %o, %struct.AVFormatContext* %oc, %struct.OutputStream* %ost) #0 !dbg !14639 {
entry:
  %retval = alloca i8*, align 8
  %o.addr = alloca %struct.OptionsContext*, align 8
  %oc.addr = alloca %struct.AVFormatContext*, align 8
  %ost.addr = alloca %struct.OutputStream*, align 8
  %st = alloca %struct.AVStream*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !14642, metadata !1898), !dbg !14643
  store %struct.AVFormatContext* %oc, %struct.AVFormatContext** %oc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc.addr, metadata !14644, metadata !1898), !dbg !14645
  store %struct.OutputStream* %ost, %struct.OutputStream** %ost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OutputStream** %ost.addr, metadata !14646, metadata !1898), !dbg !14647
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !14648, metadata !1898), !dbg !14649
  %0 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14650
  %st1 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %0, i32 0, i32 3, !dbg !14651
  %1 = load %struct.AVStream*, %struct.AVStream** %st1, align 8, !dbg !14651
  store %struct.AVStream* %1, %struct.AVStream** %st, align 8, !dbg !14649
  %2 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14652
  %filters_script = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %2, i32 0, i32 44, !dbg !14654
  %3 = load i8*, i8** %filters_script, align 8, !dbg !14654
  %tobool = icmp ne i8* %3, null, !dbg !14652
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !14655

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14656
  %filters = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %4, i32 0, i32 43, !dbg !14658
  %5 = load i8*, i8** %filters, align 8, !dbg !14658
  %tobool2 = icmp ne i8* %5, null, !dbg !14656
  br i1 %tobool2, label %if.then, label %if.end, !dbg !14659

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, i32* @nb_output_files, align 4, !dbg !14660
  %7 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !14662
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %7, i32 0, i32 0, !dbg !14663
  %8 = load i32, i32* %index, align 8, !dbg !14663
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.563, i32 0, i32 0), i32 %6, i32 %8), !dbg !14664
  call void @exit_program(i32 1) #11, !dbg !14665
  unreachable, !dbg !14665

if.end:                                           ; preds = %land.lhs.true, %entry
  %9 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14666
  %filters_script3 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %9, i32 0, i32 44, !dbg !14668
  %10 = load i8*, i8** %filters_script3, align 8, !dbg !14668
  %tobool4 = icmp ne i8* %10, null, !dbg !14666
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !14669

if.then5:                                         ; preds = %if.end
  %11 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14670
  %filters_script6 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %11, i32 0, i32 44, !dbg !14671
  %12 = load i8*, i8** %filters_script6, align 8, !dbg !14671
  %call = call i8* @read_file(i8* %12), !dbg !14672
  store i8* %call, i8** %retval, align 8, !dbg !14673
  br label %return, !dbg !14673

if.else:                                          ; preds = %if.end
  %13 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14674
  %filters7 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %13, i32 0, i32 43, !dbg !14676
  %14 = load i8*, i8** %filters7, align 8, !dbg !14676
  %tobool8 = icmp ne i8* %14, null, !dbg !14674
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !14677

if.then9:                                         ; preds = %if.else
  %15 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14678
  %filters10 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %15, i32 0, i32 43, !dbg !14679
  %16 = load i8*, i8** %filters10, align 8, !dbg !14679
  %call11 = call noalias i8* @av_strdup(i8* %16), !dbg !14680
  store i8* %call11, i8** %retval, align 8, !dbg !14681
  br label %return, !dbg !14681

if.end12:                                         ; preds = %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12
  %17 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !14682
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %17, i32 0, i32 19, !dbg !14683
  %18 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !14683
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %18, i32 0, i32 0, !dbg !14684
  %19 = load i32, i32* %codec_type, align 8, !dbg !14684
  %cmp = icmp eq i32 %19, 0, !dbg !14685
  %cond = select i1 %cmp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.564, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.565, i32 0, i32 0), !dbg !14682
  %call14 = call noalias i8* @av_strdup(i8* %cond), !dbg !14686
  store i8* %call14, i8** %retval, align 8, !dbg !14687
  br label %return, !dbg !14687

return:                                           ; preds = %if.end13, %if.then9, %if.then5
  %20 = load i8*, i8** %retval, align 8, !dbg !14688
  ret i8* %20, !dbg !14688
}

; Function Attrs: nounwind uwtable
define internal void @check_streamcopy_filters(%struct.OptionsContext* %o, %struct.AVFormatContext* %oc, %struct.OutputStream* %ost, i32 %type) #0 !dbg !14689 {
entry:
  %o.addr = alloca %struct.OptionsContext*, align 8
  %oc.addr = alloca %struct.AVFormatContext*, align 8
  %ost.addr = alloca %struct.OutputStream*, align 8
  %type.addr = alloca i32, align 4
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !14694, metadata !1898), !dbg !14695
  store %struct.AVFormatContext* %oc, %struct.AVFormatContext** %oc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %oc.addr, metadata !14696, metadata !1898), !dbg !14697
  store %struct.OutputStream* %ost, %struct.OutputStream** %ost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OutputStream** %ost.addr, metadata !14698, metadata !1898), !dbg !14699
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14700, metadata !1898), !dbg !14701
  %0 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14702
  %filters_script = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %0, i32 0, i32 44, !dbg !14704
  %1 = load i8*, i8** %filters_script, align 8, !dbg !14704
  %tobool = icmp ne i8* %1, null, !dbg !14702
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !14705

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14706
  %filters = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %2, i32 0, i32 43, !dbg !14708
  %3 = load i8*, i8** %filters, align 8, !dbg !14708
  %tobool1 = icmp ne i8* %3, null, !dbg !14706
  br i1 %tobool1, label %if.then, label %if.end, !dbg !14709

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14710
  %filters2 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %4, i32 0, i32 43, !dbg !14712
  %5 = load i8*, i8** %filters2, align 8, !dbg !14712
  %tobool3 = icmp ne i8* %5, null, !dbg !14710
  %cond = select i1 %tobool3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.517, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.518, i32 0, i32 0), !dbg !14710
  %6 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14713
  %filters4 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %6, i32 0, i32 43, !dbg !14714
  %7 = load i8*, i8** %filters4, align 8, !dbg !14714
  %tobool5 = icmp ne i8* %7, null, !dbg !14713
  br i1 %tobool5, label %cond.true, label %cond.false, !dbg !14713

cond.true:                                        ; preds = %if.then
  %8 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14715
  %filters6 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %8, i32 0, i32 43, !dbg !14717
  %9 = load i8*, i8** %filters6, align 8, !dbg !14717
  br label %cond.end, !dbg !14718

cond.false:                                       ; preds = %if.then
  %10 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14719
  %filters_script7 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %10, i32 0, i32 44, !dbg !14721
  %11 = load i8*, i8** %filters_script7, align 8, !dbg !14721
  br label %cond.end, !dbg !14722

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond8 = phi i8* [ %9, %cond.true ], [ %11, %cond.false ], !dbg !14723
  %12 = load i32, i32* %type.addr, align 4, !dbg !14725
  %call = call i8* @av_get_media_type_string(i32 %12), !dbg !14726
  %13 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14727
  %file_index = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %13, i32 0, i32 0, !dbg !14728
  %14 = load i32, i32* %file_index, align 8, !dbg !14728
  %15 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14729
  %index = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %15, i32 0, i32 1, !dbg !14730
  %16 = load i32, i32* %index, align 4, !dbg !14730
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.566, i32 0, i32 0), i8* %cond, i8* %cond8, i8* %call, i32 %14, i32 %16), !dbg !14731
  call void @exit_program(i32 1) #11, !dbg !14732
  unreachable, !dbg !14732

if.end:                                           ; preds = %lor.lhs.false
  ret void, !dbg !14733
}

declare %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext*, %struct.AVCodec*) #3

; Function Attrs: nounwind uwtable
define internal i32 @choose_encoder(%struct.OptionsContext* %o, %struct.AVFormatContext* %s, %struct.OutputStream* %ost) #0 !dbg !14734 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca %struct.OptionsContext*, align 8
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %ost.addr = alloca %struct.OutputStream*, align 8
  %type = alloca i32, align 4
  %codec_name = alloca i8*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %spec = alloca i8*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !14737, metadata !1898), !dbg !14738
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !14739, metadata !1898), !dbg !14740
  store %struct.OutputStream* %ost, %struct.OutputStream** %ost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OutputStream** %ost.addr, metadata !14741, metadata !1898), !dbg !14742
  call void @llvm.dbg.declare(metadata i32* %type, metadata !14743, metadata !1898), !dbg !14744
  %0 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14745
  %st = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %0, i32 0, i32 3, !dbg !14746
  %1 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !14746
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %1, i32 0, i32 19, !dbg !14747
  %2 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !14747
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i32 0, i32 0, !dbg !14748
  %3 = load i32, i32* %codec_type, align 8, !dbg !14748
  store i32 %3, i32* %type, align 4, !dbg !14744
  call void @llvm.dbg.declare(metadata i8** %codec_name, metadata !14749, metadata !1898), !dbg !14750
  store i8* null, i8** %codec_name, align 8, !dbg !14750
  %4 = load i32, i32* %type, align 4, !dbg !14751
  %cmp = icmp eq i32 %4, 0, !dbg !14753
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14754

lor.lhs.false:                                    ; preds = %entry
  %5 = load i32, i32* %type, align 4, !dbg !14755
  %cmp1 = icmp eq i32 %5, 1, !dbg !14757
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !14758

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %6 = load i32, i32* %type, align 4, !dbg !14759
  %cmp3 = icmp eq i32 %6, 3, !dbg !14761
  br i1 %cmp3, label %if.then, label %if.else52, !dbg !14762

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14763, metadata !1898), !dbg !14766
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14767, metadata !1898), !dbg !14768
  store i32 0, i32* %i, align 4, !dbg !14769
  br label %for.cond, !dbg !14771

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32, i32* %i, align 4, !dbg !14772
  %8 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14775
  %nb_codec_names = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %8, i32 0, i32 6, !dbg !14776
  %9 = load i32, i32* %nb_codec_names, align 8, !dbg !14776
  %cmp4 = icmp slt i32 %7, %9, !dbg !14777
  br i1 %cmp4, label %for.body, label %for.end, !dbg !14778

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %spec, metadata !14779, metadata !1898), !dbg !14781
  %10 = load i32, i32* %i, align 4, !dbg !14782
  %idxprom = sext i32 %10 to i64, !dbg !14784
  %11 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14784
  %codec_names = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %11, i32 0, i32 5, !dbg !14785
  %12 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names, align 8, !dbg !14785
  %arrayidx = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %12, i64 %idxprom, !dbg !14784
  %specifier = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx, i32 0, i32 0, !dbg !14786
  %13 = load i8*, i8** %specifier, align 8, !dbg !14786
  store i8* %13, i8** %spec, align 8, !dbg !14787
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !14788
  %15 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14789
  %st5 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %15, i32 0, i32 3, !dbg !14790
  %16 = load %struct.AVStream*, %struct.AVStream** %st5, align 8, !dbg !14790
  %17 = load i8*, i8** %spec, align 8, !dbg !14791
  %call = call i32 @check_stream_specifier(%struct.AVFormatContext* %14, %struct.AVStream* %16, i8* %17), !dbg !14792
  store i32 %call, i32* %ret, align 4, !dbg !14793
  %cmp6 = icmp sgt i32 %call, 0, !dbg !14794
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !14795

if.then7:                                         ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !14796
  %idxprom8 = sext i32 %18 to i64, !dbg !14799
  %19 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !14799
  %codec_names9 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %19, i32 0, i32 5, !dbg !14800
  %20 = load %struct.SpecifierOpt*, %struct.SpecifierOpt** %codec_names9, align 8, !dbg !14800
  %arrayidx10 = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %20, i64 %idxprom8, !dbg !14799
  %u = getelementptr inbounds %struct.SpecifierOpt, %struct.SpecifierOpt* %arrayidx10, i32 0, i32 1, !dbg !14801
  %str = bitcast %union.anon.1* %u to i8**, !dbg !14802
  %21 = load i8*, i8** %str, align 8, !dbg !14802
  store i8* %21, i8** %codec_name, align 8, !dbg !14803
  br label %if.end13, !dbg !14804

if.else:                                          ; preds = %for.body
  %22 = load i32, i32* %ret, align 4, !dbg !14805
  %cmp11 = icmp slt i32 %22, 0, !dbg !14808
  br i1 %cmp11, label %if.then12, label %if.end, !dbg !14805

if.then12:                                        ; preds = %if.else
  call void @exit_program(i32 1) #11, !dbg !14809
  unreachable, !dbg !14809

if.end:                                           ; preds = %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then7
  br label %for.inc, !dbg !14811

for.inc:                                          ; preds = %if.end13
  %23 = load i32, i32* %i, align 4, !dbg !14813
  %inc = add nsw i32 %23, 1, !dbg !14813
  store i32 %inc, i32* %i, align 4, !dbg !14813
  br label %for.cond, !dbg !14815, !llvm.loop !14816

for.end:                                          ; preds = %for.cond
  %24 = load i8*, i8** %codec_name, align 8, !dbg !14818
  %tobool = icmp ne i8* %24, null, !dbg !14818
  br i1 %tobool, label %if.else34, label %if.then14, !dbg !14820

if.then14:                                        ; preds = %for.end
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !14821
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %25, i32 0, i32 2, !dbg !14823
  %26 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !14823
  %27 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !14824
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %27, i32 0, i32 9, !dbg !14825
  %28 = load i8*, i8** %url, align 8, !dbg !14825
  %29 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14826
  %st15 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %29, i32 0, i32 3, !dbg !14827
  %30 = load %struct.AVStream*, %struct.AVStream** %st15, align 8, !dbg !14827
  %codecpar16 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i32 0, i32 19, !dbg !14828
  %31 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar16, align 8, !dbg !14828
  %codec_type17 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %31, i32 0, i32 0, !dbg !14829
  %32 = load i32, i32* %codec_type17, align 8, !dbg !14829
  %call18 = call i32 @av_guess_codec(%struct.AVOutputFormat* %26, i8* null, i8* %28, i8* null, i32 %32), !dbg !14830
  %33 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14831
  %st19 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %33, i32 0, i32 3, !dbg !14832
  %34 = load %struct.AVStream*, %struct.AVStream** %st19, align 8, !dbg !14832
  %codecpar20 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %34, i32 0, i32 19, !dbg !14833
  %35 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar20, align 8, !dbg !14833
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %35, i32 0, i32 1, !dbg !14834
  store i32 %call18, i32* %codec_id, align 4, !dbg !14835
  %36 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14836
  %st21 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %36, i32 0, i32 3, !dbg !14837
  %37 = load %struct.AVStream*, %struct.AVStream** %st21, align 8, !dbg !14837
  %codecpar22 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i32 0, i32 19, !dbg !14838
  %38 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar22, align 8, !dbg !14838
  %codec_id23 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %38, i32 0, i32 1, !dbg !14839
  %39 = load i32, i32* %codec_id23, align 4, !dbg !14839
  %call24 = call %struct.AVCodec* @avcodec_find_encoder(i32 %39), !dbg !14840
  %40 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14841
  %enc = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %40, i32 0, i32 16, !dbg !14842
  store %struct.AVCodec* %call24, %struct.AVCodec** %enc, align 8, !dbg !14843
  %41 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14844
  %enc25 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %41, i32 0, i32 16, !dbg !14846
  %42 = load %struct.AVCodec*, %struct.AVCodec** %enc25, align 8, !dbg !14846
  %tobool26 = icmp ne %struct.AVCodec* %42, null, !dbg !14844
  br i1 %tobool26, label %if.end33, label %if.then27, !dbg !14847

if.then27:                                        ; preds = %if.then14
  %43 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14848
  %file_index = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %43, i32 0, i32 0, !dbg !14850
  %44 = load i32, i32* %file_index, align 8, !dbg !14850
  %45 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14851
  %index = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %45, i32 0, i32 1, !dbg !14852
  %46 = load i32, i32* %index, align 4, !dbg !14852
  %47 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !14853
  %oformat28 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %47, i32 0, i32 2, !dbg !14854
  %48 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat28, align 8, !dbg !14854
  %name = getelementptr inbounds %struct.AVOutputFormat, %struct.AVOutputFormat* %48, i32 0, i32 0, !dbg !14855
  %49 = load i8*, i8** %name, align 8, !dbg !14855
  %50 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14856
  %st29 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %50, i32 0, i32 3, !dbg !14857
  %51 = load %struct.AVStream*, %struct.AVStream** %st29, align 8, !dbg !14857
  %codecpar30 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %51, i32 0, i32 19, !dbg !14858
  %52 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar30, align 8, !dbg !14858
  %codec_id31 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %52, i32 0, i32 1, !dbg !14859
  %53 = load i32, i32* %codec_id31, align 4, !dbg !14859
  %call32 = call i8* @avcodec_get_name(i32 %53), !dbg !14860
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([160 x i8], [160 x i8]* @.str.552, i32 0, i32 0), i32 %44, i32 %46, i8* %49, i8* %call32), !dbg !14861
  store i32 -1129203192, i32* %retval, align 4, !dbg !14862
  br label %return, !dbg !14862

if.end33:                                         ; preds = %if.then14
  br label %if.end49, !dbg !14863

if.else34:                                        ; preds = %for.end
  %54 = load i8*, i8** %codec_name, align 8, !dbg !14864
  %call35 = call i32 @strcmp(i8* %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.553, i32 0, i32 0)) #10, !dbg !14867
  %tobool36 = icmp ne i32 %call35, 0, !dbg !14867
  br i1 %tobool36, label %if.else38, label %if.then37, !dbg !14868

if.then37:                                        ; preds = %if.else34
  %55 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14869
  %stream_copy = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %55, i32 0, i32 52, !dbg !14870
  store i32 1, i32* %stream_copy, align 8, !dbg !14871
  br label %if.end48, !dbg !14869

if.else38:                                        ; preds = %if.else34
  %56 = load i8*, i8** %codec_name, align 8, !dbg !14872
  %57 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14874
  %st39 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %57, i32 0, i32 3, !dbg !14875
  %58 = load %struct.AVStream*, %struct.AVStream** %st39, align 8, !dbg !14875
  %codecpar40 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %58, i32 0, i32 19, !dbg !14876
  %59 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar40, align 8, !dbg !14876
  %codec_type41 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %59, i32 0, i32 0, !dbg !14877
  %60 = load i32, i32* %codec_type41, align 8, !dbg !14877
  %call42 = call %struct.AVCodec* @find_codec_or_die(i8* %56, i32 %60, i32 1), !dbg !14878
  %61 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14879
  %enc43 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %61, i32 0, i32 16, !dbg !14880
  store %struct.AVCodec* %call42, %struct.AVCodec** %enc43, align 8, !dbg !14881
  %62 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14882
  %enc44 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %62, i32 0, i32 16, !dbg !14883
  %63 = load %struct.AVCodec*, %struct.AVCodec** %enc44, align 8, !dbg !14883
  %id = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %63, i32 0, i32 3, !dbg !14884
  %64 = load i32, i32* %id, align 4, !dbg !14884
  %65 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14885
  %st45 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %65, i32 0, i32 3, !dbg !14886
  %66 = load %struct.AVStream*, %struct.AVStream** %st45, align 8, !dbg !14886
  %codecpar46 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %66, i32 0, i32 19, !dbg !14887
  %67 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar46, align 8, !dbg !14887
  %codec_id47 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %67, i32 0, i32 1, !dbg !14888
  store i32 %64, i32* %codec_id47, align 4, !dbg !14889
  br label %if.end48

if.end48:                                         ; preds = %if.else38, %if.then37
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end33
  %68 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14890
  %stream_copy50 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %68, i32 0, i32 52, !dbg !14891
  %69 = load i32, i32* %stream_copy50, align 8, !dbg !14891
  %tobool51 = icmp ne i32 %69, 0, !dbg !14892
  %lnot = xor i1 %tobool51, true, !dbg !14892
  %lnot.ext = zext i1 %lnot to i32, !dbg !14892
  %70 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14893
  %encoding_needed = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %70, i32 0, i32 4, !dbg !14894
  store i32 %lnot.ext, i32* %encoding_needed, align 8, !dbg !14895
  br label %if.end55, !dbg !14896

if.else52:                                        ; preds = %lor.lhs.false2
  %71 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14897
  %stream_copy53 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %71, i32 0, i32 52, !dbg !14899
  store i32 1, i32* %stream_copy53, align 8, !dbg !14900
  %72 = load %struct.OutputStream*, %struct.OutputStream** %ost.addr, align 8, !dbg !14901
  %encoding_needed54 = getelementptr inbounds %struct.OutputStream, %struct.OutputStream* %72, i32 0, i32 4, !dbg !14902
  store i32 0, i32* %encoding_needed54, align 8, !dbg !14903
  br label %if.end55

if.end55:                                         ; preds = %if.else52, %if.end49
  store i32 0, i32* %retval, align 4, !dbg !14904
  br label %return, !dbg !14904

return:                                           ; preds = %if.end55, %if.then27
  %73 = load i32, i32* %retval, align 4, !dbg !14905
  ret i32 %73, !dbg !14905
}

declare %struct.AVCodecParameters* @avcodec_parameters_alloc() #3

; Function Attrs: nounwind uwtable
define internal i32 @get_preset_file_2(i8* %preset_name, i8* %codec_name, %struct.AVIOContext** %s) #0 !dbg !14906 {
entry:
  %preset_name.addr = alloca i8*, align 8
  %codec_name.addr = alloca i8*, align 8
  %s.addr = alloca %struct.AVIOContext**, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %filename = alloca [1000 x i8], align 16
  %base = alloca [3 x i8*], align 16
  store i8* %preset_name, i8** %preset_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %preset_name.addr, metadata !14909, metadata !1898), !dbg !14910
  store i8* %codec_name, i8** %codec_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %codec_name.addr, metadata !14911, metadata !1898), !dbg !14912
  store %struct.AVIOContext** %s, %struct.AVIOContext*** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext*** %s.addr, metadata !14913, metadata !1898), !dbg !14914
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14915, metadata !1898), !dbg !14916
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14917, metadata !1898), !dbg !14918
  store i32 -1, i32* %ret, align 4, !dbg !14918
  call void @llvm.dbg.declare(metadata [1000 x i8]* %filename, metadata !14919, metadata !1898), !dbg !14920
  call void @llvm.dbg.declare(metadata [3 x i8*]* %base, metadata !14921, metadata !1898), !dbg !14923
  %arrayinit.begin = getelementptr inbounds [3 x i8*], [3 x i8*]* %base, i64 0, i64 0, !dbg !14924
  %call = call i8* @getenv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.554, i32 0, i32 0)) #12, !dbg !14925
  store i8* %call, i8** %arrayinit.begin, align 8, !dbg !14924
  %arrayinit.element = getelementptr inbounds i8*, i8** %arrayinit.begin, i64 1, !dbg !14924
  %call1 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.555, i32 0, i32 0)) #12, !dbg !14926
  store i8* %call1, i8** %arrayinit.element, align 8, !dbg !14924
  %arrayinit.element2 = getelementptr inbounds i8*, i8** %arrayinit.element, i64 1, !dbg !14924
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.556, i32 0, i32 0), i8** %arrayinit.element2, align 8, !dbg !14924
  store i32 0, i32* %i, align 4, !dbg !14927
  br label %for.cond, !dbg !14929

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14930
  %conv = sext i32 %0 to i64, !dbg !14930
  %cmp = icmp ult i64 %conv, 3, !dbg !14933
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !14934

land.rhs:                                         ; preds = %for.cond
  %1 = load i32, i32* %ret, align 4, !dbg !14935
  %cmp4 = icmp slt i32 %1, 0, !dbg !14937
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %2 = phi i1 [ false, %for.cond ], [ %cmp4, %land.rhs ]
  br i1 %2, label %for.body, label %for.end, !dbg !14938

for.body:                                         ; preds = %land.end
  %3 = load i32, i32* %i, align 4, !dbg !14940
  %idxprom = sext i32 %3 to i64, !dbg !14943
  %arrayidx = getelementptr inbounds [3 x i8*], [3 x i8*]* %base, i64 0, i64 %idxprom, !dbg !14943
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !14943
  %tobool = icmp ne i8* %4, null, !dbg !14943
  br i1 %tobool, label %if.end, label %if.then, !dbg !14944

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !14945

if.end:                                           ; preds = %for.body
  %5 = load i8*, i8** %codec_name.addr, align 8, !dbg !14946
  %tobool6 = icmp ne i8* %5, null, !dbg !14946
  br i1 %tobool6, label %if.then7, label %if.end15, !dbg !14948

if.then7:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [1000 x i8], [1000 x i8]* %filename, i32 0, i32 0, !dbg !14949
  %6 = load i32, i32* %i, align 4, !dbg !14951
  %idxprom8 = sext i32 %6 to i64, !dbg !14952
  %arrayidx9 = getelementptr inbounds [3 x i8*], [3 x i8*]* %base, i64 0, i64 %idxprom8, !dbg !14952
  %7 = load i8*, i8** %arrayidx9, align 8, !dbg !14952
  %8 = load i32, i32* %i, align 4, !dbg !14953
  %cmp10 = icmp ne i32 %8, 1, !dbg !14954
  %cond = select i1 %cmp10, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.558, i32 0, i32 0), !dbg !14953
  %9 = load i8*, i8** %codec_name.addr, align 8, !dbg !14955
  %10 = load i8*, i8** %preset_name.addr, align 8, !dbg !14956
  %call12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 1000, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.557, i32 0, i32 0), i8* %7, i8* %cond, i8* %9, i8* %10) #12, !dbg !14957
  %11 = load %struct.AVIOContext**, %struct.AVIOContext*** %s.addr, align 8, !dbg !14958
  %arraydecay13 = getelementptr inbounds [1000 x i8], [1000 x i8]* %filename, i32 0, i32 0, !dbg !14959
  %call14 = call i32 @avio_open2(%struct.AVIOContext** %11, i8* %arraydecay13, i32 1, %struct.AVIOInterruptCB* @int_cb, %struct.AVDictionary** null), !dbg !14960
  store i32 %call14, i32* %ret, align 4, !dbg !14961
  br label %if.end15, !dbg !14962

if.end15:                                         ; preds = %if.then7, %if.end
  %12 = load i32, i32* %ret, align 4, !dbg !14963
  %cmp16 = icmp slt i32 %12, 0, !dbg !14965
  br i1 %cmp16, label %if.then18, label %if.end28, !dbg !14966

if.then18:                                        ; preds = %if.end15
  %arraydecay19 = getelementptr inbounds [1000 x i8], [1000 x i8]* %filename, i32 0, i32 0, !dbg !14967
  %13 = load i32, i32* %i, align 4, !dbg !14969
  %idxprom20 = sext i32 %13 to i64, !dbg !14970
  %arrayidx21 = getelementptr inbounds [3 x i8*], [3 x i8*]* %base, i64 0, i64 %idxprom20, !dbg !14970
  %14 = load i8*, i8** %arrayidx21, align 8, !dbg !14970
  %15 = load i32, i32* %i, align 4, !dbg !14971
  %cmp22 = icmp ne i32 %15, 1, !dbg !14972
  %cond24 = select i1 %cmp22, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.558, i32 0, i32 0), !dbg !14971
  %16 = load i8*, i8** %preset_name.addr, align 8, !dbg !14973
  %call25 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay19, i64 1000, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.559, i32 0, i32 0), i8* %14, i8* %cond24, i8* %16) #12, !dbg !14974
  %17 = load %struct.AVIOContext**, %struct.AVIOContext*** %s.addr, align 8, !dbg !14975
  %arraydecay26 = getelementptr inbounds [1000 x i8], [1000 x i8]* %filename, i32 0, i32 0, !dbg !14976
  %call27 = call i32 @avio_open2(%struct.AVIOContext** %17, i8* %arraydecay26, i32 1, %struct.AVIOInterruptCB* @int_cb, %struct.AVDictionary** null), !dbg !14977
  store i32 %call27, i32* %ret, align 4, !dbg !14978
  br label %if.end28, !dbg !14979

if.end28:                                         ; preds = %if.then18, %if.end15
  br label %for.inc, !dbg !14980

for.inc:                                          ; preds = %if.end28, %if.then
  %18 = load i32, i32* %i, align 4, !dbg !14981
  %inc = add nsw i32 %18, 1, !dbg !14981
  store i32 %inc, i32* %i, align 4, !dbg !14981
  br label %for.cond, !dbg !14983, !llvm.loop !14984

for.end:                                          ; preds = %land.end
  %19 = load i32, i32* %ret, align 4, !dbg !14986
  ret i32 %19, !dbg !14987
}

; Function Attrs: nounwind uwtable
define internal i8* @get_line(%struct.AVIOContext* %s) #0 !dbg !14988 {
entry:
  %s.addr = alloca %struct.AVIOContext*, align 8
  %line = alloca %struct.AVIOContext*, align 8
  %buf = alloca i8*, align 8
  %c = alloca i8, align 1
  store %struct.AVIOContext* %s, %struct.AVIOContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr, metadata !14991, metadata !1898), !dbg !14992
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %line, metadata !14993, metadata !1898), !dbg !14994
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14995, metadata !1898), !dbg !14996
  call void @llvm.dbg.declare(metadata i8* %c, metadata !14997, metadata !1898), !dbg !14998
  %call = call i32 @avio_open_dyn_buf(%struct.AVIOContext** %line), !dbg !14999
  %cmp = icmp slt i32 %call, 0, !dbg !15001
  br i1 %cmp, label %if.then, label %if.end, !dbg !15002

if.then:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 8, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.560, i32 0, i32 0)), !dbg !15003
  call void @exit_program(i32 1) #11, !dbg !15005
  unreachable, !dbg !15005

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !15006

while.cond:                                       ; preds = %while.body, %if.end
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr, align 8, !dbg !15007
  %call1 = call i32 @avio_r8(%struct.AVIOContext* %0), !dbg !15009
  %conv = trunc i32 %call1 to i8, !dbg !15009
  store i8 %conv, i8* %c, align 1, !dbg !15010
  %conv2 = sext i8 %conv to i32, !dbg !15011
  %tobool = icmp ne i32 %conv2, 0, !dbg !15011
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !15012

land.rhs:                                         ; preds = %while.cond
  %1 = load i8, i8* %c, align 1, !dbg !15013
  %conv3 = sext i8 %1 to i32, !dbg !15013
  %cmp4 = icmp ne i32 %conv3, 10, !dbg !15015
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %2 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]
  br i1 %2, label %while.body, label %while.end, !dbg !15016

while.body:                                       ; preds = %land.end
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %line, align 8, !dbg !15018
  %4 = load i8, i8* %c, align 1, !dbg !15019
  %conv6 = sext i8 %4 to i32, !dbg !15019
  call void @avio_w8(%struct.AVIOContext* %3, i32 %conv6), !dbg !15020
  br label %while.cond, !dbg !15021, !llvm.loop !15023

while.end:                                        ; preds = %land.end
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %line, align 8, !dbg !15024
  call void @avio_w8(%struct.AVIOContext* %5, i32 0), !dbg !15025
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %line, align 8, !dbg !15026
  %call7 = call i32 @avio_close_dyn_buf(%struct.AVIOContext* %6, i8** %buf), !dbg !15027
  %7 = load i8*, i8** %buf, align 8, !dbg !15028
  ret i8* %7, !dbg !15029
}

declare void @av_free(i8*) #3

declare i8* @av_strtok(i8*, i8*, i8**) #3

declare %struct.AVBitStreamFilter* @av_bsf_get_by_name(i8*) #3

declare i32 @av_bsf_alloc(%struct.AVBitStreamFilter*, %struct.AVBSFContext**) #3

declare %struct.AVOption* @av_opt_next(i8*, %struct.AVOption*) #3

declare i32 @av_opt_set_from_string(i8*, i8*, i8**, i8*, i8*) #3

declare i32 @av_get_exact_bits_per_sample(i32) #3

declare %struct.AVFifoBuffer* @av_fifo_alloc(i32) #3

declare i8* @avcodec_get_name(i32) #3

; Function Attrs: nounwind
declare i8* @getenv(i8*) #6

declare i32 @avio_open_dyn_buf(%struct.AVIOContext**) #3

declare i32 @avio_r8(%struct.AVIOContext*) #3

declare void @avio_w8(%struct.AVIOContext*, i32) #3

declare i32 @avio_close_dyn_buf(%struct.AVIOContext*, i8**) #3

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #2

declare i32 @avio_open(%struct.AVIOContext**, i8*, i32) #3

declare i8* @av_get_media_type_string(i32) #3

declare i32 @av_get_sample_fmt(i8*) #3

declare i32 @av_reallocp_array(i8*, i64, i64) #3

declare i8* @av_realloc_f(i8*, i64, i64) #3

; Function Attrs: nounwind readnone
declare i64 @av_rescale_q(i64, i64, i64) #8

declare i64 @parse_time_or_die(i8*, i8*, i32) #3

; Function Attrs: nounwind
declare %struct.tm* @gmtime(i64*) #6

; Function Attrs: nounwind
declare i64 @strftime(i8*, i64, i8*, %struct.tm*) #6

declare i32 @parse_option(i8*, i8*, i8*, %struct.OptionDef*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @av_make_error_string(i8* %errbuf, i64 %errbuf_size, i32 %errnum) #9 !dbg !15030 {
entry:
  %errbuf.addr = alloca i8*, align 8
  %errbuf_size.addr = alloca i64, align 8
  %errnum.addr = alloca i32, align 4
  store i8* %errbuf, i8** %errbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %errbuf.addr, metadata !15034, metadata !1898), !dbg !15035
  store i64 %errbuf_size, i64* %errbuf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %errbuf_size.addr, metadata !15036, metadata !1898), !dbg !15037
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !15038, metadata !1898), !dbg !15039
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !15040
  %1 = load i8*, i8** %errbuf.addr, align 8, !dbg !15041
  %2 = load i64, i64* %errbuf_size.addr, align 8, !dbg !15042
  %call = call i32 @av_strerror(i32 %0, i8* %1, i64 %2), !dbg !15043
  %3 = load i8*, i8** %errbuf.addr, align 8, !dbg !15044
  ret i8* %3, !dbg !15045
}

declare i32 @opt_default(i8*, i8*, i8*) #3

declare i32 @av_strcasecmp(i8*, i8*) #3

declare double @parse_number_or_die(i8*, i8*, i32, double, double) #3

declare i8* @av_default_item_name(i8*) #3

declare i8* @av_asprintf(i8*, ...) #3

; Function Attrs: nounwind
declare i64 @time(i64*) #6

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64*) #6

declare i64 @av_strlcpy(i8*, i8*, i64) #3

declare i64 @av_get_channel_layout(i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @opt_default_new(%struct.OptionsContext* %o, i8* %opt, i8* %arg) #0 !dbg !15046 {
entry:
  %o.addr = alloca %struct.OptionsContext*, align 8
  %opt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %cbak = alloca %struct.AVDictionary*, align 8
  %fbak = alloca %struct.AVDictionary*, align 8
  store %struct.OptionsContext* %o, %struct.OptionsContext** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OptionsContext** %o.addr, metadata !15049, metadata !1898), !dbg !15050
  store i8* %opt, i8** %opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opt.addr, metadata !15051, metadata !1898), !dbg !15052
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15053, metadata !1898), !dbg !15054
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15055, metadata !1898), !dbg !15056
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %cbak, metadata !15057, metadata !1898), !dbg !15058
  %0 = load %struct.AVDictionary*, %struct.AVDictionary** @codec_opts, align 8, !dbg !15059
  store %struct.AVDictionary* %0, %struct.AVDictionary** %cbak, align 8, !dbg !15058
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %fbak, metadata !15060, metadata !1898), !dbg !15061
  %1 = load %struct.AVDictionary*, %struct.AVDictionary** @format_opts, align 8, !dbg !15062
  store %struct.AVDictionary* %1, %struct.AVDictionary** %fbak, align 8, !dbg !15061
  store %struct.AVDictionary* null, %struct.AVDictionary** @codec_opts, align 8, !dbg !15063
  store %struct.AVDictionary* null, %struct.AVDictionary** @format_opts, align 8, !dbg !15064
  %2 = load i8*, i8** %opt.addr, align 8, !dbg !15065
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !15066
  %call = call i32 @opt_default(i8* null, i8* %2, i8* %3), !dbg !15067
  store i32 %call, i32* %ret, align 4, !dbg !15068
  %4 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !15069
  %g = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %4, i32 0, i32 0, !dbg !15070
  %5 = load %struct.OptionGroup*, %struct.OptionGroup** %g, align 8, !dbg !15070
  %codec_opts = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %5, i32 0, i32 4, !dbg !15071
  %6 = load %struct.AVDictionary*, %struct.AVDictionary** @codec_opts, align 8, !dbg !15072
  %call1 = call i32 @av_dict_copy(%struct.AVDictionary** %codec_opts, %struct.AVDictionary* %6, i32 0), !dbg !15073
  %7 = load %struct.OptionsContext*, %struct.OptionsContext** %o.addr, align 8, !dbg !15074
  %g2 = getelementptr inbounds %struct.OptionsContext, %struct.OptionsContext* %7, i32 0, i32 0, !dbg !15075
  %8 = load %struct.OptionGroup*, %struct.OptionGroup** %g2, align 8, !dbg !15075
  %format_opts = getelementptr inbounds %struct.OptionGroup, %struct.OptionGroup* %8, i32 0, i32 5, !dbg !15076
  %9 = load %struct.AVDictionary*, %struct.AVDictionary** @format_opts, align 8, !dbg !15077
  %call3 = call i32 @av_dict_copy(%struct.AVDictionary** %format_opts, %struct.AVDictionary* %9, i32 0), !dbg !15078
  call void @av_dict_free(%struct.AVDictionary** @codec_opts), !dbg !15079
  call void @av_dict_free(%struct.AVDictionary** @format_opts), !dbg !15080
  %10 = load %struct.AVDictionary*, %struct.AVDictionary** %cbak, align 8, !dbg !15081
  store %struct.AVDictionary* %10, %struct.AVDictionary** @codec_opts, align 8, !dbg !15082
  %11 = load %struct.AVDictionary*, %struct.AVDictionary** %fbak, align 8, !dbg !15083
  store %struct.AVDictionary* %11, %struct.AVDictionary** @format_opts, align 8, !dbg !15084
  %12 = load i32, i32* %ret, align 4, !dbg !15085
  ret i32 %12, !dbg !15086
}

declare i32 @av_get_channel_layout_nb_channels(i64) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #2

declare i64 @av_strlcat(i8*, i8*, i64) #3

declare %struct._IO_FILE* @get_preset_file(i8*, i64, i8*, i32, i8*) #3

declare i8* @fgets(i8*, i32, %struct._IO_FILE*) #3

; Function Attrs: nounwind readonly
declare i64 @strcspn(i8*, i8*) #2

declare i32 @fclose(%struct._IO_FILE*) #3

declare i32 @hw_device_init_from_string(i8*, %struct.HWDevice**) #3

declare %struct.HWDevice* @hw_device_get_by_name(i8*) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1891, !1892}
!llvm.ident = !{!1893}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1331, globals: !1349)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g/[inter]fftools--ffmpeg_opt.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!2 = !{!3, !25, !46, !56, !516, !716, !733, !739, !769, !779, !803, !809, !827, !851, !870, !880, !888, !900, !909, !918, !923, !937, !946, !955, !961, !966, !1317, !1321}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !4, line: 221, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24}
!6 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!7 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!8 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!9 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!10 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!11 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!12 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!13 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!14 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!15 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!16 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!17 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!18 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!19 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!20 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!21 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!22 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!23 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!24 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !26, line: 29, size: 32, align: 32, elements: !27)
!26 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!27 = !{!28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!28 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!29 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!30 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!31 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!32 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!33 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!34 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!35 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!36 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!37 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!38 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!39 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!40 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!41 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!42 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!43 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!44 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!45 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !47, line: 199, size: 32, align: 32, elements: !48)
!47 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!48 = !{!49, !50, !51, !52, !53, !54, !55}
!49 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!50 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!51 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!52 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!53 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!54 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!55 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !57, line: 215, size: 32, align: 32, elements: !58)
!57 = !DIFile(filename: "./libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!58 = !{!59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515}
!59 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!60 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!62 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!63 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!64 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!65 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!66 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!67 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!68 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!69 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!70 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!71 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!72 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!73 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!75 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!76 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!77 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!78 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!79 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!80 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!81 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!82 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!83 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!84 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!85 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!86 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!87 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!88 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!89 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!90 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!93 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!94 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!98 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!99 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!100 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!101 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!102 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!103 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!104 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!105 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!106 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!107 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!108 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!109 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!110 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!111 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!112 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!113 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!114 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!115 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!116 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!117 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!118 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!119 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!121 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!122 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!123 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!124 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!126 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!127 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!128 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!130 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!131 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!132 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!133 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!134 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!135 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!137 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!138 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!139 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!140 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!141 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!142 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!143 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!144 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!145 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!146 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!147 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!148 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!149 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!150 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!151 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!152 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!154 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!155 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!156 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!157 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!158 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!159 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!160 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!161 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!162 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!164 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!165 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!166 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!168 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!169 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!170 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!171 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!172 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!173 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!174 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!175 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!176 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!177 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!180 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!181 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!182 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!183 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!184 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!185 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!186 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!187 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!188 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!189 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!191 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!192 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!193 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!194 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!195 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!196 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!197 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!198 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!199 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!200 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!201 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!202 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!203 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!204 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!205 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!206 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!207 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!208 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!209 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!210 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!211 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!212 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!213 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!214 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!216 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!217 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!218 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!219 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!221 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!223 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!224 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!225 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!226 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!227 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!228 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!229 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!230 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!231 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!232 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!233 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!234 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!235 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!236 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!237 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!238 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!239 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!240 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!241 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!242 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!243 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!244 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!245 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!246 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!247 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!248 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!249 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!250 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!251 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!252 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!253 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!254 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!255 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!256 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!257 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!258 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!259 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!260 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!261 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!262 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!263 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!264 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!265 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!266 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!267 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!268 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!269 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!270 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!271 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!272 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!273 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!276 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!277 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!278 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!279 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!280 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!281 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!282 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!283 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!284 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!285 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!286 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!287 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!288 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!290 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!291 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!292 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!293 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!295 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!300 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!310 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!311 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!312 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!313 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!314 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!315 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!316 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!317 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!318 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!319 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!320 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!321 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!322 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!323 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!324 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!325 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!326 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!327 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!328 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!329 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!330 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!331 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!351 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!352 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!353 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!354 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!357 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!358 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!359 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!360 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!361 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!362 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!363 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!364 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!365 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!366 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!367 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!368 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!370 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!372 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!373 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!374 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!375 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!376 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!378 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!379 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!380 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!382 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!383 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!384 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!385 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!386 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!388 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!389 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!390 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!391 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!392 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!393 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!394 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!395 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!396 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!397 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!398 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!400 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!401 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!402 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!403 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!406 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!407 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!408 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!409 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!410 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!411 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!412 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!413 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!414 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!415 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!416 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!417 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!418 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!419 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!420 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!421 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!423 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!424 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!425 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!426 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!427 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!428 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!429 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!430 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!431 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!432 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!433 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!434 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!435 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!436 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!437 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!438 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!439 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!440 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!441 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!442 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!443 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!444 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!445 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!446 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!447 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!448 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!449 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!450 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!452 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!453 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!454 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!455 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!456 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!457 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!458 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!460 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!461 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!462 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!463 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!464 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!465 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!466 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!467 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!468 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!469 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!470 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!471 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!472 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!473 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!474 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!475 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!477 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!478 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!479 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!480 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!481 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!482 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!483 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!484 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!485 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!486 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!487 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!488 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!489 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!490 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!491 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!492 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!493 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!494 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!495 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!496 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!497 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!498 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!499 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!500 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!501 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!502 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!503 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!504 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!505 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!506 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!507 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!508 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!509 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!510 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!511 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!512 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!513 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!514 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!515 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!516 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !517, line: 64, size: 32, align: 32, elements: !518)
!517 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!518 = !{!519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715}
!519 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!520 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!521 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!522 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!523 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!524 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!529 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!530 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!531 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!532 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!533 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!534 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!535 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!536 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!537 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!540 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!541 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!542 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!543 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!544 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!545 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!546 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!547 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!548 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!549 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!550 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!553 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!555 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!556 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!557 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!558 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!559 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!562 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!563 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!564 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!565 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!566 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!567 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!574 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!575 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!576 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!577 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!578 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!580 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!582 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!583 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!597 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!598 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!599 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!600 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!601 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!602 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!603 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!604 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!617 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!618 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!619 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!620 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!622 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!623 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!624 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!625 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!626 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!627 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!628 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!629 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!630 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!631 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!637 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!640 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!641 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!642 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!643 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!644 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!645 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!646 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!648 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!649 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!650 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!651 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!652 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!653 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!654 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!655 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!662 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!663 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!664 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!665 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!666 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!667 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!668 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!669 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!670 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!671 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!672 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!673 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!674 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!675 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!676 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!677 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!678 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!679 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!680 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!681 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!682 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!683 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!684 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!685 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!686 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!689 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!690 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!691 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!692 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!693 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!694 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!695 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!696 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!697 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!698 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!699 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!700 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!701 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!702 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!703 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!704 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!705 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!706 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!707 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!708 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!709 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!710 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!711 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!712 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!713 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!714 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!715 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !717, line: 58, size: 32, align: 32, elements: !718)
!717 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!719 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!720 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!721 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!722 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!723 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!724 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!725 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!726 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!727 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!728 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!729 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!730 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!731 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!732 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !57, line: 3865, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738}
!735 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!736 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!737 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!738 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!739 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !57, line: 1175, size: 32, align: 32, elements: !740)
!740 = !{!741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!741 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!742 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!743 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!744 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!745 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!746 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!747 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!748 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!749 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!750 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!751 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!752 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!753 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!754 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!755 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!756 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!757 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!758 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!759 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!760 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!761 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!762 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!763 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!764 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!765 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!766 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!767 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!768 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !47, line: 272, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778}
!771 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!772 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!773 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!774 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!775 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!776 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!777 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!778 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!779 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !780, line: 48, size: 32, align: 32, elements: !781)
!780 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!781 = !{!782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802}
!782 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!783 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!784 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!785 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!786 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!787 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!788 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!789 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!790 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!791 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!792 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!793 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!794 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!795 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!796 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!797 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!798 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!799 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!800 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!801 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!802 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!803 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !517, line: 516, size: 32, align: 32, elements: !804)
!804 = !{!805, !806, !807, !808}
!805 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!806 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!807 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!808 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!809 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !517, line: 440, size: 32, align: 32, elements: !810)
!810 = !{!811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826}
!811 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!812 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!813 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!814 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!815 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!816 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!817 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!818 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!819 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!820 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!821 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!822 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!823 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!824 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!825 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!826 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!827 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !517, line: 464, size: 32, align: 32, elements: !828)
!828 = !{!829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850}
!829 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!830 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!831 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!832 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!833 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!834 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!835 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!836 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!837 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!838 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!839 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!840 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!841 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!842 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!843 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!844 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!845 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!846 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!847 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!848 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!849 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!850 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!851 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !517, line: 493, size: 32, align: 32, elements: !852)
!852 = !{!853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869}
!853 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!854 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!855 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!856 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!857 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!858 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!859 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!860 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!861 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!862 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!863 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!864 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!865 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!866 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!867 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!868 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!869 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !517, line: 538, size: 32, align: 32, elements: !871)
!871 = !{!872, !873, !874, !875, !876, !877, !878, !879}
!872 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!873 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!874 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!875 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!876 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!877 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!878 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!879 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!880 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !57, line: 1534, size: 32, align: 32, elements: !881)
!881 = !{!882, !883, !884, !885, !886, !887}
!882 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!883 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!884 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!885 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!886 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!887 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!888 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !57, line: 810, size: 32, align: 32, elements: !889)
!889 = !{!890, !891, !892, !893, !894, !895, !896, !897, !898, !899}
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!894 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!895 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!896 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!897 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!898 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!899 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!900 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !57, line: 798, size: 32, align: 32, elements: !901)
!901 = !{!902, !903, !904, !905, !906, !907, !908}
!902 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!903 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!904 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!905 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!906 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!907 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!908 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "HWAccelID", file: !910, line: 58, size: 32, align: 32, elements: !911)
!910 = !DIFile(filename: "fftools/ffmpeg.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!911 = !{!912, !913, !914, !915, !916, !917}
!912 = !DIEnumerator(name: "HWACCEL_NONE", value: 0)
!913 = !DIEnumerator(name: "HWACCEL_AUTO", value: 1)
!914 = !DIEnumerator(name: "HWACCEL_GENERIC", value: 2)
!915 = !DIEnumerator(name: "HWACCEL_VIDEOTOOLBOX", value: 3)
!916 = !DIEnumerator(name: "HWACCEL_QSV", value: 4)
!917 = !DIEnumerator(name: "HWACCEL_CUVID", value: 5)
!918 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OptGroup", file: !919, line: 3243, size: 32, align: 32, elements: !920)
!919 = !DIFile(filename: "fftools/ffmpeg_opt.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!920 = !{!921, !922}
!921 = !DIEnumerator(name: "GROUP_OUTFILE", value: 0)
!922 = !DIEnumerator(name: "GROUP_INFILE", value: 1)
!923 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVHWDeviceType", file: !924, line: 27, size: 32, align: 32, elements: !925)
!924 = !DIFile(filename: "./libavutil/hwcontext.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!925 = !{!926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936}
!926 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_NONE", value: 0)
!927 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VDPAU", value: 1)
!928 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_CUDA", value: 2)
!929 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VAAPI", value: 3)
!930 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_DXVA2", value: 4)
!931 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_QSV", value: 5)
!932 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VIDEOTOOLBOX", value: 6)
!933 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_D3D11VA", value: 7)
!934 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_DRM", value: 8)
!935 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_OPENCL", value: 9)
!936 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_MEDIACODEC", value: 10)
!937 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVIODataMarkerType", file: !938, line: 111, size: 32, align: 32, elements: !939)
!938 = !DIFile(filename: "./libavformat/avio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!939 = !{!940, !941, !942, !943, !944, !945}
!940 = !DIEnumerator(name: "AVIO_DATA_MARKER_HEADER", value: 0)
!941 = !DIEnumerator(name: "AVIO_DATA_MARKER_SYNC_POINT", value: 1)
!942 = !DIEnumerator(name: "AVIO_DATA_MARKER_BOUNDARY_POINT", value: 2)
!943 = !DIEnumerator(name: "AVIO_DATA_MARKER_UNKNOWN", value: 3)
!944 = !DIEnumerator(name: "AVIO_DATA_MARKER_TRAILER", value: 4)
!945 = !DIEnumerator(name: "AVIO_DATA_MARKER_FLUSH_POINT", value: 5)
!946 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVStreamParseType", file: !947, line: 782, size: 32, align: 32, elements: !948)
!947 = !DIFile(filename: "./libavformat/avformat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!948 = !{!949, !950, !951, !952, !953, !954}
!949 = !DIEnumerator(name: "AVSTREAM_PARSE_NONE", value: 0)
!950 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL", value: 1)
!951 = !DIEnumerator(name: "AVSTREAM_PARSE_HEADERS", value: 2)
!952 = !DIEnumerator(name: "AVSTREAM_PARSE_TIMESTAMPS", value: 3)
!953 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_ONCE", value: 4)
!954 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_RAW", value: 5)
!955 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureStructure", file: !57, line: 5085, size: 32, align: 32, elements: !956)
!956 = !{!957, !958, !959, !960}
!957 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_UNKNOWN", value: 0)
!958 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_TOP_FIELD", value: 1)
!959 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_BOTTOM_FIELD", value: 2)
!960 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_FRAME", value: 3)
!961 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDurationEstimationMethod", file: !947, line: 1315, size: 32, align: 32, elements: !962)
!962 = !{!963, !964, !965}
!963 = !DIEnumerator(name: "AVFMT_DURATION_FROM_PTS", value: 0)
!964 = !DIEnumerator(name: "AVFMT_DURATION_FROM_STREAM", value: 1)
!965 = !DIEnumerator(name: "AVFMT_DURATION_FROM_BITRATE", value: 2)
!966 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !968, file: !967, line: 503, size: 32, align: 32, elements: !1313)
!967 = !DIFile(filename: "./libavfilter/avfilter.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterLink", file: !967, line: 439, size: 493504, align: 64, elements: !969)
!969 = !{!970, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1196, !1197, !1198, !1199, !1203, !1204, !1205, !1206, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !968, file: !967, line: 440, baseType: !971, size: 64, align: 64)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64, align: 64)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterContext", file: !967, line: 67, baseType: !973)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterContext", file: !967, line: 338, size: 1344, align: 64, elements: !974)
!974 = !{!975, !1062, !1111, !1112, !1114, !1118, !1120, !1121, !1122, !1123, !1124, !1155, !1156, !1160, !1163, !1164, !1165, !1167, !1168, !1183, !1184, !1185}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !973, file: !967, line: 339, baseType: !976, size: 64, align: 64)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64, align: 64)
!977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !978)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !26, line: 143, baseType: !979)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !26, line: 67, size: 640, align: 64, elements: !980)
!980 = !{!981, !985, !990, !1021, !1022, !1023, !1024, !1028, !1034, !1036, !1040}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !979, file: !26, line: 72, baseType: !982, size: 64, align: 64)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64, align: 64)
!983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!984 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !979, file: !26, line: 78, baseType: !986, size: 64, align: 64, offset: 64)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64, align: 64)
!987 = !DISubroutineType(types: !988)
!988 = !{!982, !989}
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !979, file: !26, line: 85, baseType: !991, size: 64, align: 64, offset: 128)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64)
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !993)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 246, size: 512, align: 64, elements: !994)
!994 = !{!995, !996, !997, !999, !1000, !1017, !1018, !1019, !1020}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !993, file: !4, line: 247, baseType: !982, size: 64, align: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !993, file: !4, line: 253, baseType: !982, size: 64, align: 64, offset: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !993, file: !4, line: 259, baseType: !998, size: 32, align: 32, offset: 128)
!998 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !993, file: !4, line: 260, baseType: !3, size: 32, align: 32, offset: 160)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !993, file: !4, line: 271, baseType: !1001, size: 64, align: 64, offset: 192)
!1001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !993, file: !4, line: 265, size: 64, align: 64, elements: !1002)
!1002 = !{!1003, !1007, !1009, !1010}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1001, file: !4, line: 266, baseType: !1004, size: 64, align: 64)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1005, line: 40, baseType: !1006)
!1005 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!1006 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1001, file: !4, line: 267, baseType: !1008, size: 64, align: 64)
!1008 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1001, file: !4, line: 268, baseType: !982, size: 64, align: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1001, file: !4, line: 270, baseType: !1011, size: 64, align: 32)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1012, line: 61, baseType: !1013)
!1012 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1012, line: 58, size: 64, align: 32, elements: !1014)
!1014 = !{!1015, !1016}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1013, file: !1012, line: 59, baseType: !998, size: 32, align: 32)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1013, file: !1012, line: 60, baseType: !998, size: 32, align: 32, offset: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !993, file: !4, line: 272, baseType: !1008, size: 64, align: 64, offset: 256)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !993, file: !4, line: 273, baseType: !1008, size: 64, align: 64, offset: 320)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !993, file: !4, line: 275, baseType: !998, size: 32, align: 32, offset: 384)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !993, file: !4, line: 300, baseType: !982, size: 64, align: 64, offset: 448)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !979, file: !26, line: 93, baseType: !998, size: 32, align: 32, offset: 192)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !979, file: !26, line: 99, baseType: !998, size: 32, align: 32, offset: 224)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !979, file: !26, line: 108, baseType: !998, size: 32, align: 32, offset: 256)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !979, file: !26, line: 113, baseType: !1025, size: 64, align: 64, offset: 320)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64, align: 64)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!989, !989, !989}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !979, file: !26, line: 123, baseType: !1029, size: 64, align: 64, offset: 384)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64, align: 64)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{!1032, !1032}
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64, align: 64)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !979)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !979, file: !26, line: 130, baseType: !1035, size: 32, align: 32, offset: 448)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !26, line: 48, baseType: !25)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !979, file: !26, line: 136, baseType: !1037, size: 64, align: 64, offset: 512)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64, align: 64)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!1035, !989}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !979, file: !26, line: 142, baseType: !1041, size: 64, align: 64, offset: 576)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{!998, !1044, !989, !982, !998}
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64, align: 64)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64, align: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 329, size: 128, align: 64, elements: !1047)
!1047 = !{!1048, !1060, !1061}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1046, file: !4, line: 360, baseType: !1049, size: 64, align: 64)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64, align: 64)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64, align: 64)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !4, line: 324, baseType: !1052)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !4, line: 306, size: 384, align: 64, elements: !1053)
!1053 = !{!1054, !1055, !1056, !1057, !1058, !1059}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1052, file: !4, line: 307, baseType: !982, size: 64, align: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1052, file: !4, line: 313, baseType: !1008, size: 64, align: 64, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1052, file: !4, line: 313, baseType: !1008, size: 64, align: 64, offset: 128)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1052, file: !4, line: 318, baseType: !1008, size: 64, align: 64, offset: 192)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1052, file: !4, line: 318, baseType: !1008, size: 64, align: 64, offset: 256)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1052, file: !4, line: 323, baseType: !998, size: 32, align: 32, offset: 320)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1046, file: !4, line: 364, baseType: !998, size: 32, align: 32, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1046, file: !4, line: 368, baseType: !998, size: 32, align: 32, offset: 96)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !973, file: !967, line: 341, baseType: !1063, size: 64, align: 64, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64, align: 64)
!1064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1065)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilter", file: !967, line: 328, baseType: !1066)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilter", file: !967, line: 144, size: 1024, align: 64, elements: !1067)
!1067 = !{!1068, !1069, !1070, !1075, !1076, !1077, !1078, !1082, !1083, !1092, !1096, !1097, !1098, !1099, !1101, !1106, !1110}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1066, file: !967, line: 148, baseType: !982, size: 64, align: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1066, file: !967, line: 155, baseType: !982, size: 64, align: 64, offset: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1066, file: !967, line: 164, baseType: !1071, size: 64, align: 64, offset: 128)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64, align: 64)
!1072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1073)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterPad", file: !967, line: 69, baseType: !1074)
!1074 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterPad", file: !967, line: 69, flags: DIFlagFwdDecl)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1066, file: !967, line: 172, baseType: !1071, size: 64, align: 64, offset: 192)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1066, file: !967, line: 182, baseType: !976, size: 64, align: 64, offset: 256)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1066, file: !967, line: 187, baseType: !998, size: 32, align: 32, offset: 320)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "preinit", scope: !1066, file: !967, line: 210, baseType: !1079, size: 64, align: 64, offset: 384)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64, align: 64)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!998, !971}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1066, file: !967, line: 233, baseType: !1079, size: 64, align: 64, offset: 448)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "init_dict", scope: !1066, file: !967, line: 246, baseType: !1084, size: 64, align: 64, offset: 512)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64, align: 64)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!998, !971, !1087}
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64, align: 64)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64, align: 64)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1090, line: 86, baseType: !1091)
!1090 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!1091 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1090, line: 86, flags: DIFlagFwdDecl)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1066, file: !967, line: 258, baseType: !1093, size: 64, align: 64, offset: 576)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64, align: 64)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{null, !971}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "query_formats", scope: !1066, file: !967, line: 282, baseType: !1079, size: 64, align: 64, offset: 640)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !1066, file: !967, line: 284, baseType: !998, size: 32, align: 32, offset: 704)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "flags_internal", scope: !1066, file: !967, line: 286, baseType: !998, size: 32, align: 32, offset: 736)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1066, file: !967, line: 292, baseType: !1100, size: 64, align: 64, offset: 768)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64, align: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "process_command", scope: !1066, file: !967, line: 306, baseType: !1102, size: 64, align: 64, offset: 832)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64, align: 64)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!998, !971, !982, !982, !1105, !998, !998}
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64, align: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "init_opaque", scope: !1066, file: !967, line: 313, baseType: !1107, size: 64, align: 64, offset: 896)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64, align: 64)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!998, !971, !989}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !1066, file: !967, line: 327, baseType: !1079, size: 64, align: 64, offset: 960)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !973, file: !967, line: 343, baseType: !1105, size: 64, align: 64, offset: 128)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "input_pads", scope: !973, file: !967, line: 345, baseType: !1113, size: 64, align: 64, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64, align: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !973, file: !967, line: 346, baseType: !1115, size: 64, align: 64, offset: 256)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64, align: 64)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterLink", file: !967, line: 68, baseType: !968)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inputs", scope: !973, file: !967, line: 347, baseType: !1119, size: 32, align: 32, offset: 320)
!1119 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "output_pads", scope: !973, file: !967, line: 349, baseType: !1113, size: 64, align: 64, offset: 384)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !973, file: !967, line: 350, baseType: !1115, size: 64, align: 64, offset: 448)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "nb_outputs", scope: !973, file: !967, line: 351, baseType: !1119, size: 32, align: 32, offset: 512)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !973, file: !967, line: 353, baseType: !989, size: 64, align: 64, offset: 576)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !973, file: !967, line: 355, baseType: !1125, size: 64, align: 64, offset: 640)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64, align: 64)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterGraph", file: !967, line: 840, size: 768, align: 64, elements: !1127)
!1127 = !{!1128, !1129, !1131, !1132, !1133, !1134, !1135, !1136, !1140, !1141, !1151, !1152, !1153, !1154}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1126, file: !967, line: 841, baseType: !976, size: 64, align: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !1126, file: !967, line: 842, baseType: !1130, size: 64, align: 64, offset: 64)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64, align: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "nb_filters", scope: !1126, file: !967, line: 843, baseType: !1119, size: 32, align: 32, offset: 128)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "scale_sws_opts", scope: !1126, file: !967, line: 845, baseType: !1105, size: 64, align: 64, offset: 192)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "resample_lavr_opts", scope: !1126, file: !967, line: 847, baseType: !1105, size: 64, align: 64, offset: 256)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1126, file: !967, line: 862, baseType: !998, size: 32, align: 32, offset: 320)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "nb_threads", scope: !1126, file: !967, line: 869, baseType: !998, size: 32, align: 32, offset: 352)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1126, file: !967, line: 874, baseType: !1137, size: 64, align: 64, offset: 384)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64, align: 64)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterGraphInternal", file: !967, line: 809, baseType: !1139)
!1139 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterGraphInternal", file: !967, line: 809, flags: DIFlagFwdDecl)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1126, file: !967, line: 881, baseType: !989, size: 64, align: 64, offset: 448)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1126, file: !967, line: 895, baseType: !1142, size: 64, align: 64, offset: 512)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64, align: 64)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "avfilter_execute_func", file: !967, line: 837, baseType: !1144)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{!998, !971, !1146, !989, !1150, !998}
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64, align: 64)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "avfilter_action_func", file: !967, line: 823, baseType: !1148)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!998, !971, !989, !998, !998}
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64, align: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "aresample_swr_opts", scope: !1126, file: !967, line: 897, baseType: !1105, size: 64, align: 64, offset: 576)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "sink_links", scope: !1126, file: !967, line: 906, baseType: !1115, size: 64, align: 64, offset: 640)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "sink_links_count", scope: !1126, file: !967, line: 907, baseType: !998, size: 32, align: 32, offset: 704)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "disable_auto_convert", scope: !1126, file: !967, line: 909, baseType: !1119, size: 32, align: 32, offset: 736)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !973, file: !967, line: 373, baseType: !998, size: 32, align: 32, offset: 704)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !973, file: !967, line: 378, baseType: !1157, size: 64, align: 64, offset: 768)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64, align: 64)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterInternal", file: !967, line: 335, baseType: !1159)
!1159 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterInternal", file: !967, line: 335, flags: DIFlagFwdDecl)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "command_queue", scope: !973, file: !967, line: 380, baseType: !1161, size: 64, align: 64, offset: 832)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64, align: 64)
!1162 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterCommand", file: !967, line: 380, flags: DIFlagFwdDecl)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "enable_str", scope: !973, file: !967, line: 382, baseType: !1105, size: 64, align: 64, offset: 896)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !973, file: !967, line: 383, baseType: !989, size: 64, align: 64, offset: 960)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "var_values", scope: !973, file: !967, line: 384, baseType: !1166, size: 64, align: 64, offset: 1024)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64, align: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "is_disabled", scope: !973, file: !967, line: 385, baseType: !998, size: 32, align: 32, offset: 1088)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !973, file: !967, line: 394, baseType: !1169, size: 64, align: 64, offset: 1152)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64, align: 64)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1171, line: 94, baseType: !1172)
!1171 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1171, line: 81, size: 192, align: 64, elements: !1173)
!1173 = !{!1174, !1178, !1182}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1172, file: !1171, line: 82, baseType: !1175, size: 64, align: 64)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64, align: 64)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1171, line: 73, baseType: !1177)
!1177 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1171, line: 73, flags: DIFlagFwdDecl)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1172, file: !1171, line: 89, baseType: !1179, size: 64, align: 64, offset: 64)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1005, line: 48, baseType: !1181)
!1181 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1172, file: !1171, line: 93, baseType: !998, size: 32, align: 32, offset: 128)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "nb_threads", scope: !973, file: !967, line: 401, baseType: !998, size: 32, align: 32, offset: 1216)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !973, file: !967, line: 408, baseType: !1119, size: 32, align: 32, offset: 1248)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !973, file: !967, line: 424, baseType: !998, size: 32, align: 32, offset: 1280)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "srcpad", scope: !968, file: !967, line: 441, baseType: !1113, size: 64, align: 64, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !968, file: !967, line: 443, baseType: !971, size: 64, align: 64, offset: 128)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "dstpad", scope: !968, file: !967, line: 444, baseType: !1113, size: 64, align: 64, offset: 192)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !968, file: !967, line: 446, baseType: !46, size: 32, align: 32, offset: 256)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !968, file: !967, line: 449, baseType: !998, size: 32, align: 32, offset: 288)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !968, file: !967, line: 450, baseType: !998, size: 32, align: 32, offset: 320)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !968, file: !967, line: 451, baseType: !1011, size: 64, align: 32, offset: 352)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !968, file: !967, line: 453, baseType: !1194, size: 64, align: 64, offset: 448)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1005, line: 55, baseType: !1195)
!1195 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !968, file: !967, line: 454, baseType: !998, size: 32, align: 32, offset: 512)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !968, file: !967, line: 456, baseType: !998, size: 32, align: 32, offset: 544)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !968, file: !967, line: 465, baseType: !1011, size: 64, align: 32, offset: 576)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "in_formats", scope: !968, file: !967, line: 481, baseType: !1200, size: 64, align: 64, offset: 640)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64, align: 64)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterFormats", file: !967, line: 70, baseType: !1202)
!1202 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterFormats", file: !967, line: 70, flags: DIFlagFwdDecl)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "out_formats", scope: !968, file: !967, line: 482, baseType: !1200, size: 64, align: 64, offset: 704)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "in_samplerates", scope: !968, file: !967, line: 488, baseType: !1200, size: 64, align: 64, offset: 768)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "out_samplerates", scope: !968, file: !967, line: 489, baseType: !1200, size: 64, align: 64, offset: 832)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "in_channel_layouts", scope: !968, file: !967, line: 490, baseType: !1207, size: 64, align: 64, offset: 896)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64, align: 64)
!1208 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterChannelLayouts", file: !967, line: 490, flags: DIFlagFwdDecl)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "out_channel_layouts", scope: !968, file: !967, line: 491, baseType: !1207, size: 64, align: 64, offset: 960)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "request_samples", scope: !968, file: !967, line: 500, baseType: !998, size: 32, align: 32, offset: 1024)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !968, file: !967, line: 507, baseType: !966, size: 32, align: 32, offset: 1056)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !968, file: !967, line: 512, baseType: !1125, size: 64, align: 64, offset: 1088)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "current_pts", scope: !968, file: !967, line: 518, baseType: !1004, size: 64, align: 64, offset: 1152)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "current_pts_us", scope: !968, file: !967, line: 524, baseType: !1004, size: 64, align: 64, offset: 1216)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "age_index", scope: !968, file: !967, line: 529, baseType: !998, size: 32, align: 32, offset: 1280)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate", scope: !968, file: !967, line: 542, baseType: !1011, size: 64, align: 32, offset: 1312)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "partial_buf", scope: !968, file: !967, line: 547, baseType: !1218, size: 64, align: 64, offset: 1408)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64, align: 64)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !780, line: 646, baseType: !1220)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !780, line: 268, size: 4288, align: 64, elements: !1221)
!1221 = !{!1222, !1226, !1228, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1255, !1257, !1258, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1287, !1288, !1289, !1290, !1291, !1292, !1295, !1296, !1297, !1298}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1220, file: !780, line: 282, baseType: !1223, size: 512, align: 64)
!1223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1179, size: 512, align: 64, elements: !1224)
!1224 = !{!1225}
!1225 = !DISubrange(count: 8)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1220, file: !780, line: 299, baseType: !1227, size: 256, align: 32, offset: 512)
!1227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !998, size: 256, align: 32, elements: !1224)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1220, file: !780, line: 315, baseType: !1229, size: 64, align: 64, offset: 768)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64, align: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1220, file: !780, line: 326, baseType: !998, size: 32, align: 32, offset: 832)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1220, file: !780, line: 326, baseType: !998, size: 32, align: 32, offset: 864)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1220, file: !780, line: 334, baseType: !998, size: 32, align: 32, offset: 896)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1220, file: !780, line: 341, baseType: !998, size: 32, align: 32, offset: 928)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1220, file: !780, line: 346, baseType: !998, size: 32, align: 32, offset: 960)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1220, file: !780, line: 351, baseType: !769, size: 32, align: 32, offset: 992)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1220, file: !780, line: 356, baseType: !1011, size: 64, align: 32, offset: 1024)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1220, file: !780, line: 361, baseType: !1004, size: 64, align: 64, offset: 1088)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1220, file: !780, line: 369, baseType: !1004, size: 64, align: 64, offset: 1152)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1220, file: !780, line: 377, baseType: !1004, size: 64, align: 64, offset: 1216)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1220, file: !780, line: 382, baseType: !998, size: 32, align: 32, offset: 1280)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1220, file: !780, line: 386, baseType: !998, size: 32, align: 32, offset: 1312)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1220, file: !780, line: 391, baseType: !998, size: 32, align: 32, offset: 1344)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1220, file: !780, line: 396, baseType: !989, size: 64, align: 64, offset: 1408)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1220, file: !780, line: 403, baseType: !1245, size: 512, align: 64, offset: 1472)
!1245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1194, size: 512, align: 64, elements: !1224)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1220, file: !780, line: 410, baseType: !998, size: 32, align: 32, offset: 1984)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1220, file: !780, line: 415, baseType: !998, size: 32, align: 32, offset: 2016)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1220, file: !780, line: 420, baseType: !998, size: 32, align: 32, offset: 2048)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1220, file: !780, line: 425, baseType: !998, size: 32, align: 32, offset: 2080)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1220, file: !780, line: 435, baseType: !1004, size: 64, align: 64, offset: 2112)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1220, file: !780, line: 440, baseType: !998, size: 32, align: 32, offset: 2176)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1220, file: !780, line: 445, baseType: !1194, size: 64, align: 64, offset: 2240)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1220, file: !780, line: 459, baseType: !1254, size: 512, align: 64, offset: 2304)
!1254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1169, size: 512, align: 64, elements: !1224)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1220, file: !780, line: 473, baseType: !1256, size: 64, align: 64, offset: 2816)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64, align: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1220, file: !780, line: 477, baseType: !998, size: 32, align: 32, offset: 2880)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1220, file: !780, line: 479, baseType: !1259, size: 64, align: 64, offset: 2944)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64, align: 64)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64, align: 64)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !780, line: 207, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !780, line: 201, size: 320, align: 64, elements: !1263)
!1263 = !{!1264, !1265, !1266, !1267, !1268}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1262, file: !780, line: 202, baseType: !779, size: 32, align: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1262, file: !780, line: 203, baseType: !1179, size: 64, align: 64, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1262, file: !780, line: 204, baseType: !998, size: 32, align: 32, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1262, file: !780, line: 205, baseType: !1088, size: 64, align: 64, offset: 192)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1262, file: !780, line: 206, baseType: !1169, size: 64, align: 64, offset: 256)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1220, file: !780, line: 480, baseType: !998, size: 32, align: 32, offset: 3008)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1220, file: !780, line: 505, baseType: !998, size: 32, align: 32, offset: 3040)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1220, file: !780, line: 512, baseType: !803, size: 32, align: 32, offset: 3072)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1220, file: !780, line: 514, baseType: !809, size: 32, align: 32, offset: 3104)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1220, file: !780, line: 516, baseType: !827, size: 32, align: 32, offset: 3136)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1220, file: !780, line: 523, baseType: !851, size: 32, align: 32, offset: 3168)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1220, file: !780, line: 525, baseType: !870, size: 32, align: 32, offset: 3200)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1220, file: !780, line: 532, baseType: !1004, size: 64, align: 64, offset: 3264)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1220, file: !780, line: 539, baseType: !1004, size: 64, align: 64, offset: 3328)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1220, file: !780, line: 547, baseType: !1004, size: 64, align: 64, offset: 3392)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1220, file: !780, line: 554, baseType: !1088, size: 64, align: 64, offset: 3456)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1220, file: !780, line: 563, baseType: !998, size: 32, align: 32, offset: 3520)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1220, file: !780, line: 572, baseType: !998, size: 32, align: 32, offset: 3552)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1220, file: !780, line: 581, baseType: !998, size: 32, align: 32, offset: 3584)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1220, file: !780, line: 588, baseType: !1284, size: 64, align: 64, offset: 3648)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64, align: 64)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1005, line: 36, baseType: !1286)
!1286 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1220, file: !780, line: 593, baseType: !998, size: 32, align: 32, offset: 3712)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1220, file: !780, line: 596, baseType: !998, size: 32, align: 32, offset: 3744)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1220, file: !780, line: 599, baseType: !1169, size: 64, align: 64, offset: 3776)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1220, file: !780, line: 605, baseType: !1169, size: 64, align: 64, offset: 3840)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1220, file: !780, line: 616, baseType: !1169, size: 64, align: 64, offset: 3904)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1220, file: !780, line: 626, baseType: !1293, size: 64, align: 64, offset: 3968)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1294, line: 216, baseType: !1195)
!1294 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1220, file: !780, line: 627, baseType: !1293, size: 64, align: 64, offset: 4032)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1220, file: !780, line: 628, baseType: !1293, size: 64, align: 64, offset: 4096)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1220, file: !780, line: 629, baseType: !1293, size: 64, align: 64, offset: 4160)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1220, file: !780, line: 645, baseType: !1169, size: 64, align: 64, offset: 4224)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "partial_buf_size", scope: !968, file: !967, line: 553, baseType: !998, size: 32, align: 32, offset: 1472)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "min_samples", scope: !968, file: !967, line: 562, baseType: !998, size: 32, align: 32, offset: 1504)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "max_samples", scope: !968, file: !967, line: 568, baseType: !998, size: 32, align: 32, offset: 1536)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !968, file: !967, line: 573, baseType: !998, size: 32, align: 32, offset: 1568)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !968, file: !967, line: 578, baseType: !1119, size: 32, align: 32, offset: 1600)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count_in", scope: !968, file: !967, line: 583, baseType: !1004, size: 64, align: 64, offset: 1664)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count_out", scope: !968, file: !967, line: 583, baseType: !1004, size: 64, align: 64, offset: 1728)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "frame_pool", scope: !968, file: !967, line: 588, baseType: !989, size: 64, align: 64, offset: 1792)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "frame_wanted_out", scope: !968, file: !967, line: 595, baseType: !998, size: 32, align: 32, offset: 1856)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !968, file: !967, line: 601, baseType: !1169, size: 64, align: 64, offset: 1920)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !968, file: !967, line: 610, baseType: !1310, size: 491520, align: 8, offset: 1984)
!1310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 491520, align: 8, elements: !1311)
!1311 = !{!1312}
!1312 = !DISubrange(count: 61440)
!1313 = !{!1314, !1315, !1316}
!1314 = !DIEnumerator(name: "AVLINK_UNINIT", value: 0)
!1315 = !DIEnumerator(name: "AVLINK_STARTINIT", value: 1)
!1316 = !DIEnumerator(name: "AVLINK_INIT", value: 2)
!1317 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !910, line: 437, size: 32, align: 32, elements: !1318)
!1318 = !{!1319, !1320}
!1319 = !DIEnumerator(name: "ENCODER_FINISHED", value: 1)
!1320 = !DIEnumerator(name: "MUXER_FINISHED", value: 2)
!1321 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1322, file: !919, line: 2755, size: 32, align: 32, elements: !1326)
!1322 = distinct !DISubprogram(name: "opt_target", scope: !919, file: !919, line: 2752, type: !1323, isLocal: true, isDefinition: true, scopeLine: 2753, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!998, !989, !982, !982}
!1325 = !{}
!1326 = !{!1327, !1328, !1329, !1330}
!1327 = !DIEnumerator(name: "PAL", value: 0)
!1328 = !DIEnumerator(name: "NTSC", value: 1)
!1329 = !DIEnumerator(name: "FILM", value: 2)
!1330 = !DIEnumerator(name: "UNKNOWN", value: 3)
!1331 = !{!989, !1004, !1179, !1150, !998, !1119, !1008, !1332, !1339, !1344}
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64, align: 64)
!1333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1335, line: 221, size: 32, align: 8, elements: !1336)
!1335 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!1336 = !{!1337}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1334, file: !1335, line: 221, baseType: !1338, size: 32, align: 32)
!1338 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1005, line: 51, baseType: !1119)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1340, line: 85, baseType: !1341)
!1340 = !DIFile(filename: "/usr/include/signal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64, align: 64)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{null, !998}
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64, align: 64)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !1346, line: 75, baseType: !1347)
!1346 = !DIFile(filename: "/usr/include/time.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !1348, line: 139, baseType: !1006)
!1348 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!1349 = !{!1350, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1850, !1851, !1859, !1860, !1861, !1862, !1873, !1874, !1875, !1876, !1877, !1878, !1882, !1887, !1888, !1889, !1890}
!1350 = distinct !DIGlobalVariable(name: "hwaccels", scope: !0, file: !919, line: 68, type: !1351, isLocal: false, isDefinition: true, variable: [1 x %struct.HWAccel]* @hwaccels)
!1351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1352, size: 192, align: 64, elements: !1802)
!1352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1353)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "HWAccel", file: !910, line: 72, baseType: !1354)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HWAccel", file: !910, line: 67, size: 192, align: 64, elements: !1355)
!1355 = !{!1356, !1357, !1800, !1801}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1354, file: !910, line: 68, baseType: !982, size: 64, align: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1354, file: !910, line: 69, baseType: !1358, size: 64, align: 64, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64, align: 64)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!998, !1361}
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64, align: 64)
!1362 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !57, line: 3360, baseType: !1363)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !57, line: 1556, size: 8448, align: 64, elements: !1364)
!1364 = !{!1365, !1366, !1367, !1368, !1523, !1524, !1525, !1526, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1552, !1556, !1557, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1738, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1363, file: !57, line: 1561, baseType: !976, size: 64, align: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1363, file: !57, line: 1562, baseType: !998, size: 32, align: 32, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1363, file: !57, line: 1564, baseType: !46, size: 32, align: 32, offset: 96)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1363, file: !57, line: 1565, baseType: !1369, size: 64, align: 64, offset: 128)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64, align: 64)
!1370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1371)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !57, line: 3468, size: 1984, align: 64, elements: !1372)
!1372 = !{!1373, !1374, !1375, !1376, !1377, !1378, !1381, !1384, !1387, !1390, !1393, !1394, !1395, !1403, !1404, !1405, !1407, !1408, !1414, !1419, !1423, !1424, !1466, !1495, !1499, !1500, !1504, !1508, !1512, !1516, !1517, !1518}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1371, file: !57, line: 3475, baseType: !982, size: 64, align: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1371, file: !57, line: 3480, baseType: !982, size: 64, align: 64, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1371, file: !57, line: 3481, baseType: !46, size: 32, align: 32, offset: 128)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1371, file: !57, line: 3482, baseType: !56, size: 32, align: 32, offset: 160)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1371, file: !57, line: 3487, baseType: !998, size: 32, align: 32, offset: 192)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1371, file: !57, line: 3488, baseType: !1379, size: 64, align: 64, offset: 256)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64, align: 64)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1011)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1371, file: !57, line: 3489, baseType: !1382, size: 64, align: 64, offset: 320)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64, align: 64)
!1383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1371, file: !57, line: 3490, baseType: !1385, size: 64, align: 64, offset: 384)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64, align: 64)
!1386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !998)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1371, file: !57, line: 3491, baseType: !1388, size: 64, align: 64, offset: 448)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64, align: 64)
!1389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !716)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1371, file: !57, line: 3492, baseType: !1391, size: 64, align: 64, offset: 512)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64, align: 64)
!1392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1194)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1371, file: !57, line: 3493, baseType: !1180, size: 8, align: 8, offset: 576)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1371, file: !57, line: 3494, baseType: !976, size: 64, align: 64, offset: 640)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1371, file: !57, line: 3495, baseType: !1396, size: 64, align: 64, offset: 704)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64, align: 64)
!1397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1398)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !57, line: 3404, baseType: !1399)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !57, line: 3401, size: 128, align: 64, elements: !1400)
!1400 = !{!1401, !1402}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1399, file: !57, line: 3402, baseType: !998, size: 32, align: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1399, file: !57, line: 3403, baseType: !982, size: 64, align: 64, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1371, file: !57, line: 3507, baseType: !982, size: 64, align: 64, offset: 768)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1371, file: !57, line: 3516, baseType: !998, size: 32, align: 32, offset: 832)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1371, file: !57, line: 3517, baseType: !1406, size: 64, align: 64, offset: 896)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64, align: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1371, file: !57, line: 3527, baseType: !1358, size: 64, align: 64, offset: 960)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1371, file: !57, line: 3535, baseType: !1409, size: 64, align: 64, offset: 1024)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64, align: 64)
!1410 = !DISubroutineType(types: !1411)
!1411 = !{!998, !1361, !1412}
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64, align: 64)
!1413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1371, file: !57, line: 3541, baseType: !1415, size: 64, align: 64, offset: 1088)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64, align: 64)
!1416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1417)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !57, line: 3461, baseType: !1418)
!1418 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !57, line: 3461, flags: DIFlagFwdDecl)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1371, file: !57, line: 3549, baseType: !1420, size: 64, align: 64, offset: 1152)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64, align: 64)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{null, !1406}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1371, file: !57, line: 3551, baseType: !1358, size: 64, align: 64, offset: 1216)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1371, file: !57, line: 3552, baseType: !1425, size: 64, align: 64, offset: 1280)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64, align: 64)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{!998, !1361, !1179, !998, !1428}
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64, align: 64)
!1429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1430)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !57, line: 3920, size: 256, align: 64, elements: !1431)
!1431 = !{!1432, !1435, !1436, !1437, !1438, !1465}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1430, file: !57, line: 3921, baseType: !1433, size: 16, align: 16)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1005, line: 49, baseType: !1434)
!1434 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1430, file: !57, line: 3922, baseType: !1338, size: 32, align: 32, offset: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1430, file: !57, line: 3923, baseType: !1338, size: 32, align: 32, offset: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1430, file: !57, line: 3924, baseType: !1119, size: 32, align: 32, offset: 96)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1430, file: !57, line: 3925, baseType: !1439, size: 64, align: 64, offset: 128)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64, align: 64)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64, align: 64)
!1441 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !57, line: 3918, baseType: !1442)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !57, line: 3885, size: 1600, align: 64, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1448, !1449, !1455, !1459, !1461, !1462, !1463, !1464}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1442, file: !57, line: 3886, baseType: !998, size: 32, align: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1442, file: !57, line: 3887, baseType: !998, size: 32, align: 32, offset: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1442, file: !57, line: 3888, baseType: !998, size: 32, align: 32, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1442, file: !57, line: 3889, baseType: !998, size: 32, align: 32, offset: 96)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1442, file: !57, line: 3890, baseType: !998, size: 32, align: 32, offset: 128)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1442, file: !57, line: 3897, baseType: !1450, size: 768, align: 64, offset: 192)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !57, line: 3858, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !57, line: 3853, size: 768, align: 64, elements: !1452)
!1452 = !{!1453, !1454}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1451, file: !57, line: 3855, baseType: !1223, size: 512, align: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1451, file: !57, line: 3857, baseType: !1227, size: 256, align: 32, offset: 512)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1442, file: !57, line: 3903, baseType: !1456, size: 256, align: 64, offset: 960)
!1456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1179, size: 256, align: 64, elements: !1457)
!1457 = !{!1458}
!1458 = !DISubrange(count: 4)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1442, file: !57, line: 3904, baseType: !1460, size: 128, align: 32, offset: 1216)
!1460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !998, size: 128, align: 32, elements: !1457)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1442, file: !57, line: 3906, baseType: !733, size: 32, align: 32, offset: 1344)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1442, file: !57, line: 3908, baseType: !1105, size: 64, align: 64, offset: 1408)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1442, file: !57, line: 3915, baseType: !1105, size: 64, align: 64, offset: 1472)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1442, file: !57, line: 3917, baseType: !998, size: 32, align: 32, offset: 1536)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1430, file: !57, line: 3926, baseType: !1004, size: 64, align: 64, offset: 192)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1371, file: !57, line: 3564, baseType: !1467, size: 64, align: 64, offset: 1344)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64, align: 64)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!998, !1361, !1470, !1493, !1150}
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64, align: 64)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !57, line: 1499, baseType: !1472)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !57, line: 1445, size: 704, align: 64, elements: !1473)
!1473 = !{!1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1489, !1490, !1491, !1492}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1472, file: !57, line: 1451, baseType: !1169, size: 64, align: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1472, file: !57, line: 1461, baseType: !1004, size: 64, align: 64, offset: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1472, file: !57, line: 1467, baseType: !1004, size: 64, align: 64, offset: 128)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1472, file: !57, line: 1468, baseType: !1179, size: 64, align: 64, offset: 192)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1472, file: !57, line: 1469, baseType: !998, size: 32, align: 32, offset: 256)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1472, file: !57, line: 1470, baseType: !998, size: 32, align: 32, offset: 288)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1472, file: !57, line: 1474, baseType: !998, size: 32, align: 32, offset: 320)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1472, file: !57, line: 1479, baseType: !1482, size: 64, align: 64, offset: 384)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64, align: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !57, line: 1415, baseType: !1484)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !57, line: 1411, size: 128, align: 64, elements: !1485)
!1485 = !{!1486, !1487, !1488}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1484, file: !57, line: 1412, baseType: !1179, size: 64, align: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1484, file: !57, line: 1413, baseType: !998, size: 32, align: 32, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1484, file: !57, line: 1414, baseType: !739, size: 32, align: 32, offset: 96)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1472, file: !57, line: 1480, baseType: !998, size: 32, align: 32, offset: 448)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1472, file: !57, line: 1486, baseType: !1004, size: 64, align: 64, offset: 512)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1472, file: !57, line: 1488, baseType: !1004, size: 64, align: 64, offset: 576)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1472, file: !57, line: 1497, baseType: !1004, size: 64, align: 64, offset: 640)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64, align: 64)
!1494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1219)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1371, file: !57, line: 3566, baseType: !1496, size: 64, align: 64, offset: 1408)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64, align: 64)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!998, !1361, !989, !1150, !1470}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1371, file: !57, line: 3567, baseType: !1358, size: 64, align: 64, offset: 1472)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1371, file: !57, line: 3576, baseType: !1501, size: 64, align: 64, offset: 1536)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64, align: 64)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!998, !1361, !1493}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1371, file: !57, line: 3577, baseType: !1505, size: 64, align: 64, offset: 1600)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64, align: 64)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{!998, !1361, !1470}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1371, file: !57, line: 3584, baseType: !1509, size: 64, align: 64, offset: 1664)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64, align: 64)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!998, !1361, !1218}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1371, file: !57, line: 3589, baseType: !1513, size: 64, align: 64, offset: 1728)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64, align: 64)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{null, !1361}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1371, file: !57, line: 3594, baseType: !998, size: 32, align: 32, offset: 1792)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1371, file: !57, line: 3600, baseType: !982, size: 64, align: 64, offset: 1856)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1371, file: !57, line: 3609, baseType: !1519, size: 64, align: 64, offset: 1920)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64, align: 64)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64, align: 64)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1522)
!1522 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !57, line: 3609, flags: DIFlagFwdDecl)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1363, file: !57, line: 1566, baseType: !56, size: 32, align: 32, offset: 192)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1363, file: !57, line: 1581, baseType: !1119, size: 32, align: 32, offset: 224)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1363, file: !57, line: 1583, baseType: !989, size: 64, align: 64, offset: 256)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1363, file: !57, line: 1591, baseType: !1527, size: 64, align: 64, offset: 320)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64, align: 64)
!1528 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !57, line: 1532, flags: DIFlagFwdDecl)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1363, file: !57, line: 1598, baseType: !989, size: 64, align: 64, offset: 384)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1363, file: !57, line: 1606, baseType: !1004, size: 64, align: 64, offset: 448)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1363, file: !57, line: 1614, baseType: !998, size: 32, align: 32, offset: 512)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1363, file: !57, line: 1622, baseType: !998, size: 32, align: 32, offset: 544)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1363, file: !57, line: 1628, baseType: !998, size: 32, align: 32, offset: 576)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1363, file: !57, line: 1636, baseType: !998, size: 32, align: 32, offset: 608)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1363, file: !57, line: 1643, baseType: !998, size: 32, align: 32, offset: 640)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1363, file: !57, line: 1657, baseType: !1179, size: 64, align: 64, offset: 704)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1363, file: !57, line: 1658, baseType: !998, size: 32, align: 32, offset: 768)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1363, file: !57, line: 1679, baseType: !1011, size: 64, align: 32, offset: 800)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1363, file: !57, line: 1688, baseType: !998, size: 32, align: 32, offset: 864)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1363, file: !57, line: 1712, baseType: !998, size: 32, align: 32, offset: 896)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1363, file: !57, line: 1729, baseType: !998, size: 32, align: 32, offset: 928)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1363, file: !57, line: 1729, baseType: !998, size: 32, align: 32, offset: 960)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1363, file: !57, line: 1744, baseType: !998, size: 32, align: 32, offset: 992)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1363, file: !57, line: 1744, baseType: !998, size: 32, align: 32, offset: 1024)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1363, file: !57, line: 1751, baseType: !998, size: 32, align: 32, offset: 1056)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1363, file: !57, line: 1766, baseType: !516, size: 32, align: 32, offset: 1088)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1363, file: !57, line: 1791, baseType: !1548, size: 64, align: 64, offset: 1152)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64, align: 64)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{null, !1551, !1493, !1150, !998, !998, !998}
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64, align: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1363, file: !57, line: 1808, baseType: !1553, size: 64, align: 64, offset: 1216)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64, align: 64)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!516, !1551, !1382}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1363, file: !57, line: 1816, baseType: !998, size: 32, align: 32, offset: 1280)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1363, file: !57, line: 1825, baseType: !1558, size: 32, align: 32, offset: 1312)
!1558 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1363, file: !57, line: 1830, baseType: !998, size: 32, align: 32, offset: 1344)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1363, file: !57, line: 1838, baseType: !1558, size: 32, align: 32, offset: 1376)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1363, file: !57, line: 1846, baseType: !998, size: 32, align: 32, offset: 1408)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1363, file: !57, line: 1851, baseType: !998, size: 32, align: 32, offset: 1440)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1363, file: !57, line: 1861, baseType: !1558, size: 32, align: 32, offset: 1472)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1363, file: !57, line: 1868, baseType: !1558, size: 32, align: 32, offset: 1504)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1363, file: !57, line: 1875, baseType: !1558, size: 32, align: 32, offset: 1536)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1363, file: !57, line: 1882, baseType: !1558, size: 32, align: 32, offset: 1568)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1363, file: !57, line: 1889, baseType: !1558, size: 32, align: 32, offset: 1600)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1363, file: !57, line: 1896, baseType: !1558, size: 32, align: 32, offset: 1632)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1363, file: !57, line: 1903, baseType: !1558, size: 32, align: 32, offset: 1664)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1363, file: !57, line: 1910, baseType: !998, size: 32, align: 32, offset: 1696)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1363, file: !57, line: 1915, baseType: !998, size: 32, align: 32, offset: 1728)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1363, file: !57, line: 1926, baseType: !1150, size: 64, align: 64, offset: 1792)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1363, file: !57, line: 1935, baseType: !1011, size: 64, align: 32, offset: 1856)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1363, file: !57, line: 1942, baseType: !998, size: 32, align: 32, offset: 1920)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1363, file: !57, line: 1948, baseType: !998, size: 32, align: 32, offset: 1952)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1363, file: !57, line: 1954, baseType: !998, size: 32, align: 32, offset: 1984)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1363, file: !57, line: 1960, baseType: !998, size: 32, align: 32, offset: 2016)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1363, file: !57, line: 1984, baseType: !998, size: 32, align: 32, offset: 2048)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1363, file: !57, line: 1991, baseType: !998, size: 32, align: 32, offset: 2080)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1363, file: !57, line: 1996, baseType: !998, size: 32, align: 32, offset: 2112)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1363, file: !57, line: 2004, baseType: !998, size: 32, align: 32, offset: 2144)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1363, file: !57, line: 2011, baseType: !998, size: 32, align: 32, offset: 2176)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1363, file: !57, line: 2018, baseType: !998, size: 32, align: 32, offset: 2208)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1363, file: !57, line: 2027, baseType: !998, size: 32, align: 32, offset: 2240)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1363, file: !57, line: 2034, baseType: !998, size: 32, align: 32, offset: 2272)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1363, file: !57, line: 2044, baseType: !998, size: 32, align: 32, offset: 2304)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1363, file: !57, line: 2054, baseType: !1588, size: 64, align: 64, offset: 2368)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64, align: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1363, file: !57, line: 2061, baseType: !1588, size: 64, align: 64, offset: 2432)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1363, file: !57, line: 2066, baseType: !998, size: 32, align: 32, offset: 2496)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1363, file: !57, line: 2070, baseType: !998, size: 32, align: 32, offset: 2528)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1363, file: !57, line: 2078, baseType: !998, size: 32, align: 32, offset: 2560)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1363, file: !57, line: 2085, baseType: !998, size: 32, align: 32, offset: 2592)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1363, file: !57, line: 2092, baseType: !998, size: 32, align: 32, offset: 2624)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1363, file: !57, line: 2099, baseType: !998, size: 32, align: 32, offset: 2656)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1363, file: !57, line: 2106, baseType: !998, size: 32, align: 32, offset: 2688)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1363, file: !57, line: 2113, baseType: !998, size: 32, align: 32, offset: 2720)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1363, file: !57, line: 2120, baseType: !998, size: 32, align: 32, offset: 2752)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1363, file: !57, line: 2125, baseType: !998, size: 32, align: 32, offset: 2784)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1363, file: !57, line: 2133, baseType: !998, size: 32, align: 32, offset: 2816)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1363, file: !57, line: 2140, baseType: !998, size: 32, align: 32, offset: 2848)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1363, file: !57, line: 2145, baseType: !998, size: 32, align: 32, offset: 2880)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1363, file: !57, line: 2153, baseType: !998, size: 32, align: 32, offset: 2912)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1363, file: !57, line: 2158, baseType: !998, size: 32, align: 32, offset: 2944)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1363, file: !57, line: 2166, baseType: !809, size: 32, align: 32, offset: 2976)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1363, file: !57, line: 2173, baseType: !827, size: 32, align: 32, offset: 3008)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1363, file: !57, line: 2180, baseType: !851, size: 32, align: 32, offset: 3040)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1363, file: !57, line: 2187, baseType: !803, size: 32, align: 32, offset: 3072)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1363, file: !57, line: 2194, baseType: !870, size: 32, align: 32, offset: 3104)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1363, file: !57, line: 2203, baseType: !998, size: 32, align: 32, offset: 3136)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1363, file: !57, line: 2209, baseType: !880, size: 32, align: 32, offset: 3168)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1363, file: !57, line: 2212, baseType: !998, size: 32, align: 32, offset: 3200)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1363, file: !57, line: 2213, baseType: !998, size: 32, align: 32, offset: 3232)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1363, file: !57, line: 2220, baseType: !716, size: 32, align: 32, offset: 3264)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1363, file: !57, line: 2232, baseType: !998, size: 32, align: 32, offset: 3296)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1363, file: !57, line: 2243, baseType: !998, size: 32, align: 32, offset: 3328)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1363, file: !57, line: 2249, baseType: !998, size: 32, align: 32, offset: 3360)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1363, file: !57, line: 2256, baseType: !998, size: 32, align: 32, offset: 3392)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1363, file: !57, line: 2263, baseType: !1194, size: 64, align: 64, offset: 3456)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1363, file: !57, line: 2270, baseType: !1194, size: 64, align: 64, offset: 3520)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1363, file: !57, line: 2277, baseType: !888, size: 32, align: 32, offset: 3584)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1363, file: !57, line: 2285, baseType: !716, size: 32, align: 32, offset: 3616)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1363, file: !57, line: 2367, baseType: !1624, size: 64, align: 64, offset: 3648)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64, align: 64)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!998, !1551, !1218, !998}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1363, file: !57, line: 2383, baseType: !998, size: 32, align: 32, offset: 3712)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1363, file: !57, line: 2386, baseType: !1558, size: 32, align: 32, offset: 3744)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1363, file: !57, line: 2387, baseType: !1558, size: 32, align: 32, offset: 3776)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1363, file: !57, line: 2394, baseType: !998, size: 32, align: 32, offset: 3808)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1363, file: !57, line: 2401, baseType: !998, size: 32, align: 32, offset: 3840)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1363, file: !57, line: 2408, baseType: !998, size: 32, align: 32, offset: 3872)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1363, file: !57, line: 2415, baseType: !998, size: 32, align: 32, offset: 3904)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1363, file: !57, line: 2422, baseType: !998, size: 32, align: 32, offset: 3936)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1363, file: !57, line: 2423, baseType: !1636, size: 64, align: 64, offset: 3968)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64, align: 64)
!1637 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !57, line: 831, baseType: !1638)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !57, line: 826, size: 128, align: 32, elements: !1639)
!1639 = !{!1640, !1641, !1642, !1643}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1638, file: !57, line: 827, baseType: !998, size: 32, align: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1638, file: !57, line: 828, baseType: !998, size: 32, align: 32, offset: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1638, file: !57, line: 829, baseType: !998, size: 32, align: 32, offset: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1638, file: !57, line: 830, baseType: !1558, size: 32, align: 32, offset: 96)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1363, file: !57, line: 2430, baseType: !1004, size: 64, align: 64, offset: 4032)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1363, file: !57, line: 2437, baseType: !1004, size: 64, align: 64, offset: 4096)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1363, file: !57, line: 2444, baseType: !1558, size: 32, align: 32, offset: 4160)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1363, file: !57, line: 2451, baseType: !1558, size: 32, align: 32, offset: 4192)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1363, file: !57, line: 2458, baseType: !998, size: 32, align: 32, offset: 4224)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1363, file: !57, line: 2469, baseType: !998, size: 32, align: 32, offset: 4256)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1363, file: !57, line: 2475, baseType: !998, size: 32, align: 32, offset: 4288)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1363, file: !57, line: 2481, baseType: !998, size: 32, align: 32, offset: 4320)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1363, file: !57, line: 2485, baseType: !998, size: 32, align: 32, offset: 4352)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1363, file: !57, line: 2489, baseType: !998, size: 32, align: 32, offset: 4384)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1363, file: !57, line: 2493, baseType: !998, size: 32, align: 32, offset: 4416)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1363, file: !57, line: 2501, baseType: !998, size: 32, align: 32, offset: 4448)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1363, file: !57, line: 2506, baseType: !998, size: 32, align: 32, offset: 4480)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1363, file: !57, line: 2510, baseType: !998, size: 32, align: 32, offset: 4512)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1363, file: !57, line: 2514, baseType: !1004, size: 64, align: 64, offset: 4544)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1363, file: !57, line: 2528, baseType: !1660, size: 64, align: 64, offset: 4608)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64, align: 64)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{null, !1551, !989, !998, !998}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1363, file: !57, line: 2534, baseType: !998, size: 32, align: 32, offset: 4672)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1363, file: !57, line: 2545, baseType: !998, size: 32, align: 32, offset: 4704)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1363, file: !57, line: 2547, baseType: !998, size: 32, align: 32, offset: 4736)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1363, file: !57, line: 2549, baseType: !998, size: 32, align: 32, offset: 4768)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1363, file: !57, line: 2551, baseType: !998, size: 32, align: 32, offset: 4800)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1363, file: !57, line: 2553, baseType: !998, size: 32, align: 32, offset: 4832)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1363, file: !57, line: 2555, baseType: !998, size: 32, align: 32, offset: 4864)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1363, file: !57, line: 2557, baseType: !998, size: 32, align: 32, offset: 4896)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1363, file: !57, line: 2559, baseType: !998, size: 32, align: 32, offset: 4928)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1363, file: !57, line: 2563, baseType: !998, size: 32, align: 32, offset: 4960)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1363, file: !57, line: 2571, baseType: !1105, size: 64, align: 64, offset: 4992)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1363, file: !57, line: 2579, baseType: !1105, size: 64, align: 64, offset: 5056)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1363, file: !57, line: 2586, baseType: !998, size: 32, align: 32, offset: 5120)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1363, file: !57, line: 2615, baseType: !998, size: 32, align: 32, offset: 5152)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1363, file: !57, line: 2627, baseType: !998, size: 32, align: 32, offset: 5184)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1363, file: !57, line: 2637, baseType: !998, size: 32, align: 32, offset: 5216)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1363, file: !57, line: 2681, baseType: !998, size: 32, align: 32, offset: 5248)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1363, file: !57, line: 2709, baseType: !1004, size: 64, align: 64, offset: 5312)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1363, file: !57, line: 2716, baseType: !1682, size: 64, align: 64, offset: 5376)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64, align: 64)
!1683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !57, line: 3636, size: 896, align: 64, elements: !1685)
!1685 = !{!1686, !1687, !1688, !1689, !1690, !1691, !1692, !1698, !1702, !1703, !1704, !1705, !1711, !1712, !1713, !1714, !1715}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1684, file: !57, line: 3642, baseType: !982, size: 64, align: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1684, file: !57, line: 3649, baseType: !46, size: 32, align: 32, offset: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1684, file: !57, line: 3656, baseType: !56, size: 32, align: 32, offset: 96)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1684, file: !57, line: 3663, baseType: !516, size: 32, align: 32, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1684, file: !57, line: 3669, baseType: !998, size: 32, align: 32, offset: 160)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1684, file: !57, line: 3682, baseType: !1509, size: 64, align: 64, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1684, file: !57, line: 3698, baseType: !1693, size: 64, align: 64, offset: 256)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64, align: 64)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{!998, !1361, !1696, !1338}
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64, align: 64)
!1697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1180)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1684, file: !57, line: 3712, baseType: !1699, size: 64, align: 64, offset: 320)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64, align: 64)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{!998, !1361, !998, !1696, !1338}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1684, file: !57, line: 3726, baseType: !1693, size: 64, align: 64, offset: 384)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1684, file: !57, line: 3737, baseType: !1358, size: 64, align: 64, offset: 448)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1684, file: !57, line: 3746, baseType: !998, size: 32, align: 32, offset: 512)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1684, file: !57, line: 3757, baseType: !1706, size: 64, align: 64, offset: 576)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64, align: 64)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{null, !1709}
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64, align: 64)
!1710 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !57, line: 3617, flags: DIFlagFwdDecl)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1684, file: !57, line: 3766, baseType: !1358, size: 64, align: 64, offset: 640)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1684, file: !57, line: 3774, baseType: !1358, size: 64, align: 64, offset: 704)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1684, file: !57, line: 3780, baseType: !998, size: 32, align: 32, offset: 768)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1684, file: !57, line: 3785, baseType: !998, size: 32, align: 32, offset: 800)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1684, file: !57, line: 3795, baseType: !1716, size: 64, align: 64, offset: 832)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64, align: 64)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!998, !1361, !1169}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1363, file: !57, line: 2728, baseType: !989, size: 64, align: 64, offset: 5440)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1363, file: !57, line: 2735, baseType: !1245, size: 512, align: 64, offset: 5504)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1363, file: !57, line: 2742, baseType: !998, size: 32, align: 32, offset: 6016)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1363, file: !57, line: 2755, baseType: !998, size: 32, align: 32, offset: 6048)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1363, file: !57, line: 2776, baseType: !998, size: 32, align: 32, offset: 6080)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1363, file: !57, line: 2783, baseType: !998, size: 32, align: 32, offset: 6112)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1363, file: !57, line: 2791, baseType: !998, size: 32, align: 32, offset: 6144)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1363, file: !57, line: 2802, baseType: !1218, size: 64, align: 64, offset: 6208)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1363, file: !57, line: 2811, baseType: !998, size: 32, align: 32, offset: 6272)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1363, file: !57, line: 2821, baseType: !998, size: 32, align: 32, offset: 6304)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1363, file: !57, line: 2830, baseType: !998, size: 32, align: 32, offset: 6336)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1363, file: !57, line: 2840, baseType: !998, size: 32, align: 32, offset: 6368)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1363, file: !57, line: 2851, baseType: !1732, size: 64, align: 64, offset: 6400)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64, align: 64)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!998, !1551, !1735, !989, !1150, !998, !998}
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64, align: 64)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{!998, !1551, !989}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1363, file: !57, line: 2871, baseType: !1739, size: 64, align: 64, offset: 6464)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64, align: 64)
!1740 = !DISubroutineType(types: !1741)
!1741 = !{!998, !1551, !1742, !989, !1150, !998}
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64, align: 64)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{!998, !1551, !989, !998, !998}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1363, file: !57, line: 2878, baseType: !998, size: 32, align: 32, offset: 6528)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1363, file: !57, line: 2885, baseType: !998, size: 32, align: 32, offset: 6560)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1363, file: !57, line: 3005, baseType: !998, size: 32, align: 32, offset: 6592)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1363, file: !57, line: 3013, baseType: !900, size: 32, align: 32, offset: 6624)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1363, file: !57, line: 3020, baseType: !900, size: 32, align: 32, offset: 6656)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1363, file: !57, line: 3027, baseType: !900, size: 32, align: 32, offset: 6688)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1363, file: !57, line: 3037, baseType: !1179, size: 64, align: 64, offset: 6720)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1363, file: !57, line: 3038, baseType: !998, size: 32, align: 32, offset: 6784)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1363, file: !57, line: 3050, baseType: !1194, size: 64, align: 64, offset: 6848)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1363, file: !57, line: 3065, baseType: !998, size: 32, align: 32, offset: 6912)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1363, file: !57, line: 3083, baseType: !998, size: 32, align: 32, offset: 6944)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1363, file: !57, line: 3092, baseType: !1011, size: 64, align: 32, offset: 6976)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1363, file: !57, line: 3099, baseType: !516, size: 32, align: 32, offset: 7040)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1363, file: !57, line: 3106, baseType: !1011, size: 64, align: 32, offset: 7072)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1363, file: !57, line: 3113, baseType: !1760, size: 64, align: 64, offset: 7168)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64, align: 64)
!1761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1762)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !57, line: 740, baseType: !1763)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !57, line: 712, size: 384, align: 64, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1769, !1770, !1773}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1763, file: !57, line: 713, baseType: !56, size: 32, align: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1763, file: !57, line: 714, baseType: !46, size: 32, align: 32, offset: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1763, file: !57, line: 720, baseType: !982, size: 64, align: 64, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1763, file: !57, line: 724, baseType: !982, size: 64, align: 64, offset: 128)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1763, file: !57, line: 728, baseType: !998, size: 32, align: 32, offset: 192)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1763, file: !57, line: 734, baseType: !1771, size: 64, align: 64, offset: 256)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64, align: 64)
!1772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !982)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1763, file: !57, line: 739, baseType: !1774, size: 64, align: 64, offset: 320)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64, align: 64)
!1775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1399)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1363, file: !57, line: 3129, baseType: !1004, size: 64, align: 64, offset: 7232)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1363, file: !57, line: 3130, baseType: !1004, size: 64, align: 64, offset: 7296)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1363, file: !57, line: 3131, baseType: !1004, size: 64, align: 64, offset: 7360)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1363, file: !57, line: 3132, baseType: !1004, size: 64, align: 64, offset: 7424)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1363, file: !57, line: 3139, baseType: !1105, size: 64, align: 64, offset: 7488)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1363, file: !57, line: 3147, baseType: !998, size: 32, align: 32, offset: 7552)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1363, file: !57, line: 3165, baseType: !998, size: 32, align: 32, offset: 7584)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1363, file: !57, line: 3172, baseType: !998, size: 32, align: 32, offset: 7616)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1363, file: !57, line: 3180, baseType: !998, size: 32, align: 32, offset: 7648)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1363, file: !57, line: 3191, baseType: !1588, size: 64, align: 64, offset: 7680)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1363, file: !57, line: 3199, baseType: !1179, size: 64, align: 64, offset: 7744)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1363, file: !57, line: 3207, baseType: !1105, size: 64, align: 64, offset: 7808)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1363, file: !57, line: 3214, baseType: !1119, size: 32, align: 32, offset: 7872)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1363, file: !57, line: 3224, baseType: !1482, size: 64, align: 64, offset: 7936)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1363, file: !57, line: 3225, baseType: !998, size: 32, align: 32, offset: 8000)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1363, file: !57, line: 3249, baseType: !1169, size: 64, align: 64, offset: 8064)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1363, file: !57, line: 3256, baseType: !998, size: 32, align: 32, offset: 8128)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1363, file: !57, line: 3271, baseType: !998, size: 32, align: 32, offset: 8160)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1363, file: !57, line: 3279, baseType: !1004, size: 64, align: 64, offset: 8192)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1363, file: !57, line: 3301, baseType: !1169, size: 64, align: 64, offset: 8256)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1363, file: !57, line: 3310, baseType: !998, size: 32, align: 32, offset: 8320)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1363, file: !57, line: 3337, baseType: !998, size: 32, align: 32, offset: 8352)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1363, file: !57, line: 3351, baseType: !998, size: 32, align: 32, offset: 8384)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1363, file: !57, line: 3359, baseType: !998, size: 32, align: 32, offset: 8416)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1354, file: !910, line: 70, baseType: !909, size: 32, align: 32, offset: 128)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1354, file: !910, line: 71, baseType: !516, size: 32, align: 32, offset: 160)
!1802 = !{!1803}
!1803 = !DISubrange(count: 1)
!1804 = distinct !DIGlobalVariable(name: "audio_drift_threshold", scope: !0, file: !919, line: 86, type: !1558, isLocal: false, isDefinition: true, variable: float* @audio_drift_threshold)
!1805 = distinct !DIGlobalVariable(name: "dts_delta_threshold", scope: !0, file: !919, line: 87, type: !1558, isLocal: false, isDefinition: true, variable: float* @dts_delta_threshold)
!1806 = distinct !DIGlobalVariable(name: "dts_error_threshold", scope: !0, file: !919, line: 88, type: !1558, isLocal: false, isDefinition: true, variable: float* @dts_error_threshold)
!1807 = distinct !DIGlobalVariable(name: "audio_volume", scope: !0, file: !919, line: 90, type: !998, isLocal: false, isDefinition: true, variable: i32* @audio_volume)
!1808 = distinct !DIGlobalVariable(name: "audio_sync_method", scope: !0, file: !919, line: 91, type: !998, isLocal: false, isDefinition: true, variable: i32* @audio_sync_method)
!1809 = distinct !DIGlobalVariable(name: "video_sync_method", scope: !0, file: !919, line: 92, type: !998, isLocal: false, isDefinition: true, variable: i32* @video_sync_method)
!1810 = distinct !DIGlobalVariable(name: "frame_drop_threshold", scope: !0, file: !919, line: 93, type: !1558, isLocal: false, isDefinition: true, variable: float* @frame_drop_threshold)
!1811 = distinct !DIGlobalVariable(name: "do_deinterlace", scope: !0, file: !919, line: 94, type: !998, isLocal: false, isDefinition: true, variable: i32* @do_deinterlace)
!1812 = distinct !DIGlobalVariable(name: "do_benchmark", scope: !0, file: !919, line: 95, type: !998, isLocal: false, isDefinition: true, variable: i32* @do_benchmark)
!1813 = distinct !DIGlobalVariable(name: "do_benchmark_all", scope: !0, file: !919, line: 96, type: !998, isLocal: false, isDefinition: true, variable: i32* @do_benchmark_all)
!1814 = distinct !DIGlobalVariable(name: "do_hex_dump", scope: !0, file: !919, line: 97, type: !998, isLocal: false, isDefinition: true, variable: i32* @do_hex_dump)
!1815 = distinct !DIGlobalVariable(name: "do_pkt_dump", scope: !0, file: !919, line: 98, type: !998, isLocal: false, isDefinition: true, variable: i32* @do_pkt_dump)
!1816 = distinct !DIGlobalVariable(name: "copy_ts", scope: !0, file: !919, line: 99, type: !998, isLocal: false, isDefinition: true, variable: i32* @copy_ts)
!1817 = distinct !DIGlobalVariable(name: "start_at_zero", scope: !0, file: !919, line: 100, type: !998, isLocal: false, isDefinition: true, variable: i32* @start_at_zero)
!1818 = distinct !DIGlobalVariable(name: "copy_tb", scope: !0, file: !919, line: 101, type: !998, isLocal: false, isDefinition: true, variable: i32* @copy_tb)
!1819 = distinct !DIGlobalVariable(name: "debug_ts", scope: !0, file: !919, line: 102, type: !998, isLocal: false, isDefinition: true, variable: i32* @debug_ts)
!1820 = distinct !DIGlobalVariable(name: "exit_on_error", scope: !0, file: !919, line: 103, type: !998, isLocal: false, isDefinition: true, variable: i32* @exit_on_error)
!1821 = distinct !DIGlobalVariable(name: "abort_on_flags", scope: !0, file: !919, line: 104, type: !998, isLocal: false, isDefinition: true, variable: i32* @abort_on_flags)
!1822 = distinct !DIGlobalVariable(name: "print_stats", scope: !0, file: !919, line: 105, type: !998, isLocal: false, isDefinition: true, variable: i32* @print_stats)
!1823 = distinct !DIGlobalVariable(name: "qp_hist", scope: !0, file: !919, line: 106, type: !998, isLocal: false, isDefinition: true, variable: i32* @qp_hist)
!1824 = distinct !DIGlobalVariable(name: "stdin_interaction", scope: !0, file: !919, line: 107, type: !998, isLocal: false, isDefinition: true, variable: i32* @stdin_interaction)
!1825 = distinct !DIGlobalVariable(name: "frame_bits_per_raw_sample", scope: !0, file: !919, line: 108, type: !998, isLocal: false, isDefinition: true, variable: i32* @frame_bits_per_raw_sample)
!1826 = distinct !DIGlobalVariable(name: "max_error_rate", scope: !0, file: !919, line: 109, type: !1558, isLocal: false, isDefinition: true, variable: float* @max_error_rate)
!1827 = distinct !DIGlobalVariable(name: "filter_nbthreads", scope: !0, file: !919, line: 110, type: !998, isLocal: false, isDefinition: true, variable: i32* @filter_nbthreads)
!1828 = distinct !DIGlobalVariable(name: "filter_complex_nbthreads", scope: !0, file: !919, line: 111, type: !998, isLocal: false, isDefinition: true, variable: i32* @filter_complex_nbthreads)
!1829 = distinct !DIGlobalVariable(name: "vstats_version", scope: !0, file: !919, line: 112, type: !998, isLocal: false, isDefinition: true, variable: i32* @vstats_version)
!1830 = distinct !DIGlobalVariable(name: "options", scope: !0, file: !919, line: 3362, type: !1831, isLocal: false, isDefinition: true, variable: <{ { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, %struct.OptionDef, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i64 }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, { i8*, i32, { i32 (i8*, i8*, i8*)* }, i8*, i8* }, %struct.OptionDef }>* @options)
!1831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1832, size: 56640, align: 64, elements: !1848)
!1832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1833)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "OptionDef", file: !1834, line: 190, baseType: !1835)
!1834 = !DIFile(filename: "fftools/cmdutils.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OptionDef", file: !1834, line: 158, size: 320, align: 64, elements: !1836)
!1836 = !{!1837, !1838, !1839, !1846, !1847}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1835, file: !1834, line: 159, baseType: !982, size: 64, align: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1835, file: !1834, line: 160, baseType: !998, size: 32, align: 32, offset: 64)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1835, file: !1834, line: 187, baseType: !1840, size: 64, align: 64, offset: 128)
!1840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1835, file: !1834, line: 183, size: 64, align: 64, elements: !1841)
!1841 = !{!1842, !1843, !1845}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "dst_ptr", scope: !1840, file: !1834, line: 184, baseType: !989, size: 64, align: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg", scope: !1840, file: !1834, line: 185, baseType: !1844, size: 64, align: 64)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64, align: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1840, file: !1834, line: 186, baseType: !1293, size: 64, align: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1835, file: !1834, line: 188, baseType: !982, size: 64, align: 64, offset: 192)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "argname", scope: !1835, file: !1834, line: 189, baseType: !982, size: 64, align: 64, offset: 256)
!1848 = !{!1849}
!1849 = !DISubrange(count: 177)
!1850 = distinct !DIGlobalVariable(name: "hw_device_ctx", scope: !0, file: !919, line: 80, type: !1169, isLocal: false, isDefinition: true, variable: %struct.AVBufferRef** @hw_device_ctx)
!1851 = distinct !DIGlobalVariable(name: "filter_hw_device", scope: !0, file: !919, line: 81, type: !1852, isLocal: false, isDefinition: true, variable: %struct.HWDevice** @filter_hw_device)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64, align: 64)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "HWDevice", file: !910, line: 78, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HWDevice", file: !910, line: 74, size: 192, align: 64, elements: !1855)
!1855 = !{!1856, !1857, !1858}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1854, file: !910, line: 75, baseType: !1105, size: 64, align: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1854, file: !910, line: 76, baseType: !923, size: 32, align: 32, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "device_ref", scope: !1854, file: !910, line: 77, baseType: !1169, size: 64, align: 64, offset: 128)
!1859 = distinct !DIGlobalVariable(name: "vstats_filename", scope: !0, file: !919, line: 83, type: !1105, isLocal: false, isDefinition: true, variable: i8** @vstats_filename)
!1860 = distinct !DIGlobalVariable(name: "sdp_filename", scope: !0, file: !919, line: 84, type: !1105, isLocal: false, isDefinition: true, variable: i8** @sdp_filename)
!1861 = distinct !DIGlobalVariable(name: "input_sync", scope: !0, file: !919, line: 119, type: !998, isLocal: true, isDefinition: true, variable: i32* @input_sync)
!1862 = distinct !DIGlobalVariable(name: "groups", scope: !0, file: !919, line: 3248, type: !1863, isLocal: true, isDefinition: true, variable: [2 x %struct.OptionGroupDef]* @groups)
!1863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1864, size: 384, align: 64, elements: !1871)
!1864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1865)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "OptionGroupDef", file: !1834, line: 309, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OptionGroupDef", file: !1834, line: 296, size: 192, align: 64, elements: !1867)
!1867 = !{!1868, !1869, !1870}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1866, file: !1834, line: 298, baseType: !982, size: 64, align: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "sep", scope: !1866, file: !1834, line: 303, baseType: !982, size: 64, align: 64, offset: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1866, file: !1834, line: 308, baseType: !998, size: 32, align: 32, offset: 128)
!1871 = !{!1872}
!1872 = !DISubrange(count: 2)
!1873 = distinct !DIGlobalVariable(name: "input_stream_potentially_available", scope: !0, file: !919, line: 120, type: !998, isLocal: true, isDefinition: true, variable: i32* @input_stream_potentially_available)
!1874 = distinct !DIGlobalVariable(name: "file_overwrite", scope: !0, file: !919, line: 116, type: !998, isLocal: true, isDefinition: true, variable: i32* @file_overwrite)
!1875 = distinct !DIGlobalVariable(name: "no_file_overwrite", scope: !0, file: !919, line: 117, type: !998, isLocal: true, isDefinition: true, variable: i32* @no_file_overwrite)
!1876 = distinct !DIGlobalVariable(name: "ignore_unknown_streams", scope: !0, file: !919, line: 121, type: !998, isLocal: true, isDefinition: true, variable: i32* @ignore_unknown_streams)
!1877 = distinct !DIGlobalVariable(name: "copy_unknown_streams", scope: !0, file: !919, line: 122, type: !998, isLocal: true, isDefinition: true, variable: i32* @copy_unknown_streams)
!1878 = distinct !DIGlobalVariable(name: "frame_rates", scope: !1322, file: !919, line: 2756, type: !1879, isLocal: true, isDefinition: true, variable: [3 x i8*]* @opt_target.frame_rates)
!1879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1772, size: 192, align: 64, elements: !1880)
!1880 = !{!1881}
!1881 = !DISubrange(count: 3)
!1882 = distinct !DIGlobalVariable(name: "opts", scope: !1883, file: !919, line: 206, type: !1884, isLocal: true, isDefinition: true, variable: [3 x %struct.AVOption]* @opt_abort_on.opts)
!1883 = distinct !DISubprogram(name: "opt_abort_on", scope: !919, file: !919, line: 204, type: !1323, isLocal: true, isDefinition: true, scopeLine: 205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!1884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1885, size: 1536, align: 64, elements: !1880)
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1886)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !4, line: 301, baseType: !993)
!1887 = distinct !DIGlobalVariable(name: "class", scope: !1883, file: !919, line: 211, type: !977, isLocal: true, isDefinition: true, variable: %struct.AVClass* @opt_abort_on.class)
!1888 = distinct !DIGlobalVariable(name: "find_stream_info", scope: !0, file: !919, line: 123, type: !998, isLocal: true, isDefinition: true, variable: i32* @find_stream_info)
!1889 = distinct !DIGlobalVariable(name: "intra_only", scope: !0, file: !919, line: 115, type: !998, isLocal: true, isDefinition: true, variable: i32* @intra_only)
!1890 = distinct !DIGlobalVariable(name: "do_psnr", scope: !0, file: !919, line: 118, type: !998, isLocal: true, isDefinition: true, variable: i32* @do_psnr)
!1891 = !{i32 2, !"Dwarf Version", i32 4}
!1892 = !{i32 2, !"Debug Info Version", i32 3}
!1893 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1894 = distinct !DISubprogram(name: "show_help_default", scope: !919, file: !919, line: 3164, type: !1895, isLocal: false, isDefinition: true, scopeLine: 3165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{null, !982, !982}
!1897 = !DILocalVariable(name: "opt", arg: 1, scope: !1894, file: !919, line: 3164, type: !982)
!1898 = !DIExpression()
!1899 = !DILocation(line: 3164, column: 36, scope: !1894)
!1900 = !DILocalVariable(name: "arg", arg: 2, scope: !1894, file: !919, line: 3164, type: !982)
!1901 = !DILocation(line: 3164, column: 53, scope: !1894)
!1902 = !DILocalVariable(name: "per_file", scope: !1894, file: !919, line: 3167, type: !1386)
!1903 = !DILocation(line: 3167, column: 15, scope: !1894)
!1904 = !DILocalVariable(name: "show_advanced", scope: !1894, file: !919, line: 3168, type: !998)
!1905 = !DILocation(line: 3168, column: 9, scope: !1894)
!1906 = !DILocalVariable(name: "show_avoptions", scope: !1894, file: !919, line: 3168, type: !998)
!1907 = !DILocation(line: 3168, column: 28, scope: !1894)
!1908 = !DILocation(line: 3170, column: 9, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1894, file: !919, line: 3170, column: 9)
!1910 = !DILocation(line: 3170, column: 13, scope: !1909)
!1911 = !DILocation(line: 3170, column: 17, scope: !1912)
!1912 = !DILexicalBlockFile(scope: !1909, file: !919, discriminator: 1)
!1913 = !DILocation(line: 3170, column: 16, scope: !1912)
!1914 = !DILocation(line: 3170, column: 9, scope: !1912)
!1915 = !DILocation(line: 3171, column: 21, scope: !1916)
!1916 = distinct !DILexicalBlock(scope: !1917, file: !919, line: 3171, column: 13)
!1917 = distinct !DILexicalBlock(scope: !1909, file: !919, line: 3170, column: 22)
!1918 = !DILocation(line: 3171, column: 14, scope: !1916)
!1919 = !DILocation(line: 3171, column: 13, scope: !1917)
!1920 = !DILocation(line: 3172, column: 27, scope: !1916)
!1921 = !DILocation(line: 3172, column: 13, scope: !1916)
!1922 = !DILocation(line: 3173, column: 26, scope: !1923)
!1923 = distinct !DILexicalBlock(scope: !1916, file: !919, line: 3173, column: 18)
!1924 = !DILocation(line: 3173, column: 19, scope: !1923)
!1925 = !DILocation(line: 3173, column: 18, scope: !1916)
!1926 = !DILocation(line: 3174, column: 44, scope: !1923)
!1927 = !DILocation(line: 3174, column: 27, scope: !1923)
!1928 = !DILocation(line: 3174, column: 13, scope: !1923)
!1929 = !DILocation(line: 3176, column: 60, scope: !1923)
!1930 = !DILocation(line: 3176, column: 13, scope: !1923)
!1931 = !DILocation(line: 3177, column: 5, scope: !1917)
!1932 = !DILocation(line: 3179, column: 5, scope: !1894)
!1933 = !DILocation(line: 3181, column: 5, scope: !1894)
!1934 = !DILocation(line: 3189, column: 5, scope: !1894)
!1935 = !DILocation(line: 3192, column: 5, scope: !1894)
!1936 = !DILocation(line: 3195, column: 9, scope: !1937)
!1937 = distinct !DILexicalBlock(scope: !1894, file: !919, line: 3195, column: 9)
!1938 = !DILocation(line: 3195, column: 9, scope: !1894)
!1939 = !DILocation(line: 3196, column: 9, scope: !1937)
!1940 = !DILocation(line: 3199, column: 5, scope: !1894)
!1941 = !DILocation(line: 3202, column: 9, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !1894, file: !919, line: 3202, column: 9)
!1943 = !DILocation(line: 3202, column: 9, scope: !1894)
!1944 = !DILocation(line: 3203, column: 9, scope: !1942)
!1945 = !DILocation(line: 3206, column: 5, scope: !1894)
!1946 = !DILocation(line: 3208, column: 9, scope: !1947)
!1947 = distinct !DILexicalBlock(scope: !1894, file: !919, line: 3208, column: 9)
!1948 = !DILocation(line: 3208, column: 9, scope: !1894)
!1949 = !DILocation(line: 3209, column: 9, scope: !1947)
!1950 = !DILocation(line: 3212, column: 5, scope: !1894)
!1951 = !DILocation(line: 3214, column: 9, scope: !1952)
!1952 = distinct !DILexicalBlock(scope: !1894, file: !919, line: 3214, column: 9)
!1953 = !DILocation(line: 3214, column: 9, scope: !1894)
!1954 = !DILocation(line: 3215, column: 9, scope: !1952)
!1955 = !DILocation(line: 3217, column: 5, scope: !1894)
!1956 = !DILocation(line: 3219, column: 5, scope: !1894)
!1957 = !DILocation(line: 3221, column: 9, scope: !1958)
!1958 = distinct !DILexicalBlock(scope: !1894, file: !919, line: 3221, column: 9)
!1959 = !DILocation(line: 3221, column: 9, scope: !1894)
!1960 = !DILocalVariable(name: "flags", scope: !1961, file: !919, line: 3222, type: !998)
!1961 = distinct !DILexicalBlock(scope: !1958, file: !919, line: 3221, column: 25)
!1962 = !DILocation(line: 3222, column: 13, scope: !1961)
!1963 = !DILocation(line: 3223, column: 28, scope: !1961)
!1964 = !DILocation(line: 3223, column: 49, scope: !1961)
!1965 = !DILocation(line: 3223, column: 9, scope: !1966)
!1966 = !DILexicalBlockFile(scope: !1961, file: !919, discriminator: 1)
!1967 = !DILocation(line: 3224, column: 28, scope: !1961)
!1968 = !DILocation(line: 3224, column: 50, scope: !1961)
!1969 = !DILocation(line: 3224, column: 9, scope: !1966)
!1970 = !DILocation(line: 3226, column: 28, scope: !1961)
!1971 = !DILocation(line: 3226, column: 45, scope: !1961)
!1972 = !DILocation(line: 3226, column: 9, scope: !1966)
!1973 = !DILocation(line: 3229, column: 28, scope: !1961)
!1974 = !DILocation(line: 3229, column: 9, scope: !1966)
!1975 = !DILocation(line: 3231, column: 28, scope: !1961)
!1976 = !DILocation(line: 3231, column: 9, scope: !1966)
!1977 = !DILocation(line: 3232, column: 28, scope: !1961)
!1978 = !DILocation(line: 3232, column: 9, scope: !1966)
!1979 = !DILocation(line: 3233, column: 5, scope: !1961)
!1980 = !DILocation(line: 3234, column: 1, scope: !1894)
!1981 = distinct !DISubprogram(name: "show_usage", scope: !919, file: !919, line: 3236, type: !1982, isLocal: false, isDefinition: true, scopeLine: 3237, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{null}
!1984 = !DILocation(line: 3238, column: 5, scope: !1981)
!1985 = !DILocation(line: 3239, column: 5, scope: !1981)
!1986 = !DILocation(line: 3240, column: 5, scope: !1981)
!1987 = !DILocation(line: 3241, column: 1, scope: !1981)
!1988 = distinct !DISubprogram(name: "ffmpeg_parse_options", scope: !919, file: !919, line: 3286, type: !1989, isLocal: false, isDefinition: true, scopeLine: 3287, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!998, !998, !1991}
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64, align: 64)
!1992 = !DILocalVariable(name: "argc", arg: 1, scope: !1988, file: !919, line: 3286, type: !998)
!1993 = !DILocation(line: 3286, column: 30, scope: !1988)
!1994 = !DILocalVariable(name: "argv", arg: 2, scope: !1988, file: !919, line: 3286, type: !1991)
!1995 = !DILocation(line: 3286, column: 43, scope: !1988)
!1996 = !DILocalVariable(name: "octx", scope: !1988, file: !919, line: 3288, type: !1997)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "OptionParseContext", file: !1834, line: 344, baseType: !1998)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OptionParseContext", file: !1834, line: 336, size: 1280, align: 64, elements: !1999)
!1999 = !{!2000, !2022, !2031, !2032}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "global_opts", scope: !1998, file: !1834, line: 337, baseType: !2001, size: 576, align: 64)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "OptionGroup", file: !1834, line: 323, baseType: !2002)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OptionGroup", file: !1834, line: 311, size: 576, align: 64, elements: !2003)
!2003 = !{!2004, !2006, !2007, !2016, !2017, !2018, !2019, !2020, !2021}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "group_def", scope: !2002, file: !1834, line: 312, baseType: !2005, size: 64, align: 64)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64, align: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !2002, file: !1834, line: 313, baseType: !982, size: 64, align: 64, offset: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2002, file: !1834, line: 315, baseType: !2008, size: 64, align: 64, offset: 128)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64, align: 64)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "Option", file: !1834, line: 294, baseType: !2010)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Option", file: !1834, line: 290, size: 192, align: 64, elements: !2011)
!2011 = !{!2012, !2014, !2015}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "opt", scope: !2010, file: !1834, line: 291, baseType: !2013, size: 64, align: 64)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64, align: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2010, file: !1834, line: 292, baseType: !982, size: 64, align: 64, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2010, file: !1834, line: 293, baseType: !982, size: 64, align: 64, offset: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "nb_opts", scope: !2002, file: !1834, line: 316, baseType: !998, size: 32, align: 32, offset: 192)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "codec_opts", scope: !2002, file: !1834, line: 318, baseType: !1088, size: 64, align: 64, offset: 256)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "format_opts", scope: !2002, file: !1834, line: 319, baseType: !1088, size: 64, align: 64, offset: 320)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "resample_opts", scope: !2002, file: !1834, line: 320, baseType: !1088, size: 64, align: 64, offset: 384)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "sws_dict", scope: !2002, file: !1834, line: 321, baseType: !1088, size: 64, align: 64, offset: 448)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "swr_opts", scope: !2002, file: !1834, line: 322, baseType: !1088, size: 64, align: 64, offset: 512)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1998, file: !1834, line: 339, baseType: !2023, size: 64, align: 64, offset: 576)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64, align: 64)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "OptionGroupList", file: !1834, line: 334, baseType: !2025)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OptionGroupList", file: !1834, line: 329, size: 192, align: 64, elements: !2026)
!2026 = !{!2027, !2028, !2030}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "group_def", scope: !2025, file: !1834, line: 330, baseType: !2005, size: 64, align: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2025, file: !1834, line: 332, baseType: !2029, size: 64, align: 64, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64, align: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "nb_groups", scope: !2025, file: !1834, line: 333, baseType: !998, size: 32, align: 32, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "nb_groups", scope: !1998, file: !1834, line: 340, baseType: !998, size: 32, align: 32, offset: 640)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "cur_group", scope: !1998, file: !1834, line: 343, baseType: !2001, size: 576, align: 64, offset: 704)
!2033 = !DILocation(line: 3288, column: 24, scope: !1988)
!2034 = !DILocalVariable(name: "error", scope: !1988, file: !919, line: 3289, type: !2035)
!2035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1180, size: 1024, align: 8, elements: !2036)
!2036 = !{!2037}
!2037 = !DISubrange(count: 128)
!2038 = !DILocation(line: 3289, column: 13, scope: !1988)
!2039 = !DILocalVariable(name: "ret", scope: !1988, file: !919, line: 3290, type: !998)
!2040 = !DILocation(line: 3290, column: 9, scope: !1988)
!2041 = !DILocation(line: 3292, column: 5, scope: !1988)
!2042 = !DILocation(line: 3295, column: 36, scope: !1988)
!2043 = !DILocation(line: 3295, column: 42, scope: !1988)
!2044 = !DILocation(line: 3295, column: 11, scope: !1988)
!2045 = !DILocation(line: 3295, column: 9, scope: !1988)
!2046 = !DILocation(line: 3297, column: 9, scope: !2047)
!2047 = distinct !DILexicalBlock(scope: !1988, file: !919, line: 3297, column: 9)
!2048 = !DILocation(line: 3297, column: 13, scope: !2047)
!2049 = !DILocation(line: 3297, column: 9, scope: !1988)
!2050 = !DILocation(line: 3298, column: 9, scope: !2051)
!2051 = distinct !DILexicalBlock(scope: !2047, file: !919, line: 3297, column: 18)
!2052 = !DILocation(line: 3299, column: 9, scope: !2051)
!2053 = !DILocation(line: 3303, column: 37, scope: !1988)
!2054 = !DILocation(line: 3303, column: 11, scope: !1988)
!2055 = !DILocation(line: 3303, column: 9, scope: !1988)
!2056 = !DILocation(line: 3304, column: 9, scope: !2057)
!2057 = distinct !DILexicalBlock(scope: !1988, file: !919, line: 3304, column: 9)
!2058 = !DILocation(line: 3304, column: 13, scope: !2057)
!2059 = !DILocation(line: 3304, column: 9, scope: !1988)
!2060 = !DILocation(line: 3305, column: 9, scope: !2061)
!2061 = distinct !DILexicalBlock(scope: !2057, file: !919, line: 3304, column: 18)
!2062 = !DILocation(line: 3306, column: 9, scope: !2061)
!2063 = !DILocation(line: 3310, column: 5, scope: !1988)
!2064 = !DILocation(line: 3313, column: 28, scope: !1988)
!2065 = !DILocation(line: 3313, column: 23, scope: !1988)
!2066 = !DILocation(line: 3313, column: 11, scope: !1988)
!2067 = !DILocation(line: 3313, column: 9, scope: !1988)
!2068 = !DILocation(line: 3314, column: 9, scope: !2069)
!2069 = distinct !DILexicalBlock(scope: !1988, file: !919, line: 3314, column: 9)
!2070 = !DILocation(line: 3314, column: 13, scope: !2069)
!2071 = !DILocation(line: 3314, column: 9, scope: !1988)
!2072 = !DILocation(line: 3315, column: 9, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !2069, file: !919, line: 3314, column: 18)
!2074 = !DILocation(line: 3316, column: 9, scope: !2073)
!2075 = !DILocation(line: 3320, column: 11, scope: !1988)
!2076 = !DILocation(line: 3320, column: 9, scope: !1988)
!2077 = !DILocation(line: 3321, column: 9, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !1988, file: !919, line: 3321, column: 9)
!2079 = !DILocation(line: 3321, column: 13, scope: !2078)
!2080 = !DILocation(line: 3321, column: 9, scope: !1988)
!2081 = !DILocation(line: 3322, column: 9, scope: !2082)
!2082 = distinct !DILexicalBlock(scope: !2078, file: !919, line: 3321, column: 18)
!2083 = !DILocation(line: 3323, column: 9, scope: !2082)
!2084 = !DILocation(line: 3327, column: 28, scope: !1988)
!2085 = !DILocation(line: 3327, column: 23, scope: !1988)
!2086 = !DILocation(line: 3327, column: 11, scope: !1988)
!2087 = !DILocation(line: 3327, column: 9, scope: !1988)
!2088 = !DILocation(line: 3328, column: 9, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !1988, file: !919, line: 3328, column: 9)
!2090 = !DILocation(line: 3328, column: 13, scope: !2089)
!2091 = !DILocation(line: 3328, column: 9, scope: !1988)
!2092 = !DILocation(line: 3329, column: 9, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !2089, file: !919, line: 3328, column: 18)
!2094 = !DILocation(line: 3330, column: 9, scope: !2093)
!2095 = !DILocation(line: 3333, column: 5, scope: !1988)
!2096 = !DILocation(line: 3336, column: 5, scope: !1988)
!2097 = !DILocation(line: 3337, column: 9, scope: !2098)
!2098 = distinct !DILexicalBlock(scope: !1988, file: !919, line: 3337, column: 9)
!2099 = !DILocation(line: 3337, column: 13, scope: !2098)
!2100 = !DILocation(line: 3337, column: 9, scope: !1988)
!2101 = !DILocation(line: 3338, column: 21, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2098, file: !919, line: 3337, column: 18)
!2103 = !DILocation(line: 3338, column: 26, scope: !2102)
!2104 = !DILocation(line: 3338, column: 9, scope: !2102)
!2105 = !DILocation(line: 3339, column: 32, scope: !2102)
!2106 = !DILocation(line: 3339, column: 9, scope: !2102)
!2107 = !DILocation(line: 3340, column: 5, scope: !2102)
!2108 = !DILocation(line: 3341, column: 12, scope: !1988)
!2109 = !DILocation(line: 3341, column: 5, scope: !1988)
!2110 = distinct !DISubprogram(name: "open_files", scope: !919, file: !919, line: 3253, type: !2111, isLocal: true, isDefinition: true, scopeLine: 3255, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!2111 = !DISubroutineType(types: !2112)
!2112 = !{!998, !2023, !982, !2113}
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64, align: 64)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{!998, !2116, !982}
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64, align: 64)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "OptionsContext", file: !910, line: 233, baseType: !2118)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OptionsContext", file: !910, line: 95, size: 7296, align: 64, elements: !2119)
!2119 = !{!2120, !2121, !2122, !2123, !2124, !2125, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2179, !2180, !2190, !2191, !2192, !2193, !2194, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2118, file: !910, line: 96, baseType: !2029, size: 64, align: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2118, file: !910, line: 99, baseType: !1004, size: 64, align: 64, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_eof", scope: !2118, file: !910, line: 100, baseType: !1004, size: 64, align: 64, offset: 128)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "seek_timestamp", scope: !2118, file: !910, line: 101, baseType: !998, size: 32, align: 32, offset: 192)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2118, file: !910, line: 102, baseType: !982, size: 64, align: 64, offset: 256)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "codec_names", scope: !2118, file: !910, line: 104, baseType: !2126, size: 64, align: 64, offset: 320)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64, align: 64)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpecifierOpt", file: !1834, line: 156, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpecifierOpt", file: !1834, line: 146, size: 128, align: 64, elements: !2129)
!2129 = !{!2130, !2131}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !2128, file: !1834, line: 147, baseType: !1105, size: 64, align: 64)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2128, file: !1834, line: 155, baseType: !2132, size: 64, align: 64, offset: 64)
!2132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2128, file: !1834, line: 148, size: 64, align: 64, elements: !2133)
!2133 = !{!2134, !2135, !2136, !2137, !2138, !2139}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2132, file: !1834, line: 149, baseType: !1179, size: 64, align: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !2132, file: !1834, line: 150, baseType: !998, size: 32, align: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !2132, file: !1834, line: 151, baseType: !1004, size: 64, align: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "ui64", scope: !2132, file: !1834, line: 152, baseType: !1194, size: 64, align: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2132, file: !1834, line: 153, baseType: !1558, size: 32, align: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !2132, file: !1834, line: 154, baseType: !1008, size: 64, align: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "nb_codec_names", scope: !2118, file: !910, line: 105, baseType: !998, size: 32, align: 32, offset: 384)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2118, file: !910, line: 106, baseType: !2126, size: 64, align: 64, offset: 448)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "nb_audio_channels", scope: !2118, file: !910, line: 107, baseType: !998, size: 32, align: 32, offset: 512)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "audio_sample_rate", scope: !2118, file: !910, line: 108, baseType: !2126, size: 64, align: 64, offset: 576)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "nb_audio_sample_rate", scope: !2118, file: !910, line: 109, baseType: !998, size: 32, align: 32, offset: 640)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rates", scope: !2118, file: !910, line: 110, baseType: !2126, size: 64, align: 64, offset: 704)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "nb_frame_rates", scope: !2118, file: !910, line: 111, baseType: !998, size: 32, align: 32, offset: 768)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sizes", scope: !2118, file: !910, line: 112, baseType: !2126, size: 64, align: 64, offset: 832)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "nb_frame_sizes", scope: !2118, file: !910, line: 113, baseType: !998, size: 32, align: 32, offset: 896)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "frame_pix_fmts", scope: !2118, file: !910, line: 114, baseType: !2126, size: 64, align: 64, offset: 960)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "nb_frame_pix_fmts", scope: !2118, file: !910, line: 115, baseType: !998, size: 32, align: 32, offset: 1024)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "input_ts_offset", scope: !2118, file: !910, line: 118, baseType: !1004, size: 64, align: 64, offset: 1088)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "loop", scope: !2118, file: !910, line: 119, baseType: !998, size: 32, align: 32, offset: 1152)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "rate_emu", scope: !2118, file: !910, line: 120, baseType: !998, size: 32, align: 32, offset: 1184)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "accurate_seek", scope: !2118, file: !910, line: 121, baseType: !998, size: 32, align: 32, offset: 1216)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "thread_queue_size", scope: !2118, file: !910, line: 122, baseType: !998, size: 32, align: 32, offset: 1248)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "ts_scale", scope: !2118, file: !910, line: 124, baseType: !2126, size: 64, align: 64, offset: 1280)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ts_scale", scope: !2118, file: !910, line: 125, baseType: !998, size: 32, align: 32, offset: 1344)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "dump_attachment", scope: !2118, file: !910, line: 126, baseType: !2126, size: 64, align: 64, offset: 1408)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "nb_dump_attachment", scope: !2118, file: !910, line: 127, baseType: !998, size: 32, align: 32, offset: 1472)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccels", scope: !2118, file: !910, line: 128, baseType: !2126, size: 64, align: 64, offset: 1536)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "nb_hwaccels", scope: !2118, file: !910, line: 129, baseType: !998, size: 32, align: 32, offset: 1600)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_devices", scope: !2118, file: !910, line: 130, baseType: !2126, size: 64, align: 64, offset: 1664)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_hwaccel_devices", scope: !2118, file: !910, line: 131, baseType: !998, size: 32, align: 32, offset: 1728)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_output_formats", scope: !2118, file: !910, line: 132, baseType: !2126, size: 64, align: 64, offset: 1792)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_hwaccel_output_formats", scope: !2118, file: !910, line: 133, baseType: !998, size: 32, align: 32, offset: 1856)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "autorotate", scope: !2118, file: !910, line: 134, baseType: !2126, size: 64, align: 64, offset: 1920)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_autorotate", scope: !2118, file: !910, line: 135, baseType: !998, size: 32, align: 32, offset: 1984)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "stream_maps", scope: !2118, file: !910, line: 138, baseType: !2169, size: 64, align: 64, offset: 2048)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64, align: 64)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "StreamMap", file: !910, line: 88, baseType: !2171)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StreamMap", file: !910, line: 81, size: 256, align: 64, elements: !2172)
!2172 = !{!2173, !2174, !2175, !2176, !2177, !2178}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "disabled", scope: !2171, file: !910, line: 82, baseType: !998, size: 32, align: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "file_index", scope: !2171, file: !910, line: 83, baseType: !998, size: 32, align: 32, offset: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !2171, file: !910, line: 84, baseType: !998, size: 32, align: 32, offset: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "sync_file_index", scope: !2171, file: !910, line: 85, baseType: !998, size: 32, align: 32, offset: 96)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "sync_stream_index", scope: !2171, file: !910, line: 86, baseType: !998, size: 32, align: 32, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "linklabel", scope: !2171, file: !910, line: 87, baseType: !1105, size: 64, align: 64, offset: 192)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "nb_stream_maps", scope: !2118, file: !910, line: 139, baseType: !998, size: 32, align: 32, offset: 2112)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channel_maps", scope: !2118, file: !910, line: 140, baseType: !2181, size: 64, align: 64, offset: 2176)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64, align: 64)
!2182 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioChannelMap", file: !910, line: 93, baseType: !2183)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !910, line: 90, size: 160, align: 32, elements: !2184)
!2184 = !{!2185, !2186, !2187, !2188, !2189}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "file_idx", scope: !2183, file: !910, line: 91, baseType: !998, size: 32, align: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "stream_idx", scope: !2183, file: !910, line: 91, baseType: !998, size: 32, align: 32, offset: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "channel_idx", scope: !2183, file: !910, line: 91, baseType: !998, size: 32, align: 32, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "ofile_idx", scope: !2183, file: !910, line: 92, baseType: !998, size: 32, align: 32, offset: 96)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "ostream_idx", scope: !2183, file: !910, line: 92, baseType: !998, size: 32, align: 32, offset: 128)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "nb_audio_channel_maps", scope: !2118, file: !910, line: 141, baseType: !998, size: 32, align: 32, offset: 2240)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_global_manual", scope: !2118, file: !910, line: 142, baseType: !998, size: 32, align: 32, offset: 2272)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_streams_manual", scope: !2118, file: !910, line: 143, baseType: !998, size: 32, align: 32, offset: 2304)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_chapters_manual", scope: !2118, file: !910, line: 144, baseType: !998, size: 32, align: 32, offset: 2336)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "attachments", scope: !2118, file: !910, line: 145, baseType: !2195, size: 64, align: 64, offset: 2368)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64, align: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "nb_attachments", scope: !2118, file: !910, line: 146, baseType: !998, size: 32, align: 32, offset: 2432)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "chapters_input_file", scope: !2118, file: !910, line: 148, baseType: !998, size: 32, align: 32, offset: 2464)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "recording_time", scope: !2118, file: !910, line: 150, baseType: !1004, size: 64, align: 64, offset: 2496)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "stop_time", scope: !2118, file: !910, line: 151, baseType: !1004, size: 64, align: 64, offset: 2560)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "limit_filesize", scope: !2118, file: !910, line: 152, baseType: !1194, size: 64, align: 64, offset: 2624)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "mux_preload", scope: !2118, file: !910, line: 153, baseType: !1558, size: 32, align: 32, offset: 2688)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "mux_max_delay", scope: !2118, file: !910, line: 154, baseType: !1558, size: 32, align: 32, offset: 2720)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "shortest", scope: !2118, file: !910, line: 155, baseType: !998, size: 32, align: 32, offset: 2752)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "bitexact", scope: !2118, file: !910, line: 156, baseType: !998, size: 32, align: 32, offset: 2784)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "video_disable", scope: !2118, file: !910, line: 158, baseType: !998, size: 32, align: 32, offset: 2816)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "audio_disable", scope: !2118, file: !910, line: 159, baseType: !998, size: 32, align: 32, offset: 2848)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_disable", scope: !2118, file: !910, line: 160, baseType: !998, size: 32, align: 32, offset: 2880)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "data_disable", scope: !2118, file: !910, line: 161, baseType: !998, size: 32, align: 32, offset: 2912)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "streamid_map", scope: !2118, file: !910, line: 164, baseType: !1150, size: 64, align: 64, offset: 2944)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "nb_streamid_map", scope: !2118, file: !910, line: 165, baseType: !998, size: 32, align: 32, offset: 3008)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2118, file: !910, line: 167, baseType: !2126, size: 64, align: 64, offset: 3072)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "nb_metadata", scope: !2118, file: !910, line: 168, baseType: !998, size: 32, align: 32, offset: 3136)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "max_frames", scope: !2118, file: !910, line: 169, baseType: !2126, size: 64, align: 64, offset: 3200)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "nb_max_frames", scope: !2118, file: !910, line: 170, baseType: !998, size: 32, align: 32, offset: 3264)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_filters", scope: !2118, file: !910, line: 171, baseType: !2126, size: 64, align: 64, offset: 3328)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bitstream_filters", scope: !2118, file: !910, line: 172, baseType: !998, size: 32, align: 32, offset: 3392)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tags", scope: !2118, file: !910, line: 173, baseType: !2126, size: 64, align: 64, offset: 3456)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "nb_codec_tags", scope: !2118, file: !910, line: 174, baseType: !998, size: 32, align: 32, offset: 3520)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !2118, file: !910, line: 175, baseType: !2126, size: 64, align: 64, offset: 3584)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "nb_sample_fmts", scope: !2118, file: !910, line: 176, baseType: !998, size: 32, align: 32, offset: 3648)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !2118, file: !910, line: 177, baseType: !2126, size: 64, align: 64, offset: 3712)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "nb_qscale", scope: !2118, file: !910, line: 178, baseType: !998, size: 32, align: 32, offset: 3776)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "forced_key_frames", scope: !2118, file: !910, line: 179, baseType: !2126, size: 64, align: 64, offset: 3840)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "nb_forced_key_frames", scope: !2118, file: !910, line: 180, baseType: !998, size: 32, align: 32, offset: 3904)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "force_fps", scope: !2118, file: !910, line: 181, baseType: !2126, size: 64, align: 64, offset: 3968)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "nb_force_fps", scope: !2118, file: !910, line: 182, baseType: !998, size: 32, align: 32, offset: 4032)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "frame_aspect_ratios", scope: !2118, file: !910, line: 183, baseType: !2126, size: 64, align: 64, offset: 4096)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "nb_frame_aspect_ratios", scope: !2118, file: !910, line: 184, baseType: !998, size: 32, align: 32, offset: 4160)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "rc_overrides", scope: !2118, file: !910, line: 185, baseType: !2126, size: 64, align: 64, offset: 4224)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rc_overrides", scope: !2118, file: !910, line: 186, baseType: !998, size: 32, align: 32, offset: 4288)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrices", scope: !2118, file: !910, line: 187, baseType: !2126, size: 64, align: 64, offset: 4352)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "nb_intra_matrices", scope: !2118, file: !910, line: 188, baseType: !998, size: 32, align: 32, offset: 4416)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrices", scope: !2118, file: !910, line: 189, baseType: !2126, size: 64, align: 64, offset: 4480)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inter_matrices", scope: !2118, file: !910, line: 190, baseType: !998, size: 32, align: 32, offset: 4544)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrices", scope: !2118, file: !910, line: 191, baseType: !2126, size: 64, align: 64, offset: 4608)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "nb_chroma_intra_matrices", scope: !2118, file: !910, line: 192, baseType: !998, size: 32, align: 32, offset: 4672)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !2118, file: !910, line: 193, baseType: !2126, size: 64, align: 64, offset: 4736)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "nb_top_field_first", scope: !2118, file: !910, line: 194, baseType: !998, size: 32, align: 32, offset: 4800)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_map", scope: !2118, file: !910, line: 195, baseType: !2126, size: 64, align: 64, offset: 4864)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "nb_metadata_map", scope: !2118, file: !910, line: 196, baseType: !998, size: 32, align: 32, offset: 4928)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "presets", scope: !2118, file: !910, line: 197, baseType: !2126, size: 64, align: 64, offset: 4992)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "nb_presets", scope: !2118, file: !910, line: 198, baseType: !998, size: 32, align: 32, offset: 5056)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "copy_initial_nonkeyframes", scope: !2118, file: !910, line: 199, baseType: !2126, size: 64, align: 64, offset: 5120)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "nb_copy_initial_nonkeyframes", scope: !2118, file: !910, line: 200, baseType: !998, size: 32, align: 32, offset: 5184)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "copy_prior_start", scope: !2118, file: !910, line: 201, baseType: !2126, size: 64, align: 64, offset: 5248)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "nb_copy_prior_start", scope: !2118, file: !910, line: 202, baseType: !998, size: 32, align: 32, offset: 5312)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !2118, file: !910, line: 203, baseType: !2126, size: 64, align: 64, offset: 5376)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "nb_filters", scope: !2118, file: !910, line: 204, baseType: !998, size: 32, align: 32, offset: 5440)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "filter_scripts", scope: !2118, file: !910, line: 205, baseType: !2126, size: 64, align: 64, offset: 5504)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "nb_filter_scripts", scope: !2118, file: !910, line: 206, baseType: !998, size: 32, align: 32, offset: 5568)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "reinit_filters", scope: !2118, file: !910, line: 207, baseType: !2126, size: 64, align: 64, offset: 5632)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reinit_filters", scope: !2118, file: !910, line: 208, baseType: !998, size: 32, align: 32, offset: 5696)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "fix_sub_duration", scope: !2118, file: !910, line: 209, baseType: !2126, size: 64, align: 64, offset: 5760)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "nb_fix_sub_duration", scope: !2118, file: !910, line: 210, baseType: !998, size: 32, align: 32, offset: 5824)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "canvas_sizes", scope: !2118, file: !910, line: 211, baseType: !2126, size: 64, align: 64, offset: 5888)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "nb_canvas_sizes", scope: !2118, file: !910, line: 212, baseType: !998, size: 32, align: 32, offset: 5952)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2118, file: !910, line: 213, baseType: !2126, size: 64, align: 64, offset: 6016)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "nb_pass", scope: !2118, file: !910, line: 214, baseType: !998, size: 32, align: 32, offset: 6080)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "passlogfiles", scope: !2118, file: !910, line: 215, baseType: !2126, size: 64, align: 64, offset: 6144)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "nb_passlogfiles", scope: !2118, file: !910, line: 216, baseType: !998, size: 32, align: 32, offset: 6208)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "max_muxing_queue_size", scope: !2118, file: !910, line: 217, baseType: !2126, size: 64, align: 64, offset: 6272)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "nb_max_muxing_queue_size", scope: !2118, file: !910, line: 218, baseType: !998, size: 32, align: 32, offset: 6336)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "guess_layout_max", scope: !2118, file: !910, line: 219, baseType: !2126, size: 64, align: 64, offset: 6400)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "nb_guess_layout_max", scope: !2118, file: !910, line: 220, baseType: !998, size: 32, align: 32, offset: 6464)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "apad", scope: !2118, file: !910, line: 221, baseType: !2126, size: 64, align: 64, offset: 6528)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "nb_apad", scope: !2118, file: !910, line: 222, baseType: !998, size: 32, align: 32, offset: 6592)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !2118, file: !910, line: 223, baseType: !2126, size: 64, align: 64, offset: 6656)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "nb_discard", scope: !2118, file: !910, line: 224, baseType: !998, size: 32, align: 32, offset: 6720)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "disposition", scope: !2118, file: !910, line: 225, baseType: !2126, size: 64, align: 64, offset: 6784)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "nb_disposition", scope: !2118, file: !910, line: 226, baseType: !998, size: 32, align: 32, offset: 6848)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !2118, file: !910, line: 227, baseType: !2126, size: 64, align: 64, offset: 6912)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "nb_program", scope: !2118, file: !910, line: 228, baseType: !998, size: 32, align: 32, offset: 6976)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "time_bases", scope: !2118, file: !910, line: 229, baseType: !2126, size: 64, align: 64, offset: 7040)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "nb_time_bases", scope: !2118, file: !910, line: 230, baseType: !998, size: 32, align: 32, offset: 7104)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "enc_time_bases", scope: !2118, file: !910, line: 231, baseType: !2126, size: 64, align: 64, offset: 7168)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "nb_enc_time_bases", scope: !2118, file: !910, line: 232, baseType: !998, size: 32, align: 32, offset: 7232)
!2277 = !DILocalVariable(name: "l", arg: 1, scope: !2110, file: !919, line: 3253, type: !2023)
!2278 = !DILocation(line: 3253, column: 40, scope: !2110)
!2279 = !DILocalVariable(name: "inout", arg: 2, scope: !2110, file: !919, line: 3253, type: !982)
!2280 = !DILocation(line: 3253, column: 55, scope: !2110)
!2281 = !DILocalVariable(name: "open_file", arg: 3, scope: !2110, file: !919, line: 3254, type: !2113)
!2282 = !DILocation(line: 3254, column: 29, scope: !2110)
!2283 = !DILocalVariable(name: "i", scope: !2110, file: !919, line: 3256, type: !998)
!2284 = !DILocation(line: 3256, column: 9, scope: !2110)
!2285 = !DILocalVariable(name: "ret", scope: !2110, file: !919, line: 3256, type: !998)
!2286 = !DILocation(line: 3256, column: 12, scope: !2110)
!2287 = !DILocation(line: 3258, column: 12, scope: !2288)
!2288 = distinct !DILexicalBlock(scope: !2110, file: !919, line: 3258, column: 5)
!2289 = !DILocation(line: 3258, column: 10, scope: !2288)
!2290 = !DILocation(line: 3258, column: 17, scope: !2291)
!2291 = !DILexicalBlockFile(scope: !2292, file: !919, discriminator: 1)
!2292 = distinct !DILexicalBlock(scope: !2288, file: !919, line: 3258, column: 5)
!2293 = !DILocation(line: 3258, column: 21, scope: !2291)
!2294 = !DILocation(line: 3258, column: 24, scope: !2291)
!2295 = !DILocation(line: 3258, column: 19, scope: !2291)
!2296 = !DILocation(line: 3258, column: 5, scope: !2291)
!2297 = !DILocalVariable(name: "g", scope: !2298, file: !919, line: 3259, type: !2029)
!2298 = distinct !DILexicalBlock(scope: !2292, file: !919, line: 3258, column: 40)
!2299 = !DILocation(line: 3259, column: 22, scope: !2298)
!2300 = !DILocation(line: 3259, column: 37, scope: !2298)
!2301 = !DILocation(line: 3259, column: 27, scope: !2298)
!2302 = !DILocation(line: 3259, column: 30, scope: !2298)
!2303 = !DILocalVariable(name: "o", scope: !2298, file: !919, line: 3260, type: !2117)
!2304 = !DILocation(line: 3260, column: 24, scope: !2298)
!2305 = !DILocation(line: 3262, column: 9, scope: !2298)
!2306 = !DILocation(line: 3263, column: 15, scope: !2298)
!2307 = !DILocation(line: 3263, column: 11, scope: !2298)
!2308 = !DILocation(line: 3263, column: 13, scope: !2298)
!2309 = !DILocation(line: 3265, column: 30, scope: !2298)
!2310 = !DILocation(line: 3265, column: 34, scope: !2298)
!2311 = !DILocation(line: 3265, column: 15, scope: !2298)
!2312 = !DILocation(line: 3265, column: 13, scope: !2298)
!2313 = !DILocation(line: 3266, column: 13, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2298, file: !919, line: 3266, column: 13)
!2315 = !DILocation(line: 3266, column: 17, scope: !2314)
!2316 = !DILocation(line: 3266, column: 13, scope: !2298)
!2317 = !DILocation(line: 3268, column: 29, scope: !2318)
!2318 = distinct !DILexicalBlock(scope: !2314, file: !919, line: 3266, column: 22)
!2319 = !DILocation(line: 3268, column: 36, scope: !2318)
!2320 = !DILocation(line: 3268, column: 39, scope: !2318)
!2321 = !DILocation(line: 3267, column: 13, scope: !2318)
!2322 = !DILocation(line: 3269, column: 20, scope: !2318)
!2323 = !DILocation(line: 3269, column: 13, scope: !2318)
!2324 = !DILocation(line: 3272, column: 54, scope: !2298)
!2325 = !DILocation(line: 3272, column: 61, scope: !2298)
!2326 = !DILocation(line: 3272, column: 64, scope: !2298)
!2327 = !DILocation(line: 3272, column: 9, scope: !2298)
!2328 = !DILocation(line: 3273, column: 15, scope: !2298)
!2329 = !DILocation(line: 3273, column: 29, scope: !2298)
!2330 = !DILocation(line: 3273, column: 32, scope: !2298)
!2331 = !DILocation(line: 3273, column: 13, scope: !2298)
!2332 = !DILocation(line: 3274, column: 9, scope: !2298)
!2333 = !DILocation(line: 3275, column: 13, scope: !2334)
!2334 = distinct !DILexicalBlock(scope: !2298, file: !919, line: 3275, column: 13)
!2335 = !DILocation(line: 3275, column: 17, scope: !2334)
!2336 = !DILocation(line: 3275, column: 13, scope: !2298)
!2337 = !DILocation(line: 3277, column: 20, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2334, file: !919, line: 3275, column: 22)
!2339 = !DILocation(line: 3277, column: 27, scope: !2338)
!2340 = !DILocation(line: 3277, column: 30, scope: !2338)
!2341 = !DILocation(line: 3276, column: 13, scope: !2338)
!2342 = !DILocation(line: 3278, column: 20, scope: !2338)
!2343 = !DILocation(line: 3278, column: 13, scope: !2338)
!2344 = !DILocation(line: 3280, column: 9, scope: !2298)
!2345 = !DILocation(line: 3281, column: 5, scope: !2298)
!2346 = !DILocation(line: 3258, column: 36, scope: !2347)
!2347 = !DILexicalBlockFile(scope: !2292, file: !919, discriminator: 2)
!2348 = !DILocation(line: 3258, column: 5, scope: !2347)
!2349 = distinct !{!2349, !2350}
!2350 = !DILocation(line: 3258, column: 5, scope: !2110)
!2351 = !DILocation(line: 3283, column: 5, scope: !2110)
!2352 = !DILocation(line: 3284, column: 1, scope: !2110)
!2353 = distinct !DISubprogram(name: "open_input_file", scope: !919, file: !919, line: 997, type: !2114, isLocal: true, isDefinition: true, scopeLine: 998, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!2354 = !DILocalVariable(name: "o", arg: 1, scope: !2353, file: !919, line: 997, type: !2116)
!2355 = !DILocation(line: 997, column: 44, scope: !2353)
!2356 = !DILocalVariable(name: "filename", arg: 2, scope: !2353, file: !919, line: 997, type: !982)
!2357 = !DILocation(line: 997, column: 59, scope: !2353)
!2358 = !DILocalVariable(name: "f", scope: !2353, file: !919, line: 999, type: !2359)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64, align: 64)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "InputFile", file: !910, line: 422, baseType: !2361)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "InputFile", file: !910, line: 393, size: 1088, align: 64, elements: !2362)
!2362 = !{!2363, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2913, !2916, !2917, !2918}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !2361, file: !910, line: 394, baseType: !2364, size: 64, align: 64)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64, align: 64)
!2365 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatContext", file: !947, line: 1947, baseType: !2366)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatContext", file: !947, line: 1337, size: 11968, align: 64, elements: !2367)
!2367 = !{!2368, !2369, !2439, !2494, !2495, !2558, !2559, !2560, !2770, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2824, !2825, !2826, !2827, !2828, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2859, !2860, !2863, !2864, !2865, !2866, !2867, !2868, !2870, !2871, !2872, !2873, !2880, !2881, !2885, !2889, !2890, !2891}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !2366, file: !947, line: 1342, baseType: !976, size: 64, align: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "iformat", scope: !2366, file: !947, line: 1349, baseType: !2370, size: 64, align: 64, offset: 64)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64, align: 64)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVInputFormat", file: !947, line: 633, size: 1344, align: 64, elements: !2372)
!2372 = !{!2373, !2374, !2375, !2376, !2377, !2383, !2384, !2385, !2386, !2387, !2388, !2401, !2406, !2410, !2411, !2415, !2420, !2421, !2422, !2426, !2432, !2438}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2371, file: !947, line: 638, baseType: !982, size: 64, align: 64)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !2371, file: !947, line: 645, baseType: !982, size: 64, align: 64, offset: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2371, file: !947, line: 652, baseType: !998, size: 32, align: 32, offset: 128)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !2371, file: !947, line: 659, baseType: !982, size: 64, align: 64, offset: 192)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !2371, file: !947, line: 661, baseType: !2378, size: 64, align: 64, offset: 256)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64, align: 64)
!2379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2380)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64, align: 64)
!2381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2382)
!2382 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecTag", file: !947, line: 443, flags: DIFlagFwdDecl)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !2371, file: !947, line: 663, baseType: !976, size: 64, align: 64, offset: 320)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !2371, file: !947, line: 670, baseType: !982, size: 64, align: 64, offset: 384)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2371, file: !947, line: 679, baseType: !2370, size: 64, align: 64, offset: 448)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "raw_codec_id", scope: !2371, file: !947, line: 684, baseType: !998, size: 32, align: 32, offset: 512)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2371, file: !947, line: 689, baseType: !998, size: 32, align: 32, offset: 544)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "read_probe", scope: !2371, file: !947, line: 696, baseType: !2389, size: 64, align: 64, offset: 576)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 64, align: 64)
!2390 = !DISubroutineType(types: !2391)
!2391 = !{!998, !2392}
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 64, align: 64)
!2393 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProbeData", file: !947, line: 453, baseType: !2394)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProbeData", file: !947, line: 448, size: 256, align: 64, elements: !2395)
!2395 = !{!2396, !2397, !2399, !2400}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !2394, file: !947, line: 449, baseType: !982, size: 64, align: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2394, file: !947, line: 450, baseType: !2398, size: 64, align: 64, offset: 64)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64, align: 64)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !2394, file: !947, line: 451, baseType: !998, size: 32, align: 32, offset: 128)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !2394, file: !947, line: 452, baseType: !982, size: 64, align: 64, offset: 192)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !2371, file: !947, line: 703, baseType: !2402, size: 64, align: 64, offset: 640)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64, align: 64)
!2403 = !DISubroutineType(types: !2404)
!2404 = !{!998, !2405}
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64, align: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !2371, file: !947, line: 714, baseType: !2407, size: 64, align: 64, offset: 704)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64, align: 64)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!998, !2405, !1470}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "read_close", scope: !2371, file: !947, line: 720, baseType: !2402, size: 64, align: 64, offset: 768)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !2371, file: !947, line: 730, baseType: !2412, size: 64, align: 64, offset: 832)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64, align: 64)
!2413 = !DISubroutineType(types: !2414)
!2414 = !{!998, !2405, !998, !1004, !998}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "read_timestamp", scope: !2371, file: !947, line: 737, baseType: !2416, size: 64, align: 64, offset: 896)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64, align: 64)
!2417 = !DISubroutineType(types: !2418)
!2418 = !{!1004, !2405, !998, !2419, !1004}
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64, align: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "read_play", scope: !2371, file: !947, line: 744, baseType: !2402, size: 64, align: 64, offset: 960)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !2371, file: !947, line: 750, baseType: !2402, size: 64, align: 64, offset: 1024)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek2", scope: !2371, file: !947, line: 758, baseType: !2423, size: 64, align: 64, offset: 1088)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64, align: 64)
!2424 = !DISubroutineType(types: !2425)
!2425 = !{!998, !2405, !998, !1004, !1004, !1004, !998}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !2371, file: !947, line: 764, baseType: !2427, size: 64, align: 64, offset: 1152)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64, align: 64)
!2428 = !DISubroutineType(types: !2429)
!2429 = !{!998, !2405, !2430}
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64, align: 64)
!2431 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceInfoList", file: !947, line: 328, flags: DIFlagFwdDecl)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !2371, file: !947, line: 770, baseType: !2433, size: 64, align: 64, offset: 1216)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64, align: 64)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{!998, !2405, !2436}
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 64, align: 64)
!2437 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceCapabilitiesQuery", file: !947, line: 329, flags: DIFlagFwdDecl)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !2371, file: !947, line: 776, baseType: !2433, size: 64, align: 64, offset: 1280)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "oformat", scope: !2366, file: !947, line: 1356, baseType: !2440, size: 64, align: 64, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64, align: 64)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOutputFormat", file: !947, line: 497, size: 1600, align: 64, elements: !2442)
!2442 = !{!2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2462, !2466, !2470, !2474, !2479, !2480, !2481, !2482, !2483, !2484, !2488}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2441, file: !947, line: 498, baseType: !982, size: 64, align: 64)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !2441, file: !947, line: 504, baseType: !982, size: 64, align: 64, offset: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !2441, file: !947, line: 505, baseType: !982, size: 64, align: 64, offset: 128)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !2441, file: !947, line: 506, baseType: !982, size: 64, align: 64, offset: 192)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2441, file: !947, line: 508, baseType: !56, size: 32, align: 32, offset: 256)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !2441, file: !947, line: 509, baseType: !56, size: 32, align: 32, offset: 288)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !2441, file: !947, line: 510, baseType: !56, size: 32, align: 32, offset: 320)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2441, file: !947, line: 517, baseType: !998, size: 32, align: 32, offset: 352)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !2441, file: !947, line: 523, baseType: !2378, size: 64, align: 64, offset: 384)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !2441, file: !947, line: 526, baseType: !976, size: 64, align: 64, offset: 448)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2441, file: !947, line: 535, baseType: !2440, size: 64, align: 64, offset: 512)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2441, file: !947, line: 539, baseType: !998, size: 32, align: 32, offset: 576)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !2441, file: !947, line: 541, baseType: !2402, size: 64, align: 64, offset: 640)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !2441, file: !947, line: 549, baseType: !2407, size: 64, align: 64, offset: 704)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "write_trailer", scope: !2441, file: !947, line: 550, baseType: !2402, size: 64, align: 64, offset: 768)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "interleave_packet", scope: !2441, file: !947, line: 554, baseType: !2459, size: 64, align: 64, offset: 832)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64, align: 64)
!2460 = !DISubroutineType(types: !2461)
!2461 = !{!998, !2405, !1470, !1470, !998}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "query_codec", scope: !2441, file: !947, line: 563, baseType: !2463, size: 64, align: 64, offset: 896)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64, align: 64)
!2464 = !DISubroutineType(types: !2465)
!2465 = !{!998, !56, !998}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "get_output_timestamp", scope: !2441, file: !947, line: 565, baseType: !2467, size: 64, align: 64, offset: 960)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64, align: 64)
!2468 = !DISubroutineType(types: !2469)
!2469 = !{null, !2405, !998, !2419, !2419}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "control_message", scope: !2441, file: !947, line: 570, baseType: !2471, size: 64, align: 64, offset: 1024)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64, align: 64)
!2472 = !DISubroutineType(types: !2473)
!2473 = !{!998, !2405, !998, !989, !1293}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "write_uncoded_frame", scope: !2441, file: !947, line: 581, baseType: !2475, size: 64, align: 64, offset: 1088)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64, align: 64)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{!998, !2405, !998, !2478, !1119}
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64, align: 64)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !2441, file: !947, line: 587, baseType: !2427, size: 64, align: 64, offset: 1152)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !2441, file: !947, line: 592, baseType: !2433, size: 64, align: 64, offset: 1216)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !2441, file: !947, line: 597, baseType: !2433, size: 64, align: 64, offset: 1280)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !2441, file: !947, line: 598, baseType: !56, size: 32, align: 32, offset: 1344)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2441, file: !947, line: 608, baseType: !2402, size: 64, align: 64, offset: 1408)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "deinit", scope: !2441, file: !947, line: 617, baseType: !2485, size: 64, align: 64, offset: 1472)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64, align: 64)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{null, !2405}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "check_bitstream", scope: !2441, file: !947, line: 623, baseType: !2489, size: 64, align: 64, offset: 1536)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64, align: 64)
!2490 = !DISubroutineType(types: !2491)
!2491 = !{!998, !2405, !2492}
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64, align: 64)
!2493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1471)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !2366, file: !947, line: 1365, baseType: !989, size: 64, align: 64, offset: 192)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !2366, file: !947, line: 1379, baseType: !2496, size: 64, align: 64, offset: 256)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64, align: 64)
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOContext", file: !938, line: 352, baseType: !2498)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOContext", file: !938, line: 161, size: 2112, align: 64, elements: !2499)
!2499 = !{!2500, !2501, !2502, !2503, !2504, !2505, !2506, !2510, !2511, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2525, !2526, !2530, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2548, !2549, !2550, !2551, !2555, !2556, !2557}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !2498, file: !938, line: 174, baseType: !976, size: 64, align: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2498, file: !938, line: 226, baseType: !2398, size: 64, align: 64, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !2498, file: !938, line: 227, baseType: !998, size: 32, align: 32, offset: 128)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !2498, file: !938, line: 228, baseType: !2398, size: 64, align: 64, offset: 192)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !2498, file: !938, line: 229, baseType: !2398, size: 64, align: 64, offset: 256)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2498, file: !938, line: 233, baseType: !989, size: 64, align: 64, offset: 320)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !2498, file: !938, line: 235, baseType: !2507, size: 64, align: 64, offset: 384)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64, align: 64)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{!998, !989, !1179, !998}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !2498, file: !938, line: 236, baseType: !2507, size: 64, align: 64, offset: 448)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !2498, file: !938, line: 237, baseType: !2512, size: 64, align: 64, offset: 512)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 64, align: 64)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{!1004, !989, !1004, !998}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2498, file: !938, line: 238, baseType: !1004, size: 64, align: 64, offset: 576)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "eof_reached", scope: !2498, file: !938, line: 239, baseType: !998, size: 32, align: 32, offset: 640)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "write_flag", scope: !2498, file: !938, line: 240, baseType: !998, size: 32, align: 32, offset: 672)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "max_packet_size", scope: !2498, file: !938, line: 241, baseType: !998, size: 32, align: 32, offset: 704)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !2498, file: !938, line: 242, baseType: !1195, size: 64, align: 64, offset: 768)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_ptr", scope: !2498, file: !938, line: 243, baseType: !2398, size: 64, align: 64, offset: 832)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "update_checksum", scope: !2498, file: !938, line: 244, baseType: !2522, size: 64, align: 64, offset: 896)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64, align: 64)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{!1195, !1195, !1696, !1119}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2498, file: !938, line: 245, baseType: !998, size: 32, align: 32, offset: 960)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !2498, file: !938, line: 249, baseType: !2527, size: 64, align: 64, offset: 1024)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64, align: 64)
!2528 = !DISubroutineType(types: !2529)
!2529 = !{!998, !989, !998}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !2498, file: !938, line: 255, baseType: !2531, size: 64, align: 64, offset: 1088)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64, align: 64)
!2532 = !DISubroutineType(types: !2533)
!2533 = !{!1004, !989, !998, !1004, !998}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "seekable", scope: !2498, file: !938, line: 260, baseType: !998, size: 32, align: 32, offset: 1152)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "maxsize", scope: !2498, file: !938, line: 266, baseType: !1004, size: 64, align: 64, offset: 1216)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "direct", scope: !2498, file: !938, line: 273, baseType: !998, size: 32, align: 32, offset: 1280)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_read", scope: !2498, file: !938, line: 279, baseType: !1004, size: 64, align: 64, offset: 1344)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "seek_count", scope: !2498, file: !938, line: 285, baseType: !998, size: 32, align: 32, offset: 1408)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "writeout_count", scope: !2498, file: !938, line: 291, baseType: !998, size: 32, align: 32, offset: 1440)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "orig_buffer_size", scope: !2498, file: !938, line: 298, baseType: !998, size: 32, align: 32, offset: 1472)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_threshold", scope: !2498, file: !938, line: 304, baseType: !998, size: 32, align: 32, offset: 1504)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !2498, file: !938, line: 309, baseType: !982, size: 64, align: 64, offset: 1536)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !2498, file: !938, line: 314, baseType: !982, size: 64, align: 64, offset: 1600)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "write_data_type", scope: !2498, file: !938, line: 319, baseType: !2545, size: 64, align: 64, offset: 1664)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 64, align: 64)
!2546 = !DISubroutineType(types: !2547)
!2547 = !{!998, !989, !1179, !998, !937, !1004}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_boundary_point", scope: !2498, file: !938, line: 326, baseType: !998, size: 32, align: 32, offset: 1728)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "current_type", scope: !2498, file: !938, line: 331, baseType: !937, size: 32, align: 32, offset: 1760)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !2498, file: !938, line: 332, baseType: !1004, size: 64, align: 64, offset: 1792)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_get", scope: !2498, file: !938, line: 338, baseType: !2552, size: 64, align: 64, offset: 1856)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64, align: 64)
!2553 = !DISubroutineType(types: !2554)
!2554 = !{!998, !989}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !2498, file: !938, line: 340, baseType: !1004, size: 64, align: 64, offset: 1920)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr_max", scope: !2498, file: !938, line: 346, baseType: !2398, size: 64, align: 64, offset: 1984)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "min_packet_size", scope: !2498, file: !938, line: 351, baseType: !998, size: 32, align: 32, offset: 2048)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_flags", scope: !2366, file: !947, line: 1386, baseType: !998, size: 32, align: 32, offset: 320)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "nb_streams", scope: !2366, file: !947, line: 1393, baseType: !1119, size: 32, align: 32, offset: 352)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !2366, file: !947, line: 1405, baseType: !2561, size: 64, align: 64, offset: 384)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64, align: 64)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64, align: 64)
!2563 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStream", file: !947, line: 1223, baseType: !2564)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStream", file: !947, line: 865, size: 6144, align: 64, elements: !2565)
!2565 = !{!2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2619, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2718, !2724, !2725, !2729, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2761, !2762, !2763, !2764, !2765, !2766}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2564, file: !947, line: 866, baseType: !998, size: 32, align: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2564, file: !947, line: 872, baseType: !998, size: 32, align: 32, offset: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2564, file: !947, line: 878, baseType: !1361, size: 64, align: 64, offset: 64)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !2564, file: !947, line: 880, baseType: !989, size: 64, align: 64, offset: 128)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !2564, file: !947, line: 894, baseType: !1011, size: 64, align: 32, offset: 192)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2564, file: !947, line: 904, baseType: !1004, size: 64, align: 64, offset: 256)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2564, file: !947, line: 914, baseType: !1004, size: 64, align: 64, offset: 320)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "nb_frames", scope: !2564, file: !947, line: 916, baseType: !1004, size: 64, align: 64, offset: 384)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "disposition", scope: !2564, file: !947, line: 918, baseType: !998, size: 32, align: 32, offset: 448)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !2564, file: !947, line: 920, baseType: !900, size: 32, align: 32, offset: 480)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !2564, file: !947, line: 927, baseType: !1011, size: 64, align: 32, offset: 512)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2564, file: !947, line: 929, baseType: !1088, size: 64, align: 64, offset: 576)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "avg_frame_rate", scope: !2564, file: !947, line: 938, baseType: !1011, size: 64, align: 32, offset: 640)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "attached_pic", scope: !2564, file: !947, line: 947, baseType: !1471, size: 704, align: 64, offset: 704)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !2564, file: !947, line: 967, baseType: !1482, size: 64, align: 64, offset: 1408)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !2564, file: !947, line: 971, baseType: !998, size: 32, align: 32, offset: 1472)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2564, file: !947, line: 978, baseType: !998, size: 32, align: 32, offset: 1504)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "r_frame_rate", scope: !2564, file: !947, line: 989, baseType: !1011, size: 64, align: 32, offset: 1536)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "recommended_encoder_configuration", scope: !2564, file: !947, line: 1000, baseType: !1105, size: 64, align: 64, offset: 1600)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "codecpar", scope: !2564, file: !947, line: 1012, baseType: !2586, size: 64, align: 64, offset: 1664)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64, align: 64)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !57, line: 4085, baseType: !2588)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !57, line: 3936, size: 1152, align: 64, elements: !2589)
!2589 = !{!2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !2588, file: !57, line: 3940, baseType: !46, size: 32, align: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !2588, file: !57, line: 3944, baseType: !56, size: 32, align: 32, offset: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !2588, file: !57, line: 3948, baseType: !1338, size: 32, align: 32, offset: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !2588, file: !57, line: 3958, baseType: !1179, size: 64, align: 64, offset: 128)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !2588, file: !57, line: 3962, baseType: !998, size: 32, align: 32, offset: 192)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2588, file: !57, line: 3968, baseType: !998, size: 32, align: 32, offset: 224)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !2588, file: !57, line: 3973, baseType: !1004, size: 64, align: 64, offset: 256)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !2588, file: !57, line: 3986, baseType: !998, size: 32, align: 32, offset: 320)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !2588, file: !57, line: 3999, baseType: !998, size: 32, align: 32, offset: 352)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !2588, file: !57, line: 4004, baseType: !998, size: 32, align: 32, offset: 384)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2588, file: !57, line: 4005, baseType: !998, size: 32, align: 32, offset: 416)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2588, file: !57, line: 4010, baseType: !998, size: 32, align: 32, offset: 448)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2588, file: !57, line: 4011, baseType: !998, size: 32, align: 32, offset: 480)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !2588, file: !57, line: 4020, baseType: !1011, size: 64, align: 32, offset: 512)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !2588, file: !57, line: 4025, baseType: !880, size: 32, align: 32, offset: 576)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !2588, file: !57, line: 4030, baseType: !803, size: 32, align: 32, offset: 608)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !2588, file: !57, line: 4031, baseType: !809, size: 32, align: 32, offset: 640)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !2588, file: !57, line: 4032, baseType: !827, size: 32, align: 32, offset: 672)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !2588, file: !57, line: 4033, baseType: !851, size: 32, align: 32, offset: 704)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !2588, file: !57, line: 4034, baseType: !870, size: 32, align: 32, offset: 736)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !2588, file: !57, line: 4039, baseType: !998, size: 32, align: 32, offset: 768)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !2588, file: !57, line: 4046, baseType: !1194, size: 64, align: 64, offset: 832)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2588, file: !57, line: 4050, baseType: !998, size: 32, align: 32, offset: 896)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2588, file: !57, line: 4054, baseType: !998, size: 32, align: 32, offset: 928)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !2588, file: !57, line: 4061, baseType: !998, size: 32, align: 32, offset: 960)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !2588, file: !57, line: 4065, baseType: !998, size: 32, align: 32, offset: 992)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !2588, file: !57, line: 4073, baseType: !998, size: 32, align: 32, offset: 1024)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !2588, file: !57, line: 4080, baseType: !998, size: 32, align: 32, offset: 1056)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !2588, file: !57, line: 4084, baseType: !998, size: 32, align: 32, offset: 1088)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2564, file: !947, line: 1055, baseType: !2620, size: 64, align: 64, offset: 1728)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64, align: 64)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2564, file: !947, line: 1028, size: 832, align: 64, elements: !2622)
!2622 = !{!2623, !2624, !2625, !2626, !2627, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !2621, file: !947, line: 1029, baseType: !1004, size: 64, align: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "duration_gcd", scope: !2621, file: !947, line: 1030, baseType: !1004, size: 64, align: 64, offset: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "duration_count", scope: !2621, file: !947, line: 1031, baseType: !998, size: 32, align: 32, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "rfps_duration_sum", scope: !2621, file: !947, line: 1032, baseType: !1004, size: 64, align: 64, offset: 192)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "duration_error", scope: !2621, file: !947, line: 1033, baseType: !2628, size: 64, align: 64, offset: 256)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 64, align: 64)
!2629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 51072, align: 64, elements: !2630)
!2630 = !{!1872, !2631}
!2631 = !DISubrange(count: 399)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration", scope: !2621, file: !947, line: 1034, baseType: !1004, size: 64, align: 64, offset: 320)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration_fields", scope: !2621, file: !947, line: 1035, baseType: !1004, size: 64, align: 64, offset: 384)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "frame_delay_evidence", scope: !2621, file: !947, line: 1036, baseType: !998, size: 32, align: 32, offset: 448)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "found_decoder", scope: !2621, file: !947, line: 1043, baseType: !998, size: 32, align: 32, offset: 480)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "last_duration", scope: !2621, file: !947, line: 1045, baseType: !1004, size: 64, align: 64, offset: 512)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts", scope: !2621, file: !947, line: 1050, baseType: !1004, size: 64, align: 64, offset: 576)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts_idx", scope: !2621, file: !947, line: 1051, baseType: !998, size: 32, align: 32, offset: 640)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts", scope: !2621, file: !947, line: 1052, baseType: !1004, size: 64, align: 64, offset: 704)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts_idx", scope: !2621, file: !947, line: 1053, baseType: !998, size: 32, align: 32, offset: 768)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_bits", scope: !2564, file: !947, line: 1057, baseType: !998, size: 32, align: 32, offset: 1792)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "first_dts", scope: !2564, file: !947, line: 1067, baseType: !1004, size: 64, align: 64, offset: 1856)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "cur_dts", scope: !2564, file: !947, line: 1068, baseType: !1004, size: 64, align: 64, offset: 1920)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_pts", scope: !2564, file: !947, line: 1069, baseType: !1004, size: 64, align: 64, offset: 1984)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_duration", scope: !2564, file: !947, line: 1070, baseType: !998, size: 32, align: 32, offset: 2048)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "probe_packets", scope: !2564, file: !947, line: 1075, baseType: !998, size: 32, align: 32, offset: 2080)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_nb_frames", scope: !2564, file: !947, line: 1080, baseType: !998, size: 32, align: 32, offset: 2112)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "need_parsing", scope: !2564, file: !947, line: 1083, baseType: !946, size: 32, align: 32, offset: 2144)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !2564, file: !947, line: 1084, baseType: !2650, size: 64, align: 64, offset: 2176)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64, align: 64)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParserContext", file: !57, line: 5092, size: 2816, align: 64, elements: !2652)
!2652 = !{!2653, !2654, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !2651, file: !57, line: 5093, baseType: !989, size: 64, align: 64)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !2651, file: !57, line: 5094, baseType: !2655, size: 64, align: 64, offset: 64)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64, align: 64)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParser", file: !57, line: 5259, size: 512, align: 64, elements: !2657)
!2657 = !{!2658, !2662, !2663, !2669, !2674, !2678, !2682}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !2656, file: !57, line: 5260, baseType: !2659, size: 160, align: 32)
!2659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !998, size: 160, align: 32, elements: !2660)
!2660 = !{!2661}
!2661 = !DISubrange(count: 5)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2656, file: !57, line: 5261, baseType: !998, size: 32, align: 32, offset: 160)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "parser_init", scope: !2656, file: !57, line: 5262, baseType: !2664, size: 64, align: 64, offset: 192)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64, align: 64)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{!998, !2667}
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 64, align: 64)
!2668 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParserContext", file: !57, line: 5257, baseType: !2651)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "parser_parse", scope: !2656, file: !57, line: 5265, baseType: !2670, size: 64, align: 64, offset: 256)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64, align: 64)
!2671 = !DISubroutineType(types: !2672)
!2672 = !{!998, !2667, !1361, !2673, !1150, !1696, !998}
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64, align: 64)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "parser_close", scope: !2656, file: !57, line: 5269, baseType: !2675, size: 64, align: 64, offset: 320)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64, align: 64)
!2676 = !DISubroutineType(types: !2677)
!2677 = !{null, !2667}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2656, file: !57, line: 5270, baseType: !2679, size: 64, align: 64, offset: 384)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 64, align: 64)
!2680 = !DISubroutineType(types: !2681)
!2681 = !{!998, !1361, !1696, !998}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2656, file: !57, line: 5271, baseType: !2655, size: 64, align: 64, offset: 448)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !2651, file: !57, line: 5095, baseType: !1004, size: 64, align: 64, offset: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "cur_offset", scope: !2651, file: !57, line: 5096, baseType: !1004, size: 64, align: 64, offset: 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "next_frame_offset", scope: !2651, file: !57, line: 5098, baseType: !1004, size: 64, align: 64, offset: 256)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !2651, file: !57, line: 5100, baseType: !998, size: 32, align: 32, offset: 320)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !2651, file: !57, line: 5110, baseType: !998, size: 32, align: 32, offset: 352)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !2651, file: !57, line: 5111, baseType: !1004, size: 64, align: 64, offset: 384)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !2651, file: !57, line: 5112, baseType: !1004, size: 64, align: 64, offset: 448)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "last_pts", scope: !2651, file: !57, line: 5115, baseType: !1004, size: 64, align: 64, offset: 512)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !2651, file: !57, line: 5116, baseType: !1004, size: 64, align: 64, offset: 576)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_timestamp", scope: !2651, file: !57, line: 5117, baseType: !998, size: 32, align: 32, offset: 640)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_start_index", scope: !2651, file: !57, line: 5120, baseType: !998, size: 32, align: 32, offset: 672)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_offset", scope: !2651, file: !57, line: 5121, baseType: !2695, size: 256, align: 64, offset: 704)
!2695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1004, size: 256, align: 64, elements: !1457)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pts", scope: !2651, file: !57, line: 5122, baseType: !2695, size: 256, align: 64, offset: 960)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_dts", scope: !2651, file: !57, line: 5123, baseType: !2695, size: 256, align: 64, offset: 1216)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2651, file: !57, line: 5125, baseType: !998, size: 32, align: 32, offset: 1472)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2651, file: !57, line: 5132, baseType: !1004, size: 64, align: 64, offset: 1536)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_end", scope: !2651, file: !57, line: 5133, baseType: !2695, size: 256, align: 64, offset: 1600)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !2651, file: !57, line: 5141, baseType: !998, size: 32, align: 32, offset: 1856)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !2651, file: !57, line: 5148, baseType: !1004, size: 64, align: 64, offset: 1920)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "dts_sync_point", scope: !2651, file: !57, line: 5161, baseType: !998, size: 32, align: 32, offset: 1984)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ref_dts_delta", scope: !2651, file: !57, line: 5176, baseType: !998, size: 32, align: 32, offset: 2016)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "pts_dts_delta", scope: !2651, file: !57, line: 5190, baseType: !998, size: 32, align: 32, offset: 2048)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pos", scope: !2651, file: !57, line: 5197, baseType: !2695, size: 256, align: 64, offset: 2112)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2651, file: !57, line: 5202, baseType: !1004, size: 64, align: 64, offset: 2368)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "last_pos", scope: !2651, file: !57, line: 5207, baseType: !1004, size: 64, align: 64, offset: 2432)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2651, file: !57, line: 5214, baseType: !998, size: 32, align: 32, offset: 2496)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !2651, file: !57, line: 5216, baseType: !880, size: 32, align: 32, offset: 2528)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "picture_structure", scope: !2651, file: !57, line: 5226, baseType: !955, size: 32, align: 32, offset: 2560)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "output_picture_number", scope: !2651, file: !57, line: 5234, baseType: !998, size: 32, align: 32, offset: 2592)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2651, file: !57, line: 5239, baseType: !998, size: 32, align: 32, offset: 2624)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2651, file: !57, line: 5240, baseType: !998, size: 32, align: 32, offset: 2656)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !2651, file: !57, line: 5245, baseType: !998, size: 32, align: 32, offset: 2688)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !2651, file: !57, line: 5246, baseType: !998, size: 32, align: 32, offset: 2720)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2651, file: !57, line: 5256, baseType: !998, size: 32, align: 32, offset: 2752)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "last_in_packet_buffer", scope: !2564, file: !947, line: 1089, baseType: !2719, size: 64, align: 64, offset: 2240)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64, align: 64)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketList", file: !947, line: 2003, size: 768, align: 64, elements: !2721)
!2721 = !{!2722, !2723}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !2720, file: !947, line: 2004, baseType: !1471, size: 704, align: 64)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2720, file: !947, line: 2005, baseType: !2719, size: 64, align: 64, offset: 704)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "probe_data", scope: !2564, file: !947, line: 1090, baseType: !2393, size: 256, align: 64, offset: 2304)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "pts_buffer", scope: !2564, file: !947, line: 1092, baseType: !2726, size: 1088, align: 64, offset: 2560)
!2726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1004, size: 1088, align: 64, elements: !2727)
!2727 = !{!2728}
!2728 = !DISubrange(count: 17)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries", scope: !2564, file: !947, line: 1094, baseType: !2730, size: 64, align: 64, offset: 3648)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64, align: 64)
!2731 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIndexEntry", file: !947, line: 808, baseType: !2732)
!2732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIndexEntry", file: !947, line: 793, size: 192, align: 64, elements: !2733)
!2733 = !{!2734, !2735, !2736, !2737, !2738}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2732, file: !947, line: 794, baseType: !1004, size: 64, align: 64)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !2732, file: !947, line: 795, baseType: !1004, size: 64, align: 64, offset: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2732, file: !947, line: 805, baseType: !998, size: 2, align: 32, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2732, file: !947, line: 806, baseType: !998, size: 30, align: 32, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "min_distance", scope: !2732, file: !947, line: 807, baseType: !998, size: 32, align: 32, offset: 160)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index_entries", scope: !2564, file: !947, line: 1096, baseType: !998, size: 32, align: 32, offset: 3712)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries_allocated_size", scope: !2564, file: !947, line: 1097, baseType: !1119, size: 32, align: 32, offset: 3744)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "stream_identifier", scope: !2564, file: !947, line: 1104, baseType: !998, size: 32, align: 32, offset: 3776)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !2564, file: !947, line: 1109, baseType: !998, size: 32, align: 32, offset: 3808)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !2564, file: !947, line: 1110, baseType: !998, size: 32, align: 32, offset: 3840)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_stream_idx", scope: !2564, file: !947, line: 1111, baseType: !998, size: 32, align: 32, offset: 3872)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_size", scope: !2564, file: !947, line: 1113, baseType: !1004, size: 64, align: 64, offset: 3904)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_duration", scope: !2564, file: !947, line: 1114, baseType: !1004, size: 64, align: 64, offset: 3968)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "request_probe", scope: !2564, file: !947, line: 1123, baseType: !998, size: 32, align: 32, offset: 4032)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "skip_to_keyframe", scope: !2564, file: !947, line: 1128, baseType: !998, size: 32, align: 32, offset: 4064)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !2564, file: !947, line: 1133, baseType: !998, size: 32, align: 32, offset: 4096)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "start_skip_samples", scope: !2564, file: !947, line: 1142, baseType: !1004, size: 64, align: 64, offset: 4160)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "first_discard_sample", scope: !2564, file: !947, line: 1150, baseType: !1004, size: 64, align: 64, offset: 4224)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "last_discard_sample", scope: !2564, file: !947, line: 1157, baseType: !1004, size: 64, align: 64, offset: 4288)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "nb_decoded_frames", scope: !2564, file: !947, line: 1163, baseType: !998, size: 32, align: 32, offset: 4352)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "mux_ts_offset", scope: !2564, file: !947, line: 1169, baseType: !1004, size: 64, align: 64, offset: 4416)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !2564, file: !947, line: 1174, baseType: !1004, size: 64, align: 64, offset: 4480)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !2564, file: !947, line: 1186, baseType: !998, size: 32, align: 32, offset: 4544)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "update_initial_durations_done", scope: !2564, file: !947, line: 1191, baseType: !998, size: 32, align: 32, offset: 4576)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error", scope: !2564, file: !947, line: 1196, baseType: !2726, size: 1088, align: 64, offset: 4608)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error_count", scope: !2564, file: !947, line: 1197, baseType: !2760, size: 136, align: 8, offset: 5696)
!2760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1180, size: 136, align: 8, elements: !2727)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts_for_order_check", scope: !2564, file: !947, line: 1202, baseType: !1004, size: 64, align: 64, offset: 5888)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ordered", scope: !2564, file: !947, line: 1203, baseType: !1180, size: 8, align: 8, offset: 5952)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "dts_misordered", scope: !2564, file: !947, line: 1204, baseType: !1180, size: 8, align: 8, offset: 5960)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "inject_global_side_data", scope: !2564, file: !947, line: 1209, baseType: !998, size: 32, align: 32, offset: 5984)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "display_aspect_ratio", scope: !2564, file: !947, line: 1216, baseType: !1011, size: 64, align: 32, offset: 6016)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !2564, file: !947, line: 1222, baseType: !2767, size: 64, align: 64, offset: 6080)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64, align: 64)
!2768 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStreamInternal", file: !947, line: 840, baseType: !2769)
!2769 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVStreamInternal", file: !947, line: 840, flags: DIFlagFwdDecl)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !2366, file: !947, line: 1417, baseType: !2771, size: 8192, align: 8, offset: 448)
!2771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 8192, align: 8, elements: !2772)
!2772 = !{!2773}
!2773 = !DISubrange(count: 1024)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !2366, file: !947, line: 1433, baseType: !1105, size: 64, align: 64, offset: 8640)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2366, file: !947, line: 1442, baseType: !1004, size: 64, align: 64, offset: 8704)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2366, file: !947, line: 1452, baseType: !1004, size: 64, align: 64, offset: 8768)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !2366, file: !947, line: 1459, baseType: !1004, size: 64, align: 64, offset: 8832)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "packet_size", scope: !2366, file: !947, line: 1461, baseType: !1119, size: 32, align: 32, offset: 8896)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "max_delay", scope: !2366, file: !947, line: 1462, baseType: !998, size: 32, align: 32, offset: 8928)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2366, file: !947, line: 1468, baseType: !998, size: 32, align: 32, offset: 8960)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "probesize", scope: !2366, file: !947, line: 1503, baseType: !1004, size: 64, align: 64, offset: 9024)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "max_analyze_duration", scope: !2366, file: !947, line: 1511, baseType: !1004, size: 64, align: 64, offset: 9088)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2366, file: !947, line: 1513, baseType: !1696, size: 64, align: 64, offset: 9152)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !2366, file: !947, line: 1514, baseType: !998, size: 32, align: 32, offset: 9216)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "nb_programs", scope: !2366, file: !947, line: 1516, baseType: !1119, size: 32, align: 32, offset: 9248)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "programs", scope: !2366, file: !947, line: 1517, baseType: !2787, size: 64, align: 64, offset: 9280)
!2787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 64, align: 64)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64, align: 64)
!2789 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProgram", file: !947, line: 1284, baseType: !2790)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProgram", file: !947, line: 1259, size: 704, align: 64, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2790, file: !947, line: 1260, baseType: !998, size: 32, align: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2790, file: !947, line: 1261, baseType: !998, size: 32, align: 32, offset: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !2790, file: !947, line: 1262, baseType: !900, size: 32, align: 32, offset: 64)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !2790, file: !947, line: 1263, baseType: !2796, size: 64, align: 64, offset: 128)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64, align: 64)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "nb_stream_indexes", scope: !2790, file: !947, line: 1264, baseType: !1119, size: 32, align: 32, offset: 192)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2790, file: !947, line: 1265, baseType: !1088, size: 64, align: 64, offset: 256)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !2790, file: !947, line: 1267, baseType: !998, size: 32, align: 32, offset: 320)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_pid", scope: !2790, file: !947, line: 1268, baseType: !998, size: 32, align: 32, offset: 352)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "pcr_pid", scope: !2790, file: !947, line: 1269, baseType: !998, size: 32, align: 32, offset: 384)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !2790, file: !947, line: 1270, baseType: !998, size: 32, align: 32, offset: 416)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2790, file: !947, line: 1279, baseType: !1004, size: 64, align: 64, offset: 448)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "end_time", scope: !2790, file: !947, line: 1280, baseType: !1004, size: 64, align: 64, offset: 512)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !2790, file: !947, line: 1282, baseType: !1004, size: 64, align: 64, offset: 576)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !2790, file: !947, line: 1283, baseType: !998, size: 32, align: 32, offset: 640)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec_id", scope: !2366, file: !947, line: 1523, baseType: !56, size: 32, align: 32, offset: 9344)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec_id", scope: !2366, file: !947, line: 1529, baseType: !56, size: 32, align: 32, offset: 9376)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec_id", scope: !2366, file: !947, line: 1535, baseType: !56, size: 32, align: 32, offset: 9408)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "max_index_size", scope: !2366, file: !947, line: 1547, baseType: !1119, size: 32, align: 32, offset: 9440)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "max_picture_buffer", scope: !2366, file: !947, line: 1553, baseType: !1119, size: 32, align: 32, offset: 9472)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "nb_chapters", scope: !2366, file: !947, line: 1566, baseType: !1119, size: 32, align: 32, offset: 9504)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "chapters", scope: !2366, file: !947, line: 1567, baseType: !2814, size: 64, align: 64, offset: 9536)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64, align: 64)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 64, align: 64)
!2816 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVChapter", file: !947, line: 1299, baseType: !2817)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVChapter", file: !947, line: 1294, size: 320, align: 64, elements: !2818)
!2818 = !{!2819, !2820, !2821, !2822, !2823}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2817, file: !947, line: 1295, baseType: !998, size: 32, align: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !2817, file: !947, line: 1296, baseType: !1011, size: 64, align: 32, offset: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2817, file: !947, line: 1297, baseType: !1004, size: 64, align: 64, offset: 128)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2817, file: !947, line: 1297, baseType: !1004, size: 64, align: 64, offset: 192)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2817, file: !947, line: 1298, baseType: !1088, size: 64, align: 64, offset: 256)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2366, file: !947, line: 1577, baseType: !1088, size: 64, align: 64, offset: 9600)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_realtime", scope: !2366, file: !947, line: 1590, baseType: !1004, size: 64, align: 64, offset: 9664)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "fps_probe_size", scope: !2366, file: !947, line: 1597, baseType: !998, size: 32, align: 32, offset: 9728)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "error_recognition", scope: !2366, file: !947, line: 1604, baseType: !998, size: 32, align: 32, offset: 9760)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_callback", scope: !2366, file: !947, line: 1615, baseType: !2829, size: 128, align: 64, offset: 9792)
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOInterruptCB", file: !938, line: 61, baseType: !2830)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOInterruptCB", file: !938, line: 58, size: 128, align: 64, elements: !2831)
!2831 = !{!2832, !2833}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2830, file: !938, line: 59, baseType: !2552, size: 64, align: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2830, file: !938, line: 60, baseType: !989, size: 64, align: 64, offset: 64)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !2366, file: !947, line: 1620, baseType: !998, size: 32, align: 32, offset: 9920)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "max_interleave_delta", scope: !2366, file: !947, line: 1639, baseType: !1004, size: 64, align: 64, offset: 9984)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !2366, file: !947, line: 1645, baseType: !998, size: 32, align: 32, offset: 10048)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2366, file: !947, line: 1652, baseType: !998, size: 32, align: 32, offset: 10080)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "max_ts_probe", scope: !2366, file: !947, line: 1659, baseType: !998, size: 32, align: 32, offset: 10112)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_negative_ts", scope: !2366, file: !947, line: 1668, baseType: !998, size: 32, align: 32, offset: 10144)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "ts_id", scope: !2366, file: !947, line: 1677, baseType: !998, size: 32, align: 32, offset: 10176)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "audio_preload", scope: !2366, file: !947, line: 1685, baseType: !998, size: 32, align: 32, offset: 10208)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_duration", scope: !2366, file: !947, line: 1693, baseType: !998, size: 32, align: 32, offset: 10240)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_size", scope: !2366, file: !947, line: 1701, baseType: !998, size: 32, align: 32, offset: 10272)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "use_wallclock_as_timestamps", scope: !2366, file: !947, line: 1709, baseType: !998, size: 32, align: 32, offset: 10304)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "avio_flags", scope: !2366, file: !947, line: 1716, baseType: !998, size: 32, align: 32, offset: 10336)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "duration_estimation_method", scope: !2366, file: !947, line: 1724, baseType: !961, size: 32, align: 32, offset: 10368)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "skip_initial_bytes", scope: !2366, file: !947, line: 1731, baseType: !1004, size: 64, align: 64, offset: 10432)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "correct_ts_overflow", scope: !2366, file: !947, line: 1738, baseType: !1119, size: 32, align: 32, offset: 10496)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "seek2any", scope: !2366, file: !947, line: 1745, baseType: !998, size: 32, align: 32, offset: 10528)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "flush_packets", scope: !2366, file: !947, line: 1752, baseType: !998, size: 32, align: 32, offset: 10560)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "probe_score", scope: !2366, file: !947, line: 1761, baseType: !998, size: 32, align: 32, offset: 10592)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "format_probesize", scope: !2366, file: !947, line: 1768, baseType: !998, size: 32, align: 32, offset: 10624)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !2366, file: !947, line: 1776, baseType: !1105, size: 64, align: 64, offset: 10688)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "format_whitelist", scope: !2366, file: !947, line: 1784, baseType: !1105, size: 64, align: 64, offset: 10752)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !2366, file: !947, line: 1790, baseType: !2856, size: 64, align: 64, offset: 10816)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64, align: 64)
!2857 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatInternal", file: !947, line: 1321, baseType: !2858)
!2858 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatInternal", file: !947, line: 1321, flags: DIFlagFwdDecl)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "io_repositioned", scope: !2366, file: !947, line: 1798, baseType: !998, size: 32, align: 32, offset: 10880)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !2366, file: !947, line: 1806, baseType: !2861, size: 64, align: 64, offset: 10944)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64, align: 64)
!2862 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !57, line: 3610, baseType: !1371)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2366, file: !947, line: 1814, baseType: !2861, size: 64, align: 64, offset: 11008)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !2366, file: !947, line: 1822, baseType: !2861, size: 64, align: 64, offset: 11072)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !2366, file: !947, line: 1830, baseType: !2861, size: 64, align: 64, offset: 11136)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_header_padding", scope: !2366, file: !947, line: 1837, baseType: !998, size: 32, align: 32, offset: 11200)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2366, file: !947, line: 1843, baseType: !989, size: 64, align: 64, offset: 11264)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "control_message_cb", scope: !2366, file: !947, line: 1848, baseType: !2869, size: 64, align: 64, offset: 11328)
!2869 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_format_control_message", file: !947, line: 1305, baseType: !2471)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "output_ts_offset", scope: !2366, file: !947, line: 1854, baseType: !1004, size: 64, align: 64, offset: 11392)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !2366, file: !947, line: 1862, baseType: !1179, size: 64, align: 64, offset: 11456)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec_id", scope: !2366, file: !947, line: 1868, baseType: !56, size: 32, align: 32, offset: 11520)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "open_cb", scope: !2366, file: !947, line: 1889, baseType: !2874, size: 64, align: 64, offset: 11584)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 64, align: 64)
!2875 = !DISubroutineType(types: !2876)
!2876 = !{!998, !2405, !2877, !982, !998, !2878, !1087}
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64, align: 64)
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64, align: 64)
!2879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2829)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !2366, file: !947, line: 1897, baseType: !1105, size: 64, align: 64, offset: 11648)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "io_open", scope: !2366, file: !947, line: 1919, baseType: !2882, size: 64, align: 64, offset: 11712)
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64, align: 64)
!2883 = !DISubroutineType(types: !2884)
!2884 = !{!998, !2405, !2877, !982, !998, !1087}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "io_close", scope: !2366, file: !947, line: 1925, baseType: !2886, size: 64, align: 64, offset: 11776)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64, align: 64)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{null, !2405, !2496}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !2366, file: !947, line: 1932, baseType: !1105, size: 64, align: 64, offset: 11840)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "max_streams", scope: !2366, file: !947, line: 1939, baseType: !998, size: 32, align: 32, offset: 11904)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "skip_estimate_duration_from_pts", scope: !2366, file: !947, line: 1946, baseType: !998, size: 32, align: 32, offset: 11936)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "eof_reached", scope: !2361, file: !910, line: 395, baseType: !998, size: 32, align: 32, offset: 64)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "eagain", scope: !2361, file: !910, line: 396, baseType: !998, size: 32, align: 32, offset: 96)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "ist_index", scope: !2361, file: !910, line: 397, baseType: !998, size: 32, align: 32, offset: 128)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "loop", scope: !2361, file: !910, line: 398, baseType: !998, size: 32, align: 32, offset: 160)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2361, file: !910, line: 399, baseType: !1004, size: 64, align: 64, offset: 192)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !2361, file: !910, line: 401, baseType: !1011, size: 64, align: 32, offset: 256)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "input_ts_offset", scope: !2361, file: !910, line: 402, baseType: !1004, size: 64, align: 64, offset: 320)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "ts_offset", scope: !2361, file: !910, line: 404, baseType: !1004, size: 64, align: 64, offset: 384)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "last_ts", scope: !2361, file: !910, line: 405, baseType: !1004, size: 64, align: 64, offset: 448)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2361, file: !910, line: 406, baseType: !1004, size: 64, align: 64, offset: 512)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "seek_timestamp", scope: !2361, file: !910, line: 407, baseType: !998, size: 32, align: 32, offset: 576)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "recording_time", scope: !2361, file: !910, line: 408, baseType: !1004, size: 64, align: 64, offset: 640)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "nb_streams", scope: !2361, file: !910, line: 409, baseType: !998, size: 32, align: 32, offset: 704)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "nb_streams_warn", scope: !2361, file: !910, line: 411, baseType: !998, size: 32, align: 32, offset: 736)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "rate_emu", scope: !2361, file: !910, line: 412, baseType: !998, size: 32, align: 32, offset: 768)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "accurate_seek", scope: !2361, file: !910, line: 413, baseType: !998, size: 32, align: 32, offset: 800)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "in_thread_queue", scope: !2361, file: !910, line: 416, baseType: !2909, size: 64, align: 64, offset: 832)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64, align: 64)
!2910 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVThreadMessageQueue", file: !2911, line: 22, baseType: !2912)
!2911 = !DIFile(filename: "./libavutil/threadmessage.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!2912 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVThreadMessageQueue", file: !2911, line: 22, flags: DIFlagFwdDecl)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2361, file: !910, line: 417, baseType: !2914, size: 64, align: 64, offset: 896)
!2914 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_t", file: !2915, line: 60, baseType: !1195)
!2915 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "non_blocking", scope: !2361, file: !910, line: 418, baseType: !998, size: 32, align: 32, offset: 960)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "joined", scope: !2361, file: !910, line: 419, baseType: !998, size: 32, align: 32, offset: 992)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "thread_queue_size", scope: !2361, file: !910, line: 420, baseType: !998, size: 32, align: 32, offset: 1024)
!2919 = !DILocation(line: 999, column: 16, scope: !2353)
!2920 = !DILocalVariable(name: "ic", scope: !2353, file: !919, line: 1000, type: !2364)
!2921 = !DILocation(line: 1000, column: 22, scope: !2353)
!2922 = !DILocalVariable(name: "file_iformat", scope: !2353, file: !919, line: 1001, type: !2923)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64, align: 64)
!2924 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVInputFormat", file: !947, line: 777, baseType: !2371)
!2925 = !DILocation(line: 1001, column: 20, scope: !2353)
!2926 = !DILocalVariable(name: "err", scope: !2353, file: !919, line: 1002, type: !998)
!2927 = !DILocation(line: 1002, column: 9, scope: !2353)
!2928 = !DILocalVariable(name: "i", scope: !2353, file: !919, line: 1002, type: !998)
!2929 = !DILocation(line: 1002, column: 14, scope: !2353)
!2930 = !DILocalVariable(name: "ret", scope: !2353, file: !919, line: 1002, type: !998)
!2931 = !DILocation(line: 1002, column: 17, scope: !2353)
!2932 = !DILocalVariable(name: "timestamp", scope: !2353, file: !919, line: 1003, type: !1004)
!2933 = !DILocation(line: 1003, column: 13, scope: !2353)
!2934 = !DILocalVariable(name: "unused_opts", scope: !2353, file: !919, line: 1004, type: !1088)
!2935 = !DILocation(line: 1004, column: 19, scope: !2353)
!2936 = !DILocalVariable(name: "e", scope: !2353, file: !919, line: 1005, type: !2937)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64, align: 64)
!2938 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionaryEntry", file: !1090, line: 84, baseType: !2939)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionaryEntry", file: !1090, line: 81, size: 128, align: 64, elements: !2940)
!2940 = !{!2941, !2942}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2939, file: !1090, line: 82, baseType: !1105, size: 64, align: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2939, file: !1090, line: 83, baseType: !1105, size: 64, align: 64, offset: 64)
!2943 = !DILocation(line: 1005, column: 24, scope: !2353)
!2944 = !DILocalVariable(name: "video_codec_name", scope: !2353, file: !919, line: 1006, type: !1105)
!2945 = !DILocation(line: 1006, column: 12, scope: !2353)
!2946 = !DILocalVariable(name: "audio_codec_name", scope: !2353, file: !919, line: 1007, type: !1105)
!2947 = !DILocation(line: 1007, column: 12, scope: !2353)
!2948 = !DILocalVariable(name: "subtitle_codec_name", scope: !2353, file: !919, line: 1008, type: !1105)
!2949 = !DILocation(line: 1008, column: 11, scope: !2353)
!2950 = !DILocalVariable(name: "data_codec_name", scope: !2353, file: !919, line: 1009, type: !1105)
!2951 = !DILocation(line: 1009, column: 12, scope: !2353)
!2952 = !DILocalVariable(name: "scan_all_pmts_set", scope: !2353, file: !919, line: 1010, type: !998)
!2953 = !DILocation(line: 1010, column: 9, scope: !2353)
!2954 = !DILocation(line: 1012, column: 9, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1012, column: 9)
!2956 = !DILocation(line: 1012, column: 12, scope: !2955)
!2957 = !DILocation(line: 1012, column: 22, scope: !2955)
!2958 = !DILocation(line: 1012, column: 34, scope: !2955)
!2959 = !DILocation(line: 1012, column: 37, scope: !2960)
!2960 = !DILexicalBlockFile(scope: !2955, file: !919, discriminator: 1)
!2961 = !DILocation(line: 1012, column: 40, scope: !2960)
!2962 = !DILocation(line: 1012, column: 55, scope: !2960)
!2963 = !DILocation(line: 1012, column: 9, scope: !2960)
!2964 = !DILocation(line: 1013, column: 9, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2955, file: !919, line: 1012, column: 69)
!2966 = !DILocation(line: 1013, column: 12, scope: !2965)
!2967 = !DILocation(line: 1013, column: 22, scope: !2965)
!2968 = !DILocation(line: 1014, column: 9, scope: !2965)
!2969 = !DILocation(line: 1015, column: 5, scope: !2965)
!2970 = !DILocation(line: 1017, column: 9, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1017, column: 9)
!2972 = !DILocation(line: 1017, column: 12, scope: !2971)
!2973 = !DILocation(line: 1017, column: 22, scope: !2971)
!2974 = !DILocation(line: 1017, column: 34, scope: !2971)
!2975 = !DILocation(line: 1017, column: 37, scope: !2976)
!2976 = !DILexicalBlockFile(scope: !2971, file: !919, discriminator: 1)
!2977 = !DILocation(line: 1017, column: 40, scope: !2976)
!2978 = !DILocation(line: 1017, column: 55, scope: !2976)
!2979 = !DILocation(line: 1017, column: 9, scope: !2976)
!2980 = !DILocalVariable(name: "start_time", scope: !2981, file: !919, line: 1018, type: !1004)
!2981 = distinct !DILexicalBlock(scope: !2971, file: !919, line: 1017, column: 69)
!2982 = !DILocation(line: 1018, column: 17, scope: !2981)
!2983 = !DILocation(line: 1018, column: 30, scope: !2981)
!2984 = !DILocation(line: 1018, column: 33, scope: !2981)
!2985 = !DILocation(line: 1018, column: 44, scope: !2981)
!2986 = !DILocation(line: 1018, column: 30, scope: !2987)
!2987 = !DILexicalBlockFile(scope: !2981, file: !919, discriminator: 1)
!2988 = !DILocation(line: 1018, column: 85, scope: !2989)
!2989 = !DILexicalBlockFile(scope: !2981, file: !919, discriminator: 2)
!2990 = !DILocation(line: 1018, column: 88, scope: !2989)
!2991 = !DILocation(line: 1018, column: 30, scope: !2989)
!2992 = !DILocation(line: 1018, column: 30, scope: !2993)
!2993 = !DILexicalBlockFile(scope: !2981, file: !919, discriminator: 3)
!2994 = !DILocation(line: 1018, column: 17, scope: !2993)
!2995 = !DILocation(line: 1019, column: 13, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2981, file: !919, line: 1019, column: 13)
!2997 = !DILocation(line: 1019, column: 16, scope: !2996)
!2998 = !DILocation(line: 1019, column: 29, scope: !2996)
!2999 = !DILocation(line: 1019, column: 26, scope: !2996)
!3000 = !DILocation(line: 1019, column: 13, scope: !2981)
!3001 = !DILocation(line: 1020, column: 13, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2996, file: !919, line: 1019, column: 41)
!3003 = !DILocation(line: 1021, column: 13, scope: !3002)
!3004 = !DILocation(line: 1023, column: 33, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !2996, file: !919, line: 1022, column: 16)
!3006 = !DILocation(line: 1023, column: 36, scope: !3005)
!3007 = !DILocation(line: 1023, column: 48, scope: !3005)
!3008 = !DILocation(line: 1023, column: 46, scope: !3005)
!3009 = !DILocation(line: 1023, column: 13, scope: !3005)
!3010 = !DILocation(line: 1023, column: 16, scope: !3005)
!3011 = !DILocation(line: 1023, column: 31, scope: !3005)
!3012 = !DILocation(line: 1025, column: 5, scope: !2981)
!3013 = !DILocation(line: 1027, column: 9, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1027, column: 9)
!3015 = !DILocation(line: 1027, column: 12, scope: !3014)
!3016 = !DILocation(line: 1027, column: 9, scope: !2353)
!3017 = !DILocation(line: 1028, column: 51, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3019, file: !919, line: 1028, column: 13)
!3019 = distinct !DILexicalBlock(scope: !3014, file: !919, line: 1027, column: 20)
!3020 = !DILocation(line: 1028, column: 54, scope: !3018)
!3021 = !DILocation(line: 1028, column: 30, scope: !3018)
!3022 = !DILocation(line: 1028, column: 28, scope: !3018)
!3023 = !DILocation(line: 1028, column: 13, scope: !3019)
!3024 = !DILocation(line: 1029, column: 60, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3018, file: !919, line: 1028, column: 64)
!3026 = !DILocation(line: 1029, column: 63, scope: !3025)
!3027 = !DILocation(line: 1029, column: 13, scope: !3025)
!3028 = !DILocation(line: 1030, column: 13, scope: !3025)
!3029 = !DILocation(line: 1032, column: 5, scope: !3019)
!3030 = !DILocation(line: 1034, column: 17, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1034, column: 9)
!3032 = !DILocation(line: 1034, column: 10, scope: !3031)
!3033 = !DILocation(line: 1034, column: 9, scope: !2353)
!3034 = !DILocation(line: 1035, column: 18, scope: !3031)
!3035 = !DILocation(line: 1035, column: 9, scope: !3031)
!3036 = !DILocation(line: 1037, column: 34, scope: !2353)
!3037 = !DILocation(line: 1037, column: 26, scope: !2353)
!3038 = !DILocation(line: 1037, column: 56, scope: !2353)
!3039 = !DILocation(line: 1038, column: 33, scope: !2353)
!3040 = !DILocation(line: 1038, column: 26, scope: !2353)
!3041 = !DILocation(line: 1037, column: 56, scope: !3042)
!3042 = !DILexicalBlockFile(scope: !2353, file: !919, discriminator: 1)
!3043 = !DILocation(line: 1037, column: 56, scope: !3044)
!3044 = !DILexicalBlockFile(scope: !2353, file: !919, discriminator: 2)
!3045 = !DILocation(line: 1037, column: 23, scope: !3044)
!3046 = !DILocation(line: 1041, column: 10, scope: !2353)
!3047 = !DILocation(line: 1041, column: 8, scope: !2353)
!3048 = !DILocation(line: 1042, column: 10, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1042, column: 9)
!3050 = !DILocation(line: 1042, column: 9, scope: !2353)
!3051 = !DILocation(line: 1043, column: 21, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3049, file: !919, line: 1042, column: 14)
!3053 = !DILocation(line: 1043, column: 9, scope: !3052)
!3054 = !DILocation(line: 1044, column: 9, scope: !3052)
!3055 = !DILocation(line: 1046, column: 9, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1046, column: 9)
!3057 = !DILocation(line: 1046, column: 12, scope: !3056)
!3058 = !DILocation(line: 1046, column: 9, scope: !2353)
!3059 = !DILocation(line: 1047, column: 26, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3056, file: !919, line: 1046, column: 34)
!3061 = !DILocation(line: 1047, column: 29, scope: !3060)
!3062 = !DILocation(line: 1047, column: 32, scope: !3060)
!3063 = !DILocation(line: 1047, column: 81, scope: !3060)
!3064 = !DILocation(line: 1047, column: 84, scope: !3060)
!3065 = !DILocation(line: 1047, column: 105, scope: !3060)
!3066 = !DILocation(line: 1047, column: 60, scope: !3060)
!3067 = !DILocation(line: 1047, column: 63, scope: !3060)
!3068 = !DILocation(line: 1047, column: 110, scope: !3060)
!3069 = !DILocation(line: 1047, column: 112, scope: !3060)
!3070 = !DILocation(line: 1047, column: 9, scope: !3060)
!3071 = !DILocation(line: 1048, column: 5, scope: !3060)
!3072 = !DILocation(line: 1049, column: 9, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1049, column: 9)
!3074 = !DILocation(line: 1049, column: 12, scope: !3073)
!3075 = !DILocation(line: 1049, column: 9, scope: !2353)
!3076 = !DILocation(line: 1053, column: 13, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3078, file: !919, line: 1053, column: 13)
!3078 = distinct !DILexicalBlock(scope: !3073, file: !919, line: 1049, column: 31)
!3079 = !DILocation(line: 1053, column: 26, scope: !3077)
!3080 = !DILocation(line: 1053, column: 29, scope: !3081)
!3081 = !DILexicalBlockFile(scope: !3077, file: !919, discriminator: 1)
!3082 = !DILocation(line: 1053, column: 43, scope: !3081)
!3083 = !DILocation(line: 1053, column: 54, scope: !3081)
!3084 = !DILocation(line: 1054, column: 26, scope: !3077)
!3085 = !DILocation(line: 1054, column: 40, scope: !3077)
!3086 = !DILocation(line: 1054, column: 25, scope: !3077)
!3087 = !DILocation(line: 1054, column: 13, scope: !3077)
!3088 = !DILocation(line: 1053, column: 13, scope: !3089)
!3089 = !DILexicalBlockFile(scope: !3078, file: !919, discriminator: 2)
!3090 = !DILocation(line: 1056, column: 30, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3077, file: !919, line: 1055, column: 36)
!3092 = !DILocation(line: 1056, column: 33, scope: !3091)
!3093 = !DILocation(line: 1056, column: 36, scope: !3091)
!3094 = !DILocation(line: 1056, column: 79, scope: !3091)
!3095 = !DILocation(line: 1056, column: 82, scope: !3091)
!3096 = !DILocation(line: 1056, column: 100, scope: !3091)
!3097 = !DILocation(line: 1056, column: 61, scope: !3091)
!3098 = !DILocation(line: 1056, column: 64, scope: !3091)
!3099 = !DILocation(line: 1056, column: 105, scope: !3091)
!3100 = !DILocation(line: 1056, column: 107, scope: !3091)
!3101 = !DILocation(line: 1056, column: 13, scope: !3091)
!3102 = !DILocation(line: 1057, column: 9, scope: !3091)
!3103 = !DILocation(line: 1058, column: 5, scope: !3078)
!3104 = !DILocation(line: 1059, column: 9, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1059, column: 9)
!3106 = !DILocation(line: 1059, column: 12, scope: !3105)
!3107 = !DILocation(line: 1059, column: 9, scope: !2353)
!3108 = !DILocation(line: 1062, column: 13, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3110, file: !919, line: 1062, column: 13)
!3110 = distinct !DILexicalBlock(scope: !3105, file: !919, line: 1059, column: 28)
!3111 = !DILocation(line: 1062, column: 26, scope: !3109)
!3112 = !DILocation(line: 1062, column: 29, scope: !3113)
!3113 = !DILexicalBlockFile(scope: !3109, file: !919, discriminator: 1)
!3114 = !DILocation(line: 1062, column: 43, scope: !3113)
!3115 = !DILocation(line: 1062, column: 54, scope: !3113)
!3116 = !DILocation(line: 1063, column: 26, scope: !3109)
!3117 = !DILocation(line: 1063, column: 40, scope: !3109)
!3118 = !DILocation(line: 1063, column: 25, scope: !3109)
!3119 = !DILocation(line: 1063, column: 13, scope: !3109)
!3120 = !DILocation(line: 1062, column: 13, scope: !3121)
!3121 = !DILexicalBlockFile(scope: !3110, file: !919, discriminator: 2)
!3122 = !DILocation(line: 1065, column: 26, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3109, file: !919, line: 1064, column: 36)
!3124 = !DILocation(line: 1065, column: 29, scope: !3123)
!3125 = !DILocation(line: 1065, column: 32, scope: !3123)
!3126 = !DILocation(line: 1066, column: 40, scope: !3123)
!3127 = !DILocation(line: 1066, column: 43, scope: !3123)
!3128 = !DILocation(line: 1066, column: 58, scope: !3123)
!3129 = !DILocation(line: 1066, column: 25, scope: !3123)
!3130 = !DILocation(line: 1066, column: 28, scope: !3123)
!3131 = !DILocation(line: 1066, column: 63, scope: !3123)
!3132 = !DILocation(line: 1066, column: 65, scope: !3123)
!3133 = !DILocation(line: 1065, column: 13, scope: !3123)
!3134 = !DILocation(line: 1067, column: 9, scope: !3123)
!3135 = !DILocation(line: 1068, column: 5, scope: !3110)
!3136 = !DILocation(line: 1069, column: 9, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1069, column: 9)
!3138 = !DILocation(line: 1069, column: 12, scope: !3137)
!3139 = !DILocation(line: 1069, column: 9, scope: !2353)
!3140 = !DILocation(line: 1070, column: 22, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3137, file: !919, line: 1069, column: 28)
!3142 = !DILocation(line: 1070, column: 25, scope: !3141)
!3143 = !DILocation(line: 1070, column: 28, scope: !3141)
!3144 = !DILocation(line: 1070, column: 70, scope: !3141)
!3145 = !DILocation(line: 1070, column: 73, scope: !3141)
!3146 = !DILocation(line: 1070, column: 88, scope: !3141)
!3147 = !DILocation(line: 1070, column: 55, scope: !3141)
!3148 = !DILocation(line: 1070, column: 58, scope: !3141)
!3149 = !DILocation(line: 1070, column: 93, scope: !3141)
!3150 = !DILocation(line: 1070, column: 95, scope: !3141)
!3151 = !DILocation(line: 1070, column: 9, scope: !3141)
!3152 = !DILocation(line: 1071, column: 5, scope: !3141)
!3153 = !DILocation(line: 1072, column: 9, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1072, column: 9)
!3155 = !DILocation(line: 1072, column: 12, scope: !3154)
!3156 = !DILocation(line: 1072, column: 9, scope: !2353)
!3157 = !DILocation(line: 1073, column: 22, scope: !3154)
!3158 = !DILocation(line: 1073, column: 25, scope: !3154)
!3159 = !DILocation(line: 1073, column: 28, scope: !3154)
!3160 = !DILocation(line: 1073, column: 75, scope: !3154)
!3161 = !DILocation(line: 1073, column: 78, scope: !3154)
!3162 = !DILocation(line: 1073, column: 96, scope: !3154)
!3163 = !DILocation(line: 1073, column: 57, scope: !3154)
!3164 = !DILocation(line: 1073, column: 60, scope: !3154)
!3165 = !DILocation(line: 1073, column: 101, scope: !3154)
!3166 = !DILocation(line: 1073, column: 103, scope: !3154)
!3167 = !DILocation(line: 1073, column: 9, scope: !3154)
!3168 = !DILocalVariable(name: "i", scope: !3169, file: !919, line: 1075, type: !998)
!3169 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1075, column: 5)
!3170 = !DILocation(line: 1075, column: 11, scope: !3169)
!3171 = !DILocation(line: 1075, column: 21, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3169, file: !919, line: 1075, column: 14)
!3173 = !DILocation(line: 1075, column: 19, scope: !3172)
!3174 = !DILocation(line: 1075, column: 26, scope: !3175)
!3175 = !DILexicalBlockFile(scope: !3176, file: !919, discriminator: 1)
!3176 = distinct !DILexicalBlock(scope: !3172, file: !919, line: 1075, column: 14)
!3177 = !DILocation(line: 1075, column: 30, scope: !3175)
!3178 = !DILocation(line: 1075, column: 33, scope: !3175)
!3179 = !DILocation(line: 1075, column: 28, scope: !3175)
!3180 = !DILocation(line: 1075, column: 14, scope: !3175)
!3181 = !DILocalVariable(name: "spec", scope: !3182, file: !919, line: 1075, type: !1105)
!3182 = distinct !DILexicalBlock(scope: !3176, file: !919, line: 1075, column: 54)
!3183 = !DILocation(line: 1075, column: 62, scope: !3182)
!3184 = !DILocation(line: 1075, column: 84, scope: !3185)
!3185 = !DILexicalBlockFile(scope: !3182, file: !919, discriminator: 2)
!3186 = !DILocation(line: 1075, column: 69, scope: !3185)
!3187 = !DILocation(line: 1075, column: 72, scope: !3185)
!3188 = !DILocation(line: 1075, column: 87, scope: !3185)
!3189 = !DILocation(line: 1075, column: 62, scope: !3185)
!3190 = !DILocation(line: 1075, column: 110, scope: !3185)
!3191 = !DILocation(line: 1075, column: 103, scope: !3185)
!3192 = !DILocation(line: 1075, column: 102, scope: !3185)
!3193 = !DILocation(line: 1075, column: 156, scope: !3194)
!3194 = !DILexicalBlockFile(scope: !3195, file: !919, discriminator: 3)
!3195 = distinct !DILexicalBlock(scope: !3182, file: !919, line: 1075, column: 102)
!3196 = !DILocation(line: 1075, column: 141, scope: !3194)
!3197 = !DILocation(line: 1075, column: 144, scope: !3194)
!3198 = !DILocation(line: 1075, column: 159, scope: !3194)
!3199 = !DILocation(line: 1075, column: 161, scope: !3194)
!3200 = !DILocation(line: 1075, column: 139, scope: !3194)
!3201 = !DILocation(line: 1075, column: 122, scope: !3194)
!3202 = !DILocation(line: 1075, column: 166, scope: !3203)
!3203 = !DILexicalBlockFile(scope: !3182, file: !919, discriminator: 4)
!3204 = !DILocation(line: 1075, column: 50, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !3176, file: !919, discriminator: 5)
!3206 = !DILocation(line: 1075, column: 14, scope: !3205)
!3207 = distinct !{!3207, !3208}
!3208 = !DILocation(line: 1075, column: 14, scope: !3169)
!3209 = !DILocalVariable(name: "i", scope: !3210, file: !919, line: 1076, type: !998)
!3210 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1076, column: 5)
!3211 = !DILocation(line: 1076, column: 11, scope: !3210)
!3212 = !DILocation(line: 1076, column: 21, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3210, file: !919, line: 1076, column: 14)
!3214 = !DILocation(line: 1076, column: 19, scope: !3213)
!3215 = !DILocation(line: 1076, column: 26, scope: !3216)
!3216 = !DILexicalBlockFile(scope: !3217, file: !919, discriminator: 1)
!3217 = distinct !DILexicalBlock(scope: !3213, file: !919, line: 1076, column: 14)
!3218 = !DILocation(line: 1076, column: 30, scope: !3216)
!3219 = !DILocation(line: 1076, column: 33, scope: !3216)
!3220 = !DILocation(line: 1076, column: 28, scope: !3216)
!3221 = !DILocation(line: 1076, column: 14, scope: !3216)
!3222 = !DILocalVariable(name: "spec", scope: !3223, file: !919, line: 1076, type: !1105)
!3223 = distinct !DILexicalBlock(scope: !3217, file: !919, line: 1076, column: 54)
!3224 = !DILocation(line: 1076, column: 62, scope: !3223)
!3225 = !DILocation(line: 1076, column: 84, scope: !3226)
!3226 = !DILexicalBlockFile(scope: !3223, file: !919, discriminator: 2)
!3227 = !DILocation(line: 1076, column: 69, scope: !3226)
!3228 = !DILocation(line: 1076, column: 72, scope: !3226)
!3229 = !DILocation(line: 1076, column: 87, scope: !3226)
!3230 = !DILocation(line: 1076, column: 62, scope: !3226)
!3231 = !DILocation(line: 1076, column: 110, scope: !3226)
!3232 = !DILocation(line: 1076, column: 103, scope: !3226)
!3233 = !DILocation(line: 1076, column: 102, scope: !3226)
!3234 = !DILocation(line: 1076, column: 156, scope: !3235)
!3235 = !DILexicalBlockFile(scope: !3236, file: !919, discriminator: 3)
!3236 = distinct !DILexicalBlock(scope: !3223, file: !919, line: 1076, column: 102)
!3237 = !DILocation(line: 1076, column: 141, scope: !3235)
!3238 = !DILocation(line: 1076, column: 144, scope: !3235)
!3239 = !DILocation(line: 1076, column: 159, scope: !3235)
!3240 = !DILocation(line: 1076, column: 161, scope: !3235)
!3241 = !DILocation(line: 1076, column: 139, scope: !3235)
!3242 = !DILocation(line: 1076, column: 122, scope: !3235)
!3243 = !DILocation(line: 1076, column: 166, scope: !3244)
!3244 = !DILexicalBlockFile(scope: !3223, file: !919, discriminator: 4)
!3245 = !DILocation(line: 1076, column: 50, scope: !3246)
!3246 = !DILexicalBlockFile(scope: !3217, file: !919, discriminator: 5)
!3247 = !DILocation(line: 1076, column: 14, scope: !3246)
!3248 = distinct !{!3248, !3249}
!3249 = !DILocation(line: 1076, column: 14, scope: !3210)
!3250 = !DILocalVariable(name: "i", scope: !3251, file: !919, line: 1077, type: !998)
!3251 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1077, column: 5)
!3252 = !DILocation(line: 1077, column: 11, scope: !3251)
!3253 = !DILocation(line: 1077, column: 21, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3251, file: !919, line: 1077, column: 14)
!3255 = !DILocation(line: 1077, column: 19, scope: !3254)
!3256 = !DILocation(line: 1077, column: 26, scope: !3257)
!3257 = !DILexicalBlockFile(scope: !3258, file: !919, discriminator: 1)
!3258 = distinct !DILexicalBlock(scope: !3254, file: !919, line: 1077, column: 14)
!3259 = !DILocation(line: 1077, column: 30, scope: !3257)
!3260 = !DILocation(line: 1077, column: 33, scope: !3257)
!3261 = !DILocation(line: 1077, column: 28, scope: !3257)
!3262 = !DILocation(line: 1077, column: 14, scope: !3257)
!3263 = !DILocalVariable(name: "spec", scope: !3264, file: !919, line: 1077, type: !1105)
!3264 = distinct !DILexicalBlock(scope: !3258, file: !919, line: 1077, column: 54)
!3265 = !DILocation(line: 1077, column: 62, scope: !3264)
!3266 = !DILocation(line: 1077, column: 84, scope: !3267)
!3267 = !DILexicalBlockFile(scope: !3264, file: !919, discriminator: 2)
!3268 = !DILocation(line: 1077, column: 69, scope: !3267)
!3269 = !DILocation(line: 1077, column: 72, scope: !3267)
!3270 = !DILocation(line: 1077, column: 87, scope: !3267)
!3271 = !DILocation(line: 1077, column: 62, scope: !3267)
!3272 = !DILocation(line: 1077, column: 110, scope: !3267)
!3273 = !DILocation(line: 1077, column: 103, scope: !3267)
!3274 = !DILocation(line: 1077, column: 102, scope: !3267)
!3275 = !DILocation(line: 1077, column: 159, scope: !3276)
!3276 = !DILexicalBlockFile(scope: !3277, file: !919, discriminator: 3)
!3277 = distinct !DILexicalBlock(scope: !3264, file: !919, line: 1077, column: 102)
!3278 = !DILocation(line: 1077, column: 144, scope: !3276)
!3279 = !DILocation(line: 1077, column: 147, scope: !3276)
!3280 = !DILocation(line: 1077, column: 162, scope: !3276)
!3281 = !DILocation(line: 1077, column: 164, scope: !3276)
!3282 = !DILocation(line: 1077, column: 142, scope: !3276)
!3283 = !DILocation(line: 1077, column: 122, scope: !3276)
!3284 = !DILocation(line: 1077, column: 169, scope: !3285)
!3285 = !DILexicalBlockFile(scope: !3264, file: !919, discriminator: 4)
!3286 = !DILocation(line: 1077, column: 50, scope: !3287)
!3287 = !DILexicalBlockFile(scope: !3258, file: !919, discriminator: 5)
!3288 = !DILocation(line: 1077, column: 14, scope: !3287)
!3289 = distinct !{!3289, !3290}
!3290 = !DILocation(line: 1077, column: 14, scope: !3251)
!3291 = !DILocalVariable(name: "i", scope: !3292, file: !919, line: 1078, type: !998)
!3292 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1078, column: 5)
!3293 = !DILocation(line: 1078, column: 11, scope: !3292)
!3294 = !DILocation(line: 1078, column: 21, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3292, file: !919, line: 1078, column: 14)
!3296 = !DILocation(line: 1078, column: 19, scope: !3295)
!3297 = !DILocation(line: 1078, column: 26, scope: !3298)
!3298 = !DILexicalBlockFile(scope: !3299, file: !919, discriminator: 1)
!3299 = distinct !DILexicalBlock(scope: !3295, file: !919, line: 1078, column: 14)
!3300 = !DILocation(line: 1078, column: 30, scope: !3298)
!3301 = !DILocation(line: 1078, column: 33, scope: !3298)
!3302 = !DILocation(line: 1078, column: 28, scope: !3298)
!3303 = !DILocation(line: 1078, column: 14, scope: !3298)
!3304 = !DILocalVariable(name: "spec", scope: !3305, file: !919, line: 1078, type: !1105)
!3305 = distinct !DILexicalBlock(scope: !3299, file: !919, line: 1078, column: 54)
!3306 = !DILocation(line: 1078, column: 62, scope: !3305)
!3307 = !DILocation(line: 1078, column: 84, scope: !3308)
!3308 = !DILexicalBlockFile(scope: !3305, file: !919, discriminator: 2)
!3309 = !DILocation(line: 1078, column: 69, scope: !3308)
!3310 = !DILocation(line: 1078, column: 72, scope: !3308)
!3311 = !DILocation(line: 1078, column: 87, scope: !3308)
!3312 = !DILocation(line: 1078, column: 62, scope: !3308)
!3313 = !DILocation(line: 1078, column: 110, scope: !3308)
!3314 = !DILocation(line: 1078, column: 103, scope: !3308)
!3315 = !DILocation(line: 1078, column: 102, scope: !3308)
!3316 = !DILocation(line: 1078, column: 155, scope: !3317)
!3317 = !DILexicalBlockFile(scope: !3318, file: !919, discriminator: 3)
!3318 = distinct !DILexicalBlock(scope: !3305, file: !919, line: 1078, column: 102)
!3319 = !DILocation(line: 1078, column: 140, scope: !3317)
!3320 = !DILocation(line: 1078, column: 143, scope: !3317)
!3321 = !DILocation(line: 1078, column: 158, scope: !3317)
!3322 = !DILocation(line: 1078, column: 160, scope: !3317)
!3323 = !DILocation(line: 1078, column: 138, scope: !3317)
!3324 = !DILocation(line: 1078, column: 122, scope: !3317)
!3325 = !DILocation(line: 1078, column: 165, scope: !3326)
!3326 = !DILexicalBlockFile(scope: !3305, file: !919, discriminator: 4)
!3327 = !DILocation(line: 1078, column: 50, scope: !3328)
!3328 = !DILexicalBlockFile(scope: !3299, file: !919, discriminator: 5)
!3329 = !DILocation(line: 1078, column: 14, scope: !3328)
!3330 = distinct !{!3330, !3331}
!3331 = !DILocation(line: 1078, column: 14, scope: !3292)
!3332 = !DILocation(line: 1080, column: 9, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1080, column: 9)
!3334 = !DILocation(line: 1080, column: 9, scope: !2353)
!3335 = !DILocation(line: 1081, column: 45, scope: !3333)
!3336 = !DILocation(line: 1081, column: 27, scope: !3333)
!3337 = !DILocation(line: 1081, column: 9, scope: !3333)
!3338 = !DILocation(line: 1081, column: 13, scope: !3333)
!3339 = !DILocation(line: 1081, column: 25, scope: !3333)
!3340 = !DILocation(line: 1082, column: 9, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1082, column: 9)
!3342 = !DILocation(line: 1082, column: 9, scope: !2353)
!3343 = !DILocation(line: 1083, column: 45, scope: !3341)
!3344 = !DILocation(line: 1083, column: 27, scope: !3341)
!3345 = !DILocation(line: 1083, column: 9, scope: !3341)
!3346 = !DILocation(line: 1083, column: 13, scope: !3341)
!3347 = !DILocation(line: 1083, column: 25, scope: !3341)
!3348 = !DILocation(line: 1084, column: 9, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1084, column: 9)
!3350 = !DILocation(line: 1084, column: 9, scope: !2353)
!3351 = !DILocation(line: 1085, column: 48, scope: !3349)
!3352 = !DILocation(line: 1085, column: 30, scope: !3349)
!3353 = !DILocation(line: 1085, column: 9, scope: !3349)
!3354 = !DILocation(line: 1085, column: 13, scope: !3349)
!3355 = !DILocation(line: 1085, column: 28, scope: !3349)
!3356 = !DILocation(line: 1086, column: 9, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1086, column: 9)
!3358 = !DILocation(line: 1086, column: 9, scope: !2353)
!3359 = !DILocation(line: 1087, column: 44, scope: !3357)
!3360 = !DILocation(line: 1087, column: 26, scope: !3357)
!3361 = !DILocation(line: 1087, column: 9, scope: !3357)
!3362 = !DILocation(line: 1087, column: 13, scope: !3357)
!3363 = !DILocation(line: 1087, column: 24, scope: !3357)
!3364 = !DILocation(line: 1089, column: 26, scope: !2353)
!3365 = !DILocation(line: 1089, column: 45, scope: !3042)
!3366 = !DILocation(line: 1089, column: 49, scope: !3042)
!3367 = !DILocation(line: 1089, column: 62, scope: !3042)
!3368 = !DILocation(line: 1089, column: 26, scope: !3042)
!3369 = !DILocation(line: 1089, column: 26, scope: !3044)
!3370 = !DILocation(line: 1089, column: 26, scope: !3371)
!3371 = !DILexicalBlockFile(scope: !2353, file: !919, discriminator: 3)
!3372 = !DILocation(line: 1089, column: 5, scope: !3371)
!3373 = !DILocation(line: 1089, column: 9, scope: !3371)
!3374 = !DILocation(line: 1089, column: 24, scope: !3371)
!3375 = !DILocation(line: 1090, column: 26, scope: !2353)
!3376 = !DILocation(line: 1090, column: 45, scope: !3042)
!3377 = !DILocation(line: 1090, column: 49, scope: !3042)
!3378 = !DILocation(line: 1090, column: 62, scope: !3042)
!3379 = !DILocation(line: 1090, column: 26, scope: !3042)
!3380 = !DILocation(line: 1090, column: 26, scope: !3044)
!3381 = !DILocation(line: 1090, column: 26, scope: !3371)
!3382 = !DILocation(line: 1090, column: 5, scope: !3371)
!3383 = !DILocation(line: 1090, column: 9, scope: !3371)
!3384 = !DILocation(line: 1090, column: 24, scope: !3371)
!3385 = !DILocation(line: 1091, column: 29, scope: !2353)
!3386 = !DILocation(line: 1091, column: 51, scope: !3042)
!3387 = !DILocation(line: 1091, column: 55, scope: !3042)
!3388 = !DILocation(line: 1091, column: 71, scope: !3042)
!3389 = !DILocation(line: 1091, column: 29, scope: !3042)
!3390 = !DILocation(line: 1091, column: 29, scope: !3044)
!3391 = !DILocation(line: 1091, column: 29, scope: !3371)
!3392 = !DILocation(line: 1091, column: 5, scope: !3371)
!3393 = !DILocation(line: 1091, column: 9, scope: !3371)
!3394 = !DILocation(line: 1091, column: 27, scope: !3371)
!3395 = !DILocation(line: 1092, column: 25, scope: !2353)
!3396 = !DILocation(line: 1092, column: 43, scope: !3042)
!3397 = !DILocation(line: 1092, column: 47, scope: !3042)
!3398 = !DILocation(line: 1092, column: 59, scope: !3042)
!3399 = !DILocation(line: 1092, column: 25, scope: !3042)
!3400 = !DILocation(line: 1092, column: 25, scope: !3044)
!3401 = !DILocation(line: 1092, column: 25, scope: !3371)
!3402 = !DILocation(line: 1092, column: 5, scope: !3371)
!3403 = !DILocation(line: 1092, column: 9, scope: !3371)
!3404 = !DILocation(line: 1092, column: 23, scope: !3371)
!3405 = !DILocation(line: 1094, column: 5, scope: !2353)
!3406 = !DILocation(line: 1094, column: 9, scope: !2353)
!3407 = !DILocation(line: 1094, column: 15, scope: !2353)
!3408 = !DILocation(line: 1095, column: 9, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1095, column: 9)
!3410 = !DILocation(line: 1095, column: 12, scope: !3409)
!3411 = !DILocation(line: 1095, column: 9, scope: !2353)
!3412 = !DILocation(line: 1096, column: 9, scope: !3409)
!3413 = !DILocation(line: 1096, column: 13, scope: !3409)
!3414 = !DILocation(line: 1096, column: 19, scope: !3409)
!3415 = !DILocation(line: 1097, column: 5, scope: !2353)
!3416 = !DILocation(line: 1097, column: 9, scope: !2353)
!3417 = !DILocation(line: 1097, column: 30, scope: !2353)
!3418 = !DILocation(line: 1099, column: 22, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1099, column: 9)
!3420 = !DILocation(line: 1099, column: 25, scope: !3419)
!3421 = !DILocation(line: 1099, column: 28, scope: !3419)
!3422 = !DILocation(line: 1099, column: 10, scope: !3419)
!3423 = !DILocation(line: 1099, column: 9, scope: !2353)
!3424 = !DILocation(line: 1100, column: 22, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3419, file: !919, line: 1099, column: 67)
!3426 = !DILocation(line: 1100, column: 25, scope: !3425)
!3427 = !DILocation(line: 1100, column: 28, scope: !3425)
!3428 = !DILocation(line: 1100, column: 9, scope: !3425)
!3429 = !DILocation(line: 1101, column: 27, scope: !3425)
!3430 = !DILocation(line: 1102, column: 5, scope: !3425)
!3431 = !DILocation(line: 1104, column: 36, scope: !2353)
!3432 = !DILocation(line: 1104, column: 46, scope: !2353)
!3433 = !DILocation(line: 1104, column: 61, scope: !2353)
!3434 = !DILocation(line: 1104, column: 64, scope: !2353)
!3435 = !DILocation(line: 1104, column: 67, scope: !2353)
!3436 = !DILocation(line: 1104, column: 11, scope: !2353)
!3437 = !DILocation(line: 1104, column: 9, scope: !2353)
!3438 = !DILocation(line: 1105, column: 9, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1105, column: 9)
!3440 = !DILocation(line: 1105, column: 13, scope: !3439)
!3441 = !DILocation(line: 1105, column: 9, scope: !2353)
!3442 = !DILocation(line: 1106, column: 21, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3439, file: !919, line: 1105, column: 18)
!3444 = !DILocation(line: 1106, column: 31, scope: !3443)
!3445 = !DILocation(line: 1106, column: 9, scope: !3443)
!3446 = !DILocation(line: 1107, column: 13, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3443, file: !919, line: 1107, column: 13)
!3448 = !DILocation(line: 1107, column: 17, scope: !3447)
!3449 = !DILocation(line: 1107, column: 13, scope: !3443)
!3450 = !DILocation(line: 1108, column: 56, scope: !3447)
!3451 = !DILocation(line: 1108, column: 13, scope: !3447)
!3452 = !DILocation(line: 1109, column: 9, scope: !3443)
!3453 = !DILocation(line: 1111, column: 9, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1111, column: 9)
!3455 = !DILocation(line: 1111, column: 9, scope: !2353)
!3456 = !DILocation(line: 1112, column: 22, scope: !3454)
!3457 = !DILocation(line: 1112, column: 25, scope: !3454)
!3458 = !DILocation(line: 1112, column: 28, scope: !3454)
!3459 = !DILocation(line: 1112, column: 9, scope: !3454)
!3460 = !DILocation(line: 1113, column: 23, scope: !2353)
!3461 = !DILocation(line: 1113, column: 26, scope: !2353)
!3462 = !DILocation(line: 1113, column: 29, scope: !2353)
!3463 = !DILocation(line: 1113, column: 42, scope: !2353)
!3464 = !DILocation(line: 1113, column: 45, scope: !2353)
!3465 = !DILocation(line: 1113, column: 48, scope: !2353)
!3466 = !DILocation(line: 1113, column: 5, scope: !2353)
!3467 = !DILocation(line: 1114, column: 22, scope: !2353)
!3468 = !DILocation(line: 1114, column: 25, scope: !2353)
!3469 = !DILocation(line: 1114, column: 28, scope: !2353)
!3470 = !DILocation(line: 1114, column: 5, scope: !2353)
!3471 = !DILocation(line: 1117, column: 12, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1117, column: 5)
!3473 = !DILocation(line: 1117, column: 10, scope: !3472)
!3474 = !DILocation(line: 1117, column: 17, scope: !3475)
!3475 = !DILexicalBlockFile(scope: !3476, file: !919, discriminator: 1)
!3476 = distinct !DILexicalBlock(scope: !3472, file: !919, line: 1117, column: 5)
!3477 = !DILocation(line: 1117, column: 21, scope: !3475)
!3478 = !DILocation(line: 1117, column: 25, scope: !3475)
!3479 = !DILocation(line: 1117, column: 19, scope: !3475)
!3480 = !DILocation(line: 1117, column: 5, scope: !3475)
!3481 = !DILocation(line: 1118, column: 24, scope: !3476)
!3482 = !DILocation(line: 1118, column: 27, scope: !3476)
!3483 = !DILocation(line: 1118, column: 43, scope: !3476)
!3484 = !DILocation(line: 1118, column: 31, scope: !3476)
!3485 = !DILocation(line: 1118, column: 35, scope: !3476)
!3486 = !DILocation(line: 1118, column: 9, scope: !3476)
!3487 = !DILocation(line: 1117, column: 38, scope: !3488)
!3488 = !DILexicalBlockFile(scope: !3476, file: !919, discriminator: 2)
!3489 = !DILocation(line: 1117, column: 5, scope: !3488)
!3490 = distinct !{!3490, !3491}
!3491 = !DILocation(line: 1117, column: 5, scope: !2353)
!3492 = !DILocation(line: 1120, column: 9, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1120, column: 9)
!3494 = !DILocation(line: 1120, column: 9, scope: !2353)
!3495 = !DILocalVariable(name: "opts", scope: !3496, file: !919, line: 1121, type: !1087)
!3496 = distinct !DILexicalBlock(scope: !3493, file: !919, line: 1120, column: 27)
!3497 = !DILocation(line: 1121, column: 24, scope: !3496)
!3498 = !DILocation(line: 1121, column: 59, scope: !3496)
!3499 = !DILocation(line: 1121, column: 63, scope: !3496)
!3500 = !DILocation(line: 1121, column: 66, scope: !3496)
!3501 = !DILocation(line: 1121, column: 69, scope: !3496)
!3502 = !DILocation(line: 1121, column: 31, scope: !3496)
!3503 = !DILocalVariable(name: "orig_nb_streams", scope: !3496, file: !919, line: 1122, type: !998)
!3504 = !DILocation(line: 1122, column: 13, scope: !3496)
!3505 = !DILocation(line: 1122, column: 31, scope: !3496)
!3506 = !DILocation(line: 1122, column: 35, scope: !3496)
!3507 = !DILocation(line: 1126, column: 41, scope: !3496)
!3508 = !DILocation(line: 1126, column: 45, scope: !3496)
!3509 = !DILocation(line: 1126, column: 15, scope: !3496)
!3510 = !DILocation(line: 1126, column: 13, scope: !3496)
!3511 = !DILocation(line: 1128, column: 16, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3496, file: !919, line: 1128, column: 9)
!3513 = !DILocation(line: 1128, column: 14, scope: !3512)
!3514 = !DILocation(line: 1128, column: 21, scope: !3515)
!3515 = !DILexicalBlockFile(scope: !3516, file: !919, discriminator: 1)
!3516 = distinct !DILexicalBlock(scope: !3512, file: !919, line: 1128, column: 9)
!3517 = !DILocation(line: 1128, column: 25, scope: !3515)
!3518 = !DILocation(line: 1128, column: 23, scope: !3515)
!3519 = !DILocation(line: 1128, column: 9, scope: !3515)
!3520 = !DILocation(line: 1129, column: 32, scope: !3516)
!3521 = !DILocation(line: 1129, column: 27, scope: !3516)
!3522 = !DILocation(line: 1129, column: 13, scope: !3516)
!3523 = !DILocation(line: 1128, column: 43, scope: !3524)
!3524 = !DILexicalBlockFile(scope: !3516, file: !919, discriminator: 2)
!3525 = !DILocation(line: 1128, column: 9, scope: !3524)
!3526 = distinct !{!3526, !3527}
!3527 = !DILocation(line: 1128, column: 9, scope: !3496)
!3528 = !DILocation(line: 1130, column: 18, scope: !3496)
!3529 = !DILocation(line: 1130, column: 9, scope: !3496)
!3530 = !DILocation(line: 1132, column: 13, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3496, file: !919, line: 1132, column: 13)
!3532 = !DILocation(line: 1132, column: 17, scope: !3531)
!3533 = !DILocation(line: 1132, column: 13, scope: !3496)
!3534 = !DILocation(line: 1133, column: 69, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3531, file: !919, line: 1132, column: 22)
!3536 = !DILocation(line: 1133, column: 13, scope: !3535)
!3537 = !DILocation(line: 1134, column: 17, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3535, file: !919, line: 1134, column: 17)
!3539 = !DILocation(line: 1134, column: 21, scope: !3538)
!3540 = !DILocation(line: 1134, column: 32, scope: !3538)
!3541 = !DILocation(line: 1134, column: 17, scope: !3535)
!3542 = !DILocation(line: 1135, column: 17, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3538, file: !919, line: 1134, column: 38)
!3544 = !DILocation(line: 1136, column: 17, scope: !3543)
!3545 = !DILocation(line: 1138, column: 9, scope: !3535)
!3546 = !DILocation(line: 1139, column: 5, scope: !3496)
!3547 = !DILocation(line: 1141, column: 9, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1141, column: 9)
!3549 = !DILocation(line: 1141, column: 12, scope: !3548)
!3550 = !DILocation(line: 1141, column: 23, scope: !3548)
!3551 = !DILocation(line: 1141, column: 58, scope: !3548)
!3552 = !DILocation(line: 1141, column: 61, scope: !3553)
!3553 = !DILexicalBlockFile(scope: !3548, file: !919, discriminator: 1)
!3554 = !DILocation(line: 1141, column: 64, scope: !3553)
!3555 = !DILocation(line: 1141, column: 79, scope: !3553)
!3556 = !DILocation(line: 1141, column: 9, scope: !3553)
!3557 = !DILocation(line: 1142, column: 79, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3548, file: !919, line: 1141, column: 115)
!3559 = !DILocation(line: 1142, column: 9, scope: !3558)
!3560 = !DILocation(line: 1143, column: 9, scope: !3558)
!3561 = !DILocation(line: 1143, column: 12, scope: !3558)
!3562 = !DILocation(line: 1143, column: 27, scope: !3558)
!3563 = !DILocation(line: 1144, column: 5, scope: !3558)
!3564 = !DILocation(line: 1146, column: 9, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1146, column: 9)
!3566 = !DILocation(line: 1146, column: 12, scope: !3565)
!3567 = !DILocation(line: 1146, column: 27, scope: !3565)
!3568 = !DILocation(line: 1146, column: 9, scope: !2353)
!3569 = !DILocation(line: 1147, column: 13, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3571, file: !919, line: 1147, column: 13)
!3571 = distinct !DILexicalBlock(scope: !3565, file: !919, line: 1146, column: 63)
!3572 = !DILocation(line: 1147, column: 16, scope: !3570)
!3573 = !DILocation(line: 1147, column: 31, scope: !3570)
!3574 = !DILocation(line: 1147, column: 13, scope: !3571)
!3575 = !DILocation(line: 1148, column: 13, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3570, file: !919, line: 1147, column: 37)
!3577 = !DILocation(line: 1149, column: 13, scope: !3576)
!3578 = !DILocation(line: 1151, column: 13, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3571, file: !919, line: 1151, column: 13)
!3580 = !DILocation(line: 1151, column: 17, scope: !3579)
!3581 = !DILocation(line: 1151, column: 26, scope: !3579)
!3582 = !DILocation(line: 1151, column: 13, scope: !3571)
!3583 = !DILocation(line: 1152, column: 29, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3579, file: !919, line: 1151, column: 31)
!3585 = !DILocation(line: 1152, column: 32, scope: !3584)
!3586 = !DILocation(line: 1152, column: 49, scope: !3584)
!3587 = !DILocation(line: 1152, column: 53, scope: !3584)
!3588 = !DILocation(line: 1152, column: 47, scope: !3584)
!3589 = !DILocation(line: 1152, column: 13, scope: !3584)
!3590 = !DILocation(line: 1152, column: 16, scope: !3584)
!3591 = !DILocation(line: 1152, column: 27, scope: !3584)
!3592 = !DILocation(line: 1153, column: 17, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3584, file: !919, line: 1153, column: 17)
!3594 = !DILocation(line: 1153, column: 20, scope: !3593)
!3595 = !DILocation(line: 1153, column: 31, scope: !3593)
!3596 = !DILocation(line: 1153, column: 17, scope: !3584)
!3597 = !DILocation(line: 1154, column: 93, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3593, file: !919, line: 1153, column: 36)
!3599 = !DILocation(line: 1154, column: 17, scope: !3598)
!3600 = !DILocation(line: 1155, column: 17, scope: !3598)
!3601 = !DILocation(line: 1155, column: 20, scope: !3598)
!3602 = !DILocation(line: 1155, column: 31, scope: !3598)
!3603 = !DILocation(line: 1156, column: 13, scope: !3598)
!3604 = !DILocation(line: 1157, column: 9, scope: !3584)
!3605 = !DILocation(line: 1158, column: 78, scope: !3579)
!3606 = !DILocation(line: 1158, column: 13, scope: !3579)
!3607 = !DILocation(line: 1159, column: 5, scope: !3571)
!3608 = !DILocation(line: 1160, column: 18, scope: !2353)
!3609 = !DILocation(line: 1160, column: 21, scope: !2353)
!3610 = !DILocation(line: 1160, column: 32, scope: !2353)
!3611 = !DILocation(line: 1160, column: 17, scope: !2353)
!3612 = !DILocation(line: 1160, column: 17, scope: !3042)
!3613 = !DILocation(line: 1160, column: 74, scope: !3044)
!3614 = !DILocation(line: 1160, column: 77, scope: !3044)
!3615 = !DILocation(line: 1160, column: 17, scope: !3044)
!3616 = !DILocation(line: 1160, column: 17, scope: !3371)
!3617 = !DILocation(line: 1160, column: 15, scope: !3371)
!3618 = !DILocation(line: 1162, column: 10, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1162, column: 9)
!3620 = !DILocation(line: 1162, column: 13, scope: !3619)
!3621 = !DILocation(line: 1162, column: 28, scope: !3619)
!3622 = !DILocation(line: 1162, column: 31, scope: !3623)
!3623 = !DILexicalBlockFile(scope: !3619, file: !919, discriminator: 1)
!3624 = !DILocation(line: 1162, column: 35, scope: !3623)
!3625 = !DILocation(line: 1162, column: 46, scope: !3623)
!3626 = !DILocation(line: 1162, column: 9, scope: !3623)
!3627 = !DILocation(line: 1163, column: 22, scope: !3619)
!3628 = !DILocation(line: 1163, column: 26, scope: !3619)
!3629 = !DILocation(line: 1163, column: 19, scope: !3619)
!3630 = !DILocation(line: 1163, column: 9, scope: !3619)
!3631 = !DILocation(line: 1166, column: 9, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1166, column: 9)
!3633 = !DILocation(line: 1166, column: 12, scope: !3632)
!3634 = !DILocation(line: 1166, column: 23, scope: !3632)
!3635 = !DILocation(line: 1166, column: 9, scope: !2353)
!3636 = !DILocalVariable(name: "seek_timestamp", scope: !3637, file: !919, line: 1167, type: !1004)
!3637 = distinct !DILexicalBlock(scope: !3632, file: !919, line: 1166, column: 59)
!3638 = !DILocation(line: 1167, column: 17, scope: !3637)
!3639 = !DILocation(line: 1167, column: 34, scope: !3637)
!3640 = !DILocation(line: 1169, column: 15, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3637, file: !919, line: 1169, column: 13)
!3642 = !DILocation(line: 1169, column: 19, scope: !3641)
!3643 = !DILocation(line: 1169, column: 28, scope: !3641)
!3644 = !DILocation(line: 1169, column: 34, scope: !3641)
!3645 = !DILocation(line: 1169, column: 13, scope: !3637)
!3646 = !DILocalVariable(name: "dts_heuristic", scope: !3647, file: !919, line: 1170, type: !998)
!3647 = distinct !DILexicalBlock(scope: !3641, file: !919, line: 1169, column: 48)
!3648 = !DILocation(line: 1170, column: 17, scope: !3647)
!3649 = !DILocation(line: 1171, column: 19, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3647, file: !919, line: 1171, column: 13)
!3651 = !DILocation(line: 1171, column: 18, scope: !3650)
!3652 = !DILocation(line: 1171, column: 23, scope: !3653)
!3653 = !DILexicalBlockFile(scope: !3654, file: !919, discriminator: 1)
!3654 = distinct !DILexicalBlock(scope: !3650, file: !919, line: 1171, column: 13)
!3655 = !DILocation(line: 1171, column: 25, scope: !3653)
!3656 = !DILocation(line: 1171, column: 29, scope: !3653)
!3657 = !DILocation(line: 1171, column: 24, scope: !3653)
!3658 = !DILocation(line: 1171, column: 13, scope: !3653)
!3659 = !DILocalVariable(name: "par", scope: !3660, file: !919, line: 1172, type: !3661)
!3660 = distinct !DILexicalBlock(scope: !3654, file: !919, line: 1171, column: 46)
!3661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3662, size: 64, align: 64)
!3662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2587)
!3663 = !DILocation(line: 1172, column: 42, scope: !3660)
!3664 = !DILocation(line: 1172, column: 60, scope: !3660)
!3665 = !DILocation(line: 1172, column: 48, scope: !3660)
!3666 = !DILocation(line: 1172, column: 52, scope: !3660)
!3667 = !DILocation(line: 1172, column: 64, scope: !3660)
!3668 = !DILocation(line: 1173, column: 21, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3660, file: !919, line: 1173, column: 21)
!3670 = !DILocation(line: 1173, column: 26, scope: !3669)
!3671 = !DILocation(line: 1173, column: 21, scope: !3660)
!3672 = !DILocation(line: 1174, column: 35, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3669, file: !919, line: 1173, column: 39)
!3674 = !DILocation(line: 1175, column: 21, scope: !3673)
!3675 = !DILocation(line: 1177, column: 13, scope: !3660)
!3676 = !DILocation(line: 1171, column: 42, scope: !3677)
!3677 = !DILexicalBlockFile(scope: !3654, file: !919, discriminator: 2)
!3678 = !DILocation(line: 1171, column: 13, scope: !3677)
!3679 = distinct !{!3679, !3680}
!3680 = !DILocation(line: 1171, column: 13, scope: !3647)
!3681 = !DILocation(line: 1178, column: 17, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3647, file: !919, line: 1178, column: 17)
!3683 = !DILocation(line: 1178, column: 17, scope: !3647)
!3684 = !DILocation(line: 1179, column: 32, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3682, file: !919, line: 1178, column: 32)
!3686 = !DILocation(line: 1180, column: 13, scope: !3685)
!3687 = !DILocation(line: 1181, column: 9, scope: !3647)
!3688 = !DILocation(line: 1182, column: 34, scope: !3637)
!3689 = !DILocation(line: 1182, column: 52, scope: !3637)
!3690 = !DILocation(line: 1182, column: 68, scope: !3637)
!3691 = !DILocation(line: 1182, column: 15, scope: !3637)
!3692 = !DILocation(line: 1182, column: 13, scope: !3637)
!3693 = !DILocation(line: 1183, column: 13, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3637, file: !919, line: 1183, column: 13)
!3695 = !DILocation(line: 1183, column: 17, scope: !3694)
!3696 = !DILocation(line: 1183, column: 13, scope: !3637)
!3697 = !DILocation(line: 1185, column: 20, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3694, file: !919, line: 1183, column: 22)
!3699 = !DILocation(line: 1185, column: 38, scope: !3698)
!3700 = !DILocation(line: 1185, column: 30, scope: !3698)
!3701 = !DILocation(line: 1185, column: 48, scope: !3698)
!3702 = !DILocation(line: 1184, column: 13, scope: !3698)
!3703 = !DILocation(line: 1186, column: 9, scope: !3698)
!3704 = !DILocation(line: 1187, column: 5, scope: !3637)
!3705 = !DILocation(line: 1190, column: 23, scope: !2353)
!3706 = !DILocation(line: 1190, column: 26, scope: !2353)
!3707 = !DILocation(line: 1190, column: 5, scope: !2353)
!3708 = !DILocation(line: 1193, column: 20, scope: !2353)
!3709 = !DILocation(line: 1193, column: 24, scope: !2353)
!3710 = !DILocation(line: 1193, column: 40, scope: !2353)
!3711 = !DILocation(line: 1193, column: 5, scope: !2353)
!3712 = !DILocation(line: 1195, column: 30, scope: !2353)
!3713 = !DILocation(line: 1195, column: 82, scope: !2353)
!3714 = !DILocation(line: 1195, column: 97, scope: !2353)
!3715 = !DILocation(line: 1195, column: 19, scope: !2353)
!3716 = !DILocation(line: 1195, column: 17, scope: !2353)
!3717 = !DILocation(line: 1196, column: 9, scope: !2353)
!3718 = !DILocation(line: 1196, column: 7, scope: !2353)
!3719 = !DILocation(line: 1197, column: 10, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1197, column: 9)
!3721 = !DILocation(line: 1197, column: 9, scope: !2353)
!3722 = !DILocation(line: 1198, column: 9, scope: !3720)
!3723 = !DILocation(line: 1199, column: 39, scope: !2353)
!3724 = !DILocation(line: 1199, column: 17, scope: !2353)
!3725 = !DILocation(line: 1199, column: 32, scope: !2353)
!3726 = !DILocation(line: 1199, column: 5, scope: !2353)
!3727 = !DILocation(line: 1199, column: 37, scope: !2353)
!3728 = !DILocation(line: 1201, column: 14, scope: !2353)
!3729 = !DILocation(line: 1201, column: 5, scope: !2353)
!3730 = !DILocation(line: 1201, column: 8, scope: !2353)
!3731 = !DILocation(line: 1201, column: 12, scope: !2353)
!3732 = !DILocation(line: 1202, column: 20, scope: !2353)
!3733 = !DILocation(line: 1202, column: 39, scope: !2353)
!3734 = !DILocation(line: 1202, column: 43, scope: !2353)
!3735 = !DILocation(line: 1202, column: 37, scope: !2353)
!3736 = !DILocation(line: 1202, column: 5, scope: !2353)
!3737 = !DILocation(line: 1202, column: 8, scope: !2353)
!3738 = !DILocation(line: 1202, column: 18, scope: !2353)
!3739 = !DILocation(line: 1203, column: 21, scope: !2353)
!3740 = !DILocation(line: 1203, column: 24, scope: !2353)
!3741 = !DILocation(line: 1203, column: 5, scope: !2353)
!3742 = !DILocation(line: 1203, column: 8, scope: !2353)
!3743 = !DILocation(line: 1203, column: 19, scope: !2353)
!3744 = !DILocation(line: 1204, column: 25, scope: !2353)
!3745 = !DILocation(line: 1204, column: 28, scope: !2353)
!3746 = !DILocation(line: 1204, column: 5, scope: !2353)
!3747 = !DILocation(line: 1204, column: 8, scope: !2353)
!3748 = !DILocation(line: 1204, column: 23, scope: !2353)
!3749 = !DILocation(line: 1205, column: 26, scope: !2353)
!3750 = !DILocation(line: 1205, column: 29, scope: !2353)
!3751 = !DILocation(line: 1205, column: 5, scope: !2353)
!3752 = !DILocation(line: 1205, column: 8, scope: !2353)
!3753 = !DILocation(line: 1205, column: 24, scope: !2353)
!3754 = !DILocation(line: 1206, column: 20, scope: !2353)
!3755 = !DILocation(line: 1206, column: 23, scope: !2353)
!3756 = !DILocation(line: 1206, column: 42, scope: !2353)
!3757 = !DILocation(line: 1206, column: 53, scope: !3042)
!3758 = !DILocation(line: 1206, column: 67, scope: !3042)
!3759 = !DILocation(line: 1206, column: 70, scope: !3044)
!3760 = !DILocation(line: 1206, column: 74, scope: !3044)
!3761 = !DILocation(line: 1206, column: 85, scope: !3044)
!3762 = !DILocation(line: 1206, column: 53, scope: !3044)
!3763 = !DILocation(line: 1206, column: 122, scope: !3371)
!3764 = !DILocation(line: 1206, column: 126, scope: !3371)
!3765 = !DILocation(line: 1206, column: 53, scope: !3371)
!3766 = !DILocation(line: 1206, column: 53, scope: !3767)
!3767 = !DILexicalBlockFile(scope: !2353, file: !919, discriminator: 4)
!3768 = !DILocation(line: 1206, column: 53, scope: !3769)
!3769 = !DILexicalBlockFile(scope: !2353, file: !919, discriminator: 5)
!3770 = !DILocation(line: 1206, column: 42, scope: !3769)
!3771 = !DILocation(line: 1206, column: 144, scope: !3772)
!3772 = !DILexicalBlockFile(scope: !2353, file: !919, discriminator: 6)
!3773 = !DILocation(line: 1206, column: 42, scope: !3772)
!3774 = !DILocation(line: 1206, column: 42, scope: !3775)
!3775 = !DILexicalBlockFile(scope: !2353, file: !919, discriminator: 7)
!3776 = !DILocation(line: 1206, column: 39, scope: !3775)
!3777 = !DILocation(line: 1206, column: 5, scope: !3775)
!3778 = !DILocation(line: 1206, column: 8, scope: !3775)
!3779 = !DILocation(line: 1206, column: 18, scope: !3775)
!3780 = !DILocation(line: 1207, column: 21, scope: !2353)
!3781 = !DILocation(line: 1207, column: 25, scope: !2353)
!3782 = !DILocation(line: 1207, column: 5, scope: !2353)
!3783 = !DILocation(line: 1207, column: 8, scope: !2353)
!3784 = !DILocation(line: 1207, column: 19, scope: !2353)
!3785 = !DILocation(line: 1208, column: 19, scope: !2353)
!3786 = !DILocation(line: 1208, column: 22, scope: !2353)
!3787 = !DILocation(line: 1208, column: 5, scope: !2353)
!3788 = !DILocation(line: 1208, column: 8, scope: !2353)
!3789 = !DILocation(line: 1208, column: 17, scope: !2353)
!3790 = !DILocation(line: 1209, column: 24, scope: !2353)
!3791 = !DILocation(line: 1209, column: 27, scope: !2353)
!3792 = !DILocation(line: 1209, column: 5, scope: !2353)
!3793 = !DILocation(line: 1209, column: 8, scope: !2353)
!3794 = !DILocation(line: 1209, column: 22, scope: !2353)
!3795 = !DILocation(line: 1210, column: 15, scope: !2353)
!3796 = !DILocation(line: 1210, column: 18, scope: !2353)
!3797 = !DILocation(line: 1210, column: 5, scope: !2353)
!3798 = !DILocation(line: 1210, column: 8, scope: !2353)
!3799 = !DILocation(line: 1210, column: 13, scope: !2353)
!3800 = !DILocation(line: 1211, column: 5, scope: !2353)
!3801 = !DILocation(line: 1211, column: 8, scope: !2353)
!3802 = !DILocation(line: 1211, column: 17, scope: !2353)
!3803 = !DILocation(line: 1212, column: 5, scope: !2353)
!3804 = !DILocation(line: 1212, column: 8, scope: !2353)
!3805 = !DILocation(line: 1212, column: 32, scope: !2353)
!3806 = !DILocation(line: 1212, column: 20, scope: !2353)
!3807 = !DILocation(line: 1214, column: 28, scope: !2353)
!3808 = !DILocation(line: 1214, column: 31, scope: !2353)
!3809 = !DILocation(line: 1214, column: 49, scope: !2353)
!3810 = !DILocation(line: 1214, column: 55, scope: !3042)
!3811 = !DILocation(line: 1214, column: 58, scope: !3042)
!3812 = !DILocation(line: 1214, column: 28, scope: !3042)
!3813 = !DILocation(line: 1214, column: 28, scope: !3044)
!3814 = !DILocation(line: 1214, column: 28, scope: !3371)
!3815 = !DILocation(line: 1214, column: 5, scope: !3371)
!3816 = !DILocation(line: 1214, column: 8, scope: !3371)
!3817 = !DILocation(line: 1214, column: 26, scope: !3371)
!3818 = !DILocation(line: 1218, column: 36, scope: !2353)
!3819 = !DILocation(line: 1218, column: 39, scope: !2353)
!3820 = !DILocation(line: 1218, column: 42, scope: !2353)
!3821 = !DILocation(line: 1218, column: 19, scope: !2353)
!3822 = !DILocation(line: 1218, column: 17, scope: !2353)
!3823 = !DILocation(line: 1219, column: 14, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1219, column: 5)
!3825 = !DILocation(line: 1219, column: 17, scope: !3824)
!3826 = !DILocation(line: 1219, column: 12, scope: !3824)
!3827 = !DILocation(line: 1219, column: 10, scope: !3824)
!3828 = !DILocation(line: 1219, column: 28, scope: !3829)
!3829 = !DILexicalBlockFile(scope: !3830, file: !919, discriminator: 1)
!3830 = distinct !DILexicalBlock(scope: !3824, file: !919, line: 1219, column: 5)
!3831 = !DILocation(line: 1219, column: 32, scope: !3829)
!3832 = !DILocation(line: 1219, column: 30, scope: !3829)
!3833 = !DILocation(line: 1219, column: 5, scope: !3829)
!3834 = !DILocation(line: 1220, column: 11, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3830, file: !919, line: 1219, column: 55)
!3836 = !DILocation(line: 1221, column: 9, scope: !3835)
!3837 = !DILocation(line: 1221, column: 47, scope: !3838)
!3838 = !DILexicalBlockFile(scope: !3835, file: !919, discriminator: 1)
!3839 = !DILocation(line: 1221, column: 33, scope: !3838)
!3840 = !DILocation(line: 1221, column: 51, scope: !3838)
!3841 = !DILocation(line: 1221, column: 69, scope: !3838)
!3842 = !DILocation(line: 1221, column: 21, scope: !3838)
!3843 = !DILocation(line: 1221, column: 19, scope: !3838)
!3844 = !DILocation(line: 1221, column: 9, scope: !3838)
!3845 = !DILocation(line: 1223, column: 39, scope: !3835)
!3846 = !DILocation(line: 1223, column: 42, scope: !3835)
!3847 = !DILocation(line: 1223, column: 13, scope: !3835)
!3848 = !DILocation(line: 1221, column: 9, scope: !3849)
!3849 = !DILexicalBlockFile(scope: !3835, file: !919, discriminator: 2)
!3850 = distinct !{!3850, !3836}
!3851 = !DILocation(line: 1224, column: 5, scope: !3835)
!3852 = !DILocation(line: 1219, column: 51, scope: !3853)
!3853 = !DILexicalBlockFile(scope: !3830, file: !919, discriminator: 2)
!3854 = !DILocation(line: 1219, column: 5, scope: !3853)
!3855 = distinct !{!3855, !3856}
!3856 = !DILocation(line: 1219, column: 5, scope: !2353)
!3857 = !DILocation(line: 1226, column: 7, scope: !2353)
!3858 = !DILocation(line: 1227, column: 5, scope: !2353)
!3859 = !DILocation(line: 1227, column: 29, scope: !3042)
!3860 = !DILocation(line: 1227, column: 46, scope: !3042)
!3861 = !DILocation(line: 1227, column: 17, scope: !3042)
!3862 = !DILocation(line: 1227, column: 15, scope: !3042)
!3863 = !DILocation(line: 1227, column: 5, scope: !3042)
!3864 = !DILocalVariable(name: "class", scope: !3865, file: !919, line: 1228, type: !976)
!3865 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1227, column: 54)
!3866 = !DILocation(line: 1228, column: 24, scope: !3865)
!3867 = !DILocation(line: 1228, column: 32, scope: !3865)
!3868 = !DILocalVariable(name: "option", scope: !3865, file: !919, line: 1229, type: !3869)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64, align: 64)
!3870 = !DILocation(line: 1229, column: 25, scope: !3865)
!3871 = !DILocation(line: 1229, column: 46, scope: !3865)
!3872 = !DILocation(line: 1229, column: 54, scope: !3865)
!3873 = !DILocation(line: 1229, column: 57, scope: !3865)
!3874 = !DILocation(line: 1229, column: 34, scope: !3865)
!3875 = !DILocalVariable(name: "fclass", scope: !3865, file: !919, line: 1231, type: !976)
!3876 = !DILocation(line: 1231, column: 24, scope: !3865)
!3877 = !DILocation(line: 1231, column: 33, scope: !3865)
!3878 = !DILocalVariable(name: "foption", scope: !3865, file: !919, line: 1232, type: !3869)
!3879 = !DILocation(line: 1232, column: 25, scope: !3865)
!3880 = !DILocation(line: 1232, column: 47, scope: !3865)
!3881 = !DILocation(line: 1232, column: 56, scope: !3865)
!3882 = !DILocation(line: 1232, column: 59, scope: !3865)
!3883 = !DILocation(line: 1232, column: 35, scope: !3865)
!3884 = !DILocation(line: 1234, column: 14, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3865, file: !919, line: 1234, column: 13)
!3886 = !DILocation(line: 1234, column: 21, scope: !3885)
!3887 = !DILocation(line: 1234, column: 24, scope: !3888)
!3888 = !DILexicalBlockFile(scope: !3885, file: !919, discriminator: 1)
!3889 = !DILocation(line: 1234, column: 13, scope: !3888)
!3890 = !DILocation(line: 1235, column: 13, scope: !3885)
!3891 = distinct !{!3891, !3858}
!3892 = !DILocation(line: 1238, column: 15, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3865, file: !919, line: 1238, column: 13)
!3894 = !DILocation(line: 1238, column: 23, scope: !3893)
!3895 = !DILocation(line: 1238, column: 29, scope: !3893)
!3896 = !DILocation(line: 1238, column: 13, scope: !3865)
!3897 = !DILocation(line: 1240, column: 71, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3893, file: !919, line: 1238, column: 35)
!3899 = !DILocation(line: 1240, column: 74, scope: !3898)
!3900 = !DILocation(line: 1241, column: 20, scope: !3898)
!3901 = !DILocation(line: 1241, column: 28, scope: !3898)
!3902 = !DILocation(line: 1241, column: 35, scope: !3903)
!3903 = !DILexicalBlockFile(scope: !3898, file: !919, discriminator: 1)
!3904 = !DILocation(line: 1241, column: 43, scope: !3903)
!3905 = !DILocation(line: 1241, column: 20, scope: !3903)
!3906 = !DILocation(line: 1241, column: 20, scope: !3907)
!3907 = !DILexicalBlockFile(scope: !3898, file: !919, discriminator: 2)
!3908 = !DILocation(line: 1241, column: 20, scope: !3909)
!3909 = !DILexicalBlockFile(scope: !3898, file: !919, discriminator: 3)
!3910 = !DILocation(line: 1241, column: 54, scope: !3909)
!3911 = !DILocation(line: 1241, column: 69, scope: !3909)
!3912 = !DILocation(line: 1242, column: 20, scope: !3898)
!3913 = !DILocation(line: 1239, column: 13, scope: !3898)
!3914 = !DILocation(line: 1243, column: 13, scope: !3898)
!3915 = !DILocation(line: 1250, column: 65, scope: !3865)
!3916 = !DILocation(line: 1250, column: 68, scope: !3865)
!3917 = !DILocation(line: 1251, column: 16, scope: !3865)
!3918 = !DILocation(line: 1251, column: 24, scope: !3865)
!3919 = !DILocation(line: 1251, column: 31, scope: !3920)
!3920 = !DILexicalBlockFile(scope: !3865, file: !919, discriminator: 1)
!3921 = !DILocation(line: 1251, column: 39, scope: !3920)
!3922 = !DILocation(line: 1251, column: 16, scope: !3920)
!3923 = !DILocation(line: 1251, column: 16, scope: !3924)
!3924 = !DILexicalBlockFile(scope: !3865, file: !919, discriminator: 2)
!3925 = !DILocation(line: 1251, column: 16, scope: !3926)
!3926 = !DILexicalBlockFile(scope: !3865, file: !919, discriminator: 3)
!3927 = !DILocation(line: 1251, column: 50, scope: !3926)
!3928 = !DILocation(line: 1251, column: 65, scope: !3926)
!3929 = !DILocation(line: 1251, column: 70, scope: !3926)
!3930 = !DILocation(line: 1246, column: 9, scope: !3865)
!3931 = !DILocation(line: 1227, column: 5, scope: !3044)
!3932 = !DILocation(line: 1253, column: 5, scope: !2353)
!3933 = !DILocation(line: 1255, column: 12, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !2353, file: !919, line: 1255, column: 5)
!3935 = !DILocation(line: 1255, column: 10, scope: !3934)
!3936 = !DILocation(line: 1255, column: 17, scope: !3937)
!3937 = !DILexicalBlockFile(scope: !3938, file: !919, discriminator: 1)
!3938 = distinct !DILexicalBlock(scope: !3934, file: !919, line: 1255, column: 5)
!3939 = !DILocation(line: 1255, column: 21, scope: !3937)
!3940 = !DILocation(line: 1255, column: 24, scope: !3937)
!3941 = !DILocation(line: 1255, column: 19, scope: !3937)
!3942 = !DILocation(line: 1255, column: 5, scope: !3937)
!3943 = !DILocalVariable(name: "j", scope: !3944, file: !919, line: 1256, type: !998)
!3944 = distinct !DILexicalBlock(scope: !3938, file: !919, line: 1255, column: 49)
!3945 = !DILocation(line: 1256, column: 13, scope: !3944)
!3946 = !DILocation(line: 1258, column: 16, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3944, file: !919, line: 1258, column: 9)
!3948 = !DILocation(line: 1258, column: 14, scope: !3947)
!3949 = !DILocation(line: 1258, column: 21, scope: !3950)
!3950 = !DILexicalBlockFile(scope: !3951, file: !919, discriminator: 1)
!3951 = distinct !DILexicalBlock(scope: !3947, file: !919, line: 1258, column: 9)
!3952 = !DILocation(line: 1258, column: 25, scope: !3950)
!3953 = !DILocation(line: 1258, column: 29, scope: !3950)
!3954 = !DILocation(line: 1258, column: 23, scope: !3950)
!3955 = !DILocation(line: 1258, column: 9, scope: !3950)
!3956 = !DILocalVariable(name: "st", scope: !3957, file: !919, line: 1259, type: !2562)
!3957 = distinct !DILexicalBlock(scope: !3951, file: !919, line: 1258, column: 46)
!3958 = !DILocation(line: 1259, column: 23, scope: !3957)
!3959 = !DILocation(line: 1259, column: 40, scope: !3957)
!3960 = !DILocation(line: 1259, column: 28, scope: !3957)
!3961 = !DILocation(line: 1259, column: 32, scope: !3957)
!3962 = !DILocation(line: 1261, column: 40, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3957, file: !919, line: 1261, column: 17)
!3964 = !DILocation(line: 1261, column: 44, scope: !3963)
!3965 = !DILocation(line: 1261, column: 67, scope: !3963)
!3966 = !DILocation(line: 1261, column: 48, scope: !3963)
!3967 = !DILocation(line: 1261, column: 51, scope: !3963)
!3968 = !DILocation(line: 1261, column: 70, scope: !3963)
!3969 = !DILocation(line: 1261, column: 17, scope: !3963)
!3970 = !DILocation(line: 1261, column: 81, scope: !3963)
!3971 = !DILocation(line: 1261, column: 17, scope: !3957)
!3972 = !DILocation(line: 1262, column: 33, scope: !3963)
!3973 = !DILocation(line: 1262, column: 56, scope: !3963)
!3974 = !DILocation(line: 1262, column: 37, scope: !3963)
!3975 = !DILocation(line: 1262, column: 40, scope: !3963)
!3976 = !DILocation(line: 1262, column: 59, scope: !3963)
!3977 = !DILocation(line: 1262, column: 61, scope: !3963)
!3978 = !DILocation(line: 1262, column: 17, scope: !3963)
!3979 = !DILocation(line: 1263, column: 9, scope: !3957)
!3980 = !DILocation(line: 1258, column: 42, scope: !3981)
!3981 = !DILexicalBlockFile(scope: !3951, file: !919, discriminator: 2)
!3982 = !DILocation(line: 1258, column: 9, scope: !3981)
!3983 = distinct !{!3983, !3984}
!3984 = !DILocation(line: 1258, column: 9, scope: !3944)
!3985 = !DILocation(line: 1264, column: 5, scope: !3944)
!3986 = !DILocation(line: 1255, column: 45, scope: !3987)
!3987 = !DILexicalBlockFile(scope: !3938, file: !919, discriminator: 2)
!3988 = !DILocation(line: 1255, column: 5, scope: !3987)
!3989 = distinct !{!3989, !3990}
!3990 = !DILocation(line: 1255, column: 5, scope: !2353)
!3991 = !DILocation(line: 1266, column: 40, scope: !2353)
!3992 = !DILocation(line: 1268, column: 5, scope: !2353)
!3993 = distinct !DISubprogram(name: "init_complex_filters", scope: !919, file: !919, line: 2096, type: !3994, isLocal: true, isDefinition: true, scopeLine: 2097, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!3994 = !DISubroutineType(types: !3995)
!3995 = !{!998}
!3996 = !DILocalVariable(name: "i", scope: !3993, file: !919, line: 2098, type: !998)
!3997 = !DILocation(line: 2098, column: 9, scope: !3993)
!3998 = !DILocalVariable(name: "ret", scope: !3993, file: !919, line: 2098, type: !998)
!3999 = !DILocation(line: 2098, column: 12, scope: !3993)
!4000 = !DILocation(line: 2100, column: 12, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3993, file: !919, line: 2100, column: 5)
!4002 = !DILocation(line: 2100, column: 10, scope: !4001)
!4003 = !DILocation(line: 2100, column: 17, scope: !4004)
!4004 = !DILexicalBlockFile(scope: !4005, file: !919, discriminator: 1)
!4005 = distinct !DILexicalBlock(scope: !4001, file: !919, line: 2100, column: 5)
!4006 = !DILocation(line: 2100, column: 21, scope: !4004)
!4007 = !DILocation(line: 2100, column: 19, scope: !4004)
!4008 = !DILocation(line: 2100, column: 5, scope: !4004)
!4009 = !DILocation(line: 2101, column: 53, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4005, file: !919, line: 2100, column: 43)
!4011 = !DILocation(line: 2101, column: 40, scope: !4010)
!4012 = !DILocation(line: 2101, column: 15, scope: !4010)
!4013 = !DILocation(line: 2101, column: 13, scope: !4010)
!4014 = !DILocation(line: 2102, column: 13, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4010, file: !919, line: 2102, column: 13)
!4016 = !DILocation(line: 2102, column: 17, scope: !4015)
!4017 = !DILocation(line: 2102, column: 13, scope: !4010)
!4018 = !DILocation(line: 2103, column: 20, scope: !4015)
!4019 = !DILocation(line: 2103, column: 13, scope: !4015)
!4020 = !DILocation(line: 2104, column: 5, scope: !4010)
!4021 = !DILocation(line: 2100, column: 39, scope: !4022)
!4022 = !DILexicalBlockFile(scope: !4005, file: !919, discriminator: 2)
!4023 = !DILocation(line: 2100, column: 5, scope: !4022)
!4024 = distinct !{!4024, !4025}
!4025 = !DILocation(line: 2100, column: 5, scope: !3993)
!4026 = !DILocation(line: 2105, column: 5, scope: !3993)
!4027 = !DILocation(line: 2106, column: 1, scope: !3993)
!4028 = distinct !DISubprogram(name: "open_output_file", scope: !919, file: !919, line: 2108, type: !2114, isLocal: true, isDefinition: true, scopeLine: 2109, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!4029 = !DILocalVariable(name: "o", arg: 1, scope: !4028, file: !919, line: 2108, type: !2116)
!4030 = !DILocation(line: 2108, column: 45, scope: !4028)
!4031 = !DILocalVariable(name: "filename", arg: 2, scope: !4028, file: !919, line: 2108, type: !982)
!4032 = !DILocation(line: 2108, column: 60, scope: !4028)
!4033 = !DILocalVariable(name: "oc", scope: !4028, file: !919, line: 2110, type: !2364)
!4034 = !DILocation(line: 2110, column: 22, scope: !4028)
!4035 = !DILocalVariable(name: "i", scope: !4028, file: !919, line: 2111, type: !998)
!4036 = !DILocation(line: 2111, column: 9, scope: !4028)
!4037 = !DILocalVariable(name: "j", scope: !4028, file: !919, line: 2111, type: !998)
!4038 = !DILocation(line: 2111, column: 12, scope: !4028)
!4039 = !DILocalVariable(name: "err", scope: !4028, file: !919, line: 2111, type: !998)
!4040 = !DILocation(line: 2111, column: 15, scope: !4028)
!4041 = !DILocalVariable(name: "of", scope: !4028, file: !919, line: 2112, type: !4042)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64, align: 64)
!4043 = !DIDerivedType(tag: DW_TAG_typedef, name: "OutputFile", file: !910, line: 565, baseType: !4044)
!4044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OutputFile", file: !910, line: 554, size: 448, align: 64, elements: !4045)
!4045 = !{!4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !4044, file: !910, line: 555, baseType: !2364, size: 64, align: 64)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !4044, file: !910, line: 556, baseType: !1088, size: 64, align: 64, offset: 64)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "ost_index", scope: !4044, file: !910, line: 557, baseType: !998, size: 32, align: 32, offset: 128)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "recording_time", scope: !4044, file: !910, line: 558, baseType: !1004, size: 64, align: 64, offset: 192)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !4044, file: !910, line: 559, baseType: !1004, size: 64, align: 64, offset: 256)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "limit_filesize", scope: !4044, file: !910, line: 560, baseType: !1194, size: 64, align: 64, offset: 320)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "shortest", scope: !4044, file: !910, line: 562, baseType: !998, size: 32, align: 32, offset: 384)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "header_written", scope: !4044, file: !910, line: 564, baseType: !998, size: 32, align: 32, offset: 416)
!4054 = !DILocation(line: 2112, column: 17, scope: !4028)
!4055 = !DILocalVariable(name: "ost", scope: !4028, file: !919, line: 2113, type: !4056)
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4057, size: 64, align: 64)
!4057 = !DIDerivedType(tag: DW_TAG_typedef, name: "OutputStream", file: !910, line: 552, baseType: !4058)
!4058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OutputStream", file: !910, line: 442, size: 4288, align: 64, elements: !4059)
!4059 = !{!4060, !4061, !4062, !4063, !4064, !4065, !4066, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4287, !4289, !4290, !4291, !4292, !4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371}
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "file_index", scope: !4058, file: !910, line: 443, baseType: !998, size: 32, align: 32)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4058, file: !910, line: 444, baseType: !998, size: 32, align: 32, offset: 32)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "source_index", scope: !4058, file: !910, line: 445, baseType: !998, size: 32, align: 32, offset: 64)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !4058, file: !910, line: 446, baseType: !2562, size: 64, align: 64, offset: 128)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "encoding_needed", scope: !4058, file: !910, line: 447, baseType: !998, size: 32, align: 32, offset: 192)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !4058, file: !910, line: 448, baseType: !998, size: 32, align: 32, offset: 224)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "sync_ist", scope: !4058, file: !910, line: 451, baseType: !4067, size: 64, align: 64, offset: 256)
!4067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4068, size: 64, align: 64)
!4068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "InputStream", file: !910, line: 295, size: 3392, align: 64, elements: !4069)
!4069 = !{!4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4105, !4125, !4126, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213}
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "file_index", scope: !4068, file: !910, line: 296, baseType: !998, size: 32, align: 32)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !4068, file: !910, line: 297, baseType: !2562, size: 64, align: 64, offset: 64)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !4068, file: !910, line: 298, baseType: !998, size: 32, align: 32, offset: 128)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "user_set_discard", scope: !4068, file: !910, line: 299, baseType: !998, size: 32, align: 32, offset: 160)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "decoding_needed", scope: !4068, file: !910, line: 300, baseType: !998, size: 32, align: 32, offset: 192)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "dec_ctx", scope: !4068, file: !910, line: 304, baseType: !1361, size: 64, align: 64, offset: 256)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "dec", scope: !4068, file: !910, line: 305, baseType: !2861, size: 64, align: 64, offset: 320)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "decoded_frame", scope: !4068, file: !910, line: 306, baseType: !1218, size: 64, align: 64, offset: 384)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "filter_frame", scope: !4068, file: !910, line: 307, baseType: !1218, size: 64, align: 64, offset: 448)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4068, file: !910, line: 309, baseType: !1004, size: 64, align: 64, offset: 512)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "next_dts", scope: !4068, file: !910, line: 312, baseType: !1004, size: 64, align: 64, offset: 576)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !4068, file: !910, line: 313, baseType: !1004, size: 64, align: 64, offset: 640)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "next_pts", scope: !4068, file: !910, line: 315, baseType: !1004, size: 64, align: 64, offset: 704)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !4068, file: !910, line: 316, baseType: !1004, size: 64, align: 64, offset: 768)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "wrap_correction_done", scope: !4068, file: !910, line: 317, baseType: !998, size: 32, align: 32, offset: 832)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "filter_in_rescale_delta_last", scope: !4068, file: !910, line: 319, baseType: !1004, size: 64, align: 64, offset: 896)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "min_pts", scope: !4068, file: !910, line: 321, baseType: !1004, size: 64, align: 64, offset: 960)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "max_pts", scope: !4068, file: !910, line: 322, baseType: !1004, size: 64, align: 64, offset: 1024)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "cfr_next_pts", scope: !4068, file: !910, line: 326, baseType: !1004, size: 64, align: 64, offset: 1088)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !4068, file: !910, line: 328, baseType: !1004, size: 64, align: 64, offset: 1152)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "ts_scale", scope: !4068, file: !910, line: 330, baseType: !1008, size: 64, align: 64, offset: 1216)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "saw_first_ts", scope: !4068, file: !910, line: 331, baseType: !998, size: 32, align: 32, offset: 1280)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "decoder_opts", scope: !4068, file: !910, line: 332, baseType: !1088, size: 64, align: 64, offset: 1344)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !4068, file: !910, line: 333, baseType: !1011, size: 64, align: 32, offset: 1408)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !4068, file: !910, line: 334, baseType: !998, size: 32, align: 32, offset: 1472)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "guess_layout_max", scope: !4068, file: !910, line: 335, baseType: !998, size: 32, align: 32, offset: 1504)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "autorotate", scope: !4068, file: !910, line: 337, baseType: !998, size: 32, align: 32, offset: 1536)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "fix_sub_duration", scope: !4068, file: !910, line: 339, baseType: !998, size: 32, align: 32, offset: 1568)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sub", scope: !4068, file: !910, line: 344, baseType: !4099, size: 320, align: 64, offset: 1600)
!4099 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4068, file: !910, line: 340, size: 320, align: 64, elements: !4100)
!4100 = !{!4101, !4102, !4103}
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "got_output", scope: !4099, file: !910, line: 341, baseType: !998, size: 32, align: 32)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "ret", scope: !4099, file: !910, line: 342, baseType: !998, size: 32, align: 32, offset: 32)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle", scope: !4099, file: !910, line: 343, baseType: !4104, size: 256, align: 64, offset: 64)
!4104 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitle", file: !57, line: 3927, baseType: !1430)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "sub2video", scope: !4068, file: !910, line: 352, baseType: !4106, size: 320, align: 64, offset: 1920)
!4106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sub2video", file: !910, line: 346, size: 320, align: 64, elements: !4107)
!4107 = !{!4108, !4109, !4110, !4122, !4123, !4124}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "last_pts", scope: !4106, file: !910, line: 347, baseType: !1004, size: 64, align: 64)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "end_pts", scope: !4106, file: !910, line: 348, baseType: !1004, size: 64, align: 64, offset: 64)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "sub_queue", scope: !4106, file: !910, line: 349, baseType: !4111, size: 64, align: 64, offset: 128)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64, align: 64)
!4112 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFifoBuffer", file: !4113, line: 35, baseType: !4114)
!4113 = !DIFile(filename: "./libavutil/fifo.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!4114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFifoBuffer", file: !4113, line: 31, size: 320, align: 64, elements: !4115)
!4115 = !{!4116, !4117, !4118, !4119, !4120, !4121}
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4114, file: !4113, line: 32, baseType: !1179, size: 64, align: 64)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "rptr", scope: !4114, file: !4113, line: 33, baseType: !1179, size: 64, align: 64, offset: 64)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "wptr", scope: !4114, file: !4113, line: 33, baseType: !1179, size: 64, align: 64, offset: 128)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4114, file: !4113, line: 33, baseType: !1179, size: 64, align: 64, offset: 192)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "rndx", scope: !4114, file: !4113, line: 34, baseType: !1338, size: 32, align: 32, offset: 256)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "wndx", scope: !4114, file: !4113, line: 34, baseType: !1338, size: 32, align: 32, offset: 288)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !4106, file: !910, line: 350, baseType: !1218, size: 64, align: 64, offset: 192)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !4106, file: !910, line: 351, baseType: !998, size: 32, align: 32, offset: 256)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !4106, file: !910, line: 351, baseType: !998, size: 32, align: 32, offset: 288)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "dr1", scope: !4068, file: !910, line: 354, baseType: !998, size: 32, align: 32, offset: 2240)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !4068, file: !910, line: 358, baseType: !4127, size: 64, align: 64, offset: 2304)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64, align: 64)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64, align: 64)
!4129 = !DIDerivedType(tag: DW_TAG_typedef, name: "InputFilter", file: !910, line: 257, baseType: !4130)
!4130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "InputFilter", file: !910, line: 235, size: 832, align: 64, elements: !4131)
!4131 = !{!4132, !4133, !4134, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188, !4189, !4190}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4130, file: !910, line: 236, baseType: !971, size: 64, align: 64)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "ist", scope: !4130, file: !910, line: 237, baseType: !4067, size: 64, align: 64, offset: 64)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !4130, file: !910, line: 238, baseType: !4135, size: 64, align: 64, offset: 128)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64, align: 64)
!4136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FilterGraph", file: !910, line: 282, size: 512, align: 64, elements: !4137)
!4137 = !{!4138, !4139, !4140, !4143, !4144, !4145, !4146, !4178}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4136, file: !910, line: 283, baseType: !998, size: 32, align: 32)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "graph_desc", scope: !4136, file: !910, line: 284, baseType: !982, size: 64, align: 64, offset: 64)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !4136, file: !910, line: 286, baseType: !4141, size: 64, align: 64, offset: 128)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64, align: 64)
!4142 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterGraph", file: !967, line: 910, baseType: !1126)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "reconfiguration", scope: !4136, file: !910, line: 287, baseType: !998, size: 32, align: 32, offset: 192)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !4136, file: !910, line: 289, baseType: !4127, size: 64, align: 64, offset: 256)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inputs", scope: !4136, file: !910, line: 290, baseType: !998, size: 32, align: 32, offset: 320)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !4136, file: !910, line: 291, baseType: !4147, size: 64, align: 64, offset: 384)
!4147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4148, size: 64, align: 64)
!4148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4149, size: 64, align: 64)
!4149 = !DIDerivedType(tag: DW_TAG_typedef, name: "OutputFilter", file: !910, line: 280, baseType: !4150)
!4150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OutputFilter", file: !910, line: 259, size: 832, align: 64, elements: !4151)
!4151 = !{!4152, !4153, !4155, !4156, !4157, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4177}
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4150, file: !910, line: 260, baseType: !971, size: 64, align: 64)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "ost", scope: !4150, file: !910, line: 261, baseType: !4154, size: 64, align: 64, offset: 64)
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4058, size: 64, align: 64)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !4150, file: !910, line: 262, baseType: !4135, size: 64, align: 64, offset: 128)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4150, file: !910, line: 263, baseType: !1179, size: 64, align: 64, offset: 192)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "out_tmp", scope: !4150, file: !910, line: 266, baseType: !4158, size: 64, align: 64, offset: 256)
!4158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4159, size: 64, align: 64)
!4159 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterInOut", file: !967, line: 1015, baseType: !4160)
!4160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterInOut", file: !967, line: 1003, size: 256, align: 64, elements: !4161)
!4161 = !{!4162, !4163, !4164, !4165}
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4160, file: !967, line: 1005, baseType: !1105, size: 64, align: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "filter_ctx", scope: !4160, file: !967, line: 1008, baseType: !971, size: 64, align: 64, offset: 64)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "pad_idx", scope: !4160, file: !967, line: 1011, baseType: !998, size: 32, align: 32, offset: 128)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4160, file: !967, line: 1014, baseType: !4166, size: 64, align: 64, offset: 192)
!4166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64, align: 64)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4150, file: !910, line: 267, baseType: !46, size: 32, align: 32, offset: 320)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4150, file: !910, line: 270, baseType: !998, size: 32, align: 32, offset: 352)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4150, file: !910, line: 270, baseType: !998, size: 32, align: 32, offset: 384)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate", scope: !4150, file: !910, line: 271, baseType: !1011, size: 64, align: 32, offset: 416)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !4150, file: !910, line: 272, baseType: !998, size: 32, align: 32, offset: 480)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !4150, file: !910, line: 273, baseType: !998, size: 32, align: 32, offset: 512)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !4150, file: !910, line: 274, baseType: !1194, size: 64, align: 64, offset: 576)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "formats", scope: !4150, file: !910, line: 277, baseType: !1150, size: 64, align: 64, offset: 640)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !4150, file: !910, line: 278, baseType: !4176, size: 64, align: 64, offset: 704)
!4176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64, align: 64)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rates", scope: !4150, file: !910, line: 279, baseType: !1150, size: 64, align: 64, offset: 768)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "nb_outputs", scope: !4136, file: !910, line: 292, baseType: !998, size: 32, align: 32, offset: 448)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4130, file: !910, line: 239, baseType: !1179, size: 64, align: 64, offset: 192)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4130, file: !910, line: 240, baseType: !46, size: 32, align: 32, offset: 256)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "frame_queue", scope: !4130, file: !910, line: 242, baseType: !4111, size: 64, align: 64, offset: 320)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !4130, file: !910, line: 245, baseType: !998, size: 32, align: 32, offset: 384)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4130, file: !910, line: 247, baseType: !998, size: 32, align: 32, offset: 416)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4130, file: !910, line: 247, baseType: !998, size: 32, align: 32, offset: 448)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !4130, file: !910, line: 248, baseType: !1011, size: 64, align: 32, offset: 480)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !4130, file: !910, line: 250, baseType: !998, size: 32, align: 32, offset: 544)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !4130, file: !910, line: 251, baseType: !998, size: 32, align: 32, offset: 576)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !4130, file: !910, line: 252, baseType: !1194, size: 64, align: 64, offset: 640)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !4130, file: !910, line: 254, baseType: !1169, size: 64, align: 64, offset: 704)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "eof", scope: !4130, file: !910, line: 256, baseType: !998, size: 32, align: 32, offset: 768)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "nb_filters", scope: !4068, file: !910, line: 359, baseType: !998, size: 32, align: 32, offset: 2368)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "reinit_filters", scope: !4068, file: !910, line: 361, baseType: !998, size: 32, align: 32, offset: 2400)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_id", scope: !4068, file: !910, line: 364, baseType: !909, size: 32, align: 32, offset: 2432)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_device_type", scope: !4068, file: !910, line: 365, baseType: !923, size: 32, align: 32, offset: 2464)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_device", scope: !4068, file: !910, line: 366, baseType: !1105, size: 64, align: 64, offset: 2496)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_output_format", scope: !4068, file: !910, line: 367, baseType: !516, size: 32, align: 32, offset: 2560)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_ctx", scope: !4068, file: !910, line: 370, baseType: !989, size: 64, align: 64, offset: 2624)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_uninit", scope: !4068, file: !910, line: 371, baseType: !1513, size: 64, align: 64, offset: 2688)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_get_buffer", scope: !4068, file: !910, line: 372, baseType: !4200, size: 64, align: 64, offset: 2752)
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 64, align: 64)
!4201 = !DISubroutineType(types: !4202)
!4202 = !{!998, !1361, !1218, !998}
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_retrieve_data", scope: !4068, file: !910, line: 373, baseType: !1509, size: 64, align: 64, offset: 2816)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_pix_fmt", scope: !4068, file: !910, line: 374, baseType: !516, size: 32, align: 32, offset: 2880)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_retrieved_pix_fmt", scope: !4068, file: !910, line: 375, baseType: !516, size: 32, align: 32, offset: 2912)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !4068, file: !910, line: 376, baseType: !1169, size: 64, align: 64, offset: 2944)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !4068, file: !910, line: 380, baseType: !1194, size: 64, align: 64, offset: 3008)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "nb_packets", scope: !4068, file: !910, line: 382, baseType: !1194, size: 64, align: 64, offset: 3072)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "frames_decoded", scope: !4068, file: !910, line: 384, baseType: !1194, size: 64, align: 64, offset: 3136)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "samples_decoded", scope: !4068, file: !910, line: 385, baseType: !1194, size: 64, align: 64, offset: 3200)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "dts_buffer", scope: !4068, file: !910, line: 387, baseType: !2419, size: 64, align: 64, offset: 3264)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "nb_dts_buffer", scope: !4068, file: !910, line: 388, baseType: !998, size: 32, align: 32, offset: 3328)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "got_output", scope: !4068, file: !910, line: 390, baseType: !998, size: 32, align: 32, offset: 3360)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "sync_opts", scope: !4058, file: !910, line: 452, baseType: !1004, size: 64, align: 64, offset: 320)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "first_pts", scope: !4058, file: !910, line: 455, baseType: !1004, size: 64, align: 64, offset: 384)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "last_mux_dts", scope: !4058, file: !910, line: 457, baseType: !1004, size: 64, align: 64, offset: 448)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "mux_timebase", scope: !4058, file: !910, line: 459, baseType: !1011, size: 64, align: 32, offset: 512)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "enc_timebase", scope: !4058, file: !910, line: 460, baseType: !1011, size: 64, align: 32, offset: 576)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bitstream_filters", scope: !4058, file: !910, line: 462, baseType: !998, size: 32, align: 32, offset: 640)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "bsf_ctx", scope: !4058, file: !910, line: 463, baseType: !4221, size: 64, align: 64, offset: 704)
!4221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4222, size: 64, align: 64)
!4222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4223, size: 64, align: 64)
!4223 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !57, line: 5794, baseType: !4224)
!4224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !57, line: 5747, size: 512, align: 64, elements: !4225)
!4225 = !{!4226, !4227, !4251, !4255, !4256, !4257, !4258, !4259}
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !4224, file: !57, line: 5751, baseType: !976, size: 64, align: 64)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4224, file: !57, line: 5756, baseType: !4228, size: 64, align: 64, offset: 64)
!4228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4229, size: 64, align: 64)
!4229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4230)
!4230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !57, line: 5796, size: 512, align: 64, elements: !4231)
!4231 = !{!4232, !4233, !4236, !4237, !4238, !4242, !4246, !4250}
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4230, file: !57, line: 5797, baseType: !982, size: 64, align: 64)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !4230, file: !57, line: 5804, baseType: !4234, size: 64, align: 64, offset: 64)
!4234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4235, size: 64, align: 64)
!4235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !56)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !4230, file: !57, line: 5815, baseType: !976, size: 64, align: 64, offset: 128)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !4230, file: !57, line: 5825, baseType: !998, size: 32, align: 32, offset: 192)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !4230, file: !57, line: 5826, baseType: !4239, size: 64, align: 64, offset: 256)
!4239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4240, size: 64, align: 64)
!4240 = !DISubroutineType(types: !4241)
!4241 = !{!998, !4222}
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4230, file: !57, line: 5827, baseType: !4243, size: 64, align: 64, offset: 320)
!4243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4244, size: 64, align: 64)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{!998, !4222, !1470}
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4230, file: !57, line: 5828, baseType: !4247, size: 64, align: 64, offset: 384)
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64, align: 64)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{null, !4222}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4230, file: !57, line: 5829, baseType: !4247, size: 64, align: 64, offset: 448)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !4224, file: !57, line: 5762, baseType: !4252, size: 64, align: 64, offset: 128)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4253, size: 64, align: 64)
!4253 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !57, line: 5735, baseType: !4254)
!4254 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !57, line: 5735, flags: DIFlagFwdDecl)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !4224, file: !57, line: 5768, baseType: !989, size: 64, align: 64, offset: 192)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !4224, file: !57, line: 5775, baseType: !2586, size: 64, align: 64, offset: 256)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !4224, file: !57, line: 5781, baseType: !2586, size: 64, align: 64, offset: 320)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !4224, file: !57, line: 5787, baseType: !1011, size: 64, align: 32, offset: 384)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !4224, file: !57, line: 5793, baseType: !1011, size: 64, align: 32, offset: 448)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "enc_ctx", scope: !4058, file: !910, line: 465, baseType: !1361, size: 64, align: 64, offset: 768)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "ref_par", scope: !4058, file: !910, line: 466, baseType: !2586, size: 64, align: 64, offset: 832)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "enc", scope: !4058, file: !910, line: 467, baseType: !2861, size: 64, align: 64, offset: 896)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "max_frames", scope: !4058, file: !910, line: 468, baseType: !1004, size: 64, align: 64, offset: 960)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "filtered_frame", scope: !4058, file: !910, line: 469, baseType: !1218, size: 64, align: 64, offset: 1024)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !4058, file: !910, line: 470, baseType: !1218, size: 64, align: 64, offset: 1088)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "last_dropped", scope: !4058, file: !910, line: 471, baseType: !998, size: 32, align: 32, offset: 1152)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "last_nb0_frames", scope: !4058, file: !910, line: 472, baseType: !4268, size: 96, align: 32, offset: 1184)
!4268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !998, size: 96, align: 32, elements: !1880)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_ctx", scope: !4058, file: !910, line: 474, baseType: !989, size: 64, align: 64, offset: 1280)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate", scope: !4058, file: !910, line: 477, baseType: !1011, size: 64, align: 32, offset: 1344)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "is_cfr", scope: !4058, file: !910, line: 478, baseType: !998, size: 32, align: 32, offset: 1408)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "force_fps", scope: !4058, file: !910, line: 479, baseType: !998, size: 32, align: 32, offset: 1440)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !4058, file: !910, line: 480, baseType: !998, size: 32, align: 32, offset: 1472)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "rotate_overridden", scope: !4058, file: !910, line: 481, baseType: !998, size: 32, align: 32, offset: 1504)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "rotate_override_value", scope: !4058, file: !910, line: 482, baseType: !1008, size: 64, align: 64, offset: 1536)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "frame_aspect_ratio", scope: !4058, file: !910, line: 484, baseType: !1011, size: 64, align: 32, offset: 1600)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "forced_kf_ref_pts", scope: !4058, file: !910, line: 487, baseType: !1004, size: 64, align: 64, offset: 1664)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "forced_kf_pts", scope: !4058, file: !910, line: 488, baseType: !2419, size: 64, align: 64, offset: 1728)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "forced_kf_count", scope: !4058, file: !910, line: 489, baseType: !998, size: 32, align: 32, offset: 1792)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "forced_kf_index", scope: !4058, file: !910, line: 490, baseType: !998, size: 32, align: 32, offset: 1824)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "forced_keyframes", scope: !4058, file: !910, line: 491, baseType: !1105, size: 64, align: 64, offset: 1856)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "forced_keyframes_pexpr", scope: !4058, file: !910, line: 492, baseType: !4283, size: 64, align: 64, offset: 1920)
!4283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4284, size: 64, align: 64)
!4284 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVExpr", file: !4285, line: 31, baseType: !4286)
!4285 = !DIFile(filename: "./libavutil/eval.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!4286 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVExpr", file: !4285, line: 31, flags: DIFlagFwdDecl)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "forced_keyframes_expr_const_values", scope: !4058, file: !910, line: 493, baseType: !4288, size: 320, align: 64, offset: 1984)
!4288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 320, align: 64, elements: !2660)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels_map", scope: !4058, file: !910, line: 496, baseType: !1150, size: 64, align: 64, offset: 2304)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels_mapped", scope: !4058, file: !910, line: 497, baseType: !998, size: 32, align: 32, offset: 2368)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "logfile_prefix", scope: !4058, file: !910, line: 499, baseType: !1105, size: 64, align: 64, offset: 2432)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "logfile", scope: !4058, file: !910, line: 500, baseType: !4293, size: 64, align: 64, offset: 2496)
!4293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4294, size: 64, align: 64)
!4294 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4295, line: 48, baseType: !4296)
!4295 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!4296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4297, line: 241, size: 1728, align: 64, elements: !4298)
!4297 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!4298 = !{!4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4319, !4320, !4321, !4322, !4324, !4325, !4326, !4328, !4331, !4333, !4334, !4335, !4336, !4337, !4338, !4339}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4296, file: !4297, line: 242, baseType: !998, size: 32, align: 32)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4296, file: !4297, line: 247, baseType: !1105, size: 64, align: 64, offset: 64)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4296, file: !4297, line: 248, baseType: !1105, size: 64, align: 64, offset: 128)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4296, file: !4297, line: 249, baseType: !1105, size: 64, align: 64, offset: 192)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4296, file: !4297, line: 250, baseType: !1105, size: 64, align: 64, offset: 256)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4296, file: !4297, line: 251, baseType: !1105, size: 64, align: 64, offset: 320)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4296, file: !4297, line: 252, baseType: !1105, size: 64, align: 64, offset: 384)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4296, file: !4297, line: 253, baseType: !1105, size: 64, align: 64, offset: 448)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4296, file: !4297, line: 254, baseType: !1105, size: 64, align: 64, offset: 512)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4296, file: !4297, line: 256, baseType: !1105, size: 64, align: 64, offset: 576)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4296, file: !4297, line: 257, baseType: !1105, size: 64, align: 64, offset: 640)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4296, file: !4297, line: 258, baseType: !1105, size: 64, align: 64, offset: 704)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4296, file: !4297, line: 260, baseType: !4312, size: 64, align: 64, offset: 768)
!4312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4313, size: 64, align: 64)
!4313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !4297, line: 156, size: 192, align: 64, elements: !4314)
!4314 = !{!4315, !4316, !4318}
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !4313, file: !4297, line: 157, baseType: !4312, size: 64, align: 64)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !4313, file: !4297, line: 158, baseType: !4317, size: 64, align: 64, offset: 64)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 64, align: 64)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !4313, file: !4297, line: 162, baseType: !998, size: 32, align: 32, offset: 128)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4296, file: !4297, line: 262, baseType: !4317, size: 64, align: 64, offset: 832)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4296, file: !4297, line: 264, baseType: !998, size: 32, align: 32, offset: 896)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4296, file: !4297, line: 268, baseType: !998, size: 32, align: 32, offset: 928)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4296, file: !4297, line: 270, baseType: !4323, size: 64, align: 64, offset: 960)
!4323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1348, line: 131, baseType: !1006)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4296, file: !4297, line: 274, baseType: !1434, size: 16, align: 16, offset: 1024)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4296, file: !4297, line: 275, baseType: !1286, size: 8, align: 8, offset: 1040)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4296, file: !4297, line: 276, baseType: !4327, size: 8, align: 8, offset: 1048)
!4327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 8, align: 8, elements: !1802)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4296, file: !4297, line: 280, baseType: !4329, size: 64, align: 64, offset: 1088)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64, align: 64)
!4330 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !4297, line: 150, baseType: null)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4296, file: !4297, line: 289, baseType: !4332, size: 64, align: 64, offset: 1152)
!4332 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1348, line: 132, baseType: !1006)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !4296, file: !4297, line: 297, baseType: !989, size: 64, align: 64, offset: 1216)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !4296, file: !4297, line: 298, baseType: !989, size: 64, align: 64, offset: 1280)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !4296, file: !4297, line: 299, baseType: !989, size: 64, align: 64, offset: 1344)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !4296, file: !4297, line: 300, baseType: !989, size: 64, align: 64, offset: 1408)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4296, file: !4297, line: 302, baseType: !1293, size: 64, align: 64, offset: 1472)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4296, file: !4297, line: 303, baseType: !998, size: 32, align: 32, offset: 1536)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4296, file: !4297, line: 305, baseType: !4340, size: 160, align: 8, offset: 1568)
!4340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 160, align: 8, elements: !4341)
!4341 = !{!4342}
!4342 = !DISubrange(count: 20)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4058, file: !910, line: 502, baseType: !4148, size: 64, align: 64, offset: 2560)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "avfilter", scope: !4058, file: !910, line: 503, baseType: !1105, size: 64, align: 64, offset: 2624)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !4058, file: !910, line: 504, baseType: !1105, size: 64, align: 64, offset: 2688)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "filters_script", scope: !4058, file: !910, line: 505, baseType: !1105, size: 64, align: 64, offset: 2752)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "encoder_opts", scope: !4058, file: !910, line: 507, baseType: !1088, size: 64, align: 64, offset: 2816)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "sws_dict", scope: !4058, file: !910, line: 508, baseType: !1088, size: 64, align: 64, offset: 2880)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "swr_opts", scope: !4058, file: !910, line: 509, baseType: !1088, size: 64, align: 64, offset: 2944)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "resample_opts", scope: !4058, file: !910, line: 510, baseType: !1088, size: 64, align: 64, offset: 3008)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "apad", scope: !4058, file: !910, line: 511, baseType: !1105, size: 64, align: 64, offset: 3072)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "finished", scope: !4058, file: !910, line: 512, baseType: !4353, size: 32, align: 32, offset: 3136)
!4353 = !DIDerivedType(tag: DW_TAG_typedef, name: "OSTFinished", file: !910, line: 440, baseType: !1317)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "unavailable", scope: !4058, file: !910, line: 513, baseType: !998, size: 32, align: 32, offset: 3168)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "stream_copy", scope: !4058, file: !910, line: 514, baseType: !998, size: 32, align: 32, offset: 3200)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !4058, file: !910, line: 519, baseType: !998, size: 32, align: 32, offset: 3232)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "inputs_done", scope: !4058, file: !910, line: 521, baseType: !998, size: 32, align: 32, offset: 3264)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "attachment_filename", scope: !4058, file: !910, line: 523, baseType: !982, size: 64, align: 64, offset: 3328)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "copy_initial_nonkeyframes", scope: !4058, file: !910, line: 524, baseType: !998, size: 32, align: 32, offset: 3392)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "copy_prior_start", scope: !4058, file: !910, line: 525, baseType: !998, size: 32, align: 32, offset: 3424)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "disposition", scope: !4058, file: !910, line: 526, baseType: !1105, size: 64, align: 64, offset: 3456)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "keep_pix_fmt", scope: !4058, file: !910, line: 528, baseType: !998, size: 32, align: 32, offset: 3520)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !4058, file: !910, line: 532, baseType: !1194, size: 64, align: 64, offset: 3584)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "packets_written", scope: !4058, file: !910, line: 534, baseType: !1194, size: 64, align: 64, offset: 3648)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "frames_encoded", scope: !4058, file: !910, line: 536, baseType: !1194, size: 64, align: 64, offset: 3712)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "samples_encoded", scope: !4058, file: !910, line: 537, baseType: !1194, size: 64, align: 64, offset: 3776)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !4058, file: !910, line: 540, baseType: !998, size: 32, align: 32, offset: 3840)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "max_muxing_queue_size", scope: !4058, file: !910, line: 542, baseType: !998, size: 32, align: 32, offset: 3872)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "muxing_queue", scope: !4058, file: !910, line: 545, baseType: !4111, size: 64, align: 64, offset: 3904)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !4058, file: !910, line: 548, baseType: !998, size: 32, align: 32, offset: 3968)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !4058, file: !910, line: 551, baseType: !2695, size: 256, align: 64, offset: 4032)
!4372 = !DILocation(line: 2113, column: 19, scope: !4028)
!4373 = !DILocalVariable(name: "ist", scope: !4028, file: !919, line: 2114, type: !4374)
!4374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4375, size: 64, align: 64)
!4375 = !DIDerivedType(tag: DW_TAG_typedef, name: "InputStream", file: !910, line: 391, baseType: !4068)
!4376 = !DILocation(line: 2114, column: 18, scope: !4028)
!4377 = !DILocalVariable(name: "unused_opts", scope: !4028, file: !919, line: 2115, type: !1088)
!4378 = !DILocation(line: 2115, column: 19, scope: !4028)
!4379 = !DILocalVariable(name: "e", scope: !4028, file: !919, line: 2116, type: !2937)
!4380 = !DILocation(line: 2116, column: 24, scope: !4028)
!4381 = !DILocalVariable(name: "format_flags", scope: !4028, file: !919, line: 2117, type: !998)
!4382 = !DILocation(line: 2117, column: 9, scope: !4028)
!4383 = !DILocation(line: 2119, column: 9, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2119, column: 9)
!4385 = !DILocation(line: 2119, column: 12, scope: !4384)
!4386 = !DILocation(line: 2119, column: 22, scope: !4384)
!4387 = !DILocation(line: 2119, column: 34, scope: !4384)
!4388 = !DILocation(line: 2119, column: 37, scope: !4389)
!4389 = !DILexicalBlockFile(scope: !4384, file: !919, discriminator: 1)
!4390 = !DILocation(line: 2119, column: 40, scope: !4389)
!4391 = !DILocation(line: 2119, column: 55, scope: !4389)
!4392 = !DILocation(line: 2119, column: 9, scope: !4389)
!4393 = !DILocation(line: 2120, column: 9, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4384, file: !919, line: 2119, column: 69)
!4395 = !DILocation(line: 2120, column: 12, scope: !4394)
!4396 = !DILocation(line: 2120, column: 22, scope: !4394)
!4397 = !DILocation(line: 2121, column: 9, scope: !4394)
!4398 = !DILocation(line: 2122, column: 5, scope: !4394)
!4399 = !DILocation(line: 2124, column: 9, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2124, column: 9)
!4401 = !DILocation(line: 2124, column: 12, scope: !4400)
!4402 = !DILocation(line: 2124, column: 22, scope: !4400)
!4403 = !DILocation(line: 2124, column: 34, scope: !4400)
!4404 = !DILocation(line: 2124, column: 37, scope: !4405)
!4405 = !DILexicalBlockFile(scope: !4400, file: !919, discriminator: 1)
!4406 = !DILocation(line: 2124, column: 40, scope: !4405)
!4407 = !DILocation(line: 2124, column: 55, scope: !4405)
!4408 = !DILocation(line: 2124, column: 9, scope: !4405)
!4409 = !DILocalVariable(name: "start_time", scope: !4410, file: !919, line: 2125, type: !1004)
!4410 = distinct !DILexicalBlock(scope: !4400, file: !919, line: 2124, column: 69)
!4411 = !DILocation(line: 2125, column: 17, scope: !4410)
!4412 = !DILocation(line: 2125, column: 30, scope: !4410)
!4413 = !DILocation(line: 2125, column: 33, scope: !4410)
!4414 = !DILocation(line: 2125, column: 44, scope: !4410)
!4415 = !DILocation(line: 2125, column: 30, scope: !4416)
!4416 = !DILexicalBlockFile(scope: !4410, file: !919, discriminator: 1)
!4417 = !DILocation(line: 2125, column: 85, scope: !4418)
!4418 = !DILexicalBlockFile(scope: !4410, file: !919, discriminator: 2)
!4419 = !DILocation(line: 2125, column: 88, scope: !4418)
!4420 = !DILocation(line: 2125, column: 30, scope: !4418)
!4421 = !DILocation(line: 2125, column: 30, scope: !4422)
!4422 = !DILexicalBlockFile(scope: !4410, file: !919, discriminator: 3)
!4423 = !DILocation(line: 2125, column: 17, scope: !4422)
!4424 = !DILocation(line: 2126, column: 13, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4410, file: !919, line: 2126, column: 13)
!4426 = !DILocation(line: 2126, column: 16, scope: !4425)
!4427 = !DILocation(line: 2126, column: 29, scope: !4425)
!4428 = !DILocation(line: 2126, column: 26, scope: !4425)
!4429 = !DILocation(line: 2126, column: 13, scope: !4410)
!4430 = !DILocation(line: 2127, column: 13, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4425, file: !919, line: 2126, column: 41)
!4432 = !DILocation(line: 2128, column: 13, scope: !4431)
!4433 = !DILocation(line: 2130, column: 33, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4425, file: !919, line: 2129, column: 16)
!4435 = !DILocation(line: 2130, column: 36, scope: !4434)
!4436 = !DILocation(line: 2130, column: 48, scope: !4434)
!4437 = !DILocation(line: 2130, column: 46, scope: !4434)
!4438 = !DILocation(line: 2130, column: 13, scope: !4434)
!4439 = !DILocation(line: 2130, column: 16, scope: !4434)
!4440 = !DILocation(line: 2130, column: 31, scope: !4434)
!4441 = !DILocation(line: 2132, column: 5, scope: !4410)
!4442 = !DILocation(line: 2134, column: 31, scope: !4028)
!4443 = !DILocation(line: 2134, column: 86, scope: !4028)
!4444 = !DILocation(line: 2134, column: 102, scope: !4028)
!4445 = !DILocation(line: 2134, column: 20, scope: !4028)
!4446 = !DILocation(line: 2134, column: 18, scope: !4028)
!4447 = !DILocation(line: 2135, column: 10, scope: !4028)
!4448 = !DILocation(line: 2135, column: 8, scope: !4028)
!4449 = !DILocation(line: 2136, column: 10, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2136, column: 9)
!4451 = !DILocation(line: 2136, column: 9, scope: !4028)
!4452 = !DILocation(line: 2137, column: 9, scope: !4450)
!4453 = !DILocation(line: 2138, column: 41, scope: !4028)
!4454 = !DILocation(line: 2138, column: 18, scope: !4028)
!4455 = !DILocation(line: 2138, column: 34, scope: !4028)
!4456 = !DILocation(line: 2138, column: 5, scope: !4028)
!4457 = !DILocation(line: 2138, column: 39, scope: !4028)
!4458 = !DILocation(line: 2140, column: 21, scope: !4028)
!4459 = !DILocation(line: 2140, column: 5, scope: !4028)
!4460 = !DILocation(line: 2140, column: 9, scope: !4028)
!4461 = !DILocation(line: 2140, column: 19, scope: !4028)
!4462 = !DILocation(line: 2141, column: 26, scope: !4028)
!4463 = !DILocation(line: 2141, column: 29, scope: !4028)
!4464 = !DILocation(line: 2141, column: 5, scope: !4028)
!4465 = !DILocation(line: 2141, column: 9, scope: !4028)
!4466 = !DILocation(line: 2141, column: 24, scope: !4028)
!4467 = !DILocation(line: 2142, column: 22, scope: !4028)
!4468 = !DILocation(line: 2142, column: 25, scope: !4028)
!4469 = !DILocation(line: 2142, column: 5, scope: !4028)
!4470 = !DILocation(line: 2142, column: 9, scope: !4028)
!4471 = !DILocation(line: 2142, column: 20, scope: !4028)
!4472 = !DILocation(line: 2143, column: 26, scope: !4028)
!4473 = !DILocation(line: 2143, column: 29, scope: !4028)
!4474 = !DILocation(line: 2143, column: 5, scope: !4028)
!4475 = !DILocation(line: 2143, column: 9, scope: !4028)
!4476 = !DILocation(line: 2143, column: 24, scope: !4028)
!4477 = !DILocation(line: 2144, column: 20, scope: !4028)
!4478 = !DILocation(line: 2144, column: 23, scope: !4028)
!4479 = !DILocation(line: 2144, column: 5, scope: !4028)
!4480 = !DILocation(line: 2144, column: 9, scope: !4028)
!4481 = !DILocation(line: 2144, column: 18, scope: !4028)
!4482 = !DILocation(line: 2145, column: 19, scope: !4028)
!4483 = !DILocation(line: 2145, column: 23, scope: !4028)
!4484 = !DILocation(line: 2145, column: 29, scope: !4028)
!4485 = !DILocation(line: 2145, column: 32, scope: !4028)
!4486 = !DILocation(line: 2145, column: 35, scope: !4028)
!4487 = !DILocation(line: 2145, column: 5, scope: !4028)
!4488 = !DILocation(line: 2147, column: 17, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2147, column: 9)
!4490 = !DILocation(line: 2147, column: 10, scope: !4489)
!4491 = !DILocation(line: 2147, column: 9, scope: !4028)
!4492 = !DILocation(line: 2148, column: 18, scope: !4489)
!4493 = !DILocation(line: 2148, column: 9, scope: !4489)
!4494 = !DILocation(line: 2150, column: 52, scope: !4028)
!4495 = !DILocation(line: 2150, column: 55, scope: !4028)
!4496 = !DILocation(line: 2150, column: 63, scope: !4028)
!4497 = !DILocation(line: 2150, column: 11, scope: !4028)
!4498 = !DILocation(line: 2150, column: 9, scope: !4028)
!4499 = !DILocation(line: 2151, column: 10, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2151, column: 9)
!4501 = !DILocation(line: 2151, column: 9, scope: !4028)
!4502 = !DILocation(line: 2152, column: 21, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4500, file: !919, line: 2151, column: 14)
!4504 = !DILocation(line: 2152, column: 31, scope: !4503)
!4505 = !DILocation(line: 2152, column: 9, scope: !4503)
!4506 = !DILocation(line: 2153, column: 9, scope: !4503)
!4507 = !DILocation(line: 2156, column: 15, scope: !4028)
!4508 = !DILocation(line: 2156, column: 5, scope: !4028)
!4509 = !DILocation(line: 2156, column: 9, scope: !4028)
!4510 = !DILocation(line: 2156, column: 13, scope: !4028)
!4511 = !DILocation(line: 2157, column: 9, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2157, column: 9)
!4513 = !DILocation(line: 2157, column: 12, scope: !4512)
!4514 = !DILocation(line: 2157, column: 27, scope: !4512)
!4515 = !DILocation(line: 2157, column: 9, scope: !4028)
!4516 = !DILocation(line: 2158, column: 24, scope: !4512)
!4517 = !DILocation(line: 2158, column: 27, scope: !4512)
!4518 = !DILocation(line: 2158, column: 9, scope: !4512)
!4519 = !DILocation(line: 2158, column: 13, scope: !4512)
!4520 = !DILocation(line: 2158, column: 22, scope: !4512)
!4521 = !DILocation(line: 2160, column: 5, scope: !4028)
!4522 = !DILocation(line: 2160, column: 9, scope: !4028)
!4523 = !DILocation(line: 2160, column: 30, scope: !4028)
!4524 = !DILocation(line: 2162, column: 21, scope: !4028)
!4525 = !DILocation(line: 2162, column: 24, scope: !4028)
!4526 = !DILocation(line: 2162, column: 27, scope: !4028)
!4527 = !DILocation(line: 2162, column: 9, scope: !4028)
!4528 = !DILocation(line: 2162, column: 7, scope: !4028)
!4529 = !DILocation(line: 2163, column: 9, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2163, column: 9)
!4531 = !DILocation(line: 2163, column: 9, scope: !4028)
!4532 = !DILocalVariable(name: "o", scope: !4533, file: !919, line: 2164, type: !3869)
!4533 = distinct !DILexicalBlock(scope: !4530, file: !919, line: 2163, column: 12)
!4534 = !DILocation(line: 2164, column: 25, scope: !4533)
!4535 = !DILocation(line: 2164, column: 41, scope: !4533)
!4536 = !DILocation(line: 2164, column: 29, scope: !4533)
!4537 = !DILocation(line: 2165, column: 27, scope: !4533)
!4538 = !DILocation(line: 2165, column: 31, scope: !4533)
!4539 = !DILocation(line: 2165, column: 34, scope: !4533)
!4540 = !DILocation(line: 2165, column: 37, scope: !4533)
!4541 = !DILocation(line: 2165, column: 9, scope: !4533)
!4542 = !DILocation(line: 2166, column: 5, scope: !4533)
!4543 = !DILocation(line: 2167, column: 9, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2167, column: 9)
!4545 = !DILocation(line: 2167, column: 12, scope: !4544)
!4546 = !DILocation(line: 2167, column: 9, scope: !4028)
!4547 = !DILocation(line: 2168, column: 22, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4544, file: !919, line: 2167, column: 22)
!4549 = !DILocation(line: 2169, column: 9, scope: !4548)
!4550 = !DILocation(line: 2169, column: 13, scope: !4548)
!4551 = !DILocation(line: 2169, column: 19, scope: !4548)
!4552 = !DILocation(line: 2170, column: 5, scope: !4548)
!4553 = !DILocation(line: 2173, column: 12, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2173, column: 5)
!4555 = !DILocation(line: 2173, column: 10, scope: !4554)
!4556 = !DILocation(line: 2173, column: 17, scope: !4557)
!4557 = !DILexicalBlockFile(scope: !4558, file: !919, discriminator: 1)
!4558 = distinct !DILexicalBlock(scope: !4554, file: !919, line: 2173, column: 5)
!4559 = !DILocation(line: 2173, column: 21, scope: !4557)
!4560 = !DILocation(line: 2173, column: 19, scope: !4557)
!4561 = !DILocation(line: 2173, column: 5, scope: !4557)
!4562 = !DILocalVariable(name: "fg", scope: !4563, file: !919, line: 2174, type: !4564)
!4563 = distinct !DILexicalBlock(scope: !4558, file: !919, line: 2173, column: 43)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64, align: 64)
!4565 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterGraph", file: !910, line: 293, baseType: !4136)
!4566 = !DILocation(line: 2174, column: 22, scope: !4563)
!4567 = !DILocation(line: 2174, column: 40, scope: !4563)
!4568 = !DILocation(line: 2174, column: 27, scope: !4563)
!4569 = !DILocation(line: 2175, column: 16, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4563, file: !919, line: 2175, column: 9)
!4571 = !DILocation(line: 2175, column: 14, scope: !4570)
!4572 = !DILocation(line: 2175, column: 21, scope: !4573)
!4573 = !DILexicalBlockFile(scope: !4574, file: !919, discriminator: 1)
!4574 = distinct !DILexicalBlock(scope: !4570, file: !919, line: 2175, column: 9)
!4575 = !DILocation(line: 2175, column: 25, scope: !4573)
!4576 = !DILocation(line: 2175, column: 29, scope: !4573)
!4577 = !DILocation(line: 2175, column: 23, scope: !4573)
!4578 = !DILocation(line: 2175, column: 9, scope: !4573)
!4579 = !DILocalVariable(name: "ofilter", scope: !4580, file: !919, line: 2176, type: !4148)
!4580 = distinct !DILexicalBlock(scope: !4574, file: !919, line: 2175, column: 46)
!4581 = !DILocation(line: 2176, column: 27, scope: !4580)
!4582 = !DILocation(line: 2176, column: 49, scope: !4580)
!4583 = !DILocation(line: 2176, column: 37, scope: !4580)
!4584 = !DILocation(line: 2176, column: 41, scope: !4580)
!4585 = !DILocation(line: 2178, column: 18, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4580, file: !919, line: 2178, column: 17)
!4587 = !DILocation(line: 2178, column: 27, scope: !4586)
!4588 = !DILocation(line: 2178, column: 35, scope: !4586)
!4589 = !DILocation(line: 2178, column: 38, scope: !4590)
!4590 = !DILexicalBlockFile(scope: !4586, file: !919, discriminator: 1)
!4591 = !DILocation(line: 2178, column: 47, scope: !4590)
!4592 = !DILocation(line: 2178, column: 56, scope: !4590)
!4593 = !DILocation(line: 2178, column: 17, scope: !4590)
!4594 = !DILocation(line: 2179, column: 17, scope: !4586)
!4595 = !DILocation(line: 2181, column: 21, scope: !4580)
!4596 = !DILocation(line: 2181, column: 30, scope: !4580)
!4597 = !DILocation(line: 2181, column: 13, scope: !4580)
!4598 = !DILocation(line: 2182, column: 38, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4580, file: !919, line: 2181, column: 36)
!4600 = !DILocation(line: 2182, column: 41, scope: !4599)
!4601 = !DILocation(line: 2182, column: 55, scope: !4599)
!4602 = !DILocation(line: 2182, column: 60, scope: !4599)
!4603 = !DILocation(line: 2183, column: 38, scope: !4599)
!4604 = !DILocation(line: 2183, column: 41, scope: !4599)
!4605 = !DILocation(line: 2183, column: 55, scope: !4599)
!4606 = !DILocation(line: 2183, column: 60, scope: !4599)
!4607 = !DILocation(line: 2184, column: 41, scope: !4599)
!4608 = !DILocation(line: 2184, column: 44, scope: !4599)
!4609 = !DILocation(line: 2184, column: 61, scope: !4599)
!4610 = !DILocation(line: 2184, column: 66, scope: !4599)
!4611 = !DILocation(line: 2186, column: 32, scope: !4580)
!4612 = !DILocation(line: 2186, column: 41, scope: !4580)
!4613 = !DILocation(line: 2186, column: 44, scope: !4580)
!4614 = !DILocation(line: 2186, column: 13, scope: !4580)
!4615 = !DILocation(line: 2187, column: 9, scope: !4580)
!4616 = !DILocation(line: 2175, column: 42, scope: !4617)
!4617 = !DILexicalBlockFile(scope: !4574, file: !919, discriminator: 2)
!4618 = !DILocation(line: 2175, column: 9, scope: !4617)
!4619 = distinct !{!4619, !4620}
!4620 = !DILocation(line: 2175, column: 9, scope: !4563)
!4621 = !DILocation(line: 2188, column: 5, scope: !4563)
!4622 = !DILocation(line: 2173, column: 39, scope: !4623)
!4623 = !DILexicalBlockFile(scope: !4558, file: !919, discriminator: 2)
!4624 = !DILocation(line: 2173, column: 5, scope: !4623)
!4625 = distinct !{!4625, !4626}
!4626 = !DILocation(line: 2173, column: 5, scope: !4028)
!4627 = !DILocation(line: 2190, column: 10, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2190, column: 9)
!4629 = !DILocation(line: 2190, column: 13, scope: !4628)
!4630 = !DILocation(line: 2190, column: 9, scope: !4028)
!4631 = !DILocalVariable(name: "subtitle_codec_name", scope: !4632, file: !919, line: 2191, type: !1105)
!4632 = distinct !DILexicalBlock(scope: !4628, file: !919, line: 2190, column: 29)
!4633 = !DILocation(line: 2191, column: 15, scope: !4632)
!4634 = !DILocation(line: 2195, column: 14, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4632, file: !919, line: 2195, column: 13)
!4636 = !DILocation(line: 2195, column: 17, scope: !4635)
!4637 = !DILocation(line: 2195, column: 31, scope: !4635)
!4638 = !DILocation(line: 2195, column: 49, scope: !4639)
!4639 = !DILexicalBlockFile(scope: !4635, file: !919, discriminator: 1)
!4640 = !DILocation(line: 2195, column: 53, scope: !4639)
!4641 = !DILocation(line: 2195, column: 67, scope: !4639)
!4642 = !DILocation(line: 2195, column: 34, scope: !4639)
!4643 = !DILocation(line: 2195, column: 103, scope: !4639)
!4644 = !DILocation(line: 2195, column: 13, scope: !4639)
!4645 = !DILocalVariable(name: "area", scope: !4646, file: !919, line: 2196, type: !998)
!4646 = distinct !DILexicalBlock(scope: !4635, file: !919, line: 2195, column: 124)
!4647 = !DILocation(line: 2196, column: 17, scope: !4646)
!4648 = !DILocalVariable(name: "idx", scope: !4646, file: !919, line: 2196, type: !998)
!4649 = !DILocation(line: 2196, column: 27, scope: !4646)
!4650 = !DILocalVariable(name: "qcr", scope: !4646, file: !919, line: 2197, type: !998)
!4651 = !DILocation(line: 2197, column: 17, scope: !4646)
!4652 = !DILocation(line: 2197, column: 44, scope: !4646)
!4653 = !DILocation(line: 2197, column: 48, scope: !4646)
!4654 = !DILocation(line: 2197, column: 57, scope: !4646)
!4655 = !DILocation(line: 2197, column: 61, scope: !4646)
!4656 = !DILocation(line: 2197, column: 70, scope: !4646)
!4657 = !DILocation(line: 2197, column: 23, scope: !4646)
!4658 = !DILocation(line: 2198, column: 20, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4646, file: !919, line: 2198, column: 13)
!4660 = !DILocation(line: 2198, column: 18, scope: !4659)
!4661 = !DILocation(line: 2198, column: 25, scope: !4662)
!4662 = !DILexicalBlockFile(scope: !4663, file: !919, discriminator: 1)
!4663 = distinct !DILexicalBlock(scope: !4659, file: !919, line: 2198, column: 13)
!4664 = !DILocation(line: 2198, column: 29, scope: !4662)
!4665 = !DILocation(line: 2198, column: 27, scope: !4662)
!4666 = !DILocation(line: 2198, column: 13, scope: !4662)
!4667 = !DILocalVariable(name: "new_area", scope: !4668, file: !919, line: 2199, type: !998)
!4668 = distinct !DILexicalBlock(scope: !4663, file: !919, line: 2198, column: 52)
!4669 = !DILocation(line: 2199, column: 21, scope: !4668)
!4670 = !DILocation(line: 2200, column: 37, scope: !4668)
!4671 = !DILocation(line: 2200, column: 23, scope: !4668)
!4672 = !DILocation(line: 2200, column: 21, scope: !4668)
!4673 = !DILocation(line: 2201, column: 28, scope: !4668)
!4674 = !DILocation(line: 2201, column: 33, scope: !4668)
!4675 = !DILocation(line: 2201, column: 37, scope: !4668)
!4676 = !DILocation(line: 2201, column: 47, scope: !4668)
!4677 = !DILocation(line: 2201, column: 55, scope: !4668)
!4678 = !DILocation(line: 2201, column: 60, scope: !4668)
!4679 = !DILocation(line: 2201, column: 64, scope: !4668)
!4680 = !DILocation(line: 2201, column: 74, scope: !4668)
!4681 = !DILocation(line: 2201, column: 53, scope: !4668)
!4682 = !DILocation(line: 2201, column: 95, scope: !4668)
!4683 = !DILocation(line: 2201, column: 100, scope: !4668)
!4684 = !DILocation(line: 2201, column: 104, scope: !4668)
!4685 = !DILocation(line: 2201, column: 94, scope: !4668)
!4686 = !DILocation(line: 2201, column: 93, scope: !4668)
!4687 = !DILocation(line: 2201, column: 92, scope: !4668)
!4688 = !DILocation(line: 2201, column: 81, scope: !4668)
!4689 = !DILocation(line: 2201, column: 26, scope: !4668)
!4690 = !DILocation(line: 2202, column: 21, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4668, file: !919, line: 2202, column: 21)
!4692 = !DILocation(line: 2202, column: 26, scope: !4691)
!4693 = !DILocation(line: 2202, column: 43, scope: !4691)
!4694 = !DILocation(line: 2202, column: 21, scope: !4668)
!4695 = !DILocation(line: 2203, column: 21, scope: !4691)
!4696 = !DILocation(line: 2204, column: 21, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4668, file: !919, line: 2204, column: 20)
!4698 = !DILocation(line: 2204, column: 24, scope: !4697)
!4699 = !DILocation(line: 2204, column: 92, scope: !4697)
!4700 = !DILocation(line: 2204, column: 96, scope: !4701)
!4701 = !DILexicalBlockFile(scope: !4697, file: !919, discriminator: 1)
!4702 = !DILocation(line: 2204, column: 101, scope: !4701)
!4703 = !DILocation(line: 2204, column: 105, scope: !4701)
!4704 = !DILocation(line: 2204, column: 117, scope: !4701)
!4705 = !DILocation(line: 2204, column: 20, scope: !4701)
!4706 = !DILocation(line: 2205, column: 30, scope: !4697)
!4707 = !DILocation(line: 2205, column: 21, scope: !4697)
!4708 = !DILocation(line: 2206, column: 21, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4668, file: !919, line: 2206, column: 21)
!4710 = !DILocation(line: 2206, column: 26, scope: !4709)
!4711 = !DILocation(line: 2206, column: 30, scope: !4709)
!4712 = !DILocation(line: 2206, column: 40, scope: !4709)
!4713 = !DILocation(line: 2206, column: 51, scope: !4709)
!4714 = !DILocation(line: 2206, column: 73, scope: !4709)
!4715 = !DILocation(line: 2207, column: 21, scope: !4709)
!4716 = !DILocation(line: 2207, column: 32, scope: !4709)
!4717 = !DILocation(line: 2207, column: 30, scope: !4709)
!4718 = !DILocation(line: 2206, column: 21, scope: !4719)
!4719 = !DILexicalBlockFile(scope: !4668, file: !919, discriminator: 1)
!4720 = !DILocation(line: 2208, column: 25, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !919, line: 2208, column: 24)
!4722 = distinct !DILexicalBlock(scope: !4709, file: !919, line: 2207, column: 38)
!4723 = !DILocation(line: 2208, column: 28, scope: !4721)
!4724 = !DILocation(line: 2208, column: 96, scope: !4721)
!4725 = !DILocation(line: 2208, column: 101, scope: !4726)
!4726 = !DILexicalBlockFile(scope: !4721, file: !919, discriminator: 1)
!4727 = !DILocation(line: 2208, column: 106, scope: !4726)
!4728 = !DILocation(line: 2208, column: 110, scope: !4726)
!4729 = !DILocation(line: 2208, column: 122, scope: !4726)
!4730 = !DILocation(line: 2208, column: 24, scope: !4726)
!4731 = !DILocation(line: 2209, column: 25, scope: !4721)
!4732 = !DILocation(line: 2210, column: 28, scope: !4722)
!4733 = !DILocation(line: 2210, column: 26, scope: !4722)
!4734 = !DILocation(line: 2211, column: 27, scope: !4722)
!4735 = !DILocation(line: 2211, column: 25, scope: !4722)
!4736 = !DILocation(line: 2212, column: 17, scope: !4722)
!4737 = !DILocation(line: 2213, column: 13, scope: !4668)
!4738 = !DILocation(line: 2198, column: 48, scope: !4739)
!4739 = !DILexicalBlockFile(scope: !4663, file: !919, discriminator: 2)
!4740 = !DILocation(line: 2198, column: 13, scope: !4739)
!4741 = distinct !{!4741, !4742}
!4742 = !DILocation(line: 2198, column: 13, scope: !4646)
!4743 = !DILocation(line: 2214, column: 17, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4646, file: !919, line: 2214, column: 17)
!4745 = !DILocation(line: 2214, column: 21, scope: !4744)
!4746 = !DILocation(line: 2214, column: 17, scope: !4646)
!4747 = !DILocation(line: 2215, column: 34, scope: !4744)
!4748 = !DILocation(line: 2215, column: 37, scope: !4744)
!4749 = !DILocation(line: 2215, column: 41, scope: !4744)
!4750 = !DILocation(line: 2215, column: 17, scope: !4744)
!4751 = !DILocation(line: 2216, column: 9, scope: !4646)
!4752 = !DILocation(line: 2219, column: 14, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4632, file: !919, line: 2219, column: 13)
!4754 = !DILocation(line: 2219, column: 17, scope: !4753)
!4755 = !DILocation(line: 2219, column: 31, scope: !4753)
!4756 = !DILocation(line: 2219, column: 49, scope: !4757)
!4757 = !DILexicalBlockFile(scope: !4753, file: !919, discriminator: 1)
!4758 = !DILocation(line: 2219, column: 53, scope: !4757)
!4759 = !DILocation(line: 2219, column: 67, scope: !4757)
!4760 = !DILocation(line: 2219, column: 34, scope: !4757)
!4761 = !DILocation(line: 2219, column: 103, scope: !4757)
!4762 = !DILocation(line: 2219, column: 13, scope: !4757)
!4763 = !DILocalVariable(name: "best_score", scope: !4764, file: !919, line: 2220, type: !998)
!4764 = distinct !DILexicalBlock(scope: !4753, file: !919, line: 2219, column: 124)
!4765 = !DILocation(line: 2220, column: 17, scope: !4764)
!4766 = !DILocalVariable(name: "idx", scope: !4764, file: !919, line: 2220, type: !998)
!4767 = !DILocation(line: 2220, column: 33, scope: !4764)
!4768 = !DILocation(line: 2221, column: 20, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4764, file: !919, line: 2221, column: 13)
!4770 = !DILocation(line: 2221, column: 18, scope: !4769)
!4771 = !DILocation(line: 2221, column: 25, scope: !4772)
!4772 = !DILexicalBlockFile(scope: !4773, file: !919, discriminator: 1)
!4773 = distinct !DILexicalBlock(scope: !4769, file: !919, line: 2221, column: 13)
!4774 = !DILocation(line: 2221, column: 29, scope: !4772)
!4775 = !DILocation(line: 2221, column: 27, scope: !4772)
!4776 = !DILocation(line: 2221, column: 13, scope: !4772)
!4777 = !DILocalVariable(name: "score", scope: !4778, file: !919, line: 2222, type: !998)
!4778 = distinct !DILexicalBlock(scope: !4773, file: !919, line: 2221, column: 52)
!4779 = !DILocation(line: 2222, column: 21, scope: !4778)
!4780 = !DILocation(line: 2223, column: 37, scope: !4778)
!4781 = !DILocation(line: 2223, column: 23, scope: !4778)
!4782 = !DILocation(line: 2223, column: 21, scope: !4778)
!4783 = !DILocation(line: 2224, column: 25, scope: !4778)
!4784 = !DILocation(line: 2224, column: 30, scope: !4778)
!4785 = !DILocation(line: 2224, column: 34, scope: !4778)
!4786 = !DILocation(line: 2224, column: 44, scope: !4778)
!4787 = !DILocation(line: 2224, column: 67, scope: !4778)
!4788 = !DILocation(line: 2224, column: 72, scope: !4778)
!4789 = !DILocation(line: 2224, column: 76, scope: !4778)
!4790 = !DILocation(line: 2224, column: 66, scope: !4778)
!4791 = !DILocation(line: 2224, column: 65, scope: !4778)
!4792 = !DILocation(line: 2224, column: 64, scope: !4778)
!4793 = !DILocation(line: 2224, column: 53, scope: !4778)
!4794 = !DILocation(line: 2224, column: 23, scope: !4778)
!4795 = !DILocation(line: 2225, column: 21, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4778, file: !919, line: 2225, column: 21)
!4797 = !DILocation(line: 2225, column: 26, scope: !4796)
!4798 = !DILocation(line: 2225, column: 43, scope: !4796)
!4799 = !DILocation(line: 2225, column: 21, scope: !4778)
!4800 = !DILocation(line: 2226, column: 21, scope: !4796)
!4801 = !DILocation(line: 2227, column: 21, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4778, file: !919, line: 2227, column: 21)
!4803 = !DILocation(line: 2227, column: 26, scope: !4802)
!4804 = !DILocation(line: 2227, column: 30, scope: !4802)
!4805 = !DILocation(line: 2227, column: 40, scope: !4802)
!4806 = !DILocation(line: 2227, column: 51, scope: !4802)
!4807 = !DILocation(line: 2227, column: 73, scope: !4802)
!4808 = !DILocation(line: 2228, column: 21, scope: !4802)
!4809 = !DILocation(line: 2228, column: 29, scope: !4802)
!4810 = !DILocation(line: 2228, column: 27, scope: !4802)
!4811 = !DILocation(line: 2227, column: 21, scope: !4812)
!4812 = !DILexicalBlockFile(scope: !4778, file: !919, discriminator: 1)
!4813 = !DILocation(line: 2229, column: 34, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4802, file: !919, line: 2228, column: 41)
!4815 = !DILocation(line: 2229, column: 32, scope: !4814)
!4816 = !DILocation(line: 2230, column: 27, scope: !4814)
!4817 = !DILocation(line: 2230, column: 25, scope: !4814)
!4818 = !DILocation(line: 2231, column: 17, scope: !4814)
!4819 = !DILocation(line: 2232, column: 13, scope: !4778)
!4820 = !DILocation(line: 2221, column: 48, scope: !4821)
!4821 = !DILexicalBlockFile(scope: !4773, file: !919, discriminator: 2)
!4822 = !DILocation(line: 2221, column: 13, scope: !4821)
!4823 = distinct !{!4823, !4824}
!4824 = !DILocation(line: 2221, column: 13, scope: !4764)
!4825 = !DILocation(line: 2233, column: 17, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4764, file: !919, line: 2233, column: 17)
!4827 = !DILocation(line: 2233, column: 21, scope: !4826)
!4828 = !DILocation(line: 2233, column: 17, scope: !4764)
!4829 = !DILocation(line: 2234, column: 34, scope: !4826)
!4830 = !DILocation(line: 2234, column: 37, scope: !4826)
!4831 = !DILocation(line: 2234, column: 41, scope: !4826)
!4832 = !DILocation(line: 2234, column: 17, scope: !4826)
!4833 = !DILocation(line: 2235, column: 9, scope: !4764)
!4834 = !DILocalVariable(name: "i", scope: !4835, file: !919, line: 2238, type: !998)
!4835 = distinct !DILexicalBlock(scope: !4632, file: !919, line: 2238, column: 9)
!4836 = !DILocation(line: 2238, column: 15, scope: !4835)
!4837 = !DILocation(line: 2238, column: 25, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4835, file: !919, line: 2238, column: 18)
!4839 = !DILocation(line: 2238, column: 23, scope: !4838)
!4840 = !DILocation(line: 2238, column: 30, scope: !4841)
!4841 = !DILexicalBlockFile(scope: !4842, file: !919, discriminator: 1)
!4842 = distinct !DILexicalBlock(scope: !4838, file: !919, line: 2238, column: 18)
!4843 = !DILocation(line: 2238, column: 34, scope: !4841)
!4844 = !DILocation(line: 2238, column: 37, scope: !4841)
!4845 = !DILocation(line: 2238, column: 32, scope: !4841)
!4846 = !DILocation(line: 2238, column: 18, scope: !4841)
!4847 = !DILocalVariable(name: "spec", scope: !4848, file: !919, line: 2238, type: !1105)
!4848 = distinct !DILexicalBlock(scope: !4842, file: !919, line: 2238, column: 58)
!4849 = !DILocation(line: 2238, column: 66, scope: !4848)
!4850 = !DILocation(line: 2238, column: 88, scope: !4851)
!4851 = !DILexicalBlockFile(scope: !4848, file: !919, discriminator: 2)
!4852 = !DILocation(line: 2238, column: 73, scope: !4851)
!4853 = !DILocation(line: 2238, column: 76, scope: !4851)
!4854 = !DILocation(line: 2238, column: 91, scope: !4851)
!4855 = !DILocation(line: 2238, column: 66, scope: !4851)
!4856 = !DILocation(line: 2238, column: 114, scope: !4851)
!4857 = !DILocation(line: 2238, column: 107, scope: !4851)
!4858 = !DILocation(line: 2238, column: 106, scope: !4851)
!4859 = !DILocation(line: 2238, column: 163, scope: !4860)
!4860 = !DILexicalBlockFile(scope: !4861, file: !919, discriminator: 3)
!4861 = distinct !DILexicalBlock(scope: !4848, file: !919, line: 2238, column: 106)
!4862 = !DILocation(line: 2238, column: 148, scope: !4860)
!4863 = !DILocation(line: 2238, column: 151, scope: !4860)
!4864 = !DILocation(line: 2238, column: 166, scope: !4860)
!4865 = !DILocation(line: 2238, column: 168, scope: !4860)
!4866 = !DILocation(line: 2238, column: 146, scope: !4860)
!4867 = !DILocation(line: 2238, column: 126, scope: !4860)
!4868 = !DILocation(line: 2238, column: 173, scope: !4869)
!4869 = !DILexicalBlockFile(scope: !4848, file: !919, discriminator: 4)
!4870 = !DILocation(line: 2238, column: 54, scope: !4871)
!4871 = !DILexicalBlockFile(scope: !4842, file: !919, discriminator: 5)
!4872 = !DILocation(line: 2238, column: 18, scope: !4871)
!4873 = distinct !{!4873, !4874}
!4874 = !DILocation(line: 2238, column: 18, scope: !4835)
!4875 = !DILocation(line: 2239, column: 14, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4632, file: !919, line: 2239, column: 13)
!4877 = !DILocation(line: 2239, column: 17, scope: !4876)
!4878 = !DILocation(line: 2239, column: 34, scope: !4876)
!4879 = !DILocation(line: 2239, column: 59, scope: !4880)
!4880 = !DILexicalBlockFile(scope: !4876, file: !919, discriminator: 1)
!4881 = !DILocation(line: 2239, column: 63, scope: !4880)
!4882 = !DILocation(line: 2239, column: 72, scope: !4880)
!4883 = !DILocation(line: 2239, column: 38, scope: !4880)
!4884 = !DILocation(line: 2239, column: 88, scope: !4880)
!4885 = !DILocation(line: 2239, column: 91, scope: !4886)
!4886 = !DILexicalBlockFile(scope: !4876, file: !919, discriminator: 2)
!4887 = !DILocation(line: 2239, column: 13, scope: !4886)
!4888 = !DILocation(line: 2240, column: 20, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4890, file: !919, line: 2240, column: 13)
!4890 = distinct !DILexicalBlock(scope: !4876, file: !919, line: 2239, column: 113)
!4891 = !DILocation(line: 2240, column: 18, scope: !4889)
!4892 = !DILocation(line: 2240, column: 25, scope: !4893)
!4893 = !DILexicalBlockFile(scope: !4894, file: !919, discriminator: 1)
!4894 = distinct !DILexicalBlock(scope: !4889, file: !919, line: 2240, column: 13)
!4895 = !DILocation(line: 2240, column: 29, scope: !4893)
!4896 = !DILocation(line: 2240, column: 27, scope: !4893)
!4897 = !DILocation(line: 2240, column: 13, scope: !4893)
!4898 = !DILocation(line: 2241, column: 35, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4894, file: !919, line: 2241, column: 21)
!4900 = !DILocation(line: 2241, column: 21, scope: !4899)
!4901 = !DILocation(line: 2241, column: 39, scope: !4899)
!4902 = !DILocation(line: 2241, column: 43, scope: !4899)
!4903 = !DILocation(line: 2241, column: 53, scope: !4899)
!4904 = !DILocation(line: 2241, column: 64, scope: !4899)
!4905 = !DILocation(line: 2241, column: 21, scope: !4894)
!4906 = !DILocalVariable(name: "input_descriptor", scope: !4907, file: !919, line: 2242, type: !1760)
!4907 = distinct !DILexicalBlock(scope: !4899, file: !919, line: 2241, column: 90)
!4908 = !DILocation(line: 2242, column: 46, scope: !4907)
!4909 = !DILocation(line: 2243, column: 62, scope: !4907)
!4910 = !DILocation(line: 2243, column: 48, scope: !4907)
!4911 = !DILocation(line: 2243, column: 66, scope: !4907)
!4912 = !DILocation(line: 2243, column: 70, scope: !4907)
!4913 = !DILocation(line: 2243, column: 80, scope: !4907)
!4914 = !DILocation(line: 2243, column: 25, scope: !4907)
!4915 = !DILocalVariable(name: "output_descriptor", scope: !4907, file: !919, line: 2244, type: !1760)
!4916 = !DILocation(line: 2244, column: 46, scope: !4907)
!4917 = !DILocalVariable(name: "output_codec", scope: !4907, file: !919, line: 2245, type: !4918)
!4918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4919, size: 64, align: 64)
!4919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2862)
!4920 = !DILocation(line: 2245, column: 36, scope: !4907)
!4921 = !DILocation(line: 2246, column: 46, scope: !4907)
!4922 = !DILocation(line: 2246, column: 50, scope: !4907)
!4923 = !DILocation(line: 2246, column: 59, scope: !4907)
!4924 = !DILocation(line: 2246, column: 25, scope: !4907)
!4925 = !DILocalVariable(name: "input_props", scope: !4907, file: !919, line: 2247, type: !998)
!4926 = !DILocation(line: 2247, column: 25, scope: !4907)
!4927 = !DILocalVariable(name: "output_props", scope: !4907, file: !919, line: 2247, type: !998)
!4928 = !DILocation(line: 2247, column: 42, scope: !4907)
!4929 = !DILocation(line: 2248, column: 39, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4907, file: !919, line: 2248, column: 25)
!4931 = !DILocation(line: 2248, column: 25, scope: !4930)
!4932 = !DILocation(line: 2248, column: 43, scope: !4930)
!4933 = !DILocation(line: 2248, column: 60, scope: !4930)
!4934 = !DILocation(line: 2248, column: 25, scope: !4907)
!4935 = !DILocation(line: 2249, column: 25, scope: !4930)
!4936 = !DILocation(line: 2250, column: 25, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4907, file: !919, line: 2250, column: 25)
!4938 = !DILocation(line: 2250, column: 25, scope: !4907)
!4939 = !DILocation(line: 2251, column: 68, scope: !4937)
!4940 = !DILocation(line: 2251, column: 82, scope: !4937)
!4941 = !DILocation(line: 2251, column: 45, scope: !4937)
!4942 = !DILocation(line: 2251, column: 43, scope: !4937)
!4943 = !DILocation(line: 2251, column: 25, scope: !4937)
!4944 = !DILocation(line: 2252, column: 25, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4907, file: !919, line: 2252, column: 25)
!4946 = !DILocation(line: 2252, column: 25, scope: !4907)
!4947 = !DILocation(line: 2253, column: 39, scope: !4945)
!4948 = !DILocation(line: 2253, column: 57, scope: !4945)
!4949 = !DILocation(line: 2253, column: 63, scope: !4945)
!4950 = !DILocation(line: 2253, column: 37, scope: !4945)
!4951 = !DILocation(line: 2253, column: 25, scope: !4945)
!4952 = !DILocation(line: 2254, column: 25, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4907, file: !919, line: 2254, column: 25)
!4954 = !DILocation(line: 2254, column: 25, scope: !4907)
!4955 = !DILocation(line: 2255, column: 40, scope: !4953)
!4956 = !DILocation(line: 2255, column: 59, scope: !4953)
!4957 = !DILocation(line: 2255, column: 65, scope: !4953)
!4958 = !DILocation(line: 2255, column: 38, scope: !4953)
!4959 = !DILocation(line: 2255, column: 25, scope: !4953)
!4960 = !DILocation(line: 2256, column: 25, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4907, file: !919, line: 2256, column: 25)
!4962 = !DILocation(line: 2256, column: 45, scope: !4961)
!4963 = !DILocation(line: 2257, column: 25, scope: !4961)
!4964 = !DILocation(line: 2257, column: 39, scope: !4961)
!4965 = !DILocation(line: 2257, column: 37, scope: !4961)
!4966 = !DILocation(line: 2257, column: 52, scope: !4961)
!4967 = !DILocation(line: 2259, column: 25, scope: !4961)
!4968 = !DILocation(line: 2259, column: 42, scope: !4961)
!4969 = !DILocation(line: 2259, column: 45, scope: !4970)
!4970 = !DILexicalBlockFile(scope: !4961, file: !919, discriminator: 1)
!4971 = !DILocation(line: 2259, column: 63, scope: !4970)
!4972 = !DILocation(line: 2260, column: 27, scope: !4961)
!4973 = !DILocation(line: 2260, column: 45, scope: !4961)
!4974 = !DILocation(line: 2260, column: 51, scope: !4961)
!4975 = !DILocation(line: 2261, column: 27, scope: !4961)
!4976 = !DILocation(line: 2261, column: 46, scope: !4961)
!4977 = !DILocation(line: 2256, column: 25, scope: !4978)
!4978 = !DILexicalBlockFile(scope: !4907, file: !919, discriminator: 1)
!4979 = !DILocation(line: 2262, column: 45, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4961, file: !919, line: 2261, column: 54)
!4981 = !DILocation(line: 2262, column: 48, scope: !4980)
!4982 = !DILocation(line: 2262, column: 52, scope: !4980)
!4983 = !DILocation(line: 2262, column: 25, scope: !4980)
!4984 = !DILocation(line: 2263, column: 25, scope: !4980)
!4985 = !DILocation(line: 2265, column: 17, scope: !4907)
!4986 = !DILocation(line: 2241, column: 67, scope: !4987)
!4987 = !DILexicalBlockFile(scope: !4899, file: !919, discriminator: 1)
!4988 = !DILocation(line: 2240, column: 48, scope: !4989)
!4989 = !DILexicalBlockFile(scope: !4894, file: !919, discriminator: 2)
!4990 = !DILocation(line: 2240, column: 13, scope: !4989)
!4991 = distinct !{!4991, !4992}
!4992 = !DILocation(line: 2240, column: 13, scope: !4890)
!4993 = !DILocation(line: 2266, column: 9, scope: !4890)
!4994 = !DILocation(line: 2268, column: 14, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4632, file: !919, line: 2268, column: 13)
!4996 = !DILocation(line: 2268, column: 17, scope: !4995)
!4997 = !DILocation(line: 2268, column: 13, scope: !4632)
!4998 = !DILocalVariable(name: "codec_id", scope: !4999, file: !919, line: 2269, type: !56)
!4999 = distinct !DILexicalBlock(scope: !4995, file: !919, line: 2268, column: 32)
!5000 = !DILocation(line: 2269, column: 28, scope: !4999)
!5001 = !DILocation(line: 2269, column: 54, scope: !4999)
!5002 = !DILocation(line: 2269, column: 58, scope: !4999)
!5003 = !DILocation(line: 2269, column: 72, scope: !4999)
!5004 = !DILocation(line: 2269, column: 39, scope: !4999)
!5005 = !DILocation(line: 2270, column: 20, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4999, file: !919, line: 2270, column: 13)
!5007 = !DILocation(line: 2270, column: 18, scope: !5006)
!5008 = !DILocation(line: 2270, column: 25, scope: !5009)
!5009 = !DILexicalBlockFile(scope: !5010, file: !919, discriminator: 1)
!5010 = distinct !DILexicalBlock(scope: !5006, file: !919, line: 2270, column: 13)
!5011 = !DILocation(line: 2270, column: 34, scope: !5009)
!5012 = !DILocation(line: 2270, column: 54, scope: !5009)
!5013 = !DILocation(line: 2270, column: 57, scope: !5014)
!5014 = !DILexicalBlockFile(scope: !5010, file: !919, discriminator: 2)
!5015 = !DILocation(line: 2270, column: 61, scope: !5014)
!5016 = !DILocation(line: 2270, column: 59, scope: !5014)
!5017 = !DILocation(line: 2270, column: 13, scope: !5018)
!5018 = !DILexicalBlockFile(scope: !5006, file: !919, discriminator: 3)
!5019 = !DILocation(line: 2271, column: 35, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5021, file: !919, line: 2271, column: 21)
!5021 = distinct !DILexicalBlock(scope: !5010, file: !919, line: 2270, column: 84)
!5022 = !DILocation(line: 2271, column: 21, scope: !5020)
!5023 = !DILocation(line: 2271, column: 39, scope: !5020)
!5024 = !DILocation(line: 2271, column: 56, scope: !5020)
!5025 = !DILocation(line: 2271, column: 21, scope: !5021)
!5026 = !DILocation(line: 2272, column: 21, scope: !5020)
!5027 = !DILocation(line: 2273, column: 35, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5021, file: !919, line: 2273, column: 21)
!5029 = !DILocation(line: 2273, column: 21, scope: !5028)
!5030 = !DILocation(line: 2273, column: 39, scope: !5028)
!5031 = !DILocation(line: 2273, column: 43, scope: !5028)
!5032 = !DILocation(line: 2273, column: 53, scope: !5028)
!5033 = !DILocation(line: 2273, column: 64, scope: !5028)
!5034 = !DILocation(line: 2274, column: 21, scope: !5028)
!5035 = !DILocation(line: 2274, column: 38, scope: !5036)
!5036 = !DILexicalBlockFile(scope: !5028, file: !919, discriminator: 1)
!5037 = !DILocation(line: 2274, column: 24, scope: !5036)
!5038 = !DILocation(line: 2274, column: 42, scope: !5036)
!5039 = !DILocation(line: 2274, column: 46, scope: !5036)
!5040 = !DILocation(line: 2274, column: 56, scope: !5036)
!5041 = !DILocation(line: 2274, column: 68, scope: !5036)
!5042 = !DILocation(line: 2274, column: 65, scope: !5036)
!5043 = !DILocation(line: 2273, column: 21, scope: !5044)
!5044 = !DILexicalBlockFile(scope: !5021, file: !919, discriminator: 1)
!5045 = !DILocation(line: 2275, column: 37, scope: !5028)
!5046 = !DILocation(line: 2275, column: 40, scope: !5028)
!5047 = !DILocation(line: 2275, column: 44, scope: !5028)
!5048 = !DILocation(line: 2275, column: 21, scope: !5028)
!5049 = !DILocation(line: 2276, column: 13, scope: !5021)
!5050 = !DILocation(line: 2270, column: 80, scope: !5051)
!5051 = !DILexicalBlockFile(scope: !5010, file: !919, discriminator: 4)
!5052 = !DILocation(line: 2270, column: 13, scope: !5051)
!5053 = distinct !{!5053, !5054}
!5054 = !DILocation(line: 2270, column: 13, scope: !4999)
!5055 = !DILocation(line: 2277, column: 9, scope: !4999)
!5056 = !DILocation(line: 2278, column: 5, scope: !4632)
!5057 = !DILocation(line: 2279, column: 16, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5059, file: !919, line: 2279, column: 9)
!5059 = distinct !DILexicalBlock(scope: !4628, file: !919, line: 2278, column: 12)
!5060 = !DILocation(line: 2279, column: 14, scope: !5058)
!5061 = !DILocation(line: 2279, column: 21, scope: !5062)
!5062 = !DILexicalBlockFile(scope: !5063, file: !919, discriminator: 1)
!5063 = distinct !DILexicalBlock(scope: !5058, file: !919, line: 2279, column: 9)
!5064 = !DILocation(line: 2279, column: 25, scope: !5062)
!5065 = !DILocation(line: 2279, column: 28, scope: !5062)
!5066 = !DILocation(line: 2279, column: 23, scope: !5062)
!5067 = !DILocation(line: 2279, column: 9, scope: !5062)
!5068 = !DILocalVariable(name: "map", scope: !5069, file: !919, line: 2280, type: !2169)
!5069 = distinct !DILexicalBlock(scope: !5063, file: !919, line: 2279, column: 49)
!5070 = !DILocation(line: 2280, column: 24, scope: !5069)
!5071 = !DILocation(line: 2280, column: 46, scope: !5069)
!5072 = !DILocation(line: 2280, column: 31, scope: !5069)
!5073 = !DILocation(line: 2280, column: 34, scope: !5069)
!5074 = !DILocation(line: 2282, column: 17, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5069, file: !919, line: 2282, column: 17)
!5076 = !DILocation(line: 2282, column: 22, scope: !5075)
!5077 = !DILocation(line: 2282, column: 17, scope: !5069)
!5078 = !DILocation(line: 2283, column: 17, scope: !5075)
!5079 = !DILocation(line: 2285, column: 17, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5069, file: !919, line: 2285, column: 17)
!5081 = !DILocation(line: 2285, column: 22, scope: !5080)
!5082 = !DILocation(line: 2285, column: 17, scope: !5069)
!5083 = !DILocalVariable(name: "fg", scope: !5084, file: !919, line: 2286, type: !4564)
!5084 = distinct !DILexicalBlock(scope: !5080, file: !919, line: 2285, column: 33)
!5085 = !DILocation(line: 2286, column: 30, scope: !5084)
!5086 = !DILocalVariable(name: "ofilter", scope: !5084, file: !919, line: 2287, type: !4148)
!5087 = !DILocation(line: 2287, column: 31, scope: !5084)
!5088 = !DILocalVariable(name: "j", scope: !5084, file: !919, line: 2288, type: !998)
!5089 = !DILocation(line: 2288, column: 21, scope: !5084)
!5090 = !DILocalVariable(name: "k", scope: !5084, file: !919, line: 2288, type: !998)
!5091 = !DILocation(line: 2288, column: 24, scope: !5084)
!5092 = !DILocation(line: 2290, column: 24, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5084, file: !919, line: 2290, column: 17)
!5094 = !DILocation(line: 2290, column: 22, scope: !5093)
!5095 = !DILocation(line: 2290, column: 29, scope: !5096)
!5096 = !DILexicalBlockFile(scope: !5097, file: !919, discriminator: 1)
!5097 = distinct !DILexicalBlock(scope: !5093, file: !919, line: 2290, column: 17)
!5098 = !DILocation(line: 2290, column: 33, scope: !5096)
!5099 = !DILocation(line: 2290, column: 31, scope: !5096)
!5100 = !DILocation(line: 2290, column: 17, scope: !5096)
!5101 = !DILocation(line: 2291, column: 39, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5097, file: !919, line: 2290, column: 55)
!5103 = !DILocation(line: 2291, column: 26, scope: !5102)
!5104 = !DILocation(line: 2291, column: 24, scope: !5102)
!5105 = !DILocation(line: 2292, column: 28, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5102, file: !919, line: 2292, column: 21)
!5107 = !DILocation(line: 2292, column: 26, scope: !5106)
!5108 = !DILocation(line: 2292, column: 33, scope: !5109)
!5109 = !DILexicalBlockFile(scope: !5110, file: !919, discriminator: 1)
!5110 = distinct !DILexicalBlock(scope: !5106, file: !919, line: 2292, column: 21)
!5111 = !DILocation(line: 2292, column: 37, scope: !5109)
!5112 = !DILocation(line: 2292, column: 41, scope: !5109)
!5113 = !DILocation(line: 2292, column: 35, scope: !5109)
!5114 = !DILocation(line: 2292, column: 21, scope: !5109)
!5115 = !DILocalVariable(name: "out", scope: !5116, file: !919, line: 2293, type: !4158)
!5116 = distinct !DILexicalBlock(scope: !5110, file: !919, line: 2292, column: 58)
!5117 = !DILocation(line: 2293, column: 40, scope: !5116)
!5118 = !DILocation(line: 2293, column: 58, scope: !5116)
!5119 = !DILocation(line: 2293, column: 46, scope: !5116)
!5120 = !DILocation(line: 2293, column: 50, scope: !5116)
!5121 = !DILocation(line: 2293, column: 62, scope: !5116)
!5122 = !DILocation(line: 2294, column: 29, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5116, file: !919, line: 2294, column: 29)
!5124 = !DILocation(line: 2294, column: 33, scope: !5123)
!5125 = !DILocation(line: 2294, column: 44, scope: !5126)
!5126 = !DILexicalBlockFile(scope: !5123, file: !919, discriminator: 1)
!5127 = !DILocation(line: 2294, column: 49, scope: !5126)
!5128 = !DILocation(line: 2294, column: 55, scope: !5126)
!5129 = !DILocation(line: 2294, column: 60, scope: !5126)
!5130 = !DILocation(line: 2294, column: 37, scope: !5126)
!5131 = !DILocation(line: 2294, column: 29, scope: !5126)
!5132 = !DILocation(line: 2295, column: 51, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5123, file: !919, line: 2294, column: 72)
!5134 = !DILocation(line: 2295, column: 39, scope: !5133)
!5135 = !DILocation(line: 2295, column: 43, scope: !5133)
!5136 = !DILocation(line: 2295, column: 37, scope: !5133)
!5137 = !DILocation(line: 2296, column: 29, scope: !5133)
!5138 = !DILocation(line: 2298, column: 21, scope: !5116)
!5139 = !DILocation(line: 2292, column: 54, scope: !5140)
!5140 = !DILexicalBlockFile(scope: !5110, file: !919, discriminator: 2)
!5141 = !DILocation(line: 2292, column: 21, scope: !5140)
!5142 = distinct !{!5142, !5143}
!5143 = !DILocation(line: 2292, column: 21, scope: !5102)
!5144 = !DILocation(line: 2299, column: 17, scope: !5102)
!5145 = !DILocation(line: 2290, column: 51, scope: !5146)
!5146 = !DILexicalBlockFile(scope: !5097, file: !919, discriminator: 2)
!5147 = !DILocation(line: 2290, column: 17, scope: !5146)
!5148 = distinct !{!5148, !5149}
!5149 = !DILocation(line: 2290, column: 17, scope: !5084)
!5150 = !DILocation(line: 2299, column: 17, scope: !5151)
!5151 = !DILexicalBlockFile(scope: !5093, file: !919, discriminator: 1)
!5152 = !DILocation(line: 2301, column: 22, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5084, file: !919, line: 2301, column: 21)
!5154 = !DILocation(line: 2301, column: 21, scope: !5084)
!5155 = !DILocation(line: 2303, column: 93, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5153, file: !919, line: 2301, column: 31)
!5157 = !DILocation(line: 2303, column: 98, scope: !5156)
!5158 = !DILocation(line: 2302, column: 21, scope: !5156)
!5159 = !DILocation(line: 2304, column: 21, scope: !5156)
!5160 = !DILocation(line: 2306, column: 36, scope: !5084)
!5161 = !DILocation(line: 2306, column: 45, scope: !5084)
!5162 = !DILocation(line: 2306, column: 48, scope: !5084)
!5163 = !DILocation(line: 2306, column: 17, scope: !5084)
!5164 = !DILocation(line: 2307, column: 13, scope: !5084)
!5165 = !DILocalVariable(name: "src_idx", scope: !5166, file: !919, line: 2308, type: !998)
!5166 = distinct !DILexicalBlock(scope: !5080, file: !919, line: 2307, column: 20)
!5167 = !DILocation(line: 2308, column: 21, scope: !5166)
!5168 = !DILocation(line: 2308, column: 43, scope: !5166)
!5169 = !DILocation(line: 2308, column: 48, scope: !5166)
!5170 = !DILocation(line: 2308, column: 31, scope: !5166)
!5171 = !DILocation(line: 2308, column: 61, scope: !5166)
!5172 = !DILocation(line: 2308, column: 73, scope: !5166)
!5173 = !DILocation(line: 2308, column: 78, scope: !5166)
!5174 = !DILocation(line: 2308, column: 71, scope: !5166)
!5175 = !DILocation(line: 2310, column: 49, scope: !5166)
!5176 = !DILocation(line: 2310, column: 54, scope: !5166)
!5177 = !DILocation(line: 2310, column: 37, scope: !5166)
!5178 = !DILocation(line: 2310, column: 67, scope: !5166)
!5179 = !DILocation(line: 2310, column: 79, scope: !5166)
!5180 = !DILocation(line: 2310, column: 84, scope: !5166)
!5181 = !DILocation(line: 2310, column: 77, scope: !5166)
!5182 = !DILocation(line: 2310, column: 23, scope: !5166)
!5183 = !DILocation(line: 2310, column: 21, scope: !5166)
!5184 = !DILocation(line: 2311, column: 21, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5166, file: !919, line: 2311, column: 21)
!5186 = !DILocation(line: 2311, column: 26, scope: !5185)
!5187 = !DILocation(line: 2311, column: 43, scope: !5185)
!5188 = !DILocation(line: 2311, column: 21, scope: !5166)
!5189 = !DILocation(line: 2313, column: 28, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5185, file: !919, line: 2311, column: 61)
!5191 = !DILocation(line: 2313, column: 33, scope: !5190)
!5192 = !DILocation(line: 2313, column: 45, scope: !5190)
!5193 = !DILocation(line: 2313, column: 50, scope: !5190)
!5194 = !DILocation(line: 2312, column: 21, scope: !5190)
!5195 = !DILocation(line: 2314, column: 21, scope: !5190)
!5196 = !DILocation(line: 2316, column: 20, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5166, file: !919, line: 2316, column: 20)
!5198 = !DILocation(line: 2316, column: 23, scope: !5197)
!5199 = !DILocation(line: 2316, column: 40, scope: !5197)
!5200 = !DILocation(line: 2316, column: 43, scope: !5201)
!5201 = !DILexicalBlockFile(scope: !5197, file: !919, discriminator: 1)
!5202 = !DILocation(line: 2316, column: 48, scope: !5201)
!5203 = !DILocation(line: 2316, column: 52, scope: !5201)
!5204 = !DILocation(line: 2316, column: 62, scope: !5201)
!5205 = !DILocation(line: 2316, column: 73, scope: !5201)
!5206 = !DILocation(line: 2316, column: 20, scope: !5201)
!5207 = !DILocation(line: 2317, column: 21, scope: !5197)
!5208 = !DILocation(line: 2318, column: 20, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5166, file: !919, line: 2318, column: 20)
!5210 = !DILocation(line: 2318, column: 24, scope: !5209)
!5211 = !DILocation(line: 2318, column: 38, scope: !5209)
!5212 = !DILocation(line: 2318, column: 41, scope: !5213)
!5213 = !DILexicalBlockFile(scope: !5209, file: !919, discriminator: 1)
!5214 = !DILocation(line: 2318, column: 46, scope: !5213)
!5215 = !DILocation(line: 2318, column: 50, scope: !5213)
!5216 = !DILocation(line: 2318, column: 60, scope: !5213)
!5217 = !DILocation(line: 2318, column: 71, scope: !5213)
!5218 = !DILocation(line: 2318, column: 20, scope: !5213)
!5219 = !DILocation(line: 2319, column: 21, scope: !5209)
!5220 = !DILocation(line: 2320, column: 20, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5166, file: !919, line: 2320, column: 20)
!5222 = !DILocation(line: 2320, column: 24, scope: !5221)
!5223 = !DILocation(line: 2320, column: 38, scope: !5221)
!5224 = !DILocation(line: 2320, column: 41, scope: !5225)
!5225 = !DILexicalBlockFile(scope: !5221, file: !919, discriminator: 1)
!5226 = !DILocation(line: 2320, column: 46, scope: !5225)
!5227 = !DILocation(line: 2320, column: 50, scope: !5225)
!5228 = !DILocation(line: 2320, column: 60, scope: !5225)
!5229 = !DILocation(line: 2320, column: 71, scope: !5225)
!5230 = !DILocation(line: 2320, column: 20, scope: !5225)
!5231 = !DILocation(line: 2321, column: 21, scope: !5221)
!5232 = !DILocation(line: 2322, column: 20, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5166, file: !919, line: 2322, column: 20)
!5234 = !DILocation(line: 2322, column: 24, scope: !5233)
!5235 = !DILocation(line: 2322, column: 37, scope: !5233)
!5236 = !DILocation(line: 2322, column: 40, scope: !5237)
!5237 = !DILexicalBlockFile(scope: !5233, file: !919, discriminator: 1)
!5238 = !DILocation(line: 2322, column: 45, scope: !5237)
!5239 = !DILocation(line: 2322, column: 49, scope: !5237)
!5240 = !DILocation(line: 2322, column: 59, scope: !5237)
!5241 = !DILocation(line: 2322, column: 70, scope: !5237)
!5242 = !DILocation(line: 2322, column: 20, scope: !5237)
!5243 = !DILocation(line: 2323, column: 21, scope: !5233)
!5244 = !DILocation(line: 2325, column: 21, scope: !5166)
!5245 = !DILocation(line: 2326, column: 25, scope: !5166)
!5246 = !DILocation(line: 2326, column: 30, scope: !5166)
!5247 = !DILocation(line: 2326, column: 34, scope: !5166)
!5248 = !DILocation(line: 2326, column: 44, scope: !5166)
!5249 = !DILocation(line: 2326, column: 17, scope: !5166)
!5250 = !DILocation(line: 2327, column: 66, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5166, file: !919, line: 2326, column: 56)
!5252 = !DILocation(line: 2327, column: 69, scope: !5251)
!5253 = !DILocation(line: 2327, column: 73, scope: !5251)
!5254 = !DILocation(line: 2327, column: 48, scope: !5251)
!5255 = !DILocation(line: 2327, column: 46, scope: !5251)
!5256 = !DILocation(line: 2327, column: 83, scope: !5251)
!5257 = !DILocation(line: 2328, column: 66, scope: !5251)
!5258 = !DILocation(line: 2328, column: 69, scope: !5251)
!5259 = !DILocation(line: 2328, column: 73, scope: !5251)
!5260 = !DILocation(line: 2328, column: 48, scope: !5251)
!5261 = !DILocation(line: 2328, column: 46, scope: !5251)
!5262 = !DILocation(line: 2328, column: 83, scope: !5251)
!5263 = !DILocation(line: 2329, column: 72, scope: !5251)
!5264 = !DILocation(line: 2329, column: 75, scope: !5251)
!5265 = !DILocation(line: 2329, column: 79, scope: !5251)
!5266 = !DILocation(line: 2329, column: 51, scope: !5251)
!5267 = !DILocation(line: 2329, column: 49, scope: !5251)
!5268 = !DILocation(line: 2329, column: 89, scope: !5251)
!5269 = !DILocation(line: 2330, column: 64, scope: !5251)
!5270 = !DILocation(line: 2330, column: 67, scope: !5251)
!5271 = !DILocation(line: 2330, column: 71, scope: !5251)
!5272 = !DILocation(line: 2330, column: 47, scope: !5251)
!5273 = !DILocation(line: 2330, column: 45, scope: !5251)
!5274 = !DILocation(line: 2330, column: 81, scope: !5251)
!5275 = !DILocation(line: 2331, column: 75, scope: !5251)
!5276 = !DILocation(line: 2331, column: 78, scope: !5251)
!5277 = !DILocation(line: 2331, column: 82, scope: !5251)
!5278 = !DILocation(line: 2331, column: 53, scope: !5251)
!5279 = !DILocation(line: 2331, column: 51, scope: !5251)
!5280 = !DILocation(line: 2331, column: 92, scope: !5251)
!5281 = !DILocation(line: 2333, column: 25, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5251, file: !919, line: 2333, column: 25)
!5283 = !DILocation(line: 2333, column: 25, scope: !5251)
!5284 = !DILocation(line: 2334, column: 51, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5282, file: !919, line: 2333, column: 47)
!5286 = !DILocation(line: 2334, column: 54, scope: !5285)
!5287 = !DILocation(line: 2334, column: 58, scope: !5285)
!5288 = !DILocation(line: 2334, column: 31, scope: !5285)
!5289 = !DILocation(line: 2334, column: 29, scope: !5285)
!5290 = !DILocation(line: 2335, column: 25, scope: !5285)
!5291 = !DILocation(line: 2333, column: 25, scope: !5292)
!5292 = !DILexicalBlockFile(scope: !5282, file: !919, discriminator: 1)
!5293 = !DILocation(line: 2338, column: 33, scope: !5251)
!5294 = !DILocation(line: 2340, column: 28, scope: !5251)
!5295 = !DILocation(line: 2340, column: 33, scope: !5251)
!5296 = !DILocation(line: 2340, column: 45, scope: !5251)
!5297 = !DILocation(line: 2340, column: 50, scope: !5251)
!5298 = !DILocation(line: 2338, column: 21, scope: !5251)
!5299 = !DILocation(line: 2341, column: 26, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5251, file: !919, line: 2341, column: 25)
!5301 = !DILocation(line: 2341, column: 25, scope: !5251)
!5302 = !DILocation(line: 2342, column: 25, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5300, file: !919, line: 2341, column: 50)
!5304 = !DILocation(line: 2346, column: 25, scope: !5303)
!5305 = !DILocation(line: 2348, column: 17, scope: !5251)
!5306 = !DILocation(line: 2349, column: 21, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5166, file: !919, line: 2349, column: 21)
!5308 = !DILocation(line: 2349, column: 21, scope: !5166)
!5309 = !DILocation(line: 2350, column: 64, scope: !5307)
!5310 = !DILocation(line: 2350, column: 69, scope: !5307)
!5311 = !DILocation(line: 2350, column: 52, scope: !5307)
!5312 = !DILocation(line: 2350, column: 87, scope: !5307)
!5313 = !DILocation(line: 2351, column: 53, scope: !5307)
!5314 = !DILocation(line: 2351, column: 58, scope: !5307)
!5315 = !DILocation(line: 2351, column: 51, scope: !5307)
!5316 = !DILocation(line: 2350, column: 37, scope: !5307)
!5317 = !DILocation(line: 2350, column: 21, scope: !5307)
!5318 = !DILocation(line: 2350, column: 26, scope: !5307)
!5319 = !DILocation(line: 2350, column: 35, scope: !5307)
!5320 = !DILocation(line: 2353, column: 9, scope: !5069)
!5321 = !DILocation(line: 2279, column: 45, scope: !5322)
!5322 = !DILexicalBlockFile(scope: !5063, file: !919, discriminator: 2)
!5323 = !DILocation(line: 2279, column: 9, scope: !5322)
!5324 = distinct !{!5324, !5325}
!5325 = !DILocation(line: 2279, column: 9, scope: !5059)
!5326 = !DILocation(line: 2357, column: 12, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2357, column: 5)
!5328 = !DILocation(line: 2357, column: 10, scope: !5327)
!5329 = !DILocation(line: 2357, column: 17, scope: !5330)
!5330 = !DILexicalBlockFile(scope: !5331, file: !919, discriminator: 1)
!5331 = distinct !DILexicalBlock(scope: !5327, file: !919, line: 2357, column: 5)
!5332 = !DILocation(line: 2357, column: 21, scope: !5330)
!5333 = !DILocation(line: 2357, column: 24, scope: !5330)
!5334 = !DILocation(line: 2357, column: 19, scope: !5330)
!5335 = !DILocation(line: 2357, column: 5, scope: !5330)
!5336 = !DILocalVariable(name: "pb", scope: !5337, file: !919, line: 2358, type: !2496)
!5337 = distinct !DILexicalBlock(scope: !5331, file: !919, line: 2357, column: 45)
!5338 = !DILocation(line: 2358, column: 22, scope: !5337)
!5339 = !DILocalVariable(name: "attachment", scope: !5337, file: !919, line: 2359, type: !1179)
!5340 = !DILocation(line: 2359, column: 18, scope: !5337)
!5341 = !DILocalVariable(name: "p", scope: !5337, file: !919, line: 2360, type: !982)
!5342 = !DILocation(line: 2360, column: 21, scope: !5337)
!5343 = !DILocalVariable(name: "len", scope: !5337, file: !919, line: 2361, type: !1004)
!5344 = !DILocation(line: 2361, column: 17, scope: !5337)
!5345 = !DILocation(line: 2363, column: 51, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5337, file: !919, line: 2363, column: 13)
!5347 = !DILocation(line: 2363, column: 36, scope: !5346)
!5348 = !DILocation(line: 2363, column: 39, scope: !5346)
!5349 = !DILocation(line: 2363, column: 20, scope: !5346)
!5350 = !DILocation(line: 2363, column: 18, scope: !5346)
!5351 = !DILocation(line: 2363, column: 86, scope: !5346)
!5352 = !DILocation(line: 2363, column: 13, scope: !5337)
!5353 = !DILocation(line: 2365, column: 35, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5346, file: !919, line: 2363, column: 91)
!5355 = !DILocation(line: 2365, column: 20, scope: !5354)
!5356 = !DILocation(line: 2365, column: 23, scope: !5354)
!5357 = !DILocation(line: 2364, column: 13, scope: !5354)
!5358 = !DILocation(line: 2366, column: 13, scope: !5354)
!5359 = !DILocation(line: 2368, column: 30, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5337, file: !919, line: 2368, column: 13)
!5361 = !DILocation(line: 2368, column: 20, scope: !5360)
!5362 = !DILocation(line: 2368, column: 18, scope: !5360)
!5363 = !DILocation(line: 2368, column: 35, scope: !5360)
!5364 = !DILocation(line: 2368, column: 13, scope: !5337)
!5365 = !DILocation(line: 2370, column: 35, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5360, file: !919, line: 2368, column: 41)
!5367 = !DILocation(line: 2370, column: 20, scope: !5366)
!5368 = !DILocation(line: 2370, column: 23, scope: !5366)
!5369 = !DILocation(line: 2369, column: 13, scope: !5366)
!5370 = !DILocation(line: 2371, column: 13, scope: !5366)
!5371 = !DILocation(line: 2373, column: 38, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5337, file: !919, line: 2373, column: 13)
!5373 = !DILocation(line: 2373, column: 28, scope: !5372)
!5374 = !DILocation(line: 2373, column: 26, scope: !5372)
!5375 = !DILocation(line: 2373, column: 13, scope: !5337)
!5376 = !DILocation(line: 2375, column: 35, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5372, file: !919, line: 2373, column: 45)
!5378 = !DILocation(line: 2375, column: 20, scope: !5377)
!5379 = !DILocation(line: 2375, column: 23, scope: !5377)
!5380 = !DILocation(line: 2374, column: 13, scope: !5377)
!5381 = !DILocation(line: 2376, column: 13, scope: !5377)
!5382 = !DILocation(line: 2378, column: 19, scope: !5337)
!5383 = !DILocation(line: 2378, column: 23, scope: !5337)
!5384 = !DILocation(line: 2378, column: 35, scope: !5337)
!5385 = !DILocation(line: 2378, column: 9, scope: !5337)
!5386 = !DILocation(line: 2380, column: 37, scope: !5337)
!5387 = !DILocation(line: 2380, column: 40, scope: !5337)
!5388 = !DILocation(line: 2380, column: 15, scope: !5337)
!5389 = !DILocation(line: 2380, column: 13, scope: !5337)
!5390 = !DILocation(line: 2381, column: 9, scope: !5337)
!5391 = !DILocation(line: 2381, column: 14, scope: !5337)
!5392 = !DILocation(line: 2381, column: 26, scope: !5337)
!5393 = !DILocation(line: 2382, column: 51, scope: !5337)
!5394 = !DILocation(line: 2382, column: 36, scope: !5337)
!5395 = !DILocation(line: 2382, column: 39, scope: !5337)
!5396 = !DILocation(line: 2382, column: 9, scope: !5337)
!5397 = !DILocation(line: 2382, column: 14, scope: !5337)
!5398 = !DILocation(line: 2382, column: 34, scope: !5337)
!5399 = !DILocation(line: 2383, column: 40, scope: !5337)
!5400 = !DILocation(line: 2383, column: 9, scope: !5337)
!5401 = !DILocation(line: 2383, column: 14, scope: !5337)
!5402 = !DILocation(line: 2383, column: 18, scope: !5337)
!5403 = !DILocation(line: 2383, column: 28, scope: !5337)
!5404 = !DILocation(line: 2383, column: 38, scope: !5337)
!5405 = !DILocation(line: 2384, column: 45, scope: !5337)
!5406 = !DILocation(line: 2384, column: 9, scope: !5337)
!5407 = !DILocation(line: 2384, column: 14, scope: !5337)
!5408 = !DILocation(line: 2384, column: 18, scope: !5337)
!5409 = !DILocation(line: 2384, column: 28, scope: !5337)
!5410 = !DILocation(line: 2384, column: 43, scope: !5337)
!5411 = !DILocation(line: 2386, column: 36, scope: !5337)
!5412 = !DILocation(line: 2386, column: 21, scope: !5337)
!5413 = !DILocation(line: 2386, column: 24, scope: !5337)
!5414 = !DILocation(line: 2386, column: 13, scope: !5337)
!5415 = !DILocation(line: 2386, column: 11, scope: !5337)
!5416 = !DILocation(line: 2387, column: 22, scope: !5337)
!5417 = !DILocation(line: 2387, column: 27, scope: !5337)
!5418 = !DILocation(line: 2387, column: 31, scope: !5337)
!5419 = !DILocation(line: 2387, column: 54, scope: !5337)
!5420 = !DILocation(line: 2387, column: 56, scope: !5337)
!5421 = !DILocation(line: 2387, column: 60, scope: !5422)
!5422 = !DILexicalBlockFile(scope: !5337, file: !919, discriminator: 1)
!5423 = !DILocation(line: 2387, column: 59, scope: !5422)
!5424 = !DILocation(line: 2387, column: 53, scope: !5422)
!5425 = !DILocation(line: 2387, column: 65, scope: !5426)
!5426 = !DILexicalBlockFile(scope: !5337, file: !919, discriminator: 2)
!5427 = !DILocation(line: 2387, column: 67, scope: !5426)
!5428 = !DILocation(line: 2387, column: 53, scope: !5426)
!5429 = !DILocation(line: 2387, column: 88, scope: !5430)
!5430 = !DILexicalBlockFile(scope: !5337, file: !919, discriminator: 3)
!5431 = !DILocation(line: 2387, column: 73, scope: !5430)
!5432 = !DILocation(line: 2387, column: 76, scope: !5430)
!5433 = !DILocation(line: 2387, column: 53, scope: !5430)
!5434 = !DILocation(line: 2387, column: 53, scope: !5435)
!5435 = !DILexicalBlockFile(scope: !5337, file: !919, discriminator: 4)
!5436 = !DILocation(line: 2387, column: 9, scope: !5435)
!5437 = !DILocation(line: 2388, column: 9, scope: !5337)
!5438 = !DILocation(line: 2389, column: 5, scope: !5337)
!5439 = !DILocation(line: 2357, column: 41, scope: !5440)
!5440 = !DILexicalBlockFile(scope: !5331, file: !919, discriminator: 2)
!5441 = !DILocation(line: 2357, column: 5, scope: !5440)
!5442 = distinct !{!5442, !5443}
!5443 = !DILocation(line: 2357, column: 5, scope: !4028)
!5444 = !DILocation(line: 2392, column: 14, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2392, column: 5)
!5446 = !DILocation(line: 2392, column: 34, scope: !5445)
!5447 = !DILocation(line: 2392, column: 38, scope: !5445)
!5448 = !DILocation(line: 2392, column: 32, scope: !5445)
!5449 = !DILocation(line: 2392, column: 12, scope: !5445)
!5450 = !DILocation(line: 2392, column: 10, scope: !5445)
!5451 = !DILocation(line: 2392, column: 50, scope: !5452)
!5452 = !DILexicalBlockFile(scope: !5453, file: !919, discriminator: 1)
!5453 = distinct !DILexicalBlock(scope: !5445, file: !919, line: 2392, column: 5)
!5454 = !DILocation(line: 2392, column: 54, scope: !5452)
!5455 = !DILocation(line: 2392, column: 52, scope: !5452)
!5456 = !DILocation(line: 2392, column: 5, scope: !5452)
!5457 = !DILocalVariable(name: "e", scope: !5458, file: !919, line: 2393, type: !2937)
!5458 = distinct !DILexicalBlock(scope: !5453, file: !919, line: 2392, column: 78)
!5459 = !DILocation(line: 2393, column: 28, scope: !5458)
!5460 = !DILocation(line: 2394, column: 30, scope: !5458)
!5461 = !DILocation(line: 2394, column: 15, scope: !5458)
!5462 = !DILocation(line: 2394, column: 13, scope: !5458)
!5463 = !DILocation(line: 2396, column: 14, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5458, file: !919, line: 2396, column: 13)
!5465 = !DILocation(line: 2396, column: 19, scope: !5464)
!5466 = !DILocation(line: 2396, column: 31, scope: !5464)
!5467 = !DILocation(line: 2396, column: 34, scope: !5468)
!5468 = !DILexicalBlockFile(scope: !5464, file: !919, discriminator: 1)
!5469 = !DILocation(line: 2396, column: 39, scope: !5468)
!5470 = !DILocation(line: 2397, column: 13, scope: !5464)
!5471 = !DILocation(line: 2397, column: 33, scope: !5468)
!5472 = !DILocation(line: 2397, column: 36, scope: !5468)
!5473 = !DILocation(line: 2397, column: 39, scope: !5468)
!5474 = !DILocation(line: 2397, column: 21, scope: !5468)
!5475 = !DILocation(line: 2397, column: 19, scope: !5468)
!5476 = !DILocation(line: 2398, column: 13, scope: !5464)
!5477 = !DILocation(line: 2398, column: 18, scope: !5468)
!5478 = !DILocation(line: 2398, column: 21, scope: !5468)
!5479 = !DILocation(line: 2398, column: 28, scope: !5468)
!5480 = !DILocation(line: 2398, column: 54, scope: !5481)
!5481 = !DILexicalBlockFile(scope: !5464, file: !919, discriminator: 2)
!5482 = !DILocation(line: 2398, column: 58, scope: !5481)
!5483 = !DILocation(line: 2398, column: 63, scope: !5481)
!5484 = !DILocation(line: 2398, column: 67, scope: !5481)
!5485 = !DILocation(line: 2398, column: 70, scope: !5481)
!5486 = !DILocation(line: 2398, column: 73, scope: !5481)
!5487 = !DILocation(line: 2398, column: 31, scope: !5481)
!5488 = !DILocation(line: 2396, column: 13, scope: !5489)
!5489 = !DILexicalBlockFile(scope: !5458, file: !919, discriminator: 2)
!5490 = !DILocation(line: 2399, column: 28, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5464, file: !919, line: 2399, column: 17)
!5492 = !DILocation(line: 2399, column: 33, scope: !5491)
!5493 = !DILocation(line: 2399, column: 37, scope: !5491)
!5494 = !DILocation(line: 2399, column: 53, scope: !5491)
!5495 = !DILocation(line: 2399, column: 56, scope: !5491)
!5496 = !DILocation(line: 2399, column: 17, scope: !5491)
!5497 = !DILocation(line: 2399, column: 66, scope: !5491)
!5498 = !DILocation(line: 2399, column: 17, scope: !5464)
!5499 = !DILocation(line: 2400, column: 17, scope: !5491)
!5500 = !DILocation(line: 2399, column: 68, scope: !5501)
!5501 = !DILexicalBlockFile(scope: !5491, file: !919, discriminator: 1)
!5502 = !DILocation(line: 2401, column: 5, scope: !5458)
!5503 = !DILocation(line: 2392, column: 74, scope: !5504)
!5504 = !DILexicalBlockFile(scope: !5453, file: !919, discriminator: 2)
!5505 = !DILocation(line: 2392, column: 5, scope: !5504)
!5506 = distinct !{!5506, !5507}
!5507 = !DILocation(line: 2392, column: 5, scope: !4028)
!5508 = !DILocation(line: 2404, column: 10, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2404, column: 9)
!5510 = !DILocation(line: 2404, column: 14, scope: !5509)
!5511 = !DILocation(line: 2404, column: 25, scope: !5509)
!5512 = !DILocation(line: 2404, column: 30, scope: !5513)
!5513 = !DILexicalBlockFile(scope: !5509, file: !919, discriminator: 1)
!5514 = !DILocation(line: 2404, column: 34, scope: !5513)
!5515 = !DILocation(line: 2404, column: 43, scope: !5513)
!5516 = !DILocation(line: 2404, column: 49, scope: !5513)
!5517 = !DILocation(line: 2404, column: 9, scope: !5513)
!5518 = !DILocation(line: 2405, column: 24, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5509, file: !919, line: 2404, column: 60)
!5520 = !DILocation(line: 2405, column: 28, scope: !5519)
!5521 = !DILocation(line: 2405, column: 44, scope: !5519)
!5522 = !DILocation(line: 2405, column: 49, scope: !5519)
!5523 = !DILocation(line: 2405, column: 53, scope: !5519)
!5524 = !DILocation(line: 2405, column: 9, scope: !5519)
!5525 = !DILocation(line: 2406, column: 74, scope: !5519)
!5526 = !DILocation(line: 2406, column: 90, scope: !5519)
!5527 = !DILocation(line: 2406, column: 9, scope: !5519)
!5528 = !DILocation(line: 2407, column: 9, scope: !5519)
!5529 = !DILocation(line: 2411, column: 36, scope: !4028)
!5530 = !DILocation(line: 2411, column: 39, scope: !4028)
!5531 = !DILocation(line: 2411, column: 42, scope: !4028)
!5532 = !DILocation(line: 2411, column: 19, scope: !4028)
!5533 = !DILocation(line: 2411, column: 17, scope: !4028)
!5534 = !DILocation(line: 2412, column: 14, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2412, column: 5)
!5536 = !DILocation(line: 2412, column: 18, scope: !5535)
!5537 = !DILocation(line: 2412, column: 12, scope: !5535)
!5538 = !DILocation(line: 2412, column: 10, scope: !5535)
!5539 = !DILocation(line: 2412, column: 29, scope: !5540)
!5540 = !DILexicalBlockFile(scope: !5541, file: !919, discriminator: 1)
!5541 = distinct !DILexicalBlock(scope: !5535, file: !919, line: 2412, column: 5)
!5542 = !DILocation(line: 2412, column: 33, scope: !5540)
!5543 = !DILocation(line: 2412, column: 31, scope: !5540)
!5544 = !DILocation(line: 2412, column: 5, scope: !5540)
!5545 = !DILocation(line: 2413, column: 11, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5541, file: !919, line: 2412, column: 57)
!5547 = !DILocation(line: 2414, column: 9, scope: !5546)
!5548 = !DILocation(line: 2414, column: 48, scope: !5549)
!5549 = !DILexicalBlockFile(scope: !5546, file: !919, discriminator: 1)
!5550 = !DILocation(line: 2414, column: 33, scope: !5549)
!5551 = !DILocation(line: 2414, column: 52, scope: !5549)
!5552 = !DILocation(line: 2414, column: 70, scope: !5549)
!5553 = !DILocation(line: 2414, column: 21, scope: !5549)
!5554 = !DILocation(line: 2414, column: 19, scope: !5549)
!5555 = !DILocation(line: 2414, column: 9, scope: !5549)
!5556 = !DILocation(line: 2416, column: 39, scope: !5546)
!5557 = !DILocation(line: 2416, column: 42, scope: !5546)
!5558 = !DILocation(line: 2416, column: 13, scope: !5546)
!5559 = !DILocation(line: 2414, column: 9, scope: !5560)
!5560 = !DILexicalBlockFile(scope: !5546, file: !919, discriminator: 2)
!5561 = distinct !{!5561, !5547}
!5562 = !DILocation(line: 2417, column: 5, scope: !5546)
!5563 = !DILocation(line: 2412, column: 53, scope: !5564)
!5564 = !DILexicalBlockFile(scope: !5541, file: !919, discriminator: 2)
!5565 = !DILocation(line: 2412, column: 5, scope: !5564)
!5566 = distinct !{!5566, !5567}
!5567 = !DILocation(line: 2412, column: 5, scope: !4028)
!5568 = !DILocation(line: 2419, column: 7, scope: !4028)
!5569 = !DILocation(line: 2420, column: 5, scope: !4028)
!5570 = !DILocation(line: 2420, column: 29, scope: !5571)
!5571 = !DILexicalBlockFile(scope: !4028, file: !919, discriminator: 1)
!5572 = !DILocation(line: 2420, column: 46, scope: !5571)
!5573 = !DILocation(line: 2420, column: 17, scope: !5571)
!5574 = !DILocation(line: 2420, column: 15, scope: !5571)
!5575 = !DILocation(line: 2420, column: 5, scope: !5571)
!5576 = !DILocalVariable(name: "class", scope: !5577, file: !919, line: 2421, type: !976)
!5577 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2420, column: 54)
!5578 = !DILocation(line: 2421, column: 24, scope: !5577)
!5579 = !DILocation(line: 2421, column: 32, scope: !5577)
!5580 = !DILocalVariable(name: "option", scope: !5577, file: !919, line: 2422, type: !3869)
!5581 = !DILocation(line: 2422, column: 25, scope: !5577)
!5582 = !DILocation(line: 2422, column: 46, scope: !5577)
!5583 = !DILocation(line: 2422, column: 54, scope: !5577)
!5584 = !DILocation(line: 2422, column: 57, scope: !5577)
!5585 = !DILocation(line: 2422, column: 34, scope: !5577)
!5586 = !DILocalVariable(name: "fclass", scope: !5577, file: !919, line: 2424, type: !976)
!5587 = !DILocation(line: 2424, column: 24, scope: !5577)
!5588 = !DILocation(line: 2424, column: 33, scope: !5577)
!5589 = !DILocalVariable(name: "foption", scope: !5577, file: !919, line: 2425, type: !3869)
!5590 = !DILocation(line: 2425, column: 25, scope: !5577)
!5591 = !DILocation(line: 2425, column: 47, scope: !5577)
!5592 = !DILocation(line: 2425, column: 56, scope: !5577)
!5593 = !DILocation(line: 2425, column: 59, scope: !5577)
!5594 = !DILocation(line: 2425, column: 35, scope: !5577)
!5595 = !DILocation(line: 2427, column: 14, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5577, file: !919, line: 2427, column: 13)
!5597 = !DILocation(line: 2427, column: 21, scope: !5596)
!5598 = !DILocation(line: 2427, column: 24, scope: !5599)
!5599 = !DILexicalBlockFile(scope: !5596, file: !919, discriminator: 1)
!5600 = !DILocation(line: 2427, column: 13, scope: !5599)
!5601 = !DILocation(line: 2428, column: 13, scope: !5596)
!5602 = distinct !{!5602, !5569}
!5603 = !DILocation(line: 2431, column: 15, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5577, file: !919, line: 2431, column: 13)
!5605 = !DILocation(line: 2431, column: 23, scope: !5604)
!5606 = !DILocation(line: 2431, column: 29, scope: !5604)
!5607 = !DILocation(line: 2431, column: 13, scope: !5577)
!5608 = !DILocation(line: 2433, column: 73, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5604, file: !919, line: 2431, column: 35)
!5610 = !DILocation(line: 2433, column: 76, scope: !5609)
!5611 = !DILocation(line: 2434, column: 20, scope: !5609)
!5612 = !DILocation(line: 2434, column: 28, scope: !5609)
!5613 = !DILocation(line: 2434, column: 35, scope: !5614)
!5614 = !DILexicalBlockFile(scope: !5609, file: !919, discriminator: 1)
!5615 = !DILocation(line: 2434, column: 43, scope: !5614)
!5616 = !DILocation(line: 2434, column: 20, scope: !5614)
!5617 = !DILocation(line: 2434, column: 20, scope: !5618)
!5618 = !DILexicalBlockFile(scope: !5609, file: !919, discriminator: 2)
!5619 = !DILocation(line: 2434, column: 20, scope: !5620)
!5620 = !DILexicalBlockFile(scope: !5609, file: !919, discriminator: 3)
!5621 = !DILocation(line: 2434, column: 54, scope: !5620)
!5622 = !DILocation(line: 2434, column: 70, scope: !5620)
!5623 = !DILocation(line: 2435, column: 20, scope: !5609)
!5624 = !DILocation(line: 2432, column: 13, scope: !5609)
!5625 = !DILocation(line: 2436, column: 13, scope: !5609)
!5626 = !DILocation(line: 2440, column: 21, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5577, file: !919, line: 2440, column: 13)
!5628 = !DILocation(line: 2440, column: 24, scope: !5627)
!5629 = !DILocation(line: 2440, column: 14, scope: !5627)
!5630 = !DILocation(line: 2440, column: 13, scope: !5577)
!5631 = !DILocation(line: 2441, column: 13, scope: !5627)
!5632 = !DILocation(line: 2447, column: 65, scope: !5577)
!5633 = !DILocation(line: 2447, column: 68, scope: !5577)
!5634 = !DILocation(line: 2448, column: 16, scope: !5577)
!5635 = !DILocation(line: 2448, column: 24, scope: !5577)
!5636 = !DILocation(line: 2448, column: 31, scope: !5637)
!5637 = !DILexicalBlockFile(scope: !5577, file: !919, discriminator: 1)
!5638 = !DILocation(line: 2448, column: 39, scope: !5637)
!5639 = !DILocation(line: 2448, column: 16, scope: !5637)
!5640 = !DILocation(line: 2448, column: 16, scope: !5641)
!5641 = !DILexicalBlockFile(scope: !5577, file: !919, discriminator: 2)
!5642 = !DILocation(line: 2448, column: 16, scope: !5643)
!5643 = !DILexicalBlockFile(scope: !5577, file: !919, discriminator: 3)
!5644 = !DILocation(line: 2448, column: 50, scope: !5643)
!5645 = !DILocation(line: 2448, column: 66, scope: !5643)
!5646 = !DILocation(line: 2448, column: 71, scope: !5643)
!5647 = !DILocation(line: 2443, column: 9, scope: !5577)
!5648 = !DILocation(line: 2420, column: 5, scope: !5649)
!5649 = !DILexicalBlockFile(scope: !4028, file: !919, discriminator: 2)
!5650 = !DILocation(line: 2450, column: 5, scope: !4028)
!5651 = !DILocation(line: 2453, column: 14, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2453, column: 5)
!5653 = !DILocation(line: 2453, column: 18, scope: !5652)
!5654 = !DILocation(line: 2453, column: 12, scope: !5652)
!5655 = !DILocation(line: 2453, column: 10, scope: !5652)
!5656 = !DILocation(line: 2453, column: 29, scope: !5657)
!5657 = !DILexicalBlockFile(scope: !5658, file: !919, discriminator: 1)
!5658 = distinct !DILexicalBlock(scope: !5652, file: !919, line: 2453, column: 5)
!5659 = !DILocation(line: 2453, column: 33, scope: !5657)
!5660 = !DILocation(line: 2453, column: 31, scope: !5657)
!5661 = !DILocation(line: 2453, column: 5, scope: !5657)
!5662 = !DILocalVariable(name: "ost", scope: !5663, file: !919, line: 2454, type: !4056)
!5663 = distinct !DILexicalBlock(scope: !5658, file: !919, line: 2453, column: 57)
!5664 = !DILocation(line: 2454, column: 23, scope: !5663)
!5665 = !DILocation(line: 2454, column: 44, scope: !5663)
!5666 = !DILocation(line: 2454, column: 29, scope: !5663)
!5667 = !DILocation(line: 2456, column: 13, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5663, file: !919, line: 2456, column: 13)
!5669 = !DILocation(line: 2456, column: 18, scope: !5668)
!5670 = !DILocation(line: 2456, column: 34, scope: !5668)
!5671 = !DILocation(line: 2456, column: 37, scope: !5672)
!5672 = !DILexicalBlockFile(scope: !5668, file: !919, discriminator: 1)
!5673 = !DILocation(line: 2456, column: 42, scope: !5672)
!5674 = !DILocation(line: 2456, column: 55, scope: !5672)
!5675 = !DILocation(line: 2456, column: 13, scope: !5672)
!5676 = !DILocalVariable(name: "ist", scope: !5677, file: !919, line: 2457, type: !4374)
!5677 = distinct !DILexicalBlock(scope: !5668, file: !919, line: 2456, column: 61)
!5678 = !DILocation(line: 2457, column: 26, scope: !5677)
!5679 = !DILocation(line: 2457, column: 46, scope: !5677)
!5680 = !DILocation(line: 2457, column: 51, scope: !5677)
!5681 = !DILocation(line: 2457, column: 32, scope: !5677)
!5682 = !DILocation(line: 2458, column: 13, scope: !5677)
!5683 = !DILocation(line: 2458, column: 18, scope: !5677)
!5684 = !DILocation(line: 2458, column: 34, scope: !5677)
!5685 = !DILocation(line: 2460, column: 17, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5677, file: !919, line: 2460, column: 17)
!5687 = !DILocation(line: 2460, column: 22, scope: !5686)
!5688 = !DILocation(line: 2460, column: 26, scope: !5686)
!5689 = !DILocation(line: 2460, column: 36, scope: !5686)
!5690 = !DILocation(line: 2460, column: 47, scope: !5686)
!5691 = !DILocation(line: 2460, column: 69, scope: !5686)
!5692 = !DILocation(line: 2461, column: 17, scope: !5686)
!5693 = !DILocation(line: 2461, column: 22, scope: !5686)
!5694 = !DILocation(line: 2461, column: 26, scope: !5686)
!5695 = !DILocation(line: 2461, column: 36, scope: !5686)
!5696 = !DILocation(line: 2461, column: 47, scope: !5686)
!5697 = !DILocation(line: 2460, column: 17, scope: !5698)
!5698 = !DILexicalBlockFile(scope: !5677, file: !919, discriminator: 1)
!5699 = !DILocation(line: 2462, column: 47, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5686, file: !919, line: 2461, column: 70)
!5701 = !DILocation(line: 2462, column: 52, scope: !5700)
!5702 = !DILocation(line: 2462, column: 23, scope: !5700)
!5703 = !DILocation(line: 2462, column: 21, scope: !5700)
!5704 = !DILocation(line: 2463, column: 21, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5700, file: !919, line: 2463, column: 21)
!5706 = !DILocation(line: 2463, column: 25, scope: !5705)
!5707 = !DILocation(line: 2463, column: 21, scope: !5700)
!5708 = !DILocation(line: 2466, column: 46, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5705, file: !919, line: 2463, column: 30)
!5710 = !DILocation(line: 2466, column: 51, scope: !5709)
!5711 = !DILocation(line: 2466, column: 63, scope: !5709)
!5712 = !DILocation(line: 2466, column: 68, scope: !5709)
!5713 = !DILocation(line: 2467, column: 28, scope: !5709)
!5714 = !DILocation(line: 2467, column: 44, scope: !5709)
!5715 = !DILocation(line: 2467, column: 49, scope: !5709)
!5716 = !DILocation(line: 2467, column: 54, scope: !5709)
!5717 = !DILocation(line: 2467, column: 58, scope: !5709)
!5718 = !DILocation(line: 2464, column: 21, scope: !5709)
!5719 = !DILocation(line: 2468, column: 21, scope: !5709)
!5720 = !DILocation(line: 2470, column: 13, scope: !5700)
!5721 = !DILocation(line: 2471, column: 9, scope: !5677)
!5722 = !DILocation(line: 2474, column: 13, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5663, file: !919, line: 2474, column: 13)
!5724 = !DILocation(line: 2474, column: 18, scope: !5723)
!5725 = !DILocation(line: 2474, column: 13, scope: !5663)
!5726 = !DILocalVariable(name: "f", scope: !5727, file: !919, line: 2475, type: !4148)
!5727 = distinct !DILexicalBlock(scope: !5723, file: !919, line: 2474, column: 26)
!5728 = !DILocation(line: 2475, column: 27, scope: !5727)
!5729 = !DILocation(line: 2475, column: 31, scope: !5727)
!5730 = !DILocation(line: 2475, column: 36, scope: !5727)
!5731 = !DILocalVariable(name: "count", scope: !5727, file: !919, line: 2476, type: !998)
!5732 = !DILocation(line: 2476, column: 17, scope: !5727)
!5733 = !DILocation(line: 2477, column: 21, scope: !5727)
!5734 = !DILocation(line: 2477, column: 26, scope: !5727)
!5735 = !DILocation(line: 2477, column: 35, scope: !5727)
!5736 = !DILocation(line: 2477, column: 13, scope: !5727)
!5737 = !DILocation(line: 2479, column: 17, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5727, file: !919, line: 2477, column: 47)
!5739 = !DILocation(line: 2479, column: 20, scope: !5738)
!5740 = !DILocation(line: 2479, column: 33, scope: !5738)
!5741 = !DILocation(line: 2479, column: 38, scope: !5738)
!5742 = !DILocation(line: 2480, column: 28, scope: !5738)
!5743 = !DILocation(line: 2480, column: 33, scope: !5738)
!5744 = !DILocation(line: 2480, column: 42, scope: !5738)
!5745 = !DILocation(line: 2480, column: 17, scope: !5738)
!5746 = !DILocation(line: 2480, column: 20, scope: !5738)
!5747 = !DILocation(line: 2480, column: 26, scope: !5738)
!5748 = !DILocation(line: 2481, column: 29, scope: !5738)
!5749 = !DILocation(line: 2481, column: 34, scope: !5738)
!5750 = !DILocation(line: 2481, column: 43, scope: !5738)
!5751 = !DILocation(line: 2481, column: 17, scope: !5738)
!5752 = !DILocation(line: 2481, column: 20, scope: !5738)
!5753 = !DILocation(line: 2481, column: 27, scope: !5738)
!5754 = !DILocation(line: 2482, column: 21, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5738, file: !919, line: 2482, column: 21)
!5756 = !DILocation(line: 2482, column: 26, scope: !5755)
!5757 = !DILocation(line: 2482, column: 35, scope: !5755)
!5758 = !DILocation(line: 2482, column: 43, scope: !5755)
!5759 = !DILocation(line: 2482, column: 21, scope: !5738)
!5760 = !DILocation(line: 2483, column: 33, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5755, file: !919, line: 2482, column: 63)
!5762 = !DILocation(line: 2483, column: 38, scope: !5761)
!5763 = !DILocation(line: 2483, column: 47, scope: !5761)
!5764 = !DILocation(line: 2483, column: 21, scope: !5761)
!5765 = !DILocation(line: 2483, column: 24, scope: !5761)
!5766 = !DILocation(line: 2483, column: 31, scope: !5761)
!5767 = !DILocation(line: 2484, column: 17, scope: !5761)
!5768 = !DILocation(line: 2484, column: 28, scope: !5769)
!5769 = !DILexicalBlockFile(scope: !5770, file: !919, discriminator: 1)
!5770 = distinct !DILexicalBlock(scope: !5755, file: !919, line: 2484, column: 28)
!5771 = !DILocation(line: 2484, column: 33, scope: !5769)
!5772 = !DILocation(line: 2484, column: 38, scope: !5769)
!5773 = !DILocation(line: 2485, column: 27, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5770, file: !919, line: 2484, column: 48)
!5775 = !DILocation(line: 2486, column: 21, scope: !5774)
!5776 = !DILocation(line: 2486, column: 47, scope: !5777)
!5777 = !DILexicalBlockFile(scope: !5774, file: !919, discriminator: 1)
!5778 = !DILocation(line: 2486, column: 28, scope: !5777)
!5779 = !DILocation(line: 2486, column: 33, scope: !5777)
!5780 = !DILocation(line: 2486, column: 38, scope: !5777)
!5781 = !DILocation(line: 2486, column: 54, scope: !5777)
!5782 = !DILocation(line: 2486, column: 21, scope: !5777)
!5783 = !DILocation(line: 2487, column: 30, scope: !5774)
!5784 = !DILocation(line: 2486, column: 21, scope: !5785)
!5785 = !DILexicalBlockFile(scope: !5774, file: !919, discriminator: 2)
!5786 = distinct !{!5786, !5775}
!5787 = !DILocation(line: 2488, column: 51, scope: !5774)
!5788 = !DILocation(line: 2488, column: 57, scope: !5774)
!5789 = !DILocation(line: 2488, column: 34, scope: !5774)
!5790 = !DILocation(line: 2488, column: 21, scope: !5774)
!5791 = !DILocation(line: 2488, column: 24, scope: !5774)
!5792 = !DILocation(line: 2488, column: 32, scope: !5774)
!5793 = !DILocation(line: 2489, column: 26, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5774, file: !919, line: 2489, column: 25)
!5795 = !DILocation(line: 2489, column: 29, scope: !5794)
!5796 = !DILocation(line: 2489, column: 25, scope: !5774)
!5797 = !DILocation(line: 2490, column: 25, scope: !5794)
!5798 = !DILocation(line: 2491, column: 28, scope: !5774)
!5799 = !DILocation(line: 2491, column: 31, scope: !5774)
!5800 = !DILocation(line: 2491, column: 21, scope: !5774)
!5801 = !DILocation(line: 2491, column: 40, scope: !5774)
!5802 = !DILocation(line: 2491, column: 45, scope: !5774)
!5803 = !DILocation(line: 2491, column: 50, scope: !5774)
!5804 = !DILocation(line: 2491, column: 61, scope: !5774)
!5805 = !DILocation(line: 2491, column: 67, scope: !5774)
!5806 = !DILocation(line: 2491, column: 60, scope: !5774)
!5807 = !DILocation(line: 2491, column: 72, scope: !5774)
!5808 = !DILocation(line: 2492, column: 17, scope: !5774)
!5809 = !DILocation(line: 2493, column: 17, scope: !5738)
!5810 = !DILocation(line: 2495, column: 21, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5738, file: !919, line: 2495, column: 21)
!5812 = !DILocation(line: 2495, column: 26, scope: !5811)
!5813 = !DILocation(line: 2495, column: 35, scope: !5811)
!5814 = !DILocation(line: 2495, column: 46, scope: !5811)
!5815 = !DILocation(line: 2495, column: 21, scope: !5738)
!5816 = !DILocation(line: 2496, column: 33, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5811, file: !919, line: 2495, column: 69)
!5818 = !DILocation(line: 2496, column: 38, scope: !5817)
!5819 = !DILocation(line: 2496, column: 47, scope: !5817)
!5820 = !DILocation(line: 2496, column: 21, scope: !5817)
!5821 = !DILocation(line: 2496, column: 24, scope: !5817)
!5822 = !DILocation(line: 2496, column: 31, scope: !5817)
!5823 = !DILocation(line: 2497, column: 17, scope: !5817)
!5824 = !DILocation(line: 2497, column: 28, scope: !5825)
!5825 = !DILexicalBlockFile(scope: !5826, file: !919, discriminator: 1)
!5826 = distinct !DILexicalBlock(scope: !5811, file: !919, line: 2497, column: 28)
!5827 = !DILocation(line: 2497, column: 33, scope: !5825)
!5828 = !DILocation(line: 2497, column: 38, scope: !5825)
!5829 = !DILocation(line: 2498, column: 27, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5826, file: !919, line: 2497, column: 51)
!5831 = !DILocation(line: 2499, column: 21, scope: !5830)
!5832 = !DILocation(line: 2499, column: 50, scope: !5833)
!5833 = !DILexicalBlockFile(scope: !5830, file: !919, discriminator: 1)
!5834 = !DILocation(line: 2499, column: 28, scope: !5833)
!5835 = !DILocation(line: 2499, column: 33, scope: !5833)
!5836 = !DILocation(line: 2499, column: 38, scope: !5833)
!5837 = !DILocation(line: 2499, column: 57, scope: !5833)
!5838 = !DILocation(line: 2499, column: 21, scope: !5833)
!5839 = !DILocation(line: 2500, column: 30, scope: !5830)
!5840 = !DILocation(line: 2499, column: 21, scope: !5841)
!5841 = !DILexicalBlockFile(scope: !5830, file: !919, discriminator: 2)
!5842 = distinct !{!5842, !5831}
!5843 = !DILocation(line: 2501, column: 51, scope: !5830)
!5844 = !DILocation(line: 2501, column: 57, scope: !5830)
!5845 = !DILocation(line: 2501, column: 34, scope: !5830)
!5846 = !DILocation(line: 2501, column: 21, scope: !5830)
!5847 = !DILocation(line: 2501, column: 24, scope: !5830)
!5848 = !DILocation(line: 2501, column: 32, scope: !5830)
!5849 = !DILocation(line: 2502, column: 26, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5830, file: !919, line: 2502, column: 25)
!5851 = !DILocation(line: 2502, column: 29, scope: !5850)
!5852 = !DILocation(line: 2502, column: 25, scope: !5830)
!5853 = !DILocation(line: 2503, column: 25, scope: !5850)
!5854 = !DILocation(line: 2504, column: 28, scope: !5830)
!5855 = !DILocation(line: 2504, column: 31, scope: !5830)
!5856 = !DILocation(line: 2504, column: 21, scope: !5830)
!5857 = !DILocation(line: 2504, column: 40, scope: !5830)
!5858 = !DILocation(line: 2504, column: 45, scope: !5830)
!5859 = !DILocation(line: 2504, column: 50, scope: !5830)
!5860 = !DILocation(line: 2504, column: 64, scope: !5830)
!5861 = !DILocation(line: 2504, column: 70, scope: !5830)
!5862 = !DILocation(line: 2504, column: 63, scope: !5830)
!5863 = !DILocation(line: 2504, column: 75, scope: !5830)
!5864 = !DILocation(line: 2505, column: 17, scope: !5830)
!5865 = !DILocation(line: 2506, column: 21, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5738, file: !919, line: 2506, column: 21)
!5867 = !DILocation(line: 2506, column: 26, scope: !5866)
!5868 = !DILocation(line: 2506, column: 35, scope: !5866)
!5869 = !DILocation(line: 2506, column: 21, scope: !5738)
!5870 = !DILocation(line: 2507, column: 38, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5866, file: !919, line: 2506, column: 48)
!5872 = !DILocation(line: 2507, column: 43, scope: !5871)
!5873 = !DILocation(line: 2507, column: 52, scope: !5871)
!5874 = !DILocation(line: 2507, column: 21, scope: !5871)
!5875 = !DILocation(line: 2507, column: 24, scope: !5871)
!5876 = !DILocation(line: 2507, column: 36, scope: !5871)
!5877 = !DILocation(line: 2508, column: 17, scope: !5871)
!5878 = !DILocation(line: 2508, column: 28, scope: !5879)
!5879 = !DILexicalBlockFile(scope: !5880, file: !919, discriminator: 1)
!5880 = distinct !DILexicalBlock(scope: !5866, file: !919, line: 2508, column: 28)
!5881 = !DILocation(line: 2508, column: 33, scope: !5879)
!5882 = !DILocation(line: 2508, column: 38, scope: !5879)
!5883 = !DILocation(line: 2509, column: 27, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5880, file: !919, line: 2508, column: 61)
!5885 = !DILocation(line: 2510, column: 21, scope: !5884)
!5886 = !DILocation(line: 2510, column: 60, scope: !5887)
!5887 = !DILexicalBlockFile(scope: !5884, file: !919, discriminator: 1)
!5888 = !DILocation(line: 2510, column: 28, scope: !5887)
!5889 = !DILocation(line: 2510, column: 33, scope: !5887)
!5890 = !DILocation(line: 2510, column: 38, scope: !5887)
!5891 = !DILocation(line: 2510, column: 21, scope: !5887)
!5892 = !DILocation(line: 2511, column: 30, scope: !5884)
!5893 = !DILocation(line: 2510, column: 21, scope: !5894)
!5894 = !DILexicalBlockFile(scope: !5884, file: !919, discriminator: 2)
!5895 = distinct !{!5895, !5885}
!5896 = !DILocation(line: 2512, column: 56, scope: !5884)
!5897 = !DILocation(line: 2512, column: 62, scope: !5884)
!5898 = !DILocation(line: 2512, column: 39, scope: !5884)
!5899 = !DILocation(line: 2512, column: 21, scope: !5884)
!5900 = !DILocation(line: 2512, column: 24, scope: !5884)
!5901 = !DILocation(line: 2512, column: 37, scope: !5884)
!5902 = !DILocation(line: 2513, column: 26, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5884, file: !919, line: 2513, column: 25)
!5904 = !DILocation(line: 2513, column: 29, scope: !5903)
!5905 = !DILocation(line: 2513, column: 25, scope: !5884)
!5906 = !DILocation(line: 2514, column: 25, scope: !5903)
!5907 = !DILocation(line: 2515, column: 28, scope: !5884)
!5908 = !DILocation(line: 2515, column: 31, scope: !5884)
!5909 = !DILocation(line: 2515, column: 21, scope: !5884)
!5910 = !DILocation(line: 2515, column: 45, scope: !5884)
!5911 = !DILocation(line: 2515, column: 50, scope: !5884)
!5912 = !DILocation(line: 2515, column: 55, scope: !5884)
!5913 = !DILocation(line: 2516, column: 29, scope: !5884)
!5914 = !DILocation(line: 2516, column: 35, scope: !5884)
!5915 = !DILocation(line: 2516, column: 28, scope: !5884)
!5916 = !DILocation(line: 2516, column: 40, scope: !5884)
!5917 = !DILocation(line: 2517, column: 17, scope: !5884)
!5918 = !DILocation(line: 2518, column: 21, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5738, file: !919, line: 2518, column: 21)
!5920 = !DILocation(line: 2518, column: 26, scope: !5919)
!5921 = !DILocation(line: 2518, column: 35, scope: !5919)
!5922 = !DILocation(line: 2518, column: 21, scope: !5738)
!5923 = !DILocation(line: 2519, column: 71, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5919, file: !919, line: 2518, column: 45)
!5925 = !DILocation(line: 2519, column: 76, scope: !5924)
!5926 = !DILocation(line: 2519, column: 85, scope: !5924)
!5927 = !DILocation(line: 2519, column: 41, scope: !5924)
!5928 = !DILocation(line: 2519, column: 21, scope: !5924)
!5929 = !DILocation(line: 2519, column: 24, scope: !5924)
!5930 = !DILocation(line: 2519, column: 39, scope: !5924)
!5931 = !DILocation(line: 2520, column: 17, scope: !5924)
!5932 = !DILocation(line: 2520, column: 28, scope: !5933)
!5933 = !DILexicalBlockFile(scope: !5934, file: !919, discriminator: 1)
!5934 = distinct !DILexicalBlock(scope: !5919, file: !919, line: 2520, column: 28)
!5935 = !DILocation(line: 2520, column: 33, scope: !5933)
!5936 = !DILocation(line: 2520, column: 38, scope: !5933)
!5937 = !DILocation(line: 2521, column: 27, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5934, file: !919, line: 2520, column: 55)
!5939 = !DILocation(line: 2522, column: 21, scope: !5938)
!5940 = !DILocation(line: 2522, column: 54, scope: !5941)
!5941 = !DILexicalBlockFile(scope: !5938, file: !919, discriminator: 1)
!5942 = !DILocation(line: 2522, column: 28, scope: !5941)
!5943 = !DILocation(line: 2522, column: 33, scope: !5941)
!5944 = !DILocation(line: 2522, column: 38, scope: !5941)
!5945 = !DILocation(line: 2522, column: 21, scope: !5941)
!5946 = !DILocation(line: 2523, column: 30, scope: !5938)
!5947 = !DILocation(line: 2522, column: 21, scope: !5948)
!5948 = !DILexicalBlockFile(scope: !5938, file: !919, discriminator: 2)
!5949 = distinct !{!5949, !5939}
!5950 = !DILocation(line: 2524, column: 59, scope: !5938)
!5951 = !DILocation(line: 2524, column: 65, scope: !5938)
!5952 = !DILocation(line: 2524, column: 42, scope: !5938)
!5953 = !DILocation(line: 2524, column: 21, scope: !5938)
!5954 = !DILocation(line: 2524, column: 24, scope: !5938)
!5955 = !DILocation(line: 2524, column: 40, scope: !5938)
!5956 = !DILocation(line: 2525, column: 26, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5938, file: !919, line: 2525, column: 25)
!5958 = !DILocation(line: 2525, column: 29, scope: !5957)
!5959 = !DILocation(line: 2525, column: 25, scope: !5938)
!5960 = !DILocation(line: 2526, column: 25, scope: !5957)
!5961 = !DILocation(line: 2527, column: 28, scope: !5938)
!5962 = !DILocation(line: 2527, column: 31, scope: !5938)
!5963 = !DILocation(line: 2527, column: 21, scope: !5938)
!5964 = !DILocation(line: 2527, column: 48, scope: !5938)
!5965 = !DILocation(line: 2527, column: 53, scope: !5938)
!5966 = !DILocation(line: 2527, column: 58, scope: !5938)
!5967 = !DILocation(line: 2528, column: 29, scope: !5938)
!5968 = !DILocation(line: 2528, column: 35, scope: !5938)
!5969 = !DILocation(line: 2528, column: 28, scope: !5938)
!5970 = !DILocation(line: 2528, column: 40, scope: !5938)
!5971 = !DILocation(line: 2529, column: 17, scope: !5938)
!5972 = !DILocation(line: 2530, column: 17, scope: !5738)
!5973 = !DILocation(line: 2532, column: 9, scope: !5727)
!5974 = !DILocation(line: 2533, column: 5, scope: !5663)
!5975 = !DILocation(line: 2453, column: 53, scope: !5976)
!5976 = !DILexicalBlockFile(scope: !5658, file: !919, discriminator: 2)
!5977 = !DILocation(line: 2453, column: 5, scope: !5976)
!5978 = distinct !{!5978, !5979}
!5979 = !DILocation(line: 2453, column: 5, scope: !4028)
!5980 = !DILocation(line: 2536, column: 9, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2536, column: 9)
!5982 = !DILocation(line: 2536, column: 13, scope: !5981)
!5983 = !DILocation(line: 2536, column: 22, scope: !5981)
!5984 = !DILocation(line: 2536, column: 28, scope: !5981)
!5985 = !DILocation(line: 2536, column: 9, scope: !4028)
!5986 = !DILocation(line: 2537, column: 38, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5988, file: !919, line: 2537, column: 13)
!5988 = distinct !DILexicalBlock(scope: !5981, file: !919, line: 2536, column: 38)
!5989 = !DILocation(line: 2537, column: 42, scope: !5987)
!5990 = !DILocation(line: 2537, column: 14, scope: !5987)
!5991 = !DILocation(line: 2537, column: 13, scope: !5988)
!5992 = !DILocation(line: 2538, column: 25, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5987, file: !919, line: 2537, column: 48)
!5994 = !DILocation(line: 2538, column: 29, scope: !5993)
!5995 = !DILocation(line: 2538, column: 13, scope: !5993)
!5996 = !DILocation(line: 2539, column: 13, scope: !5993)
!5997 = !DILocation(line: 2541, column: 5, scope: !5988)
!5998 = !DILocation(line: 2543, column: 11, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2543, column: 9)
!6000 = !DILocation(line: 2543, column: 15, scope: !5999)
!6001 = !DILocation(line: 2543, column: 24, scope: !5999)
!6002 = !DILocation(line: 2543, column: 30, scope: !5999)
!6003 = !DILocation(line: 2543, column: 40, scope: !5999)
!6004 = !DILocation(line: 2543, column: 44, scope: !6005)
!6005 = !DILexicalBlockFile(scope: !5999, file: !919, discriminator: 1)
!6006 = !DILocation(line: 2543, column: 9, scope: !6005)
!6007 = !DILocation(line: 2544, column: 9, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !5999, file: !919, line: 2543, column: 80)
!6009 = !DILocation(line: 2546, column: 9, scope: !6008)
!6010 = !DILocation(line: 2549, column: 11, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2549, column: 9)
!6012 = !DILocation(line: 2549, column: 15, scope: !6011)
!6013 = !DILocation(line: 2549, column: 24, scope: !6011)
!6014 = !DILocation(line: 2549, column: 30, scope: !6011)
!6015 = !DILocation(line: 2549, column: 9, scope: !4028)
!6016 = !DILocation(line: 2551, column: 31, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6011, file: !919, line: 2549, column: 41)
!6018 = !DILocation(line: 2551, column: 9, scope: !6017)
!6019 = !DILocation(line: 2554, column: 32, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6017, file: !919, line: 2554, column: 13)
!6021 = !DILocation(line: 2554, column: 36, scope: !6020)
!6022 = !DILocation(line: 2554, column: 40, scope: !6020)
!6023 = !DILocation(line: 2555, column: 32, scope: !6020)
!6024 = !DILocation(line: 2555, column: 36, scope: !6020)
!6025 = !DILocation(line: 2556, column: 32, scope: !6020)
!6026 = !DILocation(line: 2556, column: 36, scope: !6020)
!6027 = !DILocation(line: 2554, column: 20, scope: !6020)
!6028 = !DILocation(line: 2554, column: 18, scope: !6020)
!6029 = !DILocation(line: 2556, column: 43, scope: !6020)
!6030 = !DILocation(line: 2554, column: 13, scope: !6017)
!6031 = !DILocation(line: 2557, column: 25, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6020, file: !919, line: 2556, column: 48)
!6033 = !DILocation(line: 2557, column: 35, scope: !6032)
!6034 = !DILocation(line: 2557, column: 13, scope: !6032)
!6035 = !DILocation(line: 2558, column: 13, scope: !6032)
!6036 = !DILocation(line: 2560, column: 5, scope: !6017)
!6037 = !DILocation(line: 2560, column: 23, scope: !6038)
!6038 = !DILexicalBlockFile(scope: !6039, file: !919, discriminator: 1)
!6039 = distinct !DILexicalBlock(scope: !6011, file: !919, line: 2560, column: 16)
!6040 = !DILocation(line: 2560, column: 27, scope: !6038)
!6041 = !DILocation(line: 2560, column: 36, scope: !6038)
!6042 = !DILocation(line: 2560, column: 16, scope: !6038)
!6043 = !DILocation(line: 2560, column: 51, scope: !6038)
!6044 = !DILocation(line: 2560, column: 55, scope: !6038)
!6045 = !DILocation(line: 2560, column: 83, scope: !6046)
!6046 = !DILexicalBlockFile(scope: !6039, file: !919, discriminator: 2)
!6047 = !DILocation(line: 2560, column: 59, scope: !6046)
!6048 = !DILocation(line: 2560, column: 16, scope: !6046)
!6049 = !DILocation(line: 2561, column: 31, scope: !6039)
!6050 = !DILocation(line: 2561, column: 9, scope: !6039)
!6051 = !DILocation(line: 2563, column: 9, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2563, column: 9)
!6053 = !DILocation(line: 2563, column: 12, scope: !6052)
!6054 = !DILocation(line: 2563, column: 9, scope: !4028)
!6055 = !DILocation(line: 2564, column: 26, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6052, file: !919, line: 2563, column: 25)
!6057 = !DILocation(line: 2564, column: 30, scope: !6056)
!6058 = !DILocation(line: 2564, column: 47, scope: !6056)
!6059 = !DILocation(line: 2564, column: 50, scope: !6056)
!6060 = !DILocation(line: 2564, column: 61, scope: !6056)
!6061 = !DILocation(line: 2564, column: 9, scope: !6056)
!6062 = !DILocation(line: 2565, column: 5, scope: !6056)
!6063 = !DILocation(line: 2566, column: 27, scope: !4028)
!6064 = !DILocation(line: 2566, column: 30, scope: !4028)
!6065 = !DILocation(line: 2566, column: 44, scope: !4028)
!6066 = !DILocation(line: 2566, column: 21, scope: !4028)
!6067 = !DILocation(line: 2566, column: 5, scope: !4028)
!6068 = !DILocation(line: 2566, column: 9, scope: !4028)
!6069 = !DILocation(line: 2566, column: 19, scope: !4028)
!6070 = !DILocation(line: 2569, column: 12, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2569, column: 5)
!6072 = !DILocation(line: 2569, column: 10, scope: !6071)
!6073 = !DILocation(line: 2569, column: 17, scope: !6074)
!6074 = !DILexicalBlockFile(scope: !6075, file: !919, discriminator: 1)
!6075 = distinct !DILexicalBlock(scope: !6071, file: !919, line: 2569, column: 5)
!6076 = !DILocation(line: 2569, column: 21, scope: !6074)
!6077 = !DILocation(line: 2569, column: 24, scope: !6074)
!6078 = !DILocation(line: 2569, column: 19, scope: !6074)
!6079 = !DILocation(line: 2569, column: 5, scope: !6074)
!6080 = !DILocalVariable(name: "p", scope: !6081, file: !919, line: 2570, type: !1105)
!6081 = distinct !DILexicalBlock(scope: !6075, file: !919, line: 2569, column: 46)
!6082 = !DILocation(line: 2570, column: 15, scope: !6081)
!6083 = !DILocalVariable(name: "in_file_index", scope: !6081, file: !919, line: 2571, type: !998)
!6084 = !DILocation(line: 2571, column: 13, scope: !6081)
!6085 = !DILocation(line: 2571, column: 52, scope: !6081)
!6086 = !DILocation(line: 2571, column: 36, scope: !6081)
!6087 = !DILocation(line: 2571, column: 39, scope: !6081)
!6088 = !DILocation(line: 2571, column: 55, scope: !6081)
!6089 = !DILocation(line: 2571, column: 57, scope: !6081)
!6090 = !DILocation(line: 2571, column: 29, scope: !6081)
!6091 = !DILocation(line: 2573, column: 13, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6081, file: !919, line: 2573, column: 13)
!6093 = !DILocation(line: 2573, column: 30, scope: !6092)
!6094 = !DILocation(line: 2573, column: 27, scope: !6092)
!6095 = !DILocation(line: 2573, column: 13, scope: !6081)
!6096 = !DILocation(line: 2574, column: 92, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6092, file: !919, line: 2573, column: 46)
!6098 = !DILocation(line: 2574, column: 13, scope: !6097)
!6099 = !DILocation(line: 2575, column: 13, scope: !6097)
!6100 = !DILocation(line: 2577, column: 39, scope: !6081)
!6101 = !DILocation(line: 2577, column: 23, scope: !6081)
!6102 = !DILocation(line: 2577, column: 26, scope: !6081)
!6103 = !DILocation(line: 2577, column: 42, scope: !6081)
!6104 = !DILocation(line: 2577, column: 54, scope: !6081)
!6105 = !DILocation(line: 2577, column: 53, scope: !6081)
!6106 = !DILocation(line: 2577, column: 58, scope: !6107)
!6107 = !DILexicalBlockFile(scope: !6081, file: !919, discriminator: 1)
!6108 = !DILocation(line: 2577, column: 60, scope: !6107)
!6109 = !DILocation(line: 2577, column: 53, scope: !6107)
!6110 = !DILocation(line: 2577, column: 66, scope: !6111)
!6111 = !DILexicalBlockFile(scope: !6081, file: !919, discriminator: 2)
!6112 = !DILocation(line: 2577, column: 53, scope: !6111)
!6113 = !DILocation(line: 2577, column: 53, scope: !6114)
!6114 = !DILexicalBlockFile(scope: !6081, file: !919, discriminator: 3)
!6115 = !DILocation(line: 2577, column: 69, scope: !6114)
!6116 = !DILocation(line: 2578, column: 23, scope: !6081)
!6117 = !DILocation(line: 2578, column: 37, scope: !6081)
!6118 = !DILocation(line: 2579, column: 35, scope: !6081)
!6119 = !DILocation(line: 2579, column: 23, scope: !6081)
!6120 = !DILocation(line: 2579, column: 51, scope: !6081)
!6121 = !DILocation(line: 2578, column: 23, scope: !6107)
!6122 = !DILocation(line: 2578, column: 23, scope: !6111)
!6123 = !DILocation(line: 2578, column: 23, scope: !6114)
!6124 = !DILocation(line: 2579, column: 62, scope: !6107)
!6125 = !DILocation(line: 2577, column: 9, scope: !6126)
!6126 = !DILexicalBlockFile(scope: !6081, file: !919, discriminator: 4)
!6127 = !DILocation(line: 2580, column: 5, scope: !6081)
!6128 = !DILocation(line: 2569, column: 42, scope: !6129)
!6129 = !DILexicalBlockFile(scope: !6075, file: !919, discriminator: 2)
!6130 = !DILocation(line: 2569, column: 5, scope: !6129)
!6131 = distinct !{!6131, !6132}
!6132 = !DILocation(line: 2569, column: 5, scope: !4028)
!6133 = !DILocation(line: 2583, column: 9, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2583, column: 9)
!6135 = !DILocation(line: 2583, column: 12, scope: !6134)
!6136 = !DILocation(line: 2583, column: 35, scope: !6134)
!6137 = !DILocation(line: 2583, column: 32, scope: !6134)
!6138 = !DILocation(line: 2583, column: 9, scope: !4028)
!6139 = !DILocation(line: 2584, column: 13, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6141, file: !919, line: 2584, column: 13)
!6141 = distinct !DILexicalBlock(scope: !6134, file: !919, line: 2583, column: 51)
!6142 = !DILocation(line: 2584, column: 16, scope: !6140)
!6143 = !DILocation(line: 2584, column: 36, scope: !6140)
!6144 = !DILocation(line: 2584, column: 13, scope: !6141)
!6145 = !DILocation(line: 2586, column: 13, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6140, file: !919, line: 2584, column: 51)
!6147 = !DILocation(line: 2586, column: 16, scope: !6146)
!6148 = !DILocation(line: 2586, column: 36, scope: !6146)
!6149 = !DILocation(line: 2587, column: 20, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6146, file: !919, line: 2587, column: 13)
!6151 = !DILocation(line: 2587, column: 18, scope: !6150)
!6152 = !DILocation(line: 2587, column: 25, scope: !6153)
!6153 = !DILexicalBlockFile(scope: !6154, file: !919, discriminator: 1)
!6154 = distinct !DILexicalBlock(scope: !6150, file: !919, line: 2587, column: 13)
!6155 = !DILocation(line: 2587, column: 29, scope: !6153)
!6156 = !DILocation(line: 2587, column: 27, scope: !6153)
!6157 = !DILocation(line: 2587, column: 13, scope: !6153)
!6158 = !DILocation(line: 2588, column: 33, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6154, file: !919, line: 2588, column: 21)
!6160 = !DILocation(line: 2588, column: 21, scope: !6159)
!6161 = !DILocation(line: 2588, column: 37, scope: !6159)
!6162 = !DILocation(line: 2588, column: 42, scope: !6159)
!6163 = !DILocation(line: 2588, column: 21, scope: !6154)
!6164 = !DILocation(line: 2589, column: 46, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6159, file: !919, line: 2588, column: 55)
!6166 = !DILocation(line: 2589, column: 21, scope: !6165)
!6167 = !DILocation(line: 2589, column: 24, scope: !6165)
!6168 = !DILocation(line: 2589, column: 44, scope: !6165)
!6169 = !DILocation(line: 2590, column: 21, scope: !6165)
!6170 = !DILocation(line: 2588, column: 42, scope: !6171)
!6171 = !DILexicalBlockFile(scope: !6159, file: !919, discriminator: 1)
!6172 = !DILocation(line: 2587, column: 46, scope: !6173)
!6173 = !DILexicalBlockFile(scope: !6154, file: !919, discriminator: 2)
!6174 = !DILocation(line: 2587, column: 13, scope: !6173)
!6175 = distinct !{!6175, !6176}
!6176 = !DILocation(line: 2587, column: 13, scope: !6146)
!6177 = !DILocation(line: 2592, column: 9, scope: !6146)
!6178 = !DILocation(line: 2594, column: 20, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6140, file: !919, line: 2592, column: 16)
!6180 = !DILocation(line: 2594, column: 23, scope: !6179)
!6181 = !DILocation(line: 2593, column: 13, scope: !6179)
!6182 = !DILocation(line: 2595, column: 13, scope: !6179)
!6183 = !DILocation(line: 2597, column: 5, scope: !6141)
!6184 = !DILocation(line: 2598, column: 9, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2598, column: 9)
!6186 = !DILocation(line: 2598, column: 12, scope: !6185)
!6187 = !DILocation(line: 2598, column: 32, scope: !6185)
!6188 = !DILocation(line: 2598, column: 9, scope: !4028)
!6189 = !DILocation(line: 2599, column: 35, scope: !6185)
!6190 = !DILocation(line: 2599, column: 38, scope: !6185)
!6191 = !DILocation(line: 2599, column: 23, scope: !6185)
!6192 = !DILocation(line: 2599, column: 60, scope: !6185)
!6193 = !DILocation(line: 2600, column: 24, scope: !6185)
!6194 = !DILocation(line: 2600, column: 27, scope: !6185)
!6195 = !DILocation(line: 2600, column: 23, scope: !6185)
!6196 = !DILocation(line: 2599, column: 9, scope: !6185)
!6197 = !DILocation(line: 2603, column: 10, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2603, column: 9)
!6199 = !DILocation(line: 2603, column: 13, scope: !6198)
!6200 = !DILocation(line: 2603, column: 36, scope: !6198)
!6201 = !DILocation(line: 2603, column: 39, scope: !6202)
!6202 = !DILexicalBlockFile(scope: !6198, file: !919, discriminator: 1)
!6203 = !DILocation(line: 2603, column: 9, scope: !6202)
!6204 = !DILocation(line: 2604, column: 23, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6198, file: !919, line: 2603, column: 54)
!6206 = !DILocation(line: 2604, column: 27, scope: !6205)
!6207 = !DILocation(line: 2604, column: 37, scope: !6205)
!6208 = !DILocation(line: 2604, column: 53, scope: !6205)
!6209 = !DILocation(line: 2604, column: 58, scope: !6205)
!6210 = !DILocation(line: 2604, column: 9, scope: !6205)
!6211 = !DILocation(line: 2606, column: 12, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6205, file: !919, line: 2606, column: 12)
!6213 = !DILocation(line: 2606, column: 15, scope: !6212)
!6214 = !DILocation(line: 2606, column: 30, scope: !6212)
!6215 = !DILocation(line: 2606, column: 12, scope: !6205)
!6216 = !DILocation(line: 2607, column: 26, scope: !6212)
!6217 = !DILocation(line: 2607, column: 30, scope: !6212)
!6218 = !DILocation(line: 2607, column: 13, scope: !6212)
!6219 = !DILocation(line: 2608, column: 22, scope: !6205)
!6220 = !DILocation(line: 2608, column: 26, scope: !6205)
!6221 = !DILocation(line: 2608, column: 9, scope: !6205)
!6222 = !DILocation(line: 2609, column: 5, scope: !6205)
!6223 = !DILocation(line: 2610, column: 10, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2610, column: 9)
!6225 = !DILocation(line: 2610, column: 13, scope: !6224)
!6226 = !DILocation(line: 2610, column: 9, scope: !4028)
!6227 = !DILocation(line: 2611, column: 18, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6224, file: !919, line: 2611, column: 9)
!6229 = !DILocation(line: 2611, column: 22, scope: !6228)
!6230 = !DILocation(line: 2611, column: 16, scope: !6228)
!6231 = !DILocation(line: 2611, column: 14, scope: !6228)
!6232 = !DILocation(line: 2611, column: 33, scope: !6233)
!6233 = !DILexicalBlockFile(scope: !6234, file: !919, discriminator: 1)
!6234 = distinct !DILexicalBlock(scope: !6228, file: !919, line: 2611, column: 9)
!6235 = !DILocation(line: 2611, column: 37, scope: !6233)
!6236 = !DILocation(line: 2611, column: 35, scope: !6233)
!6237 = !DILocation(line: 2611, column: 9, scope: !6233)
!6238 = !DILocalVariable(name: "ist", scope: !6239, file: !919, line: 2612, type: !4374)
!6239 = distinct !DILexicalBlock(scope: !6234, file: !919, line: 2611, column: 61)
!6240 = !DILocation(line: 2612, column: 26, scope: !6239)
!6241 = !DILocation(line: 2613, column: 32, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6239, file: !919, line: 2613, column: 17)
!6243 = !DILocation(line: 2613, column: 17, scope: !6242)
!6244 = !DILocation(line: 2613, column: 36, scope: !6242)
!6245 = !DILocation(line: 2613, column: 49, scope: !6242)
!6246 = !DILocation(line: 2613, column: 17, scope: !6239)
!6247 = !DILocation(line: 2614, column: 17, scope: !6242)
!6248 = !DILocation(line: 2615, column: 48, scope: !6239)
!6249 = !DILocation(line: 2615, column: 33, scope: !6239)
!6250 = !DILocation(line: 2615, column: 52, scope: !6239)
!6251 = !DILocation(line: 2615, column: 19, scope: !6239)
!6252 = !DILocation(line: 2615, column: 17, scope: !6239)
!6253 = !DILocation(line: 2616, column: 42, scope: !6239)
!6254 = !DILocation(line: 2616, column: 27, scope: !6239)
!6255 = !DILocation(line: 2616, column: 46, scope: !6239)
!6256 = !DILocation(line: 2616, column: 50, scope: !6239)
!6257 = !DILocation(line: 2616, column: 60, scope: !6239)
!6258 = !DILocation(line: 2616, column: 65, scope: !6239)
!6259 = !DILocation(line: 2616, column: 69, scope: !6239)
!6260 = !DILocation(line: 2616, column: 13, scope: !6239)
!6261 = !DILocation(line: 2617, column: 33, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6239, file: !919, line: 2617, column: 17)
!6263 = !DILocation(line: 2617, column: 18, scope: !6262)
!6264 = !DILocation(line: 2617, column: 37, scope: !6262)
!6265 = !DILocation(line: 2617, column: 17, scope: !6239)
!6266 = !DILocation(line: 2618, column: 45, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6262, file: !919, line: 2617, column: 50)
!6268 = !DILocation(line: 2618, column: 30, scope: !6267)
!6269 = !DILocation(line: 2618, column: 49, scope: !6267)
!6270 = !DILocation(line: 2618, column: 53, scope: !6267)
!6271 = !DILocation(line: 2618, column: 17, scope: !6267)
!6272 = !DILocation(line: 2619, column: 13, scope: !6267)
!6273 = !DILocation(line: 2620, column: 9, scope: !6239)
!6274 = !DILocation(line: 2611, column: 57, scope: !6275)
!6275 = !DILexicalBlockFile(scope: !6234, file: !919, discriminator: 2)
!6276 = !DILocation(line: 2611, column: 9, scope: !6275)
!6277 = distinct !{!6277, !6278}
!6278 = !DILocation(line: 2611, column: 9, scope: !6224)
!6279 = !DILocation(line: 2620, column: 9, scope: !6280)
!6280 = !DILexicalBlockFile(scope: !6228, file: !919, discriminator: 1)
!6281 = !DILocation(line: 2623, column: 12, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2623, column: 5)
!6283 = !DILocation(line: 2623, column: 10, scope: !6282)
!6284 = !DILocation(line: 2623, column: 17, scope: !6285)
!6285 = !DILexicalBlockFile(scope: !6286, file: !919, discriminator: 1)
!6286 = distinct !DILexicalBlock(scope: !6282, file: !919, line: 2623, column: 5)
!6287 = !DILocation(line: 2623, column: 21, scope: !6285)
!6288 = !DILocation(line: 2623, column: 24, scope: !6285)
!6289 = !DILocation(line: 2623, column: 19, scope: !6285)
!6290 = !DILocation(line: 2623, column: 5, scope: !6285)
!6291 = !DILocalVariable(name: "p", scope: !6292, file: !919, line: 2624, type: !982)
!6292 = distinct !DILexicalBlock(scope: !6286, file: !919, line: 2623, column: 41)
!6293 = !DILocation(line: 2624, column: 21, scope: !6292)
!6294 = !DILocation(line: 2624, column: 36, scope: !6292)
!6295 = !DILocation(line: 2624, column: 25, scope: !6292)
!6296 = !DILocation(line: 2624, column: 28, scope: !6292)
!6297 = !DILocation(line: 2624, column: 39, scope: !6292)
!6298 = !DILocation(line: 2624, column: 41, scope: !6292)
!6299 = !DILocalVariable(name: "progid", scope: !6292, file: !919, line: 2625, type: !998)
!6300 = !DILocation(line: 2625, column: 13, scope: !6292)
!6301 = !DILocation(line: 2625, column: 22, scope: !6292)
!6302 = !DILocation(line: 2625, column: 23, scope: !6292)
!6303 = !DILocalVariable(name: "program", scope: !6292, file: !919, line: 2626, type: !2788)
!6304 = !DILocation(line: 2626, column: 20, scope: !6292)
!6305 = !DILocation(line: 2628, column: 9, scope: !6292)
!6306 = !DILocation(line: 2628, column: 16, scope: !6307)
!6307 = !DILexicalBlockFile(scope: !6292, file: !919, discriminator: 1)
!6308 = !DILocation(line: 2628, column: 15, scope: !6307)
!6309 = !DILocation(line: 2628, column: 9, scope: !6307)
!6310 = !DILocalVariable(name: "p2", scope: !6311, file: !919, line: 2629, type: !982)
!6311 = distinct !DILexicalBlock(scope: !6292, file: !919, line: 2628, column: 19)
!6312 = !DILocation(line: 2629, column: 25, scope: !6311)
!6313 = !DILocation(line: 2629, column: 30, scope: !6311)
!6314 = !DILocalVariable(name: "to_dealloc", scope: !6311, file: !919, line: 2630, type: !982)
!6315 = !DILocation(line: 2630, column: 25, scope: !6311)
!6316 = !DILocation(line: 2630, column: 38, scope: !6311)
!6317 = !DILocalVariable(name: "key", scope: !6311, file: !919, line: 2631, type: !1105)
!6318 = !DILocation(line: 2631, column: 19, scope: !6311)
!6319 = !DILocation(line: 2632, column: 18, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6311, file: !919, line: 2632, column: 17)
!6321 = !DILocation(line: 2632, column: 17, scope: !6311)
!6322 = !DILocation(line: 2633, column: 17, scope: !6320)
!6323 = !DILocation(line: 2635, column: 17, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6311, file: !919, line: 2635, column: 16)
!6325 = !DILocation(line: 2635, column: 16, scope: !6324)
!6326 = !DILocation(line: 2635, column: 16, scope: !6311)
!6327 = !DILocation(line: 2635, column: 21, scope: !6328)
!6328 = !DILexicalBlockFile(scope: !6324, file: !919, discriminator: 1)
!6329 = !DILocation(line: 2635, column: 20, scope: !6328)
!6330 = !DILocation(line: 2637, column: 19, scope: !6311)
!6331 = !DILocation(line: 2637, column: 17, scope: !6311)
!6332 = !DILocation(line: 2638, column: 18, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6311, file: !919, line: 2638, column: 17)
!6334 = !DILocation(line: 2638, column: 22, scope: !6333)
!6335 = !DILocation(line: 2638, column: 27, scope: !6336)
!6336 = !DILexicalBlockFile(scope: !6333, file: !919, discriminator: 1)
!6337 = !DILocation(line: 2638, column: 26, scope: !6336)
!6338 = !DILocation(line: 2638, column: 17, scope: !6336)
!6339 = !DILocation(line: 2639, column: 26, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6333, file: !919, line: 2638, column: 31)
!6341 = !DILocation(line: 2639, column: 17, scope: !6340)
!6342 = !DILocation(line: 2640, column: 26, scope: !6340)
!6343 = !DILocation(line: 2640, column: 17, scope: !6340)
!6344 = !DILocation(line: 2641, column: 17, scope: !6340)
!6345 = !DILocation(line: 2643, column: 15, scope: !6311)
!6346 = !DILocation(line: 2645, column: 25, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6311, file: !919, line: 2645, column: 17)
!6348 = !DILocation(line: 2645, column: 18, scope: !6347)
!6349 = !DILocation(line: 2645, column: 17, scope: !6311)
!6350 = !DILocation(line: 2646, column: 33, scope: !6347)
!6351 = !DILocation(line: 2646, column: 26, scope: !6347)
!6352 = !DILocation(line: 2646, column: 24, scope: !6347)
!6353 = !DILocation(line: 2646, column: 17, scope: !6347)
!6354 = !DILocation(line: 2647, column: 22, scope: !6311)
!6355 = !DILocation(line: 2647, column: 13, scope: !6311)
!6356 = !DILocation(line: 2648, column: 22, scope: !6311)
!6357 = !DILocation(line: 2648, column: 13, scope: !6311)
!6358 = !DILocation(line: 2628, column: 9, scope: !6359)
!6359 = !DILexicalBlockFile(scope: !6292, file: !919, discriminator: 2)
!6360 = distinct !{!6360, !6305}
!6361 = !DILocation(line: 2651, column: 34, scope: !6292)
!6362 = !DILocation(line: 2651, column: 38, scope: !6292)
!6363 = !DILocation(line: 2651, column: 19, scope: !6292)
!6364 = !DILocation(line: 2651, column: 17, scope: !6292)
!6365 = !DILocation(line: 2653, column: 24, scope: !6292)
!6366 = !DILocation(line: 2653, column: 13, scope: !6292)
!6367 = !DILocation(line: 2653, column: 16, scope: !6292)
!6368 = !DILocation(line: 2653, column: 27, scope: !6292)
!6369 = !DILocation(line: 2653, column: 29, scope: !6292)
!6370 = !DILocation(line: 2653, column: 11, scope: !6292)
!6371 = !DILocation(line: 2654, column: 9, scope: !6292)
!6372 = !DILocation(line: 2654, column: 16, scope: !6307)
!6373 = !DILocation(line: 2654, column: 15, scope: !6307)
!6374 = !DILocation(line: 2654, column: 9, scope: !6307)
!6375 = !DILocalVariable(name: "p2", scope: !6376, file: !919, line: 2655, type: !982)
!6376 = distinct !DILexicalBlock(scope: !6292, file: !919, line: 2654, column: 19)
!6377 = !DILocation(line: 2655, column: 25, scope: !6376)
!6378 = !DILocation(line: 2655, column: 30, scope: !6376)
!6379 = !DILocalVariable(name: "to_dealloc", scope: !6376, file: !919, line: 2656, type: !982)
!6380 = !DILocation(line: 2656, column: 25, scope: !6376)
!6381 = !DILocation(line: 2656, column: 38, scope: !6376)
!6382 = !DILocalVariable(name: "key", scope: !6376, file: !919, line: 2657, type: !1105)
!6383 = !DILocation(line: 2657, column: 19, scope: !6376)
!6384 = !DILocation(line: 2658, column: 18, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6376, file: !919, line: 2658, column: 17)
!6386 = !DILocation(line: 2658, column: 17, scope: !6376)
!6387 = !DILocation(line: 2659, column: 17, scope: !6385)
!6388 = !DILocation(line: 2660, column: 17, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6376, file: !919, line: 2660, column: 16)
!6390 = !DILocation(line: 2660, column: 16, scope: !6389)
!6391 = !DILocation(line: 2660, column: 16, scope: !6376)
!6392 = !DILocation(line: 2660, column: 21, scope: !6393)
!6393 = !DILexicalBlockFile(scope: !6389, file: !919, discriminator: 1)
!6394 = !DILocation(line: 2660, column: 20, scope: !6393)
!6395 = !DILocation(line: 2662, column: 19, scope: !6376)
!6396 = !DILocation(line: 2662, column: 17, scope: !6376)
!6397 = !DILocation(line: 2663, column: 18, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6376, file: !919, line: 2663, column: 17)
!6399 = !DILocation(line: 2663, column: 17, scope: !6376)
!6400 = !DILocation(line: 2666, column: 24, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6398, file: !919, line: 2663, column: 23)
!6402 = !DILocation(line: 2664, column: 17, scope: !6401)
!6403 = !DILocation(line: 2667, column: 17, scope: !6401)
!6404 = !DILocation(line: 2669, column: 19, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6376, file: !919, line: 2669, column: 17)
!6406 = !DILocation(line: 2669, column: 18, scope: !6405)
!6407 = !DILocation(line: 2669, column: 17, scope: !6376)
!6408 = !DILocation(line: 2670, column: 17, scope: !6405)
!6409 = !DILocation(line: 2671, column: 15, scope: !6376)
!6410 = !DILocation(line: 2673, column: 25, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6376, file: !919, line: 2673, column: 17)
!6412 = !DILocation(line: 2673, column: 18, scope: !6411)
!6413 = !DILocation(line: 2673, column: 17, scope: !6376)
!6414 = !DILocation(line: 2674, column: 30, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6411, file: !919, line: 2673, column: 40)
!6416 = !DILocation(line: 2674, column: 39, scope: !6415)
!6417 = !DILocation(line: 2674, column: 58, scope: !6415)
!6418 = !DILocation(line: 2674, column: 17, scope: !6415)
!6419 = !DILocation(line: 2675, column: 13, scope: !6415)
!6420 = !DILocation(line: 2675, column: 32, scope: !6421)
!6421 = !DILexicalBlockFile(scope: !6422, file: !919, discriminator: 1)
!6422 = distinct !DILexicalBlock(scope: !6411, file: !919, line: 2675, column: 24)
!6423 = !DILocation(line: 2675, column: 25, scope: !6421)
!6424 = !DILocation(line: 2675, column: 24, scope: !6421)
!6425 = !DILocation(line: 2676, column: 13, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6422, file: !919, line: 2675, column: 53)
!6427 = !DILocation(line: 2676, column: 32, scope: !6428)
!6428 = !DILexicalBlockFile(scope: !6429, file: !919, discriminator: 1)
!6429 = distinct !DILexicalBlock(scope: !6422, file: !919, line: 2676, column: 24)
!6430 = !DILocation(line: 2676, column: 25, scope: !6428)
!6431 = !DILocation(line: 2676, column: 24, scope: !6428)
!6432 = !DILocalVariable(name: "st_num", scope: !6433, file: !919, line: 2677, type: !998)
!6433 = distinct !DILexicalBlock(scope: !6429, file: !919, line: 2676, column: 44)
!6434 = !DILocation(line: 2677, column: 21, scope: !6433)
!6435 = !DILocation(line: 2677, column: 37, scope: !6433)
!6436 = !DILocation(line: 2677, column: 30, scope: !6433)
!6437 = !DILocation(line: 2678, column: 45, scope: !6433)
!6438 = !DILocation(line: 2678, column: 49, scope: !6433)
!6439 = !DILocation(line: 2678, column: 57, scope: !6433)
!6440 = !DILocation(line: 2678, column: 17, scope: !6433)
!6441 = !DILocation(line: 2679, column: 13, scope: !6433)
!6442 = !DILocation(line: 2680, column: 61, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6429, file: !919, line: 2679, column: 20)
!6444 = !DILocation(line: 2680, column: 17, scope: !6443)
!6445 = !DILocation(line: 2681, column: 17, scope: !6443)
!6446 = !DILocation(line: 2683, column: 22, scope: !6376)
!6447 = !DILocation(line: 2683, column: 13, scope: !6376)
!6448 = !DILocation(line: 2684, column: 22, scope: !6376)
!6449 = !DILocation(line: 2684, column: 13, scope: !6376)
!6450 = !DILocation(line: 2654, column: 9, scope: !6359)
!6451 = distinct !{!6451, !6371}
!6452 = !DILocation(line: 2686, column: 5, scope: !6292)
!6453 = !DILocation(line: 2623, column: 37, scope: !6454)
!6454 = !DILexicalBlockFile(scope: !6286, file: !919, discriminator: 2)
!6455 = !DILocation(line: 2623, column: 5, scope: !6454)
!6456 = distinct !{!6456, !6457}
!6457 = !DILocation(line: 2623, column: 5, scope: !4028)
!6458 = !DILocation(line: 2689, column: 12, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !4028, file: !919, line: 2689, column: 5)
!6460 = !DILocation(line: 2689, column: 10, scope: !6459)
!6461 = !DILocation(line: 2689, column: 17, scope: !6462)
!6462 = !DILexicalBlockFile(scope: !6463, file: !919, discriminator: 1)
!6463 = distinct !DILexicalBlock(scope: !6459, file: !919, line: 2689, column: 5)
!6464 = !DILocation(line: 2689, column: 21, scope: !6462)
!6465 = !DILocation(line: 2689, column: 24, scope: !6462)
!6466 = !DILocation(line: 2689, column: 19, scope: !6462)
!6467 = !DILocation(line: 2689, column: 5, scope: !6462)
!6468 = !DILocalVariable(name: "m", scope: !6469, file: !919, line: 2690, type: !1087)
!6469 = distinct !DILexicalBlock(scope: !6463, file: !919, line: 2689, column: 42)
!6470 = !DILocation(line: 2690, column: 24, scope: !6469)
!6471 = !DILocalVariable(name: "type", scope: !6469, file: !919, line: 2691, type: !984)
!6472 = !DILocation(line: 2691, column: 14, scope: !6469)
!6473 = !DILocalVariable(name: "val", scope: !6469, file: !919, line: 2691, type: !1105)
!6474 = !DILocation(line: 2691, column: 21, scope: !6469)
!6475 = !DILocalVariable(name: "stream_spec", scope: !6469, file: !919, line: 2692, type: !982)
!6476 = !DILocation(line: 2692, column: 21, scope: !6469)
!6477 = !DILocalVariable(name: "index", scope: !6469, file: !919, line: 2693, type: !998)
!6478 = !DILocation(line: 2693, column: 13, scope: !6469)
!6479 = !DILocalVariable(name: "j", scope: !6469, file: !919, line: 2693, type: !998)
!6480 = !DILocation(line: 2693, column: 24, scope: !6469)
!6481 = !DILocalVariable(name: "ret", scope: !6469, file: !919, line: 2693, type: !998)
!6482 = !DILocation(line: 2693, column: 27, scope: !6469)
!6483 = !DILocation(line: 2695, column: 34, scope: !6469)
!6484 = !DILocation(line: 2695, column: 22, scope: !6469)
!6485 = !DILocation(line: 2695, column: 25, scope: !6469)
!6486 = !DILocation(line: 2695, column: 37, scope: !6469)
!6487 = !DILocation(line: 2695, column: 39, scope: !6469)
!6488 = !DILocation(line: 2695, column: 15, scope: !6469)
!6489 = !DILocation(line: 2695, column: 13, scope: !6469)
!6490 = !DILocation(line: 2696, column: 14, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6469, file: !919, line: 2696, column: 13)
!6492 = !DILocation(line: 2696, column: 13, scope: !6469)
!6493 = !DILocation(line: 2698, column: 32, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6491, file: !919, line: 2696, column: 19)
!6495 = !DILocation(line: 2698, column: 20, scope: !6494)
!6496 = !DILocation(line: 2698, column: 23, scope: !6494)
!6497 = !DILocation(line: 2698, column: 35, scope: !6494)
!6498 = !DILocation(line: 2698, column: 37, scope: !6494)
!6499 = !DILocation(line: 2697, column: 13, scope: !6494)
!6500 = !DILocation(line: 2699, column: 13, scope: !6494)
!6501 = !DILocation(line: 2701, column: 13, scope: !6469)
!6502 = !DILocation(line: 2701, column: 16, scope: !6469)
!6503 = !DILocation(line: 2703, column: 37, scope: !6469)
!6504 = !DILocation(line: 2703, column: 25, scope: !6469)
!6505 = !DILocation(line: 2703, column: 28, scope: !6469)
!6506 = !DILocation(line: 2703, column: 40, scope: !6469)
!6507 = !DILocation(line: 2703, column: 9, scope: !6469)
!6508 = !DILocation(line: 2704, column: 13, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6469, file: !919, line: 2704, column: 13)
!6510 = !DILocation(line: 2704, column: 18, scope: !6509)
!6511 = !DILocation(line: 2704, column: 13, scope: !6469)
!6512 = !DILocation(line: 2705, column: 20, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6514, file: !919, line: 2705, column: 13)
!6514 = distinct !DILexicalBlock(scope: !6509, file: !919, line: 2704, column: 26)
!6515 = !DILocation(line: 2705, column: 18, scope: !6513)
!6516 = !DILocation(line: 2705, column: 25, scope: !6517)
!6517 = !DILexicalBlockFile(scope: !6518, file: !919, discriminator: 1)
!6518 = distinct !DILexicalBlock(scope: !6513, file: !919, line: 2705, column: 13)
!6519 = !DILocation(line: 2705, column: 29, scope: !6517)
!6520 = !DILocation(line: 2705, column: 33, scope: !6517)
!6521 = !DILocation(line: 2705, column: 27, scope: !6517)
!6522 = !DILocation(line: 2705, column: 13, scope: !6517)
!6523 = !DILocation(line: 2706, column: 38, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6518, file: !919, line: 2705, column: 50)
!6525 = !DILocation(line: 2706, column: 58, scope: !6524)
!6526 = !DILocation(line: 2706, column: 62, scope: !6524)
!6527 = !DILocation(line: 2706, column: 56, scope: !6524)
!6528 = !DILocation(line: 2706, column: 75, scope: !6524)
!6529 = !DILocation(line: 2706, column: 73, scope: !6524)
!6530 = !DILocation(line: 2706, column: 23, scope: !6524)
!6531 = !DILocation(line: 2706, column: 21, scope: !6524)
!6532 = !DILocation(line: 2707, column: 51, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6524, file: !919, line: 2707, column: 21)
!6534 = !DILocation(line: 2707, column: 67, scope: !6533)
!6535 = !DILocation(line: 2707, column: 55, scope: !6533)
!6536 = !DILocation(line: 2707, column: 59, scope: !6533)
!6537 = !DILocation(line: 2707, column: 71, scope: !6533)
!6538 = !DILocation(line: 2707, column: 28, scope: !6533)
!6539 = !DILocation(line: 2707, column: 26, scope: !6533)
!6540 = !DILocation(line: 2707, column: 85, scope: !6533)
!6541 = !DILocation(line: 2707, column: 21, scope: !6524)
!6542 = !DILocation(line: 2708, column: 45, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6544, file: !919, line: 2708, column: 25)
!6544 = distinct !DILexicalBlock(scope: !6533, file: !919, line: 2707, column: 90)
!6545 = !DILocation(line: 2708, column: 33, scope: !6543)
!6546 = !DILocation(line: 2708, column: 36, scope: !6543)
!6547 = !DILocation(line: 2708, column: 48, scope: !6543)
!6548 = !DILocation(line: 2708, column: 50, scope: !6543)
!6549 = !DILocation(line: 2708, column: 26, scope: !6543)
!6550 = !DILocation(line: 2708, column: 25, scope: !6544)
!6551 = !DILocalVariable(name: "tail", scope: !6552, file: !919, line: 2709, type: !1105)
!6552 = distinct !DILexicalBlock(scope: !6543, file: !919, line: 2708, column: 66)
!6553 = !DILocation(line: 2709, column: 31, scope: !6552)
!6554 = !DILocalVariable(name: "theta", scope: !6552, file: !919, line: 2710, type: !1008)
!6555 = !DILocation(line: 2710, column: 32, scope: !6552)
!6556 = !DILocation(line: 2710, column: 50, scope: !6552)
!6557 = !DILocation(line: 2710, column: 40, scope: !6552)
!6558 = !DILocation(line: 2711, column: 31, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6552, file: !919, line: 2711, column: 29)
!6560 = !DILocation(line: 2711, column: 30, scope: !6559)
!6561 = !DILocation(line: 2711, column: 29, scope: !6552)
!6562 = !DILocation(line: 2712, column: 29, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6559, file: !919, line: 2711, column: 37)
!6564 = !DILocation(line: 2712, column: 34, scope: !6563)
!6565 = !DILocation(line: 2712, column: 52, scope: !6563)
!6566 = !DILocation(line: 2713, column: 58, scope: !6563)
!6567 = !DILocation(line: 2713, column: 29, scope: !6563)
!6568 = !DILocation(line: 2713, column: 34, scope: !6563)
!6569 = !DILocation(line: 2713, column: 56, scope: !6563)
!6570 = !DILocation(line: 2714, column: 25, scope: !6563)
!6571 = !DILocation(line: 2715, column: 21, scope: !6552)
!6572 = !DILocation(line: 2716, column: 50, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6543, file: !919, line: 2715, column: 28)
!6574 = !DILocation(line: 2716, column: 38, scope: !6573)
!6575 = !DILocation(line: 2716, column: 42, scope: !6573)
!6576 = !DILocation(line: 2716, column: 54, scope: !6573)
!6577 = !DILocation(line: 2716, column: 76, scope: !6573)
!6578 = !DILocation(line: 2716, column: 64, scope: !6573)
!6579 = !DILocation(line: 2716, column: 67, scope: !6573)
!6580 = !DILocation(line: 2716, column: 79, scope: !6573)
!6581 = !DILocation(line: 2716, column: 81, scope: !6573)
!6582 = !DILocation(line: 2716, column: 87, scope: !6573)
!6583 = !DILocation(line: 2716, column: 86, scope: !6573)
!6584 = !DILocation(line: 2716, column: 93, scope: !6585)
!6585 = !DILexicalBlockFile(scope: !6573, file: !919, discriminator: 1)
!6586 = !DILocation(line: 2716, column: 86, scope: !6585)
!6587 = !DILocation(line: 2716, column: 86, scope: !6588)
!6588 = !DILexicalBlockFile(scope: !6573, file: !919, discriminator: 2)
!6589 = !DILocation(line: 2716, column: 86, scope: !6590)
!6590 = !DILexicalBlockFile(scope: !6573, file: !919, discriminator: 3)
!6591 = !DILocation(line: 2716, column: 25, scope: !6590)
!6592 = !DILocation(line: 2718, column: 17, scope: !6544)
!6593 = !DILocation(line: 2718, column: 28, scope: !6594)
!6594 = !DILexicalBlockFile(scope: !6595, file: !919, discriminator: 1)
!6595 = distinct !DILexicalBlock(scope: !6533, file: !919, line: 2718, column: 28)
!6596 = !DILocation(line: 2718, column: 32, scope: !6594)
!6597 = !DILocation(line: 2719, column: 21, scope: !6595)
!6598 = !DILocation(line: 2720, column: 13, scope: !6524)
!6599 = !DILocation(line: 2705, column: 46, scope: !6600)
!6600 = !DILexicalBlockFile(scope: !6518, file: !919, discriminator: 2)
!6601 = !DILocation(line: 2705, column: 13, scope: !6600)
!6602 = distinct !{!6602, !6603}
!6603 = !DILocation(line: 2705, column: 13, scope: !6514)
!6604 = !DILocation(line: 2721, column: 9, scope: !6514)
!6605 = !DILocation(line: 2723, column: 21, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6509, file: !919, line: 2722, column: 14)
!6607 = !DILocation(line: 2723, column: 13, scope: !6606)
!6608 = !DILocation(line: 2725, column: 22, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6606, file: !919, line: 2723, column: 27)
!6610 = !DILocation(line: 2725, column: 26, scope: !6609)
!6611 = !DILocation(line: 2725, column: 19, scope: !6609)
!6612 = !DILocation(line: 2726, column: 17, scope: !6609)
!6613 = !DILocation(line: 2728, column: 21, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6609, file: !919, line: 2728, column: 21)
!6615 = !DILocation(line: 2728, column: 27, scope: !6614)
!6616 = !DILocation(line: 2728, column: 31, scope: !6614)
!6617 = !DILocation(line: 2728, column: 34, scope: !6618)
!6618 = !DILexicalBlockFile(scope: !6614, file: !919, discriminator: 1)
!6619 = !DILocation(line: 2728, column: 43, scope: !6618)
!6620 = !DILocation(line: 2728, column: 47, scope: !6618)
!6621 = !DILocation(line: 2728, column: 40, scope: !6618)
!6622 = !DILocation(line: 2728, column: 21, scope: !6618)
!6623 = !DILocation(line: 2729, column: 89, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6614, file: !919, line: 2728, column: 60)
!6625 = !DILocation(line: 2729, column: 21, scope: !6624)
!6626 = !DILocation(line: 2730, column: 21, scope: !6624)
!6627 = !DILocation(line: 2732, column: 35, scope: !6609)
!6628 = !DILocation(line: 2732, column: 22, scope: !6609)
!6629 = !DILocation(line: 2732, column: 26, scope: !6609)
!6630 = !DILocation(line: 2732, column: 43, scope: !6609)
!6631 = !DILocation(line: 2732, column: 19, scope: !6609)
!6632 = !DILocation(line: 2733, column: 17, scope: !6609)
!6633 = !DILocation(line: 2735, column: 21, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6609, file: !919, line: 2735, column: 21)
!6635 = !DILocation(line: 2735, column: 27, scope: !6634)
!6636 = !DILocation(line: 2735, column: 31, scope: !6634)
!6637 = !DILocation(line: 2735, column: 34, scope: !6638)
!6638 = !DILexicalBlockFile(scope: !6634, file: !919, discriminator: 1)
!6639 = !DILocation(line: 2735, column: 43, scope: !6638)
!6640 = !DILocation(line: 2735, column: 47, scope: !6638)
!6641 = !DILocation(line: 2735, column: 40, scope: !6638)
!6642 = !DILocation(line: 2735, column: 21, scope: !6638)
!6643 = !DILocation(line: 2736, column: 89, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6634, file: !919, line: 2735, column: 60)
!6645 = !DILocation(line: 2736, column: 21, scope: !6644)
!6646 = !DILocation(line: 2737, column: 21, scope: !6644)
!6647 = !DILocation(line: 2739, column: 35, scope: !6609)
!6648 = !DILocation(line: 2739, column: 22, scope: !6609)
!6649 = !DILocation(line: 2739, column: 26, scope: !6609)
!6650 = !DILocation(line: 2739, column: 43, scope: !6609)
!6651 = !DILocation(line: 2739, column: 19, scope: !6609)
!6652 = !DILocation(line: 2740, column: 17, scope: !6609)
!6653 = !DILocation(line: 2742, column: 80, scope: !6609)
!6654 = !DILocation(line: 2742, column: 68, scope: !6609)
!6655 = !DILocation(line: 2742, column: 71, scope: !6609)
!6656 = !DILocation(line: 2742, column: 83, scope: !6609)
!6657 = !DILocation(line: 2742, column: 17, scope: !6609)
!6658 = !DILocation(line: 2743, column: 17, scope: !6609)
!6659 = !DILocation(line: 2745, column: 25, scope: !6606)
!6660 = !DILocation(line: 2745, column: 40, scope: !6606)
!6661 = !DILocation(line: 2745, column: 28, scope: !6606)
!6662 = !DILocation(line: 2745, column: 31, scope: !6606)
!6663 = !DILocation(line: 2745, column: 43, scope: !6606)
!6664 = !DILocation(line: 2745, column: 45, scope: !6606)
!6665 = !DILocation(line: 2745, column: 51, scope: !6606)
!6666 = !DILocation(line: 2745, column: 50, scope: !6606)
!6667 = !DILocation(line: 2745, column: 57, scope: !6668)
!6668 = !DILexicalBlockFile(scope: !6606, file: !919, discriminator: 1)
!6669 = !DILocation(line: 2745, column: 50, scope: !6668)
!6670 = !DILocation(line: 2745, column: 50, scope: !6671)
!6671 = !DILexicalBlockFile(scope: !6606, file: !919, discriminator: 2)
!6672 = !DILocation(line: 2745, column: 50, scope: !6673)
!6673 = !DILexicalBlockFile(scope: !6606, file: !919, discriminator: 3)
!6674 = !DILocation(line: 2745, column: 13, scope: !6673)
!6675 = !DILocation(line: 2747, column: 5, scope: !6469)
!6676 = !DILocation(line: 2689, column: 38, scope: !6677)
!6677 = !DILexicalBlockFile(scope: !6463, file: !919, discriminator: 2)
!6678 = !DILocation(line: 2689, column: 5, scope: !6677)
!6679 = distinct !{!6679, !6680}
!6680 = !DILocation(line: 2689, column: 5, scope: !4028)
!6681 = !DILocation(line: 2749, column: 5, scope: !4028)
!6682 = distinct !DISubprogram(name: "opt_map", scope: !919, file: !919, line: 267, type: !1323, isLocal: true, isDefinition: true, scopeLine: 268, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!6683 = !DILocalVariable(name: "optctx", arg: 1, scope: !6682, file: !919, line: 267, type: !989)
!6684 = !DILocation(line: 267, column: 26, scope: !6682)
!6685 = !DILocalVariable(name: "opt", arg: 2, scope: !6682, file: !919, line: 267, type: !982)
!6686 = !DILocation(line: 267, column: 46, scope: !6682)
!6687 = !DILocalVariable(name: "arg", arg: 3, scope: !6682, file: !919, line: 267, type: !982)
!6688 = !DILocation(line: 267, column: 63, scope: !6682)
!6689 = !DILocalVariable(name: "o", scope: !6682, file: !919, line: 269, type: !2116)
!6690 = !DILocation(line: 269, column: 21, scope: !6682)
!6691 = !DILocation(line: 269, column: 25, scope: !6682)
!6692 = !DILocalVariable(name: "m", scope: !6682, file: !919, line: 270, type: !2169)
!6693 = !DILocation(line: 270, column: 16, scope: !6682)
!6694 = !DILocalVariable(name: "i", scope: !6682, file: !919, line: 271, type: !998)
!6695 = !DILocation(line: 271, column: 9, scope: !6682)
!6696 = !DILocalVariable(name: "negative", scope: !6682, file: !919, line: 271, type: !998)
!6697 = !DILocation(line: 271, column: 12, scope: !6682)
!6698 = !DILocalVariable(name: "file_idx", scope: !6682, file: !919, line: 271, type: !998)
!6699 = !DILocation(line: 271, column: 26, scope: !6682)
!6700 = !DILocalVariable(name: "disabled", scope: !6682, file: !919, line: 271, type: !998)
!6701 = !DILocation(line: 271, column: 36, scope: !6682)
!6702 = !DILocalVariable(name: "sync_file_idx", scope: !6682, file: !919, line: 272, type: !998)
!6703 = !DILocation(line: 272, column: 9, scope: !6682)
!6704 = !DILocalVariable(name: "sync_stream_idx", scope: !6682, file: !919, line: 272, type: !998)
!6705 = !DILocation(line: 272, column: 29, scope: !6682)
!6706 = !DILocalVariable(name: "p", scope: !6682, file: !919, line: 273, type: !1105)
!6707 = !DILocation(line: 273, column: 11, scope: !6682)
!6708 = !DILocalVariable(name: "sync", scope: !6682, file: !919, line: 273, type: !1105)
!6709 = !DILocation(line: 273, column: 15, scope: !6682)
!6710 = !DILocalVariable(name: "map", scope: !6682, file: !919, line: 274, type: !1105)
!6711 = !DILocation(line: 274, column: 11, scope: !6682)
!6712 = !DILocalVariable(name: "allow_unused", scope: !6682, file: !919, line: 275, type: !1105)
!6713 = !DILocation(line: 275, column: 11, scope: !6682)
!6714 = !DILocation(line: 277, column: 10, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6682, file: !919, line: 277, column: 9)
!6716 = !DILocation(line: 277, column: 9, scope: !6715)
!6717 = !DILocation(line: 277, column: 14, scope: !6715)
!6718 = !DILocation(line: 277, column: 9, scope: !6682)
!6719 = !DILocation(line: 278, column: 18, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6715, file: !919, line: 277, column: 22)
!6721 = !DILocation(line: 279, column: 12, scope: !6720)
!6722 = !DILocation(line: 280, column: 5, scope: !6720)
!6723 = !DILocation(line: 281, column: 21, scope: !6682)
!6724 = !DILocation(line: 281, column: 11, scope: !6682)
!6725 = !DILocation(line: 281, column: 9, scope: !6682)
!6726 = !DILocation(line: 282, column: 10, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6682, file: !919, line: 282, column: 9)
!6728 = !DILocation(line: 282, column: 9, scope: !6682)
!6729 = !DILocation(line: 283, column: 9, scope: !6727)
!6730 = !DILocation(line: 286, column: 23, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6682, file: !919, line: 286, column: 9)
!6732 = !DILocation(line: 286, column: 16, scope: !6731)
!6733 = !DILocation(line: 286, column: 14, scope: !6731)
!6734 = !DILocation(line: 286, column: 9, scope: !6682)
!6735 = !DILocation(line: 287, column: 10, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6731, file: !919, line: 286, column: 34)
!6737 = !DILocation(line: 287, column: 15, scope: !6736)
!6738 = !DILocation(line: 288, column: 32, scope: !6736)
!6739 = !DILocation(line: 288, column: 37, scope: !6736)
!6740 = !DILocation(line: 288, column: 25, scope: !6736)
!6741 = !DILocation(line: 288, column: 23, scope: !6736)
!6742 = !DILocation(line: 289, column: 13, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6736, file: !919, line: 289, column: 13)
!6744 = !DILocation(line: 289, column: 30, scope: !6743)
!6745 = !DILocation(line: 289, column: 27, scope: !6743)
!6746 = !DILocation(line: 289, column: 45, scope: !6743)
!6747 = !DILocation(line: 289, column: 48, scope: !6748)
!6748 = !DILexicalBlockFile(scope: !6743, file: !919, discriminator: 1)
!6749 = !DILocation(line: 289, column: 62, scope: !6748)
!6750 = !DILocation(line: 289, column: 13, scope: !6748)
!6751 = !DILocation(line: 290, column: 62, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6743, file: !919, line: 289, column: 67)
!6753 = !DILocation(line: 290, column: 13, scope: !6752)
!6754 = !DILocation(line: 291, column: 13, scope: !6752)
!6755 = !DILocation(line: 293, column: 14, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6736, file: !919, line: 293, column: 13)
!6757 = !DILocation(line: 293, column: 13, scope: !6756)
!6758 = !DILocation(line: 293, column: 13, scope: !6736)
!6759 = !DILocation(line: 294, column: 17, scope: !6756)
!6760 = !DILocation(line: 294, column: 13, scope: !6756)
!6761 = !DILocation(line: 295, column: 16, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6736, file: !919, line: 295, column: 9)
!6763 = !DILocation(line: 295, column: 14, scope: !6762)
!6764 = !DILocation(line: 295, column: 21, scope: !6765)
!6765 = !DILexicalBlockFile(scope: !6766, file: !919, discriminator: 1)
!6766 = distinct !DILexicalBlock(scope: !6762, file: !919, line: 295, column: 9)
!6767 = !DILocation(line: 295, column: 37, scope: !6765)
!6768 = !DILocation(line: 295, column: 25, scope: !6765)
!6769 = !DILocation(line: 295, column: 53, scope: !6765)
!6770 = !DILocation(line: 295, column: 23, scope: !6765)
!6771 = !DILocation(line: 295, column: 9, scope: !6765)
!6772 = !DILocation(line: 296, column: 52, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6766, file: !919, line: 296, column: 17)
!6774 = !DILocation(line: 296, column: 40, scope: !6773)
!6775 = !DILocation(line: 296, column: 68, scope: !6773)
!6776 = !DILocation(line: 297, column: 81, scope: !6773)
!6777 = !DILocation(line: 297, column: 40, scope: !6773)
!6778 = !DILocation(line: 297, column: 52, scope: !6773)
!6779 = !DILocation(line: 297, column: 68, scope: !6773)
!6780 = !DILocation(line: 297, column: 73, scope: !6773)
!6781 = !DILocation(line: 297, column: 85, scope: !6773)
!6782 = !DILocation(line: 296, column: 17, scope: !6773)
!6783 = !DILocation(line: 297, column: 91, scope: !6773)
!6784 = !DILocation(line: 296, column: 17, scope: !6766)
!6785 = !DILocation(line: 298, column: 35, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6773, file: !919, line: 297, column: 97)
!6787 = !DILocation(line: 298, column: 33, scope: !6786)
!6788 = !DILocation(line: 299, column: 17, scope: !6786)
!6789 = !DILocation(line: 297, column: 94, scope: !6790)
!6790 = !DILexicalBlockFile(scope: !6773, file: !919, discriminator: 1)
!6791 = !DILocation(line: 295, column: 66, scope: !6792)
!6792 = !DILexicalBlockFile(scope: !6766, file: !919, discriminator: 2)
!6793 = !DILocation(line: 295, column: 9, scope: !6792)
!6794 = distinct !{!6794, !6795}
!6795 = !DILocation(line: 295, column: 9, scope: !6736)
!6796 = !DILocation(line: 301, column: 13, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6736, file: !919, line: 301, column: 13)
!6798 = !DILocation(line: 301, column: 30, scope: !6797)
!6799 = !DILocation(line: 301, column: 18, scope: !6797)
!6800 = !DILocation(line: 301, column: 46, scope: !6797)
!6801 = !DILocation(line: 301, column: 15, scope: !6797)
!6802 = !DILocation(line: 301, column: 13, scope: !6736)
!6803 = !DILocation(line: 303, column: 64, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6797, file: !919, line: 301, column: 58)
!6805 = !DILocation(line: 302, column: 13, scope: !6804)
!6806 = !DILocation(line: 304, column: 13, scope: !6804)
!6807 = !DILocation(line: 306, column: 39, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6736, file: !919, line: 306, column: 13)
!6809 = !DILocation(line: 306, column: 27, scope: !6808)
!6810 = !DILocation(line: 306, column: 55, scope: !6808)
!6811 = !DILocation(line: 306, column: 67, scope: !6808)
!6812 = !DILocation(line: 306, column: 65, scope: !6808)
!6813 = !DILocation(line: 306, column: 13, scope: !6808)
!6814 = !DILocation(line: 306, column: 85, scope: !6808)
!6815 = !DILocation(line: 306, column: 102, scope: !6808)
!6816 = !DILocation(line: 306, column: 13, scope: !6736)
!6817 = !DILocation(line: 308, column: 53, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6808, file: !919, line: 306, column: 120)
!6819 = !DILocation(line: 307, column: 13, scope: !6818)
!6820 = !DILocation(line: 309, column: 13, scope: !6818)
!6821 = !DILocation(line: 311, column: 5, scope: !6736)
!6822 = !DILocation(line: 314, column: 9, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6682, file: !919, line: 314, column: 9)
!6824 = !DILocation(line: 314, column: 16, scope: !6823)
!6825 = !DILocation(line: 314, column: 9, scope: !6682)
!6826 = !DILocalVariable(name: "c", scope: !6827, file: !919, line: 316, type: !982)
!6827 = distinct !DILexicalBlock(scope: !6823, file: !919, line: 314, column: 24)
!6828 = !DILocation(line: 316, column: 21, scope: !6827)
!6829 = !DILocation(line: 316, column: 25, scope: !6827)
!6830 = !DILocation(line: 316, column: 29, scope: !6827)
!6831 = !DILocation(line: 317, column: 37, scope: !6827)
!6832 = !DILocation(line: 317, column: 40, scope: !6827)
!6833 = !DILocation(line: 317, column: 79, scope: !6827)
!6834 = !DILocation(line: 317, column: 82, scope: !6827)
!6835 = !DILocation(line: 317, column: 98, scope: !6827)
!6836 = !DILocation(line: 317, column: 101, scope: !6827)
!6837 = !DILocation(line: 317, column: 116, scope: !6827)
!6838 = !DILocation(line: 317, column: 26, scope: !6827)
!6839 = !DILocation(line: 317, column: 9, scope: !6827)
!6840 = !DILocation(line: 317, column: 12, scope: !6827)
!6841 = !DILocation(line: 317, column: 24, scope: !6827)
!6842 = !DILocation(line: 318, column: 29, scope: !6827)
!6843 = !DILocation(line: 318, column: 32, scope: !6827)
!6844 = !DILocation(line: 318, column: 47, scope: !6827)
!6845 = !DILocation(line: 318, column: 14, scope: !6827)
!6846 = !DILocation(line: 318, column: 17, scope: !6827)
!6847 = !DILocation(line: 318, column: 11, scope: !6827)
!6848 = !DILocation(line: 319, column: 24, scope: !6827)
!6849 = !DILocation(line: 319, column: 9, scope: !6827)
!6850 = !DILocation(line: 319, column: 12, scope: !6827)
!6851 = !DILocation(line: 319, column: 22, scope: !6827)
!6852 = !DILocation(line: 320, column: 14, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6827, file: !919, line: 320, column: 13)
!6854 = !DILocation(line: 320, column: 17, scope: !6853)
!6855 = !DILocation(line: 320, column: 13, scope: !6827)
!6856 = !DILocation(line: 321, column: 65, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6853, file: !919, line: 320, column: 28)
!6858 = !DILocation(line: 321, column: 13, scope: !6857)
!6859 = !DILocation(line: 322, column: 13, scope: !6857)
!6860 = !DILocation(line: 324, column: 5, scope: !6827)
!6861 = !DILocation(line: 325, column: 35, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6863, file: !919, line: 325, column: 13)
!6863 = distinct !DILexicalBlock(scope: !6823, file: !919, line: 324, column: 12)
!6864 = !DILocation(line: 325, column: 28, scope: !6862)
!6865 = !DILocation(line: 325, column: 26, scope: !6862)
!6866 = !DILocation(line: 325, column: 13, scope: !6863)
!6867 = !DILocation(line: 326, column: 14, scope: !6862)
!6868 = !DILocation(line: 326, column: 27, scope: !6862)
!6869 = !DILocation(line: 326, column: 13, scope: !6862)
!6870 = !DILocation(line: 327, column: 27, scope: !6863)
!6871 = !DILocation(line: 327, column: 20, scope: !6863)
!6872 = !DILocation(line: 327, column: 18, scope: !6863)
!6873 = !DILocation(line: 328, column: 13, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6863, file: !919, line: 328, column: 13)
!6875 = !DILocation(line: 328, column: 25, scope: !6874)
!6876 = !DILocation(line: 328, column: 22, scope: !6874)
!6877 = !DILocation(line: 328, column: 40, scope: !6874)
!6878 = !DILocation(line: 328, column: 43, scope: !6879)
!6879 = !DILexicalBlockFile(scope: !6874, file: !919, discriminator: 1)
!6880 = !DILocation(line: 328, column: 52, scope: !6879)
!6881 = !DILocation(line: 328, column: 13, scope: !6879)
!6882 = !DILocation(line: 329, column: 63, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6874, file: !919, line: 328, column: 57)
!6884 = !DILocation(line: 329, column: 13, scope: !6883)
!6885 = !DILocation(line: 330, column: 13, scope: !6883)
!6886 = !DILocation(line: 332, column: 13, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6863, file: !919, line: 332, column: 13)
!6888 = !DILocation(line: 332, column: 13, scope: !6863)
!6889 = !DILocation(line: 334, column: 20, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6887, file: !919, line: 334, column: 13)
!6891 = !DILocation(line: 334, column: 18, scope: !6890)
!6892 = !DILocation(line: 334, column: 25, scope: !6893)
!6893 = !DILexicalBlockFile(scope: !6894, file: !919, discriminator: 1)
!6894 = distinct !DILexicalBlock(scope: !6890, file: !919, line: 334, column: 13)
!6895 = !DILocation(line: 334, column: 29, scope: !6893)
!6896 = !DILocation(line: 334, column: 32, scope: !6893)
!6897 = !DILocation(line: 334, column: 27, scope: !6893)
!6898 = !DILocation(line: 334, column: 13, scope: !6893)
!6899 = !DILocation(line: 335, column: 37, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6894, file: !919, line: 334, column: 53)
!6901 = !DILocation(line: 335, column: 22, scope: !6900)
!6902 = !DILocation(line: 335, column: 25, scope: !6900)
!6903 = !DILocation(line: 335, column: 19, scope: !6900)
!6904 = !DILocation(line: 336, column: 21, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6900, file: !919, line: 336, column: 21)
!6906 = !DILocation(line: 336, column: 33, scope: !6905)
!6907 = !DILocation(line: 336, column: 36, scope: !6905)
!6908 = !DILocation(line: 336, column: 30, scope: !6905)
!6909 = !DILocation(line: 336, column: 47, scope: !6905)
!6910 = !DILocation(line: 337, column: 56, scope: !6905)
!6911 = !DILocation(line: 337, column: 59, scope: !6905)
!6912 = !DILocation(line: 337, column: 44, scope: !6905)
!6913 = !DILocation(line: 337, column: 72, scope: !6905)
!6914 = !DILocation(line: 338, column: 85, scope: !6905)
!6915 = !DILocation(line: 338, column: 88, scope: !6905)
!6916 = !DILocation(line: 338, column: 44, scope: !6905)
!6917 = !DILocation(line: 338, column: 56, scope: !6905)
!6918 = !DILocation(line: 338, column: 59, scope: !6905)
!6919 = !DILocation(line: 338, column: 72, scope: !6905)
!6920 = !DILocation(line: 338, column: 77, scope: !6905)
!6921 = !DILocation(line: 339, column: 45, scope: !6905)
!6922 = !DILocation(line: 339, column: 44, scope: !6905)
!6923 = !DILocation(line: 339, column: 47, scope: !6905)
!6924 = !DILocation(line: 339, column: 56, scope: !6925)
!6925 = !DILexicalBlockFile(scope: !6905, file: !919, discriminator: 1)
!6926 = !DILocation(line: 339, column: 58, scope: !6925)
!6927 = !DILocation(line: 339, column: 44, scope: !6925)
!6928 = !DILocation(line: 339, column: 64, scope: !6929)
!6929 = !DILexicalBlockFile(scope: !6905, file: !919, discriminator: 2)
!6930 = !DILocation(line: 339, column: 44, scope: !6929)
!6931 = !DILocation(line: 339, column: 44, scope: !6932)
!6932 = !DILexicalBlockFile(scope: !6905, file: !919, discriminator: 3)
!6933 = !DILocation(line: 337, column: 21, scope: !6925)
!6934 = !DILocation(line: 339, column: 67, scope: !6932)
!6935 = !DILocation(line: 336, column: 21, scope: !6936)
!6936 = !DILexicalBlockFile(scope: !6900, file: !919, discriminator: 1)
!6937 = !DILocation(line: 340, column: 21, scope: !6905)
!6938 = !DILocation(line: 340, column: 24, scope: !6905)
!6939 = !DILocation(line: 340, column: 33, scope: !6905)
!6940 = !DILocation(line: 341, column: 13, scope: !6900)
!6941 = !DILocation(line: 334, column: 49, scope: !6942)
!6942 = !DILexicalBlockFile(scope: !6894, file: !919, discriminator: 2)
!6943 = !DILocation(line: 334, column: 13, scope: !6942)
!6944 = distinct !{!6944, !6945}
!6945 = !DILocation(line: 334, column: 13, scope: !6887)
!6946 = !DILocation(line: 341, column: 13, scope: !6947)
!6947 = !DILexicalBlockFile(scope: !6890, file: !919, discriminator: 1)
!6948 = !DILocation(line: 343, column: 20, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6887, file: !919, line: 343, column: 13)
!6950 = !DILocation(line: 343, column: 18, scope: !6949)
!6951 = !DILocation(line: 343, column: 25, scope: !6952)
!6952 = !DILexicalBlockFile(scope: !6953, file: !919, discriminator: 1)
!6953 = distinct !DILexicalBlock(scope: !6949, file: !919, line: 343, column: 13)
!6954 = !DILocation(line: 343, column: 41, scope: !6952)
!6955 = !DILocation(line: 343, column: 29, scope: !6952)
!6956 = !DILocation(line: 343, column: 52, scope: !6952)
!6957 = !DILocation(line: 343, column: 27, scope: !6952)
!6958 = !DILocation(line: 343, column: 13, scope: !6952)
!6959 = !DILocation(line: 344, column: 56, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !919, line: 344, column: 21)
!6961 = distinct !DILexicalBlock(scope: !6953, file: !919, line: 343, column: 69)
!6962 = !DILocation(line: 344, column: 44, scope: !6960)
!6963 = !DILocation(line: 344, column: 67, scope: !6960)
!6964 = !DILocation(line: 344, column: 108, scope: !6960)
!6965 = !DILocation(line: 344, column: 72, scope: !6960)
!6966 = !DILocation(line: 344, column: 84, scope: !6960)
!6967 = !DILocation(line: 344, column: 95, scope: !6960)
!6968 = !DILocation(line: 344, column: 100, scope: !6960)
!6969 = !DILocation(line: 345, column: 30, scope: !6960)
!6970 = !DILocation(line: 345, column: 29, scope: !6960)
!6971 = !DILocation(line: 345, column: 32, scope: !6960)
!6972 = !DILocation(line: 345, column: 41, scope: !6973)
!6973 = !DILexicalBlockFile(scope: !6960, file: !919, discriminator: 1)
!6974 = !DILocation(line: 345, column: 43, scope: !6973)
!6975 = !DILocation(line: 345, column: 29, scope: !6973)
!6976 = !DILocation(line: 345, column: 49, scope: !6977)
!6977 = !DILexicalBlockFile(scope: !6960, file: !919, discriminator: 2)
!6978 = !DILocation(line: 345, column: 29, scope: !6977)
!6979 = !DILocation(line: 345, column: 29, scope: !6980)
!6980 = !DILexicalBlockFile(scope: !6960, file: !919, discriminator: 3)
!6981 = !DILocation(line: 344, column: 21, scope: !6973)
!6982 = !DILocation(line: 345, column: 52, scope: !6980)
!6983 = !DILocation(line: 346, column: 21, scope: !6960)
!6984 = !DILocation(line: 347, column: 47, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6961, file: !919, line: 347, column: 21)
!6986 = !DILocation(line: 347, column: 35, scope: !6985)
!6987 = !DILocation(line: 347, column: 58, scope: !6985)
!6988 = !DILocation(line: 347, column: 70, scope: !6985)
!6989 = !DILocation(line: 347, column: 68, scope: !6985)
!6990 = !DILocation(line: 347, column: 21, scope: !6985)
!6991 = !DILocation(line: 347, column: 74, scope: !6985)
!6992 = !DILocation(line: 347, column: 91, scope: !6985)
!6993 = !DILocation(line: 347, column: 21, scope: !6961)
!6994 = !DILocation(line: 348, column: 30, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6985, file: !919, line: 347, column: 109)
!6996 = !DILocation(line: 349, column: 21, scope: !6995)
!6997 = !DILocation(line: 351, column: 45, scope: !6961)
!6998 = !DILocation(line: 351, column: 48, scope: !6961)
!6999 = !DILocation(line: 351, column: 87, scope: !6961)
!7000 = !DILocation(line: 351, column: 90, scope: !6961)
!7001 = !DILocation(line: 351, column: 106, scope: !6961)
!7002 = !DILocation(line: 351, column: 109, scope: !6961)
!7003 = !DILocation(line: 351, column: 124, scope: !6961)
!7004 = !DILocation(line: 351, column: 34, scope: !6961)
!7005 = !DILocation(line: 351, column: 17, scope: !6961)
!7006 = !DILocation(line: 351, column: 20, scope: !6961)
!7007 = !DILocation(line: 351, column: 32, scope: !6961)
!7008 = !DILocation(line: 352, column: 37, scope: !6961)
!7009 = !DILocation(line: 352, column: 40, scope: !6961)
!7010 = !DILocation(line: 352, column: 55, scope: !6961)
!7011 = !DILocation(line: 352, column: 22, scope: !6961)
!7012 = !DILocation(line: 352, column: 25, scope: !6961)
!7013 = !DILocation(line: 352, column: 19, scope: !6961)
!7014 = !DILocation(line: 354, column: 33, scope: !6961)
!7015 = !DILocation(line: 354, column: 17, scope: !6961)
!7016 = !DILocation(line: 354, column: 20, scope: !6961)
!7017 = !DILocation(line: 354, column: 31, scope: !6961)
!7018 = !DILocation(line: 355, column: 35, scope: !6961)
!7019 = !DILocation(line: 355, column: 17, scope: !6961)
!7020 = !DILocation(line: 355, column: 20, scope: !6961)
!7021 = !DILocation(line: 355, column: 33, scope: !6961)
!7022 = !DILocation(line: 357, column: 21, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !6961, file: !919, line: 357, column: 21)
!7024 = !DILocation(line: 357, column: 35, scope: !7023)
!7025 = !DILocation(line: 357, column: 21, scope: !6961)
!7026 = !DILocation(line: 358, column: 42, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7023, file: !919, line: 357, column: 41)
!7028 = !DILocation(line: 358, column: 21, scope: !7027)
!7029 = !DILocation(line: 358, column: 24, scope: !7027)
!7030 = !DILocation(line: 358, column: 40, scope: !7027)
!7031 = !DILocation(line: 359, column: 44, scope: !7027)
!7032 = !DILocation(line: 359, column: 21, scope: !7027)
!7033 = !DILocation(line: 359, column: 24, scope: !7027)
!7034 = !DILocation(line: 359, column: 42, scope: !7027)
!7035 = !DILocation(line: 360, column: 17, scope: !7027)
!7036 = !DILocation(line: 361, column: 42, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7023, file: !919, line: 360, column: 24)
!7038 = !DILocation(line: 361, column: 21, scope: !7037)
!7039 = !DILocation(line: 361, column: 24, scope: !7037)
!7040 = !DILocation(line: 361, column: 40, scope: !7037)
!7041 = !DILocation(line: 362, column: 44, scope: !7037)
!7042 = !DILocation(line: 362, column: 21, scope: !7037)
!7043 = !DILocation(line: 362, column: 24, scope: !7037)
!7044 = !DILocation(line: 362, column: 42, scope: !7037)
!7045 = !DILocation(line: 364, column: 13, scope: !6961)
!7046 = !DILocation(line: 343, column: 65, scope: !7047)
!7047 = !DILexicalBlockFile(scope: !6953, file: !919, discriminator: 2)
!7048 = !DILocation(line: 343, column: 13, scope: !7047)
!7049 = distinct !{!7049, !7050}
!7050 = !DILocation(line: 343, column: 13, scope: !6887)
!7051 = !DILocation(line: 367, column: 10, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !6682, file: !919, line: 367, column: 9)
!7053 = !DILocation(line: 367, column: 9, scope: !6682)
!7054 = !DILocation(line: 368, column: 13, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7056, file: !919, line: 368, column: 13)
!7056 = distinct !DILexicalBlock(scope: !7052, file: !919, line: 367, column: 13)
!7057 = !DILocation(line: 368, column: 13, scope: !7056)
!7058 = !DILocation(line: 369, column: 80, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7055, file: !919, line: 368, column: 27)
!7060 = !DILocation(line: 369, column: 13, scope: !7059)
!7061 = !DILocation(line: 370, column: 9, scope: !7059)
!7062 = !DILocation(line: 370, column: 20, scope: !7063)
!7063 = !DILexicalBlockFile(scope: !7064, file: !919, discriminator: 1)
!7064 = distinct !DILexicalBlock(scope: !7055, file: !919, line: 370, column: 20)
!7065 = !DILocation(line: 372, column: 92, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7064, file: !919, line: 370, column: 30)
!7067 = !DILocation(line: 371, column: 13, scope: !7066)
!7068 = !DILocation(line: 373, column: 13, scope: !7066)
!7069 = !DILocation(line: 376, column: 92, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7064, file: !919, line: 374, column: 16)
!7071 = !DILocation(line: 375, column: 13, scope: !7070)
!7072 = !DILocation(line: 377, column: 13, scope: !7070)
!7073 = !DILocation(line: 379, column: 5, scope: !7056)
!7074 = !DILocation(line: 381, column: 14, scope: !6682)
!7075 = !DILocation(line: 381, column: 5, scope: !6682)
!7076 = !DILocation(line: 382, column: 5, scope: !6682)
!7077 = !DILocation(line: 383, column: 1, scope: !6682)
!7078 = distinct !DISubprogram(name: "opt_map_channel", scope: !919, file: !919, line: 393, type: !1323, isLocal: true, isDefinition: true, scopeLine: 394, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!7079 = !DILocalVariable(name: "optctx", arg: 1, scope: !7078, file: !919, line: 393, type: !989)
!7080 = !DILocation(line: 393, column: 34, scope: !7078)
!7081 = !DILocalVariable(name: "opt", arg: 2, scope: !7078, file: !919, line: 393, type: !982)
!7082 = !DILocation(line: 393, column: 54, scope: !7078)
!7083 = !DILocalVariable(name: "arg", arg: 3, scope: !7078, file: !919, line: 393, type: !982)
!7084 = !DILocation(line: 393, column: 71, scope: !7078)
!7085 = !DILocalVariable(name: "o", scope: !7078, file: !919, line: 395, type: !2116)
!7086 = !DILocation(line: 395, column: 21, scope: !7078)
!7087 = !DILocation(line: 395, column: 25, scope: !7078)
!7088 = !DILocalVariable(name: "n", scope: !7078, file: !919, line: 396, type: !998)
!7089 = !DILocation(line: 396, column: 9, scope: !7078)
!7090 = !DILocalVariable(name: "st", scope: !7078, file: !919, line: 397, type: !2562)
!7091 = !DILocation(line: 397, column: 15, scope: !7078)
!7092 = !DILocalVariable(name: "m", scope: !7078, file: !919, line: 398, type: !2181)
!7093 = !DILocation(line: 398, column: 22, scope: !7078)
!7094 = !DILocalVariable(name: "allow_unused", scope: !7078, file: !919, line: 399, type: !1105)
!7095 = !DILocation(line: 399, column: 11, scope: !7078)
!7096 = !DILocalVariable(name: "mapchan", scope: !7078, file: !919, line: 400, type: !1105)
!7097 = !DILocation(line: 400, column: 11, scope: !7078)
!7098 = !DILocation(line: 401, column: 25, scope: !7078)
!7099 = !DILocation(line: 401, column: 15, scope: !7078)
!7100 = !DILocation(line: 401, column: 13, scope: !7078)
!7101 = !DILocation(line: 402, column: 10, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7078, file: !919, line: 402, column: 9)
!7103 = !DILocation(line: 402, column: 9, scope: !7078)
!7104 = !DILocation(line: 403, column: 9, scope: !7102)
!7105 = !DILocation(line: 405, column: 40, scope: !7078)
!7106 = !DILocation(line: 405, column: 43, scope: !7078)
!7107 = !DILocation(line: 405, column: 96, scope: !7078)
!7108 = !DILocation(line: 405, column: 99, scope: !7078)
!7109 = !DILocation(line: 405, column: 122, scope: !7078)
!7110 = !DILocation(line: 405, column: 125, scope: !7078)
!7111 = !DILocation(line: 405, column: 147, scope: !7078)
!7112 = !DILocation(line: 405, column: 29, scope: !7078)
!7113 = !DILocation(line: 405, column: 5, scope: !7078)
!7114 = !DILocation(line: 405, column: 8, scope: !7078)
!7115 = !DILocation(line: 405, column: 27, scope: !7078)
!7116 = !DILocation(line: 406, column: 32, scope: !7078)
!7117 = !DILocation(line: 406, column: 35, scope: !7078)
!7118 = !DILocation(line: 406, column: 57, scope: !7078)
!7119 = !DILocation(line: 406, column: 10, scope: !7078)
!7120 = !DILocation(line: 406, column: 13, scope: !7078)
!7121 = !DILocation(line: 406, column: 7, scope: !7078)
!7122 = !DILocation(line: 409, column: 16, scope: !7078)
!7123 = !DILocation(line: 409, column: 34, scope: !7078)
!7124 = !DILocation(line: 409, column: 37, scope: !7078)
!7125 = !DILocation(line: 409, column: 51, scope: !7078)
!7126 = !DILocation(line: 409, column: 54, scope: !7078)
!7127 = !DILocation(line: 409, column: 66, scope: !7078)
!7128 = !DILocation(line: 409, column: 69, scope: !7078)
!7129 = !DILocation(line: 409, column: 9, scope: !7078)
!7130 = !DILocation(line: 409, column: 7, scope: !7078)
!7131 = !DILocation(line: 410, column: 10, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7078, file: !919, line: 410, column: 9)
!7133 = !DILocation(line: 410, column: 12, scope: !7132)
!7134 = !DILocation(line: 410, column: 17, scope: !7132)
!7135 = !DILocation(line: 410, column: 20, scope: !7136)
!7136 = !DILexicalBlockFile(scope: !7132, file: !919, discriminator: 1)
!7137 = !DILocation(line: 410, column: 22, scope: !7136)
!7138 = !DILocation(line: 410, column: 28, scope: !7136)
!7139 = !DILocation(line: 410, column: 31, scope: !7140)
!7140 = !DILexicalBlockFile(scope: !7132, file: !919, discriminator: 2)
!7141 = !DILocation(line: 410, column: 34, scope: !7140)
!7142 = !DILocation(line: 410, column: 46, scope: !7140)
!7143 = !DILocation(line: 410, column: 9, scope: !7140)
!7144 = !DILocation(line: 411, column: 23, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7132, file: !919, line: 410, column: 53)
!7146 = !DILocation(line: 411, column: 26, scope: !7145)
!7147 = !DILocation(line: 411, column: 37, scope: !7145)
!7148 = !DILocation(line: 411, column: 9, scope: !7145)
!7149 = !DILocation(line: 411, column: 12, scope: !7145)
!7150 = !DILocation(line: 411, column: 21, scope: !7145)
!7151 = !DILocation(line: 412, column: 13, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7145, file: !919, line: 412, column: 13)
!7153 = !DILocation(line: 412, column: 15, scope: !7152)
!7154 = !DILocation(line: 412, column: 13, scope: !7145)
!7155 = !DILocation(line: 413, column: 28, scope: !7152)
!7156 = !DILocation(line: 413, column: 31, scope: !7152)
!7157 = !DILocation(line: 413, column: 43, scope: !7152)
!7158 = !DILocation(line: 413, column: 13, scope: !7152)
!7159 = !DILocation(line: 413, column: 16, scope: !7152)
!7160 = !DILocation(line: 413, column: 26, scope: !7152)
!7161 = !DILocation(line: 414, column: 17, scope: !7145)
!7162 = !DILocation(line: 414, column: 9, scope: !7145)
!7163 = !DILocation(line: 415, column: 9, scope: !7145)
!7164 = !DILocation(line: 419, column: 16, scope: !7078)
!7165 = !DILocation(line: 420, column: 17, scope: !7078)
!7166 = !DILocation(line: 420, column: 20, scope: !7078)
!7167 = !DILocation(line: 420, column: 31, scope: !7078)
!7168 = !DILocation(line: 420, column: 34, scope: !7078)
!7169 = !DILocation(line: 420, column: 47, scope: !7078)
!7170 = !DILocation(line: 420, column: 50, scope: !7078)
!7171 = !DILocation(line: 421, column: 17, scope: !7078)
!7172 = !DILocation(line: 421, column: 20, scope: !7078)
!7173 = !DILocation(line: 421, column: 32, scope: !7078)
!7174 = !DILocation(line: 421, column: 35, scope: !7078)
!7175 = !DILocation(line: 419, column: 9, scope: !7078)
!7176 = !DILocation(line: 419, column: 7, scope: !7078)
!7177 = !DILocation(line: 423, column: 9, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7078, file: !919, line: 423, column: 9)
!7179 = !DILocation(line: 423, column: 11, scope: !7178)
!7180 = !DILocation(line: 423, column: 16, scope: !7178)
!7181 = !DILocation(line: 423, column: 19, scope: !7182)
!7182 = !DILexicalBlockFile(scope: !7178, file: !919, discriminator: 1)
!7183 = !DILocation(line: 423, column: 21, scope: !7182)
!7184 = !DILocation(line: 423, column: 9, scope: !7182)
!7185 = !DILocation(line: 424, column: 9, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7178, file: !919, line: 423, column: 27)
!7187 = !DILocation(line: 426, column: 9, scope: !7186)
!7188 = !DILocation(line: 429, column: 9, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7078, file: !919, line: 429, column: 9)
!7190 = !DILocation(line: 429, column: 11, scope: !7189)
!7191 = !DILocation(line: 429, column: 9, scope: !7078)
!7192 = !DILocation(line: 430, column: 24, scope: !7189)
!7193 = !DILocation(line: 430, column: 27, scope: !7189)
!7194 = !DILocation(line: 430, column: 39, scope: !7189)
!7195 = !DILocation(line: 430, column: 9, scope: !7189)
!7196 = !DILocation(line: 430, column: 12, scope: !7189)
!7197 = !DILocation(line: 430, column: 22, scope: !7189)
!7198 = !DILocation(line: 433, column: 9, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7078, file: !919, line: 433, column: 9)
!7200 = !DILocation(line: 433, column: 12, scope: !7199)
!7201 = !DILocation(line: 433, column: 21, scope: !7199)
!7202 = !DILocation(line: 433, column: 25, scope: !7199)
!7203 = !DILocation(line: 433, column: 28, scope: !7204)
!7204 = !DILexicalBlockFile(scope: !7199, file: !919, discriminator: 1)
!7205 = !DILocation(line: 433, column: 31, scope: !7204)
!7206 = !DILocation(line: 433, column: 43, scope: !7204)
!7207 = !DILocation(line: 433, column: 40, scope: !7204)
!7208 = !DILocation(line: 433, column: 9, scope: !7204)
!7209 = !DILocation(line: 435, column: 16, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7199, file: !919, line: 433, column: 59)
!7211 = !DILocation(line: 435, column: 19, scope: !7210)
!7212 = !DILocation(line: 434, column: 9, scope: !7210)
!7213 = !DILocation(line: 436, column: 9, scope: !7210)
!7214 = !DILocation(line: 438, column: 9, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7078, file: !919, line: 438, column: 9)
!7216 = !DILocation(line: 438, column: 12, scope: !7215)
!7217 = !DILocation(line: 438, column: 23, scope: !7215)
!7218 = !DILocation(line: 438, column: 27, scope: !7215)
!7219 = !DILocation(line: 439, column: 9, scope: !7215)
!7220 = !DILocation(line: 439, column: 12, scope: !7215)
!7221 = !DILocation(line: 439, column: 38, scope: !7215)
!7222 = !DILocation(line: 439, column: 41, scope: !7215)
!7223 = !DILocation(line: 439, column: 26, scope: !7215)
!7224 = !DILocation(line: 439, column: 52, scope: !7215)
!7225 = !DILocation(line: 439, column: 23, scope: !7215)
!7226 = !DILocation(line: 438, column: 9, scope: !7227)
!7227 = !DILexicalBlockFile(scope: !7078, file: !919, discriminator: 1)
!7228 = !DILocation(line: 441, column: 16, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7215, file: !919, line: 439, column: 64)
!7230 = !DILocation(line: 441, column: 19, scope: !7229)
!7231 = !DILocation(line: 441, column: 29, scope: !7229)
!7232 = !DILocation(line: 441, column: 32, scope: !7229)
!7233 = !DILocation(line: 440, column: 9, scope: !7229)
!7234 = !DILocation(line: 442, column: 9, scope: !7229)
!7235 = !DILocation(line: 444, column: 49, scope: !7078)
!7236 = !DILocation(line: 444, column: 52, scope: !7078)
!7237 = !DILocation(line: 444, column: 10, scope: !7078)
!7238 = !DILocation(line: 444, column: 22, scope: !7078)
!7239 = !DILocation(line: 444, column: 25, scope: !7078)
!7240 = !DILocation(line: 444, column: 36, scope: !7078)
!7241 = !DILocation(line: 444, column: 41, scope: !7078)
!7242 = !DILocation(line: 444, column: 8, scope: !7078)
!7243 = !DILocation(line: 445, column: 9, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7078, file: !919, line: 445, column: 9)
!7245 = !DILocation(line: 445, column: 13, scope: !7244)
!7246 = !DILocation(line: 445, column: 23, scope: !7244)
!7247 = !DILocation(line: 445, column: 34, scope: !7244)
!7248 = !DILocation(line: 445, column: 9, scope: !7078)
!7249 = !DILocation(line: 447, column: 16, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7244, file: !919, line: 445, column: 57)
!7251 = !DILocation(line: 447, column: 19, scope: !7250)
!7252 = !DILocation(line: 447, column: 29, scope: !7250)
!7253 = !DILocation(line: 447, column: 32, scope: !7250)
!7254 = !DILocation(line: 446, column: 9, scope: !7250)
!7255 = !DILocation(line: 448, column: 9, scope: !7250)
!7256 = !DILocation(line: 451, column: 31, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7078, file: !919, line: 451, column: 9)
!7258 = !DILocation(line: 451, column: 24, scope: !7257)
!7259 = !DILocation(line: 451, column: 22, scope: !7257)
!7260 = !DILocation(line: 451, column: 9, scope: !7078)
!7261 = !DILocation(line: 452, column: 10, scope: !7257)
!7262 = !DILocation(line: 452, column: 23, scope: !7257)
!7263 = !DILocation(line: 452, column: 9, scope: !7257)
!7264 = !DILocation(line: 453, column: 9, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7078, file: !919, line: 453, column: 9)
!7266 = !DILocation(line: 453, column: 12, scope: !7265)
!7267 = !DILocation(line: 453, column: 24, scope: !7265)
!7268 = !DILocation(line: 453, column: 28, scope: !7265)
!7269 = !DILocation(line: 453, column: 31, scope: !7270)
!7270 = !DILexicalBlockFile(scope: !7265, file: !919, discriminator: 1)
!7271 = !DILocation(line: 453, column: 34, scope: !7270)
!7272 = !DILocation(line: 453, column: 49, scope: !7270)
!7273 = !DILocation(line: 453, column: 53, scope: !7270)
!7274 = !DILocation(line: 453, column: 63, scope: !7270)
!7275 = !DILocation(line: 453, column: 46, scope: !7270)
!7276 = !DILocation(line: 453, column: 72, scope: !7270)
!7277 = !DILocation(line: 454, column: 35, scope: !7265)
!7278 = !DILocation(line: 454, column: 38, scope: !7265)
!7279 = !DILocation(line: 454, column: 23, scope: !7265)
!7280 = !DILocation(line: 454, column: 49, scope: !7265)
!7281 = !DILocation(line: 454, column: 61, scope: !7265)
!7282 = !DILocation(line: 454, column: 64, scope: !7265)
!7283 = !DILocation(line: 454, column: 59, scope: !7265)
!7284 = !DILocation(line: 454, column: 9, scope: !7265)
!7285 = !DILocation(line: 454, column: 77, scope: !7265)
!7286 = !DILocation(line: 454, column: 94, scope: !7265)
!7287 = !DILocation(line: 453, column: 9, scope: !7288)
!7288 = !DILexicalBlockFile(scope: !7078, file: !919, discriminator: 2)
!7289 = !DILocation(line: 455, column: 13, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7291, file: !919, line: 455, column: 13)
!7291 = distinct !DILexicalBlock(scope: !7265, file: !919, line: 454, column: 112)
!7292 = !DILocation(line: 455, column: 13, scope: !7291)
!7293 = !DILocation(line: 457, column: 21, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7290, file: !919, line: 455, column: 27)
!7295 = !DILocation(line: 457, column: 24, scope: !7294)
!7296 = !DILocation(line: 457, column: 34, scope: !7294)
!7297 = !DILocation(line: 457, column: 37, scope: !7294)
!7298 = !DILocation(line: 457, column: 49, scope: !7294)
!7299 = !DILocation(line: 457, column: 52, scope: !7294)
!7300 = !DILocation(line: 456, column: 13, scope: !7294)
!7301 = !DILocation(line: 458, column: 9, scope: !7294)
!7302 = !DILocation(line: 461, column: 21, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7290, file: !919, line: 458, column: 16)
!7304 = !DILocation(line: 461, column: 24, scope: !7303)
!7305 = !DILocation(line: 461, column: 34, scope: !7303)
!7306 = !DILocation(line: 461, column: 37, scope: !7303)
!7307 = !DILocation(line: 461, column: 49, scope: !7303)
!7308 = !DILocation(line: 461, column: 52, scope: !7303)
!7309 = !DILocation(line: 459, column: 13, scope: !7303)
!7310 = !DILocation(line: 462, column: 13, scope: !7303)
!7311 = !DILocation(line: 465, column: 5, scope: !7291)
!7312 = !DILocation(line: 466, column: 13, scope: !7078)
!7313 = !DILocation(line: 466, column: 5, scope: !7078)
!7314 = !DILocation(line: 467, column: 5, scope: !7078)
!7315 = !DILocation(line: 468, column: 1, scope: !7078)
!7316 = distinct !DISubprogram(name: "opt_recording_timestamp", scope: !919, file: !919, line: 651, type: !1323, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!7317 = !DILocalVariable(name: "optctx", arg: 1, scope: !7316, file: !919, line: 651, type: !989)
!7318 = !DILocation(line: 651, column: 42, scope: !7316)
!7319 = !DILocalVariable(name: "opt", arg: 2, scope: !7316, file: !919, line: 651, type: !982)
!7320 = !DILocation(line: 651, column: 62, scope: !7316)
!7321 = !DILocalVariable(name: "arg", arg: 3, scope: !7316, file: !919, line: 651, type: !982)
!7322 = !DILocation(line: 651, column: 79, scope: !7316)
!7323 = !DILocalVariable(name: "o", scope: !7316, file: !919, line: 653, type: !2116)
!7324 = !DILocation(line: 653, column: 21, scope: !7316)
!7325 = !DILocation(line: 653, column: 25, scope: !7316)
!7326 = !DILocalVariable(name: "buf", scope: !7316, file: !919, line: 654, type: !7327)
!7327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 1024, align: 8, elements: !2036)
!7328 = !DILocation(line: 654, column: 10, scope: !7316)
!7329 = !DILocalVariable(name: "recording_timestamp", scope: !7316, file: !919, line: 655, type: !1004)
!7330 = !DILocation(line: 655, column: 13, scope: !7316)
!7331 = !DILocation(line: 655, column: 53, scope: !7316)
!7332 = !DILocation(line: 655, column: 58, scope: !7316)
!7333 = !DILocation(line: 655, column: 35, scope: !7316)
!7334 = !DILocation(line: 655, column: 66, scope: !7316)
!7335 = !DILocalVariable(name: "time", scope: !7316, file: !919, line: 656, type: !7336)
!7336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !1346, line: 133, size: 448, align: 64, elements: !7337)
!7337 = !{!7338, !7339, !7340, !7341, !7342, !7343, !7344, !7345, !7346, !7347, !7348}
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !7336, file: !1346, line: 135, baseType: !998, size: 32, align: 32)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !7336, file: !1346, line: 136, baseType: !998, size: 32, align: 32, offset: 32)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !7336, file: !1346, line: 137, baseType: !998, size: 32, align: 32, offset: 64)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !7336, file: !1346, line: 138, baseType: !998, size: 32, align: 32, offset: 96)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !7336, file: !1346, line: 139, baseType: !998, size: 32, align: 32, offset: 128)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !7336, file: !1346, line: 140, baseType: !998, size: 32, align: 32, offset: 160)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !7336, file: !1346, line: 141, baseType: !998, size: 32, align: 32, offset: 192)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !7336, file: !1346, line: 142, baseType: !998, size: 32, align: 32, offset: 224)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !7336, file: !1346, line: 143, baseType: !998, size: 32, align: 32, offset: 256)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_gmtoff", scope: !7336, file: !1346, line: 149, baseType: !1006, size: 64, align: 64, offset: 320)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_zone", scope: !7336, file: !1346, line: 150, baseType: !982, size: 64, align: 64, offset: 384)
!7349 = !DILocation(line: 656, column: 15, scope: !7316)
!7350 = !DILocation(line: 656, column: 23, scope: !7316)
!7351 = !DILocation(line: 656, column: 22, scope: !7316)
!7352 = !DILocation(line: 656, column: 22, scope: !7353)
!7353 = !DILexicalBlockFile(scope: !7316, file: !919, discriminator: 1)
!7354 = !DILocation(line: 657, column: 19, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7316, file: !919, line: 657, column: 9)
!7356 = !DILocation(line: 657, column: 10, scope: !7355)
!7357 = !DILocation(line: 657, column: 9, scope: !7316)
!7358 = !DILocation(line: 658, column: 9, scope: !7355)
!7359 = !DILocation(line: 659, column: 18, scope: !7316)
!7360 = !DILocation(line: 659, column: 33, scope: !7316)
!7361 = !DILocation(line: 659, column: 5, scope: !7316)
!7362 = !DILocation(line: 662, column: 52, scope: !7316)
!7363 = !DILocation(line: 661, column: 5, scope: !7316)
!7364 = !DILocation(line: 663, column: 5, scope: !7316)
!7365 = !DILocation(line: 664, column: 1, scope: !7316)
!7366 = distinct !DISubprogram(name: "opt_data_frames", scope: !919, file: !919, line: 2929, type: !1323, isLocal: true, isDefinition: true, scopeLine: 2930, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!7367 = !DILocalVariable(name: "optctx", arg: 1, scope: !7366, file: !919, line: 2929, type: !989)
!7368 = !DILocation(line: 2929, column: 34, scope: !7366)
!7369 = !DILocalVariable(name: "opt", arg: 2, scope: !7366, file: !919, line: 2929, type: !982)
!7370 = !DILocation(line: 2929, column: 54, scope: !7366)
!7371 = !DILocalVariable(name: "arg", arg: 3, scope: !7366, file: !919, line: 2929, type: !982)
!7372 = !DILocation(line: 2929, column: 71, scope: !7366)
!7373 = !DILocalVariable(name: "o", scope: !7366, file: !919, line: 2931, type: !2116)
!7374 = !DILocation(line: 2931, column: 21, scope: !7366)
!7375 = !DILocation(line: 2931, column: 25, scope: !7366)
!7376 = !DILocation(line: 2932, column: 25, scope: !7366)
!7377 = !DILocation(line: 2932, column: 40, scope: !7366)
!7378 = !DILocation(line: 2932, column: 12, scope: !7366)
!7379 = !DILocation(line: 2932, column: 5, scope: !7366)
!7380 = distinct !DISubprogram(name: "opt_progress", scope: !919, file: !919, line: 3344, type: !1323, isLocal: true, isDefinition: true, scopeLine: 3345, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!7381 = !DILocalVariable(name: "optctx", arg: 1, scope: !7380, file: !919, line: 3344, type: !989)
!7382 = !DILocation(line: 3344, column: 31, scope: !7380)
!7383 = !DILocalVariable(name: "opt", arg: 2, scope: !7380, file: !919, line: 3344, type: !982)
!7384 = !DILocation(line: 3344, column: 51, scope: !7380)
!7385 = !DILocalVariable(name: "arg", arg: 3, scope: !7380, file: !919, line: 3344, type: !982)
!7386 = !DILocation(line: 3344, column: 68, scope: !7380)
!7387 = !DILocalVariable(name: "avio", scope: !7380, file: !919, line: 3346, type: !2496)
!7388 = !DILocation(line: 3346, column: 18, scope: !7380)
!7389 = !DILocalVariable(name: "ret", scope: !7380, file: !919, line: 3347, type: !998)
!7390 = !DILocation(line: 3347, column: 9, scope: !7380)
!7391 = !DILocation(line: 3349, column: 17, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7380, file: !919, line: 3349, column: 9)
!7393 = !DILocation(line: 3349, column: 10, scope: !7392)
!7394 = !DILocation(line: 3349, column: 9, scope: !7380)
!7395 = !DILocation(line: 3350, column: 13, scope: !7392)
!7396 = !DILocation(line: 3350, column: 9, scope: !7392)
!7397 = !DILocation(line: 3351, column: 29, scope: !7380)
!7398 = !DILocation(line: 3351, column: 11, scope: !7380)
!7399 = !DILocation(line: 3351, column: 9, scope: !7380)
!7400 = !DILocation(line: 3352, column: 9, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7380, file: !919, line: 3352, column: 9)
!7402 = !DILocation(line: 3352, column: 13, scope: !7401)
!7403 = !DILocation(line: 3352, column: 9, scope: !7380)
!7404 = !DILocation(line: 3354, column: 16, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7401, file: !919, line: 3352, column: 18)
!7406 = !DILocation(line: 3354, column: 42, scope: !7405)
!7407 = !DILocation(line: 3354, column: 52, scope: !7405)
!7408 = !DILocation(line: 3354, column: 61, scope: !7405)
!7409 = !DILocation(line: 3354, column: 21, scope: !7410)
!7410 = !DILexicalBlockFile(scope: !7405, file: !919, discriminator: 1)
!7411 = !DILocation(line: 3353, column: 9, scope: !7405)
!7412 = !DILocation(line: 3355, column: 16, scope: !7405)
!7413 = !DILocation(line: 3355, column: 9, scope: !7405)
!7414 = !DILocation(line: 3357, column: 21, scope: !7380)
!7415 = !DILocation(line: 3357, column: 19, scope: !7380)
!7416 = !DILocation(line: 3358, column: 5, scope: !7380)
!7417 = !DILocation(line: 3359, column: 1, scope: !7380)
!7418 = !DILocalVariable(name: "optctx", arg: 1, scope: !1322, file: !919, line: 2752, type: !989)
!7419 = !DILocation(line: 2752, column: 29, scope: !1322)
!7420 = !DILocalVariable(name: "opt", arg: 2, scope: !1322, file: !919, line: 2752, type: !982)
!7421 = !DILocation(line: 2752, column: 49, scope: !1322)
!7422 = !DILocalVariable(name: "arg", arg: 3, scope: !1322, file: !919, line: 2752, type: !982)
!7423 = !DILocation(line: 2752, column: 66, scope: !1322)
!7424 = !DILocalVariable(name: "o", scope: !1322, file: !919, line: 2754, type: !2116)
!7425 = !DILocation(line: 2754, column: 21, scope: !1322)
!7426 = !DILocation(line: 2754, column: 25, scope: !1322)
!7427 = !DILocalVariable(name: "norm", scope: !1322, file: !919, line: 2755, type: !1321)
!7428 = !DILocation(line: 2755, column: 39, scope: !1322)
!7429 = !DILocation(line: 2758, column: 18, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !1322, file: !919, line: 2758, column: 9)
!7431 = !DILocation(line: 2758, column: 10, scope: !7430)
!7432 = !DILocation(line: 2758, column: 9, scope: !1322)
!7433 = !DILocation(line: 2759, column: 14, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7430, file: !919, line: 2758, column: 35)
!7435 = !DILocation(line: 2760, column: 13, scope: !7434)
!7436 = !DILocation(line: 2761, column: 5, scope: !7434)
!7437 = !DILocation(line: 2761, column: 25, scope: !7438)
!7438 = !DILexicalBlockFile(scope: !7439, file: !919, discriminator: 1)
!7439 = distinct !DILexicalBlock(scope: !7430, file: !919, line: 2761, column: 16)
!7440 = !DILocation(line: 2761, column: 17, scope: !7438)
!7441 = !DILocation(line: 2761, column: 16, scope: !7438)
!7442 = !DILocation(line: 2762, column: 14, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7439, file: !919, line: 2761, column: 43)
!7444 = !DILocation(line: 2763, column: 13, scope: !7443)
!7445 = !DILocation(line: 2764, column: 5, scope: !7443)
!7446 = !DILocation(line: 2764, column: 25, scope: !7447)
!7447 = !DILexicalBlockFile(scope: !7448, file: !919, discriminator: 1)
!7448 = distinct !DILexicalBlock(scope: !7439, file: !919, line: 2764, column: 16)
!7449 = !DILocation(line: 2764, column: 17, scope: !7447)
!7450 = !DILocation(line: 2764, column: 16, scope: !7447)
!7451 = !DILocation(line: 2765, column: 14, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7448, file: !919, line: 2764, column: 43)
!7453 = !DILocation(line: 2766, column: 13, scope: !7452)
!7454 = !DILocation(line: 2767, column: 5, scope: !7452)
!7455 = !DILocation(line: 2769, column: 13, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7457, file: !919, line: 2769, column: 13)
!7457 = distinct !DILexicalBlock(scope: !7448, file: !919, line: 2767, column: 12)
!7458 = !DILocation(line: 2769, column: 13, scope: !7457)
!7459 = !DILocalVariable(name: "i", scope: !7460, file: !919, line: 2770, type: !998)
!7460 = distinct !DILexicalBlock(scope: !7456, file: !919, line: 2769, column: 29)
!7461 = !DILocation(line: 2770, column: 17, scope: !7460)
!7462 = !DILocalVariable(name: "j", scope: !7460, file: !919, line: 2770, type: !998)
!7463 = !DILocation(line: 2770, column: 20, scope: !7460)
!7464 = !DILocalVariable(name: "fr", scope: !7460, file: !919, line: 2770, type: !998)
!7465 = !DILocation(line: 2770, column: 23, scope: !7460)
!7466 = !DILocation(line: 2771, column: 20, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7460, file: !919, line: 2771, column: 13)
!7468 = !DILocation(line: 2771, column: 18, scope: !7467)
!7469 = !DILocation(line: 2771, column: 25, scope: !7470)
!7470 = !DILexicalBlockFile(scope: !7471, file: !919, discriminator: 1)
!7471 = distinct !DILexicalBlock(scope: !7467, file: !919, line: 2771, column: 13)
!7472 = !DILocation(line: 2771, column: 29, scope: !7470)
!7473 = !DILocation(line: 2771, column: 27, scope: !7470)
!7474 = !DILocation(line: 2771, column: 13, scope: !7470)
!7475 = !DILocation(line: 2772, column: 24, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7477, file: !919, line: 2772, column: 17)
!7477 = distinct !DILexicalBlock(scope: !7471, file: !919, line: 2771, column: 50)
!7478 = !DILocation(line: 2772, column: 22, scope: !7476)
!7479 = !DILocation(line: 2772, column: 29, scope: !7480)
!7480 = !DILexicalBlockFile(scope: !7481, file: !919, discriminator: 1)
!7481 = distinct !DILexicalBlock(scope: !7476, file: !919, line: 2772, column: 17)
!7482 = !DILocation(line: 2772, column: 45, scope: !7480)
!7483 = !DILocation(line: 2772, column: 33, scope: !7480)
!7484 = !DILocation(line: 2772, column: 49, scope: !7480)
!7485 = !DILocation(line: 2772, column: 31, scope: !7480)
!7486 = !DILocation(line: 2772, column: 17, scope: !7480)
!7487 = !DILocalVariable(name: "st", scope: !7488, file: !919, line: 2773, type: !2562)
!7488 = distinct !DILexicalBlock(scope: !7481, file: !919, line: 2772, column: 66)
!7489 = !DILocation(line: 2773, column: 31, scope: !7488)
!7490 = !DILocation(line: 2773, column: 65, scope: !7488)
!7491 = !DILocation(line: 2773, column: 36, scope: !7488)
!7492 = !DILocation(line: 2773, column: 48, scope: !7488)
!7493 = !DILocation(line: 2773, column: 52, scope: !7488)
!7494 = !DILocation(line: 2773, column: 57, scope: !7488)
!7495 = !DILocation(line: 2774, column: 25, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7488, file: !919, line: 2774, column: 25)
!7497 = !DILocation(line: 2774, column: 29, scope: !7496)
!7498 = !DILocation(line: 2774, column: 39, scope: !7496)
!7499 = !DILocation(line: 2774, column: 50, scope: !7496)
!7500 = !DILocation(line: 2774, column: 25, scope: !7488)
!7501 = !DILocation(line: 2775, column: 25, scope: !7496)
!7502 = !DILocation(line: 2776, column: 26, scope: !7488)
!7503 = !DILocation(line: 2776, column: 30, scope: !7488)
!7504 = !DILocation(line: 2776, column: 40, scope: !7488)
!7505 = !DILocation(line: 2776, column: 44, scope: !7488)
!7506 = !DILocation(line: 2776, column: 53, scope: !7488)
!7507 = !DILocation(line: 2776, column: 57, scope: !7488)
!7508 = !DILocation(line: 2776, column: 67, scope: !7488)
!7509 = !DILocation(line: 2776, column: 51, scope: !7488)
!7510 = !DILocation(line: 2776, column: 24, scope: !7488)
!7511 = !DILocation(line: 2777, column: 25, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7488, file: !919, line: 2777, column: 25)
!7513 = !DILocation(line: 2777, column: 28, scope: !7512)
!7514 = !DILocation(line: 2777, column: 25, scope: !7488)
!7515 = !DILocation(line: 2778, column: 30, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7512, file: !919, line: 2777, column: 38)
!7517 = !DILocation(line: 2779, column: 25, scope: !7516)
!7518 = !DILocation(line: 2780, column: 33, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7512, file: !919, line: 2780, column: 32)
!7520 = !DILocation(line: 2780, column: 36, scope: !7519)
!7521 = !DILocation(line: 2780, column: 46, scope: !7519)
!7522 = !DILocation(line: 2780, column: 50, scope: !7523)
!7523 = !DILexicalBlockFile(scope: !7519, file: !919, discriminator: 1)
!7524 = !DILocation(line: 2780, column: 53, scope: !7523)
!7525 = !DILocation(line: 2780, column: 32, scope: !7523)
!7526 = !DILocation(line: 2781, column: 30, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7519, file: !919, line: 2780, column: 64)
!7528 = !DILocation(line: 2782, column: 25, scope: !7527)
!7529 = !DILocation(line: 2784, column: 17, scope: !7488)
!7530 = !DILocation(line: 2772, column: 62, scope: !7531)
!7531 = !DILexicalBlockFile(scope: !7481, file: !919, discriminator: 2)
!7532 = !DILocation(line: 2772, column: 17, scope: !7531)
!7533 = distinct !{!7533, !7534}
!7534 = !DILocation(line: 2772, column: 17, scope: !7477)
!7535 = !DILocation(line: 2785, column: 21, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7477, file: !919, line: 2785, column: 21)
!7537 = !DILocation(line: 2785, column: 26, scope: !7536)
!7538 = !DILocation(line: 2785, column: 21, scope: !7477)
!7539 = !DILocation(line: 2786, column: 21, scope: !7536)
!7540 = !DILocation(line: 2787, column: 13, scope: !7477)
!7541 = !DILocation(line: 2771, column: 46, scope: !7542)
!7542 = !DILexicalBlockFile(scope: !7471, file: !919, discriminator: 2)
!7543 = !DILocation(line: 2771, column: 13, scope: !7542)
!7544 = distinct !{!7544, !7545}
!7545 = !DILocation(line: 2771, column: 13, scope: !7460)
!7546 = !DILocation(line: 2788, column: 9, scope: !7460)
!7547 = !DILocation(line: 2789, column: 13, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7457, file: !919, line: 2789, column: 13)
!7549 = !DILocation(line: 2789, column: 18, scope: !7548)
!7550 = !DILocation(line: 2789, column: 13, scope: !7457)
!7551 = !DILocation(line: 2790, column: 58, scope: !7548)
!7552 = !DILocation(line: 2790, column: 63, scope: !7548)
!7553 = !DILocation(line: 2790, column: 13, scope: !7548)
!7554 = !DILocation(line: 2793, column: 9, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !1322, file: !919, line: 2793, column: 9)
!7556 = !DILocation(line: 2793, column: 14, scope: !7555)
!7557 = !DILocation(line: 2793, column: 9, scope: !1322)
!7558 = !DILocation(line: 2794, column: 9, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7555, file: !919, line: 2793, column: 26)
!7560 = !DILocation(line: 2795, column: 9, scope: !7559)
!7561 = !DILocation(line: 2796, column: 9, scope: !7559)
!7562 = !DILocation(line: 2797, column: 9, scope: !7559)
!7563 = !DILocation(line: 2800, column: 17, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !1322, file: !919, line: 2800, column: 9)
!7565 = !DILocation(line: 2800, column: 10, scope: !7564)
!7566 = !DILocation(line: 2800, column: 9, scope: !1322)
!7567 = !DILocation(line: 2801, column: 25, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7564, file: !919, line: 2800, column: 30)
!7569 = !DILocation(line: 2801, column: 9, scope: !7568)
!7570 = !DILocation(line: 2802, column: 25, scope: !7568)
!7571 = !DILocation(line: 2802, column: 9, scope: !7568)
!7572 = !DILocation(line: 2803, column: 22, scope: !7568)
!7573 = !DILocation(line: 2803, column: 9, scope: !7568)
!7574 = !DILocation(line: 2805, column: 22, scope: !7568)
!7575 = !DILocation(line: 2805, column: 30, scope: !7568)
!7576 = !DILocation(line: 2805, column: 35, scope: !7568)
!7577 = !DILocation(line: 2805, column: 9, scope: !7568)
!7578 = !DILocation(line: 2806, column: 22, scope: !7568)
!7579 = !DILocation(line: 2806, column: 42, scope: !7568)
!7580 = !DILocation(line: 2806, column: 30, scope: !7568)
!7581 = !DILocation(line: 2806, column: 9, scope: !7568)
!7582 = !DILocation(line: 2807, column: 31, scope: !7568)
!7583 = !DILocation(line: 2807, column: 36, scope: !7568)
!7584 = !DILocation(line: 2807, column: 9, scope: !7568)
!7585 = !DILocation(line: 2809, column: 9, scope: !7568)
!7586 = !DILocation(line: 2810, column: 9, scope: !7568)
!7587 = !DILocation(line: 2811, column: 9, scope: !7568)
!7588 = !DILocation(line: 2812, column: 9, scope: !7568)
!7589 = !DILocation(line: 2814, column: 9, scope: !7568)
!7590 = !DILocation(line: 2815, column: 22, scope: !7568)
!7591 = !DILocation(line: 2815, column: 9, scope: !7568)
!7592 = !DILocation(line: 2816, column: 22, scope: !7568)
!7593 = !DILocation(line: 2816, column: 9, scope: !7568)
!7594 = !DILocation(line: 2818, column: 9, scope: !7568)
!7595 = !DILocation(line: 2819, column: 9, scope: !7568)
!7596 = !DILocation(line: 2826, column: 9, scope: !7568)
!7597 = !DILocation(line: 2826, column: 12, scope: !7568)
!7598 = !DILocation(line: 2826, column: 24, scope: !7568)
!7599 = !DILocation(line: 2827, column: 5, scope: !7568)
!7600 = !DILocation(line: 2827, column: 24, scope: !7601)
!7601 = !DILexicalBlockFile(scope: !7602, file: !919, discriminator: 1)
!7602 = distinct !DILexicalBlock(scope: !7564, file: !919, line: 2827, column: 16)
!7603 = !DILocation(line: 2827, column: 17, scope: !7601)
!7604 = !DILocation(line: 2827, column: 16, scope: !7601)
!7605 = !DILocation(line: 2829, column: 25, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7602, file: !919, line: 2827, column: 38)
!7607 = !DILocation(line: 2829, column: 9, scope: !7606)
!7608 = !DILocation(line: 2830, column: 25, scope: !7606)
!7609 = !DILocation(line: 2830, column: 9, scope: !7606)
!7610 = !DILocation(line: 2831, column: 22, scope: !7606)
!7611 = !DILocation(line: 2831, column: 9, scope: !7606)
!7612 = !DILocation(line: 2833, column: 22, scope: !7606)
!7613 = !DILocation(line: 2833, column: 30, scope: !7606)
!7614 = !DILocation(line: 2833, column: 35, scope: !7606)
!7615 = !DILocation(line: 2833, column: 9, scope: !7606)
!7616 = !DILocation(line: 2834, column: 22, scope: !7606)
!7617 = !DILocation(line: 2834, column: 42, scope: !7606)
!7618 = !DILocation(line: 2834, column: 30, scope: !7606)
!7619 = !DILocation(line: 2834, column: 9, scope: !7606)
!7620 = !DILocation(line: 2835, column: 22, scope: !7606)
!7621 = !DILocation(line: 2835, column: 9, scope: !7606)
!7622 = !DILocation(line: 2836, column: 31, scope: !7606)
!7623 = !DILocation(line: 2836, column: 36, scope: !7606)
!7624 = !DILocation(line: 2836, column: 9, scope: !7606)
!7625 = !DILocation(line: 2838, column: 9, scope: !7606)
!7626 = !DILocation(line: 2839, column: 9, scope: !7606)
!7627 = !DILocation(line: 2840, column: 9, scope: !7606)
!7628 = !DILocation(line: 2841, column: 9, scope: !7606)
!7629 = !DILocation(line: 2842, column: 9, scope: !7606)
!7630 = !DILocation(line: 2844, column: 9, scope: !7606)
!7631 = !DILocation(line: 2845, column: 22, scope: !7606)
!7632 = !DILocation(line: 2845, column: 9, scope: !7606)
!7633 = !DILocation(line: 2847, column: 9, scope: !7606)
!7634 = !DILocation(line: 2849, column: 5, scope: !7606)
!7635 = !DILocation(line: 2849, column: 24, scope: !7636)
!7636 = !DILexicalBlockFile(scope: !7637, file: !919, discriminator: 1)
!7637 = distinct !DILexicalBlock(scope: !7602, file: !919, line: 2849, column: 16)
!7638 = !DILocation(line: 2849, column: 17, scope: !7636)
!7639 = !DILocation(line: 2849, column: 16, scope: !7636)
!7640 = !DILocation(line: 2851, column: 25, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7637, file: !919, line: 2849, column: 37)
!7642 = !DILocation(line: 2851, column: 9, scope: !7641)
!7643 = !DILocation(line: 2852, column: 25, scope: !7641)
!7644 = !DILocation(line: 2852, column: 9, scope: !7641)
!7645 = !DILocation(line: 2853, column: 22, scope: !7641)
!7646 = !DILocation(line: 2853, column: 9, scope: !7641)
!7647 = !DILocation(line: 2855, column: 22, scope: !7641)
!7648 = !DILocation(line: 2855, column: 30, scope: !7641)
!7649 = !DILocation(line: 2855, column: 35, scope: !7641)
!7650 = !DILocation(line: 2855, column: 9, scope: !7641)
!7651 = !DILocation(line: 2856, column: 22, scope: !7641)
!7652 = !DILocation(line: 2856, column: 42, scope: !7641)
!7653 = !DILocation(line: 2856, column: 30, scope: !7641)
!7654 = !DILocation(line: 2856, column: 9, scope: !7641)
!7655 = !DILocation(line: 2857, column: 22, scope: !7641)
!7656 = !DILocation(line: 2857, column: 9, scope: !7641)
!7657 = !DILocation(line: 2858, column: 31, scope: !7641)
!7658 = !DILocation(line: 2858, column: 36, scope: !7641)
!7659 = !DILocation(line: 2858, column: 9, scope: !7641)
!7660 = !DILocation(line: 2860, column: 9, scope: !7641)
!7661 = !DILocation(line: 2861, column: 9, scope: !7641)
!7662 = !DILocation(line: 2862, column: 9, scope: !7641)
!7663 = !DILocation(line: 2863, column: 9, scope: !7641)
!7664 = !DILocation(line: 2865, column: 9, scope: !7641)
!7665 = !DILocation(line: 2866, column: 9, scope: !7641)
!7666 = !DILocation(line: 2868, column: 9, scope: !7641)
!7667 = !DILocation(line: 2869, column: 22, scope: !7641)
!7668 = !DILocation(line: 2869, column: 9, scope: !7641)
!7669 = !DILocation(line: 2871, column: 5, scope: !7641)
!7670 = !DILocation(line: 2871, column: 25, scope: !7671)
!7671 = !DILexicalBlockFile(scope: !7672, file: !919, discriminator: 1)
!7672 = distinct !DILexicalBlock(scope: !7637, file: !919, line: 2871, column: 16)
!7673 = !DILocation(line: 2871, column: 17, scope: !7671)
!7674 = !DILocation(line: 2871, column: 16, scope: !7671)
!7675 = !DILocation(line: 2873, column: 22, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7672, file: !919, line: 2871, column: 40)
!7677 = !DILocation(line: 2873, column: 9, scope: !7676)
!7678 = !DILocation(line: 2875, column: 22, scope: !7676)
!7679 = !DILocation(line: 2875, column: 30, scope: !7676)
!7680 = !DILocation(line: 2875, column: 35, scope: !7676)
!7681 = !DILocation(line: 2875, column: 9, scope: !7676)
!7682 = !DILocation(line: 2876, column: 22, scope: !7676)
!7683 = !DILocation(line: 2876, column: 45, scope: !7676)
!7684 = !DILocation(line: 2876, column: 37, scope: !7676)
!7685 = !DILocation(line: 2876, column: 36, scope: !7676)
!7686 = !DILocation(line: 2876, column: 36, scope: !7687)
!7687 = !DILexicalBlockFile(scope: !7676, file: !919, discriminator: 1)
!7688 = !DILocation(line: 2877, column: 27, scope: !7676)
!7689 = !DILocation(line: 2877, column: 32, scope: !7676)
!7690 = !DILocation(line: 2876, column: 36, scope: !7691)
!7691 = !DILexicalBlockFile(scope: !7676, file: !919, discriminator: 2)
!7692 = !DILocation(line: 2876, column: 36, scope: !7693)
!7693 = !DILexicalBlockFile(scope: !7676, file: !919, discriminator: 3)
!7694 = !DILocation(line: 2876, column: 9, scope: !7693)
!7695 = !DILocation(line: 2878, column: 22, scope: !7676)
!7696 = !DILocation(line: 2878, column: 42, scope: !7676)
!7697 = !DILocation(line: 2878, column: 30, scope: !7676)
!7698 = !DILocation(line: 2878, column: 9, scope: !7676)
!7699 = !DILocation(line: 2880, column: 22, scope: !7676)
!7700 = !DILocation(line: 2880, column: 9, scope: !7676)
!7701 = !DILocation(line: 2881, column: 22, scope: !7676)
!7702 = !DILocation(line: 2881, column: 9, scope: !7676)
!7703 = !DILocation(line: 2883, column: 5, scope: !7676)
!7704 = !DILocation(line: 2884, column: 49, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7672, file: !919, line: 2883, column: 12)
!7706 = !DILocation(line: 2884, column: 9, scope: !7705)
!7707 = !DILocation(line: 2885, column: 9, scope: !7705)
!7708 = !DILocation(line: 2888, column: 19, scope: !1322)
!7709 = !DILocation(line: 2888, column: 22, scope: !1322)
!7710 = !DILocation(line: 2888, column: 25, scope: !1322)
!7711 = !DILocation(line: 2888, column: 37, scope: !1322)
!7712 = !DILocation(line: 2888, column: 5, scope: !1322)
!7713 = !DILocation(line: 2889, column: 19, scope: !1322)
!7714 = !DILocation(line: 2889, column: 22, scope: !1322)
!7715 = !DILocation(line: 2889, column: 25, scope: !1322)
!7716 = !DILocation(line: 2889, column: 38, scope: !1322)
!7717 = !DILocation(line: 2889, column: 5, scope: !1322)
!7718 = !DILocation(line: 2891, column: 5, scope: !1322)
!7719 = !DILocation(line: 2892, column: 1, scope: !1322)
!7720 = distinct !DISubprogram(name: "opt_vsync", scope: !919, file: !919, line: 3067, type: !1323, isLocal: true, isDefinition: true, scopeLine: 3068, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!7721 = !DILocalVariable(name: "optctx", arg: 1, scope: !7720, file: !919, line: 3067, type: !989)
!7722 = !DILocation(line: 3067, column: 28, scope: !7720)
!7723 = !DILocalVariable(name: "opt", arg: 2, scope: !7720, file: !919, line: 3067, type: !982)
!7724 = !DILocation(line: 3067, column: 48, scope: !7720)
!7725 = !DILocalVariable(name: "arg", arg: 3, scope: !7720, file: !919, line: 3067, type: !982)
!7726 = !DILocation(line: 3067, column: 65, scope: !7720)
!7727 = !DILocation(line: 3069, column: 24, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7720, file: !919, line: 3069, column: 9)
!7729 = !DILocation(line: 3069, column: 10, scope: !7728)
!7730 = !DILocation(line: 3069, column: 9, scope: !7720)
!7731 = !DILocation(line: 3069, column: 55, scope: !7732)
!7732 = !DILexicalBlockFile(scope: !7728, file: !919, discriminator: 1)
!7733 = !DILocation(line: 3069, column: 37, scope: !7732)
!7734 = !DILocation(line: 3070, column: 29, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7728, file: !919, line: 3070, column: 14)
!7736 = !DILocation(line: 3070, column: 15, scope: !7735)
!7737 = !DILocation(line: 3070, column: 14, scope: !7728)
!7738 = !DILocation(line: 3070, column: 60, scope: !7739)
!7739 = !DILexicalBlockFile(scope: !7735, file: !919, discriminator: 1)
!7740 = !DILocation(line: 3070, column: 42, scope: !7739)
!7741 = !DILocation(line: 3071, column: 29, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7735, file: !919, line: 3071, column: 14)
!7743 = !DILocation(line: 3071, column: 15, scope: !7742)
!7744 = !DILocation(line: 3071, column: 14, scope: !7735)
!7745 = !DILocation(line: 3071, column: 68, scope: !7746)
!7746 = !DILexicalBlockFile(scope: !7742, file: !919, discriminator: 1)
!7747 = !DILocation(line: 3071, column: 50, scope: !7746)
!7748 = !DILocation(line: 3072, column: 29, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7742, file: !919, line: 3072, column: 14)
!7750 = !DILocation(line: 3072, column: 15, scope: !7749)
!7751 = !DILocation(line: 3072, column: 14, scope: !7742)
!7752 = !DILocation(line: 3072, column: 61, scope: !7753)
!7753 = !DILexicalBlockFile(scope: !7749, file: !919, discriminator: 1)
!7754 = !DILocation(line: 3072, column: 43, scope: !7753)
!7755 = !DILocation(line: 3074, column: 9, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7720, file: !919, line: 3074, column: 9)
!7757 = !DILocation(line: 3074, column: 27, scope: !7756)
!7758 = !DILocation(line: 3074, column: 9, scope: !7720)
!7759 = !DILocation(line: 3075, column: 58, scope: !7756)
!7760 = !DILocation(line: 3075, column: 29, scope: !7756)
!7761 = !DILocation(line: 3075, column: 27, scope: !7756)
!7762 = !DILocation(line: 3075, column: 9, scope: !7756)
!7763 = !DILocation(line: 3076, column: 5, scope: !7720)
!7764 = !DILocalVariable(name: "optctx", arg: 1, scope: !1883, file: !919, line: 204, type: !989)
!7765 = !DILocation(line: 204, column: 31, scope: !1883)
!7766 = !DILocalVariable(name: "opt", arg: 2, scope: !1883, file: !919, line: 204, type: !982)
!7767 = !DILocation(line: 204, column: 51, scope: !1883)
!7768 = !DILocalVariable(name: "arg", arg: 3, scope: !1883, file: !919, line: 204, type: !982)
!7769 = !DILocation(line: 204, column: 68, scope: !1883)
!7770 = !DILocalVariable(name: "pclass", scope: !1883, file: !919, line: 217, type: !976)
!7771 = !DILocation(line: 217, column: 20, scope: !1883)
!7772 = !DILocation(line: 219, column: 30, scope: !1883)
!7773 = !DILocation(line: 219, column: 49, scope: !1883)
!7774 = !DILocation(line: 219, column: 12, scope: !1883)
!7775 = !DILocation(line: 219, column: 5, scope: !1883)
!7776 = distinct !DISubprogram(name: "opt_qscale", scope: !919, file: !919, line: 3028, type: !1323, isLocal: true, isDefinition: true, scopeLine: 3029, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!7777 = !DILocalVariable(name: "optctx", arg: 1, scope: !7776, file: !919, line: 3028, type: !989)
!7778 = !DILocation(line: 3028, column: 29, scope: !7776)
!7779 = !DILocalVariable(name: "opt", arg: 2, scope: !7776, file: !919, line: 3028, type: !982)
!7780 = !DILocation(line: 3028, column: 49, scope: !7776)
!7781 = !DILocalVariable(name: "arg", arg: 3, scope: !7776, file: !919, line: 3028, type: !982)
!7782 = !DILocation(line: 3028, column: 66, scope: !7776)
!7783 = !DILocalVariable(name: "o", scope: !7776, file: !919, line: 3030, type: !2116)
!7784 = !DILocation(line: 3030, column: 21, scope: !7776)
!7785 = !DILocation(line: 3030, column: 25, scope: !7776)
!7786 = !DILocalVariable(name: "s", scope: !7776, file: !919, line: 3031, type: !1105)
!7787 = !DILocation(line: 3031, column: 11, scope: !7776)
!7788 = !DILocalVariable(name: "ret", scope: !7776, file: !919, line: 3032, type: !998)
!7789 = !DILocation(line: 3032, column: 9, scope: !7776)
!7790 = !DILocation(line: 3033, column: 16, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7776, file: !919, line: 3033, column: 8)
!7792 = !DILocation(line: 3033, column: 9, scope: !7791)
!7793 = !DILocation(line: 3033, column: 8, scope: !7776)
!7794 = !DILocation(line: 3034, column: 9, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7791, file: !919, line: 3033, column: 31)
!7796 = !DILocation(line: 3035, column: 29, scope: !7795)
!7797 = !DILocation(line: 3035, column: 39, scope: !7795)
!7798 = !DILocation(line: 3035, column: 16, scope: !7795)
!7799 = !DILocation(line: 3035, column: 9, scope: !7795)
!7800 = !DILocation(line: 3037, column: 28, scope: !7776)
!7801 = !DILocation(line: 3037, column: 32, scope: !7776)
!7802 = !DILocation(line: 3037, column: 9, scope: !7776)
!7803 = !DILocation(line: 3037, column: 7, scope: !7776)
!7804 = !DILocation(line: 3038, column: 24, scope: !7776)
!7805 = !DILocation(line: 3038, column: 27, scope: !7776)
!7806 = !DILocation(line: 3038, column: 30, scope: !7776)
!7807 = !DILocation(line: 3038, column: 11, scope: !7776)
!7808 = !DILocation(line: 3038, column: 9, scope: !7776)
!7809 = !DILocation(line: 3039, column: 13, scope: !7776)
!7810 = !DILocation(line: 3039, column: 5, scope: !7776)
!7811 = !DILocation(line: 3040, column: 12, scope: !7776)
!7812 = !DILocation(line: 3040, column: 5, scope: !7776)
!7813 = !DILocation(line: 3041, column: 1, scope: !7776)
!7814 = distinct !DISubprogram(name: "opt_profile", scope: !919, file: !919, line: 3043, type: !1323, isLocal: true, isDefinition: true, scopeLine: 3044, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!7815 = !DILocalVariable(name: "optctx", arg: 1, scope: !7814, file: !919, line: 3043, type: !989)
!7816 = !DILocation(line: 3043, column: 30, scope: !7814)
!7817 = !DILocalVariable(name: "opt", arg: 2, scope: !7814, file: !919, line: 3043, type: !982)
!7818 = !DILocation(line: 3043, column: 50, scope: !7814)
!7819 = !DILocalVariable(name: "arg", arg: 3, scope: !7814, file: !919, line: 3043, type: !982)
!7820 = !DILocation(line: 3043, column: 67, scope: !7814)
!7821 = !DILocalVariable(name: "o", scope: !7814, file: !919, line: 3045, type: !2116)
!7822 = !DILocation(line: 3045, column: 21, scope: !7814)
!7823 = !DILocation(line: 3045, column: 25, scope: !7814)
!7824 = !DILocation(line: 3046, column: 16, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7814, file: !919, line: 3046, column: 8)
!7826 = !DILocation(line: 3046, column: 9, scope: !7825)
!7827 = !DILocation(line: 3046, column: 8, scope: !7814)
!7828 = !DILocation(line: 3047, column: 9, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7825, file: !919, line: 3046, column: 32)
!7830 = !DILocation(line: 3048, column: 22, scope: !7829)
!7831 = !DILocation(line: 3048, column: 25, scope: !7829)
!7832 = !DILocation(line: 3048, column: 28, scope: !7829)
!7833 = !DILocation(line: 3048, column: 53, scope: !7829)
!7834 = !DILocation(line: 3048, column: 9, scope: !7829)
!7835 = !DILocation(line: 3049, column: 9, scope: !7829)
!7836 = !DILocation(line: 3051, column: 18, scope: !7814)
!7837 = !DILocation(line: 3051, column: 21, scope: !7814)
!7838 = !DILocation(line: 3051, column: 24, scope: !7814)
!7839 = !DILocation(line: 3051, column: 36, scope: !7814)
!7840 = !DILocation(line: 3051, column: 41, scope: !7814)
!7841 = !DILocation(line: 3051, column: 5, scope: !7814)
!7842 = !DILocation(line: 3052, column: 5, scope: !7814)
!7843 = !DILocation(line: 3053, column: 1, scope: !7814)
!7844 = distinct !DISubprogram(name: "opt_filter_complex", scope: !919, file: !919, line: 3132, type: !1323, isLocal: true, isDefinition: true, scopeLine: 3133, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!7845 = !DILocalVariable(name: "optctx", arg: 1, scope: !7844, file: !919, line: 3132, type: !989)
!7846 = !DILocation(line: 3132, column: 37, scope: !7844)
!7847 = !DILocalVariable(name: "opt", arg: 2, scope: !7844, file: !919, line: 3132, type: !982)
!7848 = !DILocation(line: 3132, column: 57, scope: !7844)
!7849 = !DILocalVariable(name: "arg", arg: 3, scope: !7844, file: !919, line: 3132, type: !982)
!7850 = !DILocation(line: 3132, column: 74, scope: !7844)
!7851 = !DILocation(line: 3134, column: 31, scope: !7844)
!7852 = !DILocation(line: 3134, column: 86, scope: !7844)
!7853 = !DILocation(line: 3134, column: 102, scope: !7844)
!7854 = !DILocation(line: 3134, column: 20, scope: !7844)
!7855 = !DILocation(line: 3134, column: 18, scope: !7844)
!7856 = !DILocation(line: 3135, column: 47, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7844, file: !919, line: 3135, column: 9)
!7858 = !DILocation(line: 3135, column: 24, scope: !7857)
!7859 = !DILocation(line: 3135, column: 40, scope: !7857)
!7860 = !DILocation(line: 3135, column: 11, scope: !7857)
!7861 = !DILocation(line: 3135, column: 45, scope: !7857)
!7862 = !DILocation(line: 3135, column: 9, scope: !7844)
!7863 = !DILocation(line: 3136, column: 9, scope: !7857)
!7864 = !DILocation(line: 3137, column: 48, scope: !7844)
!7865 = !DILocation(line: 3137, column: 64, scope: !7844)
!7866 = !DILocation(line: 3137, column: 18, scope: !7844)
!7867 = !DILocation(line: 3137, column: 34, scope: !7844)
!7868 = !DILocation(line: 3137, column: 5, scope: !7844)
!7869 = !DILocation(line: 3137, column: 40, scope: !7844)
!7870 = !DILocation(line: 3137, column: 46, scope: !7844)
!7871 = !DILocation(line: 3138, column: 63, scope: !7844)
!7872 = !DILocation(line: 3138, column: 53, scope: !7844)
!7873 = !DILocation(line: 3138, column: 18, scope: !7844)
!7874 = !DILocation(line: 3138, column: 34, scope: !7844)
!7875 = !DILocation(line: 3138, column: 5, scope: !7844)
!7876 = !DILocation(line: 3138, column: 40, scope: !7844)
!7877 = !DILocation(line: 3138, column: 51, scope: !7844)
!7878 = !DILocation(line: 3139, column: 23, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7844, file: !919, line: 3139, column: 9)
!7880 = !DILocation(line: 3139, column: 39, scope: !7879)
!7881 = !DILocation(line: 3139, column: 10, scope: !7879)
!7882 = !DILocation(line: 3139, column: 45, scope: !7879)
!7883 = !DILocation(line: 3139, column: 9, scope: !7844)
!7884 = !DILocation(line: 3140, column: 9, scope: !7879)
!7885 = !DILocation(line: 3142, column: 40, scope: !7844)
!7886 = !DILocation(line: 3144, column: 5, scope: !7844)
!7887 = !DILocation(line: 3145, column: 1, scope: !7844)
!7888 = distinct !DISubprogram(name: "opt_filter_complex_script", scope: !919, file: !919, line: 3147, type: !1323, isLocal: true, isDefinition: true, scopeLine: 3148, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!7889 = !DILocalVariable(name: "optctx", arg: 1, scope: !7888, file: !919, line: 3147, type: !989)
!7890 = !DILocation(line: 3147, column: 44, scope: !7888)
!7891 = !DILocalVariable(name: "opt", arg: 2, scope: !7888, file: !919, line: 3147, type: !982)
!7892 = !DILocation(line: 3147, column: 64, scope: !7888)
!7893 = !DILocalVariable(name: "arg", arg: 3, scope: !7888, file: !919, line: 3147, type: !982)
!7894 = !DILocation(line: 3147, column: 81, scope: !7888)
!7895 = !DILocalVariable(name: "graph_desc", scope: !7888, file: !919, line: 3149, type: !1179)
!7896 = !DILocation(line: 3149, column: 14, scope: !7888)
!7897 = !DILocation(line: 3149, column: 37, scope: !7888)
!7898 = !DILocation(line: 3149, column: 27, scope: !7888)
!7899 = !DILocation(line: 3150, column: 10, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7888, file: !919, line: 3150, column: 9)
!7901 = !DILocation(line: 3150, column: 9, scope: !7888)
!7902 = !DILocation(line: 3151, column: 9, scope: !7900)
!7903 = !DILocation(line: 3153, column: 31, scope: !7888)
!7904 = !DILocation(line: 3153, column: 86, scope: !7888)
!7905 = !DILocation(line: 3153, column: 102, scope: !7888)
!7906 = !DILocation(line: 3153, column: 20, scope: !7888)
!7907 = !DILocation(line: 3153, column: 18, scope: !7888)
!7908 = !DILocation(line: 3154, column: 47, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7888, file: !919, line: 3154, column: 9)
!7910 = !DILocation(line: 3154, column: 24, scope: !7909)
!7911 = !DILocation(line: 3154, column: 40, scope: !7909)
!7912 = !DILocation(line: 3154, column: 11, scope: !7909)
!7913 = !DILocation(line: 3154, column: 45, scope: !7909)
!7914 = !DILocation(line: 3154, column: 9, scope: !7888)
!7915 = !DILocation(line: 3155, column: 9, scope: !7909)
!7916 = !DILocation(line: 3156, column: 48, scope: !7888)
!7917 = !DILocation(line: 3156, column: 64, scope: !7888)
!7918 = !DILocation(line: 3156, column: 18, scope: !7888)
!7919 = !DILocation(line: 3156, column: 34, scope: !7888)
!7920 = !DILocation(line: 3156, column: 5, scope: !7888)
!7921 = !DILocation(line: 3156, column: 40, scope: !7888)
!7922 = !DILocation(line: 3156, column: 46, scope: !7888)
!7923 = !DILocation(line: 3157, column: 53, scope: !7888)
!7924 = !DILocation(line: 3157, column: 18, scope: !7888)
!7925 = !DILocation(line: 3157, column: 34, scope: !7888)
!7926 = !DILocation(line: 3157, column: 5, scope: !7888)
!7927 = !DILocation(line: 3157, column: 40, scope: !7888)
!7928 = !DILocation(line: 3157, column: 51, scope: !7888)
!7929 = !DILocation(line: 3159, column: 40, scope: !7888)
!7930 = !DILocation(line: 3161, column: 5, scope: !7888)
!7931 = !DILocation(line: 3162, column: 1, scope: !7888)
!7932 = distinct !DISubprogram(name: "opt_attach", scope: !919, file: !919, line: 385, type: !1323, isLocal: true, isDefinition: true, scopeLine: 386, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!7933 = !DILocalVariable(name: "optctx", arg: 1, scope: !7932, file: !919, line: 385, type: !989)
!7934 = !DILocation(line: 385, column: 29, scope: !7932)
!7935 = !DILocalVariable(name: "opt", arg: 2, scope: !7932, file: !919, line: 385, type: !982)
!7936 = !DILocation(line: 385, column: 49, scope: !7932)
!7937 = !DILocalVariable(name: "arg", arg: 3, scope: !7932, file: !919, line: 385, type: !982)
!7938 = !DILocation(line: 385, column: 66, scope: !7932)
!7939 = !DILocalVariable(name: "o", scope: !7932, file: !919, line: 387, type: !2116)
!7940 = !DILocation(line: 387, column: 21, scope: !7932)
!7941 = !DILocation(line: 387, column: 25, scope: !7932)
!7942 = !DILocation(line: 388, column: 33, scope: !7932)
!7943 = !DILocation(line: 388, column: 36, scope: !7932)
!7944 = !DILocation(line: 388, column: 75, scope: !7932)
!7945 = !DILocation(line: 388, column: 78, scope: !7932)
!7946 = !DILocation(line: 388, column: 94, scope: !7932)
!7947 = !DILocation(line: 388, column: 97, scope: !7932)
!7948 = !DILocation(line: 388, column: 112, scope: !7932)
!7949 = !DILocation(line: 388, column: 22, scope: !7932)
!7950 = !DILocation(line: 388, column: 5, scope: !7932)
!7951 = !DILocation(line: 388, column: 8, scope: !7932)
!7952 = !DILocation(line: 388, column: 20, scope: !7932)
!7953 = !DILocation(line: 389, column: 45, scope: !7932)
!7954 = !DILocation(line: 389, column: 20, scope: !7932)
!7955 = !DILocation(line: 389, column: 23, scope: !7932)
!7956 = !DILocation(line: 389, column: 38, scope: !7932)
!7957 = !DILocation(line: 389, column: 5, scope: !7932)
!7958 = !DILocation(line: 389, column: 8, scope: !7932)
!7959 = !DILocation(line: 389, column: 43, scope: !7932)
!7960 = !DILocation(line: 390, column: 5, scope: !7932)
!7961 = distinct !DISubprogram(name: "opt_video_frames", scope: !919, file: !919, line: 2917, type: !1323, isLocal: true, isDefinition: true, scopeLine: 2918, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!7962 = !DILocalVariable(name: "optctx", arg: 1, scope: !7961, file: !919, line: 2917, type: !989)
!7963 = !DILocation(line: 2917, column: 35, scope: !7961)
!7964 = !DILocalVariable(name: "opt", arg: 2, scope: !7961, file: !919, line: 2917, type: !982)
!7965 = !DILocation(line: 2917, column: 55, scope: !7961)
!7966 = !DILocalVariable(name: "arg", arg: 3, scope: !7961, file: !919, line: 2917, type: !982)
!7967 = !DILocation(line: 2917, column: 72, scope: !7961)
!7968 = !DILocalVariable(name: "o", scope: !7961, file: !919, line: 2919, type: !2116)
!7969 = !DILocation(line: 2919, column: 21, scope: !7961)
!7970 = !DILocation(line: 2919, column: 25, scope: !7961)
!7971 = !DILocation(line: 2920, column: 25, scope: !7961)
!7972 = !DILocation(line: 2920, column: 40, scope: !7961)
!7973 = !DILocation(line: 2920, column: 12, scope: !7961)
!7974 = !DILocation(line: 2920, column: 5, scope: !7961)
!7975 = distinct !DISubprogram(name: "opt_video_codec", scope: !919, file: !919, line: 249, type: !1323, isLocal: true, isDefinition: true, scopeLine: 250, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!7976 = !DILocalVariable(name: "optctx", arg: 1, scope: !7975, file: !919, line: 249, type: !989)
!7977 = !DILocation(line: 249, column: 34, scope: !7975)
!7978 = !DILocalVariable(name: "opt", arg: 2, scope: !7975, file: !919, line: 249, type: !982)
!7979 = !DILocation(line: 249, column: 54, scope: !7975)
!7980 = !DILocalVariable(name: "arg", arg: 3, scope: !7975, file: !919, line: 249, type: !982)
!7981 = !DILocation(line: 249, column: 71, scope: !7975)
!7982 = !DILocalVariable(name: "o", scope: !7975, file: !919, line: 251, type: !2116)
!7983 = !DILocation(line: 251, column: 21, scope: !7975)
!7984 = !DILocation(line: 251, column: 25, scope: !7975)
!7985 = !DILocation(line: 252, column: 25, scope: !7975)
!7986 = !DILocation(line: 252, column: 39, scope: !7975)
!7987 = !DILocation(line: 252, column: 12, scope: !7975)
!7988 = !DILocation(line: 252, column: 5, scope: !7975)
!7989 = distinct !DISubprogram(name: "opt_sameq", scope: !919, file: !919, line: 222, type: !1323, isLocal: true, isDefinition: true, scopeLine: 223, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!7990 = !DILocalVariable(name: "optctx", arg: 1, scope: !7989, file: !919, line: 222, type: !989)
!7991 = !DILocation(line: 222, column: 28, scope: !7989)
!7992 = !DILocalVariable(name: "opt", arg: 2, scope: !7989, file: !919, line: 222, type: !982)
!7993 = !DILocation(line: 222, column: 48, scope: !7989)
!7994 = !DILocalVariable(name: "arg", arg: 3, scope: !7989, file: !919, line: 222, type: !982)
!7995 = !DILocation(line: 222, column: 65, scope: !7989)
!7996 = !DILocation(line: 227, column: 12, scope: !7989)
!7997 = !DILocation(line: 227, column: 17, scope: !7989)
!7998 = !DILocation(line: 224, column: 5, scope: !7989)
!7999 = !DILocation(line: 228, column: 5, scope: !7989)
!8000 = distinct !DISubprogram(name: "opt_timecode", scope: !919, file: !919, line: 3079, type: !1323, isLocal: true, isDefinition: true, scopeLine: 3080, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8001 = !DILocalVariable(name: "optctx", arg: 1, scope: !8000, file: !919, line: 3079, type: !989)
!8002 = !DILocation(line: 3079, column: 31, scope: !8000)
!8003 = !DILocalVariable(name: "opt", arg: 2, scope: !8000, file: !919, line: 3079, type: !982)
!8004 = !DILocation(line: 3079, column: 51, scope: !8000)
!8005 = !DILocalVariable(name: "arg", arg: 3, scope: !8000, file: !919, line: 3079, type: !982)
!8006 = !DILocation(line: 3079, column: 68, scope: !8000)
!8007 = !DILocalVariable(name: "o", scope: !8000, file: !919, line: 3081, type: !2116)
!8008 = !DILocation(line: 3081, column: 21, scope: !8000)
!8009 = !DILocation(line: 3081, column: 25, scope: !8000)
!8010 = !DILocalVariable(name: "tcr", scope: !8000, file: !919, line: 3082, type: !1105)
!8011 = !DILocation(line: 3082, column: 11, scope: !8000)
!8012 = !DILocation(line: 3082, column: 44, scope: !8000)
!8013 = !DILocation(line: 3082, column: 17, scope: !8000)
!8014 = !DILocalVariable(name: "ret", scope: !8000, file: !919, line: 3083, type: !998)
!8015 = !DILocation(line: 3083, column: 9, scope: !8000)
!8016 = !DILocation(line: 3083, column: 28, scope: !8000)
!8017 = !DILocation(line: 3083, column: 45, scope: !8000)
!8018 = !DILocation(line: 3083, column: 15, scope: !8000)
!8019 = !DILocation(line: 3084, column: 9, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8000, file: !919, line: 3084, column: 9)
!8021 = !DILocation(line: 3084, column: 13, scope: !8020)
!8022 = !DILocation(line: 3084, column: 9, scope: !8000)
!8023 = !DILocation(line: 3085, column: 28, scope: !8020)
!8024 = !DILocation(line: 3085, column: 31, scope: !8020)
!8025 = !DILocation(line: 3085, column: 34, scope: !8020)
!8026 = !DILocation(line: 3085, column: 62, scope: !8020)
!8027 = !DILocation(line: 3085, column: 15, scope: !8020)
!8028 = !DILocation(line: 3085, column: 13, scope: !8020)
!8029 = !DILocation(line: 3085, column: 9, scope: !8020)
!8030 = !DILocation(line: 3086, column: 13, scope: !8000)
!8031 = !DILocation(line: 3086, column: 5, scope: !8000)
!8032 = !DILocation(line: 3087, column: 12, scope: !8000)
!8033 = !DILocation(line: 3087, column: 5, scope: !8000)
!8034 = distinct !DISubprogram(name: "opt_vstats", scope: !919, file: !919, line: 2901, type: !1323, isLocal: true, isDefinition: true, scopeLine: 2902, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8035 = !DILocalVariable(name: "optctx", arg: 1, scope: !8034, file: !919, line: 2901, type: !989)
!8036 = !DILocation(line: 2901, column: 29, scope: !8034)
!8037 = !DILocalVariable(name: "opt", arg: 2, scope: !8034, file: !919, line: 2901, type: !982)
!8038 = !DILocation(line: 2901, column: 49, scope: !8034)
!8039 = !DILocalVariable(name: "arg", arg: 3, scope: !8034, file: !919, line: 2901, type: !982)
!8040 = !DILocation(line: 2901, column: 66, scope: !8034)
!8041 = !DILocalVariable(name: "filename", scope: !8034, file: !919, line: 2903, type: !8042)
!8042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 320, align: 8, elements: !8043)
!8043 = !{!8044}
!8044 = !DISubrange(count: 40)
!8045 = !DILocation(line: 2903, column: 10, scope: !8034)
!8046 = !DILocalVariable(name: "today2", scope: !8034, file: !919, line: 2904, type: !1345)
!8047 = !DILocation(line: 2904, column: 12, scope: !8034)
!8048 = !DILocation(line: 2904, column: 21, scope: !8034)
!8049 = !DILocalVariable(name: "today", scope: !8034, file: !919, line: 2905, type: !8050)
!8050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7336, size: 64, align: 64)
!8051 = !DILocation(line: 2905, column: 16, scope: !8034)
!8052 = !DILocation(line: 2905, column: 24, scope: !8034)
!8053 = !DILocation(line: 2907, column: 10, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8034, file: !919, line: 2907, column: 9)
!8055 = !DILocation(line: 2907, column: 9, scope: !8034)
!8056 = !DILocation(line: 2908, column: 82, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8054, file: !919, line: 2907, column: 17)
!8058 = !DILocation(line: 2908, column: 81, scope: !8057)
!8059 = !DILocation(line: 2908, column: 60, scope: !8060)
!8060 = !DILexicalBlockFile(scope: !8057, file: !919, discriminator: 1)
!8061 = !DILocation(line: 2908, column: 9, scope: !8062)
!8062 = !DILexicalBlockFile(scope: !8057, file: !919, discriminator: 2)
!8063 = !DILocation(line: 2909, column: 9, scope: !8057)
!8064 = !DILocation(line: 2912, column: 14, scope: !8034)
!8065 = !DILocation(line: 2912, column: 69, scope: !8034)
!8066 = !DILocation(line: 2912, column: 76, scope: !8034)
!8067 = !DILocation(line: 2912, column: 85, scope: !8034)
!8068 = !DILocation(line: 2912, column: 92, scope: !8034)
!8069 = !DILocation(line: 2913, column: 14, scope: !8034)
!8070 = !DILocation(line: 2913, column: 21, scope: !8034)
!8071 = !DILocation(line: 2912, column: 5, scope: !8034)
!8072 = !DILocation(line: 2914, column: 33, scope: !8034)
!8073 = !DILocation(line: 2914, column: 38, scope: !8034)
!8074 = !DILocation(line: 2914, column: 12, scope: !8034)
!8075 = !DILocation(line: 2914, column: 5, scope: !8034)
!8076 = distinct !DISubprogram(name: "opt_vstats_file", scope: !919, file: !919, line: 2894, type: !1323, isLocal: true, isDefinition: true, scopeLine: 2895, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8077 = !DILocalVariable(name: "optctx", arg: 1, scope: !8076, file: !919, line: 2894, type: !989)
!8078 = !DILocation(line: 2894, column: 34, scope: !8076)
!8079 = !DILocalVariable(name: "opt", arg: 2, scope: !8076, file: !919, line: 2894, type: !982)
!8080 = !DILocation(line: 2894, column: 54, scope: !8076)
!8081 = !DILocalVariable(name: "arg", arg: 3, scope: !8076, file: !919, line: 2894, type: !982)
!8082 = !DILocation(line: 2894, column: 71, scope: !8076)
!8083 = !DILocation(line: 2896, column: 14, scope: !8076)
!8084 = !DILocation(line: 2896, column: 5, scope: !8076)
!8085 = !DILocation(line: 2897, column: 34, scope: !8076)
!8086 = !DILocation(line: 2897, column: 23, scope: !8076)
!8087 = !DILocation(line: 2897, column: 21, scope: !8076)
!8088 = !DILocation(line: 2898, column: 5, scope: !8076)
!8089 = distinct !DISubprogram(name: "opt_video_filters", scope: !919, file: !919, line: 3055, type: !1323, isLocal: true, isDefinition: true, scopeLine: 3056, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8090 = !DILocalVariable(name: "optctx", arg: 1, scope: !8089, file: !919, line: 3055, type: !989)
!8091 = !DILocation(line: 3055, column: 36, scope: !8089)
!8092 = !DILocalVariable(name: "opt", arg: 2, scope: !8089, file: !919, line: 3055, type: !982)
!8093 = !DILocation(line: 3055, column: 56, scope: !8089)
!8094 = !DILocalVariable(name: "arg", arg: 3, scope: !8089, file: !919, line: 3055, type: !982)
!8095 = !DILocation(line: 3055, column: 73, scope: !8089)
!8096 = !DILocalVariable(name: "o", scope: !8089, file: !919, line: 3057, type: !2116)
!8097 = !DILocation(line: 3057, column: 21, scope: !8089)
!8098 = !DILocation(line: 3057, column: 25, scope: !8089)
!8099 = !DILocation(line: 3058, column: 25, scope: !8089)
!8100 = !DILocation(line: 3058, column: 40, scope: !8089)
!8101 = !DILocation(line: 3058, column: 12, scope: !8089)
!8102 = !DILocation(line: 3058, column: 5, scope: !8089)
!8103 = distinct !DISubprogram(name: "opt_old2new", scope: !919, file: !919, line: 3003, type: !1323, isLocal: true, isDefinition: true, scopeLine: 3004, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8104 = !DILocalVariable(name: "optctx", arg: 1, scope: !8103, file: !919, line: 3003, type: !989)
!8105 = !DILocation(line: 3003, column: 30, scope: !8103)
!8106 = !DILocalVariable(name: "opt", arg: 2, scope: !8103, file: !919, line: 3003, type: !982)
!8107 = !DILocation(line: 3003, column: 50, scope: !8103)
!8108 = !DILocalVariable(name: "arg", arg: 3, scope: !8103, file: !919, line: 3003, type: !982)
!8109 = !DILocation(line: 3003, column: 67, scope: !8103)
!8110 = !DILocalVariable(name: "o", scope: !8103, file: !919, line: 3005, type: !2116)
!8111 = !DILocation(line: 3005, column: 21, scope: !8103)
!8112 = !DILocation(line: 3005, column: 25, scope: !8103)
!8113 = !DILocalVariable(name: "s", scope: !8103, file: !919, line: 3006, type: !1105)
!8114 = !DILocation(line: 3006, column: 11, scope: !8103)
!8115 = !DILocation(line: 3006, column: 36, scope: !8103)
!8116 = !DILocation(line: 3006, column: 40, scope: !8103)
!8117 = !DILocation(line: 3006, column: 46, scope: !8103)
!8118 = !DILocation(line: 3006, column: 45, scope: !8103)
!8119 = !DILocation(line: 3006, column: 15, scope: !8103)
!8120 = !DILocalVariable(name: "ret", scope: !8103, file: !919, line: 3007, type: !998)
!8121 = !DILocation(line: 3007, column: 9, scope: !8103)
!8122 = !DILocation(line: 3007, column: 28, scope: !8103)
!8123 = !DILocation(line: 3007, column: 31, scope: !8103)
!8124 = !DILocation(line: 3007, column: 34, scope: !8103)
!8125 = !DILocation(line: 3007, column: 15, scope: !8103)
!8126 = !DILocation(line: 3008, column: 13, scope: !8103)
!8127 = !DILocation(line: 3008, column: 5, scope: !8103)
!8128 = !DILocation(line: 3009, column: 12, scope: !8103)
!8129 = !DILocation(line: 3009, column: 5, scope: !8103)
!8130 = distinct !DISubprogram(name: "opt_streamid", scope: !919, file: !919, line: 1989, type: !1323, isLocal: true, isDefinition: true, scopeLine: 1990, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8131 = !DILocalVariable(name: "optctx", arg: 1, scope: !8130, file: !919, line: 1989, type: !989)
!8132 = !DILocation(line: 1989, column: 31, scope: !8130)
!8133 = !DILocalVariable(name: "opt", arg: 2, scope: !8130, file: !919, line: 1989, type: !982)
!8134 = !DILocation(line: 1989, column: 51, scope: !8130)
!8135 = !DILocalVariable(name: "arg", arg: 3, scope: !8130, file: !919, line: 1989, type: !982)
!8136 = !DILocation(line: 1989, column: 68, scope: !8130)
!8137 = !DILocalVariable(name: "o", scope: !8130, file: !919, line: 1991, type: !2116)
!8138 = !DILocation(line: 1991, column: 21, scope: !8130)
!8139 = !DILocation(line: 1991, column: 25, scope: !8130)
!8140 = !DILocalVariable(name: "idx", scope: !8130, file: !919, line: 1992, type: !998)
!8141 = !DILocation(line: 1992, column: 9, scope: !8130)
!8142 = !DILocalVariable(name: "p", scope: !8130, file: !919, line: 1993, type: !1105)
!8143 = !DILocation(line: 1993, column: 11, scope: !8130)
!8144 = !DILocalVariable(name: "idx_str", scope: !8130, file: !919, line: 1994, type: !8145)
!8145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 128, align: 8, elements: !8146)
!8146 = !{!8147}
!8147 = !DISubrange(count: 16)
!8148 = !DILocation(line: 1994, column: 10, scope: !8130)
!8149 = !DILocation(line: 1996, column: 16, scope: !8130)
!8150 = !DILocation(line: 1996, column: 25, scope: !8130)
!8151 = !DILocation(line: 1996, column: 5, scope: !8130)
!8152 = !DILocation(line: 1997, column: 16, scope: !8130)
!8153 = !DILocation(line: 1997, column: 9, scope: !8130)
!8154 = !DILocation(line: 1997, column: 7, scope: !8130)
!8155 = !DILocation(line: 1998, column: 10, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8130, file: !919, line: 1998, column: 9)
!8157 = !DILocation(line: 1998, column: 9, scope: !8130)
!8158 = !DILocation(line: 2001, column: 16, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8156, file: !919, line: 1998, column: 13)
!8160 = !DILocation(line: 2001, column: 21, scope: !8159)
!8161 = !DILocation(line: 1999, column: 9, scope: !8159)
!8162 = !DILocation(line: 2002, column: 9, scope: !8159)
!8163 = !DILocation(line: 2004, column: 7, scope: !8130)
!8164 = !DILocation(line: 2004, column: 10, scope: !8130)
!8165 = !DILocation(line: 2005, column: 31, scope: !8130)
!8166 = !DILocation(line: 2005, column: 36, scope: !8130)
!8167 = !DILocation(line: 2005, column: 11, scope: !8130)
!8168 = !DILocation(line: 2005, column: 9, scope: !8130)
!8169 = !DILocation(line: 2006, column: 34, scope: !8130)
!8170 = !DILocation(line: 2006, column: 37, scope: !8130)
!8171 = !DILocation(line: 2006, column: 78, scope: !8130)
!8172 = !DILocation(line: 2006, column: 81, scope: !8130)
!8173 = !DILocation(line: 2006, column: 98, scope: !8130)
!8174 = !DILocation(line: 2006, column: 101, scope: !8130)
!8175 = !DILocation(line: 2006, column: 23, scope: !8130)
!8176 = !DILocation(line: 2006, column: 5, scope: !8130)
!8177 = !DILocation(line: 2006, column: 8, scope: !8130)
!8178 = !DILocation(line: 2006, column: 21, scope: !8130)
!8179 = !DILocation(line: 2007, column: 48, scope: !8130)
!8180 = !DILocation(line: 2007, column: 53, scope: !8130)
!8181 = !DILocation(line: 2007, column: 28, scope: !8130)
!8182 = !DILocation(line: 2007, column: 21, scope: !8130)
!8183 = !DILocation(line: 2007, column: 5, scope: !8130)
!8184 = !DILocation(line: 2007, column: 8, scope: !8130)
!8185 = !DILocation(line: 2007, column: 26, scope: !8130)
!8186 = !DILocation(line: 2008, column: 5, scope: !8130)
!8187 = distinct !DISubprogram(name: "opt_bitrate", scope: !919, file: !919, line: 3012, type: !1323, isLocal: true, isDefinition: true, scopeLine: 3013, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8188 = !DILocalVariable(name: "optctx", arg: 1, scope: !8187, file: !919, line: 3012, type: !989)
!8189 = !DILocation(line: 3012, column: 30, scope: !8187)
!8190 = !DILocalVariable(name: "opt", arg: 2, scope: !8187, file: !919, line: 3012, type: !982)
!8191 = !DILocation(line: 3012, column: 50, scope: !8187)
!8192 = !DILocalVariable(name: "arg", arg: 3, scope: !8187, file: !919, line: 3012, type: !982)
!8193 = !DILocation(line: 3012, column: 67, scope: !8187)
!8194 = !DILocalVariable(name: "o", scope: !8187, file: !919, line: 3014, type: !2116)
!8195 = !DILocation(line: 3014, column: 21, scope: !8187)
!8196 = !DILocation(line: 3014, column: 25, scope: !8187)
!8197 = !DILocation(line: 3016, column: 16, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8187, file: !919, line: 3016, column: 8)
!8199 = !DILocation(line: 3016, column: 9, scope: !8198)
!8200 = !DILocation(line: 3016, column: 8, scope: !8187)
!8201 = !DILocation(line: 3017, column: 22, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8198, file: !919, line: 3016, column: 27)
!8203 = !DILocation(line: 3017, column: 25, scope: !8202)
!8204 = !DILocation(line: 3017, column: 28, scope: !8202)
!8205 = !DILocation(line: 3017, column: 47, scope: !8202)
!8206 = !DILocation(line: 3017, column: 9, scope: !8202)
!8207 = !DILocation(line: 3018, column: 9, scope: !8202)
!8208 = !DILocation(line: 3019, column: 23, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8198, file: !919, line: 3019, column: 15)
!8210 = !DILocation(line: 3019, column: 16, scope: !8209)
!8211 = !DILocation(line: 3019, column: 15, scope: !8198)
!8212 = !DILocation(line: 3020, column: 9, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8209, file: !919, line: 3019, column: 33)
!8214 = !DILocation(line: 3021, column: 22, scope: !8213)
!8215 = !DILocation(line: 3021, column: 25, scope: !8213)
!8216 = !DILocation(line: 3021, column: 28, scope: !8213)
!8217 = !DILocation(line: 3021, column: 47, scope: !8213)
!8218 = !DILocation(line: 3021, column: 9, scope: !8213)
!8219 = !DILocation(line: 3022, column: 9, scope: !8213)
!8220 = !DILocation(line: 3024, column: 18, scope: !8187)
!8221 = !DILocation(line: 3024, column: 21, scope: !8187)
!8222 = !DILocation(line: 3024, column: 24, scope: !8187)
!8223 = !DILocation(line: 3024, column: 36, scope: !8187)
!8224 = !DILocation(line: 3024, column: 41, scope: !8187)
!8225 = !DILocation(line: 3024, column: 5, scope: !8187)
!8226 = !DILocation(line: 3025, column: 5, scope: !8187)
!8227 = !DILocation(line: 3026, column: 1, scope: !8187)
!8228 = distinct !DISubprogram(name: "show_hwaccels", scope: !919, file: !919, line: 171, type: !1323, isLocal: true, isDefinition: true, scopeLine: 172, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8229 = !DILocalVariable(name: "optctx", arg: 1, scope: !8228, file: !919, line: 171, type: !989)
!8230 = !DILocation(line: 171, column: 32, scope: !8228)
!8231 = !DILocalVariable(name: "opt", arg: 2, scope: !8228, file: !919, line: 171, type: !982)
!8232 = !DILocation(line: 171, column: 52, scope: !8228)
!8233 = !DILocalVariable(name: "arg", arg: 3, scope: !8228, file: !919, line: 171, type: !982)
!8234 = !DILocation(line: 171, column: 69, scope: !8228)
!8235 = !DILocalVariable(name: "type", scope: !8228, file: !919, line: 173, type: !923)
!8236 = !DILocation(line: 173, column: 25, scope: !8228)
!8237 = !DILocalVariable(name: "i", scope: !8228, file: !919, line: 174, type: !998)
!8238 = !DILocation(line: 174, column: 9, scope: !8228)
!8239 = !DILocation(line: 176, column: 5, scope: !8228)
!8240 = !DILocation(line: 177, column: 5, scope: !8228)
!8241 = !DILocation(line: 177, column: 46, scope: !8242)
!8242 = !DILexicalBlockFile(scope: !8228, file: !919, discriminator: 1)
!8243 = !DILocation(line: 177, column: 20, scope: !8242)
!8244 = !DILocation(line: 177, column: 18, scope: !8242)
!8245 = !DILocation(line: 177, column: 53, scope: !8242)
!8246 = !DILocation(line: 177, column: 5, scope: !8242)
!8247 = !DILocation(line: 179, column: 50, scope: !8228)
!8248 = !DILocation(line: 179, column: 24, scope: !8228)
!8249 = !DILocation(line: 179, column: 9, scope: !8242)
!8250 = !DILocation(line: 177, column: 5, scope: !8251)
!8251 = !DILexicalBlockFile(scope: !8228, file: !919, discriminator: 2)
!8252 = distinct !{!8252, !8240}
!8253 = !DILocation(line: 180, column: 12, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8228, file: !919, line: 180, column: 5)
!8255 = !DILocation(line: 180, column: 10, scope: !8254)
!8256 = !DILocation(line: 180, column: 26, scope: !8257)
!8257 = !DILexicalBlockFile(scope: !8258, file: !919, discriminator: 1)
!8258 = distinct !DILexicalBlock(scope: !8254, file: !919, line: 180, column: 5)
!8259 = !DILocation(line: 180, column: 17, scope: !8257)
!8260 = !DILocation(line: 180, column: 29, scope: !8257)
!8261 = !DILocation(line: 180, column: 5, scope: !8257)
!8262 = !DILocation(line: 181, column: 33, scope: !8258)
!8263 = !DILocation(line: 181, column: 24, scope: !8258)
!8264 = !DILocation(line: 181, column: 36, scope: !8258)
!8265 = !DILocation(line: 181, column: 9, scope: !8258)
!8266 = !DILocation(line: 180, column: 36, scope: !8267)
!8267 = !DILexicalBlockFile(scope: !8258, file: !919, discriminator: 2)
!8268 = !DILocation(line: 180, column: 5, scope: !8267)
!8269 = distinct !{!8269, !8270}
!8270 = !DILocation(line: 180, column: 5, scope: !8228)
!8271 = !DILocation(line: 182, column: 5, scope: !8228)
!8272 = !DILocation(line: 183, column: 5, scope: !8228)
!8273 = distinct !DISubprogram(name: "opt_audio_frames", scope: !919, file: !919, line: 2923, type: !1323, isLocal: true, isDefinition: true, scopeLine: 2924, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8274 = !DILocalVariable(name: "optctx", arg: 1, scope: !8273, file: !919, line: 2923, type: !989)
!8275 = !DILocation(line: 2923, column: 35, scope: !8273)
!8276 = !DILocalVariable(name: "opt", arg: 2, scope: !8273, file: !919, line: 2923, type: !982)
!8277 = !DILocation(line: 2923, column: 55, scope: !8273)
!8278 = !DILocalVariable(name: "arg", arg: 3, scope: !8273, file: !919, line: 2923, type: !982)
!8279 = !DILocation(line: 2923, column: 72, scope: !8273)
!8280 = !DILocalVariable(name: "o", scope: !8273, file: !919, line: 2925, type: !2116)
!8281 = !DILocation(line: 2925, column: 21, scope: !8273)
!8282 = !DILocation(line: 2925, column: 25, scope: !8273)
!8283 = !DILocation(line: 2926, column: 25, scope: !8273)
!8284 = !DILocation(line: 2926, column: 40, scope: !8273)
!8285 = !DILocation(line: 2926, column: 12, scope: !8273)
!8286 = !DILocation(line: 2926, column: 5, scope: !8273)
!8287 = distinct !DISubprogram(name: "opt_audio_qscale", scope: !919, file: !919, line: 3126, type: !1323, isLocal: true, isDefinition: true, scopeLine: 3127, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8288 = !DILocalVariable(name: "optctx", arg: 1, scope: !8287, file: !919, line: 3126, type: !989)
!8289 = !DILocation(line: 3126, column: 35, scope: !8287)
!8290 = !DILocalVariable(name: "opt", arg: 2, scope: !8287, file: !919, line: 3126, type: !982)
!8291 = !DILocation(line: 3126, column: 55, scope: !8287)
!8292 = !DILocalVariable(name: "arg", arg: 3, scope: !8287, file: !919, line: 3126, type: !982)
!8293 = !DILocation(line: 3126, column: 72, scope: !8287)
!8294 = !DILocalVariable(name: "o", scope: !8287, file: !919, line: 3128, type: !2116)
!8295 = !DILocation(line: 3128, column: 21, scope: !8287)
!8296 = !DILocation(line: 3128, column: 25, scope: !8287)
!8297 = !DILocation(line: 3129, column: 25, scope: !8287)
!8298 = !DILocation(line: 3129, column: 35, scope: !8287)
!8299 = !DILocation(line: 3129, column: 12, scope: !8287)
!8300 = !DILocation(line: 3129, column: 5, scope: !8287)
!8301 = distinct !DISubprogram(name: "opt_audio_codec", scope: !919, file: !919, line: 243, type: !1323, isLocal: true, isDefinition: true, scopeLine: 244, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8302 = !DILocalVariable(name: "optctx", arg: 1, scope: !8301, file: !919, line: 243, type: !989)
!8303 = !DILocation(line: 243, column: 34, scope: !8301)
!8304 = !DILocalVariable(name: "opt", arg: 2, scope: !8301, file: !919, line: 243, type: !982)
!8305 = !DILocation(line: 243, column: 54, scope: !8301)
!8306 = !DILocalVariable(name: "arg", arg: 3, scope: !8301, file: !919, line: 243, type: !982)
!8307 = !DILocation(line: 243, column: 71, scope: !8301)
!8308 = !DILocalVariable(name: "o", scope: !8301, file: !919, line: 245, type: !2116)
!8309 = !DILocation(line: 245, column: 21, scope: !8301)
!8310 = !DILocation(line: 245, column: 25, scope: !8301)
!8311 = !DILocation(line: 246, column: 25, scope: !8301)
!8312 = !DILocation(line: 246, column: 39, scope: !8301)
!8313 = !DILocation(line: 246, column: 12, scope: !8301)
!8314 = !DILocation(line: 246, column: 5, scope: !8301)
!8315 = distinct !DISubprogram(name: "opt_channel_layout", scope: !919, file: !919, line: 3090, type: !1323, isLocal: true, isDefinition: true, scopeLine: 3091, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8316 = !DILocalVariable(name: "optctx", arg: 1, scope: !8315, file: !919, line: 3090, type: !989)
!8317 = !DILocation(line: 3090, column: 37, scope: !8315)
!8318 = !DILocalVariable(name: "opt", arg: 2, scope: !8315, file: !919, line: 3090, type: !982)
!8319 = !DILocation(line: 3090, column: 57, scope: !8315)
!8320 = !DILocalVariable(name: "arg", arg: 3, scope: !8315, file: !919, line: 3090, type: !982)
!8321 = !DILocation(line: 3090, column: 74, scope: !8315)
!8322 = !DILocalVariable(name: "o", scope: !8315, file: !919, line: 3092, type: !2116)
!8323 = !DILocation(line: 3092, column: 21, scope: !8315)
!8324 = !DILocation(line: 3092, column: 25, scope: !8315)
!8325 = !DILocalVariable(name: "layout_str", scope: !8315, file: !919, line: 3093, type: !8326)
!8326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 256, align: 8, elements: !8327)
!8327 = !{!8328}
!8328 = !DISubrange(count: 32)
!8329 = !DILocation(line: 3093, column: 10, scope: !8315)
!8330 = !DILocalVariable(name: "stream_str", scope: !8315, file: !919, line: 3094, type: !1105)
!8331 = !DILocation(line: 3094, column: 11, scope: !8315)
!8332 = !DILocalVariable(name: "ac_str", scope: !8315, file: !919, line: 3095, type: !1105)
!8333 = !DILocation(line: 3095, column: 11, scope: !8315)
!8334 = !DILocalVariable(name: "ret", scope: !8315, file: !919, line: 3096, type: !998)
!8335 = !DILocation(line: 3096, column: 9, scope: !8315)
!8336 = !DILocalVariable(name: "channels", scope: !8315, file: !919, line: 3096, type: !998)
!8337 = !DILocation(line: 3096, column: 14, scope: !8315)
!8338 = !DILocalVariable(name: "ac_str_size", scope: !8315, file: !919, line: 3096, type: !998)
!8339 = !DILocation(line: 3096, column: 24, scope: !8315)
!8340 = !DILocalVariable(name: "layout", scope: !8315, file: !919, line: 3097, type: !1194)
!8341 = !DILocation(line: 3097, column: 14, scope: !8315)
!8342 = !DILocation(line: 3099, column: 36, scope: !8315)
!8343 = !DILocation(line: 3099, column: 14, scope: !8315)
!8344 = !DILocation(line: 3099, column: 12, scope: !8315)
!8345 = !DILocation(line: 3100, column: 10, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8315, file: !919, line: 3100, column: 9)
!8347 = !DILocation(line: 3100, column: 9, scope: !8315)
!8348 = !DILocation(line: 3101, column: 57, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8346, file: !919, line: 3100, column: 18)
!8350 = !DILocation(line: 3101, column: 9, scope: !8349)
!8351 = !DILocation(line: 3102, column: 9, scope: !8349)
!8352 = !DILocation(line: 3104, column: 14, scope: !8315)
!8353 = !DILocation(line: 3104, column: 56, scope: !8315)
!8354 = !DILocation(line: 3104, column: 5, scope: !8315)
!8355 = !DILocation(line: 3105, column: 27, scope: !8315)
!8356 = !DILocation(line: 3105, column: 30, scope: !8315)
!8357 = !DILocation(line: 3105, column: 35, scope: !8315)
!8358 = !DILocation(line: 3105, column: 11, scope: !8315)
!8359 = !DILocation(line: 3105, column: 9, scope: !8315)
!8360 = !DILocation(line: 3106, column: 9, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8315, file: !919, line: 3106, column: 9)
!8362 = !DILocation(line: 3106, column: 13, scope: !8361)
!8363 = !DILocation(line: 3106, column: 9, scope: !8315)
!8364 = !DILocation(line: 3107, column: 16, scope: !8361)
!8365 = !DILocation(line: 3107, column: 9, scope: !8361)
!8366 = !DILocation(line: 3110, column: 50, scope: !8315)
!8367 = !DILocation(line: 3110, column: 16, scope: !8315)
!8368 = !DILocation(line: 3110, column: 14, scope: !8315)
!8369 = !DILocation(line: 3111, column: 14, scope: !8315)
!8370 = !DILocation(line: 3111, column: 52, scope: !8315)
!8371 = !DILocation(line: 3111, column: 5, scope: !8315)
!8372 = !DILocation(line: 3112, column: 25, scope: !8315)
!8373 = !DILocation(line: 3112, column: 18, scope: !8315)
!8374 = !DILocation(line: 3112, column: 16, scope: !8315)
!8375 = !DILocation(line: 3113, column: 24, scope: !8315)
!8376 = !DILocation(line: 3113, column: 44, scope: !8377)
!8377 = !DILexicalBlockFile(scope: !8315, file: !919, discriminator: 1)
!8378 = !DILocation(line: 3113, column: 37, scope: !8377)
!8379 = !DILocation(line: 3113, column: 24, scope: !8377)
!8380 = !DILocation(line: 3113, column: 24, scope: !8381)
!8381 = !DILexicalBlockFile(scope: !8315, file: !919, discriminator: 2)
!8382 = !DILocation(line: 3113, column: 24, scope: !8383)
!8383 = !DILexicalBlockFile(scope: !8315, file: !919, discriminator: 3)
!8384 = !DILocation(line: 3113, column: 21, scope: !8383)
!8385 = !DILocation(line: 3113, column: 19, scope: !8383)
!8386 = !DILocation(line: 3113, column: 17, scope: !8383)
!8387 = !DILocation(line: 3114, column: 25, scope: !8315)
!8388 = !DILocation(line: 3114, column: 14, scope: !8315)
!8389 = !DILocation(line: 3114, column: 12, scope: !8315)
!8390 = !DILocation(line: 3115, column: 10, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8315, file: !919, line: 3115, column: 9)
!8392 = !DILocation(line: 3115, column: 9, scope: !8315)
!8393 = !DILocation(line: 3116, column: 9, scope: !8391)
!8394 = !DILocation(line: 3117, column: 16, scope: !8315)
!8395 = !DILocation(line: 3117, column: 5, scope: !8315)
!8396 = !DILocation(line: 3118, column: 9, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8315, file: !919, line: 3118, column: 9)
!8398 = !DILocation(line: 3118, column: 9, scope: !8315)
!8399 = !DILocation(line: 3119, column: 20, scope: !8397)
!8400 = !DILocation(line: 3119, column: 28, scope: !8397)
!8401 = !DILocation(line: 3119, column: 40, scope: !8397)
!8402 = !DILocation(line: 3119, column: 9, scope: !8397)
!8403 = !DILocation(line: 3120, column: 24, scope: !8315)
!8404 = !DILocation(line: 3120, column: 27, scope: !8315)
!8405 = !DILocation(line: 3120, column: 35, scope: !8315)
!8406 = !DILocation(line: 3120, column: 11, scope: !8315)
!8407 = !DILocation(line: 3120, column: 9, scope: !8315)
!8408 = !DILocation(line: 3121, column: 13, scope: !8315)
!8409 = !DILocation(line: 3121, column: 5, scope: !8315)
!8410 = !DILocation(line: 3123, column: 12, scope: !8315)
!8411 = !DILocation(line: 3123, column: 5, scope: !8315)
!8412 = !DILocation(line: 3124, column: 1, scope: !8315)
!8413 = distinct !DISubprogram(name: "opt_audio_filters", scope: !919, file: !919, line: 3061, type: !1323, isLocal: true, isDefinition: true, scopeLine: 3062, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8414 = !DILocalVariable(name: "optctx", arg: 1, scope: !8413, file: !919, line: 3061, type: !989)
!8415 = !DILocation(line: 3061, column: 36, scope: !8413)
!8416 = !DILocalVariable(name: "opt", arg: 2, scope: !8413, file: !919, line: 3061, type: !982)
!8417 = !DILocation(line: 3061, column: 56, scope: !8413)
!8418 = !DILocalVariable(name: "arg", arg: 3, scope: !8413, file: !919, line: 3061, type: !982)
!8419 = !DILocation(line: 3061, column: 73, scope: !8413)
!8420 = !DILocalVariable(name: "o", scope: !8413, file: !919, line: 3063, type: !2116)
!8421 = !DILocation(line: 3063, column: 21, scope: !8413)
!8422 = !DILocation(line: 3063, column: 25, scope: !8413)
!8423 = !DILocation(line: 3064, column: 25, scope: !8413)
!8424 = !DILocation(line: 3064, column: 40, scope: !8413)
!8425 = !DILocation(line: 3064, column: 12, scope: !8413)
!8426 = !DILocation(line: 3064, column: 5, scope: !8413)
!8427 = distinct !DISubprogram(name: "opt_subtitle_codec", scope: !919, file: !919, line: 255, type: !1323, isLocal: true, isDefinition: true, scopeLine: 256, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8428 = !DILocalVariable(name: "optctx", arg: 1, scope: !8427, file: !919, line: 255, type: !989)
!8429 = !DILocation(line: 255, column: 37, scope: !8427)
!8430 = !DILocalVariable(name: "opt", arg: 2, scope: !8427, file: !919, line: 255, type: !982)
!8431 = !DILocation(line: 255, column: 57, scope: !8427)
!8432 = !DILocalVariable(name: "arg", arg: 3, scope: !8427, file: !919, line: 255, type: !982)
!8433 = !DILocation(line: 255, column: 74, scope: !8427)
!8434 = !DILocalVariable(name: "o", scope: !8427, file: !919, line: 257, type: !2116)
!8435 = !DILocation(line: 257, column: 21, scope: !8427)
!8436 = !DILocation(line: 257, column: 25, scope: !8427)
!8437 = !DILocation(line: 258, column: 25, scope: !8427)
!8438 = !DILocation(line: 258, column: 39, scope: !8427)
!8439 = !DILocation(line: 258, column: 12, scope: !8427)
!8440 = !DILocation(line: 258, column: 5, scope: !8427)
!8441 = distinct !DISubprogram(name: "opt_video_channel", scope: !919, file: !919, line: 231, type: !1323, isLocal: true, isDefinition: true, scopeLine: 232, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8442 = !DILocalVariable(name: "optctx", arg: 1, scope: !8441, file: !919, line: 231, type: !989)
!8443 = !DILocation(line: 231, column: 36, scope: !8441)
!8444 = !DILocalVariable(name: "opt", arg: 2, scope: !8441, file: !919, line: 231, type: !982)
!8445 = !DILocation(line: 231, column: 56, scope: !8441)
!8446 = !DILocalVariable(name: "arg", arg: 3, scope: !8441, file: !919, line: 231, type: !982)
!8447 = !DILocation(line: 231, column: 73, scope: !8441)
!8448 = !DILocation(line: 233, column: 5, scope: !8441)
!8449 = !DILocation(line: 234, column: 24, scope: !8441)
!8450 = !DILocation(line: 234, column: 43, scope: !8441)
!8451 = !DILocation(line: 234, column: 12, scope: !8441)
!8452 = !DILocation(line: 234, column: 5, scope: !8441)
!8453 = distinct !DISubprogram(name: "opt_video_standard", scope: !919, file: !919, line: 237, type: !1323, isLocal: true, isDefinition: true, scopeLine: 238, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8454 = !DILocalVariable(name: "optctx", arg: 1, scope: !8453, file: !919, line: 237, type: !989)
!8455 = !DILocation(line: 237, column: 37, scope: !8453)
!8456 = !DILocalVariable(name: "opt", arg: 2, scope: !8453, file: !919, line: 237, type: !982)
!8457 = !DILocation(line: 237, column: 57, scope: !8453)
!8458 = !DILocalVariable(name: "arg", arg: 3, scope: !8453, file: !919, line: 237, type: !982)
!8459 = !DILocation(line: 237, column: 74, scope: !8453)
!8460 = !DILocation(line: 239, column: 5, scope: !8453)
!8461 = !DILocation(line: 240, column: 24, scope: !8453)
!8462 = !DILocation(line: 240, column: 44, scope: !8453)
!8463 = !DILocation(line: 240, column: 12, scope: !8453)
!8464 = !DILocation(line: 240, column: 5, scope: !8453)
!8465 = distinct !DISubprogram(name: "opt_sdp_file", scope: !919, file: !919, line: 470, type: !1323, isLocal: true, isDefinition: true, scopeLine: 471, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8466 = !DILocalVariable(name: "optctx", arg: 1, scope: !8465, file: !919, line: 470, type: !989)
!8467 = !DILocation(line: 470, column: 31, scope: !8465)
!8468 = !DILocalVariable(name: "opt", arg: 2, scope: !8465, file: !919, line: 470, type: !982)
!8469 = !DILocation(line: 470, column: 51, scope: !8465)
!8470 = !DILocalVariable(name: "arg", arg: 3, scope: !8465, file: !919, line: 470, type: !982)
!8471 = !DILocation(line: 470, column: 68, scope: !8465)
!8472 = !DILocation(line: 472, column: 13, scope: !8465)
!8473 = !DILocation(line: 472, column: 5, scope: !8465)
!8474 = !DILocation(line: 473, column: 30, scope: !8465)
!8475 = !DILocation(line: 473, column: 20, scope: !8465)
!8476 = !DILocation(line: 473, column: 18, scope: !8465)
!8477 = !DILocation(line: 474, column: 5, scope: !8465)
!8478 = distinct !DISubprogram(name: "opt_preset", scope: !919, file: !919, line: 2955, type: !1323, isLocal: true, isDefinition: true, scopeLine: 2956, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8479 = !DILocalVariable(name: "optctx", arg: 1, scope: !8478, file: !919, line: 2955, type: !989)
!8480 = !DILocation(line: 2955, column: 29, scope: !8478)
!8481 = !DILocalVariable(name: "opt", arg: 2, scope: !8478, file: !919, line: 2955, type: !982)
!8482 = !DILocation(line: 2955, column: 49, scope: !8478)
!8483 = !DILocalVariable(name: "arg", arg: 3, scope: !8478, file: !919, line: 2955, type: !982)
!8484 = !DILocation(line: 2955, column: 66, scope: !8478)
!8485 = !DILocalVariable(name: "o", scope: !8478, file: !919, line: 2957, type: !2116)
!8486 = !DILocation(line: 2957, column: 21, scope: !8478)
!8487 = !DILocation(line: 2957, column: 25, scope: !8478)
!8488 = !DILocalVariable(name: "f", scope: !8478, file: !919, line: 2958, type: !4293)
!8489 = !DILocation(line: 2958, column: 11, scope: !8478)
!8490 = !DILocalVariable(name: "filename", scope: !8478, file: !919, line: 2959, type: !8491)
!8491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 8000, align: 8, elements: !8492)
!8492 = !{!8493}
!8493 = !DISubrange(count: 1000)
!8494 = !DILocation(line: 2959, column: 10, scope: !8478)
!8495 = !DILocalVariable(name: "line", scope: !8478, file: !919, line: 2959, type: !8491)
!8496 = !DILocation(line: 2959, column: 26, scope: !8478)
!8497 = !DILocalVariable(name: "tmp_line", scope: !8478, file: !919, line: 2959, type: !8491)
!8498 = !DILocation(line: 2959, column: 38, scope: !8478)
!8499 = !DILocalVariable(name: "codec_name", scope: !8478, file: !919, line: 2960, type: !982)
!8500 = !DILocation(line: 2960, column: 17, scope: !8478)
!8501 = !DILocation(line: 2962, column: 20, scope: !8478)
!8502 = !DILocation(line: 2962, column: 19, scope: !8478)
!8503 = !DILocation(line: 2962, column: 5, scope: !8478)
!8504 = !DILocation(line: 2962, column: 17, scope: !8478)
!8505 = !DILocation(line: 2963, column: 5, scope: !8478)
!8506 = !DILocation(line: 2963, column: 17, scope: !8478)
!8507 = !DILocalVariable(name: "i", scope: !8508, file: !919, line: 2964, type: !998)
!8508 = distinct !DILexicalBlock(scope: !8478, file: !919, line: 2964, column: 5)
!8509 = !DILocation(line: 2964, column: 11, scope: !8508)
!8510 = !DILocation(line: 2964, column: 21, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8508, file: !919, line: 2964, column: 14)
!8512 = !DILocation(line: 2964, column: 19, scope: !8511)
!8513 = !DILocation(line: 2964, column: 26, scope: !8514)
!8514 = !DILexicalBlockFile(scope: !8515, file: !919, discriminator: 1)
!8515 = distinct !DILexicalBlock(scope: !8511, file: !919, line: 2964, column: 14)
!8516 = !DILocation(line: 2964, column: 30, scope: !8514)
!8517 = !DILocation(line: 2964, column: 33, scope: !8514)
!8518 = !DILocation(line: 2964, column: 28, scope: !8514)
!8519 = !DILocation(line: 2964, column: 14, scope: !8514)
!8520 = !DILocalVariable(name: "spec", scope: !8521, file: !919, line: 2964, type: !1105)
!8521 = distinct !DILexicalBlock(scope: !8515, file: !919, line: 2964, column: 54)
!8522 = !DILocation(line: 2964, column: 62, scope: !8521)
!8523 = !DILocation(line: 2964, column: 84, scope: !8524)
!8524 = !DILexicalBlockFile(scope: !8521, file: !919, discriminator: 2)
!8525 = !DILocation(line: 2964, column: 69, scope: !8524)
!8526 = !DILocation(line: 2964, column: 72, scope: !8524)
!8527 = !DILocation(line: 2964, column: 87, scope: !8524)
!8528 = !DILocation(line: 2964, column: 62, scope: !8524)
!8529 = !DILocation(line: 2964, column: 110, scope: !8524)
!8530 = !DILocation(line: 2964, column: 116, scope: !8524)
!8531 = !DILocation(line: 2964, column: 103, scope: !8524)
!8532 = !DILocation(line: 2964, column: 102, scope: !8524)
!8533 = !DILocation(line: 2964, column: 155, scope: !8534)
!8534 = !DILexicalBlockFile(scope: !8535, file: !919, discriminator: 3)
!8535 = distinct !DILexicalBlock(scope: !8521, file: !919, line: 2964, column: 102)
!8536 = !DILocation(line: 2964, column: 140, scope: !8534)
!8537 = !DILocation(line: 2964, column: 143, scope: !8534)
!8538 = !DILocation(line: 2964, column: 158, scope: !8534)
!8539 = !DILocation(line: 2964, column: 160, scope: !8534)
!8540 = !DILocation(line: 2964, column: 138, scope: !8534)
!8541 = !DILocation(line: 2964, column: 127, scope: !8534)
!8542 = !DILocation(line: 2964, column: 165, scope: !8543)
!8543 = !DILexicalBlockFile(scope: !8521, file: !919, discriminator: 4)
!8544 = !DILocation(line: 2964, column: 50, scope: !8545)
!8545 = !DILexicalBlockFile(scope: !8515, file: !919, discriminator: 5)
!8546 = !DILocation(line: 2964, column: 14, scope: !8545)
!8547 = distinct !{!8547, !8548}
!8548 = !DILocation(line: 2964, column: 14, scope: !8508)
!8549 = !DILocation(line: 2966, column: 31, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8478, file: !919, line: 2966, column: 9)
!8551 = !DILocation(line: 2966, column: 59, scope: !8550)
!8552 = !DILocation(line: 2966, column: 65, scope: !8550)
!8553 = !DILocation(line: 2966, column: 64, scope: !8550)
!8554 = !DILocation(line: 2966, column: 69, scope: !8550)
!8555 = !DILocation(line: 2966, column: 77, scope: !8550)
!8556 = !DILocation(line: 2966, column: 15, scope: !8550)
!8557 = !DILocation(line: 2966, column: 13, scope: !8550)
!8558 = !DILocation(line: 2966, column: 9, scope: !8478)
!8559 = !DILocation(line: 2967, column: 21, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8561, file: !919, line: 2967, column: 12)
!8561 = distinct !DILexicalBlock(scope: !8550, file: !919, line: 2966, column: 91)
!8562 = !DILocation(line: 2967, column: 13, scope: !8560)
!8563 = !DILocation(line: 2967, column: 12, scope: !8561)
!8564 = !DILocation(line: 2968, column: 13, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8560, file: !919, line: 2967, column: 74)
!8566 = !DILocation(line: 2969, column: 9, scope: !8565)
!8567 = !DILocation(line: 2970, column: 64, scope: !8560)
!8568 = !DILocation(line: 2970, column: 13, scope: !8560)
!8569 = !DILocation(line: 2971, column: 9, scope: !8561)
!8570 = !DILocation(line: 2974, column: 5, scope: !8478)
!8571 = !DILocation(line: 2974, column: 18, scope: !8572)
!8572 = !DILexicalBlockFile(scope: !8478, file: !919, discriminator: 1)
!8573 = !DILocation(line: 2974, column: 38, scope: !8572)
!8574 = !DILocation(line: 2974, column: 12, scope: !8572)
!8575 = !DILocation(line: 2974, column: 5, scope: !8572)
!8576 = !DILocalVariable(name: "key", scope: !8577, file: !919, line: 2975, type: !1105)
!8577 = distinct !DILexicalBlock(scope: !8478, file: !919, line: 2974, column: 42)
!8578 = !DILocation(line: 2975, column: 15, scope: !8577)
!8579 = !DILocation(line: 2975, column: 21, scope: !8577)
!8580 = !DILocalVariable(name: "value", scope: !8577, file: !919, line: 2975, type: !1105)
!8581 = !DILocation(line: 2975, column: 32, scope: !8577)
!8582 = !DILocalVariable(name: "endptr", scope: !8577, file: !919, line: 2975, type: !1105)
!8583 = !DILocation(line: 2975, column: 40, scope: !8577)
!8584 = !DILocation(line: 2977, column: 21, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8577, file: !919, line: 2977, column: 13)
!8586 = !DILocation(line: 2977, column: 13, scope: !8585)
!8587 = !DILocation(line: 2977, column: 36, scope: !8585)
!8588 = !DILocation(line: 2977, column: 13, scope: !8577)
!8589 = !DILocation(line: 2978, column: 13, scope: !8585)
!8590 = distinct !{!8590, !8570}
!8591 = !DILocation(line: 2979, column: 20, scope: !8577)
!8592 = !DILocation(line: 2979, column: 30, scope: !8577)
!8593 = !DILocation(line: 2979, column: 9, scope: !8577)
!8594 = !DILocation(line: 2980, column: 24, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8577, file: !919, line: 2980, column: 13)
!8596 = !DILocation(line: 2980, column: 14, scope: !8595)
!8597 = !DILocation(line: 2980, column: 42, scope: !8595)
!8598 = !DILocation(line: 2981, column: 24, scope: !8595)
!8599 = !DILocation(line: 2981, column: 14, scope: !8595)
!8600 = !DILocation(line: 2980, column: 13, scope: !8601)
!8601 = !DILexicalBlockFile(scope: !8577, file: !919, discriminator: 1)
!8602 = !DILocation(line: 2982, column: 58, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8595, file: !919, line: 2981, column: 49)
!8604 = !DILocation(line: 2982, column: 68, scope: !8603)
!8605 = !DILocation(line: 2982, column: 13, scope: !8603)
!8606 = !DILocation(line: 2983, column: 13, scope: !8603)
!8607 = !DILocation(line: 2985, column: 60, scope: !8577)
!8608 = !DILocation(line: 2985, column: 70, scope: !8577)
!8609 = !DILocation(line: 2985, column: 75, scope: !8577)
!8610 = !DILocation(line: 2985, column: 9, scope: !8577)
!8611 = !DILocation(line: 2987, column: 21, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8577, file: !919, line: 2987, column: 13)
!8613 = !DILocation(line: 2987, column: 14, scope: !8612)
!8614 = !DILocation(line: 2987, column: 13, scope: !8577)
!8615 = !DILocation(line: 2987, column: 54, scope: !8616)
!8616 = !DILexicalBlockFile(scope: !8612, file: !919, discriminator: 1)
!8617 = !DILocation(line: 2987, column: 57, scope: !8616)
!8618 = !DILocation(line: 2987, column: 62, scope: !8616)
!8619 = !DILocation(line: 2987, column: 37, scope: !8616)
!8620 = !DILocation(line: 2988, column: 26, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8612, file: !919, line: 2988, column: 18)
!8622 = !DILocation(line: 2988, column: 19, scope: !8621)
!8623 = !DILocation(line: 2988, column: 18, scope: !8612)
!8624 = !DILocation(line: 2988, column: 59, scope: !8625)
!8625 = !DILexicalBlockFile(scope: !8621, file: !919, discriminator: 1)
!8626 = !DILocation(line: 2988, column: 62, scope: !8625)
!8627 = !DILocation(line: 2988, column: 67, scope: !8625)
!8628 = !DILocation(line: 2988, column: 42, scope: !8625)
!8629 = !DILocation(line: 2989, column: 26, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8621, file: !919, line: 2989, column: 18)
!8631 = !DILocation(line: 2989, column: 19, scope: !8630)
!8632 = !DILocation(line: 2989, column: 18, scope: !8621)
!8633 = !DILocation(line: 2989, column: 61, scope: !8634)
!8634 = !DILexicalBlockFile(scope: !8630, file: !919, discriminator: 1)
!8635 = !DILocation(line: 2989, column: 64, scope: !8634)
!8636 = !DILocation(line: 2989, column: 69, scope: !8634)
!8637 = !DILocation(line: 2989, column: 42, scope: !8634)
!8638 = !DILocation(line: 2990, column: 26, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8630, file: !919, line: 2990, column: 18)
!8640 = !DILocation(line: 2990, column: 19, scope: !8639)
!8641 = !DILocation(line: 2990, column: 18, scope: !8630)
!8642 = !DILocation(line: 2990, column: 58, scope: !8643)
!8643 = !DILexicalBlockFile(scope: !8639, file: !919, discriminator: 1)
!8644 = !DILocation(line: 2990, column: 61, scope: !8643)
!8645 = !DILocation(line: 2990, column: 66, scope: !8643)
!8646 = !DILocation(line: 2990, column: 42, scope: !8643)
!8647 = !DILocation(line: 2991, column: 34, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8639, file: !919, line: 2991, column: 18)
!8649 = !DILocation(line: 2991, column: 37, scope: !8648)
!8650 = !DILocation(line: 2991, column: 42, scope: !8648)
!8651 = !DILocation(line: 2991, column: 18, scope: !8648)
!8652 = !DILocation(line: 2991, column: 49, scope: !8648)
!8653 = !DILocation(line: 2991, column: 18, scope: !8639)
!8654 = !DILocation(line: 2993, column: 20, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8648, file: !919, line: 2991, column: 54)
!8656 = !DILocation(line: 2993, column: 30, scope: !8655)
!8657 = !DILocation(line: 2993, column: 36, scope: !8655)
!8658 = !DILocation(line: 2993, column: 41, scope: !8655)
!8659 = !DILocation(line: 2992, column: 13, scope: !8655)
!8660 = !DILocation(line: 2994, column: 13, scope: !8655)
!8661 = !DILocation(line: 2974, column: 5, scope: !8662)
!8662 = !DILexicalBlockFile(scope: !8478, file: !919, discriminator: 2)
!8663 = !DILocation(line: 2998, column: 12, scope: !8478)
!8664 = !DILocation(line: 2998, column: 5, scope: !8478)
!8665 = !DILocation(line: 3000, column: 5, scope: !8478)
!8666 = distinct !DISubprogram(name: "opt_data_codec", scope: !919, file: !919, line: 261, type: !1323, isLocal: true, isDefinition: true, scopeLine: 262, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8667 = !DILocalVariable(name: "optctx", arg: 1, scope: !8666, file: !919, line: 261, type: !989)
!8668 = !DILocation(line: 261, column: 33, scope: !8666)
!8669 = !DILocalVariable(name: "opt", arg: 2, scope: !8666, file: !919, line: 261, type: !982)
!8670 = !DILocation(line: 261, column: 53, scope: !8666)
!8671 = !DILocalVariable(name: "arg", arg: 3, scope: !8666, file: !919, line: 261, type: !982)
!8672 = !DILocation(line: 261, column: 70, scope: !8666)
!8673 = !DILocalVariable(name: "o", scope: !8666, file: !919, line: 263, type: !2116)
!8674 = !DILocation(line: 263, column: 21, scope: !8666)
!8675 = !DILocation(line: 263, column: 25, scope: !8666)
!8676 = !DILocation(line: 264, column: 25, scope: !8666)
!8677 = !DILocation(line: 264, column: 39, scope: !8666)
!8678 = !DILocation(line: 264, column: 12, scope: !8666)
!8679 = !DILocation(line: 264, column: 5, scope: !8666)
!8680 = distinct !DISubprogram(name: "opt_init_hw_device", scope: !919, file: !919, line: 498, type: !1323, isLocal: true, isDefinition: true, scopeLine: 499, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8681 = !DILocalVariable(name: "optctx", arg: 1, scope: !8680, file: !919, line: 498, type: !989)
!8682 = !DILocation(line: 498, column: 37, scope: !8680)
!8683 = !DILocalVariable(name: "opt", arg: 2, scope: !8680, file: !919, line: 498, type: !982)
!8684 = !DILocation(line: 498, column: 57, scope: !8680)
!8685 = !DILocalVariable(name: "arg", arg: 3, scope: !8680, file: !919, line: 498, type: !982)
!8686 = !DILocation(line: 498, column: 74, scope: !8680)
!8687 = !DILocation(line: 500, column: 17, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8680, file: !919, line: 500, column: 9)
!8689 = !DILocation(line: 500, column: 10, scope: !8688)
!8690 = !DILocation(line: 500, column: 9, scope: !8680)
!8691 = !DILocalVariable(name: "type", scope: !8692, file: !919, line: 501, type: !923)
!8692 = distinct !DILexicalBlock(scope: !8688, file: !919, line: 500, column: 31)
!8693 = !DILocation(line: 501, column: 29, scope: !8692)
!8694 = !DILocation(line: 502, column: 9, scope: !8692)
!8695 = !DILocation(line: 503, column: 9, scope: !8692)
!8696 = !DILocation(line: 503, column: 50, scope: !8697)
!8697 = !DILexicalBlockFile(scope: !8692, file: !919, discriminator: 1)
!8698 = !DILocation(line: 503, column: 24, scope: !8697)
!8699 = !DILocation(line: 503, column: 22, scope: !8697)
!8700 = !DILocation(line: 503, column: 57, scope: !8697)
!8701 = !DILocation(line: 503, column: 9, scope: !8697)
!8702 = !DILocation(line: 505, column: 54, scope: !8692)
!8703 = !DILocation(line: 505, column: 28, scope: !8692)
!8704 = !DILocation(line: 505, column: 13, scope: !8697)
!8705 = !DILocation(line: 503, column: 9, scope: !8706)
!8706 = !DILexicalBlockFile(scope: !8692, file: !919, discriminator: 2)
!8707 = distinct !{!8707, !8695}
!8708 = !DILocation(line: 506, column: 9, scope: !8692)
!8709 = !DILocation(line: 507, column: 9, scope: !8692)
!8710 = !DILocation(line: 509, column: 43, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8688, file: !919, line: 508, column: 12)
!8712 = !DILocation(line: 509, column: 16, scope: !8711)
!8713 = !DILocation(line: 509, column: 9, scope: !8711)
!8714 = distinct !DISubprogram(name: "opt_filter_hw_device", scope: !919, file: !919, line: 513, type: !1323, isLocal: true, isDefinition: true, scopeLine: 514, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8715 = !DILocalVariable(name: "optctx", arg: 1, scope: !8714, file: !919, line: 513, type: !989)
!8716 = !DILocation(line: 513, column: 39, scope: !8714)
!8717 = !DILocalVariable(name: "opt", arg: 2, scope: !8714, file: !919, line: 513, type: !982)
!8718 = !DILocation(line: 513, column: 59, scope: !8714)
!8719 = !DILocalVariable(name: "arg", arg: 3, scope: !8714, file: !919, line: 513, type: !982)
!8720 = !DILocation(line: 513, column: 76, scope: !8714)
!8721 = !DILocation(line: 515, column: 9, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8714, file: !919, line: 515, column: 9)
!8723 = !DILocation(line: 515, column: 9, scope: !8714)
!8724 = !DILocation(line: 516, column: 9, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8722, file: !919, line: 515, column: 27)
!8726 = !DILocation(line: 517, column: 9, scope: !8725)
!8727 = !DILocation(line: 519, column: 46, scope: !8714)
!8728 = !DILocation(line: 519, column: 24, scope: !8714)
!8729 = !DILocation(line: 519, column: 22, scope: !8714)
!8730 = !DILocation(line: 520, column: 10, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8714, file: !919, line: 520, column: 9)
!8732 = !DILocation(line: 520, column: 9, scope: !8714)
!8733 = !DILocation(line: 521, column: 56, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8731, file: !919, line: 520, column: 28)
!8735 = !DILocation(line: 521, column: 9, scope: !8734)
!8736 = !DILocation(line: 522, column: 9, scope: !8734)
!8737 = !DILocation(line: 524, column: 5, scope: !8714)
!8738 = !DILocation(line: 525, column: 1, scope: !8714)
!8739 = distinct !DISubprogram(name: "init_options", scope: !919, file: !919, line: 157, type: !8740, isLocal: true, isDefinition: true, scopeLine: 158, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8740 = !DISubroutineType(types: !8741)
!8741 = !{null, !2116}
!8742 = !DILocalVariable(name: "o", arg: 1, scope: !8739, file: !919, line: 157, type: !2116)
!8743 = !DILocation(line: 157, column: 42, scope: !8739)
!8744 = !DILocation(line: 159, column: 12, scope: !8739)
!8745 = !DILocation(line: 159, column: 5, scope: !8739)
!8746 = !DILocation(line: 161, column: 5, scope: !8739)
!8747 = !DILocation(line: 161, column: 8, scope: !8739)
!8748 = !DILocation(line: 161, column: 18, scope: !8739)
!8749 = !DILocation(line: 162, column: 5, scope: !8739)
!8750 = !DILocation(line: 162, column: 8, scope: !8739)
!8751 = !DILocation(line: 162, column: 22, scope: !8739)
!8752 = !DILocation(line: 163, column: 5, scope: !8739)
!8753 = !DILocation(line: 163, column: 8, scope: !8739)
!8754 = !DILocation(line: 163, column: 19, scope: !8739)
!8755 = !DILocation(line: 164, column: 5, scope: !8739)
!8756 = !DILocation(line: 164, column: 8, scope: !8739)
!8757 = !DILocation(line: 164, column: 23, scope: !8739)
!8758 = !DILocation(line: 165, column: 5, scope: !8739)
!8759 = !DILocation(line: 165, column: 8, scope: !8739)
!8760 = !DILocation(line: 165, column: 23, scope: !8739)
!8761 = !DILocation(line: 166, column: 5, scope: !8739)
!8762 = !DILocation(line: 166, column: 8, scope: !8739)
!8763 = !DILocation(line: 166, column: 23, scope: !8739)
!8764 = !DILocation(line: 167, column: 5, scope: !8739)
!8765 = !DILocation(line: 167, column: 8, scope: !8739)
!8766 = !DILocation(line: 167, column: 28, scope: !8739)
!8767 = !DILocation(line: 168, column: 5, scope: !8739)
!8768 = !DILocation(line: 168, column: 8, scope: !8739)
!8769 = !DILocation(line: 168, column: 22, scope: !8739)
!8770 = !DILocation(line: 169, column: 1, scope: !8739)
!8771 = distinct !DISubprogram(name: "uninit_options", scope: !919, file: !919, line: 125, type: !8740, isLocal: true, isDefinition: true, scopeLine: 126, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8772 = !DILocalVariable(name: "o", arg: 1, scope: !8771, file: !919, line: 125, type: !2116)
!8773 = !DILocation(line: 125, column: 44, scope: !8771)
!8774 = !DILocalVariable(name: "po", scope: !8771, file: !919, line: 127, type: !2013)
!8775 = !DILocation(line: 127, column: 22, scope: !8771)
!8776 = !DILocalVariable(name: "i", scope: !8771, file: !919, line: 128, type: !998)
!8777 = !DILocation(line: 128, column: 9, scope: !8771)
!8778 = !DILocation(line: 131, column: 5, scope: !8771)
!8779 = !DILocation(line: 131, column: 12, scope: !8780)
!8780 = !DILexicalBlockFile(scope: !8771, file: !919, discriminator: 1)
!8781 = !DILocation(line: 131, column: 16, scope: !8780)
!8782 = !DILocation(line: 131, column: 5, scope: !8780)
!8783 = !DILocalVariable(name: "dst", scope: !8784, file: !919, line: 132, type: !989)
!8784 = distinct !DILexicalBlock(scope: !8771, file: !919, line: 131, column: 22)
!8785 = !DILocation(line: 132, column: 15, scope: !8784)
!8786 = !DILocation(line: 132, column: 31, scope: !8784)
!8787 = !DILocation(line: 132, column: 21, scope: !8784)
!8788 = !DILocation(line: 132, column: 35, scope: !8784)
!8789 = !DILocation(line: 132, column: 39, scope: !8784)
!8790 = !DILocation(line: 132, column: 41, scope: !8784)
!8791 = !DILocation(line: 132, column: 33, scope: !8784)
!8792 = !DILocation(line: 134, column: 13, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8784, file: !919, line: 134, column: 13)
!8794 = !DILocation(line: 134, column: 17, scope: !8793)
!8795 = !DILocation(line: 134, column: 23, scope: !8793)
!8796 = !DILocation(line: 134, column: 13, scope: !8784)
!8797 = !DILocalVariable(name: "so", scope: !8798, file: !919, line: 135, type: !8799)
!8798 = distinct !DILexicalBlock(scope: !8793, file: !919, line: 134, column: 33)
!8799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64, align: 64)
!8800 = !DILocation(line: 135, column: 28, scope: !8798)
!8801 = !DILocation(line: 135, column: 33, scope: !8798)
!8802 = !DILocalVariable(name: "i", scope: !8798, file: !919, line: 136, type: !998)
!8803 = !DILocation(line: 136, column: 17, scope: !8798)
!8804 = !DILocalVariable(name: "count", scope: !8798, file: !919, line: 136, type: !1150)
!8805 = !DILocation(line: 136, column: 21, scope: !8798)
!8806 = !DILocation(line: 136, column: 36, scope: !8798)
!8807 = !DILocation(line: 136, column: 39, scope: !8798)
!8808 = !DILocation(line: 136, column: 29, scope: !8798)
!8809 = !DILocation(line: 137, column: 20, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8798, file: !919, line: 137, column: 13)
!8811 = !DILocation(line: 137, column: 18, scope: !8810)
!8812 = !DILocation(line: 137, column: 25, scope: !8813)
!8813 = !DILexicalBlockFile(scope: !8814, file: !919, discriminator: 1)
!8814 = distinct !DILexicalBlock(scope: !8810, file: !919, line: 137, column: 13)
!8815 = !DILocation(line: 137, column: 30, scope: !8813)
!8816 = !DILocation(line: 137, column: 29, scope: !8813)
!8817 = !DILocation(line: 137, column: 27, scope: !8813)
!8818 = !DILocation(line: 137, column: 13, scope: !8813)
!8819 = !DILocation(line: 138, column: 33, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8814, file: !919, line: 137, column: 42)
!8821 = !DILocation(line: 138, column: 27, scope: !8820)
!8822 = !DILocation(line: 138, column: 29, scope: !8820)
!8823 = !DILocation(line: 138, column: 28, scope: !8820)
!8824 = !DILocation(line: 138, column: 36, scope: !8820)
!8825 = !DILocation(line: 138, column: 26, scope: !8820)
!8826 = !DILocation(line: 138, column: 17, scope: !8820)
!8827 = !DILocation(line: 139, column: 21, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8820, file: !919, line: 139, column: 21)
!8829 = !DILocation(line: 139, column: 25, scope: !8828)
!8830 = !DILocation(line: 139, column: 31, scope: !8828)
!8831 = !DILocation(line: 139, column: 21, scope: !8820)
!8832 = !DILocation(line: 140, column: 37, scope: !8828)
!8833 = !DILocation(line: 140, column: 31, scope: !8828)
!8834 = !DILocation(line: 140, column: 33, scope: !8828)
!8835 = !DILocation(line: 140, column: 32, scope: !8828)
!8836 = !DILocation(line: 140, column: 40, scope: !8828)
!8837 = !DILocation(line: 140, column: 42, scope: !8828)
!8838 = !DILocation(line: 140, column: 30, scope: !8828)
!8839 = !DILocation(line: 140, column: 21, scope: !8828)
!8840 = !DILocation(line: 141, column: 13, scope: !8820)
!8841 = !DILocation(line: 137, column: 38, scope: !8842)
!8842 = !DILexicalBlockFile(scope: !8814, file: !919, discriminator: 2)
!8843 = !DILocation(line: 137, column: 13, scope: !8842)
!8844 = distinct !{!8844, !8845}
!8845 = !DILocation(line: 137, column: 13, scope: !8798)
!8846 = !DILocation(line: 142, column: 22, scope: !8798)
!8847 = !DILocation(line: 142, column: 13, scope: !8798)
!8848 = !DILocation(line: 143, column: 14, scope: !8798)
!8849 = !DILocation(line: 143, column: 20, scope: !8798)
!8850 = !DILocation(line: 144, column: 9, scope: !8798)
!8851 = !DILocation(line: 144, column: 20, scope: !8852)
!8852 = !DILexicalBlockFile(scope: !8853, file: !919, discriminator: 1)
!8853 = distinct !DILexicalBlock(scope: !8793, file: !919, line: 144, column: 20)
!8854 = !DILocation(line: 144, column: 24, scope: !8852)
!8855 = !DILocation(line: 144, column: 30, scope: !8852)
!8856 = !DILocation(line: 144, column: 39, scope: !8852)
!8857 = !DILocation(line: 144, column: 42, scope: !8858)
!8858 = !DILexicalBlockFile(scope: !8853, file: !919, discriminator: 2)
!8859 = !DILocation(line: 144, column: 46, scope: !8858)
!8860 = !DILocation(line: 144, column: 52, scope: !8858)
!8861 = !DILocation(line: 144, column: 20, scope: !8858)
!8862 = !DILocation(line: 145, column: 22, scope: !8853)
!8863 = !DILocation(line: 145, column: 13, scope: !8853)
!8864 = !DILocation(line: 146, column: 11, scope: !8784)
!8865 = !DILocation(line: 131, column: 5, scope: !8866)
!8866 = !DILexicalBlockFile(scope: !8771, file: !919, discriminator: 2)
!8867 = distinct !{!8867, !8778}
!8868 = !DILocation(line: 149, column: 12, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8771, file: !919, line: 149, column: 5)
!8870 = !DILocation(line: 149, column: 10, scope: !8869)
!8871 = !DILocation(line: 149, column: 17, scope: !8872)
!8872 = !DILexicalBlockFile(scope: !8873, file: !919, discriminator: 1)
!8873 = distinct !DILexicalBlock(scope: !8869, file: !919, line: 149, column: 5)
!8874 = !DILocation(line: 149, column: 21, scope: !8872)
!8875 = !DILocation(line: 149, column: 24, scope: !8872)
!8876 = !DILocation(line: 149, column: 19, scope: !8872)
!8877 = !DILocation(line: 149, column: 5, scope: !8872)
!8878 = !DILocation(line: 150, column: 34, scope: !8873)
!8879 = !DILocation(line: 150, column: 19, scope: !8873)
!8880 = !DILocation(line: 150, column: 22, scope: !8873)
!8881 = !DILocation(line: 150, column: 37, scope: !8873)
!8882 = !DILocation(line: 150, column: 18, scope: !8873)
!8883 = !DILocation(line: 150, column: 9, scope: !8873)
!8884 = !DILocation(line: 149, column: 41, scope: !8885)
!8885 = !DILexicalBlockFile(scope: !8873, file: !919, discriminator: 2)
!8886 = !DILocation(line: 149, column: 5, scope: !8885)
!8887 = distinct !{!8887, !8888}
!8888 = !DILocation(line: 149, column: 5, scope: !8771)
!8889 = !DILocation(line: 151, column: 15, scope: !8771)
!8890 = !DILocation(line: 151, column: 18, scope: !8771)
!8891 = !DILocation(line: 151, column: 14, scope: !8771)
!8892 = !DILocation(line: 151, column: 5, scope: !8771)
!8893 = !DILocation(line: 152, column: 15, scope: !8771)
!8894 = !DILocation(line: 152, column: 18, scope: !8771)
!8895 = !DILocation(line: 152, column: 14, scope: !8771)
!8896 = !DILocation(line: 152, column: 5, scope: !8771)
!8897 = !DILocation(line: 153, column: 15, scope: !8771)
!8898 = !DILocation(line: 153, column: 18, scope: !8771)
!8899 = !DILocation(line: 153, column: 14, scope: !8771)
!8900 = !DILocation(line: 153, column: 5, scope: !8771)
!8901 = !DILocation(line: 154, column: 15, scope: !8771)
!8902 = !DILocation(line: 154, column: 18, scope: !8771)
!8903 = !DILocation(line: 154, column: 14, scope: !8771)
!8904 = !DILocation(line: 154, column: 5, scope: !8771)
!8905 = !DILocation(line: 155, column: 1, scope: !8771)
!8906 = distinct !DISubprogram(name: "find_codec_or_die", scope: !919, file: !919, line: 666, type: !8907, isLocal: true, isDefinition: true, scopeLine: 667, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8907 = !DISubroutineType(types: !8908)
!8908 = !{!2861, !982, !46, !998}
!8909 = !DILocalVariable(name: "name", arg: 1, scope: !8906, file: !919, line: 666, type: !982)
!8910 = !DILocation(line: 666, column: 47, scope: !8906)
!8911 = !DILocalVariable(name: "type", arg: 2, scope: !8906, file: !919, line: 666, type: !46)
!8912 = !DILocation(line: 666, column: 70, scope: !8906)
!8913 = !DILocalVariable(name: "encoder", arg: 3, scope: !8906, file: !919, line: 666, type: !998)
!8914 = !DILocation(line: 666, column: 80, scope: !8906)
!8915 = !DILocalVariable(name: "desc", scope: !8906, file: !919, line: 668, type: !1760)
!8916 = !DILocation(line: 668, column: 30, scope: !8906)
!8917 = !DILocalVariable(name: "codec_string", scope: !8906, file: !919, line: 669, type: !982)
!8918 = !DILocation(line: 669, column: 17, scope: !8906)
!8919 = !DILocation(line: 669, column: 32, scope: !8906)
!8920 = !DILocalVariable(name: "codec", scope: !8906, file: !919, line: 670, type: !2861)
!8921 = !DILocation(line: 670, column: 14, scope: !8906)
!8922 = !DILocation(line: 672, column: 13, scope: !8906)
!8923 = !DILocation(line: 673, column: 38, scope: !8906)
!8924 = !DILocation(line: 673, column: 9, scope: !8906)
!8925 = !DILocation(line: 672, column: 13, scope: !8926)
!8926 = !DILexicalBlockFile(scope: !8906, file: !919, discriminator: 1)
!8927 = !DILocation(line: 674, column: 38, scope: !8906)
!8928 = !DILocation(line: 674, column: 9, scope: !8906)
!8929 = !DILocation(line: 672, column: 13, scope: !8930)
!8930 = !DILexicalBlockFile(scope: !8906, file: !919, discriminator: 2)
!8931 = !DILocation(line: 672, column: 13, scope: !8932)
!8932 = !DILexicalBlockFile(scope: !8906, file: !919, discriminator: 3)
!8933 = !DILocation(line: 672, column: 11, scope: !8932)
!8934 = !DILocation(line: 676, column: 10, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8906, file: !919, line: 676, column: 9)
!8936 = !DILocation(line: 676, column: 16, scope: !8935)
!8937 = !DILocation(line: 676, column: 58, scope: !8938)
!8938 = !DILexicalBlockFile(scope: !8935, file: !919, discriminator: 1)
!8939 = !DILocation(line: 676, column: 27, scope: !8938)
!8940 = !DILocation(line: 676, column: 25, scope: !8938)
!8941 = !DILocation(line: 676, column: 9, scope: !8938)
!8942 = !DILocation(line: 677, column: 17, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8935, file: !919, line: 676, column: 66)
!8944 = !DILocation(line: 677, column: 48, scope: !8945)
!8945 = !DILexicalBlockFile(scope: !8943, file: !919, discriminator: 1)
!8946 = !DILocation(line: 677, column: 54, scope: !8945)
!8947 = !DILocation(line: 677, column: 27, scope: !8945)
!8948 = !DILocation(line: 677, column: 17, scope: !8945)
!8949 = !DILocation(line: 678, column: 48, scope: !8943)
!8950 = !DILocation(line: 678, column: 54, scope: !8943)
!8951 = !DILocation(line: 678, column: 27, scope: !8943)
!8952 = !DILocation(line: 677, column: 17, scope: !8953)
!8953 = !DILexicalBlockFile(scope: !8943, file: !919, discriminator: 2)
!8954 = !DILocation(line: 677, column: 17, scope: !8955)
!8955 = !DILexicalBlockFile(scope: !8943, file: !919, discriminator: 3)
!8956 = !DILocation(line: 677, column: 15, scope: !8955)
!8957 = !DILocation(line: 679, column: 13, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8943, file: !919, line: 679, column: 13)
!8959 = !DILocation(line: 679, column: 13, scope: !8943)
!8960 = !DILocation(line: 681, column: 20, scope: !8958)
!8961 = !DILocation(line: 681, column: 34, scope: !8958)
!8962 = !DILocation(line: 681, column: 41, scope: !8958)
!8963 = !DILocation(line: 681, column: 47, scope: !8958)
!8964 = !DILocation(line: 681, column: 53, scope: !8958)
!8965 = !DILocation(line: 680, column: 13, scope: !8958)
!8966 = !DILocation(line: 682, column: 5, scope: !8943)
!8967 = !DILocation(line: 684, column: 10, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8906, file: !919, line: 684, column: 9)
!8969 = !DILocation(line: 684, column: 9, scope: !8906)
!8970 = !DILocation(line: 685, column: 45, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8968, file: !919, line: 684, column: 17)
!8972 = !DILocation(line: 685, column: 59, scope: !8971)
!8973 = !DILocation(line: 685, column: 9, scope: !8971)
!8974 = !DILocation(line: 686, column: 9, scope: !8971)
!8975 = !DILocation(line: 688, column: 9, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8906, file: !919, line: 688, column: 9)
!8977 = !DILocation(line: 688, column: 16, scope: !8976)
!8978 = !DILocation(line: 688, column: 24, scope: !8976)
!8979 = !DILocation(line: 688, column: 21, scope: !8976)
!8980 = !DILocation(line: 688, column: 9, scope: !8906)
!8981 = !DILocation(line: 689, column: 50, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8976, file: !919, line: 688, column: 30)
!8983 = !DILocation(line: 689, column: 64, scope: !8982)
!8984 = !DILocation(line: 689, column: 9, scope: !8982)
!8985 = !DILocation(line: 690, column: 9, scope: !8982)
!8986 = !DILocation(line: 692, column: 12, scope: !8906)
!8987 = !DILocation(line: 692, column: 5, scope: !8906)
!8988 = distinct !DISubprogram(name: "choose_decoder", scope: !919, file: !919, line: 695, type: !8989, isLocal: true, isDefinition: true, scopeLine: 696, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!8989 = !DISubroutineType(types: !8990)
!8990 = !{!2861, !2116, !2364, !2562}
!8991 = !DILocalVariable(name: "o", arg: 1, scope: !8988, file: !919, line: 695, type: !2116)
!8992 = !DILocation(line: 695, column: 48, scope: !8988)
!8993 = !DILocalVariable(name: "s", arg: 2, scope: !8988, file: !919, line: 695, type: !2364)
!8994 = !DILocation(line: 695, column: 68, scope: !8988)
!8995 = !DILocalVariable(name: "st", arg: 3, scope: !8988, file: !919, line: 695, type: !2562)
!8996 = !DILocation(line: 695, column: 81, scope: !8988)
!8997 = !DILocalVariable(name: "codec_name", scope: !8988, file: !919, line: 697, type: !1105)
!8998 = !DILocation(line: 697, column: 11, scope: !8988)
!8999 = !DILocalVariable(name: "i", scope: !9000, file: !919, line: 699, type: !998)
!9000 = distinct !DILexicalBlock(scope: !8988, file: !919, line: 699, column: 5)
!9001 = !DILocation(line: 699, column: 11, scope: !9000)
!9002 = !DILocalVariable(name: "ret", scope: !9000, file: !919, line: 699, type: !998)
!9003 = !DILocation(line: 699, column: 14, scope: !9000)
!9004 = !DILocation(line: 699, column: 26, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !9000, file: !919, line: 699, column: 19)
!9006 = !DILocation(line: 699, column: 24, scope: !9005)
!9007 = !DILocation(line: 699, column: 31, scope: !9008)
!9008 = !DILexicalBlockFile(scope: !9009, file: !919, discriminator: 1)
!9009 = distinct !DILexicalBlock(scope: !9005, file: !919, line: 699, column: 19)
!9010 = !DILocation(line: 699, column: 35, scope: !9008)
!9011 = !DILocation(line: 699, column: 38, scope: !9008)
!9012 = !DILocation(line: 699, column: 33, scope: !9008)
!9013 = !DILocation(line: 699, column: 19, scope: !9008)
!9014 = !DILocalVariable(name: "spec", scope: !9015, file: !919, line: 699, type: !1105)
!9015 = distinct !DILexicalBlock(scope: !9009, file: !919, line: 699, column: 59)
!9016 = !DILocation(line: 699, column: 67, scope: !9015)
!9017 = !DILocation(line: 699, column: 89, scope: !9018)
!9018 = !DILexicalBlockFile(scope: !9015, file: !919, discriminator: 2)
!9019 = !DILocation(line: 699, column: 74, scope: !9018)
!9020 = !DILocation(line: 699, column: 77, scope: !9018)
!9021 = !DILocation(line: 699, column: 92, scope: !9018)
!9022 = !DILocation(line: 699, column: 67, scope: !9018)
!9023 = !DILocation(line: 699, column: 137, scope: !9018)
!9024 = !DILocation(line: 699, column: 140, scope: !9018)
!9025 = !DILocation(line: 699, column: 144, scope: !9018)
!9026 = !DILocation(line: 699, column: 114, scope: !9018)
!9027 = !DILocation(line: 699, column: 112, scope: !9018)
!9028 = !DILocation(line: 699, column: 151, scope: !9018)
!9029 = !DILocation(line: 699, column: 107, scope: !9018)
!9030 = !DILocation(line: 699, column: 184, scope: !9031)
!9031 = !DILexicalBlockFile(scope: !9032, file: !919, discriminator: 3)
!9032 = distinct !DILexicalBlock(scope: !9015, file: !919, line: 699, column: 107)
!9033 = !DILocation(line: 699, column: 169, scope: !9031)
!9034 = !DILocation(line: 699, column: 172, scope: !9031)
!9035 = !DILocation(line: 699, column: 187, scope: !9031)
!9036 = !DILocation(line: 699, column: 189, scope: !9031)
!9037 = !DILocation(line: 699, column: 167, scope: !9031)
!9038 = !DILocation(line: 699, column: 156, scope: !9031)
!9039 = !DILocation(line: 699, column: 203, scope: !9040)
!9040 = !DILexicalBlockFile(scope: !9041, file: !919, discriminator: 4)
!9041 = distinct !DILexicalBlock(scope: !9032, file: !919, line: 699, column: 203)
!9042 = !DILocation(line: 699, column: 207, scope: !9040)
!9043 = !DILocation(line: 699, column: 212, scope: !9044)
!9044 = !DILexicalBlockFile(scope: !9041, file: !919, discriminator: 5)
!9045 = !DILocation(line: 699, column: 229, scope: !9046)
!9046 = !DILexicalBlockFile(scope: !9015, file: !919, discriminator: 6)
!9047 = !DILocation(line: 699, column: 55, scope: !9048)
!9048 = !DILexicalBlockFile(scope: !9009, file: !919, discriminator: 7)
!9049 = !DILocation(line: 699, column: 19, scope: !9048)
!9050 = distinct !{!9050, !9051}
!9051 = !DILocation(line: 699, column: 19, scope: !9000)
!9052 = !DILocation(line: 700, column: 9, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !8988, file: !919, line: 700, column: 9)
!9054 = !DILocation(line: 700, column: 9, scope: !8988)
!9055 = !DILocalVariable(name: "codec", scope: !9056, file: !919, line: 701, type: !2861)
!9056 = distinct !DILexicalBlock(scope: !9053, file: !919, line: 700, column: 21)
!9057 = !DILocation(line: 701, column: 18, scope: !9056)
!9058 = !DILocation(line: 701, column: 44, scope: !9056)
!9059 = !DILocation(line: 701, column: 56, scope: !9056)
!9060 = !DILocation(line: 701, column: 60, scope: !9056)
!9061 = !DILocation(line: 701, column: 70, scope: !9056)
!9062 = !DILocation(line: 701, column: 26, scope: !9056)
!9063 = !DILocation(line: 702, column: 34, scope: !9056)
!9064 = !DILocation(line: 702, column: 41, scope: !9056)
!9065 = !DILocation(line: 702, column: 9, scope: !9056)
!9066 = !DILocation(line: 702, column: 13, scope: !9056)
!9067 = !DILocation(line: 702, column: 23, scope: !9056)
!9068 = !DILocation(line: 702, column: 32, scope: !9056)
!9069 = !DILocation(line: 703, column: 16, scope: !9056)
!9070 = !DILocation(line: 703, column: 9, scope: !9056)
!9071 = !DILocation(line: 705, column: 37, scope: !9053)
!9072 = !DILocation(line: 705, column: 41, scope: !9053)
!9073 = !DILocation(line: 705, column: 51, scope: !9053)
!9074 = !DILocation(line: 705, column: 16, scope: !9053)
!9075 = !DILocation(line: 705, column: 9, scope: !9053)
!9076 = !DILocation(line: 706, column: 1, scope: !8988)
!9077 = distinct !DISubprogram(name: "add_input_streams", scope: !919, file: !919, line: 710, type: !9078, isLocal: true, isDefinition: true, scopeLine: 711, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!9078 = !DISubroutineType(types: !9079)
!9079 = !{null, !2116, !2364}
!9080 = !DILocalVariable(name: "o", arg: 1, scope: !9077, file: !919, line: 710, type: !2116)
!9081 = !DILocation(line: 710, column: 47, scope: !9077)
!9082 = !DILocalVariable(name: "ic", arg: 2, scope: !9077, file: !919, line: 710, type: !2364)
!9083 = !DILocation(line: 710, column: 67, scope: !9077)
!9084 = !DILocalVariable(name: "i", scope: !9077, file: !919, line: 712, type: !998)
!9085 = !DILocation(line: 712, column: 9, scope: !9077)
!9086 = !DILocalVariable(name: "ret", scope: !9077, file: !919, line: 712, type: !998)
!9087 = !DILocation(line: 712, column: 12, scope: !9077)
!9088 = !DILocation(line: 714, column: 12, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9077, file: !919, line: 714, column: 5)
!9090 = !DILocation(line: 714, column: 10, scope: !9089)
!9091 = !DILocation(line: 714, column: 17, scope: !9092)
!9092 = !DILexicalBlockFile(scope: !9093, file: !919, discriminator: 1)
!9093 = distinct !DILexicalBlock(scope: !9089, file: !919, line: 714, column: 5)
!9094 = !DILocation(line: 714, column: 21, scope: !9092)
!9095 = !DILocation(line: 714, column: 25, scope: !9092)
!9096 = !DILocation(line: 714, column: 19, scope: !9092)
!9097 = !DILocation(line: 714, column: 5, scope: !9092)
!9098 = !DILocalVariable(name: "st", scope: !9099, file: !919, line: 715, type: !2562)
!9099 = distinct !DILexicalBlock(scope: !9093, file: !919, line: 714, column: 42)
!9100 = !DILocation(line: 715, column: 19, scope: !9099)
!9101 = !DILocation(line: 715, column: 36, scope: !9099)
!9102 = !DILocation(line: 715, column: 24, scope: !9099)
!9103 = !DILocation(line: 715, column: 28, scope: !9099)
!9104 = !DILocalVariable(name: "par", scope: !9099, file: !919, line: 716, type: !2586)
!9105 = !DILocation(line: 716, column: 28, scope: !9099)
!9106 = !DILocation(line: 716, column: 34, scope: !9099)
!9107 = !DILocation(line: 716, column: 38, scope: !9099)
!9108 = !DILocalVariable(name: "ist", scope: !9099, file: !919, line: 717, type: !4374)
!9109 = !DILocation(line: 717, column: 22, scope: !9099)
!9110 = !DILocation(line: 717, column: 28, scope: !9099)
!9111 = !DILocalVariable(name: "framerate", scope: !9099, file: !919, line: 718, type: !1105)
!9112 = !DILocation(line: 718, column: 15, scope: !9099)
!9113 = !DILocalVariable(name: "hwaccel_device", scope: !9099, file: !919, line: 718, type: !1105)
!9114 = !DILocation(line: 718, column: 33, scope: !9099)
!9115 = !DILocalVariable(name: "hwaccel", scope: !9099, file: !919, line: 719, type: !982)
!9116 = !DILocation(line: 719, column: 21, scope: !9099)
!9117 = !DILocalVariable(name: "hwaccel_output_format", scope: !9099, file: !919, line: 720, type: !1105)
!9118 = !DILocation(line: 720, column: 15, scope: !9099)
!9119 = !DILocalVariable(name: "codec_tag", scope: !9099, file: !919, line: 721, type: !1105)
!9120 = !DILocation(line: 721, column: 15, scope: !9099)
!9121 = !DILocalVariable(name: "next", scope: !9099, file: !919, line: 722, type: !1105)
!9122 = !DILocation(line: 722, column: 15, scope: !9099)
!9123 = !DILocalVariable(name: "discard_str", scope: !9099, file: !919, line: 723, type: !1105)
!9124 = !DILocation(line: 723, column: 15, scope: !9099)
!9125 = !DILocalVariable(name: "cc", scope: !9099, file: !919, line: 724, type: !976)
!9126 = !DILocation(line: 724, column: 24, scope: !9099)
!9127 = !DILocation(line: 724, column: 29, scope: !9099)
!9128 = !DILocalVariable(name: "discard_opt", scope: !9099, file: !919, line: 725, type: !3869)
!9129 = !DILocation(line: 725, column: 25, scope: !9099)
!9130 = !DILocation(line: 725, column: 51, scope: !9099)
!9131 = !DILocation(line: 725, column: 39, scope: !9099)
!9132 = !DILocation(line: 727, column: 14, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9099, file: !919, line: 727, column: 13)
!9134 = !DILocation(line: 727, column: 13, scope: !9099)
!9135 = !DILocation(line: 728, column: 13, scope: !9133)
!9136 = !DILocation(line: 730, column: 36, scope: !9099)
!9137 = !DILocation(line: 730, column: 94, scope: !9099)
!9138 = !DILocation(line: 730, column: 111, scope: !9099)
!9139 = !DILocation(line: 730, column: 25, scope: !9099)
!9140 = !DILocation(line: 730, column: 23, scope: !9099)
!9141 = !DILocation(line: 731, column: 47, scope: !9099)
!9142 = !DILocation(line: 731, column: 23, scope: !9099)
!9143 = !DILocation(line: 731, column: 40, scope: !9099)
!9144 = !DILocation(line: 731, column: 9, scope: !9099)
!9145 = !DILocation(line: 731, column: 45, scope: !9099)
!9146 = !DILocation(line: 733, column: 19, scope: !9099)
!9147 = !DILocation(line: 733, column: 9, scope: !9099)
!9148 = !DILocation(line: 733, column: 14, scope: !9099)
!9149 = !DILocation(line: 733, column: 17, scope: !9099)
!9150 = !DILocation(line: 734, column: 27, scope: !9099)
!9151 = !DILocation(line: 734, column: 9, scope: !9099)
!9152 = !DILocation(line: 734, column: 14, scope: !9099)
!9153 = !DILocation(line: 734, column: 25, scope: !9099)
!9154 = !DILocation(line: 735, column: 9, scope: !9099)
!9155 = !DILocation(line: 735, column: 14, scope: !9099)
!9156 = !DILocation(line: 735, column: 22, scope: !9099)
!9157 = !DILocation(line: 736, column: 9, scope: !9099)
!9158 = !DILocation(line: 736, column: 13, scope: !9099)
!9159 = !DILocation(line: 736, column: 21, scope: !9099)
!9160 = !DILocation(line: 737, column: 9, scope: !9099)
!9161 = !DILocation(line: 737, column: 14, scope: !9099)
!9162 = !DILocation(line: 737, column: 25, scope: !9099)
!9163 = !DILocation(line: 738, column: 9, scope: !9099)
!9164 = !DILocation(line: 738, column: 14, scope: !9099)
!9165 = !DILocation(line: 738, column: 22, scope: !9099)
!9166 = !DILocation(line: 739, column: 9, scope: !9099)
!9167 = !DILocation(line: 739, column: 14, scope: !9099)
!9168 = !DILocation(line: 739, column: 22, scope: !9099)
!9169 = !DILocation(line: 741, column: 9, scope: !9099)
!9170 = !DILocation(line: 741, column: 14, scope: !9099)
!9171 = !DILocation(line: 741, column: 23, scope: !9099)
!9172 = !DILocalVariable(name: "i", scope: !9173, file: !919, line: 742, type: !998)
!9173 = distinct !DILexicalBlock(scope: !9099, file: !919, line: 742, column: 9)
!9174 = !DILocation(line: 742, column: 15, scope: !9173)
!9175 = !DILocalVariable(name: "ret", scope: !9173, file: !919, line: 742, type: !998)
!9176 = !DILocation(line: 742, column: 18, scope: !9173)
!9177 = !DILocation(line: 742, column: 30, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9173, file: !919, line: 742, column: 23)
!9179 = !DILocation(line: 742, column: 28, scope: !9178)
!9180 = !DILocation(line: 742, column: 35, scope: !9181)
!9181 = !DILexicalBlockFile(scope: !9182, file: !919, discriminator: 1)
!9182 = distinct !DILexicalBlock(scope: !9178, file: !919, line: 742, column: 23)
!9183 = !DILocation(line: 742, column: 39, scope: !9181)
!9184 = !DILocation(line: 742, column: 42, scope: !9181)
!9185 = !DILocation(line: 742, column: 37, scope: !9181)
!9186 = !DILocation(line: 742, column: 23, scope: !9181)
!9187 = !DILocalVariable(name: "spec", scope: !9188, file: !919, line: 742, type: !1105)
!9188 = distinct !DILexicalBlock(scope: !9182, file: !919, line: 742, column: 60)
!9189 = !DILocation(line: 742, column: 68, scope: !9188)
!9190 = !DILocation(line: 742, column: 87, scope: !9191)
!9191 = !DILexicalBlockFile(scope: !9188, file: !919, discriminator: 2)
!9192 = !DILocation(line: 742, column: 75, scope: !9191)
!9193 = !DILocation(line: 742, column: 78, scope: !9191)
!9194 = !DILocation(line: 742, column: 90, scope: !9191)
!9195 = !DILocation(line: 742, column: 68, scope: !9191)
!9196 = !DILocation(line: 742, column: 135, scope: !9191)
!9197 = !DILocation(line: 742, column: 139, scope: !9191)
!9198 = !DILocation(line: 742, column: 143, scope: !9191)
!9199 = !DILocation(line: 742, column: 112, scope: !9191)
!9200 = !DILocation(line: 742, column: 110, scope: !9191)
!9201 = !DILocation(line: 742, column: 150, scope: !9191)
!9202 = !DILocation(line: 742, column: 105, scope: !9191)
!9203 = !DILocation(line: 742, column: 183, scope: !9204)
!9204 = !DILexicalBlockFile(scope: !9205, file: !919, discriminator: 3)
!9205 = distinct !DILexicalBlock(scope: !9188, file: !919, line: 742, column: 105)
!9206 = !DILocation(line: 742, column: 171, scope: !9204)
!9207 = !DILocation(line: 742, column: 174, scope: !9204)
!9208 = !DILocation(line: 742, column: 186, scope: !9204)
!9209 = !DILocation(line: 742, column: 188, scope: !9204)
!9210 = !DILocation(line: 742, column: 155, scope: !9204)
!9211 = !DILocation(line: 742, column: 160, scope: !9204)
!9212 = !DILocation(line: 742, column: 169, scope: !9204)
!9213 = !DILocation(line: 742, column: 202, scope: !9214)
!9214 = !DILexicalBlockFile(scope: !9215, file: !919, discriminator: 4)
!9215 = distinct !DILexicalBlock(scope: !9205, file: !919, line: 742, column: 202)
!9216 = !DILocation(line: 742, column: 206, scope: !9214)
!9217 = !DILocation(line: 742, column: 211, scope: !9218)
!9218 = !DILexicalBlockFile(scope: !9215, file: !919, discriminator: 5)
!9219 = !DILocation(line: 742, column: 228, scope: !9220)
!9220 = !DILexicalBlockFile(scope: !9188, file: !919, discriminator: 6)
!9221 = !DILocation(line: 742, column: 56, scope: !9222)
!9222 = !DILexicalBlockFile(scope: !9182, file: !919, discriminator: 7)
!9223 = !DILocation(line: 742, column: 23, scope: !9222)
!9224 = distinct !{!9224, !9225}
!9225 = !DILocation(line: 742, column: 23, scope: !9173)
!9226 = !DILocation(line: 744, column: 9, scope: !9099)
!9227 = !DILocation(line: 744, column: 14, scope: !9099)
!9228 = !DILocation(line: 744, column: 25, scope: !9099)
!9229 = !DILocalVariable(name: "i", scope: !9230, file: !919, line: 745, type: !998)
!9230 = distinct !DILexicalBlock(scope: !9099, file: !919, line: 745, column: 9)
!9231 = !DILocation(line: 745, column: 15, scope: !9230)
!9232 = !DILocalVariable(name: "ret", scope: !9230, file: !919, line: 745, type: !998)
!9233 = !DILocation(line: 745, column: 18, scope: !9230)
!9234 = !DILocation(line: 745, column: 30, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9230, file: !919, line: 745, column: 23)
!9236 = !DILocation(line: 745, column: 28, scope: !9235)
!9237 = !DILocation(line: 745, column: 35, scope: !9238)
!9238 = !DILexicalBlockFile(scope: !9239, file: !919, discriminator: 1)
!9239 = distinct !DILexicalBlock(scope: !9235, file: !919, line: 745, column: 23)
!9240 = !DILocation(line: 745, column: 39, scope: !9238)
!9241 = !DILocation(line: 745, column: 42, scope: !9238)
!9242 = !DILocation(line: 745, column: 37, scope: !9238)
!9243 = !DILocation(line: 745, column: 23, scope: !9238)
!9244 = !DILocalVariable(name: "spec", scope: !9245, file: !919, line: 745, type: !1105)
!9245 = distinct !DILexicalBlock(scope: !9239, file: !919, line: 745, column: 62)
!9246 = !DILocation(line: 745, column: 70, scope: !9245)
!9247 = !DILocation(line: 745, column: 91, scope: !9248)
!9248 = !DILexicalBlockFile(scope: !9245, file: !919, discriminator: 2)
!9249 = !DILocation(line: 745, column: 77, scope: !9248)
!9250 = !DILocation(line: 745, column: 80, scope: !9248)
!9251 = !DILocation(line: 745, column: 94, scope: !9248)
!9252 = !DILocation(line: 745, column: 70, scope: !9248)
!9253 = !DILocation(line: 745, column: 139, scope: !9248)
!9254 = !DILocation(line: 745, column: 143, scope: !9248)
!9255 = !DILocation(line: 745, column: 147, scope: !9248)
!9256 = !DILocation(line: 745, column: 116, scope: !9248)
!9257 = !DILocation(line: 745, column: 114, scope: !9248)
!9258 = !DILocation(line: 745, column: 154, scope: !9248)
!9259 = !DILocation(line: 745, column: 109, scope: !9248)
!9260 = !DILocation(line: 745, column: 191, scope: !9261)
!9261 = !DILexicalBlockFile(scope: !9262, file: !919, discriminator: 3)
!9262 = distinct !DILexicalBlock(scope: !9245, file: !919, line: 745, column: 109)
!9263 = !DILocation(line: 745, column: 177, scope: !9261)
!9264 = !DILocation(line: 745, column: 180, scope: !9261)
!9265 = !DILocation(line: 745, column: 194, scope: !9261)
!9266 = !DILocation(line: 745, column: 196, scope: !9261)
!9267 = !DILocation(line: 745, column: 159, scope: !9261)
!9268 = !DILocation(line: 745, column: 164, scope: !9261)
!9269 = !DILocation(line: 745, column: 175, scope: !9261)
!9270 = !DILocation(line: 745, column: 208, scope: !9271)
!9271 = !DILexicalBlockFile(scope: !9272, file: !919, discriminator: 4)
!9272 = distinct !DILexicalBlock(scope: !9262, file: !919, line: 745, column: 208)
!9273 = !DILocation(line: 745, column: 212, scope: !9271)
!9274 = !DILocation(line: 745, column: 217, scope: !9275)
!9275 = !DILexicalBlockFile(scope: !9272, file: !919, discriminator: 5)
!9276 = !DILocation(line: 745, column: 234, scope: !9277)
!9277 = !DILexicalBlockFile(scope: !9245, file: !919, discriminator: 6)
!9278 = !DILocation(line: 745, column: 58, scope: !9279)
!9279 = !DILexicalBlockFile(scope: !9239, file: !919, discriminator: 7)
!9280 = !DILocation(line: 745, column: 23, scope: !9279)
!9281 = distinct !{!9281, !9282}
!9282 = !DILocation(line: 745, column: 23, scope: !9230)
!9283 = !DILocalVariable(name: "i", scope: !9284, file: !919, line: 747, type: !998)
!9284 = distinct !DILexicalBlock(scope: !9099, file: !919, line: 747, column: 9)
!9285 = !DILocation(line: 747, column: 15, scope: !9284)
!9286 = !DILocalVariable(name: "ret", scope: !9284, file: !919, line: 747, type: !998)
!9287 = !DILocation(line: 747, column: 18, scope: !9284)
!9288 = !DILocation(line: 747, column: 30, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9284, file: !919, line: 747, column: 23)
!9290 = !DILocation(line: 747, column: 28, scope: !9289)
!9291 = !DILocation(line: 747, column: 35, scope: !9292)
!9292 = !DILexicalBlockFile(scope: !9293, file: !919, discriminator: 1)
!9293 = distinct !DILexicalBlock(scope: !9289, file: !919, line: 747, column: 23)
!9294 = !DILocation(line: 747, column: 39, scope: !9292)
!9295 = !DILocation(line: 747, column: 42, scope: !9292)
!9296 = !DILocation(line: 747, column: 37, scope: !9292)
!9297 = !DILocation(line: 747, column: 23, scope: !9292)
!9298 = !DILocalVariable(name: "spec", scope: !9299, file: !919, line: 747, type: !1105)
!9299 = distinct !DILexicalBlock(scope: !9293, file: !919, line: 747, column: 62)
!9300 = !DILocation(line: 747, column: 70, scope: !9299)
!9301 = !DILocation(line: 747, column: 91, scope: !9302)
!9302 = !DILexicalBlockFile(scope: !9299, file: !919, discriminator: 2)
!9303 = !DILocation(line: 747, column: 77, scope: !9302)
!9304 = !DILocation(line: 747, column: 80, scope: !9302)
!9305 = !DILocation(line: 747, column: 94, scope: !9302)
!9306 = !DILocation(line: 747, column: 70, scope: !9302)
!9307 = !DILocation(line: 747, column: 139, scope: !9302)
!9308 = !DILocation(line: 747, column: 143, scope: !9302)
!9309 = !DILocation(line: 747, column: 147, scope: !9302)
!9310 = !DILocation(line: 747, column: 116, scope: !9302)
!9311 = !DILocation(line: 747, column: 114, scope: !9302)
!9312 = !DILocation(line: 747, column: 154, scope: !9302)
!9313 = !DILocation(line: 747, column: 109, scope: !9302)
!9314 = !DILocation(line: 747, column: 185, scope: !9315)
!9315 = !DILexicalBlockFile(scope: !9316, file: !919, discriminator: 3)
!9316 = distinct !DILexicalBlock(scope: !9299, file: !919, line: 747, column: 109)
!9317 = !DILocation(line: 747, column: 171, scope: !9315)
!9318 = !DILocation(line: 747, column: 174, scope: !9315)
!9319 = !DILocation(line: 747, column: 188, scope: !9315)
!9320 = !DILocation(line: 747, column: 190, scope: !9315)
!9321 = !DILocation(line: 747, column: 169, scope: !9315)
!9322 = !DILocation(line: 747, column: 159, scope: !9315)
!9323 = !DILocation(line: 747, column: 204, scope: !9324)
!9324 = !DILexicalBlockFile(scope: !9325, file: !919, discriminator: 4)
!9325 = distinct !DILexicalBlock(scope: !9316, file: !919, line: 747, column: 204)
!9326 = !DILocation(line: 747, column: 208, scope: !9324)
!9327 = !DILocation(line: 747, column: 213, scope: !9328)
!9328 = !DILexicalBlockFile(scope: !9325, file: !919, discriminator: 5)
!9329 = !DILocation(line: 747, column: 230, scope: !9330)
!9330 = !DILexicalBlockFile(scope: !9299, file: !919, discriminator: 6)
!9331 = !DILocation(line: 747, column: 58, scope: !9332)
!9332 = !DILexicalBlockFile(scope: !9293, file: !919, discriminator: 7)
!9333 = !DILocation(line: 747, column: 23, scope: !9332)
!9334 = distinct !{!9334, !9335}
!9335 = !DILocation(line: 747, column: 23, scope: !9284)
!9336 = !DILocation(line: 748, column: 13, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9099, file: !919, line: 748, column: 13)
!9338 = !DILocation(line: 748, column: 13, scope: !9099)
!9339 = !DILocalVariable(name: "tag", scope: !9340, file: !919, line: 749, type: !1338)
!9340 = distinct !DILexicalBlock(scope: !9337, file: !919, line: 748, column: 24)
!9341 = !DILocation(line: 749, column: 22, scope: !9340)
!9342 = !DILocation(line: 749, column: 35, scope: !9340)
!9343 = !DILocation(line: 749, column: 28, scope: !9340)
!9344 = !DILocation(line: 750, column: 18, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9340, file: !919, line: 750, column: 17)
!9346 = !DILocation(line: 750, column: 17, scope: !9345)
!9347 = !DILocation(line: 750, column: 17, scope: !9340)
!9348 = !DILocation(line: 751, column: 55, scope: !9345)
!9349 = !DILocation(line: 751, column: 68, scope: !9345)
!9350 = !DILocation(line: 751, column: 21, scope: !9345)
!9351 = !DILocation(line: 751, column: 17, scope: !9345)
!9352 = !DILocation(line: 752, column: 39, scope: !9340)
!9353 = !DILocation(line: 752, column: 13, scope: !9340)
!9354 = !DILocation(line: 752, column: 17, scope: !9340)
!9355 = !DILocation(line: 752, column: 27, scope: !9340)
!9356 = !DILocation(line: 752, column: 37, scope: !9340)
!9357 = !DILocation(line: 753, column: 9, scope: !9340)
!9358 = !DILocation(line: 755, column: 35, scope: !9099)
!9359 = !DILocation(line: 755, column: 38, scope: !9099)
!9360 = !DILocation(line: 755, column: 42, scope: !9099)
!9361 = !DILocation(line: 755, column: 20, scope: !9099)
!9362 = !DILocation(line: 755, column: 9, scope: !9099)
!9363 = !DILocation(line: 755, column: 14, scope: !9099)
!9364 = !DILocation(line: 755, column: 18, scope: !9099)
!9365 = !DILocation(line: 756, column: 47, scope: !9099)
!9366 = !DILocation(line: 756, column: 50, scope: !9099)
!9367 = !DILocation(line: 756, column: 53, scope: !9099)
!9368 = !DILocation(line: 756, column: 65, scope: !9099)
!9369 = !DILocation(line: 756, column: 70, scope: !9099)
!9370 = !DILocation(line: 756, column: 74, scope: !9099)
!9371 = !DILocation(line: 756, column: 84, scope: !9099)
!9372 = !DILocation(line: 756, column: 94, scope: !9099)
!9373 = !DILocation(line: 756, column: 98, scope: !9099)
!9374 = !DILocation(line: 756, column: 102, scope: !9099)
!9375 = !DILocation(line: 756, column: 107, scope: !9099)
!9376 = !DILocation(line: 756, column: 29, scope: !9099)
!9377 = !DILocation(line: 756, column: 9, scope: !9099)
!9378 = !DILocation(line: 756, column: 14, scope: !9099)
!9379 = !DILocation(line: 756, column: 27, scope: !9099)
!9380 = !DILocation(line: 758, column: 9, scope: !9099)
!9381 = !DILocation(line: 758, column: 14, scope: !9099)
!9382 = !DILocation(line: 758, column: 29, scope: !9099)
!9383 = !DILocalVariable(name: "i", scope: !9384, file: !919, line: 759, type: !998)
!9384 = distinct !DILexicalBlock(scope: !9099, file: !919, line: 759, column: 9)
!9385 = !DILocation(line: 759, column: 15, scope: !9384)
!9386 = !DILocalVariable(name: "ret", scope: !9384, file: !919, line: 759, type: !998)
!9387 = !DILocation(line: 759, column: 18, scope: !9384)
!9388 = !DILocation(line: 759, column: 30, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9384, file: !919, line: 759, column: 23)
!9390 = !DILocation(line: 759, column: 28, scope: !9389)
!9391 = !DILocation(line: 759, column: 35, scope: !9392)
!9392 = !DILexicalBlockFile(scope: !9393, file: !919, discriminator: 1)
!9393 = distinct !DILexicalBlock(scope: !9389, file: !919, line: 759, column: 23)
!9394 = !DILocation(line: 759, column: 39, scope: !9392)
!9395 = !DILocation(line: 759, column: 42, scope: !9392)
!9396 = !DILocation(line: 759, column: 37, scope: !9392)
!9397 = !DILocation(line: 759, column: 23, scope: !9392)
!9398 = !DILocalVariable(name: "spec", scope: !9399, file: !919, line: 759, type: !1105)
!9399 = distinct !DILexicalBlock(scope: !9393, file: !919, line: 759, column: 66)
!9400 = !DILocation(line: 759, column: 74, scope: !9399)
!9401 = !DILocation(line: 759, column: 99, scope: !9402)
!9402 = !DILexicalBlockFile(scope: !9399, file: !919, discriminator: 2)
!9403 = !DILocation(line: 759, column: 81, scope: !9402)
!9404 = !DILocation(line: 759, column: 84, scope: !9402)
!9405 = !DILocation(line: 759, column: 102, scope: !9402)
!9406 = !DILocation(line: 759, column: 74, scope: !9402)
!9407 = !DILocation(line: 759, column: 147, scope: !9402)
!9408 = !DILocation(line: 759, column: 151, scope: !9402)
!9409 = !DILocation(line: 759, column: 155, scope: !9402)
!9410 = !DILocation(line: 759, column: 124, scope: !9402)
!9411 = !DILocation(line: 759, column: 122, scope: !9402)
!9412 = !DILocation(line: 759, column: 162, scope: !9402)
!9413 = !DILocation(line: 759, column: 117, scope: !9402)
!9414 = !DILocation(line: 759, column: 207, scope: !9415)
!9415 = !DILexicalBlockFile(scope: !9416, file: !919, discriminator: 3)
!9416 = distinct !DILexicalBlock(scope: !9399, file: !919, line: 759, column: 117)
!9417 = !DILocation(line: 759, column: 189, scope: !9415)
!9418 = !DILocation(line: 759, column: 192, scope: !9415)
!9419 = !DILocation(line: 759, column: 210, scope: !9415)
!9420 = !DILocation(line: 759, column: 212, scope: !9415)
!9421 = !DILocation(line: 759, column: 167, scope: !9415)
!9422 = !DILocation(line: 759, column: 172, scope: !9415)
!9423 = !DILocation(line: 759, column: 187, scope: !9415)
!9424 = !DILocation(line: 759, column: 224, scope: !9425)
!9425 = !DILexicalBlockFile(scope: !9426, file: !919, discriminator: 4)
!9426 = distinct !DILexicalBlock(scope: !9416, file: !919, line: 759, column: 224)
!9427 = !DILocation(line: 759, column: 228, scope: !9425)
!9428 = !DILocation(line: 759, column: 233, scope: !9429)
!9429 = !DILexicalBlockFile(scope: !9426, file: !919, discriminator: 5)
!9430 = !DILocation(line: 759, column: 250, scope: !9431)
!9431 = !DILexicalBlockFile(scope: !9399, file: !919, discriminator: 6)
!9432 = !DILocation(line: 759, column: 62, scope: !9433)
!9433 = !DILexicalBlockFile(scope: !9393, file: !919, discriminator: 7)
!9434 = !DILocation(line: 759, column: 23, scope: !9433)
!9435 = distinct !{!9435, !9436}
!9436 = !DILocation(line: 759, column: 23, scope: !9384)
!9437 = !DILocalVariable(name: "i", scope: !9438, file: !919, line: 761, type: !998)
!9438 = distinct !DILexicalBlock(scope: !9099, file: !919, line: 761, column: 9)
!9439 = !DILocation(line: 761, column: 15, scope: !9438)
!9440 = !DILocalVariable(name: "ret", scope: !9438, file: !919, line: 761, type: !998)
!9441 = !DILocation(line: 761, column: 18, scope: !9438)
!9442 = !DILocation(line: 761, column: 30, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9438, file: !919, line: 761, column: 23)
!9444 = !DILocation(line: 761, column: 28, scope: !9443)
!9445 = !DILocation(line: 761, column: 35, scope: !9446)
!9446 = !DILexicalBlockFile(scope: !9447, file: !919, discriminator: 1)
!9447 = distinct !DILexicalBlock(scope: !9443, file: !919, line: 761, column: 23)
!9448 = !DILocation(line: 761, column: 39, scope: !9446)
!9449 = !DILocation(line: 761, column: 42, scope: !9446)
!9450 = !DILocation(line: 761, column: 37, scope: !9446)
!9451 = !DILocation(line: 761, column: 23, scope: !9446)
!9452 = !DILocalVariable(name: "spec", scope: !9453, file: !919, line: 761, type: !1105)
!9453 = distinct !DILexicalBlock(scope: !9447, file: !919, line: 761, column: 59)
!9454 = !DILocation(line: 761, column: 67, scope: !9453)
!9455 = !DILocation(line: 761, column: 85, scope: !9456)
!9456 = !DILexicalBlockFile(scope: !9453, file: !919, discriminator: 2)
!9457 = !DILocation(line: 761, column: 74, scope: !9456)
!9458 = !DILocation(line: 761, column: 77, scope: !9456)
!9459 = !DILocation(line: 761, column: 88, scope: !9456)
!9460 = !DILocation(line: 761, column: 67, scope: !9456)
!9461 = !DILocation(line: 761, column: 133, scope: !9456)
!9462 = !DILocation(line: 761, column: 137, scope: !9456)
!9463 = !DILocation(line: 761, column: 141, scope: !9456)
!9464 = !DILocation(line: 761, column: 110, scope: !9456)
!9465 = !DILocation(line: 761, column: 108, scope: !9456)
!9466 = !DILocation(line: 761, column: 148, scope: !9456)
!9467 = !DILocation(line: 761, column: 103, scope: !9456)
!9468 = !DILocation(line: 761, column: 178, scope: !9469)
!9469 = !DILexicalBlockFile(scope: !9470, file: !919, discriminator: 3)
!9470 = distinct !DILexicalBlock(scope: !9453, file: !919, line: 761, column: 103)
!9471 = !DILocation(line: 761, column: 167, scope: !9469)
!9472 = !DILocation(line: 761, column: 170, scope: !9469)
!9473 = !DILocation(line: 761, column: 181, scope: !9469)
!9474 = !DILocation(line: 761, column: 183, scope: !9469)
!9475 = !DILocation(line: 761, column: 165, scope: !9469)
!9476 = !DILocation(line: 761, column: 153, scope: !9469)
!9477 = !DILocation(line: 761, column: 197, scope: !9478)
!9478 = !DILexicalBlockFile(scope: !9479, file: !919, discriminator: 4)
!9479 = distinct !DILexicalBlock(scope: !9470, file: !919, line: 761, column: 197)
!9480 = !DILocation(line: 761, column: 201, scope: !9478)
!9481 = !DILocation(line: 761, column: 206, scope: !9482)
!9482 = !DILexicalBlockFile(scope: !9479, file: !919, discriminator: 5)
!9483 = !DILocation(line: 761, column: 223, scope: !9484)
!9484 = !DILexicalBlockFile(scope: !9453, file: !919, discriminator: 6)
!9485 = !DILocation(line: 761, column: 55, scope: !9486)
!9486 = !DILexicalBlockFile(scope: !9447, file: !919, discriminator: 7)
!9487 = !DILocation(line: 761, column: 23, scope: !9486)
!9488 = distinct !{!9488, !9489}
!9489 = !DILocation(line: 761, column: 23, scope: !9438)
!9490 = !DILocation(line: 762, column: 9, scope: !9099)
!9491 = !DILocation(line: 762, column: 14, scope: !9099)
!9492 = !DILocation(line: 762, column: 31, scope: !9099)
!9493 = !DILocation(line: 764, column: 14, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9099, file: !919, line: 764, column: 13)
!9495 = !DILocation(line: 764, column: 17, scope: !9494)
!9496 = !DILocation(line: 764, column: 31, scope: !9494)
!9497 = !DILocation(line: 764, column: 34, scope: !9498)
!9498 = !DILexicalBlockFile(scope: !9494, file: !919, discriminator: 1)
!9499 = !DILocation(line: 764, column: 39, scope: !9498)
!9500 = !DILocation(line: 764, column: 43, scope: !9498)
!9501 = !DILocation(line: 764, column: 53, scope: !9498)
!9502 = !DILocation(line: 764, column: 64, scope: !9498)
!9503 = !DILocation(line: 764, column: 87, scope: !9498)
!9504 = !DILocation(line: 765, column: 14, scope: !9494)
!9505 = !DILocation(line: 765, column: 17, scope: !9494)
!9506 = !DILocation(line: 765, column: 31, scope: !9494)
!9507 = !DILocation(line: 765, column: 34, scope: !9498)
!9508 = !DILocation(line: 765, column: 39, scope: !9498)
!9509 = !DILocation(line: 765, column: 43, scope: !9498)
!9510 = !DILocation(line: 765, column: 53, scope: !9498)
!9511 = !DILocation(line: 765, column: 64, scope: !9498)
!9512 = !DILocation(line: 765, column: 87, scope: !9498)
!9513 = !DILocation(line: 766, column: 14, scope: !9494)
!9514 = !DILocation(line: 766, column: 17, scope: !9494)
!9515 = !DILocation(line: 766, column: 34, scope: !9494)
!9516 = !DILocation(line: 766, column: 37, scope: !9498)
!9517 = !DILocation(line: 766, column: 42, scope: !9498)
!9518 = !DILocation(line: 766, column: 46, scope: !9498)
!9519 = !DILocation(line: 766, column: 56, scope: !9498)
!9520 = !DILocation(line: 766, column: 67, scope: !9498)
!9521 = !DILocation(line: 766, column: 93, scope: !9498)
!9522 = !DILocation(line: 767, column: 14, scope: !9494)
!9523 = !DILocation(line: 767, column: 17, scope: !9494)
!9524 = !DILocation(line: 767, column: 30, scope: !9494)
!9525 = !DILocation(line: 767, column: 33, scope: !9498)
!9526 = !DILocation(line: 767, column: 38, scope: !9498)
!9527 = !DILocation(line: 767, column: 42, scope: !9498)
!9528 = !DILocation(line: 767, column: 52, scope: !9498)
!9529 = !DILocation(line: 767, column: 63, scope: !9498)
!9530 = !DILocation(line: 764, column: 13, scope: !9531)
!9531 = !DILexicalBlockFile(scope: !9099, file: !919, discriminator: 2)
!9532 = !DILocation(line: 768, column: 17, scope: !9494)
!9533 = !DILocation(line: 768, column: 22, scope: !9494)
!9534 = !DILocation(line: 768, column: 39, scope: !9494)
!9535 = !DILocation(line: 770, column: 13, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9099, file: !919, line: 770, column: 13)
!9537 = !DILocation(line: 770, column: 25, scope: !9536)
!9538 = !DILocation(line: 770, column: 44, scope: !9539)
!9539 = !DILexicalBlockFile(scope: !9536, file: !919, discriminator: 1)
!9540 = !DILocation(line: 770, column: 49, scope: !9539)
!9541 = !DILocation(line: 770, column: 62, scope: !9539)
!9542 = !DILocation(line: 770, column: 76, scope: !9539)
!9543 = !DILocation(line: 770, column: 81, scope: !9539)
!9544 = !DILocation(line: 770, column: 28, scope: !9539)
!9545 = !DILocation(line: 770, column: 99, scope: !9539)
!9546 = !DILocation(line: 770, column: 13, scope: !9539)
!9547 = !DILocation(line: 772, column: 21, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9536, file: !919, line: 770, column: 104)
!9549 = !DILocation(line: 771, column: 13, scope: !9548)
!9550 = !DILocation(line: 773, column: 13, scope: !9548)
!9551 = !DILocation(line: 776, column: 9, scope: !9099)
!9552 = !DILocation(line: 776, column: 14, scope: !9099)
!9553 = !DILocation(line: 776, column: 43, scope: !9099)
!9554 = !DILocation(line: 778, column: 47, scope: !9099)
!9555 = !DILocation(line: 778, column: 52, scope: !9099)
!9556 = !DILocation(line: 778, column: 24, scope: !9099)
!9557 = !DILocation(line: 778, column: 9, scope: !9099)
!9558 = !DILocation(line: 778, column: 14, scope: !9099)
!9559 = !DILocation(line: 778, column: 22, scope: !9099)
!9560 = !DILocation(line: 779, column: 14, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9099, file: !919, line: 779, column: 13)
!9562 = !DILocation(line: 779, column: 19, scope: !9561)
!9563 = !DILocation(line: 779, column: 13, scope: !9099)
!9564 = !DILocation(line: 780, column: 13, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9561, file: !919, line: 779, column: 28)
!9566 = !DILocation(line: 781, column: 13, scope: !9565)
!9567 = !DILocation(line: 784, column: 45, scope: !9099)
!9568 = !DILocation(line: 784, column: 50, scope: !9099)
!9569 = !DILocation(line: 784, column: 59, scope: !9099)
!9570 = !DILocation(line: 784, column: 15, scope: !9099)
!9571 = !DILocation(line: 784, column: 13, scope: !9099)
!9572 = !DILocation(line: 785, column: 13, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9099, file: !919, line: 785, column: 13)
!9574 = !DILocation(line: 785, column: 17, scope: !9573)
!9575 = !DILocation(line: 785, column: 13, scope: !9099)
!9576 = !DILocation(line: 786, column: 13, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9573, file: !919, line: 785, column: 22)
!9578 = !DILocation(line: 787, column: 13, scope: !9577)
!9579 = !DILocation(line: 790, column: 13, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9099, file: !919, line: 790, column: 13)
!9581 = !DILocation(line: 790, column: 16, scope: !9580)
!9582 = !DILocation(line: 790, column: 13, scope: !9099)
!9583 = !DILocation(line: 791, column: 13, scope: !9580)
!9584 = !DILocation(line: 791, column: 18, scope: !9580)
!9585 = !DILocation(line: 791, column: 27, scope: !9580)
!9586 = !DILocation(line: 791, column: 33, scope: !9580)
!9587 = !DILocation(line: 793, column: 17, scope: !9099)
!9588 = !DILocation(line: 793, column: 22, scope: !9099)
!9589 = !DILocation(line: 793, column: 9, scope: !9099)
!9590 = !DILocation(line: 795, column: 17, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9592, file: !919, line: 795, column: 16)
!9592 = distinct !DILexicalBlock(scope: !9099, file: !919, line: 793, column: 34)
!9593 = !DILocation(line: 795, column: 22, scope: !9591)
!9594 = !DILocation(line: 795, column: 16, scope: !9592)
!9595 = !DILocation(line: 796, column: 49, scope: !9591)
!9596 = !DILocation(line: 796, column: 54, scope: !9591)
!9597 = !DILocation(line: 796, column: 28, scope: !9591)
!9598 = !DILocation(line: 796, column: 17, scope: !9591)
!9599 = !DILocation(line: 796, column: 22, scope: !9591)
!9600 = !DILocation(line: 796, column: 26, scope: !9591)
!9601 = !DILocation(line: 798, column: 17, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9592, file: !919, line: 798, column: 17)
!9603 = !DILocation(line: 798, column: 21, scope: !9602)
!9604 = !DILocation(line: 798, column: 28, scope: !9602)
!9605 = !DILocation(line: 798, column: 17, scope: !9592)
!9606 = !DILocation(line: 799, column: 40, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9602, file: !919, line: 798, column: 36)
!9608 = !DILocation(line: 799, column: 44, scope: !9607)
!9609 = !DILocation(line: 799, column: 51, scope: !9607)
!9610 = !DILocation(line: 799, column: 17, scope: !9607)
!9611 = !DILocation(line: 799, column: 22, scope: !9607)
!9612 = !DILocation(line: 799, column: 31, scope: !9607)
!9613 = !DILocation(line: 799, column: 38, scope: !9607)
!9614 = !DILocation(line: 800, column: 39, scope: !9607)
!9615 = !DILocation(line: 800, column: 43, scope: !9607)
!9616 = !DILocation(line: 800, column: 50, scope: !9607)
!9617 = !DILocation(line: 800, column: 17, scope: !9607)
!9618 = !DILocation(line: 800, column: 22, scope: !9607)
!9619 = !DILocation(line: 800, column: 31, scope: !9607)
!9620 = !DILocation(line: 800, column: 37, scope: !9607)
!9621 = !DILocation(line: 801, column: 40, scope: !9607)
!9622 = !DILocation(line: 801, column: 44, scope: !9607)
!9623 = !DILocation(line: 801, column: 51, scope: !9607)
!9624 = !DILocation(line: 801, column: 17, scope: !9607)
!9625 = !DILocation(line: 801, column: 22, scope: !9607)
!9626 = !DILocation(line: 801, column: 31, scope: !9607)
!9627 = !DILocation(line: 801, column: 38, scope: !9607)
!9628 = !DILocation(line: 802, column: 45, scope: !9607)
!9629 = !DILocation(line: 802, column: 49, scope: !9607)
!9630 = !DILocation(line: 802, column: 56, scope: !9607)
!9631 = !DILocation(line: 802, column: 17, scope: !9607)
!9632 = !DILocation(line: 802, column: 22, scope: !9607)
!9633 = !DILocation(line: 802, column: 31, scope: !9607)
!9634 = !DILocation(line: 802, column: 43, scope: !9607)
!9635 = !DILocation(line: 803, column: 46, scope: !9607)
!9636 = !DILocation(line: 803, column: 50, scope: !9607)
!9637 = !DILocation(line: 803, column: 57, scope: !9607)
!9638 = !DILocation(line: 803, column: 17, scope: !9607)
!9639 = !DILocation(line: 803, column: 22, scope: !9607)
!9640 = !DILocation(line: 803, column: 31, scope: !9607)
!9641 = !DILocation(line: 803, column: 44, scope: !9607)
!9642 = !DILocation(line: 804, column: 13, scope: !9607)
!9643 = !DILocation(line: 808, column: 13, scope: !9592)
!9644 = !DILocation(line: 808, column: 18, scope: !9592)
!9645 = !DILocation(line: 808, column: 27, scope: !9592)
!9646 = !DILocation(line: 808, column: 39, scope: !9592)
!9647 = !DILocation(line: 808, column: 43, scope: !9592)
!9648 = !DILocalVariable(name: "i", scope: !9649, file: !919, line: 810, type: !998)
!9649 = distinct !DILexicalBlock(scope: !9592, file: !919, line: 810, column: 13)
!9650 = !DILocation(line: 810, column: 19, scope: !9649)
!9651 = !DILocalVariable(name: "ret", scope: !9649, file: !919, line: 810, type: !998)
!9652 = !DILocation(line: 810, column: 22, scope: !9649)
!9653 = !DILocation(line: 810, column: 34, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9649, file: !919, line: 810, column: 27)
!9655 = !DILocation(line: 810, column: 32, scope: !9654)
!9656 = !DILocation(line: 810, column: 39, scope: !9657)
!9657 = !DILexicalBlockFile(scope: !9658, file: !919, discriminator: 1)
!9658 = distinct !DILexicalBlock(scope: !9654, file: !919, line: 810, column: 27)
!9659 = !DILocation(line: 810, column: 43, scope: !9657)
!9660 = !DILocation(line: 810, column: 46, scope: !9657)
!9661 = !DILocation(line: 810, column: 41, scope: !9657)
!9662 = !DILocation(line: 810, column: 27, scope: !9657)
!9663 = !DILocalVariable(name: "spec", scope: !9664, file: !919, line: 810, type: !1105)
!9664 = distinct !DILexicalBlock(scope: !9658, file: !919, line: 810, column: 67)
!9665 = !DILocation(line: 810, column: 75, scope: !9664)
!9666 = !DILocation(line: 810, column: 97, scope: !9667)
!9667 = !DILexicalBlockFile(scope: !9664, file: !919, discriminator: 2)
!9668 = !DILocation(line: 810, column: 82, scope: !9667)
!9669 = !DILocation(line: 810, column: 85, scope: !9667)
!9670 = !DILocation(line: 810, column: 100, scope: !9667)
!9671 = !DILocation(line: 810, column: 75, scope: !9667)
!9672 = !DILocation(line: 810, column: 145, scope: !9667)
!9673 = !DILocation(line: 810, column: 149, scope: !9667)
!9674 = !DILocation(line: 810, column: 153, scope: !9667)
!9675 = !DILocation(line: 810, column: 122, scope: !9667)
!9676 = !DILocation(line: 810, column: 120, scope: !9667)
!9677 = !DILocation(line: 810, column: 160, scope: !9667)
!9678 = !DILocation(line: 810, column: 115, scope: !9667)
!9679 = !DILocation(line: 810, column: 192, scope: !9680)
!9680 = !DILexicalBlockFile(scope: !9681, file: !919, discriminator: 3)
!9681 = distinct !DILexicalBlock(scope: !9664, file: !919, line: 810, column: 115)
!9682 = !DILocation(line: 810, column: 177, scope: !9680)
!9683 = !DILocation(line: 810, column: 180, scope: !9680)
!9684 = !DILocation(line: 810, column: 195, scope: !9680)
!9685 = !DILocation(line: 810, column: 197, scope: !9680)
!9686 = !DILocation(line: 810, column: 175, scope: !9680)
!9687 = !DILocation(line: 810, column: 165, scope: !9680)
!9688 = !DILocation(line: 810, column: 211, scope: !9689)
!9689 = !DILexicalBlockFile(scope: !9690, file: !919, discriminator: 4)
!9690 = distinct !DILexicalBlock(scope: !9681, file: !919, line: 810, column: 211)
!9691 = !DILocation(line: 810, column: 215, scope: !9689)
!9692 = !DILocation(line: 810, column: 220, scope: !9693)
!9693 = !DILexicalBlockFile(scope: !9690, file: !919, discriminator: 5)
!9694 = !DILocation(line: 810, column: 237, scope: !9695)
!9695 = !DILexicalBlockFile(scope: !9664, file: !919, discriminator: 6)
!9696 = !DILocation(line: 810, column: 63, scope: !9697)
!9697 = !DILexicalBlockFile(scope: !9658, file: !919, discriminator: 7)
!9698 = !DILocation(line: 810, column: 27, scope: !9697)
!9699 = distinct !{!9699, !9700}
!9700 = !DILocation(line: 810, column: 27, scope: !9649)
!9701 = !DILocation(line: 811, column: 17, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9592, file: !919, line: 811, column: 17)
!9703 = !DILocation(line: 811, column: 27, scope: !9702)
!9704 = !DILocation(line: 811, column: 51, scope: !9705)
!9705 = !DILexicalBlockFile(scope: !9702, file: !919, discriminator: 1)
!9706 = !DILocation(line: 811, column: 56, scope: !9705)
!9707 = !DILocation(line: 812, column: 50, scope: !9702)
!9708 = !DILocation(line: 811, column: 30, scope: !9705)
!9709 = !DILocation(line: 812, column: 61, scope: !9702)
!9710 = !DILocation(line: 811, column: 17, scope: !9705)
!9711 = !DILocation(line: 814, column: 24, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9702, file: !919, line: 812, column: 66)
!9713 = !DILocation(line: 813, column: 17, scope: !9712)
!9714 = !DILocation(line: 815, column: 17, scope: !9712)
!9715 = !DILocation(line: 818, column: 13, scope: !9592)
!9716 = !DILocation(line: 818, column: 18, scope: !9592)
!9717 = !DILocation(line: 818, column: 34, scope: !9592)
!9718 = !DILocalVariable(name: "i", scope: !9719, file: !919, line: 819, type: !998)
!9719 = distinct !DILexicalBlock(scope: !9592, file: !919, line: 819, column: 13)
!9720 = !DILocation(line: 819, column: 19, scope: !9719)
!9721 = !DILocalVariable(name: "ret", scope: !9719, file: !919, line: 819, type: !998)
!9722 = !DILocation(line: 819, column: 22, scope: !9719)
!9723 = !DILocation(line: 819, column: 34, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9719, file: !919, line: 819, column: 27)
!9725 = !DILocation(line: 819, column: 32, scope: !9724)
!9726 = !DILocation(line: 819, column: 39, scope: !9727)
!9727 = !DILexicalBlockFile(scope: !9728, file: !919, discriminator: 1)
!9728 = distinct !DILexicalBlock(scope: !9724, file: !919, line: 819, column: 27)
!9729 = !DILocation(line: 819, column: 43, scope: !9727)
!9730 = !DILocation(line: 819, column: 46, scope: !9727)
!9731 = !DILocation(line: 819, column: 41, scope: !9727)
!9732 = !DILocation(line: 819, column: 27, scope: !9727)
!9733 = !DILocalVariable(name: "spec", scope: !9734, file: !919, line: 819, type: !1105)
!9734 = distinct !DILexicalBlock(scope: !9728, file: !919, line: 819, column: 71)
!9735 = !DILocation(line: 819, column: 79, scope: !9734)
!9736 = !DILocation(line: 819, column: 105, scope: !9737)
!9737 = !DILexicalBlockFile(scope: !9734, file: !919, discriminator: 2)
!9738 = !DILocation(line: 819, column: 86, scope: !9737)
!9739 = !DILocation(line: 819, column: 89, scope: !9737)
!9740 = !DILocation(line: 819, column: 108, scope: !9737)
!9741 = !DILocation(line: 819, column: 79, scope: !9737)
!9742 = !DILocation(line: 819, column: 153, scope: !9737)
!9743 = !DILocation(line: 819, column: 157, scope: !9737)
!9744 = !DILocation(line: 819, column: 161, scope: !9737)
!9745 = !DILocation(line: 819, column: 130, scope: !9737)
!9746 = !DILocation(line: 819, column: 128, scope: !9737)
!9747 = !DILocation(line: 819, column: 168, scope: !9737)
!9748 = !DILocation(line: 819, column: 123, scope: !9737)
!9749 = !DILocation(line: 819, column: 215, scope: !9750)
!9750 = !DILexicalBlockFile(scope: !9751, file: !919, discriminator: 3)
!9751 = distinct !DILexicalBlock(scope: !9734, file: !919, line: 819, column: 123)
!9752 = !DILocation(line: 819, column: 196, scope: !9750)
!9753 = !DILocation(line: 819, column: 199, scope: !9750)
!9754 = !DILocation(line: 819, column: 218, scope: !9750)
!9755 = !DILocation(line: 819, column: 220, scope: !9750)
!9756 = !DILocation(line: 819, column: 173, scope: !9750)
!9757 = !DILocation(line: 819, column: 178, scope: !9750)
!9758 = !DILocation(line: 819, column: 194, scope: !9750)
!9759 = !DILocation(line: 819, column: 232, scope: !9760)
!9760 = !DILexicalBlockFile(scope: !9761, file: !919, discriminator: 4)
!9761 = distinct !DILexicalBlock(scope: !9751, file: !919, line: 819, column: 232)
!9762 = !DILocation(line: 819, column: 236, scope: !9760)
!9763 = !DILocation(line: 819, column: 241, scope: !9764)
!9764 = !DILexicalBlockFile(scope: !9761, file: !919, discriminator: 5)
!9765 = !DILocation(line: 819, column: 258, scope: !9766)
!9766 = !DILexicalBlockFile(scope: !9734, file: !919, discriminator: 6)
!9767 = !DILocation(line: 819, column: 67, scope: !9768)
!9768 = !DILexicalBlockFile(scope: !9728, file: !919, discriminator: 7)
!9769 = !DILocation(line: 819, column: 27, scope: !9768)
!9770 = distinct !{!9770, !9771}
!9771 = !DILocation(line: 819, column: 27, scope: !9719)
!9772 = !DILocalVariable(name: "i", scope: !9773, file: !919, line: 821, type: !998)
!9773 = distinct !DILexicalBlock(scope: !9592, file: !919, line: 821, column: 13)
!9774 = !DILocation(line: 821, column: 19, scope: !9773)
!9775 = !DILocalVariable(name: "ret", scope: !9773, file: !919, line: 821, type: !998)
!9776 = !DILocation(line: 821, column: 22, scope: !9773)
!9777 = !DILocation(line: 821, column: 34, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9773, file: !919, line: 821, column: 27)
!9779 = !DILocation(line: 821, column: 32, scope: !9778)
!9780 = !DILocation(line: 821, column: 39, scope: !9781)
!9781 = !DILexicalBlockFile(scope: !9782, file: !919, discriminator: 1)
!9782 = distinct !DILexicalBlock(scope: !9778, file: !919, line: 821, column: 27)
!9783 = !DILocation(line: 821, column: 43, scope: !9781)
!9784 = !DILocation(line: 821, column: 46, scope: !9781)
!9785 = !DILocation(line: 821, column: 41, scope: !9781)
!9786 = !DILocation(line: 821, column: 27, scope: !9781)
!9787 = !DILocalVariable(name: "spec", scope: !9788, file: !919, line: 821, type: !1105)
!9788 = distinct !DILexicalBlock(scope: !9782, file: !919, line: 821, column: 64)
!9789 = !DILocation(line: 821, column: 72, scope: !9788)
!9790 = !DILocation(line: 821, column: 91, scope: !9791)
!9791 = !DILexicalBlockFile(scope: !9788, file: !919, discriminator: 2)
!9792 = !DILocation(line: 821, column: 79, scope: !9791)
!9793 = !DILocation(line: 821, column: 82, scope: !9791)
!9794 = !DILocation(line: 821, column: 94, scope: !9791)
!9795 = !DILocation(line: 821, column: 72, scope: !9791)
!9796 = !DILocation(line: 821, column: 139, scope: !9791)
!9797 = !DILocation(line: 821, column: 143, scope: !9791)
!9798 = !DILocation(line: 821, column: 147, scope: !9791)
!9799 = !DILocation(line: 821, column: 116, scope: !9791)
!9800 = !DILocation(line: 821, column: 114, scope: !9791)
!9801 = !DILocation(line: 821, column: 154, scope: !9791)
!9802 = !DILocation(line: 821, column: 109, scope: !9791)
!9803 = !DILocation(line: 821, column: 181, scope: !9804)
!9804 = !DILexicalBlockFile(scope: !9805, file: !919, discriminator: 3)
!9805 = distinct !DILexicalBlock(scope: !9788, file: !919, line: 821, column: 109)
!9806 = !DILocation(line: 821, column: 169, scope: !9804)
!9807 = !DILocation(line: 821, column: 172, scope: !9804)
!9808 = !DILocation(line: 821, column: 184, scope: !9804)
!9809 = !DILocation(line: 821, column: 186, scope: !9804)
!9810 = !DILocation(line: 821, column: 167, scope: !9804)
!9811 = !DILocation(line: 821, column: 159, scope: !9804)
!9812 = !DILocation(line: 821, column: 200, scope: !9813)
!9813 = !DILexicalBlockFile(scope: !9814, file: !919, discriminator: 4)
!9814 = distinct !DILexicalBlock(scope: !9805, file: !919, line: 821, column: 200)
!9815 = !DILocation(line: 821, column: 204, scope: !9813)
!9816 = !DILocation(line: 821, column: 209, scope: !9817)
!9817 = !DILexicalBlockFile(scope: !9814, file: !919, discriminator: 5)
!9818 = !DILocation(line: 821, column: 226, scope: !9819)
!9819 = !DILexicalBlockFile(scope: !9788, file: !919, discriminator: 6)
!9820 = !DILocation(line: 821, column: 60, scope: !9821)
!9821 = !DILexicalBlockFile(scope: !9782, file: !919, discriminator: 7)
!9822 = !DILocation(line: 821, column: 27, scope: !9821)
!9823 = distinct !{!9823, !9824}
!9824 = !DILocation(line: 821, column: 27, scope: !9773)
!9825 = !DILocation(line: 822, column: 17, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9592, file: !919, line: 822, column: 17)
!9827 = !DILocation(line: 822, column: 17, scope: !9592)
!9828 = !DILocation(line: 824, column: 29, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9830, file: !919, line: 824, column: 21)
!9830 = distinct !DILexicalBlock(scope: !9826, file: !919, line: 822, column: 26)
!9831 = !DILocation(line: 824, column: 22, scope: !9829)
!9832 = !DILocation(line: 824, column: 21, scope: !9830)
!9833 = !DILocation(line: 825, column: 29, scope: !9829)
!9834 = !DILocation(line: 825, column: 21, scope: !9829)
!9835 = !DILocation(line: 827, column: 29, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9830, file: !919, line: 827, column: 21)
!9837 = !DILocation(line: 827, column: 22, scope: !9836)
!9838 = !DILocation(line: 827, column: 21, scope: !9830)
!9839 = !DILocation(line: 828, column: 21, scope: !9836)
!9840 = !DILocation(line: 828, column: 26, scope: !9836)
!9841 = !DILocation(line: 828, column: 37, scope: !9836)
!9842 = !DILocation(line: 829, column: 34, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9836, file: !919, line: 829, column: 26)
!9844 = !DILocation(line: 829, column: 27, scope: !9843)
!9845 = !DILocation(line: 829, column: 26, scope: !9836)
!9846 = !DILocation(line: 830, column: 21, scope: !9843)
!9847 = !DILocation(line: 830, column: 26, scope: !9843)
!9848 = !DILocation(line: 830, column: 37, scope: !9843)
!9849 = !DILocalVariable(name: "type", scope: !9850, file: !919, line: 832, type: !923)
!9850 = distinct !DILexicalBlock(scope: !9843, file: !919, line: 831, column: 22)
!9851 = !DILocation(line: 832, column: 41, scope: !9850)
!9852 = !DILocalVariable(name: "i", scope: !9850, file: !919, line: 833, type: !998)
!9853 = !DILocation(line: 833, column: 25, scope: !9850)
!9854 = !DILocation(line: 834, column: 28, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9850, file: !919, line: 834, column: 21)
!9856 = !DILocation(line: 834, column: 26, scope: !9855)
!9857 = !DILocation(line: 834, column: 42, scope: !9858)
!9858 = !DILexicalBlockFile(scope: !9859, file: !919, discriminator: 1)
!9859 = distinct !DILexicalBlock(scope: !9855, file: !919, line: 834, column: 21)
!9860 = !DILocation(line: 834, column: 33, scope: !9858)
!9861 = !DILocation(line: 834, column: 45, scope: !9858)
!9862 = !DILocation(line: 834, column: 21, scope: !9858)
!9863 = !DILocation(line: 835, column: 46, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9865, file: !919, line: 835, column: 29)
!9865 = distinct !DILexicalBlock(scope: !9859, file: !919, line: 834, column: 56)
!9866 = !DILocation(line: 835, column: 37, scope: !9864)
!9867 = !DILocation(line: 835, column: 49, scope: !9864)
!9868 = !DILocation(line: 835, column: 55, scope: !9864)
!9869 = !DILocation(line: 835, column: 30, scope: !9864)
!9870 = !DILocation(line: 835, column: 29, scope: !9865)
!9871 = !DILocation(line: 836, column: 56, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9864, file: !919, line: 835, column: 65)
!9873 = !DILocation(line: 836, column: 47, scope: !9872)
!9874 = !DILocation(line: 836, column: 59, scope: !9872)
!9875 = !DILocation(line: 836, column: 29, scope: !9872)
!9876 = !DILocation(line: 836, column: 34, scope: !9872)
!9877 = !DILocation(line: 836, column: 45, scope: !9872)
!9878 = !DILocation(line: 837, column: 29, scope: !9872)
!9879 = !DILocation(line: 839, column: 21, scope: !9865)
!9880 = !DILocation(line: 834, column: 52, scope: !9881)
!9881 = !DILexicalBlockFile(scope: !9859, file: !919, discriminator: 2)
!9882 = !DILocation(line: 834, column: 21, scope: !9881)
!9883 = distinct !{!9883, !9884}
!9884 = !DILocation(line: 834, column: 21, scope: !9850)
!9885 = !DILocation(line: 841, column: 26, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9850, file: !919, line: 841, column: 25)
!9887 = !DILocation(line: 841, column: 31, scope: !9886)
!9888 = !DILocation(line: 841, column: 25, scope: !9850)
!9889 = !DILocation(line: 842, column: 62, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9886, file: !919, line: 841, column: 43)
!9891 = !DILocation(line: 842, column: 32, scope: !9890)
!9892 = !DILocation(line: 842, column: 30, scope: !9890)
!9893 = !DILocation(line: 843, column: 29, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9890, file: !919, line: 843, column: 29)
!9895 = !DILocation(line: 843, column: 34, scope: !9894)
!9896 = !DILocation(line: 843, column: 29, scope: !9890)
!9897 = !DILocation(line: 844, column: 29, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9894, file: !919, line: 843, column: 60)
!9899 = !DILocation(line: 844, column: 34, scope: !9898)
!9900 = !DILocation(line: 844, column: 45, scope: !9898)
!9901 = !DILocation(line: 845, column: 56, scope: !9898)
!9902 = !DILocation(line: 845, column: 29, scope: !9898)
!9903 = !DILocation(line: 845, column: 34, scope: !9898)
!9904 = !DILocation(line: 845, column: 54, scope: !9898)
!9905 = !DILocation(line: 846, column: 25, scope: !9898)
!9906 = !DILocation(line: 847, column: 21, scope: !9890)
!9907 = !DILocation(line: 849, column: 26, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9850, file: !919, line: 849, column: 25)
!9909 = !DILocation(line: 849, column: 31, scope: !9908)
!9910 = !DILocation(line: 849, column: 25, scope: !9850)
!9911 = !DILocation(line: 851, column: 32, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9908, file: !919, line: 849, column: 43)
!9913 = !DILocation(line: 850, column: 25, scope: !9912)
!9914 = !DILocation(line: 852, column: 25, scope: !9912)
!9915 = !DILocation(line: 853, column: 30, scope: !9912)
!9916 = !DILocation(line: 854, column: 25, scope: !9912)
!9917 = !DILocation(line: 854, column: 66, scope: !9918)
!9918 = !DILexicalBlockFile(scope: !9912, file: !919, discriminator: 1)
!9919 = !DILocation(line: 854, column: 40, scope: !9918)
!9920 = !DILocation(line: 854, column: 38, scope: !9918)
!9921 = !DILocation(line: 854, column: 73, scope: !9918)
!9922 = !DILocation(line: 854, column: 25, scope: !9918)
!9923 = !DILocation(line: 857, column: 62, scope: !9912)
!9924 = !DILocation(line: 857, column: 36, scope: !9912)
!9925 = !DILocation(line: 856, column: 29, scope: !9912)
!9926 = !DILocation(line: 854, column: 25, scope: !9927)
!9927 = !DILexicalBlockFile(scope: !9912, file: !919, discriminator: 2)
!9928 = distinct !{!9928, !9916}
!9929 = !DILocation(line: 858, column: 32, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9912, file: !919, line: 858, column: 25)
!9931 = !DILocation(line: 858, column: 30, scope: !9930)
!9932 = !DILocation(line: 858, column: 46, scope: !9933)
!9933 = !DILexicalBlockFile(scope: !9934, file: !919, discriminator: 1)
!9934 = distinct !DILexicalBlock(scope: !9930, file: !919, line: 858, column: 25)
!9935 = !DILocation(line: 858, column: 37, scope: !9933)
!9936 = !DILocation(line: 858, column: 49, scope: !9933)
!9937 = !DILocation(line: 858, column: 25, scope: !9933)
!9938 = !DILocation(line: 859, column: 60, scope: !9934)
!9939 = !DILocation(line: 859, column: 51, scope: !9934)
!9940 = !DILocation(line: 859, column: 63, scope: !9934)
!9941 = !DILocation(line: 859, column: 29, scope: !9934)
!9942 = !DILocation(line: 858, column: 56, scope: !9943)
!9943 = !DILexicalBlockFile(scope: !9934, file: !919, discriminator: 2)
!9944 = !DILocation(line: 858, column: 25, scope: !9943)
!9945 = distinct !{!9945, !9946}
!9946 = !DILocation(line: 858, column: 25, scope: !9912)
!9947 = !DILocation(line: 860, column: 25, scope: !9912)
!9948 = !DILocation(line: 861, column: 25, scope: !9912)
!9949 = !DILocation(line: 864, column: 13, scope: !9830)
!9950 = !DILocalVariable(name: "i", scope: !9951, file: !919, line: 866, type: !998)
!9951 = distinct !DILexicalBlock(scope: !9592, file: !919, line: 866, column: 13)
!9952 = !DILocation(line: 866, column: 19, scope: !9951)
!9953 = !DILocalVariable(name: "ret", scope: !9951, file: !919, line: 866, type: !998)
!9954 = !DILocation(line: 866, column: 22, scope: !9951)
!9955 = !DILocation(line: 866, column: 34, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9951, file: !919, line: 866, column: 27)
!9957 = !DILocation(line: 866, column: 32, scope: !9956)
!9958 = !DILocation(line: 866, column: 39, scope: !9959)
!9959 = !DILexicalBlockFile(scope: !9960, file: !919, discriminator: 1)
!9960 = distinct !DILexicalBlock(scope: !9956, file: !919, line: 866, column: 27)
!9961 = !DILocation(line: 866, column: 43, scope: !9959)
!9962 = !DILocation(line: 866, column: 46, scope: !9959)
!9963 = !DILocation(line: 866, column: 41, scope: !9959)
!9964 = !DILocation(line: 866, column: 27, scope: !9959)
!9965 = !DILocalVariable(name: "spec", scope: !9966, file: !919, line: 866, type: !1105)
!9966 = distinct !DILexicalBlock(scope: !9960, file: !919, line: 866, column: 71)
!9967 = !DILocation(line: 866, column: 79, scope: !9966)
!9968 = !DILocation(line: 866, column: 105, scope: !9969)
!9969 = !DILexicalBlockFile(scope: !9966, file: !919, discriminator: 2)
!9970 = !DILocation(line: 866, column: 86, scope: !9969)
!9971 = !DILocation(line: 866, column: 89, scope: !9969)
!9972 = !DILocation(line: 866, column: 108, scope: !9969)
!9973 = !DILocation(line: 866, column: 79, scope: !9969)
!9974 = !DILocation(line: 866, column: 153, scope: !9969)
!9975 = !DILocation(line: 866, column: 157, scope: !9969)
!9976 = !DILocation(line: 866, column: 161, scope: !9969)
!9977 = !DILocation(line: 866, column: 130, scope: !9969)
!9978 = !DILocation(line: 866, column: 128, scope: !9969)
!9979 = !DILocation(line: 866, column: 168, scope: !9969)
!9980 = !DILocation(line: 866, column: 123, scope: !9969)
!9981 = !DILocation(line: 866, column: 209, scope: !9982)
!9982 = !DILexicalBlockFile(scope: !9983, file: !919, discriminator: 3)
!9983 = distinct !DILexicalBlock(scope: !9966, file: !919, line: 866, column: 123)
!9984 = !DILocation(line: 866, column: 190, scope: !9982)
!9985 = !DILocation(line: 866, column: 193, scope: !9982)
!9986 = !DILocation(line: 866, column: 212, scope: !9982)
!9987 = !DILocation(line: 866, column: 214, scope: !9982)
!9988 = !DILocation(line: 866, column: 188, scope: !9982)
!9989 = !DILocation(line: 866, column: 173, scope: !9982)
!9990 = !DILocation(line: 866, column: 228, scope: !9991)
!9991 = !DILexicalBlockFile(scope: !9992, file: !919, discriminator: 4)
!9992 = distinct !DILexicalBlock(scope: !9983, file: !919, line: 866, column: 228)
!9993 = !DILocation(line: 866, column: 232, scope: !9991)
!9994 = !DILocation(line: 866, column: 237, scope: !9995)
!9995 = !DILexicalBlockFile(scope: !9992, file: !919, discriminator: 5)
!9996 = !DILocation(line: 866, column: 254, scope: !9997)
!9997 = !DILexicalBlockFile(scope: !9966, file: !919, discriminator: 6)
!9998 = !DILocation(line: 866, column: 67, scope: !9999)
!9999 = !DILexicalBlockFile(scope: !9960, file: !919, discriminator: 7)
!10000 = !DILocation(line: 866, column: 27, scope: !9999)
!10001 = distinct !{!10001, !10002}
!10002 = !DILocation(line: 866, column: 27, scope: !9951)
!10003 = !DILocation(line: 867, column: 17, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9592, file: !919, line: 867, column: 17)
!10005 = !DILocation(line: 867, column: 17, scope: !9592)
!10006 = !DILocation(line: 868, column: 49, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !10004, file: !919, line: 867, column: 33)
!10008 = !DILocation(line: 868, column: 39, scope: !10007)
!10009 = !DILocation(line: 868, column: 17, scope: !10007)
!10010 = !DILocation(line: 868, column: 22, scope: !10007)
!10011 = !DILocation(line: 868, column: 37, scope: !10007)
!10012 = !DILocation(line: 869, column: 22, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10007, file: !919, line: 869, column: 21)
!10014 = !DILocation(line: 869, column: 27, scope: !10013)
!10015 = !DILocation(line: 869, column: 21, scope: !10007)
!10016 = !DILocation(line: 870, column: 21, scope: !10013)
!10017 = !DILocation(line: 871, column: 13, scope: !10007)
!10018 = !DILocalVariable(name: "i", scope: !10019, file: !919, line: 873, type: !998)
!10019 = distinct !DILexicalBlock(scope: !9592, file: !919, line: 873, column: 13)
!10020 = !DILocation(line: 873, column: 19, scope: !10019)
!10021 = !DILocalVariable(name: "ret", scope: !10019, file: !919, line: 873, type: !998)
!10022 = !DILocation(line: 873, column: 22, scope: !10019)
!10023 = !DILocation(line: 873, column: 34, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10019, file: !919, line: 873, column: 27)
!10025 = !DILocation(line: 873, column: 32, scope: !10024)
!10026 = !DILocation(line: 873, column: 39, scope: !10027)
!10027 = !DILexicalBlockFile(scope: !10028, file: !919, discriminator: 1)
!10028 = distinct !DILexicalBlock(scope: !10024, file: !919, line: 873, column: 27)
!10029 = !DILocation(line: 873, column: 43, scope: !10027)
!10030 = !DILocation(line: 873, column: 46, scope: !10027)
!10031 = !DILocation(line: 873, column: 41, scope: !10027)
!10032 = !DILocation(line: 873, column: 27, scope: !10027)
!10033 = !DILocalVariable(name: "spec", scope: !10034, file: !919, line: 873, type: !1105)
!10034 = distinct !DILexicalBlock(scope: !10028, file: !919, line: 873, column: 78)
!10035 = !DILocation(line: 873, column: 86, scope: !10034)
!10036 = !DILocation(line: 873, column: 119, scope: !10037)
!10037 = !DILexicalBlockFile(scope: !10034, file: !919, discriminator: 2)
!10038 = !DILocation(line: 873, column: 93, scope: !10037)
!10039 = !DILocation(line: 873, column: 96, scope: !10037)
!10040 = !DILocation(line: 873, column: 122, scope: !10037)
!10041 = !DILocation(line: 873, column: 86, scope: !10037)
!10042 = !DILocation(line: 873, column: 167, scope: !10037)
!10043 = !DILocation(line: 873, column: 171, scope: !10037)
!10044 = !DILocation(line: 873, column: 175, scope: !10037)
!10045 = !DILocation(line: 873, column: 144, scope: !10037)
!10046 = !DILocation(line: 873, column: 142, scope: !10037)
!10047 = !DILocation(line: 873, column: 182, scope: !10037)
!10048 = !DILocation(line: 873, column: 137, scope: !10037)
!10049 = !DILocation(line: 873, column: 237, scope: !10050)
!10050 = !DILexicalBlockFile(scope: !10051, file: !919, discriminator: 3)
!10051 = distinct !DILexicalBlock(scope: !10034, file: !919, line: 873, column: 137)
!10052 = !DILocation(line: 873, column: 211, scope: !10050)
!10053 = !DILocation(line: 873, column: 214, scope: !10050)
!10054 = !DILocation(line: 873, column: 240, scope: !10050)
!10055 = !DILocation(line: 873, column: 242, scope: !10050)
!10056 = !DILocation(line: 873, column: 209, scope: !10050)
!10057 = !DILocation(line: 873, column: 187, scope: !10050)
!10058 = !DILocation(line: 873, column: 256, scope: !10059)
!10059 = !DILexicalBlockFile(scope: !10060, file: !919, discriminator: 4)
!10060 = distinct !DILexicalBlock(scope: !10051, file: !919, line: 873, column: 256)
!10061 = !DILocation(line: 873, column: 260, scope: !10059)
!10062 = !DILocation(line: 873, column: 265, scope: !10063)
!10063 = !DILexicalBlockFile(scope: !10060, file: !919, discriminator: 5)
!10064 = !DILocation(line: 873, column: 282, scope: !10065)
!10065 = !DILexicalBlockFile(scope: !10034, file: !919, discriminator: 6)
!10066 = !DILocation(line: 873, column: 74, scope: !10067)
!10067 = !DILexicalBlockFile(scope: !10028, file: !919, discriminator: 7)
!10068 = !DILocation(line: 873, column: 27, scope: !10067)
!10069 = distinct !{!10069, !10070}
!10070 = !DILocation(line: 873, column: 27, scope: !10019)
!10071 = !DILocation(line: 875, column: 17, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !9592, file: !919, line: 875, column: 17)
!10073 = !DILocation(line: 875, column: 17, scope: !9592)
!10074 = !DILocation(line: 876, column: 61, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10072, file: !919, line: 875, column: 40)
!10076 = !DILocation(line: 876, column: 46, scope: !10075)
!10077 = !DILocation(line: 876, column: 17, scope: !10075)
!10078 = !DILocation(line: 876, column: 22, scope: !10075)
!10079 = !DILocation(line: 876, column: 44, scope: !10075)
!10080 = !DILocation(line: 877, column: 21, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10075, file: !919, line: 877, column: 21)
!10082 = !DILocation(line: 877, column: 26, scope: !10081)
!10083 = !DILocation(line: 877, column: 48, scope: !10081)
!10084 = !DILocation(line: 877, column: 21, scope: !10075)
!10085 = !DILocation(line: 879, column: 42, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10081, file: !919, line: 877, column: 68)
!10087 = !DILocation(line: 878, column: 21, scope: !10086)
!10088 = !DILocation(line: 880, column: 17, scope: !10086)
!10089 = !DILocation(line: 881, column: 13, scope: !10075)
!10090 = !DILocation(line: 882, column: 17, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10072, file: !919, line: 881, column: 20)
!10092 = !DILocation(line: 882, column: 22, scope: !10091)
!10093 = !DILocation(line: 882, column: 44, scope: !10091)
!10094 = !DILocation(line: 885, column: 13, scope: !9592)
!10095 = !DILocation(line: 885, column: 18, scope: !9592)
!10096 = !DILocation(line: 885, column: 34, scope: !9592)
!10097 = !DILocation(line: 887, column: 13, scope: !9592)
!10098 = !DILocation(line: 889, column: 13, scope: !9592)
!10099 = !DILocation(line: 889, column: 18, scope: !9592)
!10100 = !DILocation(line: 889, column: 35, scope: !9592)
!10101 = !DILocalVariable(name: "i", scope: !10102, file: !919, line: 890, type: !998)
!10102 = distinct !DILexicalBlock(scope: !9592, file: !919, line: 890, column: 13)
!10103 = !DILocation(line: 890, column: 19, scope: !10102)
!10104 = !DILocalVariable(name: "ret", scope: !10102, file: !919, line: 890, type: !998)
!10105 = !DILocation(line: 890, column: 22, scope: !10102)
!10106 = !DILocation(line: 890, column: 34, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10102, file: !919, line: 890, column: 27)
!10108 = !DILocation(line: 890, column: 32, scope: !10107)
!10109 = !DILocation(line: 890, column: 39, scope: !10110)
!10110 = !DILexicalBlockFile(scope: !10111, file: !919, discriminator: 1)
!10111 = distinct !DILexicalBlock(scope: !10107, file: !919, line: 890, column: 27)
!10112 = !DILocation(line: 890, column: 43, scope: !10110)
!10113 = !DILocation(line: 890, column: 46, scope: !10110)
!10114 = !DILocation(line: 890, column: 41, scope: !10110)
!10115 = !DILocation(line: 890, column: 27, scope: !10110)
!10116 = !DILocalVariable(name: "spec", scope: !10117, file: !919, line: 890, type: !1105)
!10117 = distinct !DILexicalBlock(scope: !10111, file: !919, line: 890, column: 72)
!10118 = !DILocation(line: 890, column: 80, scope: !10117)
!10119 = !DILocation(line: 890, column: 107, scope: !10120)
!10120 = !DILexicalBlockFile(scope: !10117, file: !919, discriminator: 2)
!10121 = !DILocation(line: 890, column: 87, scope: !10120)
!10122 = !DILocation(line: 890, column: 90, scope: !10120)
!10123 = !DILocation(line: 890, column: 110, scope: !10120)
!10124 = !DILocation(line: 890, column: 80, scope: !10120)
!10125 = !DILocation(line: 890, column: 155, scope: !10120)
!10126 = !DILocation(line: 890, column: 159, scope: !10120)
!10127 = !DILocation(line: 890, column: 163, scope: !10120)
!10128 = !DILocation(line: 890, column: 132, scope: !10120)
!10129 = !DILocation(line: 890, column: 130, scope: !10120)
!10130 = !DILocation(line: 890, column: 170, scope: !10120)
!10131 = !DILocation(line: 890, column: 125, scope: !10120)
!10132 = !DILocation(line: 890, column: 219, scope: !10133)
!10133 = !DILexicalBlockFile(scope: !10134, file: !919, discriminator: 3)
!10134 = distinct !DILexicalBlock(scope: !10117, file: !919, line: 890, column: 125)
!10135 = !DILocation(line: 890, column: 199, scope: !10133)
!10136 = !DILocation(line: 890, column: 202, scope: !10133)
!10137 = !DILocation(line: 890, column: 222, scope: !10133)
!10138 = !DILocation(line: 890, column: 224, scope: !10133)
!10139 = !DILocation(line: 890, column: 175, scope: !10133)
!10140 = !DILocation(line: 890, column: 180, scope: !10133)
!10141 = !DILocation(line: 890, column: 197, scope: !10133)
!10142 = !DILocation(line: 890, column: 236, scope: !10143)
!10143 = !DILexicalBlockFile(scope: !10144, file: !919, discriminator: 4)
!10144 = distinct !DILexicalBlock(scope: !10134, file: !919, line: 890, column: 236)
!10145 = !DILocation(line: 890, column: 240, scope: !10143)
!10146 = !DILocation(line: 890, column: 245, scope: !10147)
!10147 = !DILexicalBlockFile(scope: !10144, file: !919, discriminator: 5)
!10148 = !DILocation(line: 890, column: 262, scope: !10149)
!10149 = !DILexicalBlockFile(scope: !10117, file: !919, discriminator: 6)
!10150 = !DILocation(line: 890, column: 68, scope: !10151)
!10151 = !DILexicalBlockFile(scope: !10111, file: !919, discriminator: 7)
!10152 = !DILocation(line: 890, column: 27, scope: !10151)
!10153 = distinct !{!10153, !10154}
!10154 = !DILocation(line: 890, column: 27, scope: !10102)
!10155 = !DILocation(line: 891, column: 40, scope: !9592)
!10156 = !DILocation(line: 891, column: 13, scope: !9592)
!10157 = !DILocation(line: 892, column: 13, scope: !9592)
!10158 = !DILocalVariable(name: "canvas_size", scope: !10159, file: !919, line: 895, type: !1105)
!10159 = distinct !DILexicalBlock(scope: !9592, file: !919, line: 894, column: 37)
!10160 = !DILocation(line: 895, column: 19, scope: !10159)
!10161 = !DILocation(line: 896, column: 17, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10159, file: !919, line: 896, column: 16)
!10163 = !DILocation(line: 896, column: 22, scope: !10162)
!10164 = !DILocation(line: 896, column: 16, scope: !10159)
!10165 = !DILocation(line: 897, column: 49, scope: !10162)
!10166 = !DILocation(line: 897, column: 54, scope: !10162)
!10167 = !DILocation(line: 897, column: 28, scope: !10162)
!10168 = !DILocation(line: 897, column: 17, scope: !10162)
!10169 = !DILocation(line: 897, column: 22, scope: !10162)
!10170 = !DILocation(line: 897, column: 26, scope: !10162)
!10171 = !DILocalVariable(name: "i", scope: !10172, file: !919, line: 898, type: !998)
!10172 = distinct !DILexicalBlock(scope: !10159, file: !919, line: 898, column: 13)
!10173 = !DILocation(line: 898, column: 19, scope: !10172)
!10174 = !DILocalVariable(name: "ret", scope: !10172, file: !919, line: 898, type: !998)
!10175 = !DILocation(line: 898, column: 22, scope: !10172)
!10176 = !DILocation(line: 898, column: 34, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10172, file: !919, line: 898, column: 27)
!10178 = !DILocation(line: 898, column: 32, scope: !10177)
!10179 = !DILocation(line: 898, column: 39, scope: !10180)
!10180 = !DILexicalBlockFile(scope: !10181, file: !919, discriminator: 1)
!10181 = distinct !DILexicalBlock(scope: !10177, file: !919, line: 898, column: 27)
!10182 = !DILocation(line: 898, column: 43, scope: !10180)
!10183 = !DILocation(line: 898, column: 46, scope: !10180)
!10184 = !DILocation(line: 898, column: 41, scope: !10180)
!10185 = !DILocation(line: 898, column: 27, scope: !10180)
!10186 = !DILocalVariable(name: "spec", scope: !10187, file: !919, line: 898, type: !1105)
!10187 = distinct !DILexicalBlock(scope: !10181, file: !919, line: 898, column: 72)
!10188 = !DILocation(line: 898, column: 80, scope: !10187)
!10189 = !DILocation(line: 898, column: 107, scope: !10190)
!10190 = !DILexicalBlockFile(scope: !10187, file: !919, discriminator: 2)
!10191 = !DILocation(line: 898, column: 87, scope: !10190)
!10192 = !DILocation(line: 898, column: 90, scope: !10190)
!10193 = !DILocation(line: 898, column: 110, scope: !10190)
!10194 = !DILocation(line: 898, column: 80, scope: !10190)
!10195 = !DILocation(line: 898, column: 155, scope: !10190)
!10196 = !DILocation(line: 898, column: 159, scope: !10190)
!10197 = !DILocation(line: 898, column: 163, scope: !10190)
!10198 = !DILocation(line: 898, column: 132, scope: !10190)
!10199 = !DILocation(line: 898, column: 130, scope: !10190)
!10200 = !DILocation(line: 898, column: 170, scope: !10190)
!10201 = !DILocation(line: 898, column: 125, scope: !10190)
!10202 = !DILocation(line: 898, column: 219, scope: !10203)
!10203 = !DILexicalBlockFile(scope: !10204, file: !919, discriminator: 3)
!10204 = distinct !DILexicalBlock(scope: !10187, file: !919, line: 898, column: 125)
!10205 = !DILocation(line: 898, column: 199, scope: !10203)
!10206 = !DILocation(line: 898, column: 202, scope: !10203)
!10207 = !DILocation(line: 898, column: 222, scope: !10203)
!10208 = !DILocation(line: 898, column: 224, scope: !10203)
!10209 = !DILocation(line: 898, column: 175, scope: !10203)
!10210 = !DILocation(line: 898, column: 180, scope: !10203)
!10211 = !DILocation(line: 898, column: 197, scope: !10203)
!10212 = !DILocation(line: 898, column: 236, scope: !10213)
!10213 = !DILexicalBlockFile(scope: !10214, file: !919, discriminator: 4)
!10214 = distinct !DILexicalBlock(scope: !10204, file: !919, line: 898, column: 236)
!10215 = !DILocation(line: 898, column: 240, scope: !10213)
!10216 = !DILocation(line: 898, column: 245, scope: !10217)
!10217 = !DILexicalBlockFile(scope: !10214, file: !919, discriminator: 5)
!10218 = !DILocation(line: 898, column: 262, scope: !10219)
!10219 = !DILexicalBlockFile(scope: !10187, file: !919, discriminator: 6)
!10220 = !DILocation(line: 898, column: 68, scope: !10221)
!10221 = !DILexicalBlockFile(scope: !10181, file: !919, discriminator: 7)
!10222 = !DILocation(line: 898, column: 27, scope: !10221)
!10223 = distinct !{!10223, !10224}
!10224 = !DILocation(line: 898, column: 27, scope: !10172)
!10225 = !DILocalVariable(name: "i", scope: !10226, file: !919, line: 899, type: !998)
!10226 = distinct !DILexicalBlock(scope: !10159, file: !919, line: 899, column: 13)
!10227 = !DILocation(line: 899, column: 19, scope: !10226)
!10228 = !DILocalVariable(name: "ret", scope: !10226, file: !919, line: 899, type: !998)
!10229 = !DILocation(line: 899, column: 22, scope: !10226)
!10230 = !DILocation(line: 899, column: 34, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10226, file: !919, line: 899, column: 27)
!10232 = !DILocation(line: 899, column: 32, scope: !10231)
!10233 = !DILocation(line: 899, column: 39, scope: !10234)
!10234 = !DILexicalBlockFile(scope: !10235, file: !919, discriminator: 1)
!10235 = distinct !DILexicalBlock(scope: !10231, file: !919, line: 899, column: 27)
!10236 = !DILocation(line: 899, column: 43, scope: !10234)
!10237 = !DILocation(line: 899, column: 46, scope: !10234)
!10238 = !DILocation(line: 899, column: 41, scope: !10234)
!10239 = !DILocation(line: 899, column: 27, scope: !10234)
!10240 = !DILocalVariable(name: "spec", scope: !10241, file: !919, line: 899, type: !1105)
!10241 = distinct !DILexicalBlock(scope: !10235, file: !919, line: 899, column: 68)
!10242 = !DILocation(line: 899, column: 76, scope: !10241)
!10243 = !DILocation(line: 899, column: 99, scope: !10244)
!10244 = !DILexicalBlockFile(scope: !10241, file: !919, discriminator: 2)
!10245 = !DILocation(line: 899, column: 83, scope: !10244)
!10246 = !DILocation(line: 899, column: 86, scope: !10244)
!10247 = !DILocation(line: 899, column: 102, scope: !10244)
!10248 = !DILocation(line: 899, column: 76, scope: !10244)
!10249 = !DILocation(line: 899, column: 147, scope: !10244)
!10250 = !DILocation(line: 899, column: 151, scope: !10244)
!10251 = !DILocation(line: 899, column: 155, scope: !10244)
!10252 = !DILocation(line: 899, column: 124, scope: !10244)
!10253 = !DILocation(line: 899, column: 122, scope: !10244)
!10254 = !DILocation(line: 899, column: 162, scope: !10244)
!10255 = !DILocation(line: 899, column: 117, scope: !10244)
!10256 = !DILocation(line: 899, column: 197, scope: !10257)
!10257 = !DILexicalBlockFile(scope: !10258, file: !919, discriminator: 3)
!10258 = distinct !DILexicalBlock(scope: !10241, file: !919, line: 899, column: 117)
!10259 = !DILocation(line: 899, column: 181, scope: !10257)
!10260 = !DILocation(line: 899, column: 184, scope: !10257)
!10261 = !DILocation(line: 899, column: 200, scope: !10257)
!10262 = !DILocation(line: 899, column: 202, scope: !10257)
!10263 = !DILocation(line: 899, column: 179, scope: !10257)
!10264 = !DILocation(line: 899, column: 167, scope: !10257)
!10265 = !DILocation(line: 899, column: 216, scope: !10266)
!10266 = !DILexicalBlockFile(scope: !10267, file: !919, discriminator: 4)
!10267 = distinct !DILexicalBlock(scope: !10258, file: !919, line: 899, column: 216)
!10268 = !DILocation(line: 899, column: 220, scope: !10266)
!10269 = !DILocation(line: 899, column: 225, scope: !10270)
!10270 = !DILexicalBlockFile(scope: !10267, file: !919, discriminator: 5)
!10271 = !DILocation(line: 899, column: 242, scope: !10272)
!10272 = !DILexicalBlockFile(scope: !10241, file: !919, discriminator: 6)
!10273 = !DILocation(line: 899, column: 64, scope: !10274)
!10274 = !DILexicalBlockFile(scope: !10235, file: !919, discriminator: 7)
!10275 = !DILocation(line: 899, column: 27, scope: !10274)
!10276 = distinct !{!10276, !10277}
!10277 = !DILocation(line: 899, column: 27, scope: !10226)
!10278 = !DILocation(line: 900, column: 17, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10159, file: !919, line: 900, column: 17)
!10280 = !DILocation(line: 900, column: 29, scope: !10279)
!10281 = !DILocation(line: 901, column: 38, scope: !10279)
!10282 = !DILocation(line: 901, column: 43, scope: !10279)
!10283 = !DILocation(line: 901, column: 52, scope: !10279)
!10284 = !DILocation(line: 901, column: 60, scope: !10279)
!10285 = !DILocation(line: 901, column: 65, scope: !10279)
!10286 = !DILocation(line: 901, column: 74, scope: !10279)
!10287 = !DILocation(line: 901, column: 82, scope: !10279)
!10288 = !DILocation(line: 901, column: 17, scope: !10279)
!10289 = !DILocation(line: 901, column: 95, scope: !10279)
!10290 = !DILocation(line: 900, column: 17, scope: !10291)
!10291 = !DILexicalBlockFile(scope: !10159, file: !919, discriminator: 1)
!10292 = !DILocation(line: 902, column: 62, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10279, file: !919, line: 901, column: 100)
!10294 = !DILocation(line: 902, column: 17, scope: !10293)
!10295 = !DILocation(line: 903, column: 17, scope: !10293)
!10296 = !DILocation(line: 905, column: 13, scope: !10159)
!10297 = !DILocation(line: 909, column: 13, scope: !9592)
!10298 = !DILocation(line: 911, column: 13, scope: !9592)
!10299 = !DILocation(line: 914, column: 47, scope: !9099)
!10300 = !DILocation(line: 914, column: 52, scope: !9099)
!10301 = !DILocation(line: 914, column: 57, scope: !9099)
!10302 = !DILocation(line: 914, column: 15, scope: !9099)
!10303 = !DILocation(line: 914, column: 13, scope: !9099)
!10304 = !DILocation(line: 915, column: 13, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !9099, file: !919, line: 915, column: 13)
!10306 = !DILocation(line: 915, column: 17, scope: !10305)
!10307 = !DILocation(line: 915, column: 13, scope: !9099)
!10308 = !DILocation(line: 916, column: 13, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10305, file: !919, line: 915, column: 22)
!10310 = !DILocation(line: 917, column: 13, scope: !10309)
!10311 = !DILocation(line: 919, column: 5, scope: !9099)
!10312 = !DILocation(line: 714, column: 38, scope: !10313)
!10313 = !DILexicalBlockFile(scope: !9093, file: !919, discriminator: 2)
!10314 = !DILocation(line: 714, column: 5, scope: !10313)
!10315 = distinct !{!10315, !10316}
!10316 = !DILocation(line: 714, column: 5, scope: !9077)
!10317 = !DILocation(line: 920, column: 1, scope: !9077)
!10318 = distinct !DISubprogram(name: "strip_specifiers", scope: !919, file: !919, line: 187, type: !10319, isLocal: true, isDefinition: true, scopeLine: 188, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!10319 = !DISubroutineType(types: !10320)
!10320 = !{!1088, !1088}
!10321 = !DILocalVariable(name: "dict", arg: 1, scope: !10318, file: !919, line: 187, type: !1088)
!10322 = !DILocation(line: 187, column: 53, scope: !10318)
!10323 = !DILocalVariable(name: "e", scope: !10318, file: !919, line: 189, type: !2937)
!10324 = !DILocation(line: 189, column: 24, scope: !10318)
!10325 = !DILocalVariable(name: "ret", scope: !10318, file: !919, line: 190, type: !1088)
!10326 = !DILocation(line: 190, column: 19, scope: !10318)
!10327 = !DILocation(line: 192, column: 5, scope: !10318)
!10328 = !DILocation(line: 192, column: 29, scope: !10329)
!10329 = !DILexicalBlockFile(scope: !10318, file: !919, discriminator: 1)
!10330 = !DILocation(line: 192, column: 39, scope: !10329)
!10331 = !DILocation(line: 192, column: 17, scope: !10329)
!10332 = !DILocation(line: 192, column: 15, scope: !10329)
!10333 = !DILocation(line: 192, column: 5, scope: !10329)
!10334 = !DILocalVariable(name: "p", scope: !10335, file: !919, line: 193, type: !1105)
!10335 = distinct !DILexicalBlock(scope: !10318, file: !919, line: 192, column: 47)
!10336 = !DILocation(line: 193, column: 15, scope: !10335)
!10337 = !DILocation(line: 193, column: 26, scope: !10335)
!10338 = !DILocation(line: 193, column: 29, scope: !10335)
!10339 = !DILocation(line: 193, column: 19, scope: !10335)
!10340 = !DILocation(line: 195, column: 13, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10335, file: !919, line: 195, column: 13)
!10342 = !DILocation(line: 195, column: 13, scope: !10335)
!10343 = !DILocation(line: 196, column: 14, scope: !10341)
!10344 = !DILocation(line: 196, column: 16, scope: !10341)
!10345 = !DILocation(line: 196, column: 13, scope: !10341)
!10346 = !DILocation(line: 197, column: 27, scope: !10335)
!10347 = !DILocation(line: 197, column: 30, scope: !10335)
!10348 = !DILocation(line: 197, column: 35, scope: !10335)
!10349 = !DILocation(line: 197, column: 38, scope: !10335)
!10350 = !DILocation(line: 197, column: 9, scope: !10335)
!10351 = !DILocation(line: 198, column: 13, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10335, file: !919, line: 198, column: 13)
!10353 = !DILocation(line: 198, column: 13, scope: !10335)
!10354 = !DILocation(line: 199, column: 14, scope: !10352)
!10355 = !DILocation(line: 199, column: 16, scope: !10352)
!10356 = !DILocation(line: 199, column: 13, scope: !10352)
!10357 = !DILocation(line: 192, column: 5, scope: !10358)
!10358 = !DILexicalBlockFile(scope: !10318, file: !919, discriminator: 2)
!10359 = distinct !{!10359, !10327}
!10360 = !DILocation(line: 201, column: 12, scope: !10318)
!10361 = !DILocation(line: 201, column: 5, scope: !10318)
!10362 = distinct !DISubprogram(name: "dump_attachment", scope: !919, file: !919, line: 965, type: !10363, isLocal: true, isDefinition: true, scopeLine: 966, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!10363 = !DISubroutineType(types: !10364)
!10364 = !{null, !2562, !982}
!10365 = !DILocalVariable(name: "st", arg: 1, scope: !10362, file: !919, line: 965, type: !2562)
!10366 = !DILocation(line: 965, column: 39, scope: !10362)
!10367 = !DILocalVariable(name: "filename", arg: 2, scope: !10362, file: !919, line: 965, type: !982)
!10368 = !DILocation(line: 965, column: 55, scope: !10362)
!10369 = !DILocalVariable(name: "ret", scope: !10362, file: !919, line: 967, type: !998)
!10370 = !DILocation(line: 967, column: 9, scope: !10362)
!10371 = !DILocalVariable(name: "out", scope: !10362, file: !919, line: 968, type: !2496)
!10372 = !DILocation(line: 968, column: 18, scope: !10362)
!10373 = !DILocalVariable(name: "e", scope: !10362, file: !919, line: 969, type: !2937)
!10374 = !DILocation(line: 969, column: 24, scope: !10362)
!10375 = !DILocation(line: 971, column: 10, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10362, file: !919, line: 971, column: 9)
!10377 = !DILocation(line: 971, column: 14, scope: !10376)
!10378 = !DILocation(line: 971, column: 24, scope: !10376)
!10379 = !DILocation(line: 971, column: 9, scope: !10362)
!10380 = !DILocation(line: 973, column: 16, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10376, file: !919, line: 971, column: 40)
!10382 = !DILocation(line: 973, column: 31, scope: !10381)
!10383 = !DILocation(line: 973, column: 36, scope: !10381)
!10384 = !DILocation(line: 973, column: 40, scope: !10381)
!10385 = !DILocation(line: 972, column: 9, scope: !10381)
!10386 = !DILocation(line: 974, column: 9, scope: !10381)
!10387 = !DILocation(line: 976, column: 11, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10362, file: !919, line: 976, column: 9)
!10389 = !DILocation(line: 976, column: 10, scope: !10388)
!10390 = !DILocation(line: 976, column: 20, scope: !10388)
!10391 = !DILocation(line: 976, column: 40, scope: !10392)
!10392 = !DILexicalBlockFile(scope: !10388, file: !919, discriminator: 1)
!10393 = !DILocation(line: 976, column: 44, scope: !10392)
!10394 = !DILocation(line: 976, column: 28, scope: !10392)
!10395 = !DILocation(line: 976, column: 26, scope: !10392)
!10396 = !DILocation(line: 976, column: 9, scope: !10392)
!10397 = !DILocation(line: 977, column: 20, scope: !10388)
!10398 = !DILocation(line: 977, column: 23, scope: !10388)
!10399 = !DILocation(line: 977, column: 18, scope: !10388)
!10400 = !DILocation(line: 977, column: 9, scope: !10388)
!10401 = !DILocation(line: 978, column: 11, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10362, file: !919, line: 978, column: 9)
!10403 = !DILocation(line: 978, column: 10, scope: !10402)
!10404 = !DILocation(line: 978, column: 9, scope: !10362)
!10405 = !DILocation(line: 980, column: 39, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10402, file: !919, line: 978, column: 21)
!10407 = !DILocation(line: 980, column: 54, scope: !10406)
!10408 = !DILocation(line: 980, column: 59, scope: !10406)
!10409 = !DILocation(line: 980, column: 63, scope: !10406)
!10410 = !DILocation(line: 979, column: 9, scope: !10406)
!10411 = !DILocation(line: 981, column: 9, scope: !10406)
!10412 = !DILocation(line: 984, column: 27, scope: !10362)
!10413 = !DILocation(line: 984, column: 5, scope: !10362)
!10414 = !DILocation(line: 986, column: 33, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10362, file: !919, line: 986, column: 9)
!10416 = !DILocation(line: 986, column: 16, scope: !10415)
!10417 = !DILocation(line: 986, column: 14, scope: !10415)
!10418 = !DILocation(line: 986, column: 75, scope: !10415)
!10419 = !DILocation(line: 986, column: 9, scope: !10362)
!10420 = !DILocation(line: 988, column: 16, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10415, file: !919, line: 986, column: 80)
!10422 = !DILocation(line: 987, column: 9, scope: !10421)
!10423 = !DILocation(line: 989, column: 9, scope: !10421)
!10424 = !DILocation(line: 992, column: 16, scope: !10362)
!10425 = !DILocation(line: 992, column: 21, scope: !10362)
!10426 = !DILocation(line: 992, column: 25, scope: !10362)
!10427 = !DILocation(line: 992, column: 35, scope: !10362)
!10428 = !DILocation(line: 992, column: 46, scope: !10362)
!10429 = !DILocation(line: 992, column: 50, scope: !10362)
!10430 = !DILocation(line: 992, column: 60, scope: !10362)
!10431 = !DILocation(line: 992, column: 5, scope: !10362)
!10432 = !DILocation(line: 993, column: 16, scope: !10362)
!10433 = !DILocation(line: 993, column: 5, scope: !10362)
!10434 = !DILocation(line: 994, column: 16, scope: !10362)
!10435 = !DILocation(line: 994, column: 5, scope: !10362)
!10436 = !DILocation(line: 995, column: 1, scope: !10362)
!10437 = !DILocation(line: 995, column: 1, scope: !10438)
!10438 = !DILexicalBlockFile(scope: !10362, file: !919, discriminator: 1)
!10439 = distinct !DISubprogram(name: "assert_file_overwrite", scope: !919, file: !919, line: 922, type: !10440, isLocal: true, isDefinition: true, scopeLine: 923, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!10440 = !DISubroutineType(types: !10441)
!10441 = !{null, !982}
!10442 = !DILocalVariable(name: "filename", arg: 1, scope: !10439, file: !919, line: 922, type: !982)
!10443 = !DILocation(line: 922, column: 47, scope: !10439)
!10444 = !DILocalVariable(name: "proto_name", scope: !10439, file: !919, line: 924, type: !982)
!10445 = !DILocation(line: 924, column: 17, scope: !10439)
!10446 = !DILocation(line: 924, column: 54, scope: !10439)
!10447 = !DILocation(line: 924, column: 30, scope: !10439)
!10448 = !DILocation(line: 926, column: 9, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10439, file: !919, line: 926, column: 9)
!10450 = !DILocation(line: 926, column: 24, scope: !10449)
!10451 = !DILocation(line: 926, column: 27, scope: !10452)
!10452 = !DILexicalBlockFile(scope: !10449, file: !919, discriminator: 1)
!10453 = !DILocation(line: 926, column: 9, scope: !10452)
!10454 = !DILocation(line: 927, column: 16, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10449, file: !919, line: 926, column: 46)
!10456 = !DILocation(line: 927, column: 9, scope: !10455)
!10457 = !DILocation(line: 928, column: 9, scope: !10455)
!10458 = !DILocation(line: 931, column: 10, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10439, file: !919, line: 931, column: 9)
!10460 = !DILocation(line: 931, column: 9, scope: !10439)
!10461 = !DILocation(line: 932, column: 13, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10463, file: !919, line: 932, column: 13)
!10463 = distinct !DILexicalBlock(scope: !10459, file: !919, line: 931, column: 26)
!10464 = !DILocation(line: 932, column: 24, scope: !10462)
!10465 = !DILocation(line: 932, column: 35, scope: !10466)
!10466 = !DILexicalBlockFile(scope: !10462, file: !919, discriminator: 1)
!10467 = !DILocation(line: 932, column: 28, scope: !10466)
!10468 = !DILocation(line: 932, column: 55, scope: !10466)
!10469 = !DILocation(line: 932, column: 69, scope: !10470)
!10470 = !DILexicalBlockFile(scope: !10462, file: !919, discriminator: 2)
!10471 = !DILocation(line: 932, column: 58, scope: !10470)
!10472 = !DILocation(line: 932, column: 82, scope: !10470)
!10473 = !DILocation(line: 932, column: 13, scope: !10470)
!10474 = !DILocation(line: 933, column: 17, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10476, file: !919, line: 933, column: 17)
!10476 = distinct !DILexicalBlock(scope: !10462, file: !919, line: 932, column: 88)
!10477 = !DILocation(line: 933, column: 35, scope: !10475)
!10478 = !DILocation(line: 933, column: 39, scope: !10479)
!10479 = !DILexicalBlockFile(scope: !10475, file: !919, discriminator: 1)
!10480 = !DILocation(line: 933, column: 17, scope: !10479)
!10481 = !DILocation(line: 934, column: 24, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10475, file: !919, line: 933, column: 58)
!10483 = !DILocation(line: 934, column: 79, scope: !10482)
!10484 = !DILocation(line: 934, column: 17, scope: !10482)
!10485 = !DILocation(line: 935, column: 23, scope: !10482)
!10486 = !DILocation(line: 935, column: 17, scope: !10482)
!10487 = !DILocation(line: 936, column: 17, scope: !10482)
!10488 = !DILocation(line: 937, column: 17, scope: !10482)
!10489 = !DILocation(line: 938, column: 22, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10482, file: !919, line: 938, column: 21)
!10491 = !DILocation(line: 938, column: 21, scope: !10482)
!10492 = !DILocation(line: 939, column: 21, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10490, file: !919, line: 938, column: 36)
!10494 = !DILocation(line: 940, column: 21, scope: !10493)
!10495 = !DILocation(line: 942, column: 17, scope: !10482)
!10496 = !DILocation(line: 943, column: 13, scope: !10482)
!10497 = !DILocation(line: 945, column: 72, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10475, file: !919, line: 944, column: 18)
!10499 = !DILocation(line: 945, column: 17, scope: !10498)
!10500 = !DILocation(line: 946, column: 17, scope: !10498)
!10501 = !DILocation(line: 948, column: 9, scope: !10476)
!10502 = !DILocation(line: 949, column: 5, scope: !10463)
!10503 = !DILocation(line: 951, column: 9, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10439, file: !919, line: 951, column: 9)
!10505 = !DILocation(line: 951, column: 20, scope: !10504)
!10506 = !DILocation(line: 951, column: 31, scope: !10507)
!10507 = !DILexicalBlockFile(scope: !10504, file: !919, discriminator: 1)
!10508 = !DILocation(line: 951, column: 24, scope: !10507)
!10509 = !DILocation(line: 951, column: 9, scope: !10507)
!10510 = !DILocalVariable(name: "i", scope: !10511, file: !919, line: 952, type: !998)
!10511 = distinct !DILexicalBlock(scope: !10512, file: !919, line: 952, column: 9)
!10512 = distinct !DILexicalBlock(scope: !10504, file: !919, line: 951, column: 52)
!10513 = !DILocation(line: 952, column: 18, scope: !10511)
!10514 = !DILocation(line: 952, column: 14, scope: !10511)
!10515 = !DILocation(line: 952, column: 25, scope: !10516)
!10516 = !DILexicalBlockFile(scope: !10517, file: !919, discriminator: 1)
!10517 = distinct !DILexicalBlock(scope: !10511, file: !919, line: 952, column: 9)
!10518 = !DILocation(line: 952, column: 29, scope: !10516)
!10519 = !DILocation(line: 952, column: 27, scope: !10516)
!10520 = !DILocation(line: 952, column: 9, scope: !10516)
!10521 = !DILocalVariable(name: "file", scope: !10522, file: !919, line: 953, type: !2359)
!10522 = distinct !DILexicalBlock(scope: !10517, file: !919, line: 952, column: 50)
!10523 = !DILocation(line: 953, column: 25, scope: !10522)
!10524 = !DILocation(line: 953, column: 44, scope: !10522)
!10525 = !DILocation(line: 953, column: 32, scope: !10522)
!10526 = !DILocation(line: 954, column: 18, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10522, file: !919, line: 954, column: 18)
!10528 = !DILocation(line: 954, column: 24, scope: !10527)
!10529 = !DILocation(line: 954, column: 29, scope: !10527)
!10530 = !DILocation(line: 954, column: 38, scope: !10527)
!10531 = !DILocation(line: 954, column: 44, scope: !10527)
!10532 = !DILocation(line: 954, column: 18, scope: !10522)
!10533 = !DILocation(line: 955, column: 18, scope: !10527)
!10534 = !DILocation(line: 956, column: 26, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10522, file: !919, line: 956, column: 18)
!10536 = !DILocation(line: 956, column: 36, scope: !10535)
!10537 = !DILocation(line: 956, column: 42, scope: !10535)
!10538 = !DILocation(line: 956, column: 47, scope: !10535)
!10539 = !DILocation(line: 956, column: 19, scope: !10535)
!10540 = !DILocation(line: 956, column: 18, scope: !10522)
!10541 = !DILocation(line: 957, column: 76, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10535, file: !919, line: 956, column: 53)
!10543 = !DILocation(line: 957, column: 86, scope: !10542)
!10544 = !DILocation(line: 957, column: 18, scope: !10542)
!10545 = !DILocation(line: 958, column: 18, scope: !10542)
!10546 = !DILocation(line: 959, column: 18, scope: !10542)
!10547 = !DILocation(line: 961, column: 9, scope: !10522)
!10548 = !DILocation(line: 952, column: 46, scope: !10549)
!10549 = !DILexicalBlockFile(scope: !10517, file: !919, discriminator: 2)
!10550 = !DILocation(line: 952, column: 9, scope: !10549)
!10551 = distinct !{!10551, !10552}
!10552 = !DILocation(line: 952, column: 9, scope: !10512)
!10553 = !DILocation(line: 962, column: 5, scope: !10512)
!10554 = !DILocation(line: 963, column: 1, scope: !10439)
!10555 = distinct !DISubprogram(name: "init_output_filter", scope: !919, file: !919, line: 2054, type: !10556, isLocal: true, isDefinition: true, scopeLine: 2056, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!10556 = !DISubroutineType(types: !10557)
!10557 = !{null, !4148, !2116, !2364}
!10558 = !DILocalVariable(name: "ofilter", arg: 1, scope: !10555, file: !919, line: 2054, type: !4148)
!10559 = !DILocation(line: 2054, column: 46, scope: !10555)
!10560 = !DILocalVariable(name: "o", arg: 2, scope: !10555, file: !919, line: 2054, type: !2116)
!10561 = !DILocation(line: 2054, column: 71, scope: !10555)
!10562 = !DILocalVariable(name: "oc", arg: 3, scope: !10555, file: !919, line: 2055, type: !2364)
!10563 = !DILocation(line: 2055, column: 49, scope: !10555)
!10564 = !DILocalVariable(name: "ost", scope: !10555, file: !919, line: 2057, type: !4056)
!10565 = !DILocation(line: 2057, column: 19, scope: !10555)
!10566 = !DILocation(line: 2059, column: 13, scope: !10555)
!10567 = !DILocation(line: 2059, column: 22, scope: !10555)
!10568 = !DILocation(line: 2059, column: 5, scope: !10555)
!10569 = !DILocation(line: 2060, column: 53, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10555, file: !919, line: 2059, column: 28)
!10571 = !DILocation(line: 2060, column: 56, scope: !10570)
!10572 = !DILocation(line: 2060, column: 36, scope: !10570)
!10573 = !DILocation(line: 2060, column: 34, scope: !10570)
!10574 = !DILocation(line: 2060, column: 65, scope: !10570)
!10575 = !DILocation(line: 2061, column: 53, scope: !10570)
!10576 = !DILocation(line: 2061, column: 56, scope: !10570)
!10577 = !DILocation(line: 2061, column: 36, scope: !10570)
!10578 = !DILocation(line: 2061, column: 34, scope: !10570)
!10579 = !DILocation(line: 2061, column: 65, scope: !10570)
!10580 = !DILocation(line: 2063, column: 9, scope: !10570)
!10581 = !DILocation(line: 2065, column: 9, scope: !10570)
!10582 = !DILocation(line: 2068, column: 5, scope: !10555)
!10583 = !DILocation(line: 2068, column: 10, scope: !10555)
!10584 = !DILocation(line: 2068, column: 23, scope: !10555)
!10585 = !DILocation(line: 2069, column: 19, scope: !10555)
!10586 = !DILocation(line: 2069, column: 5, scope: !10555)
!10587 = !DILocation(line: 2069, column: 10, scope: !10555)
!10588 = !DILocation(line: 2069, column: 17, scope: !10555)
!10589 = !DILocation(line: 2071, column: 20, scope: !10555)
!10590 = !DILocation(line: 2071, column: 5, scope: !10555)
!10591 = !DILocation(line: 2071, column: 14, scope: !10555)
!10592 = !DILocation(line: 2071, column: 18, scope: !10555)
!10593 = !DILocation(line: 2072, column: 5, scope: !10555)
!10594 = !DILocation(line: 2072, column: 14, scope: !10555)
!10595 = !DILocation(line: 2072, column: 21, scope: !10555)
!10596 = !DILocation(line: 2074, column: 9, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10555, file: !919, line: 2074, column: 9)
!10598 = !DILocation(line: 2074, column: 14, scope: !10597)
!10599 = !DILocation(line: 2074, column: 9, scope: !10555)
!10600 = !DILocation(line: 2077, column: 46, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10597, file: !919, line: 2074, column: 27)
!10602 = !DILocation(line: 2077, column: 51, scope: !10601)
!10603 = !DILocation(line: 2077, column: 63, scope: !10601)
!10604 = !DILocation(line: 2077, column: 68, scope: !10601)
!10605 = !DILocation(line: 2075, column: 9, scope: !10601)
!10606 = !DILocation(line: 2078, column: 9, scope: !10601)
!10607 = !DILocation(line: 2081, column: 9, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10555, file: !919, line: 2081, column: 9)
!10609 = !DILocation(line: 2081, column: 14, scope: !10608)
!10610 = !DILocation(line: 2081, column: 23, scope: !10608)
!10611 = !DILocation(line: 2081, column: 27, scope: !10612)
!10612 = !DILexicalBlockFile(scope: !10608, file: !919, discriminator: 1)
!10613 = !DILocation(line: 2081, column: 32, scope: !10612)
!10614 = !DILocation(line: 2081, column: 40, scope: !10612)
!10615 = !DILocation(line: 2081, column: 43, scope: !10616)
!10616 = !DILexicalBlockFile(scope: !10608, file: !919, discriminator: 2)
!10617 = !DILocation(line: 2081, column: 48, scope: !10616)
!10618 = !DILocation(line: 2081, column: 9, scope: !10616)
!10619 = !DILocalVariable(name: "opt", scope: !10620, file: !919, line: 2082, type: !982)
!10620 = distinct !DILexicalBlock(scope: !10608, file: !919, line: 2081, column: 65)
!10621 = !DILocation(line: 2082, column: 21, scope: !10620)
!10622 = !DILocation(line: 2082, column: 27, scope: !10620)
!10623 = !DILocation(line: 2082, column: 32, scope: !10620)
!10624 = !DILocation(line: 2087, column: 16, scope: !10620)
!10625 = !DILocation(line: 2087, column: 21, scope: !10620)
!10626 = !DILocation(line: 2088, column: 16, scope: !10620)
!10627 = !DILocation(line: 2088, column: 21, scope: !10620)
!10628 = !DILocation(line: 2088, column: 31, scope: !10629)
!10629 = !DILexicalBlockFile(scope: !10620, file: !919, discriminator: 1)
!10630 = !DILocation(line: 2088, column: 36, scope: !10629)
!10631 = !DILocation(line: 2088, column: 16, scope: !10629)
!10632 = !DILocation(line: 2088, column: 46, scope: !10633)
!10633 = !DILexicalBlockFile(scope: !10620, file: !919, discriminator: 2)
!10634 = !DILocation(line: 2088, column: 51, scope: !10633)
!10635 = !DILocation(line: 2088, column: 16, scope: !10633)
!10636 = !DILocation(line: 2088, column: 16, scope: !10637)
!10637 = !DILexicalBlockFile(scope: !10620, file: !919, discriminator: 3)
!10638 = !DILocation(line: 2089, column: 16, scope: !10620)
!10639 = !DILocation(line: 2089, column: 21, scope: !10620)
!10640 = !DILocation(line: 2089, column: 26, scope: !10620)
!10641 = !DILocation(line: 2089, column: 38, scope: !10620)
!10642 = !DILocation(line: 2089, column: 43, scope: !10620)
!10643 = !DILocation(line: 2089, column: 50, scope: !10620)
!10644 = !DILocation(line: 2083, column: 9, scope: !10620)
!10645 = !DILocation(line: 2090, column: 9, scope: !10620)
!10646 = !DILocation(line: 2093, column: 26, scope: !10555)
!10647 = !DILocation(line: 2093, column: 35, scope: !10555)
!10648 = !DILocation(line: 2093, column: 5, scope: !10555)
!10649 = !DILocation(line: 2094, column: 1, scope: !10555)
!10650 = distinct !DISubprogram(name: "new_video_stream", scope: !919, file: !919, line: 1652, type: !10651, isLocal: true, isDefinition: true, scopeLine: 1653, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!10651 = !DISubroutineType(types: !10652)
!10652 = !{!4056, !2116, !2364, !998}
!10653 = !DILocalVariable(name: "o", arg: 1, scope: !10650, file: !919, line: 1652, type: !2116)
!10654 = !DILocation(line: 1652, column: 55, scope: !10650)
!10655 = !DILocalVariable(name: "oc", arg: 2, scope: !10650, file: !919, line: 1652, type: !2364)
!10656 = !DILocation(line: 1652, column: 75, scope: !10650)
!10657 = !DILocalVariable(name: "source_index", arg: 3, scope: !10650, file: !919, line: 1652, type: !998)
!10658 = !DILocation(line: 1652, column: 83, scope: !10650)
!10659 = !DILocalVariable(name: "st", scope: !10650, file: !919, line: 1654, type: !2562)
!10660 = !DILocation(line: 1654, column: 15, scope: !10650)
!10661 = !DILocalVariable(name: "ost", scope: !10650, file: !919, line: 1655, type: !4056)
!10662 = !DILocation(line: 1655, column: 19, scope: !10650)
!10663 = !DILocalVariable(name: "video_enc", scope: !10650, file: !919, line: 1656, type: !1361)
!10664 = !DILocation(line: 1656, column: 21, scope: !10650)
!10665 = !DILocalVariable(name: "frame_rate", scope: !10650, file: !919, line: 1657, type: !1105)
!10666 = !DILocation(line: 1657, column: 11, scope: !10650)
!10667 = !DILocalVariable(name: "frame_aspect_ratio", scope: !10650, file: !919, line: 1657, type: !1105)
!10668 = !DILocation(line: 1657, column: 30, scope: !10650)
!10669 = !DILocation(line: 1659, column: 29, scope: !10650)
!10670 = !DILocation(line: 1659, column: 32, scope: !10650)
!10671 = !DILocation(line: 1659, column: 56, scope: !10650)
!10672 = !DILocation(line: 1659, column: 11, scope: !10650)
!10673 = !DILocation(line: 1659, column: 9, scope: !10650)
!10674 = !DILocation(line: 1660, column: 10, scope: !10650)
!10675 = !DILocation(line: 1660, column: 15, scope: !10650)
!10676 = !DILocation(line: 1660, column: 8, scope: !10650)
!10677 = !DILocation(line: 1661, column: 17, scope: !10650)
!10678 = !DILocation(line: 1661, column: 22, scope: !10650)
!10679 = !DILocation(line: 1661, column: 15, scope: !10650)
!10680 = !DILocalVariable(name: "i", scope: !10681, file: !919, line: 1663, type: !998)
!10681 = distinct !DILexicalBlock(scope: !10650, file: !919, line: 1663, column: 5)
!10682 = !DILocation(line: 1663, column: 11, scope: !10681)
!10683 = !DILocalVariable(name: "ret", scope: !10681, file: !919, line: 1663, type: !998)
!10684 = !DILocation(line: 1663, column: 14, scope: !10681)
!10685 = !DILocation(line: 1663, column: 26, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10681, file: !919, line: 1663, column: 19)
!10687 = !DILocation(line: 1663, column: 24, scope: !10686)
!10688 = !DILocation(line: 1663, column: 31, scope: !10689)
!10689 = !DILexicalBlockFile(scope: !10690, file: !919, discriminator: 1)
!10690 = distinct !DILexicalBlock(scope: !10686, file: !919, line: 1663, column: 19)
!10691 = !DILocation(line: 1663, column: 35, scope: !10689)
!10692 = !DILocation(line: 1663, column: 38, scope: !10689)
!10693 = !DILocation(line: 1663, column: 33, scope: !10689)
!10694 = !DILocation(line: 1663, column: 19, scope: !10689)
!10695 = !DILocalVariable(name: "spec", scope: !10696, file: !919, line: 1663, type: !1105)
!10696 = distinct !DILexicalBlock(scope: !10690, file: !919, line: 1663, column: 59)
!10697 = !DILocation(line: 1663, column: 67, scope: !10696)
!10698 = !DILocation(line: 1663, column: 89, scope: !10699)
!10699 = !DILexicalBlockFile(scope: !10696, file: !919, discriminator: 2)
!10700 = !DILocation(line: 1663, column: 74, scope: !10699)
!10701 = !DILocation(line: 1663, column: 77, scope: !10699)
!10702 = !DILocation(line: 1663, column: 92, scope: !10699)
!10703 = !DILocation(line: 1663, column: 67, scope: !10699)
!10704 = !DILocation(line: 1663, column: 137, scope: !10699)
!10705 = !DILocation(line: 1663, column: 141, scope: !10699)
!10706 = !DILocation(line: 1663, column: 145, scope: !10699)
!10707 = !DILocation(line: 1663, column: 114, scope: !10699)
!10708 = !DILocation(line: 1663, column: 112, scope: !10699)
!10709 = !DILocation(line: 1663, column: 152, scope: !10699)
!10710 = !DILocation(line: 1663, column: 107, scope: !10699)
!10711 = !DILocation(line: 1663, column: 185, scope: !10712)
!10712 = !DILexicalBlockFile(scope: !10713, file: !919, discriminator: 3)
!10713 = distinct !DILexicalBlock(scope: !10696, file: !919, line: 1663, column: 107)
!10714 = !DILocation(line: 1663, column: 170, scope: !10712)
!10715 = !DILocation(line: 1663, column: 173, scope: !10712)
!10716 = !DILocation(line: 1663, column: 188, scope: !10712)
!10717 = !DILocation(line: 1663, column: 190, scope: !10712)
!10718 = !DILocation(line: 1663, column: 168, scope: !10712)
!10719 = !DILocation(line: 1663, column: 157, scope: !10712)
!10720 = !DILocation(line: 1663, column: 204, scope: !10721)
!10721 = !DILexicalBlockFile(scope: !10722, file: !919, discriminator: 4)
!10722 = distinct !DILexicalBlock(scope: !10713, file: !919, line: 1663, column: 204)
!10723 = !DILocation(line: 1663, column: 208, scope: !10721)
!10724 = !DILocation(line: 1663, column: 213, scope: !10725)
!10725 = !DILexicalBlockFile(scope: !10722, file: !919, discriminator: 5)
!10726 = !DILocation(line: 1663, column: 230, scope: !10727)
!10727 = !DILexicalBlockFile(scope: !10696, file: !919, discriminator: 6)
!10728 = !DILocation(line: 1663, column: 55, scope: !10729)
!10729 = !DILexicalBlockFile(scope: !10690, file: !919, discriminator: 7)
!10730 = !DILocation(line: 1663, column: 19, scope: !10729)
!10731 = distinct !{!10731, !10732}
!10732 = !DILocation(line: 1663, column: 19, scope: !10681)
!10733 = !DILocation(line: 1664, column: 9, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10650, file: !919, line: 1664, column: 9)
!10735 = !DILocation(line: 1664, column: 20, scope: !10734)
!10736 = !DILocation(line: 1664, column: 44, scope: !10737)
!10737 = !DILexicalBlockFile(scope: !10734, file: !919, discriminator: 1)
!10738 = !DILocation(line: 1664, column: 49, scope: !10737)
!10739 = !DILocation(line: 1664, column: 61, scope: !10737)
!10740 = !DILocation(line: 1664, column: 23, scope: !10737)
!10741 = !DILocation(line: 1664, column: 73, scope: !10737)
!10742 = !DILocation(line: 1664, column: 9, scope: !10737)
!10743 = !DILocation(line: 1665, column: 57, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10734, file: !919, line: 1664, column: 78)
!10745 = !DILocation(line: 1665, column: 9, scope: !10744)
!10746 = !DILocation(line: 1666, column: 9, scope: !10744)
!10747 = !DILocation(line: 1668, column: 9, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10650, file: !919, line: 1668, column: 9)
!10749 = !DILocation(line: 1668, column: 20, scope: !10748)
!10750 = !DILocation(line: 1668, column: 23, scope: !10751)
!10751 = !DILexicalBlockFile(scope: !10748, file: !919, discriminator: 1)
!10752 = !DILocation(line: 1668, column: 41, scope: !10751)
!10753 = !DILocation(line: 1668, column: 9, scope: !10751)
!10754 = !DILocation(line: 1669, column: 9, scope: !10748)
!10755 = !DILocalVariable(name: "i", scope: !10756, file: !919, line: 1671, type: !998)
!10756 = distinct !DILexicalBlock(scope: !10650, file: !919, line: 1671, column: 5)
!10757 = !DILocation(line: 1671, column: 11, scope: !10756)
!10758 = !DILocalVariable(name: "ret", scope: !10756, file: !919, line: 1671, type: !998)
!10759 = !DILocation(line: 1671, column: 14, scope: !10756)
!10760 = !DILocation(line: 1671, column: 26, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10756, file: !919, line: 1671, column: 19)
!10762 = !DILocation(line: 1671, column: 24, scope: !10761)
!10763 = !DILocation(line: 1671, column: 31, scope: !10764)
!10764 = !DILexicalBlockFile(scope: !10765, file: !919, discriminator: 1)
!10765 = distinct !DILexicalBlock(scope: !10761, file: !919, line: 1671, column: 19)
!10766 = !DILocation(line: 1671, column: 35, scope: !10764)
!10767 = !DILocation(line: 1671, column: 38, scope: !10764)
!10768 = !DILocation(line: 1671, column: 33, scope: !10764)
!10769 = !DILocation(line: 1671, column: 19, scope: !10764)
!10770 = !DILocalVariable(name: "spec", scope: !10771, file: !919, line: 1671, type: !1105)
!10771 = distinct !DILexicalBlock(scope: !10765, file: !919, line: 1671, column: 67)
!10772 = !DILocation(line: 1671, column: 75, scope: !10771)
!10773 = !DILocation(line: 1671, column: 105, scope: !10774)
!10774 = !DILexicalBlockFile(scope: !10771, file: !919, discriminator: 2)
!10775 = !DILocation(line: 1671, column: 82, scope: !10774)
!10776 = !DILocation(line: 1671, column: 85, scope: !10774)
!10777 = !DILocation(line: 1671, column: 108, scope: !10774)
!10778 = !DILocation(line: 1671, column: 75, scope: !10774)
!10779 = !DILocation(line: 1671, column: 153, scope: !10774)
!10780 = !DILocation(line: 1671, column: 157, scope: !10774)
!10781 = !DILocation(line: 1671, column: 161, scope: !10774)
!10782 = !DILocation(line: 1671, column: 130, scope: !10774)
!10783 = !DILocation(line: 1671, column: 128, scope: !10774)
!10784 = !DILocation(line: 1671, column: 168, scope: !10774)
!10785 = !DILocation(line: 1671, column: 123, scope: !10774)
!10786 = !DILocation(line: 1671, column: 217, scope: !10787)
!10787 = !DILexicalBlockFile(scope: !10788, file: !919, discriminator: 3)
!10788 = distinct !DILexicalBlock(scope: !10771, file: !919, line: 1671, column: 123)
!10789 = !DILocation(line: 1671, column: 194, scope: !10787)
!10790 = !DILocation(line: 1671, column: 197, scope: !10787)
!10791 = !DILocation(line: 1671, column: 220, scope: !10787)
!10792 = !DILocation(line: 1671, column: 222, scope: !10787)
!10793 = !DILocation(line: 1671, column: 192, scope: !10787)
!10794 = !DILocation(line: 1671, column: 173, scope: !10787)
!10795 = !DILocation(line: 1671, column: 236, scope: !10796)
!10796 = !DILexicalBlockFile(scope: !10797, file: !919, discriminator: 4)
!10797 = distinct !DILexicalBlock(scope: !10788, file: !919, line: 1671, column: 236)
!10798 = !DILocation(line: 1671, column: 240, scope: !10796)
!10799 = !DILocation(line: 1671, column: 245, scope: !10800)
!10800 = !DILexicalBlockFile(scope: !10797, file: !919, discriminator: 5)
!10801 = !DILocation(line: 1671, column: 262, scope: !10802)
!10802 = !DILexicalBlockFile(scope: !10771, file: !919, discriminator: 6)
!10803 = !DILocation(line: 1671, column: 63, scope: !10804)
!10804 = !DILexicalBlockFile(scope: !10765, file: !919, discriminator: 7)
!10805 = !DILocation(line: 1671, column: 19, scope: !10804)
!10806 = distinct !{!10806, !10807}
!10807 = !DILocation(line: 1671, column: 19, scope: !10756)
!10808 = !DILocation(line: 1672, column: 9, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10650, file: !919, line: 1672, column: 9)
!10810 = !DILocation(line: 1672, column: 9, scope: !10650)
!10811 = !DILocalVariable(name: "q", scope: !10812, file: !919, line: 1673, type: !1011)
!10812 = distinct !DILexicalBlock(scope: !10809, file: !919, line: 1672, column: 29)
!10813 = !DILocation(line: 1673, column: 20, scope: !10812)
!10814 = !DILocation(line: 1674, column: 32, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10812, file: !919, line: 1674, column: 13)
!10816 = !DILocation(line: 1674, column: 13, scope: !10815)
!10817 = !DILocation(line: 1674, column: 65, scope: !10815)
!10818 = !DILocation(line: 1674, column: 69, scope: !10815)
!10819 = !DILocation(line: 1675, column: 15, scope: !10815)
!10820 = !DILocation(line: 1675, column: 19, scope: !10815)
!10821 = !DILocation(line: 1675, column: 24, scope: !10815)
!10822 = !DILocation(line: 1675, column: 29, scope: !10823)
!10823 = !DILexicalBlockFile(scope: !10815, file: !919, discriminator: 1)
!10824 = !DILocation(line: 1675, column: 33, scope: !10823)
!10825 = !DILocation(line: 1674, column: 13, scope: !10826)
!10826 = !DILexicalBlockFile(scope: !10812, file: !919, discriminator: 1)
!10827 = !DILocation(line: 1676, column: 58, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10815, file: !919, line: 1675, column: 39)
!10829 = !DILocation(line: 1676, column: 13, scope: !10828)
!10830 = !DILocation(line: 1677, column: 13, scope: !10828)
!10831 = !DILocation(line: 1679, column: 9, scope: !10812)
!10832 = !DILocation(line: 1679, column: 14, scope: !10812)
!10833 = !DILocation(line: 1679, column: 35, scope: !10812)
!10834 = !DILocation(line: 1680, column: 5, scope: !10812)
!10835 = !DILocalVariable(name: "i", scope: !10836, file: !919, line: 1682, type: !998)
!10836 = distinct !DILexicalBlock(scope: !10650, file: !919, line: 1682, column: 5)
!10837 = !DILocation(line: 1682, column: 11, scope: !10836)
!10838 = !DILocalVariable(name: "ret", scope: !10836, file: !919, line: 1682, type: !998)
!10839 = !DILocation(line: 1682, column: 14, scope: !10836)
!10840 = !DILocation(line: 1682, column: 26, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10836, file: !919, line: 1682, column: 19)
!10842 = !DILocation(line: 1682, column: 24, scope: !10841)
!10843 = !DILocation(line: 1682, column: 31, scope: !10844)
!10844 = !DILexicalBlockFile(scope: !10845, file: !919, discriminator: 1)
!10845 = distinct !DILexicalBlock(scope: !10841, file: !919, line: 1682, column: 19)
!10846 = !DILocation(line: 1682, column: 35, scope: !10844)
!10847 = !DILocation(line: 1682, column: 38, scope: !10844)
!10848 = !DILocation(line: 1682, column: 33, scope: !10844)
!10849 = !DILocation(line: 1682, column: 19, scope: !10844)
!10850 = !DILocalVariable(name: "spec", scope: !10851, file: !919, line: 1682, type: !1105)
!10851 = distinct !DILexicalBlock(scope: !10845, file: !919, line: 1682, column: 62)
!10852 = !DILocation(line: 1682, column: 70, scope: !10851)
!10853 = !DILocation(line: 1682, column: 95, scope: !10854)
!10854 = !DILexicalBlockFile(scope: !10851, file: !919, discriminator: 2)
!10855 = !DILocation(line: 1682, column: 77, scope: !10854)
!10856 = !DILocation(line: 1682, column: 80, scope: !10854)
!10857 = !DILocation(line: 1682, column: 98, scope: !10854)
!10858 = !DILocation(line: 1682, column: 70, scope: !10854)
!10859 = !DILocation(line: 1682, column: 143, scope: !10854)
!10860 = !DILocation(line: 1682, column: 147, scope: !10854)
!10861 = !DILocation(line: 1682, column: 151, scope: !10854)
!10862 = !DILocation(line: 1682, column: 120, scope: !10854)
!10863 = !DILocation(line: 1682, column: 118, scope: !10854)
!10864 = !DILocation(line: 1682, column: 158, scope: !10854)
!10865 = !DILocation(line: 1682, column: 113, scope: !10854)
!10866 = !DILocation(line: 1682, column: 203, scope: !10867)
!10867 = !DILexicalBlockFile(scope: !10868, file: !919, discriminator: 3)
!10868 = distinct !DILexicalBlock(scope: !10851, file: !919, line: 1682, column: 113)
!10869 = !DILocation(line: 1682, column: 185, scope: !10867)
!10870 = !DILocation(line: 1682, column: 188, scope: !10867)
!10871 = !DILocation(line: 1682, column: 206, scope: !10867)
!10872 = !DILocation(line: 1682, column: 208, scope: !10867)
!10873 = !DILocation(line: 1682, column: 163, scope: !10867)
!10874 = !DILocation(line: 1682, column: 168, scope: !10867)
!10875 = !DILocation(line: 1682, column: 183, scope: !10867)
!10876 = !DILocation(line: 1682, column: 222, scope: !10877)
!10877 = !DILexicalBlockFile(scope: !10878, file: !919, discriminator: 4)
!10878 = distinct !DILexicalBlock(scope: !10868, file: !919, line: 1682, column: 222)
!10879 = !DILocation(line: 1682, column: 226, scope: !10877)
!10880 = !DILocation(line: 1682, column: 231, scope: !10881)
!10881 = !DILexicalBlockFile(scope: !10878, file: !919, discriminator: 5)
!10882 = !DILocation(line: 1682, column: 248, scope: !10883)
!10883 = !DILexicalBlockFile(scope: !10851, file: !919, discriminator: 6)
!10884 = !DILocation(line: 1682, column: 58, scope: !10885)
!10885 = !DILexicalBlockFile(scope: !10845, file: !919, discriminator: 7)
!10886 = !DILocation(line: 1682, column: 19, scope: !10885)
!10887 = distinct !{!10887, !10888}
!10888 = !DILocation(line: 1682, column: 19, scope: !10836)
!10889 = !DILocalVariable(name: "i", scope: !10890, file: !919, line: 1683, type: !998)
!10890 = distinct !DILexicalBlock(scope: !10650, file: !919, line: 1683, column: 5)
!10891 = !DILocation(line: 1683, column: 11, scope: !10890)
!10892 = !DILocalVariable(name: "ret", scope: !10890, file: !919, line: 1683, type: !998)
!10893 = !DILocation(line: 1683, column: 14, scope: !10890)
!10894 = !DILocation(line: 1683, column: 26, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10890, file: !919, line: 1683, column: 19)
!10896 = !DILocation(line: 1683, column: 24, scope: !10895)
!10897 = !DILocation(line: 1683, column: 31, scope: !10898)
!10898 = !DILexicalBlockFile(scope: !10899, file: !919, discriminator: 1)
!10899 = distinct !DILexicalBlock(scope: !10895, file: !919, line: 1683, column: 19)
!10900 = !DILocation(line: 1683, column: 35, scope: !10898)
!10901 = !DILocation(line: 1683, column: 38, scope: !10898)
!10902 = !DILocation(line: 1683, column: 33, scope: !10898)
!10903 = !DILocation(line: 1683, column: 19, scope: !10898)
!10904 = !DILocalVariable(name: "spec", scope: !10905, file: !919, line: 1683, type: !1105)
!10905 = distinct !DILexicalBlock(scope: !10899, file: !919, line: 1683, column: 55)
!10906 = !DILocation(line: 1683, column: 63, scope: !10905)
!10907 = !DILocation(line: 1683, column: 81, scope: !10908)
!10908 = !DILexicalBlockFile(scope: !10905, file: !919, discriminator: 2)
!10909 = !DILocation(line: 1683, column: 70, scope: !10908)
!10910 = !DILocation(line: 1683, column: 73, scope: !10908)
!10911 = !DILocation(line: 1683, column: 84, scope: !10908)
!10912 = !DILocation(line: 1683, column: 63, scope: !10908)
!10913 = !DILocation(line: 1683, column: 129, scope: !10908)
!10914 = !DILocation(line: 1683, column: 133, scope: !10908)
!10915 = !DILocation(line: 1683, column: 137, scope: !10908)
!10916 = !DILocation(line: 1683, column: 106, scope: !10908)
!10917 = !DILocation(line: 1683, column: 104, scope: !10908)
!10918 = !DILocation(line: 1683, column: 144, scope: !10908)
!10919 = !DILocation(line: 1683, column: 99, scope: !10908)
!10920 = !DILocation(line: 1683, column: 175, scope: !10921)
!10921 = !DILexicalBlockFile(scope: !10922, file: !919, discriminator: 3)
!10922 = distinct !DILexicalBlock(scope: !10905, file: !919, line: 1683, column: 99)
!10923 = !DILocation(line: 1683, column: 164, scope: !10921)
!10924 = !DILocation(line: 1683, column: 167, scope: !10921)
!10925 = !DILocation(line: 1683, column: 178, scope: !10921)
!10926 = !DILocation(line: 1683, column: 180, scope: !10921)
!10927 = !DILocation(line: 1683, column: 149, scope: !10921)
!10928 = !DILocation(line: 1683, column: 154, scope: !10921)
!10929 = !DILocation(line: 1683, column: 162, scope: !10921)
!10930 = !DILocation(line: 1683, column: 194, scope: !10931)
!10931 = !DILexicalBlockFile(scope: !10932, file: !919, discriminator: 4)
!10932 = distinct !DILexicalBlock(scope: !10922, file: !919, line: 1683, column: 194)
!10933 = !DILocation(line: 1683, column: 198, scope: !10931)
!10934 = !DILocation(line: 1683, column: 203, scope: !10935)
!10935 = !DILexicalBlockFile(scope: !10932, file: !919, discriminator: 5)
!10936 = !DILocation(line: 1683, column: 220, scope: !10937)
!10937 = !DILexicalBlockFile(scope: !10905, file: !919, discriminator: 6)
!10938 = !DILocation(line: 1683, column: 51, scope: !10939)
!10939 = !DILexicalBlockFile(scope: !10899, file: !919, discriminator: 7)
!10940 = !DILocation(line: 1683, column: 19, scope: !10939)
!10941 = distinct !{!10941, !10942}
!10942 = !DILocation(line: 1683, column: 19, scope: !10890)
!10943 = !DILocation(line: 1684, column: 9, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10650, file: !919, line: 1684, column: 9)
!10945 = !DILocation(line: 1684, column: 12, scope: !10944)
!10946 = !DILocation(line: 1684, column: 23, scope: !10944)
!10947 = !DILocation(line: 1684, column: 9, scope: !10650)
!10948 = !DILocation(line: 1685, column: 110, scope: !10944)
!10949 = !DILocation(line: 1685, column: 115, scope: !10944)
!10950 = !DILocation(line: 1685, column: 9, scope: !10944)
!10951 = !DILocation(line: 1687, column: 10, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10650, file: !919, line: 1687, column: 9)
!10953 = !DILocation(line: 1687, column: 15, scope: !10952)
!10954 = !DILocation(line: 1687, column: 9, scope: !10650)
!10955 = !DILocalVariable(name: "p", scope: !10956, file: !919, line: 1688, type: !982)
!10956 = distinct !DILexicalBlock(scope: !10952, file: !919, line: 1687, column: 28)
!10957 = !DILocation(line: 1688, column: 21, scope: !10956)
!10958 = !DILocalVariable(name: "frame_size", scope: !10956, file: !919, line: 1689, type: !1105)
!10959 = !DILocation(line: 1689, column: 15, scope: !10956)
!10960 = !DILocalVariable(name: "frame_pix_fmt", scope: !10956, file: !919, line: 1690, type: !1105)
!10961 = !DILocation(line: 1690, column: 15, scope: !10956)
!10962 = !DILocalVariable(name: "intra_matrix", scope: !10956, file: !919, line: 1691, type: !1105)
!10963 = !DILocation(line: 1691, column: 15, scope: !10956)
!10964 = !DILocalVariable(name: "inter_matrix", scope: !10956, file: !919, line: 1691, type: !1105)
!10965 = !DILocation(line: 1691, column: 36, scope: !10956)
!10966 = !DILocalVariable(name: "chroma_intra_matrix", scope: !10956, file: !919, line: 1692, type: !1105)
!10967 = !DILocation(line: 1692, column: 15, scope: !10956)
!10968 = !DILocalVariable(name: "do_pass", scope: !10956, file: !919, line: 1693, type: !998)
!10969 = !DILocation(line: 1693, column: 13, scope: !10956)
!10970 = !DILocalVariable(name: "i", scope: !10956, file: !919, line: 1694, type: !998)
!10971 = !DILocation(line: 1694, column: 13, scope: !10956)
!10972 = !DILocalVariable(name: "i", scope: !10973, file: !919, line: 1696, type: !998)
!10973 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1696, column: 9)
!10974 = !DILocation(line: 1696, column: 15, scope: !10973)
!10975 = !DILocalVariable(name: "ret", scope: !10973, file: !919, line: 1696, type: !998)
!10976 = !DILocation(line: 1696, column: 18, scope: !10973)
!10977 = !DILocation(line: 1696, column: 30, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10973, file: !919, line: 1696, column: 23)
!10979 = !DILocation(line: 1696, column: 28, scope: !10978)
!10980 = !DILocation(line: 1696, column: 35, scope: !10981)
!10981 = !DILexicalBlockFile(scope: !10982, file: !919, discriminator: 1)
!10982 = distinct !DILexicalBlock(scope: !10978, file: !919, line: 1696, column: 23)
!10983 = !DILocation(line: 1696, column: 39, scope: !10981)
!10984 = !DILocation(line: 1696, column: 42, scope: !10981)
!10985 = !DILocation(line: 1696, column: 37, scope: !10981)
!10986 = !DILocation(line: 1696, column: 23, scope: !10981)
!10987 = !DILocalVariable(name: "spec", scope: !10988, file: !919, line: 1696, type: !1105)
!10988 = distinct !DILexicalBlock(scope: !10982, file: !919, line: 1696, column: 63)
!10989 = !DILocation(line: 1696, column: 71, scope: !10988)
!10990 = !DILocation(line: 1696, column: 93, scope: !10991)
!10991 = !DILexicalBlockFile(scope: !10988, file: !919, discriminator: 2)
!10992 = !DILocation(line: 1696, column: 78, scope: !10991)
!10993 = !DILocation(line: 1696, column: 81, scope: !10991)
!10994 = !DILocation(line: 1696, column: 96, scope: !10991)
!10995 = !DILocation(line: 1696, column: 71, scope: !10991)
!10996 = !DILocation(line: 1696, column: 141, scope: !10991)
!10997 = !DILocation(line: 1696, column: 145, scope: !10991)
!10998 = !DILocation(line: 1696, column: 149, scope: !10991)
!10999 = !DILocation(line: 1696, column: 118, scope: !10991)
!11000 = !DILocation(line: 1696, column: 116, scope: !10991)
!11001 = !DILocation(line: 1696, column: 156, scope: !10991)
!11002 = !DILocation(line: 1696, column: 111, scope: !10991)
!11003 = !DILocation(line: 1696, column: 189, scope: !11004)
!11004 = !DILexicalBlockFile(scope: !11005, file: !919, discriminator: 3)
!11005 = distinct !DILexicalBlock(scope: !10988, file: !919, line: 1696, column: 111)
!11006 = !DILocation(line: 1696, column: 174, scope: !11004)
!11007 = !DILocation(line: 1696, column: 177, scope: !11004)
!11008 = !DILocation(line: 1696, column: 192, scope: !11004)
!11009 = !DILocation(line: 1696, column: 194, scope: !11004)
!11010 = !DILocation(line: 1696, column: 172, scope: !11004)
!11011 = !DILocation(line: 1696, column: 161, scope: !11004)
!11012 = !DILocation(line: 1696, column: 208, scope: !11013)
!11013 = !DILexicalBlockFile(scope: !11014, file: !919, discriminator: 4)
!11014 = distinct !DILexicalBlock(scope: !11005, file: !919, line: 1696, column: 208)
!11015 = !DILocation(line: 1696, column: 212, scope: !11013)
!11016 = !DILocation(line: 1696, column: 217, scope: !11017)
!11017 = !DILexicalBlockFile(scope: !11014, file: !919, discriminator: 5)
!11018 = !DILocation(line: 1696, column: 234, scope: !11019)
!11019 = !DILexicalBlockFile(scope: !10988, file: !919, discriminator: 6)
!11020 = !DILocation(line: 1696, column: 59, scope: !11021)
!11021 = !DILexicalBlockFile(scope: !10982, file: !919, discriminator: 7)
!11022 = !DILocation(line: 1696, column: 23, scope: !11021)
!11023 = distinct !{!11023, !11024}
!11024 = !DILocation(line: 1696, column: 23, scope: !10973)
!11025 = !DILocation(line: 1697, column: 13, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1697, column: 13)
!11027 = !DILocation(line: 1697, column: 24, scope: !11026)
!11028 = !DILocation(line: 1697, column: 48, scope: !11029)
!11029 = !DILexicalBlockFile(scope: !11026, file: !919, discriminator: 1)
!11030 = !DILocation(line: 1697, column: 59, scope: !11029)
!11031 = !DILocation(line: 1697, column: 67, scope: !11029)
!11032 = !DILocation(line: 1697, column: 78, scope: !11029)
!11033 = !DILocation(line: 1697, column: 86, scope: !11029)
!11034 = !DILocation(line: 1697, column: 27, scope: !11029)
!11035 = !DILocation(line: 1697, column: 98, scope: !11029)
!11036 = !DILocation(line: 1697, column: 13, scope: !11029)
!11037 = !DILocation(line: 1698, column: 57, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11026, file: !919, line: 1697, column: 103)
!11039 = !DILocation(line: 1698, column: 13, scope: !11038)
!11040 = !DILocation(line: 1699, column: 13, scope: !11038)
!11041 = !DILocation(line: 1702, column: 42, scope: !10956)
!11042 = !DILocation(line: 1702, column: 9, scope: !10956)
!11043 = !DILocation(line: 1702, column: 20, scope: !10956)
!11044 = !DILocation(line: 1702, column: 40, scope: !10956)
!11045 = !DILocalVariable(name: "i", scope: !11046, file: !919, line: 1703, type: !998)
!11046 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1703, column: 9)
!11047 = !DILocation(line: 1703, column: 15, scope: !11046)
!11048 = !DILocalVariable(name: "ret", scope: !11046, file: !919, line: 1703, type: !998)
!11049 = !DILocation(line: 1703, column: 18, scope: !11046)
!11050 = !DILocation(line: 1703, column: 30, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11046, file: !919, line: 1703, column: 23)
!11052 = !DILocation(line: 1703, column: 28, scope: !11051)
!11053 = !DILocation(line: 1703, column: 35, scope: !11054)
!11054 = !DILexicalBlockFile(scope: !11055, file: !919, discriminator: 1)
!11055 = distinct !DILexicalBlock(scope: !11051, file: !919, line: 1703, column: 23)
!11056 = !DILocation(line: 1703, column: 39, scope: !11054)
!11057 = !DILocation(line: 1703, column: 42, scope: !11054)
!11058 = !DILocation(line: 1703, column: 37, scope: !11054)
!11059 = !DILocation(line: 1703, column: 23, scope: !11054)
!11060 = !DILocalVariable(name: "spec", scope: !11061, file: !919, line: 1703, type: !1105)
!11061 = distinct !DILexicalBlock(scope: !11055, file: !919, line: 1703, column: 66)
!11062 = !DILocation(line: 1703, column: 74, scope: !11061)
!11063 = !DILocation(line: 1703, column: 99, scope: !11064)
!11064 = !DILexicalBlockFile(scope: !11061, file: !919, discriminator: 2)
!11065 = !DILocation(line: 1703, column: 81, scope: !11064)
!11066 = !DILocation(line: 1703, column: 84, scope: !11064)
!11067 = !DILocation(line: 1703, column: 102, scope: !11064)
!11068 = !DILocation(line: 1703, column: 74, scope: !11064)
!11069 = !DILocation(line: 1703, column: 147, scope: !11064)
!11070 = !DILocation(line: 1703, column: 151, scope: !11064)
!11071 = !DILocation(line: 1703, column: 155, scope: !11064)
!11072 = !DILocation(line: 1703, column: 124, scope: !11064)
!11073 = !DILocation(line: 1703, column: 122, scope: !11064)
!11074 = !DILocation(line: 1703, column: 162, scope: !11064)
!11075 = !DILocation(line: 1703, column: 117, scope: !11064)
!11076 = !DILocation(line: 1703, column: 201, scope: !11077)
!11077 = !DILexicalBlockFile(scope: !11078, file: !919, discriminator: 3)
!11078 = distinct !DILexicalBlock(scope: !11061, file: !919, line: 1703, column: 117)
!11079 = !DILocation(line: 1703, column: 183, scope: !11077)
!11080 = !DILocation(line: 1703, column: 186, scope: !11077)
!11081 = !DILocation(line: 1703, column: 204, scope: !11077)
!11082 = !DILocation(line: 1703, column: 206, scope: !11077)
!11083 = !DILocation(line: 1703, column: 181, scope: !11077)
!11084 = !DILocation(line: 1703, column: 167, scope: !11077)
!11085 = !DILocation(line: 1703, column: 220, scope: !11086)
!11086 = !DILexicalBlockFile(scope: !11087, file: !919, discriminator: 4)
!11087 = distinct !DILexicalBlock(scope: !11078, file: !919, line: 1703, column: 220)
!11088 = !DILocation(line: 1703, column: 224, scope: !11086)
!11089 = !DILocation(line: 1703, column: 229, scope: !11090)
!11090 = !DILexicalBlockFile(scope: !11087, file: !919, discriminator: 5)
!11091 = !DILocation(line: 1703, column: 246, scope: !11092)
!11092 = !DILexicalBlockFile(scope: !11061, file: !919, discriminator: 6)
!11093 = !DILocation(line: 1703, column: 62, scope: !11094)
!11094 = !DILexicalBlockFile(scope: !11055, file: !919, discriminator: 7)
!11095 = !DILocation(line: 1703, column: 23, scope: !11094)
!11096 = distinct !{!11096, !11097}
!11097 = !DILocation(line: 1703, column: 23, scope: !11046)
!11098 = !DILocation(line: 1704, column: 13, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1704, column: 13)
!11100 = !DILocation(line: 1704, column: 27, scope: !11099)
!11101 = !DILocation(line: 1704, column: 31, scope: !11102)
!11102 = !DILexicalBlockFile(scope: !11099, file: !919, discriminator: 1)
!11103 = !DILocation(line: 1704, column: 30, scope: !11102)
!11104 = !DILocation(line: 1704, column: 45, scope: !11102)
!11105 = !DILocation(line: 1704, column: 13, scope: !11102)
!11106 = !DILocation(line: 1705, column: 13, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11099, file: !919, line: 1704, column: 53)
!11108 = !DILocation(line: 1705, column: 18, scope: !11107)
!11109 = !DILocation(line: 1705, column: 31, scope: !11107)
!11110 = !DILocation(line: 1706, column: 19, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11107, file: !919, line: 1706, column: 17)
!11112 = !DILocation(line: 1706, column: 18, scope: !11111)
!11113 = !DILocation(line: 1706, column: 17, scope: !11107)
!11114 = !DILocation(line: 1707, column: 31, scope: !11111)
!11115 = !DILocation(line: 1707, column: 17, scope: !11111)
!11116 = !DILocation(line: 1708, column: 9, scope: !11107)
!11117 = !DILocation(line: 1709, column: 13, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1709, column: 13)
!11119 = !DILocation(line: 1709, column: 27, scope: !11118)
!11120 = !DILocation(line: 1709, column: 67, scope: !11121)
!11121 = !DILexicalBlockFile(scope: !11118, file: !919, discriminator: 1)
!11122 = !DILocation(line: 1709, column: 52, scope: !11121)
!11123 = !DILocation(line: 1709, column: 31, scope: !11121)
!11124 = !DILocation(line: 1709, column: 42, scope: !11121)
!11125 = !DILocation(line: 1709, column: 50, scope: !11121)
!11126 = !DILocation(line: 1709, column: 83, scope: !11121)
!11127 = !DILocation(line: 1709, column: 13, scope: !11121)
!11128 = !DILocation(line: 1710, column: 69, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11118, file: !919, line: 1709, column: 103)
!11130 = !DILocation(line: 1710, column: 13, scope: !11129)
!11131 = !DILocation(line: 1711, column: 13, scope: !11129)
!11132 = !DILocation(line: 1713, column: 9, scope: !10956)
!11133 = !DILocation(line: 1713, column: 13, scope: !10956)
!11134 = !DILocation(line: 1713, column: 35, scope: !10956)
!11135 = !DILocation(line: 1713, column: 46, scope: !10956)
!11136 = !DILocation(line: 1715, column: 13, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1715, column: 13)
!11138 = !DILocation(line: 1715, column: 13, scope: !10956)
!11139 = !DILocation(line: 1716, column: 13, scope: !11137)
!11140 = !DILocation(line: 1716, column: 24, scope: !11137)
!11141 = !DILocation(line: 1716, column: 33, scope: !11137)
!11142 = !DILocalVariable(name: "i", scope: !11143, file: !919, line: 1717, type: !998)
!11143 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1717, column: 9)
!11144 = !DILocation(line: 1717, column: 15, scope: !11143)
!11145 = !DILocalVariable(name: "ret", scope: !11143, file: !919, line: 1717, type: !998)
!11146 = !DILocation(line: 1717, column: 18, scope: !11143)
!11147 = !DILocation(line: 1717, column: 30, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11143, file: !919, line: 1717, column: 23)
!11149 = !DILocation(line: 1717, column: 28, scope: !11148)
!11150 = !DILocation(line: 1717, column: 35, scope: !11151)
!11151 = !DILexicalBlockFile(scope: !11152, file: !919, discriminator: 1)
!11152 = distinct !DILexicalBlock(scope: !11148, file: !919, line: 1717, column: 23)
!11153 = !DILocation(line: 1717, column: 39, scope: !11151)
!11154 = !DILocation(line: 1717, column: 42, scope: !11151)
!11155 = !DILocation(line: 1717, column: 37, scope: !11151)
!11156 = !DILocation(line: 1717, column: 23, scope: !11151)
!11157 = !DILocalVariable(name: "spec", scope: !11158, file: !919, line: 1717, type: !1105)
!11158 = distinct !DILexicalBlock(scope: !11152, file: !919, line: 1717, column: 66)
!11159 = !DILocation(line: 1717, column: 74, scope: !11158)
!11160 = !DILocation(line: 1717, column: 99, scope: !11161)
!11161 = !DILexicalBlockFile(scope: !11158, file: !919, discriminator: 2)
!11162 = !DILocation(line: 1717, column: 81, scope: !11161)
!11163 = !DILocation(line: 1717, column: 84, scope: !11161)
!11164 = !DILocation(line: 1717, column: 102, scope: !11161)
!11165 = !DILocation(line: 1717, column: 74, scope: !11161)
!11166 = !DILocation(line: 1717, column: 147, scope: !11161)
!11167 = !DILocation(line: 1717, column: 151, scope: !11161)
!11168 = !DILocation(line: 1717, column: 155, scope: !11161)
!11169 = !DILocation(line: 1717, column: 124, scope: !11161)
!11170 = !DILocation(line: 1717, column: 122, scope: !11161)
!11171 = !DILocation(line: 1717, column: 162, scope: !11161)
!11172 = !DILocation(line: 1717, column: 117, scope: !11161)
!11173 = !DILocation(line: 1717, column: 200, scope: !11174)
!11174 = !DILexicalBlockFile(scope: !11175, file: !919, discriminator: 3)
!11175 = distinct !DILexicalBlock(scope: !11158, file: !919, line: 1717, column: 117)
!11176 = !DILocation(line: 1717, column: 182, scope: !11174)
!11177 = !DILocation(line: 1717, column: 185, scope: !11174)
!11178 = !DILocation(line: 1717, column: 203, scope: !11174)
!11179 = !DILocation(line: 1717, column: 205, scope: !11174)
!11180 = !DILocation(line: 1717, column: 180, scope: !11174)
!11181 = !DILocation(line: 1717, column: 167, scope: !11174)
!11182 = !DILocation(line: 1717, column: 219, scope: !11183)
!11183 = !DILexicalBlockFile(scope: !11184, file: !919, discriminator: 4)
!11184 = distinct !DILexicalBlock(scope: !11175, file: !919, line: 1717, column: 219)
!11185 = !DILocation(line: 1717, column: 223, scope: !11183)
!11186 = !DILocation(line: 1717, column: 228, scope: !11187)
!11187 = !DILexicalBlockFile(scope: !11184, file: !919, discriminator: 5)
!11188 = !DILocation(line: 1717, column: 245, scope: !11189)
!11189 = !DILexicalBlockFile(scope: !11158, file: !919, discriminator: 6)
!11190 = !DILocation(line: 1717, column: 62, scope: !11191)
!11191 = !DILexicalBlockFile(scope: !11152, file: !919, discriminator: 7)
!11192 = !DILocation(line: 1717, column: 23, scope: !11191)
!11193 = distinct !{!11193, !11194}
!11194 = !DILocation(line: 1717, column: 23, scope: !11143)
!11195 = !DILocation(line: 1718, column: 13, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1718, column: 13)
!11197 = !DILocation(line: 1718, column: 13, scope: !10956)
!11198 = !DILocation(line: 1719, column: 45, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11200, file: !919, line: 1719, column: 17)
!11200 = distinct !DILexicalBlock(scope: !11196, file: !919, line: 1718, column: 27)
!11201 = !DILocation(line: 1719, column: 19, scope: !11199)
!11202 = !DILocation(line: 1719, column: 30, scope: !11199)
!11203 = !DILocation(line: 1719, column: 43, scope: !11199)
!11204 = !DILocation(line: 1719, column: 17, scope: !11200)
!11205 = !DILocation(line: 1720, column: 17, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11199, file: !919, line: 1719, column: 97)
!11207 = !DILocation(line: 1721, column: 17, scope: !11206)
!11208 = !DILocation(line: 1723, column: 33, scope: !11200)
!11209 = !DILocation(line: 1723, column: 44, scope: !11200)
!11210 = !DILocation(line: 1723, column: 58, scope: !11200)
!11211 = !DILocation(line: 1723, column: 13, scope: !11200)
!11212 = !DILocation(line: 1724, column: 9, scope: !11200)
!11213 = !DILocalVariable(name: "i", scope: !11214, file: !919, line: 1725, type: !998)
!11214 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1725, column: 9)
!11215 = !DILocation(line: 1725, column: 15, scope: !11214)
!11216 = !DILocalVariable(name: "ret", scope: !11214, file: !919, line: 1725, type: !998)
!11217 = !DILocation(line: 1725, column: 18, scope: !11214)
!11218 = !DILocation(line: 1725, column: 30, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11214, file: !919, line: 1725, column: 23)
!11220 = !DILocation(line: 1725, column: 28, scope: !11219)
!11221 = !DILocation(line: 1725, column: 35, scope: !11222)
!11222 = !DILexicalBlockFile(scope: !11223, file: !919, discriminator: 1)
!11223 = distinct !DILexicalBlock(scope: !11219, file: !919, line: 1725, column: 23)
!11224 = !DILocation(line: 1725, column: 39, scope: !11222)
!11225 = !DILocation(line: 1725, column: 42, scope: !11222)
!11226 = !DILocation(line: 1725, column: 37, scope: !11222)
!11227 = !DILocation(line: 1725, column: 23, scope: !11222)
!11228 = !DILocalVariable(name: "spec", scope: !11229, file: !919, line: 1725, type: !1105)
!11229 = distinct !DILexicalBlock(scope: !11223, file: !919, line: 1725, column: 73)
!11230 = !DILocation(line: 1725, column: 81, scope: !11229)
!11231 = !DILocation(line: 1725, column: 113, scope: !11232)
!11232 = !DILexicalBlockFile(scope: !11229, file: !919, discriminator: 2)
!11233 = !DILocation(line: 1725, column: 88, scope: !11232)
!11234 = !DILocation(line: 1725, column: 91, scope: !11232)
!11235 = !DILocation(line: 1725, column: 116, scope: !11232)
!11236 = !DILocation(line: 1725, column: 81, scope: !11232)
!11237 = !DILocation(line: 1725, column: 161, scope: !11232)
!11238 = !DILocation(line: 1725, column: 165, scope: !11232)
!11239 = !DILocation(line: 1725, column: 169, scope: !11232)
!11240 = !DILocation(line: 1725, column: 138, scope: !11232)
!11241 = !DILocation(line: 1725, column: 136, scope: !11232)
!11242 = !DILocation(line: 1725, column: 176, scope: !11232)
!11243 = !DILocation(line: 1725, column: 131, scope: !11232)
!11244 = !DILocation(line: 1725, column: 228, scope: !11245)
!11245 = !DILexicalBlockFile(scope: !11246, file: !919, discriminator: 3)
!11246 = distinct !DILexicalBlock(scope: !11229, file: !919, line: 1725, column: 131)
!11247 = !DILocation(line: 1725, column: 203, scope: !11245)
!11248 = !DILocation(line: 1725, column: 206, scope: !11245)
!11249 = !DILocation(line: 1725, column: 231, scope: !11245)
!11250 = !DILocation(line: 1725, column: 233, scope: !11245)
!11251 = !DILocation(line: 1725, column: 201, scope: !11245)
!11252 = !DILocation(line: 1725, column: 181, scope: !11245)
!11253 = !DILocation(line: 1725, column: 247, scope: !11254)
!11254 = !DILexicalBlockFile(scope: !11255, file: !919, discriminator: 4)
!11255 = distinct !DILexicalBlock(scope: !11246, file: !919, line: 1725, column: 247)
!11256 = !DILocation(line: 1725, column: 251, scope: !11254)
!11257 = !DILocation(line: 1725, column: 256, scope: !11258)
!11258 = !DILexicalBlockFile(scope: !11255, file: !919, discriminator: 5)
!11259 = !DILocation(line: 1725, column: 273, scope: !11260)
!11260 = !DILexicalBlockFile(scope: !11229, file: !919, discriminator: 6)
!11261 = !DILocation(line: 1725, column: 69, scope: !11262)
!11262 = !DILexicalBlockFile(scope: !11223, file: !919, discriminator: 7)
!11263 = !DILocation(line: 1725, column: 23, scope: !11262)
!11264 = distinct !{!11264, !11265}
!11265 = !DILocation(line: 1725, column: 23, scope: !11214)
!11266 = !DILocation(line: 1726, column: 13, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1726, column: 13)
!11268 = !DILocation(line: 1726, column: 13, scope: !10956)
!11269 = !DILocalVariable(name: "p", scope: !11270, file: !919, line: 1727, type: !1588)
!11270 = distinct !DILexicalBlock(scope: !11267, file: !919, line: 1726, column: 34)
!11271 = !DILocation(line: 1727, column: 23, scope: !11270)
!11272 = !DILocation(line: 1727, column: 27, scope: !11270)
!11273 = !DILocation(line: 1728, column: 18, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11270, file: !919, line: 1728, column: 17)
!11275 = !DILocation(line: 1728, column: 17, scope: !11270)
!11276 = !DILocation(line: 1729, column: 17, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11274, file: !919, line: 1728, column: 21)
!11278 = !DILocation(line: 1730, column: 17, scope: !11277)
!11279 = !DILocation(line: 1732, column: 46, scope: !11270)
!11280 = !DILocation(line: 1732, column: 13, scope: !11270)
!11281 = !DILocation(line: 1732, column: 24, scope: !11270)
!11282 = !DILocation(line: 1732, column: 44, scope: !11270)
!11283 = !DILocation(line: 1733, column: 33, scope: !11270)
!11284 = !DILocation(line: 1733, column: 36, scope: !11270)
!11285 = !DILocation(line: 1733, column: 13, scope: !11270)
!11286 = !DILocation(line: 1734, column: 9, scope: !11270)
!11287 = !DILocalVariable(name: "i", scope: !11288, file: !919, line: 1735, type: !998)
!11288 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1735, column: 9)
!11289 = !DILocation(line: 1735, column: 15, scope: !11288)
!11290 = !DILocalVariable(name: "ret", scope: !11288, file: !919, line: 1735, type: !998)
!11291 = !DILocation(line: 1735, column: 18, scope: !11288)
!11292 = !DILocation(line: 1735, column: 30, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11288, file: !919, line: 1735, column: 23)
!11294 = !DILocation(line: 1735, column: 28, scope: !11293)
!11295 = !DILocation(line: 1735, column: 35, scope: !11296)
!11296 = !DILexicalBlockFile(scope: !11297, file: !919, discriminator: 1)
!11297 = distinct !DILexicalBlock(scope: !11293, file: !919, line: 1735, column: 23)
!11298 = !DILocation(line: 1735, column: 39, scope: !11296)
!11299 = !DILocation(line: 1735, column: 42, scope: !11296)
!11300 = !DILocation(line: 1735, column: 37, scope: !11296)
!11301 = !DILocation(line: 1735, column: 23, scope: !11296)
!11302 = !DILocalVariable(name: "spec", scope: !11303, file: !919, line: 1735, type: !1105)
!11303 = distinct !DILexicalBlock(scope: !11297, file: !919, line: 1735, column: 66)
!11304 = !DILocation(line: 1735, column: 74, scope: !11303)
!11305 = !DILocation(line: 1735, column: 99, scope: !11306)
!11306 = !DILexicalBlockFile(scope: !11303, file: !919, discriminator: 2)
!11307 = !DILocation(line: 1735, column: 81, scope: !11306)
!11308 = !DILocation(line: 1735, column: 84, scope: !11306)
!11309 = !DILocation(line: 1735, column: 102, scope: !11306)
!11310 = !DILocation(line: 1735, column: 74, scope: !11306)
!11311 = !DILocation(line: 1735, column: 147, scope: !11306)
!11312 = !DILocation(line: 1735, column: 151, scope: !11306)
!11313 = !DILocation(line: 1735, column: 155, scope: !11306)
!11314 = !DILocation(line: 1735, column: 124, scope: !11306)
!11315 = !DILocation(line: 1735, column: 122, scope: !11306)
!11316 = !DILocation(line: 1735, column: 162, scope: !11306)
!11317 = !DILocation(line: 1735, column: 117, scope: !11306)
!11318 = !DILocation(line: 1735, column: 200, scope: !11319)
!11319 = !DILexicalBlockFile(scope: !11320, file: !919, discriminator: 3)
!11320 = distinct !DILexicalBlock(scope: !11303, file: !919, line: 1735, column: 117)
!11321 = !DILocation(line: 1735, column: 182, scope: !11319)
!11322 = !DILocation(line: 1735, column: 185, scope: !11319)
!11323 = !DILocation(line: 1735, column: 203, scope: !11319)
!11324 = !DILocation(line: 1735, column: 205, scope: !11319)
!11325 = !DILocation(line: 1735, column: 180, scope: !11319)
!11326 = !DILocation(line: 1735, column: 167, scope: !11319)
!11327 = !DILocation(line: 1735, column: 219, scope: !11328)
!11328 = !DILexicalBlockFile(scope: !11329, file: !919, discriminator: 4)
!11329 = distinct !DILexicalBlock(scope: !11320, file: !919, line: 1735, column: 219)
!11330 = !DILocation(line: 1735, column: 223, scope: !11328)
!11331 = !DILocation(line: 1735, column: 228, scope: !11332)
!11332 = !DILexicalBlockFile(scope: !11329, file: !919, discriminator: 5)
!11333 = !DILocation(line: 1735, column: 245, scope: !11334)
!11334 = !DILexicalBlockFile(scope: !11303, file: !919, discriminator: 6)
!11335 = !DILocation(line: 1735, column: 62, scope: !11336)
!11336 = !DILexicalBlockFile(scope: !11297, file: !919, discriminator: 7)
!11337 = !DILocation(line: 1735, column: 23, scope: !11336)
!11338 = distinct !{!11338, !11339}
!11339 = !DILocation(line: 1735, column: 23, scope: !11288)
!11340 = !DILocation(line: 1736, column: 13, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1736, column: 13)
!11342 = !DILocation(line: 1736, column: 13, scope: !10956)
!11343 = !DILocation(line: 1737, column: 45, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11345, file: !919, line: 1737, column: 17)
!11345 = distinct !DILexicalBlock(scope: !11341, file: !919, line: 1736, column: 27)
!11346 = !DILocation(line: 1737, column: 19, scope: !11344)
!11347 = !DILocation(line: 1737, column: 30, scope: !11344)
!11348 = !DILocation(line: 1737, column: 43, scope: !11344)
!11349 = !DILocation(line: 1737, column: 17, scope: !11345)
!11350 = !DILocation(line: 1738, column: 17, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11344, file: !919, line: 1737, column: 97)
!11352 = !DILocation(line: 1739, column: 17, scope: !11351)
!11353 = !DILocation(line: 1741, column: 33, scope: !11345)
!11354 = !DILocation(line: 1741, column: 44, scope: !11345)
!11355 = !DILocation(line: 1741, column: 58, scope: !11345)
!11356 = !DILocation(line: 1741, column: 13, scope: !11345)
!11357 = !DILocation(line: 1742, column: 9, scope: !11345)
!11358 = !DILocalVariable(name: "i", scope: !11359, file: !919, line: 1744, type: !998)
!11359 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1744, column: 9)
!11360 = !DILocation(line: 1744, column: 15, scope: !11359)
!11361 = !DILocalVariable(name: "ret", scope: !11359, file: !919, line: 1744, type: !998)
!11362 = !DILocation(line: 1744, column: 18, scope: !11359)
!11363 = !DILocation(line: 1744, column: 30, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11359, file: !919, line: 1744, column: 23)
!11365 = !DILocation(line: 1744, column: 28, scope: !11364)
!11366 = !DILocation(line: 1744, column: 35, scope: !11367)
!11367 = !DILexicalBlockFile(scope: !11368, file: !919, discriminator: 1)
!11368 = distinct !DILexicalBlock(scope: !11364, file: !919, line: 1744, column: 23)
!11369 = !DILocation(line: 1744, column: 39, scope: !11367)
!11370 = !DILocation(line: 1744, column: 42, scope: !11367)
!11371 = !DILocation(line: 1744, column: 37, scope: !11367)
!11372 = !DILocation(line: 1744, column: 23, scope: !11367)
!11373 = !DILocalVariable(name: "spec", scope: !11374, file: !919, line: 1744, type: !1105)
!11374 = distinct !DILexicalBlock(scope: !11368, file: !919, line: 1744, column: 64)
!11375 = !DILocation(line: 1744, column: 72, scope: !11374)
!11376 = !DILocation(line: 1744, column: 95, scope: !11377)
!11377 = !DILexicalBlockFile(scope: !11374, file: !919, discriminator: 2)
!11378 = !DILocation(line: 1744, column: 79, scope: !11377)
!11379 = !DILocation(line: 1744, column: 82, scope: !11377)
!11380 = !DILocation(line: 1744, column: 98, scope: !11377)
!11381 = !DILocation(line: 1744, column: 72, scope: !11377)
!11382 = !DILocation(line: 1744, column: 143, scope: !11377)
!11383 = !DILocation(line: 1744, column: 147, scope: !11377)
!11384 = !DILocation(line: 1744, column: 151, scope: !11377)
!11385 = !DILocation(line: 1744, column: 120, scope: !11377)
!11386 = !DILocation(line: 1744, column: 118, scope: !11377)
!11387 = !DILocation(line: 1744, column: 158, scope: !11377)
!11388 = !DILocation(line: 1744, column: 113, scope: !11377)
!11389 = !DILocation(line: 1744, column: 183, scope: !11390)
!11390 = !DILexicalBlockFile(scope: !11391, file: !919, discriminator: 3)
!11391 = distinct !DILexicalBlock(scope: !11374, file: !919, line: 1744, column: 113)
!11392 = !DILocation(line: 1744, column: 167, scope: !11390)
!11393 = !DILocation(line: 1744, column: 170, scope: !11390)
!11394 = !DILocation(line: 1744, column: 186, scope: !11390)
!11395 = !DILocation(line: 1744, column: 188, scope: !11390)
!11396 = !DILocation(line: 1744, column: 165, scope: !11390)
!11397 = !DILocation(line: 1744, column: 163, scope: !11390)
!11398 = !DILocation(line: 1744, column: 202, scope: !11399)
!11399 = !DILexicalBlockFile(scope: !11400, file: !919, discriminator: 4)
!11400 = distinct !DILexicalBlock(scope: !11391, file: !919, line: 1744, column: 202)
!11401 = !DILocation(line: 1744, column: 206, scope: !11399)
!11402 = !DILocation(line: 1744, column: 211, scope: !11403)
!11403 = !DILexicalBlockFile(scope: !11400, file: !919, discriminator: 5)
!11404 = !DILocation(line: 1744, column: 228, scope: !11405)
!11405 = !DILexicalBlockFile(scope: !11374, file: !919, discriminator: 6)
!11406 = !DILocation(line: 1744, column: 60, scope: !11407)
!11407 = !DILexicalBlockFile(scope: !11368, file: !919, discriminator: 7)
!11408 = !DILocation(line: 1744, column: 23, scope: !11407)
!11409 = distinct !{!11409, !11410}
!11410 = !DILocation(line: 1744, column: 23, scope: !11359)
!11411 = !DILocation(line: 1745, column: 16, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1745, column: 9)
!11413 = !DILocation(line: 1745, column: 14, scope: !11412)
!11414 = !DILocation(line: 1745, column: 21, scope: !11415)
!11415 = !DILexicalBlockFile(scope: !11416, file: !919, discriminator: 1)
!11416 = distinct !DILexicalBlock(scope: !11412, file: !919, line: 1745, column: 9)
!11417 = !DILocation(line: 1745, column: 9, scope: !11415)
!11418 = !DILocalVariable(name: "start", scope: !11419, file: !919, line: 1746, type: !998)
!11419 = distinct !DILexicalBlock(scope: !11416, file: !919, line: 1745, column: 29)
!11420 = !DILocation(line: 1746, column: 17, scope: !11419)
!11421 = !DILocalVariable(name: "end", scope: !11419, file: !919, line: 1746, type: !998)
!11422 = !DILocation(line: 1746, column: 24, scope: !11419)
!11423 = !DILocalVariable(name: "q", scope: !11419, file: !919, line: 1746, type: !998)
!11424 = !DILocation(line: 1746, column: 29, scope: !11419)
!11425 = !DILocalVariable(name: "e", scope: !11419, file: !919, line: 1747, type: !998)
!11426 = !DILocation(line: 1747, column: 17, scope: !11419)
!11427 = !DILocation(line: 1747, column: 28, scope: !11419)
!11428 = !DILocation(line: 1747, column: 21, scope: !11419)
!11429 = !DILocation(line: 1748, column: 17, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11419, file: !919, line: 1748, column: 17)
!11431 = !DILocation(line: 1748, column: 19, scope: !11430)
!11432 = !DILocation(line: 1748, column: 17, scope: !11419)
!11433 = !DILocation(line: 1749, column: 17, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11430, file: !919, line: 1748, column: 25)
!11435 = !DILocation(line: 1750, column: 17, scope: !11434)
!11436 = !DILocation(line: 1753, column: 34, scope: !11419)
!11437 = !DILocation(line: 1753, column: 45, scope: !11419)
!11438 = !DILocation(line: 1754, column: 34, scope: !11419)
!11439 = !DILocation(line: 1754, column: 36, scope: !11419)
!11440 = !DILocation(line: 1753, column: 17, scope: !11419)
!11441 = !DILocation(line: 1752, column: 13, scope: !11419)
!11442 = !DILocation(line: 1752, column: 24, scope: !11419)
!11443 = !DILocation(line: 1752, column: 36, scope: !11419)
!11444 = !DILocation(line: 1755, column: 18, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11419, file: !919, line: 1755, column: 17)
!11446 = !DILocation(line: 1755, column: 29, scope: !11445)
!11447 = !DILocation(line: 1755, column: 17, scope: !11419)
!11448 = !DILocation(line: 1756, column: 17, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11445, file: !919, line: 1755, column: 42)
!11450 = !DILocation(line: 1757, column: 17, scope: !11449)
!11451 = !DILocation(line: 1759, column: 53, scope: !11419)
!11452 = !DILocation(line: 1759, column: 36, scope: !11419)
!11453 = !DILocation(line: 1759, column: 13, scope: !11419)
!11454 = !DILocation(line: 1759, column: 24, scope: !11419)
!11455 = !DILocation(line: 1759, column: 39, scope: !11419)
!11456 = !DILocation(line: 1759, column: 51, scope: !11419)
!11457 = !DILocation(line: 1760, column: 51, scope: !11419)
!11458 = !DILocation(line: 1760, column: 36, scope: !11419)
!11459 = !DILocation(line: 1760, column: 13, scope: !11419)
!11460 = !DILocation(line: 1760, column: 24, scope: !11419)
!11461 = !DILocation(line: 1760, column: 39, scope: !11419)
!11462 = !DILocation(line: 1760, column: 49, scope: !11419)
!11463 = !DILocation(line: 1761, column: 17, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11419, file: !919, line: 1761, column: 17)
!11465 = !DILocation(line: 1761, column: 19, scope: !11464)
!11466 = !DILocation(line: 1761, column: 17, scope: !11419)
!11467 = !DILocation(line: 1762, column: 52, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11464, file: !919, line: 1761, column: 24)
!11469 = !DILocation(line: 1762, column: 40, scope: !11468)
!11470 = !DILocation(line: 1762, column: 17, scope: !11468)
!11471 = !DILocation(line: 1762, column: 28, scope: !11468)
!11472 = !DILocation(line: 1762, column: 43, scope: !11468)
!11473 = !DILocation(line: 1762, column: 50, scope: !11468)
!11474 = !DILocation(line: 1763, column: 40, scope: !11468)
!11475 = !DILocation(line: 1763, column: 17, scope: !11468)
!11476 = !DILocation(line: 1763, column: 28, scope: !11468)
!11477 = !DILocation(line: 1763, column: 43, scope: !11468)
!11478 = !DILocation(line: 1763, column: 58, scope: !11468)
!11479 = !DILocation(line: 1764, column: 13, scope: !11468)
!11480 = !DILocation(line: 1766, column: 40, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11464, file: !919, line: 1765, column: 18)
!11482 = !DILocation(line: 1766, column: 17, scope: !11481)
!11483 = !DILocation(line: 1766, column: 28, scope: !11481)
!11484 = !DILocation(line: 1766, column: 43, scope: !11481)
!11485 = !DILocation(line: 1766, column: 50, scope: !11481)
!11486 = !DILocation(line: 1767, column: 61, scope: !11481)
!11487 = !DILocation(line: 1767, column: 60, scope: !11481)
!11488 = !DILocation(line: 1767, column: 62, scope: !11481)
!11489 = !DILocation(line: 1767, column: 40, scope: !11481)
!11490 = !DILocation(line: 1767, column: 17, scope: !11481)
!11491 = !DILocation(line: 1767, column: 28, scope: !11481)
!11492 = !DILocation(line: 1767, column: 43, scope: !11481)
!11493 = !DILocation(line: 1767, column: 58, scope: !11481)
!11494 = !DILocation(line: 1769, column: 24, scope: !11419)
!11495 = !DILocation(line: 1769, column: 17, scope: !11419)
!11496 = !DILocation(line: 1769, column: 15, scope: !11419)
!11497 = !DILocation(line: 1770, column: 17, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11419, file: !919, line: 1770, column: 17)
!11499 = !DILocation(line: 1770, column: 17, scope: !11419)
!11500 = !DILocation(line: 1770, column: 21, scope: !11501)
!11501 = !DILexicalBlockFile(scope: !11498, file: !919, discriminator: 1)
!11502 = !DILocation(line: 1770, column: 20, scope: !11501)
!11503 = !DILocation(line: 1771, column: 9, scope: !11419)
!11504 = !DILocation(line: 1745, column: 25, scope: !11505)
!11505 = !DILexicalBlockFile(scope: !11416, file: !919, discriminator: 2)
!11506 = !DILocation(line: 1745, column: 9, scope: !11505)
!11507 = distinct !{!11507, !11508}
!11508 = !DILocation(line: 1745, column: 9, scope: !10956)
!11509 = !DILocation(line: 1772, column: 40, scope: !10956)
!11510 = !DILocation(line: 1772, column: 9, scope: !10956)
!11511 = !DILocation(line: 1772, column: 20, scope: !10956)
!11512 = !DILocation(line: 1772, column: 38, scope: !10956)
!11513 = !DILocation(line: 1774, column: 13, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1774, column: 13)
!11515 = !DILocation(line: 1774, column: 13, scope: !10956)
!11516 = !DILocation(line: 1775, column: 13, scope: !11514)
!11517 = !DILocation(line: 1775, column: 24, scope: !11514)
!11518 = !DILocation(line: 1775, column: 29, scope: !11514)
!11519 = !DILocalVariable(name: "i", scope: !11520, file: !919, line: 1778, type: !998)
!11520 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1778, column: 9)
!11521 = !DILocation(line: 1778, column: 15, scope: !11520)
!11522 = !DILocalVariable(name: "ret", scope: !11520, file: !919, line: 1778, type: !998)
!11523 = !DILocation(line: 1778, column: 18, scope: !11520)
!11524 = !DILocation(line: 1778, column: 30, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11520, file: !919, line: 1778, column: 23)
!11526 = !DILocation(line: 1778, column: 28, scope: !11525)
!11527 = !DILocation(line: 1778, column: 35, scope: !11528)
!11528 = !DILexicalBlockFile(scope: !11529, file: !919, discriminator: 1)
!11529 = distinct !DILexicalBlock(scope: !11525, file: !919, line: 1778, column: 23)
!11530 = !DILocation(line: 1778, column: 39, scope: !11528)
!11531 = !DILocation(line: 1778, column: 42, scope: !11528)
!11532 = !DILocation(line: 1778, column: 37, scope: !11528)
!11533 = !DILocation(line: 1778, column: 23, scope: !11528)
!11534 = !DILocalVariable(name: "spec", scope: !11535, file: !919, line: 1778, type: !1105)
!11535 = distinct !DILexicalBlock(scope: !11529, file: !919, line: 1778, column: 56)
!11536 = !DILocation(line: 1778, column: 64, scope: !11535)
!11537 = !DILocation(line: 1778, column: 79, scope: !11538)
!11538 = !DILexicalBlockFile(scope: !11535, file: !919, discriminator: 2)
!11539 = !DILocation(line: 1778, column: 71, scope: !11538)
!11540 = !DILocation(line: 1778, column: 74, scope: !11538)
!11541 = !DILocation(line: 1778, column: 82, scope: !11538)
!11542 = !DILocation(line: 1778, column: 64, scope: !11538)
!11543 = !DILocation(line: 1778, column: 127, scope: !11538)
!11544 = !DILocation(line: 1778, column: 131, scope: !11538)
!11545 = !DILocation(line: 1778, column: 135, scope: !11538)
!11546 = !DILocation(line: 1778, column: 104, scope: !11538)
!11547 = !DILocation(line: 1778, column: 102, scope: !11538)
!11548 = !DILocation(line: 1778, column: 142, scope: !11538)
!11549 = !DILocation(line: 1778, column: 97, scope: !11538)
!11550 = !DILocation(line: 1778, column: 165, scope: !11551)
!11551 = !DILexicalBlockFile(scope: !11552, file: !919, discriminator: 3)
!11552 = distinct !DILexicalBlock(scope: !11535, file: !919, line: 1778, column: 97)
!11553 = !DILocation(line: 1778, column: 157, scope: !11551)
!11554 = !DILocation(line: 1778, column: 160, scope: !11551)
!11555 = !DILocation(line: 1778, column: 168, scope: !11551)
!11556 = !DILocation(line: 1778, column: 170, scope: !11551)
!11557 = !DILocation(line: 1778, column: 155, scope: !11551)
!11558 = !DILocation(line: 1778, column: 147, scope: !11551)
!11559 = !DILocation(line: 1778, column: 182, scope: !11560)
!11560 = !DILexicalBlockFile(scope: !11561, file: !919, discriminator: 4)
!11561 = distinct !DILexicalBlock(scope: !11552, file: !919, line: 1778, column: 182)
!11562 = !DILocation(line: 1778, column: 186, scope: !11560)
!11563 = !DILocation(line: 1778, column: 191, scope: !11564)
!11564 = !DILexicalBlockFile(scope: !11561, file: !919, discriminator: 5)
!11565 = !DILocation(line: 1778, column: 208, scope: !11566)
!11566 = !DILexicalBlockFile(scope: !11535, file: !919, discriminator: 6)
!11567 = !DILocation(line: 1778, column: 52, scope: !11568)
!11568 = !DILexicalBlockFile(scope: !11529, file: !919, discriminator: 7)
!11569 = !DILocation(line: 1778, column: 23, scope: !11568)
!11570 = distinct !{!11570, !11571}
!11571 = !DILocation(line: 1778, column: 23, scope: !11520)
!11572 = !DILocation(line: 1779, column: 13, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1779, column: 13)
!11574 = !DILocation(line: 1779, column: 13, scope: !10956)
!11575 = !DILocation(line: 1780, column: 17, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11577, file: !919, line: 1780, column: 17)
!11577 = distinct !DILexicalBlock(scope: !11573, file: !919, line: 1779, column: 22)
!11578 = !DILocation(line: 1780, column: 25, scope: !11576)
!11579 = !DILocation(line: 1780, column: 17, scope: !11577)
!11580 = !DILocation(line: 1781, column: 17, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11576, file: !919, line: 1780, column: 30)
!11582 = !DILocation(line: 1781, column: 28, scope: !11581)
!11583 = !DILocation(line: 1781, column: 34, scope: !11581)
!11584 = !DILocation(line: 1782, column: 30, scope: !11581)
!11585 = !DILocation(line: 1782, column: 35, scope: !11581)
!11586 = !DILocation(line: 1782, column: 17, scope: !11581)
!11587 = !DILocation(line: 1783, column: 13, scope: !11581)
!11588 = !DILocation(line: 1784, column: 17, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11577, file: !919, line: 1784, column: 17)
!11590 = !DILocation(line: 1784, column: 25, scope: !11589)
!11591 = !DILocation(line: 1784, column: 17, scope: !11577)
!11592 = !DILocation(line: 1785, column: 17, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11589, file: !919, line: 1784, column: 30)
!11594 = !DILocation(line: 1785, column: 28, scope: !11593)
!11595 = !DILocation(line: 1785, column: 34, scope: !11593)
!11596 = !DILocation(line: 1786, column: 30, scope: !11593)
!11597 = !DILocation(line: 1786, column: 35, scope: !11593)
!11598 = !DILocation(line: 1786, column: 17, scope: !11593)
!11599 = !DILocation(line: 1787, column: 13, scope: !11593)
!11600 = !DILocation(line: 1788, column: 9, scope: !11577)
!11601 = !DILocalVariable(name: "i", scope: !11602, file: !919, line: 1790, type: !998)
!11602 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1790, column: 9)
!11603 = !DILocation(line: 1790, column: 15, scope: !11602)
!11604 = !DILocalVariable(name: "ret", scope: !11602, file: !919, line: 1790, type: !998)
!11605 = !DILocation(line: 1790, column: 18, scope: !11602)
!11606 = !DILocation(line: 1790, column: 30, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11602, file: !919, line: 1790, column: 23)
!11608 = !DILocation(line: 1790, column: 28, scope: !11607)
!11609 = !DILocation(line: 1790, column: 35, scope: !11610)
!11610 = !DILexicalBlockFile(scope: !11611, file: !919, discriminator: 1)
!11611 = distinct !DILexicalBlock(scope: !11607, file: !919, line: 1790, column: 23)
!11612 = !DILocation(line: 1790, column: 39, scope: !11610)
!11613 = !DILocation(line: 1790, column: 42, scope: !11610)
!11614 = !DILocation(line: 1790, column: 37, scope: !11610)
!11615 = !DILocation(line: 1790, column: 23, scope: !11610)
!11616 = !DILocalVariable(name: "spec", scope: !11617, file: !919, line: 1790, type: !1105)
!11617 = distinct !DILexicalBlock(scope: !11611, file: !919, line: 1790, column: 64)
!11618 = !DILocation(line: 1790, column: 72, scope: !11617)
!11619 = !DILocation(line: 1790, column: 95, scope: !11620)
!11620 = !DILexicalBlockFile(scope: !11617, file: !919, discriminator: 2)
!11621 = !DILocation(line: 1790, column: 79, scope: !11620)
!11622 = !DILocation(line: 1790, column: 82, scope: !11620)
!11623 = !DILocation(line: 1790, column: 98, scope: !11620)
!11624 = !DILocation(line: 1790, column: 72, scope: !11620)
!11625 = !DILocation(line: 1790, column: 143, scope: !11620)
!11626 = !DILocation(line: 1790, column: 147, scope: !11620)
!11627 = !DILocation(line: 1790, column: 151, scope: !11620)
!11628 = !DILocation(line: 1790, column: 120, scope: !11620)
!11629 = !DILocation(line: 1790, column: 118, scope: !11620)
!11630 = !DILocation(line: 1790, column: 158, scope: !11620)
!11631 = !DILocation(line: 1790, column: 113, scope: !11620)
!11632 = !DILocation(line: 1790, column: 201, scope: !11633)
!11633 = !DILexicalBlockFile(scope: !11634, file: !919, discriminator: 3)
!11634 = distinct !DILexicalBlock(scope: !11617, file: !919, line: 1790, column: 113)
!11635 = !DILocation(line: 1790, column: 185, scope: !11633)
!11636 = !DILocation(line: 1790, column: 188, scope: !11633)
!11637 = !DILocation(line: 1790, column: 204, scope: !11633)
!11638 = !DILocation(line: 1790, column: 206, scope: !11633)
!11639 = !DILocation(line: 1790, column: 163, scope: !11633)
!11640 = !DILocation(line: 1790, column: 168, scope: !11633)
!11641 = !DILocation(line: 1790, column: 183, scope: !11633)
!11642 = !DILocation(line: 1790, column: 220, scope: !11643)
!11643 = !DILexicalBlockFile(scope: !11644, file: !919, discriminator: 4)
!11644 = distinct !DILexicalBlock(scope: !11634, file: !919, line: 1790, column: 220)
!11645 = !DILocation(line: 1790, column: 224, scope: !11643)
!11646 = !DILocation(line: 1790, column: 229, scope: !11647)
!11647 = !DILexicalBlockFile(scope: !11644, file: !919, discriminator: 5)
!11648 = !DILocation(line: 1790, column: 246, scope: !11649)
!11649 = !DILexicalBlockFile(scope: !11617, file: !919, discriminator: 6)
!11650 = !DILocation(line: 1790, column: 60, scope: !11651)
!11651 = !DILexicalBlockFile(scope: !11611, file: !919, discriminator: 7)
!11652 = !DILocation(line: 1790, column: 23, scope: !11651)
!11653 = distinct !{!11653, !11654}
!11654 = !DILocation(line: 1790, column: 23, scope: !11602)
!11655 = !DILocation(line: 1791, column: 13, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1791, column: 13)
!11657 = !DILocation(line: 1791, column: 18, scope: !11656)
!11658 = !DILocation(line: 1791, column: 33, scope: !11656)
!11659 = !DILocation(line: 1792, column: 47, scope: !11656)
!11660 = !DILocation(line: 1792, column: 52, scope: !11656)
!11661 = !DILocation(line: 1792, column: 37, scope: !11656)
!11662 = !DILocation(line: 1792, column: 15, scope: !11656)
!11663 = !DILocation(line: 1792, column: 20, scope: !11656)
!11664 = !DILocation(line: 1792, column: 35, scope: !11656)
!11665 = !DILocation(line: 1791, column: 13, scope: !11666)
!11666 = !DILexicalBlockFile(scope: !10956, file: !919, discriminator: 1)
!11667 = !DILocation(line: 1793, column: 13, scope: !11656)
!11668 = !DILocation(line: 1795, column: 13, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1795, column: 13)
!11670 = !DILocation(line: 1795, column: 13, scope: !10956)
!11671 = !DILocalVariable(name: "logfilename", scope: !11672, file: !919, line: 1796, type: !2771)
!11672 = distinct !DILexicalBlock(scope: !11669, file: !919, line: 1795, column: 22)
!11673 = !DILocation(line: 1796, column: 18, scope: !11672)
!11674 = !DILocalVariable(name: "f", scope: !11672, file: !919, line: 1797, type: !4293)
!11675 = !DILocation(line: 1797, column: 19, scope: !11672)
!11676 = !DILocation(line: 1799, column: 22, scope: !11672)
!11677 = !DILocation(line: 1800, column: 22, scope: !11672)
!11678 = !DILocation(line: 1800, column: 27, scope: !11672)
!11679 = !DILocation(line: 1800, column: 44, scope: !11680)
!11680 = !DILexicalBlockFile(scope: !11672, file: !919, discriminator: 1)
!11681 = !DILocation(line: 1800, column: 49, scope: !11680)
!11682 = !DILocation(line: 1800, column: 22, scope: !11680)
!11683 = !DILocation(line: 1800, column: 22, scope: !11684)
!11684 = !DILexicalBlockFile(scope: !11672, file: !919, discriminator: 2)
!11685 = !DILocation(line: 1800, column: 22, scope: !11686)
!11686 = !DILexicalBlockFile(scope: !11672, file: !919, discriminator: 3)
!11687 = !DILocation(line: 1802, column: 22, scope: !11672)
!11688 = !DILocation(line: 1799, column: 13, scope: !11680)
!11689 = !DILocation(line: 1803, column: 25, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11672, file: !919, line: 1803, column: 17)
!11691 = !DILocation(line: 1803, column: 30, scope: !11690)
!11692 = !DILocation(line: 1803, column: 35, scope: !11690)
!11693 = !DILocation(line: 1803, column: 18, scope: !11690)
!11694 = !DILocation(line: 1803, column: 17, scope: !11672)
!11695 = !DILocation(line: 1804, column: 30, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11690, file: !919, line: 1803, column: 53)
!11697 = !DILocation(line: 1804, column: 35, scope: !11696)
!11698 = !DILocation(line: 1804, column: 58, scope: !11696)
!11699 = !DILocation(line: 1804, column: 17, scope: !11696)
!11700 = !DILocation(line: 1805, column: 13, scope: !11696)
!11701 = !DILocation(line: 1806, column: 21, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11703, file: !919, line: 1806, column: 21)
!11703 = distinct !DILexicalBlock(scope: !11690, file: !919, line: 1805, column: 20)
!11704 = !DILocation(line: 1806, column: 32, scope: !11702)
!11705 = !DILocation(line: 1806, column: 38, scope: !11702)
!11706 = !DILocation(line: 1806, column: 21, scope: !11703)
!11707 = !DILocalVariable(name: "logbuffer", scope: !11708, file: !919, line: 1807, type: !1105)
!11708 = distinct !DILexicalBlock(scope: !11702, file: !919, line: 1806, column: 51)
!11709 = !DILocation(line: 1807, column: 27, scope: !11708)
!11710 = !DILocation(line: 1807, column: 49, scope: !11708)
!11711 = !DILocation(line: 1807, column: 39, scope: !11708)
!11712 = !DILocation(line: 1809, column: 26, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11708, file: !919, line: 1809, column: 25)
!11714 = !DILocation(line: 1809, column: 25, scope: !11708)
!11715 = !DILocation(line: 1811, column: 32, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11713, file: !919, line: 1809, column: 37)
!11717 = !DILocation(line: 1810, column: 25, scope: !11716)
!11718 = !DILocation(line: 1812, column: 25, scope: !11716)
!11719 = !DILocation(line: 1814, column: 43, scope: !11708)
!11720 = !DILocation(line: 1814, column: 21, scope: !11708)
!11721 = !DILocation(line: 1814, column: 32, scope: !11708)
!11722 = !DILocation(line: 1814, column: 41, scope: !11708)
!11723 = !DILocation(line: 1815, column: 17, scope: !11708)
!11724 = !DILocation(line: 1816, column: 21, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11703, file: !919, line: 1816, column: 21)
!11726 = !DILocation(line: 1816, column: 32, scope: !11725)
!11727 = !DILocation(line: 1816, column: 38, scope: !11725)
!11728 = !DILocation(line: 1816, column: 21, scope: !11703)
!11729 = !DILocation(line: 1817, column: 39, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11725, file: !919, line: 1816, column: 50)
!11731 = !DILocation(line: 1817, column: 25, scope: !11730)
!11732 = !DILocation(line: 1817, column: 23, scope: !11730)
!11733 = !DILocation(line: 1818, column: 26, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11730, file: !919, line: 1818, column: 25)
!11735 = !DILocation(line: 1818, column: 25, scope: !11730)
!11736 = !DILocation(line: 1821, column: 32, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11734, file: !919, line: 1818, column: 29)
!11738 = !DILocation(line: 1821, column: 55, scope: !11737)
!11739 = !DILocation(line: 1821, column: 54, scope: !11737)
!11740 = !DILocation(line: 1821, column: 45, scope: !11741)
!11741 = !DILexicalBlockFile(scope: !11737, file: !919, discriminator: 1)
!11742 = !DILocation(line: 1819, column: 25, scope: !11737)
!11743 = !DILocation(line: 1822, column: 25, scope: !11737)
!11744 = !DILocation(line: 1824, column: 36, scope: !11730)
!11745 = !DILocation(line: 1824, column: 21, scope: !11730)
!11746 = !DILocation(line: 1824, column: 26, scope: !11730)
!11747 = !DILocation(line: 1824, column: 34, scope: !11730)
!11748 = !DILocation(line: 1825, column: 17, scope: !11730)
!11749 = !DILocation(line: 1827, column: 9, scope: !11672)
!11750 = !DILocalVariable(name: "i", scope: !11751, file: !919, line: 1829, type: !998)
!11751 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1829, column: 9)
!11752 = !DILocation(line: 1829, column: 15, scope: !11751)
!11753 = !DILocalVariable(name: "ret", scope: !11751, file: !919, line: 1829, type: !998)
!11754 = !DILocation(line: 1829, column: 18, scope: !11751)
!11755 = !DILocation(line: 1829, column: 30, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11751, file: !919, line: 1829, column: 23)
!11757 = !DILocation(line: 1829, column: 28, scope: !11756)
!11758 = !DILocation(line: 1829, column: 35, scope: !11759)
!11759 = !DILexicalBlockFile(scope: !11760, file: !919, discriminator: 1)
!11760 = distinct !DILexicalBlock(scope: !11756, file: !919, line: 1829, column: 23)
!11761 = !DILocation(line: 1829, column: 39, scope: !11759)
!11762 = !DILocation(line: 1829, column: 42, scope: !11759)
!11763 = !DILocation(line: 1829, column: 37, scope: !11759)
!11764 = !DILocation(line: 1829, column: 23, scope: !11759)
!11765 = !DILocalVariable(name: "spec", scope: !11766, file: !919, line: 1829, type: !1105)
!11766 = distinct !DILexicalBlock(scope: !11760, file: !919, line: 1829, column: 69)
!11767 = !DILocation(line: 1829, column: 77, scope: !11766)
!11768 = !DILocation(line: 1829, column: 105, scope: !11769)
!11769 = !DILexicalBlockFile(scope: !11766, file: !919, discriminator: 2)
!11770 = !DILocation(line: 1829, column: 84, scope: !11769)
!11771 = !DILocation(line: 1829, column: 87, scope: !11769)
!11772 = !DILocation(line: 1829, column: 108, scope: !11769)
!11773 = !DILocation(line: 1829, column: 77, scope: !11769)
!11774 = !DILocation(line: 1829, column: 153, scope: !11769)
!11775 = !DILocation(line: 1829, column: 157, scope: !11769)
!11776 = !DILocation(line: 1829, column: 161, scope: !11769)
!11777 = !DILocation(line: 1829, column: 130, scope: !11769)
!11778 = !DILocation(line: 1829, column: 128, scope: !11769)
!11779 = !DILocation(line: 1829, column: 168, scope: !11769)
!11780 = !DILocation(line: 1829, column: 123, scope: !11769)
!11781 = !DILocation(line: 1829, column: 218, scope: !11782)
!11782 = !DILexicalBlockFile(scope: !11783, file: !919, discriminator: 3)
!11783 = distinct !DILexicalBlock(scope: !11766, file: !919, line: 1829, column: 123)
!11784 = !DILocation(line: 1829, column: 197, scope: !11782)
!11785 = !DILocation(line: 1829, column: 200, scope: !11782)
!11786 = !DILocation(line: 1829, column: 221, scope: !11782)
!11787 = !DILocation(line: 1829, column: 223, scope: !11782)
!11788 = !DILocation(line: 1829, column: 173, scope: !11782)
!11789 = !DILocation(line: 1829, column: 178, scope: !11782)
!11790 = !DILocation(line: 1829, column: 195, scope: !11782)
!11791 = !DILocation(line: 1829, column: 237, scope: !11792)
!11792 = !DILexicalBlockFile(scope: !11793, file: !919, discriminator: 4)
!11793 = distinct !DILexicalBlock(scope: !11783, file: !919, line: 1829, column: 237)
!11794 = !DILocation(line: 1829, column: 241, scope: !11792)
!11795 = !DILocation(line: 1829, column: 246, scope: !11796)
!11796 = !DILexicalBlockFile(scope: !11793, file: !919, discriminator: 5)
!11797 = !DILocation(line: 1829, column: 263, scope: !11798)
!11798 = !DILexicalBlockFile(scope: !11766, file: !919, discriminator: 6)
!11799 = !DILocation(line: 1829, column: 65, scope: !11800)
!11800 = !DILexicalBlockFile(scope: !11760, file: !919, discriminator: 7)
!11801 = !DILocation(line: 1829, column: 23, scope: !11800)
!11802 = distinct !{!11802, !11803}
!11803 = !DILocation(line: 1829, column: 23, scope: !11751)
!11804 = !DILocation(line: 1830, column: 13, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1830, column: 13)
!11806 = !DILocation(line: 1830, column: 18, scope: !11805)
!11807 = !DILocation(line: 1830, column: 13, scope: !10956)
!11808 = !DILocation(line: 1831, column: 47, scope: !11805)
!11809 = !DILocation(line: 1831, column: 52, scope: !11805)
!11810 = !DILocation(line: 1831, column: 37, scope: !11805)
!11811 = !DILocation(line: 1831, column: 13, scope: !11805)
!11812 = !DILocation(line: 1831, column: 18, scope: !11805)
!11813 = !DILocation(line: 1831, column: 35, scope: !11805)
!11814 = !DILocalVariable(name: "i", scope: !11815, file: !919, line: 1833, type: !998)
!11815 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1833, column: 9)
!11816 = !DILocation(line: 1833, column: 15, scope: !11815)
!11817 = !DILocalVariable(name: "ret", scope: !11815, file: !919, line: 1833, type: !998)
!11818 = !DILocation(line: 1833, column: 18, scope: !11815)
!11819 = !DILocation(line: 1833, column: 30, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11815, file: !919, line: 1833, column: 23)
!11821 = !DILocation(line: 1833, column: 28, scope: !11820)
!11822 = !DILocation(line: 1833, column: 35, scope: !11823)
!11823 = !DILexicalBlockFile(scope: !11824, file: !919, discriminator: 1)
!11824 = distinct !DILexicalBlock(scope: !11820, file: !919, line: 1833, column: 23)
!11825 = !DILocation(line: 1833, column: 39, scope: !11823)
!11826 = !DILocation(line: 1833, column: 42, scope: !11823)
!11827 = !DILocation(line: 1833, column: 37, scope: !11823)
!11828 = !DILocation(line: 1833, column: 23, scope: !11823)
!11829 = !DILocalVariable(name: "spec", scope: !11830, file: !919, line: 1833, type: !1105)
!11830 = distinct !DILexicalBlock(scope: !11824, file: !919, line: 1833, column: 61)
!11831 = !DILocation(line: 1833, column: 69, scope: !11830)
!11832 = !DILocation(line: 1833, column: 89, scope: !11833)
!11833 = !DILexicalBlockFile(scope: !11830, file: !919, discriminator: 2)
!11834 = !DILocation(line: 1833, column: 76, scope: !11833)
!11835 = !DILocation(line: 1833, column: 79, scope: !11833)
!11836 = !DILocation(line: 1833, column: 92, scope: !11833)
!11837 = !DILocation(line: 1833, column: 69, scope: !11833)
!11838 = !DILocation(line: 1833, column: 137, scope: !11833)
!11839 = !DILocation(line: 1833, column: 141, scope: !11833)
!11840 = !DILocation(line: 1833, column: 145, scope: !11833)
!11841 = !DILocation(line: 1833, column: 114, scope: !11833)
!11842 = !DILocation(line: 1833, column: 112, scope: !11833)
!11843 = !DILocation(line: 1833, column: 152, scope: !11833)
!11844 = !DILocation(line: 1833, column: 107, scope: !11833)
!11845 = !DILocation(line: 1833, column: 187, scope: !11846)
!11846 = !DILexicalBlockFile(scope: !11847, file: !919, discriminator: 3)
!11847 = distinct !DILexicalBlock(scope: !11830, file: !919, line: 1833, column: 107)
!11848 = !DILocation(line: 1833, column: 174, scope: !11846)
!11849 = !DILocation(line: 1833, column: 177, scope: !11846)
!11850 = !DILocation(line: 1833, column: 190, scope: !11846)
!11851 = !DILocation(line: 1833, column: 192, scope: !11846)
!11852 = !DILocation(line: 1833, column: 157, scope: !11846)
!11853 = !DILocation(line: 1833, column: 162, scope: !11846)
!11854 = !DILocation(line: 1833, column: 172, scope: !11846)
!11855 = !DILocation(line: 1833, column: 204, scope: !11856)
!11856 = !DILexicalBlockFile(scope: !11857, file: !919, discriminator: 4)
!11857 = distinct !DILexicalBlock(scope: !11847, file: !919, line: 1833, column: 204)
!11858 = !DILocation(line: 1833, column: 208, scope: !11856)
!11859 = !DILocation(line: 1833, column: 213, scope: !11860)
!11860 = !DILexicalBlockFile(scope: !11857, file: !919, discriminator: 5)
!11861 = !DILocation(line: 1833, column: 230, scope: !11862)
!11862 = !DILexicalBlockFile(scope: !11830, file: !919, discriminator: 6)
!11863 = !DILocation(line: 1833, column: 57, scope: !11864)
!11864 = !DILexicalBlockFile(scope: !11824, file: !919, discriminator: 7)
!11865 = !DILocation(line: 1833, column: 23, scope: !11864)
!11866 = distinct !{!11866, !11867}
!11867 = !DILocation(line: 1833, column: 23, scope: !11815)
!11868 = !DILocation(line: 1835, column: 9, scope: !10956)
!11869 = !DILocation(line: 1835, column: 14, scope: !10956)
!11870 = !DILocation(line: 1835, column: 30, scope: !10956)
!11871 = !DILocalVariable(name: "i", scope: !11872, file: !919, line: 1836, type: !998)
!11872 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1836, column: 9)
!11873 = !DILocation(line: 1836, column: 15, scope: !11872)
!11874 = !DILocalVariable(name: "ret", scope: !11872, file: !919, line: 1836, type: !998)
!11875 = !DILocation(line: 1836, column: 18, scope: !11872)
!11876 = !DILocation(line: 1836, column: 30, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11872, file: !919, line: 1836, column: 23)
!11878 = !DILocation(line: 1836, column: 28, scope: !11877)
!11879 = !DILocation(line: 1836, column: 35, scope: !11880)
!11880 = !DILexicalBlockFile(scope: !11881, file: !919, discriminator: 1)
!11881 = distinct !DILexicalBlock(scope: !11877, file: !919, line: 1836, column: 23)
!11882 = !DILocation(line: 1836, column: 39, scope: !11880)
!11883 = !DILocation(line: 1836, column: 42, scope: !11880)
!11884 = !DILocation(line: 1836, column: 37, scope: !11880)
!11885 = !DILocation(line: 1836, column: 23, scope: !11880)
!11886 = !DILocalVariable(name: "spec", scope: !11887, file: !919, line: 1836, type: !1105)
!11887 = distinct !DILexicalBlock(scope: !11881, file: !919, line: 1836, column: 67)
!11888 = !DILocation(line: 1836, column: 75, scope: !11887)
!11889 = !DILocation(line: 1836, column: 101, scope: !11890)
!11890 = !DILexicalBlockFile(scope: !11887, file: !919, discriminator: 2)
!11891 = !DILocation(line: 1836, column: 82, scope: !11890)
!11892 = !DILocation(line: 1836, column: 85, scope: !11890)
!11893 = !DILocation(line: 1836, column: 104, scope: !11890)
!11894 = !DILocation(line: 1836, column: 75, scope: !11890)
!11895 = !DILocation(line: 1836, column: 149, scope: !11890)
!11896 = !DILocation(line: 1836, column: 153, scope: !11890)
!11897 = !DILocation(line: 1836, column: 157, scope: !11890)
!11898 = !DILocation(line: 1836, column: 126, scope: !11890)
!11899 = !DILocation(line: 1836, column: 124, scope: !11890)
!11900 = !DILocation(line: 1836, column: 164, scope: !11890)
!11901 = !DILocation(line: 1836, column: 119, scope: !11890)
!11902 = !DILocation(line: 1836, column: 211, scope: !11903)
!11903 = !DILexicalBlockFile(scope: !11904, file: !919, discriminator: 3)
!11904 = distinct !DILexicalBlock(scope: !11887, file: !919, line: 1836, column: 119)
!11905 = !DILocation(line: 1836, column: 192, scope: !11903)
!11906 = !DILocation(line: 1836, column: 195, scope: !11903)
!11907 = !DILocation(line: 1836, column: 214, scope: !11903)
!11908 = !DILocation(line: 1836, column: 216, scope: !11903)
!11909 = !DILocation(line: 1836, column: 169, scope: !11903)
!11910 = !DILocation(line: 1836, column: 174, scope: !11903)
!11911 = !DILocation(line: 1836, column: 190, scope: !11903)
!11912 = !DILocation(line: 1836, column: 228, scope: !11913)
!11913 = !DILexicalBlockFile(scope: !11914, file: !919, discriminator: 4)
!11914 = distinct !DILexicalBlock(scope: !11904, file: !919, line: 1836, column: 228)
!11915 = !DILocation(line: 1836, column: 232, scope: !11913)
!11916 = !DILocation(line: 1836, column: 237, scope: !11917)
!11917 = !DILexicalBlockFile(scope: !11914, file: !919, discriminator: 5)
!11918 = !DILocation(line: 1836, column: 254, scope: !11919)
!11919 = !DILexicalBlockFile(scope: !11887, file: !919, discriminator: 6)
!11920 = !DILocation(line: 1836, column: 63, scope: !11921)
!11921 = !DILexicalBlockFile(scope: !11881, file: !919, discriminator: 7)
!11922 = !DILocation(line: 1836, column: 23, scope: !11921)
!11923 = distinct !{!11923, !11924}
!11924 = !DILocation(line: 1836, column: 23, scope: !11872)
!11925 = !DILocation(line: 1839, column: 41, scope: !10956)
!11926 = !DILocation(line: 1839, column: 44, scope: !10956)
!11927 = !DILocation(line: 1839, column: 48, scope: !10956)
!11928 = !DILocation(line: 1839, column: 25, scope: !10956)
!11929 = !DILocation(line: 1839, column: 9, scope: !10956)
!11930 = !DILocation(line: 1839, column: 14, scope: !10956)
!11931 = !DILocation(line: 1839, column: 23, scope: !10956)
!11932 = !DILocation(line: 1840, column: 14, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !10956, file: !919, line: 1840, column: 13)
!11934 = !DILocation(line: 1840, column: 19, scope: !11933)
!11935 = !DILocation(line: 1840, column: 13, scope: !10956)
!11936 = !DILocation(line: 1841, column: 13, scope: !11933)
!11937 = !DILocation(line: 1842, column: 5, scope: !10956)
!11938 = !DILocalVariable(name: "i", scope: !11939, file: !919, line: 1843, type: !998)
!11939 = distinct !DILexicalBlock(scope: !11940, file: !919, line: 1843, column: 9)
!11940 = distinct !DILexicalBlock(scope: !10952, file: !919, line: 1842, column: 12)
!11941 = !DILocation(line: 1843, column: 15, scope: !11939)
!11942 = !DILocalVariable(name: "ret", scope: !11939, file: !919, line: 1843, type: !998)
!11943 = !DILocation(line: 1843, column: 18, scope: !11939)
!11944 = !DILocation(line: 1843, column: 30, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11939, file: !919, line: 1843, column: 23)
!11946 = !DILocation(line: 1843, column: 28, scope: !11945)
!11947 = !DILocation(line: 1843, column: 35, scope: !11948)
!11948 = !DILexicalBlockFile(scope: !11949, file: !919, discriminator: 1)
!11949 = distinct !DILexicalBlock(scope: !11945, file: !919, line: 1843, column: 23)
!11950 = !DILocation(line: 1843, column: 39, scope: !11948)
!11951 = !DILocation(line: 1843, column: 42, scope: !11948)
!11952 = !DILocation(line: 1843, column: 37, scope: !11948)
!11953 = !DILocation(line: 1843, column: 23, scope: !11948)
!11954 = !DILocalVariable(name: "spec", scope: !11955, file: !919, line: 1843, type: !1105)
!11955 = distinct !DILexicalBlock(scope: !11949, file: !919, line: 1843, column: 77)
!11956 = !DILocation(line: 1843, column: 85, scope: !11955)
!11957 = !DILocation(line: 1843, column: 121, scope: !11958)
!11958 = !DILexicalBlockFile(scope: !11955, file: !919, discriminator: 2)
!11959 = !DILocation(line: 1843, column: 92, scope: !11958)
!11960 = !DILocation(line: 1843, column: 95, scope: !11958)
!11961 = !DILocation(line: 1843, column: 124, scope: !11958)
!11962 = !DILocation(line: 1843, column: 85, scope: !11958)
!11963 = !DILocation(line: 1843, column: 169, scope: !11958)
!11964 = !DILocation(line: 1843, column: 173, scope: !11958)
!11965 = !DILocation(line: 1843, column: 177, scope: !11958)
!11966 = !DILocation(line: 1843, column: 146, scope: !11958)
!11967 = !DILocation(line: 1843, column: 144, scope: !11958)
!11968 = !DILocation(line: 1843, column: 184, scope: !11958)
!11969 = !DILocation(line: 1843, column: 139, scope: !11958)
!11970 = !DILocation(line: 1843, column: 251, scope: !11971)
!11971 = !DILexicalBlockFile(scope: !11972, file: !919, discriminator: 3)
!11972 = distinct !DILexicalBlock(scope: !11955, file: !919, line: 1843, column: 139)
!11973 = !DILocation(line: 1843, column: 222, scope: !11971)
!11974 = !DILocation(line: 1843, column: 225, scope: !11971)
!11975 = !DILocation(line: 1843, column: 254, scope: !11971)
!11976 = !DILocation(line: 1843, column: 256, scope: !11971)
!11977 = !DILocation(line: 1843, column: 189, scope: !11971)
!11978 = !DILocation(line: 1843, column: 194, scope: !11971)
!11979 = !DILocation(line: 1843, column: 220, scope: !11971)
!11980 = !DILocation(line: 1843, column: 268, scope: !11981)
!11981 = !DILexicalBlockFile(scope: !11982, file: !919, discriminator: 4)
!11982 = distinct !DILexicalBlock(scope: !11972, file: !919, line: 1843, column: 268)
!11983 = !DILocation(line: 1843, column: 272, scope: !11981)
!11984 = !DILocation(line: 1843, column: 277, scope: !11985)
!11985 = !DILexicalBlockFile(scope: !11982, file: !919, discriminator: 5)
!11986 = !DILocation(line: 1843, column: 294, scope: !11987)
!11987 = !DILexicalBlockFile(scope: !11955, file: !919, discriminator: 6)
!11988 = !DILocation(line: 1843, column: 73, scope: !11989)
!11989 = !DILexicalBlockFile(scope: !11949, file: !919, discriminator: 7)
!11990 = !DILocation(line: 1843, column: 23, scope: !11989)
!11991 = distinct !{!11991, !11992}
!11992 = !DILocation(line: 1843, column: 23, scope: !11939)
!11993 = !DILocation(line: 1846, column: 9, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !10650, file: !919, line: 1846, column: 9)
!11995 = !DILocation(line: 1846, column: 14, scope: !11994)
!11996 = !DILocation(line: 1846, column: 9, scope: !10650)
!11997 = !DILocation(line: 1847, column: 34, scope: !11994)
!11998 = !DILocation(line: 1847, column: 37, scope: !11994)
!11999 = !DILocation(line: 1847, column: 41, scope: !11994)
!12000 = !DILocation(line: 1847, column: 9, scope: !11994)
!12001 = !DILocation(line: 1849, column: 12, scope: !10650)
!12002 = !DILocation(line: 1849, column: 5, scope: !10650)
!12003 = distinct !DISubprogram(name: "new_audio_stream", scope: !919, file: !919, line: 1852, type: !10651, isLocal: true, isDefinition: true, scopeLine: 1853, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!12004 = !DILocalVariable(name: "o", arg: 1, scope: !12003, file: !919, line: 1852, type: !2116)
!12005 = !DILocation(line: 1852, column: 55, scope: !12003)
!12006 = !DILocalVariable(name: "oc", arg: 2, scope: !12003, file: !919, line: 1852, type: !2364)
!12007 = !DILocation(line: 1852, column: 75, scope: !12003)
!12008 = !DILocalVariable(name: "source_index", arg: 3, scope: !12003, file: !919, line: 1852, type: !998)
!12009 = !DILocation(line: 1852, column: 83, scope: !12003)
!12010 = !DILocalVariable(name: "n", scope: !12003, file: !919, line: 1854, type: !998)
!12011 = !DILocation(line: 1854, column: 9, scope: !12003)
!12012 = !DILocalVariable(name: "st", scope: !12003, file: !919, line: 1855, type: !2562)
!12013 = !DILocation(line: 1855, column: 15, scope: !12003)
!12014 = !DILocalVariable(name: "ost", scope: !12003, file: !919, line: 1856, type: !4056)
!12015 = !DILocation(line: 1856, column: 19, scope: !12003)
!12016 = !DILocalVariable(name: "audio_enc", scope: !12003, file: !919, line: 1857, type: !1361)
!12017 = !DILocation(line: 1857, column: 21, scope: !12003)
!12018 = !DILocation(line: 1859, column: 29, scope: !12003)
!12019 = !DILocation(line: 1859, column: 32, scope: !12003)
!12020 = !DILocation(line: 1859, column: 56, scope: !12003)
!12021 = !DILocation(line: 1859, column: 11, scope: !12003)
!12022 = !DILocation(line: 1859, column: 9, scope: !12003)
!12023 = !DILocation(line: 1860, column: 10, scope: !12003)
!12024 = !DILocation(line: 1860, column: 15, scope: !12003)
!12025 = !DILocation(line: 1860, column: 8, scope: !12003)
!12026 = !DILocation(line: 1862, column: 17, scope: !12003)
!12027 = !DILocation(line: 1862, column: 22, scope: !12003)
!12028 = !DILocation(line: 1862, column: 15, scope: !12003)
!12029 = !DILocation(line: 1863, column: 5, scope: !12003)
!12030 = !DILocation(line: 1863, column: 16, scope: !12003)
!12031 = !DILocation(line: 1863, column: 27, scope: !12003)
!12032 = !DILocalVariable(name: "i", scope: !12033, file: !919, line: 1865, type: !998)
!12033 = distinct !DILexicalBlock(scope: !12003, file: !919, line: 1865, column: 5)
!12034 = !DILocation(line: 1865, column: 11, scope: !12033)
!12035 = !DILocalVariable(name: "ret", scope: !12033, file: !919, line: 1865, type: !998)
!12036 = !DILocation(line: 1865, column: 14, scope: !12033)
!12037 = !DILocation(line: 1865, column: 26, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12033, file: !919, line: 1865, column: 19)
!12039 = !DILocation(line: 1865, column: 24, scope: !12038)
!12040 = !DILocation(line: 1865, column: 31, scope: !12041)
!12041 = !DILexicalBlockFile(scope: !12042, file: !919, discriminator: 1)
!12042 = distinct !DILexicalBlock(scope: !12038, file: !919, line: 1865, column: 19)
!12043 = !DILocation(line: 1865, column: 35, scope: !12041)
!12044 = !DILocation(line: 1865, column: 38, scope: !12041)
!12045 = !DILocation(line: 1865, column: 33, scope: !12041)
!12046 = !DILocation(line: 1865, column: 19, scope: !12041)
!12047 = !DILocalVariable(name: "spec", scope: !12048, file: !919, line: 1865, type: !1105)
!12048 = distinct !DILexicalBlock(scope: !12042, file: !919, line: 1865, column: 62)
!12049 = !DILocation(line: 1865, column: 70, scope: !12048)
!12050 = !DILocation(line: 1865, column: 95, scope: !12051)
!12051 = !DILexicalBlockFile(scope: !12048, file: !919, discriminator: 2)
!12052 = !DILocation(line: 1865, column: 77, scope: !12051)
!12053 = !DILocation(line: 1865, column: 80, scope: !12051)
!12054 = !DILocation(line: 1865, column: 98, scope: !12051)
!12055 = !DILocation(line: 1865, column: 70, scope: !12051)
!12056 = !DILocation(line: 1865, column: 143, scope: !12051)
!12057 = !DILocation(line: 1865, column: 147, scope: !12051)
!12058 = !DILocation(line: 1865, column: 151, scope: !12051)
!12059 = !DILocation(line: 1865, column: 120, scope: !12051)
!12060 = !DILocation(line: 1865, column: 118, scope: !12051)
!12061 = !DILocation(line: 1865, column: 158, scope: !12051)
!12062 = !DILocation(line: 1865, column: 113, scope: !12051)
!12063 = !DILocation(line: 1865, column: 203, scope: !12064)
!12064 = !DILexicalBlockFile(scope: !12065, file: !919, discriminator: 3)
!12065 = distinct !DILexicalBlock(scope: !12048, file: !919, line: 1865, column: 113)
!12066 = !DILocation(line: 1865, column: 185, scope: !12064)
!12067 = !DILocation(line: 1865, column: 188, scope: !12064)
!12068 = !DILocation(line: 1865, column: 206, scope: !12064)
!12069 = !DILocation(line: 1865, column: 208, scope: !12064)
!12070 = !DILocation(line: 1865, column: 163, scope: !12064)
!12071 = !DILocation(line: 1865, column: 168, scope: !12064)
!12072 = !DILocation(line: 1865, column: 183, scope: !12064)
!12073 = !DILocation(line: 1865, column: 222, scope: !12074)
!12074 = !DILexicalBlockFile(scope: !12075, file: !919, discriminator: 4)
!12075 = distinct !DILexicalBlock(scope: !12065, file: !919, line: 1865, column: 222)
!12076 = !DILocation(line: 1865, column: 226, scope: !12074)
!12077 = !DILocation(line: 1865, column: 231, scope: !12078)
!12078 = !DILexicalBlockFile(scope: !12075, file: !919, discriminator: 5)
!12079 = !DILocation(line: 1865, column: 248, scope: !12080)
!12080 = !DILexicalBlockFile(scope: !12048, file: !919, discriminator: 6)
!12081 = !DILocation(line: 1865, column: 58, scope: !12082)
!12082 = !DILexicalBlockFile(scope: !12042, file: !919, discriminator: 7)
!12083 = !DILocation(line: 1865, column: 19, scope: !12082)
!12084 = distinct !{!12084, !12085}
!12085 = !DILocation(line: 1865, column: 19, scope: !12033)
!12086 = !DILocalVariable(name: "i", scope: !12087, file: !919, line: 1866, type: !998)
!12087 = distinct !DILexicalBlock(scope: !12003, file: !919, line: 1866, column: 5)
!12088 = !DILocation(line: 1866, column: 11, scope: !12087)
!12089 = !DILocalVariable(name: "ret", scope: !12087, file: !919, line: 1866, type: !998)
!12090 = !DILocation(line: 1866, column: 14, scope: !12087)
!12091 = !DILocation(line: 1866, column: 26, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12087, file: !919, line: 1866, column: 19)
!12093 = !DILocation(line: 1866, column: 24, scope: !12092)
!12094 = !DILocation(line: 1866, column: 31, scope: !12095)
!12095 = !DILexicalBlockFile(scope: !12096, file: !919, discriminator: 1)
!12096 = distinct !DILexicalBlock(scope: !12092, file: !919, line: 1866, column: 19)
!12097 = !DILocation(line: 1866, column: 35, scope: !12095)
!12098 = !DILocation(line: 1866, column: 38, scope: !12095)
!12099 = !DILocation(line: 1866, column: 33, scope: !12095)
!12100 = !DILocation(line: 1866, column: 19, scope: !12095)
!12101 = !DILocalVariable(name: "spec", scope: !12102, file: !919, line: 1866, type: !1105)
!12102 = distinct !DILexicalBlock(scope: !12096, file: !919, line: 1866, column: 55)
!12103 = !DILocation(line: 1866, column: 63, scope: !12102)
!12104 = !DILocation(line: 1866, column: 81, scope: !12105)
!12105 = !DILexicalBlockFile(scope: !12102, file: !919, discriminator: 2)
!12106 = !DILocation(line: 1866, column: 70, scope: !12105)
!12107 = !DILocation(line: 1866, column: 73, scope: !12105)
!12108 = !DILocation(line: 1866, column: 84, scope: !12105)
!12109 = !DILocation(line: 1866, column: 63, scope: !12105)
!12110 = !DILocation(line: 1866, column: 129, scope: !12105)
!12111 = !DILocation(line: 1866, column: 133, scope: !12105)
!12112 = !DILocation(line: 1866, column: 137, scope: !12105)
!12113 = !DILocation(line: 1866, column: 106, scope: !12105)
!12114 = !DILocation(line: 1866, column: 104, scope: !12105)
!12115 = !DILocation(line: 1866, column: 144, scope: !12105)
!12116 = !DILocation(line: 1866, column: 99, scope: !12105)
!12117 = !DILocation(line: 1866, column: 175, scope: !12118)
!12118 = !DILexicalBlockFile(scope: !12119, file: !919, discriminator: 3)
!12119 = distinct !DILexicalBlock(scope: !12102, file: !919, line: 1866, column: 99)
!12120 = !DILocation(line: 1866, column: 164, scope: !12118)
!12121 = !DILocation(line: 1866, column: 167, scope: !12118)
!12122 = !DILocation(line: 1866, column: 178, scope: !12118)
!12123 = !DILocation(line: 1866, column: 180, scope: !12118)
!12124 = !DILocation(line: 1866, column: 149, scope: !12118)
!12125 = !DILocation(line: 1866, column: 154, scope: !12118)
!12126 = !DILocation(line: 1866, column: 162, scope: !12118)
!12127 = !DILocation(line: 1866, column: 194, scope: !12128)
!12128 = !DILexicalBlockFile(scope: !12129, file: !919, discriminator: 4)
!12129 = distinct !DILexicalBlock(scope: !12119, file: !919, line: 1866, column: 194)
!12130 = !DILocation(line: 1866, column: 198, scope: !12128)
!12131 = !DILocation(line: 1866, column: 203, scope: !12132)
!12132 = !DILexicalBlockFile(scope: !12129, file: !919, discriminator: 5)
!12133 = !DILocation(line: 1866, column: 220, scope: !12134)
!12134 = !DILexicalBlockFile(scope: !12102, file: !919, discriminator: 6)
!12135 = !DILocation(line: 1866, column: 51, scope: !12136)
!12136 = !DILexicalBlockFile(scope: !12096, file: !919, discriminator: 7)
!12137 = !DILocation(line: 1866, column: 19, scope: !12136)
!12138 = distinct !{!12138, !12139}
!12139 = !DILocation(line: 1866, column: 19, scope: !12087)
!12140 = !DILocation(line: 1867, column: 9, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12003, file: !919, line: 1867, column: 9)
!12142 = !DILocation(line: 1867, column: 12, scope: !12141)
!12143 = !DILocation(line: 1867, column: 23, scope: !12141)
!12144 = !DILocation(line: 1867, column: 9, scope: !12003)
!12145 = !DILocation(line: 1868, column: 110, scope: !12141)
!12146 = !DILocation(line: 1868, column: 115, scope: !12141)
!12147 = !DILocation(line: 1868, column: 9, scope: !12141)
!12148 = !DILocation(line: 1870, column: 10, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12003, file: !919, line: 1870, column: 9)
!12150 = !DILocation(line: 1870, column: 15, scope: !12149)
!12151 = !DILocation(line: 1870, column: 9, scope: !12003)
!12152 = !DILocalVariable(name: "sample_fmt", scope: !12153, file: !919, line: 1871, type: !1105)
!12153 = distinct !DILexicalBlock(scope: !12149, file: !919, line: 1870, column: 28)
!12154 = !DILocation(line: 1871, column: 15, scope: !12153)
!12155 = !DILocalVariable(name: "i", scope: !12156, file: !919, line: 1873, type: !998)
!12156 = distinct !DILexicalBlock(scope: !12153, file: !919, line: 1873, column: 9)
!12157 = !DILocation(line: 1873, column: 15, scope: !12156)
!12158 = !DILocalVariable(name: "ret", scope: !12156, file: !919, line: 1873, type: !998)
!12159 = !DILocation(line: 1873, column: 18, scope: !12156)
!12160 = !DILocation(line: 1873, column: 30, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12156, file: !919, line: 1873, column: 23)
!12162 = !DILocation(line: 1873, column: 28, scope: !12161)
!12163 = !DILocation(line: 1873, column: 35, scope: !12164)
!12164 = !DILexicalBlockFile(scope: !12165, file: !919, discriminator: 1)
!12165 = distinct !DILexicalBlock(scope: !12161, file: !919, line: 1873, column: 23)
!12166 = !DILocation(line: 1873, column: 39, scope: !12164)
!12167 = !DILocation(line: 1873, column: 42, scope: !12164)
!12168 = !DILocation(line: 1873, column: 37, scope: !12164)
!12169 = !DILocation(line: 1873, column: 23, scope: !12164)
!12170 = !DILocalVariable(name: "spec", scope: !12171, file: !919, line: 1873, type: !1105)
!12171 = distinct !DILexicalBlock(scope: !12165, file: !919, line: 1873, column: 66)
!12172 = !DILocation(line: 1873, column: 74, scope: !12171)
!12173 = !DILocation(line: 1873, column: 99, scope: !12174)
!12174 = !DILexicalBlockFile(scope: !12171, file: !919, discriminator: 2)
!12175 = !DILocation(line: 1873, column: 81, scope: !12174)
!12176 = !DILocation(line: 1873, column: 84, scope: !12174)
!12177 = !DILocation(line: 1873, column: 102, scope: !12174)
!12178 = !DILocation(line: 1873, column: 74, scope: !12174)
!12179 = !DILocation(line: 1873, column: 147, scope: !12174)
!12180 = !DILocation(line: 1873, column: 151, scope: !12174)
!12181 = !DILocation(line: 1873, column: 155, scope: !12174)
!12182 = !DILocation(line: 1873, column: 124, scope: !12174)
!12183 = !DILocation(line: 1873, column: 122, scope: !12174)
!12184 = !DILocation(line: 1873, column: 162, scope: !12174)
!12185 = !DILocation(line: 1873, column: 117, scope: !12174)
!12186 = !DILocation(line: 1873, column: 207, scope: !12187)
!12187 = !DILexicalBlockFile(scope: !12188, file: !919, discriminator: 3)
!12188 = distinct !DILexicalBlock(scope: !12171, file: !919, line: 1873, column: 117)
!12189 = !DILocation(line: 1873, column: 189, scope: !12187)
!12190 = !DILocation(line: 1873, column: 192, scope: !12187)
!12191 = !DILocation(line: 1873, column: 210, scope: !12187)
!12192 = !DILocation(line: 1873, column: 212, scope: !12187)
!12193 = !DILocation(line: 1873, column: 167, scope: !12187)
!12194 = !DILocation(line: 1873, column: 178, scope: !12187)
!12195 = !DILocation(line: 1873, column: 187, scope: !12187)
!12196 = !DILocation(line: 1873, column: 224, scope: !12197)
!12197 = !DILexicalBlockFile(scope: !12198, file: !919, discriminator: 4)
!12198 = distinct !DILexicalBlock(scope: !12188, file: !919, line: 1873, column: 224)
!12199 = !DILocation(line: 1873, column: 228, scope: !12197)
!12200 = !DILocation(line: 1873, column: 233, scope: !12201)
!12201 = !DILexicalBlockFile(scope: !12198, file: !919, discriminator: 5)
!12202 = !DILocation(line: 1873, column: 250, scope: !12203)
!12203 = !DILexicalBlockFile(scope: !12171, file: !919, discriminator: 6)
!12204 = !DILocation(line: 1873, column: 62, scope: !12205)
!12205 = !DILexicalBlockFile(scope: !12165, file: !919, discriminator: 7)
!12206 = !DILocation(line: 1873, column: 23, scope: !12205)
!12207 = distinct !{!12207, !12208}
!12208 = !DILocation(line: 1873, column: 23, scope: !12156)
!12209 = !DILocalVariable(name: "i", scope: !12210, file: !919, line: 1875, type: !998)
!12210 = distinct !DILexicalBlock(scope: !12153, file: !919, line: 1875, column: 9)
!12211 = !DILocation(line: 1875, column: 15, scope: !12210)
!12212 = !DILocalVariable(name: "ret", scope: !12210, file: !919, line: 1875, type: !998)
!12213 = !DILocation(line: 1875, column: 18, scope: !12210)
!12214 = !DILocation(line: 1875, column: 30, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12210, file: !919, line: 1875, column: 23)
!12216 = !DILocation(line: 1875, column: 28, scope: !12215)
!12217 = !DILocation(line: 1875, column: 35, scope: !12218)
!12218 = !DILexicalBlockFile(scope: !12219, file: !919, discriminator: 1)
!12219 = distinct !DILexicalBlock(scope: !12215, file: !919, line: 1875, column: 23)
!12220 = !DILocation(line: 1875, column: 39, scope: !12218)
!12221 = !DILocation(line: 1875, column: 42, scope: !12218)
!12222 = !DILocation(line: 1875, column: 37, scope: !12218)
!12223 = !DILocation(line: 1875, column: 23, scope: !12218)
!12224 = !DILocalVariable(name: "spec", scope: !12225, file: !919, line: 1875, type: !1105)
!12225 = distinct !DILexicalBlock(scope: !12219, file: !919, line: 1875, column: 63)
!12226 = !DILocation(line: 1875, column: 71, scope: !12225)
!12227 = !DILocation(line: 1875, column: 93, scope: !12228)
!12228 = !DILexicalBlockFile(scope: !12225, file: !919, discriminator: 2)
!12229 = !DILocation(line: 1875, column: 78, scope: !12228)
!12230 = !DILocation(line: 1875, column: 81, scope: !12228)
!12231 = !DILocation(line: 1875, column: 96, scope: !12228)
!12232 = !DILocation(line: 1875, column: 71, scope: !12228)
!12233 = !DILocation(line: 1875, column: 141, scope: !12228)
!12234 = !DILocation(line: 1875, column: 145, scope: !12228)
!12235 = !DILocation(line: 1875, column: 149, scope: !12228)
!12236 = !DILocation(line: 1875, column: 118, scope: !12228)
!12237 = !DILocation(line: 1875, column: 116, scope: !12228)
!12238 = !DILocation(line: 1875, column: 156, scope: !12228)
!12239 = !DILocation(line: 1875, column: 111, scope: !12228)
!12240 = !DILocation(line: 1875, column: 189, scope: !12241)
!12241 = !DILexicalBlockFile(scope: !12242, file: !919, discriminator: 3)
!12242 = distinct !DILexicalBlock(scope: !12225, file: !919, line: 1875, column: 111)
!12243 = !DILocation(line: 1875, column: 174, scope: !12241)
!12244 = !DILocation(line: 1875, column: 177, scope: !12241)
!12245 = !DILocation(line: 1875, column: 192, scope: !12241)
!12246 = !DILocation(line: 1875, column: 194, scope: !12241)
!12247 = !DILocation(line: 1875, column: 172, scope: !12241)
!12248 = !DILocation(line: 1875, column: 161, scope: !12241)
!12249 = !DILocation(line: 1875, column: 208, scope: !12250)
!12250 = !DILexicalBlockFile(scope: !12251, file: !919, discriminator: 4)
!12251 = distinct !DILexicalBlock(scope: !12242, file: !919, line: 1875, column: 208)
!12252 = !DILocation(line: 1875, column: 212, scope: !12250)
!12253 = !DILocation(line: 1875, column: 217, scope: !12254)
!12254 = !DILexicalBlockFile(scope: !12251, file: !919, discriminator: 5)
!12255 = !DILocation(line: 1875, column: 234, scope: !12256)
!12256 = !DILexicalBlockFile(scope: !12225, file: !919, discriminator: 6)
!12257 = !DILocation(line: 1875, column: 59, scope: !12258)
!12258 = !DILexicalBlockFile(scope: !12219, file: !919, discriminator: 7)
!12259 = !DILocation(line: 1875, column: 23, scope: !12258)
!12260 = distinct !{!12260, !12261}
!12261 = !DILocation(line: 1875, column: 23, scope: !12210)
!12262 = !DILocation(line: 1876, column: 13, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12153, file: !919, line: 1876, column: 13)
!12264 = !DILocation(line: 1876, column: 24, scope: !12263)
!12265 = !DILocation(line: 1877, column: 56, scope: !12263)
!12266 = !DILocation(line: 1877, column: 38, scope: !12263)
!12267 = !DILocation(line: 1877, column: 14, scope: !12263)
!12268 = !DILocation(line: 1877, column: 25, scope: !12263)
!12269 = !DILocation(line: 1877, column: 36, scope: !12263)
!12270 = !DILocation(line: 1877, column: 69, scope: !12263)
!12271 = !DILocation(line: 1876, column: 13, scope: !12272)
!12272 = !DILexicalBlockFile(scope: !12153, file: !919, discriminator: 1)
!12273 = !DILocation(line: 1878, column: 60, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12263, file: !919, line: 1877, column: 92)
!12275 = !DILocation(line: 1878, column: 13, scope: !12274)
!12276 = !DILocation(line: 1879, column: 13, scope: !12274)
!12277 = !DILocalVariable(name: "i", scope: !12278, file: !919, line: 1882, type: !998)
!12278 = distinct !DILexicalBlock(scope: !12153, file: !919, line: 1882, column: 9)
!12279 = !DILocation(line: 1882, column: 15, scope: !12278)
!12280 = !DILocalVariable(name: "ret", scope: !12278, file: !919, line: 1882, type: !998)
!12281 = !DILocation(line: 1882, column: 18, scope: !12278)
!12282 = !DILocation(line: 1882, column: 30, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12278, file: !919, line: 1882, column: 23)
!12284 = !DILocation(line: 1882, column: 28, scope: !12283)
!12285 = !DILocation(line: 1882, column: 35, scope: !12286)
!12286 = !DILexicalBlockFile(scope: !12287, file: !919, discriminator: 1)
!12287 = distinct !DILexicalBlock(scope: !12283, file: !919, line: 1882, column: 23)
!12288 = !DILocation(line: 1882, column: 39, scope: !12286)
!12289 = !DILocation(line: 1882, column: 42, scope: !12286)
!12290 = !DILocation(line: 1882, column: 37, scope: !12286)
!12291 = !DILocation(line: 1882, column: 23, scope: !12286)
!12292 = !DILocalVariable(name: "spec", scope: !12293, file: !919, line: 1882, type: !1105)
!12293 = distinct !DILexicalBlock(scope: !12287, file: !919, line: 1882, column: 69)
!12294 = !DILocation(line: 1882, column: 77, scope: !12293)
!12295 = !DILocation(line: 1882, column: 105, scope: !12296)
!12296 = !DILexicalBlockFile(scope: !12293, file: !919, discriminator: 2)
!12297 = !DILocation(line: 1882, column: 84, scope: !12296)
!12298 = !DILocation(line: 1882, column: 87, scope: !12296)
!12299 = !DILocation(line: 1882, column: 108, scope: !12296)
!12300 = !DILocation(line: 1882, column: 77, scope: !12296)
!12301 = !DILocation(line: 1882, column: 153, scope: !12296)
!12302 = !DILocation(line: 1882, column: 157, scope: !12296)
!12303 = !DILocation(line: 1882, column: 161, scope: !12296)
!12304 = !DILocation(line: 1882, column: 130, scope: !12296)
!12305 = !DILocation(line: 1882, column: 128, scope: !12296)
!12306 = !DILocation(line: 1882, column: 168, scope: !12296)
!12307 = !DILocation(line: 1882, column: 123, scope: !12296)
!12308 = !DILocation(line: 1882, column: 219, scope: !12309)
!12309 = !DILexicalBlockFile(scope: !12310, file: !919, discriminator: 3)
!12310 = distinct !DILexicalBlock(scope: !12293, file: !919, line: 1882, column: 123)
!12311 = !DILocation(line: 1882, column: 198, scope: !12309)
!12312 = !DILocation(line: 1882, column: 201, scope: !12309)
!12313 = !DILocation(line: 1882, column: 222, scope: !12309)
!12314 = !DILocation(line: 1882, column: 224, scope: !12309)
!12315 = !DILocation(line: 1882, column: 173, scope: !12309)
!12316 = !DILocation(line: 1882, column: 184, scope: !12309)
!12317 = !DILocation(line: 1882, column: 196, scope: !12309)
!12318 = !DILocation(line: 1882, column: 236, scope: !12319)
!12319 = !DILexicalBlockFile(scope: !12320, file: !919, discriminator: 4)
!12320 = distinct !DILexicalBlock(scope: !12310, file: !919, line: 1882, column: 236)
!12321 = !DILocation(line: 1882, column: 240, scope: !12319)
!12322 = !DILocation(line: 1882, column: 245, scope: !12323)
!12323 = !DILexicalBlockFile(scope: !12320, file: !919, discriminator: 5)
!12324 = !DILocation(line: 1882, column: 262, scope: !12325)
!12325 = !DILexicalBlockFile(scope: !12293, file: !919, discriminator: 6)
!12326 = !DILocation(line: 1882, column: 65, scope: !12327)
!12327 = !DILexicalBlockFile(scope: !12287, file: !919, discriminator: 7)
!12328 = !DILocation(line: 1882, column: 23, scope: !12327)
!12329 = distinct !{!12329, !12330}
!12330 = !DILocation(line: 1882, column: 23, scope: !12278)
!12331 = !DILocalVariable(name: "i", scope: !12332, file: !919, line: 1884, type: !998)
!12332 = distinct !DILexicalBlock(scope: !12153, file: !919, line: 1884, column: 9)
!12333 = !DILocation(line: 1884, column: 15, scope: !12332)
!12334 = !DILocalVariable(name: "ret", scope: !12332, file: !919, line: 1884, type: !998)
!12335 = !DILocation(line: 1884, column: 18, scope: !12332)
!12336 = !DILocation(line: 1884, column: 30, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12332, file: !919, line: 1884, column: 23)
!12338 = !DILocation(line: 1884, column: 28, scope: !12337)
!12339 = !DILocation(line: 1884, column: 35, scope: !12340)
!12340 = !DILexicalBlockFile(scope: !12341, file: !919, discriminator: 1)
!12341 = distinct !DILexicalBlock(scope: !12337, file: !919, line: 1884, column: 23)
!12342 = !DILocation(line: 1884, column: 39, scope: !12340)
!12343 = !DILocation(line: 1884, column: 42, scope: !12340)
!12344 = !DILocation(line: 1884, column: 37, scope: !12340)
!12345 = !DILocation(line: 1884, column: 23, scope: !12340)
!12346 = !DILocalVariable(name: "spec", scope: !12347, file: !919, line: 1884, type: !1105)
!12347 = distinct !DILexicalBlock(scope: !12341, file: !919, line: 1884, column: 56)
!12348 = !DILocation(line: 1884, column: 64, scope: !12347)
!12349 = !DILocation(line: 1884, column: 79, scope: !12350)
!12350 = !DILexicalBlockFile(scope: !12347, file: !919, discriminator: 2)
!12351 = !DILocation(line: 1884, column: 71, scope: !12350)
!12352 = !DILocation(line: 1884, column: 74, scope: !12350)
!12353 = !DILocation(line: 1884, column: 82, scope: !12350)
!12354 = !DILocation(line: 1884, column: 64, scope: !12350)
!12355 = !DILocation(line: 1884, column: 127, scope: !12350)
!12356 = !DILocation(line: 1884, column: 131, scope: !12350)
!12357 = !DILocation(line: 1884, column: 135, scope: !12350)
!12358 = !DILocation(line: 1884, column: 104, scope: !12350)
!12359 = !DILocation(line: 1884, column: 102, scope: !12350)
!12360 = !DILocation(line: 1884, column: 142, scope: !12350)
!12361 = !DILocation(line: 1884, column: 97, scope: !12350)
!12362 = !DILocation(line: 1884, column: 167, scope: !12363)
!12363 = !DILexicalBlockFile(scope: !12364, file: !919, discriminator: 3)
!12364 = distinct !DILexicalBlock(scope: !12347, file: !919, line: 1884, column: 97)
!12365 = !DILocation(line: 1884, column: 159, scope: !12363)
!12366 = !DILocation(line: 1884, column: 162, scope: !12363)
!12367 = !DILocation(line: 1884, column: 170, scope: !12363)
!12368 = !DILocation(line: 1884, column: 172, scope: !12363)
!12369 = !DILocation(line: 1884, column: 147, scope: !12363)
!12370 = !DILocation(line: 1884, column: 152, scope: !12363)
!12371 = !DILocation(line: 1884, column: 157, scope: !12363)
!12372 = !DILocation(line: 1884, column: 186, scope: !12373)
!12373 = !DILexicalBlockFile(scope: !12374, file: !919, discriminator: 4)
!12374 = distinct !DILexicalBlock(scope: !12364, file: !919, line: 1884, column: 186)
!12375 = !DILocation(line: 1884, column: 190, scope: !12373)
!12376 = !DILocation(line: 1884, column: 195, scope: !12377)
!12377 = !DILexicalBlockFile(scope: !12374, file: !919, discriminator: 5)
!12378 = !DILocation(line: 1884, column: 212, scope: !12379)
!12379 = !DILexicalBlockFile(scope: !12347, file: !919, discriminator: 6)
!12380 = !DILocation(line: 1884, column: 52, scope: !12381)
!12381 = !DILexicalBlockFile(scope: !12341, file: !919, discriminator: 7)
!12382 = !DILocation(line: 1884, column: 23, scope: !12381)
!12383 = distinct !{!12383, !12384}
!12384 = !DILocation(line: 1884, column: 23, scope: !12332)
!12385 = !DILocation(line: 1885, column: 31, scope: !12153)
!12386 = !DILocation(line: 1885, column: 36, scope: !12153)
!12387 = !DILocation(line: 1885, column: 21, scope: !12153)
!12388 = !DILocation(line: 1885, column: 9, scope: !12153)
!12389 = !DILocation(line: 1885, column: 14, scope: !12153)
!12390 = !DILocation(line: 1885, column: 19, scope: !12153)
!12391 = !DILocation(line: 1887, column: 41, scope: !12153)
!12392 = !DILocation(line: 1887, column: 44, scope: !12153)
!12393 = !DILocation(line: 1887, column: 48, scope: !12153)
!12394 = !DILocation(line: 1887, column: 25, scope: !12153)
!12395 = !DILocation(line: 1887, column: 9, scope: !12153)
!12396 = !DILocation(line: 1887, column: 14, scope: !12153)
!12397 = !DILocation(line: 1887, column: 23, scope: !12153)
!12398 = !DILocation(line: 1888, column: 14, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12153, file: !919, line: 1888, column: 13)
!12400 = !DILocation(line: 1888, column: 19, scope: !12399)
!12401 = !DILocation(line: 1888, column: 13, scope: !12153)
!12402 = !DILocation(line: 1889, column: 13, scope: !12399)
!12403 = !DILocation(line: 1892, column: 16, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12153, file: !919, line: 1892, column: 9)
!12405 = !DILocation(line: 1892, column: 14, scope: !12404)
!12406 = !DILocation(line: 1892, column: 21, scope: !12407)
!12407 = !DILexicalBlockFile(scope: !12408, file: !919, discriminator: 1)
!12408 = distinct !DILexicalBlock(scope: !12404, file: !919, line: 1892, column: 9)
!12409 = !DILocation(line: 1892, column: 25, scope: !12407)
!12410 = !DILocation(line: 1892, column: 28, scope: !12407)
!12411 = !DILocation(line: 1892, column: 23, scope: !12407)
!12412 = !DILocation(line: 1892, column: 9, scope: !12407)
!12413 = !DILocalVariable(name: "map", scope: !12414, file: !919, line: 1893, type: !2181)
!12414 = distinct !DILexicalBlock(scope: !12408, file: !919, line: 1892, column: 56)
!12415 = !DILocation(line: 1893, column: 30, scope: !12414)
!12416 = !DILocation(line: 1893, column: 59, scope: !12414)
!12417 = !DILocation(line: 1893, column: 37, scope: !12414)
!12418 = !DILocation(line: 1893, column: 40, scope: !12414)
!12419 = !DILocation(line: 1894, column: 18, scope: !12420)
!12420 = distinct !DILexicalBlock(scope: !12414, file: !919, line: 1894, column: 17)
!12421 = !DILocation(line: 1894, column: 23, scope: !12420)
!12422 = !DILocation(line: 1894, column: 33, scope: !12420)
!12423 = !DILocation(line: 1894, column: 39, scope: !12420)
!12424 = !DILocation(line: 1894, column: 42, scope: !12425)
!12425 = !DILexicalBlockFile(scope: !12420, file: !919, discriminator: 1)
!12426 = !DILocation(line: 1894, column: 47, scope: !12425)
!12427 = !DILocation(line: 1894, column: 61, scope: !12425)
!12428 = !DILocation(line: 1894, column: 66, scope: !12425)
!12429 = !DILocation(line: 1894, column: 58, scope: !12425)
!12430 = !DILocation(line: 1894, column: 77, scope: !12425)
!12431 = !DILocation(line: 1895, column: 18, scope: !12420)
!12432 = !DILocation(line: 1895, column: 23, scope: !12420)
!12433 = !DILocation(line: 1895, column: 35, scope: !12420)
!12434 = !DILocation(line: 1895, column: 41, scope: !12420)
!12435 = !DILocation(line: 1895, column: 44, scope: !12425)
!12436 = !DILocation(line: 1895, column: 49, scope: !12425)
!12437 = !DILocation(line: 1895, column: 53, scope: !12425)
!12438 = !DILocation(line: 1895, column: 62, scope: !12425)
!12439 = !DILocation(line: 1895, column: 67, scope: !12425)
!12440 = !DILocation(line: 1895, column: 59, scope: !12425)
!12441 = !DILocation(line: 1894, column: 17, scope: !12442)
!12442 = !DILexicalBlockFile(scope: !12414, file: !919, discriminator: 2)
!12443 = !DILocalVariable(name: "ist", scope: !12444, file: !919, line: 1896, type: !4374)
!12444 = distinct !DILexicalBlock(scope: !12420, file: !919, line: 1895, column: 81)
!12445 = !DILocation(line: 1896, column: 30, scope: !12444)
!12446 = !DILocation(line: 1898, column: 21, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12444, file: !919, line: 1898, column: 21)
!12448 = !DILocation(line: 1898, column: 26, scope: !12447)
!12449 = !DILocation(line: 1898, column: 38, scope: !12447)
!12450 = !DILocation(line: 1898, column: 21, scope: !12444)
!12451 = !DILocation(line: 1899, column: 25, scope: !12452)
!12452 = distinct !DILexicalBlock(scope: !12447, file: !919, line: 1898, column: 45)
!12453 = !DILocation(line: 1900, column: 17, scope: !12452)
!12454 = !DILocation(line: 1900, column: 28, scope: !12455)
!12455 = !DILexicalBlockFile(scope: !12456, file: !919, discriminator: 1)
!12456 = distinct !DILexicalBlock(scope: !12447, file: !919, line: 1900, column: 28)
!12457 = !DILocation(line: 1900, column: 33, scope: !12455)
!12458 = !DILocation(line: 1900, column: 46, scope: !12455)
!12459 = !DILocation(line: 1902, column: 28, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12456, file: !919, line: 1900, column: 51)
!12461 = !DILocation(line: 1902, column: 33, scope: !12460)
!12462 = !DILocation(line: 1902, column: 45, scope: !12460)
!12463 = !DILocation(line: 1902, column: 50, scope: !12460)
!12464 = !DILocation(line: 1902, column: 54, scope: !12460)
!12465 = !DILocation(line: 1901, column: 21, scope: !12460)
!12466 = !DILocation(line: 1903, column: 21, scope: !12460)
!12467 = !DILocation(line: 1905, column: 41, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12456, file: !919, line: 1904, column: 24)
!12469 = !DILocation(line: 1905, column: 46, scope: !12468)
!12470 = !DILocation(line: 1905, column: 27, scope: !12468)
!12471 = !DILocation(line: 1905, column: 25, scope: !12468)
!12472 = !DILocation(line: 1908, column: 22, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12444, file: !919, line: 1908, column: 21)
!12474 = !DILocation(line: 1908, column: 26, scope: !12473)
!12475 = !DILocation(line: 1908, column: 30, scope: !12476)
!12476 = !DILexicalBlockFile(scope: !12473, file: !919, discriminator: 1)
!12477 = !DILocation(line: 1908, column: 35, scope: !12476)
!12478 = !DILocation(line: 1908, column: 49, scope: !12476)
!12479 = !DILocation(line: 1908, column: 54, scope: !12476)
!12480 = !DILocation(line: 1908, column: 46, scope: !12476)
!12481 = !DILocation(line: 1908, column: 63, scope: !12476)
!12482 = !DILocation(line: 1908, column: 66, scope: !12483)
!12483 = !DILexicalBlockFile(scope: !12473, file: !919, discriminator: 2)
!12484 = !DILocation(line: 1908, column: 71, scope: !12483)
!12485 = !DILocation(line: 1908, column: 75, scope: !12483)
!12486 = !DILocation(line: 1908, column: 84, scope: !12483)
!12487 = !DILocation(line: 1908, column: 89, scope: !12483)
!12488 = !DILocation(line: 1908, column: 81, scope: !12483)
!12489 = !DILocation(line: 1908, column: 21, scope: !12483)
!12490 = !DILocation(line: 1909, column: 44, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12492, file: !919, line: 1909, column: 25)
!12492 = distinct !DILexicalBlock(scope: !12473, file: !919, line: 1908, column: 102)
!12493 = !DILocation(line: 1909, column: 49, scope: !12491)
!12494 = !DILocation(line: 1909, column: 43, scope: !12491)
!12495 = !DILocation(line: 1910, column: 43, scope: !12491)
!12496 = !DILocation(line: 1910, column: 48, scope: !12491)
!12497 = !DILocation(line: 1910, column: 70, scope: !12491)
!12498 = !DILocation(line: 1909, column: 25, scope: !12491)
!12499 = !DILocation(line: 1912, column: 45, scope: !12491)
!12500 = !DILocation(line: 1909, column: 25, scope: !12492)
!12501 = !DILocation(line: 1913, column: 25, scope: !12491)
!12502 = !DILocation(line: 1915, column: 77, scope: !12492)
!12503 = !DILocation(line: 1915, column: 82, scope: !12492)
!12504 = !DILocation(line: 1915, column: 45, scope: !12492)
!12505 = !DILocation(line: 1915, column: 50, scope: !12492)
!12506 = !DILocation(line: 1915, column: 71, scope: !12492)
!12507 = !DILocation(line: 1915, column: 21, scope: !12492)
!12508 = !DILocation(line: 1915, column: 26, scope: !12492)
!12509 = !DILocation(line: 1915, column: 75, scope: !12492)
!12510 = !DILocation(line: 1916, column: 17, scope: !12492)
!12511 = !DILocation(line: 1917, column: 13, scope: !12444)
!12512 = !DILocation(line: 1918, column: 9, scope: !12414)
!12513 = !DILocation(line: 1892, column: 52, scope: !12514)
!12514 = !DILexicalBlockFile(scope: !12408, file: !919, discriminator: 2)
!12515 = !DILocation(line: 1892, column: 9, scope: !12514)
!12516 = distinct !{!12516, !12517}
!12517 = !DILocation(line: 1892, column: 9, scope: !12153)
!12518 = !DILocation(line: 1919, column: 5, scope: !12153)
!12519 = !DILocation(line: 1921, column: 9, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12003, file: !919, line: 1921, column: 9)
!12521 = !DILocation(line: 1921, column: 14, scope: !12520)
!12522 = !DILocation(line: 1921, column: 9, scope: !12003)
!12523 = !DILocation(line: 1922, column: 34, scope: !12520)
!12524 = !DILocation(line: 1922, column: 37, scope: !12520)
!12525 = !DILocation(line: 1922, column: 41, scope: !12520)
!12526 = !DILocation(line: 1922, column: 9, scope: !12520)
!12527 = !DILocation(line: 1924, column: 12, scope: !12003)
!12528 = !DILocation(line: 1924, column: 5, scope: !12003)
!12529 = distinct !DISubprogram(name: "new_subtitle_stream", scope: !919, file: !919, line: 1961, type: !10651, isLocal: true, isDefinition: true, scopeLine: 1962, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!12530 = !DILocalVariable(name: "o", arg: 1, scope: !12529, file: !919, line: 1961, type: !2116)
!12531 = !DILocation(line: 1961, column: 58, scope: !12529)
!12532 = !DILocalVariable(name: "oc", arg: 2, scope: !12529, file: !919, line: 1961, type: !2364)
!12533 = !DILocation(line: 1961, column: 78, scope: !12529)
!12534 = !DILocalVariable(name: "source_index", arg: 3, scope: !12529, file: !919, line: 1961, type: !998)
!12535 = !DILocation(line: 1961, column: 86, scope: !12529)
!12536 = !DILocalVariable(name: "st", scope: !12529, file: !919, line: 1963, type: !2562)
!12537 = !DILocation(line: 1963, column: 15, scope: !12529)
!12538 = !DILocalVariable(name: "ost", scope: !12529, file: !919, line: 1964, type: !4056)
!12539 = !DILocation(line: 1964, column: 19, scope: !12529)
!12540 = !DILocalVariable(name: "subtitle_enc", scope: !12529, file: !919, line: 1965, type: !1361)
!12541 = !DILocation(line: 1965, column: 21, scope: !12529)
!12542 = !DILocation(line: 1967, column: 29, scope: !12529)
!12543 = !DILocation(line: 1967, column: 32, scope: !12529)
!12544 = !DILocation(line: 1967, column: 59, scope: !12529)
!12545 = !DILocation(line: 1967, column: 11, scope: !12529)
!12546 = !DILocation(line: 1967, column: 9, scope: !12529)
!12547 = !DILocation(line: 1968, column: 10, scope: !12529)
!12548 = !DILocation(line: 1968, column: 15, scope: !12529)
!12549 = !DILocation(line: 1968, column: 8, scope: !12529)
!12550 = !DILocation(line: 1969, column: 20, scope: !12529)
!12551 = !DILocation(line: 1969, column: 25, scope: !12529)
!12552 = !DILocation(line: 1969, column: 18, scope: !12529)
!12553 = !DILocation(line: 1971, column: 5, scope: !12529)
!12554 = !DILocation(line: 1971, column: 19, scope: !12529)
!12555 = !DILocation(line: 1971, column: 30, scope: !12529)
!12556 = !DILocalVariable(name: "i", scope: !12557, file: !919, line: 1973, type: !998)
!12557 = distinct !DILexicalBlock(scope: !12529, file: !919, line: 1973, column: 5)
!12558 = !DILocation(line: 1973, column: 11, scope: !12557)
!12559 = !DILocalVariable(name: "ret", scope: !12557, file: !919, line: 1973, type: !998)
!12560 = !DILocation(line: 1973, column: 14, scope: !12557)
!12561 = !DILocation(line: 1973, column: 26, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12557, file: !919, line: 1973, column: 19)
!12563 = !DILocation(line: 1973, column: 24, scope: !12562)
!12564 = !DILocation(line: 1973, column: 31, scope: !12565)
!12565 = !DILexicalBlockFile(scope: !12566, file: !919, discriminator: 1)
!12566 = distinct !DILexicalBlock(scope: !12562, file: !919, line: 1973, column: 19)
!12567 = !DILocation(line: 1973, column: 35, scope: !12565)
!12568 = !DILocation(line: 1973, column: 38, scope: !12565)
!12569 = !DILocation(line: 1973, column: 33, scope: !12565)
!12570 = !DILocation(line: 1973, column: 19, scope: !12565)
!12571 = !DILocalVariable(name: "spec", scope: !12572, file: !919, line: 1973, type: !1105)
!12572 = distinct !DILexicalBlock(scope: !12566, file: !919, line: 1973, column: 73)
!12573 = !DILocation(line: 1973, column: 81, scope: !12572)
!12574 = !DILocation(line: 1973, column: 117, scope: !12575)
!12575 = !DILexicalBlockFile(scope: !12572, file: !919, discriminator: 2)
!12576 = !DILocation(line: 1973, column: 88, scope: !12575)
!12577 = !DILocation(line: 1973, column: 91, scope: !12575)
!12578 = !DILocation(line: 1973, column: 120, scope: !12575)
!12579 = !DILocation(line: 1973, column: 81, scope: !12575)
!12580 = !DILocation(line: 1973, column: 165, scope: !12575)
!12581 = !DILocation(line: 1973, column: 169, scope: !12575)
!12582 = !DILocation(line: 1973, column: 173, scope: !12575)
!12583 = !DILocation(line: 1973, column: 142, scope: !12575)
!12584 = !DILocation(line: 1973, column: 140, scope: !12575)
!12585 = !DILocation(line: 1973, column: 180, scope: !12575)
!12586 = !DILocation(line: 1973, column: 135, scope: !12575)
!12587 = !DILocation(line: 1973, column: 247, scope: !12588)
!12588 = !DILexicalBlockFile(scope: !12589, file: !919, discriminator: 3)
!12589 = distinct !DILexicalBlock(scope: !12572, file: !919, line: 1973, column: 135)
!12590 = !DILocation(line: 1973, column: 218, scope: !12588)
!12591 = !DILocation(line: 1973, column: 221, scope: !12588)
!12592 = !DILocation(line: 1973, column: 250, scope: !12588)
!12593 = !DILocation(line: 1973, column: 252, scope: !12588)
!12594 = !DILocation(line: 1973, column: 185, scope: !12588)
!12595 = !DILocation(line: 1973, column: 190, scope: !12588)
!12596 = !DILocation(line: 1973, column: 216, scope: !12588)
!12597 = !DILocation(line: 1973, column: 264, scope: !12598)
!12598 = !DILexicalBlockFile(scope: !12599, file: !919, discriminator: 4)
!12599 = distinct !DILexicalBlock(scope: !12589, file: !919, line: 1973, column: 264)
!12600 = !DILocation(line: 1973, column: 268, scope: !12598)
!12601 = !DILocation(line: 1973, column: 273, scope: !12602)
!12602 = !DILexicalBlockFile(scope: !12599, file: !919, discriminator: 5)
!12603 = !DILocation(line: 1973, column: 290, scope: !12604)
!12604 = !DILexicalBlockFile(scope: !12572, file: !919, discriminator: 6)
!12605 = !DILocation(line: 1973, column: 69, scope: !12606)
!12606 = !DILexicalBlockFile(scope: !12566, file: !919, discriminator: 7)
!12607 = !DILocation(line: 1973, column: 19, scope: !12606)
!12608 = distinct !{!12608, !12609}
!12609 = !DILocation(line: 1973, column: 19, scope: !12557)
!12610 = !DILocation(line: 1975, column: 10, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12529, file: !919, line: 1975, column: 9)
!12612 = !DILocation(line: 1975, column: 15, scope: !12611)
!12613 = !DILocation(line: 1975, column: 9, scope: !12529)
!12614 = !DILocalVariable(name: "frame_size", scope: !12615, file: !919, line: 1976, type: !1105)
!12615 = distinct !DILexicalBlock(scope: !12611, file: !919, line: 1975, column: 28)
!12616 = !DILocation(line: 1976, column: 15, scope: !12615)
!12617 = !DILocalVariable(name: "i", scope: !12618, file: !919, line: 1978, type: !998)
!12618 = distinct !DILexicalBlock(scope: !12615, file: !919, line: 1978, column: 9)
!12619 = !DILocation(line: 1978, column: 15, scope: !12618)
!12620 = !DILocalVariable(name: "ret", scope: !12618, file: !919, line: 1978, type: !998)
!12621 = !DILocation(line: 1978, column: 18, scope: !12618)
!12622 = !DILocation(line: 1978, column: 30, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12618, file: !919, line: 1978, column: 23)
!12624 = !DILocation(line: 1978, column: 28, scope: !12623)
!12625 = !DILocation(line: 1978, column: 35, scope: !12626)
!12626 = !DILexicalBlockFile(scope: !12627, file: !919, discriminator: 1)
!12627 = distinct !DILexicalBlock(scope: !12623, file: !919, line: 1978, column: 23)
!12628 = !DILocation(line: 1978, column: 39, scope: !12626)
!12629 = !DILocation(line: 1978, column: 42, scope: !12626)
!12630 = !DILocation(line: 1978, column: 37, scope: !12626)
!12631 = !DILocation(line: 1978, column: 23, scope: !12626)
!12632 = !DILocalVariable(name: "spec", scope: !12633, file: !919, line: 1978, type: !1105)
!12633 = distinct !DILexicalBlock(scope: !12627, file: !919, line: 1978, column: 63)
!12634 = !DILocation(line: 1978, column: 71, scope: !12633)
!12635 = !DILocation(line: 1978, column: 93, scope: !12636)
!12636 = !DILexicalBlockFile(scope: !12633, file: !919, discriminator: 2)
!12637 = !DILocation(line: 1978, column: 78, scope: !12636)
!12638 = !DILocation(line: 1978, column: 81, scope: !12636)
!12639 = !DILocation(line: 1978, column: 96, scope: !12636)
!12640 = !DILocation(line: 1978, column: 71, scope: !12636)
!12641 = !DILocation(line: 1978, column: 141, scope: !12636)
!12642 = !DILocation(line: 1978, column: 145, scope: !12636)
!12643 = !DILocation(line: 1978, column: 149, scope: !12636)
!12644 = !DILocation(line: 1978, column: 118, scope: !12636)
!12645 = !DILocation(line: 1978, column: 116, scope: !12636)
!12646 = !DILocation(line: 1978, column: 156, scope: !12636)
!12647 = !DILocation(line: 1978, column: 111, scope: !12636)
!12648 = !DILocation(line: 1978, column: 189, scope: !12649)
!12649 = !DILexicalBlockFile(scope: !12650, file: !919, discriminator: 3)
!12650 = distinct !DILexicalBlock(scope: !12633, file: !919, line: 1978, column: 111)
!12651 = !DILocation(line: 1978, column: 174, scope: !12649)
!12652 = !DILocation(line: 1978, column: 177, scope: !12649)
!12653 = !DILocation(line: 1978, column: 192, scope: !12649)
!12654 = !DILocation(line: 1978, column: 194, scope: !12649)
!12655 = !DILocation(line: 1978, column: 172, scope: !12649)
!12656 = !DILocation(line: 1978, column: 161, scope: !12649)
!12657 = !DILocation(line: 1978, column: 208, scope: !12658)
!12658 = !DILexicalBlockFile(scope: !12659, file: !919, discriminator: 4)
!12659 = distinct !DILexicalBlock(scope: !12650, file: !919, line: 1978, column: 208)
!12660 = !DILocation(line: 1978, column: 212, scope: !12658)
!12661 = !DILocation(line: 1978, column: 217, scope: !12662)
!12662 = !DILexicalBlockFile(scope: !12659, file: !919, discriminator: 5)
!12663 = !DILocation(line: 1978, column: 234, scope: !12664)
!12664 = !DILexicalBlockFile(scope: !12633, file: !919, discriminator: 6)
!12665 = !DILocation(line: 1978, column: 59, scope: !12666)
!12666 = !DILexicalBlockFile(scope: !12627, file: !919, discriminator: 7)
!12667 = !DILocation(line: 1978, column: 23, scope: !12666)
!12668 = distinct !{!12668, !12669}
!12669 = !DILocation(line: 1978, column: 23, scope: !12618)
!12670 = !DILocation(line: 1979, column: 13, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12615, file: !919, line: 1979, column: 13)
!12672 = !DILocation(line: 1979, column: 24, scope: !12671)
!12673 = !DILocation(line: 1979, column: 48, scope: !12674)
!12674 = !DILexicalBlockFile(scope: !12671, file: !919, discriminator: 1)
!12675 = !DILocation(line: 1979, column: 62, scope: !12674)
!12676 = !DILocation(line: 1979, column: 70, scope: !12674)
!12677 = !DILocation(line: 1979, column: 84, scope: !12674)
!12678 = !DILocation(line: 1979, column: 92, scope: !12674)
!12679 = !DILocation(line: 1979, column: 27, scope: !12674)
!12680 = !DILocation(line: 1979, column: 104, scope: !12674)
!12681 = !DILocation(line: 1979, column: 13, scope: !12674)
!12682 = !DILocation(line: 1980, column: 57, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12671, file: !919, line: 1979, column: 109)
!12684 = !DILocation(line: 1980, column: 13, scope: !12683)
!12685 = !DILocation(line: 1981, column: 13, scope: !12683)
!12686 = !DILocation(line: 1983, column: 5, scope: !12615)
!12687 = !DILocation(line: 1985, column: 12, scope: !12529)
!12688 = !DILocation(line: 1985, column: 5, scope: !12529)
!12689 = distinct !DISubprogram(name: "new_data_stream", scope: !919, file: !919, line: 1927, type: !10651, isLocal: true, isDefinition: true, scopeLine: 1928, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!12690 = !DILocalVariable(name: "o", arg: 1, scope: !12689, file: !919, line: 1927, type: !2116)
!12691 = !DILocation(line: 1927, column: 54, scope: !12689)
!12692 = !DILocalVariable(name: "oc", arg: 2, scope: !12689, file: !919, line: 1927, type: !2364)
!12693 = !DILocation(line: 1927, column: 74, scope: !12689)
!12694 = !DILocalVariable(name: "source_index", arg: 3, scope: !12689, file: !919, line: 1927, type: !998)
!12695 = !DILocation(line: 1927, column: 82, scope: !12689)
!12696 = !DILocalVariable(name: "ost", scope: !12689, file: !919, line: 1929, type: !4056)
!12697 = !DILocation(line: 1929, column: 19, scope: !12689)
!12698 = !DILocation(line: 1931, column: 29, scope: !12689)
!12699 = !DILocation(line: 1931, column: 32, scope: !12689)
!12700 = !DILocation(line: 1931, column: 55, scope: !12689)
!12701 = !DILocation(line: 1931, column: 11, scope: !12689)
!12702 = !DILocation(line: 1931, column: 9, scope: !12689)
!12703 = !DILocation(line: 1932, column: 10, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12689, file: !919, line: 1932, column: 9)
!12705 = !DILocation(line: 1932, column: 15, scope: !12704)
!12706 = !DILocation(line: 1932, column: 9, scope: !12689)
!12707 = !DILocation(line: 1933, column: 9, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12704, file: !919, line: 1932, column: 28)
!12709 = !DILocation(line: 1934, column: 9, scope: !12708)
!12710 = !DILocation(line: 1937, column: 12, scope: !12689)
!12711 = !DILocation(line: 1937, column: 5, scope: !12689)
!12712 = distinct !DISubprogram(name: "new_attachment_stream", scope: !919, file: !919, line: 1953, type: !10651, isLocal: true, isDefinition: true, scopeLine: 1954, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!12713 = !DILocalVariable(name: "o", arg: 1, scope: !12712, file: !919, line: 1953, type: !2116)
!12714 = !DILocation(line: 1953, column: 60, scope: !12712)
!12715 = !DILocalVariable(name: "oc", arg: 2, scope: !12712, file: !919, line: 1953, type: !2364)
!12716 = !DILocation(line: 1953, column: 80, scope: !12712)
!12717 = !DILocalVariable(name: "source_index", arg: 3, scope: !12712, file: !919, line: 1953, type: !998)
!12718 = !DILocation(line: 1953, column: 88, scope: !12712)
!12719 = !DILocalVariable(name: "ost", scope: !12712, file: !919, line: 1955, type: !4056)
!12720 = !DILocation(line: 1955, column: 19, scope: !12712)
!12721 = !DILocation(line: 1955, column: 43, scope: !12712)
!12722 = !DILocation(line: 1955, column: 46, scope: !12712)
!12723 = !DILocation(line: 1955, column: 75, scope: !12712)
!12724 = !DILocation(line: 1955, column: 25, scope: !12712)
!12725 = !DILocation(line: 1956, column: 5, scope: !12712)
!12726 = !DILocation(line: 1956, column: 10, scope: !12712)
!12727 = !DILocation(line: 1956, column: 22, scope: !12712)
!12728 = !DILocation(line: 1957, column: 5, scope: !12712)
!12729 = !DILocation(line: 1957, column: 10, scope: !12712)
!12730 = !DILocation(line: 1957, column: 19, scope: !12712)
!12731 = !DILocation(line: 1958, column: 12, scope: !12712)
!12732 = !DILocation(line: 1958, column: 5, scope: !12712)
!12733 = distinct !DISubprogram(name: "new_unknown_stream", scope: !919, file: !919, line: 1940, type: !10651, isLocal: true, isDefinition: true, scopeLine: 1941, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!12734 = !DILocalVariable(name: "o", arg: 1, scope: !12733, file: !919, line: 1940, type: !2116)
!12735 = !DILocation(line: 1940, column: 57, scope: !12733)
!12736 = !DILocalVariable(name: "oc", arg: 2, scope: !12733, file: !919, line: 1940, type: !2364)
!12737 = !DILocation(line: 1940, column: 77, scope: !12733)
!12738 = !DILocalVariable(name: "source_index", arg: 3, scope: !12733, file: !919, line: 1940, type: !998)
!12739 = !DILocation(line: 1940, column: 85, scope: !12733)
!12740 = !DILocalVariable(name: "ost", scope: !12733, file: !919, line: 1942, type: !4056)
!12741 = !DILocation(line: 1942, column: 19, scope: !12733)
!12742 = !DILocation(line: 1944, column: 29, scope: !12733)
!12743 = !DILocation(line: 1944, column: 32, scope: !12733)
!12744 = !DILocation(line: 1944, column: 58, scope: !12733)
!12745 = !DILocation(line: 1944, column: 11, scope: !12733)
!12746 = !DILocation(line: 1944, column: 9, scope: !12733)
!12747 = !DILocation(line: 1945, column: 10, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12733, file: !919, line: 1945, column: 9)
!12749 = !DILocation(line: 1945, column: 15, scope: !12748)
!12750 = !DILocation(line: 1945, column: 9, scope: !12733)
!12751 = !DILocation(line: 1946, column: 9, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12748, file: !919, line: 1945, column: 28)
!12753 = !DILocation(line: 1947, column: 9, scope: !12752)
!12754 = !DILocation(line: 1950, column: 12, scope: !12733)
!12755 = !DILocation(line: 1950, column: 5, scope: !12733)
!12756 = distinct !DISubprogram(name: "copy_metadata", scope: !919, file: !919, line: 561, type: !12757, isLocal: true, isDefinition: true, scopeLine: 562, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!12757 = !DISubroutineType(types: !12758)
!12758 = !{!998, !1105, !1105, !2364, !2364, !2116}
!12759 = !DILocalVariable(name: "outspec", arg: 1, scope: !12756, file: !919, line: 561, type: !1105)
!12760 = !DILocation(line: 561, column: 32, scope: !12756)
!12761 = !DILocalVariable(name: "inspec", arg: 2, scope: !12756, file: !919, line: 561, type: !1105)
!12762 = !DILocation(line: 561, column: 47, scope: !12756)
!12763 = !DILocalVariable(name: "oc", arg: 3, scope: !12756, file: !919, line: 561, type: !2364)
!12764 = !DILocation(line: 561, column: 72, scope: !12756)
!12765 = !DILocalVariable(name: "ic", arg: 4, scope: !12756, file: !919, line: 561, type: !2364)
!12766 = !DILocation(line: 561, column: 93, scope: !12756)
!12767 = !DILocalVariable(name: "o", arg: 5, scope: !12756, file: !919, line: 561, type: !2116)
!12768 = !DILocation(line: 561, column: 113, scope: !12756)
!12769 = !DILocalVariable(name: "meta_in", scope: !12756, file: !919, line: 563, type: !1087)
!12770 = !DILocation(line: 563, column: 20, scope: !12756)
!12771 = !DILocalVariable(name: "meta_out", scope: !12756, file: !919, line: 564, type: !1087)
!12772 = !DILocation(line: 564, column: 20, scope: !12756)
!12773 = !DILocalVariable(name: "i", scope: !12756, file: !919, line: 565, type: !998)
!12774 = !DILocation(line: 565, column: 9, scope: !12756)
!12775 = !DILocalVariable(name: "ret", scope: !12756, file: !919, line: 565, type: !998)
!12776 = !DILocation(line: 565, column: 12, scope: !12756)
!12777 = !DILocalVariable(name: "type_in", scope: !12756, file: !919, line: 566, type: !984)
!12778 = !DILocation(line: 566, column: 10, scope: !12756)
!12779 = !DILocalVariable(name: "type_out", scope: !12756, file: !919, line: 566, type: !984)
!12780 = !DILocation(line: 566, column: 19, scope: !12756)
!12781 = !DILocalVariable(name: "istream_spec", scope: !12756, file: !919, line: 567, type: !982)
!12782 = !DILocation(line: 567, column: 17, scope: !12756)
!12783 = !DILocalVariable(name: "ostream_spec", scope: !12756, file: !919, line: 567, type: !982)
!12784 = !DILocation(line: 567, column: 38, scope: !12756)
!12785 = !DILocalVariable(name: "idx_in", scope: !12756, file: !919, line: 568, type: !998)
!12786 = !DILocation(line: 568, column: 9, scope: !12756)
!12787 = !DILocalVariable(name: "idx_out", scope: !12756, file: !919, line: 568, type: !998)
!12788 = !DILocation(line: 568, column: 21, scope: !12756)
!12789 = !DILocation(line: 570, column: 21, scope: !12756)
!12790 = !DILocation(line: 570, column: 5, scope: !12756)
!12791 = !DILocation(line: 571, column: 21, scope: !12756)
!12792 = !DILocation(line: 571, column: 5, scope: !12756)
!12793 = !DILocation(line: 573, column: 10, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12756, file: !919, line: 573, column: 9)
!12795 = !DILocation(line: 573, column: 9, scope: !12756)
!12796 = !DILocation(line: 574, column: 13, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12798, file: !919, line: 574, column: 13)
!12798 = distinct !DILexicalBlock(scope: !12794, file: !919, line: 573, column: 14)
!12799 = !DILocation(line: 574, column: 22, scope: !12797)
!12800 = !DILocation(line: 574, column: 29, scope: !12797)
!12801 = !DILocation(line: 574, column: 34, scope: !12802)
!12802 = !DILexicalBlockFile(scope: !12797, file: !919, discriminator: 1)
!12803 = !DILocation(line: 574, column: 33, scope: !12802)
!12804 = !DILocation(line: 574, column: 13, scope: !12802)
!12805 = !DILocation(line: 575, column: 13, scope: !12797)
!12806 = !DILocation(line: 575, column: 16, scope: !12797)
!12807 = !DILocation(line: 575, column: 39, scope: !12797)
!12808 = !DILocation(line: 576, column: 13, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12798, file: !919, line: 576, column: 13)
!12810 = !DILocation(line: 576, column: 22, scope: !12809)
!12811 = !DILocation(line: 576, column: 29, scope: !12809)
!12812 = !DILocation(line: 576, column: 34, scope: !12813)
!12813 = !DILexicalBlockFile(scope: !12809, file: !919, discriminator: 1)
!12814 = !DILocation(line: 576, column: 33, scope: !12813)
!12815 = !DILocation(line: 576, column: 13, scope: !12813)
!12816 = !DILocation(line: 577, column: 13, scope: !12809)
!12817 = !DILocation(line: 577, column: 16, scope: !12809)
!12818 = !DILocation(line: 577, column: 40, scope: !12809)
!12819 = !DILocation(line: 578, column: 13, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12798, file: !919, line: 578, column: 13)
!12821 = !DILocation(line: 578, column: 22, scope: !12820)
!12822 = !DILocation(line: 578, column: 29, scope: !12820)
!12823 = !DILocation(line: 578, column: 34, scope: !12824)
!12824 = !DILexicalBlockFile(scope: !12820, file: !919, discriminator: 1)
!12825 = !DILocation(line: 578, column: 33, scope: !12824)
!12826 = !DILocation(line: 578, column: 13, scope: !12824)
!12827 = !DILocation(line: 579, column: 13, scope: !12820)
!12828 = !DILocation(line: 579, column: 16, scope: !12820)
!12829 = !DILocation(line: 579, column: 41, scope: !12820)
!12830 = !DILocation(line: 580, column: 9, scope: !12798)
!12831 = !DILocation(line: 583, column: 9, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12756, file: !919, line: 583, column: 9)
!12833 = !DILocation(line: 583, column: 17, scope: !12832)
!12834 = !DILocation(line: 583, column: 24, scope: !12832)
!12835 = !DILocation(line: 583, column: 27, scope: !12836)
!12836 = !DILexicalBlockFile(scope: !12832, file: !919, discriminator: 1)
!12837 = !DILocation(line: 583, column: 36, scope: !12836)
!12838 = !DILocation(line: 583, column: 9, scope: !12836)
!12839 = !DILocation(line: 584, column: 9, scope: !12832)
!12840 = !DILocation(line: 584, column: 12, scope: !12832)
!12841 = !DILocation(line: 584, column: 35, scope: !12832)
!12842 = !DILocation(line: 585, column: 9, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12756, file: !919, line: 585, column: 9)
!12844 = !DILocation(line: 585, column: 17, scope: !12843)
!12845 = !DILocation(line: 585, column: 24, scope: !12843)
!12846 = !DILocation(line: 585, column: 27, scope: !12847)
!12847 = !DILexicalBlockFile(scope: !12843, file: !919, discriminator: 1)
!12848 = !DILocation(line: 585, column: 36, scope: !12847)
!12849 = !DILocation(line: 585, column: 9, scope: !12847)
!12850 = !DILocation(line: 586, column: 9, scope: !12843)
!12851 = !DILocation(line: 586, column: 12, scope: !12843)
!12852 = !DILocation(line: 586, column: 36, scope: !12843)
!12853 = !DILocation(line: 587, column: 9, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12756, file: !919, line: 587, column: 9)
!12855 = !DILocation(line: 587, column: 17, scope: !12854)
!12856 = !DILocation(line: 587, column: 24, scope: !12854)
!12857 = !DILocation(line: 587, column: 27, scope: !12858)
!12858 = !DILexicalBlockFile(scope: !12854, file: !919, discriminator: 1)
!12859 = !DILocation(line: 587, column: 36, scope: !12858)
!12860 = !DILocation(line: 587, column: 9, scope: !12858)
!12861 = !DILocation(line: 588, column: 9, scope: !12854)
!12862 = !DILocation(line: 588, column: 12, scope: !12854)
!12863 = !DILocation(line: 588, column: 37, scope: !12854)
!12864 = !DILocation(line: 591, column: 10, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12756, file: !919, line: 591, column: 9)
!12866 = !DILocation(line: 591, column: 9, scope: !12756)
!12867 = !DILocation(line: 592, column: 9, scope: !12865)
!12868 = !DILocation(line: 619, column: 13, scope: !12756)
!12869 = !DILocation(line: 619, column: 5, scope: !12756)
!12870 = !DILocation(line: 619, column: 45, scope: !12871)
!12871 = !DILexicalBlockFile(scope: !12872, file: !919, discriminator: 1)
!12872 = distinct !DILexicalBlock(scope: !12756, file: !919, line: 619, column: 22)
!12873 = !DILocation(line: 619, column: 49, scope: !12871)
!12874 = !DILocation(line: 619, column: 42, scope: !12871)
!12875 = !DILocation(line: 619, column: 59, scope: !12871)
!12876 = !DILocation(line: 619, column: 81, scope: !12877)
!12877 = !DILexicalBlockFile(scope: !12878, file: !919, discriminator: 2)
!12878 = distinct !DILexicalBlock(scope: !12872, file: !919, line: 619, column: 80)
!12879 = !DILocation(line: 619, column: 89, scope: !12877)
!12880 = !DILocation(line: 619, column: 93, scope: !12877)
!12881 = !DILocation(line: 619, column: 97, scope: !12882)
!12882 = !DILexicalBlockFile(scope: !12878, file: !919, discriminator: 3)
!12883 = !DILocation(line: 619, column: 109, scope: !12882)
!12884 = !DILocation(line: 619, column: 113, scope: !12882)
!12885 = !DILocation(line: 619, column: 105, scope: !12882)
!12886 = !DILocation(line: 619, column: 80, scope: !12882)
!12887 = !DILocation(line: 619, column: 80, scope: !12888)
!12888 = !DILexicalBlockFile(scope: !12889, file: !919, discriminator: 4)
!12889 = distinct !DILexicalBlock(scope: !12878, file: !919, line: 619, column: 127)
!12890 = !DILocation(line: 619, column: 129, scope: !12888)
!12891 = !DILocation(line: 619, column: 90, scope: !12892)
!12892 = !DILexicalBlockFile(scope: !12888, file: !919, discriminator: 14)
!12893 = !DILocation(line: 619, column: 90, scope: !12888)
!12894 = !DILocation(line: 619, column: 133, scope: !12895)
!12895 = !DILexicalBlockFile(scope: !12872, file: !919, discriminator: 5)
!12896 = !DILocation(line: 619, column: 120, scope: !12895)
!12897 = !DILocation(line: 619, column: 124, scope: !12895)
!12898 = !DILocation(line: 619, column: 142, scope: !12895)
!12899 = !DILocation(line: 619, column: 117, scope: !12895)
!12900 = !DILocation(line: 619, column: 152, scope: !12895)
!12901 = !DILocation(line: 619, column: 174, scope: !12902)
!12902 = !DILexicalBlockFile(scope: !12903, file: !919, discriminator: 6)
!12903 = distinct !DILexicalBlock(scope: !12872, file: !919, line: 619, column: 173)
!12904 = !DILocation(line: 619, column: 182, scope: !12902)
!12905 = !DILocation(line: 619, column: 186, scope: !12902)
!12906 = !DILocation(line: 619, column: 190, scope: !12907)
!12907 = !DILexicalBlockFile(scope: !12903, file: !919, discriminator: 7)
!12908 = !DILocation(line: 619, column: 202, scope: !12907)
!12909 = !DILocation(line: 619, column: 206, scope: !12907)
!12910 = !DILocation(line: 619, column: 198, scope: !12907)
!12911 = !DILocation(line: 619, column: 173, scope: !12907)
!12912 = !DILocation(line: 619, column: 80, scope: !12913)
!12913 = !DILexicalBlockFile(scope: !12914, file: !919, discriminator: 8)
!12914 = distinct !DILexicalBlock(scope: !12903, file: !919, line: 619, column: 220)
!12915 = !DILocation(line: 619, column: 222, scope: !12913)
!12916 = !DILocation(line: 619, column: 90, scope: !12917)
!12917 = !DILexicalBlockFile(scope: !12913, file: !919, discriminator: 15)
!12918 = !DILocation(line: 619, column: 90, scope: !12913)
!12919 = !DILocation(line: 619, column: 133, scope: !12920)
!12920 = !DILexicalBlockFile(scope: !12872, file: !919, discriminator: 9)
!12921 = !DILocation(line: 619, column: 120, scope: !12920)
!12922 = !DILocation(line: 619, column: 124, scope: !12920)
!12923 = !DILocation(line: 619, column: 142, scope: !12920)
!12924 = !DILocation(line: 619, column: 117, scope: !12920)
!12925 = !DILocation(line: 619, column: 152, scope: !12920)
!12926 = !DILocation(line: 619, column: 169, scope: !12927)
!12927 = !DILexicalBlockFile(scope: !12872, file: !919, discriminator: 10)
!12928 = !DILocation(line: 619, column: 185, scope: !12929)
!12929 = !DILexicalBlockFile(scope: !12872, file: !919, discriminator: 11)
!12930 = distinct !{!12930, !12931}
!12931 = !DILocation(line: 619, column: 185, scope: !12872)
!12932 = !DILocation(line: 619, column: 202, scope: !12933)
!12933 = !DILexicalBlockFile(scope: !12934, file: !919, discriminator: 12)
!12934 = distinct !DILexicalBlock(scope: !12935, file: !919, line: 619, column: 200)
!12935 = distinct !DILexicalBlock(scope: !12936, file: !919, line: 619, column: 194)
!12936 = distinct !DILexicalBlock(scope: !12872, file: !919, line: 619, column: 188)
!12937 = !DILocation(line: 619, column: 78, scope: !12938)
!12938 = !DILexicalBlockFile(scope: !12933, file: !919, discriminator: 16)
!12939 = !DILocation(line: 619, column: 78, scope: !12933)
!12940 = !DILocation(line: 619, column: 102, scope: !12941)
!12941 = !DILexicalBlockFile(scope: !12872, file: !919, discriminator: 13)
!12942 = !DILocation(line: 620, column: 13, scope: !12756)
!12943 = !DILocation(line: 620, column: 5, scope: !12756)
!12944 = !DILocation(line: 620, column: 47, scope: !12945)
!12945 = !DILexicalBlockFile(scope: !12946, file: !919, discriminator: 1)
!12946 = distinct !DILexicalBlock(scope: !12756, file: !919, line: 620, column: 23)
!12947 = !DILocation(line: 620, column: 51, scope: !12945)
!12948 = !DILocation(line: 620, column: 44, scope: !12945)
!12949 = !DILocation(line: 620, column: 61, scope: !12945)
!12950 = !DILocation(line: 620, column: 83, scope: !12951)
!12951 = !DILexicalBlockFile(scope: !12952, file: !919, discriminator: 2)
!12952 = distinct !DILexicalBlock(scope: !12946, file: !919, line: 620, column: 82)
!12953 = !DILocation(line: 620, column: 92, scope: !12951)
!12954 = !DILocation(line: 620, column: 96, scope: !12951)
!12955 = !DILocation(line: 620, column: 100, scope: !12956)
!12956 = !DILexicalBlockFile(scope: !12952, file: !919, discriminator: 3)
!12957 = !DILocation(line: 620, column: 113, scope: !12956)
!12958 = !DILocation(line: 620, column: 117, scope: !12956)
!12959 = !DILocation(line: 620, column: 109, scope: !12956)
!12960 = !DILocation(line: 620, column: 82, scope: !12956)
!12961 = !DILocation(line: 620, column: 80, scope: !12962)
!12962 = !DILexicalBlockFile(scope: !12963, file: !919, discriminator: 4)
!12963 = distinct !DILexicalBlock(scope: !12952, file: !919, line: 620, column: 131)
!12964 = !DILocation(line: 620, column: 133, scope: !12962)
!12965 = !DILocation(line: 620, column: 91, scope: !12966)
!12966 = !DILexicalBlockFile(scope: !12962, file: !919, discriminator: 14)
!12967 = !DILocation(line: 620, column: 91, scope: !12962)
!12968 = !DILocation(line: 620, column: 135, scope: !12969)
!12969 = !DILexicalBlockFile(scope: !12946, file: !919, discriminator: 5)
!12970 = !DILocation(line: 620, column: 122, scope: !12969)
!12971 = !DILocation(line: 620, column: 126, scope: !12969)
!12972 = !DILocation(line: 620, column: 145, scope: !12969)
!12973 = !DILocation(line: 620, column: 119, scope: !12969)
!12974 = !DILocation(line: 620, column: 155, scope: !12969)
!12975 = !DILocation(line: 620, column: 177, scope: !12976)
!12976 = !DILexicalBlockFile(scope: !12977, file: !919, discriminator: 6)
!12977 = distinct !DILexicalBlock(scope: !12946, file: !919, line: 620, column: 176)
!12978 = !DILocation(line: 620, column: 186, scope: !12976)
!12979 = !DILocation(line: 620, column: 190, scope: !12976)
!12980 = !DILocation(line: 620, column: 194, scope: !12981)
!12981 = !DILexicalBlockFile(scope: !12977, file: !919, discriminator: 7)
!12982 = !DILocation(line: 620, column: 207, scope: !12981)
!12983 = !DILocation(line: 620, column: 211, scope: !12981)
!12984 = !DILocation(line: 620, column: 203, scope: !12981)
!12985 = !DILocation(line: 620, column: 176, scope: !12981)
!12986 = !DILocation(line: 620, column: 80, scope: !12987)
!12987 = !DILexicalBlockFile(scope: !12988, file: !919, discriminator: 8)
!12988 = distinct !DILexicalBlock(scope: !12977, file: !919, line: 620, column: 225)
!12989 = !DILocation(line: 620, column: 227, scope: !12987)
!12990 = !DILocation(line: 620, column: 91, scope: !12991)
!12991 = !DILexicalBlockFile(scope: !12987, file: !919, discriminator: 15)
!12992 = !DILocation(line: 620, column: 91, scope: !12987)
!12993 = !DILocation(line: 620, column: 135, scope: !12994)
!12994 = !DILexicalBlockFile(scope: !12946, file: !919, discriminator: 9)
!12995 = !DILocation(line: 620, column: 122, scope: !12994)
!12996 = !DILocation(line: 620, column: 126, scope: !12994)
!12997 = !DILocation(line: 620, column: 145, scope: !12994)
!12998 = !DILocation(line: 620, column: 119, scope: !12994)
!12999 = !DILocation(line: 620, column: 155, scope: !12994)
!13000 = !DILocation(line: 620, column: 172, scope: !13001)
!13001 = !DILexicalBlockFile(scope: !12946, file: !919, discriminator: 10)
!13002 = !DILocation(line: 620, column: 188, scope: !13003)
!13003 = !DILexicalBlockFile(scope: !12946, file: !919, discriminator: 11)
!13004 = distinct !{!13004, !13005}
!13005 = !DILocation(line: 620, column: 188, scope: !12946)
!13006 = !DILocation(line: 620, column: 205, scope: !13007)
!13007 = !DILexicalBlockFile(scope: !13008, file: !919, discriminator: 12)
!13008 = distinct !DILexicalBlock(scope: !13009, file: !919, line: 620, column: 203)
!13009 = distinct !DILexicalBlock(scope: !13010, file: !919, line: 620, column: 197)
!13010 = distinct !DILexicalBlock(scope: !12946, file: !919, line: 620, column: 191)
!13011 = !DILocation(line: 620, column: 78, scope: !13012)
!13012 = !DILexicalBlockFile(scope: !13007, file: !919, discriminator: 16)
!13013 = !DILocation(line: 620, column: 78, scope: !13007)
!13014 = !DILocation(line: 620, column: 102, scope: !13015)
!13015 = !DILexicalBlockFile(scope: !12946, file: !919, discriminator: 13)
!13016 = !DILocation(line: 623, column: 9, scope: !13017)
!13017 = distinct !DILexicalBlock(scope: !12756, file: !919, line: 623, column: 9)
!13018 = !DILocation(line: 623, column: 17, scope: !13017)
!13019 = !DILocation(line: 623, column: 9, scope: !12756)
!13020 = !DILocation(line: 624, column: 16, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !13022, file: !919, line: 624, column: 9)
!13022 = distinct !DILexicalBlock(scope: !13017, file: !919, line: 623, column: 25)
!13023 = !DILocation(line: 624, column: 14, scope: !13021)
!13024 = !DILocation(line: 624, column: 21, scope: !13025)
!13025 = !DILexicalBlockFile(scope: !13026, file: !919, discriminator: 1)
!13026 = distinct !DILexicalBlock(scope: !13021, file: !919, line: 624, column: 9)
!13027 = !DILocation(line: 624, column: 25, scope: !13025)
!13028 = !DILocation(line: 624, column: 29, scope: !13025)
!13029 = !DILocation(line: 624, column: 23, scope: !13025)
!13030 = !DILocation(line: 624, column: 9, scope: !13025)
!13031 = !DILocation(line: 625, column: 47, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !13033, file: !919, line: 625, column: 17)
!13033 = distinct !DILexicalBlock(scope: !13026, file: !919, line: 624, column: 46)
!13034 = !DILocation(line: 625, column: 63, scope: !13032)
!13035 = !DILocation(line: 625, column: 51, scope: !13032)
!13036 = !DILocation(line: 625, column: 55, scope: !13032)
!13037 = !DILocation(line: 625, column: 67, scope: !13032)
!13038 = !DILocation(line: 625, column: 24, scope: !13032)
!13039 = !DILocation(line: 625, column: 22, scope: !13032)
!13040 = !DILocation(line: 625, column: 82, scope: !13032)
!13041 = !DILocation(line: 625, column: 17, scope: !13033)
!13042 = !DILocation(line: 626, column: 40, scope: !13043)
!13043 = distinct !DILexicalBlock(scope: !13032, file: !919, line: 625, column: 87)
!13044 = !DILocation(line: 626, column: 28, scope: !13043)
!13045 = !DILocation(line: 626, column: 32, scope: !13043)
!13046 = !DILocation(line: 626, column: 44, scope: !13043)
!13047 = !DILocation(line: 626, column: 25, scope: !13043)
!13048 = !DILocation(line: 627, column: 17, scope: !13043)
!13049 = !DILocation(line: 628, column: 24, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !13032, file: !919, line: 628, column: 24)
!13051 = !DILocation(line: 628, column: 28, scope: !13050)
!13052 = !DILocation(line: 628, column: 24, scope: !13032)
!13053 = !DILocation(line: 629, column: 17, scope: !13050)
!13054 = !DILocation(line: 630, column: 9, scope: !13033)
!13055 = !DILocation(line: 624, column: 42, scope: !13056)
!13056 = !DILexicalBlockFile(scope: !13026, file: !919, discriminator: 2)
!13057 = !DILocation(line: 624, column: 9, scope: !13056)
!13058 = distinct !{!13058, !13059}
!13059 = !DILocation(line: 624, column: 9, scope: !13022)
!13060 = !DILocation(line: 631, column: 14, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13022, file: !919, line: 631, column: 13)
!13062 = !DILocation(line: 631, column: 13, scope: !13022)
!13063 = !DILocation(line: 632, column: 82, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !13061, file: !919, line: 631, column: 23)
!13065 = !DILocation(line: 632, column: 13, scope: !13064)
!13066 = !DILocation(line: 633, column: 13, scope: !13064)
!13067 = !DILocation(line: 635, column: 5, scope: !13022)
!13068 = !DILocation(line: 637, column: 9, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !12756, file: !919, line: 637, column: 9)
!13070 = !DILocation(line: 637, column: 18, scope: !13069)
!13071 = !DILocation(line: 637, column: 9, scope: !12756)
!13072 = !DILocation(line: 638, column: 16, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13074, file: !919, line: 638, column: 9)
!13074 = distinct !DILexicalBlock(scope: !13069, file: !919, line: 637, column: 26)
!13075 = !DILocation(line: 638, column: 14, scope: !13073)
!13076 = !DILocation(line: 638, column: 21, scope: !13077)
!13077 = !DILexicalBlockFile(scope: !13078, file: !919, discriminator: 1)
!13078 = distinct !DILexicalBlock(scope: !13073, file: !919, line: 638, column: 9)
!13079 = !DILocation(line: 638, column: 25, scope: !13077)
!13080 = !DILocation(line: 638, column: 29, scope: !13077)
!13081 = !DILocation(line: 638, column: 23, scope: !13077)
!13082 = !DILocation(line: 638, column: 9, scope: !13077)
!13083 = !DILocation(line: 639, column: 47, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13085, file: !919, line: 639, column: 17)
!13085 = distinct !DILexicalBlock(scope: !13078, file: !919, line: 638, column: 46)
!13086 = !DILocation(line: 639, column: 63, scope: !13084)
!13087 = !DILocation(line: 639, column: 51, scope: !13084)
!13088 = !DILocation(line: 639, column: 55, scope: !13084)
!13089 = !DILocation(line: 639, column: 67, scope: !13084)
!13090 = !DILocation(line: 639, column: 24, scope: !13084)
!13091 = !DILocation(line: 639, column: 22, scope: !13084)
!13092 = !DILocation(line: 639, column: 82, scope: !13084)
!13093 = !DILocation(line: 639, column: 17, scope: !13085)
!13094 = !DILocation(line: 640, column: 41, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13084, file: !919, line: 639, column: 87)
!13096 = !DILocation(line: 640, column: 29, scope: !13095)
!13097 = !DILocation(line: 640, column: 33, scope: !13095)
!13098 = !DILocation(line: 640, column: 45, scope: !13095)
!13099 = !DILocation(line: 640, column: 26, scope: !13095)
!13100 = !DILocation(line: 641, column: 30, scope: !13095)
!13101 = !DILocation(line: 641, column: 41, scope: !13095)
!13102 = !DILocation(line: 641, column: 40, scope: !13095)
!13103 = !DILocation(line: 641, column: 17, scope: !13095)
!13104 = !DILocation(line: 642, column: 13, scope: !13095)
!13105 = !DILocation(line: 642, column: 24, scope: !13106)
!13106 = !DILexicalBlockFile(scope: !13107, file: !919, discriminator: 1)
!13107 = distinct !DILexicalBlock(scope: !13084, file: !919, line: 642, column: 24)
!13108 = !DILocation(line: 642, column: 28, scope: !13106)
!13109 = !DILocation(line: 643, column: 17, scope: !13107)
!13110 = !DILocation(line: 644, column: 9, scope: !13085)
!13111 = !DILocation(line: 638, column: 42, scope: !13112)
!13112 = !DILexicalBlockFile(scope: !13078, file: !919, discriminator: 2)
!13113 = !DILocation(line: 638, column: 9, scope: !13112)
!13114 = distinct !{!13114, !13115}
!13115 = !DILocation(line: 638, column: 9, scope: !13074)
!13116 = !DILocation(line: 645, column: 5, scope: !13074)
!13117 = !DILocation(line: 646, column: 22, scope: !13069)
!13118 = !DILocation(line: 646, column: 33, scope: !13069)
!13119 = !DILocation(line: 646, column: 32, scope: !13069)
!13120 = !DILocation(line: 646, column: 9, scope: !13069)
!13121 = !DILocation(line: 648, column: 5, scope: !12756)
!13122 = !DILocation(line: 649, column: 1, scope: !12756)
!13123 = distinct !DISubprogram(name: "copy_chapters", scope: !919, file: !919, line: 2011, type: !13124, isLocal: true, isDefinition: true, scopeLine: 2012, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!13124 = !DISubroutineType(types: !13125)
!13125 = !{!998, !2359, !4042, !998}
!13126 = !DILocalVariable(name: "ifile", arg: 1, scope: !13123, file: !919, line: 2011, type: !2359)
!13127 = !DILocation(line: 2011, column: 37, scope: !13123)
!13128 = !DILocalVariable(name: "ofile", arg: 2, scope: !13123, file: !919, line: 2011, type: !4042)
!13129 = !DILocation(line: 2011, column: 56, scope: !13123)
!13130 = !DILocalVariable(name: "copy_metadata", arg: 3, scope: !13123, file: !919, line: 2011, type: !998)
!13131 = !DILocation(line: 2011, column: 67, scope: !13123)
!13132 = !DILocalVariable(name: "is", scope: !13123, file: !919, line: 2013, type: !2364)
!13133 = !DILocation(line: 2013, column: 22, scope: !13123)
!13134 = !DILocation(line: 2013, column: 27, scope: !13123)
!13135 = !DILocation(line: 2013, column: 34, scope: !13123)
!13136 = !DILocalVariable(name: "os", scope: !13123, file: !919, line: 2014, type: !2364)
!13137 = !DILocation(line: 2014, column: 22, scope: !13123)
!13138 = !DILocation(line: 2014, column: 27, scope: !13123)
!13139 = !DILocation(line: 2014, column: 34, scope: !13123)
!13140 = !DILocalVariable(name: "tmp", scope: !13123, file: !919, line: 2015, type: !2814)
!13141 = !DILocation(line: 2015, column: 17, scope: !13123)
!13142 = !DILocalVariable(name: "i", scope: !13123, file: !919, line: 2016, type: !998)
!13143 = !DILocation(line: 2016, column: 9, scope: !13123)
!13144 = !DILocation(line: 2018, column: 24, scope: !13123)
!13145 = !DILocation(line: 2018, column: 28, scope: !13123)
!13146 = !DILocation(line: 2018, column: 38, scope: !13123)
!13147 = !DILocation(line: 2018, column: 42, scope: !13123)
!13148 = !DILocation(line: 2018, column: 56, scope: !13123)
!13149 = !DILocation(line: 2018, column: 60, scope: !13123)
!13150 = !DILocation(line: 2018, column: 54, scope: !13123)
!13151 = !DILocation(line: 2018, column: 11, scope: !13123)
!13152 = !DILocation(line: 2018, column: 9, scope: !13123)
!13153 = !DILocation(line: 2019, column: 10, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !13123, file: !919, line: 2019, column: 9)
!13155 = !DILocation(line: 2019, column: 9, scope: !13123)
!13156 = !DILocation(line: 2020, column: 9, scope: !13154)
!13157 = !DILocation(line: 2021, column: 20, scope: !13123)
!13158 = !DILocation(line: 2021, column: 5, scope: !13123)
!13159 = !DILocation(line: 2021, column: 9, scope: !13123)
!13160 = !DILocation(line: 2021, column: 18, scope: !13123)
!13161 = !DILocation(line: 2023, column: 12, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13123, file: !919, line: 2023, column: 5)
!13163 = !DILocation(line: 2023, column: 10, scope: !13162)
!13164 = !DILocation(line: 2023, column: 17, scope: !13165)
!13165 = !DILexicalBlockFile(scope: !13166, file: !919, discriminator: 1)
!13166 = distinct !DILexicalBlock(scope: !13162, file: !919, line: 2023, column: 5)
!13167 = !DILocation(line: 2023, column: 21, scope: !13165)
!13168 = !DILocation(line: 2023, column: 25, scope: !13165)
!13169 = !DILocation(line: 2023, column: 19, scope: !13165)
!13170 = !DILocation(line: 2023, column: 5, scope: !13165)
!13171 = !DILocalVariable(name: "in_ch", scope: !13172, file: !919, line: 2024, type: !2815)
!13172 = distinct !DILexicalBlock(scope: !13166, file: !919, line: 2023, column: 43)
!13173 = !DILocation(line: 2024, column: 20, scope: !13172)
!13174 = !DILocation(line: 2024, column: 41, scope: !13172)
!13175 = !DILocation(line: 2024, column: 28, scope: !13172)
!13176 = !DILocation(line: 2024, column: 32, scope: !13172)
!13177 = !DILocalVariable(name: "out_ch", scope: !13172, file: !919, line: 2024, type: !2815)
!13178 = !DILocation(line: 2024, column: 46, scope: !13172)
!13179 = !DILocalVariable(name: "start_time", scope: !13172, file: !919, line: 2025, type: !1004)
!13180 = !DILocation(line: 2025, column: 17, scope: !13172)
!13181 = !DILocation(line: 2025, column: 31, scope: !13172)
!13182 = !DILocation(line: 2025, column: 38, scope: !13172)
!13183 = !DILocation(line: 2025, column: 49, scope: !13172)
!13184 = !DILocation(line: 2025, column: 30, scope: !13172)
!13185 = !DILocation(line: 2025, column: 30, scope: !13186)
!13186 = !DILexicalBlockFile(scope: !13172, file: !919, discriminator: 1)
!13187 = !DILocation(line: 2025, column: 91, scope: !13188)
!13188 = !DILexicalBlockFile(scope: !13172, file: !919, discriminator: 2)
!13189 = !DILocation(line: 2025, column: 98, scope: !13188)
!13190 = !DILocation(line: 2025, column: 30, scope: !13188)
!13191 = !DILocation(line: 2025, column: 30, scope: !13192)
!13192 = !DILexicalBlockFile(scope: !13172, file: !919, discriminator: 3)
!13193 = !DILocation(line: 2025, column: 17, scope: !13192)
!13194 = !DILocalVariable(name: "ts_off", scope: !13172, file: !919, line: 2026, type: !1004)
!13195 = !DILocation(line: 2026, column: 17, scope: !13172)
!13196 = !DILocation(line: 2026, column: 39, scope: !13172)
!13197 = !DILocation(line: 2026, column: 52, scope: !13172)
!13198 = !DILocation(line: 2026, column: 59, scope: !13172)
!13199 = !DILocation(line: 2026, column: 50, scope: !13172)
!13200 = !DILocation(line: 2027, column: 52, scope: !13172)
!13201 = !DILocation(line: 2027, column: 66, scope: !13172)
!13202 = !DILocation(line: 2027, column: 73, scope: !13172)
!13203 = !DILocation(line: 2026, column: 26, scope: !13172)
!13204 = !DILocalVariable(name: "rt", scope: !13172, file: !919, line: 2028, type: !1004)
!13205 = !DILocation(line: 2028, column: 17, scope: !13172)
!13206 = !DILocation(line: 2028, column: 23, scope: !13172)
!13207 = !DILocation(line: 2028, column: 30, scope: !13172)
!13208 = !DILocation(line: 2028, column: 45, scope: !13172)
!13209 = !DILocation(line: 2028, column: 22, scope: !13172)
!13210 = !DILocation(line: 2028, column: 22, scope: !13186)
!13211 = !DILocation(line: 2029, column: 41, scope: !13172)
!13212 = !DILocation(line: 2029, column: 48, scope: !13172)
!13213 = !DILocation(line: 2029, column: 76, scope: !13172)
!13214 = !DILocation(line: 2029, column: 90, scope: !13172)
!13215 = !DILocation(line: 2029, column: 97, scope: !13172)
!13216 = !DILocation(line: 2029, column: 28, scope: !13172)
!13217 = !DILocation(line: 2028, column: 22, scope: !13188)
!13218 = !DILocation(line: 2028, column: 22, scope: !13192)
!13219 = !DILocation(line: 2028, column: 17, scope: !13192)
!13220 = !DILocation(line: 2032, column: 13, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !13172, file: !919, line: 2032, column: 13)
!13222 = !DILocation(line: 2032, column: 20, scope: !13221)
!13223 = !DILocation(line: 2032, column: 26, scope: !13221)
!13224 = !DILocation(line: 2032, column: 24, scope: !13221)
!13225 = !DILocation(line: 2032, column: 13, scope: !13172)
!13226 = !DILocation(line: 2033, column: 13, scope: !13221)
!13227 = !DILocation(line: 2034, column: 13, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13172, file: !919, line: 2034, column: 13)
!13229 = !DILocation(line: 2034, column: 16, scope: !13228)
!13230 = !DILocation(line: 2034, column: 28, scope: !13228)
!13231 = !DILocation(line: 2034, column: 31, scope: !13232)
!13232 = !DILexicalBlockFile(scope: !13228, file: !919, discriminator: 1)
!13233 = !DILocation(line: 2034, column: 38, scope: !13232)
!13234 = !DILocation(line: 2034, column: 46, scope: !13232)
!13235 = !DILocation(line: 2034, column: 51, scope: !13232)
!13236 = !DILocation(line: 2034, column: 49, scope: !13232)
!13237 = !DILocation(line: 2034, column: 44, scope: !13232)
!13238 = !DILocation(line: 2034, column: 13, scope: !13232)
!13239 = !DILocation(line: 2035, column: 13, scope: !13228)
!13240 = !DILocation(line: 2037, column: 18, scope: !13172)
!13241 = !DILocation(line: 2037, column: 16, scope: !13172)
!13242 = !DILocation(line: 2038, column: 14, scope: !13243)
!13243 = distinct !DILexicalBlock(scope: !13172, file: !919, line: 2038, column: 13)
!13244 = !DILocation(line: 2038, column: 13, scope: !13172)
!13245 = !DILocation(line: 2039, column: 13, scope: !13243)
!13246 = !DILocation(line: 2041, column: 22, scope: !13172)
!13247 = !DILocation(line: 2041, column: 29, scope: !13172)
!13248 = !DILocation(line: 2041, column: 9, scope: !13172)
!13249 = !DILocation(line: 2041, column: 17, scope: !13172)
!13250 = !DILocation(line: 2041, column: 20, scope: !13172)
!13251 = !DILocation(line: 2042, column: 9, scope: !13172)
!13252 = !DILocation(line: 2042, column: 17, scope: !13172)
!13253 = !DILocation(line: 2042, column: 29, scope: !13172)
!13254 = !DILocation(line: 2042, column: 36, scope: !13172)
!13255 = !DILocation(line: 2043, column: 33, scope: !13172)
!13256 = !DILocation(line: 2043, column: 40, scope: !13172)
!13257 = !DILocation(line: 2043, column: 48, scope: !13172)
!13258 = !DILocation(line: 2043, column: 46, scope: !13172)
!13259 = !DILocation(line: 2043, column: 30, scope: !13172)
!13260 = !DILocation(line: 2043, column: 26, scope: !13172)
!13261 = !DILocation(line: 2043, column: 26, scope: !13186)
!13262 = !DILocation(line: 2043, column: 65, scope: !13188)
!13263 = !DILocation(line: 2043, column: 72, scope: !13188)
!13264 = !DILocation(line: 2043, column: 80, scope: !13188)
!13265 = !DILocation(line: 2043, column: 78, scope: !13188)
!13266 = !DILocation(line: 2043, column: 26, scope: !13188)
!13267 = !DILocation(line: 2043, column: 26, scope: !13192)
!13268 = !DILocation(line: 2043, column: 9, scope: !13192)
!13269 = !DILocation(line: 2043, column: 17, scope: !13192)
!13270 = !DILocation(line: 2043, column: 23, scope: !13192)
!13271 = !DILocation(line: 2044, column: 25, scope: !13172)
!13272 = !DILocation(line: 2044, column: 32, scope: !13172)
!13273 = !DILocation(line: 2044, column: 39, scope: !13172)
!13274 = !DILocation(line: 2044, column: 45, scope: !13172)
!13275 = !DILocation(line: 2044, column: 43, scope: !13172)
!13276 = !DILocation(line: 2044, column: 29, scope: !13172)
!13277 = !DILocation(line: 2044, column: 24, scope: !13172)
!13278 = !DILocation(line: 2044, column: 56, scope: !13186)
!13279 = !DILocation(line: 2044, column: 63, scope: !13186)
!13280 = !DILocation(line: 2044, column: 69, scope: !13186)
!13281 = !DILocation(line: 2044, column: 67, scope: !13186)
!13282 = !DILocation(line: 2044, column: 24, scope: !13186)
!13283 = !DILocation(line: 2044, column: 80, scope: !13188)
!13284 = !DILocation(line: 2044, column: 24, scope: !13188)
!13285 = !DILocation(line: 2044, column: 24, scope: !13192)
!13286 = !DILocation(line: 2044, column: 9, scope: !13192)
!13287 = !DILocation(line: 2044, column: 17, scope: !13192)
!13288 = !DILocation(line: 2044, column: 21, scope: !13192)
!13289 = !DILocation(line: 2046, column: 13, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !13172, file: !919, line: 2046, column: 13)
!13291 = !DILocation(line: 2046, column: 13, scope: !13172)
!13292 = !DILocation(line: 2047, column: 27, scope: !13290)
!13293 = !DILocation(line: 2047, column: 35, scope: !13290)
!13294 = !DILocation(line: 2047, column: 45, scope: !13290)
!13295 = !DILocation(line: 2047, column: 52, scope: !13290)
!13296 = !DILocation(line: 2047, column: 13, scope: !13290)
!13297 = !DILocation(line: 2049, column: 43, scope: !13172)
!13298 = !DILocation(line: 2049, column: 22, scope: !13172)
!13299 = !DILocation(line: 2049, column: 26, scope: !13172)
!13300 = !DILocation(line: 2049, column: 37, scope: !13172)
!13301 = !DILocation(line: 2049, column: 9, scope: !13172)
!13302 = !DILocation(line: 2049, column: 13, scope: !13172)
!13303 = !DILocation(line: 2049, column: 41, scope: !13172)
!13304 = !DILocation(line: 2050, column: 5, scope: !13172)
!13305 = !DILocation(line: 2023, column: 39, scope: !13306)
!13306 = !DILexicalBlockFile(scope: !13166, file: !919, discriminator: 2)
!13307 = !DILocation(line: 2023, column: 5, scope: !13306)
!13308 = distinct !{!13308, !13309}
!13309 = !DILocation(line: 2023, column: 5, scope: !13123)
!13310 = !DILocation(line: 2051, column: 5, scope: !13123)
!13311 = !DILocation(line: 2052, column: 1, scope: !13123)
!13312 = distinct !DISubprogram(name: "parse_meta_type", scope: !919, file: !919, line: 534, type: !13313, isLocal: true, isDefinition: true, scopeLine: 535, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!13313 = !DISubroutineType(types: !13314)
!13314 = !{null, !1105, !1105, !1150, !2195}
!13315 = !DILocalVariable(name: "arg", arg: 1, scope: !13312, file: !919, line: 534, type: !1105)
!13316 = !DILocation(line: 534, column: 35, scope: !13312)
!13317 = !DILocalVariable(name: "type", arg: 2, scope: !13312, file: !919, line: 534, type: !1105)
!13318 = !DILocation(line: 534, column: 46, scope: !13312)
!13319 = !DILocalVariable(name: "index", arg: 3, scope: !13312, file: !919, line: 534, type: !1150)
!13320 = !DILocation(line: 534, column: 57, scope: !13312)
!13321 = !DILocalVariable(name: "stream_spec", arg: 4, scope: !13312, file: !919, line: 534, type: !2195)
!13322 = !DILocation(line: 534, column: 77, scope: !13312)
!13323 = !DILocation(line: 536, column: 10, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13312, file: !919, line: 536, column: 9)
!13325 = !DILocation(line: 536, column: 9, scope: !13324)
!13326 = !DILocation(line: 536, column: 9, scope: !13312)
!13327 = !DILocation(line: 537, column: 18, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13324, file: !919, line: 536, column: 15)
!13329 = !DILocation(line: 537, column: 17, scope: !13328)
!13330 = !DILocation(line: 537, column: 10, scope: !13328)
!13331 = !DILocation(line: 537, column: 15, scope: !13328)
!13332 = !DILocation(line: 538, column: 18, scope: !13328)
!13333 = !DILocation(line: 538, column: 17, scope: !13328)
!13334 = !DILocation(line: 538, column: 9, scope: !13328)
!13335 = !DILocation(line: 540, column: 13, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13328, file: !919, line: 538, column: 23)
!13337 = !DILocation(line: 542, column: 19, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13336, file: !919, line: 542, column: 17)
!13339 = !DILocation(line: 542, column: 17, scope: !13338)
!13340 = !DILocation(line: 542, column: 26, scope: !13338)
!13341 = !DILocation(line: 542, column: 30, scope: !13342)
!13342 = !DILexicalBlockFile(scope: !13338, file: !919, discriminator: 1)
!13343 = !DILocation(line: 542, column: 29, scope: !13342)
!13344 = !DILocation(line: 542, column: 34, scope: !13342)
!13345 = !DILocation(line: 542, column: 17, scope: !13342)
!13346 = !DILocation(line: 543, column: 68, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13338, file: !919, line: 542, column: 42)
!13348 = !DILocation(line: 543, column: 17, scope: !13347)
!13349 = !DILocation(line: 544, column: 17, scope: !13347)
!13350 = !DILocation(line: 546, column: 29, scope: !13336)
!13351 = !DILocation(line: 546, column: 28, scope: !13336)
!13352 = !DILocation(line: 546, column: 33, scope: !13336)
!13353 = !DILocation(line: 546, column: 42, scope: !13354)
!13354 = !DILexicalBlockFile(scope: !13336, file: !919, discriminator: 1)
!13355 = !DILocation(line: 546, column: 46, scope: !13354)
!13356 = !DILocation(line: 546, column: 28, scope: !13354)
!13357 = !DILocation(line: 546, column: 28, scope: !13358)
!13358 = !DILexicalBlockFile(scope: !13336, file: !919, discriminator: 2)
!13359 = !DILocation(line: 546, column: 28, scope: !13360)
!13360 = !DILexicalBlockFile(scope: !13336, file: !919, discriminator: 3)
!13361 = !DILocation(line: 546, column: 14, scope: !13360)
!13362 = !DILocation(line: 546, column: 26, scope: !13360)
!13363 = !DILocation(line: 547, column: 13, scope: !13336)
!13364 = !DILocation(line: 550, column: 19, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13336, file: !919, line: 550, column: 17)
!13366 = !DILocation(line: 550, column: 17, scope: !13365)
!13367 = !DILocation(line: 550, column: 26, scope: !13365)
!13368 = !DILocation(line: 550, column: 17, scope: !13336)
!13369 = !DILocation(line: 551, column: 33, scope: !13365)
!13370 = !DILocation(line: 551, column: 26, scope: !13365)
!13371 = !DILocation(line: 551, column: 18, scope: !13365)
!13372 = !DILocation(line: 551, column: 24, scope: !13365)
!13373 = !DILocation(line: 551, column: 17, scope: !13365)
!13374 = !DILocation(line: 552, column: 13, scope: !13336)
!13375 = !DILocation(line: 554, column: 60, scope: !13336)
!13376 = !DILocation(line: 554, column: 59, scope: !13336)
!13377 = !DILocation(line: 554, column: 13, scope: !13336)
!13378 = !DILocation(line: 555, column: 13, scope: !13336)
!13379 = !DILocation(line: 557, column: 5, scope: !13328)
!13380 = !DILocation(line: 558, column: 10, scope: !13324)
!13381 = !DILocation(line: 558, column: 15, scope: !13324)
!13382 = !DILocation(line: 559, column: 1, scope: !13312)
!13383 = distinct !DISubprogram(name: "new_output_stream", scope: !919, file: !919, line: 1351, type: !13384, isLocal: true, isDefinition: true, scopeLine: 1352, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!13384 = !DISubroutineType(types: !13385)
!13385 = !{!4056, !2116, !2364, !46, !998}
!13386 = !DILocalVariable(name: "o", arg: 1, scope: !13383, file: !919, line: 1351, type: !2116)
!13387 = !DILocation(line: 1351, column: 56, scope: !13383)
!13388 = !DILocalVariable(name: "oc", arg: 2, scope: !13383, file: !919, line: 1351, type: !2364)
!13389 = !DILocation(line: 1351, column: 76, scope: !13383)
!13390 = !DILocalVariable(name: "type", arg: 3, scope: !13383, file: !919, line: 1351, type: !46)
!13391 = !DILocation(line: 1351, column: 97, scope: !13383)
!13392 = !DILocalVariable(name: "source_index", arg: 4, scope: !13383, file: !919, line: 1351, type: !998)
!13393 = !DILocation(line: 1351, column: 107, scope: !13383)
!13394 = !DILocalVariable(name: "ost", scope: !13383, file: !919, line: 1353, type: !4056)
!13395 = !DILocation(line: 1353, column: 19, scope: !13383)
!13396 = !DILocalVariable(name: "st", scope: !13383, file: !919, line: 1354, type: !2562)
!13397 = !DILocation(line: 1354, column: 15, scope: !13383)
!13398 = !DILocation(line: 1354, column: 40, scope: !13383)
!13399 = !DILocation(line: 1354, column: 20, scope: !13383)
!13400 = !DILocalVariable(name: "idx", scope: !13383, file: !919, line: 1355, type: !998)
!13401 = !DILocation(line: 1355, column: 9, scope: !13383)
!13402 = !DILocation(line: 1355, column: 15, scope: !13383)
!13403 = !DILocation(line: 1355, column: 19, scope: !13383)
!13404 = !DILocation(line: 1355, column: 30, scope: !13383)
!13405 = !DILocalVariable(name: "ret", scope: !13383, file: !919, line: 1355, type: !998)
!13406 = !DILocation(line: 1355, column: 35, scope: !13383)
!13407 = !DILocalVariable(name: "bsfs", scope: !13383, file: !919, line: 1356, type: !982)
!13408 = !DILocation(line: 1356, column: 17, scope: !13383)
!13409 = !DILocalVariable(name: "time_base", scope: !13383, file: !919, line: 1356, type: !982)
!13410 = !DILocation(line: 1356, column: 30, scope: !13383)
!13411 = !DILocalVariable(name: "next", scope: !13383, file: !919, line: 1357, type: !1105)
!13412 = !DILocation(line: 1357, column: 11, scope: !13383)
!13413 = !DILocalVariable(name: "codec_tag", scope: !13383, file: !919, line: 1357, type: !1105)
!13414 = !DILocation(line: 1357, column: 18, scope: !13383)
!13415 = !DILocalVariable(name: "qscale", scope: !13383, file: !919, line: 1358, type: !1008)
!13416 = !DILocation(line: 1358, column: 12, scope: !13383)
!13417 = !DILocalVariable(name: "i", scope: !13383, file: !919, line: 1359, type: !998)
!13418 = !DILocation(line: 1359, column: 9, scope: !13383)
!13419 = !DILocation(line: 1361, column: 10, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1361, column: 9)
!13421 = !DILocation(line: 1361, column: 9, scope: !13383)
!13422 = !DILocation(line: 1362, column: 9, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13420, file: !919, line: 1361, column: 14)
!13424 = !DILocation(line: 1363, column: 9, scope: !13423)
!13425 = !DILocation(line: 1366, column: 9, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1366, column: 9)
!13427 = !DILocation(line: 1366, column: 13, scope: !13426)
!13428 = !DILocation(line: 1366, column: 24, scope: !13426)
!13429 = !DILocation(line: 1366, column: 30, scope: !13426)
!13430 = !DILocation(line: 1366, column: 33, scope: !13426)
!13431 = !DILocation(line: 1366, column: 28, scope: !13426)
!13432 = !DILocation(line: 1366, column: 9, scope: !13383)
!13433 = !DILocation(line: 1367, column: 34, scope: !13426)
!13434 = !DILocation(line: 1367, column: 38, scope: !13426)
!13435 = !DILocation(line: 1367, column: 49, scope: !13426)
!13436 = !DILocation(line: 1367, column: 18, scope: !13426)
!13437 = !DILocation(line: 1367, column: 21, scope: !13426)
!13438 = !DILocation(line: 1367, column: 9, scope: !13426)
!13439 = !DILocation(line: 1367, column: 13, scope: !13426)
!13440 = !DILocation(line: 1367, column: 16, scope: !13426)
!13441 = !DILocation(line: 1369, column: 33, scope: !13383)
!13442 = !DILocation(line: 1369, column: 94, scope: !13383)
!13443 = !DILocation(line: 1369, column: 112, scope: !13383)
!13444 = !DILocation(line: 1369, column: 22, scope: !13383)
!13445 = !DILocation(line: 1369, column: 20, scope: !13383)
!13446 = !DILocation(line: 1370, column: 17, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1370, column: 9)
!13448 = !DILocation(line: 1370, column: 15, scope: !13447)
!13449 = !DILocation(line: 1370, column: 9, scope: !13383)
!13450 = !DILocation(line: 1371, column: 9, scope: !13447)
!13451 = !DILocation(line: 1372, column: 45, scope: !13383)
!13452 = !DILocation(line: 1372, column: 20, scope: !13383)
!13453 = !DILocation(line: 1372, column: 38, scope: !13383)
!13454 = !DILocation(line: 1372, column: 5, scope: !13383)
!13455 = !DILocation(line: 1372, column: 43, scope: !13383)
!13456 = !DILocation(line: 1374, column: 23, scope: !13383)
!13457 = !DILocation(line: 1374, column: 39, scope: !13383)
!13458 = !DILocation(line: 1374, column: 5, scope: !13383)
!13459 = !DILocation(line: 1374, column: 10, scope: !13383)
!13460 = !DILocation(line: 1374, column: 21, scope: !13383)
!13461 = !DILocation(line: 1375, column: 18, scope: !13383)
!13462 = !DILocation(line: 1375, column: 5, scope: !13383)
!13463 = !DILocation(line: 1375, column: 10, scope: !13383)
!13464 = !DILocation(line: 1375, column: 16, scope: !13383)
!13465 = !DILocation(line: 1376, column: 15, scope: !13383)
!13466 = !DILocation(line: 1376, column: 5, scope: !13383)
!13467 = !DILocation(line: 1376, column: 10, scope: !13383)
!13468 = !DILocation(line: 1376, column: 13, scope: !13383)
!13469 = !DILocation(line: 1377, column: 5, scope: !13383)
!13470 = !DILocation(line: 1377, column: 10, scope: !13383)
!13471 = !DILocation(line: 1377, column: 28, scope: !13383)
!13472 = !DILocation(line: 1378, column: 32, scope: !13383)
!13473 = !DILocation(line: 1378, column: 5, scope: !13383)
!13474 = !DILocation(line: 1378, column: 9, scope: !13383)
!13475 = !DILocation(line: 1378, column: 19, scope: !13383)
!13476 = !DILocation(line: 1378, column: 30, scope: !13383)
!13477 = !DILocation(line: 1380, column: 26, scope: !13383)
!13478 = !DILocation(line: 1380, column: 29, scope: !13383)
!13479 = !DILocation(line: 1380, column: 33, scope: !13383)
!13480 = !DILocation(line: 1380, column: 11, scope: !13383)
!13481 = !DILocation(line: 1380, column: 9, scope: !13383)
!13482 = !DILocation(line: 1381, column: 9, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1381, column: 9)
!13484 = !DILocation(line: 1381, column: 13, scope: !13483)
!13485 = !DILocation(line: 1381, column: 9, scope: !13383)
!13486 = !DILocation(line: 1383, column: 27, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13483, file: !919, line: 1381, column: 18)
!13488 = !DILocation(line: 1383, column: 32, scope: !13487)
!13489 = !DILocation(line: 1383, column: 44, scope: !13487)
!13490 = !DILocation(line: 1383, column: 49, scope: !13487)
!13491 = !DILocation(line: 1382, column: 9, scope: !13487)
!13492 = !DILocation(line: 1384, column: 9, scope: !13487)
!13493 = !DILocation(line: 1387, column: 43, scope: !13383)
!13494 = !DILocation(line: 1387, column: 48, scope: !13383)
!13495 = !DILocation(line: 1387, column: 20, scope: !13383)
!13496 = !DILocation(line: 1387, column: 5, scope: !13383)
!13497 = !DILocation(line: 1387, column: 10, scope: !13383)
!13498 = !DILocation(line: 1387, column: 18, scope: !13383)
!13499 = !DILocation(line: 1388, column: 10, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1388, column: 9)
!13501 = !DILocation(line: 1388, column: 15, scope: !13500)
!13502 = !DILocation(line: 1388, column: 9, scope: !13383)
!13503 = !DILocation(line: 1389, column: 9, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13500, file: !919, line: 1388, column: 24)
!13505 = !DILocation(line: 1390, column: 9, scope: !13504)
!13506 = !DILocation(line: 1392, column: 32, scope: !13383)
!13507 = !DILocation(line: 1392, column: 5, scope: !13383)
!13508 = !DILocation(line: 1392, column: 10, scope: !13383)
!13509 = !DILocation(line: 1392, column: 19, scope: !13383)
!13510 = !DILocation(line: 1392, column: 30, scope: !13383)
!13511 = !DILocation(line: 1394, column: 20, scope: !13383)
!13512 = !DILocation(line: 1394, column: 5, scope: !13383)
!13513 = !DILocation(line: 1394, column: 10, scope: !13383)
!13514 = !DILocation(line: 1394, column: 18, scope: !13383)
!13515 = !DILocation(line: 1395, column: 10, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1395, column: 9)
!13517 = !DILocation(line: 1395, column: 15, scope: !13516)
!13518 = !DILocation(line: 1395, column: 9, scope: !13383)
!13519 = !DILocation(line: 1396, column: 9, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13516, file: !919, line: 1395, column: 24)
!13521 = !DILocation(line: 1397, column: 9, scope: !13520)
!13522 = !DILocation(line: 1400, column: 9, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1400, column: 9)
!13524 = !DILocation(line: 1400, column: 14, scope: !13523)
!13525 = !DILocation(line: 1400, column: 9, scope: !13383)
!13526 = !DILocalVariable(name: "s", scope: !13527, file: !919, line: 1401, type: !2496)
!13527 = distinct !DILexicalBlock(scope: !13523, file: !919, line: 1400, column: 19)
!13528 = !DILocation(line: 1401, column: 22, scope: !13527)
!13529 = !DILocalVariable(name: "buf", scope: !13527, file: !919, line: 1402, type: !1105)
!13530 = !DILocation(line: 1402, column: 15, scope: !13527)
!13531 = !DILocalVariable(name: "arg", scope: !13527, file: !919, line: 1402, type: !1105)
!13532 = !DILocation(line: 1402, column: 27, scope: !13527)
!13533 = !DILocalVariable(name: "preset", scope: !13527, file: !919, line: 1402, type: !1105)
!13534 = !DILocation(line: 1402, column: 40, scope: !13527)
!13535 = !DILocation(line: 1404, column: 47, scope: !13527)
!13536 = !DILocation(line: 1404, column: 50, scope: !13527)
!13537 = !DILocation(line: 1404, column: 53, scope: !13527)
!13538 = !DILocation(line: 1404, column: 65, scope: !13527)
!13539 = !DILocation(line: 1404, column: 70, scope: !13527)
!13540 = !DILocation(line: 1404, column: 75, scope: !13527)
!13541 = !DILocation(line: 1404, column: 79, scope: !13527)
!13542 = !DILocation(line: 1404, column: 83, scope: !13527)
!13543 = !DILocation(line: 1404, column: 87, scope: !13527)
!13544 = !DILocation(line: 1404, column: 92, scope: !13527)
!13545 = !DILocation(line: 1404, column: 29, scope: !13527)
!13546 = !DILocation(line: 1404, column: 9, scope: !13527)
!13547 = !DILocation(line: 1404, column: 14, scope: !13527)
!13548 = !DILocation(line: 1404, column: 27, scope: !13527)
!13549 = !DILocalVariable(name: "i", scope: !13550, file: !919, line: 1406, type: !998)
!13550 = distinct !DILexicalBlock(scope: !13527, file: !919, line: 1406, column: 9)
!13551 = !DILocation(line: 1406, column: 15, scope: !13550)
!13552 = !DILocalVariable(name: "ret", scope: !13550, file: !919, line: 1406, type: !998)
!13553 = !DILocation(line: 1406, column: 18, scope: !13550)
!13554 = !DILocation(line: 1406, column: 30, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13550, file: !919, line: 1406, column: 23)
!13556 = !DILocation(line: 1406, column: 28, scope: !13555)
!13557 = !DILocation(line: 1406, column: 35, scope: !13558)
!13558 = !DILexicalBlockFile(scope: !13559, file: !919, discriminator: 1)
!13559 = distinct !DILexicalBlock(scope: !13555, file: !919, line: 1406, column: 23)
!13560 = !DILocation(line: 1406, column: 39, scope: !13558)
!13561 = !DILocation(line: 1406, column: 42, scope: !13558)
!13562 = !DILocation(line: 1406, column: 37, scope: !13558)
!13563 = !DILocation(line: 1406, column: 23, scope: !13558)
!13564 = !DILocalVariable(name: "spec", scope: !13565, file: !919, line: 1406, type: !1105)
!13565 = distinct !DILexicalBlock(scope: !13559, file: !919, line: 1406, column: 59)
!13566 = !DILocation(line: 1406, column: 67, scope: !13565)
!13567 = !DILocation(line: 1406, column: 85, scope: !13568)
!13568 = !DILexicalBlockFile(scope: !13565, file: !919, discriminator: 2)
!13569 = !DILocation(line: 1406, column: 74, scope: !13568)
!13570 = !DILocation(line: 1406, column: 77, scope: !13568)
!13571 = !DILocation(line: 1406, column: 88, scope: !13568)
!13572 = !DILocation(line: 1406, column: 67, scope: !13568)
!13573 = !DILocation(line: 1406, column: 133, scope: !13568)
!13574 = !DILocation(line: 1406, column: 137, scope: !13568)
!13575 = !DILocation(line: 1406, column: 141, scope: !13568)
!13576 = !DILocation(line: 1406, column: 110, scope: !13568)
!13577 = !DILocation(line: 1406, column: 108, scope: !13568)
!13578 = !DILocation(line: 1406, column: 148, scope: !13568)
!13579 = !DILocation(line: 1406, column: 103, scope: !13568)
!13580 = !DILocation(line: 1406, column: 173, scope: !13581)
!13581 = !DILexicalBlockFile(scope: !13582, file: !919, discriminator: 3)
!13582 = distinct !DILexicalBlock(scope: !13565, file: !919, line: 1406, column: 103)
!13583 = !DILocation(line: 1406, column: 162, scope: !13581)
!13584 = !DILocation(line: 1406, column: 165, scope: !13581)
!13585 = !DILocation(line: 1406, column: 176, scope: !13581)
!13586 = !DILocation(line: 1406, column: 178, scope: !13581)
!13587 = !DILocation(line: 1406, column: 160, scope: !13581)
!13588 = !DILocation(line: 1406, column: 153, scope: !13581)
!13589 = !DILocation(line: 1406, column: 192, scope: !13590)
!13590 = !DILexicalBlockFile(scope: !13591, file: !919, discriminator: 4)
!13591 = distinct !DILexicalBlock(scope: !13582, file: !919, line: 1406, column: 192)
!13592 = !DILocation(line: 1406, column: 196, scope: !13590)
!13593 = !DILocation(line: 1406, column: 201, scope: !13594)
!13594 = !DILexicalBlockFile(scope: !13591, file: !919, discriminator: 5)
!13595 = !DILocation(line: 1406, column: 218, scope: !13596)
!13596 = !DILexicalBlockFile(scope: !13565, file: !919, discriminator: 6)
!13597 = !DILocation(line: 1406, column: 55, scope: !13598)
!13598 = !DILexicalBlockFile(scope: !13559, file: !919, discriminator: 7)
!13599 = !DILocation(line: 1406, column: 23, scope: !13598)
!13600 = distinct !{!13600, !13601}
!13601 = !DILocation(line: 1406, column: 23, scope: !13550)
!13602 = !DILocation(line: 1407, column: 13, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13527, file: !919, line: 1407, column: 13)
!13604 = !DILocation(line: 1407, column: 20, scope: !13603)
!13605 = !DILocation(line: 1407, column: 50, scope: !13606)
!13606 = !DILexicalBlockFile(scope: !13603, file: !919, discriminator: 1)
!13607 = !DILocation(line: 1407, column: 58, scope: !13606)
!13608 = !DILocation(line: 1407, column: 63, scope: !13606)
!13609 = !DILocation(line: 1407, column: 68, scope: !13606)
!13610 = !DILocation(line: 1407, column: 32, scope: !13606)
!13611 = !DILocation(line: 1407, column: 30, scope: !13606)
!13612 = !DILocation(line: 1407, column: 13, scope: !13606)
!13613 = !DILocation(line: 1408, column: 13, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13603, file: !919, line: 1407, column: 81)
!13615 = distinct !{!13615, !13613}
!13616 = !DILocation(line: 1409, column: 32, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13614, file: !919, line: 1408, column: 16)
!13618 = !DILocation(line: 1409, column: 23, scope: !13617)
!13619 = !DILocation(line: 1409, column: 21, scope: !13617)
!13620 = !DILocation(line: 1410, column: 22, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13617, file: !919, line: 1410, column: 21)
!13622 = !DILocation(line: 1410, column: 29, scope: !13621)
!13623 = !DILocation(line: 1410, column: 32, scope: !13624)
!13624 = !DILexicalBlockFile(scope: !13621, file: !919, discriminator: 1)
!13625 = !DILocation(line: 1410, column: 39, scope: !13624)
!13626 = !DILocation(line: 1410, column: 21, scope: !13624)
!13627 = !DILocation(line: 1411, column: 29, scope: !13628)
!13628 = distinct !DILexicalBlock(scope: !13621, file: !919, line: 1410, column: 47)
!13629 = !DILocation(line: 1411, column: 21, scope: !13628)
!13630 = !DILocation(line: 1412, column: 21, scope: !13628)
!13631 = !DILocation(line: 1414, column: 36, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13617, file: !919, line: 1414, column: 21)
!13633 = !DILocation(line: 1414, column: 29, scope: !13632)
!13634 = !DILocation(line: 1414, column: 27, scope: !13632)
!13635 = !DILocation(line: 1414, column: 21, scope: !13617)
!13636 = !DILocation(line: 1415, column: 21, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13632, file: !919, line: 1414, column: 48)
!13638 = !DILocation(line: 1416, column: 21, scope: !13637)
!13639 = !DILocation(line: 1418, column: 21, scope: !13617)
!13640 = !DILocation(line: 1418, column: 24, scope: !13617)
!13641 = !DILocation(line: 1419, column: 30, scope: !13617)
!13642 = !DILocation(line: 1419, column: 35, scope: !13617)
!13643 = !DILocation(line: 1419, column: 49, scope: !13617)
!13644 = !DILocation(line: 1419, column: 54, scope: !13617)
!13645 = !DILocation(line: 1419, column: 17, scope: !13617)
!13646 = !DILocation(line: 1420, column: 25, scope: !13617)
!13647 = !DILocation(line: 1420, column: 17, scope: !13617)
!13648 = !DILocation(line: 1421, column: 13, scope: !13617)
!13649 = !DILocation(line: 1421, column: 23, scope: !13650)
!13650 = !DILexicalBlockFile(scope: !13614, file: !919, discriminator: 1)
!13651 = !DILocation(line: 1421, column: 26, scope: !13650)
!13652 = !DILocation(line: 1421, column: 22, scope: !13650)
!13653 = !DILocation(line: 1421, column: 13, scope: !13650)
!13654 = !DILocation(line: 1422, column: 13, scope: !13614)
!13655 = !DILocation(line: 1423, column: 9, scope: !13614)
!13656 = !DILocation(line: 1424, column: 13, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13527, file: !919, line: 1424, column: 13)
!13658 = !DILocation(line: 1424, column: 13, scope: !13527)
!13659 = !DILocation(line: 1427, column: 20, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13657, file: !919, line: 1424, column: 18)
!13661 = !DILocation(line: 1427, column: 28, scope: !13660)
!13662 = !DILocation(line: 1427, column: 33, scope: !13660)
!13663 = !DILocation(line: 1427, column: 45, scope: !13660)
!13664 = !DILocation(line: 1427, column: 50, scope: !13660)
!13665 = !DILocation(line: 1425, column: 13, scope: !13660)
!13666 = !DILocation(line: 1428, column: 13, scope: !13660)
!13667 = !DILocation(line: 1430, column: 5, scope: !13527)
!13668 = !DILocation(line: 1431, column: 47, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13523, file: !919, line: 1430, column: 12)
!13670 = !DILocation(line: 1431, column: 50, scope: !13669)
!13671 = !DILocation(line: 1431, column: 53, scope: !13669)
!13672 = !DILocation(line: 1431, column: 83, scope: !13669)
!13673 = !DILocation(line: 1431, column: 87, scope: !13669)
!13674 = !DILocation(line: 1431, column: 29, scope: !13669)
!13675 = !DILocation(line: 1431, column: 9, scope: !13669)
!13676 = !DILocation(line: 1431, column: 14, scope: !13669)
!13677 = !DILocation(line: 1431, column: 27, scope: !13669)
!13678 = !DILocation(line: 1435, column: 9, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1435, column: 9)
!13680 = !DILocation(line: 1435, column: 12, scope: !13679)
!13681 = !DILocation(line: 1435, column: 9, scope: !13383)
!13682 = !DILocation(line: 1436, column: 9, scope: !13679)
!13683 = !DILocation(line: 1436, column: 14, scope: !13679)
!13684 = !DILocation(line: 1436, column: 23, scope: !13679)
!13685 = !DILocation(line: 1436, column: 29, scope: !13679)
!13686 = !DILocalVariable(name: "i", scope: !13687, file: !919, line: 1438, type: !998)
!13687 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1438, column: 5)
!13688 = !DILocation(line: 1438, column: 11, scope: !13687)
!13689 = !DILocalVariable(name: "ret", scope: !13687, file: !919, line: 1438, type: !998)
!13690 = !DILocation(line: 1438, column: 14, scope: !13687)
!13691 = !DILocation(line: 1438, column: 26, scope: !13692)
!13692 = distinct !DILexicalBlock(scope: !13687, file: !919, line: 1438, column: 19)
!13693 = !DILocation(line: 1438, column: 24, scope: !13692)
!13694 = !DILocation(line: 1438, column: 31, scope: !13695)
!13695 = !DILexicalBlockFile(scope: !13696, file: !919, discriminator: 1)
!13696 = distinct !DILexicalBlock(scope: !13692, file: !919, line: 1438, column: 19)
!13697 = !DILocation(line: 1438, column: 35, scope: !13695)
!13698 = !DILocation(line: 1438, column: 38, scope: !13695)
!13699 = !DILocation(line: 1438, column: 33, scope: !13695)
!13700 = !DILocation(line: 1438, column: 19, scope: !13695)
!13701 = !DILocalVariable(name: "spec", scope: !13702, file: !919, line: 1438, type: !1105)
!13702 = distinct !DILexicalBlock(scope: !13696, file: !919, line: 1438, column: 58)
!13703 = !DILocation(line: 1438, column: 66, scope: !13702)
!13704 = !DILocation(line: 1438, column: 87, scope: !13705)
!13705 = !DILexicalBlockFile(scope: !13702, file: !919, discriminator: 2)
!13706 = !DILocation(line: 1438, column: 73, scope: !13705)
!13707 = !DILocation(line: 1438, column: 76, scope: !13705)
!13708 = !DILocation(line: 1438, column: 90, scope: !13705)
!13709 = !DILocation(line: 1438, column: 66, scope: !13705)
!13710 = !DILocation(line: 1438, column: 135, scope: !13705)
!13711 = !DILocation(line: 1438, column: 139, scope: !13705)
!13712 = !DILocation(line: 1438, column: 143, scope: !13705)
!13713 = !DILocation(line: 1438, column: 112, scope: !13705)
!13714 = !DILocation(line: 1438, column: 110, scope: !13705)
!13715 = !DILocation(line: 1438, column: 150, scope: !13705)
!13716 = !DILocation(line: 1438, column: 105, scope: !13705)
!13717 = !DILocation(line: 1438, column: 181, scope: !13718)
!13718 = !DILexicalBlockFile(scope: !13719, file: !919, discriminator: 3)
!13719 = distinct !DILexicalBlock(scope: !13702, file: !919, line: 1438, column: 105)
!13720 = !DILocation(line: 1438, column: 167, scope: !13718)
!13721 = !DILocation(line: 1438, column: 170, scope: !13718)
!13722 = !DILocation(line: 1438, column: 184, scope: !13718)
!13723 = !DILocation(line: 1438, column: 186, scope: !13718)
!13724 = !DILocation(line: 1438, column: 165, scope: !13718)
!13725 = !DILocation(line: 1438, column: 155, scope: !13718)
!13726 = !DILocation(line: 1438, column: 200, scope: !13727)
!13727 = !DILexicalBlockFile(scope: !13728, file: !919, discriminator: 4)
!13728 = distinct !DILexicalBlock(scope: !13719, file: !919, line: 1438, column: 200)
!13729 = !DILocation(line: 1438, column: 204, scope: !13727)
!13730 = !DILocation(line: 1438, column: 209, scope: !13731)
!13731 = !DILexicalBlockFile(scope: !13728, file: !919, discriminator: 5)
!13732 = !DILocation(line: 1438, column: 226, scope: !13733)
!13733 = !DILexicalBlockFile(scope: !13702, file: !919, discriminator: 6)
!13734 = !DILocation(line: 1438, column: 54, scope: !13735)
!13735 = !DILexicalBlockFile(scope: !13696, file: !919, discriminator: 7)
!13736 = !DILocation(line: 1438, column: 19, scope: !13735)
!13737 = distinct !{!13737, !13738}
!13738 = !DILocation(line: 1438, column: 19, scope: !13687)
!13739 = !DILocation(line: 1439, column: 9, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1439, column: 9)
!13741 = !DILocation(line: 1439, column: 9, scope: !13383)
!13742 = !DILocalVariable(name: "q", scope: !13743, file: !919, line: 1440, type: !1011)
!13743 = distinct !DILexicalBlock(scope: !13740, file: !919, line: 1439, column: 20)
!13744 = !DILocation(line: 1440, column: 20, scope: !13743)
!13745 = !DILocation(line: 1441, column: 32, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13743, file: !919, line: 1441, column: 13)
!13747 = !DILocation(line: 1441, column: 13, scope: !13746)
!13748 = !DILocation(line: 1441, column: 60, scope: !13746)
!13749 = !DILocation(line: 1441, column: 64, scope: !13746)
!13750 = !DILocation(line: 1442, column: 15, scope: !13746)
!13751 = !DILocation(line: 1442, column: 19, scope: !13746)
!13752 = !DILocation(line: 1442, column: 24, scope: !13746)
!13753 = !DILocation(line: 1442, column: 29, scope: !13754)
!13754 = !DILexicalBlockFile(scope: !13746, file: !919, discriminator: 1)
!13755 = !DILocation(line: 1442, column: 33, scope: !13754)
!13756 = !DILocation(line: 1441, column: 13, scope: !13757)
!13757 = !DILexicalBlockFile(scope: !13743, file: !919, discriminator: 1)
!13758 = !DILocation(line: 1443, column: 55, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13746, file: !919, line: 1442, column: 39)
!13760 = !DILocation(line: 1443, column: 13, scope: !13759)
!13761 = !DILocation(line: 1444, column: 13, scope: !13759)
!13762 = !DILocation(line: 1446, column: 9, scope: !13743)
!13763 = !DILocation(line: 1446, column: 13, scope: !13743)
!13764 = !DILocation(line: 1446, column: 25, scope: !13743)
!13765 = !DILocation(line: 1447, column: 5, scope: !13743)
!13766 = !DILocalVariable(name: "i", scope: !13767, file: !919, line: 1449, type: !998)
!13767 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1449, column: 5)
!13768 = !DILocation(line: 1449, column: 11, scope: !13767)
!13769 = !DILocalVariable(name: "ret", scope: !13767, file: !919, line: 1449, type: !998)
!13770 = !DILocation(line: 1449, column: 14, scope: !13767)
!13771 = !DILocation(line: 1449, column: 26, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !13767, file: !919, line: 1449, column: 19)
!13773 = !DILocation(line: 1449, column: 24, scope: !13772)
!13774 = !DILocation(line: 1449, column: 31, scope: !13775)
!13775 = !DILexicalBlockFile(scope: !13776, file: !919, discriminator: 1)
!13776 = distinct !DILexicalBlock(scope: !13772, file: !919, line: 1449, column: 19)
!13777 = !DILocation(line: 1449, column: 35, scope: !13775)
!13778 = !DILocation(line: 1449, column: 38, scope: !13775)
!13779 = !DILocation(line: 1449, column: 33, scope: !13775)
!13780 = !DILocation(line: 1449, column: 19, scope: !13775)
!13781 = !DILocalVariable(name: "spec", scope: !13782, file: !919, line: 1449, type: !1105)
!13782 = distinct !DILexicalBlock(scope: !13776, file: !919, line: 1449, column: 62)
!13783 = !DILocation(line: 1449, column: 70, scope: !13782)
!13784 = !DILocation(line: 1449, column: 95, scope: !13785)
!13785 = !DILexicalBlockFile(scope: !13782, file: !919, discriminator: 2)
!13786 = !DILocation(line: 1449, column: 77, scope: !13785)
!13787 = !DILocation(line: 1449, column: 80, scope: !13785)
!13788 = !DILocation(line: 1449, column: 98, scope: !13785)
!13789 = !DILocation(line: 1449, column: 70, scope: !13785)
!13790 = !DILocation(line: 1449, column: 143, scope: !13785)
!13791 = !DILocation(line: 1449, column: 147, scope: !13785)
!13792 = !DILocation(line: 1449, column: 151, scope: !13785)
!13793 = !DILocation(line: 1449, column: 120, scope: !13785)
!13794 = !DILocation(line: 1449, column: 118, scope: !13785)
!13795 = !DILocation(line: 1449, column: 158, scope: !13785)
!13796 = !DILocation(line: 1449, column: 113, scope: !13785)
!13797 = !DILocation(line: 1449, column: 193, scope: !13798)
!13798 = !DILexicalBlockFile(scope: !13799, file: !919, discriminator: 3)
!13799 = distinct !DILexicalBlock(scope: !13782, file: !919, line: 1449, column: 113)
!13800 = !DILocation(line: 1449, column: 175, scope: !13798)
!13801 = !DILocation(line: 1449, column: 178, scope: !13798)
!13802 = !DILocation(line: 1449, column: 196, scope: !13798)
!13803 = !DILocation(line: 1449, column: 198, scope: !13798)
!13804 = !DILocation(line: 1449, column: 173, scope: !13798)
!13805 = !DILocation(line: 1449, column: 163, scope: !13798)
!13806 = !DILocation(line: 1449, column: 212, scope: !13807)
!13807 = !DILexicalBlockFile(scope: !13808, file: !919, discriminator: 4)
!13808 = distinct !DILexicalBlock(scope: !13799, file: !919, line: 1449, column: 212)
!13809 = !DILocation(line: 1449, column: 216, scope: !13807)
!13810 = !DILocation(line: 1449, column: 221, scope: !13811)
!13811 = !DILexicalBlockFile(scope: !13808, file: !919, discriminator: 5)
!13812 = !DILocation(line: 1449, column: 238, scope: !13813)
!13813 = !DILexicalBlockFile(scope: !13782, file: !919, discriminator: 6)
!13814 = !DILocation(line: 1449, column: 58, scope: !13815)
!13815 = !DILexicalBlockFile(scope: !13776, file: !919, discriminator: 7)
!13816 = !DILocation(line: 1449, column: 19, scope: !13815)
!13817 = distinct !{!13817, !13818}
!13818 = !DILocation(line: 1449, column: 19, scope: !13767)
!13819 = !DILocation(line: 1450, column: 9, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1450, column: 9)
!13821 = !DILocation(line: 1450, column: 9, scope: !13383)
!13822 = !DILocalVariable(name: "q", scope: !13823, file: !919, line: 1451, type: !1011)
!13823 = distinct !DILexicalBlock(scope: !13820, file: !919, line: 1450, column: 20)
!13824 = !DILocation(line: 1451, column: 20, scope: !13823)
!13825 = !DILocation(line: 1452, column: 32, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13823, file: !919, line: 1452, column: 13)
!13827 = !DILocation(line: 1452, column: 13, scope: !13826)
!13828 = !DILocation(line: 1452, column: 60, scope: !13826)
!13829 = !DILocation(line: 1452, column: 64, scope: !13826)
!13830 = !DILocation(line: 1453, column: 15, scope: !13826)
!13831 = !DILocation(line: 1453, column: 19, scope: !13826)
!13832 = !DILocation(line: 1452, column: 13, scope: !13833)
!13833 = !DILexicalBlockFile(scope: !13823, file: !919, discriminator: 1)
!13834 = !DILocation(line: 1454, column: 55, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13826, file: !919, line: 1453, column: 25)
!13836 = !DILocation(line: 1454, column: 13, scope: !13835)
!13837 = !DILocation(line: 1455, column: 13, scope: !13835)
!13838 = !DILocation(line: 1457, column: 9, scope: !13823)
!13839 = !DILocation(line: 1457, column: 14, scope: !13823)
!13840 = !DILocation(line: 1457, column: 29, scope: !13823)
!13841 = !DILocation(line: 1458, column: 5, scope: !13823)
!13842 = !DILocation(line: 1460, column: 5, scope: !13383)
!13843 = !DILocation(line: 1460, column: 10, scope: !13383)
!13844 = !DILocation(line: 1460, column: 21, scope: !13383)
!13845 = !DILocalVariable(name: "i", scope: !13846, file: !919, line: 1461, type: !998)
!13846 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1461, column: 5)
!13847 = !DILocation(line: 1461, column: 11, scope: !13846)
!13848 = !DILocalVariable(name: "ret", scope: !13846, file: !919, line: 1461, type: !998)
!13849 = !DILocation(line: 1461, column: 14, scope: !13846)
!13850 = !DILocation(line: 1461, column: 26, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13846, file: !919, line: 1461, column: 19)
!13852 = !DILocation(line: 1461, column: 24, scope: !13851)
!13853 = !DILocation(line: 1461, column: 31, scope: !13854)
!13854 = !DILexicalBlockFile(scope: !13855, file: !919, discriminator: 1)
!13855 = distinct !DILexicalBlock(scope: !13851, file: !919, line: 1461, column: 19)
!13856 = !DILocation(line: 1461, column: 35, scope: !13854)
!13857 = !DILocation(line: 1461, column: 38, scope: !13854)
!13858 = !DILocation(line: 1461, column: 33, scope: !13854)
!13859 = !DILocation(line: 1461, column: 19, scope: !13854)
!13860 = !DILocalVariable(name: "spec", scope: !13861, file: !919, line: 1461, type: !1105)
!13861 = distinct !DILexicalBlock(scope: !13855, file: !919, line: 1461, column: 58)
!13862 = !DILocation(line: 1461, column: 66, scope: !13861)
!13863 = !DILocation(line: 1461, column: 87, scope: !13864)
!13864 = !DILexicalBlockFile(scope: !13861, file: !919, discriminator: 2)
!13865 = !DILocation(line: 1461, column: 73, scope: !13864)
!13866 = !DILocation(line: 1461, column: 76, scope: !13864)
!13867 = !DILocation(line: 1461, column: 90, scope: !13864)
!13868 = !DILocation(line: 1461, column: 66, scope: !13864)
!13869 = !DILocation(line: 1461, column: 135, scope: !13864)
!13870 = !DILocation(line: 1461, column: 139, scope: !13864)
!13871 = !DILocation(line: 1461, column: 143, scope: !13864)
!13872 = !DILocation(line: 1461, column: 112, scope: !13864)
!13873 = !DILocation(line: 1461, column: 110, scope: !13864)
!13874 = !DILocation(line: 1461, column: 150, scope: !13864)
!13875 = !DILocation(line: 1461, column: 105, scope: !13864)
!13876 = !DILocation(line: 1461, column: 187, scope: !13877)
!13877 = !DILexicalBlockFile(scope: !13878, file: !919, discriminator: 3)
!13878 = distinct !DILexicalBlock(scope: !13861, file: !919, line: 1461, column: 105)
!13879 = !DILocation(line: 1461, column: 173, scope: !13877)
!13880 = !DILocation(line: 1461, column: 176, scope: !13877)
!13881 = !DILocation(line: 1461, column: 190, scope: !13877)
!13882 = !DILocation(line: 1461, column: 192, scope: !13877)
!13883 = !DILocation(line: 1461, column: 155, scope: !13877)
!13884 = !DILocation(line: 1461, column: 160, scope: !13877)
!13885 = !DILocation(line: 1461, column: 171, scope: !13877)
!13886 = !DILocation(line: 1461, column: 206, scope: !13887)
!13887 = !DILexicalBlockFile(scope: !13888, file: !919, discriminator: 4)
!13888 = distinct !DILexicalBlock(scope: !13878, file: !919, line: 1461, column: 206)
!13889 = !DILocation(line: 1461, column: 210, scope: !13887)
!13890 = !DILocation(line: 1461, column: 215, scope: !13891)
!13891 = !DILexicalBlockFile(scope: !13888, file: !919, discriminator: 5)
!13892 = !DILocation(line: 1461, column: 232, scope: !13893)
!13893 = !DILexicalBlockFile(scope: !13861, file: !919, discriminator: 6)
!13894 = !DILocation(line: 1461, column: 54, scope: !13895)
!13895 = !DILexicalBlockFile(scope: !13855, file: !919, discriminator: 7)
!13896 = !DILocation(line: 1461, column: 19, scope: !13895)
!13897 = distinct !{!13897, !13898}
!13898 = !DILocation(line: 1461, column: 19, scope: !13846)
!13899 = !DILocation(line: 1462, column: 12, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1462, column: 5)
!13901 = !DILocation(line: 1462, column: 10, scope: !13900)
!13902 = !DILocation(line: 1462, column: 17, scope: !13903)
!13903 = !DILexicalBlockFile(scope: !13904, file: !919, discriminator: 1)
!13904 = distinct !DILexicalBlock(scope: !13900, file: !919, line: 1462, column: 5)
!13905 = !DILocation(line: 1462, column: 19, scope: !13903)
!13906 = !DILocation(line: 1462, column: 22, scope: !13903)
!13907 = !DILocation(line: 1462, column: 18, scope: !13903)
!13908 = !DILocation(line: 1462, column: 5, scope: !13903)
!13909 = !DILocalVariable(name: "p", scope: !13910, file: !919, line: 1463, type: !1105)
!13910 = distinct !DILexicalBlock(scope: !13904, file: !919, line: 1462, column: 42)
!13911 = !DILocation(line: 1463, column: 15, scope: !13910)
!13912 = !DILocation(line: 1463, column: 33, scope: !13910)
!13913 = !DILocation(line: 1463, column: 19, scope: !13910)
!13914 = !DILocation(line: 1463, column: 22, scope: !13910)
!13915 = !DILocation(line: 1463, column: 36, scope: !13910)
!13916 = !DILocation(line: 1464, column: 15, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13910, file: !919, line: 1464, column: 13)
!13918 = !DILocation(line: 1464, column: 14, scope: !13917)
!13919 = !DILocation(line: 1464, column: 17, scope: !13917)
!13920 = !DILocation(line: 1464, column: 20, scope: !13921)
!13921 = !DILexicalBlockFile(scope: !13917, file: !919, discriminator: 1)
!13922 = !DILocation(line: 1464, column: 25, scope: !13921)
!13923 = !DILocation(line: 1464, column: 13, scope: !13921)
!13924 = !DILocation(line: 1465, column: 13, scope: !13925)
!13925 = distinct !DILexicalBlock(scope: !13917, file: !919, line: 1464, column: 48)
!13926 = !DILocation(line: 1466, column: 13, scope: !13925)
!13927 = !DILocation(line: 1468, column: 5, scope: !13910)
!13928 = !DILocation(line: 1462, column: 38, scope: !13929)
!13929 = !DILexicalBlockFile(scope: !13904, file: !919, discriminator: 2)
!13930 = !DILocation(line: 1462, column: 5, scope: !13929)
!13931 = distinct !{!13931, !13932}
!13932 = !DILocation(line: 1462, column: 5, scope: !13383)
!13933 = !DILocation(line: 1470, column: 5, scope: !13383)
!13934 = !DILocation(line: 1470, column: 10, scope: !13383)
!13935 = !DILocation(line: 1470, column: 27, scope: !13383)
!13936 = !DILocalVariable(name: "i", scope: !13937, file: !919, line: 1471, type: !998)
!13937 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1471, column: 5)
!13938 = !DILocation(line: 1471, column: 11, scope: !13937)
!13939 = !DILocalVariable(name: "ret", scope: !13937, file: !919, line: 1471, type: !998)
!13940 = !DILocation(line: 1471, column: 14, scope: !13937)
!13941 = !DILocation(line: 1471, column: 26, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13937, file: !919, line: 1471, column: 19)
!13943 = !DILocation(line: 1471, column: 24, scope: !13942)
!13944 = !DILocation(line: 1471, column: 31, scope: !13945)
!13945 = !DILexicalBlockFile(scope: !13946, file: !919, discriminator: 1)
!13946 = distinct !DILexicalBlock(scope: !13942, file: !919, line: 1471, column: 19)
!13947 = !DILocation(line: 1471, column: 35, scope: !13945)
!13948 = !DILocation(line: 1471, column: 38, scope: !13945)
!13949 = !DILocation(line: 1471, column: 33, scope: !13945)
!13950 = !DILocation(line: 1471, column: 19, scope: !13945)
!13951 = !DILocalVariable(name: "spec", scope: !13952, file: !919, line: 1471, type: !1105)
!13952 = distinct !DILexicalBlock(scope: !13946, file: !919, line: 1471, column: 64)
!13953 = !DILocation(line: 1471, column: 72, scope: !13952)
!13954 = !DILocation(line: 1471, column: 99, scope: !13955)
!13955 = !DILexicalBlockFile(scope: !13952, file: !919, discriminator: 2)
!13956 = !DILocation(line: 1471, column: 79, scope: !13955)
!13957 = !DILocation(line: 1471, column: 82, scope: !13955)
!13958 = !DILocation(line: 1471, column: 102, scope: !13955)
!13959 = !DILocation(line: 1471, column: 72, scope: !13955)
!13960 = !DILocation(line: 1471, column: 147, scope: !13955)
!13961 = !DILocation(line: 1471, column: 151, scope: !13955)
!13962 = !DILocation(line: 1471, column: 155, scope: !13955)
!13963 = !DILocation(line: 1471, column: 124, scope: !13955)
!13964 = !DILocation(line: 1471, column: 122, scope: !13955)
!13965 = !DILocation(line: 1471, column: 162, scope: !13955)
!13966 = !DILocation(line: 1471, column: 117, scope: !13955)
!13967 = !DILocation(line: 1471, column: 211, scope: !13968)
!13968 = !DILexicalBlockFile(scope: !13969, file: !919, discriminator: 3)
!13969 = distinct !DILexicalBlock(scope: !13952, file: !919, line: 1471, column: 117)
!13970 = !DILocation(line: 1471, column: 191, scope: !13968)
!13971 = !DILocation(line: 1471, column: 194, scope: !13968)
!13972 = !DILocation(line: 1471, column: 214, scope: !13968)
!13973 = !DILocation(line: 1471, column: 216, scope: !13968)
!13974 = !DILocation(line: 1471, column: 167, scope: !13968)
!13975 = !DILocation(line: 1471, column: 172, scope: !13968)
!13976 = !DILocation(line: 1471, column: 189, scope: !13968)
!13977 = !DILocation(line: 1471, column: 228, scope: !13978)
!13978 = !DILexicalBlockFile(scope: !13979, file: !919, discriminator: 4)
!13979 = distinct !DILexicalBlock(scope: !13969, file: !919, line: 1471, column: 228)
!13980 = !DILocation(line: 1471, column: 232, scope: !13978)
!13981 = !DILocation(line: 1471, column: 237, scope: !13982)
!13982 = !DILexicalBlockFile(scope: !13979, file: !919, discriminator: 5)
!13983 = !DILocation(line: 1471, column: 254, scope: !13984)
!13984 = !DILexicalBlockFile(scope: !13952, file: !919, discriminator: 6)
!13985 = !DILocation(line: 1471, column: 60, scope: !13986)
!13986 = !DILexicalBlockFile(scope: !13946, file: !919, discriminator: 7)
!13987 = !DILocation(line: 1471, column: 19, scope: !13986)
!13988 = distinct !{!13988, !13989}
!13989 = !DILocation(line: 1471, column: 19, scope: !13937)
!13990 = !DILocalVariable(name: "i", scope: !13991, file: !919, line: 1473, type: !998)
!13991 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1473, column: 5)
!13992 = !DILocation(line: 1473, column: 11, scope: !13991)
!13993 = !DILocalVariable(name: "ret", scope: !13991, file: !919, line: 1473, type: !998)
!13994 = !DILocation(line: 1473, column: 14, scope: !13991)
!13995 = !DILocation(line: 1473, column: 26, scope: !13996)
!13996 = distinct !DILexicalBlock(scope: !13991, file: !919, line: 1473, column: 19)
!13997 = !DILocation(line: 1473, column: 24, scope: !13996)
!13998 = !DILocation(line: 1473, column: 31, scope: !13999)
!13999 = !DILexicalBlockFile(scope: !14000, file: !919, discriminator: 1)
!14000 = distinct !DILexicalBlock(scope: !13996, file: !919, line: 1473, column: 19)
!14001 = !DILocation(line: 1473, column: 35, scope: !13999)
!14002 = !DILocation(line: 1473, column: 38, scope: !13999)
!14003 = !DILocation(line: 1473, column: 33, scope: !13999)
!14004 = !DILocation(line: 1473, column: 19, scope: !13999)
!14005 = !DILocalVariable(name: "spec", scope: !14006, file: !919, line: 1473, type: !1105)
!14006 = distinct !DILexicalBlock(scope: !14000, file: !919, line: 1473, column: 65)
!14007 = !DILocation(line: 1473, column: 73, scope: !14006)
!14008 = !DILocation(line: 1473, column: 101, scope: !14009)
!14009 = !DILexicalBlockFile(scope: !14006, file: !919, discriminator: 2)
!14010 = !DILocation(line: 1473, column: 80, scope: !14009)
!14011 = !DILocation(line: 1473, column: 83, scope: !14009)
!14012 = !DILocation(line: 1473, column: 104, scope: !14009)
!14013 = !DILocation(line: 1473, column: 73, scope: !14009)
!14014 = !DILocation(line: 1473, column: 149, scope: !14009)
!14015 = !DILocation(line: 1473, column: 153, scope: !14009)
!14016 = !DILocation(line: 1473, column: 157, scope: !14009)
!14017 = !DILocation(line: 1473, column: 126, scope: !14009)
!14018 = !DILocation(line: 1473, column: 124, scope: !14009)
!14019 = !DILocation(line: 1473, column: 164, scope: !14009)
!14020 = !DILocation(line: 1473, column: 119, scope: !14009)
!14021 = !DILocation(line: 1473, column: 197, scope: !14022)
!14022 = !DILexicalBlockFile(scope: !14023, file: !919, discriminator: 3)
!14023 = distinct !DILexicalBlock(scope: !14006, file: !919, line: 1473, column: 119)
!14024 = !DILocation(line: 1473, column: 176, scope: !14022)
!14025 = !DILocation(line: 1473, column: 179, scope: !14022)
!14026 = !DILocation(line: 1473, column: 200, scope: !14022)
!14027 = !DILocation(line: 1473, column: 202, scope: !14022)
!14028 = !DILocation(line: 1473, column: 174, scope: !14022)
!14029 = !DILocation(line: 1473, column: 169, scope: !14022)
!14030 = !DILocation(line: 1473, column: 216, scope: !14031)
!14031 = !DILexicalBlockFile(scope: !14032, file: !919, discriminator: 4)
!14032 = distinct !DILexicalBlock(scope: !14023, file: !919, line: 1473, column: 216)
!14033 = !DILocation(line: 1473, column: 220, scope: !14031)
!14034 = !DILocation(line: 1473, column: 225, scope: !14035)
!14035 = !DILexicalBlockFile(scope: !14032, file: !919, discriminator: 5)
!14036 = !DILocation(line: 1473, column: 242, scope: !14037)
!14037 = !DILexicalBlockFile(scope: !14006, file: !919, discriminator: 6)
!14038 = !DILocation(line: 1473, column: 61, scope: !14039)
!14039 = !DILexicalBlockFile(scope: !14000, file: !919, discriminator: 7)
!14040 = !DILocation(line: 1473, column: 19, scope: !14039)
!14041 = distinct !{!14041, !14042}
!14042 = !DILocation(line: 1473, column: 19, scope: !13991)
!14043 = !DILocation(line: 1474, column: 5, scope: !13383)
!14044 = !DILocation(line: 1474, column: 12, scope: !14045)
!14045 = !DILexicalBlockFile(scope: !13383, file: !919, discriminator: 1)
!14046 = !DILocation(line: 1474, column: 17, scope: !14045)
!14047 = !DILocation(line: 1474, column: 21, scope: !14048)
!14048 = !DILexicalBlockFile(scope: !13383, file: !919, discriminator: 2)
!14049 = !DILocation(line: 1474, column: 20, scope: !14048)
!14050 = !DILocation(line: 1474, column: 17, scope: !14048)
!14051 = !DILocation(line: 1474, column: 5, scope: !14052)
!14052 = !DILexicalBlockFile(scope: !13383, file: !919, discriminator: 3)
!14053 = !DILocalVariable(name: "filter", scope: !14054, file: !919, line: 1475, type: !14055)
!14054 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1474, column: 27)
!14055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14056, size: 64, align: 64)
!14056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14057)
!14057 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBitStreamFilter", file: !57, line: 5830, baseType: !4230)
!14058 = !DILocation(line: 1475, column: 34, scope: !14054)
!14059 = !DILocalVariable(name: "bsf", scope: !14054, file: !919, line: 1476, type: !1105)
!14060 = !DILocation(line: 1476, column: 15, scope: !14054)
!14061 = !DILocalVariable(name: "bsf_options_str", scope: !14054, file: !919, line: 1476, type: !1105)
!14062 = !DILocation(line: 1476, column: 21, scope: !14054)
!14063 = !DILocalVariable(name: "bsf_name", scope: !14054, file: !919, line: 1476, type: !1105)
!14064 = !DILocation(line: 1476, column: 39, scope: !14054)
!14065 = !DILocation(line: 1478, column: 15, scope: !14054)
!14066 = !DILocation(line: 1478, column: 13, scope: !14054)
!14067 = !DILocation(line: 1479, column: 14, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14054, file: !919, line: 1479, column: 13)
!14069 = !DILocation(line: 1479, column: 13, scope: !14054)
!14070 = !DILocation(line: 1480, column: 13, scope: !14068)
!14071 = !DILocation(line: 1481, column: 30, scope: !14054)
!14072 = !DILocation(line: 1481, column: 20, scope: !14054)
!14073 = !DILocation(line: 1481, column: 18, scope: !14054)
!14074 = !DILocation(line: 1482, column: 14, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !14054, file: !919, line: 1482, column: 13)
!14076 = !DILocation(line: 1482, column: 13, scope: !14054)
!14077 = !DILocation(line: 1483, column: 13, scope: !14075)
!14078 = !DILocation(line: 1485, column: 37, scope: !14054)
!14079 = !DILocation(line: 1485, column: 18, scope: !14054)
!14080 = !DILocation(line: 1485, column: 16, scope: !14054)
!14081 = !DILocation(line: 1486, column: 14, scope: !14082)
!14082 = distinct !DILexicalBlock(scope: !14054, file: !919, line: 1486, column: 13)
!14083 = !DILocation(line: 1486, column: 13, scope: !14054)
!14084 = !DILocation(line: 1487, column: 61, scope: !14085)
!14085 = distinct !DILexicalBlock(scope: !14082, file: !919, line: 1486, column: 22)
!14086 = !DILocation(line: 1487, column: 13, scope: !14085)
!14087 = !DILocation(line: 1488, column: 13, scope: !14085)
!14088 = !DILocation(line: 1491, column: 41, scope: !14054)
!14089 = !DILocation(line: 1491, column: 46, scope: !14054)
!14090 = !DILocation(line: 1492, column: 41, scope: !14054)
!14091 = !DILocation(line: 1492, column: 46, scope: !14054)
!14092 = !DILocation(line: 1492, column: 67, scope: !14054)
!14093 = !DILocation(line: 1491, column: 24, scope: !14054)
!14094 = !DILocation(line: 1491, column: 9, scope: !14054)
!14095 = !DILocation(line: 1491, column: 14, scope: !14054)
!14096 = !DILocation(line: 1491, column: 22, scope: !14054)
!14097 = !DILocation(line: 1494, column: 14, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14054, file: !919, line: 1494, column: 13)
!14099 = !DILocation(line: 1494, column: 19, scope: !14098)
!14100 = !DILocation(line: 1494, column: 13, scope: !14054)
!14101 = !DILocation(line: 1495, column: 13, scope: !14098)
!14102 = !DILocation(line: 1497, column: 28, scope: !14054)
!14103 = !DILocation(line: 1497, column: 50, scope: !14054)
!14104 = !DILocation(line: 1497, column: 55, scope: !14054)
!14105 = !DILocation(line: 1497, column: 37, scope: !14054)
!14106 = !DILocation(line: 1497, column: 42, scope: !14054)
!14107 = !DILocation(line: 1497, column: 15, scope: !14054)
!14108 = !DILocation(line: 1497, column: 13, scope: !14054)
!14109 = !DILocation(line: 1498, column: 13, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14054, file: !919, line: 1498, column: 13)
!14111 = !DILocation(line: 1498, column: 17, scope: !14110)
!14112 = !DILocation(line: 1498, column: 13, scope: !14054)
!14113 = !DILocation(line: 1499, column: 13, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14110, file: !919, line: 1498, column: 22)
!14115 = !DILocation(line: 1500, column: 13, scope: !14114)
!14116 = !DILocation(line: 1503, column: 9, scope: !14054)
!14117 = !DILocation(line: 1503, column: 14, scope: !14054)
!14118 = !DILocation(line: 1503, column: 34, scope: !14054)
!14119 = !DILocation(line: 1505, column: 13, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !14054, file: !919, line: 1505, column: 13)
!14121 = !DILocation(line: 1505, column: 29, scope: !14120)
!14122 = !DILocation(line: 1505, column: 32, scope: !14123)
!14123 = !DILexicalBlockFile(scope: !14120, file: !919, discriminator: 1)
!14124 = !DILocation(line: 1505, column: 40, scope: !14123)
!14125 = !DILocation(line: 1505, column: 13, scope: !14123)
!14126 = !DILocalVariable(name: "opt", scope: !14127, file: !919, line: 1506, type: !3869)
!14127 = distinct !DILexicalBlock(scope: !14120, file: !919, line: 1505, column: 52)
!14128 = !DILocation(line: 1506, column: 29, scope: !14127)
!14129 = !DILocation(line: 1506, column: 60, scope: !14127)
!14130 = !DILocation(line: 1506, column: 65, scope: !14127)
!14131 = !DILocation(line: 1506, column: 85, scope: !14127)
!14132 = !DILocation(line: 1506, column: 47, scope: !14127)
!14133 = !DILocation(line: 1506, column: 52, scope: !14127)
!14134 = !DILocation(line: 1506, column: 90, scope: !14127)
!14135 = !DILocation(line: 1506, column: 35, scope: !14127)
!14136 = !DILocalVariable(name: "shorthand", scope: !14127, file: !919, line: 1507, type: !14137)
!14137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !982, size: 128, align: 64, elements: !1871)
!14138 = !DILocation(line: 1507, column: 26, scope: !14127)
!14139 = !DILocation(line: 1509, column: 17, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14127, file: !919, line: 1509, column: 17)
!14141 = !DILocation(line: 1509, column: 17, scope: !14127)
!14142 = !DILocation(line: 1510, column: 32, scope: !14140)
!14143 = !DILocation(line: 1510, column: 37, scope: !14140)
!14144 = !DILocation(line: 1510, column: 17, scope: !14140)
!14145 = !DILocation(line: 1510, column: 30, scope: !14140)
!14146 = !DILocation(line: 1512, column: 55, scope: !14127)
!14147 = !DILocation(line: 1512, column: 60, scope: !14127)
!14148 = !DILocation(line: 1512, column: 80, scope: !14127)
!14149 = !DILocation(line: 1512, column: 42, scope: !14127)
!14150 = !DILocation(line: 1512, column: 47, scope: !14127)
!14151 = !DILocation(line: 1512, column: 85, scope: !14127)
!14152 = !DILocation(line: 1512, column: 96, scope: !14127)
!14153 = !DILocation(line: 1512, column: 113, scope: !14127)
!14154 = !DILocation(line: 1512, column: 19, scope: !14127)
!14155 = !DILocation(line: 1512, column: 17, scope: !14127)
!14156 = !DILocation(line: 1513, column: 17, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14127, file: !919, line: 1513, column: 17)
!14158 = !DILocation(line: 1513, column: 21, scope: !14157)
!14159 = !DILocation(line: 1513, column: 17, scope: !14127)
!14160 = !DILocation(line: 1514, column: 84, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14157, file: !919, line: 1513, column: 26)
!14162 = !DILocation(line: 1514, column: 17, scope: !14161)
!14163 = !DILocation(line: 1515, column: 17, scope: !14161)
!14164 = !DILocation(line: 1517, column: 9, scope: !14127)
!14165 = !DILocation(line: 1518, column: 18, scope: !14054)
!14166 = !DILocation(line: 1518, column: 9, scope: !14054)
!14167 = !DILocation(line: 1520, column: 14, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14054, file: !919, line: 1520, column: 13)
!14169 = !DILocation(line: 1520, column: 13, scope: !14168)
!14170 = !DILocation(line: 1520, column: 13, scope: !14054)
!14171 = !DILocation(line: 1521, column: 17, scope: !14168)
!14172 = !DILocation(line: 1521, column: 13, scope: !14168)
!14173 = !DILocation(line: 1474, column: 5, scope: !14174)
!14174 = !DILexicalBlockFile(scope: !13383, file: !919, discriminator: 4)
!14175 = distinct !{!14175, !14043}
!14176 = !DILocalVariable(name: "i", scope: !14177, file: !919, line: 1524, type: !998)
!14177 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1524, column: 5)
!14178 = !DILocation(line: 1524, column: 11, scope: !14177)
!14179 = !DILocalVariable(name: "ret", scope: !14177, file: !919, line: 1524, type: !998)
!14180 = !DILocation(line: 1524, column: 14, scope: !14177)
!14181 = !DILocation(line: 1524, column: 26, scope: !14182)
!14182 = distinct !DILexicalBlock(scope: !14177, file: !919, line: 1524, column: 19)
!14183 = !DILocation(line: 1524, column: 24, scope: !14182)
!14184 = !DILocation(line: 1524, column: 31, scope: !14185)
!14185 = !DILexicalBlockFile(scope: !14186, file: !919, discriminator: 1)
!14186 = distinct !DILexicalBlock(scope: !14182, file: !919, line: 1524, column: 19)
!14187 = !DILocation(line: 1524, column: 35, scope: !14185)
!14188 = !DILocation(line: 1524, column: 38, scope: !14185)
!14189 = !DILocation(line: 1524, column: 33, scope: !14185)
!14190 = !DILocation(line: 1524, column: 19, scope: !14185)
!14191 = !DILocalVariable(name: "spec", scope: !14192, file: !919, line: 1524, type: !1105)
!14192 = distinct !DILexicalBlock(scope: !14186, file: !919, line: 1524, column: 58)
!14193 = !DILocation(line: 1524, column: 66, scope: !14192)
!14194 = !DILocation(line: 1524, column: 87, scope: !14195)
!14195 = !DILexicalBlockFile(scope: !14192, file: !919, discriminator: 2)
!14196 = !DILocation(line: 1524, column: 73, scope: !14195)
!14197 = !DILocation(line: 1524, column: 76, scope: !14195)
!14198 = !DILocation(line: 1524, column: 90, scope: !14195)
!14199 = !DILocation(line: 1524, column: 66, scope: !14195)
!14200 = !DILocation(line: 1524, column: 135, scope: !14195)
!14201 = !DILocation(line: 1524, column: 139, scope: !14195)
!14202 = !DILocation(line: 1524, column: 143, scope: !14195)
!14203 = !DILocation(line: 1524, column: 112, scope: !14195)
!14204 = !DILocation(line: 1524, column: 110, scope: !14195)
!14205 = !DILocation(line: 1524, column: 150, scope: !14195)
!14206 = !DILocation(line: 1524, column: 105, scope: !14195)
!14207 = !DILocation(line: 1524, column: 181, scope: !14208)
!14208 = !DILexicalBlockFile(scope: !14209, file: !919, discriminator: 3)
!14209 = distinct !DILexicalBlock(scope: !14192, file: !919, line: 1524, column: 105)
!14210 = !DILocation(line: 1524, column: 167, scope: !14208)
!14211 = !DILocation(line: 1524, column: 170, scope: !14208)
!14212 = !DILocation(line: 1524, column: 184, scope: !14208)
!14213 = !DILocation(line: 1524, column: 186, scope: !14208)
!14214 = !DILocation(line: 1524, column: 165, scope: !14208)
!14215 = !DILocation(line: 1524, column: 155, scope: !14208)
!14216 = !DILocation(line: 1524, column: 200, scope: !14217)
!14217 = !DILexicalBlockFile(scope: !14218, file: !919, discriminator: 4)
!14218 = distinct !DILexicalBlock(scope: !14209, file: !919, line: 1524, column: 200)
!14219 = !DILocation(line: 1524, column: 204, scope: !14217)
!14220 = !DILocation(line: 1524, column: 209, scope: !14221)
!14221 = !DILexicalBlockFile(scope: !14218, file: !919, discriminator: 5)
!14222 = !DILocation(line: 1524, column: 226, scope: !14223)
!14223 = !DILexicalBlockFile(scope: !14192, file: !919, discriminator: 6)
!14224 = !DILocation(line: 1524, column: 54, scope: !14225)
!14225 = !DILexicalBlockFile(scope: !14186, file: !919, discriminator: 7)
!14226 = !DILocation(line: 1524, column: 19, scope: !14225)
!14227 = distinct !{!14227, !14228}
!14228 = !DILocation(line: 1524, column: 19, scope: !14177)
!14229 = !DILocation(line: 1525, column: 9, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1525, column: 9)
!14231 = !DILocation(line: 1525, column: 9, scope: !13383)
!14232 = !DILocalVariable(name: "tag", scope: !14233, file: !919, line: 1526, type: !1338)
!14233 = distinct !DILexicalBlock(scope: !14230, file: !919, line: 1525, column: 20)
!14234 = !DILocation(line: 1526, column: 18, scope: !14233)
!14235 = !DILocation(line: 1526, column: 31, scope: !14233)
!14236 = !DILocation(line: 1526, column: 24, scope: !14233)
!14237 = !DILocation(line: 1527, column: 14, scope: !14238)
!14238 = distinct !DILexicalBlock(scope: !14233, file: !919, line: 1527, column: 13)
!14239 = !DILocation(line: 1527, column: 13, scope: !14238)
!14240 = !DILocation(line: 1527, column: 13, scope: !14233)
!14241 = !DILocation(line: 1528, column: 51, scope: !14238)
!14242 = !DILocation(line: 1528, column: 64, scope: !14238)
!14243 = !DILocation(line: 1528, column: 17, scope: !14238)
!14244 = !DILocation(line: 1528, column: 13, scope: !14238)
!14245 = !DILocation(line: 1530, column: 35, scope: !14233)
!14246 = !DILocation(line: 1530, column: 9, scope: !14233)
!14247 = !DILocation(line: 1530, column: 14, scope: !14233)
!14248 = !DILocation(line: 1530, column: 23, scope: !14233)
!14249 = !DILocation(line: 1530, column: 33, scope: !14233)
!14250 = !DILocation(line: 1529, column: 9, scope: !14233)
!14251 = !DILocation(line: 1529, column: 14, scope: !14233)
!14252 = !DILocation(line: 1529, column: 18, scope: !14233)
!14253 = !DILocation(line: 1529, column: 28, scope: !14233)
!14254 = !DILocation(line: 1529, column: 38, scope: !14233)
!14255 = !DILocation(line: 1531, column: 5, scope: !14233)
!14256 = !DILocalVariable(name: "i", scope: !14257, file: !919, line: 1533, type: !998)
!14257 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1533, column: 5)
!14258 = !DILocation(line: 1533, column: 11, scope: !14257)
!14259 = !DILocalVariable(name: "ret", scope: !14257, file: !919, line: 1533, type: !998)
!14260 = !DILocation(line: 1533, column: 14, scope: !14257)
!14261 = !DILocation(line: 1533, column: 26, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14257, file: !919, line: 1533, column: 19)
!14263 = !DILocation(line: 1533, column: 24, scope: !14262)
!14264 = !DILocation(line: 1533, column: 31, scope: !14265)
!14265 = !DILexicalBlockFile(scope: !14266, file: !919, discriminator: 1)
!14266 = distinct !DILexicalBlock(scope: !14262, file: !919, line: 1533, column: 19)
!14267 = !DILocation(line: 1533, column: 35, scope: !14265)
!14268 = !DILocation(line: 1533, column: 38, scope: !14265)
!14269 = !DILocation(line: 1533, column: 33, scope: !14265)
!14270 = !DILocation(line: 1533, column: 19, scope: !14265)
!14271 = !DILocalVariable(name: "spec", scope: !14272, file: !919, line: 1533, type: !1105)
!14272 = distinct !DILexicalBlock(scope: !14266, file: !919, line: 1533, column: 54)
!14273 = !DILocation(line: 1533, column: 62, scope: !14272)
!14274 = !DILocation(line: 1533, column: 79, scope: !14275)
!14275 = !DILexicalBlockFile(scope: !14272, file: !919, discriminator: 2)
!14276 = !DILocation(line: 1533, column: 69, scope: !14275)
!14277 = !DILocation(line: 1533, column: 72, scope: !14275)
!14278 = !DILocation(line: 1533, column: 82, scope: !14275)
!14279 = !DILocation(line: 1533, column: 62, scope: !14275)
!14280 = !DILocation(line: 1533, column: 127, scope: !14275)
!14281 = !DILocation(line: 1533, column: 131, scope: !14275)
!14282 = !DILocation(line: 1533, column: 135, scope: !14275)
!14283 = !DILocation(line: 1533, column: 104, scope: !14275)
!14284 = !DILocation(line: 1533, column: 102, scope: !14275)
!14285 = !DILocation(line: 1533, column: 142, scope: !14275)
!14286 = !DILocation(line: 1533, column: 97, scope: !14275)
!14287 = !DILocation(line: 1533, column: 166, scope: !14288)
!14288 = !DILexicalBlockFile(scope: !14289, file: !919, discriminator: 3)
!14289 = distinct !DILexicalBlock(scope: !14272, file: !919, line: 1533, column: 97)
!14290 = !DILocation(line: 1533, column: 156, scope: !14288)
!14291 = !DILocation(line: 1533, column: 159, scope: !14288)
!14292 = !DILocation(line: 1533, column: 169, scope: !14288)
!14293 = !DILocation(line: 1533, column: 171, scope: !14288)
!14294 = !DILocation(line: 1533, column: 154, scope: !14288)
!14295 = !DILocation(line: 1533, column: 147, scope: !14288)
!14296 = !DILocation(line: 1533, column: 185, scope: !14297)
!14297 = !DILexicalBlockFile(scope: !14298, file: !919, discriminator: 4)
!14298 = distinct !DILexicalBlock(scope: !14289, file: !919, line: 1533, column: 185)
!14299 = !DILocation(line: 1533, column: 189, scope: !14297)
!14300 = !DILocation(line: 1533, column: 194, scope: !14301)
!14301 = !DILexicalBlockFile(scope: !14298, file: !919, discriminator: 5)
!14302 = !DILocation(line: 1533, column: 211, scope: !14303)
!14303 = !DILexicalBlockFile(scope: !14272, file: !919, discriminator: 6)
!14304 = !DILocation(line: 1533, column: 50, scope: !14305)
!14305 = !DILexicalBlockFile(scope: !14266, file: !919, discriminator: 7)
!14306 = !DILocation(line: 1533, column: 19, scope: !14305)
!14307 = distinct !{!14307, !14308}
!14308 = !DILocation(line: 1533, column: 19, scope: !14257)
!14309 = !DILocation(line: 1534, column: 9, scope: !14310)
!14310 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1534, column: 9)
!14311 = !DILocation(line: 1534, column: 16, scope: !14310)
!14312 = !DILocation(line: 1534, column: 9, scope: !13383)
!14313 = !DILocation(line: 1535, column: 9, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14310, file: !919, line: 1534, column: 22)
!14315 = !DILocation(line: 1535, column: 14, scope: !14314)
!14316 = !DILocation(line: 1535, column: 23, scope: !14314)
!14317 = !DILocation(line: 1535, column: 29, scope: !14314)
!14318 = !DILocation(line: 1536, column: 46, scope: !14314)
!14319 = !DILocation(line: 1536, column: 44, scope: !14314)
!14320 = !DILocation(line: 1536, column: 40, scope: !14314)
!14321 = !DILocation(line: 1536, column: 9, scope: !14314)
!14322 = !DILocation(line: 1536, column: 14, scope: !14314)
!14323 = !DILocation(line: 1536, column: 23, scope: !14314)
!14324 = !DILocation(line: 1536, column: 38, scope: !14314)
!14325 = !DILocation(line: 1537, column: 5, scope: !14314)
!14326 = !DILocalVariable(name: "i", scope: !14327, file: !919, line: 1539, type: !998)
!14327 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1539, column: 5)
!14328 = !DILocation(line: 1539, column: 11, scope: !14327)
!14329 = !DILocalVariable(name: "ret", scope: !14327, file: !919, line: 1539, type: !998)
!14330 = !DILocation(line: 1539, column: 14, scope: !14327)
!14331 = !DILocation(line: 1539, column: 26, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14327, file: !919, line: 1539, column: 19)
!14333 = !DILocation(line: 1539, column: 24, scope: !14332)
!14334 = !DILocation(line: 1539, column: 31, scope: !14335)
!14335 = !DILexicalBlockFile(scope: !14336, file: !919, discriminator: 1)
!14336 = distinct !DILexicalBlock(scope: !14332, file: !919, line: 1539, column: 19)
!14337 = !DILocation(line: 1539, column: 35, scope: !14335)
!14338 = !DILocation(line: 1539, column: 38, scope: !14335)
!14339 = !DILocation(line: 1539, column: 33, scope: !14335)
!14340 = !DILocation(line: 1539, column: 19, scope: !14335)
!14341 = !DILocalVariable(name: "spec", scope: !14342, file: !919, line: 1539, type: !1105)
!14342 = distinct !DILexicalBlock(scope: !14336, file: !919, line: 1539, column: 59)
!14343 = !DILocation(line: 1539, column: 67, scope: !14342)
!14344 = !DILocation(line: 1539, column: 89, scope: !14345)
!14345 = !DILexicalBlockFile(scope: !14342, file: !919, discriminator: 2)
!14346 = !DILocation(line: 1539, column: 74, scope: !14345)
!14347 = !DILocation(line: 1539, column: 77, scope: !14345)
!14348 = !DILocation(line: 1539, column: 92, scope: !14345)
!14349 = !DILocation(line: 1539, column: 67, scope: !14345)
!14350 = !DILocation(line: 1539, column: 137, scope: !14345)
!14351 = !DILocation(line: 1539, column: 141, scope: !14345)
!14352 = !DILocation(line: 1539, column: 145, scope: !14345)
!14353 = !DILocation(line: 1539, column: 114, scope: !14345)
!14354 = !DILocation(line: 1539, column: 112, scope: !14345)
!14355 = !DILocation(line: 1539, column: 152, scope: !14345)
!14356 = !DILocation(line: 1539, column: 107, scope: !14345)
!14357 = !DILocation(line: 1539, column: 191, scope: !14358)
!14358 = !DILexicalBlockFile(scope: !14359, file: !919, discriminator: 3)
!14359 = distinct !DILexicalBlock(scope: !14342, file: !919, line: 1539, column: 107)
!14360 = !DILocation(line: 1539, column: 176, scope: !14358)
!14361 = !DILocation(line: 1539, column: 179, scope: !14358)
!14362 = !DILocation(line: 1539, column: 194, scope: !14358)
!14363 = !DILocation(line: 1539, column: 196, scope: !14358)
!14364 = !DILocation(line: 1539, column: 157, scope: !14358)
!14365 = !DILocation(line: 1539, column: 162, scope: !14358)
!14366 = !DILocation(line: 1539, column: 174, scope: !14358)
!14367 = !DILocation(line: 1539, column: 210, scope: !14368)
!14368 = !DILexicalBlockFile(scope: !14369, file: !919, discriminator: 4)
!14369 = distinct !DILexicalBlock(scope: !14359, file: !919, line: 1539, column: 210)
!14370 = !DILocation(line: 1539, column: 214, scope: !14368)
!14371 = !DILocation(line: 1539, column: 219, scope: !14372)
!14372 = !DILexicalBlockFile(scope: !14369, file: !919, discriminator: 5)
!14373 = !DILocation(line: 1539, column: 236, scope: !14374)
!14374 = !DILexicalBlockFile(scope: !14342, file: !919, discriminator: 6)
!14375 = !DILocation(line: 1539, column: 55, scope: !14376)
!14376 = !DILexicalBlockFile(scope: !14336, file: !919, discriminator: 7)
!14377 = !DILocation(line: 1539, column: 19, scope: !14376)
!14378 = distinct !{!14378, !14379}
!14379 = !DILocation(line: 1539, column: 19, scope: !14327)
!14380 = !DILocation(line: 1540, column: 34, scope: !13383)
!14381 = !DILocation(line: 1540, column: 39, scope: !13383)
!14382 = !DILocation(line: 1540, column: 24, scope: !13383)
!14383 = !DILocation(line: 1540, column: 5, scope: !13383)
!14384 = !DILocation(line: 1540, column: 10, scope: !13383)
!14385 = !DILocation(line: 1540, column: 22, scope: !13383)
!14386 = !DILocation(line: 1542, column: 5, scope: !13383)
!14387 = !DILocation(line: 1542, column: 10, scope: !13383)
!14388 = !DILocation(line: 1542, column: 32, scope: !13383)
!14389 = !DILocalVariable(name: "i", scope: !14390, file: !919, line: 1543, type: !998)
!14390 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1543, column: 5)
!14391 = !DILocation(line: 1543, column: 11, scope: !14390)
!14392 = !DILocalVariable(name: "ret", scope: !14390, file: !919, line: 1543, type: !998)
!14393 = !DILocation(line: 1543, column: 14, scope: !14390)
!14394 = !DILocation(line: 1543, column: 26, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14390, file: !919, line: 1543, column: 19)
!14396 = !DILocation(line: 1543, column: 24, scope: !14395)
!14397 = !DILocation(line: 1543, column: 31, scope: !14398)
!14398 = !DILexicalBlockFile(scope: !14399, file: !919, discriminator: 1)
!14399 = distinct !DILexicalBlock(scope: !14395, file: !919, line: 1543, column: 19)
!14400 = !DILocation(line: 1543, column: 35, scope: !14398)
!14401 = !DILocation(line: 1543, column: 38, scope: !14398)
!14402 = !DILocation(line: 1543, column: 33, scope: !14398)
!14403 = !DILocation(line: 1543, column: 19, scope: !14398)
!14404 = !DILocalVariable(name: "spec", scope: !14405, file: !919, line: 1543, type: !1105)
!14405 = distinct !DILexicalBlock(scope: !14399, file: !919, line: 1543, column: 69)
!14406 = !DILocation(line: 1543, column: 77, scope: !14405)
!14407 = !DILocation(line: 1543, column: 109, scope: !14408)
!14408 = !DILexicalBlockFile(scope: !14405, file: !919, discriminator: 2)
!14409 = !DILocation(line: 1543, column: 84, scope: !14408)
!14410 = !DILocation(line: 1543, column: 87, scope: !14408)
!14411 = !DILocation(line: 1543, column: 112, scope: !14408)
!14412 = !DILocation(line: 1543, column: 77, scope: !14408)
!14413 = !DILocation(line: 1543, column: 157, scope: !14408)
!14414 = !DILocation(line: 1543, column: 161, scope: !14408)
!14415 = !DILocation(line: 1543, column: 165, scope: !14408)
!14416 = !DILocation(line: 1543, column: 134, scope: !14408)
!14417 = !DILocation(line: 1543, column: 132, scope: !14408)
!14418 = !DILocation(line: 1543, column: 172, scope: !14408)
!14419 = !DILocation(line: 1543, column: 127, scope: !14408)
!14420 = !DILocation(line: 1543, column: 231, scope: !14421)
!14421 = !DILexicalBlockFile(scope: !14422, file: !919, discriminator: 3)
!14422 = distinct !DILexicalBlock(scope: !14405, file: !919, line: 1543, column: 127)
!14423 = !DILocation(line: 1543, column: 206, scope: !14421)
!14424 = !DILocation(line: 1543, column: 209, scope: !14421)
!14425 = !DILocation(line: 1543, column: 234, scope: !14421)
!14426 = !DILocation(line: 1543, column: 236, scope: !14421)
!14427 = !DILocation(line: 1543, column: 177, scope: !14421)
!14428 = !DILocation(line: 1543, column: 182, scope: !14421)
!14429 = !DILocation(line: 1543, column: 204, scope: !14421)
!14430 = !DILocation(line: 1543, column: 248, scope: !14431)
!14431 = !DILexicalBlockFile(scope: !14432, file: !919, discriminator: 4)
!14432 = distinct !DILexicalBlock(scope: !14422, file: !919, line: 1543, column: 248)
!14433 = !DILocation(line: 1543, column: 252, scope: !14431)
!14434 = !DILocation(line: 1543, column: 257, scope: !14435)
!14435 = !DILexicalBlockFile(scope: !14432, file: !919, discriminator: 5)
!14436 = !DILocation(line: 1543, column: 274, scope: !14437)
!14437 = !DILexicalBlockFile(scope: !14405, file: !919, discriminator: 6)
!14438 = !DILocation(line: 1543, column: 65, scope: !14439)
!14439 = !DILexicalBlockFile(scope: !14399, file: !919, discriminator: 7)
!14440 = !DILocation(line: 1543, column: 19, scope: !14439)
!14441 = distinct !{!14441, !14442}
!14442 = !DILocation(line: 1543, column: 19, scope: !14390)
!14443 = !DILocation(line: 1544, column: 5, scope: !13383)
!14444 = !DILocation(line: 1544, column: 10, scope: !13383)
!14445 = !DILocation(line: 1544, column: 32, scope: !13383)
!14446 = !DILocation(line: 1546, column: 9, scope: !14447)
!14447 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1546, column: 9)
!14448 = !DILocation(line: 1546, column: 13, scope: !14447)
!14449 = !DILocation(line: 1546, column: 22, scope: !14447)
!14450 = !DILocation(line: 1546, column: 28, scope: !14447)
!14451 = !DILocation(line: 1546, column: 9, scope: !13383)
!14452 = !DILocation(line: 1547, column: 9, scope: !14447)
!14453 = !DILocation(line: 1547, column: 14, scope: !14447)
!14454 = !DILocation(line: 1547, column: 23, scope: !14447)
!14455 = !DILocation(line: 1547, column: 29, scope: !14447)
!14456 = !DILocation(line: 1549, column: 19, scope: !13383)
!14457 = !DILocation(line: 1549, column: 24, scope: !13383)
!14458 = !DILocation(line: 1549, column: 34, scope: !13383)
!14459 = !DILocation(line: 1549, column: 37, scope: !13383)
!14460 = !DILocation(line: 1549, column: 40, scope: !13383)
!14461 = !DILocation(line: 1549, column: 5, scope: !13383)
!14462 = !DILocation(line: 1551, column: 19, scope: !13383)
!14463 = !DILocation(line: 1551, column: 24, scope: !13383)
!14464 = !DILocation(line: 1551, column: 34, scope: !13383)
!14465 = !DILocation(line: 1551, column: 37, scope: !13383)
!14466 = !DILocation(line: 1551, column: 40, scope: !13383)
!14467 = !DILocation(line: 1551, column: 5, scope: !13383)
!14468 = !DILocation(line: 1552, column: 9, scope: !14469)
!14469 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1552, column: 9)
!14470 = !DILocation(line: 1552, column: 14, scope: !14469)
!14471 = !DILocation(line: 1552, column: 18, scope: !14469)
!14472 = !DILocation(line: 1552, column: 50, scope: !14473)
!14473 = !DILexicalBlockFile(scope: !14469, file: !919, discriminator: 1)
!14474 = !DILocation(line: 1552, column: 55, scope: !14473)
!14475 = !DILocation(line: 1552, column: 60, scope: !14473)
!14476 = !DILocation(line: 1552, column: 21, scope: !14473)
!14477 = !DILocation(line: 1552, column: 64, scope: !14473)
!14478 = !DILocation(line: 1552, column: 9, scope: !14473)
!14479 = !DILocation(line: 1553, column: 22, scope: !14469)
!14480 = !DILocation(line: 1553, column: 27, scope: !14469)
!14481 = !DILocation(line: 1553, column: 9, scope: !14469)
!14482 = !DILocation(line: 1555, column: 19, scope: !13383)
!14483 = !DILocation(line: 1555, column: 24, scope: !13383)
!14484 = !DILocation(line: 1555, column: 39, scope: !13383)
!14485 = !DILocation(line: 1555, column: 42, scope: !13383)
!14486 = !DILocation(line: 1555, column: 45, scope: !13383)
!14487 = !DILocation(line: 1555, column: 5, scope: !13383)
!14488 = !DILocation(line: 1557, column: 25, scope: !13383)
!14489 = !DILocation(line: 1557, column: 5, scope: !13383)
!14490 = !DILocation(line: 1557, column: 10, scope: !13383)
!14491 = !DILocation(line: 1557, column: 23, scope: !13383)
!14492 = !DILocation(line: 1558, column: 9, scope: !14493)
!14493 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1558, column: 9)
!14494 = !DILocation(line: 1558, column: 22, scope: !14493)
!14495 = !DILocation(line: 1558, column: 9, scope: !13383)
!14496 = !DILocation(line: 1559, column: 39, scope: !14497)
!14497 = distinct !DILexicalBlock(scope: !14493, file: !919, line: 1558, column: 28)
!14498 = !DILocation(line: 1559, column: 25, scope: !14497)
!14499 = !DILocation(line: 1559, column: 9, scope: !14497)
!14500 = !DILocation(line: 1559, column: 14, scope: !14497)
!14501 = !DILocation(line: 1559, column: 23, scope: !14497)
!14502 = !DILocation(line: 1560, column: 23, scope: !14497)
!14503 = !DILocation(line: 1560, column: 9, scope: !14497)
!14504 = !DILocation(line: 1560, column: 38, scope: !14497)
!14505 = !DILocation(line: 1560, column: 46, scope: !14497)
!14506 = !DILocation(line: 1561, column: 66, scope: !14497)
!14507 = !DILocation(line: 1561, column: 52, scope: !14497)
!14508 = !DILocation(line: 1561, column: 81, scope: !14497)
!14509 = !DILocation(line: 1561, column: 23, scope: !14497)
!14510 = !DILocation(line: 1561, column: 9, scope: !14497)
!14511 = !DILocation(line: 1561, column: 38, scope: !14497)
!14512 = !DILocation(line: 1561, column: 42, scope: !14497)
!14513 = !DILocation(line: 1561, column: 50, scope: !14497)
!14514 = !DILocation(line: 1562, column: 5, scope: !14497)
!14515 = !DILocation(line: 1563, column: 5, scope: !13383)
!14516 = !DILocation(line: 1563, column: 10, scope: !13383)
!14517 = !DILocation(line: 1563, column: 23, scope: !13383)
!14518 = !DILocation(line: 1565, column: 25, scope: !13383)
!14519 = !DILocation(line: 1565, column: 5, scope: !13383)
!14520 = !DILocation(line: 1565, column: 10, scope: !13383)
!14521 = !DILocation(line: 1565, column: 23, scope: !13383)
!14522 = !DILocation(line: 1566, column: 10, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !13383, file: !919, line: 1566, column: 9)
!14524 = !DILocation(line: 1566, column: 15, scope: !14523)
!14525 = !DILocation(line: 1566, column: 9, scope: !13383)
!14526 = !DILocation(line: 1567, column: 9, scope: !14523)
!14527 = !DILocation(line: 1569, column: 12, scope: !13383)
!14528 = !DILocation(line: 1569, column: 5, scope: !13383)
!14529 = distinct !DISubprogram(name: "parse_matrix_coeffs", scope: !919, file: !919, line: 1572, type: !14530, isLocal: true, isDefinition: true, scopeLine: 1573, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!14530 = !DISubroutineType(types: !14531)
!14531 = !{null, !1588, !982}
!14532 = !DILocalVariable(name: "dest", arg: 1, scope: !14529, file: !919, line: 1572, type: !1588)
!14533 = !DILocation(line: 1572, column: 43, scope: !14529)
!14534 = !DILocalVariable(name: "str", arg: 2, scope: !14529, file: !919, line: 1572, type: !982)
!14535 = !DILocation(line: 1572, column: 61, scope: !14529)
!14536 = !DILocalVariable(name: "i", scope: !14529, file: !919, line: 1574, type: !998)
!14537 = !DILocation(line: 1574, column: 9, scope: !14529)
!14538 = !DILocalVariable(name: "p", scope: !14529, file: !919, line: 1575, type: !982)
!14539 = !DILocation(line: 1575, column: 17, scope: !14529)
!14540 = !DILocation(line: 1575, column: 21, scope: !14529)
!14541 = !DILocation(line: 1576, column: 12, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14529, file: !919, line: 1576, column: 5)
!14543 = !DILocation(line: 1576, column: 10, scope: !14542)
!14544 = !DILocation(line: 1577, column: 24, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14546, file: !919, line: 1576, column: 23)
!14546 = distinct !DILexicalBlock(scope: !14542, file: !919, line: 1576, column: 5)
!14547 = !DILocation(line: 1577, column: 19, scope: !14545)
!14548 = !DILocation(line: 1577, column: 14, scope: !14545)
!14549 = !DILocation(line: 1577, column: 9, scope: !14545)
!14550 = !DILocation(line: 1577, column: 17, scope: !14545)
!14551 = !DILocation(line: 1578, column: 13, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14545, file: !919, line: 1578, column: 13)
!14553 = !DILocation(line: 1578, column: 15, scope: !14552)
!14554 = !DILocation(line: 1578, column: 13, scope: !14545)
!14555 = !DILocation(line: 1579, column: 13, scope: !14552)
!14556 = !DILocation(line: 1580, column: 20, scope: !14545)
!14557 = !DILocation(line: 1580, column: 13, scope: !14545)
!14558 = !DILocation(line: 1580, column: 11, scope: !14545)
!14559 = !DILocation(line: 1581, column: 14, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !14545, file: !919, line: 1581, column: 13)
!14561 = !DILocation(line: 1581, column: 13, scope: !14545)
!14562 = !DILocation(line: 1582, column: 75, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14560, file: !919, line: 1581, column: 17)
!14564 = !DILocation(line: 1582, column: 80, scope: !14563)
!14565 = !DILocation(line: 1582, column: 13, scope: !14563)
!14566 = !DILocation(line: 1583, column: 13, scope: !14563)
!14567 = !DILocation(line: 1585, column: 10, scope: !14545)
!14568 = !DILocation(line: 1586, column: 5, scope: !14545)
!14569 = !DILocation(line: 1576, column: 19, scope: !14570)
!14570 = !DILexicalBlockFile(scope: !14546, file: !919, discriminator: 1)
!14571 = !DILocation(line: 1576, column: 5, scope: !14570)
!14572 = distinct !{!14572, !14573}
!14573 = !DILocation(line: 1576, column: 5, scope: !14529)
!14574 = !DILocation(line: 1587, column: 1, scope: !14529)
!14575 = distinct !DISubprogram(name: "read_file", scope: !919, file: !919, line: 1590, type: !14576, isLocal: true, isDefinition: true, scopeLine: 1591, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!14576 = !DISubroutineType(types: !14577)
!14577 = !{!1179, !982}
!14578 = !DILocalVariable(name: "filename", arg: 1, scope: !14575, file: !919, line: 1590, type: !982)
!14579 = !DILocation(line: 1590, column: 39, scope: !14575)
!14580 = !DILocalVariable(name: "pb", scope: !14575, file: !919, line: 1592, type: !2496)
!14581 = !DILocation(line: 1592, column: 18, scope: !14575)
!14582 = !DILocalVariable(name: "dyn_buf", scope: !14575, file: !919, line: 1593, type: !2496)
!14583 = !DILocation(line: 1593, column: 18, scope: !14575)
!14584 = !DILocalVariable(name: "ret", scope: !14575, file: !919, line: 1594, type: !998)
!14585 = !DILocation(line: 1594, column: 9, scope: !14575)
!14586 = !DILocation(line: 1594, column: 30, scope: !14575)
!14587 = !DILocation(line: 1594, column: 15, scope: !14575)
!14588 = !DILocalVariable(name: "buf", scope: !14575, file: !919, line: 1595, type: !14589)
!14589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1180, size: 8192, align: 8, elements: !2772)
!14590 = !DILocation(line: 1595, column: 13, scope: !14575)
!14591 = !DILocalVariable(name: "str", scope: !14575, file: !919, line: 1595, type: !1179)
!14592 = !DILocation(line: 1595, column: 25, scope: !14575)
!14593 = !DILocation(line: 1597, column: 9, scope: !14594)
!14594 = distinct !DILexicalBlock(scope: !14575, file: !919, line: 1597, column: 9)
!14595 = !DILocation(line: 1597, column: 13, scope: !14594)
!14596 = !DILocation(line: 1597, column: 9, scope: !14575)
!14597 = !DILocation(line: 1598, column: 53, scope: !14598)
!14598 = distinct !DILexicalBlock(scope: !14594, file: !919, line: 1597, column: 18)
!14599 = !DILocation(line: 1598, column: 9, scope: !14598)
!14600 = !DILocation(line: 1599, column: 9, scope: !14598)
!14601 = !DILocation(line: 1602, column: 11, scope: !14575)
!14602 = !DILocation(line: 1602, column: 9, scope: !14575)
!14603 = !DILocation(line: 1603, column: 9, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14575, file: !919, line: 1603, column: 9)
!14605 = !DILocation(line: 1603, column: 13, scope: !14604)
!14606 = !DILocation(line: 1603, column: 9, scope: !14575)
!14607 = !DILocation(line: 1604, column: 9, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14604, file: !919, line: 1603, column: 18)
!14609 = !DILocation(line: 1605, column: 9, scope: !14608)
!14610 = !DILocation(line: 1607, column: 5, scope: !14575)
!14611 = !DILocation(line: 1607, column: 29, scope: !14612)
!14612 = !DILexicalBlockFile(scope: !14575, file: !919, discriminator: 1)
!14613 = !DILocation(line: 1607, column: 33, scope: !14612)
!14614 = !DILocation(line: 1607, column: 19, scope: !14612)
!14615 = !DILocation(line: 1607, column: 17, scope: !14612)
!14616 = !DILocation(line: 1607, column: 52, scope: !14612)
!14617 = !DILocation(line: 1607, column: 5, scope: !14612)
!14618 = !DILocation(line: 1608, column: 20, scope: !14575)
!14619 = !DILocation(line: 1608, column: 29, scope: !14575)
!14620 = !DILocation(line: 1608, column: 34, scope: !14575)
!14621 = !DILocation(line: 1608, column: 9, scope: !14575)
!14622 = !DILocation(line: 1607, column: 5, scope: !14623)
!14623 = !DILexicalBlockFile(scope: !14575, file: !919, discriminator: 2)
!14624 = distinct !{!14624, !14610}
!14625 = !DILocation(line: 1609, column: 13, scope: !14575)
!14626 = !DILocation(line: 1609, column: 5, scope: !14575)
!14627 = !DILocation(line: 1610, column: 5, scope: !14575)
!14628 = !DILocation(line: 1612, column: 30, scope: !14575)
!14629 = !DILocation(line: 1612, column: 11, scope: !14575)
!14630 = !DILocation(line: 1612, column: 9, scope: !14575)
!14631 = !DILocation(line: 1613, column: 9, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14575, file: !919, line: 1613, column: 9)
!14633 = !DILocation(line: 1613, column: 13, scope: !14632)
!14634 = !DILocation(line: 1613, column: 9, scope: !14575)
!14635 = !DILocation(line: 1614, column: 9, scope: !14632)
!14636 = !DILocation(line: 1615, column: 12, scope: !14575)
!14637 = !DILocation(line: 1615, column: 5, scope: !14575)
!14638 = !DILocation(line: 1616, column: 1, scope: !14575)
!14639 = distinct !DISubprogram(name: "get_ost_filters", scope: !919, file: !919, line: 1618, type: !14640, isLocal: true, isDefinition: true, scopeLine: 1620, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!14640 = !DISubroutineType(types: !14641)
!14641 = !{!1105, !2116, !2364, !4056}
!14642 = !DILocalVariable(name: "o", arg: 1, scope: !14639, file: !919, line: 1618, type: !2116)
!14643 = !DILocation(line: 1618, column: 46, scope: !14639)
!14644 = !DILocalVariable(name: "oc", arg: 2, scope: !14639, file: !919, line: 1618, type: !2364)
!14645 = !DILocation(line: 1618, column: 66, scope: !14639)
!14646 = !DILocalVariable(name: "ost", arg: 3, scope: !14639, file: !919, line: 1619, type: !4056)
!14647 = !DILocation(line: 1619, column: 44, scope: !14639)
!14648 = !DILocalVariable(name: "st", scope: !14639, file: !919, line: 1621, type: !2562)
!14649 = !DILocation(line: 1621, column: 15, scope: !14639)
!14650 = !DILocation(line: 1621, column: 20, scope: !14639)
!14651 = !DILocation(line: 1621, column: 25, scope: !14639)
!14652 = !DILocation(line: 1623, column: 9, scope: !14653)
!14653 = distinct !DILexicalBlock(scope: !14639, file: !919, line: 1623, column: 9)
!14654 = !DILocation(line: 1623, column: 14, scope: !14653)
!14655 = !DILocation(line: 1623, column: 29, scope: !14653)
!14656 = !DILocation(line: 1623, column: 32, scope: !14657)
!14657 = !DILexicalBlockFile(scope: !14653, file: !919, discriminator: 1)
!14658 = !DILocation(line: 1623, column: 37, scope: !14657)
!14659 = !DILocation(line: 1623, column: 9, scope: !14657)
!14660 = !DILocation(line: 1625, column: 43, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14653, file: !919, line: 1623, column: 46)
!14662 = !DILocation(line: 1625, column: 60, scope: !14661)
!14663 = !DILocation(line: 1625, column: 64, scope: !14661)
!14664 = !DILocation(line: 1624, column: 9, scope: !14661)
!14665 = !DILocation(line: 1626, column: 9, scope: !14661)
!14666 = !DILocation(line: 1629, column: 9, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14639, file: !919, line: 1629, column: 9)
!14668 = !DILocation(line: 1629, column: 14, scope: !14667)
!14669 = !DILocation(line: 1629, column: 9, scope: !14639)
!14670 = !DILocation(line: 1630, column: 26, scope: !14667)
!14671 = !DILocation(line: 1630, column: 31, scope: !14667)
!14672 = !DILocation(line: 1630, column: 16, scope: !14667)
!14673 = !DILocation(line: 1630, column: 9, scope: !14667)
!14674 = !DILocation(line: 1631, column: 14, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14667, file: !919, line: 1631, column: 14)
!14676 = !DILocation(line: 1631, column: 19, scope: !14675)
!14677 = !DILocation(line: 1631, column: 14, scope: !14667)
!14678 = !DILocation(line: 1632, column: 26, scope: !14675)
!14679 = !DILocation(line: 1632, column: 31, scope: !14675)
!14680 = !DILocation(line: 1632, column: 16, scope: !14675)
!14681 = !DILocation(line: 1632, column: 9, scope: !14675)
!14682 = !DILocation(line: 1634, column: 22, scope: !14639)
!14683 = !DILocation(line: 1634, column: 26, scope: !14639)
!14684 = !DILocation(line: 1634, column: 36, scope: !14639)
!14685 = !DILocation(line: 1634, column: 47, scope: !14639)
!14686 = !DILocation(line: 1634, column: 12, scope: !14639)
!14687 = !DILocation(line: 1634, column: 5, scope: !14639)
!14688 = !DILocation(line: 1636, column: 1, scope: !14639)
!14689 = distinct !DISubprogram(name: "check_streamcopy_filters", scope: !919, file: !919, line: 1638, type: !14690, isLocal: true, isDefinition: true, scopeLine: 1640, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!14690 = !DISubroutineType(types: !14691)
!14691 = !{null, !2116, !2364, !14692, !46}
!14692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14693, size: 64, align: 64)
!14693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4057)
!14694 = !DILocalVariable(name: "o", arg: 1, scope: !14689, file: !919, line: 1638, type: !2116)
!14695 = !DILocation(line: 1638, column: 54, scope: !14689)
!14696 = !DILocalVariable(name: "oc", arg: 2, scope: !14689, file: !919, line: 1638, type: !2364)
!14697 = !DILocation(line: 1638, column: 74, scope: !14689)
!14698 = !DILocalVariable(name: "ost", arg: 3, scope: !14689, file: !919, line: 1639, type: !14692)
!14699 = !DILocation(line: 1639, column: 58, scope: !14689)
!14700 = !DILocalVariable(name: "type", arg: 4, scope: !14689, file: !919, line: 1639, type: !46)
!14701 = !DILocation(line: 1639, column: 80, scope: !14689)
!14702 = !DILocation(line: 1641, column: 9, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14689, file: !919, line: 1641, column: 9)
!14704 = !DILocation(line: 1641, column: 14, scope: !14703)
!14705 = !DILocation(line: 1641, column: 29, scope: !14703)
!14706 = !DILocation(line: 1641, column: 32, scope: !14707)
!14707 = !DILexicalBlockFile(scope: !14703, file: !919, discriminator: 1)
!14708 = !DILocation(line: 1641, column: 37, scope: !14707)
!14709 = !DILocation(line: 1641, column: 9, scope: !14707)
!14710 = !DILocation(line: 1645, column: 16, scope: !14711)
!14711 = distinct !DILexicalBlock(scope: !14703, file: !919, line: 1641, column: 46)
!14712 = !DILocation(line: 1645, column: 21, scope: !14711)
!14713 = !DILocation(line: 1646, column: 16, scope: !14711)
!14714 = !DILocation(line: 1646, column: 21, scope: !14711)
!14715 = !DILocation(line: 1646, column: 31, scope: !14716)
!14716 = !DILexicalBlockFile(scope: !14711, file: !919, discriminator: 1)
!14717 = !DILocation(line: 1646, column: 36, scope: !14716)
!14718 = !DILocation(line: 1646, column: 16, scope: !14716)
!14719 = !DILocation(line: 1646, column: 46, scope: !14720)
!14720 = !DILexicalBlockFile(scope: !14711, file: !919, discriminator: 2)
!14721 = !DILocation(line: 1646, column: 51, scope: !14720)
!14722 = !DILocation(line: 1646, column: 16, scope: !14720)
!14723 = !DILocation(line: 1646, column: 16, scope: !14724)
!14724 = !DILexicalBlockFile(scope: !14711, file: !919, discriminator: 3)
!14725 = !DILocation(line: 1647, column: 41, scope: !14711)
!14726 = !DILocation(line: 1647, column: 16, scope: !14711)
!14727 = !DILocation(line: 1647, column: 48, scope: !14711)
!14728 = !DILocation(line: 1647, column: 53, scope: !14711)
!14729 = !DILocation(line: 1647, column: 65, scope: !14711)
!14730 = !DILocation(line: 1647, column: 70, scope: !14711)
!14731 = !DILocation(line: 1642, column: 9, scope: !14711)
!14732 = !DILocation(line: 1648, column: 9, scope: !14711)
!14733 = !DILocation(line: 1650, column: 1, scope: !14689)
!14734 = distinct !DISubprogram(name: "choose_encoder", scope: !919, file: !919, line: 1316, type: !14735, isLocal: true, isDefinition: true, scopeLine: 1317, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!14735 = !DISubroutineType(types: !14736)
!14736 = !{!998, !2116, !2364, !4056}
!14737 = !DILocalVariable(name: "o", arg: 1, scope: !14734, file: !919, line: 1316, type: !2116)
!14738 = !DILocation(line: 1316, column: 43, scope: !14734)
!14739 = !DILocalVariable(name: "s", arg: 2, scope: !14734, file: !919, line: 1316, type: !2364)
!14740 = !DILocation(line: 1316, column: 63, scope: !14734)
!14741 = !DILocalVariable(name: "ost", arg: 3, scope: !14734, file: !919, line: 1316, type: !4056)
!14742 = !DILocation(line: 1316, column: 80, scope: !14734)
!14743 = !DILocalVariable(name: "type", scope: !14734, file: !919, line: 1318, type: !46)
!14744 = !DILocation(line: 1318, column: 22, scope: !14734)
!14745 = !DILocation(line: 1318, column: 29, scope: !14734)
!14746 = !DILocation(line: 1318, column: 34, scope: !14734)
!14747 = !DILocation(line: 1318, column: 38, scope: !14734)
!14748 = !DILocation(line: 1318, column: 48, scope: !14734)
!14749 = !DILocalVariable(name: "codec_name", scope: !14734, file: !919, line: 1319, type: !1105)
!14750 = !DILocation(line: 1319, column: 11, scope: !14734)
!14751 = !DILocation(line: 1321, column: 9, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14734, file: !919, line: 1321, column: 9)
!14753 = !DILocation(line: 1321, column: 14, scope: !14752)
!14754 = !DILocation(line: 1321, column: 36, scope: !14752)
!14755 = !DILocation(line: 1321, column: 39, scope: !14756)
!14756 = !DILexicalBlockFile(scope: !14752, file: !919, discriminator: 1)
!14757 = !DILocation(line: 1321, column: 44, scope: !14756)
!14758 = !DILocation(line: 1321, column: 66, scope: !14756)
!14759 = !DILocation(line: 1321, column: 69, scope: !14760)
!14760 = !DILexicalBlockFile(scope: !14752, file: !919, discriminator: 2)
!14761 = !DILocation(line: 1321, column: 74, scope: !14760)
!14762 = !DILocation(line: 1321, column: 9, scope: !14760)
!14763 = !DILocalVariable(name: "i", scope: !14764, file: !919, line: 1322, type: !998)
!14764 = distinct !DILexicalBlock(scope: !14765, file: !919, line: 1322, column: 9)
!14765 = distinct !DILexicalBlock(scope: !14752, file: !919, line: 1321, column: 100)
!14766 = !DILocation(line: 1322, column: 15, scope: !14764)
!14767 = !DILocalVariable(name: "ret", scope: !14764, file: !919, line: 1322, type: !998)
!14768 = !DILocation(line: 1322, column: 18, scope: !14764)
!14769 = !DILocation(line: 1322, column: 30, scope: !14770)
!14770 = distinct !DILexicalBlock(scope: !14764, file: !919, line: 1322, column: 23)
!14771 = !DILocation(line: 1322, column: 28, scope: !14770)
!14772 = !DILocation(line: 1322, column: 35, scope: !14773)
!14773 = !DILexicalBlockFile(scope: !14774, file: !919, discriminator: 1)
!14774 = distinct !DILexicalBlock(scope: !14770, file: !919, line: 1322, column: 23)
!14775 = !DILocation(line: 1322, column: 39, scope: !14773)
!14776 = !DILocation(line: 1322, column: 42, scope: !14773)
!14777 = !DILocation(line: 1322, column: 37, scope: !14773)
!14778 = !DILocation(line: 1322, column: 23, scope: !14773)
!14779 = !DILocalVariable(name: "spec", scope: !14780, file: !919, line: 1322, type: !1105)
!14780 = distinct !DILexicalBlock(scope: !14774, file: !919, line: 1322, column: 63)
!14781 = !DILocation(line: 1322, column: 71, scope: !14780)
!14782 = !DILocation(line: 1322, column: 93, scope: !14783)
!14783 = !DILexicalBlockFile(scope: !14780, file: !919, discriminator: 2)
!14784 = !DILocation(line: 1322, column: 78, scope: !14783)
!14785 = !DILocation(line: 1322, column: 81, scope: !14783)
!14786 = !DILocation(line: 1322, column: 96, scope: !14783)
!14787 = !DILocation(line: 1322, column: 71, scope: !14783)
!14788 = !DILocation(line: 1322, column: 141, scope: !14783)
!14789 = !DILocation(line: 1322, column: 144, scope: !14783)
!14790 = !DILocation(line: 1322, column: 149, scope: !14783)
!14791 = !DILocation(line: 1322, column: 153, scope: !14783)
!14792 = !DILocation(line: 1322, column: 118, scope: !14783)
!14793 = !DILocation(line: 1322, column: 116, scope: !14783)
!14794 = !DILocation(line: 1322, column: 160, scope: !14783)
!14795 = !DILocation(line: 1322, column: 111, scope: !14783)
!14796 = !DILocation(line: 1322, column: 193, scope: !14797)
!14797 = !DILexicalBlockFile(scope: !14798, file: !919, discriminator: 3)
!14798 = distinct !DILexicalBlock(scope: !14780, file: !919, line: 1322, column: 111)
!14799 = !DILocation(line: 1322, column: 178, scope: !14797)
!14800 = !DILocation(line: 1322, column: 181, scope: !14797)
!14801 = !DILocation(line: 1322, column: 196, scope: !14797)
!14802 = !DILocation(line: 1322, column: 198, scope: !14797)
!14803 = !DILocation(line: 1322, column: 176, scope: !14797)
!14804 = !DILocation(line: 1322, column: 165, scope: !14797)
!14805 = !DILocation(line: 1322, column: 212, scope: !14806)
!14806 = !DILexicalBlockFile(scope: !14807, file: !919, discriminator: 4)
!14807 = distinct !DILexicalBlock(scope: !14798, file: !919, line: 1322, column: 212)
!14808 = !DILocation(line: 1322, column: 216, scope: !14806)
!14809 = !DILocation(line: 1322, column: 221, scope: !14810)
!14810 = !DILexicalBlockFile(scope: !14807, file: !919, discriminator: 5)
!14811 = !DILocation(line: 1322, column: 238, scope: !14812)
!14812 = !DILexicalBlockFile(scope: !14780, file: !919, discriminator: 6)
!14813 = !DILocation(line: 1322, column: 59, scope: !14814)
!14814 = !DILexicalBlockFile(scope: !14774, file: !919, discriminator: 7)
!14815 = !DILocation(line: 1322, column: 23, scope: !14814)
!14816 = distinct !{!14816, !14817}
!14817 = !DILocation(line: 1322, column: 23, scope: !14764)
!14818 = !DILocation(line: 1323, column: 14, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14765, file: !919, line: 1323, column: 13)
!14820 = !DILocation(line: 1323, column: 13, scope: !14765)
!14821 = !DILocation(line: 1324, column: 58, scope: !14822)
!14822 = distinct !DILexicalBlock(scope: !14819, file: !919, line: 1323, column: 26)
!14823 = !DILocation(line: 1324, column: 61, scope: !14822)
!14824 = !DILocation(line: 1324, column: 75, scope: !14822)
!14825 = !DILocation(line: 1324, column: 78, scope: !14822)
!14826 = !DILocation(line: 1325, column: 63, scope: !14822)
!14827 = !DILocation(line: 1325, column: 68, scope: !14822)
!14828 = !DILocation(line: 1325, column: 72, scope: !14822)
!14829 = !DILocation(line: 1325, column: 82, scope: !14822)
!14830 = !DILocation(line: 1324, column: 43, scope: !14822)
!14831 = !DILocation(line: 1324, column: 13, scope: !14822)
!14832 = !DILocation(line: 1324, column: 18, scope: !14822)
!14833 = !DILocation(line: 1324, column: 22, scope: !14822)
!14834 = !DILocation(line: 1324, column: 32, scope: !14822)
!14835 = !DILocation(line: 1324, column: 41, scope: !14822)
!14836 = !DILocation(line: 1326, column: 45, scope: !14822)
!14837 = !DILocation(line: 1326, column: 50, scope: !14822)
!14838 = !DILocation(line: 1326, column: 54, scope: !14822)
!14839 = !DILocation(line: 1326, column: 64, scope: !14822)
!14840 = !DILocation(line: 1326, column: 24, scope: !14822)
!14841 = !DILocation(line: 1326, column: 13, scope: !14822)
!14842 = !DILocation(line: 1326, column: 18, scope: !14822)
!14843 = !DILocation(line: 1326, column: 22, scope: !14822)
!14844 = !DILocation(line: 1327, column: 18, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14822, file: !919, line: 1327, column: 17)
!14846 = !DILocation(line: 1327, column: 23, scope: !14845)
!14847 = !DILocation(line: 1327, column: 17, scope: !14822)
!14848 = !DILocation(line: 1331, column: 24, scope: !14849)
!14849 = distinct !DILexicalBlock(scope: !14845, file: !919, line: 1327, column: 28)
!14850 = !DILocation(line: 1331, column: 29, scope: !14849)
!14851 = !DILocation(line: 1331, column: 41, scope: !14849)
!14852 = !DILocation(line: 1331, column: 46, scope: !14849)
!14853 = !DILocation(line: 1331, column: 53, scope: !14849)
!14854 = !DILocation(line: 1331, column: 56, scope: !14849)
!14855 = !DILocation(line: 1331, column: 65, scope: !14849)
!14856 = !DILocation(line: 1332, column: 41, scope: !14849)
!14857 = !DILocation(line: 1332, column: 46, scope: !14849)
!14858 = !DILocation(line: 1332, column: 50, scope: !14849)
!14859 = !DILocation(line: 1332, column: 60, scope: !14849)
!14860 = !DILocation(line: 1332, column: 24, scope: !14849)
!14861 = !DILocation(line: 1328, column: 17, scope: !14849)
!14862 = !DILocation(line: 1333, column: 17, scope: !14849)
!14863 = !DILocation(line: 1335, column: 9, scope: !14822)
!14864 = !DILocation(line: 1335, column: 28, scope: !14865)
!14865 = !DILexicalBlockFile(scope: !14866, file: !919, discriminator: 1)
!14866 = distinct !DILexicalBlock(scope: !14819, file: !919, line: 1335, column: 20)
!14867 = !DILocation(line: 1335, column: 21, scope: !14865)
!14868 = !DILocation(line: 1335, column: 20, scope: !14865)
!14869 = !DILocation(line: 1336, column: 13, scope: !14866)
!14870 = !DILocation(line: 1336, column: 18, scope: !14866)
!14871 = !DILocation(line: 1336, column: 30, scope: !14866)
!14872 = !DILocation(line: 1338, column: 42, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14866, file: !919, line: 1337, column: 14)
!14874 = !DILocation(line: 1338, column: 54, scope: !14873)
!14875 = !DILocation(line: 1338, column: 59, scope: !14873)
!14876 = !DILocation(line: 1338, column: 63, scope: !14873)
!14877 = !DILocation(line: 1338, column: 73, scope: !14873)
!14878 = !DILocation(line: 1338, column: 24, scope: !14873)
!14879 = !DILocation(line: 1338, column: 13, scope: !14873)
!14880 = !DILocation(line: 1338, column: 18, scope: !14873)
!14881 = !DILocation(line: 1338, column: 22, scope: !14873)
!14882 = !DILocation(line: 1339, column: 43, scope: !14873)
!14883 = !DILocation(line: 1339, column: 48, scope: !14873)
!14884 = !DILocation(line: 1339, column: 53, scope: !14873)
!14885 = !DILocation(line: 1339, column: 13, scope: !14873)
!14886 = !DILocation(line: 1339, column: 18, scope: !14873)
!14887 = !DILocation(line: 1339, column: 22, scope: !14873)
!14888 = !DILocation(line: 1339, column: 32, scope: !14873)
!14889 = !DILocation(line: 1339, column: 41, scope: !14873)
!14890 = !DILocation(line: 1341, column: 33, scope: !14765)
!14891 = !DILocation(line: 1341, column: 38, scope: !14765)
!14892 = !DILocation(line: 1341, column: 32, scope: !14765)
!14893 = !DILocation(line: 1341, column: 9, scope: !14765)
!14894 = !DILocation(line: 1341, column: 14, scope: !14765)
!14895 = !DILocation(line: 1341, column: 30, scope: !14765)
!14896 = !DILocation(line: 1342, column: 5, scope: !14765)
!14897 = !DILocation(line: 1344, column: 9, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14752, file: !919, line: 1342, column: 12)
!14899 = !DILocation(line: 1344, column: 14, scope: !14898)
!14900 = !DILocation(line: 1344, column: 26, scope: !14898)
!14901 = !DILocation(line: 1345, column: 9, scope: !14898)
!14902 = !DILocation(line: 1345, column: 14, scope: !14898)
!14903 = !DILocation(line: 1345, column: 30, scope: !14898)
!14904 = !DILocation(line: 1348, column: 5, scope: !14734)
!14905 = !DILocation(line: 1349, column: 1, scope: !14734)
!14906 = distinct !DISubprogram(name: "get_preset_file_2", scope: !919, file: !919, line: 1290, type: !14907, isLocal: true, isDefinition: true, scopeLine: 1291, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!14907 = !DISubroutineType(types: !14908)
!14908 = !{!998, !982, !982, !2877}
!14909 = !DILocalVariable(name: "preset_name", arg: 1, scope: !14906, file: !919, line: 1290, type: !982)
!14910 = !DILocation(line: 1290, column: 42, scope: !14906)
!14911 = !DILocalVariable(name: "codec_name", arg: 2, scope: !14906, file: !919, line: 1290, type: !982)
!14912 = !DILocation(line: 1290, column: 67, scope: !14906)
!14913 = !DILocalVariable(name: "s", arg: 3, scope: !14906, file: !919, line: 1290, type: !2877)
!14914 = !DILocation(line: 1290, column: 93, scope: !14906)
!14915 = !DILocalVariable(name: "i", scope: !14906, file: !919, line: 1292, type: !998)
!14916 = !DILocation(line: 1292, column: 9, scope: !14906)
!14917 = !DILocalVariable(name: "ret", scope: !14906, file: !919, line: 1292, type: !998)
!14918 = !DILocation(line: 1292, column: 12, scope: !14906)
!14919 = !DILocalVariable(name: "filename", scope: !14906, file: !919, line: 1293, type: !8491)
!14920 = !DILocation(line: 1293, column: 10, scope: !14906)
!14921 = !DILocalVariable(name: "base", scope: !14906, file: !919, line: 1294, type: !14922)
!14922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !982, size: 192, align: 64, elements: !1880)
!14923 = !DILocation(line: 1294, column: 17, scope: !14906)
!14924 = !DILocation(line: 1294, column: 27, scope: !14906)
!14925 = !DILocation(line: 1294, column: 29, scope: !14906)
!14926 = !DILocation(line: 1295, column: 29, scope: !14906)
!14927 = !DILocation(line: 1299, column: 12, scope: !14928)
!14928 = distinct !DILexicalBlock(scope: !14906, file: !919, line: 1299, column: 5)
!14929 = !DILocation(line: 1299, column: 10, scope: !14928)
!14930 = !DILocation(line: 1299, column: 17, scope: !14931)
!14931 = !DILexicalBlockFile(scope: !14932, file: !919, discriminator: 1)
!14932 = distinct !DILexicalBlock(scope: !14928, file: !919, line: 1299, column: 5)
!14933 = !DILocation(line: 1299, column: 19, scope: !14931)
!14934 = !DILocation(line: 1299, column: 56, scope: !14931)
!14935 = !DILocation(line: 1299, column: 59, scope: !14936)
!14936 = !DILexicalBlockFile(scope: !14932, file: !919, discriminator: 2)
!14937 = !DILocation(line: 1299, column: 63, scope: !14936)
!14938 = !DILocation(line: 1299, column: 5, scope: !14939)
!14939 = !DILexicalBlockFile(scope: !14928, file: !919, discriminator: 3)
!14940 = !DILocation(line: 1300, column: 19, scope: !14941)
!14941 = distinct !DILexicalBlock(scope: !14942, file: !919, line: 1300, column: 13)
!14942 = distinct !DILexicalBlock(scope: !14932, file: !919, line: 1299, column: 73)
!14943 = !DILocation(line: 1300, column: 14, scope: !14941)
!14944 = !DILocation(line: 1300, column: 13, scope: !14942)
!14945 = !DILocation(line: 1301, column: 13, scope: !14941)
!14946 = !DILocation(line: 1302, column: 13, scope: !14947)
!14947 = distinct !DILexicalBlock(scope: !14942, file: !919, line: 1302, column: 13)
!14948 = !DILocation(line: 1302, column: 13, scope: !14942)
!14949 = !DILocation(line: 1303, column: 22, scope: !14950)
!14950 = distinct !DILexicalBlock(scope: !14947, file: !919, line: 1302, column: 25)
!14951 = !DILocation(line: 1303, column: 78, scope: !14950)
!14952 = !DILocation(line: 1303, column: 73, scope: !14950)
!14953 = !DILocation(line: 1304, column: 22, scope: !14950)
!14954 = !DILocation(line: 1304, column: 24, scope: !14950)
!14955 = !DILocation(line: 1304, column: 48, scope: !14950)
!14956 = !DILocation(line: 1304, column: 60, scope: !14950)
!14957 = !DILocation(line: 1303, column: 13, scope: !14950)
!14958 = !DILocation(line: 1305, column: 30, scope: !14950)
!14959 = !DILocation(line: 1305, column: 33, scope: !14950)
!14960 = !DILocation(line: 1305, column: 19, scope: !14950)
!14961 = !DILocation(line: 1305, column: 17, scope: !14950)
!14962 = !DILocation(line: 1306, column: 9, scope: !14950)
!14963 = !DILocation(line: 1307, column: 13, scope: !14964)
!14964 = distinct !DILexicalBlock(scope: !14942, file: !919, line: 1307, column: 13)
!14965 = !DILocation(line: 1307, column: 17, scope: !14964)
!14966 = !DILocation(line: 1307, column: 13, scope: !14942)
!14967 = !DILocation(line: 1308, column: 22, scope: !14968)
!14968 = distinct !DILexicalBlock(scope: !14964, file: !919, line: 1307, column: 22)
!14969 = !DILocation(line: 1308, column: 75, scope: !14968)
!14970 = !DILocation(line: 1308, column: 70, scope: !14968)
!14971 = !DILocation(line: 1309, column: 22, scope: !14968)
!14972 = !DILocation(line: 1309, column: 24, scope: !14968)
!14973 = !DILocation(line: 1309, column: 48, scope: !14968)
!14974 = !DILocation(line: 1308, column: 13, scope: !14968)
!14975 = !DILocation(line: 1310, column: 30, scope: !14968)
!14976 = !DILocation(line: 1310, column: 33, scope: !14968)
!14977 = !DILocation(line: 1310, column: 19, scope: !14968)
!14978 = !DILocation(line: 1310, column: 17, scope: !14968)
!14979 = !DILocation(line: 1311, column: 9, scope: !14968)
!14980 = !DILocation(line: 1312, column: 5, scope: !14942)
!14981 = !DILocation(line: 1299, column: 69, scope: !14982)
!14982 = !DILexicalBlockFile(scope: !14932, file: !919, discriminator: 4)
!14983 = !DILocation(line: 1299, column: 5, scope: !14982)
!14984 = distinct !{!14984, !14985}
!14985 = !DILocation(line: 1299, column: 5, scope: !14906)
!14986 = !DILocation(line: 1313, column: 12, scope: !14906)
!14987 = !DILocation(line: 1313, column: 5, scope: !14906)
!14988 = distinct !DISubprogram(name: "get_line", scope: !919, file: !919, line: 1271, type: !14989, isLocal: true, isDefinition: true, scopeLine: 1272, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!14989 = !DISubroutineType(types: !14990)
!14990 = !{!1179, !2496}
!14991 = !DILocalVariable(name: "s", arg: 1, scope: !14988, file: !919, line: 1271, type: !2496)
!14992 = !DILocation(line: 1271, column: 39, scope: !14988)
!14993 = !DILocalVariable(name: "line", scope: !14988, file: !919, line: 1273, type: !2496)
!14994 = !DILocation(line: 1273, column: 18, scope: !14988)
!14995 = !DILocalVariable(name: "buf", scope: !14988, file: !919, line: 1274, type: !1179)
!14996 = !DILocation(line: 1274, column: 14, scope: !14988)
!14997 = !DILocalVariable(name: "c", scope: !14988, file: !919, line: 1275, type: !984)
!14998 = !DILocation(line: 1275, column: 10, scope: !14988)
!14999 = !DILocation(line: 1277, column: 9, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !14988, file: !919, line: 1277, column: 9)
!15001 = !DILocation(line: 1277, column: 34, scope: !15000)
!15002 = !DILocation(line: 1277, column: 9, scope: !14988)
!15003 = !DILocation(line: 1278, column: 9, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !15000, file: !919, line: 1277, column: 39)
!15005 = !DILocation(line: 1279, column: 9, scope: !15004)
!15006 = !DILocation(line: 1282, column: 5, scope: !14988)
!15007 = !DILocation(line: 1282, column: 25, scope: !15008)
!15008 = !DILexicalBlockFile(scope: !14988, file: !919, discriminator: 1)
!15009 = !DILocation(line: 1282, column: 17, scope: !15008)
!15010 = !DILocation(line: 1282, column: 15, scope: !15008)
!15011 = !DILocation(line: 1282, column: 12, scope: !15008)
!15012 = !DILocation(line: 1282, column: 29, scope: !15008)
!15013 = !DILocation(line: 1282, column: 32, scope: !15014)
!15014 = !DILexicalBlockFile(scope: !14988, file: !919, discriminator: 2)
!15015 = !DILocation(line: 1282, column: 34, scope: !15014)
!15016 = !DILocation(line: 1282, column: 5, scope: !15017)
!15017 = !DILexicalBlockFile(scope: !14988, file: !919, discriminator: 3)
!15018 = !DILocation(line: 1283, column: 17, scope: !14988)
!15019 = !DILocation(line: 1283, column: 23, scope: !14988)
!15020 = !DILocation(line: 1283, column: 9, scope: !14988)
!15021 = !DILocation(line: 1282, column: 5, scope: !15022)
!15022 = !DILexicalBlockFile(scope: !14988, file: !919, discriminator: 4)
!15023 = distinct !{!15023, !15006}
!15024 = !DILocation(line: 1284, column: 13, scope: !14988)
!15025 = !DILocation(line: 1284, column: 5, scope: !14988)
!15026 = !DILocation(line: 1285, column: 24, scope: !14988)
!15027 = !DILocation(line: 1285, column: 5, scope: !14988)
!15028 = !DILocation(line: 1287, column: 12, scope: !14988)
!15029 = !DILocation(line: 1287, column: 5, scope: !14988)
!15030 = distinct !DISubprogram(name: "av_make_error_string", scope: !15031, file: !15031, line: 109, type: !15032, isLocal: true, isDefinition: true, scopeLine: 110, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!15031 = !DIFile(filename: "./libavutil/error.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[task]ffmpeg_g")
!15032 = !DISubroutineType(types: !15033)
!15033 = !{!1105, !1105, !1293, !998}
!15034 = !DILocalVariable(name: "errbuf", arg: 1, scope: !15030, file: !15031, line: 109, type: !1105)
!15035 = !DILocation(line: 109, column: 48, scope: !15030)
!15036 = !DILocalVariable(name: "errbuf_size", arg: 2, scope: !15030, file: !15031, line: 109, type: !1293)
!15037 = !DILocation(line: 109, column: 63, scope: !15030)
!15038 = !DILocalVariable(name: "errnum", arg: 3, scope: !15030, file: !15031, line: 109, type: !998)
!15039 = !DILocation(line: 109, column: 80, scope: !15030)
!15040 = !DILocation(line: 111, column: 17, scope: !15030)
!15041 = !DILocation(line: 111, column: 25, scope: !15030)
!15042 = !DILocation(line: 111, column: 33, scope: !15030)
!15043 = !DILocation(line: 111, column: 5, scope: !15030)
!15044 = !DILocation(line: 112, column: 12, scope: !15030)
!15045 = !DILocation(line: 112, column: 5, scope: !15030)
!15046 = distinct !DISubprogram(name: "opt_default_new", scope: !919, file: !919, line: 2935, type: !15047, isLocal: true, isDefinition: true, scopeLine: 2936, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1325)
!15047 = !DISubroutineType(types: !15048)
!15048 = !{!998, !2116, !982, !982}
!15049 = !DILocalVariable(name: "o", arg: 1, scope: !15046, file: !919, line: 2935, type: !2116)
!15050 = !DILocation(line: 2935, column: 44, scope: !15046)
!15051 = !DILocalVariable(name: "opt", arg: 2, scope: !15046, file: !919, line: 2935, type: !982)
!15052 = !DILocation(line: 2935, column: 59, scope: !15046)
!15053 = !DILocalVariable(name: "arg", arg: 3, scope: !15046, file: !919, line: 2935, type: !982)
!15054 = !DILocation(line: 2935, column: 76, scope: !15046)
!15055 = !DILocalVariable(name: "ret", scope: !15046, file: !919, line: 2937, type: !998)
!15056 = !DILocation(line: 2937, column: 9, scope: !15046)
!15057 = !DILocalVariable(name: "cbak", scope: !15046, file: !919, line: 2938, type: !1088)
!15058 = !DILocation(line: 2938, column: 19, scope: !15046)
!15059 = !DILocation(line: 2938, column: 26, scope: !15046)
!15060 = !DILocalVariable(name: "fbak", scope: !15046, file: !919, line: 2939, type: !1088)
!15061 = !DILocation(line: 2939, column: 19, scope: !15046)
!15062 = !DILocation(line: 2939, column: 26, scope: !15046)
!15063 = !DILocation(line: 2940, column: 16, scope: !15046)
!15064 = !DILocation(line: 2941, column: 17, scope: !15046)
!15065 = !DILocation(line: 2943, column: 28, scope: !15046)
!15066 = !DILocation(line: 2943, column: 33, scope: !15046)
!15067 = !DILocation(line: 2943, column: 11, scope: !15046)
!15068 = !DILocation(line: 2943, column: 9, scope: !15046)
!15069 = !DILocation(line: 2945, column: 19, scope: !15046)
!15070 = !DILocation(line: 2945, column: 22, scope: !15046)
!15071 = !DILocation(line: 2945, column: 25, scope: !15046)
!15072 = !DILocation(line: 2945, column: 38, scope: !15046)
!15073 = !DILocation(line: 2945, column: 5, scope: !15046)
!15074 = !DILocation(line: 2946, column: 19, scope: !15046)
!15075 = !DILocation(line: 2946, column: 22, scope: !15046)
!15076 = !DILocation(line: 2946, column: 25, scope: !15046)
!15077 = !DILocation(line: 2946, column: 38, scope: !15046)
!15078 = !DILocation(line: 2946, column: 5, scope: !15046)
!15079 = !DILocation(line: 2947, column: 5, scope: !15046)
!15080 = !DILocation(line: 2948, column: 5, scope: !15046)
!15081 = !DILocation(line: 2949, column: 18, scope: !15046)
!15082 = !DILocation(line: 2949, column: 16, scope: !15046)
!15083 = !DILocation(line: 2950, column: 19, scope: !15046)
!15084 = !DILocation(line: 2950, column: 17, scope: !15046)
!15085 = !DILocation(line: 2952, column: 12, scope: !15046)
!15086 = !DILocation(line: 2952, column: 5, scope: !15046)
