; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a/[inter]libavformat--hls.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a/[inter]libavformat--hls.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type { i32, i32 }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32 }
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, {}*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, %struct.anon*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, %struct.AVPacketList*, %struct.AVProbeData, [17 x i64], %struct.AVIndexEntry*, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], i64, i8, i8, i32, %struct.AVRational, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext**, i32, i32, %struct.AVCodecContext*, i32, i32, %struct.anon.0, i32, %struct.FFFrac* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.anon.0 = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.HLSContext = type { %struct.AVClass*, %struct.AVFormatContext*, i32, %struct.variant**, i32, %struct.playlist**, i32, %struct.rendition**, i32, i32, i32, i64, i64, %struct.AVIOInterruptCB*, %struct.AVDictionary*, i32, i8*, i32, i32, i32, %struct.AVIOContext* }
%struct.variant = type { i32, i32, %struct.playlist**, [64 x i8], [64 x i8], [64 x i8] }
%struct.playlist = type { [4096 x i8], %struct.AVIOContext, i8*, %struct.AVIOContext*, i32, %struct.AVIOContext*, i32, %struct.AVFormatContext*, i32, %struct.AVFormatContext*, %struct.AVPacket, i32, %struct.AVStream**, i32, i32, i32, i64, i32, i32, %struct.segment**, i32, i32, i64, i64, %struct.segment*, i8*, i32, i32, i32, [4096 x i8], [16 x i8], i32, i64, i64, i8*, i32, %struct.AVDictionary*, i32, i32, %struct.ID3v2ExtraMeta*, i64, i32, i32, i32, %struct.rendition**, i32, %struct.segment** }
%struct.segment = type { i64, i64, i64, i8*, i8*, i32, [16 x i8], %struct.segment* }
%struct.ID3v2ExtraMeta = type { i8*, i8*, %struct.ID3v2ExtraMeta* }
%struct.rendition = type { i32, %struct.playlist*, [64 x i8], [64 x i8], [64 x i8], i32 }
%struct.variant_info = type { [20 x i8], [64 x i8], [64 x i8], [64 x i8] }
%struct.key_info = type { [4096 x i8], [11 x i8], [35 x i8] }
%struct.rendition_info = type { [16 x i8], [4096 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], [4 x i8], [4 x i8], [512 x i8] }
%struct.init_section_info = type { [4096 x i8], [32 x i8] }
%union.unaligned_32 = type { i32 }
%struct.URLContext = type { %struct.AVClass*, %struct.URLProtocol*, i8*, i8*, i32, i32, i32, i32, %struct.AVIOInterruptCB, i64, i8*, i8*, i32 }
%struct.URLProtocol = type { i8*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* }
%struct.AVIODirEntry = type { i8*, i32, i32, i64, i64, i64, i64, i64, i64, i64 }
%struct.ID3v2ExtraMetaAPIC = type { %struct.AVBufferRef*, i8*, i8*, i32 }
%struct.ID3v2ExtraMetaPRIV = type { i8*, i8*, i32 }
%union.unaligned_64 = type { i64 }
%struct.AVDictionaryEntry = type { i8*, i8* }

@.str = private unnamed_addr constant [14 x i8] c"hls,applehttp\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"Apple HTTP Live Streaming\00", align 1
@hls_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([6 x %struct.AVOption], [6 x %struct.AVOption]* bitcast (<{ %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @hls_options to [6 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_hls_demuxer = global %struct.AVInputFormat { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i32 0, i32 0), i32 16384, i8* null, %struct.AVCodecTag** null, %struct.AVClass* @hls_class, i8* null, %struct.AVInputFormat* null, i32 0, i32 152, i32 (%struct.AVProbeData*)* @hls_probe, i32 (%struct.AVFormatContext*)* @hls_read_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @hls_read_packet, i32 (%struct.AVFormatContext*)* @hls_close, i32 (%struct.AVFormatContext*, i32, i64, i32)* @hls_read_seek, i64 (%struct.AVFormatContext*, i32, i64*, i64)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null }, align 8
@.str.2 = private unnamed_addr constant [17 x i8] c"live_start_index\00", align 1
@.str.3 = private unnamed_addr constant [74 x i8] c"segment index to start live streams at (negative values are from the end)\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"allowed_extensions\00", align 1
@.str.5 = private unnamed_addr constant [54 x i8] c"List of file extensions that hls is allowed to access\00", align 1
@.str.6 = private unnamed_addr constant [93 x i8] c"3gp,aac,avi,flac,mkv,m3u8,m4a,m4s,m4v,mpg,mov,mp2,mp3,mp4,mpeg,mpegts,ogg,ogv,oga,ts,vob,wav\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"max_reload\00", align 1
@.str.8 = private unnamed_addr constant [72 x i8] c"Maximum number of times a insufficient list is attempted to be reloaded\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"http_persistent\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"Use persistent HTTP connections\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"http_multiple\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"Use multiple HTTP connections for fetching segments\00", align 1
@hls_options = internal constant <{ %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ %struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.3, i32 0, i32 0), i32 68, i32 1, %union.anon { i64 -3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i32 0, i32 0), i32 120, i32 5, { i8* } { i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.6, i32 0, i32 0) }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.8, i32 0, i32 0), i32 128, i32 1, %union.anon { i64 1000 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i32 0, i32 0), i32 132, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 136, i32 18, %union.anon { i64 -1 }, double -1.000000e+00, double 1.000000e+00, i32 2, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@.str.14 = private unnamed_addr constant [8 x i8] c"#EXTM3U\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"#EXT-X-STREAM-INF:\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"#EXT-X-TARGETDURATION:\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"#EXT-X-MEDIA-SEQUENCE:\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"seekable\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"Empty playlist\0A\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"variant_bitrate\00", align 1
@.str.22 = private unnamed_addr constant [39 x i8] c"Error when loading first segment '%s'\0A\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"No expected HTTP requests have been made\0A\00", align 1
@save_avio_options.opts = internal constant [7 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), i8* null], align 16
@.str.24 = private unnamed_addr constant [8 x i8] c"headers\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"http_proxy\00", align 1
@.str.26 = private unnamed_addr constant [11 x i8] c"user_agent\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"cookies\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"referer\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"rw_timeout\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.31 = private unnamed_addr constant [69 x i8] c"keepalive request failed for '%s', retrying with new connection: %s\0A\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"multiple_requests\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"location\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"#EXT-X-KEY:\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"AES-128\00", align 1
@.str.37 = private unnamed_addr constant [11 x i8] c"SAMPLE-AES\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"0x\00", align 1
@.str.39 = private unnamed_addr constant [3 x i8] c"0X\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"#EXT-X-MEDIA:\00", align 1
@.str.41 = private unnamed_addr constant [22 x i8] c"#EXT-X-PLAYLIST-TYPE:\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"EVENT\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"VOD\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"#EXT-X-MAP:\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"#EXT-X-ENDLIST\00", align 1
@.str.46 = private unnamed_addr constant [9 x i8] c"#EXTINF:\00", align 1
@.str.47 = private unnamed_addr constant [18 x i8] c"#EXT-X-BYTERANGE:\00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.49 = private unnamed_addr constant [75 x i8] c"Media sequence change (%d -> %d) reflected in first_timestamp: %ld -> %ld\0A\00", align 1
@.str.50 = private unnamed_addr constant [47 x i8] c"Media sequence changed unexpectedly: %d -> %d\0A\00", align 1
@.str.51 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.52 = private unnamed_addr constant [3 x i8] c"uc\00", align 1
@.str.53 = private unnamed_addr constant [18 x i8] c"libavformat/hls.c\00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"BANDWIDTH=\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"AUDIO=\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"VIDEO=\00", align 1
@.str.57 = private unnamed_addr constant [11 x i8] c"SUBTITLES=\00", align 1
@.str.58 = private unnamed_addr constant [8 x i8] c"METHOD=\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"URI=\00", align 1
@.str.60 = private unnamed_addr constant [4 x i8] c"IV=\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"TYPE=\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"GROUP-ID=\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"LANGUAGE=\00", align 1
@.str.64 = private unnamed_addr constant [16 x i8] c"ASSOC-LANGUAGE=\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"NAME=\00", align 1
@.str.66 = private unnamed_addr constant [9 x i8] c"DEFAULT=\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"FORCED=\00", align 1
@.str.68 = private unnamed_addr constant [17 x i8] c"CHARACTERISTICS=\00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c"AUDIO\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"VIDEO\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"SUBTITLES\00", align 1
@.str.72 = private unnamed_addr constant [16 x i8] c"CLOSED-CAPTIONS\00", align 1
@.str.73 = private unnamed_addr constant [4 x i8] c"YES\00", align 1
@.str.74 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.75 = private unnamed_addr constant [47 x i8] c"public.accessibility.describes-music-and-sound\00", align 1
@.str.76 = private unnamed_addr constant [37 x i8] c"public.accessibility.describes-video\00", align 1
@.str.77 = private unnamed_addr constant [11 x i8] c"BYTERANGE=\00", align 1
@.str.78 = private unnamed_addr constant [33 x i8] c"No longer receiving playlist %d\0A\00", align 1
@.str.79 = private unnamed_addr constant [30 x i8] c"Failed to reload playlist %d\0A\00", align 1
@.str.80 = private unnamed_addr constant [52 x i8] c"skipping %d segments ahead, expired from playlists\0A\00", align 1
@.str.81 = private unnamed_addr constant [42 x i8] c"Failed to open segment %d of playlist %d\0A\00", align 1
@.str.82 = private unnamed_addr constant [13 x i8] c"http_version\00", align 1
@.str.83 = private unnamed_addr constant [4 x i8] c"1.1\00", align 1
@update_init_section.max_init_section_size = internal constant i32 1048576, align 4
@.str.84 = private unnamed_addr constant [57 x i8] c"Failed to open an initialization section in playlist %d\0A\00", align 1
@.str.85 = private unnamed_addr constant [51 x i8] c"Downloading an initialization section of size %ld\0A\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.87 = private unnamed_addr constant [11 x i8] c"end_offset\00", align 1
@.str.88 = private unnamed_addr constant [51 x i8] c"HLS request for url '%s', offset %ld, playlist %d\0A\00", align 1
@.str.89 = private unnamed_addr constant [28 x i8] c"Unable to read key file %s\0A\00", align 1
@.str.90 = private unnamed_addr constant [28 x i8] c"Unable to open key file %s\0A\00", align 1
@.str.91 = private unnamed_addr constant [4 x i8] c"://\00", align 1
@.str.92 = private unnamed_addr constant [10 x i8] c"crypto+%s\00", align 1
@.str.93 = private unnamed_addr constant [10 x i8] c"crypto:%s\00", align 1
@.str.94 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.95 = private unnamed_addr constant [3 x i8] c"iv\00", align 1
@.str.96 = private unnamed_addr constant [44 x i8] c"SAMPLE-AES encryption is not supported yet\0A\00", align 1
@.str.97 = private unnamed_addr constant [50 x i8] c"Unable to seek to offset %ld of HLS segment '%s'\0A\00", align 1
@.str.98 = private unnamed_addr constant [7 x i8] c"crypto\00", align 1
@.str.99 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.100 = private unnamed_addr constant [4 x i8] c"ALL\00", align 1
@.str.101 = private unnamed_addr constant [189 x i8] c"Filename extension of '%s' is not a common multimedia extension, blocked for security reasons.\0AIf you wish to override this adjust allowed_extensions, you can set it to 'ALL' to allow all\0A\00", align 1
@.str.102 = private unnamed_addr constant [6 x i8] c"file,\00", align 1
@.str.103 = private unnamed_addr constant [4 x i8] c"ID3\00", align 1
@.str.104 = private unnamed_addr constant [40 x i8] c"Too large HLS ID3 tag (%d > %ld bytes)\0A\00", align 1
@.str.105 = private unnamed_addr constant [27 x i8] c"Stripped %d HLS ID3 bytes\0A\00", align 1
@.str.106 = private unnamed_addr constant [38 x i8] c"Stripped additional %d HLS ID3 bytes\0A\00", align 1
@.str.107 = private unnamed_addr constant [25 x i8] c"!pls->id3_deferred_extra\00", align 1
@.str.108 = private unnamed_addr constant [53 x i8] c"Changing ID3 metadata in HLS audio elementary stream\00", align 1
@parse_id3.id3_priv_owner_ts = internal constant [45 x i8] c"com.apple.streaming.transportStreamTimestamp\00", align 16
@.str.109 = private unnamed_addr constant [5 x i8] c"PRIV\00", align 1
@.str.110 = private unnamed_addr constant [29 x i8] c"HLS ID3 audio timestamp %ld\0A\00", align 1
@.str.111 = private unnamed_addr constant [37 x i8] c"Invalid HLS ID3 audio timestamp %ld\0A\00", align 1
@.str.112 = private unnamed_addr constant [5 x i8] c"APIC\00", align 1
@.str.113 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.114 = private unnamed_addr constant [114 x i8] c"A HLS playlist item '%s' referred to an external file '%s'. Opening this file was forbidden for security reasons\0A\00", align 1
@.str.115 = private unnamed_addr constant [9 x i8] c"language\00", align 1
@.str.116 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.117 = private unnamed_addr constant [78 x i8] c"stream index inconsistency: index %d, %d main streams, %d subdemuxer streams\0A\00", align 1
@.str.118 = private unnamed_addr constant [39 x i8] c"Now receiving playlist %d, segment %d\0A\00", align 1

; Function Attrs: nounwind uwtable
define internal i32 @hls_probe(%struct.AVProbeData* %p) #0 !dbg !2355 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct.AVProbeData*, align 8
  store %struct.AVProbeData* %p, %struct.AVProbeData** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVProbeData** %p.addr, metadata !2356, metadata !2357), !dbg !2358
  %0 = load %struct.AVProbeData*, %struct.AVProbeData** %p.addr, align 8, !dbg !2359
  %buf = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %0, i32 0, i32 1, !dbg !2361
  %1 = load i8*, i8** %buf, align 8, !dbg !2361
  %call = call i32 @strncmp(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), i64 7) #10, !dbg !2362
  %tobool = icmp ne i32 %call, 0, !dbg !2362
  br i1 %tobool, label %if.then, label %if.end, !dbg !2363

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2364
  br label %return, !dbg !2364

if.end:                                           ; preds = %entry
  %2 = load %struct.AVProbeData*, %struct.AVProbeData** %p.addr, align 8, !dbg !2365
  %buf1 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %2, i32 0, i32 1, !dbg !2367
  %3 = load i8*, i8** %buf1, align 8, !dbg !2367
  %call2 = call i8* @strstr(i8* %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i32 0, i32 0)) #10, !dbg !2368
  %tobool3 = icmp ne i8* %call2, null, !dbg !2368
  br i1 %tobool3, label %if.then11, label %lor.lhs.false, !dbg !2369

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.AVProbeData*, %struct.AVProbeData** %p.addr, align 8, !dbg !2370
  %buf4 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %4, i32 0, i32 1, !dbg !2371
  %5 = load i8*, i8** %buf4, align 8, !dbg !2371
  %call5 = call i8* @strstr(i8* %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i32 0, i32 0)) #10, !dbg !2372
  %tobool6 = icmp ne i8* %call5, null, !dbg !2372
  br i1 %tobool6, label %if.then11, label %lor.lhs.false7, !dbg !2373

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %6 = load %struct.AVProbeData*, %struct.AVProbeData** %p.addr, align 8, !dbg !2374
  %buf8 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %6, i32 0, i32 1, !dbg !2375
  %7 = load i8*, i8** %buf8, align 8, !dbg !2375
  %call9 = call i8* @strstr(i8* %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0)) #10, !dbg !2376
  %tobool10 = icmp ne i8* %call9, null, !dbg !2376
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !2377

if.then11:                                        ; preds = %lor.lhs.false7, %lor.lhs.false, %if.end
  store i32 100, i32* %retval, align 4, !dbg !2379
  br label %return, !dbg !2379

if.end12:                                         ; preds = %lor.lhs.false7
  store i32 0, i32* %retval, align 4, !dbg !2380
  br label %return, !dbg !2380

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !2381
  ret i32 %8, !dbg !2381
}

; Function Attrs: nounwind uwtable
define internal i32 @hls_read_header(%struct.AVFormatContext* %s) #0 !dbg !2382 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %c = alloca %struct.HLSContext*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %highest_cur_seq_no = alloca i32, align 4
  %pls = alloca %struct.playlist*, align 8
  %duration = alloca i64, align 8
  %var = alloca %struct.variant*, align 8
  %v = alloca %struct.variant*, align 8
  %program = alloca %struct.AVProgram*, align 8
  %pls104 = alloca %struct.playlist*, align 8
  %pls126 = alloca %struct.playlist*, align 8
  %in_fmt = alloca %struct.AVInputFormat*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !2383, metadata !2357), !dbg !2384
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c, metadata !2385, metadata !2357), !dbg !2424
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2425
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !2426
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2426
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !2425
  store %struct.HLSContext* %2, %struct.HLSContext** %c, align 8, !dbg !2424
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2427, metadata !2357), !dbg !2428
  store i32 0, i32* %ret, align 4, !dbg !2428
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2429, metadata !2357), !dbg !2430
  call void @llvm.dbg.declare(metadata i32* %highest_cur_seq_no, metadata !2431, metadata !2357), !dbg !2432
  store i32 0, i32* %highest_cur_seq_no, align 4, !dbg !2432
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2433
  %4 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2434
  %ctx = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 1, !dbg !2435
  store %struct.AVFormatContext* %3, %struct.AVFormatContext** %ctx, align 8, !dbg !2436
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2437
  %interrupt_callback = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 33, !dbg !2438
  %6 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2439
  %interrupt_callback1 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %6, i32 0, i32 13, !dbg !2440
  store %struct.AVIOInterruptCB* %interrupt_callback, %struct.AVIOInterruptCB** %interrupt_callback1, align 8, !dbg !2441
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2442
  %strict_std_compliance = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 36, !dbg !2443
  %8 = load i32, i32* %strict_std_compliance, align 8, !dbg !2443
  %9 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2444
  %strict_std_compliance2 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %9, i32 0, i32 15, !dbg !2445
  store i32 %8, i32* %strict_std_compliance2, align 8, !dbg !2446
  %10 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2447
  %first_packet = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %10, i32 0, i32 10, !dbg !2448
  store i32 1, i32* %first_packet, align 8, !dbg !2449
  %11 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2450
  %first_timestamp = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %11, i32 0, i32 11, !dbg !2451
  store i64 -9223372036854775808, i64* %first_timestamp, align 8, !dbg !2452
  %12 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2453
  %cur_timestamp = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %12, i32 0, i32 12, !dbg !2454
  store i64 -9223372036854775808, i64* %cur_timestamp, align 8, !dbg !2455
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2456
  %call = call i32 @save_avio_options(%struct.AVFormatContext* %13), !dbg !2458
  store i32 %call, i32* %ret, align 4, !dbg !2459
  %cmp = icmp slt i32 %call, 0, !dbg !2460
  br i1 %cmp, label %if.then, label %if.end, !dbg !2461

if.then:                                          ; preds = %entry
  br label %fail, !dbg !2462

if.end:                                           ; preds = %entry
  %14 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2463
  %avio_opts = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %14, i32 0, i32 14, !dbg !2464
  %call3 = call i32 @av_dict_set(%struct.AVDictionary** %avio_opts, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i32 0, i32 0), i32 0), !dbg !2465
  %15 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2466
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2468
  %url = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %16, i32 0, i32 9, !dbg !2469
  %17 = load i8*, i8** %url, align 8, !dbg !2469
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2470
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %18, i32 0, i32 4, !dbg !2471
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2471
  %call4 = call i32 @parse_playlist(%struct.HLSContext* %15, i8* %17, %struct.playlist* null, %struct.AVIOContext* %19), !dbg !2472
  store i32 %call4, i32* %ret, align 4, !dbg !2473
  %cmp5 = icmp slt i32 %call4, 0, !dbg !2474
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !2475

if.then6:                                         ; preds = %if.end
  br label %fail, !dbg !2476

if.end7:                                          ; preds = %if.end
  %20 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2477
  %n_variants = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %20, i32 0, i32 2, !dbg !2479
  %21 = load i32, i32* %n_variants, align 8, !dbg !2479
  %cmp8 = icmp eq i32 %21, 0, !dbg !2480
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !2481

if.then9:                                         ; preds = %if.end7
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i32 0, i32 0)), !dbg !2482
  store i32 -541478725, i32* %ret, align 4, !dbg !2484
  br label %fail, !dbg !2485

if.end10:                                         ; preds = %if.end7
  %22 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2486
  %n_playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %22, i32 0, i32 4, !dbg !2488
  %23 = load i32, i32* %n_playlists, align 8, !dbg !2488
  %cmp11 = icmp sgt i32 %23, 1, !dbg !2489
  br i1 %cmp11, label %if.then13, label %lor.lhs.false, !dbg !2490

lor.lhs.false:                                    ; preds = %if.end10
  %24 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2491
  %playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %24, i32 0, i32 5, !dbg !2493
  %25 = load %struct.playlist**, %struct.playlist*** %playlists, align 8, !dbg !2493
  %arrayidx = getelementptr inbounds %struct.playlist*, %struct.playlist** %25, i64 0, !dbg !2491
  %26 = load %struct.playlist*, %struct.playlist** %arrayidx, align 8, !dbg !2491
  %n_segments = getelementptr inbounds %struct.playlist, %struct.playlist* %26, i32 0, i32 18, !dbg !2494
  %27 = load i32, i32* %n_segments, align 4, !dbg !2494
  %cmp12 = icmp eq i32 %27, 0, !dbg !2495
  br i1 %cmp12, label %if.then13, label %if.end23, !dbg !2496

if.then13:                                        ; preds = %lor.lhs.false, %if.end10
  store i32 0, i32* %i, align 4, !dbg !2497
  br label %for.cond, !dbg !2500

for.cond:                                         ; preds = %for.inc, %if.then13
  %28 = load i32, i32* %i, align 4, !dbg !2501
  %29 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2504
  %n_playlists14 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %29, i32 0, i32 4, !dbg !2505
  %30 = load i32, i32* %n_playlists14, align 8, !dbg !2505
  %cmp15 = icmp slt i32 %28, %30, !dbg !2506
  br i1 %cmp15, label %for.body, label %for.end, !dbg !2507

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls, metadata !2508, metadata !2357), !dbg !2510
  %31 = load i32, i32* %i, align 4, !dbg !2511
  %idxprom = sext i32 %31 to i64, !dbg !2512
  %32 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2512
  %playlists16 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %32, i32 0, i32 5, !dbg !2513
  %33 = load %struct.playlist**, %struct.playlist*** %playlists16, align 8, !dbg !2513
  %arrayidx17 = getelementptr inbounds %struct.playlist*, %struct.playlist** %33, i64 %idxprom, !dbg !2512
  %34 = load %struct.playlist*, %struct.playlist** %arrayidx17, align 8, !dbg !2512
  store %struct.playlist* %34, %struct.playlist** %pls, align 8, !dbg !2510
  %35 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2514
  %36 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !2516
  %url18 = getelementptr inbounds %struct.playlist, %struct.playlist* %36, i32 0, i32 0, !dbg !2517
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %url18, i32 0, i32 0, !dbg !2516
  %37 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !2518
  %call19 = call i32 @parse_playlist(%struct.HLSContext* %35, i8* %arraydecay, %struct.playlist* %37, %struct.AVIOContext* null), !dbg !2519
  store i32 %call19, i32* %ret, align 4, !dbg !2520
  %cmp20 = icmp slt i32 %call19, 0, !dbg !2521
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !2522

if.then21:                                        ; preds = %for.body
  br label %fail, !dbg !2523

if.end22:                                         ; preds = %for.body
  br label %for.inc, !dbg !2524

for.inc:                                          ; preds = %if.end22
  %38 = load i32, i32* %i, align 4, !dbg !2525
  %inc = add nsw i32 %38, 1, !dbg !2525
  store i32 %inc, i32* %i, align 4, !dbg !2525
  br label %for.cond, !dbg !2527, !llvm.loop !2528

for.end:                                          ; preds = %for.cond
  br label %if.end23, !dbg !2530

if.end23:                                         ; preds = %for.end, %lor.lhs.false
  %39 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2531
  %variants = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %39, i32 0, i32 3, !dbg !2533
  %40 = load %struct.variant**, %struct.variant*** %variants, align 8, !dbg !2533
  %arrayidx24 = getelementptr inbounds %struct.variant*, %struct.variant** %40, i64 0, !dbg !2531
  %41 = load %struct.variant*, %struct.variant** %arrayidx24, align 8, !dbg !2531
  %playlists25 = getelementptr inbounds %struct.variant, %struct.variant* %41, i32 0, i32 2, !dbg !2534
  %42 = load %struct.playlist**, %struct.playlist*** %playlists25, align 8, !dbg !2534
  %arrayidx26 = getelementptr inbounds %struct.playlist*, %struct.playlist** %42, i64 0, !dbg !2531
  %43 = load %struct.playlist*, %struct.playlist** %arrayidx26, align 8, !dbg !2531
  %n_segments27 = getelementptr inbounds %struct.playlist, %struct.playlist* %43, i32 0, i32 18, !dbg !2535
  %44 = load i32, i32* %n_segments27, align 4, !dbg !2535
  %cmp28 = icmp eq i32 %44, 0, !dbg !2536
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !2537

if.then29:                                        ; preds = %if.end23
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i32 0, i32 0)), !dbg !2538
  store i32 -541478725, i32* %ret, align 4, !dbg !2540
  br label %fail, !dbg !2541

if.end30:                                         ; preds = %if.end23
  %45 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2542
  %variants31 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %45, i32 0, i32 3, !dbg !2544
  %46 = load %struct.variant**, %struct.variant*** %variants31, align 8, !dbg !2544
  %arrayidx32 = getelementptr inbounds %struct.variant*, %struct.variant** %46, i64 0, !dbg !2542
  %47 = load %struct.variant*, %struct.variant** %arrayidx32, align 8, !dbg !2542
  %playlists33 = getelementptr inbounds %struct.variant, %struct.variant* %47, i32 0, i32 2, !dbg !2545
  %48 = load %struct.playlist**, %struct.playlist*** %playlists33, align 8, !dbg !2545
  %arrayidx34 = getelementptr inbounds %struct.playlist*, %struct.playlist** %48, i64 0, !dbg !2542
  %49 = load %struct.playlist*, %struct.playlist** %arrayidx34, align 8, !dbg !2542
  %finished = getelementptr inbounds %struct.playlist, %struct.playlist* %49, i32 0, i32 14, !dbg !2546
  %50 = load i32, i32* %finished, align 4, !dbg !2546
  %tobool = icmp ne i32 %50, 0, !dbg !2542
  br i1 %tobool, label %if.then35, label %if.end55, !dbg !2547

if.then35:                                        ; preds = %if.end30
  call void @llvm.dbg.declare(metadata i64* %duration, metadata !2548, metadata !2357), !dbg !2550
  store i64 0, i64* %duration, align 8, !dbg !2550
  store i32 0, i32* %i, align 4, !dbg !2551
  br label %for.cond36, !dbg !2553

for.cond36:                                       ; preds = %for.inc51, %if.then35
  %51 = load i32, i32* %i, align 4, !dbg !2554
  %52 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2557
  %variants37 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %52, i32 0, i32 3, !dbg !2558
  %53 = load %struct.variant**, %struct.variant*** %variants37, align 8, !dbg !2558
  %arrayidx38 = getelementptr inbounds %struct.variant*, %struct.variant** %53, i64 0, !dbg !2557
  %54 = load %struct.variant*, %struct.variant** %arrayidx38, align 8, !dbg !2557
  %playlists39 = getelementptr inbounds %struct.variant, %struct.variant* %54, i32 0, i32 2, !dbg !2559
  %55 = load %struct.playlist**, %struct.playlist*** %playlists39, align 8, !dbg !2559
  %arrayidx40 = getelementptr inbounds %struct.playlist*, %struct.playlist** %55, i64 0, !dbg !2557
  %56 = load %struct.playlist*, %struct.playlist** %arrayidx40, align 8, !dbg !2557
  %n_segments41 = getelementptr inbounds %struct.playlist, %struct.playlist* %56, i32 0, i32 18, !dbg !2560
  %57 = load i32, i32* %n_segments41, align 4, !dbg !2560
  %cmp42 = icmp slt i32 %51, %57, !dbg !2561
  br i1 %cmp42, label %for.body43, label %for.end53, !dbg !2562

for.body43:                                       ; preds = %for.cond36
  %58 = load i32, i32* %i, align 4, !dbg !2563
  %idxprom44 = sext i32 %58 to i64, !dbg !2564
  %59 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2564
  %variants45 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %59, i32 0, i32 3, !dbg !2565
  %60 = load %struct.variant**, %struct.variant*** %variants45, align 8, !dbg !2565
  %arrayidx46 = getelementptr inbounds %struct.variant*, %struct.variant** %60, i64 0, !dbg !2564
  %61 = load %struct.variant*, %struct.variant** %arrayidx46, align 8, !dbg !2564
  %playlists47 = getelementptr inbounds %struct.variant, %struct.variant* %61, i32 0, i32 2, !dbg !2566
  %62 = load %struct.playlist**, %struct.playlist*** %playlists47, align 8, !dbg !2566
  %arrayidx48 = getelementptr inbounds %struct.playlist*, %struct.playlist** %62, i64 0, !dbg !2564
  %63 = load %struct.playlist*, %struct.playlist** %arrayidx48, align 8, !dbg !2564
  %segments = getelementptr inbounds %struct.playlist, %struct.playlist* %63, i32 0, i32 19, !dbg !2567
  %64 = load %struct.segment**, %struct.segment*** %segments, align 8, !dbg !2567
  %arrayidx49 = getelementptr inbounds %struct.segment*, %struct.segment** %64, i64 %idxprom44, !dbg !2564
  %65 = load %struct.segment*, %struct.segment** %arrayidx49, align 8, !dbg !2564
  %duration50 = getelementptr inbounds %struct.segment, %struct.segment* %65, i32 0, i32 0, !dbg !2568
  %66 = load i64, i64* %duration50, align 8, !dbg !2568
  %67 = load i64, i64* %duration, align 8, !dbg !2569
  %add = add nsw i64 %67, %66, !dbg !2569
  store i64 %add, i64* %duration, align 8, !dbg !2569
  br label %for.inc51, !dbg !2570

for.inc51:                                        ; preds = %for.body43
  %68 = load i32, i32* %i, align 4, !dbg !2571
  %inc52 = add nsw i32 %68, 1, !dbg !2571
  store i32 %inc52, i32* %i, align 4, !dbg !2571
  br label %for.cond36, !dbg !2573, !llvm.loop !2574

for.end53:                                        ; preds = %for.cond36
  %69 = load i64, i64* %duration, align 8, !dbg !2576
  %70 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2577
  %duration54 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %70, i32 0, i32 11, !dbg !2578
  store i64 %69, i64* %duration54, align 8, !dbg !2579
  br label %if.end55, !dbg !2580

if.end55:                                         ; preds = %for.end53, %if.end30
  store i32 0, i32* %i, align 4, !dbg !2581
  br label %for.cond56, !dbg !2583

for.cond56:                                       ; preds = %for.inc81, %if.end55
  %71 = load i32, i32* %i, align 4, !dbg !2584
  %72 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2587
  %n_variants57 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %72, i32 0, i32 2, !dbg !2588
  %73 = load i32, i32* %n_variants57, align 8, !dbg !2588
  %cmp58 = icmp slt i32 %71, %73, !dbg !2589
  br i1 %cmp58, label %for.body59, label %for.end83, !dbg !2590

for.body59:                                       ; preds = %for.cond56
  call void @llvm.dbg.declare(metadata %struct.variant** %var, metadata !2591, metadata !2357), !dbg !2593
  %74 = load i32, i32* %i, align 4, !dbg !2594
  %idxprom60 = sext i32 %74 to i64, !dbg !2595
  %75 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2595
  %variants61 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %75, i32 0, i32 3, !dbg !2596
  %76 = load %struct.variant**, %struct.variant*** %variants61, align 8, !dbg !2596
  %arrayidx62 = getelementptr inbounds %struct.variant*, %struct.variant** %76, i64 %idxprom60, !dbg !2595
  %77 = load %struct.variant*, %struct.variant** %arrayidx62, align 8, !dbg !2595
  store %struct.variant* %77, %struct.variant** %var, align 8, !dbg !2593
  %78 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !2597
  %audio_group = getelementptr inbounds %struct.variant, %struct.variant* %78, i32 0, i32 3, !dbg !2599
  %arrayidx63 = getelementptr inbounds [64 x i8], [64 x i8]* %audio_group, i64 0, i64 0, !dbg !2597
  %79 = load i8, i8* %arrayidx63, align 8, !dbg !2597
  %tobool64 = icmp ne i8 %79, 0, !dbg !2597
  br i1 %tobool64, label %if.then65, label %if.end68, !dbg !2600

if.then65:                                        ; preds = %for.body59
  %80 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2601
  %81 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !2602
  %82 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !2603
  %audio_group66 = getelementptr inbounds %struct.variant, %struct.variant* %82, i32 0, i32 3, !dbg !2604
  %arraydecay67 = getelementptr inbounds [64 x i8], [64 x i8]* %audio_group66, i32 0, i32 0, !dbg !2603
  call void @add_renditions_to_variant(%struct.HLSContext* %80, %struct.variant* %81, i32 1, i8* %arraydecay67), !dbg !2605
  br label %if.end68, !dbg !2605

if.end68:                                         ; preds = %if.then65, %for.body59
  %83 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !2606
  %video_group = getelementptr inbounds %struct.variant, %struct.variant* %83, i32 0, i32 4, !dbg !2608
  %arrayidx69 = getelementptr inbounds [64 x i8], [64 x i8]* %video_group, i64 0, i64 0, !dbg !2606
  %84 = load i8, i8* %arrayidx69, align 8, !dbg !2606
  %tobool70 = icmp ne i8 %84, 0, !dbg !2606
  br i1 %tobool70, label %if.then71, label %if.end74, !dbg !2609

if.then71:                                        ; preds = %if.end68
  %85 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2610
  %86 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !2611
  %87 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !2612
  %video_group72 = getelementptr inbounds %struct.variant, %struct.variant* %87, i32 0, i32 4, !dbg !2613
  %arraydecay73 = getelementptr inbounds [64 x i8], [64 x i8]* %video_group72, i32 0, i32 0, !dbg !2612
  call void @add_renditions_to_variant(%struct.HLSContext* %85, %struct.variant* %86, i32 0, i8* %arraydecay73), !dbg !2614
  br label %if.end74, !dbg !2614

if.end74:                                         ; preds = %if.then71, %if.end68
  %88 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !2615
  %subtitles_group = getelementptr inbounds %struct.variant, %struct.variant* %88, i32 0, i32 5, !dbg !2617
  %arrayidx75 = getelementptr inbounds [64 x i8], [64 x i8]* %subtitles_group, i64 0, i64 0, !dbg !2615
  %89 = load i8, i8* %arrayidx75, align 8, !dbg !2615
  %tobool76 = icmp ne i8 %89, 0, !dbg !2615
  br i1 %tobool76, label %if.then77, label %if.end80, !dbg !2618

if.then77:                                        ; preds = %if.end74
  %90 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2619
  %91 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !2620
  %92 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !2621
  %subtitles_group78 = getelementptr inbounds %struct.variant, %struct.variant* %92, i32 0, i32 5, !dbg !2622
  %arraydecay79 = getelementptr inbounds [64 x i8], [64 x i8]* %subtitles_group78, i32 0, i32 0, !dbg !2621
  call void @add_renditions_to_variant(%struct.HLSContext* %90, %struct.variant* %91, i32 3, i8* %arraydecay79), !dbg !2623
  br label %if.end80, !dbg !2623

if.end80:                                         ; preds = %if.then77, %if.end74
  br label %for.inc81, !dbg !2624

for.inc81:                                        ; preds = %if.end80
  %93 = load i32, i32* %i, align 4, !dbg !2625
  %inc82 = add nsw i32 %93, 1, !dbg !2625
  store i32 %inc82, i32* %i, align 4, !dbg !2625
  br label %for.cond56, !dbg !2627, !llvm.loop !2628

for.end83:                                        ; preds = %for.cond56
  store i32 0, i32* %i, align 4, !dbg !2630
  br label %for.cond84, !dbg !2632

for.cond84:                                       ; preds = %for.inc96, %for.end83
  %94 = load i32, i32* %i, align 4, !dbg !2633
  %95 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2636
  %n_variants85 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %95, i32 0, i32 2, !dbg !2637
  %96 = load i32, i32* %n_variants85, align 8, !dbg !2637
  %cmp86 = icmp slt i32 %94, %96, !dbg !2638
  br i1 %cmp86, label %for.body87, label %for.end98, !dbg !2639

for.body87:                                       ; preds = %for.cond84
  call void @llvm.dbg.declare(metadata %struct.variant** %v, metadata !2640, metadata !2357), !dbg !2642
  %97 = load i32, i32* %i, align 4, !dbg !2643
  %idxprom88 = sext i32 %97 to i64, !dbg !2644
  %98 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2644
  %variants89 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %98, i32 0, i32 3, !dbg !2645
  %99 = load %struct.variant**, %struct.variant*** %variants89, align 8, !dbg !2645
  %arrayidx90 = getelementptr inbounds %struct.variant*, %struct.variant** %99, i64 %idxprom88, !dbg !2644
  %100 = load %struct.variant*, %struct.variant** %arrayidx90, align 8, !dbg !2644
  store %struct.variant* %100, %struct.variant** %v, align 8, !dbg !2642
  call void @llvm.dbg.declare(metadata %struct.AVProgram** %program, metadata !2646, metadata !2357), !dbg !2647
  %101 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2648
  %102 = load i32, i32* %i, align 4, !dbg !2649
  %call91 = call %struct.AVProgram* @av_new_program(%struct.AVFormatContext* %101, i32 %102), !dbg !2650
  store %struct.AVProgram* %call91, %struct.AVProgram** %program, align 8, !dbg !2651
  %103 = load %struct.AVProgram*, %struct.AVProgram** %program, align 8, !dbg !2652
  %tobool92 = icmp ne %struct.AVProgram* %103, null, !dbg !2652
  br i1 %tobool92, label %if.end94, label %if.then93, !dbg !2654

if.then93:                                        ; preds = %for.body87
  br label %fail, !dbg !2655

if.end94:                                         ; preds = %for.body87
  %104 = load %struct.AVProgram*, %struct.AVProgram** %program, align 8, !dbg !2656
  %metadata = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %104, i32 0, i32 5, !dbg !2657
  %105 = load %struct.variant*, %struct.variant** %v, align 8, !dbg !2658
  %bandwidth = getelementptr inbounds %struct.variant, %struct.variant* %105, i32 0, i32 0, !dbg !2659
  %106 = load i32, i32* %bandwidth, align 8, !dbg !2659
  %conv = sext i32 %106 to i64, !dbg !2658
  %call95 = call i32 @av_dict_set_int(%struct.AVDictionary** %metadata, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i32 0, i32 0), i64 %conv, i32 0), !dbg !2660
  br label %for.inc96, !dbg !2661

for.inc96:                                        ; preds = %if.end94
  %107 = load i32, i32* %i, align 4, !dbg !2662
  %inc97 = add nsw i32 %107, 1, !dbg !2662
  store i32 %inc97, i32* %i, align 4, !dbg !2662
  br label %for.cond84, !dbg !2664, !llvm.loop !2665

for.end98:                                        ; preds = %for.cond84
  store i32 0, i32* %i, align 4, !dbg !2667
  br label %for.cond99, !dbg !2669

for.cond99:                                       ; preds = %for.inc118, %for.end98
  %108 = load i32, i32* %i, align 4, !dbg !2670
  %109 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2673
  %n_playlists100 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %109, i32 0, i32 4, !dbg !2674
  %110 = load i32, i32* %n_playlists100, align 8, !dbg !2674
  %cmp101 = icmp slt i32 %108, %110, !dbg !2675
  br i1 %cmp101, label %for.body103, label %for.end120, !dbg !2676

for.body103:                                      ; preds = %for.cond99
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls104, metadata !2677, metadata !2357), !dbg !2679
  %111 = load i32, i32* %i, align 4, !dbg !2680
  %idxprom105 = sext i32 %111 to i64, !dbg !2681
  %112 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2681
  %playlists106 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %112, i32 0, i32 5, !dbg !2682
  %113 = load %struct.playlist**, %struct.playlist*** %playlists106, align 8, !dbg !2682
  %arrayidx107 = getelementptr inbounds %struct.playlist*, %struct.playlist** %113, i64 %idxprom105, !dbg !2681
  %114 = load %struct.playlist*, %struct.playlist** %arrayidx107, align 8, !dbg !2681
  store %struct.playlist* %114, %struct.playlist** %pls104, align 8, !dbg !2679
  %115 = load %struct.playlist*, %struct.playlist** %pls104, align 8, !dbg !2683
  %n_segments108 = getelementptr inbounds %struct.playlist, %struct.playlist* %115, i32 0, i32 18, !dbg !2685
  %116 = load i32, i32* %n_segments108, align 4, !dbg !2685
  %cmp109 = icmp eq i32 %116, 0, !dbg !2686
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !2687

if.then111:                                       ; preds = %for.body103
  br label %for.inc118, !dbg !2688

if.end112:                                        ; preds = %for.body103
  %117 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2689
  %118 = load %struct.playlist*, %struct.playlist** %pls104, align 8, !dbg !2690
  %call113 = call i32 @select_cur_seq_no(%struct.HLSContext* %117, %struct.playlist* %118), !dbg !2691
  %119 = load %struct.playlist*, %struct.playlist** %pls104, align 8, !dbg !2692
  %cur_seq_no = getelementptr inbounds %struct.playlist, %struct.playlist* %119, i32 0, i32 21, !dbg !2693
  store i32 %call113, i32* %cur_seq_no, align 4, !dbg !2694
  %120 = load i32, i32* %highest_cur_seq_no, align 4, !dbg !2695
  %121 = load %struct.playlist*, %struct.playlist** %pls104, align 8, !dbg !2696
  %cur_seq_no114 = getelementptr inbounds %struct.playlist, %struct.playlist* %121, i32 0, i32 21, !dbg !2697
  %122 = load i32, i32* %cur_seq_no114, align 4, !dbg !2697
  %cmp115 = icmp sgt i32 %120, %122, !dbg !2698
  br i1 %cmp115, label %cond.true, label %cond.false, !dbg !2699

cond.true:                                        ; preds = %if.end112
  %123 = load i32, i32* %highest_cur_seq_no, align 4, !dbg !2700
  br label %cond.end, !dbg !2702

cond.false:                                       ; preds = %if.end112
  %124 = load %struct.playlist*, %struct.playlist** %pls104, align 8, !dbg !2703
  %cur_seq_no117 = getelementptr inbounds %struct.playlist, %struct.playlist* %124, i32 0, i32 21, !dbg !2705
  %125 = load i32, i32* %cur_seq_no117, align 4, !dbg !2705
  br label %cond.end, !dbg !2706

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %123, %cond.true ], [ %125, %cond.false ], !dbg !2707
  store i32 %cond, i32* %highest_cur_seq_no, align 4, !dbg !2709
  br label %for.inc118, !dbg !2710

for.inc118:                                       ; preds = %cond.end, %if.then111
  %126 = load i32, i32* %i, align 4, !dbg !2711
  %inc119 = add nsw i32 %126, 1, !dbg !2711
  store i32 %inc119, i32* %i, align 4, !dbg !2711
  br label %for.cond99, !dbg !2713, !llvm.loop !2714

for.end120:                                       ; preds = %for.cond99
  store i32 0, i32* %i, align 4, !dbg !2716
  br label %for.cond121, !dbg !2718

for.cond121:                                      ; preds = %for.inc247, %for.end120
  %127 = load i32, i32* %i, align 4, !dbg !2719
  %128 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2722
  %n_playlists122 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %128, i32 0, i32 4, !dbg !2723
  %129 = load i32, i32* %n_playlists122, align 8, !dbg !2723
  %cmp123 = icmp slt i32 %127, %129, !dbg !2724
  br i1 %cmp123, label %for.body125, label %for.end249, !dbg !2725

for.body125:                                      ; preds = %for.cond121
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls126, metadata !2726, metadata !2357), !dbg !2728
  %130 = load i32, i32* %i, align 4, !dbg !2729
  %idxprom127 = sext i32 %130 to i64, !dbg !2730
  %131 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !2730
  %playlists128 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %131, i32 0, i32 5, !dbg !2731
  %132 = load %struct.playlist**, %struct.playlist*** %playlists128, align 8, !dbg !2731
  %arrayidx129 = getelementptr inbounds %struct.playlist*, %struct.playlist** %132, i64 %idxprom127, !dbg !2730
  %133 = load %struct.playlist*, %struct.playlist** %arrayidx129, align 8, !dbg !2730
  store %struct.playlist* %133, %struct.playlist** %pls126, align 8, !dbg !2728
  call void @llvm.dbg.declare(metadata %struct.AVInputFormat** %in_fmt, metadata !2732, metadata !2357), !dbg !2734
  store %struct.AVInputFormat* null, %struct.AVInputFormat** %in_fmt, align 8, !dbg !2734
  %call130 = call %struct.AVFormatContext* @avformat_alloc_context(), !dbg !2735
  %134 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2737
  %ctx131 = getelementptr inbounds %struct.playlist, %struct.playlist* %134, i32 0, i32 9, !dbg !2738
  store %struct.AVFormatContext* %call130, %struct.AVFormatContext** %ctx131, align 8, !dbg !2739
  %tobool132 = icmp ne %struct.AVFormatContext* %call130, null, !dbg !2739
  br i1 %tobool132, label %if.end134, label %if.then133, !dbg !2740

if.then133:                                       ; preds = %for.body125
  store i32 -12, i32* %ret, align 4, !dbg !2741
  br label %fail, !dbg !2743

if.end134:                                        ; preds = %for.body125
  %135 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2744
  %n_segments135 = getelementptr inbounds %struct.playlist, %struct.playlist* %135, i32 0, i32 18, !dbg !2746
  %136 = load i32, i32* %n_segments135, align 4, !dbg !2746
  %cmp136 = icmp eq i32 %136, 0, !dbg !2747
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !2748

if.then138:                                       ; preds = %if.end134
  br label %for.inc247, !dbg !2749

if.end139:                                        ; preds = %if.end134
  %137 = load i32, i32* %i, align 4, !dbg !2750
  %138 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2751
  %index = getelementptr inbounds %struct.playlist, %struct.playlist* %138, i32 0, i32 8, !dbg !2752
  store i32 %137, i32* %index, align 8, !dbg !2753
  %139 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2754
  %needed = getelementptr inbounds %struct.playlist, %struct.playlist* %139, i32 0, i32 20, !dbg !2755
  store i32 1, i32* %needed, align 8, !dbg !2756
  %140 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2757
  %141 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2758
  %parent = getelementptr inbounds %struct.playlist, %struct.playlist* %141, i32 0, i32 7, !dbg !2759
  store %struct.AVFormatContext* %140, %struct.AVFormatContext** %parent, align 8, !dbg !2760
  %142 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2761
  %finished140 = getelementptr inbounds %struct.playlist, %struct.playlist* %142, i32 0, i32 14, !dbg !2763
  %143 = load i32, i32* %finished140, align 4, !dbg !2763
  %tobool141 = icmp ne i32 %143, 0, !dbg !2761
  br i1 %tobool141, label %if.end152, label %land.lhs.true, !dbg !2764

land.lhs.true:                                    ; preds = %if.end139
  %144 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2765
  %cur_seq_no142 = getelementptr inbounds %struct.playlist, %struct.playlist* %144, i32 0, i32 21, !dbg !2767
  %145 = load i32, i32* %cur_seq_no142, align 4, !dbg !2767
  %146 = load i32, i32* %highest_cur_seq_no, align 4, !dbg !2768
  %sub = sub nsw i32 %146, 1, !dbg !2769
  %cmp143 = icmp eq i32 %145, %sub, !dbg !2770
  br i1 %cmp143, label %land.lhs.true145, label %if.end152, !dbg !2771

land.lhs.true145:                                 ; preds = %land.lhs.true
  %147 = load i32, i32* %highest_cur_seq_no, align 4, !dbg !2772
  %148 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2773
  %start_seq_no = getelementptr inbounds %struct.playlist, %struct.playlist* %148, i32 0, i32 17, !dbg !2774
  %149 = load i32, i32* %start_seq_no, align 8, !dbg !2774
  %150 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2775
  %n_segments146 = getelementptr inbounds %struct.playlist, %struct.playlist* %150, i32 0, i32 18, !dbg !2776
  %151 = load i32, i32* %n_segments146, align 4, !dbg !2776
  %add147 = add nsw i32 %149, %151, !dbg !2777
  %cmp148 = icmp slt i32 %147, %add147, !dbg !2778
  br i1 %cmp148, label %if.then150, label %if.end152, !dbg !2779

if.then150:                                       ; preds = %land.lhs.true145
  %152 = load i32, i32* %highest_cur_seq_no, align 4, !dbg !2781
  %153 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2783
  %cur_seq_no151 = getelementptr inbounds %struct.playlist, %struct.playlist* %153, i32 0, i32 21, !dbg !2784
  store i32 %152, i32* %cur_seq_no151, align 4, !dbg !2785
  br label %if.end152, !dbg !2786

if.end152:                                        ; preds = %if.then150, %land.lhs.true145, %land.lhs.true, %if.end139
  %call153 = call noalias i8* @av_malloc(i64 32768), !dbg !2787
  %154 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2788
  %read_buffer = getelementptr inbounds %struct.playlist, %struct.playlist* %154, i32 0, i32 2, !dbg !2789
  store i8* %call153, i8** %read_buffer, align 8, !dbg !2790
  %155 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2791
  %read_buffer154 = getelementptr inbounds %struct.playlist, %struct.playlist* %155, i32 0, i32 2, !dbg !2793
  %156 = load i8*, i8** %read_buffer154, align 8, !dbg !2793
  %tobool155 = icmp ne i8* %156, null, !dbg !2791
  br i1 %tobool155, label %if.end159, label %if.then156, !dbg !2794

if.then156:                                       ; preds = %if.end152
  store i32 -12, i32* %ret, align 4, !dbg !2795
  %157 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2797
  %ctx157 = getelementptr inbounds %struct.playlist, %struct.playlist* %157, i32 0, i32 9, !dbg !2798
  %158 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx157, align 8, !dbg !2798
  call void @avformat_free_context(%struct.AVFormatContext* %158), !dbg !2799
  %159 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2800
  %ctx158 = getelementptr inbounds %struct.playlist, %struct.playlist* %159, i32 0, i32 9, !dbg !2801
  store %struct.AVFormatContext* null, %struct.AVFormatContext** %ctx158, align 8, !dbg !2802
  br label %fail, !dbg !2803

if.end159:                                        ; preds = %if.end152
  %160 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2804
  %pb160 = getelementptr inbounds %struct.playlist, %struct.playlist* %160, i32 0, i32 1, !dbg !2805
  %161 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2806
  %read_buffer161 = getelementptr inbounds %struct.playlist, %struct.playlist* %161, i32 0, i32 2, !dbg !2807
  %162 = load i8*, i8** %read_buffer161, align 8, !dbg !2807
  %163 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2808
  %164 = bitcast %struct.playlist* %163 to i8*, !dbg !2808
  %call162 = call i32 @ffio_init_context(%struct.AVIOContext* %pb160, i8* %162, i32 32768, i32 0, i8* %164, i32 (i8*, i8*, i32)* @read_data, i32 (i8*, i8*, i32)* null, i64 (i8*, i64, i32)* null), !dbg !2809
  %165 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2810
  %pb163 = getelementptr inbounds %struct.playlist, %struct.playlist* %165, i32 0, i32 1, !dbg !2811
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %pb163, i32 0, i32 19, !dbg !2812
  store i32 0, i32* %seekable, align 8, !dbg !2813
  %166 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2814
  %pb164 = getelementptr inbounds %struct.playlist, %struct.playlist* %166, i32 0, i32 1, !dbg !2815
  %167 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2816
  %segments165 = getelementptr inbounds %struct.playlist, %struct.playlist* %167, i32 0, i32 19, !dbg !2817
  %168 = load %struct.segment**, %struct.segment*** %segments165, align 8, !dbg !2817
  %arrayidx166 = getelementptr inbounds %struct.segment*, %struct.segment** %168, i64 0, !dbg !2816
  %169 = load %struct.segment*, %struct.segment** %arrayidx166, align 8, !dbg !2816
  %url167 = getelementptr inbounds %struct.segment, %struct.segment* %169, i32 0, i32 3, !dbg !2818
  %170 = load i8*, i8** %url167, align 8, !dbg !2818
  %call168 = call i32 @av_probe_input_buffer(%struct.AVIOContext* %pb164, %struct.AVInputFormat** %in_fmt, i8* %170, i8* null, i32 0, i32 0), !dbg !2819
  store i32 %call168, i32* %ret, align 4, !dbg !2820
  %171 = load i32, i32* %ret, align 4, !dbg !2821
  %cmp169 = icmp slt i32 %171, 0, !dbg !2823
  br i1 %cmp169, label %if.then171, label %if.end177, !dbg !2824

if.then171:                                       ; preds = %if.end159
  %172 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2825
  %173 = bitcast %struct.AVFormatContext* %172 to i8*, !dbg !2825
  %174 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2827
  %segments172 = getelementptr inbounds %struct.playlist, %struct.playlist* %174, i32 0, i32 19, !dbg !2828
  %175 = load %struct.segment**, %struct.segment*** %segments172, align 8, !dbg !2828
  %arrayidx173 = getelementptr inbounds %struct.segment*, %struct.segment** %175, i64 0, !dbg !2827
  %176 = load %struct.segment*, %struct.segment** %arrayidx173, align 8, !dbg !2827
  %url174 = getelementptr inbounds %struct.segment, %struct.segment* %176, i32 0, i32 3, !dbg !2829
  %177 = load i8*, i8** %url174, align 8, !dbg !2829
  call void (i8*, i32, i8*, ...) @av_log(i8* %173, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i32 0, i32 0), i8* %177), !dbg !2830
  %178 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2831
  %ctx175 = getelementptr inbounds %struct.playlist, %struct.playlist* %178, i32 0, i32 9, !dbg !2832
  %179 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx175, align 8, !dbg !2832
  call void @avformat_free_context(%struct.AVFormatContext* %179), !dbg !2833
  %180 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2834
  %ctx176 = getelementptr inbounds %struct.playlist, %struct.playlist* %180, i32 0, i32 9, !dbg !2835
  store %struct.AVFormatContext* null, %struct.AVFormatContext** %ctx176, align 8, !dbg !2836
  br label %fail, !dbg !2837

if.end177:                                        ; preds = %if.end159
  %181 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2838
  %pb178 = getelementptr inbounds %struct.playlist, %struct.playlist* %181, i32 0, i32 1, !dbg !2839
  %182 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2840
  %ctx179 = getelementptr inbounds %struct.playlist, %struct.playlist* %182, i32 0, i32 9, !dbg !2841
  %183 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx179, align 8, !dbg !2841
  %pb180 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %183, i32 0, i32 4, !dbg !2842
  store %struct.AVIOContext* %pb178, %struct.AVIOContext** %pb180, align 8, !dbg !2843
  %184 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2844
  %ctx181 = getelementptr inbounds %struct.playlist, %struct.playlist* %184, i32 0, i32 9, !dbg !2845
  %185 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx181, align 8, !dbg !2845
  %io_open = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %185, i32 0, i32 69, !dbg !2846
  store i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)* @nested_io_open, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)** %io_open, align 8, !dbg !2847
  %186 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2848
  %flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %186, i32 0, i32 15, !dbg !2849
  %187 = load i32, i32* %flags, align 8, !dbg !2849
  %and = and i32 %187, -129, !dbg !2850
  %188 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2851
  %ctx182 = getelementptr inbounds %struct.playlist, %struct.playlist* %188, i32 0, i32 9, !dbg !2852
  %189 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx182, align 8, !dbg !2852
  %flags183 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %189, i32 0, i32 15, !dbg !2853
  %190 = load i32, i32* %flags183, align 8, !dbg !2854
  %or = or i32 %190, %and, !dbg !2854
  store i32 %or, i32* %flags183, align 8, !dbg !2854
  %191 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2855
  %ctx184 = getelementptr inbounds %struct.playlist, %struct.playlist* %191, i32 0, i32 9, !dbg !2857
  %192 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx184, align 8, !dbg !2857
  %193 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2858
  %call185 = call i32 @ff_copy_whiteblacklists(%struct.AVFormatContext* %192, %struct.AVFormatContext* %193), !dbg !2859
  store i32 %call185, i32* %ret, align 4, !dbg !2860
  %cmp186 = icmp slt i32 %call185, 0, !dbg !2861
  br i1 %cmp186, label %if.then188, label %if.end189, !dbg !2862

if.then188:                                       ; preds = %if.end177
  br label %fail, !dbg !2863

if.end189:                                        ; preds = %if.end177
  %194 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2864
  %ctx190 = getelementptr inbounds %struct.playlist, %struct.playlist* %194, i32 0, i32 9, !dbg !2865
  %195 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2866
  %segments191 = getelementptr inbounds %struct.playlist, %struct.playlist* %195, i32 0, i32 19, !dbg !2867
  %196 = load %struct.segment**, %struct.segment*** %segments191, align 8, !dbg !2867
  %arrayidx192 = getelementptr inbounds %struct.segment*, %struct.segment** %196, i64 0, !dbg !2866
  %197 = load %struct.segment*, %struct.segment** %arrayidx192, align 8, !dbg !2866
  %url193 = getelementptr inbounds %struct.segment, %struct.segment* %197, i32 0, i32 3, !dbg !2868
  %198 = load i8*, i8** %url193, align 8, !dbg !2868
  %199 = load %struct.AVInputFormat*, %struct.AVInputFormat** %in_fmt, align 8, !dbg !2869
  %call194 = call i32 @avformat_open_input(%struct.AVFormatContext** %ctx190, i8* %198, %struct.AVInputFormat* %199, %struct.AVDictionary** null), !dbg !2870
  store i32 %call194, i32* %ret, align 4, !dbg !2871
  %200 = load i32, i32* %ret, align 4, !dbg !2872
  %cmp195 = icmp slt i32 %200, 0, !dbg !2874
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !2875

if.then197:                                       ; preds = %if.end189
  br label %fail, !dbg !2876

if.end198:                                        ; preds = %if.end189
  %201 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2877
  %id3_deferred_extra = getelementptr inbounds %struct.playlist, %struct.playlist* %201, i32 0, i32 39, !dbg !2879
  %202 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %id3_deferred_extra, align 8, !dbg !2879
  %tobool199 = icmp ne %struct.ID3v2ExtraMeta* %202, null, !dbg !2877
  br i1 %tobool199, label %land.lhs.true200, label %if.end215, !dbg !2880

land.lhs.true200:                                 ; preds = %if.end198
  %203 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2881
  %ctx201 = getelementptr inbounds %struct.playlist, %struct.playlist* %203, i32 0, i32 9, !dbg !2883
  %204 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx201, align 8, !dbg !2883
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %204, i32 0, i32 6, !dbg !2884
  %205 = load i32, i32* %nb_streams, align 4, !dbg !2884
  %cmp202 = icmp eq i32 %205, 1, !dbg !2885
  br i1 %cmp202, label %if.then204, label %if.end215, !dbg !2886

if.then204:                                       ; preds = %land.lhs.true200
  %206 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2887
  %ctx205 = getelementptr inbounds %struct.playlist, %struct.playlist* %206, i32 0, i32 9, !dbg !2889
  %207 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx205, align 8, !dbg !2889
  %208 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2890
  %id3_deferred_extra206 = getelementptr inbounds %struct.playlist, %struct.playlist* %208, i32 0, i32 39, !dbg !2891
  %call207 = call i32 @ff_id3v2_parse_apic(%struct.AVFormatContext* %207, %struct.ID3v2ExtraMeta** %id3_deferred_extra206), !dbg !2892
  %209 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2893
  %ctx208 = getelementptr inbounds %struct.playlist, %struct.playlist* %209, i32 0, i32 9, !dbg !2894
  %210 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx208, align 8, !dbg !2894
  %call209 = call i32 @avformat_queue_attached_pictures(%struct.AVFormatContext* %210), !dbg !2895
  %211 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2896
  %ctx210 = getelementptr inbounds %struct.playlist, %struct.playlist* %211, i32 0, i32 9, !dbg !2897
  %212 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx210, align 8, !dbg !2897
  %213 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2898
  %id3_deferred_extra211 = getelementptr inbounds %struct.playlist, %struct.playlist* %213, i32 0, i32 39, !dbg !2899
  %call212 = call i32 @ff_id3v2_parse_priv(%struct.AVFormatContext* %212, %struct.ID3v2ExtraMeta** %id3_deferred_extra211), !dbg !2900
  %214 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2901
  %id3_deferred_extra213 = getelementptr inbounds %struct.playlist, %struct.playlist* %214, i32 0, i32 39, !dbg !2902
  call void @ff_id3v2_free_extra_meta(%struct.ID3v2ExtraMeta** %id3_deferred_extra213), !dbg !2903
  %215 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2904
  %id3_deferred_extra214 = getelementptr inbounds %struct.playlist, %struct.playlist* %215, i32 0, i32 39, !dbg !2905
  store %struct.ID3v2ExtraMeta* null, %struct.ID3v2ExtraMeta** %id3_deferred_extra214, align 8, !dbg !2906
  br label %if.end215, !dbg !2907

if.end215:                                        ; preds = %if.then204, %land.lhs.true200, %if.end198
  %216 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2908
  %is_id3_timestamped = getelementptr inbounds %struct.playlist, %struct.playlist* %216, i32 0, i32 31, !dbg !2910
  %217 = load i32, i32* %is_id3_timestamped, align 4, !dbg !2910
  %cmp216 = icmp eq i32 %217, -1, !dbg !2911
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !2912

if.then218:                                       ; preds = %if.end215
  %218 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2913
  %219 = bitcast %struct.AVFormatContext* %218 to i8*, !dbg !2913
  call void (i8*, i32, i8*, ...) @av_log(i8* %219, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0)), !dbg !2914
  br label %if.end219, !dbg !2914

if.end219:                                        ; preds = %if.then218, %if.end215
  %220 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2915
  %is_id3_timestamped220 = getelementptr inbounds %struct.playlist, %struct.playlist* %220, i32 0, i32 31, !dbg !2917
  %221 = load i32, i32* %is_id3_timestamped220, align 4, !dbg !2917
  %tobool221 = icmp ne i32 %221, 0, !dbg !2915
  br i1 %tobool221, label %if.then222, label %if.end229, !dbg !2918

if.then222:                                       ; preds = %if.end219
  %222 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2919
  %ctx223 = getelementptr inbounds %struct.playlist, %struct.playlist* %222, i32 0, i32 9, !dbg !2921
  %223 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx223, align 8, !dbg !2921
  %call224 = call i32 @avformat_find_stream_info(%struct.AVFormatContext* %223, %struct.AVDictionary** null), !dbg !2922
  store i32 %call224, i32* %ret, align 4, !dbg !2923
  %224 = load i32, i32* %ret, align 4, !dbg !2924
  %cmp225 = icmp slt i32 %224, 0, !dbg !2926
  br i1 %cmp225, label %if.then227, label %if.end228, !dbg !2927

if.then227:                                       ; preds = %if.then222
  br label %fail, !dbg !2928

if.end228:                                        ; preds = %if.then222
  br label %if.end229, !dbg !2929

if.end229:                                        ; preds = %if.end228, %if.end219
  %225 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2930
  %ctx230 = getelementptr inbounds %struct.playlist, %struct.playlist* %225, i32 0, i32 9, !dbg !2931
  %226 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx230, align 8, !dbg !2931
  %ctx_flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %226, i32 0, i32 5, !dbg !2932
  %227 = load i32, i32* %ctx_flags, align 8, !dbg !2932
  %and231 = and i32 %227, 1, !dbg !2933
  %tobool232 = icmp ne i32 %and231, 0, !dbg !2934
  %lnot = xor i1 %tobool232, true, !dbg !2934
  %lnot233 = xor i1 %lnot, true, !dbg !2935
  %lnot.ext = zext i1 %lnot233 to i32, !dbg !2935
  %228 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2936
  %has_noheader_flag = getelementptr inbounds %struct.playlist, %struct.playlist* %228, i32 0, i32 11, !dbg !2937
  store i32 %lnot.ext, i32* %has_noheader_flag, align 8, !dbg !2938
  %229 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2939
  %230 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2940
  %call234 = call i32 @update_streams_from_subdemuxer(%struct.AVFormatContext* %229, %struct.playlist* %230), !dbg !2941
  store i32 %call234, i32* %ret, align 4, !dbg !2942
  %231 = load i32, i32* %ret, align 4, !dbg !2943
  %cmp235 = icmp slt i32 %231, 0, !dbg !2945
  br i1 %cmp235, label %if.then237, label %if.end238, !dbg !2946

if.then237:                                       ; preds = %if.end229
  br label %fail, !dbg !2947

if.end238:                                        ; preds = %if.end229
  %232 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2948
  %n_main_streams = getelementptr inbounds %struct.playlist, %struct.playlist* %232, i32 0, i32 13, !dbg !2950
  %233 = load i32, i32* %n_main_streams, align 8, !dbg !2950
  %tobool239 = icmp ne i32 %233, 0, !dbg !2948
  br i1 %tobool239, label %if.then240, label %if.end246, !dbg !2951

if.then240:                                       ; preds = %if.end238
  %234 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2952
  %main_streams = getelementptr inbounds %struct.playlist, %struct.playlist* %234, i32 0, i32 12, !dbg !2953
  %235 = load %struct.AVStream**, %struct.AVStream*** %main_streams, align 8, !dbg !2953
  %arrayidx241 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %235, i64 0, !dbg !2952
  %236 = load %struct.AVStream*, %struct.AVStream** %arrayidx241, align 8, !dbg !2952
  %metadata242 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %236, i32 0, i32 11, !dbg !2954
  %237 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2955
  %ctx243 = getelementptr inbounds %struct.playlist, %struct.playlist* %237, i32 0, i32 9, !dbg !2956
  %238 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx243, align 8, !dbg !2956
  %metadata244 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %238, i32 0, i32 29, !dbg !2957
  %239 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata244, align 8, !dbg !2957
  %call245 = call i32 @av_dict_copy(%struct.AVDictionary** %metadata242, %struct.AVDictionary* %239, i32 0), !dbg !2958
  br label %if.end246, !dbg !2958

if.end246:                                        ; preds = %if.then240, %if.end238
  %240 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2959
  %241 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2960
  call void @add_metadata_from_renditions(%struct.AVFormatContext* %240, %struct.playlist* %241, i32 1), !dbg !2961
  %242 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2962
  %243 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2963
  call void @add_metadata_from_renditions(%struct.AVFormatContext* %242, %struct.playlist* %243, i32 0), !dbg !2964
  %244 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2965
  %245 = load %struct.playlist*, %struct.playlist** %pls126, align 8, !dbg !2966
  call void @add_metadata_from_renditions(%struct.AVFormatContext* %244, %struct.playlist* %245, i32 3), !dbg !2967
  br label %for.inc247, !dbg !2968

for.inc247:                                       ; preds = %if.end246, %if.then138
  %246 = load i32, i32* %i, align 4, !dbg !2969
  %inc248 = add nsw i32 %246, 1, !dbg !2969
  store i32 %inc248, i32* %i, align 4, !dbg !2969
  br label %for.cond121, !dbg !2971, !llvm.loop !2972

for.end249:                                       ; preds = %for.cond121
  %247 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2974
  call void @update_noheader_flag(%struct.AVFormatContext* %247), !dbg !2975
  store i32 0, i32* %retval, align 4, !dbg !2976
  br label %return, !dbg !2976

fail:                                             ; preds = %if.then237, %if.then227, %if.then197, %if.then188, %if.then171, %if.then156, %if.then133, %if.then93, %if.then29, %if.then21, %if.then9, %if.then6, %if.then
  %248 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2977
  %call250 = call i32 @hls_close(%struct.AVFormatContext* %248), !dbg !2978
  %249 = load i32, i32* %ret, align 4, !dbg !2979
  store i32 %249, i32* %retval, align 4, !dbg !2980
  br label %return, !dbg !2980

return:                                           ; preds = %fail, %for.end249
  %250 = load i32, i32* %retval, align 4, !dbg !2981
  ret i32 %250, !dbg !2981
}

; Function Attrs: nounwind uwtable
define internal i32 @hls_read_packet(%struct.AVFormatContext* %s, %struct.AVPacket* %pkt) #0 !dbg !2982 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %c = alloca %struct.HLSContext*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %minplaylist = alloca i32, align 4
  %pls = alloca %struct.playlist*, align 8
  %ts_diff = alloca i64, align 8
  %tb = alloca %struct.AVRational, align 4
  %agg.tmp = alloca %struct.AVRational, align 4
  %.compoundliteral = alloca %struct.AVRational, align 4
  %coerce = alloca %struct.AVRational, align 4
  %minpls = alloca %struct.playlist*, align 8
  %dts81 = alloca i64, align 8
  %mindts = alloca i64, align 8
  %pls102 = alloca %struct.playlist*, align 8
  %ist = alloca %struct.AVStream*, align 8
  %st = alloca %struct.AVStream*, align 8
  %.compoundliteral171 = alloca %struct.AVRational, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !2985, metadata !2357), !dbg !2986
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !2987, metadata !2357), !dbg !2988
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c, metadata !2989, metadata !2357), !dbg !2990
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2991
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !2992
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2992
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !2991
  store %struct.HLSContext* %2, %struct.HLSContext** %c, align 8, !dbg !2990
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2993, metadata !2357), !dbg !2994
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2995, metadata !2357), !dbg !2996
  call void @llvm.dbg.declare(metadata i32* %minplaylist, metadata !2997, metadata !2357), !dbg !2998
  store i32 -1, i32* %minplaylist, align 4, !dbg !2998
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2999
  %4 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3000
  %first_packet = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 10, !dbg !3001
  %5 = load i32, i32* %first_packet, align 8, !dbg !3001
  %call = call i32 @recheck_discard_flags(%struct.AVFormatContext* %3, i32 %5), !dbg !3002
  %6 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3003
  %first_packet1 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %6, i32 0, i32 10, !dbg !3004
  store i32 0, i32* %first_packet1, align 8, !dbg !3005
  store i32 0, i32* %i, align 4, !dbg !3006
  br label %for.cond, !dbg !3008

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !3009
  %8 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3012
  %n_playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %8, i32 0, i32 4, !dbg !3013
  %9 = load i32, i32* %n_playlists, align 8, !dbg !3013
  %cmp = icmp slt i32 %7, %9, !dbg !3014
  br i1 %cmp, label %for.body, label %for.end, !dbg !3015

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls, metadata !3016, metadata !2357), !dbg !3018
  %10 = load i32, i32* %i, align 4, !dbg !3019
  %idxprom = sext i32 %10 to i64, !dbg !3020
  %11 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3020
  %playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %11, i32 0, i32 5, !dbg !3021
  %12 = load %struct.playlist**, %struct.playlist*** %playlists, align 8, !dbg !3021
  %arrayidx = getelementptr inbounds %struct.playlist*, %struct.playlist** %12, i64 %idxprom, !dbg !3020
  %13 = load %struct.playlist*, %struct.playlist** %arrayidx, align 8, !dbg !3020
  store %struct.playlist* %13, %struct.playlist** %pls, align 8, !dbg !3018
  %14 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3022
  %needed = getelementptr inbounds %struct.playlist, %struct.playlist* %14, i32 0, i32 20, !dbg !3024
  %15 = load i32, i32* %needed, align 8, !dbg !3024
  %tobool = icmp ne i32 %15, 0, !dbg !3022
  br i1 %tobool, label %land.lhs.true, label %if.end67, !dbg !3025

land.lhs.true:                                    ; preds = %for.body
  %16 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3026
  %pkt2 = getelementptr inbounds %struct.playlist, %struct.playlist* %16, i32 0, i32 10, !dbg !3028
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt2, i32 0, i32 3, !dbg !3029
  %17 = load i8*, i8** %data, align 8, !dbg !3029
  %tobool3 = icmp ne i8* %17, null, !dbg !3026
  br i1 %tobool3, label %if.end67, label %if.then, !dbg !3030

if.then:                                          ; preds = %land.lhs.true
  br label %while.body, !dbg !3031

while.body:                                       ; preds = %if.then, %if.end64
  call void @llvm.dbg.declare(metadata i64* %ts_diff, metadata !3033, metadata !2357), !dbg !3035
  call void @llvm.dbg.declare(metadata %struct.AVRational* %tb, metadata !3036, metadata !2357), !dbg !3037
  %18 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3038
  %ctx = getelementptr inbounds %struct.playlist, %struct.playlist* %18, i32 0, i32 9, !dbg !3039
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !3039
  %20 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3040
  %pkt4 = getelementptr inbounds %struct.playlist, %struct.playlist* %20, i32 0, i32 10, !dbg !3041
  %call5 = call i32 @av_read_frame(%struct.AVFormatContext* %19, %struct.AVPacket* %pkt4), !dbg !3042
  store i32 %call5, i32* %ret, align 4, !dbg !3043
  %21 = load i32, i32* %ret, align 4, !dbg !3044
  %cmp6 = icmp slt i32 %21, 0, !dbg !3046
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !3047

if.then7:                                         ; preds = %while.body
  %22 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3048
  %pb = getelementptr inbounds %struct.playlist, %struct.playlist* %22, i32 0, i32 1, !dbg !3051
  %call8 = call i32 @avio_feof(%struct.AVIOContext* %pb), !dbg !3052
  %tobool9 = icmp ne i32 %call8, 0, !dbg !3052
  br i1 %tobool9, label %if.end, label %land.lhs.true10, !dbg !3053

land.lhs.true10:                                  ; preds = %if.then7
  %23 = load i32, i32* %ret, align 4, !dbg !3054
  %cmp11 = icmp ne i32 %23, -541478725, !dbg !3056
  br i1 %cmp11, label %if.then12, label %if.end, !dbg !3057

if.then12:                                        ; preds = %land.lhs.true10
  %24 = load i32, i32* %ret, align 4, !dbg !3058
  store i32 %24, i32* %retval, align 4, !dbg !3059
  br label %return, !dbg !3059

if.end:                                           ; preds = %land.lhs.true10, %if.then7
  %25 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3060
  %pkt13 = getelementptr inbounds %struct.playlist, %struct.playlist* %25, i32 0, i32 10, !dbg !3061
  call void @reset_packet(%struct.AVPacket* %pkt13), !dbg !3062
  br label %while.end, !dbg !3063

if.else:                                          ; preds = %while.body
  %26 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3064
  %is_id3_timestamped = getelementptr inbounds %struct.playlist, %struct.playlist* %26, i32 0, i32 31, !dbg !3067
  %27 = load i32, i32* %is_id3_timestamped, align 4, !dbg !3067
  %tobool14 = icmp ne i32 %27, 0, !dbg !3064
  br i1 %tobool14, label %land.lhs.true15, label %if.end19, !dbg !3068

land.lhs.true15:                                  ; preds = %if.else
  %28 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3069
  %pkt16 = getelementptr inbounds %struct.playlist, %struct.playlist* %28, i32 0, i32 10, !dbg !3071
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt16, i32 0, i32 5, !dbg !3072
  %29 = load i32, i32* %stream_index, align 4, !dbg !3072
  %cmp17 = icmp eq i32 %29, 0, !dbg !3073
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !3074

if.then18:                                        ; preds = %land.lhs.true15
  %30 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3075
  call void @fill_timing_for_id3_timestamped_stream(%struct.playlist* %30), !dbg !3077
  br label %if.end19, !dbg !3078

if.end19:                                         ; preds = %if.then18, %land.lhs.true15, %if.else
  %31 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3079
  %first_timestamp = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %31, i32 0, i32 11, !dbg !3081
  %32 = load i64, i64* %first_timestamp, align 8, !dbg !3081
  %cmp20 = icmp eq i64 %32, -9223372036854775808, !dbg !3082
  br i1 %cmp20, label %land.lhs.true21, label %if.end30, !dbg !3083

land.lhs.true21:                                  ; preds = %if.end19
  %33 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3084
  %pkt22 = getelementptr inbounds %struct.playlist, %struct.playlist* %33, i32 0, i32 10, !dbg !3085
  %dts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt22, i32 0, i32 2, !dbg !3086
  %34 = load i64, i64* %dts, align 8, !dbg !3086
  %cmp23 = icmp ne i64 %34, -9223372036854775808, !dbg !3087
  br i1 %cmp23, label %if.then24, label %if.end30, !dbg !3088

if.then24:                                        ; preds = %land.lhs.true21
  %35 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3090
  %pkt25 = getelementptr inbounds %struct.playlist, %struct.playlist* %35, i32 0, i32 10, !dbg !3091
  %dts26 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt25, i32 0, i32 2, !dbg !3092
  %36 = load i64, i64* %dts26, align 8, !dbg !3092
  %37 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3093
  %call27 = call i64 @get_timebase(%struct.playlist* %37), !dbg !3094
  %38 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !3094
  store i64 %call27, i64* %38, align 4, !dbg !3094
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !3095
  store i32 1, i32* %num, align 4, !dbg !3095
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !3095
  store i32 1000000, i32* %den, align 4, !dbg !3095
  %39 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !3096
  %40 = load i64, i64* %39, align 4, !dbg !3096
  %41 = bitcast %struct.AVRational* %.compoundliteral to i64*, !dbg !3096
  %42 = load i64, i64* %41, align 4, !dbg !3096
  %call28 = call i64 @av_rescale_q(i64 %36, i64 %40, i64 %42) #2, !dbg !3096
  %43 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3097
  %first_timestamp29 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %43, i32 0, i32 11, !dbg !3098
  store i64 %call28, i64* %first_timestamp29, align 8, !dbg !3099
  br label %if.end30, !dbg !3097

if.end30:                                         ; preds = %if.then24, %land.lhs.true21, %if.end19
  br label %if.end31

if.end31:                                         ; preds = %if.end30
  %44 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3100
  %seek_timestamp = getelementptr inbounds %struct.playlist, %struct.playlist* %44, i32 0, i32 40, !dbg !3102
  %45 = load i64, i64* %seek_timestamp, align 8, !dbg !3102
  %cmp32 = icmp eq i64 %45, -9223372036854775808, !dbg !3103
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !3104

if.then33:                                        ; preds = %if.end31
  br label %while.end, !dbg !3105

if.end34:                                         ; preds = %if.end31
  %46 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3106
  %seek_stream_index = getelementptr inbounds %struct.playlist, %struct.playlist* %46, i32 0, i32 42, !dbg !3108
  %47 = load i32, i32* %seek_stream_index, align 4, !dbg !3108
  %cmp35 = icmp slt i32 %47, 0, !dbg !3109
  br i1 %cmp35, label %if.then40, label %lor.lhs.false, !dbg !3110

lor.lhs.false:                                    ; preds = %if.end34
  %48 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3111
  %seek_stream_index36 = getelementptr inbounds %struct.playlist, %struct.playlist* %48, i32 0, i32 42, !dbg !3112
  %49 = load i32, i32* %seek_stream_index36, align 4, !dbg !3112
  %50 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3113
  %pkt37 = getelementptr inbounds %struct.playlist, %struct.playlist* %50, i32 0, i32 10, !dbg !3114
  %stream_index38 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt37, i32 0, i32 5, !dbg !3115
  %51 = load i32, i32* %stream_index38, align 4, !dbg !3115
  %cmp39 = icmp eq i32 %49, %51, !dbg !3116
  br i1 %cmp39, label %if.then40, label %if.end64, !dbg !3117

if.then40:                                        ; preds = %lor.lhs.false, %if.end34
  %52 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3119
  %pkt41 = getelementptr inbounds %struct.playlist, %struct.playlist* %52, i32 0, i32 10, !dbg !3122
  %dts42 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt41, i32 0, i32 2, !dbg !3123
  %53 = load i64, i64* %dts42, align 8, !dbg !3123
  %cmp43 = icmp eq i64 %53, -9223372036854775808, !dbg !3124
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !3125

if.then44:                                        ; preds = %if.then40
  %54 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3126
  %seek_timestamp45 = getelementptr inbounds %struct.playlist, %struct.playlist* %54, i32 0, i32 40, !dbg !3128
  store i64 -9223372036854775808, i64* %seek_timestamp45, align 8, !dbg !3129
  br label %while.end, !dbg !3130

if.end46:                                         ; preds = %if.then40
  %55 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3131
  %call47 = call i64 @get_timebase(%struct.playlist* %55), !dbg !3132
  %56 = bitcast %struct.AVRational* %coerce to i64*, !dbg !3132
  store i64 %call47, i64* %56, align 4, !dbg !3132
  %57 = bitcast %struct.AVRational* %tb to i8*, !dbg !3132
  %58 = bitcast %struct.AVRational* %coerce to i8*, !dbg !3132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 4, i1 false), !dbg !3133
  %59 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3135
  %pkt48 = getelementptr inbounds %struct.playlist, %struct.playlist* %59, i32 0, i32 10, !dbg !3136
  %dts49 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt48, i32 0, i32 2, !dbg !3137
  %60 = load i64, i64* %dts49, align 8, !dbg !3137
  %den50 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %tb, i32 0, i32 1, !dbg !3138
  %61 = load i32, i32* %den50, align 4, !dbg !3138
  %conv = sext i32 %61 to i64, !dbg !3139
  %call51 = call i64 @av_rescale_rnd(i64 %60, i64 1000000, i64 %conv, i32 2) #2, !dbg !3140
  %62 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3141
  %seek_timestamp52 = getelementptr inbounds %struct.playlist, %struct.playlist* %62, i32 0, i32 40, !dbg !3142
  %63 = load i64, i64* %seek_timestamp52, align 8, !dbg !3142
  %sub = sub nsw i64 %call51, %63, !dbg !3143
  store i64 %sub, i64* %ts_diff, align 8, !dbg !3144
  %64 = load i64, i64* %ts_diff, align 8, !dbg !3145
  %cmp53 = icmp sge i64 %64, 0, !dbg !3147
  br i1 %cmp53, label %land.lhs.true55, label %if.end63, !dbg !3148

land.lhs.true55:                                  ; preds = %if.end46
  %65 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3149
  %seek_flags = getelementptr inbounds %struct.playlist, %struct.playlist* %65, i32 0, i32 41, !dbg !3151
  %66 = load i32, i32* %seek_flags, align 8, !dbg !3151
  %and = and i32 %66, 4, !dbg !3152
  %tobool56 = icmp ne i32 %and, 0, !dbg !3152
  br i1 %tobool56, label %if.then61, label %lor.lhs.false57, !dbg !3153

lor.lhs.false57:                                  ; preds = %land.lhs.true55
  %67 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3154
  %pkt58 = getelementptr inbounds %struct.playlist, %struct.playlist* %67, i32 0, i32 10, !dbg !3155
  %flags = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt58, i32 0, i32 6, !dbg !3156
  %68 = load i32, i32* %flags, align 8, !dbg !3156
  %and59 = and i32 %68, 1, !dbg !3157
  %tobool60 = icmp ne i32 %and59, 0, !dbg !3157
  br i1 %tobool60, label %if.then61, label %if.end63, !dbg !3158

if.then61:                                        ; preds = %lor.lhs.false57, %land.lhs.true55
  %69 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3160
  %seek_timestamp62 = getelementptr inbounds %struct.playlist, %struct.playlist* %69, i32 0, i32 40, !dbg !3162
  store i64 -9223372036854775808, i64* %seek_timestamp62, align 8, !dbg !3163
  br label %while.end, !dbg !3164

if.end63:                                         ; preds = %lor.lhs.false57, %if.end46
  br label %if.end64, !dbg !3165

if.end64:                                         ; preds = %if.end63, %lor.lhs.false
  %70 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3166
  %pkt65 = getelementptr inbounds %struct.playlist, %struct.playlist* %70, i32 0, i32 10, !dbg !3167
  call void @av_packet_unref(%struct.AVPacket* %pkt65), !dbg !3168
  %71 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3169
  %pkt66 = getelementptr inbounds %struct.playlist, %struct.playlist* %71, i32 0, i32 10, !dbg !3170
  call void @reset_packet(%struct.AVPacket* %pkt66), !dbg !3171
  br label %while.body, !dbg !3172, !llvm.loop !3174

while.end:                                        ; preds = %if.then61, %if.then44, %if.then33, %if.end
  br label %if.end67, !dbg !3175

if.end67:                                         ; preds = %while.end, %land.lhs.true, %for.body
  %72 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3176
  %pkt68 = getelementptr inbounds %struct.playlist, %struct.playlist* %72, i32 0, i32 10, !dbg !3178
  %data69 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt68, i32 0, i32 3, !dbg !3179
  %73 = load i8*, i8** %data69, align 8, !dbg !3179
  %tobool70 = icmp ne i8* %73, null, !dbg !3176
  br i1 %tobool70, label %if.then71, label %if.end98, !dbg !3180

if.then71:                                        ; preds = %if.end67
  call void @llvm.dbg.declare(metadata %struct.playlist** %minpls, metadata !3181, metadata !2357), !dbg !3183
  %74 = load i32, i32* %minplaylist, align 4, !dbg !3184
  %cmp72 = icmp slt i32 %74, 0, !dbg !3185
  br i1 %cmp72, label %cond.true, label %cond.false, !dbg !3184

cond.true:                                        ; preds = %if.then71
  br label %cond.end, !dbg !3186

cond.false:                                       ; preds = %if.then71
  %75 = load i32, i32* %minplaylist, align 4, !dbg !3188
  %idxprom74 = sext i32 %75 to i64, !dbg !3189
  %76 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3189
  %playlists75 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %76, i32 0, i32 5, !dbg !3190
  %77 = load %struct.playlist**, %struct.playlist*** %playlists75, align 8, !dbg !3190
  %arrayidx76 = getelementptr inbounds %struct.playlist*, %struct.playlist** %77, i64 %idxprom74, !dbg !3189
  %78 = load %struct.playlist*, %struct.playlist** %arrayidx76, align 8, !dbg !3189
  br label %cond.end, !dbg !3191

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.playlist* [ null, %cond.true ], [ %78, %cond.false ], !dbg !3193
  store %struct.playlist* %cond, %struct.playlist** %minpls, align 8, !dbg !3195
  %79 = load i32, i32* %minplaylist, align 4, !dbg !3196
  %cmp77 = icmp slt i32 %79, 0, !dbg !3198
  br i1 %cmp77, label %if.then79, label %if.else80, !dbg !3199

if.then79:                                        ; preds = %cond.end
  %80 = load i32, i32* %i, align 4, !dbg !3200
  store i32 %80, i32* %minplaylist, align 4, !dbg !3202
  br label %if.end97, !dbg !3203

if.else80:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %dts81, metadata !3204, metadata !2357), !dbg !3206
  %81 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3207
  %pkt82 = getelementptr inbounds %struct.playlist, %struct.playlist* %81, i32 0, i32 10, !dbg !3208
  %dts83 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt82, i32 0, i32 2, !dbg !3209
  %82 = load i64, i64* %dts83, align 8, !dbg !3209
  store i64 %82, i64* %dts81, align 8, !dbg !3206
  call void @llvm.dbg.declare(metadata i64* %mindts, metadata !3210, metadata !2357), !dbg !3211
  %83 = load %struct.playlist*, %struct.playlist** %minpls, align 8, !dbg !3212
  %pkt84 = getelementptr inbounds %struct.playlist, %struct.playlist* %83, i32 0, i32 10, !dbg !3213
  %dts85 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt84, i32 0, i32 2, !dbg !3214
  %84 = load i64, i64* %dts85, align 8, !dbg !3214
  store i64 %84, i64* %mindts, align 8, !dbg !3211
  %85 = load i64, i64* %dts81, align 8, !dbg !3215
  %cmp86 = icmp eq i64 %85, -9223372036854775808, !dbg !3217
  br i1 %cmp86, label %if.then95, label %lor.lhs.false88, !dbg !3218

lor.lhs.false88:                                  ; preds = %if.else80
  %86 = load i64, i64* %mindts, align 8, !dbg !3219
  %cmp89 = icmp ne i64 %86, -9223372036854775808, !dbg !3220
  br i1 %cmp89, label %land.lhs.true91, label %if.end96, !dbg !3221

land.lhs.true91:                                  ; preds = %lor.lhs.false88
  %87 = load i64, i64* %dts81, align 8, !dbg !3222
  %88 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3224
  %89 = load i64, i64* %mindts, align 8, !dbg !3225
  %90 = load %struct.playlist*, %struct.playlist** %minpls, align 8, !dbg !3226
  %call92 = call i32 @compare_ts_with_wrapdetect(i64 %87, %struct.playlist* %88, i64 %89, %struct.playlist* %90), !dbg !3227
  %cmp93 = icmp slt i32 %call92, 0, !dbg !3228
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !3229

if.then95:                                        ; preds = %land.lhs.true91, %if.else80
  %91 = load i32, i32* %i, align 4, !dbg !3231
  store i32 %91, i32* %minplaylist, align 4, !dbg !3232
  br label %if.end96, !dbg !3233

if.end96:                                         ; preds = %if.then95, %land.lhs.true91, %lor.lhs.false88
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then79
  br label %if.end98, !dbg !3234

if.end98:                                         ; preds = %if.end97, %if.end67
  br label %for.inc, !dbg !3235

for.inc:                                          ; preds = %if.end98
  %92 = load i32, i32* %i, align 4, !dbg !3236
  %inc = add nsw i32 %92, 1, !dbg !3236
  store i32 %inc, i32* %i, align 4, !dbg !3236
  br label %for.cond, !dbg !3238, !llvm.loop !3239

for.end:                                          ; preds = %for.cond
  %93 = load i32, i32* %minplaylist, align 4, !dbg !3241
  %cmp99 = icmp sge i32 %93, 0, !dbg !3243
  br i1 %cmp99, label %if.then101, label %if.end187, !dbg !3244

if.then101:                                       ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls102, metadata !3245, metadata !2357), !dbg !3247
  %94 = load i32, i32* %minplaylist, align 4, !dbg !3248
  %idxprom103 = sext i32 %94 to i64, !dbg !3249
  %95 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3249
  %playlists104 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %95, i32 0, i32 5, !dbg !3250
  %96 = load %struct.playlist**, %struct.playlist*** %playlists104, align 8, !dbg !3250
  %arrayidx105 = getelementptr inbounds %struct.playlist*, %struct.playlist** %96, i64 %idxprom103, !dbg !3249
  %97 = load %struct.playlist*, %struct.playlist** %arrayidx105, align 8, !dbg !3249
  store %struct.playlist* %97, %struct.playlist** %pls102, align 8, !dbg !3247
  call void @llvm.dbg.declare(metadata %struct.AVStream** %ist, metadata !3251, metadata !2357), !dbg !3252
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !3253, metadata !2357), !dbg !3254
  %98 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3255
  %99 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3256
  %call106 = call i32 @update_streams_from_subdemuxer(%struct.AVFormatContext* %98, %struct.playlist* %99), !dbg !3257
  store i32 %call106, i32* %ret, align 4, !dbg !3258
  %100 = load i32, i32* %ret, align 4, !dbg !3259
  %cmp107 = icmp slt i32 %100, 0, !dbg !3261
  br i1 %cmp107, label %if.then109, label %if.end112, !dbg !3262

if.then109:                                       ; preds = %if.then101
  %101 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3263
  %pkt110 = getelementptr inbounds %struct.playlist, %struct.playlist* %101, i32 0, i32 10, !dbg !3265
  call void @av_packet_unref(%struct.AVPacket* %pkt110), !dbg !3266
  %102 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3267
  %pkt111 = getelementptr inbounds %struct.playlist, %struct.playlist* %102, i32 0, i32 10, !dbg !3268
  call void @reset_packet(%struct.AVPacket* %pkt111), !dbg !3269
  %103 = load i32, i32* %ret, align 4, !dbg !3270
  store i32 %103, i32* %retval, align 4, !dbg !3271
  br label %return, !dbg !3271

if.end112:                                        ; preds = %if.then101
  %104 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3272
  %ctx113 = getelementptr inbounds %struct.playlist, %struct.playlist* %104, i32 0, i32 9, !dbg !3274
  %105 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx113, align 8, !dbg !3274
  %event_flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %105, i32 0, i32 37, !dbg !3275
  %106 = load i32, i32* %event_flags, align 4, !dbg !3275
  %and114 = and i32 %106, 1, !dbg !3276
  %tobool115 = icmp ne i32 %and114, 0, !dbg !3276
  br i1 %tobool115, label %if.then116, label %if.end128, !dbg !3277

if.then116:                                       ; preds = %if.end112
  %107 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3278
  %n_main_streams = getelementptr inbounds %struct.playlist, %struct.playlist* %107, i32 0, i32 13, !dbg !3281
  %108 = load i32, i32* %n_main_streams, align 8, !dbg !3281
  %tobool117 = icmp ne i32 %108, 0, !dbg !3278
  br i1 %tobool117, label %if.then118, label %if.end124, !dbg !3282

if.then118:                                       ; preds = %if.then116
  %109 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3283
  %main_streams = getelementptr inbounds %struct.playlist, %struct.playlist* %109, i32 0, i32 12, !dbg !3285
  %110 = load %struct.AVStream**, %struct.AVStream*** %main_streams, align 8, !dbg !3285
  %arrayidx119 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %110, i64 0, !dbg !3283
  %111 = load %struct.AVStream*, %struct.AVStream** %arrayidx119, align 8, !dbg !3283
  store %struct.AVStream* %111, %struct.AVStream** %st, align 8, !dbg !3286
  %112 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3287
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %112, i32 0, i32 11, !dbg !3288
  %113 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3289
  %ctx120 = getelementptr inbounds %struct.playlist, %struct.playlist* %113, i32 0, i32 9, !dbg !3290
  %114 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx120, align 8, !dbg !3290
  %metadata121 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %114, i32 0, i32 29, !dbg !3291
  %115 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata121, align 8, !dbg !3291
  %call122 = call i32 @av_dict_copy(%struct.AVDictionary** %metadata, %struct.AVDictionary* %115, i32 0), !dbg !3292
  %116 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3293
  %event_flags123 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %116, i32 0, i32 16, !dbg !3294
  %117 = load i32, i32* %event_flags123, align 4, !dbg !3295
  %or = or i32 %117, 1, !dbg !3295
  store i32 %or, i32* %event_flags123, align 4, !dbg !3295
  br label %if.end124, !dbg !3296

if.end124:                                        ; preds = %if.then118, %if.then116
  %118 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3297
  %ctx125 = getelementptr inbounds %struct.playlist, %struct.playlist* %118, i32 0, i32 9, !dbg !3298
  %119 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx125, align 8, !dbg !3298
  %event_flags126 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %119, i32 0, i32 37, !dbg !3299
  %120 = load i32, i32* %event_flags126, align 4, !dbg !3300
  %and127 = and i32 %120, -2, !dbg !3300
  store i32 %and127, i32* %event_flags126, align 4, !dbg !3300
  br label %if.end128, !dbg !3301

if.end128:                                        ; preds = %if.end124, %if.end112
  %121 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3302
  %has_noheader_flag = getelementptr inbounds %struct.playlist, %struct.playlist* %121, i32 0, i32 11, !dbg !3304
  %122 = load i32, i32* %has_noheader_flag, align 8, !dbg !3304
  %tobool129 = icmp ne i32 %122, 0, !dbg !3302
  br i1 %tobool129, label %land.lhs.true130, label %if.end136, !dbg !3305

land.lhs.true130:                                 ; preds = %if.end128
  %123 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3306
  %ctx131 = getelementptr inbounds %struct.playlist, %struct.playlist* %123, i32 0, i32 9, !dbg !3308
  %124 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx131, align 8, !dbg !3308
  %ctx_flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %124, i32 0, i32 5, !dbg !3309
  %125 = load i32, i32* %ctx_flags, align 8, !dbg !3309
  %and132 = and i32 %125, 1, !dbg !3310
  %tobool133 = icmp ne i32 %and132, 0, !dbg !3310
  br i1 %tobool133, label %if.end136, label %if.then134, !dbg !3311

if.then134:                                       ; preds = %land.lhs.true130
  %126 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3312
  %has_noheader_flag135 = getelementptr inbounds %struct.playlist, %struct.playlist* %126, i32 0, i32 11, !dbg !3314
  store i32 0, i32* %has_noheader_flag135, align 8, !dbg !3315
  %127 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3316
  call void @update_noheader_flag(%struct.AVFormatContext* %127), !dbg !3317
  br label %if.end136, !dbg !3318

if.end136:                                        ; preds = %if.then134, %land.lhs.true130, %if.end128
  %128 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3319
  %pkt137 = getelementptr inbounds %struct.playlist, %struct.playlist* %128, i32 0, i32 10, !dbg !3321
  %stream_index138 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt137, i32 0, i32 5, !dbg !3322
  %129 = load i32, i32* %stream_index138, align 4, !dbg !3322
  %130 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3323
  %n_main_streams139 = getelementptr inbounds %struct.playlist, %struct.playlist* %130, i32 0, i32 13, !dbg !3324
  %131 = load i32, i32* %n_main_streams139, align 8, !dbg !3324
  %cmp140 = icmp sge i32 %129, %131, !dbg !3325
  br i1 %cmp140, label %if.then142, label %if.end149, !dbg !3326

if.then142:                                       ; preds = %if.end136
  %132 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3327
  %133 = bitcast %struct.AVFormatContext* %132 to i8*, !dbg !3327
  %134 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3329
  %pkt143 = getelementptr inbounds %struct.playlist, %struct.playlist* %134, i32 0, i32 10, !dbg !3330
  %stream_index144 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt143, i32 0, i32 5, !dbg !3331
  %135 = load i32, i32* %stream_index144, align 4, !dbg !3331
  %136 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3332
  %n_main_streams145 = getelementptr inbounds %struct.playlist, %struct.playlist* %136, i32 0, i32 13, !dbg !3333
  %137 = load i32, i32* %n_main_streams145, align 8, !dbg !3333
  %138 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3334
  %ctx146 = getelementptr inbounds %struct.playlist, %struct.playlist* %138, i32 0, i32 9, !dbg !3335
  %139 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx146, align 8, !dbg !3335
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %139, i32 0, i32 6, !dbg !3336
  %140 = load i32, i32* %nb_streams, align 4, !dbg !3336
  call void (i8*, i32, i8*, ...) @av_log(i8* %133, i32 16, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.117, i32 0, i32 0), i32 %135, i32 %137, i32 %140), !dbg !3337
  %141 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3338
  %pkt147 = getelementptr inbounds %struct.playlist, %struct.playlist* %141, i32 0, i32 10, !dbg !3339
  call void @av_packet_unref(%struct.AVPacket* %pkt147), !dbg !3340
  %142 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3341
  %pkt148 = getelementptr inbounds %struct.playlist, %struct.playlist* %142, i32 0, i32 10, !dbg !3342
  call void @reset_packet(%struct.AVPacket* %pkt148), !dbg !3343
  store i32 -558323010, i32* %retval, align 4, !dbg !3344
  br label %return, !dbg !3344

if.end149:                                        ; preds = %if.end136
  %143 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3345
  %pkt150 = getelementptr inbounds %struct.playlist, %struct.playlist* %143, i32 0, i32 10, !dbg !3346
  %stream_index151 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt150, i32 0, i32 5, !dbg !3347
  %144 = load i32, i32* %stream_index151, align 4, !dbg !3347
  %idxprom152 = sext i32 %144 to i64, !dbg !3348
  %145 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3348
  %ctx153 = getelementptr inbounds %struct.playlist, %struct.playlist* %145, i32 0, i32 9, !dbg !3349
  %146 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx153, align 8, !dbg !3349
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %146, i32 0, i32 7, !dbg !3350
  %147 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !3350
  %arrayidx154 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %147, i64 %idxprom152, !dbg !3348
  %148 = load %struct.AVStream*, %struct.AVStream** %arrayidx154, align 8, !dbg !3348
  store %struct.AVStream* %148, %struct.AVStream** %ist, align 8, !dbg !3351
  %149 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3352
  %pkt155 = getelementptr inbounds %struct.playlist, %struct.playlist* %149, i32 0, i32 10, !dbg !3353
  %stream_index156 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt155, i32 0, i32 5, !dbg !3354
  %150 = load i32, i32* %stream_index156, align 4, !dbg !3354
  %idxprom157 = sext i32 %150 to i64, !dbg !3355
  %151 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3355
  %main_streams158 = getelementptr inbounds %struct.playlist, %struct.playlist* %151, i32 0, i32 12, !dbg !3356
  %152 = load %struct.AVStream**, %struct.AVStream*** %main_streams158, align 8, !dbg !3356
  %arrayidx159 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %152, i64 %idxprom157, !dbg !3355
  %153 = load %struct.AVStream*, %struct.AVStream** %arrayidx159, align 8, !dbg !3355
  store %struct.AVStream* %153, %struct.AVStream** %st, align 8, !dbg !3357
  %154 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3358
  %155 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3359
  %pkt160 = getelementptr inbounds %struct.playlist, %struct.playlist* %155, i32 0, i32 10, !dbg !3360
  %156 = bitcast %struct.AVPacket* %154 to i8*, !dbg !3360
  %157 = bitcast %struct.AVPacket* %pkt160 to i8*, !dbg !3360
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %156, i8* %157, i64 88, i32 8, i1 false), !dbg !3360
  %158 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3361
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %158, i32 0, i32 0, !dbg !3362
  %159 = load i32, i32* %index, align 8, !dbg !3362
  %160 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3363
  %stream_index161 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %160, i32 0, i32 5, !dbg !3364
  store i32 %159, i32* %stream_index161, align 4, !dbg !3365
  %161 = load i32, i32* %minplaylist, align 4, !dbg !3366
  %idxprom162 = sext i32 %161 to i64, !dbg !3367
  %162 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3367
  %playlists163 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %162, i32 0, i32 5, !dbg !3368
  %163 = load %struct.playlist**, %struct.playlist*** %playlists163, align 8, !dbg !3368
  %arrayidx164 = getelementptr inbounds %struct.playlist*, %struct.playlist** %163, i64 %idxprom162, !dbg !3367
  %164 = load %struct.playlist*, %struct.playlist** %arrayidx164, align 8, !dbg !3367
  %pkt165 = getelementptr inbounds %struct.playlist, %struct.playlist* %164, i32 0, i32 10, !dbg !3369
  call void @reset_packet(%struct.AVPacket* %pkt165), !dbg !3370
  %165 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3371
  %dts166 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %165, i32 0, i32 2, !dbg !3373
  %166 = load i64, i64* %dts166, align 8, !dbg !3373
  %cmp167 = icmp ne i64 %166, -9223372036854775808, !dbg !3374
  br i1 %cmp167, label %if.then169, label %if.end175, !dbg !3375

if.then169:                                       ; preds = %if.end149
  %167 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3376
  %dts170 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %167, i32 0, i32 2, !dbg !3377
  %168 = load i64, i64* %dts170, align 8, !dbg !3377
  %169 = load %struct.AVStream*, %struct.AVStream** %ist, align 8, !dbg !3378
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %169, i32 0, i32 4, !dbg !3379
  %num172 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral171, i32 0, i32 0, !dbg !3380
  store i32 1, i32* %num172, align 4, !dbg !3380
  %den173 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral171, i32 0, i32 1, !dbg !3380
  store i32 1000000, i32* %den173, align 4, !dbg !3380
  %170 = bitcast %struct.AVRational* %time_base to i64*, !dbg !3381
  %171 = load i64, i64* %170, align 8, !dbg !3381
  %172 = bitcast %struct.AVRational* %.compoundliteral171 to i64*, !dbg !3381
  %173 = load i64, i64* %172, align 4, !dbg !3381
  %call174 = call i64 @av_rescale_q(i64 %168, i64 %171, i64 %173) #2, !dbg !3381
  %174 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3382
  %cur_timestamp = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %174, i32 0, i32 12, !dbg !3383
  store i64 %call174, i64* %cur_timestamp, align 8, !dbg !3384
  br label %if.end175, !dbg !3382

if.end175:                                        ; preds = %if.then169, %if.end149
  %175 = load %struct.AVStream*, %struct.AVStream** %ist, align 8, !dbg !3385
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %175, i32 0, i32 19, !dbg !3387
  %176 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !3387
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %176, i32 0, i32 1, !dbg !3388
  %177 = load i32, i32* %codec_id, align 4, !dbg !3388
  %178 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3389
  %codecpar176 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %178, i32 0, i32 19, !dbg !3390
  %179 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar176, align 8, !dbg !3390
  %codec_id177 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %179, i32 0, i32 1, !dbg !3391
  %180 = load i32, i32* %codec_id177, align 4, !dbg !3391
  %cmp178 = icmp ne i32 %177, %180, !dbg !3392
  br i1 %cmp178, label %if.then180, label %if.end186, !dbg !3393

if.then180:                                       ; preds = %if.end175
  %181 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3394
  %182 = load %struct.playlist*, %struct.playlist** %pls102, align 8, !dbg !3396
  %183 = load %struct.AVStream*, %struct.AVStream** %ist, align 8, !dbg !3397
  %call181 = call i32 @set_stream_info_from_input_stream(%struct.AVStream* %181, %struct.playlist* %182, %struct.AVStream* %183), !dbg !3398
  store i32 %call181, i32* %ret, align 4, !dbg !3399
  %184 = load i32, i32* %ret, align 4, !dbg !3400
  %cmp182 = icmp slt i32 %184, 0, !dbg !3402
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !3403

if.then184:                                       ; preds = %if.then180
  %185 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3404
  call void @av_packet_unref(%struct.AVPacket* %185), !dbg !3406
  %186 = load i32, i32* %ret, align 4, !dbg !3407
  store i32 %186, i32* %retval, align 4, !dbg !3408
  br label %return, !dbg !3408

if.end185:                                        ; preds = %if.then180
  br label %if.end186, !dbg !3409

if.end186:                                        ; preds = %if.end185, %if.end175
  store i32 0, i32* %retval, align 4, !dbg !3410
  br label %return, !dbg !3410

if.end187:                                        ; preds = %for.end
  store i32 -541478725, i32* %retval, align 4, !dbg !3411
  br label %return, !dbg !3411

return:                                           ; preds = %if.end187, %if.end186, %if.then184, %if.then142, %if.then109, %if.then12
  %187 = load i32, i32* %retval, align 4, !dbg !3412
  ret i32 %187, !dbg !3412
}

; Function Attrs: nounwind uwtable
define internal i32 @hls_close(%struct.AVFormatContext* %s) #0 !dbg !3413 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %c = alloca %struct.HLSContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3414, metadata !2357), !dbg !3415
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c, metadata !3416, metadata !2357), !dbg !3417
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3418
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !3419
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3419
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !3418
  store %struct.HLSContext* %2, %struct.HLSContext** %c, align 8, !dbg !3417
  %3 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3420
  call void @free_playlist_list(%struct.HLSContext* %3), !dbg !3421
  %4 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3422
  call void @free_variant_list(%struct.HLSContext* %4), !dbg !3423
  %5 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3424
  call void @free_rendition_list(%struct.HLSContext* %5), !dbg !3425
  %6 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3426
  %avio_opts = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %6, i32 0, i32 14, !dbg !3427
  call void @av_dict_free(%struct.AVDictionary** %avio_opts), !dbg !3428
  %7 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3429
  %ctx = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %7, i32 0, i32 1, !dbg !3430
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !3430
  %9 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3431
  %playlist_pb = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %9, i32 0, i32 20, !dbg !3432
  call void @ff_format_io_close(%struct.AVFormatContext* %8, %struct.AVIOContext** %playlist_pb), !dbg !3433
  ret i32 0, !dbg !3434
}

; Function Attrs: nounwind uwtable
define internal i32 @hls_read_seek(%struct.AVFormatContext* %s, i32 %stream_index, i64 %timestamp, i32 %flags) #0 !dbg !3435 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %stream_index.addr = alloca i32, align 4
  %timestamp.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %c = alloca %struct.HLSContext*, align 8
  %seek_pls = alloca %struct.playlist*, align 8
  %i = alloca i32, align 4
  %seq_no = alloca i32, align 4
  %j = alloca i32, align 4
  %stream_subdemuxer_index = alloca i32, align 4
  %first_timestamp = alloca i64, align 8
  %seek_timestamp = alloca i64, align 8
  %duration = alloca i64, align 8
  %pls = alloca %struct.playlist*, align 8
  %pls53 = alloca %struct.playlist*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3438, metadata !2357), !dbg !3439
  store i32 %stream_index, i32* %stream_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stream_index.addr, metadata !3440, metadata !2357), !dbg !3441
  store i64 %timestamp, i64* %timestamp.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timestamp.addr, metadata !3442, metadata !2357), !dbg !3443
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !3444, metadata !2357), !dbg !3445
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c, metadata !3446, metadata !2357), !dbg !3447
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3448
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !3449
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3449
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !3448
  store %struct.HLSContext* %2, %struct.HLSContext** %c, align 8, !dbg !3447
  call void @llvm.dbg.declare(metadata %struct.playlist** %seek_pls, metadata !3450, metadata !2357), !dbg !3451
  store %struct.playlist* null, %struct.playlist** %seek_pls, align 8, !dbg !3451
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3452, metadata !2357), !dbg !3453
  call void @llvm.dbg.declare(metadata i32* %seq_no, metadata !3454, metadata !2357), !dbg !3455
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3456, metadata !2357), !dbg !3457
  call void @llvm.dbg.declare(metadata i32* %stream_subdemuxer_index, metadata !3458, metadata !2357), !dbg !3459
  call void @llvm.dbg.declare(metadata i64* %first_timestamp, metadata !3460, metadata !2357), !dbg !3461
  call void @llvm.dbg.declare(metadata i64* %seek_timestamp, metadata !3462, metadata !2357), !dbg !3463
  call void @llvm.dbg.declare(metadata i64* %duration, metadata !3464, metadata !2357), !dbg !3465
  %3 = load i32, i32* %flags.addr, align 4, !dbg !3466
  %and = and i32 %3, 2, !dbg !3468
  %tobool = icmp ne i32 %and, 0, !dbg !3468
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !3469

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3470
  %ctx = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 1, !dbg !3472
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !3472
  %ctx_flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 5, !dbg !3473
  %6 = load i32, i32* %ctx_flags, align 8, !dbg !3473
  %and1 = and i32 %6, 2, !dbg !3474
  %tobool2 = icmp ne i32 %and1, 0, !dbg !3474
  br i1 %tobool2, label %if.then, label %if.end, !dbg !3475

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -38, i32* %retval, align 4, !dbg !3476
  br label %return, !dbg !3476

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3477
  %first_timestamp3 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %7, i32 0, i32 11, !dbg !3478
  %8 = load i64, i64* %first_timestamp3, align 8, !dbg !3478
  %cmp = icmp eq i64 %8, -9223372036854775808, !dbg !3479
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3477

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !3480

cond.false:                                       ; preds = %if.end
  %9 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3482
  %first_timestamp4 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %9, i32 0, i32 11, !dbg !3483
  %10 = load i64, i64* %first_timestamp4, align 8, !dbg !3483
  br label %cond.end, !dbg !3484

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %10, %cond.false ], !dbg !3486
  store i64 %cond, i64* %first_timestamp, align 8, !dbg !3488
  %11 = load i64, i64* %timestamp.addr, align 8, !dbg !3489
  %12 = load i32, i32* %stream_index.addr, align 4, !dbg !3490
  %idxprom = sext i32 %12 to i64, !dbg !3491
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3491
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i32 0, i32 7, !dbg !3492
  %14 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !3492
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %14, i64 %idxprom, !dbg !3491
  %15 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !3491
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %15, i32 0, i32 4, !dbg !3493
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 1, !dbg !3494
  %16 = load i32, i32* %den, align 4, !dbg !3494
  %conv = sext i32 %16 to i64, !dbg !3491
  %17 = load i32, i32* %flags.addr, align 4, !dbg !3495
  %and5 = and i32 %17, 1, !dbg !3496
  %tobool6 = icmp ne i32 %and5, 0, !dbg !3495
  %cond7 = select i1 %tobool6, i32 2, i32 3, !dbg !3495
  %call = call i64 @av_rescale_rnd(i64 %11, i64 1000000, i64 %conv, i32 %cond7) #2, !dbg !3497
  store i64 %call, i64* %seek_timestamp, align 8, !dbg !3498
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3499
  %duration8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %18, i32 0, i32 11, !dbg !3500
  %19 = load i64, i64* %duration8, align 8, !dbg !3500
  %cmp9 = icmp eq i64 %19, -9223372036854775808, !dbg !3501
  br i1 %cmp9, label %cond.true11, label %cond.false12, !dbg !3499

cond.true11:                                      ; preds = %cond.end
  br label %cond.end14, !dbg !3502

cond.false12:                                     ; preds = %cond.end
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3503
  %duration13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i32 0, i32 11, !dbg !3504
  %21 = load i64, i64* %duration13, align 8, !dbg !3504
  br label %cond.end14, !dbg !3505

cond.end14:                                       ; preds = %cond.false12, %cond.true11
  %cond15 = phi i64 [ 0, %cond.true11 ], [ %21, %cond.false12 ], !dbg !3506
  store i64 %cond15, i64* %duration, align 8, !dbg !3507
  %22 = load i64, i64* %duration, align 8, !dbg !3508
  %cmp16 = icmp slt i64 0, %22, !dbg !3510
  br i1 %cmp16, label %land.lhs.true, label %if.end21, !dbg !3511

land.lhs.true:                                    ; preds = %cond.end14
  %23 = load i64, i64* %duration, align 8, !dbg !3512
  %24 = load i64, i64* %seek_timestamp, align 8, !dbg !3514
  %25 = load i64, i64* %first_timestamp, align 8, !dbg !3515
  %sub = sub nsw i64 %24, %25, !dbg !3516
  %cmp18 = icmp slt i64 %23, %sub, !dbg !3517
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !3518

if.then20:                                        ; preds = %land.lhs.true
  store i32 -5, i32* %retval, align 4, !dbg !3519
  br label %return, !dbg !3519

if.end21:                                         ; preds = %land.lhs.true, %cond.end14
  store i32 0, i32* %i, align 4, !dbg !3520
  br label %for.cond, !dbg !3522

for.cond:                                         ; preds = %for.inc39, %if.end21
  %26 = load i32, i32* %i, align 4, !dbg !3523
  %27 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3526
  %n_playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %27, i32 0, i32 4, !dbg !3527
  %28 = load i32, i32* %n_playlists, align 8, !dbg !3527
  %cmp22 = icmp slt i32 %26, %28, !dbg !3528
  br i1 %cmp22, label %for.body, label %for.end41, !dbg !3529

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls, metadata !3530, metadata !2357), !dbg !3532
  %29 = load i32, i32* %i, align 4, !dbg !3533
  %idxprom24 = sext i32 %29 to i64, !dbg !3534
  %30 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3534
  %playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %30, i32 0, i32 5, !dbg !3535
  %31 = load %struct.playlist**, %struct.playlist*** %playlists, align 8, !dbg !3535
  %arrayidx25 = getelementptr inbounds %struct.playlist*, %struct.playlist** %31, i64 %idxprom24, !dbg !3534
  %32 = load %struct.playlist*, %struct.playlist** %arrayidx25, align 8, !dbg !3534
  store %struct.playlist* %32, %struct.playlist** %pls, align 8, !dbg !3532
  store i32 0, i32* %j, align 4, !dbg !3536
  br label %for.cond26, !dbg !3538

for.cond26:                                       ; preds = %for.inc, %for.body
  %33 = load i32, i32* %j, align 4, !dbg !3539
  %34 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3542
  %n_main_streams = getelementptr inbounds %struct.playlist, %struct.playlist* %34, i32 0, i32 13, !dbg !3543
  %35 = load i32, i32* %n_main_streams, align 8, !dbg !3543
  %cmp27 = icmp slt i32 %33, %35, !dbg !3544
  br i1 %cmp27, label %for.body29, label %for.end, !dbg !3545

for.body29:                                       ; preds = %for.cond26
  %36 = load i32, i32* %j, align 4, !dbg !3546
  %idxprom30 = sext i32 %36 to i64, !dbg !3549
  %37 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3549
  %main_streams = getelementptr inbounds %struct.playlist, %struct.playlist* %37, i32 0, i32 12, !dbg !3550
  %38 = load %struct.AVStream**, %struct.AVStream*** %main_streams, align 8, !dbg !3550
  %arrayidx31 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %38, i64 %idxprom30, !dbg !3549
  %39 = load %struct.AVStream*, %struct.AVStream** %arrayidx31, align 8, !dbg !3549
  %40 = load i32, i32* %stream_index.addr, align 4, !dbg !3551
  %idxprom32 = sext i32 %40 to i64, !dbg !3552
  %41 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3552
  %streams33 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %41, i32 0, i32 7, !dbg !3553
  %42 = load %struct.AVStream**, %struct.AVStream*** %streams33, align 8, !dbg !3553
  %arrayidx34 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %42, i64 %idxprom32, !dbg !3552
  %43 = load %struct.AVStream*, %struct.AVStream** %arrayidx34, align 8, !dbg !3552
  %cmp35 = icmp eq %struct.AVStream* %39, %43, !dbg !3554
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !3555

if.then37:                                        ; preds = %for.body29
  %44 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !3556
  store %struct.playlist* %44, %struct.playlist** %seek_pls, align 8, !dbg !3558
  %45 = load i32, i32* %j, align 4, !dbg !3559
  store i32 %45, i32* %stream_subdemuxer_index, align 4, !dbg !3560
  br label %for.end, !dbg !3561

if.end38:                                         ; preds = %for.body29
  br label %for.inc, !dbg !3562

for.inc:                                          ; preds = %if.end38
  %46 = load i32, i32* %j, align 4, !dbg !3563
  %inc = add nsw i32 %46, 1, !dbg !3563
  store i32 %inc, i32* %j, align 4, !dbg !3563
  br label %for.cond26, !dbg !3565, !llvm.loop !3566

for.end:                                          ; preds = %if.then37, %for.cond26
  br label %for.inc39, !dbg !3568

for.inc39:                                        ; preds = %for.end
  %47 = load i32, i32* %i, align 4, !dbg !3569
  %inc40 = add nsw i32 %47, 1, !dbg !3569
  store i32 %inc40, i32* %i, align 4, !dbg !3569
  br label %for.cond, !dbg !3571, !llvm.loop !3572

for.end41:                                        ; preds = %for.cond
  %48 = load %struct.playlist*, %struct.playlist** %seek_pls, align 8, !dbg !3574
  %tobool42 = icmp ne %struct.playlist* %48, null, !dbg !3574
  br i1 %tobool42, label %lor.lhs.false43, label %if.then46, !dbg !3576

lor.lhs.false43:                                  ; preds = %for.end41
  %49 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3577
  %50 = load %struct.playlist*, %struct.playlist** %seek_pls, align 8, !dbg !3579
  %51 = load i64, i64* %seek_timestamp, align 8, !dbg !3580
  %call44 = call i32 @find_timestamp_in_playlist(%struct.HLSContext* %49, %struct.playlist* %50, i64 %51, i32* %seq_no), !dbg !3581
  %tobool45 = icmp ne i32 %call44, 0, !dbg !3581
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !3582

if.then46:                                        ; preds = %lor.lhs.false43, %for.end41
  store i32 -5, i32* %retval, align 4, !dbg !3583
  br label %return, !dbg !3583

if.end47:                                         ; preds = %lor.lhs.false43
  %52 = load i32, i32* %seq_no, align 4, !dbg !3584
  %53 = load %struct.playlist*, %struct.playlist** %seek_pls, align 8, !dbg !3585
  %cur_seq_no = getelementptr inbounds %struct.playlist, %struct.playlist* %53, i32 0, i32 21, !dbg !3586
  store i32 %52, i32* %cur_seq_no, align 4, !dbg !3587
  %54 = load i32, i32* %stream_subdemuxer_index, align 4, !dbg !3588
  %55 = load %struct.playlist*, %struct.playlist** %seek_pls, align 8, !dbg !3589
  %seek_stream_index = getelementptr inbounds %struct.playlist, %struct.playlist* %55, i32 0, i32 42, !dbg !3590
  store i32 %54, i32* %seek_stream_index, align 4, !dbg !3591
  store i32 0, i32* %i, align 4, !dbg !3592
  br label %for.cond48, !dbg !3594

for.cond48:                                       ; preds = %for.inc81, %if.end47
  %56 = load i32, i32* %i, align 4, !dbg !3595
  %57 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3598
  %n_playlists49 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %57, i32 0, i32 4, !dbg !3599
  %58 = load i32, i32* %n_playlists49, align 8, !dbg !3599
  %cmp50 = icmp slt i32 %56, %58, !dbg !3600
  br i1 %cmp50, label %for.body52, label %for.end83, !dbg !3601

for.body52:                                       ; preds = %for.cond48
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls53, metadata !3602, metadata !2357), !dbg !3604
  %59 = load i32, i32* %i, align 4, !dbg !3605
  %idxprom54 = sext i32 %59 to i64, !dbg !3606
  %60 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3606
  %playlists55 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %60, i32 0, i32 5, !dbg !3607
  %61 = load %struct.playlist**, %struct.playlist*** %playlists55, align 8, !dbg !3607
  %arrayidx56 = getelementptr inbounds %struct.playlist*, %struct.playlist** %61, i64 %idxprom54, !dbg !3606
  %62 = load %struct.playlist*, %struct.playlist** %arrayidx56, align 8, !dbg !3606
  store %struct.playlist* %62, %struct.playlist** %pls53, align 8, !dbg !3604
  %63 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3608
  %input = getelementptr inbounds %struct.playlist, %struct.playlist* %63, i32 0, i32 3, !dbg !3610
  %64 = load %struct.AVIOContext*, %struct.AVIOContext** %input, align 8, !dbg !3610
  %tobool57 = icmp ne %struct.AVIOContext* %64, null, !dbg !3608
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !3611

if.then58:                                        ; preds = %for.body52
  %65 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3612
  %parent = getelementptr inbounds %struct.playlist, %struct.playlist* %65, i32 0, i32 7, !dbg !3613
  %66 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent, align 8, !dbg !3613
  %67 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3614
  %input59 = getelementptr inbounds %struct.playlist, %struct.playlist* %67, i32 0, i32 3, !dbg !3615
  call void @ff_format_io_close(%struct.AVFormatContext* %66, %struct.AVIOContext** %input59), !dbg !3616
  br label %if.end60, !dbg !3616

if.end60:                                         ; preds = %if.then58, %for.body52
  %68 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3617
  %input_read_done = getelementptr inbounds %struct.playlist, %struct.playlist* %68, i32 0, i32 4, !dbg !3618
  store i32 0, i32* %input_read_done, align 8, !dbg !3619
  %69 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3620
  %input_next = getelementptr inbounds %struct.playlist, %struct.playlist* %69, i32 0, i32 5, !dbg !3622
  %70 = load %struct.AVIOContext*, %struct.AVIOContext** %input_next, align 8, !dbg !3622
  %tobool61 = icmp ne %struct.AVIOContext* %70, null, !dbg !3620
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !3623

if.then62:                                        ; preds = %if.end60
  %71 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3624
  %parent63 = getelementptr inbounds %struct.playlist, %struct.playlist* %71, i32 0, i32 7, !dbg !3625
  %72 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent63, align 8, !dbg !3625
  %73 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3626
  %input_next64 = getelementptr inbounds %struct.playlist, %struct.playlist* %73, i32 0, i32 5, !dbg !3627
  call void @ff_format_io_close(%struct.AVFormatContext* %72, %struct.AVIOContext** %input_next64), !dbg !3628
  br label %if.end65, !dbg !3628

if.end65:                                         ; preds = %if.then62, %if.end60
  %74 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3629
  %input_next_requested = getelementptr inbounds %struct.playlist, %struct.playlist* %74, i32 0, i32 6, !dbg !3630
  store i32 0, i32* %input_next_requested, align 8, !dbg !3631
  %75 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3632
  %pkt = getelementptr inbounds %struct.playlist, %struct.playlist* %75, i32 0, i32 10, !dbg !3633
  call void @av_packet_unref(%struct.AVPacket* %pkt), !dbg !3634
  %76 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3635
  %pkt66 = getelementptr inbounds %struct.playlist, %struct.playlist* %76, i32 0, i32 10, !dbg !3636
  call void @reset_packet(%struct.AVPacket* %pkt66), !dbg !3637
  %77 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3638
  %pb = getelementptr inbounds %struct.playlist, %struct.playlist* %77, i32 0, i32 1, !dbg !3639
  %eof_reached = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %pb, i32 0, i32 10, !dbg !3640
  store i32 0, i32* %eof_reached, align 8, !dbg !3641
  %78 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3642
  %pb67 = getelementptr inbounds %struct.playlist, %struct.playlist* %78, i32 0, i32 1, !dbg !3643
  %buffer = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %pb67, i32 0, i32 1, !dbg !3644
  %79 = load i8*, i8** %buffer, align 8, !dbg !3644
  %80 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3645
  %pb68 = getelementptr inbounds %struct.playlist, %struct.playlist* %80, i32 0, i32 1, !dbg !3646
  %buf_ptr = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %pb68, i32 0, i32 3, !dbg !3647
  store i8* %79, i8** %buf_ptr, align 8, !dbg !3648
  %81 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3649
  %pb69 = getelementptr inbounds %struct.playlist, %struct.playlist* %81, i32 0, i32 1, !dbg !3650
  %buf_end = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %pb69, i32 0, i32 4, !dbg !3651
  store i8* %79, i8** %buf_end, align 8, !dbg !3652
  %82 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3653
  %pb70 = getelementptr inbounds %struct.playlist, %struct.playlist* %82, i32 0, i32 1, !dbg !3654
  %pos = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %pb70, i32 0, i32 9, !dbg !3655
  store i64 0, i64* %pos, align 8, !dbg !3656
  %83 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3657
  %ctx71 = getelementptr inbounds %struct.playlist, %struct.playlist* %83, i32 0, i32 9, !dbg !3658
  %84 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx71, align 8, !dbg !3658
  call void @ff_read_frame_flush(%struct.AVFormatContext* %84), !dbg !3659
  %85 = load i64, i64* %seek_timestamp, align 8, !dbg !3660
  %86 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3661
  %seek_timestamp72 = getelementptr inbounds %struct.playlist, %struct.playlist* %86, i32 0, i32 40, !dbg !3662
  store i64 %85, i64* %seek_timestamp72, align 8, !dbg !3663
  %87 = load i32, i32* %flags.addr, align 4, !dbg !3664
  %88 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3665
  %seek_flags = getelementptr inbounds %struct.playlist, %struct.playlist* %88, i32 0, i32 41, !dbg !3666
  store i32 %87, i32* %seek_flags, align 8, !dbg !3667
  %89 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3668
  %90 = load %struct.playlist*, %struct.playlist** %seek_pls, align 8, !dbg !3670
  %cmp73 = icmp ne %struct.playlist* %89, %90, !dbg !3671
  br i1 %cmp73, label %if.then75, label %if.end80, !dbg !3672

if.then75:                                        ; preds = %if.end65
  %91 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3673
  %92 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3675
  %93 = load i64, i64* %seek_timestamp, align 8, !dbg !3676
  %94 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3677
  %cur_seq_no76 = getelementptr inbounds %struct.playlist, %struct.playlist* %94, i32 0, i32 21, !dbg !3678
  %call77 = call i32 @find_timestamp_in_playlist(%struct.HLSContext* %91, %struct.playlist* %92, i64 %93, i32* %cur_seq_no76), !dbg !3679
  %95 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3680
  %seek_stream_index78 = getelementptr inbounds %struct.playlist, %struct.playlist* %95, i32 0, i32 42, !dbg !3681
  store i32 -1, i32* %seek_stream_index78, align 4, !dbg !3682
  %96 = load %struct.playlist*, %struct.playlist** %pls53, align 8, !dbg !3683
  %seek_flags79 = getelementptr inbounds %struct.playlist, %struct.playlist* %96, i32 0, i32 41, !dbg !3684
  %97 = load i32, i32* %seek_flags79, align 8, !dbg !3685
  %or = or i32 %97, 4, !dbg !3685
  store i32 %or, i32* %seek_flags79, align 8, !dbg !3685
  br label %if.end80, !dbg !3686

if.end80:                                         ; preds = %if.then75, %if.end65
  br label %for.inc81, !dbg !3687

for.inc81:                                        ; preds = %if.end80
  %98 = load i32, i32* %i, align 4, !dbg !3688
  %inc82 = add nsw i32 %98, 1, !dbg !3688
  store i32 %inc82, i32* %i, align 4, !dbg !3688
  br label %for.cond48, !dbg !3690, !llvm.loop !3691

for.end83:                                        ; preds = %for.cond48
  %99 = load i64, i64* %seek_timestamp, align 8, !dbg !3693
  %100 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3694
  %cur_timestamp = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %100, i32 0, i32 12, !dbg !3695
  store i64 %99, i64* %cur_timestamp, align 8, !dbg !3696
  store i32 0, i32* %retval, align 4, !dbg !3697
  br label %return, !dbg !3697

return:                                           ; preds = %for.end83, %if.then46, %if.then20, %if.then
  %101 = load i32, i32* %retval, align 4, !dbg !3698
  ret i32 %101, !dbg !3698
}

declare i8* @av_default_item_name(i8*) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @save_avio_options(%struct.AVFormatContext* %s) #0 !dbg !2232 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %c = alloca %struct.HLSContext*, align 8
  %opt = alloca i8**, align 8
  %buf = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3699, metadata !2357), !dbg !3700
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c, metadata !3701, metadata !2357), !dbg !3702
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3703
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !3704
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3704
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !3703
  store %struct.HLSContext* %2, %struct.HLSContext** %c, align 8, !dbg !3702
  call void @llvm.dbg.declare(metadata i8*** %opt, metadata !3705, metadata !2357), !dbg !3706
  store i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @save_avio_options.opts, i32 0, i32 0), i8*** %opt, align 8, !dbg !3706
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3707, metadata !2357), !dbg !3708
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3709, metadata !2357), !dbg !3710
  store i32 0, i32* %ret, align 4, !dbg !3710
  br label %while.cond, !dbg !3711

while.cond:                                       ; preds = %if.end4, %entry
  %3 = load i8**, i8*** %opt, align 8, !dbg !3712
  %4 = load i8*, i8** %3, align 8, !dbg !3714
  %tobool = icmp ne i8* %4, null, !dbg !3715
  br i1 %tobool, label %while.body, label %while.end, !dbg !3715

while.body:                                       ; preds = %while.cond
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3716
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 4, !dbg !3719
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3719
  %7 = bitcast %struct.AVIOContext* %6 to i8*, !dbg !3716
  %8 = load i8**, i8*** %opt, align 8, !dbg !3720
  %9 = load i8*, i8** %8, align 8, !dbg !3721
  %call = call i32 @av_opt_get(i8* %7, i8* %9, i32 5, i8** %buf), !dbg !3722
  %cmp = icmp sge i32 %call, 0, !dbg !3723
  br i1 %cmp, label %if.then, label %if.end4, !dbg !3724

if.then:                                          ; preds = %while.body
  %10 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !3725
  %avio_opts = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %10, i32 0, i32 14, !dbg !3727
  %11 = load i8**, i8*** %opt, align 8, !dbg !3728
  %12 = load i8*, i8** %11, align 8, !dbg !3729
  %13 = load i8*, i8** %buf, align 8, !dbg !3730
  %call1 = call i32 @av_dict_set(%struct.AVDictionary** %avio_opts, i8* %12, i8* %13, i32 8), !dbg !3731
  store i32 %call1, i32* %ret, align 4, !dbg !3732
  %14 = load i32, i32* %ret, align 4, !dbg !3733
  %cmp2 = icmp slt i32 %14, 0, !dbg !3735
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !3736

if.then3:                                         ; preds = %if.then
  %15 = load i32, i32* %ret, align 4, !dbg !3737
  store i32 %15, i32* %retval, align 4, !dbg !3738
  br label %return, !dbg !3738

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !3739

if.end4:                                          ; preds = %if.end, %while.body
  %16 = load i8**, i8*** %opt, align 8, !dbg !3740
  %incdec.ptr = getelementptr inbounds i8*, i8** %16, i32 1, !dbg !3740
  store i8** %incdec.ptr, i8*** %opt, align 8, !dbg !3740
  br label %while.cond, !dbg !3741, !llvm.loop !3743

while.end:                                        ; preds = %while.cond
  %17 = load i32, i32* %ret, align 4, !dbg !3744
  store i32 %17, i32* %retval, align 4, !dbg !3745
  br label %return, !dbg !3745

return:                                           ; preds = %while.end, %if.then3
  %18 = load i32, i32* %retval, align 4, !dbg !3746
  ret i32 %18, !dbg !3746
}

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @parse_playlist(%struct.HLSContext* %c, i8* %url, %struct.playlist* %pls, %struct.AVIOContext* %in) #0 !dbg !3747 {
entry:
  %x.addr.i382 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i382, metadata !3750, metadata !2357), !dbg !3755
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3750, metadata !2357), !dbg !3775
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.HLSContext*, align 8
  %url.addr = alloca i8*, align 8
  %pls.addr = alloca %struct.playlist*, align 8
  %in.addr = alloca %struct.AVIOContext*, align 8
  %ret = alloca i32, align 4
  %is_segment = alloca i32, align 4
  %is_variant = alloca i32, align 4
  %duration = alloca i64, align 8
  %key_type = alloca i32, align 4
  %iv = alloca [16 x i8], align 16
  %has_iv = alloca i32, align 4
  %key = alloca [4096 x i8], align 16
  %line = alloca [4096 x i8], align 16
  %ptr = alloca i8*, align 8
  %close_in = alloca i32, align 4
  %seg_offset = alloca i64, align 8
  %seg_size = alloca i64, align 8
  %new_url = alloca i8*, align 8
  %variant_info = alloca %struct.variant_info, align 1
  %tmp_str = alloca [4096 x i8], align 16
  %cur_init_section = alloca %struct.segment*, align 8
  %is_http = alloca i32, align 4
  %prev_segments = alloca %struct.segment**, align 8
  %prev_n_segments = alloca i32, align 4
  %prev_start_seq_no = alloca i32, align 4
  %.compoundliteral = alloca [64 x i8], align 1
  %opts = alloca %struct.AVDictionary*, align 8
  %info = alloca %struct.key_info, align 1
  %info104 = alloca %struct.rendition_info, align 1
  %info152 = alloca %struct.init_section_info, align 1
  %seq = alloca i32, align 4
  %seg = alloca %struct.segment*, align 8
  %seq254 = alloca i32, align 4
  %_tab = alloca %struct.segment***, align 8
  %_elem = alloca %struct.segment*, align 8
  %prev_timestamp = alloca i64, align 8
  %i = alloca i32, align 4
  %diff = alloca i32, align 4
  store %struct.HLSContext* %c, %struct.HLSContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c.addr, metadata !3780, metadata !2357), !dbg !3781
  store i8* %url, i8** %url.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %url.addr, metadata !3782, metadata !2357), !dbg !3783
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !3784, metadata !2357), !dbg !3785
  store %struct.AVIOContext* %in, %struct.AVIOContext** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %in.addr, metadata !3786, metadata !2357), !dbg !3787
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3788, metadata !2357), !dbg !3789
  store i32 0, i32* %ret, align 4, !dbg !3789
  call void @llvm.dbg.declare(metadata i32* %is_segment, metadata !3790, metadata !2357), !dbg !3791
  store i32 0, i32* %is_segment, align 4, !dbg !3791
  call void @llvm.dbg.declare(metadata i32* %is_variant, metadata !3792, metadata !2357), !dbg !3793
  store i32 0, i32* %is_variant, align 4, !dbg !3793
  call void @llvm.dbg.declare(metadata i64* %duration, metadata !3794, metadata !2357), !dbg !3795
  store i64 0, i64* %duration, align 8, !dbg !3795
  call void @llvm.dbg.declare(metadata i32* %key_type, metadata !3796, metadata !2357), !dbg !3797
  store i32 0, i32* %key_type, align 4, !dbg !3797
  call void @llvm.dbg.declare(metadata [16 x i8]* %iv, metadata !3798, metadata !2357), !dbg !3799
  %0 = bitcast [16 x i8]* %iv to i8*, !dbg !3799
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 16, i32 16, i1 false), !dbg !3799
  call void @llvm.dbg.declare(metadata i32* %has_iv, metadata !3800, metadata !2357), !dbg !3801
  store i32 0, i32* %has_iv, align 4, !dbg !3801
  call void @llvm.dbg.declare(metadata [4096 x i8]* %key, metadata !3802, metadata !2357), !dbg !3803
  %1 = bitcast [4096 x i8]* %key to i8*, !dbg !3803
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 4096, i32 16, i1 false), !dbg !3803
  call void @llvm.dbg.declare(metadata [4096 x i8]* %line, metadata !3804, metadata !2357), !dbg !3805
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !3806, metadata !2357), !dbg !3807
  call void @llvm.dbg.declare(metadata i32* %close_in, metadata !3808, metadata !2357), !dbg !3809
  store i32 0, i32* %close_in, align 4, !dbg !3809
  call void @llvm.dbg.declare(metadata i64* %seg_offset, metadata !3810, metadata !2357), !dbg !3811
  store i64 0, i64* %seg_offset, align 8, !dbg !3811
  call void @llvm.dbg.declare(metadata i64* %seg_size, metadata !3812, metadata !2357), !dbg !3813
  store i64 -1, i64* %seg_size, align 8, !dbg !3813
  call void @llvm.dbg.declare(metadata i8** %new_url, metadata !3814, metadata !2357), !dbg !3815
  store i8* null, i8** %new_url, align 8, !dbg !3815
  call void @llvm.dbg.declare(metadata %struct.variant_info* %variant_info, metadata !3816, metadata !2357), !dbg !3826
  call void @llvm.dbg.declare(metadata [4096 x i8]* %tmp_str, metadata !3827, metadata !2357), !dbg !3828
  call void @llvm.dbg.declare(metadata %struct.segment** %cur_init_section, metadata !3829, metadata !2357), !dbg !3830
  store %struct.segment* null, %struct.segment** %cur_init_section, align 8, !dbg !3830
  call void @llvm.dbg.declare(metadata i32* %is_http, metadata !3831, metadata !2357), !dbg !3832
  %2 = load i8*, i8** %url.addr, align 8, !dbg !3833
  %call = call i32 @av_strstart(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i8** null), !dbg !3834
  store i32 %call, i32* %is_http, align 4, !dbg !3832
  call void @llvm.dbg.declare(metadata %struct.segment*** %prev_segments, metadata !3835, metadata !2357), !dbg !3836
  store %struct.segment** null, %struct.segment*** %prev_segments, align 8, !dbg !3836
  call void @llvm.dbg.declare(metadata i32* %prev_n_segments, metadata !3837, metadata !2357), !dbg !3838
  store i32 0, i32* %prev_n_segments, align 4, !dbg !3838
  call void @llvm.dbg.declare(metadata i32* %prev_start_seq_no, metadata !3839, metadata !2357), !dbg !3840
  store i32 -1, i32* %prev_start_seq_no, align 4, !dbg !3840
  %3 = load i32, i32* %is_http, align 4, !dbg !3841
  %tobool = icmp ne i32 %3, 0, !dbg !3841
  br i1 %tobool, label %land.lhs.true, label %if.end18, !dbg !3843

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %in.addr, align 8, !dbg !3844
  %tobool1 = icmp ne %struct.AVIOContext* %4, null, !dbg !3844
  br i1 %tobool1, label %if.end18, label %land.lhs.true2, !dbg !3846

land.lhs.true2:                                   ; preds = %land.lhs.true
  %5 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !3847
  %http_persistent = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %5, i32 0, i32 18, !dbg !3849
  %6 = load i32, i32* %http_persistent, align 4, !dbg !3849
  %tobool3 = icmp ne i32 %6, 0, !dbg !3847
  br i1 %tobool3, label %land.lhs.true4, label %if.end18, !dbg !3850

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %7 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !3851
  %playlist_pb = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %7, i32 0, i32 20, !dbg !3853
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %playlist_pb, align 8, !dbg !3853
  %tobool5 = icmp ne %struct.AVIOContext* %8, null, !dbg !3851
  br i1 %tobool5, label %if.then, label %if.end18, !dbg !3854

if.then:                                          ; preds = %land.lhs.true4
  %9 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !3855
  %playlist_pb6 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %9, i32 0, i32 20, !dbg !3857
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %playlist_pb6, align 8, !dbg !3857
  store %struct.AVIOContext* %10, %struct.AVIOContext** %in.addr, align 8, !dbg !3858
  %11 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !3859
  %ctx = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %11, i32 0, i32 1, !dbg !3860
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !3860
  %13 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !3861
  %playlist_pb7 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %13, i32 0, i32 20, !dbg !3862
  %14 = load i8*, i8** %url.addr, align 8, !dbg !3863
  %call8 = call i32 @open_url_keepalive(%struct.AVFormatContext* %12, %struct.AVIOContext** %playlist_pb7, i8* %14), !dbg !3864
  store i32 %call8, i32* %ret, align 4, !dbg !3865
  %15 = load i32, i32* %ret, align 4, !dbg !3866
  %cmp = icmp eq i32 %15, -1414092869, !dbg !3868
  br i1 %cmp, label %if.then9, label %if.else, !dbg !3869

if.then9:                                         ; preds = %if.then
  %16 = load i32, i32* %ret, align 4, !dbg !3870
  store i32 %16, i32* %retval, align 4, !dbg !3872
  br label %return, !dbg !3872

if.else:                                          ; preds = %if.then
  %17 = load i32, i32* %ret, align 4, !dbg !3873
  %cmp10 = icmp slt i32 %17, 0, !dbg !3875
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !3876

if.then11:                                        ; preds = %if.else
  %18 = load i32, i32* %ret, align 4, !dbg !3877
  %cmp12 = icmp ne i32 %18, -541478725, !dbg !3880
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !3881

if.then13:                                        ; preds = %if.then11
  %19 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !3882
  %ctx14 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %19, i32 0, i32 1, !dbg !3883
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx14, align 8, !dbg !3883
  %21 = bitcast %struct.AVFormatContext* %20 to i8*, !dbg !3882
  %22 = load i8*, i8** %url.addr, align 8, !dbg !3884
  %23 = bitcast [64 x i8]* %.compoundliteral to i8*, !dbg !3885
  call void @llvm.memset.p0i8.i64(i8* %23, i8 0, i64 64, i32 1, i1 false), !dbg !3885
  %arrayinit.begin = getelementptr inbounds [64 x i8], [64 x i8]* %.compoundliteral, i64 0, i64 0, !dbg !3886
  store i8 0, i8* %arrayinit.begin, align 1, !dbg !3886
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %.compoundliteral, i32 0, i32 0, !dbg !3885
  %24 = load i32, i32* %ret, align 4, !dbg !3887
  %call15 = call i8* @av_make_error_string(i8* %arraydecay, i64 64, i32 %24), !dbg !3888
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 24, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.31, i32 0, i32 0), i8* %22, i8* %call15), !dbg !3890
  br label %if.end, !dbg !3890

if.end:                                           ; preds = %if.then13, %if.then11
  store %struct.AVIOContext* null, %struct.AVIOContext** %in.addr, align 8, !dbg !3891
  br label %if.end16, !dbg !3892

if.end16:                                         ; preds = %if.end, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !3893

if.end18:                                         ; preds = %if.end17, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  %25 = load %struct.AVIOContext*, %struct.AVIOContext** %in.addr, align 8, !dbg !3894
  %tobool19 = icmp ne %struct.AVIOContext* %25, null, !dbg !3894
  br i1 %tobool19, label %if.end41, label %if.then20, !dbg !3896

if.then20:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %opts, metadata !3897, metadata !2357), !dbg !3899
  store %struct.AVDictionary* null, %struct.AVDictionary** %opts, align 8, !dbg !3899
  %26 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !3900
  %avio_opts = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %26, i32 0, i32 14, !dbg !3901
  %27 = load %struct.AVDictionary*, %struct.AVDictionary** %avio_opts, align 8, !dbg !3901
  %call21 = call i32 @av_dict_copy(%struct.AVDictionary** %opts, %struct.AVDictionary* %27, i32 0), !dbg !3902
  %28 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !3903
  %http_persistent22 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %28, i32 0, i32 18, !dbg !3905
  %29 = load i32, i32* %http_persistent22, align 4, !dbg !3905
  %tobool23 = icmp ne i32 %29, 0, !dbg !3903
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !3906

if.then24:                                        ; preds = %if.then20
  %call25 = call i32 @av_dict_set(%struct.AVDictionary** %opts, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i32 0, i32 0), i32 0), !dbg !3907
  br label %if.end26, !dbg !3907

if.end26:                                         ; preds = %if.then24, %if.then20
  %30 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !3908
  %ctx27 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %30, i32 0, i32 1, !dbg !3909
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx27, align 8, !dbg !3909
  %io_open = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %31, i32 0, i32 69, !dbg !3910
  %32 = load i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)** %io_open, align 8, !dbg !3910
  %33 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !3911
  %ctx28 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %33, i32 0, i32 1, !dbg !3912
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx28, align 8, !dbg !3912
  %35 = load i8*, i8** %url.addr, align 8, !dbg !3913
  %call29 = call i32 %32(%struct.AVFormatContext* %34, %struct.AVIOContext** %in.addr, i8* %35, i32 1, %struct.AVDictionary** %opts), !dbg !3908
  store i32 %call29, i32* %ret, align 4, !dbg !3914
  call void @av_dict_free(%struct.AVDictionary** %opts), !dbg !3915
  %36 = load i32, i32* %ret, align 4, !dbg !3916
  %cmp30 = icmp slt i32 %36, 0, !dbg !3918
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !3919

if.then31:                                        ; preds = %if.end26
  %37 = load i32, i32* %ret, align 4, !dbg !3920
  store i32 %37, i32* %retval, align 4, !dbg !3921
  br label %return, !dbg !3921

if.end32:                                         ; preds = %if.end26
  %38 = load i32, i32* %is_http, align 4, !dbg !3922
  %tobool33 = icmp ne i32 %38, 0, !dbg !3922
  br i1 %tobool33, label %land.lhs.true34, label %if.else39, !dbg !3924

land.lhs.true34:                                  ; preds = %if.end32
  %39 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !3925
  %http_persistent35 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %39, i32 0, i32 18, !dbg !3927
  %40 = load i32, i32* %http_persistent35, align 4, !dbg !3927
  %tobool36 = icmp ne i32 %40, 0, !dbg !3925
  br i1 %tobool36, label %if.then37, label %if.else39, !dbg !3928

if.then37:                                        ; preds = %land.lhs.true34
  %41 = load %struct.AVIOContext*, %struct.AVIOContext** %in.addr, align 8, !dbg !3929
  %42 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !3930
  %playlist_pb38 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %42, i32 0, i32 20, !dbg !3931
  store %struct.AVIOContext* %41, %struct.AVIOContext** %playlist_pb38, align 8, !dbg !3932
  br label %if.end40, !dbg !3930

if.else39:                                        ; preds = %land.lhs.true34, %if.end32
  store i32 1, i32* %close_in, align 4, !dbg !3933
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then37
  br label %if.end41, !dbg !3934

if.end41:                                         ; preds = %if.end40, %if.end18
  %43 = load %struct.AVIOContext*, %struct.AVIOContext** %in.addr, align 8, !dbg !3935
  %44 = bitcast %struct.AVIOContext* %43 to i8*, !dbg !3935
  %call42 = call i32 @av_opt_get(i8* %44, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i32 1, i8** %new_url), !dbg !3937
  %cmp43 = icmp sge i32 %call42, 0, !dbg !3938
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !3939

if.then44:                                        ; preds = %if.end41
  %45 = load i8*, i8** %new_url, align 8, !dbg !3940
  store i8* %45, i8** %url.addr, align 8, !dbg !3941
  br label %if.end45, !dbg !3942

if.end45:                                         ; preds = %if.then44, %if.end41
  %46 = load %struct.AVIOContext*, %struct.AVIOContext** %in.addr, align 8, !dbg !3943
  %arraydecay46 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !3944
  %call47 = call i32 @ff_get_chomp_line(%struct.AVIOContext* %46, i8* %arraydecay46, i32 4096), !dbg !3945
  %arraydecay48 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !3946
  %call49 = call i32 @strcmp(i8* %arraydecay48, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0)) #10, !dbg !3948
  %tobool50 = icmp ne i32 %call49, 0, !dbg !3948
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !3949

if.then51:                                        ; preds = %if.end45
  store i32 -1094995529, i32* %ret, align 4, !dbg !3950
  br label %fail, !dbg !3952

if.end52:                                         ; preds = %if.end45
  %47 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !3953
  %tobool53 = icmp ne %struct.playlist* %47, null, !dbg !3953
  br i1 %tobool53, label %if.then54, label %if.end57, !dbg !3955

if.then54:                                        ; preds = %if.end52
  %48 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !3956
  %start_seq_no = getelementptr inbounds %struct.playlist, %struct.playlist* %48, i32 0, i32 17, !dbg !3958
  %49 = load i32, i32* %start_seq_no, align 8, !dbg !3958
  store i32 %49, i32* %prev_start_seq_no, align 4, !dbg !3959
  %50 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !3960
  %segments = getelementptr inbounds %struct.playlist, %struct.playlist* %50, i32 0, i32 19, !dbg !3961
  %51 = load %struct.segment**, %struct.segment*** %segments, align 8, !dbg !3961
  store %struct.segment** %51, %struct.segment*** %prev_segments, align 8, !dbg !3962
  %52 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !3963
  %n_segments = getelementptr inbounds %struct.playlist, %struct.playlist* %52, i32 0, i32 18, !dbg !3964
  %53 = load i32, i32* %n_segments, align 4, !dbg !3964
  store i32 %53, i32* %prev_n_segments, align 4, !dbg !3965
  %54 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !3966
  %segments55 = getelementptr inbounds %struct.playlist, %struct.playlist* %54, i32 0, i32 19, !dbg !3967
  store %struct.segment** null, %struct.segment*** %segments55, align 8, !dbg !3968
  %55 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !3969
  %n_segments56 = getelementptr inbounds %struct.playlist, %struct.playlist* %55, i32 0, i32 18, !dbg !3970
  store i32 0, i32* %n_segments56, align 4, !dbg !3971
  %56 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !3972
  %finished = getelementptr inbounds %struct.playlist, %struct.playlist* %56, i32 0, i32 14, !dbg !3973
  store i32 0, i32* %finished, align 4, !dbg !3974
  %57 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !3975
  %type = getelementptr inbounds %struct.playlist, %struct.playlist* %57, i32 0, i32 15, !dbg !3976
  store i32 0, i32* %type, align 8, !dbg !3977
  br label %if.end57, !dbg !3978

if.end57:                                         ; preds = %if.then54, %if.end52
  br label %while.cond, !dbg !3979

while.cond:                                       ; preds = %if.end312, %if.then220, %if.end57
  %58 = load %struct.AVIOContext*, %struct.AVIOContext** %in.addr, align 8, !dbg !3980
  %call58 = call i32 @avio_feof(%struct.AVIOContext* %58), !dbg !3982
  %tobool59 = icmp ne i32 %call58, 0, !dbg !3983
  %lnot = xor i1 %tobool59, true, !dbg !3983
  br i1 %lnot, label %while.body, label %while.end, !dbg !3984

while.body:                                       ; preds = %while.cond
  %59 = load %struct.AVIOContext*, %struct.AVIOContext** %in.addr, align 8, !dbg !3985
  %arraydecay60 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !3986
  %call61 = call i32 @ff_get_chomp_line(%struct.AVIOContext* %59, i8* %arraydecay60, i32 4096), !dbg !3987
  %arraydecay62 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !3988
  %call63 = call i32 @av_strstart(i8* %arraydecay62, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i32 0, i32 0), i8** %ptr), !dbg !3989
  %tobool64 = icmp ne i32 %call63, 0, !dbg !3989
  br i1 %tobool64, label %if.then65, label %if.else66, !dbg !3990

if.then65:                                        ; preds = %while.body
  store i32 1, i32* %is_variant, align 4, !dbg !3991
  %60 = bitcast %struct.variant_info* %variant_info to i8*, !dbg !3993
  call void @llvm.memset.p0i8.i64(i8* %60, i8 0, i64 212, i32 1, i1 false), !dbg !3993
  %61 = load i8*, i8** %ptr, align 8, !dbg !3994
  %62 = bitcast %struct.variant_info* %variant_info to i8*, !dbg !3995
  call void @ff_parse_key_value(i8* %61, void (i8*, i8*, i32, i8**, i32*)* bitcast (void (%struct.variant_info*, i8*, i32, i8**, i32*)* @handle_variant_args to void (i8*, i8*, i32, i8**, i32*)*), i8* %62), !dbg !3996
  br label %if.end312, !dbg !3997

if.else66:                                        ; preds = %while.body
  %arraydecay67 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !3998
  %call68 = call i32 @av_strstart(i8* %arraydecay67, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i32 0, i32 0), i8** %ptr), !dbg !4000
  %tobool69 = icmp ne i32 %call68, 0, !dbg !4000
  br i1 %tobool69, label %if.then70, label %if.else99, !dbg !4000

if.then70:                                        ; preds = %if.else66
  call void @llvm.dbg.declare(metadata %struct.key_info* %info, metadata !4001, metadata !2357), !dbg !4014
  %63 = bitcast %struct.key_info* %info to i8*, !dbg !4014
  call void @llvm.memset.p0i8.i64(i8* %63, i8 0, i64 4142, i32 1, i1 false), !dbg !4014
  %64 = load i8*, i8** %ptr, align 8, !dbg !4015
  %65 = bitcast %struct.key_info* %info to i8*, !dbg !4016
  call void @ff_parse_key_value(i8* %64, void (i8*, i8*, i32, i8**, i32*)* bitcast (void (%struct.key_info*, i8*, i32, i8**, i32*)* @handle_key_args to void (i8*, i8*, i32, i8**, i32*)*), i8* %65), !dbg !4017
  store i32 0, i32* %key_type, align 4, !dbg !4018
  store i32 0, i32* %has_iv, align 4, !dbg !4019
  %method = getelementptr inbounds %struct.key_info, %struct.key_info* %info, i32 0, i32 1, !dbg !4020
  %arraydecay71 = getelementptr inbounds [11 x i8], [11 x i8]* %method, i32 0, i32 0, !dbg !4022
  %call72 = call i32 @strcmp(i8* %arraydecay71, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0)) #10, !dbg !4023
  %tobool73 = icmp ne i32 %call72, 0, !dbg !4023
  br i1 %tobool73, label %if.end75, label %if.then74, !dbg !4024

if.then74:                                        ; preds = %if.then70
  store i32 1, i32* %key_type, align 4, !dbg !4025
  br label %if.end75, !dbg !4026

if.end75:                                         ; preds = %if.then74, %if.then70
  %method76 = getelementptr inbounds %struct.key_info, %struct.key_info* %info, i32 0, i32 1, !dbg !4027
  %arraydecay77 = getelementptr inbounds [11 x i8], [11 x i8]* %method76, i32 0, i32 0, !dbg !4029
  %call78 = call i32 @strcmp(i8* %arraydecay77, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i32 0, i32 0)) #10, !dbg !4030
  %tobool79 = icmp ne i32 %call78, 0, !dbg !4030
  br i1 %tobool79, label %if.end81, label %if.then80, !dbg !4031

if.then80:                                        ; preds = %if.end75
  store i32 2, i32* %key_type, align 4, !dbg !4032
  br label %if.end81, !dbg !4033

if.end81:                                         ; preds = %if.then80, %if.end75
  %iv82 = getelementptr inbounds %struct.key_info, %struct.key_info* %info, i32 0, i32 2, !dbg !4034
  %arraydecay83 = getelementptr inbounds [35 x i8], [35 x i8]* %iv82, i32 0, i32 0, !dbg !4036
  %call84 = call i32 @strncmp(i8* %arraydecay83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i32 0, i32 0), i64 2) #10, !dbg !4037
  %tobool85 = icmp ne i32 %call84, 0, !dbg !4037
  br i1 %tobool85, label %lor.lhs.false, label %if.then90, !dbg !4038

lor.lhs.false:                                    ; preds = %if.end81
  %iv86 = getelementptr inbounds %struct.key_info, %struct.key_info* %info, i32 0, i32 2, !dbg !4039
  %arraydecay87 = getelementptr inbounds [35 x i8], [35 x i8]* %iv86, i32 0, i32 0, !dbg !4041
  %call88 = call i32 @strncmp(i8* %arraydecay87, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i32 0, i32 0), i64 2) #10, !dbg !4042
  %tobool89 = icmp ne i32 %call88, 0, !dbg !4042
  br i1 %tobool89, label %if.end95, label %if.then90, !dbg !4043

if.then90:                                        ; preds = %lor.lhs.false, %if.end81
  %arraydecay91 = getelementptr inbounds [16 x i8], [16 x i8]* %iv, i32 0, i32 0, !dbg !4044
  %iv92 = getelementptr inbounds %struct.key_info, %struct.key_info* %info, i32 0, i32 2, !dbg !4046
  %arraydecay93 = getelementptr inbounds [35 x i8], [35 x i8]* %iv92, i32 0, i32 0, !dbg !4047
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay93, i64 2, !dbg !4048
  %call94 = call i32 @ff_hex_to_data(i8* %arraydecay91, i8* %add.ptr), !dbg !4049
  store i32 1, i32* %has_iv, align 4, !dbg !4050
  br label %if.end95, !dbg !4051

if.end95:                                         ; preds = %if.then90, %lor.lhs.false
  %arraydecay96 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i32 0, i32 0, !dbg !4052
  %uri = getelementptr inbounds %struct.key_info, %struct.key_info* %info, i32 0, i32 0, !dbg !4053
  %arraydecay97 = getelementptr inbounds [4096 x i8], [4096 x i8]* %uri, i32 0, i32 0, !dbg !4054
  %call98 = call i64 @av_strlcpy(i8* %arraydecay96, i8* %arraydecay97, i64 4096), !dbg !4055
  br label %if.end311, !dbg !4056

if.else99:                                        ; preds = %if.else66
  %arraydecay100 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !4057
  %call101 = call i32 @av_strstart(i8* %arraydecay100, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), i8** %ptr), !dbg !4059
  %tobool102 = icmp ne i32 %call101, 0, !dbg !4059
  br i1 %tobool102, label %if.then103, label %if.else106, !dbg !4059

if.then103:                                       ; preds = %if.else99
  call void @llvm.dbg.declare(metadata %struct.rendition_info* %info104, metadata !4060, metadata !2357), !dbg !4078
  %66 = bitcast %struct.rendition_info* %info104 to i8*, !dbg !4078
  call void @llvm.memset.p0i8.i64(i8* %66, i8 0, i64 4888, i32 1, i1 false), !dbg !4078
  %67 = load i8*, i8** %ptr, align 8, !dbg !4079
  %68 = bitcast %struct.rendition_info* %info104 to i8*, !dbg !4080
  call void @ff_parse_key_value(i8* %67, void (i8*, i8*, i32, i8**, i32*)* bitcast (void (%struct.rendition_info*, i8*, i32, i8**, i32*)* @handle_rendition_args to void (i8*, i8*, i32, i8**, i32*)*), i8* %68), !dbg !4081
  %69 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4082
  %70 = load i8*, i8** %url.addr, align 8, !dbg !4083
  %call105 = call %struct.rendition* @new_rendition(%struct.HLSContext* %69, %struct.rendition_info* %info104, i8* %70), !dbg !4084
  br label %if.end310, !dbg !4085

if.else106:                                       ; preds = %if.else99
  %arraydecay107 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !4086
  %call108 = call i32 @av_strstart(i8* %arraydecay107, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i32 0, i32 0), i8** %ptr), !dbg !4088
  %tobool109 = icmp ne i32 %call108, 0, !dbg !4088
  br i1 %tobool109, label %if.then110, label %if.else116, !dbg !4088

if.then110:                                       ; preds = %if.else106
  %71 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4089
  %72 = load i8*, i8** %url.addr, align 8, !dbg !4091
  %call111 = call i32 @ensure_playlist(%struct.HLSContext* %71, %struct.playlist** %pls.addr, i8* %72), !dbg !4092
  store i32 %call111, i32* %ret, align 4, !dbg !4093
  %73 = load i32, i32* %ret, align 4, !dbg !4094
  %cmp112 = icmp slt i32 %73, 0, !dbg !4096
  br i1 %cmp112, label %if.then113, label %if.end114, !dbg !4097

if.then113:                                       ; preds = %if.then110
  br label %fail, !dbg !4098

if.end114:                                        ; preds = %if.then110
  %74 = load i8*, i8** %ptr, align 8, !dbg !4099
  %call115 = call i64 @strtoll(i8* %74, i8** null, i32 10) #11, !dbg !4100
  %mul = mul nsw i64 %call115, 1000000, !dbg !4101
  %75 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4102
  %target_duration = getelementptr inbounds %struct.playlist, %struct.playlist* %75, i32 0, i32 16, !dbg !4103
  store i64 %mul, i64* %target_duration, align 8, !dbg !4104
  br label %if.end309, !dbg !4105

if.else116:                                       ; preds = %if.else106
  %arraydecay117 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !4106
  %call118 = call i32 @av_strstart(i8* %arraydecay117, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8** %ptr), !dbg !4108
  %tobool119 = icmp ne i32 %call118, 0, !dbg !4108
  br i1 %tobool119, label %if.then120, label %if.else127, !dbg !4108

if.then120:                                       ; preds = %if.else116
  %76 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4109
  %77 = load i8*, i8** %url.addr, align 8, !dbg !4111
  %call121 = call i32 @ensure_playlist(%struct.HLSContext* %76, %struct.playlist** %pls.addr, i8* %77), !dbg !4112
  store i32 %call121, i32* %ret, align 4, !dbg !4113
  %78 = load i32, i32* %ret, align 4, !dbg !4114
  %cmp122 = icmp slt i32 %78, 0, !dbg !4116
  br i1 %cmp122, label %if.then123, label %if.end124, !dbg !4117

if.then123:                                       ; preds = %if.then120
  br label %fail, !dbg !4118

if.end124:                                        ; preds = %if.then120
  %79 = load i8*, i8** %ptr, align 8, !dbg !4119
  %call125 = call i32 @atoi(i8* %79) #10, !dbg !4120
  %80 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4121
  %start_seq_no126 = getelementptr inbounds %struct.playlist, %struct.playlist* %80, i32 0, i32 17, !dbg !4122
  store i32 %call125, i32* %start_seq_no126, align 8, !dbg !4123
  br label %if.end308, !dbg !4124

if.else127:                                       ; preds = %if.else116
  %arraydecay128 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !4125
  %call129 = call i32 @av_strstart(i8* %arraydecay128, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.41, i32 0, i32 0), i8** %ptr), !dbg !4127
  %tobool130 = icmp ne i32 %call129, 0, !dbg !4127
  br i1 %tobool130, label %if.then131, label %if.else147, !dbg !4127

if.then131:                                       ; preds = %if.else127
  %81 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4128
  %82 = load i8*, i8** %url.addr, align 8, !dbg !4130
  %call132 = call i32 @ensure_playlist(%struct.HLSContext* %81, %struct.playlist** %pls.addr, i8* %82), !dbg !4131
  store i32 %call132, i32* %ret, align 4, !dbg !4132
  %83 = load i32, i32* %ret, align 4, !dbg !4133
  %cmp133 = icmp slt i32 %83, 0, !dbg !4135
  br i1 %cmp133, label %if.then134, label %if.end135, !dbg !4136

if.then134:                                       ; preds = %if.then131
  br label %fail, !dbg !4137

if.end135:                                        ; preds = %if.then131
  %84 = load i8*, i8** %ptr, align 8, !dbg !4138
  %call136 = call i32 @strcmp(i8* %84, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0)) #10, !dbg !4140
  %tobool137 = icmp ne i32 %call136, 0, !dbg !4140
  br i1 %tobool137, label %if.else140, label %if.then138, !dbg !4141

if.then138:                                       ; preds = %if.end135
  %85 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4142
  %type139 = getelementptr inbounds %struct.playlist, %struct.playlist* %85, i32 0, i32 15, !dbg !4143
  store i32 1, i32* %type139, align 8, !dbg !4144
  br label %if.end146, !dbg !4142

if.else140:                                       ; preds = %if.end135
  %86 = load i8*, i8** %ptr, align 8, !dbg !4145
  %call141 = call i32 @strcmp(i8* %86, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0)) #10, !dbg !4147
  %tobool142 = icmp ne i32 %call141, 0, !dbg !4147
  br i1 %tobool142, label %if.end145, label %if.then143, !dbg !4148

if.then143:                                       ; preds = %if.else140
  %87 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4149
  %type144 = getelementptr inbounds %struct.playlist, %struct.playlist* %87, i32 0, i32 15, !dbg !4150
  store i32 2, i32* %type144, align 8, !dbg !4151
  br label %if.end145, !dbg !4149

if.end145:                                        ; preds = %if.then143, %if.else140
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.then138
  br label %if.end307, !dbg !4152

if.else147:                                       ; preds = %if.else127
  %arraydecay148 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !4153
  %call149 = call i32 @av_strstart(i8* %arraydecay148, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i32 0, i32 0), i8** %ptr), !dbg !4155
  %tobool150 = icmp ne i32 %call149, 0, !dbg !4155
  br i1 %tobool150, label %if.then151, label %if.else188, !dbg !4155

if.then151:                                       ; preds = %if.else147
  call void @llvm.dbg.declare(metadata %struct.init_section_info* %info152, metadata !4156, metadata !2357), !dbg !4164
  %88 = bitcast %struct.init_section_info* %info152 to i8*, !dbg !4164
  call void @llvm.memset.p0i8.i64(i8* %88, i8 0, i64 4128, i32 1, i1 false), !dbg !4164
  %89 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4165
  %90 = load i8*, i8** %url.addr, align 8, !dbg !4166
  %call153 = call i32 @ensure_playlist(%struct.HLSContext* %89, %struct.playlist** %pls.addr, i8* %90), !dbg !4167
  store i32 %call153, i32* %ret, align 4, !dbg !4168
  %91 = load i32, i32* %ret, align 4, !dbg !4169
  %cmp154 = icmp slt i32 %91, 0, !dbg !4171
  br i1 %cmp154, label %if.then155, label %if.end156, !dbg !4172

if.then155:                                       ; preds = %if.then151
  br label %fail, !dbg !4173

if.end156:                                        ; preds = %if.then151
  %92 = load i8*, i8** %ptr, align 8, !dbg !4174
  %93 = bitcast %struct.init_section_info* %info152 to i8*, !dbg !4175
  call void @ff_parse_key_value(i8* %92, void (i8*, i8*, i32, i8**, i32*)* bitcast (void (%struct.init_section_info*, i8*, i32, i8**, i32*)* @handle_init_section_args to void (i8*, i8*, i32, i8**, i32*)*), i8* %93), !dbg !4176
  %94 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4177
  %95 = load i8*, i8** %url.addr, align 8, !dbg !4178
  %call157 = call %struct.segment* @new_init_section(%struct.playlist* %94, %struct.init_section_info* %info152, i8* %95), !dbg !4179
  store %struct.segment* %call157, %struct.segment** %cur_init_section, align 8, !dbg !4180
  %96 = load i32, i32* %key_type, align 4, !dbg !4181
  %97 = load %struct.segment*, %struct.segment** %cur_init_section, align 8, !dbg !4182
  %key_type158 = getelementptr inbounds %struct.segment, %struct.segment* %97, i32 0, i32 5, !dbg !4183
  store i32 %96, i32* %key_type158, align 8, !dbg !4184
  %98 = load i32, i32* %has_iv, align 4, !dbg !4185
  %tobool159 = icmp ne i32 %98, 0, !dbg !4185
  br i1 %tobool159, label %if.then160, label %if.else164, !dbg !4186

if.then160:                                       ; preds = %if.end156
  %99 = load %struct.segment*, %struct.segment** %cur_init_section, align 8, !dbg !4187
  %iv161 = getelementptr inbounds %struct.segment, %struct.segment* %99, i32 0, i32 6, !dbg !4189
  %arraydecay162 = getelementptr inbounds [16 x i8], [16 x i8]* %iv161, i32 0, i32 0, !dbg !4190
  %arraydecay163 = getelementptr inbounds [16 x i8], [16 x i8]* %iv, i32 0, i32 0, !dbg !4190
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay162, i8* %arraydecay163, i64 16, i32 4, i1 false), !dbg !4190
  br label %if.end173, !dbg !4191

if.else164:                                       ; preds = %if.end156
  call void @llvm.dbg.declare(metadata i32* %seq, metadata !4192, metadata !2357), !dbg !4193
  %100 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4194
  %start_seq_no165 = getelementptr inbounds %struct.playlist, %struct.playlist* %100, i32 0, i32 17, !dbg !4195
  %101 = load i32, i32* %start_seq_no165, align 8, !dbg !4195
  %102 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4196
  %n_segments166 = getelementptr inbounds %struct.playlist, %struct.playlist* %102, i32 0, i32 18, !dbg !4197
  %103 = load i32, i32* %n_segments166, align 4, !dbg !4197
  %add = add nsw i32 %101, %103, !dbg !4198
  store i32 %add, i32* %seq, align 4, !dbg !4193
  %104 = load %struct.segment*, %struct.segment** %cur_init_section, align 8, !dbg !4199
  %iv167 = getelementptr inbounds %struct.segment, %struct.segment* %104, i32 0, i32 6, !dbg !4200
  %arraydecay168 = getelementptr inbounds [16 x i8], [16 x i8]* %iv167, i32 0, i32 0, !dbg !4201
  call void @llvm.memset.p0i8.i64(i8* %arraydecay168, i8 0, i64 16, i32 4, i1 false), !dbg !4201
  %105 = load i32, i32* %seq, align 4, !dbg !4202
  store i32 %105, i32* %x.addr.i, align 4, !dbg !4203
  %106 = load i32, i32* %x.addr.i, align 4, !dbg !4204
  %shl.i = shl i32 %106, 8, !dbg !4205
  %and.i = and i32 %shl.i, 65280, !dbg !4206
  %107 = load i32, i32* %x.addr.i, align 4, !dbg !4207
  %shr.i = lshr i32 %107, 8, !dbg !4208
  %and1.i = and i32 %shr.i, 255, !dbg !4209
  %or.i = or i32 %and.i, %and1.i, !dbg !4210
  %shl2.i = shl i32 %or.i, 16, !dbg !4211
  %108 = load i32, i32* %x.addr.i, align 4, !dbg !4212
  %shr3.i = lshr i32 %108, 16, !dbg !4213
  %shl4.i = shl i32 %shr3.i, 8, !dbg !4214
  %and5.i = and i32 %shl4.i, 65280, !dbg !4215
  %109 = load i32, i32* %x.addr.i, align 4, !dbg !4216
  %shr6.i = lshr i32 %109, 16, !dbg !4217
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !4218
  %and8.i = and i32 %shr7.i, 255, !dbg !4219
  %or9.i = or i32 %and5.i, %and8.i, !dbg !4220
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !4221
  %110 = load %struct.segment*, %struct.segment** %cur_init_section, align 8, !dbg !4222
  %iv170 = getelementptr inbounds %struct.segment, %struct.segment* %110, i32 0, i32 6, !dbg !4223
  %arraydecay171 = getelementptr inbounds [16 x i8], [16 x i8]* %iv170, i32 0, i32 0, !dbg !4222
  %add.ptr172 = getelementptr inbounds i8, i8* %arraydecay171, i64 12, !dbg !4224
  %111 = bitcast i8* %add.ptr172 to %union.unaligned_32*, !dbg !4225
  %l = bitcast %union.unaligned_32* %111 to i32*, !dbg !4225
  store i32 %or10.i, i32* %l, align 1, !dbg !4226
  br label %if.end173

if.end173:                                        ; preds = %if.else164, %if.then160
  %112 = load i32, i32* %key_type, align 4, !dbg !4227
  %cmp174 = icmp ne i32 %112, 0, !dbg !4229
  br i1 %cmp174, label %if.then175, label %if.else185, !dbg !4230

if.then175:                                       ; preds = %if.end173
  %arraydecay176 = getelementptr inbounds [4096 x i8], [4096 x i8]* %tmp_str, i32 0, i32 0, !dbg !4231
  %113 = load i8*, i8** %url.addr, align 8, !dbg !4233
  %arraydecay177 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i32 0, i32 0, !dbg !4234
  call void @ff_make_absolute_url(i8* %arraydecay176, i32 4096, i8* %113, i8* %arraydecay177), !dbg !4235
  %arraydecay178 = getelementptr inbounds [4096 x i8], [4096 x i8]* %tmp_str, i32 0, i32 0, !dbg !4236
  %call179 = call noalias i8* @av_strdup(i8* %arraydecay178), !dbg !4237
  %114 = load %struct.segment*, %struct.segment** %cur_init_section, align 8, !dbg !4238
  %key180 = getelementptr inbounds %struct.segment, %struct.segment* %114, i32 0, i32 4, !dbg !4239
  store i8* %call179, i8** %key180, align 8, !dbg !4240
  %115 = load %struct.segment*, %struct.segment** %cur_init_section, align 8, !dbg !4241
  %key181 = getelementptr inbounds %struct.segment, %struct.segment* %115, i32 0, i32 4, !dbg !4243
  %116 = load i8*, i8** %key181, align 8, !dbg !4243
  %tobool182 = icmp ne i8* %116, null, !dbg !4241
  br i1 %tobool182, label %if.end184, label %if.then183, !dbg !4244

if.then183:                                       ; preds = %if.then175
  %117 = load %struct.segment*, %struct.segment** %cur_init_section, align 8, !dbg !4245
  %118 = bitcast %struct.segment* %117 to i8*, !dbg !4245
  call void @av_free(i8* %118), !dbg !4247
  store i32 -12, i32* %ret, align 4, !dbg !4248
  br label %fail, !dbg !4249

if.end184:                                        ; preds = %if.then175
  br label %if.end187, !dbg !4250

if.else185:                                       ; preds = %if.end173
  %119 = load %struct.segment*, %struct.segment** %cur_init_section, align 8, !dbg !4251
  %key186 = getelementptr inbounds %struct.segment, %struct.segment* %119, i32 0, i32 4, !dbg !4253
  store i8* null, i8** %key186, align 8, !dbg !4254
  br label %if.end187

if.end187:                                        ; preds = %if.else185, %if.end184
  br label %if.end306, !dbg !4255

if.else188:                                       ; preds = %if.else147
  %arraydecay189 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !4256
  %call190 = call i32 @av_strstart(i8* %arraydecay189, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i32 0, i32 0), i8** %ptr), !dbg !4258
  %tobool191 = icmp ne i32 %call190, 0, !dbg !4258
  br i1 %tobool191, label %if.then192, label %if.else197, !dbg !4258

if.then192:                                       ; preds = %if.else188
  %120 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4259
  %tobool193 = icmp ne %struct.playlist* %120, null, !dbg !4259
  br i1 %tobool193, label %if.then194, label %if.end196, !dbg !4262

if.then194:                                       ; preds = %if.then192
  %121 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4263
  %finished195 = getelementptr inbounds %struct.playlist, %struct.playlist* %121, i32 0, i32 14, !dbg !4264
  store i32 1, i32* %finished195, align 4, !dbg !4265
  br label %if.end196, !dbg !4263

if.end196:                                        ; preds = %if.then194, %if.then192
  br label %if.end305, !dbg !4266

if.else197:                                       ; preds = %if.else188
  %arraydecay198 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !4267
  %call199 = call i32 @av_strstart(i8* %arraydecay198, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i32 0, i32 0), i8** %ptr), !dbg !4269
  %tobool200 = icmp ne i32 %call199, 0, !dbg !4269
  br i1 %tobool200, label %if.then201, label %if.else204, !dbg !4269

if.then201:                                       ; preds = %if.else197
  store i32 1, i32* %is_segment, align 4, !dbg !4270
  %122 = load i8*, i8** %ptr, align 8, !dbg !4272
  %call202 = call double @atof(i8* %122) #10, !dbg !4273
  %mul203 = fmul double %call202, 1.000000e+06, !dbg !4274
  %conv = fptosi double %mul203 to i64, !dbg !4273
  store i64 %conv, i64* %duration, align 8, !dbg !4275
  br label %if.end304, !dbg !4276

if.else204:                                       ; preds = %if.else197
  %arraydecay205 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !4277
  %call206 = call i32 @av_strstart(i8* %arraydecay205, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i32 0, i32 0), i8** %ptr), !dbg !4279
  %tobool207 = icmp ne i32 %call206, 0, !dbg !4279
  br i1 %tobool207, label %if.then208, label %if.else216, !dbg !4279

if.then208:                                       ; preds = %if.else204
  %123 = load i8*, i8** %ptr, align 8, !dbg !4280
  %call209 = call i64 @strtoll(i8* %123, i8** null, i32 10) #11, !dbg !4282
  store i64 %call209, i64* %seg_size, align 8, !dbg !4283
  %124 = load i8*, i8** %ptr, align 8, !dbg !4284
  %call210 = call i8* @strchr(i8* %124, i32 64) #10, !dbg !4285
  store i8* %call210, i8** %ptr, align 8, !dbg !4286
  %125 = load i8*, i8** %ptr, align 8, !dbg !4287
  %tobool211 = icmp ne i8* %125, null, !dbg !4287
  br i1 %tobool211, label %if.then212, label %if.end215, !dbg !4289

if.then212:                                       ; preds = %if.then208
  %126 = load i8*, i8** %ptr, align 8, !dbg !4290
  %add.ptr213 = getelementptr inbounds i8, i8* %126, i64 1, !dbg !4291
  %call214 = call i64 @strtoll(i8* %add.ptr213, i8** null, i32 10) #11, !dbg !4292
  store i64 %call214, i64* %seg_offset, align 8, !dbg !4293
  br label %if.end215, !dbg !4294

if.end215:                                        ; preds = %if.then212, %if.then208
  br label %if.end303, !dbg !4295

if.else216:                                       ; preds = %if.else204
  %arraydecay217 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !4296
  %call218 = call i32 @av_strstart(i8* %arraydecay217, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), i8** null), !dbg !4298
  %tobool219 = icmp ne i32 %call218, 0, !dbg !4298
  br i1 %tobool219, label %if.then220, label %if.else221, !dbg !4298

if.then220:                                       ; preds = %if.else216
  br label %while.cond, !dbg !4299, !llvm.loop !4301

if.else221:                                       ; preds = %if.else216
  %arrayidx = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i64 0, i64 0, !dbg !4302
  %127 = load i8, i8* %arrayidx, align 16, !dbg !4302
  %tobool222 = icmp ne i8 %127, 0, !dbg !4302
  br i1 %tobool222, label %if.then223, label %if.end301, !dbg !4303

if.then223:                                       ; preds = %if.else221
  %128 = load i32, i32* %is_variant, align 4, !dbg !4304
  %tobool224 = icmp ne i32 %128, 0, !dbg !4304
  br i1 %tobool224, label %if.then225, label %if.end231, !dbg !4306

if.then225:                                       ; preds = %if.then223
  %129 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4307
  %arraydecay226 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !4310
  %130 = load i8*, i8** %url.addr, align 8, !dbg !4311
  %call227 = call %struct.variant* @new_variant(%struct.HLSContext* %129, %struct.variant_info* %variant_info, i8* %arraydecay226, i8* %130), !dbg !4312
  %tobool228 = icmp ne %struct.variant* %call227, null, !dbg !4312
  br i1 %tobool228, label %if.end230, label %if.then229, !dbg !4313

if.then229:                                       ; preds = %if.then225
  store i32 -12, i32* %ret, align 4, !dbg !4314
  br label %fail, !dbg !4316

if.end230:                                        ; preds = %if.then225
  store i32 0, i32* %is_variant, align 4, !dbg !4317
  br label %if.end231, !dbg !4318

if.end231:                                        ; preds = %if.end230, %if.then223
  %131 = load i32, i32* %is_segment, align 4, !dbg !4319
  %tobool232 = icmp ne i32 %131, 0, !dbg !4319
  br i1 %tobool232, label %if.then233, label %if.end300, !dbg !4320

if.then233:                                       ; preds = %if.end231
  call void @llvm.dbg.declare(metadata %struct.segment** %seg, metadata !4321, metadata !2357), !dbg !4322
  %132 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4323
  %tobool234 = icmp ne %struct.playlist* %132, null, !dbg !4323
  br i1 %tobool234, label %if.end241, label %if.then235, !dbg !4325

if.then235:                                       ; preds = %if.then233
  %133 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4326
  %134 = load i8*, i8** %url.addr, align 8, !dbg !4329
  %call236 = call %struct.variant* @new_variant(%struct.HLSContext* %133, %struct.variant_info* null, i8* %134, i8* null), !dbg !4330
  %tobool237 = icmp ne %struct.variant* %call236, null, !dbg !4330
  br i1 %tobool237, label %if.end239, label %if.then238, !dbg !4331

if.then238:                                       ; preds = %if.then235
  store i32 -12, i32* %ret, align 4, !dbg !4332
  br label %fail, !dbg !4334

if.end239:                                        ; preds = %if.then235
  %135 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4335
  %n_playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %135, i32 0, i32 4, !dbg !4336
  %136 = load i32, i32* %n_playlists, align 8, !dbg !4336
  %sub = sub nsw i32 %136, 1, !dbg !4337
  %idxprom = sext i32 %sub to i64, !dbg !4338
  %137 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4338
  %playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %137, i32 0, i32 5, !dbg !4339
  %138 = load %struct.playlist**, %struct.playlist*** %playlists, align 8, !dbg !4339
  %arrayidx240 = getelementptr inbounds %struct.playlist*, %struct.playlist** %138, i64 %idxprom, !dbg !4338
  %139 = load %struct.playlist*, %struct.playlist** %arrayidx240, align 8, !dbg !4338
  store %struct.playlist* %139, %struct.playlist** %pls.addr, align 8, !dbg !4340
  br label %if.end241, !dbg !4341

if.end241:                                        ; preds = %if.end239, %if.then233
  %call242 = call noalias i8* @av_malloc(i64 72), !dbg !4342
  %140 = bitcast i8* %call242 to %struct.segment*, !dbg !4342
  store %struct.segment* %140, %struct.segment** %seg, align 8, !dbg !4343
  %141 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4344
  %tobool243 = icmp ne %struct.segment* %141, null, !dbg !4344
  br i1 %tobool243, label %if.end245, label %if.then244, !dbg !4346

if.then244:                                       ; preds = %if.end241
  store i32 -12, i32* %ret, align 4, !dbg !4347
  br label %fail, !dbg !4349

if.end245:                                        ; preds = %if.end241
  %142 = load i64, i64* %duration, align 8, !dbg !4350
  %143 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4351
  %duration246 = getelementptr inbounds %struct.segment, %struct.segment* %143, i32 0, i32 0, !dbg !4352
  store i64 %142, i64* %duration246, align 8, !dbg !4353
  %144 = load i32, i32* %key_type, align 4, !dbg !4354
  %145 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4355
  %key_type247 = getelementptr inbounds %struct.segment, %struct.segment* %145, i32 0, i32 5, !dbg !4356
  store i32 %144, i32* %key_type247, align 8, !dbg !4357
  %146 = load i32, i32* %has_iv, align 4, !dbg !4358
  %tobool248 = icmp ne i32 %146, 0, !dbg !4358
  br i1 %tobool248, label %if.then249, label %if.else253, !dbg !4359

if.then249:                                       ; preds = %if.end245
  %147 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4360
  %iv250 = getelementptr inbounds %struct.segment, %struct.segment* %147, i32 0, i32 6, !dbg !4362
  %arraydecay251 = getelementptr inbounds [16 x i8], [16 x i8]* %iv250, i32 0, i32 0, !dbg !4363
  %arraydecay252 = getelementptr inbounds [16 x i8], [16 x i8]* %iv, i32 0, i32 0, !dbg !4363
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay251, i8* %arraydecay252, i64 16, i32 4, i1 false), !dbg !4363
  br label %if.end265, !dbg !4364

if.else253:                                       ; preds = %if.end245
  call void @llvm.dbg.declare(metadata i32* %seq254, metadata !4365, metadata !2357), !dbg !4366
  %148 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4367
  %start_seq_no255 = getelementptr inbounds %struct.playlist, %struct.playlist* %148, i32 0, i32 17, !dbg !4368
  %149 = load i32, i32* %start_seq_no255, align 8, !dbg !4368
  %150 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4369
  %n_segments256 = getelementptr inbounds %struct.playlist, %struct.playlist* %150, i32 0, i32 18, !dbg !4370
  %151 = load i32, i32* %n_segments256, align 4, !dbg !4370
  %add257 = add nsw i32 %149, %151, !dbg !4371
  store i32 %add257, i32* %seq254, align 4, !dbg !4366
  %152 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4372
  %iv258 = getelementptr inbounds %struct.segment, %struct.segment* %152, i32 0, i32 6, !dbg !4373
  %arraydecay259 = getelementptr inbounds [16 x i8], [16 x i8]* %iv258, i32 0, i32 0, !dbg !4374
  call void @llvm.memset.p0i8.i64(i8* %arraydecay259, i8 0, i64 16, i32 4, i1 false), !dbg !4374
  %153 = load i32, i32* %seq254, align 4, !dbg !4375
  store i32 %153, i32* %x.addr.i382, align 4, !dbg !4376
  %154 = load i32, i32* %x.addr.i382, align 4, !dbg !4377
  %shl.i383 = shl i32 %154, 8, !dbg !4378
  %and.i384 = and i32 %shl.i383, 65280, !dbg !4379
  %155 = load i32, i32* %x.addr.i382, align 4, !dbg !4380
  %shr.i385 = lshr i32 %155, 8, !dbg !4381
  %and1.i386 = and i32 %shr.i385, 255, !dbg !4382
  %or.i387 = or i32 %and.i384, %and1.i386, !dbg !4383
  %shl2.i388 = shl i32 %or.i387, 16, !dbg !4384
  %156 = load i32, i32* %x.addr.i382, align 4, !dbg !4385
  %shr3.i389 = lshr i32 %156, 16, !dbg !4386
  %shl4.i390 = shl i32 %shr3.i389, 8, !dbg !4387
  %and5.i391 = and i32 %shl4.i390, 65280, !dbg !4388
  %157 = load i32, i32* %x.addr.i382, align 4, !dbg !4389
  %shr6.i392 = lshr i32 %157, 16, !dbg !4390
  %shr7.i393 = lshr i32 %shr6.i392, 8, !dbg !4391
  %and8.i394 = and i32 %shr7.i393, 255, !dbg !4392
  %or9.i395 = or i32 %and5.i391, %and8.i394, !dbg !4393
  %or10.i396 = or i32 %shl2.i388, %or9.i395, !dbg !4394
  %158 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4395
  %iv261 = getelementptr inbounds %struct.segment, %struct.segment* %158, i32 0, i32 6, !dbg !4396
  %arraydecay262 = getelementptr inbounds [16 x i8], [16 x i8]* %iv261, i32 0, i32 0, !dbg !4395
  %add.ptr263 = getelementptr inbounds i8, i8* %arraydecay262, i64 12, !dbg !4397
  %159 = bitcast i8* %add.ptr263 to %union.unaligned_32*, !dbg !4398
  %l264 = bitcast %union.unaligned_32* %159 to i32*, !dbg !4398
  store i32 %or10.i396, i32* %l264, align 1, !dbg !4399
  br label %if.end265

if.end265:                                        ; preds = %if.else253, %if.then249
  %160 = load i32, i32* %key_type, align 4, !dbg !4400
  %cmp266 = icmp ne i32 %160, 0, !dbg !4402
  br i1 %cmp266, label %if.then268, label %if.else278, !dbg !4403

if.then268:                                       ; preds = %if.end265
  %arraydecay269 = getelementptr inbounds [4096 x i8], [4096 x i8]* %tmp_str, i32 0, i32 0, !dbg !4404
  %161 = load i8*, i8** %url.addr, align 8, !dbg !4406
  %arraydecay270 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i32 0, i32 0, !dbg !4407
  call void @ff_make_absolute_url(i8* %arraydecay269, i32 4096, i8* %161, i8* %arraydecay270), !dbg !4408
  %arraydecay271 = getelementptr inbounds [4096 x i8], [4096 x i8]* %tmp_str, i32 0, i32 0, !dbg !4409
  %call272 = call noalias i8* @av_strdup(i8* %arraydecay271), !dbg !4410
  %162 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4411
  %key273 = getelementptr inbounds %struct.segment, %struct.segment* %162, i32 0, i32 4, !dbg !4412
  store i8* %call272, i8** %key273, align 8, !dbg !4413
  %163 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4414
  %key274 = getelementptr inbounds %struct.segment, %struct.segment* %163, i32 0, i32 4, !dbg !4416
  %164 = load i8*, i8** %key274, align 8, !dbg !4416
  %tobool275 = icmp ne i8* %164, null, !dbg !4414
  br i1 %tobool275, label %if.end277, label %if.then276, !dbg !4417

if.then276:                                       ; preds = %if.then268
  %165 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4418
  %166 = bitcast %struct.segment* %165 to i8*, !dbg !4418
  call void @av_free(i8* %166), !dbg !4420
  store i32 -12, i32* %ret, align 4, !dbg !4421
  br label %fail, !dbg !4422

if.end277:                                        ; preds = %if.then268
  br label %if.end280, !dbg !4423

if.else278:                                       ; preds = %if.end265
  %167 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4424
  %key279 = getelementptr inbounds %struct.segment, %struct.segment* %167, i32 0, i32 4, !dbg !4426
  store i8* null, i8** %key279, align 8, !dbg !4427
  br label %if.end280

if.end280:                                        ; preds = %if.else278, %if.end277
  %arraydecay281 = getelementptr inbounds [4096 x i8], [4096 x i8]* %tmp_str, i32 0, i32 0, !dbg !4428
  %168 = load i8*, i8** %url.addr, align 8, !dbg !4429
  %arraydecay282 = getelementptr inbounds [4096 x i8], [4096 x i8]* %line, i32 0, i32 0, !dbg !4430
  call void @ff_make_absolute_url(i8* %arraydecay281, i32 4096, i8* %168, i8* %arraydecay282), !dbg !4431
  %arraydecay283 = getelementptr inbounds [4096 x i8], [4096 x i8]* %tmp_str, i32 0, i32 0, !dbg !4432
  %call284 = call noalias i8* @av_strdup(i8* %arraydecay283), !dbg !4433
  %169 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4434
  %url285 = getelementptr inbounds %struct.segment, %struct.segment* %169, i32 0, i32 3, !dbg !4435
  store i8* %call284, i8** %url285, align 8, !dbg !4436
  %170 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4437
  %url286 = getelementptr inbounds %struct.segment, %struct.segment* %170, i32 0, i32 3, !dbg !4439
  %171 = load i8*, i8** %url286, align 8, !dbg !4439
  %tobool287 = icmp ne i8* %171, null, !dbg !4437
  br i1 %tobool287, label %if.end290, label %if.then288, !dbg !4440

if.then288:                                       ; preds = %if.end280
  %172 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4441
  %key289 = getelementptr inbounds %struct.segment, %struct.segment* %172, i32 0, i32 4, !dbg !4443
  %173 = load i8*, i8** %key289, align 8, !dbg !4443
  call void @av_free(i8* %173), !dbg !4444
  %174 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4445
  %175 = bitcast %struct.segment* %174 to i8*, !dbg !4445
  call void @av_free(i8* %175), !dbg !4446
  store i32 -12, i32* %ret, align 4, !dbg !4447
  br label %fail, !dbg !4448

if.end290:                                        ; preds = %if.end280
  br label %do.body, !dbg !4449, !llvm.loop !4450

do.body:                                          ; preds = %if.end290
  call void @llvm.dbg.declare(metadata %struct.segment**** %_tab, metadata !4451, metadata !2357), !dbg !4454
  %176 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4455
  %segments291 = getelementptr inbounds %struct.playlist, %struct.playlist* %176, i32 0, i32 19, !dbg !4457
  store %struct.segment*** %segments291, %struct.segment**** %_tab, align 8, !dbg !4458
  call void @llvm.dbg.declare(metadata %struct.segment** %_elem, metadata !4459, metadata !2357), !dbg !4460
  %177 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4461
  store %struct.segment* %177, %struct.segment** %_elem, align 8, !dbg !4462
  %178 = load %struct.segment***, %struct.segment**** %_tab, align 8, !dbg !4463
  %179 = bitcast %struct.segment*** %178 to i8*, !dbg !4463
  %180 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4464
  %n_segments292 = getelementptr inbounds %struct.playlist, %struct.playlist* %180, i32 0, i32 18, !dbg !4465
  %181 = load %struct.segment*, %struct.segment** %_elem, align 8, !dbg !4466
  %182 = bitcast %struct.segment* %181 to i8*, !dbg !4466
  call void @av_dynarray_add(i8* %179, i32* %n_segments292, i8* %182), !dbg !4467
  br label %do.end, !dbg !4468

do.end:                                           ; preds = %do.body
  store i32 0, i32* %is_segment, align 4, !dbg !4469
  %183 = load i64, i64* %seg_size, align 8, !dbg !4470
  %184 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4471
  %size = getelementptr inbounds %struct.segment, %struct.segment* %184, i32 0, i32 2, !dbg !4472
  store i64 %183, i64* %size, align 8, !dbg !4473
  %185 = load i64, i64* %seg_size, align 8, !dbg !4474
  %cmp293 = icmp sge i64 %185, 0, !dbg !4476
  br i1 %cmp293, label %if.then295, label %if.else297, !dbg !4477

if.then295:                                       ; preds = %do.end
  %186 = load i64, i64* %seg_offset, align 8, !dbg !4478
  %187 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4480
  %url_offset = getelementptr inbounds %struct.segment, %struct.segment* %187, i32 0, i32 1, !dbg !4481
  store i64 %186, i64* %url_offset, align 8, !dbg !4482
  %188 = load i64, i64* %seg_size, align 8, !dbg !4483
  %189 = load i64, i64* %seg_offset, align 8, !dbg !4484
  %add296 = add nsw i64 %189, %188, !dbg !4484
  store i64 %add296, i64* %seg_offset, align 8, !dbg !4484
  store i64 -1, i64* %seg_size, align 8, !dbg !4485
  br label %if.end299, !dbg !4486

if.else297:                                       ; preds = %do.end
  %190 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4487
  %url_offset298 = getelementptr inbounds %struct.segment, %struct.segment* %190, i32 0, i32 1, !dbg !4489
  store i64 0, i64* %url_offset298, align 8, !dbg !4490
  store i64 0, i64* %seg_offset, align 8, !dbg !4491
  br label %if.end299

if.end299:                                        ; preds = %if.else297, %if.then295
  %191 = load %struct.segment*, %struct.segment** %cur_init_section, align 8, !dbg !4492
  %192 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !4493
  %init_section = getelementptr inbounds %struct.segment, %struct.segment* %192, i32 0, i32 7, !dbg !4494
  store %struct.segment* %191, %struct.segment** %init_section, align 8, !dbg !4495
  br label %if.end300, !dbg !4496

if.end300:                                        ; preds = %if.end299, %if.end231
  br label %if.end301, !dbg !4497

if.end301:                                        ; preds = %if.end300, %if.else221
  br label %if.end302

if.end302:                                        ; preds = %if.end301
  br label %if.end303

if.end303:                                        ; preds = %if.end302, %if.end215
  br label %if.end304

if.end304:                                        ; preds = %if.end303, %if.then201
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %if.end196
  br label %if.end306

if.end306:                                        ; preds = %if.end305, %if.end187
  br label %if.end307

if.end307:                                        ; preds = %if.end306, %if.end146
  br label %if.end308

if.end308:                                        ; preds = %if.end307, %if.end124
  br label %if.end309

if.end309:                                        ; preds = %if.end308, %if.end114
  br label %if.end310

if.end310:                                        ; preds = %if.end309, %if.then103
  br label %if.end311

if.end311:                                        ; preds = %if.end310, %if.end95
  br label %if.end312

if.end312:                                        ; preds = %if.end311, %if.then65
  br label %while.cond, !dbg !4498, !llvm.loop !4301

while.end:                                        ; preds = %while.cond
  %193 = load %struct.segment**, %struct.segment*** %prev_segments, align 8, !dbg !4500
  %tobool313 = icmp ne %struct.segment** %193, null, !dbg !4500
  br i1 %tobool313, label %if.then314, label %if.end346, !dbg !4502

if.then314:                                       ; preds = %while.end
  %194 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4503
  %start_seq_no315 = getelementptr inbounds %struct.playlist, %struct.playlist* %194, i32 0, i32 17, !dbg !4506
  %195 = load i32, i32* %start_seq_no315, align 8, !dbg !4506
  %196 = load i32, i32* %prev_start_seq_no, align 4, !dbg !4507
  %cmp316 = icmp sgt i32 %195, %196, !dbg !4508
  br i1 %cmp316, label %land.lhs.true318, label %if.else337, !dbg !4509

land.lhs.true318:                                 ; preds = %if.then314
  %197 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4510
  %first_timestamp = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %197, i32 0, i32 11, !dbg !4512
  %198 = load i64, i64* %first_timestamp, align 8, !dbg !4512
  %cmp319 = icmp ne i64 %198, -9223372036854775808, !dbg !4513
  br i1 %cmp319, label %if.then321, label %if.else337, !dbg !4514

if.then321:                                       ; preds = %land.lhs.true318
  call void @llvm.dbg.declare(metadata i64* %prev_timestamp, metadata !4515, metadata !2357), !dbg !4517
  %199 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4518
  %first_timestamp322 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %199, i32 0, i32 11, !dbg !4519
  %200 = load i64, i64* %first_timestamp322, align 8, !dbg !4519
  store i64 %200, i64* %prev_timestamp, align 8, !dbg !4517
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4520, metadata !2357), !dbg !4521
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !4522, metadata !2357), !dbg !4523
  %201 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4524
  %start_seq_no323 = getelementptr inbounds %struct.playlist, %struct.playlist* %201, i32 0, i32 17, !dbg !4525
  %202 = load i32, i32* %start_seq_no323, align 8, !dbg !4525
  %203 = load i32, i32* %prev_start_seq_no, align 4, !dbg !4526
  %sub324 = sub nsw i32 %202, %203, !dbg !4527
  store i32 %sub324, i32* %diff, align 4, !dbg !4523
  store i32 0, i32* %i, align 4, !dbg !4528
  br label %for.cond, !dbg !4530

for.cond:                                         ; preds = %for.inc, %if.then321
  %204 = load i32, i32* %i, align 4, !dbg !4531
  %205 = load i32, i32* %prev_n_segments, align 4, !dbg !4534
  %cmp325 = icmp slt i32 %204, %205, !dbg !4535
  br i1 %cmp325, label %land.rhs, label %land.end, !dbg !4536

land.rhs:                                         ; preds = %for.cond
  %206 = load i32, i32* %i, align 4, !dbg !4537
  %207 = load i32, i32* %diff, align 4, !dbg !4539
  %cmp327 = icmp slt i32 %206, %207, !dbg !4540
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %208 = phi i1 [ false, %for.cond ], [ %cmp327, %land.rhs ]
  br i1 %208, label %for.body, label %for.end, !dbg !4541

for.body:                                         ; preds = %land.end
  %209 = load i32, i32* %i, align 4, !dbg !4543
  %idxprom329 = sext i32 %209 to i64, !dbg !4545
  %210 = load %struct.segment**, %struct.segment*** %prev_segments, align 8, !dbg !4545
  %arrayidx330 = getelementptr inbounds %struct.segment*, %struct.segment** %210, i64 %idxprom329, !dbg !4545
  %211 = load %struct.segment*, %struct.segment** %arrayidx330, align 8, !dbg !4545
  %duration331 = getelementptr inbounds %struct.segment, %struct.segment* %211, i32 0, i32 0, !dbg !4546
  %212 = load i64, i64* %duration331, align 8, !dbg !4546
  %213 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4547
  %first_timestamp332 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %213, i32 0, i32 11, !dbg !4548
  %214 = load i64, i64* %first_timestamp332, align 8, !dbg !4549
  %add333 = add nsw i64 %214, %212, !dbg !4549
  store i64 %add333, i64* %first_timestamp332, align 8, !dbg !4549
  br label %for.inc, !dbg !4550

for.inc:                                          ; preds = %for.body
  %215 = load i32, i32* %i, align 4, !dbg !4551
  %inc = add nsw i32 %215, 1, !dbg !4551
  store i32 %inc, i32* %i, align 4, !dbg !4551
  br label %for.cond, !dbg !4553, !llvm.loop !4554

for.end:                                          ; preds = %land.end
  %216 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4556
  %ctx334 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %216, i32 0, i32 1, !dbg !4557
  %217 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx334, align 8, !dbg !4557
  %218 = bitcast %struct.AVFormatContext* %217 to i8*, !dbg !4556
  %219 = load i32, i32* %prev_start_seq_no, align 4, !dbg !4558
  %220 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4559
  %start_seq_no335 = getelementptr inbounds %struct.playlist, %struct.playlist* %220, i32 0, i32 17, !dbg !4560
  %221 = load i32, i32* %start_seq_no335, align 8, !dbg !4560
  %222 = load i64, i64* %prev_timestamp, align 8, !dbg !4561
  %223 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4562
  %first_timestamp336 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %223, i32 0, i32 11, !dbg !4563
  %224 = load i64, i64* %first_timestamp336, align 8, !dbg !4563
  call void (i8*, i32, i8*, ...) @av_log(i8* %218, i32 48, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.49, i32 0, i32 0), i32 %219, i32 %221, i64 %222, i64 %224), !dbg !4564
  br label %if.end345, !dbg !4565

if.else337:                                       ; preds = %land.lhs.true318, %if.then314
  %225 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4566
  %start_seq_no338 = getelementptr inbounds %struct.playlist, %struct.playlist* %225, i32 0, i32 17, !dbg !4569
  %226 = load i32, i32* %start_seq_no338, align 8, !dbg !4569
  %227 = load i32, i32* %prev_start_seq_no, align 4, !dbg !4570
  %cmp339 = icmp slt i32 %226, %227, !dbg !4571
  br i1 %cmp339, label %if.then341, label %if.end344, !dbg !4566

if.then341:                                       ; preds = %if.else337
  %228 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4572
  %ctx342 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %228, i32 0, i32 1, !dbg !4574
  %229 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx342, align 8, !dbg !4574
  %230 = bitcast %struct.AVFormatContext* %229 to i8*, !dbg !4572
  %231 = load i32, i32* %prev_start_seq_no, align 4, !dbg !4575
  %232 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4576
  %start_seq_no343 = getelementptr inbounds %struct.playlist, %struct.playlist* %232, i32 0, i32 17, !dbg !4577
  %233 = load i32, i32* %start_seq_no343, align 8, !dbg !4577
  call void (i8*, i32, i8*, ...) @av_log(i8* %230, i32 24, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.50, i32 0, i32 0), i32 %231, i32 %233), !dbg !4578
  br label %if.end344, !dbg !4579

if.end344:                                        ; preds = %if.then341, %if.else337
  br label %if.end345

if.end345:                                        ; preds = %if.end344, %for.end
  %234 = load %struct.segment**, %struct.segment*** %prev_segments, align 8, !dbg !4580
  %235 = load i32, i32* %prev_n_segments, align 4, !dbg !4581
  call void @free_segment_dynarray(%struct.segment** %234, i32 %235), !dbg !4582
  %236 = bitcast %struct.segment*** %prev_segments to i8*, !dbg !4583
  call void @av_freep(i8* %236), !dbg !4584
  br label %if.end346, !dbg !4585

if.end346:                                        ; preds = %if.end345, %while.end
  %237 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4586
  %tobool347 = icmp ne %struct.playlist* %237, null, !dbg !4586
  br i1 %tobool347, label %if.then348, label %if.end350, !dbg !4588

if.then348:                                       ; preds = %if.end346
  %call349 = call i64 @av_gettime_relative(), !dbg !4589
  %238 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4590
  %last_load_time = getelementptr inbounds %struct.playlist, %struct.playlist* %238, i32 0, i32 23, !dbg !4591
  store i64 %call349, i64* %last_load_time, align 8, !dbg !4592
  br label %if.end350, !dbg !4590

if.end350:                                        ; preds = %if.then348, %if.end346
  br label %fail, !dbg !4593

fail:                                             ; preds = %if.end350, %if.then288, %if.then276, %if.then244, %if.then238, %if.then229, %if.then183, %if.then155, %if.then134, %if.then123, %if.then113, %if.then51
  %239 = load i8*, i8** %new_url, align 8, !dbg !4595
  call void @av_free(i8* %239), !dbg !4596
  %240 = load i32, i32* %close_in, align 4, !dbg !4597
  %tobool351 = icmp ne i32 %240, 0, !dbg !4597
  br i1 %tobool351, label %if.then352, label %if.end354, !dbg !4599

if.then352:                                       ; preds = %fail
  %241 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4600
  %ctx353 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %241, i32 0, i32 1, !dbg !4601
  %242 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx353, align 8, !dbg !4601
  call void @ff_format_io_close(%struct.AVFormatContext* %242, %struct.AVIOContext** %in.addr), !dbg !4602
  br label %if.end354, !dbg !4602

if.end354:                                        ; preds = %if.then352, %fail
  %243 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4603
  %ctx355 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %243, i32 0, i32 1, !dbg !4604
  %244 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx355, align 8, !dbg !4604
  %ctx_flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %244, i32 0, i32 5, !dbg !4605
  %245 = load i32, i32* %ctx_flags, align 8, !dbg !4605
  %and = and i32 %245, -3, !dbg !4606
  %246 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4607
  %ctx356 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %246, i32 0, i32 1, !dbg !4608
  %247 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx356, align 8, !dbg !4608
  %ctx_flags357 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %247, i32 0, i32 5, !dbg !4609
  store i32 %and, i32* %ctx_flags357, align 8, !dbg !4610
  %248 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4611
  %n_variants = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %248, i32 0, i32 2, !dbg !4613
  %249 = load i32, i32* %n_variants, align 8, !dbg !4613
  %tobool358 = icmp ne i32 %249, 0, !dbg !4611
  br i1 %tobool358, label %lor.lhs.false359, label %if.then378, !dbg !4614

lor.lhs.false359:                                 ; preds = %if.end354
  %250 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4615
  %variants = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %250, i32 0, i32 3, !dbg !4617
  %251 = load %struct.variant**, %struct.variant*** %variants, align 8, !dbg !4617
  %arrayidx360 = getelementptr inbounds %struct.variant*, %struct.variant** %251, i64 0, !dbg !4615
  %252 = load %struct.variant*, %struct.variant** %arrayidx360, align 8, !dbg !4615
  %n_playlists361 = getelementptr inbounds %struct.variant, %struct.variant* %252, i32 0, i32 1, !dbg !4618
  %253 = load i32, i32* %n_playlists361, align 4, !dbg !4618
  %tobool362 = icmp ne i32 %253, 0, !dbg !4615
  br i1 %tobool362, label %lor.lhs.false363, label %if.then378, !dbg !4619

lor.lhs.false363:                                 ; preds = %lor.lhs.false359
  %254 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4620
  %variants364 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %254, i32 0, i32 3, !dbg !4621
  %255 = load %struct.variant**, %struct.variant*** %variants364, align 8, !dbg !4621
  %arrayidx365 = getelementptr inbounds %struct.variant*, %struct.variant** %255, i64 0, !dbg !4620
  %256 = load %struct.variant*, %struct.variant** %arrayidx365, align 8, !dbg !4620
  %playlists366 = getelementptr inbounds %struct.variant, %struct.variant* %256, i32 0, i32 2, !dbg !4622
  %257 = load %struct.playlist**, %struct.playlist*** %playlists366, align 8, !dbg !4622
  %arrayidx367 = getelementptr inbounds %struct.playlist*, %struct.playlist** %257, i64 0, !dbg !4620
  %258 = load %struct.playlist*, %struct.playlist** %arrayidx367, align 8, !dbg !4620
  %finished368 = getelementptr inbounds %struct.playlist, %struct.playlist* %258, i32 0, i32 14, !dbg !4623
  %259 = load i32, i32* %finished368, align 4, !dbg !4623
  %tobool369 = icmp ne i32 %259, 0, !dbg !4620
  br i1 %tobool369, label %if.end381, label %lor.lhs.false370, !dbg !4624

lor.lhs.false370:                                 ; preds = %lor.lhs.false363
  %260 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4625
  %variants371 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %260, i32 0, i32 3, !dbg !4626
  %261 = load %struct.variant**, %struct.variant*** %variants371, align 8, !dbg !4626
  %arrayidx372 = getelementptr inbounds %struct.variant*, %struct.variant** %261, i64 0, !dbg !4625
  %262 = load %struct.variant*, %struct.variant** %arrayidx372, align 8, !dbg !4625
  %playlists373 = getelementptr inbounds %struct.variant, %struct.variant* %262, i32 0, i32 2, !dbg !4627
  %263 = load %struct.playlist**, %struct.playlist*** %playlists373, align 8, !dbg !4627
  %arrayidx374 = getelementptr inbounds %struct.playlist*, %struct.playlist** %263, i64 0, !dbg !4625
  %264 = load %struct.playlist*, %struct.playlist** %arrayidx374, align 8, !dbg !4625
  %type375 = getelementptr inbounds %struct.playlist, %struct.playlist* %264, i32 0, i32 15, !dbg !4628
  %265 = load i32, i32* %type375, align 8, !dbg !4628
  %cmp376 = icmp eq i32 %265, 1, !dbg !4629
  br i1 %cmp376, label %if.end381, label %if.then378, !dbg !4630

if.then378:                                       ; preds = %lor.lhs.false370, %lor.lhs.false359, %if.end354
  %266 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4631
  %ctx379 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %266, i32 0, i32 1, !dbg !4632
  %267 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx379, align 8, !dbg !4632
  %ctx_flags380 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %267, i32 0, i32 5, !dbg !4633
  %268 = load i32, i32* %ctx_flags380, align 8, !dbg !4634
  %or = or i32 %268, 2, !dbg !4634
  store i32 %or, i32* %ctx_flags380, align 8, !dbg !4634
  br label %if.end381, !dbg !4631

if.end381:                                        ; preds = %if.then378, %lor.lhs.false370, %lor.lhs.false363
  %269 = load i32, i32* %ret, align 4, !dbg !4635
  store i32 %269, i32* %retval, align 4, !dbg !4636
  br label %return, !dbg !4636

return:                                           ; preds = %if.end381, %if.then31, %if.then9
  %270 = load i32, i32* %retval, align 4, !dbg !4637
  ret i32 %270, !dbg !4637
}

declare void @av_log(i8*, i32, i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal void @add_renditions_to_variant(%struct.HLSContext* %c, %struct.variant* %var, i32 %type, i8* %group_id) #0 !dbg !4638 {
entry:
  %c.addr = alloca %struct.HLSContext*, align 8
  %var.addr = alloca %struct.variant*, align 8
  %type.addr = alloca i32, align 4
  %group_id.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %rend = alloca %struct.rendition*, align 8
  %_tab = alloca %struct.playlist***, align 8
  %_elem = alloca %struct.playlist*, align 8
  %_tab8 = alloca %struct.rendition***, align 8
  %_elem12 = alloca %struct.rendition*, align 8
  store %struct.HLSContext* %c, %struct.HLSContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c.addr, metadata !4641, metadata !2357), !dbg !4642
  store %struct.variant* %var, %struct.variant** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variant** %var.addr, metadata !4643, metadata !2357), !dbg !4644
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4645, metadata !2357), !dbg !4646
  store i8* %group_id, i8** %group_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %group_id.addr, metadata !4647, metadata !2357), !dbg !4648
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4649, metadata !2357), !dbg !4650
  store i32 0, i32* %i, align 4, !dbg !4651
  br label %for.cond, !dbg !4653

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4654
  %1 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4657
  %n_renditions = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %1, i32 0, i32 6, !dbg !4658
  %2 = load i32, i32* %n_renditions, align 8, !dbg !4658
  %cmp = icmp slt i32 %0, %2, !dbg !4659
  br i1 %cmp, label %for.body, label %for.end, !dbg !4660

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rendition** %rend, metadata !4661, metadata !2357), !dbg !4663
  %3 = load i32, i32* %i, align 4, !dbg !4664
  %idxprom = sext i32 %3 to i64, !dbg !4665
  %4 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4665
  %renditions = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 7, !dbg !4666
  %5 = load %struct.rendition**, %struct.rendition*** %renditions, align 8, !dbg !4666
  %arrayidx = getelementptr inbounds %struct.rendition*, %struct.rendition** %5, i64 %idxprom, !dbg !4665
  %6 = load %struct.rendition*, %struct.rendition** %arrayidx, align 8, !dbg !4665
  store %struct.rendition* %6, %struct.rendition** %rend, align 8, !dbg !4663
  %7 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !4667
  %type1 = getelementptr inbounds %struct.rendition, %struct.rendition* %7, i32 0, i32 0, !dbg !4669
  %8 = load i32, i32* %type1, align 8, !dbg !4669
  %9 = load i32, i32* %type.addr, align 4, !dbg !4670
  %cmp2 = icmp eq i32 %8, %9, !dbg !4671
  br i1 %cmp2, label %land.lhs.true, label %if.end17, !dbg !4672

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !4673
  %group_id3 = getelementptr inbounds %struct.rendition, %struct.rendition* %10, i32 0, i32 2, !dbg !4675
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %group_id3, i32 0, i32 0, !dbg !4673
  %11 = load i8*, i8** %group_id.addr, align 8, !dbg !4676
  %call = call i32 @strcmp(i8* %arraydecay, i8* %11) #10, !dbg !4677
  %tobool = icmp ne i32 %call, 0, !dbg !4677
  br i1 %tobool, label %if.end17, label %if.then, !dbg !4678

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !4679
  %playlist = getelementptr inbounds %struct.rendition, %struct.rendition* %12, i32 0, i32 1, !dbg !4682
  %13 = load %struct.playlist*, %struct.playlist** %playlist, align 8, !dbg !4682
  %tobool4 = icmp ne %struct.playlist* %13, null, !dbg !4679
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !4683

if.then5:                                         ; preds = %if.then
  br label %do.body, !dbg !4684, !llvm.loop !4685

do.body:                                          ; preds = %if.then5
  call void @llvm.dbg.declare(metadata %struct.playlist**** %_tab, metadata !4686, metadata !2357), !dbg !4689
  %14 = load %struct.variant*, %struct.variant** %var.addr, align 8, !dbg !4690
  %playlists = getelementptr inbounds %struct.variant, %struct.variant* %14, i32 0, i32 2, !dbg !4692
  store %struct.playlist*** %playlists, %struct.playlist**** %_tab, align 8, !dbg !4693
  call void @llvm.dbg.declare(metadata %struct.playlist** %_elem, metadata !4694, metadata !2357), !dbg !4695
  %15 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !4696
  %playlist6 = getelementptr inbounds %struct.rendition, %struct.rendition* %15, i32 0, i32 1, !dbg !4697
  %16 = load %struct.playlist*, %struct.playlist** %playlist6, align 8, !dbg !4697
  store %struct.playlist* %16, %struct.playlist** %_elem, align 8, !dbg !4698
  %17 = load %struct.playlist***, %struct.playlist**** %_tab, align 8, !dbg !4699
  %18 = bitcast %struct.playlist*** %17 to i8*, !dbg !4699
  %19 = load %struct.variant*, %struct.variant** %var.addr, align 8, !dbg !4700
  %n_playlists = getelementptr inbounds %struct.variant, %struct.variant* %19, i32 0, i32 1, !dbg !4701
  %20 = load %struct.playlist*, %struct.playlist** %_elem, align 8, !dbg !4702
  %21 = bitcast %struct.playlist* %20 to i8*, !dbg !4702
  call void @av_dynarray_add(i8* %18, i32* %n_playlists, i8* %21), !dbg !4703
  br label %do.end, !dbg !4704

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !4705

if.else:                                          ; preds = %if.then
  br label %do.body7, !dbg !4707, !llvm.loop !4708

do.body7:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.rendition**** %_tab8, metadata !4709, metadata !2357), !dbg !4712
  %22 = load %struct.variant*, %struct.variant** %var.addr, align 8, !dbg !4713
  %playlists9 = getelementptr inbounds %struct.variant, %struct.variant* %22, i32 0, i32 2, !dbg !4715
  %23 = load %struct.playlist**, %struct.playlist*** %playlists9, align 8, !dbg !4715
  %arrayidx10 = getelementptr inbounds %struct.playlist*, %struct.playlist** %23, i64 0, !dbg !4713
  %24 = load %struct.playlist*, %struct.playlist** %arrayidx10, align 8, !dbg !4713
  %renditions11 = getelementptr inbounds %struct.playlist, %struct.playlist* %24, i32 0, i32 44, !dbg !4716
  store %struct.rendition*** %renditions11, %struct.rendition**** %_tab8, align 8, !dbg !4717
  call void @llvm.dbg.declare(metadata %struct.rendition** %_elem12, metadata !4718, metadata !2357), !dbg !4719
  %25 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !4720
  store %struct.rendition* %25, %struct.rendition** %_elem12, align 8, !dbg !4721
  %26 = load %struct.rendition***, %struct.rendition**** %_tab8, align 8, !dbg !4722
  %27 = bitcast %struct.rendition*** %26 to i8*, !dbg !4722
  %28 = load %struct.variant*, %struct.variant** %var.addr, align 8, !dbg !4723
  %playlists13 = getelementptr inbounds %struct.variant, %struct.variant* %28, i32 0, i32 2, !dbg !4724
  %29 = load %struct.playlist**, %struct.playlist*** %playlists13, align 8, !dbg !4724
  %arrayidx14 = getelementptr inbounds %struct.playlist*, %struct.playlist** %29, i64 0, !dbg !4723
  %30 = load %struct.playlist*, %struct.playlist** %arrayidx14, align 8, !dbg !4723
  %n_renditions15 = getelementptr inbounds %struct.playlist, %struct.playlist* %30, i32 0, i32 43, !dbg !4725
  %31 = load %struct.rendition*, %struct.rendition** %_elem12, align 8, !dbg !4726
  %32 = bitcast %struct.rendition* %31 to i8*, !dbg !4726
  call void @av_dynarray_add(i8* %27, i32* %n_renditions15, i8* %32), !dbg !4727
  br label %do.end16, !dbg !4728

do.end16:                                         ; preds = %do.body7
  br label %if.end

if.end:                                           ; preds = %do.end16, %do.end
  br label %if.end17, !dbg !4729

if.end17:                                         ; preds = %if.end, %land.lhs.true, %for.body
  br label %for.inc, !dbg !4730

for.inc:                                          ; preds = %if.end17
  %33 = load i32, i32* %i, align 4, !dbg !4731
  %inc = add nsw i32 %33, 1, !dbg !4731
  store i32 %inc, i32* %i, align 4, !dbg !4731
  br label %for.cond, !dbg !4733, !llvm.loop !4734

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4736
}

declare %struct.AVProgram* @av_new_program(%struct.AVFormatContext*, i32) #1

declare i32 @av_dict_set_int(%struct.AVDictionary**, i8*, i64, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @select_cur_seq_no(%struct.HLSContext* %c, %struct.playlist* %pls) #0 !dbg !4737 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.HLSContext*, align 8
  %pls.addr = alloca %struct.playlist*, align 8
  %seq_no = alloca i32, align 4
  store %struct.HLSContext* %c, %struct.HLSContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c.addr, metadata !4740, metadata !2357), !dbg !4741
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !4742, metadata !2357), !dbg !4743
  call void @llvm.dbg.declare(metadata i32* %seq_no, metadata !4744, metadata !2357), !dbg !4745
  %0 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4746
  %finished = getelementptr inbounds %struct.playlist, %struct.playlist* %0, i32 0, i32 14, !dbg !4748
  %1 = load i32, i32* %finished, align 4, !dbg !4748
  %tobool = icmp ne i32 %1, 0, !dbg !4746
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4749

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4750
  %first_packet = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %2, i32 0, i32 10, !dbg !4752
  %3 = load i32, i32* %first_packet, align 8, !dbg !4752
  %tobool1 = icmp ne i32 %3, 0, !dbg !4750
  br i1 %tobool1, label %if.end, label %land.lhs.true2, !dbg !4753

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call = call i64 @av_gettime_relative(), !dbg !4754
  %4 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4755
  %last_load_time = getelementptr inbounds %struct.playlist, %struct.playlist* %4, i32 0, i32 23, !dbg !4756
  %5 = load i64, i64* %last_load_time, align 8, !dbg !4756
  %sub = sub nsw i64 %call, %5, !dbg !4757
  %6 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4758
  %call3 = call i64 @default_reload_interval(%struct.playlist* %6), !dbg !4759
  %cmp = icmp sge i64 %sub, %call3, !dbg !4760
  br i1 %cmp, label %if.then, label %if.end, !dbg !4761

if.then:                                          ; preds = %land.lhs.true2
  %7 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4763
  %8 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4764
  %url = getelementptr inbounds %struct.playlist, %struct.playlist* %8, i32 0, i32 0, !dbg !4765
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %url, i32 0, i32 0, !dbg !4764
  %9 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4766
  %call4 = call i32 @parse_playlist(%struct.HLSContext* %7, i8* %arraydecay, %struct.playlist* %9, %struct.AVIOContext* null), !dbg !4767
  br label %if.end, !dbg !4767

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  %10 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4768
  %finished5 = getelementptr inbounds %struct.playlist, %struct.playlist* %10, i32 0, i32 14, !dbg !4770
  %11 = load i32, i32* %finished5, align 4, !dbg !4770
  %tobool6 = icmp ne i32 %11, 0, !dbg !4768
  br i1 %tobool6, label %land.lhs.true7, label %if.end12, !dbg !4771

land.lhs.true7:                                   ; preds = %if.end
  %12 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4772
  %cur_timestamp = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %12, i32 0, i32 12, !dbg !4774
  %13 = load i64, i64* %cur_timestamp, align 8, !dbg !4774
  %cmp8 = icmp ne i64 %13, -9223372036854775808, !dbg !4775
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !4776

if.then9:                                         ; preds = %land.lhs.true7
  %14 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4777
  %15 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4779
  %16 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4780
  %cur_timestamp10 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %16, i32 0, i32 12, !dbg !4781
  %17 = load i64, i64* %cur_timestamp10, align 8, !dbg !4781
  %call11 = call i32 @find_timestamp_in_playlist(%struct.HLSContext* %14, %struct.playlist* %15, i64 %17, i32* %seq_no), !dbg !4782
  %18 = load i32, i32* %seq_no, align 4, !dbg !4783
  store i32 %18, i32* %retval, align 4, !dbg !4784
  br label %return, !dbg !4784

if.end12:                                         ; preds = %land.lhs.true7, %if.end
  %19 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4785
  %finished13 = getelementptr inbounds %struct.playlist, %struct.playlist* %19, i32 0, i32 14, !dbg !4787
  %20 = load i32, i32* %finished13, align 4, !dbg !4787
  %tobool14 = icmp ne i32 %20, 0, !dbg !4785
  br i1 %tobool14, label %if.end51, label %if.then15, !dbg !4788

if.then15:                                        ; preds = %if.end12
  %21 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4789
  %first_packet16 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %21, i32 0, i32 10, !dbg !4792
  %22 = load i32, i32* %first_packet16, align 8, !dbg !4792
  %tobool17 = icmp ne i32 %22, 0, !dbg !4789
  br i1 %tobool17, label %if.end26, label %land.lhs.true18, !dbg !4793

land.lhs.true18:                                  ; preds = %if.then15
  %23 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4794
  %cur_seq_no = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %23, i32 0, i32 8, !dbg !4795
  %24 = load i32, i32* %cur_seq_no, align 8, !dbg !4795
  %25 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4796
  %start_seq_no = getelementptr inbounds %struct.playlist, %struct.playlist* %25, i32 0, i32 17, !dbg !4797
  %26 = load i32, i32* %start_seq_no, align 8, !dbg !4797
  %cmp19 = icmp sge i32 %24, %26, !dbg !4798
  br i1 %cmp19, label %land.lhs.true20, label %if.end26, !dbg !4799

land.lhs.true20:                                  ; preds = %land.lhs.true18
  %27 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4800
  %cur_seq_no21 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %27, i32 0, i32 8, !dbg !4801
  %28 = load i32, i32* %cur_seq_no21, align 8, !dbg !4801
  %29 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4802
  %start_seq_no22 = getelementptr inbounds %struct.playlist, %struct.playlist* %29, i32 0, i32 17, !dbg !4803
  %30 = load i32, i32* %start_seq_no22, align 8, !dbg !4803
  %31 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4804
  %n_segments = getelementptr inbounds %struct.playlist, %struct.playlist* %31, i32 0, i32 18, !dbg !4805
  %32 = load i32, i32* %n_segments, align 4, !dbg !4805
  %add = add nsw i32 %30, %32, !dbg !4806
  %cmp23 = icmp slt i32 %28, %add, !dbg !4807
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !4808

if.then24:                                        ; preds = %land.lhs.true20
  %33 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4810
  %cur_seq_no25 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %33, i32 0, i32 8, !dbg !4811
  %34 = load i32, i32* %cur_seq_no25, align 8, !dbg !4811
  store i32 %34, i32* %retval, align 4, !dbg !4812
  br label %return, !dbg !4812

if.end26:                                         ; preds = %land.lhs.true20, %land.lhs.true18, %if.then15
  %35 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4813
  %live_start_index = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %35, i32 0, i32 9, !dbg !4815
  %36 = load i32, i32* %live_start_index, align 4, !dbg !4815
  %cmp27 = icmp slt i32 %36, 0, !dbg !4816
  br i1 %cmp27, label %if.then28, label %if.else, !dbg !4817

if.then28:                                        ; preds = %if.end26
  %37 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4818
  %start_seq_no29 = getelementptr inbounds %struct.playlist, %struct.playlist* %37, i32 0, i32 17, !dbg !4819
  %38 = load i32, i32* %start_seq_no29, align 8, !dbg !4819
  %39 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4820
  %n_segments30 = getelementptr inbounds %struct.playlist, %struct.playlist* %39, i32 0, i32 18, !dbg !4821
  %40 = load i32, i32* %n_segments30, align 4, !dbg !4821
  %41 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4822
  %live_start_index31 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %41, i32 0, i32 9, !dbg !4823
  %42 = load i32, i32* %live_start_index31, align 4, !dbg !4823
  %add32 = add nsw i32 %40, %42, !dbg !4824
  %cmp33 = icmp sgt i32 %add32, 0, !dbg !4825
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !4826

cond.true:                                        ; preds = %if.then28
  %43 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4827
  %n_segments34 = getelementptr inbounds %struct.playlist, %struct.playlist* %43, i32 0, i32 18, !dbg !4829
  %44 = load i32, i32* %n_segments34, align 4, !dbg !4829
  %45 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4830
  %live_start_index35 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %45, i32 0, i32 9, !dbg !4831
  %46 = load i32, i32* %live_start_index35, align 4, !dbg !4831
  %add36 = add nsw i32 %44, %46, !dbg !4832
  br label %cond.end, !dbg !4833

cond.false:                                       ; preds = %if.then28
  br label %cond.end, !dbg !4834

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add36, %cond.true ], [ 0, %cond.false ], !dbg !4836
  %add37 = add nsw i32 %38, %cond, !dbg !4838
  store i32 %add37, i32* %retval, align 4, !dbg !4839
  br label %return, !dbg !4839

if.else:                                          ; preds = %if.end26
  %47 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4840
  %start_seq_no38 = getelementptr inbounds %struct.playlist, %struct.playlist* %47, i32 0, i32 17, !dbg !4841
  %48 = load i32, i32* %start_seq_no38, align 8, !dbg !4841
  %49 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4842
  %live_start_index39 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %49, i32 0, i32 9, !dbg !4843
  %50 = load i32, i32* %live_start_index39, align 4, !dbg !4843
  %51 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4844
  %n_segments40 = getelementptr inbounds %struct.playlist, %struct.playlist* %51, i32 0, i32 18, !dbg !4845
  %52 = load i32, i32* %n_segments40, align 4, !dbg !4845
  %sub41 = sub nsw i32 %52, 1, !dbg !4846
  %cmp42 = icmp sgt i32 %50, %sub41, !dbg !4847
  br i1 %cmp42, label %cond.true43, label %cond.false46, !dbg !4848

cond.true43:                                      ; preds = %if.else
  %53 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4849
  %n_segments44 = getelementptr inbounds %struct.playlist, %struct.playlist* %53, i32 0, i32 18, !dbg !4850
  %54 = load i32, i32* %n_segments44, align 4, !dbg !4850
  %sub45 = sub nsw i32 %54, 1, !dbg !4851
  br label %cond.end48, !dbg !4852

cond.false46:                                     ; preds = %if.else
  %55 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !4853
  %live_start_index47 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %55, i32 0, i32 9, !dbg !4854
  %56 = load i32, i32* %live_start_index47, align 4, !dbg !4854
  br label %cond.end48, !dbg !4855

cond.end48:                                       ; preds = %cond.false46, %cond.true43
  %cond49 = phi i32 [ %sub45, %cond.true43 ], [ %56, %cond.false46 ], !dbg !4856
  %add50 = add nsw i32 %48, %cond49, !dbg !4857
  store i32 %add50, i32* %retval, align 4, !dbg !4858
  br label %return, !dbg !4858

if.end51:                                         ; preds = %if.end12
  %57 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !4859
  %start_seq_no52 = getelementptr inbounds %struct.playlist, %struct.playlist* %57, i32 0, i32 17, !dbg !4860
  %58 = load i32, i32* %start_seq_no52, align 8, !dbg !4860
  store i32 %58, i32* %retval, align 4, !dbg !4861
  br label %return, !dbg !4861

return:                                           ; preds = %if.end51, %cond.end48, %cond.end, %if.then24, %if.then9
  %59 = load i32, i32* %retval, align 4, !dbg !4862
  ret i32 %59, !dbg !4862
}

declare %struct.AVFormatContext* @avformat_alloc_context() #1

declare noalias i8* @av_malloc(i64) #1

declare void @avformat_free_context(%struct.AVFormatContext*) #1

declare i32 @ffio_init_context(%struct.AVIOContext*, i8*, i32, i32, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*) #1

; Function Attrs: nounwind uwtable
define internal i32 @read_data(i8* %opaque, i8* %buf, i32 %buf_size) #0 !dbg !4863 {
entry:
  %retval = alloca i32, align 4
  %opaque.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i32, align 4
  %v = alloca %struct.playlist*, align 8
  %c = alloca %struct.HLSContext*, align 8
  %ret = alloca i32, align 4
  %just_opened = alloca i32, align 4
  %reload_count = alloca i32, align 4
  %seg = alloca %struct.segment*, align 8
  %reload_interval = alloca i64, align 8
  %SWAP_tmp = alloca %struct.AVIOContext*, align 8
  %http_version_opt = alloca i8*, align 8
  %r = alloca i32, align 4
  %copy_size = alloca i32, align 4
  store i8* %opaque, i8** %opaque.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opaque.addr, metadata !4864, metadata !2357), !dbg !4865
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4866, metadata !2357), !dbg !4867
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !4868, metadata !2357), !dbg !4869
  call void @llvm.dbg.declare(metadata %struct.playlist** %v, metadata !4870, metadata !2357), !dbg !4871
  %0 = load i8*, i8** %opaque.addr, align 8, !dbg !4872
  %1 = bitcast i8* %0 to %struct.playlist*, !dbg !4872
  store %struct.playlist* %1, %struct.playlist** %v, align 8, !dbg !4871
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c, metadata !4873, metadata !2357), !dbg !4874
  %2 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4875
  %parent = getelementptr inbounds %struct.playlist, %struct.playlist* %2, i32 0, i32 7, !dbg !4876
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent, align 8, !dbg !4876
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 3, !dbg !4877
  %4 = load i8*, i8** %priv_data, align 8, !dbg !4877
  %5 = bitcast i8* %4 to %struct.HLSContext*, !dbg !4875
  store %struct.HLSContext* %5, %struct.HLSContext** %c, align 8, !dbg !4874
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4878, metadata !2357), !dbg !4879
  call void @llvm.dbg.declare(metadata i32* %just_opened, metadata !4880, metadata !2357), !dbg !4881
  store i32 0, i32* %just_opened, align 4, !dbg !4881
  call void @llvm.dbg.declare(metadata i32* %reload_count, metadata !4882, metadata !2357), !dbg !4883
  store i32 0, i32* %reload_count, align 4, !dbg !4883
  call void @llvm.dbg.declare(metadata %struct.segment** %seg, metadata !4884, metadata !2357), !dbg !4885
  br label %restart, !dbg !4886

restart:                                          ; preds = %if.end175, %entry
  %6 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4887
  %needed = getelementptr inbounds %struct.playlist, %struct.playlist* %6, i32 0, i32 20, !dbg !4889
  %7 = load i32, i32* %needed, align 8, !dbg !4889
  %tobool = icmp ne i32 %7, 0, !dbg !4887
  br i1 %tobool, label %if.end, label %if.then, !dbg !4890

if.then:                                          ; preds = %restart
  store i32 -541478725, i32* %retval, align 4, !dbg !4891
  br label %return, !dbg !4891

if.end:                                           ; preds = %restart
  %8 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4892
  %input = getelementptr inbounds %struct.playlist, %struct.playlist* %8, i32 0, i32 3, !dbg !4894
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %input, align 8, !dbg !4894
  %tobool1 = icmp ne %struct.AVIOContext* %9, null, !dbg !4892
  br i1 %tobool1, label %lor.lhs.false, label %if.then4, !dbg !4895

lor.lhs.false:                                    ; preds = %if.end
  %10 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !4896
  %http_persistent = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %10, i32 0, i32 18, !dbg !4898
  %11 = load i32, i32* %http_persistent, align 4, !dbg !4898
  %tobool2 = icmp ne i32 %11, 0, !dbg !4896
  br i1 %tobool2, label %land.lhs.true, label %if.end85, !dbg !4899

land.lhs.true:                                    ; preds = %lor.lhs.false
  %12 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4900
  %input_read_done = getelementptr inbounds %struct.playlist, %struct.playlist* %12, i32 0, i32 4, !dbg !4902
  %13 = load i32, i32* %input_read_done, align 8, !dbg !4902
  %tobool3 = icmp ne i32 %13, 0, !dbg !4900
  br i1 %tobool3, label %if.then4, label %if.end85, !dbg !4903

if.then4:                                         ; preds = %land.lhs.true, %if.end
  call void @llvm.dbg.declare(metadata i64* %reload_interval, metadata !4904, metadata !2357), !dbg !4906
  %14 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4907
  %call = call i32 @playlist_needed(%struct.playlist* %14), !dbg !4908
  %15 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4909
  %needed5 = getelementptr inbounds %struct.playlist, %struct.playlist* %15, i32 0, i32 20, !dbg !4910
  store i32 %call, i32* %needed5, align 8, !dbg !4911
  %16 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4912
  %needed6 = getelementptr inbounds %struct.playlist, %struct.playlist* %16, i32 0, i32 20, !dbg !4914
  %17 = load i32, i32* %needed6, align 8, !dbg !4914
  %tobool7 = icmp ne i32 %17, 0, !dbg !4912
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !4915

if.then8:                                         ; preds = %if.then4
  %18 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4916
  %parent9 = getelementptr inbounds %struct.playlist, %struct.playlist* %18, i32 0, i32 7, !dbg !4918
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent9, align 8, !dbg !4918
  %20 = bitcast %struct.AVFormatContext* %19 to i8*, !dbg !4916
  %21 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4919
  %index = getelementptr inbounds %struct.playlist, %struct.playlist* %21, i32 0, i32 8, !dbg !4920
  %22 = load i32, i32* %index, align 8, !dbg !4920
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 32, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.78, i32 0, i32 0), i32 %22), !dbg !4921
  store i32 -541478725, i32* %retval, align 4, !dbg !4922
  br label %return, !dbg !4922

if.end10:                                         ; preds = %if.then4
  %23 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4923
  %call11 = call i64 @default_reload_interval(%struct.playlist* %23), !dbg !4924
  store i64 %call11, i64* %reload_interval, align 8, !dbg !4925
  br label %reload, !dbg !4926

reload:                                           ; preds = %if.end78, %while.end, %if.end10
  %24 = load i32, i32* %reload_count, align 4, !dbg !4927
  %inc = add nsw i32 %24, 1, !dbg !4927
  store i32 %inc, i32* %reload_count, align 4, !dbg !4927
  %25 = load i32, i32* %reload_count, align 4, !dbg !4928
  %26 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !4930
  %max_reload = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %26, i32 0, i32 17, !dbg !4931
  %27 = load i32, i32* %max_reload, align 8, !dbg !4931
  %cmp = icmp sgt i32 %25, %27, !dbg !4932
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !4933

if.then12:                                        ; preds = %reload
  store i32 -541478725, i32* %retval, align 4, !dbg !4934
  br label %return, !dbg !4934

if.end13:                                         ; preds = %reload
  %28 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4935
  %finished = getelementptr inbounds %struct.playlist, %struct.playlist* %28, i32 0, i32 14, !dbg !4937
  %29 = load i32, i32* %finished, align 4, !dbg !4937
  %tobool14 = icmp ne i32 %29, 0, !dbg !4935
  br i1 %tobool14, label %if.end28, label %land.lhs.true15, !dbg !4938

land.lhs.true15:                                  ; preds = %if.end13
  %call16 = call i64 @av_gettime_relative(), !dbg !4939
  %30 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4940
  %last_load_time = getelementptr inbounds %struct.playlist, %struct.playlist* %30, i32 0, i32 23, !dbg !4941
  %31 = load i64, i64* %last_load_time, align 8, !dbg !4941
  %sub = sub nsw i64 %call16, %31, !dbg !4942
  %32 = load i64, i64* %reload_interval, align 8, !dbg !4943
  %cmp17 = icmp sge i64 %sub, %32, !dbg !4944
  br i1 %cmp17, label %if.then18, label %if.end28, !dbg !4945

if.then18:                                        ; preds = %land.lhs.true15
  %33 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !4947
  %34 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4950
  %url = getelementptr inbounds %struct.playlist, %struct.playlist* %34, i32 0, i32 0, !dbg !4951
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %url, i32 0, i32 0, !dbg !4950
  %35 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4952
  %call19 = call i32 @parse_playlist(%struct.HLSContext* %33, i8* %arraydecay, %struct.playlist* %35, %struct.AVIOContext* null), !dbg !4953
  store i32 %call19, i32* %ret, align 4, !dbg !4954
  %cmp20 = icmp slt i32 %call19, 0, !dbg !4955
  br i1 %cmp20, label %if.then21, label %if.end27, !dbg !4956

if.then21:                                        ; preds = %if.then18
  %36 = load i32, i32* %ret, align 4, !dbg !4957
  %cmp22 = icmp ne i32 %36, -1414092869, !dbg !4960
  br i1 %cmp22, label %if.then23, label %if.end26, !dbg !4961

if.then23:                                        ; preds = %if.then21
  %37 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4962
  %parent24 = getelementptr inbounds %struct.playlist, %struct.playlist* %37, i32 0, i32 7, !dbg !4963
  %38 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent24, align 8, !dbg !4963
  %39 = bitcast %struct.AVFormatContext* %38 to i8*, !dbg !4962
  %40 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4964
  %index25 = getelementptr inbounds %struct.playlist, %struct.playlist* %40, i32 0, i32 8, !dbg !4965
  %41 = load i32, i32* %index25, align 8, !dbg !4965
  call void (i8*, i32, i8*, ...) @av_log(i8* %39, i32 24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.79, i32 0, i32 0), i32 %41), !dbg !4966
  br label %if.end26, !dbg !4966

if.end26:                                         ; preds = %if.then23, %if.then21
  %42 = load i32, i32* %ret, align 4, !dbg !4967
  store i32 %42, i32* %retval, align 4, !dbg !4968
  br label %return, !dbg !4968

if.end27:                                         ; preds = %if.then18
  %43 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4969
  %target_duration = getelementptr inbounds %struct.playlist, %struct.playlist* %43, i32 0, i32 16, !dbg !4970
  %44 = load i64, i64* %target_duration, align 8, !dbg !4970
  %div = sdiv i64 %44, 2, !dbg !4971
  store i64 %div, i64* %reload_interval, align 8, !dbg !4972
  br label %if.end28, !dbg !4973

if.end28:                                         ; preds = %if.end27, %land.lhs.true15, %if.end13
  %45 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4974
  %cur_seq_no = getelementptr inbounds %struct.playlist, %struct.playlist* %45, i32 0, i32 21, !dbg !4976
  %46 = load i32, i32* %cur_seq_no, align 4, !dbg !4976
  %47 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4977
  %start_seq_no = getelementptr inbounds %struct.playlist, %struct.playlist* %47, i32 0, i32 17, !dbg !4978
  %48 = load i32, i32* %start_seq_no, align 8, !dbg !4978
  %cmp29 = icmp slt i32 %46, %48, !dbg !4979
  br i1 %cmp29, label %if.then30, label %if.end36, !dbg !4980

if.then30:                                        ; preds = %if.end28
  %49 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4981
  %start_seq_no31 = getelementptr inbounds %struct.playlist, %struct.playlist* %49, i32 0, i32 17, !dbg !4983
  %50 = load i32, i32* %start_seq_no31, align 8, !dbg !4983
  %51 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4984
  %cur_seq_no32 = getelementptr inbounds %struct.playlist, %struct.playlist* %51, i32 0, i32 21, !dbg !4985
  %52 = load i32, i32* %cur_seq_no32, align 4, !dbg !4985
  %sub33 = sub nsw i32 %50, %52, !dbg !4986
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.80, i32 0, i32 0), i32 %sub33), !dbg !4987
  %53 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4988
  %start_seq_no34 = getelementptr inbounds %struct.playlist, %struct.playlist* %53, i32 0, i32 17, !dbg !4989
  %54 = load i32, i32* %start_seq_no34, align 8, !dbg !4989
  %55 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4990
  %cur_seq_no35 = getelementptr inbounds %struct.playlist, %struct.playlist* %55, i32 0, i32 21, !dbg !4991
  store i32 %54, i32* %cur_seq_no35, align 4, !dbg !4992
  br label %if.end36, !dbg !4993

if.end36:                                         ; preds = %if.then30, %if.end28
  %56 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4994
  %cur_seq_no37 = getelementptr inbounds %struct.playlist, %struct.playlist* %56, i32 0, i32 21, !dbg !4996
  %57 = load i32, i32* %cur_seq_no37, align 4, !dbg !4996
  %58 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4997
  %start_seq_no38 = getelementptr inbounds %struct.playlist, %struct.playlist* %58, i32 0, i32 17, !dbg !4998
  %59 = load i32, i32* %start_seq_no38, align 8, !dbg !4998
  %60 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !4999
  %n_segments = getelementptr inbounds %struct.playlist, %struct.playlist* %60, i32 0, i32 18, !dbg !5000
  %61 = load i32, i32* %n_segments, align 4, !dbg !5000
  %add = add nsw i32 %59, %61, !dbg !5001
  %cmp39 = icmp sge i32 %57, %add, !dbg !5002
  br i1 %cmp39, label %if.then40, label %if.end54, !dbg !5003

if.then40:                                        ; preds = %if.end36
  %62 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5004
  %finished41 = getelementptr inbounds %struct.playlist, %struct.playlist* %62, i32 0, i32 14, !dbg !5007
  %63 = load i32, i32* %finished41, align 4, !dbg !5007
  %tobool42 = icmp ne i32 %63, 0, !dbg !5004
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !5008

if.then43:                                        ; preds = %if.then40
  store i32 -541478725, i32* %retval, align 4, !dbg !5009
  br label %return, !dbg !5009

if.end44:                                         ; preds = %if.then40
  br label %while.cond, !dbg !5010

while.cond:                                       ; preds = %if.end52, %if.end44
  %call45 = call i64 @av_gettime_relative(), !dbg !5011
  %64 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5013
  %last_load_time46 = getelementptr inbounds %struct.playlist, %struct.playlist* %64, i32 0, i32 23, !dbg !5014
  %65 = load i64, i64* %last_load_time46, align 8, !dbg !5014
  %sub47 = sub nsw i64 %call45, %65, !dbg !5015
  %66 = load i64, i64* %reload_interval, align 8, !dbg !5016
  %cmp48 = icmp slt i64 %sub47, %66, !dbg !5017
  br i1 %cmp48, label %while.body, label %while.end, !dbg !5018

while.body:                                       ; preds = %while.cond
  %67 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5019
  %interrupt_callback = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %67, i32 0, i32 13, !dbg !5022
  %68 = load %struct.AVIOInterruptCB*, %struct.AVIOInterruptCB** %interrupt_callback, align 8, !dbg !5022
  %call49 = call i32 @ff_check_interrupt(%struct.AVIOInterruptCB* %68), !dbg !5023
  %tobool50 = icmp ne i32 %call49, 0, !dbg !5023
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !5024

if.then51:                                        ; preds = %while.body
  store i32 -1414092869, i32* %retval, align 4, !dbg !5025
  br label %return, !dbg !5025

if.end52:                                         ; preds = %while.body
  %call53 = call i32 @av_usleep(i32 100000), !dbg !5026
  br label %while.cond, !dbg !5027, !llvm.loop !5029

while.end:                                        ; preds = %while.cond
  br label %reload, !dbg !5030

if.end54:                                         ; preds = %if.end36
  %69 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5031
  %input_read_done55 = getelementptr inbounds %struct.playlist, %struct.playlist* %69, i32 0, i32 4, !dbg !5032
  store i32 0, i32* %input_read_done55, align 8, !dbg !5033
  %70 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5034
  %call56 = call %struct.segment* @current_segment(%struct.playlist* %70), !dbg !5035
  store %struct.segment* %call56, %struct.segment** %seg, align 8, !dbg !5036
  %71 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5037
  %72 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !5038
  %call57 = call i32 @update_init_section(%struct.playlist* %71, %struct.segment* %72), !dbg !5039
  store i32 %call57, i32* %ret, align 4, !dbg !5040
  %73 = load i32, i32* %ret, align 4, !dbg !5041
  %tobool58 = icmp ne i32 %73, 0, !dbg !5041
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !5043

if.then59:                                        ; preds = %if.end54
  %74 = load i32, i32* %ret, align 4, !dbg !5044
  store i32 %74, i32* %retval, align 4, !dbg !5045
  br label %return, !dbg !5045

if.end60:                                         ; preds = %if.end54
  %75 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5046
  %http_multiple = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %75, i32 0, i32 19, !dbg !5048
  %76 = load i32, i32* %http_multiple, align 8, !dbg !5048
  %cmp61 = icmp eq i32 %76, 1, !dbg !5049
  br i1 %cmp61, label %land.lhs.true62, label %if.else, !dbg !5050

land.lhs.true62:                                  ; preds = %if.end60
  %77 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5051
  %input_next_requested = getelementptr inbounds %struct.playlist, %struct.playlist* %77, i32 0, i32 6, !dbg !5053
  %78 = load i32, i32* %input_next_requested, align 8, !dbg !5053
  %tobool63 = icmp ne i32 %78, 0, !dbg !5051
  br i1 %tobool63, label %if.then64, label %if.else, !dbg !5054

if.then64:                                        ; preds = %land.lhs.true62
  br label %do.body, !dbg !5055, !llvm.loop !5057

do.body:                                          ; preds = %if.then64
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %SWAP_tmp, metadata !5058, metadata !2357), !dbg !5060
  %79 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5061
  %input_next = getelementptr inbounds %struct.playlist, %struct.playlist* %79, i32 0, i32 5, !dbg !5063
  %80 = load %struct.AVIOContext*, %struct.AVIOContext** %input_next, align 8, !dbg !5063
  store %struct.AVIOContext* %80, %struct.AVIOContext** %SWAP_tmp, align 8, !dbg !5064
  %81 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5065
  %input65 = getelementptr inbounds %struct.playlist, %struct.playlist* %81, i32 0, i32 3, !dbg !5066
  %82 = load %struct.AVIOContext*, %struct.AVIOContext** %input65, align 8, !dbg !5066
  %83 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5067
  %input_next66 = getelementptr inbounds %struct.playlist, %struct.playlist* %83, i32 0, i32 5, !dbg !5068
  store %struct.AVIOContext* %82, %struct.AVIOContext** %input_next66, align 8, !dbg !5069
  %84 = load %struct.AVIOContext*, %struct.AVIOContext** %SWAP_tmp, align 8, !dbg !5070
  %85 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5071
  %input67 = getelementptr inbounds %struct.playlist, %struct.playlist* %85, i32 0, i32 3, !dbg !5072
  store %struct.AVIOContext* %84, %struct.AVIOContext** %input67, align 8, !dbg !5073
  br label %do.end, !dbg !5074

do.end:                                           ; preds = %do.body
  %86 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5075
  %input_next_requested68 = getelementptr inbounds %struct.playlist, %struct.playlist* %86, i32 0, i32 6, !dbg !5076
  store i32 0, i32* %input_next_requested68, align 8, !dbg !5077
  store i32 0, i32* %ret, align 4, !dbg !5078
  br label %if.end71, !dbg !5079

if.else:                                          ; preds = %land.lhs.true62, %if.end60
  %87 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5080
  %88 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5082
  %89 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !5083
  %90 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5084
  %input69 = getelementptr inbounds %struct.playlist, %struct.playlist* %90, i32 0, i32 3, !dbg !5085
  %call70 = call i32 @open_input(%struct.HLSContext* %87, %struct.playlist* %88, %struct.segment* %89, %struct.AVIOContext** %input69), !dbg !5086
  store i32 %call70, i32* %ret, align 4, !dbg !5087
  br label %if.end71

if.end71:                                         ; preds = %if.else, %do.end
  %91 = load i32, i32* %ret, align 4, !dbg !5088
  %cmp72 = icmp slt i32 %91, 0, !dbg !5090
  br i1 %cmp72, label %if.then73, label %if.end84, !dbg !5091

if.then73:                                        ; preds = %if.end71
  %92 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5092
  %interrupt_callback74 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %92, i32 0, i32 13, !dbg !5095
  %93 = load %struct.AVIOInterruptCB*, %struct.AVIOInterruptCB** %interrupt_callback74, align 8, !dbg !5095
  %call75 = call i32 @ff_check_interrupt(%struct.AVIOInterruptCB* %93), !dbg !5096
  %tobool76 = icmp ne i32 %call75, 0, !dbg !5096
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !5097

if.then77:                                        ; preds = %if.then73
  store i32 -1414092869, i32* %retval, align 4, !dbg !5098
  br label %return, !dbg !5098

if.end78:                                         ; preds = %if.then73
  %94 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5099
  %parent79 = getelementptr inbounds %struct.playlist, %struct.playlist* %94, i32 0, i32 7, !dbg !5100
  %95 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent79, align 8, !dbg !5100
  %96 = bitcast %struct.AVFormatContext* %95 to i8*, !dbg !5099
  %97 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5101
  %cur_seq_no80 = getelementptr inbounds %struct.playlist, %struct.playlist* %97, i32 0, i32 21, !dbg !5102
  %98 = load i32, i32* %cur_seq_no80, align 4, !dbg !5102
  %99 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5103
  %index81 = getelementptr inbounds %struct.playlist, %struct.playlist* %99, i32 0, i32 8, !dbg !5104
  %100 = load i32, i32* %index81, align 8, !dbg !5104
  call void (i8*, i32, i8*, ...) @av_log(i8* %96, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.81, i32 0, i32 0), i32 %98, i32 %100), !dbg !5105
  %101 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5106
  %cur_seq_no82 = getelementptr inbounds %struct.playlist, %struct.playlist* %101, i32 0, i32 21, !dbg !5107
  %102 = load i32, i32* %cur_seq_no82, align 4, !dbg !5108
  %add83 = add nsw i32 %102, 1, !dbg !5108
  store i32 %add83, i32* %cur_seq_no82, align 4, !dbg !5108
  br label %reload, !dbg !5109

if.end84:                                         ; preds = %if.end71
  store i32 1, i32* %just_opened, align 4, !dbg !5110
  br label %if.end85, !dbg !5111

if.end85:                                         ; preds = %if.end84, %land.lhs.true, %lor.lhs.false
  %103 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5112
  %http_multiple86 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %103, i32 0, i32 19, !dbg !5114
  %104 = load i32, i32* %http_multiple86, align 8, !dbg !5114
  %cmp87 = icmp eq i32 %104, -1, !dbg !5115
  br i1 %cmp87, label %if.then88, label %if.end97, !dbg !5116

if.then88:                                        ; preds = %if.end85
  call void @llvm.dbg.declare(metadata i8** %http_version_opt, metadata !5117, metadata !2357), !dbg !5119
  store i8* null, i8** %http_version_opt, align 8, !dbg !5119
  call void @llvm.dbg.declare(metadata i32* %r, metadata !5120, metadata !2357), !dbg !5121
  %105 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5122
  %input89 = getelementptr inbounds %struct.playlist, %struct.playlist* %105, i32 0, i32 3, !dbg !5123
  %106 = load %struct.AVIOContext*, %struct.AVIOContext** %input89, align 8, !dbg !5123
  %107 = bitcast %struct.AVIOContext* %106 to i8*, !dbg !5122
  %call90 = call i32 @av_opt_get(i8* %107, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.82, i32 0, i32 0), i32 1, i8** %http_version_opt), !dbg !5124
  store i32 %call90, i32* %r, align 4, !dbg !5121
  %108 = load i32, i32* %r, align 4, !dbg !5125
  %cmp91 = icmp sge i32 %108, 0, !dbg !5127
  br i1 %cmp91, label %if.then92, label %if.end96, !dbg !5128

if.then92:                                        ; preds = %if.then88
  %109 = load i8*, i8** %http_version_opt, align 8, !dbg !5129
  %call93 = call i32 @strncmp(i8* %109, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.83, i32 0, i32 0), i64 3) #10, !dbg !5131
  %cmp94 = icmp eq i32 %call93, 0, !dbg !5132
  %conv = zext i1 %cmp94 to i32, !dbg !5132
  %110 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5133
  %http_multiple95 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %110, i32 0, i32 19, !dbg !5134
  store i32 %conv, i32* %http_multiple95, align 8, !dbg !5135
  %111 = bitcast i8** %http_version_opt to i8*, !dbg !5136
  call void @av_freep(i8* %111), !dbg !5137
  br label %if.end96, !dbg !5138

if.end96:                                         ; preds = %if.then92, %if.then88
  br label %if.end97, !dbg !5139

if.end97:                                         ; preds = %if.end96, %if.end85
  %112 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5140
  %call98 = call %struct.segment* @next_segment(%struct.playlist* %112), !dbg !5141
  store %struct.segment* %call98, %struct.segment** %seg, align 8, !dbg !5142
  %113 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5143
  %http_multiple99 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %113, i32 0, i32 19, !dbg !5145
  %114 = load i32, i32* %http_multiple99, align 8, !dbg !5145
  %cmp100 = icmp eq i32 %114, 1, !dbg !5146
  br i1 %cmp100, label %land.lhs.true102, label %if.end132, !dbg !5147

land.lhs.true102:                                 ; preds = %if.end97
  %115 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5148
  %input_next_requested103 = getelementptr inbounds %struct.playlist, %struct.playlist* %115, i32 0, i32 6, !dbg !5150
  %116 = load i32, i32* %input_next_requested103, align 8, !dbg !5150
  %tobool104 = icmp ne i32 %116, 0, !dbg !5148
  br i1 %tobool104, label %if.end132, label %land.lhs.true105, !dbg !5151

land.lhs.true105:                                 ; preds = %land.lhs.true102
  %117 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !5152
  %tobool106 = icmp ne %struct.segment* %117, null, !dbg !5152
  br i1 %tobool106, label %land.lhs.true107, label %if.end132, !dbg !5153

land.lhs.true107:                                 ; preds = %land.lhs.true105
  %118 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !5154
  %key_type = getelementptr inbounds %struct.segment, %struct.segment* %118, i32 0, i32 5, !dbg !5155
  %119 = load i32, i32* %key_type, align 8, !dbg !5155
  %cmp108 = icmp eq i32 %119, 0, !dbg !5156
  br i1 %cmp108, label %land.lhs.true110, label %if.end132, !dbg !5157

land.lhs.true110:                                 ; preds = %land.lhs.true107
  %120 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !5158
  %url111 = getelementptr inbounds %struct.segment, %struct.segment* %120, i32 0, i32 3, !dbg !5160
  %121 = load i8*, i8** %url111, align 8, !dbg !5160
  %call112 = call i32 @av_strstart(i8* %121, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i8** null), !dbg !5161
  %tobool113 = icmp ne i32 %call112, 0, !dbg !5161
  br i1 %tobool113, label %if.then114, label %if.end132, !dbg !5162

if.then114:                                       ; preds = %land.lhs.true110
  %122 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5164
  %123 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5166
  %124 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !5167
  %125 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5168
  %input_next115 = getelementptr inbounds %struct.playlist, %struct.playlist* %125, i32 0, i32 5, !dbg !5169
  %call116 = call i32 @open_input(%struct.HLSContext* %122, %struct.playlist* %123, %struct.segment* %124, %struct.AVIOContext** %input_next115), !dbg !5170
  store i32 %call116, i32* %ret, align 4, !dbg !5171
  %126 = load i32, i32* %ret, align 4, !dbg !5172
  %cmp117 = icmp slt i32 %126, 0, !dbg !5174
  br i1 %cmp117, label %if.then119, label %if.else129, !dbg !5175

if.then119:                                       ; preds = %if.then114
  %127 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5176
  %interrupt_callback120 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %127, i32 0, i32 13, !dbg !5179
  %128 = load %struct.AVIOInterruptCB*, %struct.AVIOInterruptCB** %interrupt_callback120, align 8, !dbg !5179
  %call121 = call i32 @ff_check_interrupt(%struct.AVIOInterruptCB* %128), !dbg !5180
  %tobool122 = icmp ne i32 %call121, 0, !dbg !5180
  br i1 %tobool122, label %if.then123, label %if.end124, !dbg !5181

if.then123:                                       ; preds = %if.then119
  store i32 -1414092869, i32* %retval, align 4, !dbg !5182
  br label %return, !dbg !5182

if.end124:                                        ; preds = %if.then119
  %129 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5183
  %parent125 = getelementptr inbounds %struct.playlist, %struct.playlist* %129, i32 0, i32 7, !dbg !5184
  %130 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent125, align 8, !dbg !5184
  %131 = bitcast %struct.AVFormatContext* %130 to i8*, !dbg !5183
  %132 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5185
  %cur_seq_no126 = getelementptr inbounds %struct.playlist, %struct.playlist* %132, i32 0, i32 21, !dbg !5186
  %133 = load i32, i32* %cur_seq_no126, align 4, !dbg !5186
  %add127 = add nsw i32 %133, 1, !dbg !5187
  %134 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5188
  %index128 = getelementptr inbounds %struct.playlist, %struct.playlist* %134, i32 0, i32 8, !dbg !5189
  %135 = load i32, i32* %index128, align 8, !dbg !5189
  call void (i8*, i32, i8*, ...) @av_log(i8* %131, i32 24, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.81, i32 0, i32 0), i32 %add127, i32 %135), !dbg !5190
  br label %if.end131, !dbg !5191

if.else129:                                       ; preds = %if.then114
  %136 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5192
  %input_next_requested130 = getelementptr inbounds %struct.playlist, %struct.playlist* %136, i32 0, i32 6, !dbg !5194
  store i32 1, i32* %input_next_requested130, align 8, !dbg !5195
  br label %if.end131

if.end131:                                        ; preds = %if.else129, %if.end124
  br label %if.end132, !dbg !5196

if.end132:                                        ; preds = %if.end131, %land.lhs.true110, %land.lhs.true107, %land.lhs.true105, %land.lhs.true102, %if.end97
  %137 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5197
  %init_sec_buf_read_offset = getelementptr inbounds %struct.playlist, %struct.playlist* %137, i32 0, i32 28, !dbg !5199
  %138 = load i32, i32* %init_sec_buf_read_offset, align 8, !dbg !5199
  %139 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5200
  %init_sec_data_len = getelementptr inbounds %struct.playlist, %struct.playlist* %139, i32 0, i32 27, !dbg !5201
  %140 = load i32, i32* %init_sec_data_len, align 4, !dbg !5201
  %cmp133 = icmp ult i32 %138, %140, !dbg !5202
  br i1 %cmp133, label %if.then135, label %if.end147, !dbg !5203

if.then135:                                       ; preds = %if.end132
  call void @llvm.dbg.declare(metadata i32* %copy_size, metadata !5204, metadata !2357), !dbg !5206
  %141 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5207
  %init_sec_data_len136 = getelementptr inbounds %struct.playlist, %struct.playlist* %141, i32 0, i32 27, !dbg !5208
  %142 = load i32, i32* %init_sec_data_len136, align 4, !dbg !5208
  %143 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5209
  %init_sec_buf_read_offset137 = getelementptr inbounds %struct.playlist, %struct.playlist* %143, i32 0, i32 28, !dbg !5210
  %144 = load i32, i32* %init_sec_buf_read_offset137, align 8, !dbg !5210
  %sub138 = sub i32 %142, %144, !dbg !5211
  %145 = load i32, i32* %buf_size.addr, align 4, !dbg !5212
  %cmp139 = icmp ugt i32 %sub138, %145, !dbg !5213
  br i1 %cmp139, label %cond.true, label %cond.false, !dbg !5214

cond.true:                                        ; preds = %if.then135
  %146 = load i32, i32* %buf_size.addr, align 4, !dbg !5215
  br label %cond.end, !dbg !5217

cond.false:                                       ; preds = %if.then135
  %147 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5218
  %init_sec_data_len141 = getelementptr inbounds %struct.playlist, %struct.playlist* %147, i32 0, i32 27, !dbg !5220
  %148 = load i32, i32* %init_sec_data_len141, align 4, !dbg !5220
  %149 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5221
  %init_sec_buf_read_offset142 = getelementptr inbounds %struct.playlist, %struct.playlist* %149, i32 0, i32 28, !dbg !5222
  %150 = load i32, i32* %init_sec_buf_read_offset142, align 8, !dbg !5222
  %sub143 = sub i32 %148, %150, !dbg !5223
  br label %cond.end, !dbg !5224

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %146, %cond.true ], [ %sub143, %cond.false ], !dbg !5225
  store i32 %cond, i32* %copy_size, align 4, !dbg !5227
  %151 = load i8*, i8** %buf.addr, align 8, !dbg !5228
  %152 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5229
  %init_sec_buf = getelementptr inbounds %struct.playlist, %struct.playlist* %152, i32 0, i32 25, !dbg !5230
  %153 = load i8*, i8** %init_sec_buf, align 8, !dbg !5230
  %154 = load i32, i32* %copy_size, align 4, !dbg !5231
  %conv144 = sext i32 %154 to i64, !dbg !5231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %151, i8* %153, i64 %conv144, i32 1, i1 false), !dbg !5232
  %155 = load i32, i32* %copy_size, align 4, !dbg !5233
  %156 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5234
  %init_sec_buf_read_offset145 = getelementptr inbounds %struct.playlist, %struct.playlist* %156, i32 0, i32 28, !dbg !5235
  %157 = load i32, i32* %init_sec_buf_read_offset145, align 8, !dbg !5236
  %add146 = add i32 %157, %155, !dbg !5236
  store i32 %add146, i32* %init_sec_buf_read_offset145, align 8, !dbg !5236
  %158 = load i32, i32* %copy_size, align 4, !dbg !5237
  store i32 %158, i32* %retval, align 4, !dbg !5238
  br label %return, !dbg !5238

if.end147:                                        ; preds = %if.end132
  %159 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5239
  %call148 = call %struct.segment* @current_segment(%struct.playlist* %159), !dbg !5240
  store %struct.segment* %call148, %struct.segment** %seg, align 8, !dbg !5241
  %160 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5242
  %161 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !5243
  %162 = load i8*, i8** %buf.addr, align 8, !dbg !5244
  %163 = load i32, i32* %buf_size.addr, align 4, !dbg !5245
  %call149 = call i32 @read_from_url(%struct.playlist* %160, %struct.segment* %161, i8* %162, i32 %163), !dbg !5246
  store i32 %call149, i32* %ret, align 4, !dbg !5247
  %164 = load i32, i32* %ret, align 4, !dbg !5248
  %cmp150 = icmp sgt i32 %164, 0, !dbg !5250
  br i1 %cmp150, label %if.then152, label %if.end159, !dbg !5251

if.then152:                                       ; preds = %if.end147
  %165 = load i32, i32* %just_opened, align 4, !dbg !5252
  %tobool153 = icmp ne i32 %165, 0, !dbg !5252
  br i1 %tobool153, label %land.lhs.true154, label %if.end158, !dbg !5255

land.lhs.true154:                                 ; preds = %if.then152
  %166 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5256
  %is_id3_timestamped = getelementptr inbounds %struct.playlist, %struct.playlist* %166, i32 0, i32 31, !dbg !5258
  %167 = load i32, i32* %is_id3_timestamped, align 4, !dbg !5258
  %cmp155 = icmp ne i32 %167, 0, !dbg !5259
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !5260

if.then157:                                       ; preds = %land.lhs.true154
  %168 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5261
  %169 = load i8*, i8** %buf.addr, align 8, !dbg !5263
  %170 = load i32, i32* %buf_size.addr, align 4, !dbg !5264
  call void @intercept_id3(%struct.playlist* %168, i8* %169, i32 %170, i32* %ret), !dbg !5265
  br label %if.end158, !dbg !5266

if.end158:                                        ; preds = %if.then157, %land.lhs.true154, %if.then152
  %171 = load i32, i32* %ret, align 4, !dbg !5267
  store i32 %171, i32* %retval, align 4, !dbg !5268
  br label %return, !dbg !5268

if.end159:                                        ; preds = %if.end147
  %172 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5269
  %http_persistent160 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %172, i32 0, i32 18, !dbg !5271
  %173 = load i32, i32* %http_persistent160, align 4, !dbg !5271
  %tobool161 = icmp ne i32 %173, 0, !dbg !5269
  br i1 %tobool161, label %land.lhs.true162, label %if.else172, !dbg !5272

land.lhs.true162:                                 ; preds = %if.end159
  %174 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !5273
  %key_type163 = getelementptr inbounds %struct.segment, %struct.segment* %174, i32 0, i32 5, !dbg !5274
  %175 = load i32, i32* %key_type163, align 8, !dbg !5274
  %cmp164 = icmp eq i32 %175, 0, !dbg !5275
  br i1 %cmp164, label %land.lhs.true166, label %if.else172, !dbg !5276

land.lhs.true166:                                 ; preds = %land.lhs.true162
  %176 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !5277
  %url167 = getelementptr inbounds %struct.segment, %struct.segment* %176, i32 0, i32 3, !dbg !5279
  %177 = load i8*, i8** %url167, align 8, !dbg !5279
  %call168 = call i32 @av_strstart(i8* %177, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i8** null), !dbg !5280
  %tobool169 = icmp ne i32 %call168, 0, !dbg !5280
  br i1 %tobool169, label %if.then170, label %if.else172, !dbg !5281

if.then170:                                       ; preds = %land.lhs.true166
  %178 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5283
  %input_read_done171 = getelementptr inbounds %struct.playlist, %struct.playlist* %178, i32 0, i32 4, !dbg !5285
  store i32 1, i32* %input_read_done171, align 8, !dbg !5286
  br label %if.end175, !dbg !5287

if.else172:                                       ; preds = %land.lhs.true166, %land.lhs.true162, %if.end159
  %179 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5288
  %parent173 = getelementptr inbounds %struct.playlist, %struct.playlist* %179, i32 0, i32 7, !dbg !5290
  %180 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent173, align 8, !dbg !5290
  %181 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5291
  %input174 = getelementptr inbounds %struct.playlist, %struct.playlist* %181, i32 0, i32 3, !dbg !5292
  call void @ff_format_io_close(%struct.AVFormatContext* %180, %struct.AVIOContext** %input174), !dbg !5293
  br label %if.end175

if.end175:                                        ; preds = %if.else172, %if.then170
  %182 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5294
  %cur_seq_no176 = getelementptr inbounds %struct.playlist, %struct.playlist* %182, i32 0, i32 21, !dbg !5295
  %183 = load i32, i32* %cur_seq_no176, align 4, !dbg !5296
  %inc177 = add nsw i32 %183, 1, !dbg !5296
  store i32 %inc177, i32* %cur_seq_no176, align 4, !dbg !5296
  %184 = load %struct.playlist*, %struct.playlist** %v, align 8, !dbg !5297
  %cur_seq_no178 = getelementptr inbounds %struct.playlist, %struct.playlist* %184, i32 0, i32 21, !dbg !5298
  %185 = load i32, i32* %cur_seq_no178, align 4, !dbg !5298
  %186 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5299
  %cur_seq_no179 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %186, i32 0, i32 8, !dbg !5300
  store i32 %185, i32* %cur_seq_no179, align 8, !dbg !5301
  br label %restart, !dbg !5302

return:                                           ; preds = %if.end158, %cond.end, %if.then123, %if.then77, %if.then59, %if.then51, %if.then43, %if.end26, %if.then12, %if.then8, %if.then
  %187 = load i32, i32* %retval, align 4, !dbg !5303
  ret i32 %187, !dbg !5303
}

declare i32 @av_probe_input_buffer(%struct.AVIOContext*, %struct.AVInputFormat**, i8*, i8*, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @nested_io_open(%struct.AVFormatContext* %s, %struct.AVIOContext** %pb, i8* %url, i32 %flags, %struct.AVDictionary** %opts) #0 !dbg !5304 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb.addr = alloca %struct.AVIOContext**, align 8
  %url.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %opts.addr = alloca %struct.AVDictionary**, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5307, metadata !2357), !dbg !5308
  store %struct.AVIOContext** %pb, %struct.AVIOContext*** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext*** %pb.addr, metadata !5309, metadata !2357), !dbg !5310
  store i8* %url, i8** %url.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %url.addr, metadata !5311, metadata !2357), !dbg !5312
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5313, metadata !2357), !dbg !5314
  store %struct.AVDictionary** %opts, %struct.AVDictionary*** %opts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %opts.addr, metadata !5315, metadata !2357), !dbg !5316
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5317
  %1 = bitcast %struct.AVFormatContext* %0 to i8*, !dbg !5317
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5318
  %url1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 9, !dbg !5319
  %3 = load i8*, i8** %url1, align 8, !dbg !5319
  %4 = load i8*, i8** %url.addr, align 8, !dbg !5320
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 16, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.114, i32 0, i32 0), i8* %3, i8* %4), !dbg !5321
  ret i32 -1, !dbg !5322
}

declare i32 @ff_copy_whiteblacklists(%struct.AVFormatContext*, %struct.AVFormatContext*) #1

declare i32 @avformat_open_input(%struct.AVFormatContext**, i8*, %struct.AVInputFormat*, %struct.AVDictionary**) #1

declare i32 @ff_id3v2_parse_apic(%struct.AVFormatContext*, %struct.ID3v2ExtraMeta**) #1

declare i32 @avformat_queue_attached_pictures(%struct.AVFormatContext*) #1

declare i32 @ff_id3v2_parse_priv(%struct.AVFormatContext*, %struct.ID3v2ExtraMeta**) #1

declare void @ff_id3v2_free_extra_meta(%struct.ID3v2ExtraMeta**) #1

declare i32 @avformat_find_stream_info(%struct.AVFormatContext*, %struct.AVDictionary**) #1

; Function Attrs: nounwind uwtable
define internal i32 @update_streams_from_subdemuxer(%struct.AVFormatContext* %s, %struct.playlist* %pls) #0 !dbg !5323 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pls.addr = alloca %struct.playlist*, align 8
  %err = alloca i32, align 4
  %ist_idx = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %ist = alloca %struct.AVStream*, align 8
  %_tab = alloca %struct.AVStream***, align 8
  %_elem = alloca %struct.AVStream*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5326, metadata !2357), !dbg !5327
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !5328, metadata !2357), !dbg !5329
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5330, metadata !2357), !dbg !5331
  br label %while.cond, !dbg !5332

while.cond:                                       ; preds = %if.end7, %entry
  %0 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !5333
  %n_main_streams = getelementptr inbounds %struct.playlist, %struct.playlist* %0, i32 0, i32 13, !dbg !5335
  %1 = load i32, i32* %n_main_streams, align 8, !dbg !5335
  %2 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !5336
  %ctx = getelementptr inbounds %struct.playlist, %struct.playlist* %2, i32 0, i32 9, !dbg !5337
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !5337
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 6, !dbg !5338
  %4 = load i32, i32* %nb_streams, align 4, !dbg !5338
  %cmp = icmp ult i32 %1, %4, !dbg !5339
  br i1 %cmp, label %while.body, label %while.end, !dbg !5340

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %ist_idx, metadata !5341, metadata !2357), !dbg !5343
  %5 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !5344
  %n_main_streams1 = getelementptr inbounds %struct.playlist, %struct.playlist* %5, i32 0, i32 13, !dbg !5345
  %6 = load i32, i32* %n_main_streams1, align 8, !dbg !5345
  store i32 %6, i32* %ist_idx, align 4, !dbg !5343
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !5346, metadata !2357), !dbg !5347
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5348
  %call = call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %7, %struct.AVCodec* null), !dbg !5349
  store %struct.AVStream* %call, %struct.AVStream** %st, align 8, !dbg !5347
  call void @llvm.dbg.declare(metadata %struct.AVStream** %ist, metadata !5350, metadata !2357), !dbg !5351
  %8 = load i32, i32* %ist_idx, align 4, !dbg !5352
  %idxprom = sext i32 %8 to i64, !dbg !5353
  %9 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !5353
  %ctx2 = getelementptr inbounds %struct.playlist, %struct.playlist* %9, i32 0, i32 9, !dbg !5354
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx2, align 8, !dbg !5354
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %10, i32 0, i32 7, !dbg !5355
  %11 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !5355
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %11, i64 %idxprom, !dbg !5353
  %12 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !5353
  store %struct.AVStream* %12, %struct.AVStream** %ist, align 8, !dbg !5351
  %13 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5356
  %tobool = icmp ne %struct.AVStream* %13, null, !dbg !5356
  br i1 %tobool, label %if.end, label %if.then, !dbg !5358

if.then:                                          ; preds = %while.body
  store i32 -12, i32* %retval, align 4, !dbg !5359
  br label %return, !dbg !5359

if.end:                                           ; preds = %while.body
  %14 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !5360
  %index = getelementptr inbounds %struct.playlist, %struct.playlist* %14, i32 0, i32 8, !dbg !5361
  %15 = load i32, i32* %index, align 8, !dbg !5361
  %16 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5362
  %id = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i32 0, i32 1, !dbg !5363
  store i32 %15, i32* %id, align 4, !dbg !5364
  br label %do.body, !dbg !5365, !llvm.loop !5366

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.AVStream**** %_tab, metadata !5367, metadata !2357), !dbg !5370
  %17 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !5371
  %main_streams = getelementptr inbounds %struct.playlist, %struct.playlist* %17, i32 0, i32 12, !dbg !5373
  store %struct.AVStream*** %main_streams, %struct.AVStream**** %_tab, align 8, !dbg !5374
  call void @llvm.dbg.declare(metadata %struct.AVStream** %_elem, metadata !5375, metadata !2357), !dbg !5376
  %18 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5377
  store %struct.AVStream* %18, %struct.AVStream** %_elem, align 8, !dbg !5378
  %19 = load %struct.AVStream***, %struct.AVStream**** %_tab, align 8, !dbg !5379
  %20 = bitcast %struct.AVStream*** %19 to i8*, !dbg !5379
  %21 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !5380
  %n_main_streams3 = getelementptr inbounds %struct.playlist, %struct.playlist* %21, i32 0, i32 13, !dbg !5381
  %22 = load %struct.AVStream*, %struct.AVStream** %_elem, align 8, !dbg !5382
  %23 = bitcast %struct.AVStream* %22 to i8*, !dbg !5382
  call void @av_dynarray_add(i8* %20, i32* %n_main_streams3, i8* %23), !dbg !5383
  br label %do.end, !dbg !5384

do.end:                                           ; preds = %do.body
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5385
  %25 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !5386
  %26 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5387
  call void @add_stream_to_programs(%struct.AVFormatContext* %24, %struct.playlist* %25, %struct.AVStream* %26), !dbg !5388
  %27 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5389
  %28 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !5390
  %29 = load %struct.AVStream*, %struct.AVStream** %ist, align 8, !dbg !5391
  %call4 = call i32 @set_stream_info_from_input_stream(%struct.AVStream* %27, %struct.playlist* %28, %struct.AVStream* %29), !dbg !5392
  store i32 %call4, i32* %err, align 4, !dbg !5393
  %30 = load i32, i32* %err, align 4, !dbg !5394
  %cmp5 = icmp slt i32 %30, 0, !dbg !5396
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !5397

if.then6:                                         ; preds = %do.end
  %31 = load i32, i32* %err, align 4, !dbg !5398
  store i32 %31, i32* %retval, align 4, !dbg !5399
  br label %return, !dbg !5399

if.end7:                                          ; preds = %do.end
  br label %while.cond, !dbg !5400, !llvm.loop !5402

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !5403
  br label %return, !dbg !5403

return:                                           ; preds = %while.end, %if.then6, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !5404
  ret i32 %32, !dbg !5404
}

declare i32 @av_dict_copy(%struct.AVDictionary**, %struct.AVDictionary*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @add_metadata_from_renditions(%struct.AVFormatContext* %s, %struct.playlist* %pls, i32 %type) #0 !dbg !5405 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pls.addr = alloca %struct.playlist*, align 8
  %type.addr = alloca i32, align 4
  %rend_idx = alloca i32, align 4
  %i = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %rend = alloca %struct.rendition*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5408, metadata !2357), !dbg !5409
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !5410, metadata !2357), !dbg !5411
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5412, metadata !2357), !dbg !5413
  call void @llvm.dbg.declare(metadata i32* %rend_idx, metadata !5414, metadata !2357), !dbg !5415
  store i32 0, i32* %rend_idx, align 4, !dbg !5415
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5416, metadata !2357), !dbg !5417
  store i32 0, i32* %i, align 4, !dbg !5418
  br label %for.cond, !dbg !5420

for.cond:                                         ; preds = %for.inc28, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5421
  %1 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !5424
  %n_main_streams = getelementptr inbounds %struct.playlist, %struct.playlist* %1, i32 0, i32 13, !dbg !5425
  %2 = load i32, i32* %n_main_streams, align 8, !dbg !5425
  %cmp = icmp slt i32 %0, %2, !dbg !5426
  br i1 %cmp, label %for.body, label %for.end30, !dbg !5427

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !5428, metadata !2357), !dbg !5430
  %3 = load i32, i32* %i, align 4, !dbg !5431
  %idxprom = sext i32 %3 to i64, !dbg !5432
  %4 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !5432
  %main_streams = getelementptr inbounds %struct.playlist, %struct.playlist* %4, i32 0, i32 12, !dbg !5433
  %5 = load %struct.AVStream**, %struct.AVStream*** %main_streams, align 8, !dbg !5433
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %5, i64 %idxprom, !dbg !5432
  %6 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !5432
  store %struct.AVStream* %6, %struct.AVStream** %st, align 8, !dbg !5430
  %7 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5434
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %7, i32 0, i32 19, !dbg !5436
  %8 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !5436
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %8, i32 0, i32 0, !dbg !5437
  %9 = load i32, i32* %codec_type, align 8, !dbg !5437
  %10 = load i32, i32* %type.addr, align 4, !dbg !5438
  %cmp1 = icmp ne i32 %9, %10, !dbg !5439
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5440

if.then:                                          ; preds = %for.body
  br label %for.inc28, !dbg !5441

if.end:                                           ; preds = %for.body
  br label %for.cond2, !dbg !5442

for.cond2:                                        ; preds = %for.inc, %if.end
  %11 = load i32, i32* %rend_idx, align 4, !dbg !5443
  %12 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !5447
  %n_renditions = getelementptr inbounds %struct.playlist, %struct.playlist* %12, i32 0, i32 43, !dbg !5448
  %13 = load i32, i32* %n_renditions, align 8, !dbg !5448
  %cmp3 = icmp slt i32 %11, %13, !dbg !5449
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !5450

for.body4:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata %struct.rendition** %rend, metadata !5451, metadata !2357), !dbg !5453
  %14 = load i32, i32* %rend_idx, align 4, !dbg !5454
  %idxprom5 = sext i32 %14 to i64, !dbg !5455
  %15 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !5455
  %renditions = getelementptr inbounds %struct.playlist, %struct.playlist* %15, i32 0, i32 44, !dbg !5456
  %16 = load %struct.rendition**, %struct.rendition*** %renditions, align 8, !dbg !5456
  %arrayidx6 = getelementptr inbounds %struct.rendition*, %struct.rendition** %16, i64 %idxprom5, !dbg !5455
  %17 = load %struct.rendition*, %struct.rendition** %arrayidx6, align 8, !dbg !5455
  store %struct.rendition* %17, %struct.rendition** %rend, align 8, !dbg !5453
  %18 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !5457
  %type7 = getelementptr inbounds %struct.rendition, %struct.rendition* %18, i32 0, i32 0, !dbg !5459
  %19 = load i32, i32* %type7, align 8, !dbg !5459
  %20 = load i32, i32* %type.addr, align 4, !dbg !5460
  %cmp8 = icmp ne i32 %19, %20, !dbg !5461
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !5462

if.then9:                                         ; preds = %for.body4
  br label %for.inc, !dbg !5463

if.end10:                                         ; preds = %for.body4
  %21 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !5464
  %language = getelementptr inbounds %struct.rendition, %struct.rendition* %21, i32 0, i32 3, !dbg !5466
  %arrayidx11 = getelementptr inbounds [64 x i8], [64 x i8]* %language, i64 0, i64 0, !dbg !5464
  %22 = load i8, i8* %arrayidx11, align 8, !dbg !5464
  %tobool = icmp ne i8 %22, 0, !dbg !5464
  br i1 %tobool, label %if.then12, label %if.end14, !dbg !5467

if.then12:                                        ; preds = %if.end10
  %23 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5468
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %23, i32 0, i32 11, !dbg !5469
  %24 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !5470
  %language13 = getelementptr inbounds %struct.rendition, %struct.rendition* %24, i32 0, i32 3, !dbg !5471
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %language13, i32 0, i32 0, !dbg !5470
  %call = call i32 @av_dict_set(%struct.AVDictionary** %metadata, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i32 0, i32 0), i8* %arraydecay, i32 0), !dbg !5472
  br label %if.end14, !dbg !5472

if.end14:                                         ; preds = %if.then12, %if.end10
  %25 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !5473
  %name = getelementptr inbounds %struct.rendition, %struct.rendition* %25, i32 0, i32 4, !dbg !5475
  %arrayidx15 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !5473
  %26 = load i8, i8* %arrayidx15, align 8, !dbg !5473
  %tobool16 = icmp ne i8 %26, 0, !dbg !5473
  br i1 %tobool16, label %if.then17, label %if.end22, !dbg !5476

if.then17:                                        ; preds = %if.end14
  %27 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5477
  %metadata18 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %27, i32 0, i32 11, !dbg !5478
  %28 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !5479
  %name19 = getelementptr inbounds %struct.rendition, %struct.rendition* %28, i32 0, i32 4, !dbg !5480
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %name19, i32 0, i32 0, !dbg !5479
  %call21 = call i32 @av_dict_set(%struct.AVDictionary** %metadata18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i8* %arraydecay20, i32 0), !dbg !5481
  br label %if.end22, !dbg !5481

if.end22:                                         ; preds = %if.then17, %if.end14
  %29 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !5482
  %disposition = getelementptr inbounds %struct.rendition, %struct.rendition* %29, i32 0, i32 5, !dbg !5483
  %30 = load i32, i32* %disposition, align 8, !dbg !5483
  %31 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5484
  %disposition23 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %31, i32 0, i32 8, !dbg !5485
  %32 = load i32, i32* %disposition23, align 8, !dbg !5486
  %or = or i32 %32, %30, !dbg !5486
  store i32 %or, i32* %disposition23, align 8, !dbg !5486
  br label %for.inc, !dbg !5487

for.inc:                                          ; preds = %if.end22, %if.then9
  %33 = load i32, i32* %rend_idx, align 4, !dbg !5488
  %inc = add nsw i32 %33, 1, !dbg !5488
  store i32 %inc, i32* %rend_idx, align 4, !dbg !5488
  br label %for.cond2, !dbg !5490, !llvm.loop !5491

for.end:                                          ; preds = %for.cond2
  %34 = load i32, i32* %rend_idx, align 4, !dbg !5492
  %35 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !5494
  %n_renditions24 = getelementptr inbounds %struct.playlist, %struct.playlist* %35, i32 0, i32 43, !dbg !5495
  %36 = load i32, i32* %n_renditions24, align 8, !dbg !5495
  %cmp25 = icmp sge i32 %34, %36, !dbg !5496
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !5497

if.then26:                                        ; preds = %for.end
  br label %for.end30, !dbg !5498

if.end27:                                         ; preds = %for.end
  br label %for.inc28, !dbg !5499

for.inc28:                                        ; preds = %if.end27, %if.then
  %37 = load i32, i32* %i, align 4, !dbg !5500
  %inc29 = add nsw i32 %37, 1, !dbg !5500
  store i32 %inc29, i32* %i, align 4, !dbg !5500
  br label %for.cond, !dbg !5502, !llvm.loop !5503

for.end30:                                        ; preds = %if.then26, %for.cond
  ret void, !dbg !5505
}

; Function Attrs: nounwind uwtable
define internal void @update_noheader_flag(%struct.AVFormatContext* %s) #0 !dbg !5506 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %c = alloca %struct.HLSContext*, align 8
  %flag_needed = alloca i32, align 4
  %i = alloca i32, align 4
  %pls = alloca %struct.playlist*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5509, metadata !2357), !dbg !5510
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c, metadata !5511, metadata !2357), !dbg !5512
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5513
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !5514
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5514
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !5513
  store %struct.HLSContext* %2, %struct.HLSContext** %c, align 8, !dbg !5512
  call void @llvm.dbg.declare(metadata i32* %flag_needed, metadata !5515, metadata !2357), !dbg !5516
  store i32 0, i32* %flag_needed, align 4, !dbg !5516
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5517, metadata !2357), !dbg !5518
  store i32 0, i32* %i, align 4, !dbg !5519
  br label %for.cond, !dbg !5521

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !5522
  %4 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5525
  %n_playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 4, !dbg !5526
  %5 = load i32, i32* %n_playlists, align 8, !dbg !5526
  %cmp = icmp slt i32 %3, %5, !dbg !5527
  br i1 %cmp, label %for.body, label %for.end, !dbg !5528

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls, metadata !5529, metadata !2357), !dbg !5531
  %6 = load i32, i32* %i, align 4, !dbg !5532
  %idxprom = sext i32 %6 to i64, !dbg !5533
  %7 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !5533
  %playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %7, i32 0, i32 5, !dbg !5534
  %8 = load %struct.playlist**, %struct.playlist*** %playlists, align 8, !dbg !5534
  %arrayidx = getelementptr inbounds %struct.playlist*, %struct.playlist** %8, i64 %idxprom, !dbg !5533
  %9 = load %struct.playlist*, %struct.playlist** %arrayidx, align 8, !dbg !5533
  store %struct.playlist* %9, %struct.playlist** %pls, align 8, !dbg !5531
  %10 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !5535
  %has_noheader_flag = getelementptr inbounds %struct.playlist, %struct.playlist* %10, i32 0, i32 11, !dbg !5537
  %11 = load i32, i32* %has_noheader_flag, align 8, !dbg !5537
  %tobool = icmp ne i32 %11, 0, !dbg !5535
  br i1 %tobool, label %if.then, label %if.end, !dbg !5538

if.then:                                          ; preds = %for.body
  store i32 1, i32* %flag_needed, align 4, !dbg !5539
  br label %for.end, !dbg !5541

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5542

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !5543
  %inc = add nsw i32 %12, 1, !dbg !5543
  store i32 %inc, i32* %i, align 4, !dbg !5543
  br label %for.cond, !dbg !5545, !llvm.loop !5546

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i32, i32* %flag_needed, align 4, !dbg !5548
  %tobool1 = icmp ne i32 %13, 0, !dbg !5548
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !5550

if.then2:                                         ; preds = %for.end
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5551
  %ctx_flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %14, i32 0, i32 5, !dbg !5552
  %15 = load i32, i32* %ctx_flags, align 8, !dbg !5553
  %or = or i32 %15, 1, !dbg !5553
  store i32 %or, i32* %ctx_flags, align 8, !dbg !5553
  br label %if.end4, !dbg !5551

if.else:                                          ; preds = %for.end
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5554
  %ctx_flags3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %16, i32 0, i32 5, !dbg !5555
  %17 = load i32, i32* %ctx_flags3, align 8, !dbg !5556
  %and = and i32 %17, -2, !dbg !5556
  store i32 %and, i32* %ctx_flags3, align 8, !dbg !5556
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  ret void, !dbg !5557
}

declare i32 @av_opt_get(i8*, i8*, i32, i8**) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

declare i32 @av_strstart(i8*, i8*, i8**) #1

; Function Attrs: nounwind uwtable
define internal i32 @open_url_keepalive(%struct.AVFormatContext* %s, %struct.AVIOContext** %pb, i8* %url) #0 !dbg !5558 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb.addr = alloca %struct.AVIOContext**, align 8
  %url.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %uc = alloca %struct.URLContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5561, metadata !2357), !dbg !5562
  store %struct.AVIOContext** %pb, %struct.AVIOContext*** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext*** %pb.addr, metadata !5563, metadata !2357), !dbg !5564
  store i8* %url, i8** %url.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %url.addr, metadata !5565, metadata !2357), !dbg !5566
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5567, metadata !2357), !dbg !5568
  call void @llvm.dbg.declare(metadata %struct.URLContext** %uc, metadata !5569, metadata !2357), !dbg !5672
  %0 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !5673
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %0, align 8, !dbg !5674
  %call = call %struct.URLContext* @ffio_geturlcontext(%struct.AVIOContext* %1), !dbg !5675
  store %struct.URLContext* %call, %struct.URLContext** %uc, align 8, !dbg !5672
  br label %do.body, !dbg !5676, !llvm.loop !5677

do.body:                                          ; preds = %entry
  %2 = load %struct.URLContext*, %struct.URLContext** %uc, align 8, !dbg !5678
  %tobool = icmp ne %struct.URLContext* %2, null, !dbg !5682
  br i1 %tobool, label %if.end, label %if.then, !dbg !5683

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i32 0, i32 0), i32 600), !dbg !5684
  call void @abort() #12, !dbg !5687
  unreachable, !dbg !5689

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !5690

do.end:                                           ; preds = %if.end
  %3 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !5692
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %3, align 8, !dbg !5693
  %eof_reached = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %4, i32 0, i32 10, !dbg !5694
  store i32 0, i32* %eof_reached, align 8, !dbg !5695
  %5 = load %struct.URLContext*, %struct.URLContext** %uc, align 8, !dbg !5696
  %6 = load i8*, i8** %url.addr, align 8, !dbg !5697
  %call1 = call i32 @ff_http_do_new_request(%struct.URLContext* %5, i8* %6), !dbg !5698
  store i32 %call1, i32* %ret, align 4, !dbg !5699
  %7 = load i32, i32* %ret, align 4, !dbg !5700
  %cmp = icmp slt i32 %7, 0, !dbg !5702
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5703

if.then2:                                         ; preds = %do.end
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5704
  %9 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !5706
  call void @ff_format_io_close(%struct.AVFormatContext* %8, %struct.AVIOContext** %9), !dbg !5707
  br label %if.end3, !dbg !5708

if.end3:                                          ; preds = %if.then2, %do.end
  %10 = load i32, i32* %ret, align 4, !dbg !5709
  ret i32 %10, !dbg !5710
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @av_make_error_string(i8* %errbuf, i64 %errbuf_size, i32 %errnum) #5 !dbg !5711 {
entry:
  %errbuf.addr = alloca i8*, align 8
  %errbuf_size.addr = alloca i64, align 8
  %errnum.addr = alloca i32, align 4
  store i8* %errbuf, i8** %errbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %errbuf.addr, metadata !5715, metadata !2357), !dbg !5716
  store i64 %errbuf_size, i64* %errbuf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %errbuf_size.addr, metadata !5717, metadata !2357), !dbg !5718
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !5719, metadata !2357), !dbg !5720
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !5721
  %1 = load i8*, i8** %errbuf.addr, align 8, !dbg !5722
  %2 = load i64, i64* %errbuf_size.addr, align 8, !dbg !5723
  %call = call i32 @av_strerror(i32 %0, i8* %1, i64 %2), !dbg !5724
  %3 = load i8*, i8** %errbuf.addr, align 8, !dbg !5725
  ret i8* %3, !dbg !5726
}

declare void @av_dict_free(%struct.AVDictionary**) #1

declare i32 @ff_get_chomp_line(%struct.AVIOContext*, i8*, i32) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #3

declare i32 @avio_feof(%struct.AVIOContext*) #1

declare void @ff_parse_key_value(i8*, void (i8*, i8*, i32, i8**, i32*)*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @handle_variant_args(%struct.variant_info* %info, i8* %key, i32 %key_len, i8** %dest, i32* %dest_len) #0 !dbg !5727 {
entry:
  %info.addr = alloca %struct.variant_info*, align 8
  %key.addr = alloca i8*, align 8
  %key_len.addr = alloca i32, align 4
  %dest.addr = alloca i8**, align 8
  %dest_len.addr = alloca i32*, align 8
  store %struct.variant_info* %info, %struct.variant_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variant_info** %info.addr, metadata !5731, metadata !2357), !dbg !5732
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !5733, metadata !2357), !dbg !5734
  store i32 %key_len, i32* %key_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key_len.addr, metadata !5735, metadata !2357), !dbg !5736
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !5737, metadata !2357), !dbg !5738
  store i32* %dest_len, i32** %dest_len.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dest_len.addr, metadata !5739, metadata !2357), !dbg !5740
  %0 = load i8*, i8** %key.addr, align 8, !dbg !5741
  %1 = load i32, i32* %key_len.addr, align 4, !dbg !5743
  %conv = sext i32 %1 to i64, !dbg !5743
  %call = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i32 0, i32 0), i64 %conv) #10, !dbg !5744
  %tobool = icmp ne i32 %call, 0, !dbg !5744
  br i1 %tobool, label %if.else, label %if.then, !dbg !5745

if.then:                                          ; preds = %entry
  %2 = load %struct.variant_info*, %struct.variant_info** %info.addr, align 8, !dbg !5746
  %bandwidth = getelementptr inbounds %struct.variant_info, %struct.variant_info* %2, i32 0, i32 0, !dbg !5748
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %bandwidth, i32 0, i32 0, !dbg !5746
  %3 = load i8**, i8*** %dest.addr, align 8, !dbg !5749
  store i8* %arraydecay, i8** %3, align 8, !dbg !5750
  %4 = load i32*, i32** %dest_len.addr, align 8, !dbg !5751
  store i32 20, i32* %4, align 4, !dbg !5752
  br label %if.end20, !dbg !5753

if.else:                                          ; preds = %entry
  %5 = load i8*, i8** %key.addr, align 8, !dbg !5754
  %6 = load i32, i32* %key_len.addr, align 4, !dbg !5757
  %conv1 = sext i32 %6 to i64, !dbg !5757
  %call2 = call i32 @strncmp(i8* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i64 %conv1) #10, !dbg !5758
  %tobool3 = icmp ne i32 %call2, 0, !dbg !5758
  br i1 %tobool3, label %if.else6, label %if.then4, !dbg !5759

if.then4:                                         ; preds = %if.else
  %7 = load %struct.variant_info*, %struct.variant_info** %info.addr, align 8, !dbg !5760
  %audio = getelementptr inbounds %struct.variant_info, %struct.variant_info* %7, i32 0, i32 1, !dbg !5762
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %audio, i32 0, i32 0, !dbg !5760
  %8 = load i8**, i8*** %dest.addr, align 8, !dbg !5763
  store i8* %arraydecay5, i8** %8, align 8, !dbg !5764
  %9 = load i32*, i32** %dest_len.addr, align 8, !dbg !5765
  store i32 64, i32* %9, align 4, !dbg !5766
  br label %if.end19, !dbg !5767

if.else6:                                         ; preds = %if.else
  %10 = load i8*, i8** %key.addr, align 8, !dbg !5768
  %11 = load i32, i32* %key_len.addr, align 4, !dbg !5771
  %conv7 = sext i32 %11 to i64, !dbg !5771
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), i64 %conv7) #10, !dbg !5772
  %tobool9 = icmp ne i32 %call8, 0, !dbg !5772
  br i1 %tobool9, label %if.else12, label %if.then10, !dbg !5773

if.then10:                                        ; preds = %if.else6
  %12 = load %struct.variant_info*, %struct.variant_info** %info.addr, align 8, !dbg !5774
  %video = getelementptr inbounds %struct.variant_info, %struct.variant_info* %12, i32 0, i32 2, !dbg !5776
  %arraydecay11 = getelementptr inbounds [64 x i8], [64 x i8]* %video, i32 0, i32 0, !dbg !5774
  %13 = load i8**, i8*** %dest.addr, align 8, !dbg !5777
  store i8* %arraydecay11, i8** %13, align 8, !dbg !5778
  %14 = load i32*, i32** %dest_len.addr, align 8, !dbg !5779
  store i32 64, i32* %14, align 4, !dbg !5780
  br label %if.end18, !dbg !5781

if.else12:                                        ; preds = %if.else6
  %15 = load i8*, i8** %key.addr, align 8, !dbg !5782
  %16 = load i32, i32* %key_len.addr, align 4, !dbg !5785
  %conv13 = sext i32 %16 to i64, !dbg !5785
  %call14 = call i32 @strncmp(i8* %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57, i32 0, i32 0), i64 %conv13) #10, !dbg !5786
  %tobool15 = icmp ne i32 %call14, 0, !dbg !5786
  br i1 %tobool15, label %if.end, label %if.then16, !dbg !5787

if.then16:                                        ; preds = %if.else12
  %17 = load %struct.variant_info*, %struct.variant_info** %info.addr, align 8, !dbg !5788
  %subtitles = getelementptr inbounds %struct.variant_info, %struct.variant_info* %17, i32 0, i32 3, !dbg !5790
  %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %subtitles, i32 0, i32 0, !dbg !5788
  %18 = load i8**, i8*** %dest.addr, align 8, !dbg !5791
  store i8* %arraydecay17, i8** %18, align 8, !dbg !5792
  %19 = load i32*, i32** %dest_len.addr, align 8, !dbg !5793
  store i32 64, i32* %19, align 4, !dbg !5794
  br label %if.end, !dbg !5795

if.end:                                           ; preds = %if.then16, %if.else12
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then10
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then4
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then
  ret void, !dbg !5796
}

; Function Attrs: nounwind uwtable
define internal void @handle_key_args(%struct.key_info* %info, i8* %key, i32 %key_len, i8** %dest, i32* %dest_len) #0 !dbg !5797 {
entry:
  %info.addr = alloca %struct.key_info*, align 8
  %key.addr = alloca i8*, align 8
  %key_len.addr = alloca i32, align 4
  %dest.addr = alloca i8**, align 8
  %dest_len.addr = alloca i32*, align 8
  store %struct.key_info* %info, %struct.key_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.key_info** %info.addr, metadata !5801, metadata !2357), !dbg !5802
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !5803, metadata !2357), !dbg !5804
  store i32 %key_len, i32* %key_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key_len.addr, metadata !5805, metadata !2357), !dbg !5806
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !5807, metadata !2357), !dbg !5808
  store i32* %dest_len, i32** %dest_len.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dest_len.addr, metadata !5809, metadata !2357), !dbg !5810
  %0 = load i8*, i8** %key.addr, align 8, !dbg !5811
  %1 = load i32, i32* %key_len.addr, align 4, !dbg !5813
  %conv = sext i32 %1 to i64, !dbg !5813
  %call = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i32 0, i32 0), i64 %conv) #10, !dbg !5814
  %tobool = icmp ne i32 %call, 0, !dbg !5814
  br i1 %tobool, label %if.else, label %if.then, !dbg !5815

if.then:                                          ; preds = %entry
  %2 = load %struct.key_info*, %struct.key_info** %info.addr, align 8, !dbg !5816
  %method = getelementptr inbounds %struct.key_info, %struct.key_info* %2, i32 0, i32 1, !dbg !5818
  %arraydecay = getelementptr inbounds [11 x i8], [11 x i8]* %method, i32 0, i32 0, !dbg !5816
  %3 = load i8**, i8*** %dest.addr, align 8, !dbg !5819
  store i8* %arraydecay, i8** %3, align 8, !dbg !5820
  %4 = load i32*, i32** %dest_len.addr, align 8, !dbg !5821
  store i32 11, i32* %4, align 4, !dbg !5822
  br label %if.end13, !dbg !5823

if.else:                                          ; preds = %entry
  %5 = load i8*, i8** %key.addr, align 8, !dbg !5824
  %6 = load i32, i32* %key_len.addr, align 4, !dbg !5827
  %conv1 = sext i32 %6 to i64, !dbg !5827
  %call2 = call i32 @strncmp(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i64 %conv1) #10, !dbg !5828
  %tobool3 = icmp ne i32 %call2, 0, !dbg !5828
  br i1 %tobool3, label %if.else6, label %if.then4, !dbg !5829

if.then4:                                         ; preds = %if.else
  %7 = load %struct.key_info*, %struct.key_info** %info.addr, align 8, !dbg !5830
  %uri = getelementptr inbounds %struct.key_info, %struct.key_info* %7, i32 0, i32 0, !dbg !5832
  %arraydecay5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %uri, i32 0, i32 0, !dbg !5830
  %8 = load i8**, i8*** %dest.addr, align 8, !dbg !5833
  store i8* %arraydecay5, i8** %8, align 8, !dbg !5834
  %9 = load i32*, i32** %dest_len.addr, align 8, !dbg !5835
  store i32 4096, i32* %9, align 4, !dbg !5836
  br label %if.end12, !dbg !5837

if.else6:                                         ; preds = %if.else
  %10 = load i8*, i8** %key.addr, align 8, !dbg !5838
  %11 = load i32, i32* %key_len.addr, align 4, !dbg !5841
  %conv7 = sext i32 %11 to i64, !dbg !5841
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i32 0, i32 0), i64 %conv7) #10, !dbg !5842
  %tobool9 = icmp ne i32 %call8, 0, !dbg !5842
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !5843

if.then10:                                        ; preds = %if.else6
  %12 = load %struct.key_info*, %struct.key_info** %info.addr, align 8, !dbg !5844
  %iv = getelementptr inbounds %struct.key_info, %struct.key_info* %12, i32 0, i32 2, !dbg !5846
  %arraydecay11 = getelementptr inbounds [35 x i8], [35 x i8]* %iv, i32 0, i32 0, !dbg !5844
  %13 = load i8**, i8*** %dest.addr, align 8, !dbg !5847
  store i8* %arraydecay11, i8** %13, align 8, !dbg !5848
  %14 = load i32*, i32** %dest_len.addr, align 8, !dbg !5849
  store i32 35, i32* %14, align 4, !dbg !5850
  br label %if.end, !dbg !5851

if.end:                                           ; preds = %if.then10, %if.else6
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then4
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then
  ret void, !dbg !5852
}

declare i32 @ff_hex_to_data(i8*, i8*) #1

declare i64 @av_strlcpy(i8*, i8*, i64) #1

; Function Attrs: nounwind uwtable
define internal void @handle_rendition_args(%struct.rendition_info* %info, i8* %key, i32 %key_len, i8** %dest, i32* %dest_len) #0 !dbg !5853 {
entry:
  %info.addr = alloca %struct.rendition_info*, align 8
  %key.addr = alloca i8*, align 8
  %key_len.addr = alloca i32, align 4
  %dest.addr = alloca i8**, align 8
  %dest_len.addr = alloca i32*, align 8
  store %struct.rendition_info* %info, %struct.rendition_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rendition_info** %info.addr, metadata !5857, metadata !2357), !dbg !5858
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !5859, metadata !2357), !dbg !5860
  store i32 %key_len, i32* %key_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key_len.addr, metadata !5861, metadata !2357), !dbg !5862
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !5863, metadata !2357), !dbg !5864
  store i32* %dest_len, i32** %dest_len.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dest_len.addr, metadata !5865, metadata !2357), !dbg !5866
  %0 = load i8*, i8** %key.addr, align 8, !dbg !5867
  %1 = load i32, i32* %key_len.addr, align 4, !dbg !5869
  %conv = sext i32 %1 to i64, !dbg !5869
  %call = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i32 0, i32 0), i64 %conv) #10, !dbg !5870
  %tobool = icmp ne i32 %call, 0, !dbg !5870
  br i1 %tobool, label %if.else, label %if.then, !dbg !5871

if.then:                                          ; preds = %entry
  %2 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !5872
  %type = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %2, i32 0, i32 0, !dbg !5874
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %type, i32 0, i32 0, !dbg !5872
  %3 = load i8**, i8*** %dest.addr, align 8, !dbg !5875
  store i8* %arraydecay, i8** %3, align 8, !dbg !5876
  %4 = load i32*, i32** %dest_len.addr, align 8, !dbg !5877
  store i32 16, i32* %4, align 4, !dbg !5878
  br label %if.end55, !dbg !5879

if.else:                                          ; preds = %entry
  %5 = load i8*, i8** %key.addr, align 8, !dbg !5880
  %6 = load i32, i32* %key_len.addr, align 4, !dbg !5883
  %conv1 = sext i32 %6 to i64, !dbg !5883
  %call2 = call i32 @strncmp(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i64 %conv1) #10, !dbg !5884
  %tobool3 = icmp ne i32 %call2, 0, !dbg !5884
  br i1 %tobool3, label %if.else6, label %if.then4, !dbg !5885

if.then4:                                         ; preds = %if.else
  %7 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !5886
  %uri = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %7, i32 0, i32 1, !dbg !5888
  %arraydecay5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %uri, i32 0, i32 0, !dbg !5886
  %8 = load i8**, i8*** %dest.addr, align 8, !dbg !5889
  store i8* %arraydecay5, i8** %8, align 8, !dbg !5890
  %9 = load i32*, i32** %dest_len.addr, align 8, !dbg !5891
  store i32 4096, i32* %9, align 4, !dbg !5892
  br label %if.end54, !dbg !5893

if.else6:                                         ; preds = %if.else
  %10 = load i8*, i8** %key.addr, align 8, !dbg !5894
  %11 = load i32, i32* %key_len.addr, align 4, !dbg !5897
  %conv7 = sext i32 %11 to i64, !dbg !5897
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i32 0, i32 0), i64 %conv7) #10, !dbg !5898
  %tobool9 = icmp ne i32 %call8, 0, !dbg !5898
  br i1 %tobool9, label %if.else12, label %if.then10, !dbg !5899

if.then10:                                        ; preds = %if.else6
  %12 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !5900
  %group_id = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %12, i32 0, i32 2, !dbg !5902
  %arraydecay11 = getelementptr inbounds [64 x i8], [64 x i8]* %group_id, i32 0, i32 0, !dbg !5900
  %13 = load i8**, i8*** %dest.addr, align 8, !dbg !5903
  store i8* %arraydecay11, i8** %13, align 8, !dbg !5904
  %14 = load i32*, i32** %dest_len.addr, align 8, !dbg !5905
  store i32 64, i32* %14, align 4, !dbg !5906
  br label %if.end53, !dbg !5907

if.else12:                                        ; preds = %if.else6
  %15 = load i8*, i8** %key.addr, align 8, !dbg !5908
  %16 = load i32, i32* %key_len.addr, align 4, !dbg !5911
  %conv13 = sext i32 %16 to i64, !dbg !5911
  %call14 = call i32 @strncmp(i8* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i32 0, i32 0), i64 %conv13) #10, !dbg !5912
  %tobool15 = icmp ne i32 %call14, 0, !dbg !5912
  br i1 %tobool15, label %if.else18, label %if.then16, !dbg !5913

if.then16:                                        ; preds = %if.else12
  %17 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !5914
  %language = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %17, i32 0, i32 3, !dbg !5916
  %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %language, i32 0, i32 0, !dbg !5914
  %18 = load i8**, i8*** %dest.addr, align 8, !dbg !5917
  store i8* %arraydecay17, i8** %18, align 8, !dbg !5918
  %19 = load i32*, i32** %dest_len.addr, align 8, !dbg !5919
  store i32 64, i32* %19, align 4, !dbg !5920
  br label %if.end52, !dbg !5921

if.else18:                                        ; preds = %if.else12
  %20 = load i8*, i8** %key.addr, align 8, !dbg !5922
  %21 = load i32, i32* %key_len.addr, align 4, !dbg !5925
  %conv19 = sext i32 %21 to i64, !dbg !5925
  %call20 = call i32 @strncmp(i8* %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.64, i32 0, i32 0), i64 %conv19) #10, !dbg !5926
  %tobool21 = icmp ne i32 %call20, 0, !dbg !5926
  br i1 %tobool21, label %if.else24, label %if.then22, !dbg !5927

if.then22:                                        ; preds = %if.else18
  %22 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !5928
  %assoc_language = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %22, i32 0, i32 4, !dbg !5930
  %arraydecay23 = getelementptr inbounds [64 x i8], [64 x i8]* %assoc_language, i32 0, i32 0, !dbg !5928
  %23 = load i8**, i8*** %dest.addr, align 8, !dbg !5931
  store i8* %arraydecay23, i8** %23, align 8, !dbg !5932
  %24 = load i32*, i32** %dest_len.addr, align 8, !dbg !5933
  store i32 64, i32* %24, align 4, !dbg !5934
  br label %if.end51, !dbg !5935

if.else24:                                        ; preds = %if.else18
  %25 = load i8*, i8** %key.addr, align 8, !dbg !5936
  %26 = load i32, i32* %key_len.addr, align 4, !dbg !5939
  %conv25 = sext i32 %26 to i64, !dbg !5939
  %call26 = call i32 @strncmp(i8* %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i32 0, i32 0), i64 %conv25) #10, !dbg !5940
  %tobool27 = icmp ne i32 %call26, 0, !dbg !5940
  br i1 %tobool27, label %if.else30, label %if.then28, !dbg !5941

if.then28:                                        ; preds = %if.else24
  %27 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !5942
  %name = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %27, i32 0, i32 5, !dbg !5944
  %arraydecay29 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i32 0, i32 0, !dbg !5942
  %28 = load i8**, i8*** %dest.addr, align 8, !dbg !5945
  store i8* %arraydecay29, i8** %28, align 8, !dbg !5946
  %29 = load i32*, i32** %dest_len.addr, align 8, !dbg !5947
  store i32 64, i32* %29, align 4, !dbg !5948
  br label %if.end50, !dbg !5949

if.else30:                                        ; preds = %if.else24
  %30 = load i8*, i8** %key.addr, align 8, !dbg !5950
  %31 = load i32, i32* %key_len.addr, align 4, !dbg !5953
  %conv31 = sext i32 %31 to i64, !dbg !5953
  %call32 = call i32 @strncmp(i8* %30, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i32 0, i32 0), i64 %conv31) #10, !dbg !5954
  %tobool33 = icmp ne i32 %call32, 0, !dbg !5954
  br i1 %tobool33, label %if.else36, label %if.then34, !dbg !5955

if.then34:                                        ; preds = %if.else30
  %32 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !5956
  %defaultr = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %32, i32 0, i32 6, !dbg !5958
  %arraydecay35 = getelementptr inbounds [4 x i8], [4 x i8]* %defaultr, i32 0, i32 0, !dbg !5956
  %33 = load i8**, i8*** %dest.addr, align 8, !dbg !5959
  store i8* %arraydecay35, i8** %33, align 8, !dbg !5960
  %34 = load i32*, i32** %dest_len.addr, align 8, !dbg !5961
  store i32 4, i32* %34, align 4, !dbg !5962
  br label %if.end49, !dbg !5963

if.else36:                                        ; preds = %if.else30
  %35 = load i8*, i8** %key.addr, align 8, !dbg !5964
  %36 = load i32, i32* %key_len.addr, align 4, !dbg !5967
  %conv37 = sext i32 %36 to i64, !dbg !5967
  %call38 = call i32 @strncmp(i8* %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0), i64 %conv37) #10, !dbg !5968
  %tobool39 = icmp ne i32 %call38, 0, !dbg !5968
  br i1 %tobool39, label %if.else42, label %if.then40, !dbg !5969

if.then40:                                        ; preds = %if.else36
  %37 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !5970
  %forced = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %37, i32 0, i32 7, !dbg !5972
  %arraydecay41 = getelementptr inbounds [4 x i8], [4 x i8]* %forced, i32 0, i32 0, !dbg !5970
  %38 = load i8**, i8*** %dest.addr, align 8, !dbg !5973
  store i8* %arraydecay41, i8** %38, align 8, !dbg !5974
  %39 = load i32*, i32** %dest_len.addr, align 8, !dbg !5975
  store i32 4, i32* %39, align 4, !dbg !5976
  br label %if.end48, !dbg !5977

if.else42:                                        ; preds = %if.else36
  %40 = load i8*, i8** %key.addr, align 8, !dbg !5978
  %41 = load i32, i32* %key_len.addr, align 4, !dbg !5981
  %conv43 = sext i32 %41 to i64, !dbg !5981
  %call44 = call i32 @strncmp(i8* %40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.68, i32 0, i32 0), i64 %conv43) #10, !dbg !5982
  %tobool45 = icmp ne i32 %call44, 0, !dbg !5982
  br i1 %tobool45, label %if.end, label %if.then46, !dbg !5983

if.then46:                                        ; preds = %if.else42
  %42 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !5984
  %characteristics = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %42, i32 0, i32 8, !dbg !5986
  %arraydecay47 = getelementptr inbounds [512 x i8], [512 x i8]* %characteristics, i32 0, i32 0, !dbg !5984
  %43 = load i8**, i8*** %dest.addr, align 8, !dbg !5987
  store i8* %arraydecay47, i8** %43, align 8, !dbg !5988
  %44 = load i32*, i32** %dest_len.addr, align 8, !dbg !5989
  store i32 512, i32* %44, align 4, !dbg !5990
  br label %if.end, !dbg !5991

if.end:                                           ; preds = %if.then46, %if.else42
  br label %if.end48

if.end48:                                         ; preds = %if.end, %if.then40
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then34
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then28
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then22
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then16
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then10
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then4
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then
  ret void, !dbg !5992
}

; Function Attrs: nounwind uwtable
define internal %struct.rendition* @new_rendition(%struct.HLSContext* %c, %struct.rendition_info* %info, i8* %url_base) #0 !dbg !5993 {
entry:
  %retval = alloca %struct.rendition*, align 8
  %c.addr = alloca %struct.HLSContext*, align 8
  %info.addr = alloca %struct.rendition_info*, align 8
  %url_base.addr = alloca i8*, align 8
  %rend = alloca %struct.rendition*, align 8
  %type = alloca i32, align 4
  %characteristic = alloca i8*, align 8
  %chr_ptr = alloca i8*, align 8
  %saveptr = alloca i8*, align 8
  %_tab = alloca %struct.rendition***, align 8
  %_elem = alloca %struct.rendition*, align 8
  %_tab62 = alloca %struct.rendition***, align 8
  %_elem65 = alloca %struct.rendition*, align 8
  %langlen = alloca i32, align 4
  store %struct.HLSContext* %c, %struct.HLSContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c.addr, metadata !5996, metadata !2357), !dbg !5997
  store %struct.rendition_info* %info, %struct.rendition_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rendition_info** %info.addr, metadata !5998, metadata !2357), !dbg !5999
  store i8* %url_base, i8** %url_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %url_base.addr, metadata !6000, metadata !2357), !dbg !6001
  call void @llvm.dbg.declare(metadata %struct.rendition** %rend, metadata !6002, metadata !2357), !dbg !6003
  call void @llvm.dbg.declare(metadata i32* %type, metadata !6004, metadata !2357), !dbg !6005
  store i32 -1, i32* %type, align 4, !dbg !6005
  call void @llvm.dbg.declare(metadata i8** %characteristic, metadata !6006, metadata !2357), !dbg !6007
  call void @llvm.dbg.declare(metadata i8** %chr_ptr, metadata !6008, metadata !2357), !dbg !6009
  call void @llvm.dbg.declare(metadata i8** %saveptr, metadata !6010, metadata !2357), !dbg !6011
  %0 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6012
  %type1 = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %0, i32 0, i32 0, !dbg !6014
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %type1, i32 0, i32 0, !dbg !6012
  %call = call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i32 0, i32 0)) #10, !dbg !6015
  %tobool = icmp ne i32 %call, 0, !dbg !6015
  br i1 %tobool, label %if.else, label %if.then, !dbg !6016

if.then:                                          ; preds = %entry
  store i32 1, i32* %type, align 4, !dbg !6017
  br label %if.end21, !dbg !6018

if.else:                                          ; preds = %entry
  %1 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6019
  %type2 = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %1, i32 0, i32 0, !dbg !6021
  %arraydecay3 = getelementptr inbounds [16 x i8], [16 x i8]* %type2, i32 0, i32 0, !dbg !6019
  %call4 = call i32 @strcmp(i8* %arraydecay3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0)) #10, !dbg !6022
  %tobool5 = icmp ne i32 %call4, 0, !dbg !6022
  br i1 %tobool5, label %if.else7, label %if.then6, !dbg !6023

if.then6:                                         ; preds = %if.else
  store i32 0, i32* %type, align 4, !dbg !6024
  br label %if.end20, !dbg !6025

if.else7:                                         ; preds = %if.else
  %2 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6026
  %type8 = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %2, i32 0, i32 0, !dbg !6028
  %arraydecay9 = getelementptr inbounds [16 x i8], [16 x i8]* %type8, i32 0, i32 0, !dbg !6026
  %call10 = call i32 @strcmp(i8* %arraydecay9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i32 0, i32 0)) #10, !dbg !6029
  %tobool11 = icmp ne i32 %call10, 0, !dbg !6029
  br i1 %tobool11, label %if.else13, label %if.then12, !dbg !6030

if.then12:                                        ; preds = %if.else7
  store i32 3, i32* %type, align 4, !dbg !6031
  br label %if.end19, !dbg !6032

if.else13:                                        ; preds = %if.else7
  %3 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6033
  %type14 = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %3, i32 0, i32 0, !dbg !6035
  %arraydecay15 = getelementptr inbounds [16 x i8], [16 x i8]* %type14, i32 0, i32 0, !dbg !6033
  %call16 = call i32 @strcmp(i8* %arraydecay15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.72, i32 0, i32 0)) #10, !dbg !6036
  %tobool17 = icmp ne i32 %call16, 0, !dbg !6036
  br i1 %tobool17, label %if.end, label %if.then18, !dbg !6037

if.then18:                                        ; preds = %if.else13
  store %struct.rendition* null, %struct.rendition** %retval, align 8, !dbg !6038
  br label %return, !dbg !6038

if.end:                                           ; preds = %if.else13
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then12
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then6
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then
  %4 = load i32, i32* %type, align 4, !dbg !6039
  %cmp = icmp eq i32 %4, -1, !dbg !6041
  br i1 %cmp, label %if.then22, label %if.end23, !dbg !6042

if.then22:                                        ; preds = %if.end21
  store %struct.rendition* null, %struct.rendition** %retval, align 8, !dbg !6043
  br label %return, !dbg !6043

if.end23:                                         ; preds = %if.end21
  %5 = load i32, i32* %type, align 4, !dbg !6044
  %cmp24 = icmp eq i32 %5, 3, !dbg !6046
  br i1 %cmp24, label %land.lhs.true, label %if.end27, !dbg !6047

land.lhs.true:                                    ; preds = %if.end23
  %6 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6048
  %uri = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %6, i32 0, i32 1, !dbg !6050
  %arrayidx = getelementptr inbounds [4096 x i8], [4096 x i8]* %uri, i64 0, i64 0, !dbg !6048
  %7 = load i8, i8* %arrayidx, align 1, !dbg !6048
  %tobool25 = icmp ne i8 %7, 0, !dbg !6048
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !6051

if.then26:                                        ; preds = %land.lhs.true
  store %struct.rendition* null, %struct.rendition** %retval, align 8, !dbg !6052
  br label %return, !dbg !6052

if.end27:                                         ; preds = %land.lhs.true, %if.end23
  %8 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6053
  %strict_std_compliance = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %8, i32 0, i32 15, !dbg !6055
  %9 = load i32, i32* %strict_std_compliance, align 8, !dbg !6055
  %cmp28 = icmp sgt i32 %9, -2, !dbg !6056
  br i1 %cmp28, label %if.then29, label %if.end33, !dbg !6057

if.then29:                                        ; preds = %if.end27
  %10 = load i32, i32* %type, align 4, !dbg !6058
  %cmp30 = icmp eq i32 %10, 3, !dbg !6060
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !6061

if.then31:                                        ; preds = %if.then29
  store %struct.rendition* null, %struct.rendition** %retval, align 8, !dbg !6062
  br label %return, !dbg !6062

if.end32:                                         ; preds = %if.then29
  br label %if.end33, !dbg !6063

if.end33:                                         ; preds = %if.end32, %if.end27
  %call34 = call noalias i8* @av_mallocz(i64 216), !dbg !6065
  %11 = bitcast i8* %call34 to %struct.rendition*, !dbg !6065
  store %struct.rendition* %11, %struct.rendition** %rend, align 8, !dbg !6066
  %12 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6067
  %tobool35 = icmp ne %struct.rendition* %12, null, !dbg !6067
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !6069

if.then36:                                        ; preds = %if.end33
  store %struct.rendition* null, %struct.rendition** %retval, align 8, !dbg !6070
  br label %return, !dbg !6070

if.end37:                                         ; preds = %if.end33
  br label %do.body, !dbg !6071, !llvm.loop !6072

do.body:                                          ; preds = %if.end37
  call void @llvm.dbg.declare(metadata %struct.rendition**** %_tab, metadata !6073, metadata !2357), !dbg !6075
  %13 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6076
  %renditions = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %13, i32 0, i32 7, !dbg !6078
  store %struct.rendition*** %renditions, %struct.rendition**** %_tab, align 8, !dbg !6079
  call void @llvm.dbg.declare(metadata %struct.rendition** %_elem, metadata !6080, metadata !2357), !dbg !6081
  %14 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6082
  store %struct.rendition* %14, %struct.rendition** %_elem, align 8, !dbg !6083
  %15 = load %struct.rendition***, %struct.rendition**** %_tab, align 8, !dbg !6084
  %16 = bitcast %struct.rendition*** %15 to i8*, !dbg !6084
  %17 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6085
  %n_renditions = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %17, i32 0, i32 6, !dbg !6086
  %18 = load %struct.rendition*, %struct.rendition** %_elem, align 8, !dbg !6087
  %19 = bitcast %struct.rendition* %18 to i8*, !dbg !6087
  call void @av_dynarray_add(i8* %16, i32* %n_renditions, i8* %19), !dbg !6088
  br label %do.end, !dbg !6089

do.end:                                           ; preds = %do.body
  %20 = load i32, i32* %type, align 4, !dbg !6090
  %21 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6091
  %type38 = getelementptr inbounds %struct.rendition, %struct.rendition* %21, i32 0, i32 0, !dbg !6092
  store i32 %20, i32* %type38, align 8, !dbg !6093
  %22 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6094
  %group_id = getelementptr inbounds %struct.rendition, %struct.rendition* %22, i32 0, i32 2, !dbg !6095
  %arraydecay39 = getelementptr inbounds [64 x i8], [64 x i8]* %group_id, i32 0, i32 0, !dbg !6094
  %23 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6096
  %group_id40 = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %23, i32 0, i32 2, !dbg !6097
  %arraydecay41 = getelementptr inbounds [64 x i8], [64 x i8]* %group_id40, i32 0, i32 0, !dbg !6096
  %call42 = call i8* @strcpy(i8* %arraydecay39, i8* %arraydecay41) #11, !dbg !6098
  %24 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6099
  %language = getelementptr inbounds %struct.rendition, %struct.rendition* %24, i32 0, i32 3, !dbg !6100
  %arraydecay43 = getelementptr inbounds [64 x i8], [64 x i8]* %language, i32 0, i32 0, !dbg !6099
  %25 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6101
  %language44 = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %25, i32 0, i32 3, !dbg !6102
  %arraydecay45 = getelementptr inbounds [64 x i8], [64 x i8]* %language44, i32 0, i32 0, !dbg !6101
  %call46 = call i8* @strcpy(i8* %arraydecay43, i8* %arraydecay45) #11, !dbg !6103
  %26 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6104
  %name = getelementptr inbounds %struct.rendition, %struct.rendition* %26, i32 0, i32 4, !dbg !6105
  %arraydecay47 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i32 0, i32 0, !dbg !6104
  %27 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6106
  %name48 = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %27, i32 0, i32 5, !dbg !6107
  %arraydecay49 = getelementptr inbounds [64 x i8], [64 x i8]* %name48, i32 0, i32 0, !dbg !6106
  %call50 = call i8* @strcpy(i8* %arraydecay47, i8* %arraydecay49) #11, !dbg !6108
  %28 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6109
  %uri51 = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %28, i32 0, i32 1, !dbg !6111
  %arrayidx52 = getelementptr inbounds [4096 x i8], [4096 x i8]* %uri51, i64 0, i64 0, !dbg !6109
  %29 = load i8, i8* %arrayidx52, align 1, !dbg !6109
  %tobool53 = icmp ne i8 %29, 0, !dbg !6109
  br i1 %tobool53, label %if.then54, label %if.end70, !dbg !6112

if.then54:                                        ; preds = %do.end
  %30 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6113
  %31 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6115
  %uri55 = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %31, i32 0, i32 1, !dbg !6116
  %arraydecay56 = getelementptr inbounds [4096 x i8], [4096 x i8]* %uri55, i32 0, i32 0, !dbg !6115
  %32 = load i8*, i8** %url_base.addr, align 8, !dbg !6117
  %call57 = call %struct.playlist* @new_playlist(%struct.HLSContext* %30, i8* %arraydecay56, i8* %32), !dbg !6118
  %33 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6119
  %playlist = getelementptr inbounds %struct.rendition, %struct.rendition* %33, i32 0, i32 1, !dbg !6120
  store %struct.playlist* %call57, %struct.playlist** %playlist, align 8, !dbg !6121
  %34 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6122
  %playlist58 = getelementptr inbounds %struct.rendition, %struct.rendition* %34, i32 0, i32 1, !dbg !6124
  %35 = load %struct.playlist*, %struct.playlist** %playlist58, align 8, !dbg !6124
  %tobool59 = icmp ne %struct.playlist* %35, null, !dbg !6122
  br i1 %tobool59, label %if.then60, label %if.end69, !dbg !6125

if.then60:                                        ; preds = %if.then54
  br label %do.body61, !dbg !6126, !llvm.loop !6127

do.body61:                                        ; preds = %if.then60
  call void @llvm.dbg.declare(metadata %struct.rendition**** %_tab62, metadata !6128, metadata !2357), !dbg !6130
  %36 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6131
  %playlist63 = getelementptr inbounds %struct.rendition, %struct.rendition* %36, i32 0, i32 1, !dbg !6133
  %37 = load %struct.playlist*, %struct.playlist** %playlist63, align 8, !dbg !6133
  %renditions64 = getelementptr inbounds %struct.playlist, %struct.playlist* %37, i32 0, i32 44, !dbg !6134
  store %struct.rendition*** %renditions64, %struct.rendition**** %_tab62, align 8, !dbg !6135
  call void @llvm.dbg.declare(metadata %struct.rendition** %_elem65, metadata !6136, metadata !2357), !dbg !6137
  %38 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6138
  store %struct.rendition* %38, %struct.rendition** %_elem65, align 8, !dbg !6139
  %39 = load %struct.rendition***, %struct.rendition**** %_tab62, align 8, !dbg !6140
  %40 = bitcast %struct.rendition*** %39 to i8*, !dbg !6140
  %41 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6141
  %playlist66 = getelementptr inbounds %struct.rendition, %struct.rendition* %41, i32 0, i32 1, !dbg !6142
  %42 = load %struct.playlist*, %struct.playlist** %playlist66, align 8, !dbg !6142
  %n_renditions67 = getelementptr inbounds %struct.playlist, %struct.playlist* %42, i32 0, i32 43, !dbg !6143
  %43 = load %struct.rendition*, %struct.rendition** %_elem65, align 8, !dbg !6144
  %44 = bitcast %struct.rendition* %43 to i8*, !dbg !6144
  call void @av_dynarray_add(i8* %40, i32* %n_renditions67, i8* %44), !dbg !6145
  br label %do.end68, !dbg !6146

do.end68:                                         ; preds = %do.body61
  br label %if.end69, !dbg !6147

if.end69:                                         ; preds = %do.end68, %if.then54
  br label %if.end70, !dbg !6149

if.end70:                                         ; preds = %if.end69, %do.end
  %45 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6150
  %assoc_language = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %45, i32 0, i32 4, !dbg !6152
  %arrayidx71 = getelementptr inbounds [64 x i8], [64 x i8]* %assoc_language, i64 0, i64 0, !dbg !6150
  %46 = load i8, i8* %arrayidx71, align 1, !dbg !6150
  %tobool72 = icmp ne i8 %46, 0, !dbg !6150
  br i1 %tobool72, label %if.then73, label %if.end92, !dbg !6153

if.then73:                                        ; preds = %if.end70
  call void @llvm.dbg.declare(metadata i32* %langlen, metadata !6154, metadata !2357), !dbg !6156
  %47 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6157
  %language74 = getelementptr inbounds %struct.rendition, %struct.rendition* %47, i32 0, i32 3, !dbg !6158
  %arraydecay75 = getelementptr inbounds [64 x i8], [64 x i8]* %language74, i32 0, i32 0, !dbg !6157
  %call76 = call i64 @strlen(i8* %arraydecay75) #10, !dbg !6159
  %conv = trunc i64 %call76 to i32, !dbg !6159
  store i32 %conv, i32* %langlen, align 4, !dbg !6156
  %48 = load i32, i32* %langlen, align 4, !dbg !6160
  %conv77 = sext i32 %48 to i64, !dbg !6160
  %cmp78 = icmp ult i64 %conv77, 61, !dbg !6162
  br i1 %cmp78, label %if.then80, label %if.end91, !dbg !6163

if.then80:                                        ; preds = %if.then73
  %49 = load i32, i32* %langlen, align 4, !dbg !6164
  %idxprom = sext i32 %49 to i64, !dbg !6166
  %50 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6166
  %language81 = getelementptr inbounds %struct.rendition, %struct.rendition* %50, i32 0, i32 3, !dbg !6167
  %arrayidx82 = getelementptr inbounds [64 x i8], [64 x i8]* %language81, i64 0, i64 %idxprom, !dbg !6166
  store i8 44, i8* %arrayidx82, align 1, !dbg !6168
  %51 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6169
  %language83 = getelementptr inbounds %struct.rendition, %struct.rendition* %51, i32 0, i32 3, !dbg !6170
  %arraydecay84 = getelementptr inbounds [64 x i8], [64 x i8]* %language83, i32 0, i32 0, !dbg !6169
  %52 = load i32, i32* %langlen, align 4, !dbg !6171
  %idx.ext = sext i32 %52 to i64, !dbg !6172
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay84, i64 %idx.ext, !dbg !6172
  %add.ptr85 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !6173
  %53 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6174
  %assoc_language86 = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %53, i32 0, i32 4, !dbg !6175
  %arraydecay87 = getelementptr inbounds [64 x i8], [64 x i8]* %assoc_language86, i32 0, i32 0, !dbg !6174
  %54 = load i32, i32* %langlen, align 4, !dbg !6176
  %conv88 = sext i32 %54 to i64, !dbg !6176
  %sub = sub i64 64, %conv88, !dbg !6177
  %sub89 = sub i64 %sub, 2, !dbg !6178
  %call90 = call i8* @strncpy(i8* %add.ptr85, i8* %arraydecay87, i64 %sub89) #11, !dbg !6179
  br label %if.end91, !dbg !6180

if.end91:                                         ; preds = %if.then80, %if.then73
  br label %if.end92, !dbg !6181

if.end92:                                         ; preds = %if.end91, %if.end70
  %55 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6182
  %defaultr = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %55, i32 0, i32 6, !dbg !6184
  %arraydecay93 = getelementptr inbounds [4 x i8], [4 x i8]* %defaultr, i32 0, i32 0, !dbg !6182
  %call94 = call i32 @strcmp(i8* %arraydecay93, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i32 0, i32 0)) #10, !dbg !6185
  %tobool95 = icmp ne i32 %call94, 0, !dbg !6185
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !6186

if.then96:                                        ; preds = %if.end92
  %56 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6187
  %disposition = getelementptr inbounds %struct.rendition, %struct.rendition* %56, i32 0, i32 5, !dbg !6188
  %57 = load i32, i32* %disposition, align 8, !dbg !6189
  %or = or i32 %57, 1, !dbg !6189
  store i32 %or, i32* %disposition, align 8, !dbg !6189
  br label %if.end97, !dbg !6187

if.end97:                                         ; preds = %if.then96, %if.end92
  %58 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6190
  %forced = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %58, i32 0, i32 7, !dbg !6192
  %arraydecay98 = getelementptr inbounds [4 x i8], [4 x i8]* %forced, i32 0, i32 0, !dbg !6190
  %call99 = call i32 @strcmp(i8* %arraydecay98, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i32 0, i32 0)) #10, !dbg !6193
  %tobool100 = icmp ne i32 %call99, 0, !dbg !6193
  br i1 %tobool100, label %if.end104, label %if.then101, !dbg !6194

if.then101:                                       ; preds = %if.end97
  %59 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6195
  %disposition102 = getelementptr inbounds %struct.rendition, %struct.rendition* %59, i32 0, i32 5, !dbg !6196
  %60 = load i32, i32* %disposition102, align 8, !dbg !6197
  %or103 = or i32 %60, 64, !dbg !6197
  store i32 %or103, i32* %disposition102, align 8, !dbg !6197
  br label %if.end104, !dbg !6195

if.end104:                                        ; preds = %if.then101, %if.end97
  %61 = load %struct.rendition_info*, %struct.rendition_info** %info.addr, align 8, !dbg !6198
  %characteristics = getelementptr inbounds %struct.rendition_info, %struct.rendition_info* %61, i32 0, i32 8, !dbg !6199
  %arraydecay105 = getelementptr inbounds [512 x i8], [512 x i8]* %characteristics, i32 0, i32 0, !dbg !6198
  store i8* %arraydecay105, i8** %chr_ptr, align 8, !dbg !6200
  br label %while.cond, !dbg !6201

while.cond:                                       ; preds = %if.end120, %if.end104
  %62 = load i8*, i8** %chr_ptr, align 8, !dbg !6202
  %call106 = call i8* @av_strtok(i8* %62, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i32 0, i32 0), i8** %saveptr), !dbg !6204
  store i8* %call106, i8** %characteristic, align 8, !dbg !6205
  %tobool107 = icmp ne i8* %call106, null, !dbg !6206
  br i1 %tobool107, label %while.body, label %while.end, !dbg !6206

while.body:                                       ; preds = %while.cond
  %63 = load i8*, i8** %characteristic, align 8, !dbg !6207
  %call108 = call i32 @strcmp(i8* %63, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.75, i32 0, i32 0)) #10, !dbg !6210
  %tobool109 = icmp ne i32 %call108, 0, !dbg !6210
  br i1 %tobool109, label %if.else113, label %if.then110, !dbg !6211

if.then110:                                       ; preds = %while.body
  %64 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6212
  %disposition111 = getelementptr inbounds %struct.rendition, %struct.rendition* %64, i32 0, i32 5, !dbg !6213
  %65 = load i32, i32* %disposition111, align 8, !dbg !6214
  %or112 = or i32 %65, 128, !dbg !6214
  store i32 %or112, i32* %disposition111, align 8, !dbg !6214
  br label %if.end120, !dbg !6212

if.else113:                                       ; preds = %while.body
  %66 = load i8*, i8** %characteristic, align 8, !dbg !6215
  %call114 = call i32 @strcmp(i8* %66, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.76, i32 0, i32 0)) #10, !dbg !6217
  %tobool115 = icmp ne i32 %call114, 0, !dbg !6217
  br i1 %tobool115, label %if.end119, label %if.then116, !dbg !6218

if.then116:                                       ; preds = %if.else113
  %67 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6219
  %disposition117 = getelementptr inbounds %struct.rendition, %struct.rendition* %67, i32 0, i32 5, !dbg !6220
  %68 = load i32, i32* %disposition117, align 8, !dbg !6221
  %or118 = or i32 %68, 256, !dbg !6221
  store i32 %or118, i32* %disposition117, align 8, !dbg !6221
  br label %if.end119, !dbg !6219

if.end119:                                        ; preds = %if.then116, %if.else113
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then110
  store i8* null, i8** %chr_ptr, align 8, !dbg !6222
  br label %while.cond, !dbg !6223, !llvm.loop !6225

while.end:                                        ; preds = %while.cond
  %69 = load %struct.rendition*, %struct.rendition** %rend, align 8, !dbg !6226
  store %struct.rendition* %69, %struct.rendition** %retval, align 8, !dbg !6227
  br label %return, !dbg !6227

return:                                           ; preds = %while.end, %if.then36, %if.then31, %if.then26, %if.then22, %if.then18
  %70 = load %struct.rendition*, %struct.rendition** %retval, align 8, !dbg !6228
  ret %struct.rendition* %70, !dbg !6228
}

; Function Attrs: nounwind uwtable
define internal i32 @ensure_playlist(%struct.HLSContext* %c, %struct.playlist** %pls, i8* %url) #0 !dbg !6229 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.HLSContext*, align 8
  %pls.addr = alloca %struct.playlist**, align 8
  %url.addr = alloca i8*, align 8
  store %struct.HLSContext* %c, %struct.HLSContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c.addr, metadata !6232, metadata !2357), !dbg !6233
  store %struct.playlist** %pls, %struct.playlist*** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist*** %pls.addr, metadata !6234, metadata !2357), !dbg !6235
  store i8* %url, i8** %url.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %url.addr, metadata !6236, metadata !2357), !dbg !6237
  %0 = load %struct.playlist**, %struct.playlist*** %pls.addr, align 8, !dbg !6238
  %1 = load %struct.playlist*, %struct.playlist** %0, align 8, !dbg !6240
  %tobool = icmp ne %struct.playlist* %1, null, !dbg !6240
  br i1 %tobool, label %if.then, label %if.end, !dbg !6241

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6242
  br label %return, !dbg !6242

if.end:                                           ; preds = %entry
  %2 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6243
  %3 = load i8*, i8** %url.addr, align 8, !dbg !6245
  %call = call %struct.variant* @new_variant(%struct.HLSContext* %2, %struct.variant_info* null, i8* %3, i8* null), !dbg !6246
  %tobool1 = icmp ne %struct.variant* %call, null, !dbg !6246
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6247

if.then2:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !6248
  br label %return, !dbg !6248

if.end3:                                          ; preds = %if.end
  %4 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6249
  %n_playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 4, !dbg !6250
  %5 = load i32, i32* %n_playlists, align 8, !dbg !6250
  %sub = sub nsw i32 %5, 1, !dbg !6251
  %idxprom = sext i32 %sub to i64, !dbg !6252
  %6 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6252
  %playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %6, i32 0, i32 5, !dbg !6253
  %7 = load %struct.playlist**, %struct.playlist*** %playlists, align 8, !dbg !6253
  %arrayidx = getelementptr inbounds %struct.playlist*, %struct.playlist** %7, i64 %idxprom, !dbg !6252
  %8 = load %struct.playlist*, %struct.playlist** %arrayidx, align 8, !dbg !6252
  %9 = load %struct.playlist**, %struct.playlist*** %pls.addr, align 8, !dbg !6254
  store %struct.playlist* %8, %struct.playlist** %9, align 8, !dbg !6255
  store i32 0, i32* %retval, align 4, !dbg !6256
  br label %return, !dbg !6256

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !6257
  ret i32 %10, !dbg !6257
}

; Function Attrs: nounwind
declare i64 @strtoll(i8*, i8**, i32) #6

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #3

; Function Attrs: nounwind uwtable
define internal void @handle_init_section_args(%struct.init_section_info* %info, i8* %key, i32 %key_len, i8** %dest, i32* %dest_len) #0 !dbg !6258 {
entry:
  %info.addr = alloca %struct.init_section_info*, align 8
  %key.addr = alloca i8*, align 8
  %key_len.addr = alloca i32, align 4
  %dest.addr = alloca i8**, align 8
  %dest_len.addr = alloca i32*, align 8
  store %struct.init_section_info* %info, %struct.init_section_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.init_section_info** %info.addr, metadata !6262, metadata !2357), !dbg !6263
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !6264, metadata !2357), !dbg !6265
  store i32 %key_len, i32* %key_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key_len.addr, metadata !6266, metadata !2357), !dbg !6267
  store i8** %dest, i8*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dest.addr, metadata !6268, metadata !2357), !dbg !6269
  store i32* %dest_len, i32** %dest_len.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dest_len.addr, metadata !6270, metadata !2357), !dbg !6271
  %0 = load i8*, i8** %key.addr, align 8, !dbg !6272
  %1 = load i32, i32* %key_len.addr, align 4, !dbg !6274
  %conv = sext i32 %1 to i64, !dbg !6274
  %call = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i64 %conv) #10, !dbg !6275
  %tobool = icmp ne i32 %call, 0, !dbg !6275
  br i1 %tobool, label %if.else, label %if.then, !dbg !6276

if.then:                                          ; preds = %entry
  %2 = load %struct.init_section_info*, %struct.init_section_info** %info.addr, align 8, !dbg !6277
  %uri = getelementptr inbounds %struct.init_section_info, %struct.init_section_info* %2, i32 0, i32 0, !dbg !6279
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %uri, i32 0, i32 0, !dbg !6277
  %3 = load i8**, i8*** %dest.addr, align 8, !dbg !6280
  store i8* %arraydecay, i8** %3, align 8, !dbg !6281
  %4 = load i32*, i32** %dest_len.addr, align 8, !dbg !6282
  store i32 4096, i32* %4, align 4, !dbg !6283
  br label %if.end6, !dbg !6284

if.else:                                          ; preds = %entry
  %5 = load i8*, i8** %key.addr, align 8, !dbg !6285
  %6 = load i32, i32* %key_len.addr, align 4, !dbg !6288
  %conv1 = sext i32 %6 to i64, !dbg !6288
  %call2 = call i32 @strncmp(i8* %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i32 0, i32 0), i64 %conv1) #10, !dbg !6289
  %tobool3 = icmp ne i32 %call2, 0, !dbg !6289
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !6290

if.then4:                                         ; preds = %if.else
  %7 = load %struct.init_section_info*, %struct.init_section_info** %info.addr, align 8, !dbg !6291
  %byterange = getelementptr inbounds %struct.init_section_info, %struct.init_section_info* %7, i32 0, i32 1, !dbg !6293
  %arraydecay5 = getelementptr inbounds [32 x i8], [32 x i8]* %byterange, i32 0, i32 0, !dbg !6291
  %8 = load i8**, i8*** %dest.addr, align 8, !dbg !6294
  store i8* %arraydecay5, i8** %8, align 8, !dbg !6295
  %9 = load i32*, i32** %dest_len.addr, align 8, !dbg !6296
  store i32 32, i32* %9, align 4, !dbg !6297
  br label %if.end, !dbg !6298

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void, !dbg !6299
}

; Function Attrs: nounwind uwtable
define internal %struct.segment* @new_init_section(%struct.playlist* %pls, %struct.init_section_info* %info, i8* %url_base) #0 !dbg !6300 {
entry:
  %retval = alloca %struct.segment*, align 8
  %pls.addr = alloca %struct.playlist*, align 8
  %info.addr = alloca %struct.init_section_info*, align 8
  %url_base.addr = alloca i8*, align 8
  %sec = alloca %struct.segment*, align 8
  %ptr = alloca i8*, align 8
  %tmp_str = alloca [4096 x i8], align 16
  %_tab = alloca %struct.segment***, align 8
  %_elem = alloca %struct.segment*, align 8
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !6303, metadata !2357), !dbg !6304
  store %struct.init_section_info* %info, %struct.init_section_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.init_section_info** %info.addr, metadata !6305, metadata !2357), !dbg !6306
  store i8* %url_base, i8** %url_base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %url_base.addr, metadata !6307, metadata !2357), !dbg !6308
  call void @llvm.dbg.declare(metadata %struct.segment** %sec, metadata !6309, metadata !2357), !dbg !6310
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !6311, metadata !2357), !dbg !6312
  call void @llvm.dbg.declare(metadata [4096 x i8]* %tmp_str, metadata !6313, metadata !2357), !dbg !6314
  %0 = load %struct.init_section_info*, %struct.init_section_info** %info.addr, align 8, !dbg !6315
  %uri = getelementptr inbounds %struct.init_section_info, %struct.init_section_info* %0, i32 0, i32 0, !dbg !6317
  %arrayidx = getelementptr inbounds [4096 x i8], [4096 x i8]* %uri, i64 0, i64 0, !dbg !6315
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6315
  %tobool = icmp ne i8 %1, 0, !dbg !6315
  br i1 %tobool, label %if.end, label %if.then, !dbg !6318

if.then:                                          ; preds = %entry
  store %struct.segment* null, %struct.segment** %retval, align 8, !dbg !6319
  br label %return, !dbg !6319

if.end:                                           ; preds = %entry
  %call = call noalias i8* @av_mallocz(i64 72), !dbg !6320
  %2 = bitcast i8* %call to %struct.segment*, !dbg !6320
  store %struct.segment* %2, %struct.segment** %sec, align 8, !dbg !6321
  %3 = load %struct.segment*, %struct.segment** %sec, align 8, !dbg !6322
  %tobool1 = icmp ne %struct.segment* %3, null, !dbg !6322
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6324

if.then2:                                         ; preds = %if.end
  store %struct.segment* null, %struct.segment** %retval, align 8, !dbg !6325
  br label %return, !dbg !6325

if.end3:                                          ; preds = %if.end
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %tmp_str, i32 0, i32 0, !dbg !6326
  %4 = load i8*, i8** %url_base.addr, align 8, !dbg !6327
  %5 = load %struct.init_section_info*, %struct.init_section_info** %info.addr, align 8, !dbg !6328
  %uri4 = getelementptr inbounds %struct.init_section_info, %struct.init_section_info* %5, i32 0, i32 0, !dbg !6329
  %arraydecay5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %uri4, i32 0, i32 0, !dbg !6328
  call void @ff_make_absolute_url(i8* %arraydecay, i32 4096, i8* %4, i8* %arraydecay5), !dbg !6330
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %tmp_str, i32 0, i32 0, !dbg !6331
  %call7 = call noalias i8* @av_strdup(i8* %arraydecay6), !dbg !6332
  %6 = load %struct.segment*, %struct.segment** %sec, align 8, !dbg !6333
  %url = getelementptr inbounds %struct.segment, %struct.segment* %6, i32 0, i32 3, !dbg !6334
  store i8* %call7, i8** %url, align 8, !dbg !6335
  %7 = load %struct.segment*, %struct.segment** %sec, align 8, !dbg !6336
  %url8 = getelementptr inbounds %struct.segment, %struct.segment* %7, i32 0, i32 3, !dbg !6338
  %8 = load i8*, i8** %url8, align 8, !dbg !6338
  %tobool9 = icmp ne i8* %8, null, !dbg !6336
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !6339

if.then10:                                        ; preds = %if.end3
  %9 = load %struct.segment*, %struct.segment** %sec, align 8, !dbg !6340
  %10 = bitcast %struct.segment* %9 to i8*, !dbg !6340
  call void @av_free(i8* %10), !dbg !6342
  store %struct.segment* null, %struct.segment** %retval, align 8, !dbg !6343
  br label %return, !dbg !6343

if.end11:                                         ; preds = %if.end3
  %11 = load %struct.init_section_info*, %struct.init_section_info** %info.addr, align 8, !dbg !6344
  %byterange = getelementptr inbounds %struct.init_section_info, %struct.init_section_info* %11, i32 0, i32 1, !dbg !6346
  %arrayidx12 = getelementptr inbounds [32 x i8], [32 x i8]* %byterange, i64 0, i64 0, !dbg !6344
  %12 = load i8, i8* %arrayidx12, align 1, !dbg !6344
  %tobool13 = icmp ne i8 %12, 0, !dbg !6344
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !6347

if.then14:                                        ; preds = %if.end11
  %13 = load %struct.init_section_info*, %struct.init_section_info** %info.addr, align 8, !dbg !6348
  %byterange15 = getelementptr inbounds %struct.init_section_info, %struct.init_section_info* %13, i32 0, i32 1, !dbg !6350
  %arraydecay16 = getelementptr inbounds [32 x i8], [32 x i8]* %byterange15, i32 0, i32 0, !dbg !6348
  %call17 = call i64 @strtoll(i8* %arraydecay16, i8** null, i32 10) #11, !dbg !6351
  %14 = load %struct.segment*, %struct.segment** %sec, align 8, !dbg !6352
  %size = getelementptr inbounds %struct.segment, %struct.segment* %14, i32 0, i32 2, !dbg !6353
  store i64 %call17, i64* %size, align 8, !dbg !6354
  %15 = load %struct.init_section_info*, %struct.init_section_info** %info.addr, align 8, !dbg !6355
  %byterange18 = getelementptr inbounds %struct.init_section_info, %struct.init_section_info* %15, i32 0, i32 1, !dbg !6356
  %arraydecay19 = getelementptr inbounds [32 x i8], [32 x i8]* %byterange18, i32 0, i32 0, !dbg !6355
  %call20 = call i8* @strchr(i8* %arraydecay19, i32 64) #10, !dbg !6357
  store i8* %call20, i8** %ptr, align 8, !dbg !6358
  %16 = load i8*, i8** %ptr, align 8, !dbg !6359
  %tobool21 = icmp ne i8* %16, null, !dbg !6359
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !6361

if.then22:                                        ; preds = %if.then14
  %17 = load i8*, i8** %ptr, align 8, !dbg !6362
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 1, !dbg !6363
  %call23 = call i64 @strtoll(i8* %add.ptr, i8** null, i32 10) #11, !dbg !6364
  %18 = load %struct.segment*, %struct.segment** %sec, align 8, !dbg !6365
  %url_offset = getelementptr inbounds %struct.segment, %struct.segment* %18, i32 0, i32 1, !dbg !6366
  store i64 %call23, i64* %url_offset, align 8, !dbg !6367
  br label %if.end24, !dbg !6365

if.end24:                                         ; preds = %if.then22, %if.then14
  br label %if.end26, !dbg !6368

if.else:                                          ; preds = %if.end11
  %19 = load %struct.segment*, %struct.segment** %sec, align 8, !dbg !6369
  %size25 = getelementptr inbounds %struct.segment, %struct.segment* %19, i32 0, i32 2, !dbg !6371
  store i64 -1, i64* %size25, align 8, !dbg !6372
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.end24
  br label %do.body, !dbg !6373, !llvm.loop !6374

do.body:                                          ; preds = %if.end26
  call void @llvm.dbg.declare(metadata %struct.segment**** %_tab, metadata !6375, metadata !2357), !dbg !6377
  %20 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6378
  %init_sections = getelementptr inbounds %struct.playlist, %struct.playlist* %20, i32 0, i32 46, !dbg !6380
  store %struct.segment*** %init_sections, %struct.segment**** %_tab, align 8, !dbg !6381
  call void @llvm.dbg.declare(metadata %struct.segment** %_elem, metadata !6382, metadata !2357), !dbg !6383
  %21 = load %struct.segment*, %struct.segment** %sec, align 8, !dbg !6384
  store %struct.segment* %21, %struct.segment** %_elem, align 8, !dbg !6385
  %22 = load %struct.segment***, %struct.segment**** %_tab, align 8, !dbg !6386
  %23 = bitcast %struct.segment*** %22 to i8*, !dbg !6386
  %24 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6387
  %n_init_sections = getelementptr inbounds %struct.playlist, %struct.playlist* %24, i32 0, i32 45, !dbg !6388
  %25 = load %struct.segment*, %struct.segment** %_elem, align 8, !dbg !6389
  %26 = bitcast %struct.segment* %25 to i8*, !dbg !6389
  call void @av_dynarray_add(i8* %23, i32* %n_init_sections, i8* %26), !dbg !6390
  br label %do.end, !dbg !6391

do.end:                                           ; preds = %do.body
  %27 = load %struct.segment*, %struct.segment** %sec, align 8, !dbg !6392
  store %struct.segment* %27, %struct.segment** %retval, align 8, !dbg !6393
  br label %return, !dbg !6393

return:                                           ; preds = %do.end, %if.then10, %if.then2, %if.then
  %28 = load %struct.segment*, %struct.segment** %retval, align 8, !dbg !6394
  ret %struct.segment* %28, !dbg !6394
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

declare void @ff_make_absolute_url(i8*, i32, i8*, i8*) #1

declare noalias i8* @av_strdup(i8*) #1

declare void @av_free(i8*) #1

; Function Attrs: nounwind readonly
declare double @atof(i8*) #3

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #3

; Function Attrs: nounwind uwtable
define internal %struct.variant* @new_variant(%struct.HLSContext* %c, %struct.variant_info* %info, i8* %url, i8* %base) #0 !dbg !6395 {
entry:
  %retval = alloca %struct.variant*, align 8
  %c.addr = alloca %struct.HLSContext*, align 8
  %info.addr = alloca %struct.variant_info*, align 8
  %url.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %var = alloca %struct.variant*, align 8
  %pls = alloca %struct.playlist*, align 8
  %_tab = alloca %struct.variant***, align 8
  %_elem = alloca %struct.variant*, align 8
  %_tab20 = alloca %struct.playlist***, align 8
  %_elem21 = alloca %struct.playlist*, align 8
  store %struct.HLSContext* %c, %struct.HLSContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c.addr, metadata !6398, metadata !2357), !dbg !6399
  store %struct.variant_info* %info, %struct.variant_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variant_info** %info.addr, metadata !6400, metadata !2357), !dbg !6401
  store i8* %url, i8** %url.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %url.addr, metadata !6402, metadata !2357), !dbg !6403
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !6404, metadata !2357), !dbg !6405
  call void @llvm.dbg.declare(metadata %struct.variant** %var, metadata !6406, metadata !2357), !dbg !6407
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls, metadata !6408, metadata !2357), !dbg !6409
  %0 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6410
  %1 = load i8*, i8** %url.addr, align 8, !dbg !6411
  %2 = load i8*, i8** %base.addr, align 8, !dbg !6412
  %call = call %struct.playlist* @new_playlist(%struct.HLSContext* %0, i8* %1, i8* %2), !dbg !6413
  store %struct.playlist* %call, %struct.playlist** %pls, align 8, !dbg !6414
  %3 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !6415
  %tobool = icmp ne %struct.playlist* %3, null, !dbg !6415
  br i1 %tobool, label %if.end, label %if.then, !dbg !6417

if.then:                                          ; preds = %entry
  store %struct.variant* null, %struct.variant** %retval, align 8, !dbg !6418
  br label %return, !dbg !6418

if.end:                                           ; preds = %entry
  %call1 = call noalias i8* @av_mallocz(i64 208), !dbg !6419
  %4 = bitcast i8* %call1 to %struct.variant*, !dbg !6419
  store %struct.variant* %4, %struct.variant** %var, align 8, !dbg !6420
  %5 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !6421
  %tobool2 = icmp ne %struct.variant* %5, null, !dbg !6421
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6423

if.then3:                                         ; preds = %if.end
  store %struct.variant* null, %struct.variant** %retval, align 8, !dbg !6424
  br label %return, !dbg !6424

if.end4:                                          ; preds = %if.end
  %6 = load %struct.variant_info*, %struct.variant_info** %info.addr, align 8, !dbg !6425
  %tobool5 = icmp ne %struct.variant_info* %6, null, !dbg !6425
  br i1 %tobool5, label %if.then6, label %if.end18, !dbg !6427

if.then6:                                         ; preds = %if.end4
  %7 = load %struct.variant_info*, %struct.variant_info** %info.addr, align 8, !dbg !6428
  %bandwidth = getelementptr inbounds %struct.variant_info, %struct.variant_info* %7, i32 0, i32 0, !dbg !6430
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %bandwidth, i32 0, i32 0, !dbg !6428
  %call7 = call i32 @atoi(i8* %arraydecay) #10, !dbg !6431
  %8 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !6432
  %bandwidth8 = getelementptr inbounds %struct.variant, %struct.variant* %8, i32 0, i32 0, !dbg !6433
  store i32 %call7, i32* %bandwidth8, align 8, !dbg !6434
  %9 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !6435
  %audio_group = getelementptr inbounds %struct.variant, %struct.variant* %9, i32 0, i32 3, !dbg !6436
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %audio_group, i32 0, i32 0, !dbg !6435
  %10 = load %struct.variant_info*, %struct.variant_info** %info.addr, align 8, !dbg !6437
  %audio = getelementptr inbounds %struct.variant_info, %struct.variant_info* %10, i32 0, i32 1, !dbg !6438
  %arraydecay10 = getelementptr inbounds [64 x i8], [64 x i8]* %audio, i32 0, i32 0, !dbg !6437
  %call11 = call i8* @strcpy(i8* %arraydecay9, i8* %arraydecay10) #11, !dbg !6439
  %11 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !6440
  %video_group = getelementptr inbounds %struct.variant, %struct.variant* %11, i32 0, i32 4, !dbg !6441
  %arraydecay12 = getelementptr inbounds [64 x i8], [64 x i8]* %video_group, i32 0, i32 0, !dbg !6440
  %12 = load %struct.variant_info*, %struct.variant_info** %info.addr, align 8, !dbg !6442
  %video = getelementptr inbounds %struct.variant_info, %struct.variant_info* %12, i32 0, i32 2, !dbg !6443
  %arraydecay13 = getelementptr inbounds [64 x i8], [64 x i8]* %video, i32 0, i32 0, !dbg !6442
  %call14 = call i8* @strcpy(i8* %arraydecay12, i8* %arraydecay13) #11, !dbg !6444
  %13 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !6445
  %subtitles_group = getelementptr inbounds %struct.variant, %struct.variant* %13, i32 0, i32 5, !dbg !6446
  %arraydecay15 = getelementptr inbounds [64 x i8], [64 x i8]* %subtitles_group, i32 0, i32 0, !dbg !6445
  %14 = load %struct.variant_info*, %struct.variant_info** %info.addr, align 8, !dbg !6447
  %subtitles = getelementptr inbounds %struct.variant_info, %struct.variant_info* %14, i32 0, i32 3, !dbg !6448
  %arraydecay16 = getelementptr inbounds [64 x i8], [64 x i8]* %subtitles, i32 0, i32 0, !dbg !6447
  %call17 = call i8* @strcpy(i8* %arraydecay15, i8* %arraydecay16) #11, !dbg !6449
  br label %if.end18, !dbg !6450

if.end18:                                         ; preds = %if.then6, %if.end4
  br label %do.body, !dbg !6451, !llvm.loop !6452

do.body:                                          ; preds = %if.end18
  call void @llvm.dbg.declare(metadata %struct.variant**** %_tab, metadata !6453, metadata !2357), !dbg !6456
  %15 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6457
  %variants = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %15, i32 0, i32 3, !dbg !6459
  store %struct.variant*** %variants, %struct.variant**** %_tab, align 8, !dbg !6460
  call void @llvm.dbg.declare(metadata %struct.variant** %_elem, metadata !6461, metadata !2357), !dbg !6462
  %16 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !6463
  store %struct.variant* %16, %struct.variant** %_elem, align 8, !dbg !6464
  %17 = load %struct.variant***, %struct.variant**** %_tab, align 8, !dbg !6465
  %18 = bitcast %struct.variant*** %17 to i8*, !dbg !6465
  %19 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6466
  %n_variants = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %19, i32 0, i32 2, !dbg !6467
  %20 = load %struct.variant*, %struct.variant** %_elem, align 8, !dbg !6468
  %21 = bitcast %struct.variant* %20 to i8*, !dbg !6468
  call void @av_dynarray_add(i8* %18, i32* %n_variants, i8* %21), !dbg !6469
  br label %do.end, !dbg !6470

do.end:                                           ; preds = %do.body
  br label %do.body19, !dbg !6471, !llvm.loop !6472

do.body19:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata %struct.playlist**** %_tab20, metadata !6473, metadata !2357), !dbg !6475
  %22 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !6476
  %playlists = getelementptr inbounds %struct.variant, %struct.variant* %22, i32 0, i32 2, !dbg !6478
  store %struct.playlist*** %playlists, %struct.playlist**** %_tab20, align 8, !dbg !6479
  call void @llvm.dbg.declare(metadata %struct.playlist** %_elem21, metadata !6480, metadata !2357), !dbg !6481
  %23 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !6482
  store %struct.playlist* %23, %struct.playlist** %_elem21, align 8, !dbg !6483
  %24 = load %struct.playlist***, %struct.playlist**** %_tab20, align 8, !dbg !6484
  %25 = bitcast %struct.playlist*** %24 to i8*, !dbg !6484
  %26 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !6485
  %n_playlists = getelementptr inbounds %struct.variant, %struct.variant* %26, i32 0, i32 1, !dbg !6486
  %27 = load %struct.playlist*, %struct.playlist** %_elem21, align 8, !dbg !6487
  %28 = bitcast %struct.playlist* %27 to i8*, !dbg !6487
  call void @av_dynarray_add(i8* %25, i32* %n_playlists, i8* %28), !dbg !6488
  br label %do.end22, !dbg !6489

do.end22:                                         ; preds = %do.body19
  %29 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !6490
  store %struct.variant* %29, %struct.variant** %retval, align 8, !dbg !6491
  br label %return, !dbg !6491

return:                                           ; preds = %do.end22, %if.then3, %if.then
  %30 = load %struct.variant*, %struct.variant** %retval, align 8, !dbg !6492
  ret %struct.variant* %30, !dbg !6492
}

declare void @av_dynarray_add(i8*, i32*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @free_segment_dynarray(%struct.segment** %segments, i32 %n_segments) #0 !dbg !6493 {
entry:
  %segments.addr = alloca %struct.segment**, align 8
  %n_segments.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.segment** %segments, %struct.segment*** %segments.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.segment*** %segments.addr, metadata !6496, metadata !2357), !dbg !6497
  store i32 %n_segments, i32* %n_segments.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_segments.addr, metadata !6498, metadata !2357), !dbg !6499
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6500, metadata !2357), !dbg !6501
  store i32 0, i32* %i, align 4, !dbg !6502
  br label %for.cond, !dbg !6504

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6505
  %1 = load i32, i32* %n_segments.addr, align 4, !dbg !6508
  %cmp = icmp slt i32 %0, %1, !dbg !6509
  br i1 %cmp, label %for.body, label %for.end, !dbg !6510

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !6511
  %idxprom = sext i32 %2 to i64, !dbg !6513
  %3 = load %struct.segment**, %struct.segment*** %segments.addr, align 8, !dbg !6513
  %arrayidx = getelementptr inbounds %struct.segment*, %struct.segment** %3, i64 %idxprom, !dbg !6513
  %4 = load %struct.segment*, %struct.segment** %arrayidx, align 8, !dbg !6513
  %key = getelementptr inbounds %struct.segment, %struct.segment* %4, i32 0, i32 4, !dbg !6514
  %5 = bitcast i8** %key to i8*, !dbg !6515
  call void @av_freep(i8* %5), !dbg !6516
  %6 = load i32, i32* %i, align 4, !dbg !6517
  %idxprom1 = sext i32 %6 to i64, !dbg !6518
  %7 = load %struct.segment**, %struct.segment*** %segments.addr, align 8, !dbg !6518
  %arrayidx2 = getelementptr inbounds %struct.segment*, %struct.segment** %7, i64 %idxprom1, !dbg !6518
  %8 = load %struct.segment*, %struct.segment** %arrayidx2, align 8, !dbg !6518
  %url = getelementptr inbounds %struct.segment, %struct.segment* %8, i32 0, i32 3, !dbg !6519
  %9 = bitcast i8** %url to i8*, !dbg !6520
  call void @av_freep(i8* %9), !dbg !6521
  %10 = load i32, i32* %i, align 4, !dbg !6522
  %idxprom3 = sext i32 %10 to i64, !dbg !6523
  %11 = load %struct.segment**, %struct.segment*** %segments.addr, align 8, !dbg !6523
  %arrayidx4 = getelementptr inbounds %struct.segment*, %struct.segment** %11, i64 %idxprom3, !dbg !6523
  %12 = bitcast %struct.segment** %arrayidx4 to i8*, !dbg !6524
  call void @av_freep(i8* %12), !dbg !6525
  br label %for.inc, !dbg !6526

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !6527
  %inc = add nsw i32 %13, 1, !dbg !6527
  store i32 %inc, i32* %i, align 4, !dbg !6527
  br label %for.cond, !dbg !6529, !llvm.loop !6530

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6532
}

declare void @av_freep(i8*) #1

declare i64 @av_gettime_relative() #1

declare void @ff_format_io_close(%struct.AVFormatContext*, %struct.AVIOContext**) #1

declare %struct.URLContext* @ffio_geturlcontext(%struct.AVIOContext*) #1

; Function Attrs: noreturn nounwind
declare void @abort() #7

declare i32 @ff_http_do_new_request(%struct.URLContext*, i8*) #1

declare i32 @av_strerror(i32, i8*, i64) #1

declare noalias i8* @av_mallocz(i64) #1

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #6

; Function Attrs: nounwind uwtable
define internal %struct.playlist* @new_playlist(%struct.HLSContext* %c, i8* %url, i8* %base) #0 !dbg !6533 {
entry:
  %retval = alloca %struct.playlist*, align 8
  %c.addr = alloca %struct.HLSContext*, align 8
  %url.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %pls = alloca %struct.playlist*, align 8
  %_tab = alloca %struct.playlist***, align 8
  %_elem = alloca %struct.playlist*, align 8
  store %struct.HLSContext* %c, %struct.HLSContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c.addr, metadata !6536, metadata !2357), !dbg !6537
  store i8* %url, i8** %url.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %url.addr, metadata !6538, metadata !2357), !dbg !6539
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !6540, metadata !2357), !dbg !6541
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls, metadata !6542, metadata !2357), !dbg !6543
  %call = call noalias i8* @av_mallocz(i64 8840), !dbg !6544
  %0 = bitcast i8* %call to %struct.playlist*, !dbg !6544
  store %struct.playlist* %0, %struct.playlist** %pls, align 8, !dbg !6543
  %1 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !6545
  %tobool = icmp ne %struct.playlist* %1, null, !dbg !6545
  br i1 %tobool, label %if.end, label %if.then, !dbg !6547

if.then:                                          ; preds = %entry
  store %struct.playlist* null, %struct.playlist** %retval, align 8, !dbg !6548
  br label %return, !dbg !6548

if.end:                                           ; preds = %entry
  %2 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !6549
  %pkt = getelementptr inbounds %struct.playlist, %struct.playlist* %2, i32 0, i32 10, !dbg !6550
  call void @reset_packet(%struct.AVPacket* %pkt), !dbg !6551
  %3 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !6552
  %url1 = getelementptr inbounds %struct.playlist, %struct.playlist* %3, i32 0, i32 0, !dbg !6553
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %url1, i32 0, i32 0, !dbg !6552
  %4 = load i8*, i8** %base.addr, align 8, !dbg !6554
  %5 = load i8*, i8** %url.addr, align 8, !dbg !6555
  call void @ff_make_absolute_url(i8* %arraydecay, i32 4096, i8* %4, i8* %5), !dbg !6556
  %6 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !6557
  %seek_timestamp = getelementptr inbounds %struct.playlist, %struct.playlist* %6, i32 0, i32 40, !dbg !6558
  store i64 -9223372036854775808, i64* %seek_timestamp, align 8, !dbg !6559
  %7 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !6560
  %is_id3_timestamped = getelementptr inbounds %struct.playlist, %struct.playlist* %7, i32 0, i32 31, !dbg !6561
  store i32 -1, i32* %is_id3_timestamped, align 4, !dbg !6562
  %8 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !6563
  %id3_mpegts_timestamp = getelementptr inbounds %struct.playlist, %struct.playlist* %8, i32 0, i32 32, !dbg !6564
  store i64 -9223372036854775808, i64* %id3_mpegts_timestamp, align 8, !dbg !6565
  br label %do.body, !dbg !6566, !llvm.loop !6567

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.playlist**** %_tab, metadata !6568, metadata !2357), !dbg !6570
  %9 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6571
  %playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %9, i32 0, i32 5, !dbg !6573
  store %struct.playlist*** %playlists, %struct.playlist**** %_tab, align 8, !dbg !6574
  call void @llvm.dbg.declare(metadata %struct.playlist** %_elem, metadata !6575, metadata !2357), !dbg !6576
  %10 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !6577
  store %struct.playlist* %10, %struct.playlist** %_elem, align 8, !dbg !6578
  %11 = load %struct.playlist***, %struct.playlist**** %_tab, align 8, !dbg !6579
  %12 = bitcast %struct.playlist*** %11 to i8*, !dbg !6579
  %13 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6580
  %n_playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %13, i32 0, i32 4, !dbg !6581
  %14 = load %struct.playlist*, %struct.playlist** %_elem, align 8, !dbg !6582
  %15 = bitcast %struct.playlist* %14 to i8*, !dbg !6582
  call void @av_dynarray_add(i8* %12, i32* %n_playlists, i8* %15), !dbg !6583
  br label %do.end, !dbg !6584

do.end:                                           ; preds = %do.body
  %16 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !6585
  store %struct.playlist* %16, %struct.playlist** %retval, align 8, !dbg !6586
  br label %return, !dbg !6586

return:                                           ; preds = %do.end, %if.then
  %17 = load %struct.playlist*, %struct.playlist** %retval, align 8, !dbg !6587
  ret %struct.playlist* %17, !dbg !6587
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #3

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #6

declare i8* @av_strtok(i8*, i8*, i8**) #1

; Function Attrs: nounwind uwtable
define internal void @reset_packet(%struct.AVPacket* %pkt) #0 !dbg !6588 {
entry:
  %pkt.addr = alloca %struct.AVPacket*, align 8
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !6591, metadata !2357), !dbg !6592
  %0 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !6593
  call void @av_init_packet(%struct.AVPacket* %0), !dbg !6594
  %1 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !6595
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i32 0, i32 3, !dbg !6596
  store i8* null, i8** %data, align 8, !dbg !6597
  ret void, !dbg !6598
}

declare void @av_init_packet(%struct.AVPacket*) #1

; Function Attrs: nounwind uwtable
define internal i64 @default_reload_interval(%struct.playlist* %pls) #0 !dbg !6599 {
entry:
  %pls.addr = alloca %struct.playlist*, align 8
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !6602, metadata !2357), !dbg !6603
  %0 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6604
  %n_segments = getelementptr inbounds %struct.playlist, %struct.playlist* %0, i32 0, i32 18, !dbg !6605
  %1 = load i32, i32* %n_segments, align 4, !dbg !6605
  %cmp = icmp sgt i32 %1, 0, !dbg !6606
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6604

cond.true:                                        ; preds = %entry
  %2 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6607
  %n_segments1 = getelementptr inbounds %struct.playlist, %struct.playlist* %2, i32 0, i32 18, !dbg !6608
  %3 = load i32, i32* %n_segments1, align 4, !dbg !6608
  %sub = sub nsw i32 %3, 1, !dbg !6609
  %idxprom = sext i32 %sub to i64, !dbg !6610
  %4 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6610
  %segments = getelementptr inbounds %struct.playlist, %struct.playlist* %4, i32 0, i32 19, !dbg !6611
  %5 = load %struct.segment**, %struct.segment*** %segments, align 8, !dbg !6611
  %arrayidx = getelementptr inbounds %struct.segment*, %struct.segment** %5, i64 %idxprom, !dbg !6610
  %6 = load %struct.segment*, %struct.segment** %arrayidx, align 8, !dbg !6610
  %duration = getelementptr inbounds %struct.segment, %struct.segment* %6, i32 0, i32 0, !dbg !6612
  %7 = load i64, i64* %duration, align 8, !dbg !6612
  br label %cond.end, !dbg !6613

cond.false:                                       ; preds = %entry
  %8 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6615
  %target_duration = getelementptr inbounds %struct.playlist, %struct.playlist* %8, i32 0, i32 16, !dbg !6616
  %9 = load i64, i64* %target_duration, align 8, !dbg !6616
  br label %cond.end, !dbg !6617

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %7, %cond.true ], [ %9, %cond.false ], !dbg !6619
  ret i64 %cond, !dbg !6621
}

; Function Attrs: nounwind uwtable
define internal i32 @find_timestamp_in_playlist(%struct.HLSContext* %c, %struct.playlist* %pls, i64 %timestamp, i32* %seq_no) #0 !dbg !6622 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.HLSContext*, align 8
  %pls.addr = alloca %struct.playlist*, align 8
  %timestamp.addr = alloca i64, align 8
  %seq_no.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %pos = alloca i64, align 8
  %diff = alloca i64, align 8
  store %struct.HLSContext* %c, %struct.HLSContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c.addr, metadata !6625, metadata !2357), !dbg !6626
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !6627, metadata !2357), !dbg !6628
  store i64 %timestamp, i64* %timestamp.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timestamp.addr, metadata !6629, metadata !2357), !dbg !6630
  store i32* %seq_no, i32** %seq_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %seq_no.addr, metadata !6631, metadata !2357), !dbg !6632
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6633, metadata !2357), !dbg !6634
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !6635, metadata !2357), !dbg !6636
  %0 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6637
  %first_timestamp = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %0, i32 0, i32 11, !dbg !6638
  %1 = load i64, i64* %first_timestamp, align 8, !dbg !6638
  %cmp = icmp eq i64 %1, -9223372036854775808, !dbg !6639
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6637

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6640

cond.false:                                       ; preds = %entry
  %2 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6642
  %first_timestamp1 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %2, i32 0, i32 11, !dbg !6643
  %3 = load i64, i64* %first_timestamp1, align 8, !dbg !6643
  br label %cond.end, !dbg !6644

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %3, %cond.false ], !dbg !6646
  store i64 %cond, i64* %pos, align 8, !dbg !6648
  %4 = load i64, i64* %timestamp.addr, align 8, !dbg !6649
  %5 = load i64, i64* %pos, align 8, !dbg !6651
  %cmp2 = icmp slt i64 %4, %5, !dbg !6652
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6653

if.then:                                          ; preds = %cond.end
  %6 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6654
  %start_seq_no = getelementptr inbounds %struct.playlist, %struct.playlist* %6, i32 0, i32 17, !dbg !6656
  %7 = load i32, i32* %start_seq_no, align 8, !dbg !6656
  %8 = load i32*, i32** %seq_no.addr, align 8, !dbg !6657
  store i32 %7, i32* %8, align 4, !dbg !6658
  store i32 0, i32* %retval, align 4, !dbg !6659
  br label %return, !dbg !6659

if.end:                                           ; preds = %cond.end
  store i32 0, i32* %i, align 4, !dbg !6660
  br label %for.cond, !dbg !6662

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !6663
  %10 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6666
  %n_segments = getelementptr inbounds %struct.playlist, %struct.playlist* %10, i32 0, i32 18, !dbg !6667
  %11 = load i32, i32* %n_segments, align 4, !dbg !6667
  %cmp3 = icmp slt i32 %9, %11, !dbg !6668
  br i1 %cmp3, label %for.body, label %for.end, !dbg !6669

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %diff, metadata !6670, metadata !2357), !dbg !6672
  %12 = load i64, i64* %pos, align 8, !dbg !6673
  %13 = load i32, i32* %i, align 4, !dbg !6674
  %idxprom = sext i32 %13 to i64, !dbg !6675
  %14 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6675
  %segments = getelementptr inbounds %struct.playlist, %struct.playlist* %14, i32 0, i32 19, !dbg !6676
  %15 = load %struct.segment**, %struct.segment*** %segments, align 8, !dbg !6676
  %arrayidx = getelementptr inbounds %struct.segment*, %struct.segment** %15, i64 %idxprom, !dbg !6675
  %16 = load %struct.segment*, %struct.segment** %arrayidx, align 8, !dbg !6675
  %duration = getelementptr inbounds %struct.segment, %struct.segment* %16, i32 0, i32 0, !dbg !6677
  %17 = load i64, i64* %duration, align 8, !dbg !6677
  %add = add nsw i64 %12, %17, !dbg !6678
  %18 = load i64, i64* %timestamp.addr, align 8, !dbg !6679
  %sub = sub nsw i64 %add, %18, !dbg !6680
  store i64 %sub, i64* %diff, align 8, !dbg !6672
  %19 = load i64, i64* %diff, align 8, !dbg !6681
  %cmp4 = icmp sgt i64 %19, 0, !dbg !6683
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !6684

if.then5:                                         ; preds = %for.body
  %20 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6685
  %start_seq_no6 = getelementptr inbounds %struct.playlist, %struct.playlist* %20, i32 0, i32 17, !dbg !6687
  %21 = load i32, i32* %start_seq_no6, align 8, !dbg !6687
  %22 = load i32, i32* %i, align 4, !dbg !6688
  %add7 = add nsw i32 %21, %22, !dbg !6689
  %23 = load i32*, i32** %seq_no.addr, align 8, !dbg !6690
  store i32 %add7, i32* %23, align 4, !dbg !6691
  store i32 1, i32* %retval, align 4, !dbg !6692
  br label %return, !dbg !6692

if.end8:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !6693
  %idxprom9 = sext i32 %24 to i64, !dbg !6694
  %25 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6694
  %segments10 = getelementptr inbounds %struct.playlist, %struct.playlist* %25, i32 0, i32 19, !dbg !6695
  %26 = load %struct.segment**, %struct.segment*** %segments10, align 8, !dbg !6695
  %arrayidx11 = getelementptr inbounds %struct.segment*, %struct.segment** %26, i64 %idxprom9, !dbg !6694
  %27 = load %struct.segment*, %struct.segment** %arrayidx11, align 8, !dbg !6694
  %duration12 = getelementptr inbounds %struct.segment, %struct.segment* %27, i32 0, i32 0, !dbg !6696
  %28 = load i64, i64* %duration12, align 8, !dbg !6696
  %29 = load i64, i64* %pos, align 8, !dbg !6697
  %add13 = add nsw i64 %29, %28, !dbg !6697
  store i64 %add13, i64* %pos, align 8, !dbg !6697
  br label %for.inc, !dbg !6698

for.inc:                                          ; preds = %if.end8
  %30 = load i32, i32* %i, align 4, !dbg !6699
  %inc = add nsw i32 %30, 1, !dbg !6699
  store i32 %inc, i32* %i, align 4, !dbg !6699
  br label %for.cond, !dbg !6701, !llvm.loop !6702

for.end:                                          ; preds = %for.cond
  %31 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6704
  %start_seq_no14 = getelementptr inbounds %struct.playlist, %struct.playlist* %31, i32 0, i32 17, !dbg !6705
  %32 = load i32, i32* %start_seq_no14, align 8, !dbg !6705
  %33 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6706
  %n_segments15 = getelementptr inbounds %struct.playlist, %struct.playlist* %33, i32 0, i32 18, !dbg !6707
  %34 = load i32, i32* %n_segments15, align 4, !dbg !6707
  %add16 = add nsw i32 %32, %34, !dbg !6708
  %sub17 = sub nsw i32 %add16, 1, !dbg !6709
  %35 = load i32*, i32** %seq_no.addr, align 8, !dbg !6710
  store i32 %sub17, i32* %35, align 4, !dbg !6711
  store i32 0, i32* %retval, align 4, !dbg !6712
  br label %return, !dbg !6712

return:                                           ; preds = %for.end, %if.then5, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !6713
  ret i32 %36, !dbg !6713
}

; Function Attrs: nounwind uwtable
define internal i32 @playlist_needed(%struct.playlist* %pls) #0 !dbg !6714 {
entry:
  %retval = alloca i32, align 4
  %pls.addr = alloca %struct.playlist*, align 8
  %s = alloca %struct.AVFormatContext*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %stream_needed = alloca i32, align 4
  %first_st = alloca i32, align 4
  %program = alloca %struct.AVProgram*, align 8
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !6717, metadata !2357), !dbg !6718
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s, metadata !6719, metadata !2357), !dbg !6720
  %0 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6721
  %parent = getelementptr inbounds %struct.playlist, %struct.playlist* %0, i32 0, i32 7, !dbg !6722
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent, align 8, !dbg !6722
  store %struct.AVFormatContext* %1, %struct.AVFormatContext** %s, align 8, !dbg !6720
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6723, metadata !2357), !dbg !6724
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6725, metadata !2357), !dbg !6726
  call void @llvm.dbg.declare(metadata i32* %stream_needed, metadata !6727, metadata !2357), !dbg !6728
  store i32 0, i32* %stream_needed, align 4, !dbg !6728
  call void @llvm.dbg.declare(metadata i32* %first_st, metadata !6729, metadata !2357), !dbg !6730
  %2 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6731
  %ctx = getelementptr inbounds %struct.playlist, %struct.playlist* %2, i32 0, i32 9, !dbg !6733
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !6733
  %tobool = icmp ne %struct.AVFormatContext* %3, null, !dbg !6731
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6734

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6735
  %n_main_streams = getelementptr inbounds %struct.playlist, %struct.playlist* %4, i32 0, i32 13, !dbg !6737
  %5 = load i32, i32* %n_main_streams, align 8, !dbg !6737
  %tobool1 = icmp ne i32 %5, 0, !dbg !6735
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6738

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !6739
  br label %return, !dbg !6739

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !6740
  br label %for.cond, !dbg !6742

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !6743
  %7 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6746
  %n_main_streams2 = getelementptr inbounds %struct.playlist, %struct.playlist* %7, i32 0, i32 13, !dbg !6747
  %8 = load i32, i32* %n_main_streams2, align 8, !dbg !6747
  %cmp = icmp slt i32 %6, %8, !dbg !6748
  br i1 %cmp, label %for.body, label %for.end, !dbg !6749

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !6750
  %idxprom = sext i32 %9 to i64, !dbg !6753
  %10 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6753
  %main_streams = getelementptr inbounds %struct.playlist, %struct.playlist* %10, i32 0, i32 12, !dbg !6754
  %11 = load %struct.AVStream**, %struct.AVStream*** %main_streams, align 8, !dbg !6754
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %11, i64 %idxprom, !dbg !6753
  %12 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !6753
  %discard = getelementptr inbounds %struct.AVStream, %struct.AVStream* %12, i32 0, i32 9, !dbg !6755
  %13 = load i32, i32* %discard, align 4, !dbg !6755
  %cmp3 = icmp slt i32 %13, 48, !dbg !6756
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6757

if.then4:                                         ; preds = %for.body
  store i32 1, i32* %stream_needed, align 4, !dbg !6758
  br label %for.end, !dbg !6760

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !6761

for.inc:                                          ; preds = %if.end5
  %14 = load i32, i32* %i, align 4, !dbg !6762
  %inc = add nsw i32 %14, 1, !dbg !6762
  store i32 %inc, i32* %i, align 4, !dbg !6762
  br label %for.cond, !dbg !6764, !llvm.loop !6765

for.end:                                          ; preds = %if.then4, %for.cond
  %15 = load i32, i32* %stream_needed, align 4, !dbg !6767
  %tobool6 = icmp ne i32 %15, 0, !dbg !6767
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !6769

if.then7:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !6770
  br label %return, !dbg !6770

if.end8:                                          ; preds = %for.end
  %16 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6771
  %main_streams9 = getelementptr inbounds %struct.playlist, %struct.playlist* %16, i32 0, i32 12, !dbg !6772
  %17 = load %struct.AVStream**, %struct.AVStream*** %main_streams9, align 8, !dbg !6772
  %arrayidx10 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %17, i64 0, !dbg !6771
  %18 = load %struct.AVStream*, %struct.AVStream** %arrayidx10, align 8, !dbg !6771
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i32 0, i32 0, !dbg !6773
  %19 = load i32, i32* %index, align 8, !dbg !6773
  store i32 %19, i32* %first_st, align 4, !dbg !6774
  store i32 0, i32* %i, align 4, !dbg !6775
  br label %for.cond11, !dbg !6777

for.cond11:                                       ; preds = %for.inc31, %if.end8
  %20 = load i32, i32* %i, align 4, !dbg !6778
  %21 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !6781
  %nb_programs = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %21, i32 0, i32 20, !dbg !6782
  %22 = load i32, i32* %nb_programs, align 4, !dbg !6782
  %cmp12 = icmp ult i32 %20, %22, !dbg !6783
  br i1 %cmp12, label %for.body13, label %for.end33, !dbg !6784

for.body13:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata %struct.AVProgram** %program, metadata !6785, metadata !2357), !dbg !6787
  %23 = load i32, i32* %i, align 4, !dbg !6788
  %idxprom14 = sext i32 %23 to i64, !dbg !6789
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !6789
  %programs = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %24, i32 0, i32 21, !dbg !6790
  %25 = load %struct.AVProgram**, %struct.AVProgram*** %programs, align 8, !dbg !6790
  %arrayidx15 = getelementptr inbounds %struct.AVProgram*, %struct.AVProgram** %25, i64 %idxprom14, !dbg !6789
  %26 = load %struct.AVProgram*, %struct.AVProgram** %arrayidx15, align 8, !dbg !6789
  store %struct.AVProgram* %26, %struct.AVProgram** %program, align 8, !dbg !6787
  %27 = load %struct.AVProgram*, %struct.AVProgram** %program, align 8, !dbg !6791
  %discard16 = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %27, i32 0, i32 2, !dbg !6793
  %28 = load i32, i32* %discard16, align 8, !dbg !6793
  %cmp17 = icmp slt i32 %28, 48, !dbg !6794
  br i1 %cmp17, label %if.then18, label %if.end30, !dbg !6795

if.then18:                                        ; preds = %for.body13
  store i32 0, i32* %j, align 4, !dbg !6796
  br label %for.cond19, !dbg !6799

for.cond19:                                       ; preds = %for.inc27, %if.then18
  %29 = load i32, i32* %j, align 4, !dbg !6800
  %30 = load %struct.AVProgram*, %struct.AVProgram** %program, align 8, !dbg !6803
  %nb_stream_indexes = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %30, i32 0, i32 4, !dbg !6804
  %31 = load i32, i32* %nb_stream_indexes, align 8, !dbg !6804
  %cmp20 = icmp ult i32 %29, %31, !dbg !6805
  br i1 %cmp20, label %for.body21, label %for.end29, !dbg !6806

for.body21:                                       ; preds = %for.cond19
  %32 = load i32, i32* %j, align 4, !dbg !6807
  %idxprom22 = sext i32 %32 to i64, !dbg !6810
  %33 = load %struct.AVProgram*, %struct.AVProgram** %program, align 8, !dbg !6810
  %stream_index = getelementptr inbounds %struct.AVProgram, %struct.AVProgram* %33, i32 0, i32 3, !dbg !6811
  %34 = load i32*, i32** %stream_index, align 8, !dbg !6811
  %arrayidx23 = getelementptr inbounds i32, i32* %34, i64 %idxprom22, !dbg !6810
  %35 = load i32, i32* %arrayidx23, align 4, !dbg !6810
  %36 = load i32, i32* %first_st, align 4, !dbg !6812
  %cmp24 = icmp eq i32 %35, %36, !dbg !6813
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !6814

if.then25:                                        ; preds = %for.body21
  store i32 1, i32* %retval, align 4, !dbg !6815
  br label %return, !dbg !6815

if.end26:                                         ; preds = %for.body21
  br label %for.inc27, !dbg !6817

for.inc27:                                        ; preds = %if.end26
  %37 = load i32, i32* %j, align 4, !dbg !6818
  %inc28 = add nsw i32 %37, 1, !dbg !6818
  store i32 %inc28, i32* %j, align 4, !dbg !6818
  br label %for.cond19, !dbg !6820, !llvm.loop !6821

for.end29:                                        ; preds = %for.cond19
  br label %if.end30, !dbg !6823

if.end30:                                         ; preds = %for.end29, %for.body13
  br label %for.inc31, !dbg !6824

for.inc31:                                        ; preds = %if.end30
  %38 = load i32, i32* %i, align 4, !dbg !6825
  %inc32 = add nsw i32 %38, 1, !dbg !6825
  store i32 %inc32, i32* %i, align 4, !dbg !6825
  br label %for.cond11, !dbg !6827, !llvm.loop !6828

for.end33:                                        ; preds = %for.cond11
  store i32 0, i32* %retval, align 4, !dbg !6830
  br label %return, !dbg !6830

return:                                           ; preds = %for.end33, %if.then25, %if.then7, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !6831
  ret i32 %39, !dbg !6831
}

declare i32 @ff_check_interrupt(%struct.AVIOInterruptCB*) #1

declare i32 @av_usleep(i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.segment* @current_segment(%struct.playlist* %pls) #0 !dbg !6832 {
entry:
  %pls.addr = alloca %struct.playlist*, align 8
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !6835, metadata !2357), !dbg !6836
  %0 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6837
  %cur_seq_no = getelementptr inbounds %struct.playlist, %struct.playlist* %0, i32 0, i32 21, !dbg !6838
  %1 = load i32, i32* %cur_seq_no, align 4, !dbg !6838
  %2 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6839
  %start_seq_no = getelementptr inbounds %struct.playlist, %struct.playlist* %2, i32 0, i32 17, !dbg !6840
  %3 = load i32, i32* %start_seq_no, align 8, !dbg !6840
  %sub = sub nsw i32 %1, %3, !dbg !6841
  %idxprom = sext i32 %sub to i64, !dbg !6842
  %4 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6842
  %segments = getelementptr inbounds %struct.playlist, %struct.playlist* %4, i32 0, i32 19, !dbg !6843
  %5 = load %struct.segment**, %struct.segment*** %segments, align 8, !dbg !6843
  %arrayidx = getelementptr inbounds %struct.segment*, %struct.segment** %5, i64 %idxprom, !dbg !6842
  %6 = load %struct.segment*, %struct.segment** %arrayidx, align 8, !dbg !6842
  ret %struct.segment* %6, !dbg !6844
}

; Function Attrs: nounwind uwtable
define internal i32 @update_init_section(%struct.playlist* %pls, %struct.segment* %seg) #0 !dbg !2242 {
entry:
  %retval = alloca i32, align 4
  %pls.addr = alloca %struct.playlist*, align 8
  %seg.addr = alloca %struct.segment*, align 8
  %c = alloca %struct.HLSContext*, align 8
  %sec_size = alloca i64, align 8
  %urlsize = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !6845, metadata !2357), !dbg !6846
  store %struct.segment* %seg, %struct.segment** %seg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.segment** %seg.addr, metadata !6847, metadata !2357), !dbg !6848
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c, metadata !6849, metadata !2357), !dbg !6850
  %0 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6851
  %parent = getelementptr inbounds %struct.playlist, %struct.playlist* %0, i32 0, i32 7, !dbg !6852
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent, align 8, !dbg !6852
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 3, !dbg !6853
  %2 = load i8*, i8** %priv_data, align 8, !dbg !6853
  %3 = bitcast i8* %2 to %struct.HLSContext*, !dbg !6851
  store %struct.HLSContext* %3, %struct.HLSContext** %c, align 8, !dbg !6850
  call void @llvm.dbg.declare(metadata i64* %sec_size, metadata !6854, metadata !2357), !dbg !6855
  call void @llvm.dbg.declare(metadata i64* %urlsize, metadata !6856, metadata !2357), !dbg !6857
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6858, metadata !2357), !dbg !6859
  %4 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !6860
  %init_section = getelementptr inbounds %struct.segment, %struct.segment* %4, i32 0, i32 7, !dbg !6862
  %5 = load %struct.segment*, %struct.segment** %init_section, align 8, !dbg !6862
  %6 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6863
  %cur_init_section = getelementptr inbounds %struct.playlist, %struct.playlist* %6, i32 0, i32 24, !dbg !6864
  %7 = load %struct.segment*, %struct.segment** %cur_init_section, align 8, !dbg !6864
  %cmp = icmp eq %struct.segment* %5, %7, !dbg !6865
  br i1 %cmp, label %if.then, label %if.end, !dbg !6866

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6867
  br label %return, !dbg !6867

if.end:                                           ; preds = %entry
  %8 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6868
  %cur_init_section1 = getelementptr inbounds %struct.playlist, %struct.playlist* %8, i32 0, i32 24, !dbg !6869
  store %struct.segment* null, %struct.segment** %cur_init_section1, align 8, !dbg !6870
  %9 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !6871
  %init_section2 = getelementptr inbounds %struct.segment, %struct.segment* %9, i32 0, i32 7, !dbg !6873
  %10 = load %struct.segment*, %struct.segment** %init_section2, align 8, !dbg !6873
  %tobool = icmp ne %struct.segment* %10, null, !dbg !6871
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !6874

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6875
  br label %return, !dbg !6875

if.end4:                                          ; preds = %if.end
  %11 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !6876
  %12 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6877
  %13 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !6878
  %init_section5 = getelementptr inbounds %struct.segment, %struct.segment* %13, i32 0, i32 7, !dbg !6879
  %14 = load %struct.segment*, %struct.segment** %init_section5, align 8, !dbg !6879
  %15 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6880
  %input = getelementptr inbounds %struct.playlist, %struct.playlist* %15, i32 0, i32 3, !dbg !6881
  %call = call i32 @open_input(%struct.HLSContext* %11, %struct.playlist* %12, %struct.segment* %14, %struct.AVIOContext** %input), !dbg !6882
  store i32 %call, i32* %ret, align 4, !dbg !6883
  %16 = load i32, i32* %ret, align 4, !dbg !6884
  %cmp6 = icmp slt i32 %16, 0, !dbg !6886
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !6887

if.then7:                                         ; preds = %if.end4
  %17 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6888
  %parent8 = getelementptr inbounds %struct.playlist, %struct.playlist* %17, i32 0, i32 7, !dbg !6890
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent8, align 8, !dbg !6890
  %19 = bitcast %struct.AVFormatContext* %18 to i8*, !dbg !6888
  %20 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6891
  %index = getelementptr inbounds %struct.playlist, %struct.playlist* %20, i32 0, i32 8, !dbg !6892
  %21 = load i32, i32* %index, align 8, !dbg !6892
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 24, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.84, i32 0, i32 0), i32 %21), !dbg !6893
  %22 = load i32, i32* %ret, align 4, !dbg !6894
  store i32 %22, i32* %retval, align 4, !dbg !6895
  br label %return, !dbg !6895

if.end9:                                          ; preds = %if.end4
  %23 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !6896
  %init_section10 = getelementptr inbounds %struct.segment, %struct.segment* %23, i32 0, i32 7, !dbg !6898
  %24 = load %struct.segment*, %struct.segment** %init_section10, align 8, !dbg !6898
  %size = getelementptr inbounds %struct.segment, %struct.segment* %24, i32 0, i32 2, !dbg !6899
  %25 = load i64, i64* %size, align 8, !dbg !6899
  %cmp11 = icmp sge i64 %25, 0, !dbg !6900
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !6901

if.then12:                                        ; preds = %if.end9
  %26 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !6902
  %init_section13 = getelementptr inbounds %struct.segment, %struct.segment* %26, i32 0, i32 7, !dbg !6903
  %27 = load %struct.segment*, %struct.segment** %init_section13, align 8, !dbg !6903
  %size14 = getelementptr inbounds %struct.segment, %struct.segment* %27, i32 0, i32 2, !dbg !6904
  %28 = load i64, i64* %size14, align 8, !dbg !6904
  store i64 %28, i64* %sec_size, align 8, !dbg !6905
  br label %if.end21, !dbg !6906

if.else:                                          ; preds = %if.end9
  %29 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6907
  %input15 = getelementptr inbounds %struct.playlist, %struct.playlist* %29, i32 0, i32 3, !dbg !6909
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %input15, align 8, !dbg !6909
  %call16 = call i64 @avio_size(%struct.AVIOContext* %30), !dbg !6910
  store i64 %call16, i64* %urlsize, align 8, !dbg !6911
  %cmp17 = icmp sge i64 %call16, 0, !dbg !6912
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !6913

if.then18:                                        ; preds = %if.else
  %31 = load i64, i64* %urlsize, align 8, !dbg !6914
  store i64 %31, i64* %sec_size, align 8, !dbg !6915
  br label %if.end20, !dbg !6916

if.else19:                                        ; preds = %if.else
  store i64 1048576, i64* %sec_size, align 8, !dbg !6917
  br label %if.end20

if.end20:                                         ; preds = %if.else19, %if.then18
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then12
  %32 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6918
  %parent22 = getelementptr inbounds %struct.playlist, %struct.playlist* %32, i32 0, i32 7, !dbg !6919
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent22, align 8, !dbg !6919
  %34 = bitcast %struct.AVFormatContext* %33 to i8*, !dbg !6918
  %35 = load i64, i64* %sec_size, align 8, !dbg !6920
  call void (i8*, i32, i8*, ...) @av_log(i8* %34, i32 48, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.85, i32 0, i32 0), i64 %35), !dbg !6921
  %36 = load i64, i64* %sec_size, align 8, !dbg !6922
  %cmp23 = icmp sgt i64 %36, 1048576, !dbg !6923
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !6924

cond.true:                                        ; preds = %if.end21
  br label %cond.end, !dbg !6925

cond.false:                                       ; preds = %if.end21
  %37 = load i64, i64* %sec_size, align 8, !dbg !6927
  br label %cond.end, !dbg !6929

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 1048576, %cond.true ], [ %37, %cond.false ], !dbg !6930
  store i64 %cond, i64* %sec_size, align 8, !dbg !6932
  %38 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6933
  %init_sec_buf = getelementptr inbounds %struct.playlist, %struct.playlist* %38, i32 0, i32 25, !dbg !6934
  %39 = bitcast i8** %init_sec_buf to i8*, !dbg !6935
  %40 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6936
  %init_sec_buf_size = getelementptr inbounds %struct.playlist, %struct.playlist* %40, i32 0, i32 26, !dbg !6937
  %41 = load i64, i64* %sec_size, align 8, !dbg !6938
  call void @av_fast_malloc(i8* %39, i32* %init_sec_buf_size, i64 %41), !dbg !6939
  %42 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6940
  %43 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !6941
  %init_section24 = getelementptr inbounds %struct.segment, %struct.segment* %43, i32 0, i32 7, !dbg !6942
  %44 = load %struct.segment*, %struct.segment** %init_section24, align 8, !dbg !6942
  %45 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6943
  %init_sec_buf25 = getelementptr inbounds %struct.playlist, %struct.playlist* %45, i32 0, i32 25, !dbg !6944
  %46 = load i8*, i8** %init_sec_buf25, align 8, !dbg !6944
  %47 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6945
  %init_sec_buf_size26 = getelementptr inbounds %struct.playlist, %struct.playlist* %47, i32 0, i32 26, !dbg !6946
  %48 = load i32, i32* %init_sec_buf_size26, align 8, !dbg !6946
  %call27 = call i32 @read_from_url(%struct.playlist* %42, %struct.segment* %44, i8* %46, i32 %48), !dbg !6947
  store i32 %call27, i32* %ret, align 4, !dbg !6948
  %49 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6949
  %parent28 = getelementptr inbounds %struct.playlist, %struct.playlist* %49, i32 0, i32 7, !dbg !6950
  %50 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent28, align 8, !dbg !6950
  %51 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6951
  %input29 = getelementptr inbounds %struct.playlist, %struct.playlist* %51, i32 0, i32 3, !dbg !6952
  call void @ff_format_io_close(%struct.AVFormatContext* %50, %struct.AVIOContext** %input29), !dbg !6953
  %52 = load i32, i32* %ret, align 4, !dbg !6954
  %cmp30 = icmp slt i32 %52, 0, !dbg !6956
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !6957

if.then31:                                        ; preds = %cond.end
  %53 = load i32, i32* %ret, align 4, !dbg !6958
  store i32 %53, i32* %retval, align 4, !dbg !6959
  br label %return, !dbg !6959

if.end32:                                         ; preds = %cond.end
  %54 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !6960
  %init_section33 = getelementptr inbounds %struct.segment, %struct.segment* %54, i32 0, i32 7, !dbg !6961
  %55 = load %struct.segment*, %struct.segment** %init_section33, align 8, !dbg !6961
  %56 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6962
  %cur_init_section34 = getelementptr inbounds %struct.playlist, %struct.playlist* %56, i32 0, i32 24, !dbg !6963
  store %struct.segment* %55, %struct.segment** %cur_init_section34, align 8, !dbg !6964
  %57 = load i32, i32* %ret, align 4, !dbg !6965
  %58 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6966
  %init_sec_data_len = getelementptr inbounds %struct.playlist, %struct.playlist* %58, i32 0, i32 27, !dbg !6967
  store i32 %57, i32* %init_sec_data_len, align 4, !dbg !6968
  %59 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6969
  %init_sec_buf_read_offset = getelementptr inbounds %struct.playlist, %struct.playlist* %59, i32 0, i32 28, !dbg !6970
  store i32 0, i32* %init_sec_buf_read_offset, align 8, !dbg !6971
  %60 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !6972
  %is_id3_timestamped = getelementptr inbounds %struct.playlist, %struct.playlist* %60, i32 0, i32 31, !dbg !6973
  store i32 0, i32* %is_id3_timestamped, align 4, !dbg !6974
  store i32 0, i32* %retval, align 4, !dbg !6975
  br label %return, !dbg !6975

return:                                           ; preds = %if.end32, %if.then31, %if.then7, %if.then3, %if.then
  %61 = load i32, i32* %retval, align 4, !dbg !6976
  ret i32 %61, !dbg !6976
}

; Function Attrs: nounwind uwtable
define internal i32 @open_input(%struct.HLSContext* %c, %struct.playlist* %pls, %struct.segment* %seg, %struct.AVIOContext** %in) #0 !dbg !6977 {
entry:
  %c.addr = alloca %struct.HLSContext*, align 8
  %pls.addr = alloca %struct.playlist*, align 8
  %seg.addr = alloca %struct.segment*, align 8
  %in.addr = alloca %struct.AVIOContext**, align 8
  %opts = alloca %struct.AVDictionary*, align 8
  %ret = alloca i32, align 4
  %is_http = alloca i32, align 4
  %iv = alloca [33 x i8], align 16
  %key = alloca [33 x i8], align 16
  %url16 = alloca [4096 x i8], align 16
  %pb = alloca %struct.AVIOContext*, align 8
  %seekret = alloca i64, align 8
  store %struct.HLSContext* %c, %struct.HLSContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c.addr, metadata !6980, metadata !2357), !dbg !6981
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !6982, metadata !2357), !dbg !6983
  store %struct.segment* %seg, %struct.segment** %seg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.segment** %seg.addr, metadata !6984, metadata !2357), !dbg !6985
  store %struct.AVIOContext** %in, %struct.AVIOContext*** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext*** %in.addr, metadata !6986, metadata !2357), !dbg !6987
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %opts, metadata !6988, metadata !2357), !dbg !6989
  store %struct.AVDictionary* null, %struct.AVDictionary** %opts, align 8, !dbg !6989
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6990, metadata !2357), !dbg !6991
  call void @llvm.dbg.declare(metadata i32* %is_http, metadata !6992, metadata !2357), !dbg !6993
  store i32 0, i32* %is_http, align 4, !dbg !6993
  %0 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !6994
  %http_persistent = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %0, i32 0, i32 18, !dbg !6996
  %1 = load i32, i32* %http_persistent, align 4, !dbg !6996
  %tobool = icmp ne i32 %1, 0, !dbg !6994
  br i1 %tobool, label %if.then, label %if.end, !dbg !6997

if.then:                                          ; preds = %entry
  %call = call i32 @av_dict_set(%struct.AVDictionary** %opts, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i32 0, i32 0), i32 0), !dbg !6998
  br label %if.end, !dbg !6998

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !6999
  %size = getelementptr inbounds %struct.segment, %struct.segment* %2, i32 0, i32 2, !dbg !7001
  %3 = load i64, i64* %size, align 8, !dbg !7001
  %cmp = icmp sge i64 %3, 0, !dbg !7002
  br i1 %cmp, label %if.then1, label %if.end6, !dbg !7003

if.then1:                                         ; preds = %if.end
  %4 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7004
  %url_offset = getelementptr inbounds %struct.segment, %struct.segment* %4, i32 0, i32 1, !dbg !7006
  %5 = load i64, i64* %url_offset, align 8, !dbg !7006
  %call2 = call i32 @av_dict_set_int(%struct.AVDictionary** %opts, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), i64 %5, i32 0), !dbg !7007
  %6 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7008
  %url_offset3 = getelementptr inbounds %struct.segment, %struct.segment* %6, i32 0, i32 1, !dbg !7009
  %7 = load i64, i64* %url_offset3, align 8, !dbg !7009
  %8 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7010
  %size4 = getelementptr inbounds %struct.segment, %struct.segment* %8, i32 0, i32 2, !dbg !7011
  %9 = load i64, i64* %size4, align 8, !dbg !7011
  %add = add nsw i64 %7, %9, !dbg !7012
  %call5 = call i32 @av_dict_set_int(%struct.AVDictionary** %opts, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.87, i32 0, i32 0), i64 %add, i32 0), !dbg !7013
  br label %if.end6, !dbg !7014

if.end6:                                          ; preds = %if.then1, %if.end
  %10 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7015
  %parent = getelementptr inbounds %struct.playlist, %struct.playlist* %10, i32 0, i32 7, !dbg !7016
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent, align 8, !dbg !7016
  %12 = bitcast %struct.AVFormatContext* %11 to i8*, !dbg !7015
  %13 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7017
  %url = getelementptr inbounds %struct.segment, %struct.segment* %13, i32 0, i32 3, !dbg !7018
  %14 = load i8*, i8** %url, align 8, !dbg !7018
  %15 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7019
  %url_offset7 = getelementptr inbounds %struct.segment, %struct.segment* %15, i32 0, i32 1, !dbg !7020
  %16 = load i64, i64* %url_offset7, align 8, !dbg !7020
  %17 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7021
  %index = getelementptr inbounds %struct.playlist, %struct.playlist* %17, i32 0, i32 8, !dbg !7022
  %18 = load i32, i32* %index, align 8, !dbg !7022
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 40, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.88, i32 0, i32 0), i8* %14, i64 %16, i32 %18), !dbg !7023
  %19 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7024
  %key_type = getelementptr inbounds %struct.segment, %struct.segment* %19, i32 0, i32 5, !dbg !7026
  %20 = load i32, i32* %key_type, align 8, !dbg !7026
  %cmp8 = icmp eq i32 %20, 0, !dbg !7027
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !7028

if.then9:                                         ; preds = %if.end6
  %21 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7029
  %parent10 = getelementptr inbounds %struct.playlist, %struct.playlist* %21, i32 0, i32 7, !dbg !7031
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent10, align 8, !dbg !7031
  %23 = load %struct.AVIOContext**, %struct.AVIOContext*** %in.addr, align 8, !dbg !7032
  %24 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7033
  %url11 = getelementptr inbounds %struct.segment, %struct.segment* %24, i32 0, i32 3, !dbg !7034
  %25 = load i8*, i8** %url11, align 8, !dbg !7034
  %26 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !7035
  %avio_opts = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %26, i32 0, i32 14, !dbg !7036
  %27 = load %struct.AVDictionary*, %struct.AVDictionary** %avio_opts, align 8, !dbg !7036
  %28 = load %struct.AVDictionary*, %struct.AVDictionary** %opts, align 8, !dbg !7037
  %call12 = call i32 @open_url(%struct.AVFormatContext* %22, %struct.AVIOContext** %23, i8* %25, %struct.AVDictionary* %27, %struct.AVDictionary* %28, i32* %is_http), !dbg !7038
  store i32 %call12, i32* %ret, align 4, !dbg !7039
  br label %if.end86, !dbg !7040

if.else:                                          ; preds = %if.end6
  %29 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7041
  %key_type13 = getelementptr inbounds %struct.segment, %struct.segment* %29, i32 0, i32 5, !dbg !7044
  %30 = load i32, i32* %key_type13, align 8, !dbg !7044
  %cmp14 = icmp eq i32 %30, 1, !dbg !7045
  br i1 %cmp14, label %if.then15, label %if.else77, !dbg !7041

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata [33 x i8]* %iv, metadata !7046, metadata !2357), !dbg !7051
  call void @llvm.dbg.declare(metadata [33 x i8]* %key, metadata !7052, metadata !2357), !dbg !7053
  call void @llvm.dbg.declare(metadata [4096 x i8]* %url16, metadata !7054, metadata !2357), !dbg !7055
  %31 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7056
  %key17 = getelementptr inbounds %struct.segment, %struct.segment* %31, i32 0, i32 4, !dbg !7058
  %32 = load i8*, i8** %key17, align 8, !dbg !7058
  %33 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7059
  %key_url = getelementptr inbounds %struct.playlist, %struct.playlist* %33, i32 0, i32 29, !dbg !7060
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %key_url, i32 0, i32 0, !dbg !7059
  %call18 = call i32 @strcmp(i8* %32, i8* %arraydecay) #10, !dbg !7061
  %tobool19 = icmp ne i32 %call18, 0, !dbg !7061
  br i1 %tobool19, label %if.then20, label %if.end43, !dbg !7062

if.then20:                                        ; preds = %if.then15
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !7063, metadata !2357), !dbg !7065
  store %struct.AVIOContext* null, %struct.AVIOContext** %pb, align 8, !dbg !7065
  %34 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7066
  %parent21 = getelementptr inbounds %struct.playlist, %struct.playlist* %34, i32 0, i32 7, !dbg !7068
  %35 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent21, align 8, !dbg !7068
  %36 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7069
  %key22 = getelementptr inbounds %struct.segment, %struct.segment* %36, i32 0, i32 4, !dbg !7070
  %37 = load i8*, i8** %key22, align 8, !dbg !7070
  %38 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !7071
  %avio_opts23 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %38, i32 0, i32 14, !dbg !7072
  %39 = load %struct.AVDictionary*, %struct.AVDictionary** %avio_opts23, align 8, !dbg !7072
  %40 = load %struct.AVDictionary*, %struct.AVDictionary** %opts, align 8, !dbg !7073
  %call24 = call i32 @open_url(%struct.AVFormatContext* %35, %struct.AVIOContext** %pb, i8* %37, %struct.AVDictionary* %39, %struct.AVDictionary* %40, i32* null), !dbg !7074
  %cmp25 = icmp eq i32 %call24, 0, !dbg !7075
  br i1 %cmp25, label %if.then26, label %if.else36, !dbg !7076

if.then26:                                        ; preds = %if.then20
  %41 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7077
  %42 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7079
  %key27 = getelementptr inbounds %struct.playlist, %struct.playlist* %42, i32 0, i32 30, !dbg !7080
  %arraydecay28 = getelementptr inbounds [16 x i8], [16 x i8]* %key27, i32 0, i32 0, !dbg !7079
  %call29 = call i32 @avio_read(%struct.AVIOContext* %41, i8* %arraydecay28, i32 16), !dbg !7081
  store i32 %call29, i32* %ret, align 4, !dbg !7082
  %43 = load i32, i32* %ret, align 4, !dbg !7083
  %conv = sext i32 %43 to i64, !dbg !7083
  %cmp30 = icmp ne i64 %conv, 16, !dbg !7085
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !7086

if.then32:                                        ; preds = %if.then26
  %44 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7087
  %key33 = getelementptr inbounds %struct.segment, %struct.segment* %44, i32 0, i32 4, !dbg !7089
  %45 = load i8*, i8** %key33, align 8, !dbg !7089
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.89, i32 0, i32 0), i8* %45), !dbg !7090
  br label %if.end34, !dbg !7091

if.end34:                                         ; preds = %if.then32, %if.then26
  %46 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7092
  %parent35 = getelementptr inbounds %struct.playlist, %struct.playlist* %46, i32 0, i32 7, !dbg !7093
  %47 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent35, align 8, !dbg !7093
  call void @ff_format_io_close(%struct.AVFormatContext* %47, %struct.AVIOContext** %pb), !dbg !7094
  br label %if.end38, !dbg !7095

if.else36:                                        ; preds = %if.then20
  %48 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7096
  %key37 = getelementptr inbounds %struct.segment, %struct.segment* %48, i32 0, i32 4, !dbg !7098
  %49 = load i8*, i8** %key37, align 8, !dbg !7098
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.90, i32 0, i32 0), i8* %49), !dbg !7099
  br label %if.end38

if.end38:                                         ; preds = %if.else36, %if.end34
  %50 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7100
  %key_url39 = getelementptr inbounds %struct.playlist, %struct.playlist* %50, i32 0, i32 29, !dbg !7101
  %arraydecay40 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key_url39, i32 0, i32 0, !dbg !7100
  %51 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7102
  %key41 = getelementptr inbounds %struct.segment, %struct.segment* %51, i32 0, i32 4, !dbg !7103
  %52 = load i8*, i8** %key41, align 8, !dbg !7103
  %call42 = call i64 @av_strlcpy(i8* %arraydecay40, i8* %52, i64 4096), !dbg !7104
  br label %if.end43, !dbg !7105

if.end43:                                         ; preds = %if.end38, %if.then15
  %arraydecay44 = getelementptr inbounds [33 x i8], [33 x i8]* %iv, i32 0, i32 0, !dbg !7106
  %53 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7107
  %iv45 = getelementptr inbounds %struct.segment, %struct.segment* %53, i32 0, i32 6, !dbg !7108
  %arraydecay46 = getelementptr inbounds [16 x i8], [16 x i8]* %iv45, i32 0, i32 0, !dbg !7107
  %call47 = call i8* @ff_data_to_hex(i8* %arraydecay44, i8* %arraydecay46, i32 16, i32 0), !dbg !7109
  %arraydecay48 = getelementptr inbounds [33 x i8], [33 x i8]* %key, i32 0, i32 0, !dbg !7110
  %54 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7111
  %key49 = getelementptr inbounds %struct.playlist, %struct.playlist* %54, i32 0, i32 30, !dbg !7112
  %arraydecay50 = getelementptr inbounds [16 x i8], [16 x i8]* %key49, i32 0, i32 0, !dbg !7111
  %call51 = call i8* @ff_data_to_hex(i8* %arraydecay48, i8* %arraydecay50, i32 16, i32 0), !dbg !7113
  %arrayidx = getelementptr inbounds [33 x i8], [33 x i8]* %key, i64 0, i64 32, !dbg !7114
  store i8 0, i8* %arrayidx, align 16, !dbg !7115
  %arrayidx52 = getelementptr inbounds [33 x i8], [33 x i8]* %iv, i64 0, i64 32, !dbg !7116
  store i8 0, i8* %arrayidx52, align 16, !dbg !7117
  %55 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7118
  %url53 = getelementptr inbounds %struct.segment, %struct.segment* %55, i32 0, i32 3, !dbg !7120
  %56 = load i8*, i8** %url53, align 8, !dbg !7120
  %call54 = call i8* @strstr(i8* %56, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.91, i32 0, i32 0)) #10, !dbg !7121
  %tobool55 = icmp ne i8* %call54, null, !dbg !7121
  br i1 %tobool55, label %if.then56, label %if.else60, !dbg !7122

if.then56:                                        ; preds = %if.end43
  %arraydecay57 = getelementptr inbounds [4096 x i8], [4096 x i8]* %url16, i32 0, i32 0, !dbg !7123
  %57 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7124
  %url58 = getelementptr inbounds %struct.segment, %struct.segment* %57, i32 0, i32 3, !dbg !7125
  %58 = load i8*, i8** %url58, align 8, !dbg !7125
  %call59 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay57, i64 4096, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.92, i32 0, i32 0), i8* %58) #11, !dbg !7126
  br label %if.end64, !dbg !7126

if.else60:                                        ; preds = %if.end43
  %arraydecay61 = getelementptr inbounds [4096 x i8], [4096 x i8]* %url16, i32 0, i32 0, !dbg !7127
  %59 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7128
  %url62 = getelementptr inbounds %struct.segment, %struct.segment* %59, i32 0, i32 3, !dbg !7129
  %60 = load i8*, i8** %url62, align 8, !dbg !7129
  %call63 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay61, i64 4096, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.93, i32 0, i32 0), i8* %60) #11, !dbg !7130
  br label %if.end64

if.end64:                                         ; preds = %if.else60, %if.then56
  %arraydecay65 = getelementptr inbounds [33 x i8], [33 x i8]* %key, i32 0, i32 0, !dbg !7131
  %call66 = call i32 @av_dict_set(%struct.AVDictionary** %opts, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i32 0, i32 0), i8* %arraydecay65, i32 0), !dbg !7132
  %arraydecay67 = getelementptr inbounds [33 x i8], [33 x i8]* %iv, i32 0, i32 0, !dbg !7133
  %call68 = call i32 @av_dict_set(%struct.AVDictionary** %opts, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.95, i32 0, i32 0), i8* %arraydecay67, i32 0), !dbg !7134
  %61 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7135
  %parent69 = getelementptr inbounds %struct.playlist, %struct.playlist* %61, i32 0, i32 7, !dbg !7136
  %62 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent69, align 8, !dbg !7136
  %63 = load %struct.AVIOContext**, %struct.AVIOContext*** %in.addr, align 8, !dbg !7137
  %arraydecay70 = getelementptr inbounds [4096 x i8], [4096 x i8]* %url16, i32 0, i32 0, !dbg !7138
  %64 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !7139
  %avio_opts71 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %64, i32 0, i32 14, !dbg !7140
  %65 = load %struct.AVDictionary*, %struct.AVDictionary** %avio_opts71, align 8, !dbg !7140
  %66 = load %struct.AVDictionary*, %struct.AVDictionary** %opts, align 8, !dbg !7141
  %call72 = call i32 @open_url(%struct.AVFormatContext* %62, %struct.AVIOContext** %63, i8* %arraydecay70, %struct.AVDictionary* %65, %struct.AVDictionary* %66, i32* %is_http), !dbg !7142
  store i32 %call72, i32* %ret, align 4, !dbg !7143
  %67 = load i32, i32* %ret, align 4, !dbg !7144
  %cmp73 = icmp slt i32 %67, 0, !dbg !7146
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !7147

if.then75:                                        ; preds = %if.end64
  br label %cleanup, !dbg !7148

if.end76:                                         ; preds = %if.end64
  store i32 0, i32* %ret, align 4, !dbg !7150
  br label %if.end85, !dbg !7151

if.else77:                                        ; preds = %if.else
  %68 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7152
  %key_type78 = getelementptr inbounds %struct.segment, %struct.segment* %68, i32 0, i32 5, !dbg !7155
  %69 = load i32, i32* %key_type78, align 8, !dbg !7155
  %cmp79 = icmp eq i32 %69, 2, !dbg !7156
  br i1 %cmp79, label %if.then81, label %if.else83, !dbg !7152

if.then81:                                        ; preds = %if.else77
  %70 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7157
  %parent82 = getelementptr inbounds %struct.playlist, %struct.playlist* %70, i32 0, i32 7, !dbg !7159
  %71 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent82, align 8, !dbg !7159
  %72 = bitcast %struct.AVFormatContext* %71 to i8*, !dbg !7157
  call void (i8*, i32, i8*, ...) @av_log(i8* %72, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.96, i32 0, i32 0)), !dbg !7160
  store i32 -1163346256, i32* %ret, align 4, !dbg !7161
  br label %if.end84, !dbg !7162

if.else83:                                        ; preds = %if.else77
  store i32 -38, i32* %ret, align 4, !dbg !7163
  br label %if.end84

if.end84:                                         ; preds = %if.else83, %if.then81
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end76
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then9
  %73 = load i32, i32* %ret, align 4, !dbg !7164
  %cmp87 = icmp eq i32 %73, 0, !dbg !7166
  br i1 %cmp87, label %land.lhs.true, label %if.end109, !dbg !7167

land.lhs.true:                                    ; preds = %if.end86
  %74 = load i32, i32* %is_http, align 4, !dbg !7168
  %tobool89 = icmp ne i32 %74, 0, !dbg !7168
  br i1 %tobool89, label %if.end109, label %land.lhs.true90, !dbg !7170

land.lhs.true90:                                  ; preds = %land.lhs.true
  %75 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7171
  %key_type91 = getelementptr inbounds %struct.segment, %struct.segment* %75, i32 0, i32 5, !dbg !7173
  %76 = load i32, i32* %key_type91, align 8, !dbg !7173
  %cmp92 = icmp eq i32 %76, 0, !dbg !7174
  br i1 %cmp92, label %land.lhs.true94, label %if.end109, !dbg !7175

land.lhs.true94:                                  ; preds = %land.lhs.true90
  %77 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7176
  %url_offset95 = getelementptr inbounds %struct.segment, %struct.segment* %77, i32 0, i32 1, !dbg !7178
  %78 = load i64, i64* %url_offset95, align 8, !dbg !7178
  %tobool96 = icmp ne i64 %78, 0, !dbg !7176
  br i1 %tobool96, label %if.then97, label %if.end109, !dbg !7179

if.then97:                                        ; preds = %land.lhs.true94
  call void @llvm.dbg.declare(metadata i64* %seekret, metadata !7180, metadata !2357), !dbg !7182
  %79 = load %struct.AVIOContext**, %struct.AVIOContext*** %in.addr, align 8, !dbg !7183
  %80 = load %struct.AVIOContext*, %struct.AVIOContext** %79, align 8, !dbg !7184
  %81 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7185
  %url_offset98 = getelementptr inbounds %struct.segment, %struct.segment* %81, i32 0, i32 1, !dbg !7186
  %82 = load i64, i64* %url_offset98, align 8, !dbg !7186
  %call99 = call i64 @avio_seek(%struct.AVIOContext* %80, i64 %82, i32 0), !dbg !7187
  store i64 %call99, i64* %seekret, align 8, !dbg !7182
  %83 = load i64, i64* %seekret, align 8, !dbg !7188
  %cmp100 = icmp slt i64 %83, 0, !dbg !7190
  br i1 %cmp100, label %if.then102, label %if.end108, !dbg !7191

if.then102:                                       ; preds = %if.then97
  %84 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7192
  %parent103 = getelementptr inbounds %struct.playlist, %struct.playlist* %84, i32 0, i32 7, !dbg !7194
  %85 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent103, align 8, !dbg !7194
  %86 = bitcast %struct.AVFormatContext* %85 to i8*, !dbg !7192
  %87 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7195
  %url_offset104 = getelementptr inbounds %struct.segment, %struct.segment* %87, i32 0, i32 1, !dbg !7196
  %88 = load i64, i64* %url_offset104, align 8, !dbg !7196
  %89 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7197
  %url105 = getelementptr inbounds %struct.segment, %struct.segment* %89, i32 0, i32 3, !dbg !7198
  %90 = load i8*, i8** %url105, align 8, !dbg !7198
  call void (i8*, i32, i8*, ...) @av_log(i8* %86, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.97, i32 0, i32 0), i64 %88, i8* %90), !dbg !7199
  %91 = load i64, i64* %seekret, align 8, !dbg !7200
  %conv106 = trunc i64 %91 to i32, !dbg !7200
  store i32 %conv106, i32* %ret, align 4, !dbg !7201
  %92 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7202
  %parent107 = getelementptr inbounds %struct.playlist, %struct.playlist* %92, i32 0, i32 7, !dbg !7203
  %93 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent107, align 8, !dbg !7203
  %94 = load %struct.AVIOContext**, %struct.AVIOContext*** %in.addr, align 8, !dbg !7204
  call void @ff_format_io_close(%struct.AVFormatContext* %93, %struct.AVIOContext** %94), !dbg !7205
  br label %if.end108, !dbg !7206

if.end108:                                        ; preds = %if.then102, %if.then97
  br label %if.end109, !dbg !7207

if.end109:                                        ; preds = %if.end108, %land.lhs.true94, %land.lhs.true90, %land.lhs.true, %if.end86
  br label %cleanup, !dbg !7208

cleanup:                                          ; preds = %if.end109, %if.then75
  call void @av_dict_free(%struct.AVDictionary** %opts), !dbg !7210
  %95 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7211
  %cur_seg_offset = getelementptr inbounds %struct.playlist, %struct.playlist* %95, i32 0, i32 22, !dbg !7212
  store i64 0, i64* %cur_seg_offset, align 8, !dbg !7213
  %96 = load i32, i32* %ret, align 4, !dbg !7214
  ret i32 %96, !dbg !7215
}

; Function Attrs: nounwind uwtable
define internal %struct.segment* @next_segment(%struct.playlist* %pls) #0 !dbg !7216 {
entry:
  %retval = alloca %struct.segment*, align 8
  %pls.addr = alloca %struct.playlist*, align 8
  %n = alloca i32, align 4
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !7217, metadata !2357), !dbg !7218
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7219, metadata !2357), !dbg !7220
  %0 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7221
  %cur_seq_no = getelementptr inbounds %struct.playlist, %struct.playlist* %0, i32 0, i32 21, !dbg !7222
  %1 = load i32, i32* %cur_seq_no, align 4, !dbg !7222
  %2 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7223
  %start_seq_no = getelementptr inbounds %struct.playlist, %struct.playlist* %2, i32 0, i32 17, !dbg !7224
  %3 = load i32, i32* %start_seq_no, align 8, !dbg !7224
  %sub = sub nsw i32 %1, %3, !dbg !7225
  %add = add nsw i32 %sub, 1, !dbg !7226
  store i32 %add, i32* %n, align 4, !dbg !7220
  %4 = load i32, i32* %n, align 4, !dbg !7227
  %5 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7229
  %n_segments = getelementptr inbounds %struct.playlist, %struct.playlist* %5, i32 0, i32 18, !dbg !7230
  %6 = load i32, i32* %n_segments, align 4, !dbg !7230
  %cmp = icmp sge i32 %4, %6, !dbg !7231
  br i1 %cmp, label %if.then, label %if.end, !dbg !7232

if.then:                                          ; preds = %entry
  store %struct.segment* null, %struct.segment** %retval, align 8, !dbg !7233
  br label %return, !dbg !7233

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %n, align 4, !dbg !7234
  %idxprom = sext i32 %7 to i64, !dbg !7235
  %8 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7235
  %segments = getelementptr inbounds %struct.playlist, %struct.playlist* %8, i32 0, i32 19, !dbg !7236
  %9 = load %struct.segment**, %struct.segment*** %segments, align 8, !dbg !7236
  %arrayidx = getelementptr inbounds %struct.segment*, %struct.segment** %9, i64 %idxprom, !dbg !7235
  %10 = load %struct.segment*, %struct.segment** %arrayidx, align 8, !dbg !7235
  store %struct.segment* %10, %struct.segment** %retval, align 8, !dbg !7237
  br label %return, !dbg !7237

return:                                           ; preds = %if.end, %if.then
  %11 = load %struct.segment*, %struct.segment** %retval, align 8, !dbg !7238
  ret %struct.segment* %11, !dbg !7238
}

; Function Attrs: nounwind uwtable
define internal i32 @read_from_url(%struct.playlist* %pls, %struct.segment* %seg, i8* %buf, i32 %buf_size) #0 !dbg !7239 {
entry:
  %pls.addr = alloca %struct.playlist*, align 8
  %seg.addr = alloca %struct.segment*, align 8
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !7242, metadata !2357), !dbg !7243
  store %struct.segment* %seg, %struct.segment** %seg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.segment** %seg.addr, metadata !7244, metadata !2357), !dbg !7245
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7246, metadata !2357), !dbg !7247
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !7248, metadata !2357), !dbg !7249
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7250, metadata !2357), !dbg !7251
  %0 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7252
  %size = getelementptr inbounds %struct.segment, %struct.segment* %0, i32 0, i32 2, !dbg !7254
  %1 = load i64, i64* %size, align 8, !dbg !7254
  %cmp = icmp sge i64 %1, 0, !dbg !7255
  br i1 %cmp, label %if.then, label %if.end, !dbg !7256

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %buf_size.addr, align 4, !dbg !7257
  %conv = sext i32 %2 to i64, !dbg !7258
  %3 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7259
  %size1 = getelementptr inbounds %struct.segment, %struct.segment* %3, i32 0, i32 2, !dbg !7260
  %4 = load i64, i64* %size1, align 8, !dbg !7260
  %5 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7261
  %cur_seg_offset = getelementptr inbounds %struct.playlist, %struct.playlist* %5, i32 0, i32 22, !dbg !7262
  %6 = load i64, i64* %cur_seg_offset, align 8, !dbg !7262
  %sub = sub nsw i64 %4, %6, !dbg !7263
  %cmp2 = icmp sgt i64 %conv, %sub, !dbg !7264
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !7258

cond.true:                                        ; preds = %if.then
  %7 = load %struct.segment*, %struct.segment** %seg.addr, align 8, !dbg !7265
  %size4 = getelementptr inbounds %struct.segment, %struct.segment* %7, i32 0, i32 2, !dbg !7267
  %8 = load i64, i64* %size4, align 8, !dbg !7267
  %9 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7268
  %cur_seg_offset5 = getelementptr inbounds %struct.playlist, %struct.playlist* %9, i32 0, i32 22, !dbg !7269
  %10 = load i64, i64* %cur_seg_offset5, align 8, !dbg !7269
  %sub6 = sub nsw i64 %8, %10, !dbg !7270
  br label %cond.end, !dbg !7271

cond.false:                                       ; preds = %if.then
  %11 = load i32, i32* %buf_size.addr, align 4, !dbg !7272
  %conv7 = sext i32 %11 to i64, !dbg !7274
  br label %cond.end, !dbg !7275

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub6, %cond.true ], [ %conv7, %cond.false ], !dbg !7276
  %conv8 = trunc i64 %cond to i32, !dbg !7278
  store i32 %conv8, i32* %buf_size.addr, align 4, !dbg !7279
  br label %if.end, !dbg !7280

if.end:                                           ; preds = %cond.end, %entry
  %12 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7281
  %input = getelementptr inbounds %struct.playlist, %struct.playlist* %12, i32 0, i32 3, !dbg !7282
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %input, align 8, !dbg !7282
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !7283
  %15 = load i32, i32* %buf_size.addr, align 4, !dbg !7284
  %call = call i32 @avio_read(%struct.AVIOContext* %13, i8* %14, i32 %15), !dbg !7285
  store i32 %call, i32* %ret, align 4, !dbg !7286
  %16 = load i32, i32* %ret, align 4, !dbg !7287
  %cmp9 = icmp sgt i32 %16, 0, !dbg !7289
  br i1 %cmp9, label %if.then11, label %if.end14, !dbg !7290

if.then11:                                        ; preds = %if.end
  %17 = load i32, i32* %ret, align 4, !dbg !7291
  %conv12 = sext i32 %17 to i64, !dbg !7291
  %18 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7292
  %cur_seg_offset13 = getelementptr inbounds %struct.playlist, %struct.playlist* %18, i32 0, i32 22, !dbg !7293
  %19 = load i64, i64* %cur_seg_offset13, align 8, !dbg !7294
  %add = add nsw i64 %19, %conv12, !dbg !7294
  store i64 %add, i64* %cur_seg_offset13, align 8, !dbg !7294
  br label %if.end14, !dbg !7292

if.end14:                                         ; preds = %if.then11, %if.end
  %20 = load i32, i32* %ret, align 4, !dbg !7295
  ret i32 %20, !dbg !7296
}

; Function Attrs: nounwind uwtable
define internal void @intercept_id3(%struct.playlist* %pls, i8* %buf, i32 %buf_size, i32* %len) #0 !dbg !7297 {
entry:
  %pls.addr = alloca %struct.playlist*, align 8
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i32, align 4
  %len.addr = alloca i32*, align 8
  %bytes = alloca i32, align 4
  %id3_buf_pos = alloca i32, align 4
  %fill_buf = alloca i32, align 4
  %seg = alloca %struct.segment*, align 8
  %maxsize = alloca i64, align 8
  %taglen = alloca i32, align 4
  %tag_got_bytes = alloca i32, align 4
  %remaining = alloca i32, align 4
  %id3ioctx = alloca %struct.AVIOContext, align 8
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !7300, metadata !2357), !dbg !7301
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7302, metadata !2357), !dbg !7303
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !7304, metadata !2357), !dbg !7305
  store i32* %len, i32** %len.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %len.addr, metadata !7306, metadata !2357), !dbg !7307
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !7308, metadata !2357), !dbg !7309
  call void @llvm.dbg.declare(metadata i32* %id3_buf_pos, metadata !7310, metadata !2357), !dbg !7311
  store i32 0, i32* %id3_buf_pos, align 4, !dbg !7311
  call void @llvm.dbg.declare(metadata i32* %fill_buf, metadata !7312, metadata !2357), !dbg !7313
  store i32 0, i32* %fill_buf, align 4, !dbg !7313
  call void @llvm.dbg.declare(metadata %struct.segment** %seg, metadata !7314, metadata !2357), !dbg !7315
  %0 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7316
  %call = call %struct.segment* @current_segment(%struct.playlist* %0), !dbg !7317
  store %struct.segment* %call, %struct.segment** %seg, align 8, !dbg !7315
  br label %while.body, !dbg !7318

while.body:                                       ; preds = %entry, %if.end64
  %1 = load i32*, i32** %len.addr, align 8, !dbg !7319
  %2 = load i32, i32* %1, align 4, !dbg !7322
  %cmp = icmp slt i32 %2, 10, !dbg !7323
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !7324

land.lhs.true:                                    ; preds = %while.body
  %3 = load i32, i32* %buf_size.addr, align 4, !dbg !7325
  %cmp1 = icmp sge i32 %3, 10, !dbg !7327
  br i1 %cmp1, label %if.then, label %if.end12, !dbg !7328

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7329
  %5 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !7331
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !7332
  %7 = load i32*, i32** %len.addr, align 8, !dbg !7333
  %8 = load i32, i32* %7, align 4, !dbg !7334
  %idx.ext = sext i32 %8 to i64, !dbg !7335
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !7335
  %9 = load i32*, i32** %len.addr, align 8, !dbg !7336
  %10 = load i32, i32* %9, align 4, !dbg !7337
  %sub = sub nsw i32 10, %10, !dbg !7338
  %call2 = call i32 @read_from_url(%struct.playlist* %4, %struct.segment* %5, i8* %add.ptr, i32 %sub), !dbg !7339
  store i32 %call2, i32* %bytes, align 4, !dbg !7340
  %11 = load i32, i32* %bytes, align 4, !dbg !7341
  %cmp3 = icmp sgt i32 %11, 0, !dbg !7343
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !7344

if.then4:                                         ; preds = %if.then
  %12 = load i32, i32* %bytes, align 4, !dbg !7345
  %13 = load i32*, i32** %len.addr, align 8, !dbg !7348
  %14 = load i32, i32* %13, align 4, !dbg !7349
  %sub5 = sub nsw i32 10, %14, !dbg !7350
  %cmp6 = icmp eq i32 %12, %sub5, !dbg !7351
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !7352

if.then7:                                         ; preds = %if.then4
  store i32 1, i32* %fill_buf, align 4, !dbg !7353
  br label %if.end, !dbg !7354

if.end:                                           ; preds = %if.then7, %if.then4
  %15 = load i32, i32* %bytes, align 4, !dbg !7355
  %16 = load i32*, i32** %len.addr, align 8, !dbg !7356
  %17 = load i32, i32* %16, align 4, !dbg !7357
  %add = add nsw i32 %17, %15, !dbg !7357
  store i32 %add, i32* %16, align 4, !dbg !7357
  br label %if.end11, !dbg !7358

if.else:                                          ; preds = %if.then
  %18 = load i32*, i32** %len.addr, align 8, !dbg !7359
  %19 = load i32, i32* %18, align 4, !dbg !7362
  %cmp8 = icmp sle i32 %19, 0, !dbg !7363
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !7362

if.then9:                                         ; preds = %if.else
  %20 = load i32, i32* %bytes, align 4, !dbg !7364
  %21 = load i32*, i32** %len.addr, align 8, !dbg !7366
  store i32 %20, i32* %21, align 4, !dbg !7367
  store i32 0, i32* %fill_buf, align 4, !dbg !7368
  br label %if.end10, !dbg !7369

if.end10:                                         ; preds = %if.then9, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end
  br label %if.end12, !dbg !7370

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %while.body
  %22 = load i32*, i32** %len.addr, align 8, !dbg !7371
  %23 = load i32, i32* %22, align 4, !dbg !7373
  %cmp13 = icmp slt i32 %23, 10, !dbg !7374
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !7375

if.then14:                                        ; preds = %if.end12
  br label %while.end, !dbg !7376

if.end15:                                         ; preds = %if.end12
  %24 = load i8*, i8** %buf.addr, align 8, !dbg !7377
  %call16 = call i32 @ff_id3v2_match(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0)), !dbg !7379
  %tobool = icmp ne i32 %call16, 0, !dbg !7379
  br i1 %tobool, label %if.then17, label %if.else63, !dbg !7380

if.then17:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata i64* %maxsize, metadata !7381, metadata !2357), !dbg !7383
  %25 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !7384
  %size = getelementptr inbounds %struct.segment, %struct.segment* %25, i32 0, i32 2, !dbg !7385
  %26 = load i64, i64* %size, align 8, !dbg !7385
  %cmp18 = icmp sge i64 %26, 0, !dbg !7386
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !7384

cond.true:                                        ; preds = %if.then17
  %27 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !7387
  %size19 = getelementptr inbounds %struct.segment, %struct.segment* %27, i32 0, i32 2, !dbg !7389
  %28 = load i64, i64* %size19, align 8, !dbg !7389
  br label %cond.end, !dbg !7390

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !7391

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %28, %cond.true ], [ 1048576, %cond.false ], !dbg !7393
  store i64 %cond, i64* %maxsize, align 8, !dbg !7395
  call void @llvm.dbg.declare(metadata i32* %taglen, metadata !7396, metadata !2357), !dbg !7397
  %29 = load i8*, i8** %buf.addr, align 8, !dbg !7398
  %call20 = call i32 @ff_id3v2_tag_len(i8* %29), !dbg !7399
  store i32 %call20, i32* %taglen, align 4, !dbg !7397
  call void @llvm.dbg.declare(metadata i32* %tag_got_bytes, metadata !7400, metadata !2357), !dbg !7401
  %30 = load i32, i32* %taglen, align 4, !dbg !7402
  %31 = load i32*, i32** %len.addr, align 8, !dbg !7403
  %32 = load i32, i32* %31, align 4, !dbg !7404
  %cmp21 = icmp sgt i32 %30, %32, !dbg !7405
  br i1 %cmp21, label %cond.true22, label %cond.false23, !dbg !7406

cond.true22:                                      ; preds = %cond.end
  %33 = load i32*, i32** %len.addr, align 8, !dbg !7407
  %34 = load i32, i32* %33, align 4, !dbg !7408
  br label %cond.end24, !dbg !7409

cond.false23:                                     ; preds = %cond.end
  %35 = load i32, i32* %taglen, align 4, !dbg !7410
  br label %cond.end24, !dbg !7411

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i32 [ %34, %cond.true22 ], [ %35, %cond.false23 ], !dbg !7412
  store i32 %cond25, i32* %tag_got_bytes, align 4, !dbg !7413
  call void @llvm.dbg.declare(metadata i32* %remaining, metadata !7414, metadata !2357), !dbg !7415
  %36 = load i32, i32* %taglen, align 4, !dbg !7416
  %37 = load i32, i32* %tag_got_bytes, align 4, !dbg !7417
  %sub26 = sub nsw i32 %36, %37, !dbg !7418
  store i32 %sub26, i32* %remaining, align 4, !dbg !7415
  %38 = load i32, i32* %taglen, align 4, !dbg !7419
  %conv = sext i32 %38 to i64, !dbg !7419
  %39 = load i64, i64* %maxsize, align 8, !dbg !7421
  %cmp27 = icmp sgt i64 %conv, %39, !dbg !7422
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !7423

if.then29:                                        ; preds = %cond.end24
  %40 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7424
  %ctx = getelementptr inbounds %struct.playlist, %struct.playlist* %40, i32 0, i32 9, !dbg !7426
  %41 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !7426
  %42 = bitcast %struct.AVFormatContext* %41 to i8*, !dbg !7424
  %43 = load i32, i32* %taglen, align 4, !dbg !7427
  %44 = load i64, i64* %maxsize, align 8, !dbg !7428
  call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.104, i32 0, i32 0), i32 %43, i64 %44), !dbg !7429
  br label %while.end, !dbg !7430

if.end30:                                         ; preds = %cond.end24
  %45 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7431
  %id3_buf = getelementptr inbounds %struct.playlist, %struct.playlist* %45, i32 0, i32 34, !dbg !7432
  %46 = load i8*, i8** %id3_buf, align 8, !dbg !7432
  %47 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7433
  %id3_buf_size = getelementptr inbounds %struct.playlist, %struct.playlist* %47, i32 0, i32 35, !dbg !7434
  %48 = load i32, i32* %id3_buf_pos, align 4, !dbg !7435
  %49 = load i32, i32* %taglen, align 4, !dbg !7436
  %add31 = add nsw i32 %48, %49, !dbg !7437
  %conv32 = sext i32 %add31 to i64, !dbg !7435
  %call33 = call i8* @av_fast_realloc(i8* %46, i32* %id3_buf_size, i64 %conv32), !dbg !7438
  %50 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7439
  %id3_buf34 = getelementptr inbounds %struct.playlist, %struct.playlist* %50, i32 0, i32 34, !dbg !7440
  store i8* %call33, i8** %id3_buf34, align 8, !dbg !7441
  %51 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7442
  %id3_buf35 = getelementptr inbounds %struct.playlist, %struct.playlist* %51, i32 0, i32 34, !dbg !7444
  %52 = load i8*, i8** %id3_buf35, align 8, !dbg !7444
  %tobool36 = icmp ne i8* %52, null, !dbg !7442
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !7445

if.then37:                                        ; preds = %if.end30
  br label %while.end, !dbg !7446

if.end38:                                         ; preds = %if.end30
  %53 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7447
  %id3_buf39 = getelementptr inbounds %struct.playlist, %struct.playlist* %53, i32 0, i32 34, !dbg !7448
  %54 = load i8*, i8** %id3_buf39, align 8, !dbg !7448
  %55 = load i32, i32* %id3_buf_pos, align 4, !dbg !7449
  %idx.ext40 = sext i32 %55 to i64, !dbg !7450
  %add.ptr41 = getelementptr inbounds i8, i8* %54, i64 %idx.ext40, !dbg !7450
  %56 = load i8*, i8** %buf.addr, align 8, !dbg !7451
  %57 = load i32, i32* %tag_got_bytes, align 4, !dbg !7452
  %conv42 = sext i32 %57 to i64, !dbg !7452
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr41, i8* %56, i64 %conv42, i32 1, i1 false), !dbg !7453
  %58 = load i32, i32* %tag_got_bytes, align 4, !dbg !7454
  %59 = load i32, i32* %id3_buf_pos, align 4, !dbg !7455
  %add43 = add nsw i32 %59, %58, !dbg !7455
  store i32 %add43, i32* %id3_buf_pos, align 4, !dbg !7455
  %60 = load i32, i32* %tag_got_bytes, align 4, !dbg !7456
  %61 = load i32*, i32** %len.addr, align 8, !dbg !7457
  %62 = load i32, i32* %61, align 4, !dbg !7458
  %sub44 = sub nsw i32 %62, %60, !dbg !7458
  store i32 %sub44, i32* %61, align 4, !dbg !7458
  %63 = load i8*, i8** %buf.addr, align 8, !dbg !7459
  %64 = load i8*, i8** %buf.addr, align 8, !dbg !7460
  %65 = load i32, i32* %tag_got_bytes, align 4, !dbg !7461
  %idx.ext45 = sext i32 %65 to i64, !dbg !7462
  %add.ptr46 = getelementptr inbounds i8, i8* %64, i64 %idx.ext45, !dbg !7462
  %66 = load i32*, i32** %len.addr, align 8, !dbg !7463
  %67 = load i32, i32* %66, align 4, !dbg !7464
  %conv47 = sext i32 %67 to i64, !dbg !7464
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %63, i8* %add.ptr46, i64 %conv47, i32 1, i1 false), !dbg !7465
  %68 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7466
  %ctx48 = getelementptr inbounds %struct.playlist, %struct.playlist* %68, i32 0, i32 9, !dbg !7467
  %69 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx48, align 8, !dbg !7467
  %70 = bitcast %struct.AVFormatContext* %69 to i8*, !dbg !7466
  %71 = load i32, i32* %tag_got_bytes, align 4, !dbg !7468
  call void (i8*, i32, i8*, ...) @av_log(i8* %70, i32 48, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.105, i32 0, i32 0), i32 %71), !dbg !7469
  %72 = load i32, i32* %remaining, align 4, !dbg !7470
  %cmp49 = icmp sgt i32 %72, 0, !dbg !7472
  br i1 %cmp49, label %if.then51, label %if.end62, !dbg !7473

if.then51:                                        ; preds = %if.end38
  %73 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7474
  %74 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !7477
  %75 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7478
  %id3_buf52 = getelementptr inbounds %struct.playlist, %struct.playlist* %75, i32 0, i32 34, !dbg !7479
  %76 = load i8*, i8** %id3_buf52, align 8, !dbg !7479
  %77 = load i32, i32* %id3_buf_pos, align 4, !dbg !7480
  %idx.ext53 = sext i32 %77 to i64, !dbg !7481
  %add.ptr54 = getelementptr inbounds i8, i8* %76, i64 %idx.ext53, !dbg !7481
  %78 = load i32, i32* %remaining, align 4, !dbg !7482
  %call55 = call i32 @read_from_url(%struct.playlist* %73, %struct.segment* %74, i8* %add.ptr54, i32 %78), !dbg !7483
  %79 = load i32, i32* %remaining, align 4, !dbg !7484
  %cmp56 = icmp ne i32 %call55, %79, !dbg !7485
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !7486

if.then58:                                        ; preds = %if.then51
  br label %while.end, !dbg !7487

if.end59:                                         ; preds = %if.then51
  %80 = load i32, i32* %remaining, align 4, !dbg !7488
  %81 = load i32, i32* %id3_buf_pos, align 4, !dbg !7489
  %add60 = add nsw i32 %81, %80, !dbg !7489
  store i32 %add60, i32* %id3_buf_pos, align 4, !dbg !7489
  %82 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7490
  %ctx61 = getelementptr inbounds %struct.playlist, %struct.playlist* %82, i32 0, i32 9, !dbg !7491
  %83 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx61, align 8, !dbg !7491
  %84 = bitcast %struct.AVFormatContext* %83 to i8*, !dbg !7490
  %85 = load i32, i32* %remaining, align 4, !dbg !7492
  call void (i8*, i32, i8*, ...) @av_log(i8* %84, i32 48, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.106, i32 0, i32 0), i32 %85), !dbg !7493
  br label %if.end62, !dbg !7494

if.end62:                                         ; preds = %if.end59, %if.end38
  br label %if.end64, !dbg !7495

if.else63:                                        ; preds = %if.end15
  br label %while.end, !dbg !7496

if.end64:                                         ; preds = %if.end62
  br label %while.body, !dbg !7498, !llvm.loop !7500

while.end:                                        ; preds = %if.else63, %if.then58, %if.then37, %if.then29, %if.then14
  %86 = load i32*, i32** %len.addr, align 8, !dbg !7501
  %87 = load i32, i32* %86, align 4, !dbg !7503
  %cmp65 = icmp sge i32 %87, 0, !dbg !7504
  br i1 %cmp65, label %land.lhs.true67, label %if.end86, !dbg !7505

land.lhs.true67:                                  ; preds = %while.end
  %88 = load i32, i32* %fill_buf, align 4, !dbg !7506
  %tobool68 = icmp ne i32 %88, 0, !dbg !7506
  br i1 %tobool68, label %if.then71, label %lor.lhs.false, !dbg !7508

lor.lhs.false:                                    ; preds = %land.lhs.true67
  %89 = load i32*, i32** %len.addr, align 8, !dbg !7509
  %90 = load i32, i32* %89, align 4, !dbg !7511
  %cmp69 = icmp eq i32 %90, 0, !dbg !7512
  br i1 %cmp69, label %if.then71, label %if.end86, !dbg !7513

if.then71:                                        ; preds = %lor.lhs.false, %land.lhs.true67
  %91 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7514
  %92 = load %struct.segment*, %struct.segment** %seg, align 8, !dbg !7516
  %93 = load i8*, i8** %buf.addr, align 8, !dbg !7517
  %94 = load i32*, i32** %len.addr, align 8, !dbg !7518
  %95 = load i32, i32* %94, align 4, !dbg !7519
  %idx.ext72 = sext i32 %95 to i64, !dbg !7520
  %add.ptr73 = getelementptr inbounds i8, i8* %93, i64 %idx.ext72, !dbg !7520
  %96 = load i32, i32* %buf_size.addr, align 4, !dbg !7521
  %97 = load i32*, i32** %len.addr, align 8, !dbg !7522
  %98 = load i32, i32* %97, align 4, !dbg !7523
  %sub74 = sub nsw i32 %96, %98, !dbg !7524
  %call75 = call i32 @read_from_url(%struct.playlist* %91, %struct.segment* %92, i8* %add.ptr73, i32 %sub74), !dbg !7525
  store i32 %call75, i32* %bytes, align 4, !dbg !7526
  %99 = load i32, i32* %bytes, align 4, !dbg !7527
  %cmp76 = icmp sge i32 %99, 0, !dbg !7529
  br i1 %cmp76, label %if.then78, label %if.else80, !dbg !7530

if.then78:                                        ; preds = %if.then71
  %100 = load i32, i32* %bytes, align 4, !dbg !7531
  %101 = load i32*, i32** %len.addr, align 8, !dbg !7532
  %102 = load i32, i32* %101, align 4, !dbg !7533
  %add79 = add nsw i32 %102, %100, !dbg !7533
  store i32 %add79, i32* %101, align 4, !dbg !7533
  br label %if.end85, !dbg !7534

if.else80:                                        ; preds = %if.then71
  %103 = load i32*, i32** %len.addr, align 8, !dbg !7535
  %104 = load i32, i32* %103, align 4, !dbg !7537
  %cmp81 = icmp eq i32 %104, 0, !dbg !7538
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !7539

if.then83:                                        ; preds = %if.else80
  %105 = load i32, i32* %bytes, align 4, !dbg !7540
  %106 = load i32*, i32** %len.addr, align 8, !dbg !7541
  store i32 %105, i32* %106, align 4, !dbg !7542
  br label %if.end84, !dbg !7543

if.end84:                                         ; preds = %if.then83, %if.else80
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.then78
  br label %if.end86, !dbg !7544

if.end86:                                         ; preds = %if.end85, %lor.lhs.false, %while.end
  %107 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7545
  %id3_buf87 = getelementptr inbounds %struct.playlist, %struct.playlist* %107, i32 0, i32 34, !dbg !7547
  %108 = load i8*, i8** %id3_buf87, align 8, !dbg !7547
  %tobool88 = icmp ne i8* %108, null, !dbg !7545
  br i1 %tobool88, label %if.then89, label %if.end92, !dbg !7548

if.then89:                                        ; preds = %if.end86
  call void @llvm.dbg.declare(metadata %struct.AVIOContext* %id3ioctx, metadata !7549, metadata !2357), !dbg !7551
  %109 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7552
  %id3_buf90 = getelementptr inbounds %struct.playlist, %struct.playlist* %109, i32 0, i32 34, !dbg !7553
  %110 = load i8*, i8** %id3_buf90, align 8, !dbg !7553
  %111 = load i32, i32* %id3_buf_pos, align 4, !dbg !7554
  %call91 = call i32 @ffio_init_context(%struct.AVIOContext* %id3ioctx, i8* %110, i32 %111, i32 0, i8* null, i32 (i8*, i8*, i32)* null, i32 (i8*, i8*, i32)* null, i64 (i8*, i64, i32)* null), !dbg !7555
  %112 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7556
  call void @handle_id3(%struct.AVIOContext* %id3ioctx, %struct.playlist* %112), !dbg !7557
  br label %if.end92, !dbg !7558

if.end92:                                         ; preds = %if.then89, %if.end86
  %113 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7559
  %is_id3_timestamped = getelementptr inbounds %struct.playlist, %struct.playlist* %113, i32 0, i32 31, !dbg !7561
  %114 = load i32, i32* %is_id3_timestamped, align 4, !dbg !7561
  %cmp93 = icmp eq i32 %114, -1, !dbg !7562
  br i1 %cmp93, label %if.then95, label %if.end99, !dbg !7563

if.then95:                                        ; preds = %if.end92
  %115 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7564
  %id3_mpegts_timestamp = getelementptr inbounds %struct.playlist, %struct.playlist* %115, i32 0, i32 32, !dbg !7565
  %116 = load i64, i64* %id3_mpegts_timestamp, align 8, !dbg !7565
  %cmp96 = icmp ne i64 %116, -9223372036854775808, !dbg !7566
  %conv97 = zext i1 %cmp96 to i32, !dbg !7566
  %117 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7567
  %is_id3_timestamped98 = getelementptr inbounds %struct.playlist, %struct.playlist* %117, i32 0, i32 31, !dbg !7568
  store i32 %conv97, i32* %is_id3_timestamped98, align 4, !dbg !7569
  br label %if.end99, !dbg !7567

if.end99:                                         ; preds = %if.then95, %if.end92
  ret void, !dbg !7570
}

declare i64 @avio_size(%struct.AVIOContext*) #1

declare void @av_fast_malloc(i8*, i32*, i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @open_url(%struct.AVFormatContext* %s, %struct.AVIOContext** %pb, i8* %url, %struct.AVDictionary* %opts, %struct.AVDictionary* %opts2, i32* %is_http_out) #0 !dbg !7571 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb.addr = alloca %struct.AVIOContext**, align 8
  %url.addr = alloca i8*, align 8
  %opts.addr = alloca %struct.AVDictionary*, align 8
  %opts2.addr = alloca %struct.AVDictionary*, align 8
  %is_http_out.addr = alloca i32*, align 8
  %c = alloca %struct.HLSContext*, align 8
  %tmp = alloca %struct.AVDictionary*, align 8
  %proto_name = alloca i8*, align 8
  %ret = alloca i32, align 4
  %is_http = alloca i32, align 4
  %.compoundliteral = alloca [64 x i8], align 1
  %new_cookies = alloca i8*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7574, metadata !2357), !dbg !7575
  store %struct.AVIOContext** %pb, %struct.AVIOContext*** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext*** %pb.addr, metadata !7576, metadata !2357), !dbg !7577
  store i8* %url, i8** %url.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %url.addr, metadata !7578, metadata !2357), !dbg !7579
  store %struct.AVDictionary* %opts, %struct.AVDictionary** %opts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %opts.addr, metadata !7580, metadata !2357), !dbg !7581
  store %struct.AVDictionary* %opts2, %struct.AVDictionary** %opts2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %opts2.addr, metadata !7582, metadata !2357), !dbg !7583
  store i32* %is_http_out, i32** %is_http_out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %is_http_out.addr, metadata !7584, metadata !2357), !dbg !7585
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c, metadata !7586, metadata !2357), !dbg !7587
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7588
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !7589
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7589
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !7588
  store %struct.HLSContext* %2, %struct.HLSContext** %c, align 8, !dbg !7587
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %tmp, metadata !7590, metadata !2357), !dbg !7591
  store %struct.AVDictionary* null, %struct.AVDictionary** %tmp, align 8, !dbg !7591
  call void @llvm.dbg.declare(metadata i8** %proto_name, metadata !7592, metadata !2357), !dbg !7593
  store i8* null, i8** %proto_name, align 8, !dbg !7593
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7594, metadata !2357), !dbg !7595
  call void @llvm.dbg.declare(metadata i32* %is_http, metadata !7596, metadata !2357), !dbg !7597
  store i32 0, i32* %is_http, align 4, !dbg !7597
  %3 = load %struct.AVDictionary*, %struct.AVDictionary** %opts.addr, align 8, !dbg !7598
  %call = call i32 @av_dict_copy(%struct.AVDictionary** %tmp, %struct.AVDictionary* %3, i32 0), !dbg !7599
  %4 = load %struct.AVDictionary*, %struct.AVDictionary** %opts2.addr, align 8, !dbg !7600
  %call4 = call i32 @av_dict_copy(%struct.AVDictionary** %tmp, %struct.AVDictionary* %4, i32 0), !dbg !7601
  %5 = load i8*, i8** %url.addr, align 8, !dbg !7602
  %call5 = call i32 @av_strstart(i8* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i32 0, i32 0), i8** null), !dbg !7604
  %tobool = icmp ne i32 %call5, 0, !dbg !7604
  br i1 %tobool, label %if.then, label %if.end13, !dbg !7605

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** %url.addr, align 8, !dbg !7606
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 6, !dbg !7606
  %7 = load i8, i8* %arrayidx, align 1, !dbg !7606
  %conv = sext i8 %7 to i32, !dbg !7606
  %cmp = icmp eq i32 %conv, 43, !dbg !7609
  br i1 %cmp, label %if.then11, label %lor.lhs.false, !dbg !7610

lor.lhs.false:                                    ; preds = %if.then
  %8 = load i8*, i8** %url.addr, align 8, !dbg !7611
  %arrayidx7 = getelementptr inbounds i8, i8* %8, i64 6, !dbg !7611
  %9 = load i8, i8* %arrayidx7, align 1, !dbg !7611
  %conv8 = sext i8 %9 to i32, !dbg !7611
  %cmp9 = icmp eq i32 %conv8, 58, !dbg !7613
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !7614

if.then11:                                        ; preds = %lor.lhs.false, %if.then
  %10 = load i8*, i8** %url.addr, align 8, !dbg !7615
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 7, !dbg !7616
  %call12 = call i8* @avio_find_protocol_name(i8* %add.ptr), !dbg !7617
  store i8* %call12, i8** %proto_name, align 8, !dbg !7618
  br label %if.end, !dbg !7619

if.end:                                           ; preds = %if.then11, %lor.lhs.false
  br label %if.end13, !dbg !7620

if.end13:                                         ; preds = %if.end, %entry
  %11 = load i8*, i8** %proto_name, align 8, !dbg !7621
  %tobool14 = icmp ne i8* %11, null, !dbg !7621
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !7623

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %url.addr, align 8, !dbg !7624
  %call16 = call i8* @avio_find_protocol_name(i8* %12), !dbg !7625
  store i8* %call16, i8** %proto_name, align 8, !dbg !7626
  br label %if.end17, !dbg !7627

if.end17:                                         ; preds = %if.then15, %if.end13
  %13 = load i8*, i8** %proto_name, align 8, !dbg !7628
  %tobool18 = icmp ne i8* %13, null, !dbg !7628
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !7630

if.then19:                                        ; preds = %if.end17
  store i32 -1094995529, i32* %retval, align 4, !dbg !7631
  br label %return, !dbg !7631

if.end20:                                         ; preds = %if.end17
  %14 = load i8*, i8** %proto_name, align 8, !dbg !7632
  %call21 = call i32 @av_strstart(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.99, i32 0, i32 0), i8** null), !dbg !7634
  %tobool22 = icmp ne i32 %call21, 0, !dbg !7634
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !7635

if.then23:                                        ; preds = %if.end20
  %15 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !7636
  %allowed_extensions = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %15, i32 0, i32 16, !dbg !7639
  %16 = load i8*, i8** %allowed_extensions, align 8, !dbg !7639
  %call24 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.100, i32 0, i32 0)) #10, !dbg !7640
  %tobool25 = icmp ne i32 %call24, 0, !dbg !7640
  br i1 %tobool25, label %land.lhs.true, label %if.end30, !dbg !7641

land.lhs.true:                                    ; preds = %if.then23
  %17 = load i8*, i8** %url.addr, align 8, !dbg !7642
  %18 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !7644
  %allowed_extensions26 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %18, i32 0, i32 16, !dbg !7645
  %19 = load i8*, i8** %allowed_extensions26, align 8, !dbg !7645
  %call27 = call i32 @av_match_ext(i8* %17, i8* %19), !dbg !7646
  %tobool28 = icmp ne i32 %call27, 0, !dbg !7646
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !7647

if.then29:                                        ; preds = %land.lhs.true
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7648
  %21 = bitcast %struct.AVFormatContext* %20 to i8*, !dbg !7648
  %22 = load i8*, i8** %url.addr, align 8, !dbg !7650
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([189 x i8], [189 x i8]* @.str.101, i32 0, i32 0), i8* %22), !dbg !7651
  store i32 -1094995529, i32* %retval, align 4, !dbg !7652
  br label %return, !dbg !7652

if.end30:                                         ; preds = %land.lhs.true, %if.then23
  br label %if.end36, !dbg !7653

if.else:                                          ; preds = %if.end20
  %23 = load i8*, i8** %proto_name, align 8, !dbg !7654
  %call31 = call i32 @av_strstart(i8* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i8** null), !dbg !7657
  %tobool32 = icmp ne i32 %call31, 0, !dbg !7657
  br i1 %tobool32, label %if.then33, label %if.else34, !dbg !7657

if.then33:                                        ; preds = %if.else
  store i32 1, i32* %is_http, align 4, !dbg !7658
  br label %if.end35, !dbg !7660

if.else34:                                        ; preds = %if.else
  store i32 -1094995529, i32* %retval, align 4, !dbg !7661
  br label %return, !dbg !7661

if.end35:                                         ; preds = %if.then33
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end30
  %24 = load i8*, i8** %proto_name, align 8, !dbg !7662
  %25 = load i8*, i8** %url.addr, align 8, !dbg !7664
  %26 = load i8*, i8** %proto_name, align 8, !dbg !7665
  %call37 = call i64 @strlen(i8* %26) #10, !dbg !7666
  %call38 = call i32 @strncmp(i8* %24, i8* %25, i64 %call37) #10, !dbg !7667
  %tobool39 = icmp ne i32 %call38, 0, !dbg !7669
  br i1 %tobool39, label %if.else47, label %land.lhs.true40, !dbg !7670

land.lhs.true40:                                  ; preds = %if.end36
  %27 = load i8*, i8** %proto_name, align 8, !dbg !7671
  %call41 = call i64 @strlen(i8* %27) #10, !dbg !7673
  %28 = load i8*, i8** %url.addr, align 8, !dbg !7674
  %arrayidx42 = getelementptr inbounds i8, i8* %28, i64 %call41, !dbg !7674
  %29 = load i8, i8* %arrayidx42, align 1, !dbg !7674
  %conv43 = sext i8 %29 to i32, !dbg !7674
  %cmp44 = icmp eq i32 %conv43, 58, !dbg !7675
  br i1 %cmp44, label %if.then46, label %if.else47, !dbg !7676

if.then46:                                        ; preds = %land.lhs.true40
  br label %if.end71, !dbg !7677

if.else47:                                        ; preds = %land.lhs.true40, %if.end36
  %30 = load i8*, i8** %url.addr, align 8, !dbg !7679
  %call48 = call i32 @av_strstart(i8* %30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i32 0, i32 0), i8** null), !dbg !7681
  %tobool49 = icmp ne i32 %call48, 0, !dbg !7681
  br i1 %tobool49, label %land.lhs.true50, label %if.else62, !dbg !7682

land.lhs.true50:                                  ; preds = %if.else47
  %31 = load i8*, i8** %proto_name, align 8, !dbg !7683
  %32 = load i8*, i8** %url.addr, align 8, !dbg !7685
  %add.ptr51 = getelementptr inbounds i8, i8* %32, i64 7, !dbg !7686
  %33 = load i8*, i8** %proto_name, align 8, !dbg !7687
  %call52 = call i64 @strlen(i8* %33) #10, !dbg !7688
  %call53 = call i32 @strncmp(i8* %31, i8* %add.ptr51, i64 %call52) #10, !dbg !7689
  %tobool54 = icmp ne i32 %call53, 0, !dbg !7691
  br i1 %tobool54, label %if.else62, label %land.lhs.true55, !dbg !7692

land.lhs.true55:                                  ; preds = %land.lhs.true50
  %34 = load i8*, i8** %proto_name, align 8, !dbg !7693
  %call56 = call i64 @strlen(i8* %34) #10, !dbg !7695
  %add = add i64 7, %call56, !dbg !7696
  %35 = load i8*, i8** %url.addr, align 8, !dbg !7697
  %arrayidx57 = getelementptr inbounds i8, i8* %35, i64 %add, !dbg !7697
  %36 = load i8, i8* %arrayidx57, align 1, !dbg !7697
  %conv58 = sext i8 %36 to i32, !dbg !7697
  %cmp59 = icmp eq i32 %conv58, 58, !dbg !7698
  br i1 %cmp59, label %if.then61, label %if.else62, !dbg !7699

if.then61:                                        ; preds = %land.lhs.true55
  br label %if.end70, !dbg !7700

if.else62:                                        ; preds = %land.lhs.true55, %land.lhs.true50, %if.else47
  %37 = load i8*, i8** %proto_name, align 8, !dbg !7701
  %call63 = call i32 @strcmp(i8* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.99, i32 0, i32 0)) #10, !dbg !7703
  %tobool64 = icmp ne i32 %call63, 0, !dbg !7703
  br i1 %tobool64, label %if.then68, label %lor.lhs.false65, !dbg !7704

lor.lhs.false65:                                  ; preds = %if.else62
  %38 = load i8*, i8** %url.addr, align 8, !dbg !7705
  %call66 = call i32 @strncmp(i8* %38, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i32 0, i32 0), i64 5) #10, !dbg !7707
  %tobool67 = icmp ne i32 %call66, 0, !dbg !7707
  br i1 %tobool67, label %if.end69, label %if.then68, !dbg !7708

if.then68:                                        ; preds = %lor.lhs.false65, %if.else62
  store i32 -1094995529, i32* %retval, align 4, !dbg !7709
  br label %return, !dbg !7709

if.end69:                                         ; preds = %lor.lhs.false65
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then61
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then46
  %39 = load i32, i32* %is_http, align 4, !dbg !7710
  %tobool72 = icmp ne i32 %39, 0, !dbg !7710
  br i1 %tobool72, label %land.lhs.true73, label %if.else94, !dbg !7712

land.lhs.true73:                                  ; preds = %if.end71
  %40 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !7713
  %http_persistent = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %40, i32 0, i32 18, !dbg !7715
  %41 = load i32, i32* %http_persistent, align 4, !dbg !7715
  %tobool74 = icmp ne i32 %41, 0, !dbg !7713
  br i1 %tobool74, label %land.lhs.true75, label %if.else94, !dbg !7716

land.lhs.true75:                                  ; preds = %land.lhs.true73
  %42 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !7717
  %43 = load %struct.AVIOContext*, %struct.AVIOContext** %42, align 8, !dbg !7719
  %tobool76 = icmp ne %struct.AVIOContext* %43, null, !dbg !7719
  br i1 %tobool76, label %if.then77, label %if.else94, !dbg !7720

if.then77:                                        ; preds = %land.lhs.true75
  %44 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !7721
  %ctx = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %44, i32 0, i32 1, !dbg !7723
  %45 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !7723
  %46 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !7724
  %47 = load i8*, i8** %url.addr, align 8, !dbg !7725
  %call78 = call i32 @open_url_keepalive(%struct.AVFormatContext* %45, %struct.AVIOContext** %46, i8* %47), !dbg !7726
  store i32 %call78, i32* %ret, align 4, !dbg !7727
  %48 = load i32, i32* %ret, align 4, !dbg !7728
  %cmp79 = icmp eq i32 %48, -1414092869, !dbg !7730
  br i1 %cmp79, label %if.then81, label %if.else82, !dbg !7731

if.then81:                                        ; preds = %if.then77
  %49 = load i32, i32* %ret, align 4, !dbg !7732
  store i32 %49, i32* %retval, align 4, !dbg !7734
  br label %return, !dbg !7734

if.else82:                                        ; preds = %if.then77
  %50 = load i32, i32* %ret, align 4, !dbg !7735
  %cmp83 = icmp slt i32 %50, 0, !dbg !7737
  br i1 %cmp83, label %if.then85, label %if.end92, !dbg !7738

if.then85:                                        ; preds = %if.else82
  %51 = load i32, i32* %ret, align 4, !dbg !7739
  %cmp86 = icmp ne i32 %51, -541478725, !dbg !7742
  br i1 %cmp86, label %if.then88, label %if.end90, !dbg !7743

if.then88:                                        ; preds = %if.then85
  %52 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7744
  %53 = bitcast %struct.AVFormatContext* %52 to i8*, !dbg !7744
  %54 = load i8*, i8** %url.addr, align 8, !dbg !7745
  %55 = bitcast [64 x i8]* %.compoundliteral to i8*, !dbg !7746
  call void @llvm.memset.p0i8.i64(i8* %55, i8 0, i64 64, i32 1, i1 false), !dbg !7746
  %arrayinit.begin = getelementptr inbounds [64 x i8], [64 x i8]* %.compoundliteral, i64 0, i64 0, !dbg !7747
  store i8 0, i8* %arrayinit.begin, align 1, !dbg !7747
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %.compoundliteral, i32 0, i32 0, !dbg !7746
  %56 = load i32, i32* %ret, align 4, !dbg !7748
  %call89 = call i8* @av_make_error_string(i8* %arraydecay, i64 64, i32 %56), !dbg !7749
  call void (i8*, i32, i8*, ...) @av_log(i8* %53, i32 24, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.31, i32 0, i32 0), i8* %54, i8* %call89), !dbg !7751
  br label %if.end90, !dbg !7751

if.end90:                                         ; preds = %if.then88, %if.then85
  %57 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7752
  %io_open = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %57, i32 0, i32 69, !dbg !7753
  %58 = load i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)** %io_open, align 8, !dbg !7753
  %59 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7754
  %60 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !7755
  %61 = load i8*, i8** %url.addr, align 8, !dbg !7756
  %call91 = call i32 %58(%struct.AVFormatContext* %59, %struct.AVIOContext** %60, i8* %61, i32 1, %struct.AVDictionary** %tmp), !dbg !7752
  store i32 %call91, i32* %ret, align 4, !dbg !7757
  br label %if.end92, !dbg !7758

if.end92:                                         ; preds = %if.end90, %if.else82
  br label %if.end93

if.end93:                                         ; preds = %if.end92
  br label %if.end97, !dbg !7759

if.else94:                                        ; preds = %land.lhs.true75, %land.lhs.true73, %if.end71
  %62 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7760
  %io_open95 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %62, i32 0, i32 69, !dbg !7762
  %63 = load i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)** %io_open95, align 8, !dbg !7762
  %64 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7763
  %65 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !7764
  %66 = load i8*, i8** %url.addr, align 8, !dbg !7765
  %call96 = call i32 %63(%struct.AVFormatContext* %64, %struct.AVIOContext** %65, i8* %66, i32 1, %struct.AVDictionary** %tmp), !dbg !7760
  store i32 %call96, i32* %ret, align 4, !dbg !7766
  br label %if.end97

if.end97:                                         ; preds = %if.else94, %if.end93
  %67 = load i32, i32* %ret, align 4, !dbg !7767
  %cmp98 = icmp sge i32 %67, 0, !dbg !7769
  br i1 %cmp98, label %if.then100, label %if.end110, !dbg !7770

if.then100:                                       ; preds = %if.end97
  call void @llvm.dbg.declare(metadata i8** %new_cookies, metadata !7771, metadata !2357), !dbg !7773
  store i8* null, i8** %new_cookies, align 8, !dbg !7773
  %68 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7774
  %flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %68, i32 0, i32 15, !dbg !7776
  %69 = load i32, i32* %flags, align 8, !dbg !7776
  %and = and i32 %69, 128, !dbg !7777
  %tobool102 = icmp ne i32 %and, 0, !dbg !7777
  br i1 %tobool102, label %if.end105, label %if.then103, !dbg !7778

if.then103:                                       ; preds = %if.then100
  %70 = load %struct.AVIOContext**, %struct.AVIOContext*** %pb.addr, align 8, !dbg !7779
  %71 = load %struct.AVIOContext*, %struct.AVIOContext** %70, align 8, !dbg !7780
  %72 = bitcast %struct.AVIOContext* %71 to i8*, !dbg !7780
  %call104 = call i32 @av_opt_get(i8* %72, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0), i32 1, i8** %new_cookies), !dbg !7781
  br label %if.end105, !dbg !7781

if.end105:                                        ; preds = %if.then103, %if.then100
  %73 = load i8*, i8** %new_cookies, align 8, !dbg !7782
  %tobool106 = icmp ne i8* %73, null, !dbg !7782
  br i1 %tobool106, label %if.then107, label %if.end109, !dbg !7784

if.then107:                                       ; preds = %if.end105
  %74 = load i8*, i8** %new_cookies, align 8, !dbg !7785
  %call108 = call i32 @av_dict_set(%struct.AVDictionary** %opts.addr, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0), i8* %74, i32 8), !dbg !7786
  br label %if.end109, !dbg !7786

if.end109:                                        ; preds = %if.then107, %if.end105
  br label %if.end110, !dbg !7787

if.end110:                                        ; preds = %if.end109, %if.end97
  call void @av_dict_free(%struct.AVDictionary** %tmp), !dbg !7788
  %75 = load i32*, i32** %is_http_out.addr, align 8, !dbg !7789
  %tobool111 = icmp ne i32* %75, null, !dbg !7789
  br i1 %tobool111, label %if.then112, label %if.end113, !dbg !7791

if.then112:                                       ; preds = %if.end110
  %76 = load i32, i32* %is_http, align 4, !dbg !7792
  %77 = load i32*, i32** %is_http_out.addr, align 8, !dbg !7793
  store i32 %76, i32* %77, align 4, !dbg !7794
  br label %if.end113, !dbg !7795

if.end113:                                        ; preds = %if.then112, %if.end110
  %78 = load i32, i32* %ret, align 4, !dbg !7796
  store i32 %78, i32* %retval, align 4, !dbg !7797
  br label %return, !dbg !7797

return:                                           ; preds = %if.end113, %if.then81, %if.then68, %if.else34, %if.then29, %if.then19
  %79 = load i32, i32* %retval, align 4, !dbg !7798
  ret i32 %79, !dbg !7798
}

declare i32 @avio_read(%struct.AVIOContext*, i8*, i32) #1

declare i8* @ff_data_to_hex(i8*, i8*, i32, i32) #1

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #6

declare i64 @avio_seek(%struct.AVIOContext*, i64, i32) #1

declare i8* @avio_find_protocol_name(i8*) #1

declare i32 @av_match_ext(i8*, i8*) #1

declare i32 @ff_id3v2_match(i8*, i8*) #1

declare i32 @ff_id3v2_tag_len(i8*) #1

declare i8* @av_fast_realloc(i8*, i32*, i64) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal void @handle_id3(%struct.AVIOContext* %pb, %struct.playlist* %pls) #0 !dbg !7799 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %pls.addr = alloca %struct.playlist*, align 8
  %metadata = alloca %struct.AVDictionary*, align 8
  %apic = alloca %struct.ID3v2ExtraMetaAPIC*, align 8
  %extra_meta = alloca %struct.ID3v2ExtraMeta*, align 8
  %timestamp = alloca i64, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7802, metadata !2357), !dbg !7803
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !7804, metadata !2357), !dbg !7805
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %metadata, metadata !7806, metadata !2357), !dbg !7807
  store %struct.AVDictionary* null, %struct.AVDictionary** %metadata, align 8, !dbg !7807
  call void @llvm.dbg.declare(metadata %struct.ID3v2ExtraMetaAPIC** %apic, metadata !7808, metadata !2357), !dbg !7809
  store %struct.ID3v2ExtraMetaAPIC* null, %struct.ID3v2ExtraMetaAPIC** %apic, align 8, !dbg !7809
  call void @llvm.dbg.declare(metadata %struct.ID3v2ExtraMeta** %extra_meta, metadata !7810, metadata !2357), !dbg !7811
  store %struct.ID3v2ExtraMeta* null, %struct.ID3v2ExtraMeta** %extra_meta, align 8, !dbg !7811
  call void @llvm.dbg.declare(metadata i64* %timestamp, metadata !7812, metadata !2357), !dbg !7813
  store i64 -9223372036854775808, i64* %timestamp, align 8, !dbg !7813
  %0 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7814
  %ctx = getelementptr inbounds %struct.playlist, %struct.playlist* %0, i32 0, i32 9, !dbg !7815
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !7815
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7816
  call void @parse_id3(%struct.AVFormatContext* %1, %struct.AVIOContext* %2, %struct.AVDictionary** %metadata, i64* %timestamp, %struct.ID3v2ExtraMetaAPIC** %apic, %struct.ID3v2ExtraMeta** %extra_meta), !dbg !7817
  %3 = load i64, i64* %timestamp, align 8, !dbg !7818
  %cmp = icmp ne i64 %3, -9223372036854775808, !dbg !7820
  br i1 %cmp, label %if.then, label %if.end, !dbg !7821

if.then:                                          ; preds = %entry
  %4 = load i64, i64* %timestamp, align 8, !dbg !7822
  %5 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7824
  %id3_mpegts_timestamp = getelementptr inbounds %struct.playlist, %struct.playlist* %5, i32 0, i32 32, !dbg !7825
  store i64 %4, i64* %id3_mpegts_timestamp, align 8, !dbg !7826
  %6 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7827
  %id3_offset = getelementptr inbounds %struct.playlist, %struct.playlist* %6, i32 0, i32 33, !dbg !7828
  store i64 0, i64* %id3_offset, align 8, !dbg !7829
  br label %if.end, !dbg !7830

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7831
  %id3_found = getelementptr inbounds %struct.playlist, %struct.playlist* %7, i32 0, i32 37, !dbg !7833
  %8 = load i32, i32* %id3_found, align 8, !dbg !7833
  %tobool = icmp ne i32 %8, 0, !dbg !7831
  br i1 %tobool, label %if.else16, label %if.then1, !dbg !7834

if.then1:                                         ; preds = %if.end
  br label %do.body, !dbg !7835, !llvm.loop !7837

do.body:                                          ; preds = %if.then1
  %9 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7838
  %id3_deferred_extra = getelementptr inbounds %struct.playlist, %struct.playlist* %9, i32 0, i32 39, !dbg !7842
  %10 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %id3_deferred_extra, align 8, !dbg !7842
  %tobool2 = icmp ne %struct.ID3v2ExtraMeta* %10, null, !dbg !7838
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7843

if.then3:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i32 0, i32 0), i32 1052), !dbg !7844
  call void @abort() #12, !dbg !7847
  unreachable, !dbg !7849

if.end4:                                          ; preds = %do.body
  br label %do.end, !dbg !7850

do.end:                                           ; preds = %if.end4
  %11 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7852
  %id3_found5 = getelementptr inbounds %struct.playlist, %struct.playlist* %11, i32 0, i32 37, !dbg !7853
  store i32 1, i32* %id3_found5, align 8, !dbg !7854
  %12 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7855
  %ctx6 = getelementptr inbounds %struct.playlist, %struct.playlist* %12, i32 0, i32 9, !dbg !7857
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx6, align 8, !dbg !7857
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i32 0, i32 6, !dbg !7858
  %14 = load i32, i32* %nb_streams, align 4, !dbg !7858
  %tobool7 = icmp ne i32 %14, 0, !dbg !7855
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !7859

if.then8:                                         ; preds = %do.end
  %15 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7860
  %ctx9 = getelementptr inbounds %struct.playlist, %struct.playlist* %15, i32 0, i32 9, !dbg !7861
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx9, align 8, !dbg !7861
  %call = call i32 @ff_id3v2_parse_apic(%struct.AVFormatContext* %16, %struct.ID3v2ExtraMeta** %extra_meta), !dbg !7862
  br label %if.end11, !dbg !7862

if.else:                                          ; preds = %do.end
  %17 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %extra_meta, align 8, !dbg !7863
  %18 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7864
  %id3_deferred_extra10 = getelementptr inbounds %struct.playlist, %struct.playlist* %18, i32 0, i32 39, !dbg !7865
  store %struct.ID3v2ExtraMeta* %17, %struct.ID3v2ExtraMeta** %id3_deferred_extra10, align 8, !dbg !7866
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then8
  %call12 = call i32 @ff_id3v2_parse_priv_dict(%struct.AVDictionary** %metadata, %struct.ID3v2ExtraMeta** %extra_meta), !dbg !7867
  %19 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7868
  %ctx13 = getelementptr inbounds %struct.playlist, %struct.playlist* %19, i32 0, i32 9, !dbg !7869
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx13, align 8, !dbg !7869
  %metadata14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i32 0, i32 29, !dbg !7870
  %21 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !7871
  %call15 = call i32 @av_dict_copy(%struct.AVDictionary** %metadata14, %struct.AVDictionary* %21, i32 0), !dbg !7872
  %22 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !7873
  %23 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7874
  %id3_initial = getelementptr inbounds %struct.playlist, %struct.playlist* %23, i32 0, i32 36, !dbg !7875
  store %struct.AVDictionary* %22, %struct.AVDictionary** %id3_initial, align 8, !dbg !7876
  br label %if.end24, !dbg !7877

if.else16:                                        ; preds = %if.end
  %24 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7878
  %id3_changed = getelementptr inbounds %struct.playlist, %struct.playlist* %24, i32 0, i32 38, !dbg !7881
  %25 = load i32, i32* %id3_changed, align 4, !dbg !7881
  %tobool17 = icmp ne i32 %25, 0, !dbg !7878
  br i1 %tobool17, label %if.end23, label %land.lhs.true, !dbg !7882

land.lhs.true:                                    ; preds = %if.else16
  %26 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7883
  %27 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !7885
  %28 = load %struct.ID3v2ExtraMetaAPIC*, %struct.ID3v2ExtraMetaAPIC** %apic, align 8, !dbg !7886
  %call18 = call i32 @id3_has_changed_values(%struct.playlist* %26, %struct.AVDictionary* %27, %struct.ID3v2ExtraMetaAPIC* %28), !dbg !7887
  %tobool19 = icmp ne i32 %call18, 0, !dbg !7887
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !7888

if.then20:                                        ; preds = %land.lhs.true
  %29 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7889
  %ctx21 = getelementptr inbounds %struct.playlist, %struct.playlist* %29, i32 0, i32 9, !dbg !7891
  %30 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx21, align 8, !dbg !7891
  %31 = bitcast %struct.AVFormatContext* %30 to i8*, !dbg !7889
  call void (i8*, i8*, ...) @avpriv_report_missing_feature(i8* %31, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.108, i32 0, i32 0)), !dbg !7892
  %32 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7893
  %id3_changed22 = getelementptr inbounds %struct.playlist, %struct.playlist* %32, i32 0, i32 38, !dbg !7894
  store i32 1, i32* %id3_changed22, align 4, !dbg !7895
  br label %if.end23, !dbg !7896

if.end23:                                         ; preds = %if.then20, %land.lhs.true, %if.else16
  call void @av_dict_free(%struct.AVDictionary** %metadata), !dbg !7897
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end11
  %33 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !7898
  %id3_deferred_extra25 = getelementptr inbounds %struct.playlist, %struct.playlist* %33, i32 0, i32 39, !dbg !7900
  %34 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %id3_deferred_extra25, align 8, !dbg !7900
  %tobool26 = icmp ne %struct.ID3v2ExtraMeta* %34, null, !dbg !7898
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !7901

if.then27:                                        ; preds = %if.end24
  call void @ff_id3v2_free_extra_meta(%struct.ID3v2ExtraMeta** %extra_meta), !dbg !7902
  br label %if.end28, !dbg !7902

if.end28:                                         ; preds = %if.then27, %if.end24
  ret void, !dbg !7903
}

; Function Attrs: nounwind uwtable
define internal void @parse_id3(%struct.AVFormatContext* %s, %struct.AVIOContext* %pb, %struct.AVDictionary** %metadata, i64* %dts, %struct.ID3v2ExtraMetaAPIC** %apic, %struct.ID3v2ExtraMeta** %extra_meta) #0 !dbg !2336 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %metadata.addr = alloca %struct.AVDictionary**, align 8
  %dts.addr = alloca i64*, align 8
  %apic.addr = alloca %struct.ID3v2ExtraMetaAPIC**, align 8
  %extra_meta.addr = alloca %struct.ID3v2ExtraMeta**, align 8
  %meta = alloca %struct.ID3v2ExtraMeta*, align 8
  %priv = alloca %struct.ID3v2ExtraMetaPRIV*, align 8
  %ts = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7904, metadata !2357), !dbg !7905
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7906, metadata !2357), !dbg !7907
  store %struct.AVDictionary** %metadata, %struct.AVDictionary*** %metadata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %metadata.addr, metadata !7908, metadata !2357), !dbg !7909
  store i64* %dts, i64** %dts.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dts.addr, metadata !7910, metadata !2357), !dbg !7911
  store %struct.ID3v2ExtraMetaAPIC** %apic, %struct.ID3v2ExtraMetaAPIC*** %apic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID3v2ExtraMetaAPIC*** %apic.addr, metadata !7912, metadata !2357), !dbg !7913
  store %struct.ID3v2ExtraMeta** %extra_meta, %struct.ID3v2ExtraMeta*** %extra_meta.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID3v2ExtraMeta*** %extra_meta.addr, metadata !7914, metadata !2357), !dbg !7915
  call void @llvm.dbg.declare(metadata %struct.ID3v2ExtraMeta** %meta, metadata !7916, metadata !2357), !dbg !7917
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7918
  %1 = load %struct.AVDictionary**, %struct.AVDictionary*** %metadata.addr, align 8, !dbg !7919
  %2 = load %struct.ID3v2ExtraMeta**, %struct.ID3v2ExtraMeta*** %extra_meta.addr, align 8, !dbg !7920
  call void @ff_id3v2_read_dict(%struct.AVIOContext* %0, %struct.AVDictionary** %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0), %struct.ID3v2ExtraMeta** %2), !dbg !7921
  %3 = load %struct.ID3v2ExtraMeta**, %struct.ID3v2ExtraMeta*** %extra_meta.addr, align 8, !dbg !7922
  %4 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %3, align 8, !dbg !7924
  store %struct.ID3v2ExtraMeta* %4, %struct.ID3v2ExtraMeta** %meta, align 8, !dbg !7925
  br label %for.cond, !dbg !7926

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %meta, align 8, !dbg !7927
  %tobool = icmp ne %struct.ID3v2ExtraMeta* %5, null, !dbg !7930
  br i1 %tobool, label %for.body, label %for.end, !dbg !7930

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %meta, align 8, !dbg !7931
  %tag = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %6, i32 0, i32 0, !dbg !7934
  %7 = load i8*, i8** %tag, align 8, !dbg !7934
  %call = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i32 0, i32 0)) #10, !dbg !7935
  %tobool1 = icmp ne i32 %call, 0, !dbg !7935
  br i1 %tobool1, label %if.else10, label %if.then, !dbg !7936

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.ID3v2ExtraMetaPRIV** %priv, metadata !7937, metadata !2357), !dbg !7946
  %8 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %meta, align 8, !dbg !7947
  %data = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %8, i32 0, i32 1, !dbg !7948
  %9 = load i8*, i8** %data, align 8, !dbg !7948
  %10 = bitcast i8* %9 to %struct.ID3v2ExtraMetaPRIV*, !dbg !7947
  store %struct.ID3v2ExtraMetaPRIV* %10, %struct.ID3v2ExtraMetaPRIV** %priv, align 8, !dbg !7946
  %11 = load %struct.ID3v2ExtraMetaPRIV*, %struct.ID3v2ExtraMetaPRIV** %priv, align 8, !dbg !7949
  %datasize = getelementptr inbounds %struct.ID3v2ExtraMetaPRIV, %struct.ID3v2ExtraMetaPRIV* %11, i32 0, i32 2, !dbg !7951
  %12 = load i32, i32* %datasize, align 8, !dbg !7951
  %cmp = icmp eq i32 %12, 8, !dbg !7952
  br i1 %cmp, label %land.lhs.true, label %if.end9, !dbg !7953

land.lhs.true:                                    ; preds = %if.then
  %13 = load %struct.ID3v2ExtraMetaPRIV*, %struct.ID3v2ExtraMetaPRIV** %priv, align 8, !dbg !7954
  %owner = getelementptr inbounds %struct.ID3v2ExtraMetaPRIV, %struct.ID3v2ExtraMetaPRIV* %13, i32 0, i32 0, !dbg !7956
  %14 = load i8*, i8** %owner, align 8, !dbg !7956
  %call2 = call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @parse_id3.id3_priv_owner_ts, i32 0, i32 0)) #10, !dbg !7957
  %tobool3 = icmp ne i32 %call2, 0, !dbg !7957
  br i1 %tobool3, label %if.end9, label %if.then4, !dbg !7958

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %ts, metadata !7959, metadata !2357), !dbg !7961
  %15 = load %struct.ID3v2ExtraMetaPRIV*, %struct.ID3v2ExtraMetaPRIV** %priv, align 8, !dbg !7962
  %data5 = getelementptr inbounds %struct.ID3v2ExtraMetaPRIV, %struct.ID3v2ExtraMetaPRIV* %15, i32 0, i32 1, !dbg !7963
  %16 = load i8*, i8** %data5, align 8, !dbg !7963
  %17 = bitcast i8* %16 to %union.unaligned_64*, !dbg !7964
  %l = bitcast %union.unaligned_64* %17 to i64*, !dbg !7964
  %18 = load i64, i64* %l, align 1, !dbg !7964
  %call6 = call i64 @av_bswap64(i64 %18) #2, !dbg !7965
  store i64 %call6, i64* %ts, align 8, !dbg !7961
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7966
  %20 = bitcast %struct.AVFormatContext* %19 to i8*, !dbg !7966
  %21 = load i64, i64* %ts, align 8, !dbg !7967
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 48, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.110, i32 0, i32 0), i64 %21), !dbg !7968
  %22 = load i64, i64* %ts, align 8, !dbg !7969
  %and = and i64 %22, -8589934592, !dbg !7971
  %cmp7 = icmp eq i64 %and, 0, !dbg !7972
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !7973

if.then8:                                         ; preds = %if.then4
  %23 = load i64, i64* %ts, align 8, !dbg !7974
  %24 = load i64*, i64** %dts.addr, align 8, !dbg !7975
  store i64 %23, i64* %24, align 8, !dbg !7976
  br label %if.end, !dbg !7977

if.else:                                          ; preds = %if.then4
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7978
  %26 = bitcast %struct.AVFormatContext* %25 to i8*, !dbg !7978
  %27 = load i64, i64* %ts, align 8, !dbg !7979
  call void (i8*, i32, i8*, ...) @av_log(i8* %26, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.111, i32 0, i32 0), i64 %27), !dbg !7980
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end9, !dbg !7981

if.end9:                                          ; preds = %if.end, %land.lhs.true, %if.then
  br label %if.end19, !dbg !7982

if.else10:                                        ; preds = %for.body
  %28 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %meta, align 8, !dbg !7983
  %tag11 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %28, i32 0, i32 0, !dbg !7986
  %29 = load i8*, i8** %tag11, align 8, !dbg !7986
  %call12 = call i32 @strcmp(i8* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.112, i32 0, i32 0)) #10, !dbg !7987
  %tobool13 = icmp ne i32 %call12, 0, !dbg !7987
  br i1 %tobool13, label %if.end18, label %land.lhs.true14, !dbg !7988

land.lhs.true14:                                  ; preds = %if.else10
  %30 = load %struct.ID3v2ExtraMetaAPIC**, %struct.ID3v2ExtraMetaAPIC*** %apic.addr, align 8, !dbg !7989
  %tobool15 = icmp ne %struct.ID3v2ExtraMetaAPIC** %30, null, !dbg !7989
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !7991

if.then16:                                        ; preds = %land.lhs.true14
  %31 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %meta, align 8, !dbg !7992
  %data17 = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %31, i32 0, i32 1, !dbg !7993
  %32 = load i8*, i8** %data17, align 8, !dbg !7993
  %33 = bitcast i8* %32 to %struct.ID3v2ExtraMetaAPIC*, !dbg !7992
  %34 = load %struct.ID3v2ExtraMetaAPIC**, %struct.ID3v2ExtraMetaAPIC*** %apic.addr, align 8, !dbg !7994
  store %struct.ID3v2ExtraMetaAPIC* %33, %struct.ID3v2ExtraMetaAPIC** %34, align 8, !dbg !7995
  br label %if.end18, !dbg !7996

if.end18:                                         ; preds = %if.then16, %land.lhs.true14, %if.else10
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end9
  br label %for.inc, !dbg !7997

for.inc:                                          ; preds = %if.end19
  %35 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %meta, align 8, !dbg !7998
  %next = getelementptr inbounds %struct.ID3v2ExtraMeta, %struct.ID3v2ExtraMeta* %35, i32 0, i32 2, !dbg !8000
  %36 = load %struct.ID3v2ExtraMeta*, %struct.ID3v2ExtraMeta** %next, align 8, !dbg !8000
  store %struct.ID3v2ExtraMeta* %36, %struct.ID3v2ExtraMeta** %meta, align 8, !dbg !8001
  br label %for.cond, !dbg !8002, !llvm.loop !8003

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8005
}

declare i32 @ff_id3v2_parse_priv_dict(%struct.AVDictionary**, %struct.ID3v2ExtraMeta**) #1

; Function Attrs: nounwind uwtable
define internal i32 @id3_has_changed_values(%struct.playlist* %pls, %struct.AVDictionary* %metadata, %struct.ID3v2ExtraMetaAPIC* %apic) #0 !dbg !8006 {
entry:
  %retval = alloca i32, align 4
  %pls.addr = alloca %struct.playlist*, align 8
  %metadata.addr = alloca %struct.AVDictionary*, align 8
  %apic.addr = alloca %struct.ID3v2ExtraMetaAPIC*, align 8
  %entry1 = alloca %struct.AVDictionaryEntry*, align 8
  %oldentry = alloca %struct.AVDictionaryEntry*, align 8
  %size = alloca i32, align 4
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !8009, metadata !2357), !dbg !8010
  store %struct.AVDictionary* %metadata, %struct.AVDictionary** %metadata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %metadata.addr, metadata !8011, metadata !2357), !dbg !8012
  store %struct.ID3v2ExtraMetaAPIC* %apic, %struct.ID3v2ExtraMetaAPIC** %apic.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID3v2ExtraMetaAPIC** %apic.addr, metadata !8013, metadata !2357), !dbg !8014
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %entry1, metadata !8015, metadata !2357), !dbg !8022
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !8022
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %oldentry, metadata !8023, metadata !2357), !dbg !8024
  br label %while.cond, !dbg !8025

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata.addr, align 8, !dbg !8026
  %1 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !8028
  %call = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.113, i32 0, i32 0), %struct.AVDictionaryEntry* %1, i32 2), !dbg !8029
  store %struct.AVDictionaryEntry* %call, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !8030
  %tobool = icmp ne %struct.AVDictionaryEntry* %call, null, !dbg !8031
  br i1 %tobool, label %while.body, label %while.end, !dbg !8031

while.body:                                       ; preds = %while.cond
  %2 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8032
  %id3_initial = getelementptr inbounds %struct.playlist, %struct.playlist* %2, i32 0, i32 36, !dbg !8034
  %3 = load %struct.AVDictionary*, %struct.AVDictionary** %id3_initial, align 8, !dbg !8034
  %4 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !8035
  %key = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %4, i32 0, i32 0, !dbg !8036
  %5 = load i8*, i8** %key, align 8, !dbg !8036
  %call2 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %3, i8* %5, %struct.AVDictionaryEntry* null, i32 1), !dbg !8037
  store %struct.AVDictionaryEntry* %call2, %struct.AVDictionaryEntry** %oldentry, align 8, !dbg !8038
  %6 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %oldentry, align 8, !dbg !8039
  %tobool3 = icmp ne %struct.AVDictionaryEntry* %6, null, !dbg !8039
  br i1 %tobool3, label %lor.lhs.false, label %if.then, !dbg !8041

lor.lhs.false:                                    ; preds = %while.body
  %7 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %oldentry, align 8, !dbg !8042
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %7, i32 0, i32 1, !dbg !8044
  %8 = load i8*, i8** %value, align 8, !dbg !8044
  %9 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !8045
  %value4 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %9, i32 0, i32 1, !dbg !8046
  %10 = load i8*, i8** %value4, align 8, !dbg !8046
  %call5 = call i32 @strcmp(i8* %8, i8* %10) #10, !dbg !8047
  %cmp = icmp ne i32 %call5, 0, !dbg !8048
  br i1 %cmp, label %if.then, label %if.end, !dbg !8049

if.then:                                          ; preds = %lor.lhs.false, %while.body
  store i32 1, i32* %retval, align 4, !dbg !8050
  br label %return, !dbg !8050

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond, !dbg !8051, !llvm.loop !8053

while.end:                                        ; preds = %while.cond
  %11 = load %struct.ID3v2ExtraMetaAPIC*, %struct.ID3v2ExtraMetaAPIC** %apic.addr, align 8, !dbg !8054
  %tobool6 = icmp ne %struct.ID3v2ExtraMetaAPIC* %11, null, !dbg !8054
  br i1 %tobool6, label %land.lhs.true, label %if.end12, !dbg !8056

land.lhs.true:                                    ; preds = %while.end
  %12 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8057
  %ctx = getelementptr inbounds %struct.playlist, %struct.playlist* %12, i32 0, i32 9, !dbg !8059
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !8059
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i32 0, i32 6, !dbg !8060
  %14 = load i32, i32* %nb_streams, align 4, !dbg !8060
  %cmp7 = icmp ne i32 %14, 2, !dbg !8061
  br i1 %cmp7, label %if.then11, label %lor.lhs.false8, !dbg !8062

lor.lhs.false8:                                   ; preds = %land.lhs.true
  %15 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8063
  %ctx9 = getelementptr inbounds %struct.playlist, %struct.playlist* %15, i32 0, i32 9, !dbg !8065
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx9, align 8, !dbg !8065
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %16, i32 0, i32 7, !dbg !8066
  %17 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !8066
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %17, i64 1, !dbg !8063
  %18 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !8063
  %attached_pic = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i32 0, i32 13, !dbg !8067
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %attached_pic, i32 0, i32 3, !dbg !8068
  %19 = load i8*, i8** %data, align 8, !dbg !8068
  %tobool10 = icmp ne i8* %19, null, !dbg !8063
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !8069

if.then11:                                        ; preds = %lor.lhs.false8, %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !8070
  br label %return, !dbg !8070

if.end12:                                         ; preds = %lor.lhs.false8, %while.end
  %20 = load %struct.ID3v2ExtraMetaAPIC*, %struct.ID3v2ExtraMetaAPIC** %apic.addr, align 8, !dbg !8071
  %tobool13 = icmp ne %struct.ID3v2ExtraMetaAPIC* %20, null, !dbg !8071
  br i1 %tobool13, label %if.then14, label %if.end36, !dbg !8073

if.then14:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i32* %size, metadata !8074, metadata !2357), !dbg !8076
  %21 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8077
  %ctx15 = getelementptr inbounds %struct.playlist, %struct.playlist* %21, i32 0, i32 9, !dbg !8078
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx15, align 8, !dbg !8078
  %streams16 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i32 0, i32 7, !dbg !8079
  %23 = load %struct.AVStream**, %struct.AVStream*** %streams16, align 8, !dbg !8079
  %arrayidx17 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %23, i64 1, !dbg !8077
  %24 = load %struct.AVStream*, %struct.AVStream** %arrayidx17, align 8, !dbg !8077
  %attached_pic18 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %24, i32 0, i32 13, !dbg !8080
  %size19 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %attached_pic18, i32 0, i32 4, !dbg !8081
  %25 = load i32, i32* %size19, align 8, !dbg !8081
  store i32 %25, i32* %size, align 4, !dbg !8076
  %26 = load i32, i32* %size, align 4, !dbg !8082
  %27 = load %struct.ID3v2ExtraMetaAPIC*, %struct.ID3v2ExtraMetaAPIC** %apic.addr, align 8, !dbg !8084
  %buf = getelementptr inbounds %struct.ID3v2ExtraMetaAPIC, %struct.ID3v2ExtraMetaAPIC* %27, i32 0, i32 0, !dbg !8085
  %28 = load %struct.AVBufferRef*, %struct.AVBufferRef** %buf, align 8, !dbg !8085
  %size20 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %28, i32 0, i32 2, !dbg !8086
  %29 = load i32, i32* %size20, align 8, !dbg !8086
  %sub = sub nsw i32 %29, 64, !dbg !8087
  %cmp21 = icmp ne i32 %26, %sub, !dbg !8088
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !8089

if.then22:                                        ; preds = %if.then14
  store i32 1, i32* %retval, align 4, !dbg !8090
  br label %return, !dbg !8090

if.end23:                                         ; preds = %if.then14
  %30 = load %struct.ID3v2ExtraMetaAPIC*, %struct.ID3v2ExtraMetaAPIC** %apic.addr, align 8, !dbg !8091
  %buf24 = getelementptr inbounds %struct.ID3v2ExtraMetaAPIC, %struct.ID3v2ExtraMetaAPIC* %30, i32 0, i32 0, !dbg !8093
  %31 = load %struct.AVBufferRef*, %struct.AVBufferRef** %buf24, align 8, !dbg !8093
  %data25 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %31, i32 0, i32 1, !dbg !8094
  %32 = load i8*, i8** %data25, align 8, !dbg !8094
  %33 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8095
  %ctx26 = getelementptr inbounds %struct.playlist, %struct.playlist* %33, i32 0, i32 9, !dbg !8096
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx26, align 8, !dbg !8096
  %streams27 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %34, i32 0, i32 7, !dbg !8097
  %35 = load %struct.AVStream**, %struct.AVStream*** %streams27, align 8, !dbg !8097
  %arrayidx28 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %35, i64 1, !dbg !8095
  %36 = load %struct.AVStream*, %struct.AVStream** %arrayidx28, align 8, !dbg !8095
  %attached_pic29 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %36, i32 0, i32 13, !dbg !8098
  %data30 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %attached_pic29, i32 0, i32 3, !dbg !8099
  %37 = load i8*, i8** %data30, align 8, !dbg !8099
  %38 = load i32, i32* %size, align 4, !dbg !8100
  %conv = sext i32 %38 to i64, !dbg !8100
  %call31 = call i32 @memcmp(i8* %32, i8* %37, i64 %conv) #10, !dbg !8101
  %cmp32 = icmp ne i32 %call31, 0, !dbg !8102
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !8103

if.then34:                                        ; preds = %if.end23
  store i32 1, i32* %retval, align 4, !dbg !8104
  br label %return, !dbg !8104

if.end35:                                         ; preds = %if.end23
  br label %if.end36, !dbg !8105

if.end36:                                         ; preds = %if.end35, %if.end12
  store i32 0, i32* %retval, align 4, !dbg !8106
  br label %return, !dbg !8106

return:                                           ; preds = %if.end36, %if.then34, %if.then22, %if.then11, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !8107
  ret i32 %39, !dbg !8107
}

declare void @avpriv_report_missing_feature(i8*, i8*, ...) #1

declare void @ff_id3v2_read_dict(%struct.AVIOContext*, %struct.AVDictionary**, i8*, %struct.ID3v2ExtraMeta**) #1

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_bswap64(i64 %x) #8 !dbg !8108 {
entry:
  %x.addr.i5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i5, metadata !3750, metadata !2357), !dbg !8111
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3750, metadata !2357), !dbg !8114
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !8116, metadata !2357), !dbg !8117
  %0 = load i64, i64* %x.addr, align 8, !dbg !8118
  %conv = trunc i64 %0 to i32, !dbg !8118
  store i32 %conv, i32* %x.addr.i, align 4, !dbg !8119
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !8120
  %shl.i = shl i32 %1, 8, !dbg !8121
  %and.i = and i32 %shl.i, 65280, !dbg !8122
  %2 = load i32, i32* %x.addr.i, align 4, !dbg !8123
  %shr.i = lshr i32 %2, 8, !dbg !8124
  %and1.i = and i32 %shr.i, 255, !dbg !8125
  %or.i = or i32 %and.i, %and1.i, !dbg !8126
  %shl2.i = shl i32 %or.i, 16, !dbg !8127
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !8128
  %shr3.i = lshr i32 %3, 16, !dbg !8129
  %shl4.i = shl i32 %shr3.i, 8, !dbg !8130
  %and5.i = and i32 %shl4.i, 65280, !dbg !8131
  %4 = load i32, i32* %x.addr.i, align 4, !dbg !8132
  %shr6.i = lshr i32 %4, 16, !dbg !8133
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !8134
  %and8.i = and i32 %shr7.i, 255, !dbg !8135
  %or9.i = or i32 %and5.i, %and8.i, !dbg !8136
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !8137
  %conv1 = zext i32 %or10.i to i64, !dbg !8138
  %shl = shl i64 %conv1, 32, !dbg !8139
  %5 = load i64, i64* %x.addr, align 8, !dbg !8140
  %shr = lshr i64 %5, 32, !dbg !8141
  %conv2 = trunc i64 %shr to i32, !dbg !8140
  store i32 %conv2, i32* %x.addr.i5, align 4, !dbg !8142
  %6 = load i32, i32* %x.addr.i5, align 4, !dbg !8143
  %shl.i6 = shl i32 %6, 8, !dbg !8144
  %and.i7 = and i32 %shl.i6, 65280, !dbg !8145
  %7 = load i32, i32* %x.addr.i5, align 4, !dbg !8146
  %shr.i8 = lshr i32 %7, 8, !dbg !8147
  %and1.i9 = and i32 %shr.i8, 255, !dbg !8148
  %or.i10 = or i32 %and.i7, %and1.i9, !dbg !8149
  %shl2.i11 = shl i32 %or.i10, 16, !dbg !8150
  %8 = load i32, i32* %x.addr.i5, align 4, !dbg !8151
  %shr3.i12 = lshr i32 %8, 16, !dbg !8152
  %shl4.i13 = shl i32 %shr3.i12, 8, !dbg !8153
  %and5.i14 = and i32 %shl4.i13, 65280, !dbg !8154
  %9 = load i32, i32* %x.addr.i5, align 4, !dbg !8155
  %shr6.i15 = lshr i32 %9, 16, !dbg !8156
  %shr7.i16 = lshr i32 %shr6.i15, 8, !dbg !8157
  %and8.i17 = and i32 %shr7.i16, 255, !dbg !8158
  %or9.i18 = or i32 %and5.i14, %and8.i17, !dbg !8159
  %or10.i19 = or i32 %shl2.i11, %or9.i18, !dbg !8160
  %conv4 = zext i32 %or10.i19 to i64, !dbg !8161
  %or = or i64 %shl, %conv4, !dbg !8162
  ret i64 %or, !dbg !8163
}

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) #1

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #3

declare %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext*, %struct.AVCodec*) #1

; Function Attrs: nounwind uwtable
define internal void @add_stream_to_programs(%struct.AVFormatContext* %s, %struct.playlist* %pls, %struct.AVStream* %stream) #0 !dbg !8164 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pls.addr = alloca %struct.playlist*, align 8
  %stream.addr = alloca %struct.AVStream*, align 8
  %c = alloca %struct.HLSContext*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %bandwidth = alloca i32, align 4
  %v = alloca %struct.variant*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8167, metadata !2357), !dbg !8168
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !8169, metadata !2357), !dbg !8170
  store %struct.AVStream* %stream, %struct.AVStream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %stream.addr, metadata !8171, metadata !2357), !dbg !8172
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c, metadata !8173, metadata !2357), !dbg !8174
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8175
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !8176
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8176
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !8175
  store %struct.HLSContext* %2, %struct.HLSContext** %c, align 8, !dbg !8174
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8177, metadata !2357), !dbg !8178
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8179, metadata !2357), !dbg !8180
  call void @llvm.dbg.declare(metadata i32* %bandwidth, metadata !8181, metadata !2357), !dbg !8182
  store i32 -1, i32* %bandwidth, align 4, !dbg !8182
  store i32 0, i32* %i, align 4, !dbg !8183
  br label %for.cond, !dbg !8185

for.cond:                                         ; preds = %for.inc15, %entry
  %3 = load i32, i32* %i, align 4, !dbg !8186
  %4 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !8189
  %n_variants = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 2, !dbg !8190
  %5 = load i32, i32* %n_variants, align 8, !dbg !8190
  %cmp = icmp slt i32 %3, %5, !dbg !8191
  br i1 %cmp, label %for.body, label %for.end17, !dbg !8192

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.variant** %v, metadata !8193, metadata !2357), !dbg !8195
  %6 = load i32, i32* %i, align 4, !dbg !8196
  %idxprom = sext i32 %6 to i64, !dbg !8197
  %7 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !8197
  %variants = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %7, i32 0, i32 3, !dbg !8198
  %8 = load %struct.variant**, %struct.variant*** %variants, align 8, !dbg !8198
  %arrayidx = getelementptr inbounds %struct.variant*, %struct.variant** %8, i64 %idxprom, !dbg !8197
  %9 = load %struct.variant*, %struct.variant** %arrayidx, align 8, !dbg !8197
  store %struct.variant* %9, %struct.variant** %v, align 8, !dbg !8195
  store i32 0, i32* %j, align 4, !dbg !8199
  br label %for.cond1, !dbg !8201

for.cond1:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %j, align 4, !dbg !8202
  %11 = load %struct.variant*, %struct.variant** %v, align 8, !dbg !8205
  %n_playlists = getelementptr inbounds %struct.variant, %struct.variant* %11, i32 0, i32 1, !dbg !8206
  %12 = load i32, i32* %n_playlists, align 4, !dbg !8206
  %cmp2 = icmp slt i32 %10, %12, !dbg !8207
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !8208

for.body3:                                        ; preds = %for.cond1
  %13 = load i32, i32* %j, align 4, !dbg !8209
  %idxprom4 = sext i32 %13 to i64, !dbg !8212
  %14 = load %struct.variant*, %struct.variant** %v, align 8, !dbg !8212
  %playlists = getelementptr inbounds %struct.variant, %struct.variant* %14, i32 0, i32 2, !dbg !8213
  %15 = load %struct.playlist**, %struct.playlist*** %playlists, align 8, !dbg !8213
  %arrayidx5 = getelementptr inbounds %struct.playlist*, %struct.playlist** %15, i64 %idxprom4, !dbg !8212
  %16 = load %struct.playlist*, %struct.playlist** %arrayidx5, align 8, !dbg !8212
  %17 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8214
  %cmp6 = icmp ne %struct.playlist* %16, %17, !dbg !8215
  br i1 %cmp6, label %if.then, label %if.end, !dbg !8216

if.then:                                          ; preds = %for.body3
  br label %for.inc, !dbg !8217

if.end:                                           ; preds = %for.body3
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8218
  %19 = load i32, i32* %i, align 4, !dbg !8219
  %20 = load %struct.AVStream*, %struct.AVStream** %stream.addr, align 8, !dbg !8220
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %20, i32 0, i32 0, !dbg !8221
  %21 = load i32, i32* %index, align 8, !dbg !8221
  call void @av_program_add_stream_index(%struct.AVFormatContext* %18, i32 %19, i32 %21), !dbg !8222
  %22 = load i32, i32* %bandwidth, align 4, !dbg !8223
  %cmp7 = icmp slt i32 %22, 0, !dbg !8225
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !8226

if.then8:                                         ; preds = %if.end
  %23 = load %struct.variant*, %struct.variant** %v, align 8, !dbg !8227
  %bandwidth9 = getelementptr inbounds %struct.variant, %struct.variant* %23, i32 0, i32 0, !dbg !8228
  %24 = load i32, i32* %bandwidth9, align 8, !dbg !8228
  store i32 %24, i32* %bandwidth, align 4, !dbg !8229
  br label %if.end14, !dbg !8230

if.else:                                          ; preds = %if.end
  %25 = load i32, i32* %bandwidth, align 4, !dbg !8231
  %26 = load %struct.variant*, %struct.variant** %v, align 8, !dbg !8233
  %bandwidth10 = getelementptr inbounds %struct.variant, %struct.variant* %26, i32 0, i32 0, !dbg !8234
  %27 = load i32, i32* %bandwidth10, align 8, !dbg !8234
  %cmp11 = icmp ne i32 %25, %27, !dbg !8235
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !8236

if.then12:                                        ; preds = %if.else
  store i32 -1, i32* %bandwidth, align 4, !dbg !8237
  br label %if.end13, !dbg !8238

if.end13:                                         ; preds = %if.then12, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then8
  br label %for.inc, !dbg !8239

for.inc:                                          ; preds = %if.end14, %if.then
  %28 = load i32, i32* %j, align 4, !dbg !8240
  %inc = add nsw i32 %28, 1, !dbg !8240
  store i32 %inc, i32* %j, align 4, !dbg !8240
  br label %for.cond1, !dbg !8242, !llvm.loop !8243

for.end:                                          ; preds = %for.cond1
  br label %for.inc15, !dbg !8245

for.inc15:                                        ; preds = %for.end
  %29 = load i32, i32* %i, align 4, !dbg !8246
  %inc16 = add nsw i32 %29, 1, !dbg !8246
  store i32 %inc16, i32* %i, align 4, !dbg !8246
  br label %for.cond, !dbg !8248, !llvm.loop !8249

for.end17:                                        ; preds = %for.cond
  %30 = load i32, i32* %bandwidth, align 4, !dbg !8251
  %cmp18 = icmp sge i32 %30, 0, !dbg !8253
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !8254

if.then19:                                        ; preds = %for.end17
  %31 = load %struct.AVStream*, %struct.AVStream** %stream.addr, align 8, !dbg !8255
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %31, i32 0, i32 11, !dbg !8256
  %32 = load i32, i32* %bandwidth, align 4, !dbg !8257
  %conv = sext i32 %32 to i64, !dbg !8257
  %call = call i32 @av_dict_set_int(%struct.AVDictionary** %metadata, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i32 0, i32 0), i64 %conv, i32 0), !dbg !8258
  br label %if.end20, !dbg !8258

if.end20:                                         ; preds = %if.then19, %for.end17
  ret void, !dbg !8259
}

; Function Attrs: nounwind uwtable
define internal i32 @set_stream_info_from_input_stream(%struct.AVStream* %st, %struct.playlist* %pls, %struct.AVStream* %ist) #0 !dbg !8260 {
entry:
  %retval = alloca i32, align 4
  %st.addr = alloca %struct.AVStream*, align 8
  %pls.addr = alloca %struct.playlist*, align 8
  %ist.addr = alloca %struct.AVStream*, align 8
  %err = alloca i32, align 4
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !8263, metadata !2357), !dbg !8264
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !8265, metadata !2357), !dbg !8266
  store %struct.AVStream* %ist, %struct.AVStream** %ist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %ist.addr, metadata !8267, metadata !2357), !dbg !8268
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8269, metadata !2357), !dbg !8270
  %0 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !8271
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %0, i32 0, i32 19, !dbg !8272
  %1 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !8272
  %2 = load %struct.AVStream*, %struct.AVStream** %ist.addr, align 8, !dbg !8273
  %codecpar1 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %2, i32 0, i32 19, !dbg !8274
  %3 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar1, align 8, !dbg !8274
  %call = call i32 @avcodec_parameters_copy(%struct.AVCodecParameters* %1, %struct.AVCodecParameters* %3), !dbg !8275
  store i32 %call, i32* %err, align 4, !dbg !8276
  %4 = load i32, i32* %err, align 4, !dbg !8277
  %cmp = icmp slt i32 %4, 0, !dbg !8279
  br i1 %cmp, label %if.then, label %if.end, !dbg !8280

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %err, align 4, !dbg !8281
  store i32 %5, i32* %retval, align 4, !dbg !8282
  br label %return, !dbg !8282

if.end:                                           ; preds = %entry
  %6 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8283
  %is_id3_timestamped = getelementptr inbounds %struct.playlist, %struct.playlist* %6, i32 0, i32 31, !dbg !8285
  %7 = load i32, i32* %is_id3_timestamped, align 4, !dbg !8285
  %tobool = icmp ne i32 %7, 0, !dbg !8283
  br i1 %tobool, label %if.then2, label %if.else, !dbg !8286

if.then2:                                         ; preds = %if.end
  %8 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !8287
  call void @avpriv_set_pts_info(%struct.AVStream* %8, i32 33, i32 1, i32 90000), !dbg !8288
  br label %if.end4, !dbg !8288

if.else:                                          ; preds = %if.end
  %9 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !8289
  %10 = load %struct.AVStream*, %struct.AVStream** %ist.addr, align 8, !dbg !8290
  %pts_wrap_bits = getelementptr inbounds %struct.AVStream, %struct.AVStream* %10, i32 0, i32 21, !dbg !8291
  %11 = load i32, i32* %pts_wrap_bits, align 8, !dbg !8291
  %12 = load %struct.AVStream*, %struct.AVStream** %ist.addr, align 8, !dbg !8292
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %12, i32 0, i32 4, !dbg !8293
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 0, !dbg !8294
  %13 = load i32, i32* %num, align 8, !dbg !8294
  %14 = load %struct.AVStream*, %struct.AVStream** %ist.addr, align 8, !dbg !8295
  %time_base3 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %14, i32 0, i32 4, !dbg !8296
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base3, i32 0, i32 1, !dbg !8297
  %15 = load i32, i32* %den, align 4, !dbg !8297
  call void @avpriv_set_pts_info(%struct.AVStream* %9, i32 %11, i32 %13, i32 %15), !dbg !8298
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  %16 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !8299
  %internal = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i32 0, i32 60, !dbg !8300
  %17 = load %struct.AVStreamInternal*, %struct.AVStreamInternal** %internal, align 8, !dbg !8300
  %need_context_update = getelementptr inbounds %struct.AVStreamInternal, %struct.AVStreamInternal* %17, i32 0, i32 8, !dbg !8301
  store i32 1, i32* %need_context_update, align 8, !dbg !8302
  store i32 0, i32* %retval, align 4, !dbg !8303
  br label %return, !dbg !8303

return:                                           ; preds = %if.end4, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !8304
  ret i32 %18, !dbg !8304
}

declare void @av_program_add_stream_index(%struct.AVFormatContext*, i32, i32) #1

declare i32 @avcodec_parameters_copy(%struct.AVCodecParameters*, %struct.AVCodecParameters*) #1

declare void @avpriv_set_pts_info(%struct.AVStream*, i32, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @recheck_discard_flags(%struct.AVFormatContext* %s, i32 %first) #0 !dbg !8305 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %first.addr = alloca i32, align 4
  %c = alloca %struct.HLSContext*, align 8
  %i = alloca i32, align 4
  %changed = alloca i32, align 4
  %cur_needed = alloca i32, align 4
  %pls = alloca %struct.playlist*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8308, metadata !2357), !dbg !8309
  store i32 %first, i32* %first.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first.addr, metadata !8310, metadata !2357), !dbg !8311
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c, metadata !8312, metadata !2357), !dbg !8313
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8314
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !8315
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8315
  %2 = bitcast i8* %1 to %struct.HLSContext*, !dbg !8314
  store %struct.HLSContext* %2, %struct.HLSContext** %c, align 8, !dbg !8313
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8316, metadata !2357), !dbg !8317
  call void @llvm.dbg.declare(metadata i32* %changed, metadata !8318, metadata !2357), !dbg !8319
  store i32 0, i32* %changed, align 4, !dbg !8319
  call void @llvm.dbg.declare(metadata i32* %cur_needed, metadata !8320, metadata !2357), !dbg !8321
  store i32 0, i32* %i, align 4, !dbg !8322
  br label %for.cond, !dbg !8324

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !8325
  %4 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !8328
  %n_playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 4, !dbg !8329
  %5 = load i32, i32* %n_playlists, align 8, !dbg !8329
  %cmp = icmp slt i32 %3, %5, !dbg !8330
  br i1 %cmp, label %for.body, label %for.end, !dbg !8331

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls, metadata !8332, metadata !2357), !dbg !8334
  %6 = load i32, i32* %i, align 4, !dbg !8335
  %idxprom = sext i32 %6 to i64, !dbg !8336
  %7 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !8336
  %playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %7, i32 0, i32 5, !dbg !8337
  %8 = load %struct.playlist**, %struct.playlist*** %playlists, align 8, !dbg !8337
  %arrayidx = getelementptr inbounds %struct.playlist*, %struct.playlist** %8, i64 %idxprom, !dbg !8336
  %9 = load %struct.playlist*, %struct.playlist** %arrayidx, align 8, !dbg !8336
  store %struct.playlist* %9, %struct.playlist** %pls, align 8, !dbg !8334
  %10 = load i32, i32* %i, align 4, !dbg !8338
  %idxprom1 = sext i32 %10 to i64, !dbg !8339
  %11 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !8339
  %playlists2 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %11, i32 0, i32 5, !dbg !8340
  %12 = load %struct.playlist**, %struct.playlist*** %playlists2, align 8, !dbg !8340
  %arrayidx3 = getelementptr inbounds %struct.playlist*, %struct.playlist** %12, i64 %idxprom1, !dbg !8339
  %13 = load %struct.playlist*, %struct.playlist** %arrayidx3, align 8, !dbg !8339
  %call = call i32 @playlist_needed(%struct.playlist* %13), !dbg !8341
  store i32 %call, i32* %cur_needed, align 4, !dbg !8342
  %14 = load i32, i32* %cur_needed, align 4, !dbg !8343
  %tobool = icmp ne i32 %14, 0, !dbg !8343
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8345

land.lhs.true:                                    ; preds = %for.body
  %15 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8346
  %needed = getelementptr inbounds %struct.playlist, %struct.playlist* %15, i32 0, i32 20, !dbg !8348
  %16 = load i32, i32* %needed, align 8, !dbg !8348
  %tobool4 = icmp ne i32 %16, 0, !dbg !8346
  br i1 %tobool4, label %if.else, label %if.then, !dbg !8349

if.then:                                          ; preds = %land.lhs.true
  %17 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8350
  %needed5 = getelementptr inbounds %struct.playlist, %struct.playlist* %17, i32 0, i32 20, !dbg !8352
  store i32 1, i32* %needed5, align 8, !dbg !8353
  store i32 1, i32* %changed, align 4, !dbg !8354
  %18 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !8355
  %19 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8356
  %call6 = call i32 @select_cur_seq_no(%struct.HLSContext* %18, %struct.playlist* %19), !dbg !8357
  %20 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8358
  %cur_seq_no = getelementptr inbounds %struct.playlist, %struct.playlist* %20, i32 0, i32 21, !dbg !8359
  store i32 %call6, i32* %cur_seq_no, align 4, !dbg !8360
  %21 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8361
  %pb = getelementptr inbounds %struct.playlist, %struct.playlist* %21, i32 0, i32 1, !dbg !8362
  %eof_reached = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %pb, i32 0, i32 10, !dbg !8363
  store i32 0, i32* %eof_reached, align 8, !dbg !8364
  %22 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !8365
  %cur_timestamp = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %22, i32 0, i32 12, !dbg !8367
  %23 = load i64, i64* %cur_timestamp, align 8, !dbg !8367
  %cmp7 = icmp ne i64 %23, -9223372036854775808, !dbg !8368
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !8369

if.then8:                                         ; preds = %if.then
  %24 = load %struct.HLSContext*, %struct.HLSContext** %c, align 8, !dbg !8370
  %cur_timestamp9 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %24, i32 0, i32 12, !dbg !8372
  %25 = load i64, i64* %cur_timestamp9, align 8, !dbg !8372
  %26 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8373
  %seek_timestamp = getelementptr inbounds %struct.playlist, %struct.playlist* %26, i32 0, i32 40, !dbg !8374
  store i64 %25, i64* %seek_timestamp, align 8, !dbg !8375
  %27 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8376
  %seek_flags = getelementptr inbounds %struct.playlist, %struct.playlist* %27, i32 0, i32 41, !dbg !8377
  store i32 4, i32* %seek_flags, align 8, !dbg !8378
  %28 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8379
  %seek_stream_index = getelementptr inbounds %struct.playlist, %struct.playlist* %28, i32 0, i32 42, !dbg !8380
  store i32 -1, i32* %seek_stream_index, align 4, !dbg !8381
  br label %if.end, !dbg !8382

if.end:                                           ; preds = %if.then8, %if.then
  %29 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8383
  %30 = bitcast %struct.AVFormatContext* %29 to i8*, !dbg !8383
  %31 = load i32, i32* %i, align 4, !dbg !8384
  %32 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8385
  %cur_seq_no10 = getelementptr inbounds %struct.playlist, %struct.playlist* %32, i32 0, i32 21, !dbg !8386
  %33 = load i32, i32* %cur_seq_no10, align 4, !dbg !8386
  call void (i8*, i32, i8*, ...) @av_log(i8* %30, i32 32, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.118, i32 0, i32 0), i32 %31, i32 %33), !dbg !8387
  br label %if.end29, !dbg !8388

if.else:                                          ; preds = %land.lhs.true, %for.body
  %34 = load i32, i32* %first.addr, align 4, !dbg !8389
  %tobool11 = icmp ne i32 %34, 0, !dbg !8389
  br i1 %tobool11, label %land.lhs.true12, label %if.end28, !dbg !8392

land.lhs.true12:                                  ; preds = %if.else
  %35 = load i32, i32* %cur_needed, align 4, !dbg !8393
  %tobool13 = icmp ne i32 %35, 0, !dbg !8393
  br i1 %tobool13, label %if.end28, label %land.lhs.true14, !dbg !8395

land.lhs.true14:                                  ; preds = %land.lhs.true12
  %36 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8396
  %needed15 = getelementptr inbounds %struct.playlist, %struct.playlist* %36, i32 0, i32 20, !dbg !8398
  %37 = load i32, i32* %needed15, align 8, !dbg !8398
  %tobool16 = icmp ne i32 %37, 0, !dbg !8396
  br i1 %tobool16, label %if.then17, label %if.end28, !dbg !8399

if.then17:                                        ; preds = %land.lhs.true14
  %38 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8400
  %input = getelementptr inbounds %struct.playlist, %struct.playlist* %38, i32 0, i32 3, !dbg !8403
  %39 = load %struct.AVIOContext*, %struct.AVIOContext** %input, align 8, !dbg !8403
  %tobool18 = icmp ne %struct.AVIOContext* %39, null, !dbg !8400
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !8404

if.then19:                                        ; preds = %if.then17
  %40 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8405
  %parent = getelementptr inbounds %struct.playlist, %struct.playlist* %40, i32 0, i32 7, !dbg !8406
  %41 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent, align 8, !dbg !8406
  %42 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8407
  %input20 = getelementptr inbounds %struct.playlist, %struct.playlist* %42, i32 0, i32 3, !dbg !8408
  call void @ff_format_io_close(%struct.AVFormatContext* %41, %struct.AVIOContext** %input20), !dbg !8409
  br label %if.end21, !dbg !8409

if.end21:                                         ; preds = %if.then19, %if.then17
  %43 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8410
  %input_read_done = getelementptr inbounds %struct.playlist, %struct.playlist* %43, i32 0, i32 4, !dbg !8411
  store i32 0, i32* %input_read_done, align 8, !dbg !8412
  %44 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8413
  %input_next = getelementptr inbounds %struct.playlist, %struct.playlist* %44, i32 0, i32 5, !dbg !8415
  %45 = load %struct.AVIOContext*, %struct.AVIOContext** %input_next, align 8, !dbg !8415
  %tobool22 = icmp ne %struct.AVIOContext* %45, null, !dbg !8413
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !8416

if.then23:                                        ; preds = %if.end21
  %46 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8417
  %parent24 = getelementptr inbounds %struct.playlist, %struct.playlist* %46, i32 0, i32 7, !dbg !8418
  %47 = load %struct.AVFormatContext*, %struct.AVFormatContext** %parent24, align 8, !dbg !8418
  %48 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8419
  %input_next25 = getelementptr inbounds %struct.playlist, %struct.playlist* %48, i32 0, i32 5, !dbg !8420
  call void @ff_format_io_close(%struct.AVFormatContext* %47, %struct.AVIOContext** %input_next25), !dbg !8421
  br label %if.end26, !dbg !8421

if.end26:                                         ; preds = %if.then23, %if.end21
  %49 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8422
  %input_next_requested = getelementptr inbounds %struct.playlist, %struct.playlist* %49, i32 0, i32 6, !dbg !8423
  store i32 0, i32* %input_next_requested, align 8, !dbg !8424
  %50 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8425
  %needed27 = getelementptr inbounds %struct.playlist, %struct.playlist* %50, i32 0, i32 20, !dbg !8426
  store i32 0, i32* %needed27, align 8, !dbg !8427
  store i32 1, i32* %changed, align 4, !dbg !8428
  %51 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8429
  %52 = bitcast %struct.AVFormatContext* %51 to i8*, !dbg !8429
  %53 = load i32, i32* %i, align 4, !dbg !8430
  call void (i8*, i32, i8*, ...) @av_log(i8* %52, i32 32, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.78, i32 0, i32 0), i32 %53), !dbg !8431
  br label %if.end28, !dbg !8432

if.end28:                                         ; preds = %if.end26, %land.lhs.true14, %land.lhs.true12, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end
  br label %for.inc, !dbg !8433

for.inc:                                          ; preds = %if.end29
  %54 = load i32, i32* %i, align 4, !dbg !8434
  %inc = add nsw i32 %54, 1, !dbg !8434
  store i32 %inc, i32* %i, align 4, !dbg !8434
  br label %for.cond, !dbg !8436, !llvm.loop !8437

for.end:                                          ; preds = %for.cond
  %55 = load i32, i32* %changed, align 4, !dbg !8439
  ret i32 %55, !dbg !8440
}

declare i32 @av_read_frame(%struct.AVFormatContext*, %struct.AVPacket*) #1

; Function Attrs: nounwind uwtable
define internal void @fill_timing_for_id3_timestamped_stream(%struct.playlist* %pls) #0 !dbg !8441 {
entry:
  %pls.addr = alloca %struct.playlist*, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  %.compoundliteral27 = alloca %struct.AVRational, align 4
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !8444, metadata !2357), !dbg !8445
  %0 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8446
  %id3_offset = getelementptr inbounds %struct.playlist, %struct.playlist* %0, i32 0, i32 33, !dbg !8448
  %1 = load i64, i64* %id3_offset, align 8, !dbg !8448
  %cmp = icmp sge i64 %1, 0, !dbg !8449
  br i1 %cmp, label %if.then, label %if.else10, !dbg !8450

if.then:                                          ; preds = %entry
  %2 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8451
  %id3_mpegts_timestamp = getelementptr inbounds %struct.playlist, %struct.playlist* %2, i32 0, i32 32, !dbg !8453
  %3 = load i64, i64* %id3_mpegts_timestamp, align 8, !dbg !8453
  %4 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8454
  %id3_offset1 = getelementptr inbounds %struct.playlist, %struct.playlist* %4, i32 0, i32 33, !dbg !8455
  %5 = load i64, i64* %id3_offset1, align 8, !dbg !8455
  %6 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8456
  %pkt = getelementptr inbounds %struct.playlist, %struct.playlist* %6, i32 0, i32 10, !dbg !8457
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt, i32 0, i32 5, !dbg !8458
  %7 = load i32, i32* %stream_index, align 4, !dbg !8458
  %idxprom = sext i32 %7 to i64, !dbg !8459
  %8 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8459
  %ctx = getelementptr inbounds %struct.playlist, %struct.playlist* %8, i32 0, i32 9, !dbg !8460
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !8460
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i32 0, i32 7, !dbg !8461
  %10 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !8461
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %10, i64 %idxprom, !dbg !8459
  %11 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !8459
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i32 0, i32 4, !dbg !8462
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !8463
  store i32 1, i32* %num, align 4, !dbg !8463
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !8463
  store i32 90000, i32* %den, align 4, !dbg !8463
  %12 = bitcast %struct.AVRational* %time_base to i64*, !dbg !8464
  %13 = load i64, i64* %12, align 8, !dbg !8464
  %14 = bitcast %struct.AVRational* %.compoundliteral to i64*, !dbg !8464
  %15 = load i64, i64* %14, align 4, !dbg !8464
  %call = call i64 @av_rescale_q(i64 %5, i64 %13, i64 %15) #2, !dbg !8464
  %add = add nsw i64 %3, %call, !dbg !8465
  %16 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8466
  %pkt2 = getelementptr inbounds %struct.playlist, %struct.playlist* %16, i32 0, i32 10, !dbg !8467
  %dts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt2, i32 0, i32 2, !dbg !8468
  store i64 %add, i64* %dts, align 8, !dbg !8469
  %17 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8470
  %pkt3 = getelementptr inbounds %struct.playlist, %struct.playlist* %17, i32 0, i32 10, !dbg !8472
  %duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt3, i32 0, i32 9, !dbg !8473
  %18 = load i64, i64* %duration, align 8, !dbg !8473
  %tobool = icmp ne i64 %18, 0, !dbg !8470
  br i1 %tobool, label %if.then4, label %if.else, !dbg !8474

if.then4:                                         ; preds = %if.then
  %19 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8475
  %pkt5 = getelementptr inbounds %struct.playlist, %struct.playlist* %19, i32 0, i32 10, !dbg !8476
  %duration6 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt5, i32 0, i32 9, !dbg !8477
  %20 = load i64, i64* %duration6, align 8, !dbg !8477
  %21 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8478
  %id3_offset7 = getelementptr inbounds %struct.playlist, %struct.playlist* %21, i32 0, i32 33, !dbg !8479
  %22 = load i64, i64* %id3_offset7, align 8, !dbg !8480
  %add8 = add nsw i64 %22, %20, !dbg !8480
  store i64 %add8, i64* %id3_offset7, align 8, !dbg !8480
  br label %if.end, !dbg !8478

if.else:                                          ; preds = %if.then
  %23 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8481
  %id3_offset9 = getelementptr inbounds %struct.playlist, %struct.playlist* %23, i32 0, i32 33, !dbg !8482
  store i64 -1, i64* %id3_offset9, align 8, !dbg !8483
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end13, !dbg !8484

if.else10:                                        ; preds = %entry
  %24 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8485
  %pkt11 = getelementptr inbounds %struct.playlist, %struct.playlist* %24, i32 0, i32 10, !dbg !8487
  %dts12 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt11, i32 0, i32 2, !dbg !8488
  store i64 -9223372036854775808, i64* %dts12, align 8, !dbg !8489
  br label %if.end13

if.end13:                                         ; preds = %if.else10, %if.end
  %25 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8490
  %pkt14 = getelementptr inbounds %struct.playlist, %struct.playlist* %25, i32 0, i32 10, !dbg !8492
  %duration15 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt14, i32 0, i32 9, !dbg !8493
  %26 = load i64, i64* %duration15, align 8, !dbg !8493
  %tobool16 = icmp ne i64 %26, 0, !dbg !8490
  br i1 %tobool16, label %if.then17, label %if.end33, !dbg !8494

if.then17:                                        ; preds = %if.end13
  %27 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8495
  %pkt18 = getelementptr inbounds %struct.playlist, %struct.playlist* %27, i32 0, i32 10, !dbg !8496
  %duration19 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt18, i32 0, i32 9, !dbg !8497
  %28 = load i64, i64* %duration19, align 8, !dbg !8497
  %29 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8498
  %pkt20 = getelementptr inbounds %struct.playlist, %struct.playlist* %29, i32 0, i32 10, !dbg !8499
  %stream_index21 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt20, i32 0, i32 5, !dbg !8500
  %30 = load i32, i32* %stream_index21, align 4, !dbg !8500
  %idxprom22 = sext i32 %30 to i64, !dbg !8501
  %31 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8501
  %ctx23 = getelementptr inbounds %struct.playlist, %struct.playlist* %31, i32 0, i32 9, !dbg !8502
  %32 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx23, align 8, !dbg !8502
  %streams24 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %32, i32 0, i32 7, !dbg !8503
  %33 = load %struct.AVStream**, %struct.AVStream*** %streams24, align 8, !dbg !8503
  %arrayidx25 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %33, i64 %idxprom22, !dbg !8501
  %34 = load %struct.AVStream*, %struct.AVStream** %arrayidx25, align 8, !dbg !8501
  %time_base26 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %34, i32 0, i32 4, !dbg !8504
  %num28 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral27, i32 0, i32 0, !dbg !8505
  store i32 1, i32* %num28, align 4, !dbg !8505
  %den29 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral27, i32 0, i32 1, !dbg !8505
  store i32 90000, i32* %den29, align 4, !dbg !8505
  %35 = bitcast %struct.AVRational* %time_base26 to i64*, !dbg !8506
  %36 = load i64, i64* %35, align 8, !dbg !8506
  %37 = bitcast %struct.AVRational* %.compoundliteral27 to i64*, !dbg !8506
  %38 = load i64, i64* %37, align 4, !dbg !8506
  %call30 = call i64 @av_rescale_q(i64 %28, i64 %36, i64 %38) #2, !dbg !8506
  %39 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8507
  %pkt31 = getelementptr inbounds %struct.playlist, %struct.playlist* %39, i32 0, i32 10, !dbg !8508
  %duration32 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt31, i32 0, i32 9, !dbg !8509
  store i64 %call30, i64* %duration32, align 8, !dbg !8510
  br label %if.end33, !dbg !8507

if.end33:                                         ; preds = %if.then17, %if.end13
  %40 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8511
  %pkt34 = getelementptr inbounds %struct.playlist, %struct.playlist* %40, i32 0, i32 10, !dbg !8512
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt34, i32 0, i32 1, !dbg !8513
  store i64 -9223372036854775808, i64* %pts, align 8, !dbg !8514
  ret void, !dbg !8515
}

; Function Attrs: nounwind readnone
declare i64 @av_rescale_q(i64, i64, i64) #9

; Function Attrs: nounwind uwtable
define internal i64 @get_timebase(%struct.playlist* %pls) #0 !dbg !8516 {
entry:
  %retval = alloca %struct.AVRational, align 4
  %pls.addr = alloca %struct.playlist*, align 8
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !8519, metadata !2357), !dbg !8520
  %0 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8521
  %is_id3_timestamped = getelementptr inbounds %struct.playlist, %struct.playlist* %0, i32 0, i32 31, !dbg !8523
  %1 = load i32, i32* %is_id3_timestamped, align 4, !dbg !8523
  %tobool = icmp ne i32 %1, 0, !dbg !8521
  br i1 %tobool, label %if.then, label %if.end, !dbg !8524

if.then:                                          ; preds = %entry
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %retval, i32 0, i32 0, !dbg !8525
  store i32 1, i32* %num, align 4, !dbg !8525
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %retval, i32 0, i32 1, !dbg !8525
  store i32 90000, i32* %den, align 4, !dbg !8525
  br label %return, !dbg !8526

if.end:                                           ; preds = %entry
  %2 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8527
  %pkt = getelementptr inbounds %struct.playlist, %struct.playlist* %2, i32 0, i32 10, !dbg !8528
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt, i32 0, i32 5, !dbg !8529
  %3 = load i32, i32* %stream_index, align 4, !dbg !8529
  %idxprom = sext i32 %3 to i64, !dbg !8530
  %4 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8530
  %ctx = getelementptr inbounds %struct.playlist, %struct.playlist* %4, i32 0, i32 9, !dbg !8531
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !8531
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 7, !dbg !8532
  %6 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !8532
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %6, i64 %idxprom, !dbg !8530
  %7 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !8530
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %7, i32 0, i32 4, !dbg !8533
  %8 = bitcast %struct.AVRational* %retval to i8*, !dbg !8533
  %9 = bitcast %struct.AVRational* %time_base to i8*, !dbg !8533
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 8, i32 4, i1 false), !dbg !8533
  br label %return, !dbg !8534

return:                                           ; preds = %if.end, %if.then
  %10 = bitcast %struct.AVRational* %retval to i64*, !dbg !8535
  %11 = load i64, i64* %10, align 4, !dbg !8535
  ret i64 %11, !dbg !8535
}

; Function Attrs: nounwind readnone
declare i64 @av_rescale_rnd(i64, i64, i64, i32) #9

declare void @av_packet_unref(%struct.AVPacket*) #1

; Function Attrs: nounwind uwtable
define internal i32 @compare_ts_with_wrapdetect(i64 %ts_a, %struct.playlist* %pls_a, i64 %ts_b, %struct.playlist* %pls_b) #0 !dbg !8536 {
entry:
  %ts_a.addr = alloca i64, align 8
  %pls_a.addr = alloca %struct.playlist*, align 8
  %ts_b.addr = alloca i64, align 8
  %pls_b.addr = alloca %struct.playlist*, align 8
  %scaled_ts_a = alloca i64, align 8
  %agg.tmp = alloca %struct.AVRational, align 4
  %.compoundliteral = alloca %struct.AVRational, align 4
  %scaled_ts_b = alloca i64, align 8
  %agg.tmp2 = alloca %struct.AVRational, align 4
  %.compoundliteral4 = alloca %struct.AVRational, align 4
  store i64 %ts_a, i64* %ts_a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ts_a.addr, metadata !8539, metadata !2357), !dbg !8540
  store %struct.playlist* %pls_a, %struct.playlist** %pls_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls_a.addr, metadata !8541, metadata !2357), !dbg !8542
  store i64 %ts_b, i64* %ts_b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ts_b.addr, metadata !8543, metadata !2357), !dbg !8544
  store %struct.playlist* %pls_b, %struct.playlist** %pls_b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls_b.addr, metadata !8545, metadata !2357), !dbg !8546
  call void @llvm.dbg.declare(metadata i64* %scaled_ts_a, metadata !8547, metadata !2357), !dbg !8548
  %0 = load i64, i64* %ts_a.addr, align 8, !dbg !8549
  %1 = load %struct.playlist*, %struct.playlist** %pls_a.addr, align 8, !dbg !8550
  %call = call i64 @get_timebase(%struct.playlist* %1), !dbg !8551
  %2 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !8551
  store i64 %call, i64* %2, align 4, !dbg !8551
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !8552
  store i32 1, i32* %num, align 4, !dbg !8552
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !8552
  store i32 90000, i32* %den, align 4, !dbg !8552
  %3 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !8553
  %4 = load i64, i64* %3, align 4, !dbg !8553
  %5 = bitcast %struct.AVRational* %.compoundliteral to i64*, !dbg !8553
  %6 = load i64, i64* %5, align 4, !dbg !8553
  %call1 = call i64 @av_rescale_q(i64 %0, i64 %4, i64 %6) #2, !dbg !8554
  store i64 %call1, i64* %scaled_ts_a, align 8, !dbg !8548
  call void @llvm.dbg.declare(metadata i64* %scaled_ts_b, metadata !8556, metadata !2357), !dbg !8557
  %7 = load i64, i64* %ts_b.addr, align 8, !dbg !8558
  %8 = load %struct.playlist*, %struct.playlist** %pls_b.addr, align 8, !dbg !8559
  %call3 = call i64 @get_timebase(%struct.playlist* %8), !dbg !8560
  %9 = bitcast %struct.AVRational* %agg.tmp2 to i64*, !dbg !8560
  store i64 %call3, i64* %9, align 4, !dbg !8560
  %num5 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral4, i32 0, i32 0, !dbg !8561
  store i32 1, i32* %num5, align 4, !dbg !8561
  %den6 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral4, i32 0, i32 1, !dbg !8561
  store i32 90000, i32* %den6, align 4, !dbg !8561
  %10 = bitcast %struct.AVRational* %agg.tmp2 to i64*, !dbg !8562
  %11 = load i64, i64* %10, align 4, !dbg !8562
  %12 = bitcast %struct.AVRational* %.compoundliteral4 to i64*, !dbg !8562
  %13 = load i64, i64* %12, align 4, !dbg !8562
  %call7 = call i64 @av_rescale_q(i64 %7, i64 %11, i64 %13) #2, !dbg !8563
  store i64 %call7, i64* %scaled_ts_b, align 8, !dbg !8557
  %14 = load i64, i64* %scaled_ts_a, align 8, !dbg !8564
  %15 = load i64, i64* %scaled_ts_b, align 8, !dbg !8565
  %call8 = call i64 @av_compare_mod(i64 %14, i64 %15, i64 8589934592), !dbg !8566
  %conv = trunc i64 %call8 to i32, !dbg !8566
  ret i32 %conv, !dbg !8567
}

declare i64 @av_compare_mod(i64, i64, i64) #1

; Function Attrs: nounwind uwtable
define internal void @free_playlist_list(%struct.HLSContext* %c) #0 !dbg !8568 {
entry:
  %c.addr = alloca %struct.HLSContext*, align 8
  %i = alloca i32, align 4
  %pls = alloca %struct.playlist*, align 8
  store %struct.HLSContext* %c, %struct.HLSContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c.addr, metadata !8571, metadata !2357), !dbg !8572
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8573, metadata !2357), !dbg !8574
  store i32 0, i32* %i, align 4, !dbg !8575
  br label %for.cond, !dbg !8577

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8578
  %1 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !8581
  %n_playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %1, i32 0, i32 4, !dbg !8582
  %2 = load i32, i32* %n_playlists, align 8, !dbg !8582
  %cmp = icmp slt i32 %0, %2, !dbg !8583
  br i1 %cmp, label %for.body, label %for.end, !dbg !8584

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls, metadata !8585, metadata !2357), !dbg !8587
  %3 = load i32, i32* %i, align 4, !dbg !8588
  %idxprom = sext i32 %3 to i64, !dbg !8589
  %4 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !8589
  %playlists = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 5, !dbg !8590
  %5 = load %struct.playlist**, %struct.playlist*** %playlists, align 8, !dbg !8590
  %arrayidx = getelementptr inbounds %struct.playlist*, %struct.playlist** %5, i64 %idxprom, !dbg !8589
  %6 = load %struct.playlist*, %struct.playlist** %arrayidx, align 8, !dbg !8589
  store %struct.playlist* %6, %struct.playlist** %pls, align 8, !dbg !8587
  %7 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8591
  call void @free_segment_list(%struct.playlist* %7), !dbg !8592
  %8 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8593
  call void @free_init_section_list(%struct.playlist* %8), !dbg !8594
  %9 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8595
  %main_streams = getelementptr inbounds %struct.playlist, %struct.playlist* %9, i32 0, i32 12, !dbg !8596
  %10 = bitcast %struct.AVStream*** %main_streams to i8*, !dbg !8597
  call void @av_freep(i8* %10), !dbg !8598
  %11 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8599
  %renditions = getelementptr inbounds %struct.playlist, %struct.playlist* %11, i32 0, i32 44, !dbg !8600
  %12 = bitcast %struct.rendition*** %renditions to i8*, !dbg !8601
  call void @av_freep(i8* %12), !dbg !8602
  %13 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8603
  %id3_buf = getelementptr inbounds %struct.playlist, %struct.playlist* %13, i32 0, i32 34, !dbg !8604
  %14 = bitcast i8** %id3_buf to i8*, !dbg !8605
  call void @av_freep(i8* %14), !dbg !8606
  %15 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8607
  %id3_initial = getelementptr inbounds %struct.playlist, %struct.playlist* %15, i32 0, i32 36, !dbg !8608
  call void @av_dict_free(%struct.AVDictionary** %id3_initial), !dbg !8609
  %16 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8610
  %id3_deferred_extra = getelementptr inbounds %struct.playlist, %struct.playlist* %16, i32 0, i32 39, !dbg !8611
  call void @ff_id3v2_free_extra_meta(%struct.ID3v2ExtraMeta** %id3_deferred_extra), !dbg !8612
  %17 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8613
  %init_sec_buf = getelementptr inbounds %struct.playlist, %struct.playlist* %17, i32 0, i32 25, !dbg !8614
  %18 = bitcast i8** %init_sec_buf to i8*, !dbg !8615
  call void @av_freep(i8* %18), !dbg !8616
  %19 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8617
  %pkt = getelementptr inbounds %struct.playlist, %struct.playlist* %19, i32 0, i32 10, !dbg !8618
  call void @av_packet_unref(%struct.AVPacket* %pkt), !dbg !8619
  %20 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8620
  %pb = getelementptr inbounds %struct.playlist, %struct.playlist* %20, i32 0, i32 1, !dbg !8621
  %buffer = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %pb, i32 0, i32 1, !dbg !8622
  %21 = bitcast i8** %buffer to i8*, !dbg !8623
  call void @av_freep(i8* %21), !dbg !8624
  %22 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8625
  %input = getelementptr inbounds %struct.playlist, %struct.playlist* %22, i32 0, i32 3, !dbg !8627
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %input, align 8, !dbg !8627
  %tobool = icmp ne %struct.AVIOContext* %23, null, !dbg !8625
  br i1 %tobool, label %if.then, label %if.end, !dbg !8628

if.then:                                          ; preds = %for.body
  %24 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !8629
  %ctx = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %24, i32 0, i32 1, !dbg !8630
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx, align 8, !dbg !8630
  %26 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8631
  %input1 = getelementptr inbounds %struct.playlist, %struct.playlist* %26, i32 0, i32 3, !dbg !8632
  call void @ff_format_io_close(%struct.AVFormatContext* %25, %struct.AVIOContext** %input1), !dbg !8633
  br label %if.end, !dbg !8633

if.end:                                           ; preds = %if.then, %for.body
  %27 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8634
  %input_read_done = getelementptr inbounds %struct.playlist, %struct.playlist* %27, i32 0, i32 4, !dbg !8635
  store i32 0, i32* %input_read_done, align 8, !dbg !8636
  %28 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8637
  %input_next = getelementptr inbounds %struct.playlist, %struct.playlist* %28, i32 0, i32 5, !dbg !8639
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %input_next, align 8, !dbg !8639
  %tobool2 = icmp ne %struct.AVIOContext* %29, null, !dbg !8637
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !8640

if.then3:                                         ; preds = %if.end
  %30 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !8641
  %ctx4 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %30, i32 0, i32 1, !dbg !8642
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx4, align 8, !dbg !8642
  %32 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8643
  %input_next5 = getelementptr inbounds %struct.playlist, %struct.playlist* %32, i32 0, i32 5, !dbg !8644
  call void @ff_format_io_close(%struct.AVFormatContext* %31, %struct.AVIOContext** %input_next5), !dbg !8645
  br label %if.end6, !dbg !8645

if.end6:                                          ; preds = %if.then3, %if.end
  %33 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8646
  %input_next_requested = getelementptr inbounds %struct.playlist, %struct.playlist* %33, i32 0, i32 6, !dbg !8647
  store i32 0, i32* %input_next_requested, align 8, !dbg !8648
  %34 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8649
  %ctx7 = getelementptr inbounds %struct.playlist, %struct.playlist* %34, i32 0, i32 9, !dbg !8651
  %35 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx7, align 8, !dbg !8651
  %tobool8 = icmp ne %struct.AVFormatContext* %35, null, !dbg !8649
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !8652

if.then9:                                         ; preds = %if.end6
  %36 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8653
  %ctx10 = getelementptr inbounds %struct.playlist, %struct.playlist* %36, i32 0, i32 9, !dbg !8655
  %37 = load %struct.AVFormatContext*, %struct.AVFormatContext** %ctx10, align 8, !dbg !8655
  %pb11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %37, i32 0, i32 4, !dbg !8656
  store %struct.AVIOContext* null, %struct.AVIOContext** %pb11, align 8, !dbg !8657
  %38 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8658
  %ctx12 = getelementptr inbounds %struct.playlist, %struct.playlist* %38, i32 0, i32 9, !dbg !8659
  call void @avformat_close_input(%struct.AVFormatContext** %ctx12), !dbg !8660
  br label %if.end13, !dbg !8661

if.end13:                                         ; preds = %if.then9, %if.end6
  %39 = load %struct.playlist*, %struct.playlist** %pls, align 8, !dbg !8662
  %40 = bitcast %struct.playlist* %39 to i8*, !dbg !8662
  call void @av_free(i8* %40), !dbg !8663
  br label %for.inc, !dbg !8664

for.inc:                                          ; preds = %if.end13
  %41 = load i32, i32* %i, align 4, !dbg !8665
  %inc = add nsw i32 %41, 1, !dbg !8665
  store i32 %inc, i32* %i, align 4, !dbg !8665
  br label %for.cond, !dbg !8667, !llvm.loop !8668

for.end:                                          ; preds = %for.cond
  %42 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !8670
  %playlists14 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %42, i32 0, i32 5, !dbg !8671
  %43 = bitcast %struct.playlist*** %playlists14 to i8*, !dbg !8672
  call void @av_freep(i8* %43), !dbg !8673
  %44 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !8674
  %n_playlists15 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %44, i32 0, i32 4, !dbg !8675
  store i32 0, i32* %n_playlists15, align 8, !dbg !8676
  ret void, !dbg !8677
}

; Function Attrs: nounwind uwtable
define internal void @free_variant_list(%struct.HLSContext* %c) #0 !dbg !8678 {
entry:
  %c.addr = alloca %struct.HLSContext*, align 8
  %i = alloca i32, align 4
  %var = alloca %struct.variant*, align 8
  store %struct.HLSContext* %c, %struct.HLSContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c.addr, metadata !8679, metadata !2357), !dbg !8680
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8681, metadata !2357), !dbg !8682
  store i32 0, i32* %i, align 4, !dbg !8683
  br label %for.cond, !dbg !8685

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8686
  %1 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !8689
  %n_variants = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %1, i32 0, i32 2, !dbg !8690
  %2 = load i32, i32* %n_variants, align 8, !dbg !8690
  %cmp = icmp slt i32 %0, %2, !dbg !8691
  br i1 %cmp, label %for.body, label %for.end, !dbg !8692

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.variant** %var, metadata !8693, metadata !2357), !dbg !8695
  %3 = load i32, i32* %i, align 4, !dbg !8696
  %idxprom = sext i32 %3 to i64, !dbg !8697
  %4 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !8697
  %variants = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 3, !dbg !8698
  %5 = load %struct.variant**, %struct.variant*** %variants, align 8, !dbg !8698
  %arrayidx = getelementptr inbounds %struct.variant*, %struct.variant** %5, i64 %idxprom, !dbg !8697
  %6 = load %struct.variant*, %struct.variant** %arrayidx, align 8, !dbg !8697
  store %struct.variant* %6, %struct.variant** %var, align 8, !dbg !8695
  %7 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !8699
  %playlists = getelementptr inbounds %struct.variant, %struct.variant* %7, i32 0, i32 2, !dbg !8700
  %8 = bitcast %struct.playlist*** %playlists to i8*, !dbg !8701
  call void @av_freep(i8* %8), !dbg !8702
  %9 = load %struct.variant*, %struct.variant** %var, align 8, !dbg !8703
  %10 = bitcast %struct.variant* %9 to i8*, !dbg !8703
  call void @av_free(i8* %10), !dbg !8704
  br label %for.inc, !dbg !8705

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !8706
  %inc = add nsw i32 %11, 1, !dbg !8706
  store i32 %inc, i32* %i, align 4, !dbg !8706
  br label %for.cond, !dbg !8708, !llvm.loop !8709

for.end:                                          ; preds = %for.cond
  %12 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !8711
  %variants1 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %12, i32 0, i32 3, !dbg !8712
  %13 = bitcast %struct.variant*** %variants1 to i8*, !dbg !8713
  call void @av_freep(i8* %13), !dbg !8714
  %14 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !8715
  %n_variants2 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %14, i32 0, i32 2, !dbg !8716
  store i32 0, i32* %n_variants2, align 8, !dbg !8717
  ret void, !dbg !8718
}

; Function Attrs: nounwind uwtable
define internal void @free_rendition_list(%struct.HLSContext* %c) #0 !dbg !8719 {
entry:
  %c.addr = alloca %struct.HLSContext*, align 8
  %i = alloca i32, align 4
  store %struct.HLSContext* %c, %struct.HLSContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HLSContext** %c.addr, metadata !8720, metadata !2357), !dbg !8721
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8722, metadata !2357), !dbg !8723
  store i32 0, i32* %i, align 4, !dbg !8724
  br label %for.cond, !dbg !8726

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8727
  %1 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !8730
  %n_renditions = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %1, i32 0, i32 6, !dbg !8731
  %2 = load i32, i32* %n_renditions, align 8, !dbg !8731
  %cmp = icmp slt i32 %0, %2, !dbg !8732
  br i1 %cmp, label %for.body, label %for.end, !dbg !8733

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !8734
  %idxprom = sext i32 %3 to i64, !dbg !8735
  %4 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !8735
  %renditions = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %4, i32 0, i32 7, !dbg !8736
  %5 = load %struct.rendition**, %struct.rendition*** %renditions, align 8, !dbg !8736
  %arrayidx = getelementptr inbounds %struct.rendition*, %struct.rendition** %5, i64 %idxprom, !dbg !8735
  %6 = bitcast %struct.rendition** %arrayidx to i8*, !dbg !8737
  call void @av_freep(i8* %6), !dbg !8738
  br label %for.inc, !dbg !8738

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !8739
  %inc = add nsw i32 %7, 1, !dbg !8739
  store i32 %inc, i32* %i, align 4, !dbg !8739
  br label %for.cond, !dbg !8741, !llvm.loop !8742

for.end:                                          ; preds = %for.cond
  %8 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !8744
  %renditions1 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %8, i32 0, i32 7, !dbg !8745
  %9 = bitcast %struct.rendition*** %renditions1 to i8*, !dbg !8746
  call void @av_freep(i8* %9), !dbg !8747
  %10 = load %struct.HLSContext*, %struct.HLSContext** %c.addr, align 8, !dbg !8748
  %n_renditions2 = getelementptr inbounds %struct.HLSContext, %struct.HLSContext* %10, i32 0, i32 6, !dbg !8749
  store i32 0, i32* %n_renditions2, align 8, !dbg !8750
  ret void, !dbg !8751
}

; Function Attrs: nounwind uwtable
define internal void @free_segment_list(%struct.playlist* %pls) #0 !dbg !8752 {
entry:
  %pls.addr = alloca %struct.playlist*, align 8
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !8753, metadata !2357), !dbg !8754
  %0 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8755
  %segments = getelementptr inbounds %struct.playlist, %struct.playlist* %0, i32 0, i32 19, !dbg !8756
  %1 = load %struct.segment**, %struct.segment*** %segments, align 8, !dbg !8756
  %2 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8757
  %n_segments = getelementptr inbounds %struct.playlist, %struct.playlist* %2, i32 0, i32 18, !dbg !8758
  %3 = load i32, i32* %n_segments, align 4, !dbg !8758
  call void @free_segment_dynarray(%struct.segment** %1, i32 %3), !dbg !8759
  %4 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8760
  %segments1 = getelementptr inbounds %struct.playlist, %struct.playlist* %4, i32 0, i32 19, !dbg !8761
  %5 = bitcast %struct.segment*** %segments1 to i8*, !dbg !8762
  call void @av_freep(i8* %5), !dbg !8763
  %6 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8764
  %n_segments2 = getelementptr inbounds %struct.playlist, %struct.playlist* %6, i32 0, i32 18, !dbg !8765
  store i32 0, i32* %n_segments2, align 4, !dbg !8766
  ret void, !dbg !8767
}

; Function Attrs: nounwind uwtable
define internal void @free_init_section_list(%struct.playlist* %pls) #0 !dbg !8768 {
entry:
  %pls.addr = alloca %struct.playlist*, align 8
  %i = alloca i32, align 4
  store %struct.playlist* %pls, %struct.playlist** %pls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.playlist** %pls.addr, metadata !8769, metadata !2357), !dbg !8770
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8771, metadata !2357), !dbg !8772
  store i32 0, i32* %i, align 4, !dbg !8773
  br label %for.cond, !dbg !8775

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8776
  %1 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8779
  %n_init_sections = getelementptr inbounds %struct.playlist, %struct.playlist* %1, i32 0, i32 45, !dbg !8780
  %2 = load i32, i32* %n_init_sections, align 8, !dbg !8780
  %cmp = icmp slt i32 %0, %2, !dbg !8781
  br i1 %cmp, label %for.body, label %for.end, !dbg !8782

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !8783
  %idxprom = sext i32 %3 to i64, !dbg !8785
  %4 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8785
  %init_sections = getelementptr inbounds %struct.playlist, %struct.playlist* %4, i32 0, i32 46, !dbg !8786
  %5 = load %struct.segment**, %struct.segment*** %init_sections, align 8, !dbg !8786
  %arrayidx = getelementptr inbounds %struct.segment*, %struct.segment** %5, i64 %idxprom, !dbg !8785
  %6 = load %struct.segment*, %struct.segment** %arrayidx, align 8, !dbg !8785
  %url = getelementptr inbounds %struct.segment, %struct.segment* %6, i32 0, i32 3, !dbg !8787
  %7 = bitcast i8** %url to i8*, !dbg !8788
  call void @av_freep(i8* %7), !dbg !8789
  %8 = load i32, i32* %i, align 4, !dbg !8790
  %idxprom1 = sext i32 %8 to i64, !dbg !8791
  %9 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8791
  %init_sections2 = getelementptr inbounds %struct.playlist, %struct.playlist* %9, i32 0, i32 46, !dbg !8792
  %10 = load %struct.segment**, %struct.segment*** %init_sections2, align 8, !dbg !8792
  %arrayidx3 = getelementptr inbounds %struct.segment*, %struct.segment** %10, i64 %idxprom1, !dbg !8791
  %11 = bitcast %struct.segment** %arrayidx3 to i8*, !dbg !8793
  call void @av_freep(i8* %11), !dbg !8794
  br label %for.inc, !dbg !8795

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !8796
  %inc = add nsw i32 %12, 1, !dbg !8796
  store i32 %inc, i32* %i, align 4, !dbg !8796
  br label %for.cond, !dbg !8798, !llvm.loop !8799

for.end:                                          ; preds = %for.cond
  %13 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8801
  %init_sections4 = getelementptr inbounds %struct.playlist, %struct.playlist* %13, i32 0, i32 46, !dbg !8802
  %14 = bitcast %struct.segment*** %init_sections4 to i8*, !dbg !8803
  call void @av_freep(i8* %14), !dbg !8804
  %15 = load %struct.playlist*, %struct.playlist** %pls.addr, align 8, !dbg !8805
  %n_init_sections5 = getelementptr inbounds %struct.playlist, %struct.playlist* %15, i32 0, i32 45, !dbg !8806
  store i32 0, i32* %n_init_sections5, align 8, !dbg !8807
  ret void, !dbg !8808
}

declare void @avformat_close_input(%struct.AVFormatContext**) #1

declare void @ff_read_frame_flush(%struct.AVFormatContext*) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2352, !2353}
!llvm.ident = !{!2354}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !958, globals: !993)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a/[inter]libavformat--hls.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!2 = !{!3, !463, !485, !506, !536, !547, !571, !578, !596, !620, !639, !649, !658, !667, !866, !883, !889, !897, !909, !918, !927, !933, !938, !944, !949}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !4, line: 215, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462}
!6 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!7 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!8 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!9 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!10 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!11 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!12 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!13 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!14 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!15 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!16 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!17 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!19 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!20 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!21 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!22 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!23 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!24 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!25 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!26 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!27 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!28 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!29 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!30 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!31 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!32 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!33 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!34 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!35 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!36 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!37 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!38 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!39 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!40 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!41 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!43 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!44 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!45 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!46 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!47 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!48 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!49 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!50 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!53 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!54 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!55 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!56 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!57 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!58 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!59 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!60 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!61 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!62 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!63 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!64 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!65 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!66 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!67 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!68 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!69 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!70 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!71 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!72 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!73 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!74 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!75 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!76 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!77 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!78 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!79 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!80 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!81 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!82 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!83 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!84 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!85 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!86 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!87 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!88 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!89 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!90 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!91 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!93 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!94 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!95 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!97 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!98 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!99 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!100 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!101 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!102 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!103 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!104 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!105 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!106 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!107 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!108 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!109 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!110 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!112 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!113 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!114 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!115 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!116 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!117 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!118 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!119 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!120 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!121 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!122 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!123 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!125 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!126 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!127 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!128 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!129 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!130 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!131 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!133 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!134 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!136 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!137 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!138 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!139 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!140 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!141 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!142 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!143 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!144 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!147 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!148 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!149 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!150 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!151 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!152 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!153 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!154 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!155 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!156 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!157 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!158 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!159 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!160 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!161 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!163 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!164 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!165 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!166 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!167 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!168 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!169 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!170 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!171 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!172 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!173 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!174 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!175 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!176 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!177 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!178 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!179 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!180 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!181 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!182 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!183 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!184 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!185 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!186 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!187 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!188 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!189 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!190 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!191 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!192 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!193 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!194 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!195 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!197 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!198 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!199 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!200 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!201 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!202 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!203 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!204 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!205 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!206 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!207 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!209 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!210 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!211 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!212 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!213 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!214 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!215 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!216 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!217 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!218 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!219 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!220 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!221 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!222 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!223 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!224 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!225 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!226 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!227 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!228 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!229 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!230 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!231 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!232 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!233 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!235 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!236 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!237 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!238 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!239 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!240 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!241 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!242 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!243 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!244 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!245 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!247 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!248 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!249 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!250 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!251 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!269 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!279 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!280 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!281 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!282 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!283 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!284 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!285 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!286 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!287 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!288 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!320 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!321 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!322 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!323 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!325 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!326 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!327 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!328 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!329 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!330 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!331 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!332 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!333 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!334 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!335 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!336 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!337 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!338 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!339 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!341 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!342 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!343 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!344 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!345 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!348 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!349 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!350 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!351 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!352 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!353 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!354 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!355 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!356 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!357 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!358 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!359 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!361 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!362 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!363 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!364 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!365 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!366 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!367 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!370 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!371 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!372 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!373 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!374 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!376 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!377 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!378 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!379 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!381 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!382 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!383 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!384 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!385 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!386 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!387 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!389 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!390 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!391 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!392 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!393 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!394 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!395 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!396 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!397 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!398 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!399 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!400 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!403 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!404 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!405 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!407 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!408 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!409 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!410 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!411 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!412 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!413 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!415 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!416 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!417 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!418 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!419 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!420 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!422 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!424 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!425 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!426 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!427 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!428 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!429 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!430 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!431 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!432 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!434 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!435 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!436 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!437 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!438 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!439 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!441 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!442 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!444 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!445 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!446 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!447 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!448 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!449 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!450 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!451 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!452 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!453 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!454 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!455 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!456 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!457 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!458 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!459 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!460 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!461 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!462 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!463 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !464, line: 221, size: 32, align: 32, elements: !465)
!464 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!465 = !{!466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484}
!466 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!467 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!468 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!469 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!470 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!471 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!472 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!473 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!474 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!475 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!476 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!477 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!478 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!479 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!480 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!481 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!482 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!483 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!484 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!485 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !486, line: 29, size: 32, align: 32, elements: !487)
!486 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!487 = !{!488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505}
!488 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!489 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!490 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!491 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!492 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!493 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!494 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!495 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!496 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!497 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!498 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!499 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!500 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!501 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!502 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!503 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!504 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!505 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!506 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !4, line: 1175, size: 32, align: 32, elements: !507)
!507 = !{!508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535}
!508 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!509 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!510 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!511 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!512 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!513 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!514 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!515 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!516 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!517 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!518 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!519 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!520 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!521 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!522 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!523 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!524 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!525 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!526 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!527 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!528 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!529 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!530 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!531 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!532 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!533 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!534 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!535 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!536 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !537, line: 272, size: 32, align: 32, elements: !538)
!537 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!538 = !{!539, !540, !541, !542, !543, !544, !545, !546}
!539 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!540 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!541 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!542 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!543 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!544 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!545 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!546 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!547 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !548, line: 48, size: 32, align: 32, elements: !549)
!548 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!549 = !{!550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570}
!550 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!551 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!552 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!553 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!554 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!555 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!556 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!557 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!558 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!559 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!560 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!561 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!562 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!563 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!564 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!565 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!566 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!567 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!568 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!569 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!570 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!571 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !572, line: 516, size: 32, align: 32, elements: !573)
!572 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!573 = !{!574, !575, !576, !577}
!574 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!575 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!576 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!577 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!578 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !572, line: 440, size: 32, align: 32, elements: !579)
!579 = !{!580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595}
!580 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!581 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!582 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!583 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!584 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!585 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!586 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!587 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!588 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!589 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!590 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!591 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!592 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!593 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!594 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!595 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!596 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !572, line: 464, size: 32, align: 32, elements: !597)
!597 = !{!598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619}
!598 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!599 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!600 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!601 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!602 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!603 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!604 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!605 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!606 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!607 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!608 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!609 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!610 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!611 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!612 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!613 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!614 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!615 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!616 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!617 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!618 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!619 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!620 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !572, line: 493, size: 32, align: 32, elements: !621)
!621 = !{!622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638}
!622 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!623 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!624 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!625 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!626 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!627 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!628 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!629 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!630 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!631 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!632 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!633 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!634 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!635 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!636 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!637 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!638 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!639 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !572, line: 538, size: 32, align: 32, elements: !640)
!640 = !{!641, !642, !643, !644, !645, !646, !647, !648}
!641 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!642 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!643 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!644 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!645 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!646 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!647 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!648 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!649 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVIODataMarkerType", file: !650, line: 111, size: 32, align: 32, elements: !651)
!650 = !DIFile(filename: "./libavformat/avio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!651 = !{!652, !653, !654, !655, !656, !657}
!652 = !DIEnumerator(name: "AVIO_DATA_MARKER_HEADER", value: 0)
!653 = !DIEnumerator(name: "AVIO_DATA_MARKER_SYNC_POINT", value: 1)
!654 = !DIEnumerator(name: "AVIO_DATA_MARKER_BOUNDARY_POINT", value: 2)
!655 = !DIEnumerator(name: "AVIO_DATA_MARKER_UNKNOWN", value: 3)
!656 = !DIEnumerator(name: "AVIO_DATA_MARKER_TRAILER", value: 4)
!657 = !DIEnumerator(name: "AVIO_DATA_MARKER_FLUSH_POINT", value: 5)
!658 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !537, line: 199, size: 32, align: 32, elements: !659)
!659 = !{!660, !661, !662, !663, !664, !665, !666}
!660 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!661 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!662 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!663 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!664 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!665 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!666 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!667 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !572, line: 64, size: 32, align: 32, elements: !668)
!668 = !{!669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865}
!669 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!672 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!673 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!674 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!675 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!676 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!677 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!679 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!680 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!681 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!682 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!683 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!684 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!685 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!686 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!687 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!688 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!689 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!690 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!691 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!692 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!694 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!695 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!696 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!697 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!698 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!699 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!700 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!701 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!702 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!703 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!704 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!705 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!706 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!707 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!708 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!709 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!710 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!711 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!712 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!713 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!714 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!715 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!716 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!717 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!718 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!719 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!720 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!721 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!722 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!723 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!724 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!725 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!726 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!727 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!728 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!729 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!730 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!731 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!732 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!733 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!734 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!735 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!736 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!737 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!738 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!739 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!740 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!741 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!742 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!743 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!744 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!745 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!746 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!747 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!748 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!749 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!750 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!751 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!752 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!753 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!754 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!755 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!756 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!757 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!758 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!759 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!760 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!761 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!762 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!763 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!764 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!765 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!766 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!767 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!768 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!769 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!770 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!771 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!772 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!773 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!774 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!775 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!776 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!777 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!778 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!779 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!780 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!781 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!782 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!783 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!784 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!785 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!786 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!787 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!788 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!789 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!790 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!791 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!792 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!793 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!794 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!795 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!796 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!797 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!798 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!799 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!800 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!801 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!802 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!803 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!804 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!805 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!806 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!807 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!808 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!809 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!810 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!811 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!812 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!813 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!814 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!815 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!816 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!817 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!818 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!819 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!820 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!821 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!822 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!823 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!824 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!825 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!826 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!827 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!828 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!829 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!830 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!831 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!832 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!833 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!834 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!835 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!836 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!837 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!838 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!839 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!840 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!841 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!842 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!843 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!844 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!845 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!846 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!847 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!848 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!849 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!850 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!851 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!852 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!853 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!854 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!855 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!856 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!857 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!858 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!859 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!860 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!861 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!862 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!863 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!864 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!865 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !867, line: 58, size: 32, align: 32, elements: !868)
!867 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!868 = !{!869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882}
!869 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!870 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!871 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!872 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!873 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!874 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!875 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!876 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!877 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!878 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!879 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!880 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!881 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!882 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!883 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !4, line: 3865, size: 32, align: 32, elements: !884)
!884 = !{!885, !886, !887, !888}
!885 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!886 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!887 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!888 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!889 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !4, line: 1534, size: 32, align: 32, elements: !890)
!890 = !{!891, !892, !893, !894, !895, !896}
!891 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!892 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!893 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!894 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!895 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!896 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !4, line: 810, size: 32, align: 32, elements: !898)
!898 = !{!899, !900, !901, !902, !903, !904, !905, !906, !907, !908}
!899 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!900 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!901 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!902 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!903 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!904 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!905 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!906 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!907 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!908 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !4, line: 798, size: 32, align: 32, elements: !910)
!910 = !{!911, !912, !913, !914, !915, !916, !917}
!911 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!912 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!913 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!914 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!915 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!916 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!917 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!918 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVStreamParseType", file: !919, line: 782, size: 32, align: 32, elements: !920)
!919 = !DIFile(filename: "libavformat/avformat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!920 = !{!921, !922, !923, !924, !925, !926}
!921 = !DIEnumerator(name: "AVSTREAM_PARSE_NONE", value: 0)
!922 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL", value: 1)
!923 = !DIEnumerator(name: "AVSTREAM_PARSE_HEADERS", value: 2)
!924 = !DIEnumerator(name: "AVSTREAM_PARSE_TIMESTAMPS", value: 3)
!925 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_ONCE", value: 4)
!926 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_RAW", value: 5)
!927 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureStructure", file: !4, line: 5085, size: 32, align: 32, elements: !928)
!928 = !{!929, !930, !931, !932}
!929 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_UNKNOWN", value: 0)
!930 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_TOP_FIELD", value: 1)
!931 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_BOTTOM_FIELD", value: 2)
!932 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_FRAME", value: 3)
!933 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDurationEstimationMethod", file: !919, line: 1315, size: 32, align: 32, elements: !934)
!934 = !{!935, !936, !937}
!935 = !DIEnumerator(name: "AVFMT_DURATION_FROM_PTS", value: 0)
!936 = !DIEnumerator(name: "AVFMT_DURATION_FROM_STREAM", value: 1)
!937 = !DIEnumerator(name: "AVFMT_DURATION_FROM_BITRATE", value: 2)
!938 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PlaylistType", file: !939, line: 82, size: 32, align: 32, elements: !940)
!939 = !DIFile(filename: "libavformat/hls.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!940 = !{!941, !942, !943}
!941 = !DIEnumerator(name: "PLS_TYPE_UNSPECIFIED", value: 0)
!942 = !DIEnumerator(name: "PLS_TYPE_EVENT", value: 1)
!943 = !DIEnumerator(name: "PLS_TYPE_VOD", value: 2)
!944 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "KeyType", file: !939, line: 62, size: 32, align: 32, elements: !945)
!945 = !{!946, !947, !948}
!946 = !DIEnumerator(name: "KEY_NONE", value: 0)
!947 = !DIEnumerator(name: "KEY_AES_128", value: 1)
!948 = !DIEnumerator(name: "KEY_SAMPLE_AES", value: 2)
!949 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVRounding", file: !950, line: 79, size: 32, align: 32, elements: !951)
!950 = !DIFile(filename: "./libavutil/mathematics.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!951 = !{!952, !953, !954, !955, !956, !957}
!952 = !DIEnumerator(name: "AV_ROUND_ZERO", value: 0)
!953 = !DIEnumerator(name: "AV_ROUND_INF", value: 1)
!954 = !DIEnumerator(name: "AV_ROUND_DOWN", value: 2)
!955 = !DIEnumerator(name: "AV_ROUND_UP", value: 3)
!956 = !DIEnumerator(name: "AV_ROUND_NEAR_INF", value: 5)
!957 = !DIEnumerator(name: "AV_ROUND_PASS_MINMAX", value: 8192)
!958 = !{!959, !962, !963, !964, !965, !976, !970, !982, !986, !991}
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !960, line: 40, baseType: !961)
!960 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!961 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!963 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!964 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "ff_parse_key_val_cb", file: !966, line: 366, baseType: !967)
!966 = !DIFile(filename: "libavformat/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64, align: 64)
!968 = !DISubroutineType(types: !969)
!969 = !{null, !962, !970, !963, !973, !975}
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64, align: 64)
!971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !972)
!972 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64, align: 64)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64, align: 64)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64, align: 64)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64, align: 64)
!977 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !978, line: 221, size: 32, align: 8, elements: !979)
!978 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!979 = !{!980}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !977, file: !978, line: 221, baseType: !981, size: 32, align: 32)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !960, line: 51, baseType: !964)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64, align: 64)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64, align: 64)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !960, line: 48, baseType: !985)
!985 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64, align: 64)
!987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_64", file: !978, line: 220, size: 64, align: 8, elements: !989)
!989 = !{!990}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !988, file: !978, line: 220, baseType: !991, size: 64, align: 64)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !960, line: 55, baseType: !992)
!992 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!993 = !{!994, !2224, !2225, !2231, !2241, !2335}
!994 = distinct !DIGlobalVariable(name: "ff_hls_demuxer", scope: !0, file: !939, line: 2327, type: !995, isLocal: false, isDefinition: true, variable: %struct.AVInputFormat* @ff_hls_demuxer)
!995 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVInputFormat", file: !919, line: 777, baseType: !996)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVInputFormat", file: !919, line: 633, size: 1344, align: 64, elements: !997)
!997 = !{!998, !999, !1000, !1001, !1002, !1011, !1090, !1091, !1093, !1094, !1095, !1108, !2205, !2206, !2207, !2211, !2215, !2216, !2217, !2221, !2222, !2223}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !996, file: !919, line: 638, baseType: !970, size: 64, align: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !996, file: !919, line: 645, baseType: !970, size: 64, align: 64, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !996, file: !919, line: 652, baseType: !963, size: 32, align: 32, offset: 128)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !996, file: !919, line: 659, baseType: !970, size: 64, align: 64, offset: 192)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !996, file: !919, line: 661, baseType: !1003, size: 64, align: 64, offset: 256)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64, align: 64)
!1004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1005)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64, align: 64)
!1006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1007)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecTag", file: !966, line: 44, size: 64, align: 32, elements: !1008)
!1008 = !{!1009, !1010}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1007, file: !966, line: 45, baseType: !3, size: 32, align: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1007, file: !966, line: 46, baseType: !964, size: 32, align: 32, offset: 32)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !996, file: !919, line: 663, baseType: !1012, size: 64, align: 64, offset: 320)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64, align: 64)
!1013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1014)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !486, line: 143, baseType: !1015)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !486, line: 67, size: 640, align: 64, elements: !1016)
!1016 = !{!1017, !1018, !1022, !1049, !1050, !1051, !1052, !1056, !1062, !1064, !1068}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1015, file: !486, line: 72, baseType: !970, size: 64, align: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1015, file: !486, line: 78, baseType: !1019, size: 64, align: 64, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64, align: 64)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!970, !962}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1015, file: !486, line: 85, baseType: !1023, size: 64, align: 64, offset: 128)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64, align: 64)
!1024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1025)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !464, line: 246, size: 512, align: 64, elements: !1026)
!1026 = !{!1027, !1028, !1029, !1030, !1031, !1045, !1046, !1047, !1048}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1025, file: !464, line: 247, baseType: !970, size: 64, align: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1025, file: !464, line: 253, baseType: !970, size: 64, align: 64, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1025, file: !464, line: 259, baseType: !963, size: 32, align: 32, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1025, file: !464, line: 260, baseType: !463, size: 32, align: 32, offset: 160)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1025, file: !464, line: 271, baseType: !1032, size: 64, align: 64, offset: 192)
!1032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1025, file: !464, line: 265, size: 64, align: 64, elements: !1033)
!1033 = !{!1034, !1035, !1037, !1038}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1032, file: !464, line: 266, baseType: !959, size: 64, align: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1032, file: !464, line: 267, baseType: !1036, size: 64, align: 64)
!1036 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1032, file: !464, line: 268, baseType: !970, size: 64, align: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1032, file: !464, line: 270, baseType: !1039, size: 64, align: 32)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1040, line: 61, baseType: !1041)
!1040 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1040, line: 58, size: 64, align: 32, elements: !1042)
!1042 = !{!1043, !1044}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1041, file: !1040, line: 59, baseType: !963, size: 32, align: 32)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1041, file: !1040, line: 60, baseType: !963, size: 32, align: 32, offset: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1025, file: !464, line: 272, baseType: !1036, size: 64, align: 64, offset: 256)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1025, file: !464, line: 273, baseType: !1036, size: 64, align: 64, offset: 320)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1025, file: !464, line: 275, baseType: !963, size: 32, align: 32, offset: 384)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1025, file: !464, line: 300, baseType: !970, size: 64, align: 64, offset: 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1015, file: !486, line: 93, baseType: !963, size: 32, align: 32, offset: 192)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1015, file: !486, line: 99, baseType: !963, size: 32, align: 32, offset: 224)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1015, file: !486, line: 108, baseType: !963, size: 32, align: 32, offset: 256)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1015, file: !486, line: 113, baseType: !1053, size: 64, align: 64, offset: 320)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64, align: 64)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!962, !962, !962}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1015, file: !486, line: 123, baseType: !1057, size: 64, align: 64, offset: 384)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64, align: 64)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!1060, !1060}
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64, align: 64)
!1061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1015)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1015, file: !486, line: 130, baseType: !1063, size: 32, align: 32, offset: 448)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !486, line: 48, baseType: !485)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1015, file: !486, line: 136, baseType: !1065, size: 64, align: 64, offset: 512)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64, align: 64)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!1063, !962}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1015, file: !486, line: 142, baseType: !1069, size: 64, align: 64, offset: 576)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64, align: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!963, !1072, !962, !970, !963}
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64, align: 64)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64, align: 64)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !464, line: 329, size: 128, align: 64, elements: !1075)
!1075 = !{!1076, !1088, !1089}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1074, file: !464, line: 360, baseType: !1077, size: 64, align: 64)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64, align: 64)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64, align: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !464, line: 324, baseType: !1080)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !464, line: 306, size: 384, align: 64, elements: !1081)
!1081 = !{!1082, !1083, !1084, !1085, !1086, !1087}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1080, file: !464, line: 307, baseType: !970, size: 64, align: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1080, file: !464, line: 313, baseType: !1036, size: 64, align: 64, offset: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1080, file: !464, line: 313, baseType: !1036, size: 64, align: 64, offset: 128)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1080, file: !464, line: 318, baseType: !1036, size: 64, align: 64, offset: 192)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1080, file: !464, line: 318, baseType: !1036, size: 64, align: 64, offset: 256)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1080, file: !464, line: 323, baseType: !963, size: 32, align: 32, offset: 320)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1074, file: !464, line: 364, baseType: !963, size: 32, align: 32, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1074, file: !464, line: 368, baseType: !963, size: 32, align: 32, offset: 96)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !996, file: !919, line: 670, baseType: !970, size: 64, align: 64, offset: 384)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !996, file: !919, line: 679, baseType: !1092, size: 64, align: 64, offset: 448)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64, align: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "raw_codec_id", scope: !996, file: !919, line: 684, baseType: !963, size: 32, align: 32, offset: 512)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !996, file: !919, line: 689, baseType: !963, size: 32, align: 32, offset: 544)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "read_probe", scope: !996, file: !919, line: 696, baseType: !1096, size: 64, align: 64, offset: 576)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!963, !1099}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64, align: 64)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProbeData", file: !919, line: 453, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProbeData", file: !919, line: 448, size: 256, align: 64, elements: !1102)
!1102 = !{!1103, !1104, !1106, !1107}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1101, file: !919, line: 449, baseType: !970, size: 64, align: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1101, file: !919, line: 450, baseType: !1105, size: 64, align: 64, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64, align: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !1101, file: !919, line: 451, baseType: !963, size: 32, align: 32, offset: 128)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1101, file: !919, line: 452, baseType: !970, size: 64, align: 64, offset: 192)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !996, file: !919, line: 703, baseType: !1109, size: 64, align: 64, offset: 640)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64, align: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!963, !1112}
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64, align: 64)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatContext", file: !919, line: 1337, size: 11968, align: 64, elements: !1114)
!1114 = !{!1115, !1116, !1117, !1304, !1305, !1370, !1371, !1372, !2062, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2116, !2117, !2118, !2119, !2120, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2171, !2172, !2175, !2176, !2177, !2178, !2179, !2180, !2182, !2183, !2184, !2185, !2193, !2194, !2198, !2202, !2203, !2204}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1113, file: !919, line: 1342, baseType: !1012, size: 64, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "iformat", scope: !1113, file: !919, line: 1349, baseType: !1092, size: 64, align: 64, offset: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "oformat", scope: !1113, file: !919, line: 1356, baseType: !1118, size: 64, align: 64, offset: 128)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64, align: 64)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOutputFormat", file: !919, line: 497, size: 1600, align: 64, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1172, !1173, !1177, !1181, !1186, !1192, !1279, !1285, !1291, !1292, !1293, !1294, !1298}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1119, file: !919, line: 498, baseType: !970, size: 64, align: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1119, file: !919, line: 504, baseType: !970, size: 64, align: 64, offset: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1119, file: !919, line: 505, baseType: !970, size: 64, align: 64, offset: 128)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !1119, file: !919, line: 506, baseType: !970, size: 64, align: 64, offset: 192)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1119, file: !919, line: 508, baseType: !3, size: 32, align: 32, offset: 256)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !1119, file: !919, line: 509, baseType: !3, size: 32, align: 32, offset: 288)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !1119, file: !919, line: 510, baseType: !3, size: 32, align: 32, offset: 320)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1119, file: !919, line: 517, baseType: !963, size: 32, align: 32, offset: 352)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1119, file: !919, line: 523, baseType: !1003, size: 64, align: 64, offset: 384)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1119, file: !919, line: 526, baseType: !1012, size: 64, align: 64, offset: 448)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1119, file: !919, line: 535, baseType: !1118, size: 64, align: 64, offset: 512)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1119, file: !919, line: 539, baseType: !963, size: 32, align: 32, offset: 576)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !1119, file: !919, line: 541, baseType: !1109, size: 64, align: 64, offset: 640)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !1119, file: !919, line: 549, baseType: !1135, size: 64, align: 64, offset: 704)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64, align: 64)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!963, !1112, !1138}
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !4, line: 1499, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !4, line: 1445, size: 704, align: 64, elements: !1141)
!1141 = !{!1142, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1168, !1169, !1170, !1171}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1140, file: !4, line: 1451, baseType: !1143, size: 64, align: 64)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64, align: 64)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1145, line: 94, baseType: !1146)
!1145 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1145, line: 81, size: 192, align: 64, elements: !1147)
!1147 = !{!1148, !1152, !1153}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1146, file: !1145, line: 82, baseType: !1149, size: 64, align: 64)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64, align: 64)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1145, line: 73, baseType: !1151)
!1151 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1145, line: 73, flags: DIFlagFwdDecl)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1146, file: !1145, line: 89, baseType: !983, size: 64, align: 64, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1146, file: !1145, line: 93, baseType: !963, size: 32, align: 32, offset: 128)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1140, file: !4, line: 1461, baseType: !959, size: 64, align: 64, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1140, file: !4, line: 1467, baseType: !959, size: 64, align: 64, offset: 128)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1140, file: !4, line: 1468, baseType: !983, size: 64, align: 64, offset: 192)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1140, file: !4, line: 1469, baseType: !963, size: 32, align: 32, offset: 256)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1140, file: !4, line: 1470, baseType: !963, size: 32, align: 32, offset: 288)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1140, file: !4, line: 1474, baseType: !963, size: 32, align: 32, offset: 320)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1140, file: !4, line: 1479, baseType: !1161, size: 64, align: 64, offset: 384)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64, align: 64)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !4, line: 1415, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !4, line: 1411, size: 128, align: 64, elements: !1164)
!1164 = !{!1165, !1166, !1167}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1163, file: !4, line: 1412, baseType: !983, size: 64, align: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1163, file: !4, line: 1413, baseType: !963, size: 32, align: 32, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1163, file: !4, line: 1414, baseType: !506, size: 32, align: 32, offset: 96)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1140, file: !4, line: 1480, baseType: !963, size: 32, align: 32, offset: 448)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1140, file: !4, line: 1486, baseType: !959, size: 64, align: 64, offset: 512)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1140, file: !4, line: 1488, baseType: !959, size: 64, align: 64, offset: 576)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1140, file: !4, line: 1497, baseType: !959, size: 64, align: 64, offset: 640)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "write_trailer", scope: !1119, file: !919, line: 550, baseType: !1109, size: 64, align: 64, offset: 768)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "interleave_packet", scope: !1119, file: !919, line: 554, baseType: !1174, size: 64, align: 64, offset: 832)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64, align: 64)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!963, !1112, !1138, !1138, !963}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "query_codec", scope: !1119, file: !919, line: 563, baseType: !1178, size: 64, align: 64, offset: 896)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64, align: 64)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!963, !3, !963}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "get_output_timestamp", scope: !1119, file: !919, line: 565, baseType: !1182, size: 64, align: 64, offset: 960)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64, align: 64)
!1183 = !DISubroutineType(types: !1184)
!1184 = !{null, !1112, !963, !1185, !1185}
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64, align: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "control_message", scope: !1119, file: !919, line: 570, baseType: !1187, size: 64, align: 64, offset: 1024)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64, align: 64)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!963, !1112, !963, !962, !1190}
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1191, line: 216, baseType: !992)
!1191 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "write_uncoded_frame", scope: !1119, file: !919, line: 581, baseType: !1193, size: 64, align: 64, offset: 1088)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64, align: 64)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!963, !1112, !963, !1196, !964}
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64, align: 64)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64, align: 64)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !548, line: 646, baseType: !1199)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !548, line: 268, size: 4288, align: 64, elements: !1200)
!1200 = !{!1201, !1205, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1233, !1235, !1236, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1199, file: !548, line: 282, baseType: !1202, size: 512, align: 64)
!1202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 512, align: 64, elements: !1203)
!1203 = !{!1204}
!1204 = !DISubrange(count: 8)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1199, file: !548, line: 299, baseType: !1206, size: 256, align: 32, offset: 512)
!1206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !963, size: 256, align: 32, elements: !1203)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1199, file: !548, line: 315, baseType: !982, size: 64, align: 64, offset: 768)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1199, file: !548, line: 326, baseType: !963, size: 32, align: 32, offset: 832)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1199, file: !548, line: 326, baseType: !963, size: 32, align: 32, offset: 864)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1199, file: !548, line: 334, baseType: !963, size: 32, align: 32, offset: 896)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1199, file: !548, line: 341, baseType: !963, size: 32, align: 32, offset: 928)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1199, file: !548, line: 346, baseType: !963, size: 32, align: 32, offset: 960)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1199, file: !548, line: 351, baseType: !536, size: 32, align: 32, offset: 992)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1199, file: !548, line: 356, baseType: !1039, size: 64, align: 32, offset: 1024)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1199, file: !548, line: 361, baseType: !959, size: 64, align: 64, offset: 1088)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1199, file: !548, line: 369, baseType: !959, size: 64, align: 64, offset: 1152)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1199, file: !548, line: 377, baseType: !959, size: 64, align: 64, offset: 1216)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1199, file: !548, line: 382, baseType: !963, size: 32, align: 32, offset: 1280)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1199, file: !548, line: 386, baseType: !963, size: 32, align: 32, offset: 1312)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1199, file: !548, line: 391, baseType: !963, size: 32, align: 32, offset: 1344)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1199, file: !548, line: 396, baseType: !962, size: 64, align: 64, offset: 1408)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1199, file: !548, line: 403, baseType: !1223, size: 512, align: 64, offset: 1472)
!1223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 512, align: 64, elements: !1203)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1199, file: !548, line: 410, baseType: !963, size: 32, align: 32, offset: 1984)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1199, file: !548, line: 415, baseType: !963, size: 32, align: 32, offset: 2016)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1199, file: !548, line: 420, baseType: !963, size: 32, align: 32, offset: 2048)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1199, file: !548, line: 425, baseType: !963, size: 32, align: 32, offset: 2080)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1199, file: !548, line: 435, baseType: !959, size: 64, align: 64, offset: 2112)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1199, file: !548, line: 440, baseType: !963, size: 32, align: 32, offset: 2176)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1199, file: !548, line: 445, baseType: !991, size: 64, align: 64, offset: 2240)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1199, file: !548, line: 459, baseType: !1232, size: 512, align: 64, offset: 2304)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1143, size: 512, align: 64, elements: !1203)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1199, file: !548, line: 473, baseType: !1234, size: 64, align: 64, offset: 2816)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64, align: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1199, file: !548, line: 477, baseType: !963, size: 32, align: 32, offset: 2880)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1199, file: !548, line: 479, baseType: !1237, size: 64, align: 64, offset: 2944)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64, align: 64)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64, align: 64)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !548, line: 207, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !548, line: 201, size: 320, align: 64, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1245, !1250}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1240, file: !548, line: 202, baseType: !547, size: 32, align: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1240, file: !548, line: 203, baseType: !983, size: 64, align: 64, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1240, file: !548, line: 204, baseType: !963, size: 32, align: 32, offset: 128)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1240, file: !548, line: 205, baseType: !1246, size: 64, align: 64, offset: 192)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64, align: 64)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1248, line: 86, baseType: !1249)
!1248 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1249 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1248, line: 86, flags: DIFlagFwdDecl)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1240, file: !548, line: 206, baseType: !1143, size: 64, align: 64, offset: 256)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1199, file: !548, line: 480, baseType: !963, size: 32, align: 32, offset: 3008)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1199, file: !548, line: 505, baseType: !963, size: 32, align: 32, offset: 3040)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1199, file: !548, line: 512, baseType: !571, size: 32, align: 32, offset: 3072)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1199, file: !548, line: 514, baseType: !578, size: 32, align: 32, offset: 3104)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1199, file: !548, line: 516, baseType: !596, size: 32, align: 32, offset: 3136)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1199, file: !548, line: 523, baseType: !620, size: 32, align: 32, offset: 3168)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1199, file: !548, line: 525, baseType: !639, size: 32, align: 32, offset: 3200)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1199, file: !548, line: 532, baseType: !959, size: 64, align: 64, offset: 3264)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1199, file: !548, line: 539, baseType: !959, size: 64, align: 64, offset: 3328)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1199, file: !548, line: 547, baseType: !959, size: 64, align: 64, offset: 3392)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1199, file: !548, line: 554, baseType: !1246, size: 64, align: 64, offset: 3456)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1199, file: !548, line: 563, baseType: !963, size: 32, align: 32, offset: 3520)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1199, file: !548, line: 572, baseType: !963, size: 32, align: 32, offset: 3552)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1199, file: !548, line: 581, baseType: !963, size: 32, align: 32, offset: 3584)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1199, file: !548, line: 588, baseType: !1266, size: 64, align: 64, offset: 3648)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64, align: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !960, line: 36, baseType: !1268)
!1268 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1199, file: !548, line: 593, baseType: !963, size: 32, align: 32, offset: 3712)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1199, file: !548, line: 596, baseType: !963, size: 32, align: 32, offset: 3744)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1199, file: !548, line: 599, baseType: !1143, size: 64, align: 64, offset: 3776)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1199, file: !548, line: 605, baseType: !1143, size: 64, align: 64, offset: 3840)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1199, file: !548, line: 616, baseType: !1143, size: 64, align: 64, offset: 3904)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1199, file: !548, line: 626, baseType: !1190, size: 64, align: 64, offset: 3968)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1199, file: !548, line: 627, baseType: !1190, size: 64, align: 64, offset: 4032)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1199, file: !548, line: 628, baseType: !1190, size: 64, align: 64, offset: 4096)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1199, file: !548, line: 629, baseType: !1190, size: 64, align: 64, offset: 4160)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1199, file: !548, line: 645, baseType: !1143, size: 64, align: 64, offset: 4224)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !1119, file: !919, line: 587, baseType: !1280, size: 64, align: 64, offset: 1152)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64, align: 64)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!963, !1112, !1283}
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64, align: 64)
!1284 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceInfoList", file: !919, line: 328, flags: DIFlagFwdDecl)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !1119, file: !919, line: 592, baseType: !1286, size: 64, align: 64, offset: 1216)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64, align: 64)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!963, !1112, !1289}
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64, align: 64)
!1290 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceCapabilitiesQuery", file: !919, line: 329, flags: DIFlagFwdDecl)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !1119, file: !919, line: 597, baseType: !1286, size: 64, align: 64, offset: 1280)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !1119, file: !919, line: 598, baseType: !3, size: 32, align: 32, offset: 1344)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1119, file: !919, line: 608, baseType: !1109, size: 64, align: 64, offset: 1408)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "deinit", scope: !1119, file: !919, line: 617, baseType: !1295, size: 64, align: 64, offset: 1472)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64, align: 64)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{null, !1112}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "check_bitstream", scope: !1119, file: !919, line: 623, baseType: !1299, size: 64, align: 64, offset: 1536)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64, align: 64)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!963, !1112, !1302}
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64, align: 64)
!1303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1139)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1113, file: !919, line: 1365, baseType: !962, size: 64, align: 64, offset: 192)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1113, file: !919, line: 1379, baseType: !1306, size: 64, align: 64, offset: 256)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64, align: 64)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOContext", file: !650, line: 352, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOContext", file: !650, line: 161, size: 2112, align: 64, elements: !1309)
!1309 = !{!1310, !1311, !1312, !1313, !1314, !1315, !1316, !1320, !1321, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1337, !1338, !1342, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1360, !1361, !1362, !1363, !1367, !1368, !1369}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1308, file: !650, line: 174, baseType: !1012, size: 64, align: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1308, file: !650, line: 226, baseType: !1105, size: 64, align: 64, offset: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !1308, file: !650, line: 227, baseType: !963, size: 32, align: 32, offset: 128)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1308, file: !650, line: 228, baseType: !1105, size: 64, align: 64, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1308, file: !650, line: 229, baseType: !1105, size: 64, align: 64, offset: 256)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1308, file: !650, line: 233, baseType: !962, size: 64, align: 64, offset: 320)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !1308, file: !650, line: 235, baseType: !1317, size: 64, align: 64, offset: 384)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64, align: 64)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!963, !962, !983, !963}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !1308, file: !650, line: 236, baseType: !1317, size: 64, align: 64, offset: 448)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !1308, file: !650, line: 237, baseType: !1322, size: 64, align: 64, offset: 512)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64, align: 64)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!959, !962, !959, !963}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1308, file: !650, line: 238, baseType: !959, size: 64, align: 64, offset: 576)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "eof_reached", scope: !1308, file: !650, line: 239, baseType: !963, size: 32, align: 32, offset: 640)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "write_flag", scope: !1308, file: !650, line: 240, baseType: !963, size: 32, align: 32, offset: 672)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "max_packet_size", scope: !1308, file: !650, line: 241, baseType: !963, size: 32, align: 32, offset: 704)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !1308, file: !650, line: 242, baseType: !992, size: 64, align: 64, offset: 768)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_ptr", scope: !1308, file: !650, line: 243, baseType: !1105, size: 64, align: 64, offset: 832)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "update_checksum", scope: !1308, file: !650, line: 244, baseType: !1332, size: 64, align: 64, offset: 896)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64, align: 64)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!992, !992, !1335, !964}
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64, align: 64)
!1336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1308, file: !650, line: 245, baseType: !963, size: 32, align: 32, offset: 960)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !1308, file: !650, line: 249, baseType: !1339, size: 64, align: 64, offset: 1024)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64, align: 64)
!1340 = !DISubroutineType(types: !1341)
!1341 = !{!963, !962, !963}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !1308, file: !650, line: 255, baseType: !1343, size: 64, align: 64, offset: 1088)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64, align: 64)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{!959, !962, !963, !959, !963}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "seekable", scope: !1308, file: !650, line: 260, baseType: !963, size: 32, align: 32, offset: 1152)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "maxsize", scope: !1308, file: !650, line: 266, baseType: !959, size: 64, align: 64, offset: 1216)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "direct", scope: !1308, file: !650, line: 273, baseType: !963, size: 32, align: 32, offset: 1280)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_read", scope: !1308, file: !650, line: 279, baseType: !959, size: 64, align: 64, offset: 1344)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "seek_count", scope: !1308, file: !650, line: 285, baseType: !963, size: 32, align: 32, offset: 1408)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "writeout_count", scope: !1308, file: !650, line: 291, baseType: !963, size: 32, align: 32, offset: 1440)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "orig_buffer_size", scope: !1308, file: !650, line: 298, baseType: !963, size: 32, align: 32, offset: 1472)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_threshold", scope: !1308, file: !650, line: 304, baseType: !963, size: 32, align: 32, offset: 1504)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !1308, file: !650, line: 309, baseType: !970, size: 64, align: 64, offset: 1536)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !1308, file: !650, line: 314, baseType: !970, size: 64, align: 64, offset: 1600)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "write_data_type", scope: !1308, file: !650, line: 319, baseType: !1357, size: 64, align: 64, offset: 1664)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64, align: 64)
!1358 = !DISubroutineType(types: !1359)
!1359 = !{!963, !962, !983, !963, !649, !959}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_boundary_point", scope: !1308, file: !650, line: 326, baseType: !963, size: 32, align: 32, offset: 1728)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "current_type", scope: !1308, file: !650, line: 331, baseType: !649, size: 32, align: 32, offset: 1760)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !1308, file: !650, line: 332, baseType: !959, size: 64, align: 64, offset: 1792)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_get", scope: !1308, file: !650, line: 338, baseType: !1364, size: 64, align: 64, offset: 1856)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64, align: 64)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{!963, !962}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !1308, file: !650, line: 340, baseType: !959, size: 64, align: 64, offset: 1920)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr_max", scope: !1308, file: !650, line: 346, baseType: !1105, size: 64, align: 64, offset: 1984)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "min_packet_size", scope: !1308, file: !650, line: 351, baseType: !963, size: 32, align: 32, offset: 2048)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_flags", scope: !1113, file: !919, line: 1386, baseType: !963, size: 32, align: 32, offset: 320)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "nb_streams", scope: !1113, file: !919, line: 1393, baseType: !964, size: 32, align: 32, offset: 352)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !1113, file: !919, line: 1405, baseType: !1373, size: 64, align: 64, offset: 384)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64, align: 64)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64, align: 64)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStream", file: !919, line: 1223, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStream", file: !919, line: 865, size: 6144, align: 64, elements: !1377)
!1377 = !{!1378, !1379, !1380, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1848, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1948, !1954, !1955, !1959, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1991, !1992, !1993, !1994, !1995, !1996}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1376, file: !919, line: 866, baseType: !963, size: 32, align: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1376, file: !919, line: 872, baseType: !963, size: 32, align: 32, offset: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1376, file: !919, line: 878, baseType: !1381, size: 64, align: 64, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64, align: 64)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !4, line: 3360, baseType: !1383)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !4, line: 1556, size: 8448, align: 64, elements: !1384)
!1384 = !{!1385, !1386, !1387, !1388, !1523, !1524, !1525, !1526, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1552, !1556, !1557, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1736, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1383, file: !4, line: 1561, baseType: !1012, size: 64, align: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1383, file: !4, line: 1562, baseType: !963, size: 32, align: 32, offset: 64)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1383, file: !4, line: 1564, baseType: !658, size: 32, align: 32, offset: 96)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1383, file: !4, line: 1565, baseType: !1389, size: 64, align: 64, offset: 128)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64, align: 64)
!1390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !4, line: 3468, size: 1984, align: 64, elements: !1392)
!1392 = !{!1393, !1394, !1395, !1396, !1397, !1398, !1401, !1404, !1407, !1410, !1413, !1414, !1415, !1423, !1424, !1425, !1427, !1431, !1437, !1442, !1446, !1447, !1489, !1495, !1499, !1500, !1504, !1508, !1512, !1516, !1517, !1518}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1391, file: !4, line: 3475, baseType: !970, size: 64, align: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1391, file: !4, line: 3480, baseType: !970, size: 64, align: 64, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1391, file: !4, line: 3481, baseType: !658, size: 32, align: 32, offset: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1391, file: !4, line: 3482, baseType: !3, size: 32, align: 32, offset: 160)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1391, file: !4, line: 3487, baseType: !963, size: 32, align: 32, offset: 192)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1391, file: !4, line: 3488, baseType: !1399, size: 64, align: 64, offset: 256)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64, align: 64)
!1400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1391, file: !4, line: 3489, baseType: !1402, size: 64, align: 64, offset: 320)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64, align: 64)
!1403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !667)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1391, file: !4, line: 3490, baseType: !1405, size: 64, align: 64, offset: 384)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64, align: 64)
!1406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1391, file: !4, line: 3491, baseType: !1408, size: 64, align: 64, offset: 448)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64, align: 64)
!1409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !866)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1391, file: !4, line: 3492, baseType: !1411, size: 64, align: 64, offset: 512)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64, align: 64)
!1412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !991)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1391, file: !4, line: 3493, baseType: !984, size: 8, align: 8, offset: 576)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1391, file: !4, line: 3494, baseType: !1012, size: 64, align: 64, offset: 640)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1391, file: !4, line: 3495, baseType: !1416, size: 64, align: 64, offset: 704)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64, align: 64)
!1417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1418)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !4, line: 3404, baseType: !1419)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !4, line: 3401, size: 128, align: 64, elements: !1420)
!1420 = !{!1421, !1422}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1419, file: !4, line: 3402, baseType: !963, size: 32, align: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1419, file: !4, line: 3403, baseType: !970, size: 64, align: 64, offset: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1391, file: !4, line: 3507, baseType: !970, size: 64, align: 64, offset: 768)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1391, file: !4, line: 3516, baseType: !963, size: 32, align: 32, offset: 832)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1391, file: !4, line: 3517, baseType: !1426, size: 64, align: 64, offset: 896)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64, align: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1391, file: !4, line: 3527, baseType: !1428, size: 64, align: 64, offset: 960)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64, align: 64)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{!963, !1381}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1391, file: !4, line: 3535, baseType: !1432, size: 64, align: 64, offset: 1024)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64, align: 64)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{!963, !1381, !1435}
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64, align: 64)
!1436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1382)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1391, file: !4, line: 3541, baseType: !1438, size: 64, align: 64, offset: 1088)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64, align: 64)
!1439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1440)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !4, line: 3461, baseType: !1441)
!1441 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !4, line: 3461, flags: DIFlagFwdDecl)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1391, file: !4, line: 3549, baseType: !1443, size: 64, align: 64, offset: 1152)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64, align: 64)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{null, !1426}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1391, file: !4, line: 3551, baseType: !1428, size: 64, align: 64, offset: 1216)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1391, file: !4, line: 3552, baseType: !1448, size: 64, align: 64, offset: 1280)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64, align: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!963, !1381, !983, !963, !1451}
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64, align: 64)
!1452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1453)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !4, line: 3920, size: 256, align: 64, elements: !1454)
!1454 = !{!1455, !1458, !1459, !1460, !1461, !1488}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1453, file: !4, line: 3921, baseType: !1456, size: 16, align: 16)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !960, line: 49, baseType: !1457)
!1457 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1453, file: !4, line: 3922, baseType: !981, size: 32, align: 32, offset: 32)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1453, file: !4, line: 3923, baseType: !981, size: 32, align: 32, offset: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1453, file: !4, line: 3924, baseType: !964, size: 32, align: 32, offset: 96)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1453, file: !4, line: 3925, baseType: !1462, size: 64, align: 64, offset: 128)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64, align: 64)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64, align: 64)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !4, line: 3918, baseType: !1465)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !4, line: 3885, size: 1600, align: 64, elements: !1466)
!1466 = !{!1467, !1468, !1469, !1470, !1471, !1472, !1478, !1482, !1484, !1485, !1486, !1487}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1465, file: !4, line: 3886, baseType: !963, size: 32, align: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1465, file: !4, line: 3887, baseType: !963, size: 32, align: 32, offset: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1465, file: !4, line: 3888, baseType: !963, size: 32, align: 32, offset: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1465, file: !4, line: 3889, baseType: !963, size: 32, align: 32, offset: 96)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1465, file: !4, line: 3890, baseType: !963, size: 32, align: 32, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1465, file: !4, line: 3897, baseType: !1473, size: 768, align: 64, offset: 192)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !4, line: 3858, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !4, line: 3853, size: 768, align: 64, elements: !1475)
!1475 = !{!1476, !1477}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1474, file: !4, line: 3855, baseType: !1202, size: 512, align: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1474, file: !4, line: 3857, baseType: !1206, size: 256, align: 32, offset: 512)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1465, file: !4, line: 3903, baseType: !1479, size: 256, align: 64, offset: 960)
!1479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !983, size: 256, align: 64, elements: !1480)
!1480 = !{!1481}
!1481 = !DISubrange(count: 4)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1465, file: !4, line: 3904, baseType: !1483, size: 128, align: 32, offset: 1216)
!1483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !963, size: 128, align: 32, elements: !1480)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1465, file: !4, line: 3906, baseType: !883, size: 32, align: 32, offset: 1344)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1465, file: !4, line: 3908, baseType: !974, size: 64, align: 64, offset: 1408)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1465, file: !4, line: 3915, baseType: !974, size: 64, align: 64, offset: 1472)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1465, file: !4, line: 3917, baseType: !963, size: 32, align: 32, offset: 1536)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1453, file: !4, line: 3926, baseType: !959, size: 64, align: 64, offset: 192)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1391, file: !4, line: 3564, baseType: !1490, size: 64, align: 64, offset: 1344)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64, align: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!963, !1381, !1138, !1493, !975}
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64, align: 64)
!1494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1391, file: !4, line: 3566, baseType: !1496, size: 64, align: 64, offset: 1408)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64, align: 64)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!963, !1381, !962, !975, !1138}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1391, file: !4, line: 3567, baseType: !1428, size: 64, align: 64, offset: 1472)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1391, file: !4, line: 3576, baseType: !1501, size: 64, align: 64, offset: 1536)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64, align: 64)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!963, !1381, !1493}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1391, file: !4, line: 3577, baseType: !1505, size: 64, align: 64, offset: 1600)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64, align: 64)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{!963, !1381, !1138}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1391, file: !4, line: 3584, baseType: !1509, size: 64, align: 64, offset: 1664)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64, align: 64)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!963, !1381, !1197}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1391, file: !4, line: 3589, baseType: !1513, size: 64, align: 64, offset: 1728)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64, align: 64)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{null, !1381}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1391, file: !4, line: 3594, baseType: !963, size: 32, align: 32, offset: 1792)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1391, file: !4, line: 3600, baseType: !970, size: 64, align: 64, offset: 1856)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1391, file: !4, line: 3609, baseType: !1519, size: 64, align: 64, offset: 1920)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64, align: 64)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64, align: 64)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1522)
!1522 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !4, line: 3609, flags: DIFlagFwdDecl)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1383, file: !4, line: 1566, baseType: !3, size: 32, align: 32, offset: 192)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1383, file: !4, line: 1581, baseType: !964, size: 32, align: 32, offset: 224)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1383, file: !4, line: 1583, baseType: !962, size: 64, align: 64, offset: 256)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1383, file: !4, line: 1591, baseType: !1527, size: 64, align: 64, offset: 320)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64, align: 64)
!1528 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !4, line: 1532, flags: DIFlagFwdDecl)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1383, file: !4, line: 1598, baseType: !962, size: 64, align: 64, offset: 384)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1383, file: !4, line: 1606, baseType: !959, size: 64, align: 64, offset: 448)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1383, file: !4, line: 1614, baseType: !963, size: 32, align: 32, offset: 512)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1383, file: !4, line: 1622, baseType: !963, size: 32, align: 32, offset: 544)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1383, file: !4, line: 1628, baseType: !963, size: 32, align: 32, offset: 576)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1383, file: !4, line: 1636, baseType: !963, size: 32, align: 32, offset: 608)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1383, file: !4, line: 1643, baseType: !963, size: 32, align: 32, offset: 640)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1383, file: !4, line: 1657, baseType: !983, size: 64, align: 64, offset: 704)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1383, file: !4, line: 1658, baseType: !963, size: 32, align: 32, offset: 768)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1383, file: !4, line: 1679, baseType: !1039, size: 64, align: 32, offset: 800)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1383, file: !4, line: 1688, baseType: !963, size: 32, align: 32, offset: 864)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1383, file: !4, line: 1712, baseType: !963, size: 32, align: 32, offset: 896)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1383, file: !4, line: 1729, baseType: !963, size: 32, align: 32, offset: 928)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1383, file: !4, line: 1729, baseType: !963, size: 32, align: 32, offset: 960)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1383, file: !4, line: 1744, baseType: !963, size: 32, align: 32, offset: 992)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1383, file: !4, line: 1744, baseType: !963, size: 32, align: 32, offset: 1024)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1383, file: !4, line: 1751, baseType: !963, size: 32, align: 32, offset: 1056)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1383, file: !4, line: 1766, baseType: !667, size: 32, align: 32, offset: 1088)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1383, file: !4, line: 1791, baseType: !1548, size: 64, align: 64, offset: 1152)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64, align: 64)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{null, !1551, !1493, !975, !963, !963, !963}
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64, align: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1383, file: !4, line: 1808, baseType: !1553, size: 64, align: 64, offset: 1216)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64, align: 64)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!667, !1551, !1402}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1383, file: !4, line: 1816, baseType: !963, size: 32, align: 32, offset: 1280)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1383, file: !4, line: 1825, baseType: !1558, size: 32, align: 32, offset: 1312)
!1558 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1383, file: !4, line: 1830, baseType: !963, size: 32, align: 32, offset: 1344)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1383, file: !4, line: 1838, baseType: !1558, size: 32, align: 32, offset: 1376)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1383, file: !4, line: 1846, baseType: !963, size: 32, align: 32, offset: 1408)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1383, file: !4, line: 1851, baseType: !963, size: 32, align: 32, offset: 1440)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1383, file: !4, line: 1861, baseType: !1558, size: 32, align: 32, offset: 1472)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1383, file: !4, line: 1868, baseType: !1558, size: 32, align: 32, offset: 1504)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1383, file: !4, line: 1875, baseType: !1558, size: 32, align: 32, offset: 1536)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1383, file: !4, line: 1882, baseType: !1558, size: 32, align: 32, offset: 1568)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1383, file: !4, line: 1889, baseType: !1558, size: 32, align: 32, offset: 1600)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1383, file: !4, line: 1896, baseType: !1558, size: 32, align: 32, offset: 1632)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1383, file: !4, line: 1903, baseType: !1558, size: 32, align: 32, offset: 1664)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1383, file: !4, line: 1910, baseType: !963, size: 32, align: 32, offset: 1696)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1383, file: !4, line: 1915, baseType: !963, size: 32, align: 32, offset: 1728)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1383, file: !4, line: 1926, baseType: !975, size: 64, align: 64, offset: 1792)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1383, file: !4, line: 1935, baseType: !1039, size: 64, align: 32, offset: 1856)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1383, file: !4, line: 1942, baseType: !963, size: 32, align: 32, offset: 1920)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1383, file: !4, line: 1948, baseType: !963, size: 32, align: 32, offset: 1952)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1383, file: !4, line: 1954, baseType: !963, size: 32, align: 32, offset: 1984)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1383, file: !4, line: 1960, baseType: !963, size: 32, align: 32, offset: 2016)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1383, file: !4, line: 1984, baseType: !963, size: 32, align: 32, offset: 2048)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1383, file: !4, line: 1991, baseType: !963, size: 32, align: 32, offset: 2080)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1383, file: !4, line: 1996, baseType: !963, size: 32, align: 32, offset: 2112)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1383, file: !4, line: 2004, baseType: !963, size: 32, align: 32, offset: 2144)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1383, file: !4, line: 2011, baseType: !963, size: 32, align: 32, offset: 2176)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1383, file: !4, line: 2018, baseType: !963, size: 32, align: 32, offset: 2208)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1383, file: !4, line: 2027, baseType: !963, size: 32, align: 32, offset: 2240)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1383, file: !4, line: 2034, baseType: !963, size: 32, align: 32, offset: 2272)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1383, file: !4, line: 2044, baseType: !963, size: 32, align: 32, offset: 2304)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1383, file: !4, line: 2054, baseType: !1588, size: 64, align: 64, offset: 2368)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64, align: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1383, file: !4, line: 2061, baseType: !1588, size: 64, align: 64, offset: 2432)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1383, file: !4, line: 2066, baseType: !963, size: 32, align: 32, offset: 2496)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1383, file: !4, line: 2070, baseType: !963, size: 32, align: 32, offset: 2528)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1383, file: !4, line: 2078, baseType: !963, size: 32, align: 32, offset: 2560)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1383, file: !4, line: 2085, baseType: !963, size: 32, align: 32, offset: 2592)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1383, file: !4, line: 2092, baseType: !963, size: 32, align: 32, offset: 2624)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1383, file: !4, line: 2099, baseType: !963, size: 32, align: 32, offset: 2656)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1383, file: !4, line: 2106, baseType: !963, size: 32, align: 32, offset: 2688)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1383, file: !4, line: 2113, baseType: !963, size: 32, align: 32, offset: 2720)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1383, file: !4, line: 2120, baseType: !963, size: 32, align: 32, offset: 2752)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1383, file: !4, line: 2125, baseType: !963, size: 32, align: 32, offset: 2784)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1383, file: !4, line: 2133, baseType: !963, size: 32, align: 32, offset: 2816)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1383, file: !4, line: 2140, baseType: !963, size: 32, align: 32, offset: 2848)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1383, file: !4, line: 2145, baseType: !963, size: 32, align: 32, offset: 2880)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1383, file: !4, line: 2153, baseType: !963, size: 32, align: 32, offset: 2912)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1383, file: !4, line: 2158, baseType: !963, size: 32, align: 32, offset: 2944)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1383, file: !4, line: 2166, baseType: !578, size: 32, align: 32, offset: 2976)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1383, file: !4, line: 2173, baseType: !596, size: 32, align: 32, offset: 3008)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1383, file: !4, line: 2180, baseType: !620, size: 32, align: 32, offset: 3040)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1383, file: !4, line: 2187, baseType: !571, size: 32, align: 32, offset: 3072)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1383, file: !4, line: 2194, baseType: !639, size: 32, align: 32, offset: 3104)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1383, file: !4, line: 2203, baseType: !963, size: 32, align: 32, offset: 3136)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1383, file: !4, line: 2209, baseType: !889, size: 32, align: 32, offset: 3168)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1383, file: !4, line: 2212, baseType: !963, size: 32, align: 32, offset: 3200)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1383, file: !4, line: 2213, baseType: !963, size: 32, align: 32, offset: 3232)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1383, file: !4, line: 2220, baseType: !866, size: 32, align: 32, offset: 3264)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1383, file: !4, line: 2232, baseType: !963, size: 32, align: 32, offset: 3296)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1383, file: !4, line: 2243, baseType: !963, size: 32, align: 32, offset: 3328)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1383, file: !4, line: 2249, baseType: !963, size: 32, align: 32, offset: 3360)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1383, file: !4, line: 2256, baseType: !963, size: 32, align: 32, offset: 3392)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1383, file: !4, line: 2263, baseType: !991, size: 64, align: 64, offset: 3456)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1383, file: !4, line: 2270, baseType: !991, size: 64, align: 64, offset: 3520)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1383, file: !4, line: 2277, baseType: !897, size: 32, align: 32, offset: 3584)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1383, file: !4, line: 2285, baseType: !866, size: 32, align: 32, offset: 3616)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1383, file: !4, line: 2367, baseType: !1624, size: 64, align: 64, offset: 3648)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64, align: 64)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!963, !1551, !1197, !963}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1383, file: !4, line: 2383, baseType: !963, size: 32, align: 32, offset: 3712)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1383, file: !4, line: 2386, baseType: !1558, size: 32, align: 32, offset: 3744)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1383, file: !4, line: 2387, baseType: !1558, size: 32, align: 32, offset: 3776)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1383, file: !4, line: 2394, baseType: !963, size: 32, align: 32, offset: 3808)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1383, file: !4, line: 2401, baseType: !963, size: 32, align: 32, offset: 3840)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1383, file: !4, line: 2408, baseType: !963, size: 32, align: 32, offset: 3872)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1383, file: !4, line: 2415, baseType: !963, size: 32, align: 32, offset: 3904)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1383, file: !4, line: 2422, baseType: !963, size: 32, align: 32, offset: 3936)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1383, file: !4, line: 2423, baseType: !1636, size: 64, align: 64, offset: 3968)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64, align: 64)
!1637 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !4, line: 831, baseType: !1638)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !4, line: 826, size: 128, align: 32, elements: !1639)
!1639 = !{!1640, !1641, !1642, !1643}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1638, file: !4, line: 827, baseType: !963, size: 32, align: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1638, file: !4, line: 828, baseType: !963, size: 32, align: 32, offset: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1638, file: !4, line: 829, baseType: !963, size: 32, align: 32, offset: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1638, file: !4, line: 830, baseType: !1558, size: 32, align: 32, offset: 96)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1383, file: !4, line: 2430, baseType: !959, size: 64, align: 64, offset: 4032)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1383, file: !4, line: 2437, baseType: !959, size: 64, align: 64, offset: 4096)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1383, file: !4, line: 2444, baseType: !1558, size: 32, align: 32, offset: 4160)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1383, file: !4, line: 2451, baseType: !1558, size: 32, align: 32, offset: 4192)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1383, file: !4, line: 2458, baseType: !963, size: 32, align: 32, offset: 4224)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1383, file: !4, line: 2469, baseType: !963, size: 32, align: 32, offset: 4256)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1383, file: !4, line: 2475, baseType: !963, size: 32, align: 32, offset: 4288)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1383, file: !4, line: 2481, baseType: !963, size: 32, align: 32, offset: 4320)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1383, file: !4, line: 2485, baseType: !963, size: 32, align: 32, offset: 4352)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1383, file: !4, line: 2489, baseType: !963, size: 32, align: 32, offset: 4384)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1383, file: !4, line: 2493, baseType: !963, size: 32, align: 32, offset: 4416)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1383, file: !4, line: 2501, baseType: !963, size: 32, align: 32, offset: 4448)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1383, file: !4, line: 2506, baseType: !963, size: 32, align: 32, offset: 4480)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1383, file: !4, line: 2510, baseType: !963, size: 32, align: 32, offset: 4512)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1383, file: !4, line: 2514, baseType: !959, size: 64, align: 64, offset: 4544)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1383, file: !4, line: 2528, baseType: !1660, size: 64, align: 64, offset: 4608)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64, align: 64)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{null, !1551, !962, !963, !963}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1383, file: !4, line: 2534, baseType: !963, size: 32, align: 32, offset: 4672)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1383, file: !4, line: 2545, baseType: !963, size: 32, align: 32, offset: 4704)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1383, file: !4, line: 2547, baseType: !963, size: 32, align: 32, offset: 4736)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1383, file: !4, line: 2549, baseType: !963, size: 32, align: 32, offset: 4768)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1383, file: !4, line: 2551, baseType: !963, size: 32, align: 32, offset: 4800)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1383, file: !4, line: 2553, baseType: !963, size: 32, align: 32, offset: 4832)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1383, file: !4, line: 2555, baseType: !963, size: 32, align: 32, offset: 4864)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1383, file: !4, line: 2557, baseType: !963, size: 32, align: 32, offset: 4896)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1383, file: !4, line: 2559, baseType: !963, size: 32, align: 32, offset: 4928)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1383, file: !4, line: 2563, baseType: !963, size: 32, align: 32, offset: 4960)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1383, file: !4, line: 2571, baseType: !974, size: 64, align: 64, offset: 4992)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1383, file: !4, line: 2579, baseType: !974, size: 64, align: 64, offset: 5056)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1383, file: !4, line: 2586, baseType: !963, size: 32, align: 32, offset: 5120)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1383, file: !4, line: 2615, baseType: !963, size: 32, align: 32, offset: 5152)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1383, file: !4, line: 2627, baseType: !963, size: 32, align: 32, offset: 5184)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1383, file: !4, line: 2637, baseType: !963, size: 32, align: 32, offset: 5216)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1383, file: !4, line: 2681, baseType: !963, size: 32, align: 32, offset: 5248)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1383, file: !4, line: 2709, baseType: !959, size: 64, align: 64, offset: 5312)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1383, file: !4, line: 2716, baseType: !1682, size: 64, align: 64, offset: 5376)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64, align: 64)
!1683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !4, line: 3636, size: 896, align: 64, elements: !1685)
!1685 = !{!1686, !1687, !1688, !1689, !1690, !1691, !1692, !1696, !1700, !1701, !1702, !1703, !1709, !1710, !1711, !1712, !1713}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1684, file: !4, line: 3642, baseType: !970, size: 64, align: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1684, file: !4, line: 3649, baseType: !658, size: 32, align: 32, offset: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1684, file: !4, line: 3656, baseType: !3, size: 32, align: 32, offset: 96)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1684, file: !4, line: 3663, baseType: !667, size: 32, align: 32, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1684, file: !4, line: 3669, baseType: !963, size: 32, align: 32, offset: 160)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1684, file: !4, line: 3682, baseType: !1509, size: 64, align: 64, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1684, file: !4, line: 3698, baseType: !1693, size: 64, align: 64, offset: 256)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64, align: 64)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{!963, !1381, !1335, !981}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1684, file: !4, line: 3712, baseType: !1697, size: 64, align: 64, offset: 320)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64, align: 64)
!1698 = !DISubroutineType(types: !1699)
!1699 = !{!963, !1381, !963, !1335, !981}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1684, file: !4, line: 3726, baseType: !1693, size: 64, align: 64, offset: 384)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1684, file: !4, line: 3737, baseType: !1428, size: 64, align: 64, offset: 448)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1684, file: !4, line: 3746, baseType: !963, size: 32, align: 32, offset: 512)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1684, file: !4, line: 3757, baseType: !1704, size: 64, align: 64, offset: 576)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64, align: 64)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{null, !1707}
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64, align: 64)
!1708 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !4, line: 3617, flags: DIFlagFwdDecl)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1684, file: !4, line: 3766, baseType: !1428, size: 64, align: 64, offset: 640)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1684, file: !4, line: 3774, baseType: !1428, size: 64, align: 64, offset: 704)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1684, file: !4, line: 3780, baseType: !963, size: 32, align: 32, offset: 768)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1684, file: !4, line: 3785, baseType: !963, size: 32, align: 32, offset: 800)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1684, file: !4, line: 3795, baseType: !1714, size: 64, align: 64, offset: 832)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64, align: 64)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!963, !1381, !1143}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1383, file: !4, line: 2728, baseType: !962, size: 64, align: 64, offset: 5440)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1383, file: !4, line: 2735, baseType: !1223, size: 512, align: 64, offset: 5504)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1383, file: !4, line: 2742, baseType: !963, size: 32, align: 32, offset: 6016)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1383, file: !4, line: 2755, baseType: !963, size: 32, align: 32, offset: 6048)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1383, file: !4, line: 2776, baseType: !963, size: 32, align: 32, offset: 6080)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1383, file: !4, line: 2783, baseType: !963, size: 32, align: 32, offset: 6112)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1383, file: !4, line: 2791, baseType: !963, size: 32, align: 32, offset: 6144)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1383, file: !4, line: 2802, baseType: !1197, size: 64, align: 64, offset: 6208)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1383, file: !4, line: 2811, baseType: !963, size: 32, align: 32, offset: 6272)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1383, file: !4, line: 2821, baseType: !963, size: 32, align: 32, offset: 6304)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1383, file: !4, line: 2830, baseType: !963, size: 32, align: 32, offset: 6336)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1383, file: !4, line: 2840, baseType: !963, size: 32, align: 32, offset: 6368)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1383, file: !4, line: 2851, baseType: !1730, size: 64, align: 64, offset: 6400)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64, align: 64)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!963, !1551, !1733, !962, !975, !963, !963}
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64, align: 64)
!1734 = !DISubroutineType(types: !1735)
!1735 = !{!963, !1551, !962}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1383, file: !4, line: 2871, baseType: !1737, size: 64, align: 64, offset: 6464)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64, align: 64)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{!963, !1551, !1740, !962, !975, !963}
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64, align: 64)
!1741 = !DISubroutineType(types: !1742)
!1742 = !{!963, !1551, !962, !963, !963}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1383, file: !4, line: 2878, baseType: !963, size: 32, align: 32, offset: 6528)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1383, file: !4, line: 2885, baseType: !963, size: 32, align: 32, offset: 6560)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1383, file: !4, line: 3005, baseType: !963, size: 32, align: 32, offset: 6592)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1383, file: !4, line: 3013, baseType: !909, size: 32, align: 32, offset: 6624)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1383, file: !4, line: 3020, baseType: !909, size: 32, align: 32, offset: 6656)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1383, file: !4, line: 3027, baseType: !909, size: 32, align: 32, offset: 6688)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1383, file: !4, line: 3037, baseType: !983, size: 64, align: 64, offset: 6720)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1383, file: !4, line: 3038, baseType: !963, size: 32, align: 32, offset: 6784)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1383, file: !4, line: 3050, baseType: !991, size: 64, align: 64, offset: 6848)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1383, file: !4, line: 3065, baseType: !963, size: 32, align: 32, offset: 6912)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1383, file: !4, line: 3083, baseType: !963, size: 32, align: 32, offset: 6944)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1383, file: !4, line: 3092, baseType: !1039, size: 64, align: 32, offset: 6976)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1383, file: !4, line: 3099, baseType: !667, size: 32, align: 32, offset: 7040)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1383, file: !4, line: 3106, baseType: !1039, size: 64, align: 32, offset: 7072)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1383, file: !4, line: 3113, baseType: !1758, size: 64, align: 64, offset: 7168)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64, align: 64)
!1759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1760)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !4, line: 740, baseType: !1761)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !4, line: 712, size: 384, align: 64, elements: !1762)
!1762 = !{!1763, !1764, !1765, !1766, !1767, !1768, !1771}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1761, file: !4, line: 713, baseType: !3, size: 32, align: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1761, file: !4, line: 714, baseType: !658, size: 32, align: 32, offset: 32)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1761, file: !4, line: 720, baseType: !970, size: 64, align: 64, offset: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1761, file: !4, line: 724, baseType: !970, size: 64, align: 64, offset: 128)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1761, file: !4, line: 728, baseType: !963, size: 32, align: 32, offset: 192)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1761, file: !4, line: 734, baseType: !1769, size: 64, align: 64, offset: 256)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64, align: 64)
!1770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1761, file: !4, line: 739, baseType: !1772, size: 64, align: 64, offset: 320)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64, align: 64)
!1773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1383, file: !4, line: 3129, baseType: !959, size: 64, align: 64, offset: 7232)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1383, file: !4, line: 3130, baseType: !959, size: 64, align: 64, offset: 7296)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1383, file: !4, line: 3131, baseType: !959, size: 64, align: 64, offset: 7360)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1383, file: !4, line: 3132, baseType: !959, size: 64, align: 64, offset: 7424)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1383, file: !4, line: 3139, baseType: !974, size: 64, align: 64, offset: 7488)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1383, file: !4, line: 3147, baseType: !963, size: 32, align: 32, offset: 7552)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1383, file: !4, line: 3165, baseType: !963, size: 32, align: 32, offset: 7584)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1383, file: !4, line: 3172, baseType: !963, size: 32, align: 32, offset: 7616)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1383, file: !4, line: 3180, baseType: !963, size: 32, align: 32, offset: 7648)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1383, file: !4, line: 3191, baseType: !1588, size: 64, align: 64, offset: 7680)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1383, file: !4, line: 3199, baseType: !983, size: 64, align: 64, offset: 7744)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1383, file: !4, line: 3207, baseType: !974, size: 64, align: 64, offset: 7808)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1383, file: !4, line: 3214, baseType: !964, size: 32, align: 32, offset: 7872)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1383, file: !4, line: 3224, baseType: !1161, size: 64, align: 64, offset: 7936)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1383, file: !4, line: 3225, baseType: !963, size: 32, align: 32, offset: 8000)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1383, file: !4, line: 3249, baseType: !1143, size: 64, align: 64, offset: 8064)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1383, file: !4, line: 3256, baseType: !963, size: 32, align: 32, offset: 8128)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1383, file: !4, line: 3271, baseType: !963, size: 32, align: 32, offset: 8160)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1383, file: !4, line: 3279, baseType: !959, size: 64, align: 64, offset: 8192)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1383, file: !4, line: 3301, baseType: !1143, size: 64, align: 64, offset: 8256)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1383, file: !4, line: 3310, baseType: !963, size: 32, align: 32, offset: 8320)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1383, file: !4, line: 3337, baseType: !963, size: 32, align: 32, offset: 8352)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1383, file: !4, line: 3351, baseType: !963, size: 32, align: 32, offset: 8384)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1383, file: !4, line: 3359, baseType: !963, size: 32, align: 32, offset: 8416)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1376, file: !919, line: 880, baseType: !962, size: 64, align: 64, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1376, file: !919, line: 894, baseType: !1039, size: 64, align: 32, offset: 192)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1376, file: !919, line: 904, baseType: !959, size: 64, align: 64, offset: 256)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1376, file: !919, line: 914, baseType: !959, size: 64, align: 64, offset: 320)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "nb_frames", scope: !1376, file: !919, line: 916, baseType: !959, size: 64, align: 64, offset: 384)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "disposition", scope: !1376, file: !919, line: 918, baseType: !963, size: 32, align: 32, offset: 448)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !1376, file: !919, line: 920, baseType: !909, size: 32, align: 32, offset: 480)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1376, file: !919, line: 927, baseType: !1039, size: 64, align: 32, offset: 512)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1376, file: !919, line: 929, baseType: !1246, size: 64, align: 64, offset: 576)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "avg_frame_rate", scope: !1376, file: !919, line: 938, baseType: !1039, size: 64, align: 32, offset: 640)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "attached_pic", scope: !1376, file: !919, line: 947, baseType: !1139, size: 704, align: 64, offset: 704)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1376, file: !919, line: 967, baseType: !1161, size: 64, align: 64, offset: 1408)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1376, file: !919, line: 971, baseType: !963, size: 32, align: 32, offset: 1472)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1376, file: !919, line: 978, baseType: !963, size: 32, align: 32, offset: 1504)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "r_frame_rate", scope: !1376, file: !919, line: 989, baseType: !1039, size: 64, align: 32, offset: 1536)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "recommended_encoder_configuration", scope: !1376, file: !919, line: 1000, baseType: !974, size: 64, align: 64, offset: 1600)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "codecpar", scope: !1376, file: !919, line: 1012, baseType: !1815, size: 64, align: 64, offset: 1664)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64, align: 64)
!1816 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !4, line: 4085, baseType: !1817)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !4, line: 3936, size: 1152, align: 64, elements: !1818)
!1818 = !{!1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1817, file: !4, line: 3940, baseType: !658, size: 32, align: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1817, file: !4, line: 3944, baseType: !3, size: 32, align: 32, offset: 32)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1817, file: !4, line: 3948, baseType: !981, size: 32, align: 32, offset: 64)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1817, file: !4, line: 3958, baseType: !983, size: 64, align: 64, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1817, file: !4, line: 3962, baseType: !963, size: 32, align: 32, offset: 192)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1817, file: !4, line: 3968, baseType: !963, size: 32, align: 32, offset: 224)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1817, file: !4, line: 3973, baseType: !959, size: 64, align: 64, offset: 256)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1817, file: !4, line: 3986, baseType: !963, size: 32, align: 32, offset: 320)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1817, file: !4, line: 3999, baseType: !963, size: 32, align: 32, offset: 352)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1817, file: !4, line: 4004, baseType: !963, size: 32, align: 32, offset: 384)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1817, file: !4, line: 4005, baseType: !963, size: 32, align: 32, offset: 416)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1817, file: !4, line: 4010, baseType: !963, size: 32, align: 32, offset: 448)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1817, file: !4, line: 4011, baseType: !963, size: 32, align: 32, offset: 480)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1817, file: !4, line: 4020, baseType: !1039, size: 64, align: 32, offset: 512)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1817, file: !4, line: 4025, baseType: !889, size: 32, align: 32, offset: 576)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1817, file: !4, line: 4030, baseType: !571, size: 32, align: 32, offset: 608)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1817, file: !4, line: 4031, baseType: !578, size: 32, align: 32, offset: 640)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1817, file: !4, line: 4032, baseType: !596, size: 32, align: 32, offset: 672)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1817, file: !4, line: 4033, baseType: !620, size: 32, align: 32, offset: 704)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1817, file: !4, line: 4034, baseType: !639, size: 32, align: 32, offset: 736)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1817, file: !4, line: 4039, baseType: !963, size: 32, align: 32, offset: 768)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1817, file: !4, line: 4046, baseType: !991, size: 64, align: 64, offset: 832)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1817, file: !4, line: 4050, baseType: !963, size: 32, align: 32, offset: 896)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1817, file: !4, line: 4054, baseType: !963, size: 32, align: 32, offset: 928)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1817, file: !4, line: 4061, baseType: !963, size: 32, align: 32, offset: 960)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1817, file: !4, line: 4065, baseType: !963, size: 32, align: 32, offset: 992)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1817, file: !4, line: 4073, baseType: !963, size: 32, align: 32, offset: 1024)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1817, file: !4, line: 4080, baseType: !963, size: 32, align: 32, offset: 1056)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1817, file: !4, line: 4084, baseType: !963, size: 32, align: 32, offset: 1088)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1376, file: !919, line: 1055, baseType: !1849, size: 64, align: 64, offset: 1728)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64, align: 64)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1376, file: !919, line: 1028, size: 832, align: 64, elements: !1851)
!1851 = !{!1852, !1853, !1854, !1855, !1856, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !1850, file: !919, line: 1029, baseType: !959, size: 64, align: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "duration_gcd", scope: !1850, file: !919, line: 1030, baseType: !959, size: 64, align: 64, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "duration_count", scope: !1850, file: !919, line: 1031, baseType: !963, size: 32, align: 32, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "rfps_duration_sum", scope: !1850, file: !919, line: 1032, baseType: !959, size: 64, align: 64, offset: 192)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "duration_error", scope: !1850, file: !919, line: 1033, baseType: !1857, size: 64, align: 64, offset: 256)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64, align: 64)
!1858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1036, size: 51072, align: 64, elements: !1859)
!1859 = !{!1860, !1861}
!1860 = !DISubrange(count: 2)
!1861 = !DISubrange(count: 399)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration", scope: !1850, file: !919, line: 1034, baseType: !959, size: 64, align: 64, offset: 320)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration_fields", scope: !1850, file: !919, line: 1035, baseType: !959, size: 64, align: 64, offset: 384)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "frame_delay_evidence", scope: !1850, file: !919, line: 1036, baseType: !963, size: 32, align: 32, offset: 448)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "found_decoder", scope: !1850, file: !919, line: 1043, baseType: !963, size: 32, align: 32, offset: 480)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "last_duration", scope: !1850, file: !919, line: 1045, baseType: !959, size: 64, align: 64, offset: 512)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts", scope: !1850, file: !919, line: 1050, baseType: !959, size: 64, align: 64, offset: 576)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts_idx", scope: !1850, file: !919, line: 1051, baseType: !963, size: 32, align: 32, offset: 640)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts", scope: !1850, file: !919, line: 1052, baseType: !959, size: 64, align: 64, offset: 704)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts_idx", scope: !1850, file: !919, line: 1053, baseType: !963, size: 32, align: 32, offset: 768)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_bits", scope: !1376, file: !919, line: 1057, baseType: !963, size: 32, align: 32, offset: 1792)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "first_dts", scope: !1376, file: !919, line: 1067, baseType: !959, size: 64, align: 64, offset: 1856)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "cur_dts", scope: !1376, file: !919, line: 1068, baseType: !959, size: 64, align: 64, offset: 1920)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_pts", scope: !1376, file: !919, line: 1069, baseType: !959, size: 64, align: 64, offset: 1984)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_duration", scope: !1376, file: !919, line: 1070, baseType: !963, size: 32, align: 32, offset: 2048)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "probe_packets", scope: !1376, file: !919, line: 1075, baseType: !963, size: 32, align: 32, offset: 2080)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_nb_frames", scope: !1376, file: !919, line: 1080, baseType: !963, size: 32, align: 32, offset: 2112)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "need_parsing", scope: !1376, file: !919, line: 1083, baseType: !918, size: 32, align: 32, offset: 2144)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !1376, file: !919, line: 1084, baseType: !1880, size: 64, align: 64, offset: 2176)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64, align: 64)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParserContext", file: !4, line: 5092, size: 2816, align: 64, elements: !1882)
!1882 = !{!1883, !1884, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1881, file: !4, line: 5093, baseType: !962, size: 64, align: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !1881, file: !4, line: 5094, baseType: !1885, size: 64, align: 64, offset: 64)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64, align: 64)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParser", file: !4, line: 5259, size: 512, align: 64, elements: !1887)
!1887 = !{!1888, !1892, !1893, !1899, !1904, !1908, !1912}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1886, file: !4, line: 5260, baseType: !1889, size: 160, align: 32)
!1889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !963, size: 160, align: 32, elements: !1890)
!1890 = !{!1891}
!1891 = !DISubrange(count: 5)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1886, file: !4, line: 5261, baseType: !963, size: 32, align: 32, offset: 160)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "parser_init", scope: !1886, file: !4, line: 5262, baseType: !1894, size: 64, align: 64, offset: 192)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64, align: 64)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{!963, !1897}
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64, align: 64)
!1898 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParserContext", file: !4, line: 5257, baseType: !1881)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "parser_parse", scope: !1886, file: !4, line: 5265, baseType: !1900, size: 64, align: 64, offset: 256)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64, align: 64)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{!963, !1897, !1381, !1903, !975, !1335, !963}
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64, align: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "parser_close", scope: !1886, file: !4, line: 5269, baseType: !1905, size: 64, align: 64, offset: 320)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64, align: 64)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{null, !1897}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1886, file: !4, line: 5270, baseType: !1909, size: 64, align: 64, offset: 384)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64, align: 64)
!1910 = !DISubroutineType(types: !1911)
!1911 = !{!963, !1381, !1335, !963}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1886, file: !4, line: 5271, baseType: !1885, size: 64, align: 64, offset: 448)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1881, file: !4, line: 5095, baseType: !959, size: 64, align: 64, offset: 128)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "cur_offset", scope: !1881, file: !4, line: 5096, baseType: !959, size: 64, align: 64, offset: 192)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "next_frame_offset", scope: !1881, file: !4, line: 5098, baseType: !959, size: 64, align: 64, offset: 256)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1881, file: !4, line: 5100, baseType: !963, size: 32, align: 32, offset: 320)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1881, file: !4, line: 5110, baseType: !963, size: 32, align: 32, offset: 352)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1881, file: !4, line: 5111, baseType: !959, size: 64, align: 64, offset: 384)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1881, file: !4, line: 5112, baseType: !959, size: 64, align: 64, offset: 448)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "last_pts", scope: !1881, file: !4, line: 5115, baseType: !959, size: 64, align: 64, offset: 512)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !1881, file: !4, line: 5116, baseType: !959, size: 64, align: 64, offset: 576)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_timestamp", scope: !1881, file: !4, line: 5117, baseType: !963, size: 32, align: 32, offset: 640)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_start_index", scope: !1881, file: !4, line: 5120, baseType: !963, size: 32, align: 32, offset: 672)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_offset", scope: !1881, file: !4, line: 5121, baseType: !1925, size: 256, align: 64, offset: 704)
!1925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !959, size: 256, align: 64, elements: !1480)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pts", scope: !1881, file: !4, line: 5122, baseType: !1925, size: 256, align: 64, offset: 960)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_dts", scope: !1881, file: !4, line: 5123, baseType: !1925, size: 256, align: 64, offset: 1216)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1881, file: !4, line: 5125, baseType: !963, size: 32, align: 32, offset: 1472)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1881, file: !4, line: 5132, baseType: !959, size: 64, align: 64, offset: 1536)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_end", scope: !1881, file: !4, line: 5133, baseType: !1925, size: 256, align: 64, offset: 1600)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1881, file: !4, line: 5141, baseType: !963, size: 32, align: 32, offset: 1856)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1881, file: !4, line: 5148, baseType: !959, size: 64, align: 64, offset: 1920)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "dts_sync_point", scope: !1881, file: !4, line: 5161, baseType: !963, size: 32, align: 32, offset: 1984)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ref_dts_delta", scope: !1881, file: !4, line: 5176, baseType: !963, size: 32, align: 32, offset: 2016)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "pts_dts_delta", scope: !1881, file: !4, line: 5190, baseType: !963, size: 32, align: 32, offset: 2048)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pos", scope: !1881, file: !4, line: 5197, baseType: !1925, size: 256, align: 64, offset: 2112)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1881, file: !4, line: 5202, baseType: !959, size: 64, align: 64, offset: 2368)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "last_pos", scope: !1881, file: !4, line: 5207, baseType: !959, size: 64, align: 64, offset: 2432)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1881, file: !4, line: 5214, baseType: !963, size: 32, align: 32, offset: 2496)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1881, file: !4, line: 5216, baseType: !889, size: 32, align: 32, offset: 2528)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "picture_structure", scope: !1881, file: !4, line: 5226, baseType: !927, size: 32, align: 32, offset: 2560)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "output_picture_number", scope: !1881, file: !4, line: 5234, baseType: !963, size: 32, align: 32, offset: 2592)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1881, file: !4, line: 5239, baseType: !963, size: 32, align: 32, offset: 2624)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1881, file: !4, line: 5240, baseType: !963, size: 32, align: 32, offset: 2656)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1881, file: !4, line: 5245, baseType: !963, size: 32, align: 32, offset: 2688)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1881, file: !4, line: 5246, baseType: !963, size: 32, align: 32, offset: 2720)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1881, file: !4, line: 5256, baseType: !963, size: 32, align: 32, offset: 2752)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "last_in_packet_buffer", scope: !1376, file: !919, line: 1089, baseType: !1949, size: 64, align: 64, offset: 2240)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64, align: 64)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketList", file: !919, line: 2003, size: 768, align: 64, elements: !1951)
!1951 = !{!1952, !1953}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !1950, file: !919, line: 2004, baseType: !1139, size: 704, align: 64)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1950, file: !919, line: 2005, baseType: !1949, size: 64, align: 64, offset: 704)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "probe_data", scope: !1376, file: !919, line: 1090, baseType: !1100, size: 256, align: 64, offset: 2304)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "pts_buffer", scope: !1376, file: !919, line: 1092, baseType: !1956, size: 1088, align: 64, offset: 2560)
!1956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !959, size: 1088, align: 64, elements: !1957)
!1957 = !{!1958}
!1958 = !DISubrange(count: 17)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries", scope: !1376, file: !919, line: 1094, baseType: !1960, size: 64, align: 64, offset: 3648)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64, align: 64)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIndexEntry", file: !919, line: 808, baseType: !1962)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIndexEntry", file: !919, line: 793, size: 192, align: 64, elements: !1963)
!1963 = !{!1964, !1965, !1966, !1967, !1968}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1962, file: !919, line: 794, baseType: !959, size: 64, align: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !1962, file: !919, line: 795, baseType: !959, size: 64, align: 64, offset: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1962, file: !919, line: 805, baseType: !963, size: 2, align: 32, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1962, file: !919, line: 806, baseType: !963, size: 30, align: 32, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "min_distance", scope: !1962, file: !919, line: 807, baseType: !963, size: 32, align: 32, offset: 160)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index_entries", scope: !1376, file: !919, line: 1096, baseType: !963, size: 32, align: 32, offset: 3712)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries_allocated_size", scope: !1376, file: !919, line: 1097, baseType: !964, size: 32, align: 32, offset: 3744)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "stream_identifier", scope: !1376, file: !919, line: 1104, baseType: !963, size: 32, align: 32, offset: 3776)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !1376, file: !919, line: 1109, baseType: !963, size: 32, align: 32, offset: 3808)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !1376, file: !919, line: 1110, baseType: !963, size: 32, align: 32, offset: 3840)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_stream_idx", scope: !1376, file: !919, line: 1111, baseType: !963, size: 32, align: 32, offset: 3872)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_size", scope: !1376, file: !919, line: 1113, baseType: !959, size: 64, align: 64, offset: 3904)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_duration", scope: !1376, file: !919, line: 1114, baseType: !959, size: 64, align: 64, offset: 3968)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "request_probe", scope: !1376, file: !919, line: 1123, baseType: !963, size: 32, align: 32, offset: 4032)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "skip_to_keyframe", scope: !1376, file: !919, line: 1128, baseType: !963, size: 32, align: 32, offset: 4064)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1376, file: !919, line: 1133, baseType: !963, size: 32, align: 32, offset: 4096)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "start_skip_samples", scope: !1376, file: !919, line: 1142, baseType: !959, size: 64, align: 64, offset: 4160)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "first_discard_sample", scope: !1376, file: !919, line: 1150, baseType: !959, size: 64, align: 64, offset: 4224)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "last_discard_sample", scope: !1376, file: !919, line: 1157, baseType: !959, size: 64, align: 64, offset: 4288)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "nb_decoded_frames", scope: !1376, file: !919, line: 1163, baseType: !963, size: 32, align: 32, offset: 4352)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "mux_ts_offset", scope: !1376, file: !919, line: 1169, baseType: !959, size: 64, align: 64, offset: 4416)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !1376, file: !919, line: 1174, baseType: !959, size: 64, align: 64, offset: 4480)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !1376, file: !919, line: 1186, baseType: !963, size: 32, align: 32, offset: 4544)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "update_initial_durations_done", scope: !1376, file: !919, line: 1191, baseType: !963, size: 32, align: 32, offset: 4576)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error", scope: !1376, file: !919, line: 1196, baseType: !1956, size: 1088, align: 64, offset: 4608)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error_count", scope: !1376, file: !919, line: 1197, baseType: !1990, size: 136, align: 8, offset: 5696)
!1990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 136, align: 8, elements: !1957)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts_for_order_check", scope: !1376, file: !919, line: 1202, baseType: !959, size: 64, align: 64, offset: 5888)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ordered", scope: !1376, file: !919, line: 1203, baseType: !984, size: 8, align: 8, offset: 5952)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "dts_misordered", scope: !1376, file: !919, line: 1204, baseType: !984, size: 8, align: 8, offset: 5960)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "inject_global_side_data", scope: !1376, file: !919, line: 1209, baseType: !963, size: 32, align: 32, offset: 5984)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "display_aspect_ratio", scope: !1376, file: !919, line: 1216, baseType: !1039, size: 64, align: 32, offset: 6016)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1376, file: !919, line: 1222, baseType: !1997, size: 64, align: 64, offset: 6080)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64, align: 64)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStreamInternal", file: !919, line: 840, baseType: !1999)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStreamInternal", file: !966, line: 149, size: 640, align: 64, elements: !2000)
!2000 = !{!2001, !2002, !2042, !2043, !2044, !2045, !2046, !2047, !2053, !2054}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "reorder", scope: !1999, file: !966, line: 154, baseType: !963, size: 32, align: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "bsfcs", scope: !1999, file: !966, line: 161, baseType: !2003, size: 64, align: 64, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64, align: 64)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64, align: 64)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !4, line: 5794, baseType: !2006)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !4, line: 5747, size: 512, align: 64, elements: !2007)
!2007 = !{!2008, !2009, !2033, !2037, !2038, !2039, !2040, !2041}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !2006, file: !4, line: 5751, baseType: !1012, size: 64, align: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2006, file: !4, line: 5756, baseType: !2010, size: 64, align: 64, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64, align: 64)
!2011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2012)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !4, line: 5796, size: 512, align: 64, elements: !2013)
!2013 = !{!2014, !2015, !2018, !2019, !2020, !2024, !2028, !2032}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2012, file: !4, line: 5797, baseType: !970, size: 64, align: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !2012, file: !4, line: 5804, baseType: !2016, size: 64, align: 64, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64, align: 64)
!2017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !2012, file: !4, line: 5815, baseType: !1012, size: 64, align: 64, offset: 128)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2012, file: !4, line: 5825, baseType: !963, size: 32, align: 32, offset: 192)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2012, file: !4, line: 5826, baseType: !2021, size: 64, align: 64, offset: 256)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64, align: 64)
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!963, !2004}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2012, file: !4, line: 5827, baseType: !2025, size: 64, align: 64, offset: 320)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64, align: 64)
!2026 = !DISubroutineType(types: !2027)
!2027 = !{!963, !2004, !1138}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2012, file: !4, line: 5828, baseType: !2029, size: 64, align: 64, offset: 384)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64, align: 64)
!2030 = !DISubroutineType(types: !2031)
!2031 = !{null, !2004}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2012, file: !4, line: 5829, baseType: !2029, size: 64, align: 64, offset: 448)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !2006, file: !4, line: 5762, baseType: !2034, size: 64, align: 64, offset: 128)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64, align: 64)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !4, line: 5735, baseType: !2036)
!2036 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !4, line: 5735, flags: DIFlagFwdDecl)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !2006, file: !4, line: 5768, baseType: !962, size: 64, align: 64, offset: 192)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !2006, file: !4, line: 5775, baseType: !1815, size: 64, align: 64, offset: 256)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !2006, file: !4, line: 5781, baseType: !1815, size: 64, align: 64, offset: 320)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !2006, file: !4, line: 5787, baseType: !1039, size: 64, align: 32, offset: 384)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !2006, file: !4, line: 5793, baseType: !1039, size: 64, align: 32, offset: 448)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfcs", scope: !1999, file: !966, line: 162, baseType: !963, size: 32, align: 32, offset: 128)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_checked", scope: !1999, file: !966, line: 167, baseType: !963, size: 32, align: 32, offset: 160)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1999, file: !966, line: 172, baseType: !1381, size: 64, align: 64, offset: 192)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "avctx_inited", scope: !1999, file: !966, line: 176, baseType: !963, size: 32, align: 32, offset: 256)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "orig_codec_id", scope: !1999, file: !966, line: 178, baseType: !3, size: 32, align: 32, offset: 288)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "extract_extradata", scope: !1999, file: !966, line: 187, baseType: !2048, size: 192, align: 64, offset: 320)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1999, file: !966, line: 183, size: 192, align: 64, elements: !2049)
!2049 = !{!2050, !2051, !2052}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "bsf", scope: !2048, file: !966, line: 184, baseType: !2004, size: 64, align: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !2048, file: !966, line: 185, baseType: !1138, size: 64, align: 64, offset: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "inited", scope: !2048, file: !966, line: 186, baseType: !963, size: 32, align: 32, offset: 128)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "need_context_update", scope: !1999, file: !966, line: 192, baseType: !963, size: 32, align: 32, offset: 512)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "priv_pts", scope: !1999, file: !966, line: 194, baseType: !2055, size: 64, align: 64, offset: 576)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64, align: 64)
!2056 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFFrac", file: !966, line: 63, baseType: !2057)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFFrac", file: !966, line: 61, size: 192, align: 64, elements: !2058)
!2058 = !{!2059, !2060, !2061}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2057, file: !966, line: 62, baseType: !959, size: 64, align: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2057, file: !966, line: 62, baseType: !959, size: 64, align: 64, offset: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !2057, file: !966, line: 62, baseType: !959, size: 64, align: 64, offset: 128)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1113, file: !919, line: 1417, baseType: !2063, size: 8192, align: 8, offset: 448)
!2063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 8192, align: 8, elements: !2064)
!2064 = !{!2065}
!2065 = !DISubrange(count: 1024)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1113, file: !919, line: 1433, baseType: !974, size: 64, align: 64, offset: 8640)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1113, file: !919, line: 1442, baseType: !959, size: 64, align: 64, offset: 8704)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1113, file: !919, line: 1452, baseType: !959, size: 64, align: 64, offset: 8768)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1113, file: !919, line: 1459, baseType: !959, size: 64, align: 64, offset: 8832)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "packet_size", scope: !1113, file: !919, line: 1461, baseType: !964, size: 32, align: 32, offset: 8896)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "max_delay", scope: !1113, file: !919, line: 1462, baseType: !963, size: 32, align: 32, offset: 8928)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1113, file: !919, line: 1468, baseType: !963, size: 32, align: 32, offset: 8960)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "probesize", scope: !1113, file: !919, line: 1503, baseType: !959, size: 64, align: 64, offset: 9024)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "max_analyze_duration", scope: !1113, file: !919, line: 1511, baseType: !959, size: 64, align: 64, offset: 9088)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1113, file: !919, line: 1513, baseType: !1335, size: 64, align: 64, offset: 9152)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1113, file: !919, line: 1514, baseType: !963, size: 32, align: 32, offset: 9216)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "nb_programs", scope: !1113, file: !919, line: 1516, baseType: !964, size: 32, align: 32, offset: 9248)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "programs", scope: !1113, file: !919, line: 1517, baseType: !2079, size: 64, align: 64, offset: 9280)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64, align: 64)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64, align: 64)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProgram", file: !919, line: 1284, baseType: !2082)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProgram", file: !919, line: 1259, size: 704, align: 64, elements: !2083)
!2083 = !{!2084, !2085, !2086, !2087, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2082, file: !919, line: 1260, baseType: !963, size: 32, align: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2082, file: !919, line: 1261, baseType: !963, size: 32, align: 32, offset: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !2082, file: !919, line: 1262, baseType: !909, size: 32, align: 32, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !2082, file: !919, line: 1263, baseType: !2088, size: 64, align: 64, offset: 128)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64, align: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "nb_stream_indexes", scope: !2082, file: !919, line: 1264, baseType: !964, size: 32, align: 32, offset: 192)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2082, file: !919, line: 1265, baseType: !1246, size: 64, align: 64, offset: 256)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !2082, file: !919, line: 1267, baseType: !963, size: 32, align: 32, offset: 320)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_pid", scope: !2082, file: !919, line: 1268, baseType: !963, size: 32, align: 32, offset: 352)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "pcr_pid", scope: !2082, file: !919, line: 1269, baseType: !963, size: 32, align: 32, offset: 384)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !2082, file: !919, line: 1270, baseType: !963, size: 32, align: 32, offset: 416)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2082, file: !919, line: 1279, baseType: !959, size: 64, align: 64, offset: 448)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "end_time", scope: !2082, file: !919, line: 1280, baseType: !959, size: 64, align: 64, offset: 512)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !2082, file: !919, line: 1282, baseType: !959, size: 64, align: 64, offset: 576)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !2082, file: !919, line: 1283, baseType: !963, size: 32, align: 32, offset: 640)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec_id", scope: !1113, file: !919, line: 1523, baseType: !3, size: 32, align: 32, offset: 9344)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec_id", scope: !1113, file: !919, line: 1529, baseType: !3, size: 32, align: 32, offset: 9376)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec_id", scope: !1113, file: !919, line: 1535, baseType: !3, size: 32, align: 32, offset: 9408)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "max_index_size", scope: !1113, file: !919, line: 1547, baseType: !964, size: 32, align: 32, offset: 9440)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "max_picture_buffer", scope: !1113, file: !919, line: 1553, baseType: !964, size: 32, align: 32, offset: 9472)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "nb_chapters", scope: !1113, file: !919, line: 1566, baseType: !964, size: 32, align: 32, offset: 9504)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "chapters", scope: !1113, file: !919, line: 1567, baseType: !2106, size: 64, align: 64, offset: 9536)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64, align: 64)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64, align: 64)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVChapter", file: !919, line: 1299, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVChapter", file: !919, line: 1294, size: 320, align: 64, elements: !2110)
!2110 = !{!2111, !2112, !2113, !2114, !2115}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2109, file: !919, line: 1295, baseType: !963, size: 32, align: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !2109, file: !919, line: 1296, baseType: !1039, size: 64, align: 32, offset: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2109, file: !919, line: 1297, baseType: !959, size: 64, align: 64, offset: 128)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2109, file: !919, line: 1297, baseType: !959, size: 64, align: 64, offset: 192)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2109, file: !919, line: 1298, baseType: !1246, size: 64, align: 64, offset: 256)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1113, file: !919, line: 1577, baseType: !1246, size: 64, align: 64, offset: 9600)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_realtime", scope: !1113, file: !919, line: 1590, baseType: !959, size: 64, align: 64, offset: 9664)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "fps_probe_size", scope: !1113, file: !919, line: 1597, baseType: !963, size: 32, align: 32, offset: 9728)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "error_recognition", scope: !1113, file: !919, line: 1604, baseType: !963, size: 32, align: 32, offset: 9760)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_callback", scope: !1113, file: !919, line: 1615, baseType: !2121, size: 128, align: 64, offset: 9792)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOInterruptCB", file: !650, line: 61, baseType: !2122)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOInterruptCB", file: !650, line: 58, size: 128, align: 64, elements: !2123)
!2123 = !{!2124, !2125}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2122, file: !650, line: 59, baseType: !1364, size: 64, align: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2122, file: !650, line: 60, baseType: !962, size: 64, align: 64, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1113, file: !919, line: 1620, baseType: !963, size: 32, align: 32, offset: 9920)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "max_interleave_delta", scope: !1113, file: !919, line: 1639, baseType: !959, size: 64, align: 64, offset: 9984)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1113, file: !919, line: 1645, baseType: !963, size: 32, align: 32, offset: 10048)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1113, file: !919, line: 1652, baseType: !963, size: 32, align: 32, offset: 10080)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "max_ts_probe", scope: !1113, file: !919, line: 1659, baseType: !963, size: 32, align: 32, offset: 10112)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_negative_ts", scope: !1113, file: !919, line: 1668, baseType: !963, size: 32, align: 32, offset: 10144)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "ts_id", scope: !1113, file: !919, line: 1677, baseType: !963, size: 32, align: 32, offset: 10176)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "audio_preload", scope: !1113, file: !919, line: 1685, baseType: !963, size: 32, align: 32, offset: 10208)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_duration", scope: !1113, file: !919, line: 1693, baseType: !963, size: 32, align: 32, offset: 10240)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_size", scope: !1113, file: !919, line: 1701, baseType: !963, size: 32, align: 32, offset: 10272)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "use_wallclock_as_timestamps", scope: !1113, file: !919, line: 1709, baseType: !963, size: 32, align: 32, offset: 10304)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "avio_flags", scope: !1113, file: !919, line: 1716, baseType: !963, size: 32, align: 32, offset: 10336)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "duration_estimation_method", scope: !1113, file: !919, line: 1724, baseType: !933, size: 32, align: 32, offset: 10368)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "skip_initial_bytes", scope: !1113, file: !919, line: 1731, baseType: !959, size: 64, align: 64, offset: 10432)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "correct_ts_overflow", scope: !1113, file: !919, line: 1738, baseType: !964, size: 32, align: 32, offset: 10496)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "seek2any", scope: !1113, file: !919, line: 1745, baseType: !963, size: 32, align: 32, offset: 10528)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "flush_packets", scope: !1113, file: !919, line: 1752, baseType: !963, size: 32, align: 32, offset: 10560)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "probe_score", scope: !1113, file: !919, line: 1761, baseType: !963, size: 32, align: 32, offset: 10592)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "format_probesize", scope: !1113, file: !919, line: 1768, baseType: !963, size: 32, align: 32, offset: 10624)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1113, file: !919, line: 1776, baseType: !974, size: 64, align: 64, offset: 10688)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "format_whitelist", scope: !1113, file: !919, line: 1784, baseType: !974, size: 64, align: 64, offset: 10752)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1113, file: !919, line: 1790, baseType: !2148, size: 64, align: 64, offset: 10816)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64, align: 64)
!2149 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatInternal", file: !919, line: 1321, baseType: !2150)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatInternal", file: !966, line: 66, size: 1088, align: 64, elements: !2151)
!2151 = !{!2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "nb_interleaved_streams", scope: !2150, file: !966, line: 71, baseType: !963, size: 32, align: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "packet_buffer", scope: !2150, file: !966, line: 78, baseType: !1949, size: 64, align: 64, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "packet_buffer_end", scope: !2150, file: !966, line: 79, baseType: !1949, size: 64, align: 64, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "data_offset", scope: !2150, file: !966, line: 82, baseType: !959, size: 64, align: 64, offset: 192)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer", scope: !2150, file: !966, line: 90, baseType: !1949, size: 64, align: 64, offset: 256)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer_end", scope: !2150, file: !966, line: 91, baseType: !1949, size: 64, align: 64, offset: 320)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "parse_queue", scope: !2150, file: !966, line: 95, baseType: !1949, size: 64, align: 64, offset: 384)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "parse_queue_end", scope: !2150, file: !966, line: 96, baseType: !1949, size: 64, align: 64, offset: 448)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer_remaining_size", scope: !2150, file: !966, line: 101, baseType: !963, size: 32, align: 32, offset: 512)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2150, file: !966, line: 108, baseType: !959, size: 64, align: 64, offset: 576)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "offset_timebase", scope: !2150, file: !966, line: 113, baseType: !1039, size: 64, align: 32, offset: 640)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "missing_ts_warning", scope: !2150, file: !966, line: 116, baseType: !963, size: 32, align: 32, offset: 704)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "inject_global_side_data", scope: !2150, file: !966, line: 119, baseType: !963, size: 32, align: 32, offset: 736)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_negative_ts_use_pts", scope: !2150, file: !966, line: 121, baseType: !963, size: 32, align: 32, offset: 768)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "shortest_end", scope: !2150, file: !966, line: 126, baseType: !959, size: 64, align: 64, offset: 832)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2150, file: !966, line: 131, baseType: !963, size: 32, align: 32, offset: 896)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "streams_initialized", scope: !2150, file: !966, line: 136, baseType: !963, size: 32, align: 32, offset: 928)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "id3v2_meta", scope: !2150, file: !966, line: 141, baseType: !1246, size: 64, align: 64, offset: 960)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_codec_framerate", scope: !2150, file: !966, line: 146, baseType: !963, size: 32, align: 32, offset: 1024)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "io_repositioned", scope: !1113, file: !919, line: 1798, baseType: !963, size: 32, align: 32, offset: 10880)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !1113, file: !919, line: 1806, baseType: !2173, size: 64, align: 64, offset: 10944)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64, align: 64)
!2174 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !4, line: 3610, baseType: !1391)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1113, file: !919, line: 1814, baseType: !2173, size: 64, align: 64, offset: 11008)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !1113, file: !919, line: 1822, baseType: !2173, size: 64, align: 64, offset: 11072)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !1113, file: !919, line: 1830, baseType: !2173, size: 64, align: 64, offset: 11136)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_header_padding", scope: !1113, file: !919, line: 1837, baseType: !963, size: 32, align: 32, offset: 11200)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1113, file: !919, line: 1843, baseType: !962, size: 64, align: 64, offset: 11264)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "control_message_cb", scope: !1113, file: !919, line: 1848, baseType: !2181, size: 64, align: 64, offset: 11328)
!2181 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_format_control_message", file: !919, line: 1305, baseType: !1187)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "output_ts_offset", scope: !1113, file: !919, line: 1854, baseType: !959, size: 64, align: 64, offset: 11392)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1113, file: !919, line: 1862, baseType: !983, size: 64, align: 64, offset: 11456)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec_id", scope: !1113, file: !919, line: 1868, baseType: !3, size: 32, align: 32, offset: 11520)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "open_cb", scope: !1113, file: !919, line: 1889, baseType: !2186, size: 64, align: 64, offset: 11584)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64, align: 64)
!2187 = !DISubroutineType(types: !2188)
!2188 = !{!963, !1112, !2189, !970, !963, !2190, !2192}
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64, align: 64)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64, align: 64)
!2191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2121)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64, align: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !1113, file: !919, line: 1897, baseType: !974, size: 64, align: 64, offset: 11648)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "io_open", scope: !1113, file: !919, line: 1919, baseType: !2195, size: 64, align: 64, offset: 11712)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64, align: 64)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{!963, !1112, !2189, !970, !963, !2192}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "io_close", scope: !1113, file: !919, line: 1925, baseType: !2199, size: 64, align: 64, offset: 11776)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64, align: 64)
!2200 = !DISubroutineType(types: !2201)
!2201 = !{null, !1112, !1306}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !1113, file: !919, line: 1932, baseType: !974, size: 64, align: 64, offset: 11840)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "max_streams", scope: !1113, file: !919, line: 1939, baseType: !963, size: 32, align: 32, offset: 11904)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "skip_estimate_duration_from_pts", scope: !1113, file: !919, line: 1946, baseType: !963, size: 32, align: 32, offset: 11936)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !996, file: !919, line: 714, baseType: !1135, size: 64, align: 64, offset: 704)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "read_close", scope: !996, file: !919, line: 720, baseType: !1109, size: 64, align: 64, offset: 768)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !996, file: !919, line: 730, baseType: !2208, size: 64, align: 64, offset: 832)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 64, align: 64)
!2209 = !DISubroutineType(types: !2210)
!2210 = !{!963, !1112, !963, !959, !963}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "read_timestamp", scope: !996, file: !919, line: 737, baseType: !2212, size: 64, align: 64, offset: 896)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64, align: 64)
!2213 = !DISubroutineType(types: !2214)
!2214 = !{!959, !1112, !963, !1185, !959}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "read_play", scope: !996, file: !919, line: 744, baseType: !1109, size: 64, align: 64, offset: 960)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !996, file: !919, line: 750, baseType: !1109, size: 64, align: 64, offset: 1024)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek2", scope: !996, file: !919, line: 758, baseType: !2218, size: 64, align: 64, offset: 1088)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64, align: 64)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!963, !1112, !963, !959, !959, !959, !963}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !996, file: !919, line: 764, baseType: !1280, size: 64, align: 64, offset: 1152)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !996, file: !919, line: 770, baseType: !1286, size: 64, align: 64, offset: 1216)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !996, file: !919, line: 776, baseType: !1286, size: 64, align: 64, offset: 1280)
!2224 = distinct !DIGlobalVariable(name: "hls_class", scope: !0, file: !939, line: 2320, type: !1013, isLocal: true, isDefinition: true, variable: %struct.AVClass* @hls_class)
!2225 = distinct !DIGlobalVariable(name: "hls_options", scope: !0, file: !939, line: 2304, type: !2226, isLocal: true, isDefinition: true, variable: <{ %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @hls_options)
!2226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2227, size: 3072, align: 64, elements: !2229)
!2227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2228)
!2228 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !464, line: 301, baseType: !1025)
!2229 = !{!2230}
!2230 = !DISubrange(count: 6)
!2231 = distinct !DIGlobalVariable(name: "opts", scope: !2232, file: !939, line: 1647, type: !2238, isLocal: true, isDefinition: true, variable: [7 x i8*]* @save_avio_options.opts)
!2232 = distinct !DISubprogram(name: "save_avio_options", scope: !939, file: !939, line: 1644, type: !2233, isLocal: true, isDefinition: true, scopeLine: 1645, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!2233 = !DISubroutineType(types: !2234)
!2234 = !{!963, !2235}
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 64, align: 64)
!2236 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatContext", file: !919, line: 1947, baseType: !1113)
!2237 = !{}
!2238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1770, size: 448, align: 64, elements: !2239)
!2239 = !{!2240}
!2240 = !DISubrange(count: 7)
!2241 = distinct !DIGlobalVariable(name: "max_init_section_size", scope: !2242, file: !939, line: 1267, type: !1406, isLocal: true, isDefinition: true, variable: i32* @update_init_section.max_init_section_size)
!2242 = distinct !DISubprogram(name: "update_init_section", scope: !939, file: !939, line: 1265, type: !2243, isLocal: true, isDefinition: true, scopeLine: 1266, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!2243 = !DISubroutineType(types: !2244)
!2244 = !{!963, !2245, !2272}
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64, align: 64)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "playlist", file: !939, line: 93, size: 70720, align: 64, elements: !2247)
!2247 = !{!2248, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2315, !2316, !2317, !2318, !2319, !2333, !2334}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !2246, file: !939, line: 94, baseType: !2249, size: 32768, align: 8)
!2249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 32768, align: 8, elements: !2250)
!2250 = !{!2251}
!2251 = !DISubrange(count: 4096)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !2246, file: !939, line: 95, baseType: !1307, size: 2112, align: 64, offset: 32768)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "read_buffer", scope: !2246, file: !939, line: 96, baseType: !983, size: 64, align: 64, offset: 34880)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !2246, file: !939, line: 97, baseType: !1306, size: 64, align: 64, offset: 34944)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "input_read_done", scope: !2246, file: !939, line: 98, baseType: !963, size: 32, align: 32, offset: 35008)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "input_next", scope: !2246, file: !939, line: 99, baseType: !1306, size: 64, align: 64, offset: 35072)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "input_next_requested", scope: !2246, file: !939, line: 100, baseType: !963, size: 32, align: 32, offset: 35136)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2246, file: !939, line: 101, baseType: !2235, size: 64, align: 64, offset: 35200)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2246, file: !939, line: 102, baseType: !963, size: 32, align: 32, offset: 35264)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !2246, file: !939, line: 103, baseType: !2235, size: 64, align: 64, offset: 35328)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !2246, file: !939, line: 104, baseType: !1139, size: 704, align: 64, offset: 35392)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "has_noheader_flag", scope: !2246, file: !939, line: 105, baseType: !963, size: 32, align: 32, offset: 36096)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "main_streams", scope: !2246, file: !939, line: 109, baseType: !1373, size: 64, align: 64, offset: 36160)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "n_main_streams", scope: !2246, file: !939, line: 110, baseType: !963, size: 32, align: 32, offset: 36224)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "finished", scope: !2246, file: !939, line: 112, baseType: !963, size: 32, align: 32, offset: 36256)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2246, file: !939, line: 113, baseType: !938, size: 32, align: 32, offset: 36288)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "target_duration", scope: !2246, file: !939, line: 114, baseType: !959, size: 64, align: 64, offset: 36352)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "start_seq_no", scope: !2246, file: !939, line: 115, baseType: !963, size: 32, align: 32, offset: 36416)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "n_segments", scope: !2246, file: !939, line: 116, baseType: !963, size: 32, align: 32, offset: 36448)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !2246, file: !939, line: 117, baseType: !2271, size: 64, align: 64, offset: 36480)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64, align: 64)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64, align: 64)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "segment", file: !939, line: 68, size: 576, align: 64, elements: !2274)
!2274 = !{!2275, !2276, !2277, !2278, !2279, !2280, !2281, !2285}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2273, file: !939, line: 69, baseType: !959, size: 64, align: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "url_offset", scope: !2273, file: !939, line: 70, baseType: !959, size: 64, align: 64, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2273, file: !939, line: 71, baseType: !959, size: 64, align: 64, offset: 128)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !2273, file: !939, line: 72, baseType: !974, size: 64, align: 64, offset: 192)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2273, file: !939, line: 73, baseType: !974, size: 64, align: 64, offset: 256)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "key_type", scope: !2273, file: !939, line: 74, baseType: !944, size: 32, align: 32, offset: 320)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "iv", scope: !2273, file: !939, line: 75, baseType: !2282, size: 128, align: 8, offset: 352)
!2282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !984, size: 128, align: 8, elements: !2283)
!2283 = !{!2284}
!2284 = !DISubrange(count: 16)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "init_section", scope: !2273, file: !939, line: 77, baseType: !2272, size: 64, align: 64, offset: 512)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !2246, file: !939, line: 118, baseType: !963, size: 32, align: 32, offset: 36544)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "cur_seq_no", scope: !2246, file: !939, line: 119, baseType: !963, size: 32, align: 32, offset: 36576)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "cur_seg_offset", scope: !2246, file: !939, line: 120, baseType: !959, size: 64, align: 64, offset: 36608)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "last_load_time", scope: !2246, file: !939, line: 121, baseType: !959, size: 64, align: 64, offset: 36672)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "cur_init_section", scope: !2246, file: !939, line: 124, baseType: !2272, size: 64, align: 64, offset: 36736)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "init_sec_buf", scope: !2246, file: !939, line: 125, baseType: !983, size: 64, align: 64, offset: 36800)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "init_sec_buf_size", scope: !2246, file: !939, line: 126, baseType: !964, size: 32, align: 32, offset: 36864)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "init_sec_data_len", scope: !2246, file: !939, line: 127, baseType: !964, size: 32, align: 32, offset: 36896)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "init_sec_buf_read_offset", scope: !2246, file: !939, line: 128, baseType: !964, size: 32, align: 32, offset: 36928)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "key_url", scope: !2246, file: !939, line: 130, baseType: !2249, size: 32768, align: 8, offset: 36960)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2246, file: !939, line: 131, baseType: !2282, size: 128, align: 8, offset: 69728)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "is_id3_timestamped", scope: !2246, file: !939, line: 135, baseType: !963, size: 32, align: 32, offset: 69856)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "id3_mpegts_timestamp", scope: !2246, file: !939, line: 136, baseType: !959, size: 64, align: 64, offset: 69888)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "id3_offset", scope: !2246, file: !939, line: 137, baseType: !959, size: 64, align: 64, offset: 69952)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "id3_buf", scope: !2246, file: !939, line: 138, baseType: !983, size: 64, align: 64, offset: 70016)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "id3_buf_size", scope: !2246, file: !939, line: 139, baseType: !964, size: 32, align: 32, offset: 70080)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "id3_initial", scope: !2246, file: !939, line: 140, baseType: !1246, size: 64, align: 64, offset: 70144)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "id3_found", scope: !2246, file: !939, line: 141, baseType: !963, size: 32, align: 32, offset: 70208)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "id3_changed", scope: !2246, file: !939, line: 142, baseType: !963, size: 32, align: 32, offset: 70240)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "id3_deferred_extra", scope: !2246, file: !939, line: 143, baseType: !2306, size: 64, align: 64, offset: 70272)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64, align: 64)
!2307 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID3v2ExtraMeta", file: !2308, line: 61, baseType: !2309)
!2308 = !DIFile(filename: "libavformat/id3v2.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID3v2ExtraMeta", file: !2308, line: 57, size: 192, align: 64, elements: !2310)
!2310 = !{!2311, !2312, !2313}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2309, file: !2308, line: 58, baseType: !970, size: 64, align: 64)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2309, file: !2308, line: 59, baseType: !962, size: 64, align: 64, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2309, file: !2308, line: 60, baseType: !2314, size: 64, align: 64, offset: 128)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64, align: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "seek_timestamp", scope: !2246, file: !939, line: 145, baseType: !959, size: 64, align: 64, offset: 70336)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "seek_flags", scope: !2246, file: !939, line: 146, baseType: !963, size: 32, align: 32, offset: 70400)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "seek_stream_index", scope: !2246, file: !939, line: 147, baseType: !963, size: 32, align: 32, offset: 70432)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "n_renditions", scope: !2246, file: !939, line: 153, baseType: !963, size: 32, align: 32, offset: 70464)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "renditions", scope: !2246, file: !939, line: 154, baseType: !2320, size: 64, align: 64, offset: 70528)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64, align: 64)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64, align: 64)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rendition", file: !939, line: 168, size: 1728, align: 64, elements: !2323)
!2323 = !{!2324, !2325, !2326, !2330, !2331, !2332}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2322, file: !939, line: 169, baseType: !658, size: 32, align: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "playlist", scope: !2322, file: !939, line: 170, baseType: !2245, size: 64, align: 64, offset: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "group_id", scope: !2322, file: !939, line: 171, baseType: !2327, size: 512, align: 8, offset: 128)
!2327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 512, align: 8, elements: !2328)
!2328 = !{!2329}
!2329 = !DISubrange(count: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !2322, file: !939, line: 172, baseType: !2327, size: 512, align: 8, offset: 640)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2322, file: !939, line: 173, baseType: !2327, size: 512, align: 8, offset: 1152)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "disposition", scope: !2322, file: !939, line: 174, baseType: !963, size: 32, align: 32, offset: 1664)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "n_init_sections", scope: !2246, file: !939, line: 158, baseType: !963, size: 32, align: 32, offset: 70592)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "init_sections", scope: !2246, file: !939, line: 159, baseType: !2271, size: 64, align: 64, offset: 70656)
!2335 = distinct !DIGlobalVariable(name: "id3_priv_owner_ts", scope: !2336, file: !939, line: 985, type: !2349, isLocal: true, isDefinition: true, variable: [45 x i8]* @parse_id3.id3_priv_owner_ts)
!2336 = distinct !DISubprogram(name: "parse_id3", scope: !939, file: !939, line: 981, type: !2337, isLocal: true, isDefinition: true, scopeLine: 984, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!2337 = !DISubroutineType(types: !2338)
!2338 = !{null, !2235, !1306, !2192, !1185, !2339, !2348}
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 64, align: 64)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64, align: 64)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID3v2ExtraMetaAPIC", file: !2308, line: 76, baseType: !2342)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID3v2ExtraMetaAPIC", file: !2308, line: 71, size: 256, align: 64, elements: !2343)
!2343 = !{!2344, !2345, !2346, !2347}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2342, file: !2308, line: 72, baseType: !1143, size: 64, align: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2342, file: !2308, line: 73, baseType: !970, size: 64, align: 64, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2342, file: !2308, line: 74, baseType: !983, size: 64, align: 64, offset: 128)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2342, file: !2308, line: 75, baseType: !3, size: 32, align: 32, offset: 192)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64, align: 64)
!2349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 360, align: 8, elements: !2350)
!2350 = !{!2351}
!2351 = !DISubrange(count: 45)
!2352 = !{i32 2, !"Dwarf Version", i32 4}
!2353 = !{i32 2, !"Debug Info Version", i32 3}
!2354 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2355 = distinct !DISubprogram(name: "hls_probe", scope: !939, file: !939, line: 2288, type: !1097, isLocal: true, isDefinition: true, scopeLine: 2289, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!2356 = !DILocalVariable(name: "p", arg: 1, scope: !2355, file: !939, line: 2288, type: !1099)
!2357 = !DIExpression()
!2358 = !DILocation(line: 2288, column: 35, scope: !2355)
!2359 = !DILocation(line: 2292, column: 17, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2355, file: !939, line: 2292, column: 9)
!2361 = !DILocation(line: 2292, column: 20, scope: !2360)
!2362 = !DILocation(line: 2292, column: 9, scope: !2360)
!2363 = !DILocation(line: 2292, column: 9, scope: !2355)
!2364 = !DILocation(line: 2293, column: 9, scope: !2360)
!2365 = !DILocation(line: 2295, column: 16, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2355, file: !939, line: 2295, column: 9)
!2367 = !DILocation(line: 2295, column: 19, scope: !2366)
!2368 = !DILocation(line: 2295, column: 9, scope: !2366)
!2369 = !DILocation(line: 2295, column: 46, scope: !2366)
!2370 = !DILocation(line: 2296, column: 16, scope: !2366)
!2371 = !DILocation(line: 2296, column: 19, scope: !2366)
!2372 = !DILocation(line: 2296, column: 9, scope: !2366)
!2373 = !DILocation(line: 2296, column: 50, scope: !2366)
!2374 = !DILocation(line: 2297, column: 16, scope: !2366)
!2375 = !DILocation(line: 2297, column: 19, scope: !2366)
!2376 = !DILocation(line: 2297, column: 9, scope: !2366)
!2377 = !DILocation(line: 2295, column: 9, scope: !2378)
!2378 = !DILexicalBlockFile(scope: !2355, file: !939, discriminator: 1)
!2379 = !DILocation(line: 2298, column: 9, scope: !2366)
!2380 = !DILocation(line: 2299, column: 5, scope: !2355)
!2381 = !DILocation(line: 2300, column: 1, scope: !2355)
!2382 = distinct !DISubprogram(name: "hls_read_header", scope: !939, file: !939, line: 1781, type: !2233, isLocal: true, isDefinition: true, scopeLine: 1782, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!2383 = !DILocalVariable(name: "s", arg: 1, scope: !2382, file: !939, line: 1781, type: !2235)
!2384 = !DILocation(line: 1781, column: 45, scope: !2382)
!2385 = !DILocalVariable(name: "c", scope: !2382, file: !939, line: 1783, type: !2386)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64, align: 64)
!2387 = !DIDerivedType(tag: DW_TAG_typedef, name: "HLSContext", file: !939, line: 212, baseType: !2388)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HLSContext", file: !939, line: 189, size: 1216, align: 64, elements: !2389)
!2389 = !{!2390, !2392, !2393, !2394, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2417, !2418, !2419, !2420, !2421, !2422, !2423}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2388, file: !939, line: 190, baseType: !2391, size: 64, align: 64)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64, align: 64)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !2388, file: !939, line: 191, baseType: !2235, size: 64, align: 64, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "n_variants", scope: !2388, file: !939, line: 192, baseType: !963, size: 32, align: 32, offset: 128)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "variants", scope: !2388, file: !939, line: 193, baseType: !2395, size: 64, align: 64, offset: 192)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64, align: 64)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64, align: 64)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "variant", file: !939, line: 177, size: 1664, align: 64, elements: !2398)
!2398 = !{!2399, !2400, !2401, !2403, !2404, !2405}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth", scope: !2397, file: !939, line: 178, baseType: !963, size: 32, align: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "n_playlists", scope: !2397, file: !939, line: 181, baseType: !963, size: 32, align: 32, offset: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "playlists", scope: !2397, file: !939, line: 182, baseType: !2402, size: 64, align: 64, offset: 64)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64, align: 64)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "audio_group", scope: !2397, file: !939, line: 184, baseType: !2327, size: 512, align: 8, offset: 128)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "video_group", scope: !2397, file: !939, line: 185, baseType: !2327, size: 512, align: 8, offset: 640)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "subtitles_group", scope: !2397, file: !939, line: 186, baseType: !2327, size: 512, align: 8, offset: 1152)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "n_playlists", scope: !2388, file: !939, line: 194, baseType: !963, size: 32, align: 32, offset: 256)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "playlists", scope: !2388, file: !939, line: 195, baseType: !2402, size: 64, align: 64, offset: 320)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "n_renditions", scope: !2388, file: !939, line: 196, baseType: !963, size: 32, align: 32, offset: 384)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "renditions", scope: !2388, file: !939, line: 197, baseType: !2320, size: 64, align: 64, offset: 448)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "cur_seq_no", scope: !2388, file: !939, line: 199, baseType: !963, size: 32, align: 32, offset: 512)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "live_start_index", scope: !2388, file: !939, line: 200, baseType: !963, size: 32, align: 32, offset: 544)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "first_packet", scope: !2388, file: !939, line: 201, baseType: !963, size: 32, align: 32, offset: 576)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "first_timestamp", scope: !2388, file: !939, line: 202, baseType: !959, size: 64, align: 64, offset: 640)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "cur_timestamp", scope: !2388, file: !939, line: 203, baseType: !959, size: 64, align: 64, offset: 704)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_callback", scope: !2388, file: !939, line: 204, baseType: !2416, size: 64, align: 64, offset: 768)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64, align: 64)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "avio_opts", scope: !2388, file: !939, line: 205, baseType: !1246, size: 64, align: 64, offset: 832)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !2388, file: !939, line: 206, baseType: !963, size: 32, align: 32, offset: 896)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "allowed_extensions", scope: !2388, file: !939, line: 207, baseType: !974, size: 64, align: 64, offset: 960)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "max_reload", scope: !2388, file: !939, line: 208, baseType: !963, size: 32, align: 32, offset: 1024)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "http_persistent", scope: !2388, file: !939, line: 209, baseType: !963, size: 32, align: 32, offset: 1056)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "http_multiple", scope: !2388, file: !939, line: 210, baseType: !963, size: 32, align: 32, offset: 1088)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "playlist_pb", scope: !2388, file: !939, line: 211, baseType: !1306, size: 64, align: 64, offset: 1152)
!2424 = !DILocation(line: 1783, column: 17, scope: !2382)
!2425 = !DILocation(line: 1783, column: 21, scope: !2382)
!2426 = !DILocation(line: 1783, column: 24, scope: !2382)
!2427 = !DILocalVariable(name: "ret", scope: !2382, file: !939, line: 1784, type: !963)
!2428 = !DILocation(line: 1784, column: 9, scope: !2382)
!2429 = !DILocalVariable(name: "i", scope: !2382, file: !939, line: 1784, type: !963)
!2430 = !DILocation(line: 1784, column: 18, scope: !2382)
!2431 = !DILocalVariable(name: "highest_cur_seq_no", scope: !2382, file: !939, line: 1785, type: !963)
!2432 = !DILocation(line: 1785, column: 9, scope: !2382)
!2433 = !DILocation(line: 1787, column: 14, scope: !2382)
!2434 = !DILocation(line: 1787, column: 5, scope: !2382)
!2435 = !DILocation(line: 1787, column: 8, scope: !2382)
!2436 = !DILocation(line: 1787, column: 12, scope: !2382)
!2437 = !DILocation(line: 1788, column: 30, scope: !2382)
!2438 = !DILocation(line: 1788, column: 33, scope: !2382)
!2439 = !DILocation(line: 1788, column: 5, scope: !2382)
!2440 = !DILocation(line: 1788, column: 8, scope: !2382)
!2441 = !DILocation(line: 1788, column: 27, scope: !2382)
!2442 = !DILocation(line: 1789, column: 32, scope: !2382)
!2443 = !DILocation(line: 1789, column: 35, scope: !2382)
!2444 = !DILocation(line: 1789, column: 5, scope: !2382)
!2445 = !DILocation(line: 1789, column: 8, scope: !2382)
!2446 = !DILocation(line: 1789, column: 30, scope: !2382)
!2447 = !DILocation(line: 1791, column: 5, scope: !2382)
!2448 = !DILocation(line: 1791, column: 8, scope: !2382)
!2449 = !DILocation(line: 1791, column: 21, scope: !2382)
!2450 = !DILocation(line: 1792, column: 5, scope: !2382)
!2451 = !DILocation(line: 1792, column: 8, scope: !2382)
!2452 = !DILocation(line: 1792, column: 24, scope: !2382)
!2453 = !DILocation(line: 1793, column: 5, scope: !2382)
!2454 = !DILocation(line: 1793, column: 8, scope: !2382)
!2455 = !DILocation(line: 1793, column: 22, scope: !2382)
!2456 = !DILocation(line: 1795, column: 34, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2382, file: !939, line: 1795, column: 9)
!2458 = !DILocation(line: 1795, column: 16, scope: !2457)
!2459 = !DILocation(line: 1795, column: 14, scope: !2457)
!2460 = !DILocation(line: 1795, column: 38, scope: !2457)
!2461 = !DILocation(line: 1795, column: 9, scope: !2382)
!2462 = !DILocation(line: 1796, column: 9, scope: !2457)
!2463 = !DILocation(line: 1799, column: 18, scope: !2382)
!2464 = !DILocation(line: 1799, column: 21, scope: !2382)
!2465 = !DILocation(line: 1799, column: 5, scope: !2382)
!2466 = !DILocation(line: 1801, column: 31, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2382, file: !939, line: 1801, column: 9)
!2468 = !DILocation(line: 1801, column: 34, scope: !2467)
!2469 = !DILocation(line: 1801, column: 37, scope: !2467)
!2470 = !DILocation(line: 1801, column: 47, scope: !2467)
!2471 = !DILocation(line: 1801, column: 50, scope: !2467)
!2472 = !DILocation(line: 1801, column: 16, scope: !2467)
!2473 = !DILocation(line: 1801, column: 14, scope: !2467)
!2474 = !DILocation(line: 1801, column: 55, scope: !2467)
!2475 = !DILocation(line: 1801, column: 9, scope: !2382)
!2476 = !DILocation(line: 1802, column: 9, scope: !2467)
!2477 = !DILocation(line: 1804, column: 9, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !2382, file: !939, line: 1804, column: 9)
!2479 = !DILocation(line: 1804, column: 12, scope: !2478)
!2480 = !DILocation(line: 1804, column: 23, scope: !2478)
!2481 = !DILocation(line: 1804, column: 9, scope: !2382)
!2482 = !DILocation(line: 1805, column: 9, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !2478, file: !939, line: 1804, column: 29)
!2484 = !DILocation(line: 1806, column: 13, scope: !2483)
!2485 = !DILocation(line: 1807, column: 9, scope: !2483)
!2486 = !DILocation(line: 1811, column: 9, scope: !2487)
!2487 = distinct !DILexicalBlock(scope: !2382, file: !939, line: 1811, column: 9)
!2488 = !DILocation(line: 1811, column: 12, scope: !2487)
!2489 = !DILocation(line: 1811, column: 24, scope: !2487)
!2490 = !DILocation(line: 1811, column: 28, scope: !2487)
!2491 = !DILocation(line: 1811, column: 31, scope: !2492)
!2492 = !DILexicalBlockFile(scope: !2487, file: !939, discriminator: 1)
!2493 = !DILocation(line: 1811, column: 34, scope: !2492)
!2494 = !DILocation(line: 1811, column: 48, scope: !2492)
!2495 = !DILocation(line: 1811, column: 59, scope: !2492)
!2496 = !DILocation(line: 1811, column: 9, scope: !2492)
!2497 = !DILocation(line: 1812, column: 16, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2499, file: !939, line: 1812, column: 9)
!2499 = distinct !DILexicalBlock(scope: !2487, file: !939, line: 1811, column: 65)
!2500 = !DILocation(line: 1812, column: 14, scope: !2498)
!2501 = !DILocation(line: 1812, column: 21, scope: !2502)
!2502 = !DILexicalBlockFile(scope: !2503, file: !939, discriminator: 1)
!2503 = distinct !DILexicalBlock(scope: !2498, file: !939, line: 1812, column: 9)
!2504 = !DILocation(line: 1812, column: 25, scope: !2502)
!2505 = !DILocation(line: 1812, column: 28, scope: !2502)
!2506 = !DILocation(line: 1812, column: 23, scope: !2502)
!2507 = !DILocation(line: 1812, column: 9, scope: !2502)
!2508 = !DILocalVariable(name: "pls", scope: !2509, file: !939, line: 1813, type: !2245)
!2509 = distinct !DILexicalBlock(scope: !2503, file: !939, line: 1812, column: 46)
!2510 = !DILocation(line: 1813, column: 30, scope: !2509)
!2511 = !DILocation(line: 1813, column: 49, scope: !2509)
!2512 = !DILocation(line: 1813, column: 36, scope: !2509)
!2513 = !DILocation(line: 1813, column: 39, scope: !2509)
!2514 = !DILocation(line: 1814, column: 39, scope: !2515)
!2515 = distinct !DILexicalBlock(scope: !2509, file: !939, line: 1814, column: 17)
!2516 = !DILocation(line: 1814, column: 42, scope: !2515)
!2517 = !DILocation(line: 1814, column: 47, scope: !2515)
!2518 = !DILocation(line: 1814, column: 52, scope: !2515)
!2519 = !DILocation(line: 1814, column: 24, scope: !2515)
!2520 = !DILocation(line: 1814, column: 22, scope: !2515)
!2521 = !DILocation(line: 1814, column: 63, scope: !2515)
!2522 = !DILocation(line: 1814, column: 17, scope: !2509)
!2523 = !DILocation(line: 1815, column: 17, scope: !2515)
!2524 = !DILocation(line: 1816, column: 9, scope: !2509)
!2525 = !DILocation(line: 1812, column: 42, scope: !2526)
!2526 = !DILexicalBlockFile(scope: !2503, file: !939, discriminator: 2)
!2527 = !DILocation(line: 1812, column: 9, scope: !2526)
!2528 = distinct !{!2528, !2529}
!2529 = !DILocation(line: 1812, column: 9, scope: !2499)
!2530 = !DILocation(line: 1817, column: 5, scope: !2499)
!2531 = !DILocation(line: 1819, column: 9, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2382, file: !939, line: 1819, column: 9)
!2533 = !DILocation(line: 1819, column: 12, scope: !2532)
!2534 = !DILocation(line: 1819, column: 25, scope: !2532)
!2535 = !DILocation(line: 1819, column: 39, scope: !2532)
!2536 = !DILocation(line: 1819, column: 50, scope: !2532)
!2537 = !DILocation(line: 1819, column: 9, scope: !2382)
!2538 = !DILocation(line: 1820, column: 9, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2532, file: !939, line: 1819, column: 56)
!2540 = !DILocation(line: 1821, column: 13, scope: !2539)
!2541 = !DILocation(line: 1822, column: 9, scope: !2539)
!2542 = !DILocation(line: 1827, column: 9, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2382, file: !939, line: 1827, column: 9)
!2544 = !DILocation(line: 1827, column: 12, scope: !2543)
!2545 = !DILocation(line: 1827, column: 25, scope: !2543)
!2546 = !DILocation(line: 1827, column: 39, scope: !2543)
!2547 = !DILocation(line: 1827, column: 9, scope: !2382)
!2548 = !DILocalVariable(name: "duration", scope: !2549, file: !939, line: 1828, type: !959)
!2549 = distinct !DILexicalBlock(scope: !2543, file: !939, line: 1827, column: 49)
!2550 = !DILocation(line: 1828, column: 17, scope: !2549)
!2551 = !DILocation(line: 1829, column: 16, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2549, file: !939, line: 1829, column: 9)
!2553 = !DILocation(line: 1829, column: 14, scope: !2552)
!2554 = !DILocation(line: 1829, column: 21, scope: !2555)
!2555 = !DILexicalBlockFile(scope: !2556, file: !939, discriminator: 1)
!2556 = distinct !DILexicalBlock(scope: !2552, file: !939, line: 1829, column: 9)
!2557 = !DILocation(line: 1829, column: 25, scope: !2555)
!2558 = !DILocation(line: 1829, column: 28, scope: !2555)
!2559 = !DILocation(line: 1829, column: 41, scope: !2555)
!2560 = !DILocation(line: 1829, column: 55, scope: !2555)
!2561 = !DILocation(line: 1829, column: 23, scope: !2555)
!2562 = !DILocation(line: 1829, column: 9, scope: !2555)
!2563 = !DILocation(line: 1830, column: 64, scope: !2556)
!2564 = !DILocation(line: 1830, column: 25, scope: !2556)
!2565 = !DILocation(line: 1830, column: 28, scope: !2556)
!2566 = !DILocation(line: 1830, column: 41, scope: !2556)
!2567 = !DILocation(line: 1830, column: 55, scope: !2556)
!2568 = !DILocation(line: 1830, column: 68, scope: !2556)
!2569 = !DILocation(line: 1830, column: 22, scope: !2556)
!2570 = !DILocation(line: 1830, column: 13, scope: !2556)
!2571 = !DILocation(line: 1829, column: 68, scope: !2572)
!2572 = !DILexicalBlockFile(scope: !2556, file: !939, discriminator: 2)
!2573 = !DILocation(line: 1829, column: 9, scope: !2572)
!2574 = distinct !{!2574, !2575}
!2575 = !DILocation(line: 1829, column: 9, scope: !2549)
!2576 = !DILocation(line: 1831, column: 23, scope: !2549)
!2577 = !DILocation(line: 1831, column: 9, scope: !2549)
!2578 = !DILocation(line: 1831, column: 12, scope: !2549)
!2579 = !DILocation(line: 1831, column: 21, scope: !2549)
!2580 = !DILocation(line: 1832, column: 5, scope: !2549)
!2581 = !DILocation(line: 1835, column: 12, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2382, file: !939, line: 1835, column: 5)
!2583 = !DILocation(line: 1835, column: 10, scope: !2582)
!2584 = !DILocation(line: 1835, column: 17, scope: !2585)
!2585 = !DILexicalBlockFile(scope: !2586, file: !939, discriminator: 1)
!2586 = distinct !DILexicalBlock(scope: !2582, file: !939, line: 1835, column: 5)
!2587 = !DILocation(line: 1835, column: 21, scope: !2585)
!2588 = !DILocation(line: 1835, column: 24, scope: !2585)
!2589 = !DILocation(line: 1835, column: 19, scope: !2585)
!2590 = !DILocation(line: 1835, column: 5, scope: !2585)
!2591 = !DILocalVariable(name: "var", scope: !2592, file: !939, line: 1836, type: !2396)
!2592 = distinct !DILexicalBlock(scope: !2586, file: !939, line: 1835, column: 41)
!2593 = !DILocation(line: 1836, column: 25, scope: !2592)
!2594 = !DILocation(line: 1836, column: 43, scope: !2592)
!2595 = !DILocation(line: 1836, column: 31, scope: !2592)
!2596 = !DILocation(line: 1836, column: 34, scope: !2592)
!2597 = !DILocation(line: 1838, column: 13, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !2592, file: !939, line: 1838, column: 13)
!2599 = !DILocation(line: 1838, column: 18, scope: !2598)
!2600 = !DILocation(line: 1838, column: 13, scope: !2592)
!2601 = !DILocation(line: 1839, column: 39, scope: !2598)
!2602 = !DILocation(line: 1839, column: 42, scope: !2598)
!2603 = !DILocation(line: 1839, column: 67, scope: !2598)
!2604 = !DILocation(line: 1839, column: 72, scope: !2598)
!2605 = !DILocation(line: 1839, column: 13, scope: !2598)
!2606 = !DILocation(line: 1840, column: 13, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2592, file: !939, line: 1840, column: 13)
!2608 = !DILocation(line: 1840, column: 18, scope: !2607)
!2609 = !DILocation(line: 1840, column: 13, scope: !2592)
!2610 = !DILocation(line: 1841, column: 39, scope: !2607)
!2611 = !DILocation(line: 1841, column: 42, scope: !2607)
!2612 = !DILocation(line: 1841, column: 67, scope: !2607)
!2613 = !DILocation(line: 1841, column: 72, scope: !2607)
!2614 = !DILocation(line: 1841, column: 13, scope: !2607)
!2615 = !DILocation(line: 1842, column: 13, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2592, file: !939, line: 1842, column: 13)
!2617 = !DILocation(line: 1842, column: 18, scope: !2616)
!2618 = !DILocation(line: 1842, column: 13, scope: !2592)
!2619 = !DILocation(line: 1843, column: 39, scope: !2616)
!2620 = !DILocation(line: 1843, column: 42, scope: !2616)
!2621 = !DILocation(line: 1843, column: 70, scope: !2616)
!2622 = !DILocation(line: 1843, column: 75, scope: !2616)
!2623 = !DILocation(line: 1843, column: 13, scope: !2616)
!2624 = !DILocation(line: 1844, column: 5, scope: !2592)
!2625 = !DILocation(line: 1835, column: 37, scope: !2626)
!2626 = !DILexicalBlockFile(scope: !2586, file: !939, discriminator: 2)
!2627 = !DILocation(line: 1835, column: 5, scope: !2626)
!2628 = distinct !{!2628, !2629}
!2629 = !DILocation(line: 1835, column: 5, scope: !2382)
!2630 = !DILocation(line: 1847, column: 12, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2382, file: !939, line: 1847, column: 5)
!2632 = !DILocation(line: 1847, column: 10, scope: !2631)
!2633 = !DILocation(line: 1847, column: 17, scope: !2634)
!2634 = !DILexicalBlockFile(scope: !2635, file: !939, discriminator: 1)
!2635 = distinct !DILexicalBlock(scope: !2631, file: !939, line: 1847, column: 5)
!2636 = !DILocation(line: 1847, column: 21, scope: !2634)
!2637 = !DILocation(line: 1847, column: 24, scope: !2634)
!2638 = !DILocation(line: 1847, column: 19, scope: !2634)
!2639 = !DILocation(line: 1847, column: 5, scope: !2634)
!2640 = !DILocalVariable(name: "v", scope: !2641, file: !939, line: 1848, type: !2396)
!2641 = distinct !DILexicalBlock(scope: !2635, file: !939, line: 1847, column: 41)
!2642 = !DILocation(line: 1848, column: 25, scope: !2641)
!2643 = !DILocation(line: 1848, column: 41, scope: !2641)
!2644 = !DILocation(line: 1848, column: 29, scope: !2641)
!2645 = !DILocation(line: 1848, column: 32, scope: !2641)
!2646 = !DILocalVariable(name: "program", scope: !2641, file: !939, line: 1849, type: !2080)
!2647 = !DILocation(line: 1849, column: 20, scope: !2641)
!2648 = !DILocation(line: 1851, column: 34, scope: !2641)
!2649 = !DILocation(line: 1851, column: 37, scope: !2641)
!2650 = !DILocation(line: 1851, column: 19, scope: !2641)
!2651 = !DILocation(line: 1851, column: 17, scope: !2641)
!2652 = !DILocation(line: 1852, column: 14, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2641, file: !939, line: 1852, column: 13)
!2654 = !DILocation(line: 1852, column: 13, scope: !2641)
!2655 = !DILocation(line: 1853, column: 13, scope: !2653)
!2656 = !DILocation(line: 1854, column: 26, scope: !2641)
!2657 = !DILocation(line: 1854, column: 35, scope: !2641)
!2658 = !DILocation(line: 1854, column: 64, scope: !2641)
!2659 = !DILocation(line: 1854, column: 67, scope: !2641)
!2660 = !DILocation(line: 1854, column: 9, scope: !2641)
!2661 = !DILocation(line: 1855, column: 5, scope: !2641)
!2662 = !DILocation(line: 1847, column: 37, scope: !2663)
!2663 = !DILexicalBlockFile(scope: !2635, file: !939, discriminator: 2)
!2664 = !DILocation(line: 1847, column: 5, scope: !2663)
!2665 = distinct !{!2665, !2666}
!2666 = !DILocation(line: 1847, column: 5, scope: !2382)
!2667 = !DILocation(line: 1858, column: 12, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2382, file: !939, line: 1858, column: 5)
!2669 = !DILocation(line: 1858, column: 10, scope: !2668)
!2670 = !DILocation(line: 1858, column: 17, scope: !2671)
!2671 = !DILexicalBlockFile(scope: !2672, file: !939, discriminator: 1)
!2672 = distinct !DILexicalBlock(scope: !2668, file: !939, line: 1858, column: 5)
!2673 = !DILocation(line: 1858, column: 21, scope: !2671)
!2674 = !DILocation(line: 1858, column: 24, scope: !2671)
!2675 = !DILocation(line: 1858, column: 19, scope: !2671)
!2676 = !DILocation(line: 1858, column: 5, scope: !2671)
!2677 = !DILocalVariable(name: "pls", scope: !2678, file: !939, line: 1859, type: !2245)
!2678 = distinct !DILexicalBlock(scope: !2672, file: !939, line: 1858, column: 42)
!2679 = !DILocation(line: 1859, column: 26, scope: !2678)
!2680 = !DILocation(line: 1859, column: 45, scope: !2678)
!2681 = !DILocation(line: 1859, column: 32, scope: !2678)
!2682 = !DILocation(line: 1859, column: 35, scope: !2678)
!2683 = !DILocation(line: 1861, column: 13, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2678, file: !939, line: 1861, column: 13)
!2685 = !DILocation(line: 1861, column: 18, scope: !2684)
!2686 = !DILocation(line: 1861, column: 29, scope: !2684)
!2687 = !DILocation(line: 1861, column: 13, scope: !2678)
!2688 = !DILocation(line: 1862, column: 13, scope: !2684)
!2689 = !DILocation(line: 1864, column: 45, scope: !2678)
!2690 = !DILocation(line: 1864, column: 48, scope: !2678)
!2691 = !DILocation(line: 1864, column: 27, scope: !2678)
!2692 = !DILocation(line: 1864, column: 9, scope: !2678)
!2693 = !DILocation(line: 1864, column: 14, scope: !2678)
!2694 = !DILocation(line: 1864, column: 25, scope: !2678)
!2695 = !DILocation(line: 1865, column: 32, scope: !2678)
!2696 = !DILocation(line: 1865, column: 55, scope: !2678)
!2697 = !DILocation(line: 1865, column: 60, scope: !2678)
!2698 = !DILocation(line: 1865, column: 52, scope: !2678)
!2699 = !DILocation(line: 1865, column: 31, scope: !2678)
!2700 = !DILocation(line: 1865, column: 75, scope: !2701)
!2701 = !DILexicalBlockFile(scope: !2678, file: !939, discriminator: 1)
!2702 = !DILocation(line: 1865, column: 31, scope: !2701)
!2703 = !DILocation(line: 1865, column: 98, scope: !2704)
!2704 = !DILexicalBlockFile(scope: !2678, file: !939, discriminator: 2)
!2705 = !DILocation(line: 1865, column: 103, scope: !2704)
!2706 = !DILocation(line: 1865, column: 31, scope: !2704)
!2707 = !DILocation(line: 1865, column: 31, scope: !2708)
!2708 = !DILexicalBlockFile(scope: !2678, file: !939, discriminator: 3)
!2709 = !DILocation(line: 1865, column: 28, scope: !2708)
!2710 = !DILocation(line: 1866, column: 5, scope: !2678)
!2711 = !DILocation(line: 1858, column: 38, scope: !2712)
!2712 = !DILexicalBlockFile(scope: !2672, file: !939, discriminator: 2)
!2713 = !DILocation(line: 1858, column: 5, scope: !2712)
!2714 = distinct !{!2714, !2715}
!2715 = !DILocation(line: 1858, column: 5, scope: !2382)
!2716 = !DILocation(line: 1869, column: 12, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2382, file: !939, line: 1869, column: 5)
!2718 = !DILocation(line: 1869, column: 10, scope: !2717)
!2719 = !DILocation(line: 1869, column: 17, scope: !2720)
!2720 = !DILexicalBlockFile(scope: !2721, file: !939, discriminator: 1)
!2721 = distinct !DILexicalBlock(scope: !2717, file: !939, line: 1869, column: 5)
!2722 = !DILocation(line: 1869, column: 21, scope: !2720)
!2723 = !DILocation(line: 1869, column: 24, scope: !2720)
!2724 = !DILocation(line: 1869, column: 19, scope: !2720)
!2725 = !DILocation(line: 1869, column: 5, scope: !2720)
!2726 = !DILocalVariable(name: "pls", scope: !2727, file: !939, line: 1870, type: !2245)
!2727 = distinct !DILexicalBlock(scope: !2721, file: !939, line: 1869, column: 42)
!2728 = !DILocation(line: 1870, column: 26, scope: !2727)
!2729 = !DILocation(line: 1870, column: 45, scope: !2727)
!2730 = !DILocation(line: 1870, column: 32, scope: !2727)
!2731 = !DILocation(line: 1870, column: 35, scope: !2727)
!2732 = !DILocalVariable(name: "in_fmt", scope: !2727, file: !939, line: 1871, type: !2733)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64, align: 64)
!2734 = !DILocation(line: 1871, column: 24, scope: !2727)
!2735 = !DILocation(line: 1873, column: 26, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2727, file: !939, line: 1873, column: 13)
!2737 = !DILocation(line: 1873, column: 15, scope: !2736)
!2738 = !DILocation(line: 1873, column: 20, scope: !2736)
!2739 = !DILocation(line: 1873, column: 24, scope: !2736)
!2740 = !DILocation(line: 1873, column: 13, scope: !2727)
!2741 = !DILocation(line: 1874, column: 17, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2736, file: !939, line: 1873, column: 53)
!2743 = !DILocation(line: 1875, column: 13, scope: !2742)
!2744 = !DILocation(line: 1878, column: 13, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2727, file: !939, line: 1878, column: 13)
!2746 = !DILocation(line: 1878, column: 18, scope: !2745)
!2747 = !DILocation(line: 1878, column: 29, scope: !2745)
!2748 = !DILocation(line: 1878, column: 13, scope: !2727)
!2749 = !DILocation(line: 1879, column: 13, scope: !2745)
!2750 = !DILocation(line: 1881, column: 22, scope: !2727)
!2751 = !DILocation(line: 1881, column: 9, scope: !2727)
!2752 = !DILocation(line: 1881, column: 14, scope: !2727)
!2753 = !DILocation(line: 1881, column: 20, scope: !2727)
!2754 = !DILocation(line: 1882, column: 9, scope: !2727)
!2755 = !DILocation(line: 1882, column: 14, scope: !2727)
!2756 = !DILocation(line: 1882, column: 21, scope: !2727)
!2757 = !DILocation(line: 1883, column: 23, scope: !2727)
!2758 = !DILocation(line: 1883, column: 9, scope: !2727)
!2759 = !DILocation(line: 1883, column: 14, scope: !2727)
!2760 = !DILocation(line: 1883, column: 21, scope: !2727)
!2761 = !DILocation(line: 1892, column: 14, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2727, file: !939, line: 1892, column: 13)
!2763 = !DILocation(line: 1892, column: 19, scope: !2762)
!2764 = !DILocation(line: 1892, column: 28, scope: !2762)
!2765 = !DILocation(line: 1892, column: 31, scope: !2766)
!2766 = !DILexicalBlockFile(scope: !2762, file: !939, discriminator: 1)
!2767 = !DILocation(line: 1892, column: 36, scope: !2766)
!2768 = !DILocation(line: 1892, column: 50, scope: !2766)
!2769 = !DILocation(line: 1892, column: 69, scope: !2766)
!2770 = !DILocation(line: 1892, column: 47, scope: !2766)
!2771 = !DILocation(line: 1892, column: 73, scope: !2766)
!2772 = !DILocation(line: 1893, column: 13, scope: !2762)
!2773 = !DILocation(line: 1893, column: 34, scope: !2762)
!2774 = !DILocation(line: 1893, column: 39, scope: !2762)
!2775 = !DILocation(line: 1893, column: 54, scope: !2762)
!2776 = !DILocation(line: 1893, column: 59, scope: !2762)
!2777 = !DILocation(line: 1893, column: 52, scope: !2762)
!2778 = !DILocation(line: 1893, column: 32, scope: !2762)
!2779 = !DILocation(line: 1892, column: 13, scope: !2780)
!2780 = !DILexicalBlockFile(scope: !2727, file: !939, discriminator: 2)
!2781 = !DILocation(line: 1894, column: 31, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2762, file: !939, line: 1893, column: 71)
!2783 = !DILocation(line: 1894, column: 13, scope: !2782)
!2784 = !DILocation(line: 1894, column: 18, scope: !2782)
!2785 = !DILocation(line: 1894, column: 29, scope: !2782)
!2786 = !DILocation(line: 1895, column: 9, scope: !2782)
!2787 = !DILocation(line: 1897, column: 28, scope: !2727)
!2788 = !DILocation(line: 1897, column: 9, scope: !2727)
!2789 = !DILocation(line: 1897, column: 14, scope: !2727)
!2790 = !DILocation(line: 1897, column: 26, scope: !2727)
!2791 = !DILocation(line: 1898, column: 14, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2727, file: !939, line: 1898, column: 13)
!2793 = !DILocation(line: 1898, column: 19, scope: !2792)
!2794 = !DILocation(line: 1898, column: 13, scope: !2727)
!2795 = !DILocation(line: 1899, column: 17, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !2792, file: !939, line: 1898, column: 31)
!2797 = !DILocation(line: 1900, column: 35, scope: !2796)
!2798 = !DILocation(line: 1900, column: 40, scope: !2796)
!2799 = !DILocation(line: 1900, column: 13, scope: !2796)
!2800 = !DILocation(line: 1901, column: 13, scope: !2796)
!2801 = !DILocation(line: 1901, column: 18, scope: !2796)
!2802 = !DILocation(line: 1901, column: 22, scope: !2796)
!2803 = !DILocation(line: 1902, column: 13, scope: !2796)
!2804 = !DILocation(line: 1904, column: 28, scope: !2727)
!2805 = !DILocation(line: 1904, column: 33, scope: !2727)
!2806 = !DILocation(line: 1904, column: 37, scope: !2727)
!2807 = !DILocation(line: 1904, column: 42, scope: !2727)
!2808 = !DILocation(line: 1904, column: 65, scope: !2727)
!2809 = !DILocation(line: 1904, column: 9, scope: !2727)
!2810 = !DILocation(line: 1906, column: 9, scope: !2727)
!2811 = !DILocation(line: 1906, column: 14, scope: !2727)
!2812 = !DILocation(line: 1906, column: 17, scope: !2727)
!2813 = !DILocation(line: 1906, column: 26, scope: !2727)
!2814 = !DILocation(line: 1907, column: 38, scope: !2727)
!2815 = !DILocation(line: 1907, column: 43, scope: !2727)
!2816 = !DILocation(line: 1907, column: 56, scope: !2727)
!2817 = !DILocation(line: 1907, column: 61, scope: !2727)
!2818 = !DILocation(line: 1907, column: 74, scope: !2727)
!2819 = !DILocation(line: 1907, column: 15, scope: !2727)
!2820 = !DILocation(line: 1907, column: 13, scope: !2727)
!2821 = !DILocation(line: 1909, column: 13, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !2727, file: !939, line: 1909, column: 13)
!2823 = !DILocation(line: 1909, column: 17, scope: !2822)
!2824 = !DILocation(line: 1909, column: 13, scope: !2727)
!2825 = !DILocation(line: 1914, column: 20, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2822, file: !939, line: 1909, column: 22)
!2827 = !DILocation(line: 1914, column: 70, scope: !2826)
!2828 = !DILocation(line: 1914, column: 75, scope: !2826)
!2829 = !DILocation(line: 1914, column: 88, scope: !2826)
!2830 = !DILocation(line: 1914, column: 13, scope: !2826)
!2831 = !DILocation(line: 1915, column: 35, scope: !2826)
!2832 = !DILocation(line: 1915, column: 40, scope: !2826)
!2833 = !DILocation(line: 1915, column: 13, scope: !2826)
!2834 = !DILocation(line: 1916, column: 13, scope: !2826)
!2835 = !DILocation(line: 1916, column: 18, scope: !2826)
!2836 = !DILocation(line: 1916, column: 22, scope: !2826)
!2837 = !DILocation(line: 1917, column: 13, scope: !2826)
!2838 = !DILocation(line: 1919, column: 25, scope: !2727)
!2839 = !DILocation(line: 1919, column: 30, scope: !2727)
!2840 = !DILocation(line: 1919, column: 9, scope: !2727)
!2841 = !DILocation(line: 1919, column: 14, scope: !2727)
!2842 = !DILocation(line: 1919, column: 19, scope: !2727)
!2843 = !DILocation(line: 1919, column: 22, scope: !2727)
!2844 = !DILocation(line: 1920, column: 9, scope: !2727)
!2845 = !DILocation(line: 1920, column: 14, scope: !2727)
!2846 = !DILocation(line: 1920, column: 19, scope: !2727)
!2847 = !DILocation(line: 1920, column: 27, scope: !2727)
!2848 = !DILocation(line: 1921, column: 28, scope: !2727)
!2849 = !DILocation(line: 1921, column: 31, scope: !2727)
!2850 = !DILocation(line: 1921, column: 37, scope: !2727)
!2851 = !DILocation(line: 1921, column: 9, scope: !2727)
!2852 = !DILocation(line: 1921, column: 14, scope: !2727)
!2853 = !DILocation(line: 1921, column: 19, scope: !2727)
!2854 = !DILocation(line: 1921, column: 25, scope: !2727)
!2855 = !DILocation(line: 1923, column: 44, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2727, file: !939, line: 1923, column: 13)
!2857 = !DILocation(line: 1923, column: 49, scope: !2856)
!2858 = !DILocation(line: 1923, column: 54, scope: !2856)
!2859 = !DILocation(line: 1923, column: 20, scope: !2856)
!2860 = !DILocation(line: 1923, column: 18, scope: !2856)
!2861 = !DILocation(line: 1923, column: 58, scope: !2856)
!2862 = !DILocation(line: 1923, column: 13, scope: !2727)
!2863 = !DILocation(line: 1924, column: 13, scope: !2856)
!2864 = !DILocation(line: 1926, column: 36, scope: !2727)
!2865 = !DILocation(line: 1926, column: 41, scope: !2727)
!2866 = !DILocation(line: 1926, column: 46, scope: !2727)
!2867 = !DILocation(line: 1926, column: 51, scope: !2727)
!2868 = !DILocation(line: 1926, column: 64, scope: !2727)
!2869 = !DILocation(line: 1926, column: 69, scope: !2727)
!2870 = !DILocation(line: 1926, column: 15, scope: !2727)
!2871 = !DILocation(line: 1926, column: 13, scope: !2727)
!2872 = !DILocation(line: 1927, column: 13, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2727, file: !939, line: 1927, column: 13)
!2874 = !DILocation(line: 1927, column: 17, scope: !2873)
!2875 = !DILocation(line: 1927, column: 13, scope: !2727)
!2876 = !DILocation(line: 1928, column: 13, scope: !2873)
!2877 = !DILocation(line: 1930, column: 13, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2727, file: !939, line: 1930, column: 13)
!2879 = !DILocation(line: 1930, column: 18, scope: !2878)
!2880 = !DILocation(line: 1930, column: 37, scope: !2878)
!2881 = !DILocation(line: 1930, column: 40, scope: !2882)
!2882 = !DILexicalBlockFile(scope: !2878, file: !939, discriminator: 1)
!2883 = !DILocation(line: 1930, column: 45, scope: !2882)
!2884 = !DILocation(line: 1930, column: 50, scope: !2882)
!2885 = !DILocation(line: 1930, column: 61, scope: !2882)
!2886 = !DILocation(line: 1930, column: 13, scope: !2882)
!2887 = !DILocation(line: 1931, column: 33, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2878, file: !939, line: 1930, column: 67)
!2889 = !DILocation(line: 1931, column: 38, scope: !2888)
!2890 = !DILocation(line: 1931, column: 44, scope: !2888)
!2891 = !DILocation(line: 1931, column: 49, scope: !2888)
!2892 = !DILocation(line: 1931, column: 13, scope: !2888)
!2893 = !DILocation(line: 1932, column: 46, scope: !2888)
!2894 = !DILocation(line: 1932, column: 51, scope: !2888)
!2895 = !DILocation(line: 1932, column: 13, scope: !2888)
!2896 = !DILocation(line: 1933, column: 33, scope: !2888)
!2897 = !DILocation(line: 1933, column: 38, scope: !2888)
!2898 = !DILocation(line: 1933, column: 44, scope: !2888)
!2899 = !DILocation(line: 1933, column: 49, scope: !2888)
!2900 = !DILocation(line: 1933, column: 13, scope: !2888)
!2901 = !DILocation(line: 1934, column: 39, scope: !2888)
!2902 = !DILocation(line: 1934, column: 44, scope: !2888)
!2903 = !DILocation(line: 1934, column: 13, scope: !2888)
!2904 = !DILocation(line: 1935, column: 13, scope: !2888)
!2905 = !DILocation(line: 1935, column: 18, scope: !2888)
!2906 = !DILocation(line: 1935, column: 37, scope: !2888)
!2907 = !DILocation(line: 1936, column: 9, scope: !2888)
!2908 = !DILocation(line: 1938, column: 13, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2727, file: !939, line: 1938, column: 13)
!2910 = !DILocation(line: 1938, column: 18, scope: !2909)
!2911 = !DILocation(line: 1938, column: 37, scope: !2909)
!2912 = !DILocation(line: 1938, column: 13, scope: !2727)
!2913 = !DILocation(line: 1939, column: 20, scope: !2909)
!2914 = !DILocation(line: 1939, column: 13, scope: !2909)
!2915 = !DILocation(line: 1947, column: 13, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2727, file: !939, line: 1947, column: 13)
!2917 = !DILocation(line: 1947, column: 18, scope: !2916)
!2918 = !DILocation(line: 1947, column: 13, scope: !2727)
!2919 = !DILocation(line: 1948, column: 45, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2916, file: !939, line: 1947, column: 38)
!2921 = !DILocation(line: 1948, column: 50, scope: !2920)
!2922 = !DILocation(line: 1948, column: 19, scope: !2920)
!2923 = !DILocation(line: 1948, column: 17, scope: !2920)
!2924 = !DILocation(line: 1949, column: 17, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2920, file: !939, line: 1949, column: 17)
!2926 = !DILocation(line: 1949, column: 21, scope: !2925)
!2927 = !DILocation(line: 1949, column: 17, scope: !2920)
!2928 = !DILocation(line: 1950, column: 17, scope: !2925)
!2929 = !DILocation(line: 1951, column: 9, scope: !2920)
!2930 = !DILocation(line: 1953, column: 37, scope: !2727)
!2931 = !DILocation(line: 1953, column: 42, scope: !2727)
!2932 = !DILocation(line: 1953, column: 47, scope: !2727)
!2933 = !DILocation(line: 1953, column: 57, scope: !2727)
!2934 = !DILocation(line: 1953, column: 35, scope: !2727)
!2935 = !DILocation(line: 1953, column: 34, scope: !2727)
!2936 = !DILocation(line: 1953, column: 9, scope: !2727)
!2937 = !DILocation(line: 1953, column: 14, scope: !2727)
!2938 = !DILocation(line: 1953, column: 32, scope: !2727)
!2939 = !DILocation(line: 1956, column: 46, scope: !2727)
!2940 = !DILocation(line: 1956, column: 49, scope: !2727)
!2941 = !DILocation(line: 1956, column: 15, scope: !2727)
!2942 = !DILocation(line: 1956, column: 13, scope: !2727)
!2943 = !DILocation(line: 1957, column: 13, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2727, file: !939, line: 1957, column: 13)
!2945 = !DILocation(line: 1957, column: 17, scope: !2944)
!2946 = !DILocation(line: 1957, column: 13, scope: !2727)
!2947 = !DILocation(line: 1958, column: 13, scope: !2944)
!2948 = !DILocation(line: 1964, column: 13, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2727, file: !939, line: 1964, column: 13)
!2950 = !DILocation(line: 1964, column: 18, scope: !2949)
!2951 = !DILocation(line: 1964, column: 13, scope: !2727)
!2952 = !DILocation(line: 1965, column: 27, scope: !2949)
!2953 = !DILocation(line: 1965, column: 32, scope: !2949)
!2954 = !DILocation(line: 1965, column: 49, scope: !2949)
!2955 = !DILocation(line: 1965, column: 59, scope: !2949)
!2956 = !DILocation(line: 1965, column: 64, scope: !2949)
!2957 = !DILocation(line: 1965, column: 69, scope: !2949)
!2958 = !DILocation(line: 1965, column: 13, scope: !2949)
!2959 = !DILocation(line: 1967, column: 38, scope: !2727)
!2960 = !DILocation(line: 1967, column: 41, scope: !2727)
!2961 = !DILocation(line: 1967, column: 9, scope: !2727)
!2962 = !DILocation(line: 1968, column: 38, scope: !2727)
!2963 = !DILocation(line: 1968, column: 41, scope: !2727)
!2964 = !DILocation(line: 1968, column: 9, scope: !2727)
!2965 = !DILocation(line: 1969, column: 38, scope: !2727)
!2966 = !DILocation(line: 1969, column: 41, scope: !2727)
!2967 = !DILocation(line: 1969, column: 9, scope: !2727)
!2968 = !DILocation(line: 1970, column: 5, scope: !2727)
!2969 = !DILocation(line: 1869, column: 38, scope: !2970)
!2970 = !DILexicalBlockFile(scope: !2721, file: !939, discriminator: 2)
!2971 = !DILocation(line: 1869, column: 5, scope: !2970)
!2972 = distinct !{!2972, !2973}
!2973 = !DILocation(line: 1869, column: 5, scope: !2382)
!2974 = !DILocation(line: 1972, column: 26, scope: !2382)
!2975 = !DILocation(line: 1972, column: 5, scope: !2382)
!2976 = !DILocation(line: 1974, column: 5, scope: !2382)
!2977 = !DILocation(line: 1976, column: 15, scope: !2382)
!2978 = !DILocation(line: 1976, column: 5, scope: !2382)
!2979 = !DILocation(line: 1977, column: 12, scope: !2382)
!2980 = !DILocation(line: 1977, column: 5, scope: !2382)
!2981 = !DILocation(line: 1978, column: 1, scope: !2382)
!2982 = distinct !DISubprogram(name: "hls_read_packet", scope: !939, file: !939, line: 2061, type: !2983, isLocal: true, isDefinition: true, scopeLine: 2062, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!2983 = !DISubroutineType(types: !2984)
!2984 = !{!963, !2235, !1138}
!2985 = !DILocalVariable(name: "s", arg: 1, scope: !2982, file: !939, line: 2061, type: !2235)
!2986 = !DILocation(line: 2061, column: 45, scope: !2982)
!2987 = !DILocalVariable(name: "pkt", arg: 2, scope: !2982, file: !939, line: 2061, type: !1138)
!2988 = !DILocation(line: 2061, column: 58, scope: !2982)
!2989 = !DILocalVariable(name: "c", scope: !2982, file: !939, line: 2063, type: !2386)
!2990 = !DILocation(line: 2063, column: 17, scope: !2982)
!2991 = !DILocation(line: 2063, column: 21, scope: !2982)
!2992 = !DILocation(line: 2063, column: 24, scope: !2982)
!2993 = !DILocalVariable(name: "ret", scope: !2982, file: !939, line: 2064, type: !963)
!2994 = !DILocation(line: 2064, column: 9, scope: !2982)
!2995 = !DILocalVariable(name: "i", scope: !2982, file: !939, line: 2064, type: !963)
!2996 = !DILocation(line: 2064, column: 14, scope: !2982)
!2997 = !DILocalVariable(name: "minplaylist", scope: !2982, file: !939, line: 2064, type: !963)
!2998 = !DILocation(line: 2064, column: 17, scope: !2982)
!2999 = !DILocation(line: 2066, column: 27, scope: !2982)
!3000 = !DILocation(line: 2066, column: 30, scope: !2982)
!3001 = !DILocation(line: 2066, column: 33, scope: !2982)
!3002 = !DILocation(line: 2066, column: 5, scope: !2982)
!3003 = !DILocation(line: 2067, column: 5, scope: !2982)
!3004 = !DILocation(line: 2067, column: 8, scope: !2982)
!3005 = !DILocation(line: 2067, column: 21, scope: !2982)
!3006 = !DILocation(line: 2069, column: 12, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2982, file: !939, line: 2069, column: 5)
!3008 = !DILocation(line: 2069, column: 10, scope: !3007)
!3009 = !DILocation(line: 2069, column: 17, scope: !3010)
!3010 = !DILexicalBlockFile(scope: !3011, file: !939, discriminator: 1)
!3011 = distinct !DILexicalBlock(scope: !3007, file: !939, line: 2069, column: 5)
!3012 = !DILocation(line: 2069, column: 21, scope: !3010)
!3013 = !DILocation(line: 2069, column: 24, scope: !3010)
!3014 = !DILocation(line: 2069, column: 19, scope: !3010)
!3015 = !DILocation(line: 2069, column: 5, scope: !3010)
!3016 = !DILocalVariable(name: "pls", scope: !3017, file: !939, line: 2070, type: !2245)
!3017 = distinct !DILexicalBlock(scope: !3011, file: !939, line: 2069, column: 42)
!3018 = !DILocation(line: 2070, column: 26, scope: !3017)
!3019 = !DILocation(line: 2070, column: 45, scope: !3017)
!3020 = !DILocation(line: 2070, column: 32, scope: !3017)
!3021 = !DILocation(line: 2070, column: 35, scope: !3017)
!3022 = !DILocation(line: 2073, column: 13, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3017, file: !939, line: 2073, column: 13)
!3024 = !DILocation(line: 2073, column: 18, scope: !3023)
!3025 = !DILocation(line: 2073, column: 25, scope: !3023)
!3026 = !DILocation(line: 2073, column: 29, scope: !3027)
!3027 = !DILexicalBlockFile(scope: !3023, file: !939, discriminator: 1)
!3028 = !DILocation(line: 2073, column: 34, scope: !3027)
!3029 = !DILocation(line: 2073, column: 38, scope: !3027)
!3030 = !DILocation(line: 2073, column: 13, scope: !3027)
!3031 = !DILocation(line: 2074, column: 13, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3023, file: !939, line: 2073, column: 44)
!3033 = !DILocalVariable(name: "ts_diff", scope: !3034, file: !939, line: 2075, type: !959)
!3034 = distinct !DILexicalBlock(scope: !3032, file: !939, line: 2074, column: 23)
!3035 = !DILocation(line: 2075, column: 25, scope: !3034)
!3036 = !DILocalVariable(name: "tb", scope: !3034, file: !939, line: 2076, type: !1039)
!3037 = !DILocation(line: 2076, column: 28, scope: !3034)
!3038 = !DILocation(line: 2077, column: 37, scope: !3034)
!3039 = !DILocation(line: 2077, column: 42, scope: !3034)
!3040 = !DILocation(line: 2077, column: 48, scope: !3034)
!3041 = !DILocation(line: 2077, column: 53, scope: !3034)
!3042 = !DILocation(line: 2077, column: 23, scope: !3034)
!3043 = !DILocation(line: 2077, column: 21, scope: !3034)
!3044 = !DILocation(line: 2078, column: 21, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3034, file: !939, line: 2078, column: 21)
!3046 = !DILocation(line: 2078, column: 25, scope: !3045)
!3047 = !DILocation(line: 2078, column: 21, scope: !3034)
!3048 = !DILocation(line: 2079, column: 37, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3050, file: !939, line: 2079, column: 25)
!3050 = distinct !DILexicalBlock(scope: !3045, file: !939, line: 2078, column: 30)
!3051 = !DILocation(line: 2079, column: 42, scope: !3049)
!3052 = !DILocation(line: 2079, column: 26, scope: !3049)
!3053 = !DILocation(line: 2079, column: 46, scope: !3049)
!3054 = !DILocation(line: 2079, column: 49, scope: !3055)
!3055 = !DILexicalBlockFile(scope: !3049, file: !939, discriminator: 1)
!3056 = !DILocation(line: 2079, column: 53, scope: !3055)
!3057 = !DILocation(line: 2079, column: 25, scope: !3055)
!3058 = !DILocation(line: 2080, column: 32, scope: !3049)
!3059 = !DILocation(line: 2080, column: 25, scope: !3049)
!3060 = !DILocation(line: 2081, column: 35, scope: !3050)
!3061 = !DILocation(line: 2081, column: 40, scope: !3050)
!3062 = !DILocation(line: 2081, column: 21, scope: !3050)
!3063 = !DILocation(line: 2082, column: 21, scope: !3050)
!3064 = !DILocation(line: 2085, column: 25, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3066, file: !939, line: 2085, column: 25)
!3066 = distinct !DILexicalBlock(scope: !3045, file: !939, line: 2083, column: 24)
!3067 = !DILocation(line: 2085, column: 30, scope: !3065)
!3068 = !DILocation(line: 2085, column: 49, scope: !3065)
!3069 = !DILocation(line: 2085, column: 52, scope: !3070)
!3070 = !DILexicalBlockFile(scope: !3065, file: !939, discriminator: 1)
!3071 = !DILocation(line: 2085, column: 57, scope: !3070)
!3072 = !DILocation(line: 2085, column: 61, scope: !3070)
!3073 = !DILocation(line: 2085, column: 74, scope: !3070)
!3074 = !DILocation(line: 2085, column: 25, scope: !3070)
!3075 = !DILocation(line: 2087, column: 64, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3065, file: !939, line: 2085, column: 80)
!3077 = !DILocation(line: 2087, column: 25, scope: !3076)
!3078 = !DILocation(line: 2088, column: 21, scope: !3076)
!3079 = !DILocation(line: 2090, column: 25, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3066, file: !939, line: 2090, column: 25)
!3081 = !DILocation(line: 2090, column: 28, scope: !3080)
!3082 = !DILocation(line: 2090, column: 44, scope: !3080)
!3083 = !DILocation(line: 2090, column: 79, scope: !3080)
!3084 = !DILocation(line: 2091, column: 25, scope: !3080)
!3085 = !DILocation(line: 2091, column: 30, scope: !3080)
!3086 = !DILocation(line: 2091, column: 34, scope: !3080)
!3087 = !DILocation(line: 2091, column: 38, scope: !3080)
!3088 = !DILocation(line: 2090, column: 25, scope: !3089)
!3089 = !DILexicalBlockFile(scope: !3066, file: !939, discriminator: 1)
!3090 = !DILocation(line: 2092, column: 59, scope: !3080)
!3091 = !DILocation(line: 2092, column: 64, scope: !3080)
!3092 = !DILocation(line: 2092, column: 68, scope: !3080)
!3093 = !DILocation(line: 2093, column: 42, scope: !3080)
!3094 = !DILocation(line: 2093, column: 29, scope: !3080)
!3095 = !DILocation(line: 2093, column: 60, scope: !3080)
!3096 = !DILocation(line: 2092, column: 46, scope: !3080)
!3097 = !DILocation(line: 2092, column: 25, scope: !3080)
!3098 = !DILocation(line: 2092, column: 28, scope: !3080)
!3099 = !DILocation(line: 2092, column: 44, scope: !3080)
!3100 = !DILocation(line: 2096, column: 21, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3034, file: !939, line: 2096, column: 21)
!3102 = !DILocation(line: 2096, column: 26, scope: !3101)
!3103 = !DILocation(line: 2096, column: 41, scope: !3101)
!3104 = !DILocation(line: 2096, column: 21, scope: !3034)
!3105 = !DILocation(line: 2097, column: 21, scope: !3101)
!3106 = !DILocation(line: 2099, column: 21, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3034, file: !939, line: 2099, column: 21)
!3108 = !DILocation(line: 2099, column: 26, scope: !3107)
!3109 = !DILocation(line: 2099, column: 44, scope: !3107)
!3110 = !DILocation(line: 2099, column: 48, scope: !3107)
!3111 = !DILocation(line: 2100, column: 21, scope: !3107)
!3112 = !DILocation(line: 2100, column: 26, scope: !3107)
!3113 = !DILocation(line: 2100, column: 47, scope: !3107)
!3114 = !DILocation(line: 2100, column: 52, scope: !3107)
!3115 = !DILocation(line: 2100, column: 56, scope: !3107)
!3116 = !DILocation(line: 2100, column: 44, scope: !3107)
!3117 = !DILocation(line: 2099, column: 21, scope: !3118)
!3118 = !DILexicalBlockFile(scope: !3034, file: !939, discriminator: 1)
!3119 = !DILocation(line: 2102, column: 25, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3121, file: !939, line: 2102, column: 25)
!3121 = distinct !DILexicalBlock(scope: !3107, file: !939, line: 2100, column: 70)
!3122 = !DILocation(line: 2102, column: 30, scope: !3120)
!3123 = !DILocation(line: 2102, column: 34, scope: !3120)
!3124 = !DILocation(line: 2102, column: 38, scope: !3120)
!3125 = !DILocation(line: 2102, column: 25, scope: !3121)
!3126 = !DILocation(line: 2103, column: 25, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3120, file: !939, line: 2102, column: 74)
!3128 = !DILocation(line: 2103, column: 30, scope: !3127)
!3129 = !DILocation(line: 2103, column: 45, scope: !3127)
!3130 = !DILocation(line: 2104, column: 25, scope: !3127)
!3131 = !DILocation(line: 2107, column: 39, scope: !3121)
!3132 = !DILocation(line: 2107, column: 26, scope: !3121)
!3133 = !DILocation(line: 2107, column: 26, scope: !3134)
!3134 = !DILexicalBlockFile(scope: !3121, file: !939, discriminator: 1)
!3135 = !DILocation(line: 2108, column: 46, scope: !3121)
!3136 = !DILocation(line: 2108, column: 51, scope: !3121)
!3137 = !DILocation(line: 2108, column: 55, scope: !3121)
!3138 = !DILocation(line: 2109, column: 48, scope: !3121)
!3139 = !DILocation(line: 2109, column: 45, scope: !3121)
!3140 = !DILocation(line: 2108, column: 31, scope: !3121)
!3141 = !DILocation(line: 2110, column: 29, scope: !3121)
!3142 = !DILocation(line: 2110, column: 34, scope: !3121)
!3143 = !DILocation(line: 2109, column: 68, scope: !3121)
!3144 = !DILocation(line: 2108, column: 29, scope: !3121)
!3145 = !DILocation(line: 2111, column: 25, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3121, file: !939, line: 2111, column: 25)
!3147 = !DILocation(line: 2111, column: 33, scope: !3146)
!3148 = !DILocation(line: 2111, column: 38, scope: !3146)
!3149 = !DILocation(line: 2111, column: 42, scope: !3150)
!3150 = !DILexicalBlockFile(scope: !3146, file: !939, discriminator: 1)
!3151 = !DILocation(line: 2111, column: 47, scope: !3150)
!3152 = !DILocation(line: 2111, column: 58, scope: !3150)
!3153 = !DILocation(line: 2111, column: 62, scope: !3150)
!3154 = !DILocation(line: 2112, column: 41, scope: !3146)
!3155 = !DILocation(line: 2112, column: 46, scope: !3146)
!3156 = !DILocation(line: 2112, column: 50, scope: !3146)
!3157 = !DILocation(line: 2112, column: 56, scope: !3146)
!3158 = !DILocation(line: 2111, column: 25, scope: !3159)
!3159 = !DILexicalBlockFile(scope: !3121, file: !939, discriminator: 2)
!3160 = !DILocation(line: 2113, column: 25, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3146, file: !939, line: 2112, column: 67)
!3162 = !DILocation(line: 2113, column: 30, scope: !3161)
!3163 = !DILocation(line: 2113, column: 45, scope: !3161)
!3164 = !DILocation(line: 2114, column: 25, scope: !3161)
!3165 = !DILocation(line: 2116, column: 17, scope: !3121)
!3166 = !DILocation(line: 2117, column: 34, scope: !3034)
!3167 = !DILocation(line: 2117, column: 39, scope: !3034)
!3168 = !DILocation(line: 2117, column: 17, scope: !3034)
!3169 = !DILocation(line: 2118, column: 31, scope: !3034)
!3170 = !DILocation(line: 2118, column: 36, scope: !3034)
!3171 = !DILocation(line: 2118, column: 17, scope: !3034)
!3172 = !DILocation(line: 2074, column: 13, scope: !3173)
!3173 = !DILexicalBlockFile(scope: !3032, file: !939, discriminator: 1)
!3174 = distinct !{!3174, !3031}
!3175 = !DILocation(line: 2120, column: 9, scope: !3032)
!3176 = !DILocation(line: 2122, column: 13, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3017, file: !939, line: 2122, column: 13)
!3178 = !DILocation(line: 2122, column: 18, scope: !3177)
!3179 = !DILocation(line: 2122, column: 22, scope: !3177)
!3180 = !DILocation(line: 2122, column: 13, scope: !3017)
!3181 = !DILocalVariable(name: "minpls", scope: !3182, file: !939, line: 2123, type: !2245)
!3182 = distinct !DILexicalBlock(scope: !3177, file: !939, line: 2122, column: 28)
!3183 = !DILocation(line: 2123, column: 30, scope: !3182)
!3184 = !DILocation(line: 2123, column: 39, scope: !3182)
!3185 = !DILocation(line: 2123, column: 51, scope: !3182)
!3186 = !DILocation(line: 2123, column: 39, scope: !3187)
!3187 = !DILexicalBlockFile(scope: !3182, file: !939, discriminator: 1)
!3188 = !DILocation(line: 2124, column: 57, scope: !3182)
!3189 = !DILocation(line: 2124, column: 44, scope: !3182)
!3190 = !DILocation(line: 2124, column: 47, scope: !3182)
!3191 = !DILocation(line: 2123, column: 39, scope: !3192)
!3192 = !DILexicalBlockFile(scope: !3182, file: !939, discriminator: 2)
!3193 = !DILocation(line: 2123, column: 39, scope: !3194)
!3194 = !DILexicalBlockFile(scope: !3182, file: !939, discriminator: 3)
!3195 = !DILocation(line: 2123, column: 30, scope: !3194)
!3196 = !DILocation(line: 2125, column: 17, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3182, file: !939, line: 2125, column: 17)
!3198 = !DILocation(line: 2125, column: 29, scope: !3197)
!3199 = !DILocation(line: 2125, column: 17, scope: !3182)
!3200 = !DILocation(line: 2126, column: 31, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3197, file: !939, line: 2125, column: 34)
!3202 = !DILocation(line: 2126, column: 29, scope: !3201)
!3203 = !DILocation(line: 2127, column: 13, scope: !3201)
!3204 = !DILocalVariable(name: "dts", scope: !3205, file: !939, line: 2128, type: !959)
!3205 = distinct !DILexicalBlock(scope: !3197, file: !939, line: 2127, column: 20)
!3206 = !DILocation(line: 2128, column: 25, scope: !3205)
!3207 = !DILocation(line: 2128, column: 31, scope: !3205)
!3208 = !DILocation(line: 2128, column: 36, scope: !3205)
!3209 = !DILocation(line: 2128, column: 40, scope: !3205)
!3210 = !DILocalVariable(name: "mindts", scope: !3205, file: !939, line: 2129, type: !959)
!3211 = !DILocation(line: 2129, column: 25, scope: !3205)
!3212 = !DILocation(line: 2129, column: 34, scope: !3205)
!3213 = !DILocation(line: 2129, column: 42, scope: !3205)
!3214 = !DILocation(line: 2129, column: 46, scope: !3205)
!3215 = !DILocation(line: 2131, column: 21, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3205, file: !939, line: 2131, column: 21)
!3217 = !DILocation(line: 2131, column: 25, scope: !3216)
!3218 = !DILocation(line: 2131, column: 60, scope: !3216)
!3219 = !DILocation(line: 2132, column: 22, scope: !3216)
!3220 = !DILocation(line: 2132, column: 29, scope: !3216)
!3221 = !DILocation(line: 2132, column: 64, scope: !3216)
!3222 = !DILocation(line: 2132, column: 94, scope: !3223)
!3223 = !DILexicalBlockFile(scope: !3216, file: !939, discriminator: 1)
!3224 = !DILocation(line: 2132, column: 99, scope: !3223)
!3225 = !DILocation(line: 2132, column: 104, scope: !3223)
!3226 = !DILocation(line: 2132, column: 112, scope: !3223)
!3227 = !DILocation(line: 2132, column: 67, scope: !3223)
!3228 = !DILocation(line: 2132, column: 120, scope: !3223)
!3229 = !DILocation(line: 2131, column: 21, scope: !3230)
!3230 = !DILexicalBlockFile(scope: !3205, file: !939, discriminator: 1)
!3231 = !DILocation(line: 2133, column: 35, scope: !3216)
!3232 = !DILocation(line: 2133, column: 33, scope: !3216)
!3233 = !DILocation(line: 2133, column: 21, scope: !3216)
!3234 = !DILocation(line: 2135, column: 9, scope: !3182)
!3235 = !DILocation(line: 2136, column: 5, scope: !3017)
!3236 = !DILocation(line: 2069, column: 38, scope: !3237)
!3237 = !DILexicalBlockFile(scope: !3011, file: !939, discriminator: 2)
!3238 = !DILocation(line: 2069, column: 5, scope: !3237)
!3239 = distinct !{!3239, !3240}
!3240 = !DILocation(line: 2069, column: 5, scope: !2982)
!3241 = !DILocation(line: 2139, column: 9, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !2982, file: !939, line: 2139, column: 9)
!3243 = !DILocation(line: 2139, column: 21, scope: !3242)
!3244 = !DILocation(line: 2139, column: 9, scope: !2982)
!3245 = !DILocalVariable(name: "pls", scope: !3246, file: !939, line: 2140, type: !2245)
!3246 = distinct !DILexicalBlock(scope: !3242, file: !939, line: 2139, column: 27)
!3247 = !DILocation(line: 2140, column: 26, scope: !3246)
!3248 = !DILocation(line: 2140, column: 45, scope: !3246)
!3249 = !DILocation(line: 2140, column: 32, scope: !3246)
!3250 = !DILocation(line: 2140, column: 35, scope: !3246)
!3251 = !DILocalVariable(name: "ist", scope: !3246, file: !939, line: 2141, type: !1374)
!3252 = !DILocation(line: 2141, column: 19, scope: !3246)
!3253 = !DILocalVariable(name: "st", scope: !3246, file: !939, line: 2142, type: !1374)
!3254 = !DILocation(line: 2142, column: 19, scope: !3246)
!3255 = !DILocation(line: 2144, column: 46, scope: !3246)
!3256 = !DILocation(line: 2144, column: 49, scope: !3246)
!3257 = !DILocation(line: 2144, column: 15, scope: !3246)
!3258 = !DILocation(line: 2144, column: 13, scope: !3246)
!3259 = !DILocation(line: 2145, column: 13, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3246, file: !939, line: 2145, column: 13)
!3261 = !DILocation(line: 2145, column: 17, scope: !3260)
!3262 = !DILocation(line: 2145, column: 13, scope: !3246)
!3263 = !DILocation(line: 2146, column: 30, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3260, file: !939, line: 2145, column: 22)
!3265 = !DILocation(line: 2146, column: 35, scope: !3264)
!3266 = !DILocation(line: 2146, column: 13, scope: !3264)
!3267 = !DILocation(line: 2147, column: 27, scope: !3264)
!3268 = !DILocation(line: 2147, column: 32, scope: !3264)
!3269 = !DILocation(line: 2147, column: 13, scope: !3264)
!3270 = !DILocation(line: 2148, column: 20, scope: !3264)
!3271 = !DILocation(line: 2148, column: 13, scope: !3264)
!3272 = !DILocation(line: 2153, column: 13, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3246, file: !939, line: 2153, column: 13)
!3274 = !DILocation(line: 2153, column: 18, scope: !3273)
!3275 = !DILocation(line: 2153, column: 23, scope: !3273)
!3276 = !DILocation(line: 2153, column: 35, scope: !3273)
!3277 = !DILocation(line: 2153, column: 13, scope: !3246)
!3278 = !DILocation(line: 2154, column: 17, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !939, line: 2154, column: 17)
!3280 = distinct !DILexicalBlock(scope: !3273, file: !939, line: 2153, column: 45)
!3281 = !DILocation(line: 2154, column: 22, scope: !3279)
!3282 = !DILocation(line: 2154, column: 17, scope: !3280)
!3283 = !DILocation(line: 2155, column: 22, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3279, file: !939, line: 2154, column: 38)
!3285 = !DILocation(line: 2155, column: 27, scope: !3284)
!3286 = !DILocation(line: 2155, column: 20, scope: !3284)
!3287 = !DILocation(line: 2156, column: 31, scope: !3284)
!3288 = !DILocation(line: 2156, column: 35, scope: !3284)
!3289 = !DILocation(line: 2156, column: 45, scope: !3284)
!3290 = !DILocation(line: 2156, column: 50, scope: !3284)
!3291 = !DILocation(line: 2156, column: 55, scope: !3284)
!3292 = !DILocation(line: 2156, column: 17, scope: !3284)
!3293 = !DILocation(line: 2157, column: 17, scope: !3284)
!3294 = !DILocation(line: 2157, column: 21, scope: !3284)
!3295 = !DILocation(line: 2157, column: 33, scope: !3284)
!3296 = !DILocation(line: 2158, column: 13, scope: !3284)
!3297 = !DILocation(line: 2159, column: 13, scope: !3280)
!3298 = !DILocation(line: 2159, column: 18, scope: !3280)
!3299 = !DILocation(line: 2159, column: 23, scope: !3280)
!3300 = !DILocation(line: 2159, column: 35, scope: !3280)
!3301 = !DILocation(line: 2160, column: 9, scope: !3280)
!3302 = !DILocation(line: 2163, column: 13, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3246, file: !939, line: 2163, column: 13)
!3304 = !DILocation(line: 2163, column: 18, scope: !3303)
!3305 = !DILocation(line: 2163, column: 36, scope: !3303)
!3306 = !DILocation(line: 2163, column: 41, scope: !3307)
!3307 = !DILexicalBlockFile(scope: !3303, file: !939, discriminator: 1)
!3308 = !DILocation(line: 2163, column: 46, scope: !3307)
!3309 = !DILocation(line: 2163, column: 51, scope: !3307)
!3310 = !DILocation(line: 2163, column: 61, scope: !3307)
!3311 = !DILocation(line: 2163, column: 13, scope: !3307)
!3312 = !DILocation(line: 2164, column: 13, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3303, file: !939, line: 2163, column: 72)
!3314 = !DILocation(line: 2164, column: 18, scope: !3313)
!3315 = !DILocation(line: 2164, column: 36, scope: !3313)
!3316 = !DILocation(line: 2165, column: 34, scope: !3313)
!3317 = !DILocation(line: 2165, column: 13, scope: !3313)
!3318 = !DILocation(line: 2166, column: 9, scope: !3313)
!3319 = !DILocation(line: 2168, column: 13, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3246, file: !939, line: 2168, column: 13)
!3321 = !DILocation(line: 2168, column: 18, scope: !3320)
!3322 = !DILocation(line: 2168, column: 22, scope: !3320)
!3323 = !DILocation(line: 2168, column: 38, scope: !3320)
!3324 = !DILocation(line: 2168, column: 43, scope: !3320)
!3325 = !DILocation(line: 2168, column: 35, scope: !3320)
!3326 = !DILocation(line: 2168, column: 13, scope: !3246)
!3327 = !DILocation(line: 2169, column: 20, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3320, file: !939, line: 2168, column: 59)
!3329 = !DILocation(line: 2170, column: 20, scope: !3328)
!3330 = !DILocation(line: 2170, column: 25, scope: !3328)
!3331 = !DILocation(line: 2170, column: 29, scope: !3328)
!3332 = !DILocation(line: 2170, column: 43, scope: !3328)
!3333 = !DILocation(line: 2170, column: 48, scope: !3328)
!3334 = !DILocation(line: 2170, column: 64, scope: !3328)
!3335 = !DILocation(line: 2170, column: 69, scope: !3328)
!3336 = !DILocation(line: 2170, column: 74, scope: !3328)
!3337 = !DILocation(line: 2169, column: 13, scope: !3328)
!3338 = !DILocation(line: 2171, column: 30, scope: !3328)
!3339 = !DILocation(line: 2171, column: 35, scope: !3328)
!3340 = !DILocation(line: 2171, column: 13, scope: !3328)
!3341 = !DILocation(line: 2172, column: 27, scope: !3328)
!3342 = !DILocation(line: 2172, column: 32, scope: !3328)
!3343 = !DILocation(line: 2172, column: 13, scope: !3328)
!3344 = !DILocation(line: 2173, column: 13, scope: !3328)
!3345 = !DILocation(line: 2176, column: 33, scope: !3246)
!3346 = !DILocation(line: 2176, column: 38, scope: !3246)
!3347 = !DILocation(line: 2176, column: 42, scope: !3246)
!3348 = !DILocation(line: 2176, column: 15, scope: !3246)
!3349 = !DILocation(line: 2176, column: 20, scope: !3246)
!3350 = !DILocation(line: 2176, column: 25, scope: !3246)
!3351 = !DILocation(line: 2176, column: 13, scope: !3246)
!3352 = !DILocation(line: 2177, column: 32, scope: !3246)
!3353 = !DILocation(line: 2177, column: 37, scope: !3246)
!3354 = !DILocation(line: 2177, column: 41, scope: !3246)
!3355 = !DILocation(line: 2177, column: 14, scope: !3246)
!3356 = !DILocation(line: 2177, column: 19, scope: !3246)
!3357 = !DILocation(line: 2177, column: 12, scope: !3246)
!3358 = !DILocation(line: 2179, column: 10, scope: !3246)
!3359 = !DILocation(line: 2179, column: 16, scope: !3246)
!3360 = !DILocation(line: 2179, column: 21, scope: !3246)
!3361 = !DILocation(line: 2180, column: 29, scope: !3246)
!3362 = !DILocation(line: 2180, column: 33, scope: !3246)
!3363 = !DILocation(line: 2180, column: 9, scope: !3246)
!3364 = !DILocation(line: 2180, column: 14, scope: !3246)
!3365 = !DILocation(line: 2180, column: 27, scope: !3246)
!3366 = !DILocation(line: 2181, column: 36, scope: !3246)
!3367 = !DILocation(line: 2181, column: 23, scope: !3246)
!3368 = !DILocation(line: 2181, column: 26, scope: !3246)
!3369 = !DILocation(line: 2181, column: 50, scope: !3246)
!3370 = !DILocation(line: 2181, column: 9, scope: !3246)
!3371 = !DILocation(line: 2183, column: 13, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3246, file: !939, line: 2183, column: 13)
!3373 = !DILocation(line: 2183, column: 18, scope: !3372)
!3374 = !DILocation(line: 2183, column: 22, scope: !3372)
!3375 = !DILocation(line: 2183, column: 13, scope: !3246)
!3376 = !DILocation(line: 2184, column: 45, scope: !3372)
!3377 = !DILocation(line: 2184, column: 50, scope: !3372)
!3378 = !DILocation(line: 2185, column: 45, scope: !3372)
!3379 = !DILocation(line: 2185, column: 50, scope: !3372)
!3380 = !DILocation(line: 2186, column: 57, scope: !3372)
!3381 = !DILocation(line: 2184, column: 32, scope: !3372)
!3382 = !DILocation(line: 2184, column: 13, scope: !3372)
!3383 = !DILocation(line: 2184, column: 16, scope: !3372)
!3384 = !DILocation(line: 2184, column: 30, scope: !3372)
!3385 = !DILocation(line: 2190, column: 13, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3246, file: !939, line: 2190, column: 13)
!3387 = !DILocation(line: 2190, column: 18, scope: !3386)
!3388 = !DILocation(line: 2190, column: 28, scope: !3386)
!3389 = !DILocation(line: 2190, column: 40, scope: !3386)
!3390 = !DILocation(line: 2190, column: 44, scope: !3386)
!3391 = !DILocation(line: 2190, column: 54, scope: !3386)
!3392 = !DILocation(line: 2190, column: 37, scope: !3386)
!3393 = !DILocation(line: 2190, column: 13, scope: !3246)
!3394 = !DILocation(line: 2191, column: 53, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3386, file: !939, line: 2190, column: 64)
!3396 = !DILocation(line: 2191, column: 57, scope: !3395)
!3397 = !DILocation(line: 2191, column: 62, scope: !3395)
!3398 = !DILocation(line: 2191, column: 19, scope: !3395)
!3399 = !DILocation(line: 2191, column: 17, scope: !3395)
!3400 = !DILocation(line: 2192, column: 17, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3395, file: !939, line: 2192, column: 17)
!3402 = !DILocation(line: 2192, column: 21, scope: !3401)
!3403 = !DILocation(line: 2192, column: 17, scope: !3395)
!3404 = !DILocation(line: 2193, column: 33, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3401, file: !939, line: 2192, column: 26)
!3406 = !DILocation(line: 2193, column: 17, scope: !3405)
!3407 = !DILocation(line: 2194, column: 24, scope: !3405)
!3408 = !DILocation(line: 2194, column: 17, scope: !3405)
!3409 = !DILocation(line: 2196, column: 9, scope: !3395)
!3410 = !DILocation(line: 2198, column: 9, scope: !3246)
!3411 = !DILocation(line: 2200, column: 5, scope: !2982)
!3412 = !DILocation(line: 2201, column: 1, scope: !2982)
!3413 = distinct !DISubprogram(name: "hls_close", scope: !939, file: !939, line: 1767, type: !2233, isLocal: true, isDefinition: true, scopeLine: 1768, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!3414 = !DILocalVariable(name: "s", arg: 1, scope: !3413, file: !939, line: 1767, type: !2235)
!3415 = !DILocation(line: 1767, column: 39, scope: !3413)
!3416 = !DILocalVariable(name: "c", scope: !3413, file: !939, line: 1769, type: !2386)
!3417 = !DILocation(line: 1769, column: 17, scope: !3413)
!3418 = !DILocation(line: 1769, column: 21, scope: !3413)
!3419 = !DILocation(line: 1769, column: 24, scope: !3413)
!3420 = !DILocation(line: 1771, column: 24, scope: !3413)
!3421 = !DILocation(line: 1771, column: 5, scope: !3413)
!3422 = !DILocation(line: 1772, column: 23, scope: !3413)
!3423 = !DILocation(line: 1772, column: 5, scope: !3413)
!3424 = !DILocation(line: 1773, column: 25, scope: !3413)
!3425 = !DILocation(line: 1773, column: 5, scope: !3413)
!3426 = !DILocation(line: 1775, column: 19, scope: !3413)
!3427 = !DILocation(line: 1775, column: 22, scope: !3413)
!3428 = !DILocation(line: 1775, column: 5, scope: !3413)
!3429 = !DILocation(line: 1776, column: 24, scope: !3413)
!3430 = !DILocation(line: 1776, column: 27, scope: !3413)
!3431 = !DILocation(line: 1776, column: 33, scope: !3413)
!3432 = !DILocation(line: 1776, column: 36, scope: !3413)
!3433 = !DILocation(line: 1776, column: 5, scope: !3413)
!3434 = !DILocation(line: 1778, column: 5, scope: !3413)
!3435 = distinct !DISubprogram(name: "hls_read_seek", scope: !939, file: !939, line: 2203, type: !3436, isLocal: true, isDefinition: true, scopeLine: 2205, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{!963, !2235, !963, !959, !963}
!3438 = !DILocalVariable(name: "s", arg: 1, scope: !3435, file: !939, line: 2203, type: !2235)
!3439 = !DILocation(line: 2203, column: 43, scope: !3435)
!3440 = !DILocalVariable(name: "stream_index", arg: 2, scope: !3435, file: !939, line: 2203, type: !963)
!3441 = !DILocation(line: 2203, column: 50, scope: !3435)
!3442 = !DILocalVariable(name: "timestamp", arg: 3, scope: !3435, file: !939, line: 2204, type: !959)
!3443 = !DILocation(line: 2204, column: 40, scope: !3435)
!3444 = !DILocalVariable(name: "flags", arg: 4, scope: !3435, file: !939, line: 2204, type: !963)
!3445 = !DILocation(line: 2204, column: 55, scope: !3435)
!3446 = !DILocalVariable(name: "c", scope: !3435, file: !939, line: 2206, type: !2386)
!3447 = !DILocation(line: 2206, column: 17, scope: !3435)
!3448 = !DILocation(line: 2206, column: 21, scope: !3435)
!3449 = !DILocation(line: 2206, column: 24, scope: !3435)
!3450 = !DILocalVariable(name: "seek_pls", scope: !3435, file: !939, line: 2207, type: !2245)
!3451 = !DILocation(line: 2207, column: 22, scope: !3435)
!3452 = !DILocalVariable(name: "i", scope: !3435, file: !939, line: 2208, type: !963)
!3453 = !DILocation(line: 2208, column: 9, scope: !3435)
!3454 = !DILocalVariable(name: "seq_no", scope: !3435, file: !939, line: 2208, type: !963)
!3455 = !DILocation(line: 2208, column: 12, scope: !3435)
!3456 = !DILocalVariable(name: "j", scope: !3435, file: !939, line: 2209, type: !963)
!3457 = !DILocation(line: 2209, column: 9, scope: !3435)
!3458 = !DILocalVariable(name: "stream_subdemuxer_index", scope: !3435, file: !939, line: 2210, type: !963)
!3459 = !DILocation(line: 2210, column: 9, scope: !3435)
!3460 = !DILocalVariable(name: "first_timestamp", scope: !3435, file: !939, line: 2211, type: !959)
!3461 = !DILocation(line: 2211, column: 13, scope: !3435)
!3462 = !DILocalVariable(name: "seek_timestamp", scope: !3435, file: !939, line: 2211, type: !959)
!3463 = !DILocation(line: 2211, column: 30, scope: !3435)
!3464 = !DILocalVariable(name: "duration", scope: !3435, file: !939, line: 2211, type: !959)
!3465 = !DILocation(line: 2211, column: 46, scope: !3435)
!3466 = !DILocation(line: 2213, column: 10, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3435, file: !939, line: 2213, column: 9)
!3468 = !DILocation(line: 2213, column: 16, scope: !3467)
!3469 = !DILocation(line: 2213, column: 21, scope: !3467)
!3470 = !DILocation(line: 2213, column: 25, scope: !3471)
!3471 = !DILexicalBlockFile(scope: !3467, file: !939, discriminator: 1)
!3472 = !DILocation(line: 2213, column: 28, scope: !3471)
!3473 = !DILocation(line: 2213, column: 33, scope: !3471)
!3474 = !DILocation(line: 2213, column: 43, scope: !3471)
!3475 = !DILocation(line: 2213, column: 9, scope: !3471)
!3476 = !DILocation(line: 2214, column: 9, scope: !3467)
!3477 = !DILocation(line: 2216, column: 23, scope: !3435)
!3478 = !DILocation(line: 2216, column: 26, scope: !3435)
!3479 = !DILocation(line: 2216, column: 42, scope: !3435)
!3480 = !DILocation(line: 2216, column: 23, scope: !3481)
!3481 = !DILexicalBlockFile(scope: !3435, file: !939, discriminator: 1)
!3482 = !DILocation(line: 2217, column: 27, scope: !3435)
!3483 = !DILocation(line: 2217, column: 30, scope: !3435)
!3484 = !DILocation(line: 2216, column: 23, scope: !3485)
!3485 = !DILexicalBlockFile(scope: !3435, file: !939, discriminator: 2)
!3486 = !DILocation(line: 2216, column: 23, scope: !3487)
!3487 = !DILexicalBlockFile(scope: !3435, file: !939, discriminator: 3)
!3488 = !DILocation(line: 2216, column: 21, scope: !3487)
!3489 = !DILocation(line: 2219, column: 37, scope: !3435)
!3490 = !DILocation(line: 2220, column: 48, scope: !3435)
!3491 = !DILocation(line: 2220, column: 37, scope: !3435)
!3492 = !DILocation(line: 2220, column: 40, scope: !3435)
!3493 = !DILocation(line: 2220, column: 63, scope: !3435)
!3494 = !DILocation(line: 2220, column: 73, scope: !3435)
!3495 = !DILocation(line: 2221, column: 37, scope: !3435)
!3496 = !DILocation(line: 2221, column: 43, scope: !3435)
!3497 = !DILocation(line: 2219, column: 22, scope: !3435)
!3498 = !DILocation(line: 2219, column: 20, scope: !3435)
!3499 = !DILocation(line: 2224, column: 16, scope: !3435)
!3500 = !DILocation(line: 2224, column: 19, scope: !3435)
!3501 = !DILocation(line: 2224, column: 28, scope: !3435)
!3502 = !DILocation(line: 2224, column: 16, scope: !3481)
!3503 = !DILocation(line: 2225, column: 20, scope: !3435)
!3504 = !DILocation(line: 2225, column: 23, scope: !3435)
!3505 = !DILocation(line: 2224, column: 16, scope: !3485)
!3506 = !DILocation(line: 2224, column: 16, scope: !3487)
!3507 = !DILocation(line: 2224, column: 14, scope: !3487)
!3508 = !DILocation(line: 2227, column: 13, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3435, file: !939, line: 2227, column: 9)
!3510 = !DILocation(line: 2227, column: 11, scope: !3509)
!3511 = !DILocation(line: 2227, column: 22, scope: !3509)
!3512 = !DILocation(line: 2227, column: 25, scope: !3513)
!3513 = !DILexicalBlockFile(scope: !3509, file: !939, discriminator: 1)
!3514 = !DILocation(line: 2227, column: 36, scope: !3513)
!3515 = !DILocation(line: 2227, column: 53, scope: !3513)
!3516 = !DILocation(line: 2227, column: 51, scope: !3513)
!3517 = !DILocation(line: 2227, column: 34, scope: !3513)
!3518 = !DILocation(line: 2227, column: 9, scope: !3513)
!3519 = !DILocation(line: 2228, column: 9, scope: !3509)
!3520 = !DILocation(line: 2231, column: 12, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3435, file: !939, line: 2231, column: 5)
!3522 = !DILocation(line: 2231, column: 10, scope: !3521)
!3523 = !DILocation(line: 2231, column: 17, scope: !3524)
!3524 = !DILexicalBlockFile(scope: !3525, file: !939, discriminator: 1)
!3525 = distinct !DILexicalBlock(scope: !3521, file: !939, line: 2231, column: 5)
!3526 = !DILocation(line: 2231, column: 21, scope: !3524)
!3527 = !DILocation(line: 2231, column: 24, scope: !3524)
!3528 = !DILocation(line: 2231, column: 19, scope: !3524)
!3529 = !DILocation(line: 2231, column: 5, scope: !3524)
!3530 = !DILocalVariable(name: "pls", scope: !3531, file: !939, line: 2232, type: !2245)
!3531 = distinct !DILexicalBlock(scope: !3525, file: !939, line: 2231, column: 42)
!3532 = !DILocation(line: 2232, column: 26, scope: !3531)
!3533 = !DILocation(line: 2232, column: 45, scope: !3531)
!3534 = !DILocation(line: 2232, column: 32, scope: !3531)
!3535 = !DILocation(line: 2232, column: 35, scope: !3531)
!3536 = !DILocation(line: 2233, column: 16, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3531, file: !939, line: 2233, column: 9)
!3538 = !DILocation(line: 2233, column: 14, scope: !3537)
!3539 = !DILocation(line: 2233, column: 21, scope: !3540)
!3540 = !DILexicalBlockFile(scope: !3541, file: !939, discriminator: 1)
!3541 = distinct !DILexicalBlock(scope: !3537, file: !939, line: 2233, column: 9)
!3542 = !DILocation(line: 2233, column: 25, scope: !3540)
!3543 = !DILocation(line: 2233, column: 30, scope: !3540)
!3544 = !DILocation(line: 2233, column: 23, scope: !3540)
!3545 = !DILocation(line: 2233, column: 9, scope: !3540)
!3546 = !DILocation(line: 2234, column: 35, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !939, line: 2234, column: 17)
!3548 = distinct !DILexicalBlock(scope: !3541, file: !939, line: 2233, column: 51)
!3549 = !DILocation(line: 2234, column: 17, scope: !3547)
!3550 = !DILocation(line: 2234, column: 22, scope: !3547)
!3551 = !DILocation(line: 2234, column: 52, scope: !3547)
!3552 = !DILocation(line: 2234, column: 41, scope: !3547)
!3553 = !DILocation(line: 2234, column: 44, scope: !3547)
!3554 = !DILocation(line: 2234, column: 38, scope: !3547)
!3555 = !DILocation(line: 2234, column: 17, scope: !3548)
!3556 = !DILocation(line: 2235, column: 28, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3547, file: !939, line: 2234, column: 67)
!3558 = !DILocation(line: 2235, column: 26, scope: !3557)
!3559 = !DILocation(line: 2236, column: 43, scope: !3557)
!3560 = !DILocation(line: 2236, column: 41, scope: !3557)
!3561 = !DILocation(line: 2237, column: 17, scope: !3557)
!3562 = !DILocation(line: 2239, column: 9, scope: !3548)
!3563 = !DILocation(line: 2233, column: 47, scope: !3564)
!3564 = !DILexicalBlockFile(scope: !3541, file: !939, discriminator: 2)
!3565 = !DILocation(line: 2233, column: 9, scope: !3564)
!3566 = distinct !{!3566, !3567}
!3567 = !DILocation(line: 2233, column: 9, scope: !3531)
!3568 = !DILocation(line: 2240, column: 5, scope: !3531)
!3569 = !DILocation(line: 2231, column: 38, scope: !3570)
!3570 = !DILexicalBlockFile(scope: !3525, file: !939, discriminator: 2)
!3571 = !DILocation(line: 2231, column: 5, scope: !3570)
!3572 = distinct !{!3572, !3573}
!3573 = !DILocation(line: 2231, column: 5, scope: !3435)
!3574 = !DILocation(line: 2243, column: 10, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3435, file: !939, line: 2243, column: 9)
!3576 = !DILocation(line: 2243, column: 19, scope: !3575)
!3577 = !DILocation(line: 2243, column: 50, scope: !3578)
!3578 = !DILexicalBlockFile(scope: !3575, file: !939, discriminator: 1)
!3579 = !DILocation(line: 2243, column: 53, scope: !3578)
!3580 = !DILocation(line: 2243, column: 63, scope: !3578)
!3581 = !DILocation(line: 2243, column: 23, scope: !3578)
!3582 = !DILocation(line: 2243, column: 9, scope: !3578)
!3583 = !DILocation(line: 2244, column: 9, scope: !3575)
!3584 = !DILocation(line: 2247, column: 28, scope: !3435)
!3585 = !DILocation(line: 2247, column: 5, scope: !3435)
!3586 = !DILocation(line: 2247, column: 15, scope: !3435)
!3587 = !DILocation(line: 2247, column: 26, scope: !3435)
!3588 = !DILocation(line: 2248, column: 35, scope: !3435)
!3589 = !DILocation(line: 2248, column: 5, scope: !3435)
!3590 = !DILocation(line: 2248, column: 15, scope: !3435)
!3591 = !DILocation(line: 2248, column: 33, scope: !3435)
!3592 = !DILocation(line: 2250, column: 12, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3435, file: !939, line: 2250, column: 5)
!3594 = !DILocation(line: 2250, column: 10, scope: !3593)
!3595 = !DILocation(line: 2250, column: 17, scope: !3596)
!3596 = !DILexicalBlockFile(scope: !3597, file: !939, discriminator: 1)
!3597 = distinct !DILexicalBlock(scope: !3593, file: !939, line: 2250, column: 5)
!3598 = !DILocation(line: 2250, column: 21, scope: !3596)
!3599 = !DILocation(line: 2250, column: 24, scope: !3596)
!3600 = !DILocation(line: 2250, column: 19, scope: !3596)
!3601 = !DILocation(line: 2250, column: 5, scope: !3596)
!3602 = !DILocalVariable(name: "pls", scope: !3603, file: !939, line: 2252, type: !2245)
!3603 = distinct !DILexicalBlock(scope: !3597, file: !939, line: 2250, column: 42)
!3604 = !DILocation(line: 2252, column: 26, scope: !3603)
!3605 = !DILocation(line: 2252, column: 45, scope: !3603)
!3606 = !DILocation(line: 2252, column: 32, scope: !3603)
!3607 = !DILocation(line: 2252, column: 35, scope: !3603)
!3608 = !DILocation(line: 2253, column: 13, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3603, file: !939, line: 2253, column: 13)
!3610 = !DILocation(line: 2253, column: 18, scope: !3609)
!3611 = !DILocation(line: 2253, column: 13, scope: !3603)
!3612 = !DILocation(line: 2254, column: 32, scope: !3609)
!3613 = !DILocation(line: 2254, column: 37, scope: !3609)
!3614 = !DILocation(line: 2254, column: 46, scope: !3609)
!3615 = !DILocation(line: 2254, column: 51, scope: !3609)
!3616 = !DILocation(line: 2254, column: 13, scope: !3609)
!3617 = !DILocation(line: 2255, column: 9, scope: !3603)
!3618 = !DILocation(line: 2255, column: 14, scope: !3603)
!3619 = !DILocation(line: 2255, column: 30, scope: !3603)
!3620 = !DILocation(line: 2256, column: 13, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3603, file: !939, line: 2256, column: 13)
!3622 = !DILocation(line: 2256, column: 18, scope: !3621)
!3623 = !DILocation(line: 2256, column: 13, scope: !3603)
!3624 = !DILocation(line: 2257, column: 32, scope: !3621)
!3625 = !DILocation(line: 2257, column: 37, scope: !3621)
!3626 = !DILocation(line: 2257, column: 46, scope: !3621)
!3627 = !DILocation(line: 2257, column: 51, scope: !3621)
!3628 = !DILocation(line: 2257, column: 13, scope: !3621)
!3629 = !DILocation(line: 2258, column: 9, scope: !3603)
!3630 = !DILocation(line: 2258, column: 14, scope: !3603)
!3631 = !DILocation(line: 2258, column: 35, scope: !3603)
!3632 = !DILocation(line: 2259, column: 26, scope: !3603)
!3633 = !DILocation(line: 2259, column: 31, scope: !3603)
!3634 = !DILocation(line: 2259, column: 9, scope: !3603)
!3635 = !DILocation(line: 2260, column: 23, scope: !3603)
!3636 = !DILocation(line: 2260, column: 28, scope: !3603)
!3637 = !DILocation(line: 2260, column: 9, scope: !3603)
!3638 = !DILocation(line: 2261, column: 9, scope: !3603)
!3639 = !DILocation(line: 2261, column: 14, scope: !3603)
!3640 = !DILocation(line: 2261, column: 17, scope: !3603)
!3641 = !DILocation(line: 2261, column: 29, scope: !3603)
!3642 = !DILocation(line: 2263, column: 45, scope: !3603)
!3643 = !DILocation(line: 2263, column: 50, scope: !3603)
!3644 = !DILocation(line: 2263, column: 53, scope: !3603)
!3645 = !DILocation(line: 2263, column: 27, scope: !3603)
!3646 = !DILocation(line: 2263, column: 32, scope: !3603)
!3647 = !DILocation(line: 2263, column: 35, scope: !3603)
!3648 = !DILocation(line: 2263, column: 43, scope: !3603)
!3649 = !DILocation(line: 2263, column: 9, scope: !3603)
!3650 = !DILocation(line: 2263, column: 14, scope: !3603)
!3651 = !DILocation(line: 2263, column: 17, scope: !3603)
!3652 = !DILocation(line: 2263, column: 25, scope: !3603)
!3653 = !DILocation(line: 2265, column: 9, scope: !3603)
!3654 = !DILocation(line: 2265, column: 14, scope: !3603)
!3655 = !DILocation(line: 2265, column: 17, scope: !3603)
!3656 = !DILocation(line: 2265, column: 21, scope: !3603)
!3657 = !DILocation(line: 2267, column: 29, scope: !3603)
!3658 = !DILocation(line: 2267, column: 34, scope: !3603)
!3659 = !DILocation(line: 2267, column: 9, scope: !3603)
!3660 = !DILocation(line: 2269, column: 31, scope: !3603)
!3661 = !DILocation(line: 2269, column: 9, scope: !3603)
!3662 = !DILocation(line: 2269, column: 14, scope: !3603)
!3663 = !DILocation(line: 2269, column: 29, scope: !3603)
!3664 = !DILocation(line: 2270, column: 27, scope: !3603)
!3665 = !DILocation(line: 2270, column: 9, scope: !3603)
!3666 = !DILocation(line: 2270, column: 14, scope: !3603)
!3667 = !DILocation(line: 2270, column: 25, scope: !3603)
!3668 = !DILocation(line: 2272, column: 13, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3603, file: !939, line: 2272, column: 13)
!3670 = !DILocation(line: 2272, column: 20, scope: !3669)
!3671 = !DILocation(line: 2272, column: 17, scope: !3669)
!3672 = !DILocation(line: 2272, column: 13, scope: !3603)
!3673 = !DILocation(line: 2274, column: 40, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3669, file: !939, line: 2272, column: 30)
!3675 = !DILocation(line: 2274, column: 43, scope: !3674)
!3676 = !DILocation(line: 2274, column: 48, scope: !3674)
!3677 = !DILocation(line: 2274, column: 65, scope: !3674)
!3678 = !DILocation(line: 2274, column: 70, scope: !3674)
!3679 = !DILocation(line: 2274, column: 13, scope: !3674)
!3680 = !DILocation(line: 2278, column: 13, scope: !3674)
!3681 = !DILocation(line: 2278, column: 18, scope: !3674)
!3682 = !DILocation(line: 2278, column: 36, scope: !3674)
!3683 = !DILocation(line: 2279, column: 13, scope: !3674)
!3684 = !DILocation(line: 2279, column: 18, scope: !3674)
!3685 = !DILocation(line: 2279, column: 29, scope: !3674)
!3686 = !DILocation(line: 2280, column: 9, scope: !3674)
!3687 = !DILocation(line: 2281, column: 5, scope: !3603)
!3688 = !DILocation(line: 2250, column: 38, scope: !3689)
!3689 = !DILexicalBlockFile(scope: !3597, file: !939, discriminator: 2)
!3690 = !DILocation(line: 2250, column: 5, scope: !3689)
!3691 = distinct !{!3691, !3692}
!3692 = !DILocation(line: 2250, column: 5, scope: !3435)
!3693 = !DILocation(line: 2283, column: 24, scope: !3435)
!3694 = !DILocation(line: 2283, column: 5, scope: !3435)
!3695 = !DILocation(line: 2283, column: 8, scope: !3435)
!3696 = !DILocation(line: 2283, column: 22, scope: !3435)
!3697 = !DILocation(line: 2285, column: 5, scope: !3435)
!3698 = !DILocation(line: 2286, column: 1, scope: !3435)
!3699 = !DILocalVariable(name: "s", arg: 1, scope: !2232, file: !939, line: 1644, type: !2235)
!3700 = !DILocation(line: 1644, column: 47, scope: !2232)
!3701 = !DILocalVariable(name: "c", scope: !2232, file: !939, line: 1646, type: !2386)
!3702 = !DILocation(line: 1646, column: 17, scope: !2232)
!3703 = !DILocation(line: 1646, column: 21, scope: !2232)
!3704 = !DILocation(line: 1646, column: 24, scope: !2232)
!3705 = !DILocalVariable(name: "opt", scope: !2232, file: !939, line: 1649, type: !1769)
!3706 = !DILocation(line: 1649, column: 26, scope: !2232)
!3707 = !DILocalVariable(name: "buf", scope: !2232, file: !939, line: 1650, type: !983)
!3708 = !DILocation(line: 1650, column: 14, scope: !2232)
!3709 = !DILocalVariable(name: "ret", scope: !2232, file: !939, line: 1651, type: !963)
!3710 = !DILocation(line: 1651, column: 9, scope: !2232)
!3711 = !DILocation(line: 1653, column: 5, scope: !2232)
!3712 = !DILocation(line: 1653, column: 13, scope: !3713)
!3713 = !DILexicalBlockFile(scope: !2232, file: !939, discriminator: 1)
!3714 = !DILocation(line: 1653, column: 12, scope: !3713)
!3715 = !DILocation(line: 1653, column: 5, scope: !3713)
!3716 = !DILocation(line: 1654, column: 24, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !939, line: 1654, column: 13)
!3718 = distinct !DILexicalBlock(scope: !2232, file: !939, line: 1653, column: 18)
!3719 = !DILocation(line: 1654, column: 27, scope: !3717)
!3720 = !DILocation(line: 1654, column: 32, scope: !3717)
!3721 = !DILocation(line: 1654, column: 31, scope: !3717)
!3722 = !DILocation(line: 1654, column: 13, scope: !3717)
!3723 = !DILocation(line: 1654, column: 64, scope: !3717)
!3724 = !DILocation(line: 1654, column: 13, scope: !3718)
!3725 = !DILocation(line: 1655, column: 32, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3717, file: !939, line: 1654, column: 70)
!3727 = !DILocation(line: 1655, column: 35, scope: !3726)
!3728 = !DILocation(line: 1655, column: 47, scope: !3726)
!3729 = !DILocation(line: 1655, column: 46, scope: !3726)
!3730 = !DILocation(line: 1655, column: 52, scope: !3726)
!3731 = !DILocation(line: 1655, column: 19, scope: !3726)
!3732 = !DILocation(line: 1655, column: 17, scope: !3726)
!3733 = !DILocation(line: 1657, column: 17, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3726, file: !939, line: 1657, column: 17)
!3735 = !DILocation(line: 1657, column: 21, scope: !3734)
!3736 = !DILocation(line: 1657, column: 17, scope: !3726)
!3737 = !DILocation(line: 1658, column: 24, scope: !3734)
!3738 = !DILocation(line: 1658, column: 17, scope: !3734)
!3739 = !DILocation(line: 1659, column: 9, scope: !3726)
!3740 = !DILocation(line: 1660, column: 12, scope: !3718)
!3741 = !DILocation(line: 1653, column: 5, scope: !3742)
!3742 = !DILexicalBlockFile(scope: !2232, file: !939, discriminator: 2)
!3743 = distinct !{!3743, !3711}
!3744 = !DILocation(line: 1663, column: 12, scope: !2232)
!3745 = !DILocation(line: 1663, column: 5, scope: !2232)
!3746 = !DILocation(line: 1664, column: 1, scope: !2232)
!3747 = distinct !DISubprogram(name: "parse_playlist", scope: !939, file: !939, line: 687, type: !3748, isLocal: true, isDefinition: true, scopeLine: 689, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!963, !2386, !970, !2245, !1306}
!3750 = !DILocalVariable(name: "x", arg: 1, scope: !3751, file: !3752, line: 66, type: !981)
!3751 = distinct !DISubprogram(name: "av_bswap32", scope: !3752, file: !3752, line: 66, type: !3753, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!3752 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!3753 = !DISubroutineType(types: !3754)
!3754 = !{!981, !981}
!3755 = !DILocation(line: 66, column: 98, scope: !3751, inlinedAt: !3756)
!3756 = distinct !DILocation(line: 877, column: 70, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !939, line: 874, column: 24)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !939, line: 872, column: 21)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !939, line: 856, column: 29)
!3760 = distinct !DILexicalBlock(scope: !3761, file: !939, line: 856, column: 17)
!3761 = distinct !DILexicalBlock(scope: !3762, file: !939, line: 848, column: 29)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !939, line: 848, column: 20)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !939, line: 846, column: 20)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !939, line: 841, column: 20)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !939, line: 838, column: 20)
!3766 = distinct !DILexicalBlock(scope: !3767, file: !939, line: 835, column: 20)
!3767 = distinct !DILexicalBlock(scope: !3768, file: !939, line: 806, column: 20)
!3768 = distinct !DILexicalBlock(scope: !3769, file: !939, line: 798, column: 20)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !939, line: 793, column: 20)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !939, line: 788, column: 20)
!3771 = distinct !DILexicalBlock(scope: !3772, file: !939, line: 783, column: 20)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !939, line: 768, column: 20)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !939, line: 763, column: 13)
!3774 = distinct !DILexicalBlock(scope: !3747, file: !939, line: 761, column: 28)
!3775 = !DILocation(line: 66, column: 98, scope: !3751, inlinedAt: !3776)
!3776 = distinct !DILocation(line: 820, column: 79, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !939, line: 817, column: 20)
!3778 = distinct !DILexicalBlock(scope: !3779, file: !939, line: 815, column: 17)
!3779 = distinct !DILexicalBlock(scope: !3767, file: !939, line: 806, column: 60)
!3780 = !DILocalVariable(name: "c", arg: 1, scope: !3747, file: !939, line: 687, type: !2386)
!3781 = !DILocation(line: 687, column: 39, scope: !3747)
!3782 = !DILocalVariable(name: "url", arg: 2, scope: !3747, file: !939, line: 687, type: !970)
!3783 = !DILocation(line: 687, column: 54, scope: !3747)
!3784 = !DILocalVariable(name: "pls", arg: 3, scope: !3747, file: !939, line: 688, type: !2245)
!3785 = !DILocation(line: 688, column: 44, scope: !3747)
!3786 = !DILocalVariable(name: "in", arg: 4, scope: !3747, file: !939, line: 688, type: !1306)
!3787 = !DILocation(line: 688, column: 62, scope: !3747)
!3788 = !DILocalVariable(name: "ret", scope: !3747, file: !939, line: 690, type: !963)
!3789 = !DILocation(line: 690, column: 9, scope: !3747)
!3790 = !DILocalVariable(name: "is_segment", scope: !3747, file: !939, line: 690, type: !963)
!3791 = !DILocation(line: 690, column: 18, scope: !3747)
!3792 = !DILocalVariable(name: "is_variant", scope: !3747, file: !939, line: 690, type: !963)
!3793 = !DILocation(line: 690, column: 34, scope: !3747)
!3794 = !DILocalVariable(name: "duration", scope: !3747, file: !939, line: 691, type: !959)
!3795 = !DILocation(line: 691, column: 13, scope: !3747)
!3796 = !DILocalVariable(name: "key_type", scope: !3747, file: !939, line: 692, type: !944)
!3797 = !DILocation(line: 692, column: 18, scope: !3747)
!3798 = !DILocalVariable(name: "iv", scope: !3747, file: !939, line: 693, type: !2282)
!3799 = !DILocation(line: 693, column: 13, scope: !3747)
!3800 = !DILocalVariable(name: "has_iv", scope: !3747, file: !939, line: 694, type: !963)
!3801 = !DILocation(line: 694, column: 9, scope: !3747)
!3802 = !DILocalVariable(name: "key", scope: !3747, file: !939, line: 695, type: !2249)
!3803 = !DILocation(line: 695, column: 10, scope: !3747)
!3804 = !DILocalVariable(name: "line", scope: !3747, file: !939, line: 696, type: !2249)
!3805 = !DILocation(line: 696, column: 10, scope: !3747)
!3806 = !DILocalVariable(name: "ptr", scope: !3747, file: !939, line: 697, type: !970)
!3807 = !DILocation(line: 697, column: 17, scope: !3747)
!3808 = !DILocalVariable(name: "close_in", scope: !3747, file: !939, line: 698, type: !963)
!3809 = !DILocation(line: 698, column: 9, scope: !3747)
!3810 = !DILocalVariable(name: "seg_offset", scope: !3747, file: !939, line: 699, type: !959)
!3811 = !DILocation(line: 699, column: 13, scope: !3747)
!3812 = !DILocalVariable(name: "seg_size", scope: !3747, file: !939, line: 700, type: !959)
!3813 = !DILocation(line: 700, column: 13, scope: !3747)
!3814 = !DILocalVariable(name: "new_url", scope: !3747, file: !939, line: 701, type: !983)
!3815 = !DILocation(line: 701, column: 14, scope: !3747)
!3816 = !DILocalVariable(name: "variant_info", scope: !3747, file: !939, line: 702, type: !3817)
!3817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "variant_info", file: !939, line: 321, size: 1696, align: 8, elements: !3818)
!3818 = !{!3819, !3823, !3824, !3825}
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth", scope: !3817, file: !939, line: 322, baseType: !3820, size: 160, align: 8)
!3820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 160, align: 8, elements: !3821)
!3821 = !{!3822}
!3822 = !DISubrange(count: 20)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !3817, file: !939, line: 324, baseType: !2327, size: 512, align: 8, offset: 160)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "video", scope: !3817, file: !939, line: 325, baseType: !2327, size: 512, align: 8, offset: 672)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "subtitles", scope: !3817, file: !939, line: 326, baseType: !2327, size: 512, align: 8, offset: 1184)
!3826 = !DILocation(line: 702, column: 25, scope: !3747)
!3827 = !DILocalVariable(name: "tmp_str", scope: !3747, file: !939, line: 703, type: !2249)
!3828 = !DILocation(line: 703, column: 10, scope: !3747)
!3829 = !DILocalVariable(name: "cur_init_section", scope: !3747, file: !939, line: 704, type: !2272)
!3830 = !DILocation(line: 704, column: 21, scope: !3747)
!3831 = !DILocalVariable(name: "is_http", scope: !3747, file: !939, line: 705, type: !963)
!3832 = !DILocation(line: 705, column: 9, scope: !3747)
!3833 = !DILocation(line: 705, column: 31, scope: !3747)
!3834 = !DILocation(line: 705, column: 19, scope: !3747)
!3835 = !DILocalVariable(name: "prev_segments", scope: !3747, file: !939, line: 706, type: !2271)
!3836 = !DILocation(line: 706, column: 22, scope: !3747)
!3837 = !DILocalVariable(name: "prev_n_segments", scope: !3747, file: !939, line: 707, type: !963)
!3838 = !DILocation(line: 707, column: 9, scope: !3747)
!3839 = !DILocalVariable(name: "prev_start_seq_no", scope: !3747, file: !939, line: 708, type: !963)
!3840 = !DILocation(line: 708, column: 9, scope: !3747)
!3841 = !DILocation(line: 710, column: 9, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3747, file: !939, line: 710, column: 9)
!3843 = !DILocation(line: 710, column: 17, scope: !3842)
!3844 = !DILocation(line: 710, column: 21, scope: !3845)
!3845 = !DILexicalBlockFile(scope: !3842, file: !939, discriminator: 1)
!3846 = !DILocation(line: 710, column: 24, scope: !3845)
!3847 = !DILocation(line: 710, column: 27, scope: !3848)
!3848 = !DILexicalBlockFile(scope: !3842, file: !939, discriminator: 2)
!3849 = !DILocation(line: 710, column: 30, scope: !3848)
!3850 = !DILocation(line: 710, column: 46, scope: !3848)
!3851 = !DILocation(line: 710, column: 49, scope: !3852)
!3852 = !DILexicalBlockFile(scope: !3842, file: !939, discriminator: 3)
!3853 = !DILocation(line: 710, column: 52, scope: !3852)
!3854 = !DILocation(line: 710, column: 9, scope: !3852)
!3855 = !DILocation(line: 711, column: 14, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3842, file: !939, line: 710, column: 65)
!3857 = !DILocation(line: 711, column: 17, scope: !3856)
!3858 = !DILocation(line: 711, column: 12, scope: !3856)
!3859 = !DILocation(line: 712, column: 34, scope: !3856)
!3860 = !DILocation(line: 712, column: 37, scope: !3856)
!3861 = !DILocation(line: 712, column: 43, scope: !3856)
!3862 = !DILocation(line: 712, column: 46, scope: !3856)
!3863 = !DILocation(line: 712, column: 59, scope: !3856)
!3864 = !DILocation(line: 712, column: 15, scope: !3856)
!3865 = !DILocation(line: 712, column: 13, scope: !3856)
!3866 = !DILocation(line: 713, column: 13, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3856, file: !939, line: 713, column: 13)
!3868 = !DILocation(line: 713, column: 17, scope: !3867)
!3869 = !DILocation(line: 713, column: 13, scope: !3856)
!3870 = !DILocation(line: 714, column: 20, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3867, file: !939, line: 713, column: 94)
!3872 = !DILocation(line: 714, column: 13, scope: !3871)
!3873 = !DILocation(line: 715, column: 20, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3867, file: !939, line: 715, column: 20)
!3875 = !DILocation(line: 715, column: 24, scope: !3874)
!3876 = !DILocation(line: 715, column: 20, scope: !3867)
!3877 = !DILocation(line: 716, column: 17, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !939, line: 716, column: 17)
!3879 = distinct !DILexicalBlock(scope: !3874, file: !939, line: 715, column: 29)
!3880 = !DILocation(line: 716, column: 21, scope: !3878)
!3881 = !DILocation(line: 716, column: 17, scope: !3879)
!3882 = !DILocation(line: 717, column: 24, scope: !3878)
!3883 = !DILocation(line: 717, column: 27, scope: !3878)
!3884 = !DILocation(line: 719, column: 21, scope: !3878)
!3885 = !DILocation(line: 719, column: 47, scope: !3878)
!3886 = !DILocation(line: 719, column: 57, scope: !3878)
!3887 = !DILocation(line: 719, column: 66, scope: !3878)
!3888 = !DILocation(line: 719, column: 26, scope: !3889)
!3889 = !DILexicalBlockFile(scope: !3878, file: !939, discriminator: 1)
!3890 = !DILocation(line: 717, column: 17, scope: !3878)
!3891 = !DILocation(line: 720, column: 16, scope: !3879)
!3892 = !DILocation(line: 721, column: 9, scope: !3879)
!3893 = !DILocation(line: 722, column: 5, scope: !3856)
!3894 = !DILocation(line: 724, column: 10, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3747, file: !939, line: 724, column: 9)
!3896 = !DILocation(line: 724, column: 9, scope: !3747)
!3897 = !DILocalVariable(name: "opts", scope: !3898, file: !939, line: 725, type: !1246)
!3898 = distinct !DILexicalBlock(scope: !3895, file: !939, line: 724, column: 14)
!3899 = !DILocation(line: 725, column: 23, scope: !3898)
!3900 = !DILocation(line: 726, column: 29, scope: !3898)
!3901 = !DILocation(line: 726, column: 32, scope: !3898)
!3902 = !DILocation(line: 726, column: 9, scope: !3898)
!3903 = !DILocation(line: 728, column: 13, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3898, file: !939, line: 728, column: 13)
!3905 = !DILocation(line: 728, column: 16, scope: !3904)
!3906 = !DILocation(line: 728, column: 13, scope: !3898)
!3907 = !DILocation(line: 729, column: 13, scope: !3904)
!3908 = !DILocation(line: 731, column: 15, scope: !3898)
!3909 = !DILocation(line: 731, column: 18, scope: !3898)
!3910 = !DILocation(line: 731, column: 23, scope: !3898)
!3911 = !DILocation(line: 731, column: 31, scope: !3898)
!3912 = !DILocation(line: 731, column: 34, scope: !3898)
!3913 = !DILocation(line: 731, column: 44, scope: !3898)
!3914 = !DILocation(line: 731, column: 13, scope: !3898)
!3915 = !DILocation(line: 732, column: 9, scope: !3898)
!3916 = !DILocation(line: 733, column: 13, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3898, file: !939, line: 733, column: 13)
!3918 = !DILocation(line: 733, column: 17, scope: !3917)
!3919 = !DILocation(line: 733, column: 13, scope: !3898)
!3920 = !DILocation(line: 734, column: 20, scope: !3917)
!3921 = !DILocation(line: 734, column: 13, scope: !3917)
!3922 = !DILocation(line: 736, column: 13, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3898, file: !939, line: 736, column: 13)
!3924 = !DILocation(line: 736, column: 21, scope: !3923)
!3925 = !DILocation(line: 736, column: 24, scope: !3926)
!3926 = !DILexicalBlockFile(scope: !3923, file: !939, discriminator: 1)
!3927 = !DILocation(line: 736, column: 27, scope: !3926)
!3928 = !DILocation(line: 736, column: 13, scope: !3926)
!3929 = !DILocation(line: 737, column: 30, scope: !3923)
!3930 = !DILocation(line: 737, column: 13, scope: !3923)
!3931 = !DILocation(line: 737, column: 16, scope: !3923)
!3932 = !DILocation(line: 737, column: 28, scope: !3923)
!3933 = !DILocation(line: 739, column: 22, scope: !3923)
!3934 = !DILocation(line: 740, column: 5, scope: !3898)
!3935 = !DILocation(line: 742, column: 20, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3747, file: !939, line: 742, column: 9)
!3937 = !DILocation(line: 742, column: 9, scope: !3936)
!3938 = !DILocation(line: 742, column: 56, scope: !3936)
!3939 = !DILocation(line: 742, column: 9, scope: !3747)
!3940 = !DILocation(line: 743, column: 15, scope: !3936)
!3941 = !DILocation(line: 743, column: 13, scope: !3936)
!3942 = !DILocation(line: 743, column: 9, scope: !3936)
!3943 = !DILocation(line: 745, column: 23, scope: !3747)
!3944 = !DILocation(line: 745, column: 27, scope: !3747)
!3945 = !DILocation(line: 745, column: 5, scope: !3747)
!3946 = !DILocation(line: 746, column: 16, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3747, file: !939, line: 746, column: 9)
!3948 = !DILocation(line: 746, column: 9, scope: !3947)
!3949 = !DILocation(line: 746, column: 9, scope: !3747)
!3950 = !DILocation(line: 747, column: 13, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3947, file: !939, line: 746, column: 34)
!3952 = !DILocation(line: 748, column: 9, scope: !3951)
!3953 = !DILocation(line: 751, column: 9, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3747, file: !939, line: 751, column: 9)
!3955 = !DILocation(line: 751, column: 9, scope: !3747)
!3956 = !DILocation(line: 752, column: 29, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3954, file: !939, line: 751, column: 14)
!3958 = !DILocation(line: 752, column: 34, scope: !3957)
!3959 = !DILocation(line: 752, column: 27, scope: !3957)
!3960 = !DILocation(line: 753, column: 25, scope: !3957)
!3961 = !DILocation(line: 753, column: 30, scope: !3957)
!3962 = !DILocation(line: 753, column: 23, scope: !3957)
!3963 = !DILocation(line: 754, column: 27, scope: !3957)
!3964 = !DILocation(line: 754, column: 32, scope: !3957)
!3965 = !DILocation(line: 754, column: 25, scope: !3957)
!3966 = !DILocation(line: 755, column: 9, scope: !3957)
!3967 = !DILocation(line: 755, column: 14, scope: !3957)
!3968 = !DILocation(line: 755, column: 23, scope: !3957)
!3969 = !DILocation(line: 756, column: 9, scope: !3957)
!3970 = !DILocation(line: 756, column: 14, scope: !3957)
!3971 = !DILocation(line: 756, column: 25, scope: !3957)
!3972 = !DILocation(line: 758, column: 9, scope: !3957)
!3973 = !DILocation(line: 758, column: 14, scope: !3957)
!3974 = !DILocation(line: 758, column: 23, scope: !3957)
!3975 = !DILocation(line: 759, column: 9, scope: !3957)
!3976 = !DILocation(line: 759, column: 14, scope: !3957)
!3977 = !DILocation(line: 759, column: 19, scope: !3957)
!3978 = !DILocation(line: 760, column: 5, scope: !3957)
!3979 = !DILocation(line: 761, column: 5, scope: !3747)
!3980 = !DILocation(line: 761, column: 23, scope: !3981)
!3981 = !DILexicalBlockFile(scope: !3747, file: !939, discriminator: 1)
!3982 = !DILocation(line: 761, column: 13, scope: !3981)
!3983 = !DILocation(line: 761, column: 12, scope: !3981)
!3984 = !DILocation(line: 761, column: 5, scope: !3981)
!3985 = !DILocation(line: 762, column: 27, scope: !3774)
!3986 = !DILocation(line: 762, column: 31, scope: !3774)
!3987 = !DILocation(line: 762, column: 9, scope: !3774)
!3988 = !DILocation(line: 763, column: 25, scope: !3773)
!3989 = !DILocation(line: 763, column: 13, scope: !3773)
!3990 = !DILocation(line: 763, column: 13, scope: !3774)
!3991 = !DILocation(line: 764, column: 24, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3773, file: !939, line: 763, column: 60)
!3993 = !DILocation(line: 765, column: 13, scope: !3992)
!3994 = !DILocation(line: 766, column: 32, scope: !3992)
!3995 = !DILocation(line: 767, column: 32, scope: !3992)
!3996 = !DILocation(line: 766, column: 13, scope: !3992)
!3997 = !DILocation(line: 768, column: 9, scope: !3992)
!3998 = !DILocation(line: 768, column: 32, scope: !3999)
!3999 = !DILexicalBlockFile(scope: !3772, file: !939, discriminator: 1)
!4000 = !DILocation(line: 768, column: 20, scope: !3999)
!4001 = !DILocalVariable(name: "info", scope: !4002, file: !939, line: 769, type: !4003)
!4002 = distinct !DILexicalBlock(scope: !3772, file: !939, line: 768, column: 60)
!4003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_info", file: !939, line: 373, size: 33136, align: 8, elements: !4004)
!4004 = !{!4005, !4006, !4010}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !4003, file: !939, line: 374, baseType: !2249, size: 32768, align: 8)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !4003, file: !939, line: 375, baseType: !4007, size: 88, align: 8, offset: 32768)
!4007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 88, align: 8, elements: !4008)
!4008 = !{!4009}
!4009 = !DISubrange(count: 11)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "iv", scope: !4003, file: !939, line: 376, baseType: !4011, size: 280, align: 8, offset: 32856)
!4011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 280, align: 8, elements: !4012)
!4012 = !{!4013}
!4013 = !DISubrange(count: 35)
!4014 = !DILocation(line: 769, column: 29, scope: !4002)
!4015 = !DILocation(line: 770, column: 32, scope: !4002)
!4016 = !DILocation(line: 771, column: 32, scope: !4002)
!4017 = !DILocation(line: 770, column: 13, scope: !4002)
!4018 = !DILocation(line: 772, column: 22, scope: !4002)
!4019 = !DILocation(line: 773, column: 20, scope: !4002)
!4020 = !DILocation(line: 774, column: 30, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4002, file: !939, line: 774, column: 17)
!4022 = !DILocation(line: 774, column: 25, scope: !4021)
!4023 = !DILocation(line: 774, column: 18, scope: !4021)
!4024 = !DILocation(line: 774, column: 17, scope: !4002)
!4025 = !DILocation(line: 775, column: 26, scope: !4021)
!4026 = !DILocation(line: 775, column: 17, scope: !4021)
!4027 = !DILocation(line: 776, column: 30, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4002, file: !939, line: 776, column: 17)
!4029 = !DILocation(line: 776, column: 25, scope: !4028)
!4030 = !DILocation(line: 776, column: 18, scope: !4028)
!4031 = !DILocation(line: 776, column: 17, scope: !4002)
!4032 = !DILocation(line: 777, column: 26, scope: !4028)
!4033 = !DILocation(line: 777, column: 17, scope: !4028)
!4034 = !DILocation(line: 778, column: 31, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4002, file: !939, line: 778, column: 17)
!4036 = !DILocation(line: 778, column: 26, scope: !4035)
!4037 = !DILocation(line: 778, column: 18, scope: !4035)
!4038 = !DILocation(line: 778, column: 44, scope: !4035)
!4039 = !DILocation(line: 778, column: 61, scope: !4040)
!4040 = !DILexicalBlockFile(scope: !4035, file: !939, discriminator: 1)
!4041 = !DILocation(line: 778, column: 56, scope: !4040)
!4042 = !DILocation(line: 778, column: 48, scope: !4040)
!4043 = !DILocation(line: 778, column: 17, scope: !4040)
!4044 = !DILocation(line: 779, column: 32, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4035, file: !939, line: 778, column: 75)
!4046 = !DILocation(line: 779, column: 41, scope: !4045)
!4047 = !DILocation(line: 779, column: 36, scope: !4045)
!4048 = !DILocation(line: 779, column: 44, scope: !4045)
!4049 = !DILocation(line: 779, column: 17, scope: !4045)
!4050 = !DILocation(line: 780, column: 24, scope: !4045)
!4051 = !DILocation(line: 781, column: 13, scope: !4045)
!4052 = !DILocation(line: 782, column: 24, scope: !4002)
!4053 = !DILocation(line: 782, column: 34, scope: !4002)
!4054 = !DILocation(line: 782, column: 29, scope: !4002)
!4055 = !DILocation(line: 782, column: 13, scope: !4002)
!4056 = !DILocation(line: 783, column: 9, scope: !4002)
!4057 = !DILocation(line: 783, column: 32, scope: !4058)
!4058 = !DILexicalBlockFile(scope: !3771, file: !939, discriminator: 1)
!4059 = !DILocation(line: 783, column: 20, scope: !4058)
!4060 = !DILocalVariable(name: "info", scope: !4061, file: !939, line: 784, type: !4062)
!4061 = distinct !DILexicalBlock(scope: !3771, file: !939, line: 783, column: 62)
!4062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rendition_info", file: !939, line: 448, size: 39104, align: 8, elements: !4063)
!4063 = !{!4064, !4066, !4067, !4068, !4069, !4070, !4071, !4073, !4074}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4062, file: !939, line: 449, baseType: !4065, size: 128, align: 8)
!4065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 128, align: 8, elements: !2283)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !4062, file: !939, line: 450, baseType: !2249, size: 32768, align: 8, offset: 128)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "group_id", scope: !4062, file: !939, line: 451, baseType: !2327, size: 512, align: 8, offset: 32896)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !4062, file: !939, line: 452, baseType: !2327, size: 512, align: 8, offset: 33408)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "assoc_language", scope: !4062, file: !939, line: 453, baseType: !2327, size: 512, align: 8, offset: 33920)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4062, file: !939, line: 454, baseType: !2327, size: 512, align: 8, offset: 34432)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "defaultr", scope: !4062, file: !939, line: 455, baseType: !4072, size: 32, align: 8, offset: 34944)
!4072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 32, align: 8, elements: !1480)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "forced", scope: !4062, file: !939, line: 456, baseType: !4072, size: 32, align: 8, offset: 34976)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "characteristics", scope: !4062, file: !939, line: 457, baseType: !4075, size: 4096, align: 8, offset: 35008)
!4075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 4096, align: 8, elements: !4076)
!4076 = !{!4077}
!4077 = !DISubrange(count: 512)
!4078 = !DILocation(line: 784, column: 35, scope: !4061)
!4079 = !DILocation(line: 785, column: 32, scope: !4061)
!4080 = !DILocation(line: 786, column: 32, scope: !4061)
!4081 = !DILocation(line: 785, column: 13, scope: !4061)
!4082 = !DILocation(line: 787, column: 27, scope: !4061)
!4083 = !DILocation(line: 787, column: 37, scope: !4061)
!4084 = !DILocation(line: 787, column: 13, scope: !4061)
!4085 = !DILocation(line: 788, column: 9, scope: !4061)
!4086 = !DILocation(line: 788, column: 32, scope: !4087)
!4087 = !DILexicalBlockFile(scope: !3770, file: !939, discriminator: 1)
!4088 = !DILocation(line: 788, column: 20, scope: !4087)
!4089 = !DILocation(line: 789, column: 35, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !3770, file: !939, line: 788, column: 71)
!4091 = !DILocation(line: 789, column: 44, scope: !4090)
!4092 = !DILocation(line: 789, column: 19, scope: !4090)
!4093 = !DILocation(line: 789, column: 17, scope: !4090)
!4094 = !DILocation(line: 790, column: 17, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4090, file: !939, line: 790, column: 17)
!4096 = !DILocation(line: 790, column: 21, scope: !4095)
!4097 = !DILocation(line: 790, column: 17, scope: !4090)
!4098 = !DILocation(line: 791, column: 17, scope: !4095)
!4099 = !DILocation(line: 792, column: 44, scope: !4090)
!4100 = !DILocation(line: 792, column: 36, scope: !4090)
!4101 = !DILocation(line: 792, column: 58, scope: !4090)
!4102 = !DILocation(line: 792, column: 13, scope: !4090)
!4103 = !DILocation(line: 792, column: 18, scope: !4090)
!4104 = !DILocation(line: 792, column: 34, scope: !4090)
!4105 = !DILocation(line: 793, column: 9, scope: !4090)
!4106 = !DILocation(line: 793, column: 32, scope: !4107)
!4107 = !DILexicalBlockFile(scope: !3769, file: !939, discriminator: 1)
!4108 = !DILocation(line: 793, column: 20, scope: !4107)
!4109 = !DILocation(line: 794, column: 35, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !3769, file: !939, line: 793, column: 71)
!4111 = !DILocation(line: 794, column: 44, scope: !4110)
!4112 = !DILocation(line: 794, column: 19, scope: !4110)
!4113 = !DILocation(line: 794, column: 17, scope: !4110)
!4114 = !DILocation(line: 795, column: 17, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4110, file: !939, line: 795, column: 17)
!4116 = !DILocation(line: 795, column: 21, scope: !4115)
!4117 = !DILocation(line: 795, column: 17, scope: !4110)
!4118 = !DILocation(line: 796, column: 17, scope: !4115)
!4119 = !DILocation(line: 797, column: 38, scope: !4110)
!4120 = !DILocation(line: 797, column: 33, scope: !4110)
!4121 = !DILocation(line: 797, column: 13, scope: !4110)
!4122 = !DILocation(line: 797, column: 18, scope: !4110)
!4123 = !DILocation(line: 797, column: 31, scope: !4110)
!4124 = !DILocation(line: 798, column: 9, scope: !4110)
!4125 = !DILocation(line: 798, column: 32, scope: !4126)
!4126 = !DILexicalBlockFile(scope: !3768, file: !939, discriminator: 1)
!4127 = !DILocation(line: 798, column: 20, scope: !4126)
!4128 = !DILocation(line: 799, column: 35, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !3768, file: !939, line: 798, column: 70)
!4130 = !DILocation(line: 799, column: 44, scope: !4129)
!4131 = !DILocation(line: 799, column: 19, scope: !4129)
!4132 = !DILocation(line: 799, column: 17, scope: !4129)
!4133 = !DILocation(line: 800, column: 17, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4129, file: !939, line: 800, column: 17)
!4135 = !DILocation(line: 800, column: 21, scope: !4134)
!4136 = !DILocation(line: 800, column: 17, scope: !4129)
!4137 = !DILocation(line: 801, column: 17, scope: !4134)
!4138 = !DILocation(line: 802, column: 25, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4129, file: !939, line: 802, column: 17)
!4140 = !DILocation(line: 802, column: 18, scope: !4139)
!4141 = !DILocation(line: 802, column: 17, scope: !4129)
!4142 = !DILocation(line: 803, column: 17, scope: !4139)
!4143 = !DILocation(line: 803, column: 22, scope: !4139)
!4144 = !DILocation(line: 803, column: 27, scope: !4139)
!4145 = !DILocation(line: 804, column: 30, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4139, file: !939, line: 804, column: 22)
!4147 = !DILocation(line: 804, column: 23, scope: !4146)
!4148 = !DILocation(line: 804, column: 22, scope: !4139)
!4149 = !DILocation(line: 805, column: 17, scope: !4146)
!4150 = !DILocation(line: 805, column: 22, scope: !4146)
!4151 = !DILocation(line: 805, column: 27, scope: !4146)
!4152 = !DILocation(line: 806, column: 9, scope: !4129)
!4153 = !DILocation(line: 806, column: 32, scope: !4154)
!4154 = !DILexicalBlockFile(scope: !3767, file: !939, discriminator: 1)
!4155 = !DILocation(line: 806, column: 20, scope: !4154)
!4156 = !DILocalVariable(name: "info", scope: !3779, file: !939, line: 807, type: !4157)
!4157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_section_info", file: !939, line: 394, size: 33024, align: 8, elements: !4158)
!4158 = !{!4159, !4160}
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !4157, file: !939, line: 395, baseType: !2249, size: 32768, align: 8)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "byterange", scope: !4157, file: !939, line: 396, baseType: !4161, size: 256, align: 8, offset: 32768)
!4161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 256, align: 8, elements: !4162)
!4162 = !{!4163}
!4163 = !DISubrange(count: 32)
!4164 = !DILocation(line: 807, column: 38, scope: !3779)
!4165 = !DILocation(line: 808, column: 35, scope: !3779)
!4166 = !DILocation(line: 808, column: 44, scope: !3779)
!4167 = !DILocation(line: 808, column: 19, scope: !3779)
!4168 = !DILocation(line: 808, column: 17, scope: !3779)
!4169 = !DILocation(line: 809, column: 17, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !3779, file: !939, line: 809, column: 17)
!4171 = !DILocation(line: 809, column: 21, scope: !4170)
!4172 = !DILocation(line: 809, column: 17, scope: !3779)
!4173 = !DILocation(line: 810, column: 17, scope: !4170)
!4174 = !DILocation(line: 811, column: 32, scope: !3779)
!4175 = !DILocation(line: 812, column: 32, scope: !3779)
!4176 = !DILocation(line: 811, column: 13, scope: !3779)
!4177 = !DILocation(line: 813, column: 49, scope: !3779)
!4178 = !DILocation(line: 813, column: 61, scope: !3779)
!4179 = !DILocation(line: 813, column: 32, scope: !3779)
!4180 = !DILocation(line: 813, column: 30, scope: !3779)
!4181 = !DILocation(line: 814, column: 42, scope: !3779)
!4182 = !DILocation(line: 814, column: 13, scope: !3779)
!4183 = !DILocation(line: 814, column: 31, scope: !3779)
!4184 = !DILocation(line: 814, column: 40, scope: !3779)
!4185 = !DILocation(line: 815, column: 17, scope: !3778)
!4186 = !DILocation(line: 815, column: 17, scope: !3779)
!4187 = !DILocation(line: 816, column: 24, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !3778, file: !939, line: 815, column: 25)
!4189 = !DILocation(line: 816, column: 42, scope: !4188)
!4190 = !DILocation(line: 816, column: 17, scope: !4188)
!4191 = !DILocation(line: 817, column: 13, scope: !4188)
!4192 = !DILocalVariable(name: "seq", scope: !3777, file: !939, line: 818, type: !963)
!4193 = !DILocation(line: 818, column: 21, scope: !3777)
!4194 = !DILocation(line: 818, column: 27, scope: !3777)
!4195 = !DILocation(line: 818, column: 32, scope: !3777)
!4196 = !DILocation(line: 818, column: 47, scope: !3777)
!4197 = !DILocation(line: 818, column: 52, scope: !3777)
!4198 = !DILocation(line: 818, column: 45, scope: !3777)
!4199 = !DILocation(line: 819, column: 24, scope: !3777)
!4200 = !DILocation(line: 819, column: 42, scope: !3777)
!4201 = !DILocation(line: 819, column: 17, scope: !3777)
!4202 = !DILocation(line: 820, column: 90, scope: !3777)
!4203 = !DILocation(line: 820, column: 79, scope: !3777)
!4204 = !DILocation(line: 68, column: 16, scope: !3751, inlinedAt: !3776)
!4205 = !DILocation(line: 68, column: 19, scope: !3751, inlinedAt: !3776)
!4206 = !DILocation(line: 68, column: 24, scope: !3751, inlinedAt: !3776)
!4207 = !DILocation(line: 68, column: 38, scope: !3751, inlinedAt: !3776)
!4208 = !DILocation(line: 68, column: 41, scope: !3751, inlinedAt: !3776)
!4209 = !DILocation(line: 68, column: 46, scope: !3751, inlinedAt: !3776)
!4210 = !DILocation(line: 68, column: 34, scope: !3751, inlinedAt: !3776)
!4211 = !DILocation(line: 68, column: 57, scope: !3751, inlinedAt: !3776)
!4212 = !DILocation(line: 68, column: 69, scope: !3751, inlinedAt: !3776)
!4213 = !DILocation(line: 68, column: 72, scope: !3751, inlinedAt: !3776)
!4214 = !DILocation(line: 68, column: 79, scope: !3751, inlinedAt: !3776)
!4215 = !DILocation(line: 68, column: 84, scope: !3751, inlinedAt: !3776)
!4216 = !DILocation(line: 68, column: 99, scope: !3751, inlinedAt: !3776)
!4217 = !DILocation(line: 68, column: 102, scope: !3751, inlinedAt: !3776)
!4218 = !DILocation(line: 68, column: 109, scope: !3751, inlinedAt: !3776)
!4219 = !DILocation(line: 68, column: 114, scope: !3751, inlinedAt: !3776)
!4220 = !DILocation(line: 68, column: 94, scope: !3751, inlinedAt: !3776)
!4221 = !DILocation(line: 68, column: 63, scope: !3751, inlinedAt: !3776)
!4222 = !DILocation(line: 820, column: 44, scope: !3777)
!4223 = !DILocation(line: 820, column: 62, scope: !3777)
!4224 = !DILocation(line: 820, column: 65, scope: !3777)
!4225 = !DILocation(line: 820, column: 73, scope: !3777)
!4226 = !DILocation(line: 820, column: 76, scope: !3777)
!4227 = !DILocation(line: 823, column: 17, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !3779, file: !939, line: 823, column: 17)
!4229 = !DILocation(line: 823, column: 26, scope: !4228)
!4230 = !DILocation(line: 823, column: 17, scope: !3779)
!4231 = !DILocation(line: 824, column: 38, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4228, file: !939, line: 823, column: 39)
!4233 = !DILocation(line: 824, column: 64, scope: !4232)
!4234 = !DILocation(line: 824, column: 69, scope: !4232)
!4235 = !DILocation(line: 824, column: 17, scope: !4232)
!4236 = !DILocation(line: 825, column: 51, scope: !4232)
!4237 = !DILocation(line: 825, column: 41, scope: !4232)
!4238 = !DILocation(line: 825, column: 17, scope: !4232)
!4239 = !DILocation(line: 825, column: 35, scope: !4232)
!4240 = !DILocation(line: 825, column: 39, scope: !4232)
!4241 = !DILocation(line: 826, column: 22, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4232, file: !939, line: 826, column: 21)
!4243 = !DILocation(line: 826, column: 40, scope: !4242)
!4244 = !DILocation(line: 826, column: 21, scope: !4232)
!4245 = !DILocation(line: 827, column: 29, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4242, file: !939, line: 826, column: 45)
!4247 = !DILocation(line: 827, column: 21, scope: !4246)
!4248 = !DILocation(line: 828, column: 25, scope: !4246)
!4249 = !DILocation(line: 829, column: 21, scope: !4246)
!4250 = !DILocation(line: 831, column: 13, scope: !4232)
!4251 = !DILocation(line: 832, column: 17, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4228, file: !939, line: 831, column: 20)
!4253 = !DILocation(line: 832, column: 35, scope: !4252)
!4254 = !DILocation(line: 832, column: 39, scope: !4252)
!4255 = !DILocation(line: 835, column: 9, scope: !3779)
!4256 = !DILocation(line: 835, column: 32, scope: !4257)
!4257 = !DILexicalBlockFile(scope: !3766, file: !939, discriminator: 1)
!4258 = !DILocation(line: 835, column: 20, scope: !4257)
!4259 = !DILocation(line: 836, column: 17, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4261, file: !939, line: 836, column: 17)
!4261 = distinct !DILexicalBlock(scope: !3766, file: !939, line: 835, column: 63)
!4262 = !DILocation(line: 836, column: 17, scope: !4261)
!4263 = !DILocation(line: 837, column: 17, scope: !4260)
!4264 = !DILocation(line: 837, column: 22, scope: !4260)
!4265 = !DILocation(line: 837, column: 31, scope: !4260)
!4266 = !DILocation(line: 838, column: 9, scope: !4261)
!4267 = !DILocation(line: 838, column: 32, scope: !4268)
!4268 = !DILexicalBlockFile(scope: !3765, file: !939, discriminator: 1)
!4269 = !DILocation(line: 838, column: 20, scope: !4268)
!4270 = !DILocation(line: 839, column: 24, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !3765, file: !939, line: 838, column: 57)
!4272 = !DILocation(line: 840, column: 29, scope: !4271)
!4273 = !DILocation(line: 840, column: 24, scope: !4271)
!4274 = !DILocation(line: 840, column: 34, scope: !4271)
!4275 = !DILocation(line: 840, column: 22, scope: !4271)
!4276 = !DILocation(line: 841, column: 9, scope: !4271)
!4277 = !DILocation(line: 841, column: 32, scope: !4278)
!4278 = !DILexicalBlockFile(scope: !3764, file: !939, discriminator: 1)
!4279 = !DILocation(line: 841, column: 20, scope: !4278)
!4280 = !DILocation(line: 842, column: 32, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !3764, file: !939, line: 841, column: 66)
!4282 = !DILocation(line: 842, column: 24, scope: !4281)
!4283 = !DILocation(line: 842, column: 22, scope: !4281)
!4284 = !DILocation(line: 843, column: 26, scope: !4281)
!4285 = !DILocation(line: 843, column: 19, scope: !4281)
!4286 = !DILocation(line: 843, column: 17, scope: !4281)
!4287 = !DILocation(line: 844, column: 17, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4281, file: !939, line: 844, column: 17)
!4289 = !DILocation(line: 844, column: 17, scope: !4281)
!4290 = !DILocation(line: 845, column: 38, scope: !4288)
!4291 = !DILocation(line: 845, column: 41, scope: !4288)
!4292 = !DILocation(line: 845, column: 30, scope: !4288)
!4293 = !DILocation(line: 845, column: 28, scope: !4288)
!4294 = !DILocation(line: 845, column: 17, scope: !4288)
!4295 = !DILocation(line: 846, column: 9, scope: !4281)
!4296 = !DILocation(line: 846, column: 32, scope: !4297)
!4297 = !DILexicalBlockFile(scope: !3763, file: !939, discriminator: 1)
!4298 = !DILocation(line: 846, column: 20, scope: !4297)
!4299 = !DILocation(line: 847, column: 13, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !3763, file: !939, line: 846, column: 49)
!4301 = distinct !{!4301, !3979}
!4302 = !DILocation(line: 848, column: 20, scope: !3762)
!4303 = !DILocation(line: 848, column: 20, scope: !3763)
!4304 = !DILocation(line: 849, column: 17, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !3761, file: !939, line: 849, column: 17)
!4306 = !DILocation(line: 849, column: 17, scope: !3761)
!4307 = !DILocation(line: 850, column: 34, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !939, line: 850, column: 21)
!4309 = distinct !DILexicalBlock(scope: !4305, file: !939, line: 849, column: 29)
!4310 = !DILocation(line: 850, column: 52, scope: !4308)
!4311 = !DILocation(line: 850, column: 58, scope: !4308)
!4312 = !DILocation(line: 850, column: 22, scope: !4308)
!4313 = !DILocation(line: 850, column: 21, scope: !4309)
!4314 = !DILocation(line: 851, column: 25, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4308, file: !939, line: 850, column: 64)
!4316 = !DILocation(line: 852, column: 21, scope: !4315)
!4317 = !DILocation(line: 854, column: 28, scope: !4309)
!4318 = !DILocation(line: 855, column: 13, scope: !4309)
!4319 = !DILocation(line: 856, column: 17, scope: !3760)
!4320 = !DILocation(line: 856, column: 17, scope: !3761)
!4321 = !DILocalVariable(name: "seg", scope: !3759, file: !939, line: 857, type: !2272)
!4322 = !DILocation(line: 857, column: 33, scope: !3759)
!4323 = !DILocation(line: 858, column: 22, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !3759, file: !939, line: 858, column: 21)
!4325 = !DILocation(line: 858, column: 21, scope: !3759)
!4326 = !DILocation(line: 859, column: 38, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4328, file: !939, line: 859, column: 25)
!4328 = distinct !DILexicalBlock(scope: !4324, file: !939, line: 858, column: 27)
!4329 = !DILocation(line: 859, column: 44, scope: !4327)
!4330 = !DILocation(line: 859, column: 26, scope: !4327)
!4331 = !DILocation(line: 859, column: 25, scope: !4328)
!4332 = !DILocation(line: 860, column: 29, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4327, file: !939, line: 859, column: 55)
!4334 = !DILocation(line: 861, column: 25, scope: !4333)
!4335 = !DILocation(line: 863, column: 40, scope: !4328)
!4336 = !DILocation(line: 863, column: 43, scope: !4328)
!4337 = !DILocation(line: 863, column: 55, scope: !4328)
!4338 = !DILocation(line: 863, column: 27, scope: !4328)
!4339 = !DILocation(line: 863, column: 30, scope: !4328)
!4340 = !DILocation(line: 863, column: 25, scope: !4328)
!4341 = !DILocation(line: 864, column: 17, scope: !4328)
!4342 = !DILocation(line: 865, column: 23, scope: !3759)
!4343 = !DILocation(line: 865, column: 21, scope: !3759)
!4344 = !DILocation(line: 866, column: 22, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !3759, file: !939, line: 866, column: 21)
!4346 = !DILocation(line: 866, column: 21, scope: !3759)
!4347 = !DILocation(line: 867, column: 25, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4345, file: !939, line: 866, column: 27)
!4349 = !DILocation(line: 868, column: 21, scope: !4348)
!4350 = !DILocation(line: 870, column: 33, scope: !3759)
!4351 = !DILocation(line: 870, column: 17, scope: !3759)
!4352 = !DILocation(line: 870, column: 22, scope: !3759)
!4353 = !DILocation(line: 870, column: 31, scope: !3759)
!4354 = !DILocation(line: 871, column: 33, scope: !3759)
!4355 = !DILocation(line: 871, column: 17, scope: !3759)
!4356 = !DILocation(line: 871, column: 22, scope: !3759)
!4357 = !DILocation(line: 871, column: 31, scope: !3759)
!4358 = !DILocation(line: 872, column: 21, scope: !3758)
!4359 = !DILocation(line: 872, column: 21, scope: !3759)
!4360 = !DILocation(line: 873, column: 28, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !3758, file: !939, line: 872, column: 29)
!4362 = !DILocation(line: 873, column: 33, scope: !4361)
!4363 = !DILocation(line: 873, column: 21, scope: !4361)
!4364 = !DILocation(line: 874, column: 17, scope: !4361)
!4365 = !DILocalVariable(name: "seq", scope: !3757, file: !939, line: 875, type: !963)
!4366 = !DILocation(line: 875, column: 25, scope: !3757)
!4367 = !DILocation(line: 875, column: 31, scope: !3757)
!4368 = !DILocation(line: 875, column: 36, scope: !3757)
!4369 = !DILocation(line: 875, column: 51, scope: !3757)
!4370 = !DILocation(line: 875, column: 56, scope: !3757)
!4371 = !DILocation(line: 875, column: 49, scope: !3757)
!4372 = !DILocation(line: 876, column: 28, scope: !3757)
!4373 = !DILocation(line: 876, column: 33, scope: !3757)
!4374 = !DILocation(line: 876, column: 21, scope: !3757)
!4375 = !DILocation(line: 877, column: 81, scope: !3757)
!4376 = !DILocation(line: 877, column: 70, scope: !3757)
!4377 = !DILocation(line: 68, column: 16, scope: !3751, inlinedAt: !3756)
!4378 = !DILocation(line: 68, column: 19, scope: !3751, inlinedAt: !3756)
!4379 = !DILocation(line: 68, column: 24, scope: !3751, inlinedAt: !3756)
!4380 = !DILocation(line: 68, column: 38, scope: !3751, inlinedAt: !3756)
!4381 = !DILocation(line: 68, column: 41, scope: !3751, inlinedAt: !3756)
!4382 = !DILocation(line: 68, column: 46, scope: !3751, inlinedAt: !3756)
!4383 = !DILocation(line: 68, column: 34, scope: !3751, inlinedAt: !3756)
!4384 = !DILocation(line: 68, column: 57, scope: !3751, inlinedAt: !3756)
!4385 = !DILocation(line: 68, column: 69, scope: !3751, inlinedAt: !3756)
!4386 = !DILocation(line: 68, column: 72, scope: !3751, inlinedAt: !3756)
!4387 = !DILocation(line: 68, column: 79, scope: !3751, inlinedAt: !3756)
!4388 = !DILocation(line: 68, column: 84, scope: !3751, inlinedAt: !3756)
!4389 = !DILocation(line: 68, column: 99, scope: !3751, inlinedAt: !3756)
!4390 = !DILocation(line: 68, column: 102, scope: !3751, inlinedAt: !3756)
!4391 = !DILocation(line: 68, column: 109, scope: !3751, inlinedAt: !3756)
!4392 = !DILocation(line: 68, column: 114, scope: !3751, inlinedAt: !3756)
!4393 = !DILocation(line: 68, column: 94, scope: !3751, inlinedAt: !3756)
!4394 = !DILocation(line: 68, column: 63, scope: !3751, inlinedAt: !3756)
!4395 = !DILocation(line: 877, column: 48, scope: !3757)
!4396 = !DILocation(line: 877, column: 53, scope: !3757)
!4397 = !DILocation(line: 877, column: 56, scope: !3757)
!4398 = !DILocation(line: 877, column: 64, scope: !3757)
!4399 = !DILocation(line: 877, column: 67, scope: !3757)
!4400 = !DILocation(line: 880, column: 21, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !3759, file: !939, line: 880, column: 21)
!4402 = !DILocation(line: 880, column: 30, scope: !4401)
!4403 = !DILocation(line: 880, column: 21, scope: !3759)
!4404 = !DILocation(line: 881, column: 42, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4401, file: !939, line: 880, column: 43)
!4406 = !DILocation(line: 881, column: 68, scope: !4405)
!4407 = !DILocation(line: 881, column: 73, scope: !4405)
!4408 = !DILocation(line: 881, column: 21, scope: !4405)
!4409 = !DILocation(line: 882, column: 42, scope: !4405)
!4410 = !DILocation(line: 882, column: 32, scope: !4405)
!4411 = !DILocation(line: 882, column: 21, scope: !4405)
!4412 = !DILocation(line: 882, column: 26, scope: !4405)
!4413 = !DILocation(line: 882, column: 30, scope: !4405)
!4414 = !DILocation(line: 883, column: 26, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4405, file: !939, line: 883, column: 25)
!4416 = !DILocation(line: 883, column: 31, scope: !4415)
!4417 = !DILocation(line: 883, column: 25, scope: !4405)
!4418 = !DILocation(line: 884, column: 33, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4415, file: !939, line: 883, column: 36)
!4420 = !DILocation(line: 884, column: 25, scope: !4419)
!4421 = !DILocation(line: 885, column: 29, scope: !4419)
!4422 = !DILocation(line: 886, column: 25, scope: !4419)
!4423 = !DILocation(line: 888, column: 17, scope: !4405)
!4424 = !DILocation(line: 889, column: 21, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4401, file: !939, line: 888, column: 24)
!4426 = !DILocation(line: 889, column: 26, scope: !4425)
!4427 = !DILocation(line: 889, column: 30, scope: !4425)
!4428 = !DILocation(line: 892, column: 38, scope: !3759)
!4429 = !DILocation(line: 892, column: 64, scope: !3759)
!4430 = !DILocation(line: 892, column: 69, scope: !3759)
!4431 = !DILocation(line: 892, column: 17, scope: !3759)
!4432 = !DILocation(line: 893, column: 38, scope: !3759)
!4433 = !DILocation(line: 893, column: 28, scope: !3759)
!4434 = !DILocation(line: 893, column: 17, scope: !3759)
!4435 = !DILocation(line: 893, column: 22, scope: !3759)
!4436 = !DILocation(line: 893, column: 26, scope: !3759)
!4437 = !DILocation(line: 894, column: 22, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !3759, file: !939, line: 894, column: 21)
!4439 = !DILocation(line: 894, column: 27, scope: !4438)
!4440 = !DILocation(line: 894, column: 21, scope: !3759)
!4441 = !DILocation(line: 895, column: 29, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4438, file: !939, line: 894, column: 32)
!4443 = !DILocation(line: 895, column: 34, scope: !4442)
!4444 = !DILocation(line: 895, column: 21, scope: !4442)
!4445 = !DILocation(line: 896, column: 29, scope: !4442)
!4446 = !DILocation(line: 896, column: 21, scope: !4442)
!4447 = !DILocation(line: 897, column: 25, scope: !4442)
!4448 = !DILocation(line: 898, column: 21, scope: !4442)
!4449 = !DILocation(line: 901, column: 17, scope: !3759)
!4450 = distinct !{!4450, !4449}
!4451 = !DILocalVariable(name: "_tab", scope: !4452, file: !939, line: 901, type: !4453)
!4452 = distinct !DILexicalBlock(scope: !3759, file: !939, line: 901, column: 20)
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64, align: 64)
!4454 = !DILocation(line: 901, column: 49, scope: !4452)
!4455 = !DILocation(line: 901, column: 58, scope: !4456)
!4456 = !DILexicalBlockFile(scope: !4452, file: !939, discriminator: 1)
!4457 = !DILocation(line: 901, column: 63, scope: !4456)
!4458 = !DILocation(line: 901, column: 49, scope: !4456)
!4459 = !DILocalVariable(name: "_elem", scope: !4452, file: !939, line: 901, type: !2272)
!4460 = !DILocation(line: 901, column: 90, scope: !4452)
!4461 = !DILocation(line: 901, column: 99, scope: !4456)
!4462 = !DILocation(line: 901, column: 90, scope: !4456)
!4463 = !DILocation(line: 901, column: 152, scope: !4456)
!4464 = !DILocation(line: 901, column: 159, scope: !4456)
!4465 = !DILocation(line: 901, column: 164, scope: !4456)
!4466 = !DILocation(line: 901, column: 176, scope: !4456)
!4467 = !DILocation(line: 901, column: 136, scope: !4456)
!4468 = !DILocation(line: 901, column: 183, scope: !4456)
!4469 = !DILocation(line: 902, column: 28, scope: !3759)
!4470 = !DILocation(line: 904, column: 29, scope: !3759)
!4471 = !DILocation(line: 904, column: 17, scope: !3759)
!4472 = !DILocation(line: 904, column: 22, scope: !3759)
!4473 = !DILocation(line: 904, column: 27, scope: !3759)
!4474 = !DILocation(line: 905, column: 21, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !3759, file: !939, line: 905, column: 21)
!4476 = !DILocation(line: 905, column: 30, scope: !4475)
!4477 = !DILocation(line: 905, column: 21, scope: !3759)
!4478 = !DILocation(line: 906, column: 39, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4475, file: !939, line: 905, column: 36)
!4480 = !DILocation(line: 906, column: 21, scope: !4479)
!4481 = !DILocation(line: 906, column: 26, scope: !4479)
!4482 = !DILocation(line: 906, column: 37, scope: !4479)
!4483 = !DILocation(line: 907, column: 35, scope: !4479)
!4484 = !DILocation(line: 907, column: 32, scope: !4479)
!4485 = !DILocation(line: 908, column: 30, scope: !4479)
!4486 = !DILocation(line: 909, column: 17, scope: !4479)
!4487 = !DILocation(line: 910, column: 21, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4475, file: !939, line: 909, column: 24)
!4489 = !DILocation(line: 910, column: 26, scope: !4488)
!4490 = !DILocation(line: 910, column: 37, scope: !4488)
!4491 = !DILocation(line: 911, column: 32, scope: !4488)
!4492 = !DILocation(line: 914, column: 37, scope: !3759)
!4493 = !DILocation(line: 914, column: 17, scope: !3759)
!4494 = !DILocation(line: 914, column: 22, scope: !3759)
!4495 = !DILocation(line: 914, column: 35, scope: !3759)
!4496 = !DILocation(line: 915, column: 13, scope: !3759)
!4497 = !DILocation(line: 916, column: 9, scope: !3761)
!4498 = !DILocation(line: 761, column: 5, scope: !4499)
!4499 = !DILexicalBlockFile(scope: !3747, file: !939, discriminator: 2)
!4500 = !DILocation(line: 918, column: 9, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !3747, file: !939, line: 918, column: 9)
!4502 = !DILocation(line: 918, column: 9, scope: !3747)
!4503 = !DILocation(line: 919, column: 13, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4505, file: !939, line: 919, column: 13)
!4505 = distinct !DILexicalBlock(scope: !4501, file: !939, line: 918, column: 24)
!4506 = !DILocation(line: 919, column: 18, scope: !4504)
!4507 = !DILocation(line: 919, column: 33, scope: !4504)
!4508 = !DILocation(line: 919, column: 31, scope: !4504)
!4509 = !DILocation(line: 919, column: 51, scope: !4504)
!4510 = !DILocation(line: 919, column: 54, scope: !4511)
!4511 = !DILexicalBlockFile(scope: !4504, file: !939, discriminator: 1)
!4512 = !DILocation(line: 919, column: 57, scope: !4511)
!4513 = !DILocation(line: 919, column: 73, scope: !4511)
!4514 = !DILocation(line: 919, column: 13, scope: !4511)
!4515 = !DILocalVariable(name: "prev_timestamp", scope: !4516, file: !939, line: 920, type: !959)
!4516 = distinct !DILexicalBlock(scope: !4504, file: !939, line: 919, column: 109)
!4517 = !DILocation(line: 920, column: 21, scope: !4516)
!4518 = !DILocation(line: 920, column: 38, scope: !4516)
!4519 = !DILocation(line: 920, column: 41, scope: !4516)
!4520 = !DILocalVariable(name: "i", scope: !4516, file: !939, line: 921, type: !963)
!4521 = !DILocation(line: 921, column: 17, scope: !4516)
!4522 = !DILocalVariable(name: "diff", scope: !4516, file: !939, line: 921, type: !963)
!4523 = !DILocation(line: 921, column: 20, scope: !4516)
!4524 = !DILocation(line: 921, column: 27, scope: !4516)
!4525 = !DILocation(line: 921, column: 32, scope: !4516)
!4526 = !DILocation(line: 921, column: 47, scope: !4516)
!4527 = !DILocation(line: 921, column: 45, scope: !4516)
!4528 = !DILocation(line: 922, column: 20, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4516, file: !939, line: 922, column: 13)
!4530 = !DILocation(line: 922, column: 18, scope: !4529)
!4531 = !DILocation(line: 922, column: 25, scope: !4532)
!4532 = !DILexicalBlockFile(scope: !4533, file: !939, discriminator: 1)
!4533 = distinct !DILexicalBlock(scope: !4529, file: !939, line: 922, column: 13)
!4534 = !DILocation(line: 922, column: 29, scope: !4532)
!4535 = !DILocation(line: 922, column: 27, scope: !4532)
!4536 = !DILocation(line: 922, column: 45, scope: !4532)
!4537 = !DILocation(line: 922, column: 48, scope: !4538)
!4538 = !DILexicalBlockFile(scope: !4533, file: !939, discriminator: 2)
!4539 = !DILocation(line: 922, column: 52, scope: !4538)
!4540 = !DILocation(line: 922, column: 50, scope: !4538)
!4541 = !DILocation(line: 922, column: 13, scope: !4542)
!4542 = !DILexicalBlockFile(scope: !4529, file: !939, discriminator: 3)
!4543 = !DILocation(line: 923, column: 53, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4533, file: !939, line: 922, column: 63)
!4545 = !DILocation(line: 923, column: 39, scope: !4544)
!4546 = !DILocation(line: 923, column: 57, scope: !4544)
!4547 = !DILocation(line: 923, column: 17, scope: !4544)
!4548 = !DILocation(line: 923, column: 20, scope: !4544)
!4549 = !DILocation(line: 923, column: 36, scope: !4544)
!4550 = !DILocation(line: 924, column: 13, scope: !4544)
!4551 = !DILocation(line: 922, column: 59, scope: !4552)
!4552 = !DILexicalBlockFile(scope: !4533, file: !939, discriminator: 4)
!4553 = !DILocation(line: 922, column: 13, scope: !4552)
!4554 = distinct !{!4554, !4555}
!4555 = !DILocation(line: 922, column: 13, scope: !4516)
!4556 = !DILocation(line: 925, column: 20, scope: !4516)
!4557 = !DILocation(line: 925, column: 23, scope: !4516)
!4558 = !DILocation(line: 927, column: 20, scope: !4516)
!4559 = !DILocation(line: 927, column: 39, scope: !4516)
!4560 = !DILocation(line: 927, column: 44, scope: !4516)
!4561 = !DILocation(line: 928, column: 20, scope: !4516)
!4562 = !DILocation(line: 928, column: 36, scope: !4516)
!4563 = !DILocation(line: 928, column: 39, scope: !4516)
!4564 = !DILocation(line: 925, column: 13, scope: !4516)
!4565 = !DILocation(line: 929, column: 9, scope: !4516)
!4566 = !DILocation(line: 929, column: 20, scope: !4567)
!4567 = !DILexicalBlockFile(scope: !4568, file: !939, discriminator: 1)
!4568 = distinct !DILexicalBlock(scope: !4504, file: !939, line: 929, column: 20)
!4569 = !DILocation(line: 929, column: 25, scope: !4567)
!4570 = !DILocation(line: 929, column: 40, scope: !4567)
!4571 = !DILocation(line: 929, column: 38, scope: !4567)
!4572 = !DILocation(line: 930, column: 20, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4568, file: !939, line: 929, column: 59)
!4574 = !DILocation(line: 930, column: 23, scope: !4573)
!4575 = !DILocation(line: 931, column: 20, scope: !4573)
!4576 = !DILocation(line: 931, column: 39, scope: !4573)
!4577 = !DILocation(line: 931, column: 44, scope: !4573)
!4578 = !DILocation(line: 930, column: 13, scope: !4573)
!4579 = !DILocation(line: 932, column: 9, scope: !4573)
!4580 = !DILocation(line: 933, column: 31, scope: !4505)
!4581 = !DILocation(line: 933, column: 46, scope: !4505)
!4582 = !DILocation(line: 933, column: 9, scope: !4505)
!4583 = !DILocation(line: 934, column: 18, scope: !4505)
!4584 = !DILocation(line: 934, column: 9, scope: !4505)
!4585 = !DILocation(line: 935, column: 5, scope: !4505)
!4586 = !DILocation(line: 936, column: 9, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !3747, file: !939, line: 936, column: 9)
!4588 = !DILocation(line: 936, column: 9, scope: !3747)
!4589 = !DILocation(line: 937, column: 31, scope: !4587)
!4590 = !DILocation(line: 937, column: 9, scope: !4587)
!4591 = !DILocation(line: 937, column: 14, scope: !4587)
!4592 = !DILocation(line: 937, column: 29, scope: !4587)
!4593 = !DILocation(line: 936, column: 9, scope: !4594)
!4594 = !DILexicalBlockFile(scope: !4587, file: !939, discriminator: 1)
!4595 = !DILocation(line: 940, column: 13, scope: !3747)
!4596 = !DILocation(line: 940, column: 5, scope: !3747)
!4597 = !DILocation(line: 941, column: 9, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !3747, file: !939, line: 941, column: 9)
!4599 = !DILocation(line: 941, column: 9, scope: !3747)
!4600 = !DILocation(line: 942, column: 28, scope: !4598)
!4601 = !DILocation(line: 942, column: 31, scope: !4598)
!4602 = !DILocation(line: 942, column: 9, scope: !4598)
!4603 = !DILocation(line: 943, column: 25, scope: !3747)
!4604 = !DILocation(line: 943, column: 28, scope: !3747)
!4605 = !DILocation(line: 943, column: 33, scope: !3747)
!4606 = !DILocation(line: 943, column: 43, scope: !3747)
!4607 = !DILocation(line: 943, column: 5, scope: !3747)
!4608 = !DILocation(line: 943, column: 8, scope: !3747)
!4609 = !DILocation(line: 943, column: 13, scope: !3747)
!4610 = !DILocation(line: 943, column: 23, scope: !3747)
!4611 = !DILocation(line: 944, column: 10, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !3747, file: !939, line: 944, column: 9)
!4613 = !DILocation(line: 944, column: 13, scope: !4612)
!4614 = !DILocation(line: 944, column: 24, scope: !4612)
!4615 = !DILocation(line: 944, column: 28, scope: !4616)
!4616 = !DILexicalBlockFile(scope: !4612, file: !939, discriminator: 1)
!4617 = !DILocation(line: 944, column: 31, scope: !4616)
!4618 = !DILocation(line: 944, column: 44, scope: !4616)
!4619 = !DILocation(line: 944, column: 56, scope: !4616)
!4620 = !DILocation(line: 945, column: 11, scope: !4612)
!4621 = !DILocation(line: 945, column: 14, scope: !4612)
!4622 = !DILocation(line: 945, column: 27, scope: !4612)
!4623 = !DILocation(line: 945, column: 41, scope: !4612)
!4624 = !DILocation(line: 945, column: 50, scope: !4612)
!4625 = !DILocation(line: 946, column: 11, scope: !4612)
!4626 = !DILocation(line: 946, column: 14, scope: !4612)
!4627 = !DILocation(line: 946, column: 27, scope: !4612)
!4628 = !DILocation(line: 946, column: 41, scope: !4612)
!4629 = !DILocation(line: 946, column: 46, scope: !4612)
!4630 = !DILocation(line: 944, column: 9, scope: !4499)
!4631 = !DILocation(line: 947, column: 9, scope: !4612)
!4632 = !DILocation(line: 947, column: 12, scope: !4612)
!4633 = !DILocation(line: 947, column: 17, scope: !4612)
!4634 = !DILocation(line: 947, column: 27, scope: !4612)
!4635 = !DILocation(line: 948, column: 12, scope: !3747)
!4636 = !DILocation(line: 948, column: 5, scope: !3747)
!4637 = !DILocation(line: 949, column: 1, scope: !3747)
!4638 = distinct !DISubprogram(name: "add_renditions_to_variant", scope: !939, file: !939, line: 1523, type: !4639, isLocal: true, isDefinition: true, scopeLine: 1525, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{null, !2386, !2396, !658, !970}
!4641 = !DILocalVariable(name: "c", arg: 1, scope: !4638, file: !939, line: 1523, type: !2386)
!4642 = !DILocation(line: 1523, column: 51, scope: !4638)
!4643 = !DILocalVariable(name: "var", arg: 2, scope: !4638, file: !939, line: 1523, type: !2396)
!4644 = !DILocation(line: 1523, column: 70, scope: !4638)
!4645 = !DILocalVariable(name: "type", arg: 3, scope: !4638, file: !939, line: 1524, type: !658)
!4646 = !DILocation(line: 1524, column: 56, scope: !4638)
!4647 = !DILocalVariable(name: "group_id", arg: 4, scope: !4638, file: !939, line: 1524, type: !970)
!4648 = !DILocation(line: 1524, column: 74, scope: !4638)
!4649 = !DILocalVariable(name: "i", scope: !4638, file: !939, line: 1526, type: !963)
!4650 = !DILocation(line: 1526, column: 9, scope: !4638)
!4651 = !DILocation(line: 1528, column: 12, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4638, file: !939, line: 1528, column: 5)
!4653 = !DILocation(line: 1528, column: 10, scope: !4652)
!4654 = !DILocation(line: 1528, column: 17, scope: !4655)
!4655 = !DILexicalBlockFile(scope: !4656, file: !939, discriminator: 1)
!4656 = distinct !DILexicalBlock(scope: !4652, file: !939, line: 1528, column: 5)
!4657 = !DILocation(line: 1528, column: 21, scope: !4655)
!4658 = !DILocation(line: 1528, column: 24, scope: !4655)
!4659 = !DILocation(line: 1528, column: 19, scope: !4655)
!4660 = !DILocation(line: 1528, column: 5, scope: !4655)
!4661 = !DILocalVariable(name: "rend", scope: !4662, file: !939, line: 1529, type: !2321)
!4662 = distinct !DILexicalBlock(scope: !4656, file: !939, line: 1528, column: 43)
!4663 = !DILocation(line: 1529, column: 27, scope: !4662)
!4664 = !DILocation(line: 1529, column: 48, scope: !4662)
!4665 = !DILocation(line: 1529, column: 34, scope: !4662)
!4666 = !DILocation(line: 1529, column: 37, scope: !4662)
!4667 = !DILocation(line: 1531, column: 13, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4662, file: !939, line: 1531, column: 13)
!4669 = !DILocation(line: 1531, column: 19, scope: !4668)
!4670 = !DILocation(line: 1531, column: 27, scope: !4668)
!4671 = !DILocation(line: 1531, column: 24, scope: !4668)
!4672 = !DILocation(line: 1531, column: 32, scope: !4668)
!4673 = !DILocation(line: 1531, column: 43, scope: !4674)
!4674 = !DILexicalBlockFile(scope: !4668, file: !939, discriminator: 1)
!4675 = !DILocation(line: 1531, column: 49, scope: !4674)
!4676 = !DILocation(line: 1531, column: 59, scope: !4674)
!4677 = !DILocation(line: 1531, column: 36, scope: !4674)
!4678 = !DILocation(line: 1531, column: 13, scope: !4674)
!4679 = !DILocation(line: 1533, column: 17, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !939, line: 1533, column: 17)
!4681 = distinct !DILexicalBlock(scope: !4668, file: !939, line: 1531, column: 70)
!4682 = !DILocation(line: 1533, column: 23, scope: !4680)
!4683 = !DILocation(line: 1533, column: 17, scope: !4681)
!4684 = !DILocation(line: 1536, column: 17, scope: !4680)
!4685 = distinct !{!4685, !4684}
!4686 = !DILocalVariable(name: "_tab", scope: !4687, file: !939, line: 1536, type: !4688)
!4687 = distinct !DILexicalBlock(scope: !4680, file: !939, line: 1536, column: 20)
!4688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64, align: 64)
!4689 = !DILocation(line: 1536, column: 50, scope: !4687)
!4690 = !DILocation(line: 1536, column: 59, scope: !4691)
!4691 = !DILexicalBlockFile(scope: !4687, file: !939, discriminator: 1)
!4692 = !DILocation(line: 1536, column: 64, scope: !4691)
!4693 = !DILocation(line: 1536, column: 50, scope: !4691)
!4694 = !DILocalVariable(name: "_elem", scope: !4687, file: !939, line: 1536, type: !2245)
!4695 = !DILocation(line: 1536, column: 103, scope: !4687)
!4696 = !DILocation(line: 1536, column: 112, scope: !4691)
!4697 = !DILocation(line: 1536, column: 118, scope: !4691)
!4698 = !DILocation(line: 1536, column: 103, scope: !4691)
!4699 = !DILocation(line: 1536, column: 176, scope: !4691)
!4700 = !DILocation(line: 1536, column: 183, scope: !4691)
!4701 = !DILocation(line: 1536, column: 188, scope: !4691)
!4702 = !DILocation(line: 1536, column: 201, scope: !4691)
!4703 = !DILocation(line: 1536, column: 160, scope: !4691)
!4704 = !DILocation(line: 1536, column: 208, scope: !4691)
!4705 = !DILocation(line: 1536, column: 208, scope: !4706)
!4706 = !DILexicalBlockFile(scope: !4687, file: !939, discriminator: 2)
!4707 = !DILocation(line: 1540, column: 17, scope: !4680)
!4708 = distinct !{!4708, !4707}
!4709 = !DILocalVariable(name: "_tab", scope: !4710, file: !939, line: 1540, type: !4711)
!4710 = distinct !DILexicalBlock(scope: !4680, file: !939, line: 1540, column: 20)
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64, align: 64)
!4712 = !DILocation(line: 1540, column: 65, scope: !4710)
!4713 = !DILocation(line: 1540, column: 74, scope: !4714)
!4714 = !DILexicalBlockFile(scope: !4710, file: !939, discriminator: 1)
!4715 = !DILocation(line: 1540, column: 79, scope: !4714)
!4716 = !DILocation(line: 1540, column: 93, scope: !4714)
!4717 = !DILocation(line: 1540, column: 65, scope: !4714)
!4718 = !DILocalVariable(name: "_elem", scope: !4710, file: !939, line: 1540, type: !2321)
!4719 = !DILocation(line: 1540, column: 123, scope: !4710)
!4720 = !DILocation(line: 1540, column: 132, scope: !4714)
!4721 = !DILocation(line: 1540, column: 123, scope: !4714)
!4722 = !DILocation(line: 1540, column: 186, scope: !4714)
!4723 = !DILocation(line: 1540, column: 193, scope: !4714)
!4724 = !DILocation(line: 1540, column: 198, scope: !4714)
!4725 = !DILocation(line: 1540, column: 212, scope: !4714)
!4726 = !DILocation(line: 1540, column: 226, scope: !4714)
!4727 = !DILocation(line: 1540, column: 170, scope: !4714)
!4728 = !DILocation(line: 1540, column: 233, scope: !4714)
!4729 = !DILocation(line: 1543, column: 9, scope: !4681)
!4730 = !DILocation(line: 1544, column: 5, scope: !4662)
!4731 = !DILocation(line: 1528, column: 39, scope: !4732)
!4732 = !DILexicalBlockFile(scope: !4656, file: !939, discriminator: 2)
!4733 = !DILocation(line: 1528, column: 5, scope: !4732)
!4734 = distinct !{!4734, !4735}
!4735 = !DILocation(line: 1528, column: 5, scope: !4638)
!4736 = !DILocation(line: 1545, column: 1, scope: !4638)
!4737 = distinct !DISubprogram(name: "select_cur_seq_no", scope: !939, file: !939, line: 1605, type: !4738, isLocal: true, isDefinition: true, scopeLine: 1606, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!4738 = !DISubroutineType(types: !4739)
!4739 = !{!963, !2386, !2245}
!4740 = !DILocalVariable(name: "c", arg: 1, scope: !4737, file: !939, line: 1605, type: !2386)
!4741 = !DILocation(line: 1605, column: 42, scope: !4737)
!4742 = !DILocalVariable(name: "pls", arg: 2, scope: !4737, file: !939, line: 1605, type: !2245)
!4743 = !DILocation(line: 1605, column: 62, scope: !4737)
!4744 = !DILocalVariable(name: "seq_no", scope: !4737, file: !939, line: 1607, type: !963)
!4745 = !DILocation(line: 1607, column: 9, scope: !4737)
!4746 = !DILocation(line: 1609, column: 10, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4737, file: !939, line: 1609, column: 9)
!4748 = !DILocation(line: 1609, column: 15, scope: !4747)
!4749 = !DILocation(line: 1609, column: 24, scope: !4747)
!4750 = !DILocation(line: 1609, column: 28, scope: !4751)
!4751 = !DILexicalBlockFile(scope: !4747, file: !939, discriminator: 1)
!4752 = !DILocation(line: 1609, column: 31, scope: !4751)
!4753 = !DILocation(line: 1609, column: 44, scope: !4751)
!4754 = !DILocation(line: 1610, column: 9, scope: !4747)
!4755 = !DILocation(line: 1610, column: 33, scope: !4747)
!4756 = !DILocation(line: 1610, column: 38, scope: !4747)
!4757 = !DILocation(line: 1610, column: 31, scope: !4747)
!4758 = !DILocation(line: 1610, column: 80, scope: !4747)
!4759 = !DILocation(line: 1610, column: 56, scope: !4751)
!4760 = !DILocation(line: 1610, column: 53, scope: !4747)
!4761 = !DILocation(line: 1609, column: 9, scope: !4762)
!4762 = !DILexicalBlockFile(scope: !4737, file: !939, discriminator: 2)
!4763 = !DILocation(line: 1612, column: 24, scope: !4747)
!4764 = !DILocation(line: 1612, column: 27, scope: !4747)
!4765 = !DILocation(line: 1612, column: 32, scope: !4747)
!4766 = !DILocation(line: 1612, column: 37, scope: !4747)
!4767 = !DILocation(line: 1612, column: 9, scope: !4747)
!4768 = !DILocation(line: 1617, column: 9, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4737, file: !939, line: 1617, column: 9)
!4770 = !DILocation(line: 1617, column: 14, scope: !4769)
!4771 = !DILocation(line: 1617, column: 23, scope: !4769)
!4772 = !DILocation(line: 1617, column: 26, scope: !4773)
!4773 = !DILexicalBlockFile(scope: !4769, file: !939, discriminator: 1)
!4774 = !DILocation(line: 1617, column: 29, scope: !4773)
!4775 = !DILocation(line: 1617, column: 43, scope: !4773)
!4776 = !DILocation(line: 1617, column: 9, scope: !4773)
!4777 = !DILocation(line: 1618, column: 36, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4769, file: !939, line: 1617, column: 79)
!4779 = !DILocation(line: 1618, column: 39, scope: !4778)
!4780 = !DILocation(line: 1618, column: 44, scope: !4778)
!4781 = !DILocation(line: 1618, column: 47, scope: !4778)
!4782 = !DILocation(line: 1618, column: 9, scope: !4778)
!4783 = !DILocation(line: 1619, column: 16, scope: !4778)
!4784 = !DILocation(line: 1619, column: 9, scope: !4778)
!4785 = !DILocation(line: 1622, column: 10, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4737, file: !939, line: 1622, column: 9)
!4787 = !DILocation(line: 1622, column: 15, scope: !4786)
!4788 = !DILocation(line: 1622, column: 9, scope: !4737)
!4789 = !DILocation(line: 1623, column: 14, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !939, line: 1623, column: 13)
!4791 = distinct !DILexicalBlock(scope: !4786, file: !939, line: 1622, column: 25)
!4792 = !DILocation(line: 1623, column: 17, scope: !4790)
!4793 = !DILocation(line: 1623, column: 30, scope: !4790)
!4794 = !DILocation(line: 1624, column: 13, scope: !4790)
!4795 = !DILocation(line: 1624, column: 16, scope: !4790)
!4796 = !DILocation(line: 1624, column: 30, scope: !4790)
!4797 = !DILocation(line: 1624, column: 35, scope: !4790)
!4798 = !DILocation(line: 1624, column: 27, scope: !4790)
!4799 = !DILocation(line: 1624, column: 48, scope: !4790)
!4800 = !DILocation(line: 1625, column: 13, scope: !4790)
!4801 = !DILocation(line: 1625, column: 16, scope: !4790)
!4802 = !DILocation(line: 1625, column: 29, scope: !4790)
!4803 = !DILocation(line: 1625, column: 34, scope: !4790)
!4804 = !DILocation(line: 1625, column: 49, scope: !4790)
!4805 = !DILocation(line: 1625, column: 54, scope: !4790)
!4806 = !DILocation(line: 1625, column: 47, scope: !4790)
!4807 = !DILocation(line: 1625, column: 27, scope: !4790)
!4808 = !DILocation(line: 1623, column: 13, scope: !4809)
!4809 = !DILexicalBlockFile(scope: !4791, file: !939, discriminator: 1)
!4810 = !DILocation(line: 1630, column: 20, scope: !4790)
!4811 = !DILocation(line: 1630, column: 23, scope: !4790)
!4812 = !DILocation(line: 1630, column: 13, scope: !4790)
!4813 = !DILocation(line: 1634, column: 13, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4791, file: !939, line: 1634, column: 13)
!4815 = !DILocation(line: 1634, column: 16, scope: !4814)
!4816 = !DILocation(line: 1634, column: 33, scope: !4814)
!4817 = !DILocation(line: 1634, column: 13, scope: !4791)
!4818 = !DILocation(line: 1635, column: 20, scope: !4814)
!4819 = !DILocation(line: 1635, column: 25, scope: !4814)
!4820 = !DILocation(line: 1635, column: 42, scope: !4814)
!4821 = !DILocation(line: 1635, column: 47, scope: !4814)
!4822 = !DILocation(line: 1635, column: 60, scope: !4814)
!4823 = !DILocation(line: 1635, column: 63, scope: !4814)
!4824 = !DILocation(line: 1635, column: 58, scope: !4814)
!4825 = !DILocation(line: 1635, column: 81, scope: !4814)
!4826 = !DILocation(line: 1635, column: 41, scope: !4814)
!4827 = !DILocation(line: 1635, column: 90, scope: !4828)
!4828 = !DILexicalBlockFile(scope: !4814, file: !939, discriminator: 1)
!4829 = !DILocation(line: 1635, column: 95, scope: !4828)
!4830 = !DILocation(line: 1635, column: 108, scope: !4828)
!4831 = !DILocation(line: 1635, column: 111, scope: !4828)
!4832 = !DILocation(line: 1635, column: 106, scope: !4828)
!4833 = !DILocation(line: 1635, column: 41, scope: !4828)
!4834 = !DILocation(line: 1635, column: 41, scope: !4835)
!4835 = !DILexicalBlockFile(scope: !4814, file: !939, discriminator: 2)
!4836 = !DILocation(line: 1635, column: 41, scope: !4837)
!4837 = !DILexicalBlockFile(scope: !4814, file: !939, discriminator: 3)
!4838 = !DILocation(line: 1635, column: 38, scope: !4837)
!4839 = !DILocation(line: 1635, column: 13, scope: !4837)
!4840 = !DILocation(line: 1637, column: 20, scope: !4814)
!4841 = !DILocation(line: 1637, column: 25, scope: !4814)
!4842 = !DILocation(line: 1637, column: 42, scope: !4814)
!4843 = !DILocation(line: 1637, column: 45, scope: !4814)
!4844 = !DILocation(line: 1637, column: 66, scope: !4814)
!4845 = !DILocation(line: 1637, column: 71, scope: !4814)
!4846 = !DILocation(line: 1637, column: 82, scope: !4814)
!4847 = !DILocation(line: 1637, column: 63, scope: !4814)
!4848 = !DILocation(line: 1637, column: 41, scope: !4814)
!4849 = !DILocation(line: 1637, column: 90, scope: !4828)
!4850 = !DILocation(line: 1637, column: 95, scope: !4828)
!4851 = !DILocation(line: 1637, column: 106, scope: !4828)
!4852 = !DILocation(line: 1637, column: 41, scope: !4828)
!4853 = !DILocation(line: 1637, column: 114, scope: !4835)
!4854 = !DILocation(line: 1637, column: 117, scope: !4835)
!4855 = !DILocation(line: 1637, column: 41, scope: !4835)
!4856 = !DILocation(line: 1637, column: 41, scope: !4837)
!4857 = !DILocation(line: 1637, column: 38, scope: !4837)
!4858 = !DILocation(line: 1637, column: 13, scope: !4837)
!4859 = !DILocation(line: 1641, column: 12, scope: !4737)
!4860 = !DILocation(line: 1641, column: 17, scope: !4737)
!4861 = !DILocation(line: 1641, column: 5, scope: !4737)
!4862 = !DILocation(line: 1642, column: 1, scope: !4737)
!4863 = distinct !DISubprogram(name: "read_data", scope: !939, file: !939, line: 1375, type: !1318, isLocal: true, isDefinition: true, scopeLine: 1376, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!4864 = !DILocalVariable(name: "opaque", arg: 1, scope: !4863, file: !939, line: 1375, type: !962)
!4865 = !DILocation(line: 1375, column: 28, scope: !4863)
!4866 = !DILocalVariable(name: "buf", arg: 2, scope: !4863, file: !939, line: 1375, type: !983)
!4867 = !DILocation(line: 1375, column: 45, scope: !4863)
!4868 = !DILocalVariable(name: "buf_size", arg: 3, scope: !4863, file: !939, line: 1375, type: !963)
!4869 = !DILocation(line: 1375, column: 54, scope: !4863)
!4870 = !DILocalVariable(name: "v", scope: !4863, file: !939, line: 1377, type: !2245)
!4871 = !DILocation(line: 1377, column: 22, scope: !4863)
!4872 = !DILocation(line: 1377, column: 26, scope: !4863)
!4873 = !DILocalVariable(name: "c", scope: !4863, file: !939, line: 1378, type: !2386)
!4874 = !DILocation(line: 1378, column: 17, scope: !4863)
!4875 = !DILocation(line: 1378, column: 21, scope: !4863)
!4876 = !DILocation(line: 1378, column: 24, scope: !4863)
!4877 = !DILocation(line: 1378, column: 32, scope: !4863)
!4878 = !DILocalVariable(name: "ret", scope: !4863, file: !939, line: 1379, type: !963)
!4879 = !DILocation(line: 1379, column: 9, scope: !4863)
!4880 = !DILocalVariable(name: "just_opened", scope: !4863, file: !939, line: 1380, type: !963)
!4881 = !DILocation(line: 1380, column: 9, scope: !4863)
!4882 = !DILocalVariable(name: "reload_count", scope: !4863, file: !939, line: 1381, type: !963)
!4883 = !DILocation(line: 1381, column: 9, scope: !4863)
!4884 = !DILocalVariable(name: "seg", scope: !4863, file: !939, line: 1382, type: !2272)
!4885 = !DILocation(line: 1382, column: 21, scope: !4863)
!4886 = !DILocation(line: 1382, column: 5, scope: !4863)
!4887 = !DILocation(line: 1385, column: 10, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4863, file: !939, line: 1385, column: 9)
!4889 = !DILocation(line: 1385, column: 13, scope: !4888)
!4890 = !DILocation(line: 1385, column: 9, scope: !4863)
!4891 = !DILocation(line: 1386, column: 9, scope: !4888)
!4892 = !DILocation(line: 1388, column: 10, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4863, file: !939, line: 1388, column: 9)
!4894 = !DILocation(line: 1388, column: 13, scope: !4893)
!4895 = !DILocation(line: 1388, column: 19, scope: !4893)
!4896 = !DILocation(line: 1388, column: 23, scope: !4897)
!4897 = !DILexicalBlockFile(scope: !4893, file: !939, discriminator: 1)
!4898 = !DILocation(line: 1388, column: 26, scope: !4897)
!4899 = !DILocation(line: 1388, column: 42, scope: !4897)
!4900 = !DILocation(line: 1388, column: 45, scope: !4901)
!4901 = !DILexicalBlockFile(scope: !4893, file: !939, discriminator: 2)
!4902 = !DILocation(line: 1388, column: 48, scope: !4901)
!4903 = !DILocation(line: 1388, column: 9, scope: !4901)
!4904 = !DILocalVariable(name: "reload_interval", scope: !4905, file: !939, line: 1389, type: !959)
!4905 = distinct !DILexicalBlock(scope: !4893, file: !939, line: 1388, column: 66)
!4906 = !DILocation(line: 1389, column: 17, scope: !4905)
!4907 = !DILocation(line: 1393, column: 37, scope: !4905)
!4908 = !DILocation(line: 1393, column: 21, scope: !4905)
!4909 = !DILocation(line: 1393, column: 9, scope: !4905)
!4910 = !DILocation(line: 1393, column: 12, scope: !4905)
!4911 = !DILocation(line: 1393, column: 19, scope: !4905)
!4912 = !DILocation(line: 1395, column: 14, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4905, file: !939, line: 1395, column: 13)
!4914 = !DILocation(line: 1395, column: 17, scope: !4913)
!4915 = !DILocation(line: 1395, column: 13, scope: !4905)
!4916 = !DILocation(line: 1396, column: 20, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4913, file: !939, line: 1395, column: 25)
!4918 = !DILocation(line: 1396, column: 23, scope: !4917)
!4919 = !DILocation(line: 1397, column: 17, scope: !4917)
!4920 = !DILocation(line: 1397, column: 20, scope: !4917)
!4921 = !DILocation(line: 1396, column: 13, scope: !4917)
!4922 = !DILocation(line: 1398, column: 13, scope: !4917)
!4923 = !DILocation(line: 1403, column: 51, scope: !4905)
!4924 = !DILocation(line: 1403, column: 27, scope: !4905)
!4925 = !DILocation(line: 1403, column: 25, scope: !4905)
!4926 = !DILocation(line: 1403, column: 9, scope: !4905)
!4927 = !DILocation(line: 1406, column: 21, scope: !4905)
!4928 = !DILocation(line: 1407, column: 13, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4905, file: !939, line: 1407, column: 13)
!4930 = !DILocation(line: 1407, column: 28, scope: !4929)
!4931 = !DILocation(line: 1407, column: 31, scope: !4929)
!4932 = !DILocation(line: 1407, column: 26, scope: !4929)
!4933 = !DILocation(line: 1407, column: 13, scope: !4905)
!4934 = !DILocation(line: 1408, column: 13, scope: !4929)
!4935 = !DILocation(line: 1409, column: 14, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4905, file: !939, line: 1409, column: 13)
!4937 = !DILocation(line: 1409, column: 17, scope: !4936)
!4938 = !DILocation(line: 1409, column: 26, scope: !4936)
!4939 = !DILocation(line: 1410, column: 13, scope: !4936)
!4940 = !DILocation(line: 1410, column: 37, scope: !4936)
!4941 = !DILocation(line: 1410, column: 40, scope: !4936)
!4942 = !DILocation(line: 1410, column: 35, scope: !4936)
!4943 = !DILocation(line: 1410, column: 58, scope: !4936)
!4944 = !DILocation(line: 1410, column: 55, scope: !4936)
!4945 = !DILocation(line: 1409, column: 13, scope: !4946)
!4946 = !DILexicalBlockFile(scope: !4905, file: !939, discriminator: 1)
!4947 = !DILocation(line: 1411, column: 39, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4949, file: !939, line: 1411, column: 17)
!4949 = distinct !DILexicalBlock(scope: !4936, file: !939, line: 1410, column: 75)
!4950 = !DILocation(line: 1411, column: 42, scope: !4948)
!4951 = !DILocation(line: 1411, column: 45, scope: !4948)
!4952 = !DILocation(line: 1411, column: 50, scope: !4948)
!4953 = !DILocation(line: 1411, column: 24, scope: !4948)
!4954 = !DILocation(line: 1411, column: 22, scope: !4948)
!4955 = !DILocation(line: 1411, column: 59, scope: !4948)
!4956 = !DILocation(line: 1411, column: 17, scope: !4949)
!4957 = !DILocation(line: 1412, column: 21, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4959, file: !939, line: 1412, column: 21)
!4959 = distinct !DILexicalBlock(scope: !4948, file: !939, line: 1411, column: 64)
!4960 = !DILocation(line: 1412, column: 25, scope: !4958)
!4961 = !DILocation(line: 1412, column: 21, scope: !4959)
!4962 = !DILocation(line: 1413, column: 28, scope: !4958)
!4963 = !DILocation(line: 1413, column: 31, scope: !4958)
!4964 = !DILocation(line: 1414, column: 28, scope: !4958)
!4965 = !DILocation(line: 1414, column: 31, scope: !4958)
!4966 = !DILocation(line: 1413, column: 21, scope: !4958)
!4967 = !DILocation(line: 1415, column: 24, scope: !4959)
!4968 = !DILocation(line: 1415, column: 17, scope: !4959)
!4969 = !DILocation(line: 1420, column: 31, scope: !4949)
!4970 = !DILocation(line: 1420, column: 34, scope: !4949)
!4971 = !DILocation(line: 1420, column: 50, scope: !4949)
!4972 = !DILocation(line: 1420, column: 29, scope: !4949)
!4973 = !DILocation(line: 1421, column: 9, scope: !4949)
!4974 = !DILocation(line: 1422, column: 13, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4905, file: !939, line: 1422, column: 13)
!4976 = !DILocation(line: 1422, column: 16, scope: !4975)
!4977 = !DILocation(line: 1422, column: 29, scope: !4975)
!4978 = !DILocation(line: 1422, column: 32, scope: !4975)
!4979 = !DILocation(line: 1422, column: 27, scope: !4975)
!4980 = !DILocation(line: 1422, column: 13, scope: !4905)
!4981 = !DILocation(line: 1425, column: 20, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4975, file: !939, line: 1422, column: 46)
!4983 = !DILocation(line: 1425, column: 23, scope: !4982)
!4984 = !DILocation(line: 1425, column: 38, scope: !4982)
!4985 = !DILocation(line: 1425, column: 41, scope: !4982)
!4986 = !DILocation(line: 1425, column: 36, scope: !4982)
!4987 = !DILocation(line: 1423, column: 13, scope: !4982)
!4988 = !DILocation(line: 1426, column: 29, scope: !4982)
!4989 = !DILocation(line: 1426, column: 32, scope: !4982)
!4990 = !DILocation(line: 1426, column: 13, scope: !4982)
!4991 = !DILocation(line: 1426, column: 16, scope: !4982)
!4992 = !DILocation(line: 1426, column: 27, scope: !4982)
!4993 = !DILocation(line: 1427, column: 9, scope: !4982)
!4994 = !DILocation(line: 1428, column: 13, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4905, file: !939, line: 1428, column: 13)
!4996 = !DILocation(line: 1428, column: 16, scope: !4995)
!4997 = !DILocation(line: 1428, column: 30, scope: !4995)
!4998 = !DILocation(line: 1428, column: 33, scope: !4995)
!4999 = !DILocation(line: 1428, column: 48, scope: !4995)
!5000 = !DILocation(line: 1428, column: 51, scope: !4995)
!5001 = !DILocation(line: 1428, column: 46, scope: !4995)
!5002 = !DILocation(line: 1428, column: 27, scope: !4995)
!5003 = !DILocation(line: 1428, column: 13, scope: !4905)
!5004 = !DILocation(line: 1429, column: 17, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5006, file: !939, line: 1429, column: 17)
!5006 = distinct !DILexicalBlock(scope: !4995, file: !939, line: 1428, column: 63)
!5007 = !DILocation(line: 1429, column: 20, scope: !5005)
!5008 = !DILocation(line: 1429, column: 17, scope: !5006)
!5009 = !DILocation(line: 1430, column: 17, scope: !5005)
!5010 = !DILocation(line: 1431, column: 13, scope: !5006)
!5011 = !DILocation(line: 1431, column: 20, scope: !5012)
!5012 = !DILexicalBlockFile(scope: !5006, file: !939, discriminator: 1)
!5013 = !DILocation(line: 1431, column: 44, scope: !5012)
!5014 = !DILocation(line: 1431, column: 47, scope: !5012)
!5015 = !DILocation(line: 1431, column: 42, scope: !5012)
!5016 = !DILocation(line: 1431, column: 64, scope: !5012)
!5017 = !DILocation(line: 1431, column: 62, scope: !5012)
!5018 = !DILocation(line: 1431, column: 13, scope: !5012)
!5019 = !DILocation(line: 1432, column: 40, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5021, file: !939, line: 1432, column: 21)
!5021 = distinct !DILexicalBlock(scope: !5006, file: !939, line: 1431, column: 81)
!5022 = !DILocation(line: 1432, column: 43, scope: !5020)
!5023 = !DILocation(line: 1432, column: 21, scope: !5020)
!5024 = !DILocation(line: 1432, column: 21, scope: !5021)
!5025 = !DILocation(line: 1433, column: 21, scope: !5020)
!5026 = !DILocation(line: 1434, column: 17, scope: !5021)
!5027 = !DILocation(line: 1431, column: 13, scope: !5028)
!5028 = !DILexicalBlockFile(scope: !5006, file: !939, discriminator: 2)
!5029 = distinct !{!5029, !5010}
!5030 = !DILocation(line: 1437, column: 13, scope: !5006)
!5031 = !DILocation(line: 1440, column: 9, scope: !4905)
!5032 = !DILocation(line: 1440, column: 12, scope: !4905)
!5033 = !DILocation(line: 1440, column: 28, scope: !4905)
!5034 = !DILocation(line: 1441, column: 31, scope: !4905)
!5035 = !DILocation(line: 1441, column: 15, scope: !4905)
!5036 = !DILocation(line: 1441, column: 13, scope: !4905)
!5037 = !DILocation(line: 1444, column: 35, scope: !4905)
!5038 = !DILocation(line: 1444, column: 38, scope: !4905)
!5039 = !DILocation(line: 1444, column: 15, scope: !4905)
!5040 = !DILocation(line: 1444, column: 13, scope: !4905)
!5041 = !DILocation(line: 1445, column: 13, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !4905, file: !939, line: 1445, column: 13)
!5043 = !DILocation(line: 1445, column: 13, scope: !4905)
!5044 = !DILocation(line: 1446, column: 20, scope: !5042)
!5045 = !DILocation(line: 1446, column: 13, scope: !5042)
!5046 = !DILocation(line: 1448, column: 13, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !4905, file: !939, line: 1448, column: 13)
!5048 = !DILocation(line: 1448, column: 16, scope: !5047)
!5049 = !DILocation(line: 1448, column: 30, scope: !5047)
!5050 = !DILocation(line: 1448, column: 35, scope: !5047)
!5051 = !DILocation(line: 1448, column: 38, scope: !5052)
!5052 = !DILexicalBlockFile(scope: !5047, file: !939, discriminator: 1)
!5053 = !DILocation(line: 1448, column: 41, scope: !5052)
!5054 = !DILocation(line: 1448, column: 13, scope: !5052)
!5055 = !DILocation(line: 1449, column: 13, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5047, file: !939, line: 1448, column: 63)
!5057 = distinct !{!5057, !5055}
!5058 = !DILocalVariable(name: "SWAP_tmp", scope: !5059, file: !939, line: 1449, type: !1306)
!5059 = distinct !DILexicalBlock(scope: !5056, file: !939, line: 1449, column: 15)
!5060 = !DILocation(line: 1449, column: 30, scope: !5059)
!5061 = !DILocation(line: 1449, column: 40, scope: !5062)
!5062 = !DILexicalBlockFile(scope: !5059, file: !939, discriminator: 1)
!5063 = !DILocation(line: 1449, column: 43, scope: !5062)
!5064 = !DILocation(line: 1449, column: 30, scope: !5062)
!5065 = !DILocation(line: 1449, column: 70, scope: !5062)
!5066 = !DILocation(line: 1449, column: 73, scope: !5062)
!5067 = !DILocation(line: 1449, column: 55, scope: !5062)
!5068 = !DILocation(line: 1449, column: 58, scope: !5062)
!5069 = !DILocation(line: 1449, column: 68, scope: !5062)
!5070 = !DILocation(line: 1449, column: 90, scope: !5062)
!5071 = !DILocation(line: 1449, column: 80, scope: !5062)
!5072 = !DILocation(line: 1449, column: 83, scope: !5062)
!5073 = !DILocation(line: 1449, column: 88, scope: !5062)
!5074 = !DILocation(line: 1449, column: 99, scope: !5062)
!5075 = !DILocation(line: 1450, column: 13, scope: !5056)
!5076 = !DILocation(line: 1450, column: 16, scope: !5056)
!5077 = !DILocation(line: 1450, column: 37, scope: !5056)
!5078 = !DILocation(line: 1451, column: 17, scope: !5056)
!5079 = !DILocation(line: 1452, column: 9, scope: !5056)
!5080 = !DILocation(line: 1453, column: 30, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5047, file: !939, line: 1452, column: 16)
!5082 = !DILocation(line: 1453, column: 33, scope: !5081)
!5083 = !DILocation(line: 1453, column: 36, scope: !5081)
!5084 = !DILocation(line: 1453, column: 42, scope: !5081)
!5085 = !DILocation(line: 1453, column: 45, scope: !5081)
!5086 = !DILocation(line: 1453, column: 19, scope: !5081)
!5087 = !DILocation(line: 1453, column: 17, scope: !5081)
!5088 = !DILocation(line: 1455, column: 13, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !4905, file: !939, line: 1455, column: 13)
!5090 = !DILocation(line: 1455, column: 17, scope: !5089)
!5091 = !DILocation(line: 1455, column: 13, scope: !4905)
!5092 = !DILocation(line: 1456, column: 36, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5094, file: !939, line: 1456, column: 17)
!5094 = distinct !DILexicalBlock(scope: !5089, file: !939, line: 1455, column: 22)
!5095 = !DILocation(line: 1456, column: 39, scope: !5093)
!5096 = !DILocation(line: 1456, column: 17, scope: !5093)
!5097 = !DILocation(line: 1456, column: 17, scope: !5094)
!5098 = !DILocation(line: 1457, column: 17, scope: !5093)
!5099 = !DILocation(line: 1458, column: 20, scope: !5094)
!5100 = !DILocation(line: 1458, column: 23, scope: !5094)
!5101 = !DILocation(line: 1459, column: 20, scope: !5094)
!5102 = !DILocation(line: 1459, column: 23, scope: !5094)
!5103 = !DILocation(line: 1460, column: 20, scope: !5094)
!5104 = !DILocation(line: 1460, column: 23, scope: !5094)
!5105 = !DILocation(line: 1458, column: 13, scope: !5094)
!5106 = !DILocation(line: 1461, column: 13, scope: !5094)
!5107 = !DILocation(line: 1461, column: 16, scope: !5094)
!5108 = !DILocation(line: 1461, column: 27, scope: !5094)
!5109 = !DILocation(line: 1462, column: 13, scope: !5094)
!5110 = !DILocation(line: 1464, column: 21, scope: !4905)
!5111 = !DILocation(line: 1465, column: 5, scope: !4905)
!5112 = !DILocation(line: 1467, column: 9, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !4863, file: !939, line: 1467, column: 9)
!5114 = !DILocation(line: 1467, column: 12, scope: !5113)
!5115 = !DILocation(line: 1467, column: 26, scope: !5113)
!5116 = !DILocation(line: 1467, column: 9, scope: !4863)
!5117 = !DILocalVariable(name: "http_version_opt", scope: !5118, file: !939, line: 1468, type: !983)
!5118 = distinct !DILexicalBlock(scope: !5113, file: !939, line: 1467, column: 33)
!5119 = !DILocation(line: 1468, column: 18, scope: !5118)
!5120 = !DILocalVariable(name: "r", scope: !5118, file: !939, line: 1469, type: !963)
!5121 = !DILocation(line: 1469, column: 13, scope: !5118)
!5122 = !DILocation(line: 1469, column: 28, scope: !5118)
!5123 = !DILocation(line: 1469, column: 31, scope: !5118)
!5124 = !DILocation(line: 1469, column: 17, scope: !5118)
!5125 = !DILocation(line: 1470, column: 13, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5118, file: !939, line: 1470, column: 13)
!5127 = !DILocation(line: 1470, column: 15, scope: !5126)
!5128 = !DILocation(line: 1470, column: 13, scope: !5118)
!5129 = !DILocation(line: 1471, column: 54, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5126, file: !939, line: 1470, column: 21)
!5131 = !DILocation(line: 1471, column: 32, scope: !5130)
!5132 = !DILocation(line: 1471, column: 82, scope: !5130)
!5133 = !DILocation(line: 1471, column: 13, scope: !5130)
!5134 = !DILocation(line: 1471, column: 16, scope: !5130)
!5135 = !DILocation(line: 1471, column: 30, scope: !5130)
!5136 = !DILocation(line: 1472, column: 22, scope: !5130)
!5137 = !DILocation(line: 1472, column: 13, scope: !5130)
!5138 = !DILocation(line: 1473, column: 9, scope: !5130)
!5139 = !DILocation(line: 1474, column: 5, scope: !5118)
!5140 = !DILocation(line: 1476, column: 24, scope: !4863)
!5141 = !DILocation(line: 1476, column: 11, scope: !4863)
!5142 = !DILocation(line: 1476, column: 9, scope: !4863)
!5143 = !DILocation(line: 1477, column: 9, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !4863, file: !939, line: 1477, column: 9)
!5145 = !DILocation(line: 1477, column: 12, scope: !5144)
!5146 = !DILocation(line: 1477, column: 26, scope: !5144)
!5147 = !DILocation(line: 1477, column: 31, scope: !5144)
!5148 = !DILocation(line: 1477, column: 35, scope: !5149)
!5149 = !DILexicalBlockFile(scope: !5144, file: !939, discriminator: 1)
!5150 = !DILocation(line: 1477, column: 38, scope: !5149)
!5151 = !DILocation(line: 1477, column: 59, scope: !5149)
!5152 = !DILocation(line: 1478, column: 9, scope: !5144)
!5153 = !DILocation(line: 1478, column: 13, scope: !5144)
!5154 = !DILocation(line: 1478, column: 16, scope: !5149)
!5155 = !DILocation(line: 1478, column: 21, scope: !5149)
!5156 = !DILocation(line: 1478, column: 30, scope: !5149)
!5157 = !DILocation(line: 1478, column: 42, scope: !5149)
!5158 = !DILocation(line: 1478, column: 57, scope: !5159)
!5159 = !DILexicalBlockFile(scope: !5144, file: !939, discriminator: 2)
!5160 = !DILocation(line: 1478, column: 62, scope: !5159)
!5161 = !DILocation(line: 1478, column: 45, scope: !5159)
!5162 = !DILocation(line: 1477, column: 9, scope: !5163)
!5163 = !DILexicalBlockFile(scope: !4863, file: !939, discriminator: 2)
!5164 = !DILocation(line: 1479, column: 26, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5144, file: !939, line: 1478, column: 81)
!5166 = !DILocation(line: 1479, column: 29, scope: !5165)
!5167 = !DILocation(line: 1479, column: 32, scope: !5165)
!5168 = !DILocation(line: 1479, column: 38, scope: !5165)
!5169 = !DILocation(line: 1479, column: 41, scope: !5165)
!5170 = !DILocation(line: 1479, column: 15, scope: !5165)
!5171 = !DILocation(line: 1479, column: 13, scope: !5165)
!5172 = !DILocation(line: 1480, column: 13, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5165, file: !939, line: 1480, column: 13)
!5174 = !DILocation(line: 1480, column: 17, scope: !5173)
!5175 = !DILocation(line: 1480, column: 13, scope: !5165)
!5176 = !DILocation(line: 1481, column: 36, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5178, file: !939, line: 1481, column: 17)
!5178 = distinct !DILexicalBlock(scope: !5173, file: !939, line: 1480, column: 22)
!5179 = !DILocation(line: 1481, column: 39, scope: !5177)
!5180 = !DILocation(line: 1481, column: 17, scope: !5177)
!5181 = !DILocation(line: 1481, column: 17, scope: !5178)
!5182 = !DILocation(line: 1482, column: 17, scope: !5177)
!5183 = !DILocation(line: 1483, column: 20, scope: !5178)
!5184 = !DILocation(line: 1483, column: 23, scope: !5178)
!5185 = !DILocation(line: 1484, column: 20, scope: !5178)
!5186 = !DILocation(line: 1484, column: 23, scope: !5178)
!5187 = !DILocation(line: 1484, column: 34, scope: !5178)
!5188 = !DILocation(line: 1485, column: 20, scope: !5178)
!5189 = !DILocation(line: 1485, column: 23, scope: !5178)
!5190 = !DILocation(line: 1483, column: 13, scope: !5178)
!5191 = !DILocation(line: 1486, column: 9, scope: !5178)
!5192 = !DILocation(line: 1487, column: 13, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5173, file: !939, line: 1486, column: 16)
!5194 = !DILocation(line: 1487, column: 16, scope: !5193)
!5195 = !DILocation(line: 1487, column: 37, scope: !5193)
!5196 = !DILocation(line: 1489, column: 5, scope: !5165)
!5197 = !DILocation(line: 1491, column: 9, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !4863, file: !939, line: 1491, column: 9)
!5199 = !DILocation(line: 1491, column: 12, scope: !5198)
!5200 = !DILocation(line: 1491, column: 39, scope: !5198)
!5201 = !DILocation(line: 1491, column: 42, scope: !5198)
!5202 = !DILocation(line: 1491, column: 37, scope: !5198)
!5203 = !DILocation(line: 1491, column: 9, scope: !4863)
!5204 = !DILocalVariable(name: "copy_size", scope: !5205, file: !939, line: 1493, type: !963)
!5205 = distinct !DILexicalBlock(scope: !5198, file: !939, line: 1491, column: 61)
!5206 = !DILocation(line: 1493, column: 13, scope: !5205)
!5207 = !DILocation(line: 1493, column: 27, scope: !5205)
!5208 = !DILocation(line: 1493, column: 30, scope: !5205)
!5209 = !DILocation(line: 1493, column: 50, scope: !5205)
!5210 = !DILocation(line: 1493, column: 53, scope: !5205)
!5211 = !DILocation(line: 1493, column: 48, scope: !5205)
!5212 = !DILocation(line: 1493, column: 82, scope: !5205)
!5213 = !DILocation(line: 1493, column: 79, scope: !5205)
!5214 = !DILocation(line: 1493, column: 26, scope: !5205)
!5215 = !DILocation(line: 1493, column: 95, scope: !5216)
!5216 = !DILexicalBlockFile(scope: !5205, file: !939, discriminator: 1)
!5217 = !DILocation(line: 1493, column: 26, scope: !5216)
!5218 = !DILocation(line: 1493, column: 108, scope: !5219)
!5219 = !DILexicalBlockFile(scope: !5205, file: !939, discriminator: 2)
!5220 = !DILocation(line: 1493, column: 111, scope: !5219)
!5221 = !DILocation(line: 1493, column: 131, scope: !5219)
!5222 = !DILocation(line: 1493, column: 134, scope: !5219)
!5223 = !DILocation(line: 1493, column: 129, scope: !5219)
!5224 = !DILocation(line: 1493, column: 26, scope: !5219)
!5225 = !DILocation(line: 1493, column: 26, scope: !5226)
!5226 = !DILexicalBlockFile(scope: !5205, file: !939, discriminator: 3)
!5227 = !DILocation(line: 1493, column: 13, scope: !5226)
!5228 = !DILocation(line: 1494, column: 16, scope: !5205)
!5229 = !DILocation(line: 1494, column: 21, scope: !5205)
!5230 = !DILocation(line: 1494, column: 24, scope: !5205)
!5231 = !DILocation(line: 1494, column: 38, scope: !5205)
!5232 = !DILocation(line: 1494, column: 9, scope: !5205)
!5233 = !DILocation(line: 1495, column: 40, scope: !5205)
!5234 = !DILocation(line: 1495, column: 9, scope: !5205)
!5235 = !DILocation(line: 1495, column: 12, scope: !5205)
!5236 = !DILocation(line: 1495, column: 37, scope: !5205)
!5237 = !DILocation(line: 1496, column: 16, scope: !5205)
!5238 = !DILocation(line: 1496, column: 9, scope: !5205)
!5239 = !DILocation(line: 1499, column: 27, scope: !4863)
!5240 = !DILocation(line: 1499, column: 11, scope: !4863)
!5241 = !DILocation(line: 1499, column: 9, scope: !4863)
!5242 = !DILocation(line: 1500, column: 25, scope: !4863)
!5243 = !DILocation(line: 1500, column: 28, scope: !4863)
!5244 = !DILocation(line: 1500, column: 33, scope: !4863)
!5245 = !DILocation(line: 1500, column: 38, scope: !4863)
!5246 = !DILocation(line: 1500, column: 11, scope: !4863)
!5247 = !DILocation(line: 1500, column: 9, scope: !4863)
!5248 = !DILocation(line: 1501, column: 9, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !4863, file: !939, line: 1501, column: 9)
!5250 = !DILocation(line: 1501, column: 13, scope: !5249)
!5251 = !DILocation(line: 1501, column: 9, scope: !4863)
!5252 = !DILocation(line: 1502, column: 13, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5254, file: !939, line: 1502, column: 13)
!5254 = distinct !DILexicalBlock(scope: !5249, file: !939, line: 1501, column: 18)
!5255 = !DILocation(line: 1502, column: 25, scope: !5253)
!5256 = !DILocation(line: 1502, column: 28, scope: !5257)
!5257 = !DILexicalBlockFile(scope: !5253, file: !939, discriminator: 1)
!5258 = !DILocation(line: 1502, column: 31, scope: !5257)
!5259 = !DILocation(line: 1502, column: 50, scope: !5257)
!5260 = !DILocation(line: 1502, column: 13, scope: !5257)
!5261 = !DILocation(line: 1505, column: 27, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5253, file: !939, line: 1502, column: 56)
!5263 = !DILocation(line: 1505, column: 30, scope: !5262)
!5264 = !DILocation(line: 1505, column: 35, scope: !5262)
!5265 = !DILocation(line: 1505, column: 13, scope: !5262)
!5266 = !DILocation(line: 1506, column: 9, scope: !5262)
!5267 = !DILocation(line: 1508, column: 16, scope: !5254)
!5268 = !DILocation(line: 1508, column: 9, scope: !5254)
!5269 = !DILocation(line: 1510, column: 9, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !4863, file: !939, line: 1510, column: 9)
!5271 = !DILocation(line: 1510, column: 12, scope: !5270)
!5272 = !DILocation(line: 1510, column: 28, scope: !5270)
!5273 = !DILocation(line: 1511, column: 9, scope: !5270)
!5274 = !DILocation(line: 1511, column: 14, scope: !5270)
!5275 = !DILocation(line: 1511, column: 23, scope: !5270)
!5276 = !DILocation(line: 1511, column: 35, scope: !5270)
!5277 = !DILocation(line: 1511, column: 50, scope: !5278)
!5278 = !DILexicalBlockFile(scope: !5270, file: !939, discriminator: 1)
!5279 = !DILocation(line: 1511, column: 55, scope: !5278)
!5280 = !DILocation(line: 1511, column: 38, scope: !5278)
!5281 = !DILocation(line: 1510, column: 9, scope: !5282)
!5282 = !DILexicalBlockFile(scope: !4863, file: !939, discriminator: 1)
!5283 = !DILocation(line: 1512, column: 9, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5270, file: !939, line: 1511, column: 74)
!5285 = !DILocation(line: 1512, column: 12, scope: !5284)
!5286 = !DILocation(line: 1512, column: 28, scope: !5284)
!5287 = !DILocation(line: 1513, column: 5, scope: !5284)
!5288 = !DILocation(line: 1514, column: 28, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5270, file: !939, line: 1513, column: 12)
!5290 = !DILocation(line: 1514, column: 31, scope: !5289)
!5291 = !DILocation(line: 1514, column: 40, scope: !5289)
!5292 = !DILocation(line: 1514, column: 43, scope: !5289)
!5293 = !DILocation(line: 1514, column: 9, scope: !5289)
!5294 = !DILocation(line: 1516, column: 5, scope: !4863)
!5295 = !DILocation(line: 1516, column: 8, scope: !4863)
!5296 = !DILocation(line: 1516, column: 18, scope: !4863)
!5297 = !DILocation(line: 1518, column: 21, scope: !4863)
!5298 = !DILocation(line: 1518, column: 24, scope: !4863)
!5299 = !DILocation(line: 1518, column: 5, scope: !4863)
!5300 = !DILocation(line: 1518, column: 8, scope: !4863)
!5301 = !DILocation(line: 1518, column: 19, scope: !4863)
!5302 = !DILocation(line: 1520, column: 5, scope: !4863)
!5303 = !DILocation(line: 1521, column: 1, scope: !4863)
!5304 = distinct !DISubprogram(name: "nested_io_open", scope: !939, file: !939, line: 1666, type: !5305, isLocal: true, isDefinition: true, scopeLine: 1668, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!5305 = !DISubroutineType(types: !5306)
!5306 = !{!963, !2235, !2189, !970, !963, !2192}
!5307 = !DILocalVariable(name: "s", arg: 1, scope: !5304, file: !939, line: 1666, type: !2235)
!5308 = !DILocation(line: 1666, column: 44, scope: !5304)
!5309 = !DILocalVariable(name: "pb", arg: 2, scope: !5304, file: !939, line: 1666, type: !2189)
!5310 = !DILocation(line: 1666, column: 61, scope: !5304)
!5311 = !DILocalVariable(name: "url", arg: 3, scope: !5304, file: !939, line: 1666, type: !970)
!5312 = !DILocation(line: 1666, column: 77, scope: !5304)
!5313 = !DILocalVariable(name: "flags", arg: 4, scope: !5304, file: !939, line: 1667, type: !963)
!5314 = !DILocation(line: 1667, column: 31, scope: !5304)
!5315 = !DILocalVariable(name: "opts", arg: 5, scope: !5304, file: !939, line: 1667, type: !2192)
!5316 = !DILocation(line: 1667, column: 53, scope: !5304)
!5317 = !DILocation(line: 1669, column: 12, scope: !5304)
!5318 = !DILocation(line: 1672, column: 12, scope: !5304)
!5319 = !DILocation(line: 1672, column: 15, scope: !5304)
!5320 = !DILocation(line: 1672, column: 20, scope: !5304)
!5321 = !DILocation(line: 1669, column: 5, scope: !5304)
!5322 = !DILocation(line: 1673, column: 5, scope: !5304)
!5323 = distinct !DISubprogram(name: "update_streams_from_subdemuxer", scope: !939, file: !939, line: 1721, type: !5324, isLocal: true, isDefinition: true, scopeLine: 1722, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!5324 = !DISubroutineType(types: !5325)
!5325 = !{!963, !2235, !2245}
!5326 = !DILocalVariable(name: "s", arg: 1, scope: !5323, file: !939, line: 1721, type: !2235)
!5327 = !DILocation(line: 1721, column: 60, scope: !5323)
!5328 = !DILocalVariable(name: "pls", arg: 2, scope: !5323, file: !939, line: 1721, type: !2245)
!5329 = !DILocation(line: 1721, column: 80, scope: !5323)
!5330 = !DILocalVariable(name: "err", scope: !5323, file: !939, line: 1723, type: !963)
!5331 = !DILocation(line: 1723, column: 9, scope: !5323)
!5332 = !DILocation(line: 1725, column: 5, scope: !5323)
!5333 = !DILocation(line: 1725, column: 12, scope: !5334)
!5334 = !DILexicalBlockFile(scope: !5323, file: !939, discriminator: 1)
!5335 = !DILocation(line: 1725, column: 17, scope: !5334)
!5336 = !DILocation(line: 1725, column: 34, scope: !5334)
!5337 = !DILocation(line: 1725, column: 39, scope: !5334)
!5338 = !DILocation(line: 1725, column: 44, scope: !5334)
!5339 = !DILocation(line: 1725, column: 32, scope: !5334)
!5340 = !DILocation(line: 1725, column: 5, scope: !5334)
!5341 = !DILocalVariable(name: "ist_idx", scope: !5342, file: !939, line: 1726, type: !963)
!5342 = distinct !DILexicalBlock(scope: !5323, file: !939, line: 1725, column: 56)
!5343 = !DILocation(line: 1726, column: 13, scope: !5342)
!5344 = !DILocation(line: 1726, column: 23, scope: !5342)
!5345 = !DILocation(line: 1726, column: 28, scope: !5342)
!5346 = !DILocalVariable(name: "st", scope: !5342, file: !939, line: 1727, type: !1374)
!5347 = !DILocation(line: 1727, column: 19, scope: !5342)
!5348 = !DILocation(line: 1727, column: 44, scope: !5342)
!5349 = !DILocation(line: 1727, column: 24, scope: !5342)
!5350 = !DILocalVariable(name: "ist", scope: !5342, file: !939, line: 1728, type: !1374)
!5351 = !DILocation(line: 1728, column: 19, scope: !5342)
!5352 = !DILocation(line: 1728, column: 43, scope: !5342)
!5353 = !DILocation(line: 1728, column: 25, scope: !5342)
!5354 = !DILocation(line: 1728, column: 30, scope: !5342)
!5355 = !DILocation(line: 1728, column: 35, scope: !5342)
!5356 = !DILocation(line: 1730, column: 14, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5342, file: !939, line: 1730, column: 13)
!5358 = !DILocation(line: 1730, column: 13, scope: !5342)
!5359 = !DILocation(line: 1731, column: 13, scope: !5357)
!5360 = !DILocation(line: 1733, column: 18, scope: !5342)
!5361 = !DILocation(line: 1733, column: 23, scope: !5342)
!5362 = !DILocation(line: 1733, column: 9, scope: !5342)
!5363 = !DILocation(line: 1733, column: 13, scope: !5342)
!5364 = !DILocation(line: 1733, column: 16, scope: !5342)
!5365 = !DILocation(line: 1734, column: 9, scope: !5342)
!5366 = distinct !{!5366, !5365}
!5367 = !DILocalVariable(name: "_tab", scope: !5368, file: !939, line: 1734, type: !5369)
!5368 = distinct !DILexicalBlock(scope: !5342, file: !939, line: 1734, column: 12)
!5369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64, align: 64)
!5370 = !DILocation(line: 1734, column: 45, scope: !5368)
!5371 = !DILocation(line: 1734, column: 54, scope: !5372)
!5372 = !DILexicalBlockFile(scope: !5368, file: !939, discriminator: 1)
!5373 = !DILocation(line: 1734, column: 59, scope: !5372)
!5374 = !DILocation(line: 1734, column: 45, scope: !5372)
!5375 = !DILocalVariable(name: "_elem", scope: !5368, file: !939, line: 1734, type: !1374)
!5376 = !DILocation(line: 1734, column: 89, scope: !5368)
!5377 = !DILocation(line: 1734, column: 98, scope: !5372)
!5378 = !DILocation(line: 1734, column: 89, scope: !5372)
!5379 = !DILocation(line: 1734, column: 150, scope: !5372)
!5380 = !DILocation(line: 1734, column: 157, scope: !5372)
!5381 = !DILocation(line: 1734, column: 162, scope: !5372)
!5382 = !DILocation(line: 1734, column: 178, scope: !5372)
!5383 = !DILocation(line: 1734, column: 134, scope: !5372)
!5384 = !DILocation(line: 1734, column: 185, scope: !5372)
!5385 = !DILocation(line: 1736, column: 32, scope: !5342)
!5386 = !DILocation(line: 1736, column: 35, scope: !5342)
!5387 = !DILocation(line: 1736, column: 40, scope: !5342)
!5388 = !DILocation(line: 1736, column: 9, scope: !5342)
!5389 = !DILocation(line: 1738, column: 49, scope: !5342)
!5390 = !DILocation(line: 1738, column: 53, scope: !5342)
!5391 = !DILocation(line: 1738, column: 58, scope: !5342)
!5392 = !DILocation(line: 1738, column: 15, scope: !5342)
!5393 = !DILocation(line: 1738, column: 13, scope: !5342)
!5394 = !DILocation(line: 1739, column: 13, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5342, file: !939, line: 1739, column: 13)
!5396 = !DILocation(line: 1739, column: 17, scope: !5395)
!5397 = !DILocation(line: 1739, column: 13, scope: !5342)
!5398 = !DILocation(line: 1740, column: 20, scope: !5395)
!5399 = !DILocation(line: 1740, column: 13, scope: !5395)
!5400 = !DILocation(line: 1725, column: 5, scope: !5401)
!5401 = !DILexicalBlockFile(scope: !5323, file: !939, discriminator: 2)
!5402 = distinct !{!5402, !5332}
!5403 = !DILocation(line: 1743, column: 5, scope: !5323)
!5404 = !DILocation(line: 1744, column: 1, scope: !5323)
!5405 = distinct !DISubprogram(name: "add_metadata_from_renditions", scope: !939, file: !939, line: 1547, type: !5406, isLocal: true, isDefinition: true, scopeLine: 1549, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!5406 = !DISubroutineType(types: !5407)
!5407 = !{null, !2235, !2245, !658}
!5408 = !DILocalVariable(name: "s", arg: 1, scope: !5405, file: !939, line: 1547, type: !2235)
!5409 = !DILocation(line: 1547, column: 59, scope: !5405)
!5410 = !DILocalVariable(name: "pls", arg: 2, scope: !5405, file: !939, line: 1547, type: !2245)
!5411 = !DILocation(line: 1547, column: 79, scope: !5405)
!5412 = !DILocalVariable(name: "type", arg: 3, scope: !5405, file: !939, line: 1548, type: !658)
!5413 = !DILocation(line: 1548, column: 59, scope: !5405)
!5414 = !DILocalVariable(name: "rend_idx", scope: !5405, file: !939, line: 1550, type: !963)
!5415 = !DILocation(line: 1550, column: 9, scope: !5405)
!5416 = !DILocalVariable(name: "i", scope: !5405, file: !939, line: 1551, type: !963)
!5417 = !DILocation(line: 1551, column: 9, scope: !5405)
!5418 = !DILocation(line: 1553, column: 12, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5405, file: !939, line: 1553, column: 5)
!5420 = !DILocation(line: 1553, column: 10, scope: !5419)
!5421 = !DILocation(line: 1553, column: 17, scope: !5422)
!5422 = !DILexicalBlockFile(scope: !5423, file: !939, discriminator: 1)
!5423 = distinct !DILexicalBlock(scope: !5419, file: !939, line: 1553, column: 5)
!5424 = !DILocation(line: 1553, column: 21, scope: !5422)
!5425 = !DILocation(line: 1553, column: 26, scope: !5422)
!5426 = !DILocation(line: 1553, column: 19, scope: !5422)
!5427 = !DILocation(line: 1553, column: 5, scope: !5422)
!5428 = !DILocalVariable(name: "st", scope: !5429, file: !939, line: 1554, type: !1374)
!5429 = distinct !DILexicalBlock(scope: !5423, file: !939, line: 1553, column: 47)
!5430 = !DILocation(line: 1554, column: 19, scope: !5429)
!5431 = !DILocation(line: 1554, column: 42, scope: !5429)
!5432 = !DILocation(line: 1554, column: 24, scope: !5429)
!5433 = !DILocation(line: 1554, column: 29, scope: !5429)
!5434 = !DILocation(line: 1556, column: 13, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5429, file: !939, line: 1556, column: 13)
!5436 = !DILocation(line: 1556, column: 17, scope: !5435)
!5437 = !DILocation(line: 1556, column: 27, scope: !5435)
!5438 = !DILocation(line: 1556, column: 41, scope: !5435)
!5439 = !DILocation(line: 1556, column: 38, scope: !5435)
!5440 = !DILocation(line: 1556, column: 13, scope: !5429)
!5441 = !DILocation(line: 1557, column: 13, scope: !5435)
!5442 = !DILocation(line: 1559, column: 9, scope: !5429)
!5443 = !DILocation(line: 1559, column: 16, scope: !5444)
!5444 = !DILexicalBlockFile(scope: !5445, file: !939, discriminator: 1)
!5445 = distinct !DILexicalBlock(scope: !5446, file: !939, line: 1559, column: 9)
!5446 = distinct !DILexicalBlock(scope: !5429, file: !939, line: 1559, column: 9)
!5447 = !DILocation(line: 1559, column: 27, scope: !5444)
!5448 = !DILocation(line: 1559, column: 32, scope: !5444)
!5449 = !DILocation(line: 1559, column: 25, scope: !5444)
!5450 = !DILocation(line: 1559, column: 9, scope: !5444)
!5451 = !DILocalVariable(name: "rend", scope: !5452, file: !939, line: 1560, type: !2321)
!5452 = distinct !DILexicalBlock(scope: !5445, file: !939, line: 1559, column: 58)
!5453 = !DILocation(line: 1560, column: 31, scope: !5452)
!5454 = !DILocation(line: 1560, column: 54, scope: !5452)
!5455 = !DILocation(line: 1560, column: 38, scope: !5452)
!5456 = !DILocation(line: 1560, column: 43, scope: !5452)
!5457 = !DILocation(line: 1562, column: 17, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5452, file: !939, line: 1562, column: 17)
!5459 = !DILocation(line: 1562, column: 23, scope: !5458)
!5460 = !DILocation(line: 1562, column: 31, scope: !5458)
!5461 = !DILocation(line: 1562, column: 28, scope: !5458)
!5462 = !DILocation(line: 1562, column: 17, scope: !5452)
!5463 = !DILocation(line: 1563, column: 17, scope: !5458)
!5464 = !DILocation(line: 1565, column: 17, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5452, file: !939, line: 1565, column: 17)
!5466 = !DILocation(line: 1565, column: 23, scope: !5465)
!5467 = !DILocation(line: 1565, column: 17, scope: !5452)
!5468 = !DILocation(line: 1566, column: 30, scope: !5465)
!5469 = !DILocation(line: 1566, column: 34, scope: !5465)
!5470 = !DILocation(line: 1566, column: 56, scope: !5465)
!5471 = !DILocation(line: 1566, column: 62, scope: !5465)
!5472 = !DILocation(line: 1566, column: 17, scope: !5465)
!5473 = !DILocation(line: 1567, column: 17, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5452, file: !939, line: 1567, column: 17)
!5475 = !DILocation(line: 1567, column: 23, scope: !5474)
!5476 = !DILocation(line: 1567, column: 17, scope: !5452)
!5477 = !DILocation(line: 1568, column: 30, scope: !5474)
!5478 = !DILocation(line: 1568, column: 34, scope: !5474)
!5479 = !DILocation(line: 1568, column: 55, scope: !5474)
!5480 = !DILocation(line: 1568, column: 61, scope: !5474)
!5481 = !DILocation(line: 1568, column: 17, scope: !5474)
!5482 = !DILocation(line: 1570, column: 32, scope: !5452)
!5483 = !DILocation(line: 1570, column: 38, scope: !5452)
!5484 = !DILocation(line: 1570, column: 13, scope: !5452)
!5485 = !DILocation(line: 1570, column: 17, scope: !5452)
!5486 = !DILocation(line: 1570, column: 29, scope: !5452)
!5487 = !DILocation(line: 1571, column: 9, scope: !5452)
!5488 = !DILocation(line: 1559, column: 54, scope: !5489)
!5489 = !DILexicalBlockFile(scope: !5445, file: !939, discriminator: 2)
!5490 = !DILocation(line: 1559, column: 9, scope: !5489)
!5491 = distinct !{!5491, !5442}
!5492 = !DILocation(line: 1572, column: 13, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5429, file: !939, line: 1572, column: 13)
!5494 = !DILocation(line: 1572, column: 24, scope: !5493)
!5495 = !DILocation(line: 1572, column: 29, scope: !5493)
!5496 = !DILocation(line: 1572, column: 22, scope: !5493)
!5497 = !DILocation(line: 1572, column: 13, scope: !5429)
!5498 = !DILocation(line: 1573, column: 13, scope: !5493)
!5499 = !DILocation(line: 1574, column: 5, scope: !5429)
!5500 = !DILocation(line: 1553, column: 43, scope: !5501)
!5501 = !DILexicalBlockFile(scope: !5423, file: !939, discriminator: 2)
!5502 = !DILocation(line: 1553, column: 5, scope: !5501)
!5503 = distinct !{!5503, !5504}
!5504 = !DILocation(line: 1553, column: 5, scope: !5405)
!5505 = !DILocation(line: 1575, column: 1, scope: !5405)
!5506 = distinct !DISubprogram(name: "update_noheader_flag", scope: !939, file: !939, line: 1746, type: !5507, isLocal: true, isDefinition: true, scopeLine: 1747, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!5507 = !DISubroutineType(types: !5508)
!5508 = !{null, !2235}
!5509 = !DILocalVariable(name: "s", arg: 1, scope: !5506, file: !939, line: 1746, type: !2235)
!5510 = !DILocation(line: 1746, column: 51, scope: !5506)
!5511 = !DILocalVariable(name: "c", scope: !5506, file: !939, line: 1748, type: !2386)
!5512 = !DILocation(line: 1748, column: 17, scope: !5506)
!5513 = !DILocation(line: 1748, column: 21, scope: !5506)
!5514 = !DILocation(line: 1748, column: 24, scope: !5506)
!5515 = !DILocalVariable(name: "flag_needed", scope: !5506, file: !939, line: 1749, type: !963)
!5516 = !DILocation(line: 1749, column: 9, scope: !5506)
!5517 = !DILocalVariable(name: "i", scope: !5506, file: !939, line: 1750, type: !963)
!5518 = !DILocation(line: 1750, column: 9, scope: !5506)
!5519 = !DILocation(line: 1752, column: 12, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5506, file: !939, line: 1752, column: 5)
!5521 = !DILocation(line: 1752, column: 10, scope: !5520)
!5522 = !DILocation(line: 1752, column: 17, scope: !5523)
!5523 = !DILexicalBlockFile(scope: !5524, file: !939, discriminator: 1)
!5524 = distinct !DILexicalBlock(scope: !5520, file: !939, line: 1752, column: 5)
!5525 = !DILocation(line: 1752, column: 21, scope: !5523)
!5526 = !DILocation(line: 1752, column: 24, scope: !5523)
!5527 = !DILocation(line: 1752, column: 19, scope: !5523)
!5528 = !DILocation(line: 1752, column: 5, scope: !5523)
!5529 = !DILocalVariable(name: "pls", scope: !5530, file: !939, line: 1753, type: !2245)
!5530 = distinct !DILexicalBlock(scope: !5524, file: !939, line: 1752, column: 42)
!5531 = !DILocation(line: 1753, column: 26, scope: !5530)
!5532 = !DILocation(line: 1753, column: 45, scope: !5530)
!5533 = !DILocation(line: 1753, column: 32, scope: !5530)
!5534 = !DILocation(line: 1753, column: 35, scope: !5530)
!5535 = !DILocation(line: 1755, column: 13, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5530, file: !939, line: 1755, column: 13)
!5537 = !DILocation(line: 1755, column: 18, scope: !5536)
!5538 = !DILocation(line: 1755, column: 13, scope: !5530)
!5539 = !DILocation(line: 1756, column: 25, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5536, file: !939, line: 1755, column: 37)
!5541 = !DILocation(line: 1757, column: 13, scope: !5540)
!5542 = !DILocation(line: 1759, column: 5, scope: !5530)
!5543 = !DILocation(line: 1752, column: 38, scope: !5544)
!5544 = !DILexicalBlockFile(scope: !5524, file: !939, discriminator: 2)
!5545 = !DILocation(line: 1752, column: 5, scope: !5544)
!5546 = distinct !{!5546, !5547}
!5547 = !DILocation(line: 1752, column: 5, scope: !5506)
!5548 = !DILocation(line: 1761, column: 9, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5506, file: !939, line: 1761, column: 9)
!5550 = !DILocation(line: 1761, column: 9, scope: !5506)
!5551 = !DILocation(line: 1762, column: 9, scope: !5549)
!5552 = !DILocation(line: 1762, column: 12, scope: !5549)
!5553 = !DILocation(line: 1762, column: 22, scope: !5549)
!5554 = !DILocation(line: 1764, column: 9, scope: !5549)
!5555 = !DILocation(line: 1764, column: 12, scope: !5549)
!5556 = !DILocation(line: 1764, column: 22, scope: !5549)
!5557 = !DILocation(line: 1765, column: 1, scope: !5506)
!5558 = distinct !DISubprogram(name: "open_url_keepalive", scope: !939, file: !939, line: 592, type: !5559, isLocal: true, isDefinition: true, scopeLine: 594, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!5559 = !DISubroutineType(types: !5560)
!5560 = !{!963, !2235, !2189, !970}
!5561 = !DILocalVariable(name: "s", arg: 1, scope: !5558, file: !939, line: 592, type: !2235)
!5562 = !DILocation(line: 592, column: 48, scope: !5558)
!5563 = !DILocalVariable(name: "pb", arg: 2, scope: !5558, file: !939, line: 592, type: !2189)
!5564 = !DILocation(line: 592, column: 65, scope: !5558)
!5565 = !DILocalVariable(name: "url", arg: 3, scope: !5558, file: !939, line: 593, type: !970)
!5566 = !DILocation(line: 593, column: 43, scope: !5558)
!5567 = !DILocalVariable(name: "ret", scope: !5558, file: !939, line: 598, type: !963)
!5568 = !DILocation(line: 598, column: 9, scope: !5558)
!5569 = !DILocalVariable(name: "uc", scope: !5558, file: !939, line: 599, type: !5570)
!5570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5571, size: 64, align: 64)
!5571 = !DIDerivedType(tag: DW_TAG_typedef, name: "URLContext", file: !5572, line: 52, baseType: !5573)
!5572 = !DIFile(filename: "./libavformat/url.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!5573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "URLContext", file: !5572, line: 38, size: 768, align: 64, elements: !5574)
!5574 = !{!5575, !5576, !5661, !5662, !5663, !5664, !5665, !5666, !5667, !5668, !5669, !5670, !5671}
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !5573, file: !5572, line: 39, baseType: !1012, size: 64, align: 64)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "prot", scope: !5573, file: !5572, line: 40, baseType: !5577, size: 64, align: 64, offset: 64)
!5577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5578, size: 64, align: 64)
!5578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5579)
!5579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "URLProtocol", file: !5572, line: 54, size: 1600, align: 64, elements: !5580)
!5580 = !{!5581, !5582, !5586, !5590, !5595, !5599, !5603, !5609, !5613, !5614, !5618, !5622, !5623, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5654, !5655, !5656, !5660}
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5579, file: !5572, line: 55, baseType: !970, size: 64, align: 64)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "url_open", scope: !5579, file: !5572, line: 56, baseType: !5583, size: 64, align: 64, offset: 64)
!5583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5584, size: 64, align: 64)
!5584 = !DISubroutineType(types: !5585)
!5585 = !{!963, !5570, !970, !963}
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "url_open2", scope: !5579, file: !5572, line: 62, baseType: !5587, size: 64, align: 64, offset: 128)
!5587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5588, size: 64, align: 64)
!5588 = !DISubroutineType(types: !5589)
!5589 = !{!963, !5570, !970, !963, !2192}
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "url_accept", scope: !5579, file: !5572, line: 63, baseType: !5591, size: 64, align: 64, offset: 192)
!5591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5592, size: 64, align: 64)
!5592 = !DISubroutineType(types: !5593)
!5593 = !{!963, !5570, !5594}
!5594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5570, size: 64, align: 64)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "url_handshake", scope: !5579, file: !5572, line: 64, baseType: !5596, size: 64, align: 64, offset: 256)
!5596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5597, size: 64, align: 64)
!5597 = !DISubroutineType(types: !5598)
!5598 = !{!963, !5570}
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "url_read", scope: !5579, file: !5572, line: 78, baseType: !5600, size: 64, align: 64, offset: 320)
!5600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5601, size: 64, align: 64)
!5601 = !DISubroutineType(types: !5602)
!5602 = !{!963, !5570, !1105, !963}
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "url_write", scope: !5579, file: !5572, line: 79, baseType: !5604, size: 64, align: 64, offset: 384)
!5604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5605, size: 64, align: 64)
!5605 = !DISubroutineType(types: !5606)
!5606 = !{!963, !5570, !5607, !963}
!5607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5608, size: 64, align: 64)
!5608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !985)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "url_seek", scope: !5579, file: !5572, line: 80, baseType: !5610, size: 64, align: 64, offset: 448)
!5610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5611, size: 64, align: 64)
!5611 = !DISubroutineType(types: !5612)
!5612 = !{!959, !5570, !959, !963}
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "url_close", scope: !5579, file: !5572, line: 81, baseType: !5596, size: 64, align: 64, offset: 512)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "url_read_pause", scope: !5579, file: !5572, line: 82, baseType: !5615, size: 64, align: 64, offset: 576)
!5615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5616, size: 64, align: 64)
!5616 = !DISubroutineType(types: !5617)
!5617 = !{!963, !5570, !963}
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "url_read_seek", scope: !5579, file: !5572, line: 83, baseType: !5619, size: 64, align: 64, offset: 640)
!5619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5620, size: 64, align: 64)
!5620 = !DISubroutineType(types: !5621)
!5621 = !{!959, !5570, !963, !959, !963}
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "url_get_file_handle", scope: !5579, file: !5572, line: 85, baseType: !5596, size: 64, align: 64, offset: 704)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "url_get_multi_file_handle", scope: !5579, file: !5572, line: 86, baseType: !5624, size: 64, align: 64, offset: 768)
!5624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5625, size: 64, align: 64)
!5625 = !DISubroutineType(types: !5626)
!5626 = !{!963, !5570, !5627, !975}
!5627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64, align: 64)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "url_get_short_seek", scope: !5579, file: !5572, line: 88, baseType: !5596, size: 64, align: 64, offset: 832)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "url_shutdown", scope: !5579, file: !5572, line: 89, baseType: !5615, size: 64, align: 64, offset: 896)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !5579, file: !5572, line: 90, baseType: !963, size: 32, align: 32, offset: 960)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_class", scope: !5579, file: !5572, line: 91, baseType: !1012, size: 64, align: 64, offset: 1024)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5579, file: !5572, line: 92, baseType: !963, size: 32, align: 32, offset: 1088)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "url_check", scope: !5579, file: !5572, line: 93, baseType: !5615, size: 64, align: 64, offset: 1152)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "url_open_dir", scope: !5579, file: !5572, line: 94, baseType: !5596, size: 64, align: 64, offset: 1216)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "url_read_dir", scope: !5579, file: !5572, line: 95, baseType: !5636, size: 64, align: 64, offset: 1280)
!5636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5637, size: 64, align: 64)
!5637 = !DISubroutineType(types: !5638)
!5638 = !{!963, !5570, !5639}
!5639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5640, size: 64, align: 64)
!5640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5641, size: 64, align: 64)
!5641 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIODirEntry", file: !650, line: 101, baseType: !5642)
!5642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIODirEntry", file: !650, line: 86, size: 576, align: 64, elements: !5643)
!5643 = !{!5644, !5645, !5646, !5647, !5648, !5649, !5650, !5651, !5652, !5653}
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5642, file: !650, line: 87, baseType: !974, size: 64, align: 64)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5642, file: !650, line: 88, baseType: !963, size: 32, align: 32, offset: 64)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "utf8", scope: !5642, file: !650, line: 89, baseType: !963, size: 32, align: 32, offset: 96)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5642, file: !650, line: 91, baseType: !959, size: 64, align: 64, offset: 128)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "modification_timestamp", scope: !5642, file: !650, line: 92, baseType: !959, size: 64, align: 64, offset: 192)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "access_timestamp", scope: !5642, file: !650, line: 94, baseType: !959, size: 64, align: 64, offset: 256)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "status_change_timestamp", scope: !5642, file: !650, line: 96, baseType: !959, size: 64, align: 64, offset: 320)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "user_id", scope: !5642, file: !650, line: 98, baseType: !959, size: 64, align: 64, offset: 384)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "group_id", scope: !5642, file: !650, line: 99, baseType: !959, size: 64, align: 64, offset: 448)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "filemode", scope: !5642, file: !650, line: 100, baseType: !959, size: 64, align: 64, offset: 512)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "url_close_dir", scope: !5579, file: !5572, line: 96, baseType: !5596, size: 64, align: 64, offset: 1344)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "url_delete", scope: !5579, file: !5572, line: 97, baseType: !5596, size: 64, align: 64, offset: 1408)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "url_move", scope: !5579, file: !5572, line: 98, baseType: !5657, size: 64, align: 64, offset: 1472)
!5657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5658, size: 64, align: 64)
!5658 = !DISubroutineType(types: !5659)
!5659 = !{!963, !5570, !5570}
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "default_whitelist", scope: !5579, file: !5572, line: 99, baseType: !970, size: 64, align: 64, offset: 1536)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !5573, file: !5572, line: 41, baseType: !962, size: 64, align: 64, offset: 128)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !5573, file: !5572, line: 42, baseType: !974, size: 64, align: 64, offset: 192)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5573, file: !5572, line: 43, baseType: !963, size: 32, align: 32, offset: 256)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "max_packet_size", scope: !5573, file: !5572, line: 44, baseType: !963, size: 32, align: 32, offset: 288)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "is_streamed", scope: !5573, file: !5572, line: 45, baseType: !963, size: 32, align: 32, offset: 320)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "is_connected", scope: !5573, file: !5572, line: 46, baseType: !963, size: 32, align: 32, offset: 352)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_callback", scope: !5573, file: !5572, line: 47, baseType: !2121, size: 128, align: 64, offset: 384)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "rw_timeout", scope: !5573, file: !5572, line: 48, baseType: !959, size: 64, align: 64, offset: 512)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !5573, file: !5572, line: 49, baseType: !970, size: 64, align: 64, offset: 576)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !5573, file: !5572, line: 50, baseType: !970, size: 64, align: 64, offset: 640)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "min_packet_size", scope: !5573, file: !5572, line: 51, baseType: !963, size: 32, align: 32, offset: 704)
!5672 = !DILocation(line: 599, column: 17, scope: !5558)
!5673 = !DILocation(line: 599, column: 42, scope: !5558)
!5674 = !DILocation(line: 599, column: 41, scope: !5558)
!5675 = !DILocation(line: 599, column: 22, scope: !5558)
!5676 = !DILocation(line: 600, column: 5, scope: !5558)
!5677 = distinct !{!5677, !5676}
!5678 = !DILocation(line: 600, column: 16, scope: !5679)
!5679 = !DILexicalBlockFile(scope: !5680, file: !939, discriminator: 1)
!5680 = distinct !DILexicalBlock(scope: !5681, file: !939, line: 600, column: 14)
!5681 = distinct !DILexicalBlock(scope: !5558, file: !939, line: 600, column: 8)
!5682 = !DILocation(line: 600, column: 15, scope: !5679)
!5683 = !DILocation(line: 600, column: 14, scope: !5679)
!5684 = !DILocation(line: 600, column: 23, scope: !5685)
!5685 = !DILexicalBlockFile(scope: !5686, file: !939, discriminator: 2)
!5686 = distinct !DILexicalBlock(scope: !5680, file: !939, line: 600, column: 21)
!5687 = !DILocation(line: 600, column: 76, scope: !5688)
!5688 = !DILexicalBlockFile(scope: !5685, file: !939, discriminator: 4)
!5689 = !DILocation(line: 600, column: 76, scope: !5685)
!5690 = !DILocation(line: 600, column: 87, scope: !5691)
!5691 = !DILexicalBlockFile(scope: !5681, file: !939, discriminator: 3)
!5692 = !DILocation(line: 601, column: 7, scope: !5558)
!5693 = !DILocation(line: 601, column: 6, scope: !5558)
!5694 = !DILocation(line: 601, column: 12, scope: !5558)
!5695 = !DILocation(line: 601, column: 24, scope: !5558)
!5696 = !DILocation(line: 602, column: 34, scope: !5558)
!5697 = !DILocation(line: 602, column: 38, scope: !5558)
!5698 = !DILocation(line: 602, column: 11, scope: !5558)
!5699 = !DILocation(line: 602, column: 9, scope: !5558)
!5700 = !DILocation(line: 603, column: 9, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5558, file: !939, line: 603, column: 9)
!5702 = !DILocation(line: 603, column: 13, scope: !5701)
!5703 = !DILocation(line: 603, column: 9, scope: !5558)
!5704 = !DILocation(line: 604, column: 28, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5701, file: !939, line: 603, column: 18)
!5706 = !DILocation(line: 604, column: 31, scope: !5705)
!5707 = !DILocation(line: 604, column: 9, scope: !5705)
!5708 = !DILocation(line: 605, column: 5, scope: !5705)
!5709 = !DILocation(line: 606, column: 12, scope: !5558)
!5710 = !DILocation(line: 606, column: 5, scope: !5558)
!5711 = distinct !DISubprogram(name: "av_make_error_string", scope: !5712, file: !5712, line: 109, type: !5713, isLocal: true, isDefinition: true, scopeLine: 110, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!5712 = !DIFile(filename: "./libavutil/error.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!5713 = !DISubroutineType(types: !5714)
!5714 = !{!974, !974, !1190, !963}
!5715 = !DILocalVariable(name: "errbuf", arg: 1, scope: !5711, file: !5712, line: 109, type: !974)
!5716 = !DILocation(line: 109, column: 48, scope: !5711)
!5717 = !DILocalVariable(name: "errbuf_size", arg: 2, scope: !5711, file: !5712, line: 109, type: !1190)
!5718 = !DILocation(line: 109, column: 63, scope: !5711)
!5719 = !DILocalVariable(name: "errnum", arg: 3, scope: !5711, file: !5712, line: 109, type: !963)
!5720 = !DILocation(line: 109, column: 80, scope: !5711)
!5721 = !DILocation(line: 111, column: 17, scope: !5711)
!5722 = !DILocation(line: 111, column: 25, scope: !5711)
!5723 = !DILocation(line: 111, column: 33, scope: !5711)
!5724 = !DILocation(line: 111, column: 5, scope: !5711)
!5725 = !DILocation(line: 112, column: 12, scope: !5711)
!5726 = !DILocation(line: 112, column: 5, scope: !5711)
!5727 = distinct !DISubprogram(name: "handle_variant_args", scope: !939, file: !939, line: 355, type: !5728, isLocal: true, isDefinition: true, scopeLine: 357, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!5728 = !DISubroutineType(types: !5729)
!5729 = !{null, !5730, !970, !963, !973, !975}
!5730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3817, size: 64, align: 64)
!5731 = !DILocalVariable(name: "info", arg: 1, scope: !5727, file: !939, line: 355, type: !5730)
!5732 = !DILocation(line: 355, column: 54, scope: !5727)
!5733 = !DILocalVariable(name: "key", arg: 2, scope: !5727, file: !939, line: 355, type: !970)
!5734 = !DILocation(line: 355, column: 72, scope: !5727)
!5735 = !DILocalVariable(name: "key_len", arg: 3, scope: !5727, file: !939, line: 356, type: !963)
!5736 = !DILocation(line: 356, column: 37, scope: !5727)
!5737 = !DILocalVariable(name: "dest", arg: 4, scope: !5727, file: !939, line: 356, type: !973)
!5738 = !DILocation(line: 356, column: 53, scope: !5727)
!5739 = !DILocalVariable(name: "dest_len", arg: 5, scope: !5727, file: !939, line: 356, type: !975)
!5740 = !DILocation(line: 356, column: 64, scope: !5727)
!5741 = !DILocation(line: 358, column: 18, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5727, file: !939, line: 358, column: 9)
!5743 = !DILocation(line: 358, column: 37, scope: !5742)
!5744 = !DILocation(line: 358, column: 10, scope: !5742)
!5745 = !DILocation(line: 358, column: 9, scope: !5727)
!5746 = !DILocation(line: 359, column: 17, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5742, file: !939, line: 358, column: 47)
!5748 = !DILocation(line: 359, column: 23, scope: !5747)
!5749 = !DILocation(line: 359, column: 10, scope: !5747)
!5750 = !DILocation(line: 359, column: 15, scope: !5747)
!5751 = !DILocation(line: 360, column: 10, scope: !5747)
!5752 = !DILocation(line: 360, column: 19, scope: !5747)
!5753 = !DILocation(line: 361, column: 5, scope: !5747)
!5754 = !DILocation(line: 361, column: 25, scope: !5755)
!5755 = !DILexicalBlockFile(scope: !5756, file: !939, discriminator: 1)
!5756 = distinct !DILexicalBlock(scope: !5742, file: !939, line: 361, column: 16)
!5757 = !DILocation(line: 361, column: 40, scope: !5755)
!5758 = !DILocation(line: 361, column: 17, scope: !5755)
!5759 = !DILocation(line: 361, column: 16, scope: !5755)
!5760 = !DILocation(line: 362, column: 17, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5756, file: !939, line: 361, column: 50)
!5762 = !DILocation(line: 362, column: 23, scope: !5761)
!5763 = !DILocation(line: 362, column: 10, scope: !5761)
!5764 = !DILocation(line: 362, column: 15, scope: !5761)
!5765 = !DILocation(line: 363, column: 10, scope: !5761)
!5766 = !DILocation(line: 363, column: 19, scope: !5761)
!5767 = !DILocation(line: 364, column: 5, scope: !5761)
!5768 = !DILocation(line: 364, column: 25, scope: !5769)
!5769 = !DILexicalBlockFile(scope: !5770, file: !939, discriminator: 1)
!5770 = distinct !DILexicalBlock(scope: !5756, file: !939, line: 364, column: 16)
!5771 = !DILocation(line: 364, column: 40, scope: !5769)
!5772 = !DILocation(line: 364, column: 17, scope: !5769)
!5773 = !DILocation(line: 364, column: 16, scope: !5769)
!5774 = !DILocation(line: 365, column: 17, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5770, file: !939, line: 364, column: 50)
!5776 = !DILocation(line: 365, column: 23, scope: !5775)
!5777 = !DILocation(line: 365, column: 10, scope: !5775)
!5778 = !DILocation(line: 365, column: 15, scope: !5775)
!5779 = !DILocation(line: 366, column: 10, scope: !5775)
!5780 = !DILocation(line: 366, column: 19, scope: !5775)
!5781 = !DILocation(line: 367, column: 5, scope: !5775)
!5782 = !DILocation(line: 367, column: 25, scope: !5783)
!5783 = !DILexicalBlockFile(scope: !5784, file: !939, discriminator: 1)
!5784 = distinct !DILexicalBlock(scope: !5770, file: !939, line: 367, column: 16)
!5785 = !DILocation(line: 367, column: 44, scope: !5783)
!5786 = !DILocation(line: 367, column: 17, scope: !5783)
!5787 = !DILocation(line: 367, column: 16, scope: !5783)
!5788 = !DILocation(line: 368, column: 17, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5784, file: !939, line: 367, column: 54)
!5790 = !DILocation(line: 368, column: 23, scope: !5789)
!5791 = !DILocation(line: 368, column: 10, scope: !5789)
!5792 = !DILocation(line: 368, column: 15, scope: !5789)
!5793 = !DILocation(line: 369, column: 10, scope: !5789)
!5794 = !DILocation(line: 369, column: 19, scope: !5789)
!5795 = !DILocation(line: 370, column: 5, scope: !5789)
!5796 = !DILocation(line: 371, column: 1, scope: !5727)
!5797 = distinct !DISubprogram(name: "handle_key_args", scope: !939, file: !939, line: 379, type: !5798, isLocal: true, isDefinition: true, scopeLine: 381, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!5798 = !DISubroutineType(types: !5799)
!5799 = !{null, !5800, !970, !963, !973, !975}
!5800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 64, align: 64)
!5801 = !DILocalVariable(name: "info", arg: 1, scope: !5797, file: !939, line: 379, type: !5800)
!5802 = !DILocation(line: 379, column: 46, scope: !5797)
!5803 = !DILocalVariable(name: "key", arg: 2, scope: !5797, file: !939, line: 379, type: !970)
!5804 = !DILocation(line: 379, column: 64, scope: !5797)
!5805 = !DILocalVariable(name: "key_len", arg: 3, scope: !5797, file: !939, line: 380, type: !963)
!5806 = !DILocation(line: 380, column: 33, scope: !5797)
!5807 = !DILocalVariable(name: "dest", arg: 4, scope: !5797, file: !939, line: 380, type: !973)
!5808 = !DILocation(line: 380, column: 49, scope: !5797)
!5809 = !DILocalVariable(name: "dest_len", arg: 5, scope: !5797, file: !939, line: 380, type: !975)
!5810 = !DILocation(line: 380, column: 60, scope: !5797)
!5811 = !DILocation(line: 382, column: 18, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5797, file: !939, line: 382, column: 9)
!5813 = !DILocation(line: 382, column: 34, scope: !5812)
!5814 = !DILocation(line: 382, column: 10, scope: !5812)
!5815 = !DILocation(line: 382, column: 9, scope: !5797)
!5816 = !DILocation(line: 383, column: 17, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5812, file: !939, line: 382, column: 44)
!5818 = !DILocation(line: 383, column: 23, scope: !5817)
!5819 = !DILocation(line: 383, column: 10, scope: !5817)
!5820 = !DILocation(line: 383, column: 15, scope: !5817)
!5821 = !DILocation(line: 384, column: 10, scope: !5817)
!5822 = !DILocation(line: 384, column: 19, scope: !5817)
!5823 = !DILocation(line: 385, column: 5, scope: !5817)
!5824 = !DILocation(line: 385, column: 25, scope: !5825)
!5825 = !DILexicalBlockFile(scope: !5826, file: !939, discriminator: 1)
!5826 = distinct !DILexicalBlock(scope: !5812, file: !939, line: 385, column: 16)
!5827 = !DILocation(line: 385, column: 38, scope: !5825)
!5828 = !DILocation(line: 385, column: 17, scope: !5825)
!5829 = !DILocation(line: 385, column: 16, scope: !5825)
!5830 = !DILocation(line: 386, column: 17, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5826, file: !939, line: 385, column: 48)
!5832 = !DILocation(line: 386, column: 23, scope: !5831)
!5833 = !DILocation(line: 386, column: 10, scope: !5831)
!5834 = !DILocation(line: 386, column: 15, scope: !5831)
!5835 = !DILocation(line: 387, column: 10, scope: !5831)
!5836 = !DILocation(line: 387, column: 19, scope: !5831)
!5837 = !DILocation(line: 388, column: 5, scope: !5831)
!5838 = !DILocation(line: 388, column: 25, scope: !5839)
!5839 = !DILexicalBlockFile(scope: !5840, file: !939, discriminator: 1)
!5840 = distinct !DILexicalBlock(scope: !5826, file: !939, line: 388, column: 16)
!5841 = !DILocation(line: 388, column: 37, scope: !5839)
!5842 = !DILocation(line: 388, column: 17, scope: !5839)
!5843 = !DILocation(line: 388, column: 16, scope: !5839)
!5844 = !DILocation(line: 389, column: 17, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5840, file: !939, line: 388, column: 47)
!5846 = !DILocation(line: 389, column: 23, scope: !5845)
!5847 = !DILocation(line: 389, column: 10, scope: !5845)
!5848 = !DILocation(line: 389, column: 15, scope: !5845)
!5849 = !DILocation(line: 390, column: 10, scope: !5845)
!5850 = !DILocation(line: 390, column: 19, scope: !5845)
!5851 = !DILocation(line: 391, column: 5, scope: !5845)
!5852 = !DILocation(line: 392, column: 1, scope: !5797)
!5853 = distinct !DISubprogram(name: "handle_rendition_args", scope: !939, file: !939, line: 538, type: !5854, isLocal: true, isDefinition: true, scopeLine: 540, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!5854 = !DISubroutineType(types: !5855)
!5855 = !{null, !5856, !970, !963, !973, !975}
!5856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64, align: 64)
!5857 = !DILocalVariable(name: "info", arg: 1, scope: !5853, file: !939, line: 538, type: !5856)
!5858 = !DILocation(line: 538, column: 58, scope: !5853)
!5859 = !DILocalVariable(name: "key", arg: 2, scope: !5853, file: !939, line: 538, type: !970)
!5860 = !DILocation(line: 538, column: 76, scope: !5853)
!5861 = !DILocalVariable(name: "key_len", arg: 3, scope: !5853, file: !939, line: 539, type: !963)
!5862 = !DILocation(line: 539, column: 39, scope: !5853)
!5863 = !DILocalVariable(name: "dest", arg: 4, scope: !5853, file: !939, line: 539, type: !973)
!5864 = !DILocation(line: 539, column: 55, scope: !5853)
!5865 = !DILocalVariable(name: "dest_len", arg: 5, scope: !5853, file: !939, line: 539, type: !975)
!5866 = !DILocation(line: 539, column: 66, scope: !5853)
!5867 = !DILocation(line: 541, column: 18, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5853, file: !939, line: 541, column: 9)
!5869 = !DILocation(line: 541, column: 32, scope: !5868)
!5870 = !DILocation(line: 541, column: 10, scope: !5868)
!5871 = !DILocation(line: 541, column: 9, scope: !5853)
!5872 = !DILocation(line: 542, column: 17, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5868, file: !939, line: 541, column: 42)
!5874 = !DILocation(line: 542, column: 23, scope: !5873)
!5875 = !DILocation(line: 542, column: 10, scope: !5873)
!5876 = !DILocation(line: 542, column: 15, scope: !5873)
!5877 = !DILocation(line: 543, column: 10, scope: !5873)
!5878 = !DILocation(line: 543, column: 19, scope: !5873)
!5879 = !DILocation(line: 544, column: 5, scope: !5873)
!5880 = !DILocation(line: 544, column: 25, scope: !5881)
!5881 = !DILexicalBlockFile(scope: !5882, file: !939, discriminator: 1)
!5882 = distinct !DILexicalBlock(scope: !5868, file: !939, line: 544, column: 16)
!5883 = !DILocation(line: 544, column: 38, scope: !5881)
!5884 = !DILocation(line: 544, column: 17, scope: !5881)
!5885 = !DILocation(line: 544, column: 16, scope: !5881)
!5886 = !DILocation(line: 545, column: 17, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5882, file: !939, line: 544, column: 48)
!5888 = !DILocation(line: 545, column: 23, scope: !5887)
!5889 = !DILocation(line: 545, column: 10, scope: !5887)
!5890 = !DILocation(line: 545, column: 15, scope: !5887)
!5891 = !DILocation(line: 546, column: 10, scope: !5887)
!5892 = !DILocation(line: 546, column: 19, scope: !5887)
!5893 = !DILocation(line: 547, column: 5, scope: !5887)
!5894 = !DILocation(line: 547, column: 25, scope: !5895)
!5895 = !DILexicalBlockFile(scope: !5896, file: !939, discriminator: 1)
!5896 = distinct !DILexicalBlock(scope: !5882, file: !939, line: 547, column: 16)
!5897 = !DILocation(line: 547, column: 43, scope: !5895)
!5898 = !DILocation(line: 547, column: 17, scope: !5895)
!5899 = !DILocation(line: 547, column: 16, scope: !5895)
!5900 = !DILocation(line: 548, column: 17, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5896, file: !939, line: 547, column: 53)
!5902 = !DILocation(line: 548, column: 23, scope: !5901)
!5903 = !DILocation(line: 548, column: 10, scope: !5901)
!5904 = !DILocation(line: 548, column: 15, scope: !5901)
!5905 = !DILocation(line: 549, column: 10, scope: !5901)
!5906 = !DILocation(line: 549, column: 19, scope: !5901)
!5907 = !DILocation(line: 550, column: 5, scope: !5901)
!5908 = !DILocation(line: 550, column: 25, scope: !5909)
!5909 = !DILexicalBlockFile(scope: !5910, file: !939, discriminator: 1)
!5910 = distinct !DILexicalBlock(scope: !5896, file: !939, line: 550, column: 16)
!5911 = !DILocation(line: 550, column: 43, scope: !5909)
!5912 = !DILocation(line: 550, column: 17, scope: !5909)
!5913 = !DILocation(line: 550, column: 16, scope: !5909)
!5914 = !DILocation(line: 551, column: 17, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5910, file: !939, line: 550, column: 53)
!5916 = !DILocation(line: 551, column: 23, scope: !5915)
!5917 = !DILocation(line: 551, column: 10, scope: !5915)
!5918 = !DILocation(line: 551, column: 15, scope: !5915)
!5919 = !DILocation(line: 552, column: 10, scope: !5915)
!5920 = !DILocation(line: 552, column: 19, scope: !5915)
!5921 = !DILocation(line: 553, column: 5, scope: !5915)
!5922 = !DILocation(line: 553, column: 25, scope: !5923)
!5923 = !DILexicalBlockFile(scope: !5924, file: !939, discriminator: 1)
!5924 = distinct !DILexicalBlock(scope: !5910, file: !939, line: 553, column: 16)
!5925 = !DILocation(line: 553, column: 49, scope: !5923)
!5926 = !DILocation(line: 553, column: 17, scope: !5923)
!5927 = !DILocation(line: 553, column: 16, scope: !5923)
!5928 = !DILocation(line: 554, column: 17, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5924, file: !939, line: 553, column: 59)
!5930 = !DILocation(line: 554, column: 23, scope: !5929)
!5931 = !DILocation(line: 554, column: 10, scope: !5929)
!5932 = !DILocation(line: 554, column: 15, scope: !5929)
!5933 = !DILocation(line: 555, column: 10, scope: !5929)
!5934 = !DILocation(line: 555, column: 19, scope: !5929)
!5935 = !DILocation(line: 556, column: 5, scope: !5929)
!5936 = !DILocation(line: 556, column: 25, scope: !5937)
!5937 = !DILexicalBlockFile(scope: !5938, file: !939, discriminator: 1)
!5938 = distinct !DILexicalBlock(scope: !5924, file: !939, line: 556, column: 16)
!5939 = !DILocation(line: 556, column: 39, scope: !5937)
!5940 = !DILocation(line: 556, column: 17, scope: !5937)
!5941 = !DILocation(line: 556, column: 16, scope: !5937)
!5942 = !DILocation(line: 557, column: 17, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5938, file: !939, line: 556, column: 49)
!5944 = !DILocation(line: 557, column: 23, scope: !5943)
!5945 = !DILocation(line: 557, column: 10, scope: !5943)
!5946 = !DILocation(line: 557, column: 15, scope: !5943)
!5947 = !DILocation(line: 558, column: 10, scope: !5943)
!5948 = !DILocation(line: 558, column: 19, scope: !5943)
!5949 = !DILocation(line: 559, column: 5, scope: !5943)
!5950 = !DILocation(line: 559, column: 25, scope: !5951)
!5951 = !DILexicalBlockFile(scope: !5952, file: !939, discriminator: 1)
!5952 = distinct !DILexicalBlock(scope: !5938, file: !939, line: 559, column: 16)
!5953 = !DILocation(line: 559, column: 42, scope: !5951)
!5954 = !DILocation(line: 559, column: 17, scope: !5951)
!5955 = !DILocation(line: 559, column: 16, scope: !5951)
!5956 = !DILocation(line: 560, column: 17, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5952, file: !939, line: 559, column: 52)
!5958 = !DILocation(line: 560, column: 23, scope: !5957)
!5959 = !DILocation(line: 560, column: 10, scope: !5957)
!5960 = !DILocation(line: 560, column: 15, scope: !5957)
!5961 = !DILocation(line: 561, column: 10, scope: !5957)
!5962 = !DILocation(line: 561, column: 19, scope: !5957)
!5963 = !DILocation(line: 562, column: 5, scope: !5957)
!5964 = !DILocation(line: 562, column: 25, scope: !5965)
!5965 = !DILexicalBlockFile(scope: !5966, file: !939, discriminator: 1)
!5966 = distinct !DILexicalBlock(scope: !5952, file: !939, line: 562, column: 16)
!5967 = !DILocation(line: 562, column: 41, scope: !5965)
!5968 = !DILocation(line: 562, column: 17, scope: !5965)
!5969 = !DILocation(line: 562, column: 16, scope: !5965)
!5970 = !DILocation(line: 563, column: 17, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5966, file: !939, line: 562, column: 51)
!5972 = !DILocation(line: 563, column: 23, scope: !5971)
!5973 = !DILocation(line: 563, column: 10, scope: !5971)
!5974 = !DILocation(line: 563, column: 15, scope: !5971)
!5975 = !DILocation(line: 564, column: 10, scope: !5971)
!5976 = !DILocation(line: 564, column: 19, scope: !5971)
!5977 = !DILocation(line: 565, column: 5, scope: !5971)
!5978 = !DILocation(line: 565, column: 25, scope: !5979)
!5979 = !DILexicalBlockFile(scope: !5980, file: !939, discriminator: 1)
!5980 = distinct !DILexicalBlock(scope: !5966, file: !939, line: 565, column: 16)
!5981 = !DILocation(line: 565, column: 50, scope: !5979)
!5982 = !DILocation(line: 565, column: 17, scope: !5979)
!5983 = !DILocation(line: 565, column: 16, scope: !5979)
!5984 = !DILocation(line: 566, column: 17, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5980, file: !939, line: 565, column: 60)
!5986 = !DILocation(line: 566, column: 23, scope: !5985)
!5987 = !DILocation(line: 566, column: 10, scope: !5985)
!5988 = !DILocation(line: 566, column: 15, scope: !5985)
!5989 = !DILocation(line: 567, column: 10, scope: !5985)
!5990 = !DILocation(line: 567, column: 19, scope: !5985)
!5991 = !DILocation(line: 568, column: 5, scope: !5985)
!5992 = !DILocation(line: 574, column: 1, scope: !5853)
!5993 = distinct !DISubprogram(name: "new_rendition", scope: !939, file: !939, line: 460, type: !5994, isLocal: true, isDefinition: true, scopeLine: 462, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!5994 = !DISubroutineType(types: !5995)
!5995 = !{!2321, !2386, !5856, !970}
!5996 = !DILocalVariable(name: "c", arg: 1, scope: !5993, file: !939, line: 460, type: !2386)
!5997 = !DILocation(line: 460, column: 52, scope: !5993)
!5998 = !DILocalVariable(name: "info", arg: 2, scope: !5993, file: !939, line: 460, type: !5856)
!5999 = !DILocation(line: 460, column: 78, scope: !5993)
!6000 = !DILocalVariable(name: "url_base", arg: 3, scope: !5993, file: !939, line: 461, type: !970)
!6001 = !DILocation(line: 461, column: 51, scope: !5993)
!6002 = !DILocalVariable(name: "rend", scope: !5993, file: !939, line: 463, type: !2321)
!6003 = !DILocation(line: 463, column: 23, scope: !5993)
!6004 = !DILocalVariable(name: "type", scope: !5993, file: !939, line: 464, type: !658)
!6005 = !DILocation(line: 464, column: 22, scope: !5993)
!6006 = !DILocalVariable(name: "characteristic", scope: !5993, file: !939, line: 465, type: !974)
!6007 = !DILocation(line: 465, column: 11, scope: !5993)
!6008 = !DILocalVariable(name: "chr_ptr", scope: !5993, file: !939, line: 466, type: !974)
!6009 = !DILocation(line: 466, column: 11, scope: !5993)
!6010 = !DILocalVariable(name: "saveptr", scope: !5993, file: !939, line: 467, type: !974)
!6011 = !DILocation(line: 467, column: 11, scope: !5993)
!6012 = !DILocation(line: 469, column: 17, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !5993, file: !939, line: 469, column: 9)
!6014 = !DILocation(line: 469, column: 23, scope: !6013)
!6015 = !DILocation(line: 469, column: 10, scope: !6013)
!6016 = !DILocation(line: 469, column: 9, scope: !5993)
!6017 = !DILocation(line: 470, column: 14, scope: !6013)
!6018 = !DILocation(line: 470, column: 9, scope: !6013)
!6019 = !DILocation(line: 471, column: 22, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6013, file: !939, line: 471, column: 14)
!6021 = !DILocation(line: 471, column: 28, scope: !6020)
!6022 = !DILocation(line: 471, column: 15, scope: !6020)
!6023 = !DILocation(line: 471, column: 14, scope: !6013)
!6024 = !DILocation(line: 472, column: 14, scope: !6020)
!6025 = !DILocation(line: 472, column: 9, scope: !6020)
!6026 = !DILocation(line: 473, column: 22, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6020, file: !939, line: 473, column: 14)
!6028 = !DILocation(line: 473, column: 28, scope: !6027)
!6029 = !DILocation(line: 473, column: 15, scope: !6027)
!6030 = !DILocation(line: 473, column: 14, scope: !6020)
!6031 = !DILocation(line: 474, column: 14, scope: !6027)
!6032 = !DILocation(line: 474, column: 9, scope: !6027)
!6033 = !DILocation(line: 475, column: 22, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6027, file: !939, line: 475, column: 14)
!6035 = !DILocation(line: 475, column: 28, scope: !6034)
!6036 = !DILocation(line: 475, column: 15, scope: !6034)
!6037 = !DILocation(line: 475, column: 14, scope: !6027)
!6038 = !DILocation(line: 478, column: 9, scope: !6034)
!6039 = !DILocation(line: 480, column: 9, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !5993, file: !939, line: 480, column: 9)
!6041 = !DILocation(line: 480, column: 14, scope: !6040)
!6042 = !DILocation(line: 480, column: 9, scope: !5993)
!6043 = !DILocation(line: 481, column: 9, scope: !6040)
!6044 = !DILocation(line: 484, column: 9, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !5993, file: !939, line: 484, column: 9)
!6046 = !DILocation(line: 484, column: 14, scope: !6045)
!6047 = !DILocation(line: 484, column: 39, scope: !6045)
!6048 = !DILocation(line: 484, column: 43, scope: !6049)
!6049 = !DILexicalBlockFile(scope: !6045, file: !939, discriminator: 1)
!6050 = !DILocation(line: 484, column: 49, scope: !6049)
!6051 = !DILocation(line: 484, column: 9, scope: !6049)
!6052 = !DILocation(line: 485, column: 9, scope: !6045)
!6053 = !DILocation(line: 488, column: 9, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !5993, file: !939, line: 488, column: 9)
!6055 = !DILocation(line: 488, column: 12, scope: !6054)
!6056 = !DILocation(line: 488, column: 34, scope: !6054)
!6057 = !DILocation(line: 488, column: 9, scope: !5993)
!6058 = !DILocation(line: 489, column: 13, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6054, file: !939, line: 489, column: 13)
!6060 = !DILocation(line: 489, column: 18, scope: !6059)
!6061 = !DILocation(line: 489, column: 13, scope: !6054)
!6062 = !DILocation(line: 490, column: 13, scope: !6059)
!6063 = !DILocation(line: 489, column: 21, scope: !6064)
!6064 = !DILexicalBlockFile(scope: !6059, file: !939, discriminator: 1)
!6065 = !DILocation(line: 492, column: 12, scope: !5993)
!6066 = !DILocation(line: 492, column: 10, scope: !5993)
!6067 = !DILocation(line: 493, column: 10, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !5993, file: !939, line: 493, column: 9)
!6069 = !DILocation(line: 493, column: 9, scope: !5993)
!6070 = !DILocation(line: 494, column: 9, scope: !6068)
!6071 = !DILocation(line: 496, column: 5, scope: !5993)
!6072 = distinct !{!6072, !6071}
!6073 = !DILocalVariable(name: "_tab", scope: !6074, file: !939, line: 496, type: !4711)
!6074 = distinct !DILexicalBlock(scope: !5993, file: !939, line: 496, column: 8)
!6075 = !DILocation(line: 496, column: 37, scope: !6074)
!6076 = !DILocation(line: 496, column: 46, scope: !6077)
!6077 = !DILexicalBlockFile(scope: !6074, file: !939, discriminator: 1)
!6078 = !DILocation(line: 496, column: 49, scope: !6077)
!6079 = !DILocation(line: 496, column: 37, scope: !6077)
!6080 = !DILocalVariable(name: "_elem", scope: !6074, file: !939, line: 496, type: !2321)
!6081 = !DILocation(line: 496, column: 79, scope: !6074)
!6082 = !DILocation(line: 496, column: 88, scope: !6077)
!6083 = !DILocation(line: 496, column: 79, scope: !6077)
!6084 = !DILocation(line: 496, column: 142, scope: !6077)
!6085 = !DILocation(line: 496, column: 149, scope: !6077)
!6086 = !DILocation(line: 496, column: 152, scope: !6077)
!6087 = !DILocation(line: 496, column: 166, scope: !6077)
!6088 = !DILocation(line: 496, column: 126, scope: !6077)
!6089 = !DILocation(line: 496, column: 173, scope: !6077)
!6090 = !DILocation(line: 498, column: 18, scope: !5993)
!6091 = !DILocation(line: 498, column: 5, scope: !5993)
!6092 = !DILocation(line: 498, column: 11, scope: !5993)
!6093 = !DILocation(line: 498, column: 16, scope: !5993)
!6094 = !DILocation(line: 499, column: 12, scope: !5993)
!6095 = !DILocation(line: 499, column: 18, scope: !5993)
!6096 = !DILocation(line: 499, column: 28, scope: !5993)
!6097 = !DILocation(line: 499, column: 34, scope: !5993)
!6098 = !DILocation(line: 499, column: 5, scope: !5993)
!6099 = !DILocation(line: 500, column: 12, scope: !5993)
!6100 = !DILocation(line: 500, column: 18, scope: !5993)
!6101 = !DILocation(line: 500, column: 28, scope: !5993)
!6102 = !DILocation(line: 500, column: 34, scope: !5993)
!6103 = !DILocation(line: 500, column: 5, scope: !5993)
!6104 = !DILocation(line: 501, column: 12, scope: !5993)
!6105 = !DILocation(line: 501, column: 18, scope: !5993)
!6106 = !DILocation(line: 501, column: 24, scope: !5993)
!6107 = !DILocation(line: 501, column: 30, scope: !5993)
!6108 = !DILocation(line: 501, column: 5, scope: !5993)
!6109 = !DILocation(line: 504, column: 9, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !5993, file: !939, line: 504, column: 9)
!6111 = !DILocation(line: 504, column: 15, scope: !6110)
!6112 = !DILocation(line: 504, column: 9, scope: !5993)
!6113 = !DILocation(line: 505, column: 39, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6110, file: !939, line: 504, column: 23)
!6115 = !DILocation(line: 505, column: 42, scope: !6114)
!6116 = !DILocation(line: 505, column: 48, scope: !6114)
!6117 = !DILocation(line: 505, column: 53, scope: !6114)
!6118 = !DILocation(line: 505, column: 26, scope: !6114)
!6119 = !DILocation(line: 505, column: 9, scope: !6114)
!6120 = !DILocation(line: 505, column: 15, scope: !6114)
!6121 = !DILocation(line: 505, column: 24, scope: !6114)
!6122 = !DILocation(line: 506, column: 13, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6114, file: !939, line: 506, column: 13)
!6124 = !DILocation(line: 506, column: 19, scope: !6123)
!6125 = !DILocation(line: 506, column: 13, scope: !6114)
!6126 = !DILocation(line: 507, column: 13, scope: !6123)
!6127 = distinct !{!6127, !6126}
!6128 = !DILocalVariable(name: "_tab", scope: !6129, file: !939, line: 507, type: !4711)
!6129 = distinct !DILexicalBlock(scope: !6123, file: !939, line: 507, column: 16)
!6130 = !DILocation(line: 507, column: 58, scope: !6129)
!6131 = !DILocation(line: 507, column: 67, scope: !6132)
!6132 = !DILexicalBlockFile(scope: !6129, file: !939, discriminator: 1)
!6133 = !DILocation(line: 507, column: 73, scope: !6132)
!6134 = !DILocation(line: 507, column: 83, scope: !6132)
!6135 = !DILocation(line: 507, column: 58, scope: !6132)
!6136 = !DILocalVariable(name: "_elem", scope: !6129, file: !939, line: 507, type: !2321)
!6137 = !DILocation(line: 507, column: 113, scope: !6129)
!6138 = !DILocation(line: 507, column: 122, scope: !6132)
!6139 = !DILocation(line: 507, column: 113, scope: !6132)
!6140 = !DILocation(line: 507, column: 176, scope: !6132)
!6141 = !DILocation(line: 507, column: 183, scope: !6132)
!6142 = !DILocation(line: 507, column: 189, scope: !6132)
!6143 = !DILocation(line: 507, column: 199, scope: !6132)
!6144 = !DILocation(line: 507, column: 213, scope: !6132)
!6145 = !DILocation(line: 507, column: 160, scope: !6132)
!6146 = !DILocation(line: 507, column: 220, scope: !6132)
!6147 = !DILocation(line: 507, column: 220, scope: !6148)
!6148 = !DILexicalBlockFile(scope: !6129, file: !939, discriminator: 2)
!6149 = !DILocation(line: 509, column: 5, scope: !6114)
!6150 = !DILocation(line: 511, column: 9, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !5993, file: !939, line: 511, column: 9)
!6152 = !DILocation(line: 511, column: 15, scope: !6151)
!6153 = !DILocation(line: 511, column: 9, scope: !5993)
!6154 = !DILocalVariable(name: "langlen", scope: !6155, file: !939, line: 512, type: !963)
!6155 = distinct !DILexicalBlock(scope: !6151, file: !939, line: 511, column: 34)
!6156 = !DILocation(line: 512, column: 13, scope: !6155)
!6157 = !DILocation(line: 512, column: 30, scope: !6155)
!6158 = !DILocation(line: 512, column: 36, scope: !6155)
!6159 = !DILocation(line: 512, column: 23, scope: !6155)
!6160 = !DILocation(line: 513, column: 13, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6155, file: !939, line: 513, column: 13)
!6162 = !DILocation(line: 513, column: 21, scope: !6161)
!6163 = !DILocation(line: 513, column: 13, scope: !6155)
!6164 = !DILocation(line: 514, column: 28, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6161, file: !939, line: 513, column: 51)
!6166 = !DILocation(line: 514, column: 13, scope: !6165)
!6167 = !DILocation(line: 514, column: 19, scope: !6165)
!6168 = !DILocation(line: 514, column: 37, scope: !6165)
!6169 = !DILocation(line: 515, column: 21, scope: !6165)
!6170 = !DILocation(line: 515, column: 27, scope: !6165)
!6171 = !DILocation(line: 515, column: 38, scope: !6165)
!6172 = !DILocation(line: 515, column: 36, scope: !6165)
!6173 = !DILocation(line: 515, column: 46, scope: !6165)
!6174 = !DILocation(line: 515, column: 51, scope: !6165)
!6175 = !DILocation(line: 515, column: 57, scope: !6165)
!6176 = !DILocation(line: 516, column: 46, scope: !6165)
!6177 = !DILocation(line: 516, column: 44, scope: !6165)
!6178 = !DILocation(line: 516, column: 54, scope: !6165)
!6179 = !DILocation(line: 515, column: 13, scope: !6165)
!6180 = !DILocation(line: 517, column: 9, scope: !6165)
!6181 = !DILocation(line: 518, column: 5, scope: !6155)
!6182 = !DILocation(line: 520, column: 17, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !5993, file: !939, line: 520, column: 9)
!6184 = !DILocation(line: 520, column: 23, scope: !6183)
!6185 = !DILocation(line: 520, column: 10, scope: !6183)
!6186 = !DILocation(line: 520, column: 9, scope: !5993)
!6187 = !DILocation(line: 521, column: 9, scope: !6183)
!6188 = !DILocation(line: 521, column: 15, scope: !6183)
!6189 = !DILocation(line: 521, column: 27, scope: !6183)
!6190 = !DILocation(line: 522, column: 17, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !5993, file: !939, line: 522, column: 9)
!6192 = !DILocation(line: 522, column: 23, scope: !6191)
!6193 = !DILocation(line: 522, column: 10, scope: !6191)
!6194 = !DILocation(line: 522, column: 9, scope: !5993)
!6195 = !DILocation(line: 523, column: 9, scope: !6191)
!6196 = !DILocation(line: 523, column: 15, scope: !6191)
!6197 = !DILocation(line: 523, column: 27, scope: !6191)
!6198 = !DILocation(line: 525, column: 15, scope: !5993)
!6199 = !DILocation(line: 525, column: 21, scope: !5993)
!6200 = !DILocation(line: 525, column: 13, scope: !5993)
!6201 = !DILocation(line: 526, column: 5, scope: !5993)
!6202 = !DILocation(line: 526, column: 40, scope: !6203)
!6203 = !DILexicalBlockFile(scope: !5993, file: !939, discriminator: 1)
!6204 = !DILocation(line: 526, column: 30, scope: !6203)
!6205 = !DILocation(line: 526, column: 28, scope: !6203)
!6206 = !DILocation(line: 526, column: 5, scope: !6203)
!6207 = !DILocation(line: 527, column: 21, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !939, line: 527, column: 13)
!6209 = distinct !DILexicalBlock(scope: !5993, file: !939, line: 526, column: 66)
!6210 = !DILocation(line: 527, column: 14, scope: !6208)
!6211 = !DILocation(line: 527, column: 13, scope: !6209)
!6212 = !DILocation(line: 528, column: 13, scope: !6208)
!6213 = !DILocation(line: 528, column: 19, scope: !6208)
!6214 = !DILocation(line: 528, column: 31, scope: !6208)
!6215 = !DILocation(line: 529, column: 26, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6208, file: !939, line: 529, column: 18)
!6217 = !DILocation(line: 529, column: 19, scope: !6216)
!6218 = !DILocation(line: 529, column: 18, scope: !6208)
!6219 = !DILocation(line: 530, column: 13, scope: !6216)
!6220 = !DILocation(line: 530, column: 19, scope: !6216)
!6221 = !DILocation(line: 530, column: 31, scope: !6216)
!6222 = !DILocation(line: 532, column: 17, scope: !6209)
!6223 = !DILocation(line: 526, column: 5, scope: !6224)
!6224 = !DILexicalBlockFile(scope: !5993, file: !939, discriminator: 2)
!6225 = distinct !{!6225, !6201}
!6226 = !DILocation(line: 535, column: 12, scope: !5993)
!6227 = !DILocation(line: 535, column: 5, scope: !5993)
!6228 = !DILocation(line: 536, column: 1, scope: !5993)
!6229 = distinct !DISubprogram(name: "ensure_playlist", scope: !939, file: !939, line: 582, type: !6230, isLocal: true, isDefinition: true, scopeLine: 583, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!6230 = !DISubroutineType(types: !6231)
!6231 = !{!963, !2386, !2402, !970}
!6232 = !DILocalVariable(name: "c", arg: 1, scope: !6229, file: !939, line: 582, type: !2386)
!6233 = !DILocation(line: 582, column: 40, scope: !6229)
!6234 = !DILocalVariable(name: "pls", arg: 2, scope: !6229, file: !939, line: 582, type: !2402)
!6235 = !DILocation(line: 582, column: 61, scope: !6229)
!6236 = !DILocalVariable(name: "url", arg: 3, scope: !6229, file: !939, line: 582, type: !970)
!6237 = !DILocation(line: 582, column: 78, scope: !6229)
!6238 = !DILocation(line: 584, column: 10, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6229, file: !939, line: 584, column: 9)
!6240 = !DILocation(line: 584, column: 9, scope: !6239)
!6241 = !DILocation(line: 584, column: 9, scope: !6229)
!6242 = !DILocation(line: 585, column: 9, scope: !6239)
!6243 = !DILocation(line: 586, column: 22, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6229, file: !939, line: 586, column: 9)
!6245 = !DILocation(line: 586, column: 30, scope: !6244)
!6246 = !DILocation(line: 586, column: 10, scope: !6244)
!6247 = !DILocation(line: 586, column: 9, scope: !6229)
!6248 = !DILocation(line: 587, column: 9, scope: !6244)
!6249 = !DILocation(line: 588, column: 25, scope: !6229)
!6250 = !DILocation(line: 588, column: 28, scope: !6229)
!6251 = !DILocation(line: 588, column: 40, scope: !6229)
!6252 = !DILocation(line: 588, column: 12, scope: !6229)
!6253 = !DILocation(line: 588, column: 15, scope: !6229)
!6254 = !DILocation(line: 588, column: 6, scope: !6229)
!6255 = !DILocation(line: 588, column: 10, scope: !6229)
!6256 = !DILocation(line: 589, column: 5, scope: !6229)
!6257 = !DILocation(line: 590, column: 1, scope: !6229)
!6258 = distinct !DISubprogram(name: "handle_init_section_args", scope: !939, file: !939, line: 436, type: !6259, isLocal: true, isDefinition: true, scopeLine: 438, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!6259 = !DISubroutineType(types: !6260)
!6260 = !{null, !6261, !970, !963, !973, !975}
!6261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4157, size: 64, align: 64)
!6262 = !DILocalVariable(name: "info", arg: 1, scope: !6258, file: !939, line: 436, type: !6261)
!6263 = !DILocation(line: 436, column: 64, scope: !6258)
!6264 = !DILocalVariable(name: "key", arg: 2, scope: !6258, file: !939, line: 436, type: !970)
!6265 = !DILocation(line: 436, column: 82, scope: !6258)
!6266 = !DILocalVariable(name: "key_len", arg: 3, scope: !6258, file: !939, line: 437, type: !963)
!6267 = !DILocation(line: 437, column: 48, scope: !6258)
!6268 = !DILocalVariable(name: "dest", arg: 4, scope: !6258, file: !939, line: 437, type: !973)
!6269 = !DILocation(line: 437, column: 64, scope: !6258)
!6270 = !DILocalVariable(name: "dest_len", arg: 5, scope: !6258, file: !939, line: 437, type: !975)
!6271 = !DILocation(line: 437, column: 75, scope: !6258)
!6272 = !DILocation(line: 439, column: 18, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6258, file: !939, line: 439, column: 9)
!6274 = !DILocation(line: 439, column: 31, scope: !6273)
!6275 = !DILocation(line: 439, column: 10, scope: !6273)
!6276 = !DILocation(line: 439, column: 9, scope: !6258)
!6277 = !DILocation(line: 440, column: 17, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6273, file: !939, line: 439, column: 41)
!6279 = !DILocation(line: 440, column: 23, scope: !6278)
!6280 = !DILocation(line: 440, column: 10, scope: !6278)
!6281 = !DILocation(line: 440, column: 15, scope: !6278)
!6282 = !DILocation(line: 441, column: 10, scope: !6278)
!6283 = !DILocation(line: 441, column: 19, scope: !6278)
!6284 = !DILocation(line: 442, column: 5, scope: !6278)
!6285 = !DILocation(line: 442, column: 25, scope: !6286)
!6286 = !DILexicalBlockFile(scope: !6287, file: !939, discriminator: 1)
!6287 = distinct !DILexicalBlock(scope: !6273, file: !939, line: 442, column: 16)
!6288 = !DILocation(line: 442, column: 44, scope: !6286)
!6289 = !DILocation(line: 442, column: 17, scope: !6286)
!6290 = !DILocation(line: 442, column: 16, scope: !6286)
!6291 = !DILocation(line: 443, column: 17, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6287, file: !939, line: 442, column: 54)
!6293 = !DILocation(line: 443, column: 23, scope: !6292)
!6294 = !DILocation(line: 443, column: 10, scope: !6292)
!6295 = !DILocation(line: 443, column: 15, scope: !6292)
!6296 = !DILocation(line: 444, column: 10, scope: !6292)
!6297 = !DILocation(line: 444, column: 19, scope: !6292)
!6298 = !DILocation(line: 445, column: 5, scope: !6292)
!6299 = !DILocation(line: 446, column: 1, scope: !6258)
!6300 = distinct !DISubprogram(name: "new_init_section", scope: !939, file: !939, line: 399, type: !6301, isLocal: true, isDefinition: true, scopeLine: 402, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!6301 = !DISubroutineType(types: !6302)
!6302 = !{!2272, !2245, !6261, !970}
!6303 = !DILocalVariable(name: "pls", arg: 1, scope: !6300, file: !939, line: 399, type: !2245)
!6304 = !DILocation(line: 399, column: 58, scope: !6300)
!6305 = !DILocalVariable(name: "info", arg: 2, scope: !6300, file: !939, line: 400, type: !6261)
!6306 = !DILocation(line: 400, column: 67, scope: !6300)
!6307 = !DILocalVariable(name: "url_base", arg: 3, scope: !6300, file: !939, line: 401, type: !970)
!6308 = !DILocation(line: 401, column: 53, scope: !6300)
!6309 = !DILocalVariable(name: "sec", scope: !6300, file: !939, line: 403, type: !2272)
!6310 = !DILocation(line: 403, column: 21, scope: !6300)
!6311 = !DILocalVariable(name: "ptr", scope: !6300, file: !939, line: 404, type: !974)
!6312 = !DILocation(line: 404, column: 11, scope: !6300)
!6313 = !DILocalVariable(name: "tmp_str", scope: !6300, file: !939, line: 405, type: !2249)
!6314 = !DILocation(line: 405, column: 10, scope: !6300)
!6315 = !DILocation(line: 407, column: 10, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6300, file: !939, line: 407, column: 9)
!6317 = !DILocation(line: 407, column: 16, scope: !6316)
!6318 = !DILocation(line: 407, column: 9, scope: !6300)
!6319 = !DILocation(line: 408, column: 9, scope: !6316)
!6320 = !DILocation(line: 410, column: 11, scope: !6300)
!6321 = !DILocation(line: 410, column: 9, scope: !6300)
!6322 = !DILocation(line: 411, column: 10, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6300, file: !939, line: 411, column: 9)
!6324 = !DILocation(line: 411, column: 9, scope: !6300)
!6325 = !DILocation(line: 412, column: 9, scope: !6323)
!6326 = !DILocation(line: 414, column: 26, scope: !6300)
!6327 = !DILocation(line: 414, column: 52, scope: !6300)
!6328 = !DILocation(line: 414, column: 62, scope: !6300)
!6329 = !DILocation(line: 414, column: 68, scope: !6300)
!6330 = !DILocation(line: 414, column: 5, scope: !6300)
!6331 = !DILocation(line: 415, column: 26, scope: !6300)
!6332 = !DILocation(line: 415, column: 16, scope: !6300)
!6333 = !DILocation(line: 415, column: 5, scope: !6300)
!6334 = !DILocation(line: 415, column: 10, scope: !6300)
!6335 = !DILocation(line: 415, column: 14, scope: !6300)
!6336 = !DILocation(line: 416, column: 10, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6300, file: !939, line: 416, column: 9)
!6338 = !DILocation(line: 416, column: 15, scope: !6337)
!6339 = !DILocation(line: 416, column: 9, scope: !6300)
!6340 = !DILocation(line: 417, column: 17, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6337, file: !939, line: 416, column: 20)
!6342 = !DILocation(line: 417, column: 9, scope: !6341)
!6343 = !DILocation(line: 418, column: 9, scope: !6341)
!6344 = !DILocation(line: 421, column: 9, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6300, file: !939, line: 421, column: 9)
!6346 = !DILocation(line: 421, column: 15, scope: !6345)
!6347 = !DILocation(line: 421, column: 9, scope: !6300)
!6348 = !DILocation(line: 422, column: 29, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6345, file: !939, line: 421, column: 29)
!6350 = !DILocation(line: 422, column: 35, scope: !6349)
!6351 = !DILocation(line: 422, column: 21, scope: !6349)
!6352 = !DILocation(line: 422, column: 9, scope: !6349)
!6353 = !DILocation(line: 422, column: 14, scope: !6349)
!6354 = !DILocation(line: 422, column: 19, scope: !6349)
!6355 = !DILocation(line: 423, column: 22, scope: !6349)
!6356 = !DILocation(line: 423, column: 28, scope: !6349)
!6357 = !DILocation(line: 423, column: 15, scope: !6349)
!6358 = !DILocation(line: 423, column: 13, scope: !6349)
!6359 = !DILocation(line: 424, column: 13, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6349, file: !939, line: 424, column: 13)
!6361 = !DILocation(line: 424, column: 13, scope: !6349)
!6362 = !DILocation(line: 425, column: 39, scope: !6360)
!6363 = !DILocation(line: 425, column: 42, scope: !6360)
!6364 = !DILocation(line: 425, column: 31, scope: !6360)
!6365 = !DILocation(line: 425, column: 13, scope: !6360)
!6366 = !DILocation(line: 425, column: 18, scope: !6360)
!6367 = !DILocation(line: 425, column: 29, scope: !6360)
!6368 = !DILocation(line: 426, column: 5, scope: !6349)
!6369 = !DILocation(line: 428, column: 9, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6345, file: !939, line: 426, column: 12)
!6371 = !DILocation(line: 428, column: 14, scope: !6370)
!6372 = !DILocation(line: 428, column: 19, scope: !6370)
!6373 = !DILocation(line: 431, column: 5, scope: !6300)
!6374 = distinct !{!6374, !6373}
!6375 = !DILocalVariable(name: "_tab", scope: !6376, file: !939, line: 431, type: !4453)
!6376 = distinct !DILexicalBlock(scope: !6300, file: !939, line: 431, column: 8)
!6377 = !DILocation(line: 431, column: 42, scope: !6376)
!6378 = !DILocation(line: 431, column: 51, scope: !6379)
!6379 = !DILexicalBlockFile(scope: !6376, file: !939, discriminator: 1)
!6380 = !DILocation(line: 431, column: 56, scope: !6379)
!6381 = !DILocation(line: 431, column: 42, scope: !6379)
!6382 = !DILocalVariable(name: "_elem", scope: !6376, file: !939, line: 431, type: !2272)
!6383 = !DILocation(line: 431, column: 88, scope: !6376)
!6384 = !DILocation(line: 431, column: 97, scope: !6379)
!6385 = !DILocation(line: 431, column: 88, scope: !6379)
!6386 = !DILocation(line: 431, column: 150, scope: !6379)
!6387 = !DILocation(line: 431, column: 157, scope: !6379)
!6388 = !DILocation(line: 431, column: 162, scope: !6379)
!6389 = !DILocation(line: 431, column: 179, scope: !6379)
!6390 = !DILocation(line: 431, column: 134, scope: !6379)
!6391 = !DILocation(line: 431, column: 186, scope: !6379)
!6392 = !DILocation(line: 433, column: 12, scope: !6300)
!6393 = !DILocation(line: 433, column: 5, scope: !6300)
!6394 = !DILocation(line: 434, column: 1, scope: !6300)
!6395 = distinct !DISubprogram(name: "new_variant", scope: !939, file: !939, line: 329, type: !6396, isLocal: true, isDefinition: true, scopeLine: 331, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!6396 = !DISubroutineType(types: !6397)
!6397 = !{!2396, !2386, !5730, !970, !970}
!6398 = !DILocalVariable(name: "c", arg: 1, scope: !6395, file: !939, line: 329, type: !2386)
!6399 = !DILocation(line: 329, column: 48, scope: !6395)
!6400 = !DILocalVariable(name: "info", arg: 2, scope: !6395, file: !939, line: 329, type: !5730)
!6401 = !DILocation(line: 329, column: 72, scope: !6395)
!6402 = !DILocalVariable(name: "url", arg: 3, scope: !6395, file: !939, line: 330, type: !970)
!6403 = !DILocation(line: 330, column: 48, scope: !6395)
!6404 = !DILocalVariable(name: "base", arg: 4, scope: !6395, file: !939, line: 330, type: !970)
!6405 = !DILocation(line: 330, column: 65, scope: !6395)
!6406 = !DILocalVariable(name: "var", scope: !6395, file: !939, line: 332, type: !2396)
!6407 = !DILocation(line: 332, column: 21, scope: !6395)
!6408 = !DILocalVariable(name: "pls", scope: !6395, file: !939, line: 333, type: !2245)
!6409 = !DILocation(line: 333, column: 22, scope: !6395)
!6410 = !DILocation(line: 335, column: 24, scope: !6395)
!6411 = !DILocation(line: 335, column: 27, scope: !6395)
!6412 = !DILocation(line: 335, column: 32, scope: !6395)
!6413 = !DILocation(line: 335, column: 11, scope: !6395)
!6414 = !DILocation(line: 335, column: 9, scope: !6395)
!6415 = !DILocation(line: 336, column: 10, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6395, file: !939, line: 336, column: 9)
!6417 = !DILocation(line: 336, column: 9, scope: !6395)
!6418 = !DILocation(line: 337, column: 9, scope: !6416)
!6419 = !DILocation(line: 339, column: 11, scope: !6395)
!6420 = !DILocation(line: 339, column: 9, scope: !6395)
!6421 = !DILocation(line: 340, column: 10, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6395, file: !939, line: 340, column: 9)
!6423 = !DILocation(line: 340, column: 9, scope: !6395)
!6424 = !DILocation(line: 341, column: 9, scope: !6422)
!6425 = !DILocation(line: 343, column: 9, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6395, file: !939, line: 343, column: 9)
!6427 = !DILocation(line: 343, column: 9, scope: !6395)
!6428 = !DILocation(line: 344, column: 31, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6426, file: !939, line: 343, column: 15)
!6430 = !DILocation(line: 344, column: 37, scope: !6429)
!6431 = !DILocation(line: 344, column: 26, scope: !6429)
!6432 = !DILocation(line: 344, column: 9, scope: !6429)
!6433 = !DILocation(line: 344, column: 14, scope: !6429)
!6434 = !DILocation(line: 344, column: 24, scope: !6429)
!6435 = !DILocation(line: 345, column: 16, scope: !6429)
!6436 = !DILocation(line: 345, column: 21, scope: !6429)
!6437 = !DILocation(line: 345, column: 34, scope: !6429)
!6438 = !DILocation(line: 345, column: 40, scope: !6429)
!6439 = !DILocation(line: 345, column: 9, scope: !6429)
!6440 = !DILocation(line: 346, column: 16, scope: !6429)
!6441 = !DILocation(line: 346, column: 21, scope: !6429)
!6442 = !DILocation(line: 346, column: 34, scope: !6429)
!6443 = !DILocation(line: 346, column: 40, scope: !6429)
!6444 = !DILocation(line: 346, column: 9, scope: !6429)
!6445 = !DILocation(line: 347, column: 16, scope: !6429)
!6446 = !DILocation(line: 347, column: 21, scope: !6429)
!6447 = !DILocation(line: 347, column: 38, scope: !6429)
!6448 = !DILocation(line: 347, column: 44, scope: !6429)
!6449 = !DILocation(line: 347, column: 9, scope: !6429)
!6450 = !DILocation(line: 348, column: 5, scope: !6429)
!6451 = !DILocation(line: 350, column: 5, scope: !6395)
!6452 = distinct !{!6452, !6451}
!6453 = !DILocalVariable(name: "_tab", scope: !6454, file: !939, line: 350, type: !6455)
!6454 = distinct !DILexicalBlock(scope: !6395, file: !939, line: 350, column: 8)
!6455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64, align: 64)
!6456 = !DILocation(line: 350, column: 35, scope: !6454)
!6457 = !DILocation(line: 350, column: 44, scope: !6458)
!6458 = !DILexicalBlockFile(scope: !6454, file: !939, discriminator: 1)
!6459 = !DILocation(line: 350, column: 47, scope: !6458)
!6460 = !DILocation(line: 350, column: 35, scope: !6458)
!6461 = !DILocalVariable(name: "_elem", scope: !6454, file: !939, line: 350, type: !2396)
!6462 = !DILocation(line: 350, column: 74, scope: !6454)
!6463 = !DILocation(line: 350, column: 83, scope: !6458)
!6464 = !DILocation(line: 350, column: 74, scope: !6458)
!6465 = !DILocation(line: 350, column: 136, scope: !6458)
!6466 = !DILocation(line: 350, column: 143, scope: !6458)
!6467 = !DILocation(line: 350, column: 146, scope: !6458)
!6468 = !DILocation(line: 350, column: 158, scope: !6458)
!6469 = !DILocation(line: 350, column: 120, scope: !6458)
!6470 = !DILocation(line: 350, column: 165, scope: !6458)
!6471 = !DILocation(line: 351, column: 5, scope: !6395)
!6472 = distinct !{!6472, !6471}
!6473 = !DILocalVariable(name: "_tab", scope: !6474, file: !939, line: 351, type: !4688)
!6474 = distinct !DILexicalBlock(scope: !6395, file: !939, line: 351, column: 8)
!6475 = !DILocation(line: 351, column: 38, scope: !6474)
!6476 = !DILocation(line: 351, column: 47, scope: !6477)
!6477 = !DILexicalBlockFile(scope: !6474, file: !939, discriminator: 1)
!6478 = !DILocation(line: 351, column: 52, scope: !6477)
!6479 = !DILocation(line: 351, column: 38, scope: !6477)
!6480 = !DILocalVariable(name: "_elem", scope: !6474, file: !939, line: 351, type: !2245)
!6481 = !DILocation(line: 351, column: 80, scope: !6474)
!6482 = !DILocation(line: 351, column: 89, scope: !6477)
!6483 = !DILocation(line: 351, column: 80, scope: !6477)
!6484 = !DILocation(line: 351, column: 142, scope: !6477)
!6485 = !DILocation(line: 351, column: 149, scope: !6477)
!6486 = !DILocation(line: 351, column: 154, scope: !6477)
!6487 = !DILocation(line: 351, column: 167, scope: !6477)
!6488 = !DILocation(line: 351, column: 126, scope: !6477)
!6489 = !DILocation(line: 351, column: 174, scope: !6477)
!6490 = !DILocation(line: 352, column: 12, scope: !6395)
!6491 = !DILocation(line: 352, column: 5, scope: !6395)
!6492 = !DILocation(line: 353, column: 1, scope: !6395)
!6493 = distinct !DISubprogram(name: "free_segment_dynarray", scope: !939, file: !939, line: 214, type: !6494, isLocal: true, isDefinition: true, scopeLine: 215, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!6494 = !DISubroutineType(types: !6495)
!6495 = !{null, !2271, !963}
!6496 = !DILocalVariable(name: "segments", arg: 1, scope: !6493, file: !939, line: 214, type: !2271)
!6497 = !DILocation(line: 214, column: 52, scope: !6493)
!6498 = !DILocalVariable(name: "n_segments", arg: 2, scope: !6493, file: !939, line: 214, type: !963)
!6499 = !DILocation(line: 214, column: 66, scope: !6493)
!6500 = !DILocalVariable(name: "i", scope: !6493, file: !939, line: 216, type: !963)
!6501 = !DILocation(line: 216, column: 9, scope: !6493)
!6502 = !DILocation(line: 217, column: 12, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6493, file: !939, line: 217, column: 5)
!6504 = !DILocation(line: 217, column: 10, scope: !6503)
!6505 = !DILocation(line: 217, column: 17, scope: !6506)
!6506 = !DILexicalBlockFile(scope: !6507, file: !939, discriminator: 1)
!6507 = distinct !DILexicalBlock(scope: !6503, file: !939, line: 217, column: 5)
!6508 = !DILocation(line: 217, column: 21, scope: !6506)
!6509 = !DILocation(line: 217, column: 19, scope: !6506)
!6510 = !DILocation(line: 217, column: 5, scope: !6506)
!6511 = !DILocation(line: 218, column: 28, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6507, file: !939, line: 217, column: 38)
!6513 = !DILocation(line: 218, column: 19, scope: !6512)
!6514 = !DILocation(line: 218, column: 32, scope: !6512)
!6515 = !DILocation(line: 218, column: 18, scope: !6512)
!6516 = !DILocation(line: 218, column: 9, scope: !6512)
!6517 = !DILocation(line: 219, column: 28, scope: !6512)
!6518 = !DILocation(line: 219, column: 19, scope: !6512)
!6519 = !DILocation(line: 219, column: 32, scope: !6512)
!6520 = !DILocation(line: 219, column: 18, scope: !6512)
!6521 = !DILocation(line: 219, column: 9, scope: !6512)
!6522 = !DILocation(line: 220, column: 28, scope: !6512)
!6523 = !DILocation(line: 220, column: 19, scope: !6512)
!6524 = !DILocation(line: 220, column: 18, scope: !6512)
!6525 = !DILocation(line: 220, column: 9, scope: !6512)
!6526 = !DILocation(line: 221, column: 5, scope: !6512)
!6527 = !DILocation(line: 217, column: 34, scope: !6528)
!6528 = !DILexicalBlockFile(scope: !6507, file: !939, discriminator: 2)
!6529 = !DILocation(line: 217, column: 5, scope: !6528)
!6530 = distinct !{!6530, !6531}
!6531 = !DILocation(line: 217, column: 5, scope: !6493)
!6532 = !DILocation(line: 222, column: 1, scope: !6493)
!6533 = distinct !DISubprogram(name: "new_playlist", scope: !939, file: !939, line: 304, type: !6534, isLocal: true, isDefinition: true, scopeLine: 306, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{!2245, !2386, !970, !970}
!6536 = !DILocalVariable(name: "c", arg: 1, scope: !6533, file: !939, line: 304, type: !2386)
!6537 = !DILocation(line: 304, column: 50, scope: !6533)
!6538 = !DILocalVariable(name: "url", arg: 2, scope: !6533, file: !939, line: 304, type: !970)
!6539 = !DILocation(line: 304, column: 65, scope: !6533)
!6540 = !DILocalVariable(name: "base", arg: 3, scope: !6533, file: !939, line: 305, type: !970)
!6541 = !DILocation(line: 305, column: 50, scope: !6533)
!6542 = !DILocalVariable(name: "pls", scope: !6533, file: !939, line: 307, type: !2245)
!6543 = !DILocation(line: 307, column: 22, scope: !6533)
!6544 = !DILocation(line: 307, column: 28, scope: !6533)
!6545 = !DILocation(line: 308, column: 10, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6533, file: !939, line: 308, column: 9)
!6547 = !DILocation(line: 308, column: 9, scope: !6533)
!6548 = !DILocation(line: 309, column: 9, scope: !6546)
!6549 = !DILocation(line: 310, column: 19, scope: !6533)
!6550 = !DILocation(line: 310, column: 24, scope: !6533)
!6551 = !DILocation(line: 310, column: 5, scope: !6533)
!6552 = !DILocation(line: 311, column: 26, scope: !6533)
!6553 = !DILocation(line: 311, column: 31, scope: !6533)
!6554 = !DILocation(line: 311, column: 54, scope: !6533)
!6555 = !DILocation(line: 311, column: 60, scope: !6533)
!6556 = !DILocation(line: 311, column: 5, scope: !6533)
!6557 = !DILocation(line: 312, column: 5, scope: !6533)
!6558 = !DILocation(line: 312, column: 10, scope: !6533)
!6559 = !DILocation(line: 312, column: 25, scope: !6533)
!6560 = !DILocation(line: 314, column: 5, scope: !6533)
!6561 = !DILocation(line: 314, column: 10, scope: !6533)
!6562 = !DILocation(line: 314, column: 29, scope: !6533)
!6563 = !DILocation(line: 315, column: 5, scope: !6533)
!6564 = !DILocation(line: 315, column: 10, scope: !6533)
!6565 = !DILocation(line: 315, column: 31, scope: !6533)
!6566 = !DILocation(line: 317, column: 5, scope: !6533)
!6567 = distinct !{!6567, !6566}
!6568 = !DILocalVariable(name: "_tab", scope: !6569, file: !939, line: 317, type: !4688)
!6569 = distinct !DILexicalBlock(scope: !6533, file: !939, line: 317, column: 8)
!6570 = !DILocation(line: 317, column: 36, scope: !6569)
!6571 = !DILocation(line: 317, column: 45, scope: !6572)
!6572 = !DILexicalBlockFile(scope: !6569, file: !939, discriminator: 1)
!6573 = !DILocation(line: 317, column: 48, scope: !6572)
!6574 = !DILocation(line: 317, column: 36, scope: !6572)
!6575 = !DILocalVariable(name: "_elem", scope: !6569, file: !939, line: 317, type: !2245)
!6576 = !DILocation(line: 317, column: 76, scope: !6569)
!6577 = !DILocation(line: 317, column: 85, scope: !6572)
!6578 = !DILocation(line: 317, column: 76, scope: !6572)
!6579 = !DILocation(line: 317, column: 138, scope: !6572)
!6580 = !DILocation(line: 317, column: 145, scope: !6572)
!6581 = !DILocation(line: 317, column: 148, scope: !6572)
!6582 = !DILocation(line: 317, column: 161, scope: !6572)
!6583 = !DILocation(line: 317, column: 122, scope: !6572)
!6584 = !DILocation(line: 317, column: 168, scope: !6572)
!6585 = !DILocation(line: 318, column: 12, scope: !6533)
!6586 = !DILocation(line: 318, column: 5, scope: !6533)
!6587 = !DILocation(line: 319, column: 1, scope: !6533)
!6588 = distinct !DISubprogram(name: "reset_packet", scope: !939, file: !939, line: 298, type: !6589, isLocal: true, isDefinition: true, scopeLine: 299, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!6589 = !DISubroutineType(types: !6590)
!6590 = !{null, !1138}
!6591 = !DILocalVariable(name: "pkt", arg: 1, scope: !6588, file: !939, line: 298, type: !1138)
!6592 = !DILocation(line: 298, column: 36, scope: !6588)
!6593 = !DILocation(line: 300, column: 20, scope: !6588)
!6594 = !DILocation(line: 300, column: 5, scope: !6588)
!6595 = !DILocation(line: 301, column: 5, scope: !6588)
!6596 = !DILocation(line: 301, column: 10, scope: !6588)
!6597 = !DILocation(line: 301, column: 15, scope: !6588)
!6598 = !DILocation(line: 302, column: 1, scope: !6588)
!6599 = distinct !DISubprogram(name: "default_reload_interval", scope: !939, file: !939, line: 1322, type: !6600, isLocal: true, isDefinition: true, scopeLine: 1323, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!6600 = !DISubroutineType(types: !6601)
!6601 = !{!959, !2245}
!6602 = !DILocalVariable(name: "pls", arg: 1, scope: !6599, file: !939, line: 1322, type: !2245)
!6603 = !DILocation(line: 1322, column: 57, scope: !6599)
!6604 = !DILocation(line: 1324, column: 12, scope: !6599)
!6605 = !DILocation(line: 1324, column: 17, scope: !6599)
!6606 = !DILocation(line: 1324, column: 28, scope: !6599)
!6607 = !DILocation(line: 1325, column: 41, scope: !6599)
!6608 = !DILocation(line: 1325, column: 46, scope: !6599)
!6609 = !DILocation(line: 1325, column: 57, scope: !6599)
!6610 = !DILocation(line: 1325, column: 27, scope: !6599)
!6611 = !DILocation(line: 1325, column: 32, scope: !6599)
!6612 = !DILocation(line: 1325, column: 63, scope: !6599)
!6613 = !DILocation(line: 1324, column: 12, scope: !6614)
!6614 = !DILexicalBlockFile(scope: !6599, file: !939, discriminator: 1)
!6615 = !DILocation(line: 1326, column: 27, scope: !6599)
!6616 = !DILocation(line: 1326, column: 32, scope: !6599)
!6617 = !DILocation(line: 1324, column: 12, scope: !6618)
!6618 = !DILexicalBlockFile(scope: !6599, file: !939, discriminator: 2)
!6619 = !DILocation(line: 1324, column: 12, scope: !6620)
!6620 = !DILexicalBlockFile(scope: !6599, file: !939, discriminator: 3)
!6621 = !DILocation(line: 1324, column: 5, scope: !6620)
!6622 = distinct !DISubprogram(name: "find_timestamp_in_playlist", scope: !939, file: !939, line: 1579, type: !6623, isLocal: true, isDefinition: true, scopeLine: 1581, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!6623 = !DISubroutineType(types: !6624)
!6624 = !{!963, !2386, !2245, !959, !975}
!6625 = !DILocalVariable(name: "c", arg: 1, scope: !6622, file: !939, line: 1579, type: !2386)
!6626 = !DILocation(line: 1579, column: 51, scope: !6622)
!6627 = !DILocalVariable(name: "pls", arg: 2, scope: !6622, file: !939, line: 1579, type: !2245)
!6628 = !DILocation(line: 1579, column: 71, scope: !6622)
!6629 = !DILocalVariable(name: "timestamp", arg: 3, scope: !6622, file: !939, line: 1580, type: !959)
!6630 = !DILocation(line: 1580, column: 47, scope: !6622)
!6631 = !DILocalVariable(name: "seq_no", arg: 4, scope: !6622, file: !939, line: 1580, type: !975)
!6632 = !DILocation(line: 1580, column: 63, scope: !6622)
!6633 = !DILocalVariable(name: "i", scope: !6622, file: !939, line: 1582, type: !963)
!6634 = !DILocation(line: 1582, column: 9, scope: !6622)
!6635 = !DILocalVariable(name: "pos", scope: !6622, file: !939, line: 1583, type: !959)
!6636 = !DILocation(line: 1583, column: 13, scope: !6622)
!6637 = !DILocation(line: 1583, column: 19, scope: !6622)
!6638 = !DILocation(line: 1583, column: 22, scope: !6622)
!6639 = !DILocation(line: 1583, column: 38, scope: !6622)
!6640 = !DILocation(line: 1583, column: 19, scope: !6641)
!6641 = !DILexicalBlockFile(scope: !6622, file: !939, discriminator: 1)
!6642 = !DILocation(line: 1584, column: 23, scope: !6622)
!6643 = !DILocation(line: 1584, column: 26, scope: !6622)
!6644 = !DILocation(line: 1583, column: 19, scope: !6645)
!6645 = !DILexicalBlockFile(scope: !6622, file: !939, discriminator: 2)
!6646 = !DILocation(line: 1583, column: 19, scope: !6647)
!6647 = !DILexicalBlockFile(scope: !6622, file: !939, discriminator: 3)
!6648 = !DILocation(line: 1583, column: 13, scope: !6647)
!6649 = !DILocation(line: 1586, column: 9, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6622, file: !939, line: 1586, column: 9)
!6651 = !DILocation(line: 1586, column: 21, scope: !6650)
!6652 = !DILocation(line: 1586, column: 19, scope: !6650)
!6653 = !DILocation(line: 1586, column: 9, scope: !6622)
!6654 = !DILocation(line: 1587, column: 19, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6650, file: !939, line: 1586, column: 26)
!6656 = !DILocation(line: 1587, column: 24, scope: !6655)
!6657 = !DILocation(line: 1587, column: 10, scope: !6655)
!6658 = !DILocation(line: 1587, column: 17, scope: !6655)
!6659 = !DILocation(line: 1588, column: 9, scope: !6655)
!6660 = !DILocation(line: 1591, column: 12, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6622, file: !939, line: 1591, column: 5)
!6662 = !DILocation(line: 1591, column: 10, scope: !6661)
!6663 = !DILocation(line: 1591, column: 17, scope: !6664)
!6664 = !DILexicalBlockFile(scope: !6665, file: !939, discriminator: 1)
!6665 = distinct !DILexicalBlock(scope: !6661, file: !939, line: 1591, column: 5)
!6666 = !DILocation(line: 1591, column: 21, scope: !6664)
!6667 = !DILocation(line: 1591, column: 26, scope: !6664)
!6668 = !DILocation(line: 1591, column: 19, scope: !6664)
!6669 = !DILocation(line: 1591, column: 5, scope: !6664)
!6670 = !DILocalVariable(name: "diff", scope: !6671, file: !939, line: 1592, type: !959)
!6671 = distinct !DILexicalBlock(scope: !6665, file: !939, line: 1591, column: 43)
!6672 = !DILocation(line: 1592, column: 17, scope: !6671)
!6673 = !DILocation(line: 1592, column: 24, scope: !6671)
!6674 = !DILocation(line: 1592, column: 44, scope: !6671)
!6675 = !DILocation(line: 1592, column: 30, scope: !6671)
!6676 = !DILocation(line: 1592, column: 35, scope: !6671)
!6677 = !DILocation(line: 1592, column: 48, scope: !6671)
!6678 = !DILocation(line: 1592, column: 28, scope: !6671)
!6679 = !DILocation(line: 1592, column: 59, scope: !6671)
!6680 = !DILocation(line: 1592, column: 57, scope: !6671)
!6681 = !DILocation(line: 1593, column: 13, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6671, file: !939, line: 1593, column: 13)
!6683 = !DILocation(line: 1593, column: 18, scope: !6682)
!6684 = !DILocation(line: 1593, column: 13, scope: !6671)
!6685 = !DILocation(line: 1594, column: 23, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6682, file: !939, line: 1593, column: 23)
!6687 = !DILocation(line: 1594, column: 28, scope: !6686)
!6688 = !DILocation(line: 1594, column: 43, scope: !6686)
!6689 = !DILocation(line: 1594, column: 41, scope: !6686)
!6690 = !DILocation(line: 1594, column: 14, scope: !6686)
!6691 = !DILocation(line: 1594, column: 21, scope: !6686)
!6692 = !DILocation(line: 1595, column: 13, scope: !6686)
!6693 = !DILocation(line: 1597, column: 30, scope: !6671)
!6694 = !DILocation(line: 1597, column: 16, scope: !6671)
!6695 = !DILocation(line: 1597, column: 21, scope: !6671)
!6696 = !DILocation(line: 1597, column: 34, scope: !6671)
!6697 = !DILocation(line: 1597, column: 13, scope: !6671)
!6698 = !DILocation(line: 1598, column: 5, scope: !6671)
!6699 = !DILocation(line: 1591, column: 39, scope: !6700)
!6700 = !DILexicalBlockFile(scope: !6665, file: !939, discriminator: 2)
!6701 = !DILocation(line: 1591, column: 5, scope: !6700)
!6702 = distinct !{!6702, !6703}
!6703 = !DILocation(line: 1591, column: 5, scope: !6622)
!6704 = !DILocation(line: 1600, column: 15, scope: !6622)
!6705 = !DILocation(line: 1600, column: 20, scope: !6622)
!6706 = !DILocation(line: 1600, column: 35, scope: !6622)
!6707 = !DILocation(line: 1600, column: 40, scope: !6622)
!6708 = !DILocation(line: 1600, column: 33, scope: !6622)
!6709 = !DILocation(line: 1600, column: 51, scope: !6622)
!6710 = !DILocation(line: 1600, column: 6, scope: !6622)
!6711 = !DILocation(line: 1600, column: 13, scope: !6622)
!6712 = !DILocation(line: 1602, column: 5, scope: !6622)
!6713 = !DILocation(line: 1603, column: 1, scope: !6622)
!6714 = distinct !DISubprogram(name: "playlist_needed", scope: !939, file: !939, line: 1329, type: !6715, isLocal: true, isDefinition: true, scopeLine: 1330, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!6715 = !DISubroutineType(types: !6716)
!6716 = !{!963, !2245}
!6717 = !DILocalVariable(name: "pls", arg: 1, scope: !6714, file: !939, line: 1329, type: !2245)
!6718 = !DILocation(line: 1329, column: 45, scope: !6714)
!6719 = !DILocalVariable(name: "s", scope: !6714, file: !939, line: 1331, type: !2235)
!6720 = !DILocation(line: 1331, column: 22, scope: !6714)
!6721 = !DILocation(line: 1331, column: 26, scope: !6714)
!6722 = !DILocation(line: 1331, column: 31, scope: !6714)
!6723 = !DILocalVariable(name: "i", scope: !6714, file: !939, line: 1332, type: !963)
!6724 = !DILocation(line: 1332, column: 9, scope: !6714)
!6725 = !DILocalVariable(name: "j", scope: !6714, file: !939, line: 1332, type: !963)
!6726 = !DILocation(line: 1332, column: 12, scope: !6714)
!6727 = !DILocalVariable(name: "stream_needed", scope: !6714, file: !939, line: 1333, type: !963)
!6728 = !DILocation(line: 1333, column: 9, scope: !6714)
!6729 = !DILocalVariable(name: "first_st", scope: !6714, file: !939, line: 1334, type: !963)
!6730 = !DILocation(line: 1334, column: 9, scope: !6714)
!6731 = !DILocation(line: 1337, column: 10, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6714, file: !939, line: 1337, column: 9)
!6733 = !DILocation(line: 1337, column: 15, scope: !6732)
!6734 = !DILocation(line: 1337, column: 19, scope: !6732)
!6735 = !DILocation(line: 1337, column: 23, scope: !6736)
!6736 = !DILexicalBlockFile(scope: !6732, file: !939, discriminator: 1)
!6737 = !DILocation(line: 1337, column: 28, scope: !6736)
!6738 = !DILocation(line: 1337, column: 9, scope: !6736)
!6739 = !DILocation(line: 1338, column: 9, scope: !6732)
!6740 = !DILocation(line: 1341, column: 12, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6714, file: !939, line: 1341, column: 5)
!6742 = !DILocation(line: 1341, column: 10, scope: !6741)
!6743 = !DILocation(line: 1341, column: 17, scope: !6744)
!6744 = !DILexicalBlockFile(scope: !6745, file: !939, discriminator: 1)
!6745 = distinct !DILexicalBlock(scope: !6741, file: !939, line: 1341, column: 5)
!6746 = !DILocation(line: 1341, column: 21, scope: !6744)
!6747 = !DILocation(line: 1341, column: 26, scope: !6744)
!6748 = !DILocation(line: 1341, column: 19, scope: !6744)
!6749 = !DILocation(line: 1341, column: 5, scope: !6744)
!6750 = !DILocation(line: 1342, column: 31, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !939, line: 1342, column: 13)
!6752 = distinct !DILexicalBlock(scope: !6745, file: !939, line: 1341, column: 47)
!6753 = !DILocation(line: 1342, column: 13, scope: !6751)
!6754 = !DILocation(line: 1342, column: 18, scope: !6751)
!6755 = !DILocation(line: 1342, column: 35, scope: !6751)
!6756 = !DILocation(line: 1342, column: 43, scope: !6751)
!6757 = !DILocation(line: 1342, column: 13, scope: !6752)
!6758 = !DILocation(line: 1343, column: 27, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6751, file: !939, line: 1342, column: 60)
!6760 = !DILocation(line: 1344, column: 13, scope: !6759)
!6761 = !DILocation(line: 1346, column: 5, scope: !6752)
!6762 = !DILocation(line: 1341, column: 43, scope: !6763)
!6763 = !DILexicalBlockFile(scope: !6745, file: !939, discriminator: 2)
!6764 = !DILocation(line: 1341, column: 5, scope: !6763)
!6765 = distinct !{!6765, !6766}
!6766 = !DILocation(line: 1341, column: 5, scope: !6714)
!6767 = !DILocation(line: 1350, column: 10, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6714, file: !939, line: 1350, column: 9)
!6769 = !DILocation(line: 1350, column: 9, scope: !6714)
!6770 = !DILocation(line: 1351, column: 9, scope: !6768)
!6771 = !DILocation(line: 1357, column: 16, scope: !6714)
!6772 = !DILocation(line: 1357, column: 21, scope: !6714)
!6773 = !DILocation(line: 1357, column: 38, scope: !6714)
!6774 = !DILocation(line: 1357, column: 14, scope: !6714)
!6775 = !DILocation(line: 1359, column: 12, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6714, file: !939, line: 1359, column: 5)
!6777 = !DILocation(line: 1359, column: 10, scope: !6776)
!6778 = !DILocation(line: 1359, column: 17, scope: !6779)
!6779 = !DILexicalBlockFile(scope: !6780, file: !939, discriminator: 1)
!6780 = distinct !DILexicalBlock(scope: !6776, file: !939, line: 1359, column: 5)
!6781 = !DILocation(line: 1359, column: 21, scope: !6779)
!6782 = !DILocation(line: 1359, column: 24, scope: !6779)
!6783 = !DILocation(line: 1359, column: 19, scope: !6779)
!6784 = !DILocation(line: 1359, column: 5, scope: !6779)
!6785 = !DILocalVariable(name: "program", scope: !6786, file: !939, line: 1360, type: !2080)
!6786 = distinct !DILexicalBlock(scope: !6780, file: !939, line: 1359, column: 42)
!6787 = !DILocation(line: 1360, column: 20, scope: !6786)
!6788 = !DILocation(line: 1360, column: 42, scope: !6786)
!6789 = !DILocation(line: 1360, column: 30, scope: !6786)
!6790 = !DILocation(line: 1360, column: 33, scope: !6786)
!6791 = !DILocation(line: 1361, column: 13, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6786, file: !939, line: 1361, column: 13)
!6793 = !DILocation(line: 1361, column: 22, scope: !6792)
!6794 = !DILocation(line: 1361, column: 30, scope: !6792)
!6795 = !DILocation(line: 1361, column: 13, scope: !6786)
!6796 = !DILocation(line: 1362, column: 20, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6798, file: !939, line: 1362, column: 13)
!6798 = distinct !DILexicalBlock(scope: !6792, file: !939, line: 1361, column: 47)
!6799 = !DILocation(line: 1362, column: 18, scope: !6797)
!6800 = !DILocation(line: 1362, column: 25, scope: !6801)
!6801 = !DILexicalBlockFile(scope: !6802, file: !939, discriminator: 1)
!6802 = distinct !DILexicalBlock(scope: !6797, file: !939, line: 1362, column: 13)
!6803 = !DILocation(line: 1362, column: 29, scope: !6801)
!6804 = !DILocation(line: 1362, column: 38, scope: !6801)
!6805 = !DILocation(line: 1362, column: 27, scope: !6801)
!6806 = !DILocation(line: 1362, column: 13, scope: !6801)
!6807 = !DILocation(line: 1363, column: 43, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6809, file: !939, line: 1363, column: 21)
!6809 = distinct !DILexicalBlock(scope: !6802, file: !939, line: 1362, column: 62)
!6810 = !DILocation(line: 1363, column: 21, scope: !6808)
!6811 = !DILocation(line: 1363, column: 30, scope: !6808)
!6812 = !DILocation(line: 1363, column: 49, scope: !6808)
!6813 = !DILocation(line: 1363, column: 46, scope: !6808)
!6814 = !DILocation(line: 1363, column: 21, scope: !6809)
!6815 = !DILocation(line: 1365, column: 21, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6808, file: !939, line: 1363, column: 59)
!6817 = !DILocation(line: 1367, column: 13, scope: !6809)
!6818 = !DILocation(line: 1362, column: 58, scope: !6819)
!6819 = !DILexicalBlockFile(scope: !6802, file: !939, discriminator: 2)
!6820 = !DILocation(line: 1362, column: 13, scope: !6819)
!6821 = distinct !{!6821, !6822}
!6822 = !DILocation(line: 1362, column: 13, scope: !6798)
!6823 = !DILocation(line: 1368, column: 9, scope: !6798)
!6824 = !DILocation(line: 1369, column: 5, scope: !6786)
!6825 = !DILocation(line: 1359, column: 38, scope: !6826)
!6826 = !DILexicalBlockFile(scope: !6780, file: !939, discriminator: 2)
!6827 = !DILocation(line: 1359, column: 5, scope: !6826)
!6828 = distinct !{!6828, !6829}
!6829 = !DILocation(line: 1359, column: 5, scope: !6714)
!6830 = !DILocation(line: 1372, column: 5, scope: !6714)
!6831 = !DILocation(line: 1373, column: 1, scope: !6714)
!6832 = distinct !DISubprogram(name: "current_segment", scope: !939, file: !939, line: 951, type: !6833, isLocal: true, isDefinition: true, scopeLine: 952, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!6833 = !DISubroutineType(types: !6834)
!6834 = !{!2272, !2245}
!6835 = !DILocalVariable(name: "pls", arg: 1, scope: !6832, file: !939, line: 951, type: !2245)
!6836 = !DILocation(line: 951, column: 57, scope: !6832)
!6837 = !DILocation(line: 953, column: 26, scope: !6832)
!6838 = !DILocation(line: 953, column: 31, scope: !6832)
!6839 = !DILocation(line: 953, column: 44, scope: !6832)
!6840 = !DILocation(line: 953, column: 49, scope: !6832)
!6841 = !DILocation(line: 953, column: 42, scope: !6832)
!6842 = !DILocation(line: 953, column: 12, scope: !6832)
!6843 = !DILocation(line: 953, column: 17, scope: !6832)
!6844 = !DILocation(line: 953, column: 5, scope: !6832)
!6845 = !DILocalVariable(name: "pls", arg: 1, scope: !2242, file: !939, line: 1265, type: !2245)
!6846 = !DILocation(line: 1265, column: 49, scope: !2242)
!6847 = !DILocalVariable(name: "seg", arg: 2, scope: !2242, file: !939, line: 1265, type: !2272)
!6848 = !DILocation(line: 1265, column: 70, scope: !2242)
!6849 = !DILocalVariable(name: "c", scope: !2242, file: !939, line: 1268, type: !2386)
!6850 = !DILocation(line: 1268, column: 17, scope: !2242)
!6851 = !DILocation(line: 1268, column: 21, scope: !2242)
!6852 = !DILocation(line: 1268, column: 26, scope: !2242)
!6853 = !DILocation(line: 1268, column: 34, scope: !2242)
!6854 = !DILocalVariable(name: "sec_size", scope: !2242, file: !939, line: 1269, type: !959)
!6855 = !DILocation(line: 1269, column: 13, scope: !2242)
!6856 = !DILocalVariable(name: "urlsize", scope: !2242, file: !939, line: 1270, type: !959)
!6857 = !DILocation(line: 1270, column: 13, scope: !2242)
!6858 = !DILocalVariable(name: "ret", scope: !2242, file: !939, line: 1271, type: !963)
!6859 = !DILocation(line: 1271, column: 9, scope: !2242)
!6860 = !DILocation(line: 1273, column: 9, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !2242, file: !939, line: 1273, column: 9)
!6862 = !DILocation(line: 1273, column: 14, scope: !6861)
!6863 = !DILocation(line: 1273, column: 30, scope: !6861)
!6864 = !DILocation(line: 1273, column: 35, scope: !6861)
!6865 = !DILocation(line: 1273, column: 27, scope: !6861)
!6866 = !DILocation(line: 1273, column: 9, scope: !2242)
!6867 = !DILocation(line: 1274, column: 9, scope: !6861)
!6868 = !DILocation(line: 1276, column: 5, scope: !2242)
!6869 = !DILocation(line: 1276, column: 10, scope: !2242)
!6870 = !DILocation(line: 1276, column: 27, scope: !2242)
!6871 = !DILocation(line: 1278, column: 10, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !2242, file: !939, line: 1278, column: 9)
!6873 = !DILocation(line: 1278, column: 15, scope: !6872)
!6874 = !DILocation(line: 1278, column: 9, scope: !2242)
!6875 = !DILocation(line: 1279, column: 9, scope: !6872)
!6876 = !DILocation(line: 1281, column: 22, scope: !2242)
!6877 = !DILocation(line: 1281, column: 25, scope: !2242)
!6878 = !DILocation(line: 1281, column: 30, scope: !2242)
!6879 = !DILocation(line: 1281, column: 35, scope: !2242)
!6880 = !DILocation(line: 1281, column: 50, scope: !2242)
!6881 = !DILocation(line: 1281, column: 55, scope: !2242)
!6882 = !DILocation(line: 1281, column: 11, scope: !2242)
!6883 = !DILocation(line: 1281, column: 9, scope: !2242)
!6884 = !DILocation(line: 1282, column: 9, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !2242, file: !939, line: 1282, column: 9)
!6886 = !DILocation(line: 1282, column: 13, scope: !6885)
!6887 = !DILocation(line: 1282, column: 9, scope: !2242)
!6888 = !DILocation(line: 1283, column: 16, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6885, file: !939, line: 1282, column: 18)
!6890 = !DILocation(line: 1283, column: 21, scope: !6889)
!6891 = !DILocation(line: 1285, column: 16, scope: !6889)
!6892 = !DILocation(line: 1285, column: 21, scope: !6889)
!6893 = !DILocation(line: 1283, column: 9, scope: !6889)
!6894 = !DILocation(line: 1286, column: 16, scope: !6889)
!6895 = !DILocation(line: 1286, column: 9, scope: !6889)
!6896 = !DILocation(line: 1289, column: 9, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !2242, file: !939, line: 1289, column: 9)
!6898 = !DILocation(line: 1289, column: 14, scope: !6897)
!6899 = !DILocation(line: 1289, column: 28, scope: !6897)
!6900 = !DILocation(line: 1289, column: 33, scope: !6897)
!6901 = !DILocation(line: 1289, column: 9, scope: !2242)
!6902 = !DILocation(line: 1290, column: 20, scope: !6897)
!6903 = !DILocation(line: 1290, column: 25, scope: !6897)
!6904 = !DILocation(line: 1290, column: 39, scope: !6897)
!6905 = !DILocation(line: 1290, column: 18, scope: !6897)
!6906 = !DILocation(line: 1290, column: 9, scope: !6897)
!6907 = !DILocation(line: 1291, column: 35, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6897, file: !939, line: 1291, column: 14)
!6909 = !DILocation(line: 1291, column: 40, scope: !6908)
!6910 = !DILocation(line: 1291, column: 25, scope: !6908)
!6911 = !DILocation(line: 1291, column: 23, scope: !6908)
!6912 = !DILocation(line: 1291, column: 48, scope: !6908)
!6913 = !DILocation(line: 1291, column: 14, scope: !6897)
!6914 = !DILocation(line: 1292, column: 20, scope: !6908)
!6915 = !DILocation(line: 1292, column: 18, scope: !6908)
!6916 = !DILocation(line: 1292, column: 9, scope: !6908)
!6917 = !DILocation(line: 1294, column: 18, scope: !6908)
!6918 = !DILocation(line: 1296, column: 12, scope: !2242)
!6919 = !DILocation(line: 1296, column: 17, scope: !2242)
!6920 = !DILocation(line: 1298, column: 12, scope: !2242)
!6921 = !DILocation(line: 1296, column: 5, scope: !2242)
!6922 = !DILocation(line: 1300, column: 18, scope: !2242)
!6923 = !DILocation(line: 1300, column: 28, scope: !2242)
!6924 = !DILocation(line: 1300, column: 17, scope: !2242)
!6925 = !DILocation(line: 1300, column: 17, scope: !6926)
!6926 = !DILexicalBlockFile(scope: !2242, file: !939, discriminator: 1)
!6927 = !DILocation(line: 1300, column: 83, scope: !6928)
!6928 = !DILexicalBlockFile(scope: !2242, file: !939, discriminator: 2)
!6929 = !DILocation(line: 1300, column: 17, scope: !6928)
!6930 = !DILocation(line: 1300, column: 17, scope: !6931)
!6931 = !DILexicalBlockFile(scope: !2242, file: !939, discriminator: 3)
!6932 = !DILocation(line: 1300, column: 14, scope: !6931)
!6933 = !DILocation(line: 1302, column: 21, scope: !2242)
!6934 = !DILocation(line: 1302, column: 26, scope: !2242)
!6935 = !DILocation(line: 1302, column: 20, scope: !2242)
!6936 = !DILocation(line: 1302, column: 41, scope: !2242)
!6937 = !DILocation(line: 1302, column: 46, scope: !2242)
!6938 = !DILocation(line: 1302, column: 65, scope: !2242)
!6939 = !DILocation(line: 1302, column: 5, scope: !2242)
!6940 = !DILocation(line: 1304, column: 25, scope: !2242)
!6941 = !DILocation(line: 1304, column: 30, scope: !2242)
!6942 = !DILocation(line: 1304, column: 35, scope: !2242)
!6943 = !DILocation(line: 1304, column: 49, scope: !2242)
!6944 = !DILocation(line: 1304, column: 54, scope: !2242)
!6945 = !DILocation(line: 1305, column: 25, scope: !2242)
!6946 = !DILocation(line: 1305, column: 30, scope: !2242)
!6947 = !DILocation(line: 1304, column: 11, scope: !2242)
!6948 = !DILocation(line: 1304, column: 9, scope: !2242)
!6949 = !DILocation(line: 1306, column: 24, scope: !2242)
!6950 = !DILocation(line: 1306, column: 29, scope: !2242)
!6951 = !DILocation(line: 1306, column: 38, scope: !2242)
!6952 = !DILocation(line: 1306, column: 43, scope: !2242)
!6953 = !DILocation(line: 1306, column: 5, scope: !2242)
!6954 = !DILocation(line: 1308, column: 9, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !2242, file: !939, line: 1308, column: 9)
!6956 = !DILocation(line: 1308, column: 13, scope: !6955)
!6957 = !DILocation(line: 1308, column: 9, scope: !2242)
!6958 = !DILocation(line: 1309, column: 16, scope: !6955)
!6959 = !DILocation(line: 1309, column: 9, scope: !6955)
!6960 = !DILocation(line: 1311, column: 29, scope: !2242)
!6961 = !DILocation(line: 1311, column: 34, scope: !2242)
!6962 = !DILocation(line: 1311, column: 5, scope: !2242)
!6963 = !DILocation(line: 1311, column: 10, scope: !2242)
!6964 = !DILocation(line: 1311, column: 27, scope: !2242)
!6965 = !DILocation(line: 1312, column: 30, scope: !2242)
!6966 = !DILocation(line: 1312, column: 5, scope: !2242)
!6967 = !DILocation(line: 1312, column: 10, scope: !2242)
!6968 = !DILocation(line: 1312, column: 28, scope: !2242)
!6969 = !DILocation(line: 1313, column: 5, scope: !2242)
!6970 = !DILocation(line: 1313, column: 10, scope: !2242)
!6971 = !DILocation(line: 1313, column: 35, scope: !2242)
!6972 = !DILocation(line: 1317, column: 5, scope: !2242)
!6973 = !DILocation(line: 1317, column: 10, scope: !2242)
!6974 = !DILocation(line: 1317, column: 29, scope: !2242)
!6975 = !DILocation(line: 1319, column: 5, scope: !2242)
!6976 = !DILocation(line: 1320, column: 1, scope: !2242)
!6977 = distinct !DISubprogram(name: "open_input", scope: !939, file: !939, line: 1178, type: !6978, isLocal: true, isDefinition: true, scopeLine: 1179, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!6978 = !DISubroutineType(types: !6979)
!6979 = !{!963, !2386, !2245, !2272, !2189}
!6980 = !DILocalVariable(name: "c", arg: 1, scope: !6977, file: !939, line: 1178, type: !2386)
!6981 = !DILocation(line: 1178, column: 35, scope: !6977)
!6982 = !DILocalVariable(name: "pls", arg: 2, scope: !6977, file: !939, line: 1178, type: !2245)
!6983 = !DILocation(line: 1178, column: 55, scope: !6977)
!6984 = !DILocalVariable(name: "seg", arg: 3, scope: !6977, file: !939, line: 1178, type: !2272)
!6985 = !DILocation(line: 1178, column: 76, scope: !6977)
!6986 = !DILocalVariable(name: "in", arg: 4, scope: !6977, file: !939, line: 1178, type: !2189)
!6987 = !DILocation(line: 1178, column: 95, scope: !6977)
!6988 = !DILocalVariable(name: "opts", scope: !6977, file: !939, line: 1180, type: !1246)
!6989 = !DILocation(line: 1180, column: 19, scope: !6977)
!6990 = !DILocalVariable(name: "ret", scope: !6977, file: !939, line: 1181, type: !963)
!6991 = !DILocation(line: 1181, column: 9, scope: !6977)
!6992 = !DILocalVariable(name: "is_http", scope: !6977, file: !939, line: 1182, type: !963)
!6993 = !DILocation(line: 1182, column: 9, scope: !6977)
!6994 = !DILocation(line: 1184, column: 9, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6977, file: !939, line: 1184, column: 9)
!6996 = !DILocation(line: 1184, column: 12, scope: !6995)
!6997 = !DILocation(line: 1184, column: 9, scope: !6977)
!6998 = !DILocation(line: 1185, column: 9, scope: !6995)
!6999 = !DILocation(line: 1187, column: 9, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6977, file: !939, line: 1187, column: 9)
!7001 = !DILocation(line: 1187, column: 14, scope: !7000)
!7002 = !DILocation(line: 1187, column: 19, scope: !7000)
!7003 = !DILocation(line: 1187, column: 9, scope: !6977)
!7004 = !DILocation(line: 1190, column: 42, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7000, file: !939, line: 1187, column: 25)
!7006 = !DILocation(line: 1190, column: 47, scope: !7005)
!7007 = !DILocation(line: 1190, column: 9, scope: !7005)
!7008 = !DILocation(line: 1191, column: 46, scope: !7005)
!7009 = !DILocation(line: 1191, column: 51, scope: !7005)
!7010 = !DILocation(line: 1191, column: 64, scope: !7005)
!7011 = !DILocation(line: 1191, column: 69, scope: !7005)
!7012 = !DILocation(line: 1191, column: 62, scope: !7005)
!7013 = !DILocation(line: 1191, column: 9, scope: !7005)
!7014 = !DILocation(line: 1192, column: 5, scope: !7005)
!7015 = !DILocation(line: 1194, column: 12, scope: !6977)
!7016 = !DILocation(line: 1194, column: 17, scope: !6977)
!7017 = !DILocation(line: 1195, column: 12, scope: !6977)
!7018 = !DILocation(line: 1195, column: 17, scope: !6977)
!7019 = !DILocation(line: 1195, column: 22, scope: !6977)
!7020 = !DILocation(line: 1195, column: 27, scope: !6977)
!7021 = !DILocation(line: 1195, column: 39, scope: !6977)
!7022 = !DILocation(line: 1195, column: 44, scope: !6977)
!7023 = !DILocation(line: 1194, column: 5, scope: !6977)
!7024 = !DILocation(line: 1197, column: 9, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !6977, file: !939, line: 1197, column: 9)
!7026 = !DILocation(line: 1197, column: 14, scope: !7025)
!7027 = !DILocation(line: 1197, column: 23, scope: !7025)
!7028 = !DILocation(line: 1197, column: 9, scope: !6977)
!7029 = !DILocation(line: 1198, column: 24, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7025, file: !939, line: 1197, column: 36)
!7031 = !DILocation(line: 1198, column: 29, scope: !7030)
!7032 = !DILocation(line: 1198, column: 37, scope: !7030)
!7033 = !DILocation(line: 1198, column: 41, scope: !7030)
!7034 = !DILocation(line: 1198, column: 46, scope: !7030)
!7035 = !DILocation(line: 1198, column: 51, scope: !7030)
!7036 = !DILocation(line: 1198, column: 54, scope: !7030)
!7037 = !DILocation(line: 1198, column: 65, scope: !7030)
!7038 = !DILocation(line: 1198, column: 15, scope: !7030)
!7039 = !DILocation(line: 1198, column: 13, scope: !7030)
!7040 = !DILocation(line: 1199, column: 5, scope: !7030)
!7041 = !DILocation(line: 1199, column: 16, scope: !7042)
!7042 = !DILexicalBlockFile(scope: !7043, file: !939, discriminator: 1)
!7043 = distinct !DILexicalBlock(scope: !7025, file: !939, line: 1199, column: 16)
!7044 = !DILocation(line: 1199, column: 21, scope: !7042)
!7045 = !DILocation(line: 1199, column: 30, scope: !7042)
!7046 = !DILocalVariable(name: "iv", scope: !7047, file: !939, line: 1200, type: !7048)
!7047 = distinct !DILexicalBlock(scope: !7043, file: !939, line: 1199, column: 46)
!7048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 264, align: 8, elements: !7049)
!7049 = !{!7050}
!7050 = !DISubrange(count: 33)
!7051 = !DILocation(line: 1200, column: 14, scope: !7047)
!7052 = !DILocalVariable(name: "key", scope: !7047, file: !939, line: 1200, type: !7048)
!7053 = !DILocation(line: 1200, column: 22, scope: !7047)
!7054 = !DILocalVariable(name: "url", scope: !7047, file: !939, line: 1200, type: !2249)
!7055 = !DILocation(line: 1200, column: 31, scope: !7047)
!7056 = !DILocation(line: 1201, column: 20, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7047, file: !939, line: 1201, column: 13)
!7058 = !DILocation(line: 1201, column: 25, scope: !7057)
!7059 = !DILocation(line: 1201, column: 30, scope: !7057)
!7060 = !DILocation(line: 1201, column: 35, scope: !7057)
!7061 = !DILocation(line: 1201, column: 13, scope: !7057)
!7062 = !DILocation(line: 1201, column: 13, scope: !7047)
!7063 = !DILocalVariable(name: "pb", scope: !7064, file: !939, line: 1202, type: !1306)
!7064 = distinct !DILexicalBlock(scope: !7057, file: !939, line: 1201, column: 45)
!7065 = !DILocation(line: 1202, column: 26, scope: !7064)
!7066 = !DILocation(line: 1203, column: 26, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7064, file: !939, line: 1203, column: 17)
!7068 = !DILocation(line: 1203, column: 31, scope: !7067)
!7069 = !DILocation(line: 1203, column: 44, scope: !7067)
!7070 = !DILocation(line: 1203, column: 49, scope: !7067)
!7071 = !DILocation(line: 1203, column: 54, scope: !7067)
!7072 = !DILocation(line: 1203, column: 57, scope: !7067)
!7073 = !DILocation(line: 1203, column: 68, scope: !7067)
!7074 = !DILocation(line: 1203, column: 17, scope: !7067)
!7075 = !DILocation(line: 1203, column: 79, scope: !7067)
!7076 = !DILocation(line: 1203, column: 17, scope: !7064)
!7077 = !DILocation(line: 1204, column: 33, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7067, file: !939, line: 1203, column: 85)
!7079 = !DILocation(line: 1204, column: 37, scope: !7078)
!7080 = !DILocation(line: 1204, column: 42, scope: !7078)
!7081 = !DILocation(line: 1204, column: 23, scope: !7078)
!7082 = !DILocation(line: 1204, column: 21, scope: !7078)
!7083 = !DILocation(line: 1205, column: 21, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7078, file: !939, line: 1205, column: 21)
!7085 = !DILocation(line: 1205, column: 25, scope: !7084)
!7086 = !DILocation(line: 1205, column: 21, scope: !7078)
!7087 = !DILocation(line: 1207, column: 28, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7084, file: !939, line: 1205, column: 46)
!7089 = !DILocation(line: 1207, column: 33, scope: !7088)
!7090 = !DILocation(line: 1206, column: 21, scope: !7088)
!7091 = !DILocation(line: 1208, column: 17, scope: !7088)
!7092 = !DILocation(line: 1209, column: 36, scope: !7078)
!7093 = !DILocation(line: 1209, column: 41, scope: !7078)
!7094 = !DILocation(line: 1209, column: 17, scope: !7078)
!7095 = !DILocation(line: 1210, column: 13, scope: !7078)
!7096 = !DILocation(line: 1212, column: 24, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7067, file: !939, line: 1210, column: 20)
!7098 = !DILocation(line: 1212, column: 29, scope: !7097)
!7099 = !DILocation(line: 1211, column: 17, scope: !7097)
!7100 = !DILocation(line: 1214, column: 24, scope: !7064)
!7101 = !DILocation(line: 1214, column: 29, scope: !7064)
!7102 = !DILocation(line: 1214, column: 38, scope: !7064)
!7103 = !DILocation(line: 1214, column: 43, scope: !7064)
!7104 = !DILocation(line: 1214, column: 13, scope: !7064)
!7105 = !DILocation(line: 1215, column: 9, scope: !7064)
!7106 = !DILocation(line: 1216, column: 24, scope: !7047)
!7107 = !DILocation(line: 1216, column: 28, scope: !7047)
!7108 = !DILocation(line: 1216, column: 33, scope: !7047)
!7109 = !DILocation(line: 1216, column: 9, scope: !7047)
!7110 = !DILocation(line: 1217, column: 24, scope: !7047)
!7111 = !DILocation(line: 1217, column: 29, scope: !7047)
!7112 = !DILocation(line: 1217, column: 34, scope: !7047)
!7113 = !DILocation(line: 1217, column: 9, scope: !7047)
!7114 = !DILocation(line: 1218, column: 18, scope: !7047)
!7115 = !DILocation(line: 1218, column: 26, scope: !7047)
!7116 = !DILocation(line: 1218, column: 9, scope: !7047)
!7117 = !DILocation(line: 1218, column: 16, scope: !7047)
!7118 = !DILocation(line: 1219, column: 20, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7047, file: !939, line: 1219, column: 13)
!7120 = !DILocation(line: 1219, column: 25, scope: !7119)
!7121 = !DILocation(line: 1219, column: 13, scope: !7119)
!7122 = !DILocation(line: 1219, column: 13, scope: !7047)
!7123 = !DILocation(line: 1220, column: 22, scope: !7119)
!7124 = !DILocation(line: 1220, column: 53, scope: !7119)
!7125 = !DILocation(line: 1220, column: 58, scope: !7119)
!7126 = !DILocation(line: 1220, column: 13, scope: !7119)
!7127 = !DILocation(line: 1222, column: 22, scope: !7119)
!7128 = !DILocation(line: 1222, column: 53, scope: !7119)
!7129 = !DILocation(line: 1222, column: 58, scope: !7119)
!7130 = !DILocation(line: 1222, column: 13, scope: !7119)
!7131 = !DILocation(line: 1224, column: 35, scope: !7047)
!7132 = !DILocation(line: 1224, column: 9, scope: !7047)
!7133 = !DILocation(line: 1225, column: 34, scope: !7047)
!7134 = !DILocation(line: 1225, column: 9, scope: !7047)
!7135 = !DILocation(line: 1227, column: 24, scope: !7047)
!7136 = !DILocation(line: 1227, column: 29, scope: !7047)
!7137 = !DILocation(line: 1227, column: 37, scope: !7047)
!7138 = !DILocation(line: 1227, column: 41, scope: !7047)
!7139 = !DILocation(line: 1227, column: 46, scope: !7047)
!7140 = !DILocation(line: 1227, column: 49, scope: !7047)
!7141 = !DILocation(line: 1227, column: 60, scope: !7047)
!7142 = !DILocation(line: 1227, column: 15, scope: !7047)
!7143 = !DILocation(line: 1227, column: 13, scope: !7047)
!7144 = !DILocation(line: 1228, column: 13, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7047, file: !939, line: 1228, column: 13)
!7146 = !DILocation(line: 1228, column: 17, scope: !7145)
!7147 = !DILocation(line: 1228, column: 13, scope: !7047)
!7148 = !DILocation(line: 1229, column: 13, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7145, file: !939, line: 1228, column: 22)
!7150 = !DILocation(line: 1231, column: 13, scope: !7047)
!7151 = !DILocation(line: 1232, column: 5, scope: !7047)
!7152 = !DILocation(line: 1232, column: 16, scope: !7153)
!7153 = !DILexicalBlockFile(scope: !7154, file: !939, discriminator: 1)
!7154 = distinct !DILexicalBlock(scope: !7043, file: !939, line: 1232, column: 16)
!7155 = !DILocation(line: 1232, column: 21, scope: !7153)
!7156 = !DILocation(line: 1232, column: 30, scope: !7153)
!7157 = !DILocation(line: 1233, column: 16, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7154, file: !939, line: 1232, column: 49)
!7159 = !DILocation(line: 1233, column: 21, scope: !7158)
!7160 = !DILocation(line: 1233, column: 9, scope: !7158)
!7161 = !DILocation(line: 1235, column: 13, scope: !7158)
!7162 = !DILocation(line: 1236, column: 5, scope: !7158)
!7163 = !DILocation(line: 1238, column: 11, scope: !7154)
!7164 = !DILocation(line: 1250, column: 9, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !6977, file: !939, line: 1250, column: 9)
!7166 = !DILocation(line: 1250, column: 13, scope: !7165)
!7167 = !DILocation(line: 1250, column: 18, scope: !7165)
!7168 = !DILocation(line: 1250, column: 22, scope: !7169)
!7169 = !DILexicalBlockFile(scope: !7165, file: !939, discriminator: 1)
!7170 = !DILocation(line: 1250, column: 30, scope: !7169)
!7171 = !DILocation(line: 1250, column: 33, scope: !7172)
!7172 = !DILexicalBlockFile(scope: !7165, file: !939, discriminator: 2)
!7173 = !DILocation(line: 1250, column: 38, scope: !7172)
!7174 = !DILocation(line: 1250, column: 47, scope: !7172)
!7175 = !DILocation(line: 1250, column: 59, scope: !7172)
!7176 = !DILocation(line: 1250, column: 62, scope: !7177)
!7177 = !DILexicalBlockFile(scope: !7165, file: !939, discriminator: 3)
!7178 = !DILocation(line: 1250, column: 67, scope: !7177)
!7179 = !DILocation(line: 1250, column: 9, scope: !7177)
!7180 = !DILocalVariable(name: "seekret", scope: !7181, file: !939, line: 1251, type: !959)
!7181 = distinct !DILexicalBlock(scope: !7165, file: !939, line: 1250, column: 79)
!7182 = !DILocation(line: 1251, column: 17, scope: !7181)
!7183 = !DILocation(line: 1251, column: 38, scope: !7181)
!7184 = !DILocation(line: 1251, column: 37, scope: !7181)
!7185 = !DILocation(line: 1251, column: 42, scope: !7181)
!7186 = !DILocation(line: 1251, column: 47, scope: !7181)
!7187 = !DILocation(line: 1251, column: 27, scope: !7181)
!7188 = !DILocation(line: 1252, column: 13, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7181, file: !939, line: 1252, column: 13)
!7190 = !DILocation(line: 1252, column: 21, scope: !7189)
!7191 = !DILocation(line: 1252, column: 13, scope: !7181)
!7192 = !DILocation(line: 1253, column: 20, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7189, file: !939, line: 1252, column: 26)
!7194 = !DILocation(line: 1253, column: 25, scope: !7193)
!7195 = !DILocation(line: 1253, column: 106, scope: !7193)
!7196 = !DILocation(line: 1253, column: 111, scope: !7193)
!7197 = !DILocation(line: 1253, column: 123, scope: !7193)
!7198 = !DILocation(line: 1253, column: 128, scope: !7193)
!7199 = !DILocation(line: 1253, column: 13, scope: !7193)
!7200 = !DILocation(line: 1254, column: 19, scope: !7193)
!7201 = !DILocation(line: 1254, column: 17, scope: !7193)
!7202 = !DILocation(line: 1255, column: 32, scope: !7193)
!7203 = !DILocation(line: 1255, column: 37, scope: !7193)
!7204 = !DILocation(line: 1255, column: 45, scope: !7193)
!7205 = !DILocation(line: 1255, column: 13, scope: !7193)
!7206 = !DILocation(line: 1256, column: 9, scope: !7193)
!7207 = !DILocation(line: 1257, column: 5, scope: !7181)
!7208 = !DILocation(line: 1250, column: 67, scope: !7209)
!7209 = !DILexicalBlockFile(scope: !7165, file: !939, discriminator: 4)
!7210 = !DILocation(line: 1260, column: 5, scope: !6977)
!7211 = !DILocation(line: 1261, column: 5, scope: !6977)
!7212 = !DILocation(line: 1261, column: 10, scope: !6977)
!7213 = !DILocation(line: 1261, column: 25, scope: !6977)
!7214 = !DILocation(line: 1262, column: 12, scope: !6977)
!7215 = !DILocation(line: 1262, column: 5, scope: !6977)
!7216 = distinct !DISubprogram(name: "next_segment", scope: !939, file: !939, line: 956, type: !6833, isLocal: true, isDefinition: true, scopeLine: 957, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!7217 = !DILocalVariable(name: "pls", arg: 1, scope: !7216, file: !939, line: 956, type: !2245)
!7218 = !DILocation(line: 956, column: 54, scope: !7216)
!7219 = !DILocalVariable(name: "n", scope: !7216, file: !939, line: 958, type: !963)
!7220 = !DILocation(line: 958, column: 9, scope: !7216)
!7221 = !DILocation(line: 958, column: 13, scope: !7216)
!7222 = !DILocation(line: 958, column: 18, scope: !7216)
!7223 = !DILocation(line: 958, column: 31, scope: !7216)
!7224 = !DILocation(line: 958, column: 36, scope: !7216)
!7225 = !DILocation(line: 958, column: 29, scope: !7216)
!7226 = !DILocation(line: 958, column: 49, scope: !7216)
!7227 = !DILocation(line: 959, column: 9, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7216, file: !939, line: 959, column: 9)
!7229 = !DILocation(line: 959, column: 14, scope: !7228)
!7230 = !DILocation(line: 959, column: 19, scope: !7228)
!7231 = !DILocation(line: 959, column: 11, scope: !7228)
!7232 = !DILocation(line: 959, column: 9, scope: !7216)
!7233 = !DILocation(line: 960, column: 9, scope: !7228)
!7234 = !DILocation(line: 961, column: 26, scope: !7216)
!7235 = !DILocation(line: 961, column: 12, scope: !7216)
!7236 = !DILocation(line: 961, column: 17, scope: !7216)
!7237 = !DILocation(line: 961, column: 5, scope: !7216)
!7238 = !DILocation(line: 962, column: 1, scope: !7216)
!7239 = distinct !DISubprogram(name: "read_from_url", scope: !939, file: !939, line: 964, type: !7240, isLocal: true, isDefinition: true, scopeLine: 966, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!7240 = !DISubroutineType(types: !7241)
!7241 = !{!963, !2245, !2272, !983, !963}
!7242 = !DILocalVariable(name: "pls", arg: 1, scope: !7239, file: !939, line: 964, type: !2245)
!7243 = !DILocation(line: 964, column: 43, scope: !7239)
!7244 = !DILocalVariable(name: "seg", arg: 2, scope: !7239, file: !939, line: 964, type: !2272)
!7245 = !DILocation(line: 964, column: 64, scope: !7239)
!7246 = !DILocalVariable(name: "buf", arg: 3, scope: !7239, file: !939, line: 965, type: !983)
!7247 = !DILocation(line: 965, column: 35, scope: !7239)
!7248 = !DILocalVariable(name: "buf_size", arg: 4, scope: !7239, file: !939, line: 965, type: !963)
!7249 = !DILocation(line: 965, column: 44, scope: !7239)
!7250 = !DILocalVariable(name: "ret", scope: !7239, file: !939, line: 967, type: !963)
!7251 = !DILocation(line: 967, column: 9, scope: !7239)
!7252 = !DILocation(line: 970, column: 9, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7239, file: !939, line: 970, column: 9)
!7254 = !DILocation(line: 970, column: 14, scope: !7253)
!7255 = !DILocation(line: 970, column: 19, scope: !7253)
!7256 = !DILocation(line: 970, column: 9, scope: !7239)
!7257 = !DILocation(line: 971, column: 22, scope: !7253)
!7258 = !DILocation(line: 971, column: 21, scope: !7253)
!7259 = !DILocation(line: 971, column: 35, scope: !7253)
!7260 = !DILocation(line: 971, column: 40, scope: !7253)
!7261 = !DILocation(line: 971, column: 47, scope: !7253)
!7262 = !DILocation(line: 971, column: 52, scope: !7253)
!7263 = !DILocation(line: 971, column: 45, scope: !7253)
!7264 = !DILocation(line: 971, column: 32, scope: !7253)
!7265 = !DILocation(line: 971, column: 71, scope: !7266)
!7266 = !DILexicalBlockFile(scope: !7253, file: !939, discriminator: 1)
!7267 = !DILocation(line: 971, column: 76, scope: !7266)
!7268 = !DILocation(line: 971, column: 83, scope: !7266)
!7269 = !DILocation(line: 971, column: 88, scope: !7266)
!7270 = !DILocation(line: 971, column: 81, scope: !7266)
!7271 = !DILocation(line: 971, column: 21, scope: !7266)
!7272 = !DILocation(line: 971, column: 107, scope: !7273)
!7273 = !DILexicalBlockFile(scope: !7253, file: !939, discriminator: 2)
!7274 = !DILocation(line: 971, column: 106, scope: !7273)
!7275 = !DILocation(line: 971, column: 21, scope: !7273)
!7276 = !DILocation(line: 971, column: 21, scope: !7277)
!7277 = !DILexicalBlockFile(scope: !7253, file: !939, discriminator: 3)
!7278 = !DILocation(line: 971, column: 20, scope: !7277)
!7279 = !DILocation(line: 971, column: 18, scope: !7277)
!7280 = !DILocation(line: 971, column: 9, scope: !7277)
!7281 = !DILocation(line: 973, column: 21, scope: !7239)
!7282 = !DILocation(line: 973, column: 26, scope: !7239)
!7283 = !DILocation(line: 973, column: 33, scope: !7239)
!7284 = !DILocation(line: 973, column: 38, scope: !7239)
!7285 = !DILocation(line: 973, column: 11, scope: !7239)
!7286 = !DILocation(line: 973, column: 9, scope: !7239)
!7287 = !DILocation(line: 974, column: 9, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7239, file: !939, line: 974, column: 9)
!7289 = !DILocation(line: 974, column: 13, scope: !7288)
!7290 = !DILocation(line: 974, column: 9, scope: !7239)
!7291 = !DILocation(line: 975, column: 32, scope: !7288)
!7292 = !DILocation(line: 975, column: 9, scope: !7288)
!7293 = !DILocation(line: 975, column: 14, scope: !7288)
!7294 = !DILocation(line: 975, column: 29, scope: !7288)
!7295 = !DILocation(line: 977, column: 12, scope: !7239)
!7296 = !DILocation(line: 977, column: 5, scope: !7239)
!7297 = distinct !DISubprogram(name: "intercept_id3", scope: !939, file: !939, line: 1078, type: !7298, isLocal: true, isDefinition: true, scopeLine: 1080, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!7298 = !DISubroutineType(types: !7299)
!7299 = !{null, !2245, !983, !963, !975}
!7300 = !DILocalVariable(name: "pls", arg: 1, scope: !7297, file: !939, line: 1078, type: !2245)
!7301 = !DILocation(line: 1078, column: 44, scope: !7297)
!7302 = !DILocalVariable(name: "buf", arg: 2, scope: !7297, file: !939, line: 1078, type: !983)
!7303 = !DILocation(line: 1078, column: 58, scope: !7297)
!7304 = !DILocalVariable(name: "buf_size", arg: 3, scope: !7297, file: !939, line: 1079, type: !963)
!7305 = !DILocation(line: 1079, column: 30, scope: !7297)
!7306 = !DILocalVariable(name: "len", arg: 4, scope: !7297, file: !939, line: 1079, type: !975)
!7307 = !DILocation(line: 1079, column: 45, scope: !7297)
!7308 = !DILocalVariable(name: "bytes", scope: !7297, file: !939, line: 1083, type: !963)
!7309 = !DILocation(line: 1083, column: 9, scope: !7297)
!7310 = !DILocalVariable(name: "id3_buf_pos", scope: !7297, file: !939, line: 1084, type: !963)
!7311 = !DILocation(line: 1084, column: 9, scope: !7297)
!7312 = !DILocalVariable(name: "fill_buf", scope: !7297, file: !939, line: 1085, type: !963)
!7313 = !DILocation(line: 1085, column: 9, scope: !7297)
!7314 = !DILocalVariable(name: "seg", scope: !7297, file: !939, line: 1086, type: !2272)
!7315 = !DILocation(line: 1086, column: 21, scope: !7297)
!7316 = !DILocation(line: 1086, column: 43, scope: !7297)
!7317 = !DILocation(line: 1086, column: 27, scope: !7297)
!7318 = !DILocation(line: 1089, column: 5, scope: !7297)
!7319 = !DILocation(line: 1091, column: 14, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7321, file: !939, line: 1091, column: 13)
!7321 = distinct !DILexicalBlock(scope: !7297, file: !939, line: 1089, column: 15)
!7322 = !DILocation(line: 1091, column: 13, scope: !7320)
!7323 = !DILocation(line: 1091, column: 18, scope: !7320)
!7324 = !DILocation(line: 1091, column: 23, scope: !7320)
!7325 = !DILocation(line: 1091, column: 26, scope: !7326)
!7326 = !DILexicalBlockFile(scope: !7320, file: !939, discriminator: 1)
!7327 = !DILocation(line: 1091, column: 35, scope: !7326)
!7328 = !DILocation(line: 1091, column: 13, scope: !7326)
!7329 = !DILocation(line: 1092, column: 35, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7320, file: !939, line: 1091, column: 42)
!7331 = !DILocation(line: 1092, column: 40, scope: !7330)
!7332 = !DILocation(line: 1092, column: 45, scope: !7330)
!7333 = !DILocation(line: 1092, column: 52, scope: !7330)
!7334 = !DILocation(line: 1092, column: 51, scope: !7330)
!7335 = !DILocation(line: 1092, column: 49, scope: !7330)
!7336 = !DILocation(line: 1092, column: 63, scope: !7330)
!7337 = !DILocation(line: 1092, column: 62, scope: !7330)
!7338 = !DILocation(line: 1092, column: 60, scope: !7330)
!7339 = !DILocation(line: 1092, column: 21, scope: !7330)
!7340 = !DILocation(line: 1092, column: 19, scope: !7330)
!7341 = !DILocation(line: 1093, column: 17, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7330, file: !939, line: 1093, column: 17)
!7343 = !DILocation(line: 1093, column: 23, scope: !7342)
!7344 = !DILocation(line: 1093, column: 17, scope: !7330)
!7345 = !DILocation(line: 1095, column: 21, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7347, file: !939, line: 1095, column: 21)
!7347 = distinct !DILexicalBlock(scope: !7342, file: !939, line: 1093, column: 28)
!7348 = !DILocation(line: 1095, column: 36, scope: !7346)
!7349 = !DILocation(line: 1095, column: 35, scope: !7346)
!7350 = !DILocation(line: 1095, column: 33, scope: !7346)
!7351 = !DILocation(line: 1095, column: 27, scope: !7346)
!7352 = !DILocation(line: 1095, column: 21, scope: !7347)
!7353 = !DILocation(line: 1098, column: 30, scope: !7346)
!7354 = !DILocation(line: 1098, column: 21, scope: !7346)
!7355 = !DILocation(line: 1100, column: 25, scope: !7347)
!7356 = !DILocation(line: 1100, column: 18, scope: !7347)
!7357 = !DILocation(line: 1100, column: 22, scope: !7347)
!7358 = !DILocation(line: 1102, column: 13, scope: !7347)
!7359 = !DILocation(line: 1102, column: 25, scope: !7360)
!7360 = !DILexicalBlockFile(scope: !7361, file: !939, discriminator: 1)
!7361 = distinct !DILexicalBlock(scope: !7342, file: !939, line: 1102, column: 24)
!7362 = !DILocation(line: 1102, column: 24, scope: !7360)
!7363 = !DILocation(line: 1102, column: 29, scope: !7360)
!7364 = !DILocation(line: 1104, column: 24, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7361, file: !939, line: 1102, column: 35)
!7366 = !DILocation(line: 1104, column: 18, scope: !7365)
!7367 = !DILocation(line: 1104, column: 22, scope: !7365)
!7368 = !DILocation(line: 1105, column: 26, scope: !7365)
!7369 = !DILocation(line: 1106, column: 13, scope: !7365)
!7370 = !DILocation(line: 1107, column: 9, scope: !7330)
!7371 = !DILocation(line: 1109, column: 14, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7321, file: !939, line: 1109, column: 13)
!7373 = !DILocation(line: 1109, column: 13, scope: !7372)
!7374 = !DILocation(line: 1109, column: 18, scope: !7372)
!7375 = !DILocation(line: 1109, column: 13, scope: !7321)
!7376 = !DILocation(line: 1110, column: 13, scope: !7372)
!7377 = !DILocation(line: 1112, column: 28, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7321, file: !939, line: 1112, column: 13)
!7379 = !DILocation(line: 1112, column: 13, scope: !7378)
!7380 = !DILocation(line: 1112, column: 13, scope: !7321)
!7381 = !DILocalVariable(name: "maxsize", scope: !7382, file: !939, line: 1113, type: !959)
!7382 = distinct !DILexicalBlock(scope: !7378, file: !939, line: 1112, column: 41)
!7383 = !DILocation(line: 1113, column: 21, scope: !7382)
!7384 = !DILocation(line: 1113, column: 31, scope: !7382)
!7385 = !DILocation(line: 1113, column: 36, scope: !7382)
!7386 = !DILocation(line: 1113, column: 41, scope: !7382)
!7387 = !DILocation(line: 1113, column: 48, scope: !7388)
!7388 = !DILexicalBlockFile(scope: !7382, file: !939, discriminator: 1)
!7389 = !DILocation(line: 1113, column: 53, scope: !7388)
!7390 = !DILocation(line: 1113, column: 31, scope: !7388)
!7391 = !DILocation(line: 1113, column: 31, scope: !7392)
!7392 = !DILexicalBlockFile(scope: !7382, file: !939, discriminator: 2)
!7393 = !DILocation(line: 1113, column: 31, scope: !7394)
!7394 = !DILexicalBlockFile(scope: !7382, file: !939, discriminator: 3)
!7395 = !DILocation(line: 1113, column: 21, scope: !7394)
!7396 = !DILocalVariable(name: "taglen", scope: !7382, file: !939, line: 1114, type: !963)
!7397 = !DILocation(line: 1114, column: 17, scope: !7382)
!7398 = !DILocation(line: 1114, column: 43, scope: !7382)
!7399 = !DILocation(line: 1114, column: 26, scope: !7382)
!7400 = !DILocalVariable(name: "tag_got_bytes", scope: !7382, file: !939, line: 1115, type: !963)
!7401 = !DILocation(line: 1115, column: 17, scope: !7382)
!7402 = !DILocation(line: 1115, column: 35, scope: !7382)
!7403 = !DILocation(line: 1115, column: 47, scope: !7382)
!7404 = !DILocation(line: 1115, column: 46, scope: !7382)
!7405 = !DILocation(line: 1115, column: 43, scope: !7382)
!7406 = !DILocation(line: 1115, column: 34, scope: !7382)
!7407 = !DILocation(line: 1115, column: 56, scope: !7388)
!7408 = !DILocation(line: 1115, column: 55, scope: !7388)
!7409 = !DILocation(line: 1115, column: 34, scope: !7388)
!7410 = !DILocation(line: 1115, column: 64, scope: !7392)
!7411 = !DILocation(line: 1115, column: 34, scope: !7392)
!7412 = !DILocation(line: 1115, column: 34, scope: !7394)
!7413 = !DILocation(line: 1115, column: 17, scope: !7394)
!7414 = !DILocalVariable(name: "remaining", scope: !7382, file: !939, line: 1116, type: !963)
!7415 = !DILocation(line: 1116, column: 17, scope: !7382)
!7416 = !DILocation(line: 1116, column: 29, scope: !7382)
!7417 = !DILocation(line: 1116, column: 38, scope: !7382)
!7418 = !DILocation(line: 1116, column: 36, scope: !7382)
!7419 = !DILocation(line: 1118, column: 17, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7382, file: !939, line: 1118, column: 17)
!7421 = !DILocation(line: 1118, column: 26, scope: !7420)
!7422 = !DILocation(line: 1118, column: 24, scope: !7420)
!7423 = !DILocation(line: 1118, column: 17, scope: !7382)
!7424 = !DILocation(line: 1119, column: 24, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7420, file: !939, line: 1118, column: 35)
!7426 = !DILocation(line: 1119, column: 29, scope: !7425)
!7427 = !DILocation(line: 1120, column: 24, scope: !7425)
!7428 = !DILocation(line: 1120, column: 32, scope: !7425)
!7429 = !DILocation(line: 1119, column: 17, scope: !7425)
!7430 = !DILocation(line: 1121, column: 17, scope: !7425)
!7431 = !DILocation(line: 1131, column: 44, scope: !7382)
!7432 = !DILocation(line: 1131, column: 49, scope: !7382)
!7433 = !DILocation(line: 1131, column: 59, scope: !7382)
!7434 = !DILocation(line: 1131, column: 64, scope: !7382)
!7435 = !DILocation(line: 1131, column: 78, scope: !7382)
!7436 = !DILocation(line: 1131, column: 92, scope: !7382)
!7437 = !DILocation(line: 1131, column: 90, scope: !7382)
!7438 = !DILocation(line: 1131, column: 28, scope: !7382)
!7439 = !DILocation(line: 1131, column: 13, scope: !7382)
!7440 = !DILocation(line: 1131, column: 18, scope: !7382)
!7441 = !DILocation(line: 1131, column: 26, scope: !7382)
!7442 = !DILocation(line: 1132, column: 18, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7382, file: !939, line: 1132, column: 17)
!7444 = !DILocation(line: 1132, column: 23, scope: !7443)
!7445 = !DILocation(line: 1132, column: 17, scope: !7382)
!7446 = !DILocation(line: 1133, column: 17, scope: !7443)
!7447 = !DILocation(line: 1134, column: 20, scope: !7382)
!7448 = !DILocation(line: 1134, column: 25, scope: !7382)
!7449 = !DILocation(line: 1134, column: 35, scope: !7382)
!7450 = !DILocation(line: 1134, column: 33, scope: !7382)
!7451 = !DILocation(line: 1134, column: 48, scope: !7382)
!7452 = !DILocation(line: 1134, column: 53, scope: !7382)
!7453 = !DILocation(line: 1134, column: 13, scope: !7382)
!7454 = !DILocation(line: 1135, column: 28, scope: !7382)
!7455 = !DILocation(line: 1135, column: 25, scope: !7382)
!7456 = !DILocation(line: 1138, column: 21, scope: !7382)
!7457 = !DILocation(line: 1138, column: 14, scope: !7382)
!7458 = !DILocation(line: 1138, column: 18, scope: !7382)
!7459 = !DILocation(line: 1139, column: 21, scope: !7382)
!7460 = !DILocation(line: 1139, column: 26, scope: !7382)
!7461 = !DILocation(line: 1139, column: 32, scope: !7382)
!7462 = !DILocation(line: 1139, column: 30, scope: !7382)
!7463 = !DILocation(line: 1139, column: 48, scope: !7382)
!7464 = !DILocation(line: 1139, column: 47, scope: !7382)
!7465 = !DILocation(line: 1139, column: 13, scope: !7382)
!7466 = !DILocation(line: 1140, column: 20, scope: !7382)
!7467 = !DILocation(line: 1140, column: 25, scope: !7382)
!7468 = !DILocation(line: 1140, column: 65, scope: !7382)
!7469 = !DILocation(line: 1140, column: 13, scope: !7382)
!7470 = !DILocation(line: 1142, column: 17, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7382, file: !939, line: 1142, column: 17)
!7472 = !DILocation(line: 1142, column: 27, scope: !7471)
!7473 = !DILocation(line: 1142, column: 17, scope: !7382)
!7474 = !DILocation(line: 1144, column: 35, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !939, line: 1144, column: 21)
!7476 = distinct !DILexicalBlock(scope: !7471, file: !939, line: 1142, column: 32)
!7477 = !DILocation(line: 1144, column: 40, scope: !7475)
!7478 = !DILocation(line: 1144, column: 45, scope: !7475)
!7479 = !DILocation(line: 1144, column: 50, scope: !7475)
!7480 = !DILocation(line: 1144, column: 60, scope: !7475)
!7481 = !DILocation(line: 1144, column: 58, scope: !7475)
!7482 = !DILocation(line: 1144, column: 73, scope: !7475)
!7483 = !DILocation(line: 1144, column: 21, scope: !7475)
!7484 = !DILocation(line: 1144, column: 87, scope: !7475)
!7485 = !DILocation(line: 1144, column: 84, scope: !7475)
!7486 = !DILocation(line: 1144, column: 21, scope: !7476)
!7487 = !DILocation(line: 1145, column: 21, scope: !7475)
!7488 = !DILocation(line: 1146, column: 32, scope: !7476)
!7489 = !DILocation(line: 1146, column: 29, scope: !7476)
!7490 = !DILocation(line: 1147, column: 24, scope: !7476)
!7491 = !DILocation(line: 1147, column: 29, scope: !7476)
!7492 = !DILocation(line: 1147, column: 80, scope: !7476)
!7493 = !DILocation(line: 1147, column: 17, scope: !7476)
!7494 = !DILocation(line: 1148, column: 13, scope: !7476)
!7495 = !DILocation(line: 1150, column: 9, scope: !7382)
!7496 = !DILocation(line: 1152, column: 13, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7378, file: !939, line: 1150, column: 16)
!7498 = !DILocation(line: 1089, column: 5, scope: !7499)
!7499 = !DILexicalBlockFile(scope: !7297, file: !939, discriminator: 1)
!7500 = distinct !{!7500, !7318}
!7501 = !DILocation(line: 1157, column: 10, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7297, file: !939, line: 1157, column: 9)
!7503 = !DILocation(line: 1157, column: 9, scope: !7502)
!7504 = !DILocation(line: 1157, column: 14, scope: !7502)
!7505 = !DILocation(line: 1157, column: 19, scope: !7502)
!7506 = !DILocation(line: 1157, column: 23, scope: !7507)
!7507 = !DILexicalBlockFile(scope: !7502, file: !939, discriminator: 1)
!7508 = !DILocation(line: 1157, column: 32, scope: !7507)
!7509 = !DILocation(line: 1157, column: 36, scope: !7510)
!7510 = !DILexicalBlockFile(scope: !7502, file: !939, discriminator: 2)
!7511 = !DILocation(line: 1157, column: 35, scope: !7510)
!7512 = !DILocation(line: 1157, column: 40, scope: !7510)
!7513 = !DILocation(line: 1157, column: 9, scope: !7510)
!7514 = !DILocation(line: 1158, column: 31, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7502, file: !939, line: 1157, column: 47)
!7516 = !DILocation(line: 1158, column: 36, scope: !7515)
!7517 = !DILocation(line: 1158, column: 41, scope: !7515)
!7518 = !DILocation(line: 1158, column: 48, scope: !7515)
!7519 = !DILocation(line: 1158, column: 47, scope: !7515)
!7520 = !DILocation(line: 1158, column: 45, scope: !7515)
!7521 = !DILocation(line: 1158, column: 53, scope: !7515)
!7522 = !DILocation(line: 1158, column: 65, scope: !7515)
!7523 = !DILocation(line: 1158, column: 64, scope: !7515)
!7524 = !DILocation(line: 1158, column: 62, scope: !7515)
!7525 = !DILocation(line: 1158, column: 17, scope: !7515)
!7526 = !DILocation(line: 1158, column: 15, scope: !7515)
!7527 = !DILocation(line: 1161, column: 13, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7515, file: !939, line: 1161, column: 13)
!7529 = !DILocation(line: 1161, column: 19, scope: !7528)
!7530 = !DILocation(line: 1161, column: 13, scope: !7515)
!7531 = !DILocation(line: 1162, column: 21, scope: !7528)
!7532 = !DILocation(line: 1162, column: 14, scope: !7528)
!7533 = !DILocation(line: 1162, column: 18, scope: !7528)
!7534 = !DILocation(line: 1162, column: 13, scope: !7528)
!7535 = !DILocation(line: 1163, column: 19, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7528, file: !939, line: 1163, column: 18)
!7537 = !DILocation(line: 1163, column: 18, scope: !7536)
!7538 = !DILocation(line: 1163, column: 23, scope: !7536)
!7539 = !DILocation(line: 1163, column: 18, scope: !7528)
!7540 = !DILocation(line: 1164, column: 20, scope: !7536)
!7541 = !DILocation(line: 1164, column: 14, scope: !7536)
!7542 = !DILocation(line: 1164, column: 18, scope: !7536)
!7543 = !DILocation(line: 1164, column: 13, scope: !7536)
!7544 = !DILocation(line: 1165, column: 5, scope: !7515)
!7545 = !DILocation(line: 1167, column: 9, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7297, file: !939, line: 1167, column: 9)
!7547 = !DILocation(line: 1167, column: 14, scope: !7546)
!7548 = !DILocation(line: 1167, column: 9, scope: !7297)
!7549 = !DILocalVariable(name: "id3ioctx", scope: !7550, file: !939, line: 1169, type: !1307)
!7550 = distinct !DILexicalBlock(scope: !7546, file: !939, line: 1167, column: 23)
!7551 = !DILocation(line: 1169, column: 21, scope: !7550)
!7552 = !DILocation(line: 1170, column: 38, scope: !7550)
!7553 = !DILocation(line: 1170, column: 43, scope: !7550)
!7554 = !DILocation(line: 1170, column: 52, scope: !7550)
!7555 = !DILocation(line: 1170, column: 9, scope: !7550)
!7556 = !DILocation(line: 1171, column: 31, scope: !7550)
!7557 = !DILocation(line: 1171, column: 9, scope: !7550)
!7558 = !DILocation(line: 1172, column: 5, scope: !7550)
!7559 = !DILocation(line: 1174, column: 9, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7297, file: !939, line: 1174, column: 9)
!7561 = !DILocation(line: 1174, column: 14, scope: !7560)
!7562 = !DILocation(line: 1174, column: 33, scope: !7560)
!7563 = !DILocation(line: 1174, column: 9, scope: !7297)
!7564 = !DILocation(line: 1175, column: 36, scope: !7560)
!7565 = !DILocation(line: 1175, column: 41, scope: !7560)
!7566 = !DILocation(line: 1175, column: 62, scope: !7560)
!7567 = !DILocation(line: 1175, column: 9, scope: !7560)
!7568 = !DILocation(line: 1175, column: 14, scope: !7560)
!7569 = !DILocation(line: 1175, column: 33, scope: !7560)
!7570 = !DILocation(line: 1176, column: 1, scope: !7297)
!7571 = distinct !DISubprogram(name: "open_url", scope: !939, file: !939, line: 610, type: !7572, isLocal: true, isDefinition: true, scopeLine: 612, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!7572 = !DISubroutineType(types: !7573)
!7573 = !{!963, !2235, !2189, !970, !1246, !1246, !975}
!7574 = !DILocalVariable(name: "s", arg: 1, scope: !7571, file: !939, line: 610, type: !2235)
!7575 = !DILocation(line: 610, column: 38, scope: !7571)
!7576 = !DILocalVariable(name: "pb", arg: 2, scope: !7571, file: !939, line: 610, type: !2189)
!7577 = !DILocation(line: 610, column: 55, scope: !7571)
!7578 = !DILocalVariable(name: "url", arg: 3, scope: !7571, file: !939, line: 610, type: !970)
!7579 = !DILocation(line: 610, column: 71, scope: !7571)
!7580 = !DILocalVariable(name: "opts", arg: 4, scope: !7571, file: !939, line: 611, type: !1246)
!7581 = !DILocation(line: 611, column: 35, scope: !7571)
!7582 = !DILocalVariable(name: "opts2", arg: 5, scope: !7571, file: !939, line: 611, type: !1246)
!7583 = !DILocation(line: 611, column: 55, scope: !7571)
!7584 = !DILocalVariable(name: "is_http_out", arg: 6, scope: !7571, file: !939, line: 611, type: !975)
!7585 = !DILocation(line: 611, column: 67, scope: !7571)
!7586 = !DILocalVariable(name: "c", scope: !7571, file: !939, line: 613, type: !2386)
!7587 = !DILocation(line: 613, column: 17, scope: !7571)
!7588 = !DILocation(line: 613, column: 21, scope: !7571)
!7589 = !DILocation(line: 613, column: 24, scope: !7571)
!7590 = !DILocalVariable(name: "tmp", scope: !7571, file: !939, line: 614, type: !1246)
!7591 = !DILocation(line: 614, column: 19, scope: !7571)
!7592 = !DILocalVariable(name: "proto_name", scope: !7571, file: !939, line: 615, type: !970)
!7593 = !DILocation(line: 615, column: 17, scope: !7571)
!7594 = !DILocalVariable(name: "ret", scope: !7571, file: !939, line: 616, type: !963)
!7595 = !DILocation(line: 616, column: 9, scope: !7571)
!7596 = !DILocalVariable(name: "is_http", scope: !7571, file: !939, line: 617, type: !963)
!7597 = !DILocation(line: 617, column: 9, scope: !7571)
!7598 = !DILocation(line: 619, column: 24, scope: !7571)
!7599 = !DILocation(line: 619, column: 5, scope: !7571)
!7600 = !DILocation(line: 620, column: 24, scope: !7571)
!7601 = !DILocation(line: 620, column: 5, scope: !7571)
!7602 = !DILocation(line: 622, column: 21, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7571, file: !939, line: 622, column: 9)
!7604 = !DILocation(line: 622, column: 9, scope: !7603)
!7605 = !DILocation(line: 622, column: 9, scope: !7571)
!7606 = !DILocation(line: 623, column: 13, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !939, line: 623, column: 13)
!7608 = distinct !DILexicalBlock(scope: !7603, file: !939, line: 622, column: 42)
!7609 = !DILocation(line: 623, column: 20, scope: !7607)
!7610 = !DILocation(line: 623, column: 27, scope: !7607)
!7611 = !DILocation(line: 623, column: 30, scope: !7612)
!7612 = !DILexicalBlockFile(scope: !7607, file: !939, discriminator: 1)
!7613 = !DILocation(line: 623, column: 37, scope: !7612)
!7614 = !DILocation(line: 623, column: 13, scope: !7612)
!7615 = !DILocation(line: 624, column: 50, scope: !7607)
!7616 = !DILocation(line: 624, column: 54, scope: !7607)
!7617 = !DILocation(line: 624, column: 26, scope: !7607)
!7618 = !DILocation(line: 624, column: 24, scope: !7607)
!7619 = !DILocation(line: 624, column: 13, scope: !7607)
!7620 = !DILocation(line: 625, column: 5, scope: !7608)
!7621 = !DILocation(line: 627, column: 10, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7571, file: !939, line: 627, column: 9)
!7623 = !DILocation(line: 627, column: 9, scope: !7571)
!7624 = !DILocation(line: 628, column: 46, scope: !7622)
!7625 = !DILocation(line: 628, column: 22, scope: !7622)
!7626 = !DILocation(line: 628, column: 20, scope: !7622)
!7627 = !DILocation(line: 628, column: 9, scope: !7622)
!7628 = !DILocation(line: 630, column: 10, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7571, file: !939, line: 630, column: 9)
!7630 = !DILocation(line: 630, column: 9, scope: !7571)
!7631 = !DILocation(line: 631, column: 9, scope: !7629)
!7632 = !DILocation(line: 634, column: 21, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7571, file: !939, line: 634, column: 9)
!7634 = !DILocation(line: 634, column: 9, scope: !7633)
!7635 = !DILocation(line: 634, column: 9, scope: !7571)
!7636 = !DILocation(line: 635, column: 20, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7638, file: !939, line: 635, column: 13)
!7638 = distinct !DILexicalBlock(scope: !7633, file: !939, line: 634, column: 47)
!7639 = !DILocation(line: 635, column: 23, scope: !7637)
!7640 = !DILocation(line: 635, column: 13, scope: !7637)
!7641 = !DILocation(line: 635, column: 50, scope: !7637)
!7642 = !DILocation(line: 635, column: 67, scope: !7643)
!7643 = !DILexicalBlockFile(scope: !7637, file: !939, discriminator: 1)
!7644 = !DILocation(line: 635, column: 72, scope: !7643)
!7645 = !DILocation(line: 635, column: 75, scope: !7643)
!7646 = !DILocation(line: 635, column: 54, scope: !7643)
!7647 = !DILocation(line: 635, column: 13, scope: !7643)
!7648 = !DILocation(line: 636, column: 20, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7637, file: !939, line: 635, column: 96)
!7650 = !DILocation(line: 639, column: 17, scope: !7649)
!7651 = !DILocation(line: 636, column: 13, scope: !7649)
!7652 = !DILocation(line: 640, column: 13, scope: !7649)
!7653 = !DILocation(line: 642, column: 5, scope: !7638)
!7654 = !DILocation(line: 642, column: 28, scope: !7655)
!7655 = !DILexicalBlockFile(scope: !7656, file: !939, discriminator: 1)
!7656 = distinct !DILexicalBlock(scope: !7633, file: !939, line: 642, column: 16)
!7657 = !DILocation(line: 642, column: 16, scope: !7655)
!7658 = !DILocation(line: 643, column: 17, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7656, file: !939, line: 642, column: 54)
!7660 = !DILocation(line: 644, column: 5, scope: !7659)
!7661 = !DILocation(line: 645, column: 9, scope: !7656)
!7662 = !DILocation(line: 647, column: 18, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7571, file: !939, line: 647, column: 9)
!7664 = !DILocation(line: 647, column: 30, scope: !7663)
!7665 = !DILocation(line: 647, column: 42, scope: !7663)
!7666 = !DILocation(line: 647, column: 35, scope: !7663)
!7667 = !DILocation(line: 647, column: 10, scope: !7668)
!7668 = !DILexicalBlockFile(scope: !7663, file: !939, discriminator: 3)
!7669 = !DILocation(line: 647, column: 10, scope: !7663)
!7670 = !DILocation(line: 647, column: 55, scope: !7663)
!7671 = !DILocation(line: 647, column: 69, scope: !7672)
!7672 = !DILexicalBlockFile(scope: !7663, file: !939, discriminator: 1)
!7673 = !DILocation(line: 647, column: 62, scope: !7672)
!7674 = !DILocation(line: 647, column: 58, scope: !7672)
!7675 = !DILocation(line: 647, column: 82, scope: !7672)
!7676 = !DILocation(line: 647, column: 9, scope: !7672)
!7677 = !DILocation(line: 647, column: 9, scope: !7678)
!7678 = !DILexicalBlockFile(scope: !7571, file: !939, discriminator: 2)
!7679 = !DILocation(line: 649, column: 26, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7663, file: !939, line: 649, column: 14)
!7681 = !DILocation(line: 649, column: 14, scope: !7680)
!7682 = !DILocation(line: 649, column: 46, scope: !7680)
!7683 = !DILocation(line: 649, column: 58, scope: !7684)
!7684 = !DILexicalBlockFile(scope: !7680, file: !939, discriminator: 1)
!7685 = !DILocation(line: 649, column: 70, scope: !7684)
!7686 = !DILocation(line: 649, column: 74, scope: !7684)
!7687 = !DILocation(line: 649, column: 86, scope: !7684)
!7688 = !DILocation(line: 649, column: 79, scope: !7684)
!7689 = !DILocation(line: 649, column: 50, scope: !7690)
!7690 = !DILexicalBlockFile(scope: !7684, file: !939, discriminator: 4)
!7691 = !DILocation(line: 649, column: 50, scope: !7684)
!7692 = !DILocation(line: 649, column: 99, scope: !7684)
!7693 = !DILocation(line: 649, column: 117, scope: !7694)
!7694 = !DILexicalBlockFile(scope: !7680, file: !939, discriminator: 2)
!7695 = !DILocation(line: 649, column: 110, scope: !7694)
!7696 = !DILocation(line: 649, column: 108, scope: !7694)
!7697 = !DILocation(line: 649, column: 102, scope: !7694)
!7698 = !DILocation(line: 649, column: 130, scope: !7694)
!7699 = !DILocation(line: 649, column: 14, scope: !7694)
!7700 = !DILocation(line: 649, column: 14, scope: !7668)
!7701 = !DILocation(line: 651, column: 21, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7680, file: !939, line: 651, column: 14)
!7703 = !DILocation(line: 651, column: 14, scope: !7702)
!7704 = !DILocation(line: 651, column: 41, scope: !7702)
!7705 = !DILocation(line: 651, column: 53, scope: !7706)
!7706 = !DILexicalBlockFile(scope: !7702, file: !939, discriminator: 1)
!7707 = !DILocation(line: 651, column: 45, scope: !7706)
!7708 = !DILocation(line: 651, column: 14, scope: !7706)
!7709 = !DILocation(line: 652, column: 9, scope: !7702)
!7710 = !DILocation(line: 654, column: 9, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7571, file: !939, line: 654, column: 9)
!7712 = !DILocation(line: 654, column: 17, scope: !7711)
!7713 = !DILocation(line: 654, column: 20, scope: !7714)
!7714 = !DILexicalBlockFile(scope: !7711, file: !939, discriminator: 1)
!7715 = !DILocation(line: 654, column: 23, scope: !7714)
!7716 = !DILocation(line: 654, column: 39, scope: !7714)
!7717 = !DILocation(line: 654, column: 43, scope: !7718)
!7718 = !DILexicalBlockFile(scope: !7711, file: !939, discriminator: 2)
!7719 = !DILocation(line: 654, column: 42, scope: !7718)
!7720 = !DILocation(line: 654, column: 9, scope: !7718)
!7721 = !DILocation(line: 655, column: 34, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7711, file: !939, line: 654, column: 47)
!7723 = !DILocation(line: 655, column: 37, scope: !7722)
!7724 = !DILocation(line: 655, column: 42, scope: !7722)
!7725 = !DILocation(line: 655, column: 46, scope: !7722)
!7726 = !DILocation(line: 655, column: 15, scope: !7722)
!7727 = !DILocation(line: 655, column: 13, scope: !7722)
!7728 = !DILocation(line: 656, column: 13, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7722, file: !939, line: 656, column: 13)
!7730 = !DILocation(line: 656, column: 17, scope: !7729)
!7731 = !DILocation(line: 656, column: 13, scope: !7722)
!7732 = !DILocation(line: 657, column: 20, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7729, file: !939, line: 656, column: 94)
!7734 = !DILocation(line: 657, column: 13, scope: !7733)
!7735 = !DILocation(line: 658, column: 20, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7729, file: !939, line: 658, column: 20)
!7737 = !DILocation(line: 658, column: 24, scope: !7736)
!7738 = !DILocation(line: 658, column: 20, scope: !7729)
!7739 = !DILocation(line: 659, column: 17, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !939, line: 659, column: 17)
!7741 = distinct !DILexicalBlock(scope: !7736, file: !939, line: 658, column: 29)
!7742 = !DILocation(line: 659, column: 21, scope: !7740)
!7743 = !DILocation(line: 659, column: 17, scope: !7741)
!7744 = !DILocation(line: 660, column: 24, scope: !7740)
!7745 = !DILocation(line: 662, column: 21, scope: !7740)
!7746 = !DILocation(line: 662, column: 47, scope: !7740)
!7747 = !DILocation(line: 662, column: 57, scope: !7740)
!7748 = !DILocation(line: 662, column: 66, scope: !7740)
!7749 = !DILocation(line: 662, column: 26, scope: !7750)
!7750 = !DILexicalBlockFile(scope: !7740, file: !939, discriminator: 1)
!7751 = !DILocation(line: 660, column: 17, scope: !7740)
!7752 = !DILocation(line: 663, column: 19, scope: !7741)
!7753 = !DILocation(line: 663, column: 22, scope: !7741)
!7754 = !DILocation(line: 663, column: 30, scope: !7741)
!7755 = !DILocation(line: 663, column: 33, scope: !7741)
!7756 = !DILocation(line: 663, column: 37, scope: !7741)
!7757 = !DILocation(line: 663, column: 17, scope: !7741)
!7758 = !DILocation(line: 664, column: 9, scope: !7741)
!7759 = !DILocation(line: 665, column: 5, scope: !7722)
!7760 = !DILocation(line: 666, column: 15, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7711, file: !939, line: 665, column: 12)
!7762 = !DILocation(line: 666, column: 18, scope: !7761)
!7763 = !DILocation(line: 666, column: 26, scope: !7761)
!7764 = !DILocation(line: 666, column: 29, scope: !7761)
!7765 = !DILocation(line: 666, column: 33, scope: !7761)
!7766 = !DILocation(line: 666, column: 13, scope: !7761)
!7767 = !DILocation(line: 668, column: 9, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7571, file: !939, line: 668, column: 9)
!7769 = !DILocation(line: 668, column: 13, scope: !7768)
!7770 = !DILocation(line: 668, column: 9, scope: !7571)
!7771 = !DILocalVariable(name: "new_cookies", scope: !7772, file: !939, line: 670, type: !974)
!7772 = distinct !DILexicalBlock(scope: !7768, file: !939, line: 668, column: 19)
!7773 = !DILocation(line: 670, column: 15, scope: !7772)
!7774 = !DILocation(line: 672, column: 15, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7772, file: !939, line: 672, column: 13)
!7776 = !DILocation(line: 672, column: 18, scope: !7775)
!7777 = !DILocation(line: 672, column: 24, scope: !7775)
!7778 = !DILocation(line: 672, column: 13, scope: !7772)
!7779 = !DILocation(line: 673, column: 25, scope: !7775)
!7780 = !DILocation(line: 673, column: 24, scope: !7775)
!7781 = !DILocation(line: 673, column: 13, scope: !7775)
!7782 = !DILocation(line: 675, column: 13, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7772, file: !939, line: 675, column: 13)
!7784 = !DILocation(line: 675, column: 13, scope: !7772)
!7785 = !DILocation(line: 676, column: 43, scope: !7783)
!7786 = !DILocation(line: 676, column: 13, scope: !7783)
!7787 = !DILocation(line: 677, column: 5, scope: !7772)
!7788 = !DILocation(line: 679, column: 5, scope: !7571)
!7789 = !DILocation(line: 681, column: 9, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7571, file: !939, line: 681, column: 9)
!7791 = !DILocation(line: 681, column: 9, scope: !7571)
!7792 = !DILocation(line: 682, column: 24, scope: !7790)
!7793 = !DILocation(line: 682, column: 10, scope: !7790)
!7794 = !DILocation(line: 682, column: 22, scope: !7790)
!7795 = !DILocation(line: 682, column: 9, scope: !7790)
!7796 = !DILocation(line: 684, column: 12, scope: !7571)
!7797 = !DILocation(line: 684, column: 5, scope: !7571)
!7798 = !DILocation(line: 685, column: 1, scope: !7571)
!7799 = distinct !DISubprogram(name: "handle_id3", scope: !939, file: !939, line: 1036, type: !7800, isLocal: true, isDefinition: true, scopeLine: 1037, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!7800 = !DISubroutineType(types: !7801)
!7801 = !{null, !1306, !2245}
!7802 = !DILocalVariable(name: "pb", arg: 1, scope: !7799, file: !939, line: 1036, type: !1306)
!7803 = !DILocation(line: 1036, column: 37, scope: !7799)
!7804 = !DILocalVariable(name: "pls", arg: 2, scope: !7799, file: !939, line: 1036, type: !2245)
!7805 = !DILocation(line: 1036, column: 58, scope: !7799)
!7806 = !DILocalVariable(name: "metadata", scope: !7799, file: !939, line: 1038, type: !1246)
!7807 = !DILocation(line: 1038, column: 19, scope: !7799)
!7808 = !DILocalVariable(name: "apic", scope: !7799, file: !939, line: 1039, type: !2340)
!7809 = !DILocation(line: 1039, column: 25, scope: !7799)
!7810 = !DILocalVariable(name: "extra_meta", scope: !7799, file: !939, line: 1040, type: !2306)
!7811 = !DILocation(line: 1040, column: 21, scope: !7799)
!7812 = !DILocalVariable(name: "timestamp", scope: !7799, file: !939, line: 1041, type: !959)
!7813 = !DILocation(line: 1041, column: 13, scope: !7799)
!7814 = !DILocation(line: 1043, column: 15, scope: !7799)
!7815 = !DILocation(line: 1043, column: 20, scope: !7799)
!7816 = !DILocation(line: 1043, column: 25, scope: !7799)
!7817 = !DILocation(line: 1043, column: 5, scope: !7799)
!7818 = !DILocation(line: 1045, column: 9, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7799, file: !939, line: 1045, column: 9)
!7820 = !DILocation(line: 1045, column: 19, scope: !7819)
!7821 = !DILocation(line: 1045, column: 9, scope: !7799)
!7822 = !DILocation(line: 1046, column: 37, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7819, file: !939, line: 1045, column: 55)
!7824 = !DILocation(line: 1046, column: 9, scope: !7823)
!7825 = !DILocation(line: 1046, column: 14, scope: !7823)
!7826 = !DILocation(line: 1046, column: 35, scope: !7823)
!7827 = !DILocation(line: 1047, column: 9, scope: !7823)
!7828 = !DILocation(line: 1047, column: 14, scope: !7823)
!7829 = !DILocation(line: 1047, column: 25, scope: !7823)
!7830 = !DILocation(line: 1048, column: 5, scope: !7823)
!7831 = !DILocation(line: 1050, column: 10, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7799, file: !939, line: 1050, column: 9)
!7833 = !DILocation(line: 1050, column: 15, scope: !7832)
!7834 = !DILocation(line: 1050, column: 9, scope: !7799)
!7835 = !DILocation(line: 1052, column: 9, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7832, file: !939, line: 1050, column: 26)
!7837 = distinct !{!7837, !7835}
!7838 = !DILocation(line: 1052, column: 21, scope: !7839)
!7839 = !DILexicalBlockFile(scope: !7840, file: !939, discriminator: 1)
!7840 = distinct !DILexicalBlock(scope: !7841, file: !939, line: 1052, column: 18)
!7841 = distinct !DILexicalBlock(scope: !7836, file: !939, line: 1052, column: 12)
!7842 = !DILocation(line: 1052, column: 26, scope: !7839)
!7843 = !DILocation(line: 1052, column: 18, scope: !7839)
!7844 = !DILocation(line: 1052, column: 49, scope: !7845)
!7845 = !DILexicalBlockFile(scope: !7846, file: !939, discriminator: 2)
!7846 = distinct !DILexicalBlock(scope: !7840, file: !939, line: 1052, column: 47)
!7847 = !DILocation(line: 1052, column: 103, scope: !7848)
!7848 = !DILexicalBlockFile(scope: !7845, file: !939, discriminator: 4)
!7849 = !DILocation(line: 1052, column: 103, scope: !7845)
!7850 = !DILocation(line: 1052, column: 114, scope: !7851)
!7851 = !DILexicalBlockFile(scope: !7841, file: !939, discriminator: 3)
!7852 = !DILocation(line: 1053, column: 9, scope: !7836)
!7853 = !DILocation(line: 1053, column: 14, scope: !7836)
!7854 = !DILocation(line: 1053, column: 24, scope: !7836)
!7855 = !DILocation(line: 1056, column: 13, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7836, file: !939, line: 1056, column: 13)
!7857 = !DILocation(line: 1056, column: 18, scope: !7856)
!7858 = !DILocation(line: 1056, column: 23, scope: !7856)
!7859 = !DILocation(line: 1056, column: 13, scope: !7836)
!7860 = !DILocation(line: 1057, column: 33, scope: !7856)
!7861 = !DILocation(line: 1057, column: 38, scope: !7856)
!7862 = !DILocation(line: 1057, column: 13, scope: !7856)
!7863 = !DILocation(line: 1060, column: 39, scope: !7856)
!7864 = !DILocation(line: 1060, column: 13, scope: !7856)
!7865 = !DILocation(line: 1060, column: 18, scope: !7856)
!7866 = !DILocation(line: 1060, column: 37, scope: !7856)
!7867 = !DILocation(line: 1062, column: 9, scope: !7836)
!7868 = !DILocation(line: 1063, column: 23, scope: !7836)
!7869 = !DILocation(line: 1063, column: 28, scope: !7836)
!7870 = !DILocation(line: 1063, column: 33, scope: !7836)
!7871 = !DILocation(line: 1063, column: 43, scope: !7836)
!7872 = !DILocation(line: 1063, column: 9, scope: !7836)
!7873 = !DILocation(line: 1064, column: 28, scope: !7836)
!7874 = !DILocation(line: 1064, column: 9, scope: !7836)
!7875 = !DILocation(line: 1064, column: 14, scope: !7836)
!7876 = !DILocation(line: 1064, column: 26, scope: !7836)
!7877 = !DILocation(line: 1066, column: 5, scope: !7836)
!7878 = !DILocation(line: 1067, column: 14, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7880, file: !939, line: 1067, column: 13)
!7880 = distinct !DILexicalBlock(scope: !7832, file: !939, line: 1066, column: 12)
!7881 = !DILocation(line: 1067, column: 19, scope: !7879)
!7882 = !DILocation(line: 1067, column: 31, scope: !7879)
!7883 = !DILocation(line: 1067, column: 57, scope: !7884)
!7884 = !DILexicalBlockFile(scope: !7879, file: !939, discriminator: 1)
!7885 = !DILocation(line: 1067, column: 62, scope: !7884)
!7886 = !DILocation(line: 1067, column: 72, scope: !7884)
!7887 = !DILocation(line: 1067, column: 34, scope: !7884)
!7888 = !DILocation(line: 1067, column: 13, scope: !7884)
!7889 = !DILocation(line: 1068, column: 43, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7879, file: !939, line: 1067, column: 79)
!7891 = !DILocation(line: 1068, column: 48, scope: !7890)
!7892 = !DILocation(line: 1068, column: 13, scope: !7890)
!7893 = !DILocation(line: 1069, column: 13, scope: !7890)
!7894 = !DILocation(line: 1069, column: 18, scope: !7890)
!7895 = !DILocation(line: 1069, column: 30, scope: !7890)
!7896 = !DILocation(line: 1070, column: 9, scope: !7890)
!7897 = !DILocation(line: 1071, column: 9, scope: !7880)
!7898 = !DILocation(line: 1074, column: 10, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7799, file: !939, line: 1074, column: 9)
!7900 = !DILocation(line: 1074, column: 15, scope: !7899)
!7901 = !DILocation(line: 1074, column: 9, scope: !7799)
!7902 = !DILocation(line: 1075, column: 9, scope: !7899)
!7903 = !DILocation(line: 1076, column: 1, scope: !7799)
!7904 = !DILocalVariable(name: "s", arg: 1, scope: !2336, file: !939, line: 981, type: !2235)
!7905 = !DILocation(line: 981, column: 40, scope: !2336)
!7906 = !DILocalVariable(name: "pb", arg: 2, scope: !2336, file: !939, line: 981, type: !1306)
!7907 = !DILocation(line: 981, column: 56, scope: !2336)
!7908 = !DILocalVariable(name: "metadata", arg: 3, scope: !2336, file: !939, line: 982, type: !2192)
!7909 = !DILocation(line: 982, column: 38, scope: !2336)
!7910 = !DILocalVariable(name: "dts", arg: 4, scope: !2336, file: !939, line: 982, type: !1185)
!7911 = !DILocation(line: 982, column: 57, scope: !2336)
!7912 = !DILocalVariable(name: "apic", arg: 5, scope: !2336, file: !939, line: 983, type: !2339)
!7913 = !DILocation(line: 983, column: 44, scope: !2336)
!7914 = !DILocalVariable(name: "extra_meta", arg: 6, scope: !2336, file: !939, line: 983, type: !2348)
!7915 = !DILocation(line: 983, column: 67, scope: !2336)
!7916 = !DILocalVariable(name: "meta", scope: !2336, file: !939, line: 986, type: !2306)
!7917 = !DILocation(line: 986, column: 21, scope: !2336)
!7918 = !DILocation(line: 988, column: 24, scope: !2336)
!7919 = !DILocation(line: 988, column: 28, scope: !2336)
!7920 = !DILocation(line: 988, column: 45, scope: !2336)
!7921 = !DILocation(line: 988, column: 5, scope: !2336)
!7922 = !DILocation(line: 989, column: 18, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !2336, file: !939, line: 989, column: 5)
!7924 = !DILocation(line: 989, column: 17, scope: !7923)
!7925 = !DILocation(line: 989, column: 15, scope: !7923)
!7926 = !DILocation(line: 989, column: 10, scope: !7923)
!7927 = !DILocation(line: 989, column: 30, scope: !7928)
!7928 = !DILexicalBlockFile(scope: !7929, file: !939, discriminator: 1)
!7929 = distinct !DILexicalBlock(scope: !7923, file: !939, line: 989, column: 5)
!7930 = !DILocation(line: 989, column: 5, scope: !7928)
!7931 = !DILocation(line: 990, column: 21, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !939, line: 990, column: 13)
!7933 = distinct !DILexicalBlock(scope: !7929, file: !939, line: 989, column: 55)
!7934 = !DILocation(line: 990, column: 27, scope: !7932)
!7935 = !DILocation(line: 990, column: 14, scope: !7932)
!7936 = !DILocation(line: 990, column: 13, scope: !7933)
!7937 = !DILocalVariable(name: "priv", scope: !7938, file: !939, line: 991, type: !7939)
!7938 = distinct !DILexicalBlock(scope: !7932, file: !939, line: 990, column: 41)
!7939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7940, size: 64, align: 64)
!7940 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID3v2ExtraMetaPRIV", file: !2308, line: 82, baseType: !7941)
!7941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID3v2ExtraMetaPRIV", file: !2308, line: 78, size: 192, align: 64, elements: !7942)
!7942 = !{!7943, !7944, !7945}
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7941, file: !2308, line: 79, baseType: !983, size: 64, align: 64)
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7941, file: !2308, line: 80, baseType: !983, size: 64, align: 64, offset: 64)
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "datasize", scope: !7941, file: !2308, line: 81, baseType: !981, size: 32, align: 32, offset: 128)
!7946 = !DILocation(line: 991, column: 33, scope: !7938)
!7947 = !DILocation(line: 991, column: 40, scope: !7938)
!7948 = !DILocation(line: 991, column: 46, scope: !7938)
!7949 = !DILocation(line: 992, column: 17, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7938, file: !939, line: 992, column: 17)
!7951 = !DILocation(line: 992, column: 23, scope: !7950)
!7952 = !DILocation(line: 992, column: 32, scope: !7950)
!7953 = !DILocation(line: 992, column: 37, scope: !7950)
!7954 = !DILocation(line: 992, column: 48, scope: !7955)
!7955 = !DILexicalBlockFile(scope: !7950, file: !939, discriminator: 1)
!7956 = !DILocation(line: 992, column: 54, scope: !7955)
!7957 = !DILocation(line: 992, column: 41, scope: !7955)
!7958 = !DILocation(line: 992, column: 17, scope: !7955)
!7959 = !DILocalVariable(name: "ts", scope: !7960, file: !939, line: 994, type: !959)
!7960 = distinct !DILexicalBlock(scope: !7950, file: !939, line: 992, column: 81)
!7961 = !DILocation(line: 994, column: 25, scope: !7960)
!7962 = !DILocation(line: 994, column: 73, scope: !7960)
!7963 = !DILocation(line: 994, column: 79, scope: !7960)
!7964 = !DILocation(line: 994, column: 87, scope: !7960)
!7965 = !DILocation(line: 994, column: 30, scope: !7960)
!7966 = !DILocation(line: 995, column: 24, scope: !7960)
!7967 = !DILocation(line: 995, column: 79, scope: !7960)
!7968 = !DILocation(line: 995, column: 17, scope: !7960)
!7969 = !DILocation(line: 996, column: 22, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7960, file: !939, line: 996, column: 21)
!7971 = !DILocation(line: 996, column: 25, scope: !7970)
!7972 = !DILocation(line: 996, column: 48, scope: !7970)
!7973 = !DILocation(line: 996, column: 21, scope: !7960)
!7974 = !DILocation(line: 997, column: 28, scope: !7970)
!7975 = !DILocation(line: 997, column: 22, scope: !7970)
!7976 = !DILocation(line: 997, column: 26, scope: !7970)
!7977 = !DILocation(line: 997, column: 21, scope: !7970)
!7978 = !DILocation(line: 999, column: 28, scope: !7970)
!7979 = !DILocation(line: 999, column: 91, scope: !7970)
!7980 = !DILocation(line: 999, column: 21, scope: !7970)
!7981 = !DILocation(line: 1000, column: 13, scope: !7960)
!7982 = !DILocation(line: 1001, column: 9, scope: !7938)
!7983 = !DILocation(line: 1001, column: 28, scope: !7984)
!7984 = !DILexicalBlockFile(scope: !7985, file: !939, discriminator: 1)
!7985 = distinct !DILexicalBlock(scope: !7932, file: !939, line: 1001, column: 20)
!7986 = !DILocation(line: 1001, column: 34, scope: !7984)
!7987 = !DILocation(line: 1001, column: 21, scope: !7984)
!7988 = !DILocation(line: 1001, column: 47, scope: !7984)
!7989 = !DILocation(line: 1001, column: 50, scope: !7990)
!7990 = !DILexicalBlockFile(scope: !7985, file: !939, discriminator: 2)
!7991 = !DILocation(line: 1001, column: 20, scope: !7990)
!7992 = !DILocation(line: 1002, column: 21, scope: !7985)
!7993 = !DILocation(line: 1002, column: 27, scope: !7985)
!7994 = !DILocation(line: 1002, column: 14, scope: !7985)
!7995 = !DILocation(line: 1002, column: 19, scope: !7985)
!7996 = !DILocation(line: 1002, column: 13, scope: !7985)
!7997 = !DILocation(line: 1003, column: 5, scope: !7933)
!7998 = !DILocation(line: 989, column: 43, scope: !7999)
!7999 = !DILexicalBlockFile(scope: !7929, file: !939, discriminator: 2)
!8000 = !DILocation(line: 989, column: 49, scope: !7999)
!8001 = !DILocation(line: 989, column: 41, scope: !7999)
!8002 = !DILocation(line: 989, column: 5, scope: !7999)
!8003 = distinct !{!8003, !8004}
!8004 = !DILocation(line: 989, column: 5, scope: !2336)
!8005 = !DILocation(line: 1004, column: 1, scope: !2336)
!8006 = distinct !DISubprogram(name: "id3_has_changed_values", scope: !939, file: !939, line: 1007, type: !8007, isLocal: true, isDefinition: true, scopeLine: 1009, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!8007 = !DISubroutineType(types: !8008)
!8008 = !{!963, !2245, !1246, !2340}
!8009 = !DILocalVariable(name: "pls", arg: 1, scope: !8006, file: !939, line: 1007, type: !2245)
!8010 = !DILocation(line: 1007, column: 52, scope: !8006)
!8011 = !DILocalVariable(name: "metadata", arg: 2, scope: !8006, file: !939, line: 1007, type: !1246)
!8012 = !DILocation(line: 1007, column: 71, scope: !8006)
!8013 = !DILocalVariable(name: "apic", arg: 3, scope: !8006, file: !939, line: 1008, type: !2340)
!8014 = !DILocation(line: 1008, column: 55, scope: !8006)
!8015 = !DILocalVariable(name: "entry", scope: !8006, file: !939, line: 1010, type: !8016)
!8016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8017, size: 64, align: 64)
!8017 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionaryEntry", file: !1248, line: 84, baseType: !8018)
!8018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionaryEntry", file: !1248, line: 81, size: 128, align: 64, elements: !8019)
!8019 = !{!8020, !8021}
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8018, file: !1248, line: 82, baseType: !974, size: 64, align: 64)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8018, file: !1248, line: 83, baseType: !974, size: 64, align: 64, offset: 64)
!8022 = !DILocation(line: 1010, column: 24, scope: !8006)
!8023 = !DILocalVariable(name: "oldentry", scope: !8006, file: !939, line: 1011, type: !8016)
!8024 = !DILocation(line: 1011, column: 24, scope: !8006)
!8025 = !DILocation(line: 1013, column: 5, scope: !8006)
!8026 = !DILocation(line: 1013, column: 33, scope: !8027)
!8027 = !DILexicalBlockFile(scope: !8006, file: !939, discriminator: 1)
!8028 = !DILocation(line: 1013, column: 47, scope: !8027)
!8029 = !DILocation(line: 1013, column: 21, scope: !8027)
!8030 = !DILocation(line: 1013, column: 19, scope: !8027)
!8031 = !DILocation(line: 1013, column: 5, scope: !8027)
!8032 = !DILocation(line: 1014, column: 32, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8006, file: !939, line: 1013, column: 59)
!8034 = !DILocation(line: 1014, column: 37, scope: !8033)
!8035 = !DILocation(line: 1014, column: 50, scope: !8033)
!8036 = !DILocation(line: 1014, column: 57, scope: !8033)
!8037 = !DILocation(line: 1014, column: 20, scope: !8033)
!8038 = !DILocation(line: 1014, column: 18, scope: !8033)
!8039 = !DILocation(line: 1015, column: 14, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8033, file: !939, line: 1015, column: 13)
!8041 = !DILocation(line: 1015, column: 23, scope: !8040)
!8042 = !DILocation(line: 1015, column: 33, scope: !8043)
!8043 = !DILexicalBlockFile(scope: !8040, file: !939, discriminator: 1)
!8044 = !DILocation(line: 1015, column: 43, scope: !8043)
!8045 = !DILocation(line: 1015, column: 50, scope: !8043)
!8046 = !DILocation(line: 1015, column: 57, scope: !8043)
!8047 = !DILocation(line: 1015, column: 26, scope: !8043)
!8048 = !DILocation(line: 1015, column: 64, scope: !8043)
!8049 = !DILocation(line: 1015, column: 13, scope: !8043)
!8050 = !DILocation(line: 1016, column: 13, scope: !8040)
!8051 = !DILocation(line: 1013, column: 5, scope: !8052)
!8052 = !DILexicalBlockFile(scope: !8006, file: !939, discriminator: 2)
!8053 = distinct !{!8053, !8025}
!8054 = !DILocation(line: 1020, column: 9, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8006, file: !939, line: 1020, column: 9)
!8056 = !DILocation(line: 1020, column: 14, scope: !8055)
!8057 = !DILocation(line: 1020, column: 18, scope: !8058)
!8058 = !DILexicalBlockFile(scope: !8055, file: !939, discriminator: 1)
!8059 = !DILocation(line: 1020, column: 23, scope: !8058)
!8060 = !DILocation(line: 1020, column: 28, scope: !8058)
!8061 = !DILocation(line: 1020, column: 39, scope: !8058)
!8062 = !DILocation(line: 1020, column: 44, scope: !8058)
!8063 = !DILocation(line: 1020, column: 48, scope: !8064)
!8064 = !DILexicalBlockFile(scope: !8055, file: !939, discriminator: 2)
!8065 = !DILocation(line: 1020, column: 53, scope: !8064)
!8066 = !DILocation(line: 1020, column: 58, scope: !8064)
!8067 = !DILocation(line: 1020, column: 70, scope: !8064)
!8068 = !DILocation(line: 1020, column: 83, scope: !8064)
!8069 = !DILocation(line: 1020, column: 9, scope: !8064)
!8070 = !DILocation(line: 1021, column: 9, scope: !8055)
!8071 = !DILocation(line: 1023, column: 9, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8006, file: !939, line: 1023, column: 9)
!8073 = !DILocation(line: 1023, column: 9, scope: !8006)
!8074 = !DILocalVariable(name: "size", scope: !8075, file: !939, line: 1024, type: !963)
!8075 = distinct !DILexicalBlock(scope: !8072, file: !939, line: 1023, column: 15)
!8076 = !DILocation(line: 1024, column: 13, scope: !8075)
!8077 = !DILocation(line: 1024, column: 20, scope: !8075)
!8078 = !DILocation(line: 1024, column: 25, scope: !8075)
!8079 = !DILocation(line: 1024, column: 30, scope: !8075)
!8080 = !DILocation(line: 1024, column: 42, scope: !8075)
!8081 = !DILocation(line: 1024, column: 55, scope: !8075)
!8082 = !DILocation(line: 1025, column: 13, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8075, file: !939, line: 1025, column: 13)
!8084 = !DILocation(line: 1025, column: 21, scope: !8083)
!8085 = !DILocation(line: 1025, column: 27, scope: !8083)
!8086 = !DILocation(line: 1025, column: 32, scope: !8083)
!8087 = !DILocation(line: 1025, column: 37, scope: !8083)
!8088 = !DILocation(line: 1025, column: 18, scope: !8083)
!8089 = !DILocation(line: 1025, column: 13, scope: !8075)
!8090 = !DILocation(line: 1026, column: 13, scope: !8083)
!8091 = !DILocation(line: 1028, column: 20, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8075, file: !939, line: 1028, column: 13)
!8093 = !DILocation(line: 1028, column: 26, scope: !8092)
!8094 = !DILocation(line: 1028, column: 31, scope: !8092)
!8095 = !DILocation(line: 1028, column: 37, scope: !8092)
!8096 = !DILocation(line: 1028, column: 42, scope: !8092)
!8097 = !DILocation(line: 1028, column: 47, scope: !8092)
!8098 = !DILocation(line: 1028, column: 59, scope: !8092)
!8099 = !DILocation(line: 1028, column: 72, scope: !8092)
!8100 = !DILocation(line: 1028, column: 78, scope: !8092)
!8101 = !DILocation(line: 1028, column: 13, scope: !8092)
!8102 = !DILocation(line: 1028, column: 84, scope: !8092)
!8103 = !DILocation(line: 1028, column: 13, scope: !8075)
!8104 = !DILocation(line: 1029, column: 13, scope: !8092)
!8105 = !DILocation(line: 1030, column: 5, scope: !8075)
!8106 = !DILocation(line: 1032, column: 5, scope: !8006)
!8107 = !DILocation(line: 1033, column: 1, scope: !8006)
!8108 = distinct !DISubprogram(name: "av_bswap64", scope: !3752, file: !3752, line: 73, type: !8109, isLocal: true, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!8109 = !DISubroutineType(types: !8110)
!8110 = !{!991, !991}
!8111 = !DILocation(line: 66, column: 98, scope: !3751, inlinedAt: !8112)
!8112 = distinct !DILocation(line: 75, column: 44, scope: !8113)
!8113 = !DILexicalBlockFile(scope: !8108, file: !3752, discriminator: 1)
!8114 = !DILocation(line: 66, column: 98, scope: !3751, inlinedAt: !8115)
!8115 = distinct !DILocation(line: 75, column: 22, scope: !8108)
!8116 = !DILocalVariable(name: "x", arg: 1, scope: !8108, file: !3752, line: 73, type: !991)
!8117 = !DILocation(line: 73, column: 67, scope: !8108)
!8118 = !DILocation(line: 75, column: 33, scope: !8108)
!8119 = !DILocation(line: 75, column: 22, scope: !8108)
!8120 = !DILocation(line: 68, column: 16, scope: !3751, inlinedAt: !8115)
!8121 = !DILocation(line: 68, column: 19, scope: !3751, inlinedAt: !8115)
!8122 = !DILocation(line: 68, column: 24, scope: !3751, inlinedAt: !8115)
!8123 = !DILocation(line: 68, column: 38, scope: !3751, inlinedAt: !8115)
!8124 = !DILocation(line: 68, column: 41, scope: !3751, inlinedAt: !8115)
!8125 = !DILocation(line: 68, column: 46, scope: !3751, inlinedAt: !8115)
!8126 = !DILocation(line: 68, column: 34, scope: !3751, inlinedAt: !8115)
!8127 = !DILocation(line: 68, column: 57, scope: !3751, inlinedAt: !8115)
!8128 = !DILocation(line: 68, column: 69, scope: !3751, inlinedAt: !8115)
!8129 = !DILocation(line: 68, column: 72, scope: !3751, inlinedAt: !8115)
!8130 = !DILocation(line: 68, column: 79, scope: !3751, inlinedAt: !8115)
!8131 = !DILocation(line: 68, column: 84, scope: !3751, inlinedAt: !8115)
!8132 = !DILocation(line: 68, column: 99, scope: !3751, inlinedAt: !8115)
!8133 = !DILocation(line: 68, column: 102, scope: !3751, inlinedAt: !8115)
!8134 = !DILocation(line: 68, column: 109, scope: !3751, inlinedAt: !8115)
!8135 = !DILocation(line: 68, column: 114, scope: !3751, inlinedAt: !8115)
!8136 = !DILocation(line: 68, column: 94, scope: !3751, inlinedAt: !8115)
!8137 = !DILocation(line: 68, column: 63, scope: !3751, inlinedAt: !8115)
!8138 = !DILocation(line: 75, column: 12, scope: !8108)
!8139 = !DILocation(line: 75, column: 36, scope: !8108)
!8140 = !DILocation(line: 75, column: 55, scope: !8108)
!8141 = !DILocation(line: 75, column: 57, scope: !8108)
!8142 = !DILocation(line: 75, column: 44, scope: !8113)
!8143 = !DILocation(line: 68, column: 16, scope: !3751, inlinedAt: !8112)
!8144 = !DILocation(line: 68, column: 19, scope: !3751, inlinedAt: !8112)
!8145 = !DILocation(line: 68, column: 24, scope: !3751, inlinedAt: !8112)
!8146 = !DILocation(line: 68, column: 38, scope: !3751, inlinedAt: !8112)
!8147 = !DILocation(line: 68, column: 41, scope: !3751, inlinedAt: !8112)
!8148 = !DILocation(line: 68, column: 46, scope: !3751, inlinedAt: !8112)
!8149 = !DILocation(line: 68, column: 34, scope: !3751, inlinedAt: !8112)
!8150 = !DILocation(line: 68, column: 57, scope: !3751, inlinedAt: !8112)
!8151 = !DILocation(line: 68, column: 69, scope: !3751, inlinedAt: !8112)
!8152 = !DILocation(line: 68, column: 72, scope: !3751, inlinedAt: !8112)
!8153 = !DILocation(line: 68, column: 79, scope: !3751, inlinedAt: !8112)
!8154 = !DILocation(line: 68, column: 84, scope: !3751, inlinedAt: !8112)
!8155 = !DILocation(line: 68, column: 99, scope: !3751, inlinedAt: !8112)
!8156 = !DILocation(line: 68, column: 102, scope: !3751, inlinedAt: !8112)
!8157 = !DILocation(line: 68, column: 109, scope: !3751, inlinedAt: !8112)
!8158 = !DILocation(line: 68, column: 114, scope: !3751, inlinedAt: !8112)
!8159 = !DILocation(line: 68, column: 94, scope: !3751, inlinedAt: !8112)
!8160 = !DILocation(line: 68, column: 63, scope: !3751, inlinedAt: !8112)
!8161 = !DILocation(line: 75, column: 44, scope: !8108)
!8162 = !DILocation(line: 75, column: 42, scope: !8108)
!8163 = !DILocation(line: 75, column: 5, scope: !8108)
!8164 = distinct !DISubprogram(name: "add_stream_to_programs", scope: !939, file: !939, line: 1676, type: !8165, isLocal: true, isDefinition: true, scopeLine: 1677, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!8165 = !DISubroutineType(types: !8166)
!8166 = !{null, !2235, !2245, !1374}
!8167 = !DILocalVariable(name: "s", arg: 1, scope: !8164, file: !939, line: 1676, type: !2235)
!8168 = !DILocation(line: 1676, column: 53, scope: !8164)
!8169 = !DILocalVariable(name: "pls", arg: 2, scope: !8164, file: !939, line: 1676, type: !2245)
!8170 = !DILocation(line: 1676, column: 73, scope: !8164)
!8171 = !DILocalVariable(name: "stream", arg: 3, scope: !8164, file: !939, line: 1676, type: !1374)
!8172 = !DILocation(line: 1676, column: 88, scope: !8164)
!8173 = !DILocalVariable(name: "c", scope: !8164, file: !939, line: 1678, type: !2386)
!8174 = !DILocation(line: 1678, column: 17, scope: !8164)
!8175 = !DILocation(line: 1678, column: 21, scope: !8164)
!8176 = !DILocation(line: 1678, column: 24, scope: !8164)
!8177 = !DILocalVariable(name: "i", scope: !8164, file: !939, line: 1679, type: !963)
!8178 = !DILocation(line: 1679, column: 9, scope: !8164)
!8179 = !DILocalVariable(name: "j", scope: !8164, file: !939, line: 1679, type: !963)
!8180 = !DILocation(line: 1679, column: 12, scope: !8164)
!8181 = !DILocalVariable(name: "bandwidth", scope: !8164, file: !939, line: 1680, type: !963)
!8182 = !DILocation(line: 1680, column: 9, scope: !8164)
!8183 = !DILocation(line: 1682, column: 12, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8164, file: !939, line: 1682, column: 5)
!8185 = !DILocation(line: 1682, column: 10, scope: !8184)
!8186 = !DILocation(line: 1682, column: 17, scope: !8187)
!8187 = !DILexicalBlockFile(scope: !8188, file: !939, discriminator: 1)
!8188 = distinct !DILexicalBlock(scope: !8184, file: !939, line: 1682, column: 5)
!8189 = !DILocation(line: 1682, column: 21, scope: !8187)
!8190 = !DILocation(line: 1682, column: 24, scope: !8187)
!8191 = !DILocation(line: 1682, column: 19, scope: !8187)
!8192 = !DILocation(line: 1682, column: 5, scope: !8187)
!8193 = !DILocalVariable(name: "v", scope: !8194, file: !939, line: 1683, type: !2396)
!8194 = distinct !DILexicalBlock(scope: !8188, file: !939, line: 1682, column: 41)
!8195 = !DILocation(line: 1683, column: 25, scope: !8194)
!8196 = !DILocation(line: 1683, column: 41, scope: !8194)
!8197 = !DILocation(line: 1683, column: 29, scope: !8194)
!8198 = !DILocation(line: 1683, column: 32, scope: !8194)
!8199 = !DILocation(line: 1685, column: 16, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8194, file: !939, line: 1685, column: 9)
!8201 = !DILocation(line: 1685, column: 14, scope: !8200)
!8202 = !DILocation(line: 1685, column: 21, scope: !8203)
!8203 = !DILexicalBlockFile(scope: !8204, file: !939, discriminator: 1)
!8204 = distinct !DILexicalBlock(scope: !8200, file: !939, line: 1685, column: 9)
!8205 = !DILocation(line: 1685, column: 25, scope: !8203)
!8206 = !DILocation(line: 1685, column: 28, scope: !8203)
!8207 = !DILocation(line: 1685, column: 23, scope: !8203)
!8208 = !DILocation(line: 1685, column: 9, scope: !8203)
!8209 = !DILocation(line: 1686, column: 30, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8211, file: !939, line: 1686, column: 17)
!8211 = distinct !DILexicalBlock(scope: !8204, file: !939, line: 1685, column: 46)
!8212 = !DILocation(line: 1686, column: 17, scope: !8210)
!8213 = !DILocation(line: 1686, column: 20, scope: !8210)
!8214 = !DILocation(line: 1686, column: 36, scope: !8210)
!8215 = !DILocation(line: 1686, column: 33, scope: !8210)
!8216 = !DILocation(line: 1686, column: 17, scope: !8211)
!8217 = !DILocation(line: 1687, column: 17, scope: !8210)
!8218 = !DILocation(line: 1689, column: 41, scope: !8211)
!8219 = !DILocation(line: 1689, column: 44, scope: !8211)
!8220 = !DILocation(line: 1689, column: 47, scope: !8211)
!8221 = !DILocation(line: 1689, column: 55, scope: !8211)
!8222 = !DILocation(line: 1689, column: 13, scope: !8211)
!8223 = !DILocation(line: 1691, column: 17, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8211, file: !939, line: 1691, column: 17)
!8225 = !DILocation(line: 1691, column: 27, scope: !8224)
!8226 = !DILocation(line: 1691, column: 17, scope: !8211)
!8227 = !DILocation(line: 1692, column: 29, scope: !8224)
!8228 = !DILocation(line: 1692, column: 32, scope: !8224)
!8229 = !DILocation(line: 1692, column: 27, scope: !8224)
!8230 = !DILocation(line: 1692, column: 17, scope: !8224)
!8231 = !DILocation(line: 1693, column: 22, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8224, file: !939, line: 1693, column: 22)
!8233 = !DILocation(line: 1693, column: 35, scope: !8232)
!8234 = !DILocation(line: 1693, column: 38, scope: !8232)
!8235 = !DILocation(line: 1693, column: 32, scope: !8232)
!8236 = !DILocation(line: 1693, column: 22, scope: !8224)
!8237 = !DILocation(line: 1694, column: 27, scope: !8232)
!8238 = !DILocation(line: 1694, column: 17, scope: !8232)
!8239 = !DILocation(line: 1695, column: 9, scope: !8211)
!8240 = !DILocation(line: 1685, column: 42, scope: !8241)
!8241 = !DILexicalBlockFile(scope: !8204, file: !939, discriminator: 2)
!8242 = !DILocation(line: 1685, column: 9, scope: !8241)
!8243 = distinct !{!8243, !8244}
!8244 = !DILocation(line: 1685, column: 9, scope: !8194)
!8245 = !DILocation(line: 1696, column: 5, scope: !8194)
!8246 = !DILocation(line: 1682, column: 37, scope: !8247)
!8247 = !DILexicalBlockFile(scope: !8188, file: !939, discriminator: 2)
!8248 = !DILocation(line: 1682, column: 5, scope: !8247)
!8249 = distinct !{!8249, !8250}
!8250 = !DILocation(line: 1682, column: 5, scope: !8164)
!8251 = !DILocation(line: 1698, column: 9, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8164, file: !939, line: 1698, column: 9)
!8253 = !DILocation(line: 1698, column: 19, scope: !8252)
!8254 = !DILocation(line: 1698, column: 9, scope: !8164)
!8255 = !DILocation(line: 1699, column: 26, scope: !8252)
!8256 = !DILocation(line: 1699, column: 34, scope: !8252)
!8257 = !DILocation(line: 1699, column: 63, scope: !8252)
!8258 = !DILocation(line: 1699, column: 9, scope: !8252)
!8259 = !DILocation(line: 1700, column: 1, scope: !8164)
!8260 = distinct !DISubprogram(name: "set_stream_info_from_input_stream", scope: !939, file: !939, line: 1702, type: !8261, isLocal: true, isDefinition: true, scopeLine: 1703, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!8261 = !DISubroutineType(types: !8262)
!8262 = !{!963, !1374, !2245, !1374}
!8263 = !DILocalVariable(name: "st", arg: 1, scope: !8260, file: !939, line: 1702, type: !1374)
!8264 = !DILocation(line: 1702, column: 56, scope: !8260)
!8265 = !DILocalVariable(name: "pls", arg: 2, scope: !8260, file: !939, line: 1702, type: !2245)
!8266 = !DILocation(line: 1702, column: 77, scope: !8260)
!8267 = !DILocalVariable(name: "ist", arg: 3, scope: !8260, file: !939, line: 1702, type: !1374)
!8268 = !DILocation(line: 1702, column: 92, scope: !8260)
!8269 = !DILocalVariable(name: "err", scope: !8260, file: !939, line: 1704, type: !963)
!8270 = !DILocation(line: 1704, column: 9, scope: !8260)
!8271 = !DILocation(line: 1706, column: 35, scope: !8260)
!8272 = !DILocation(line: 1706, column: 39, scope: !8260)
!8273 = !DILocation(line: 1706, column: 49, scope: !8260)
!8274 = !DILocation(line: 1706, column: 54, scope: !8260)
!8275 = !DILocation(line: 1706, column: 11, scope: !8260)
!8276 = !DILocation(line: 1706, column: 9, scope: !8260)
!8277 = !DILocation(line: 1707, column: 9, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8260, file: !939, line: 1707, column: 9)
!8279 = !DILocation(line: 1707, column: 13, scope: !8278)
!8280 = !DILocation(line: 1707, column: 9, scope: !8260)
!8281 = !DILocation(line: 1708, column: 16, scope: !8278)
!8282 = !DILocation(line: 1708, column: 9, scope: !8278)
!8283 = !DILocation(line: 1710, column: 9, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8260, file: !939, line: 1710, column: 9)
!8285 = !DILocation(line: 1710, column: 14, scope: !8284)
!8286 = !DILocation(line: 1710, column: 9, scope: !8260)
!8287 = !DILocation(line: 1711, column: 29, scope: !8284)
!8288 = !DILocation(line: 1711, column: 9, scope: !8284)
!8289 = !DILocation(line: 1713, column: 29, scope: !8284)
!8290 = !DILocation(line: 1713, column: 33, scope: !8284)
!8291 = !DILocation(line: 1713, column: 38, scope: !8284)
!8292 = !DILocation(line: 1713, column: 53, scope: !8284)
!8293 = !DILocation(line: 1713, column: 58, scope: !8284)
!8294 = !DILocation(line: 1713, column: 68, scope: !8284)
!8295 = !DILocation(line: 1713, column: 73, scope: !8284)
!8296 = !DILocation(line: 1713, column: 78, scope: !8284)
!8297 = !DILocation(line: 1713, column: 88, scope: !8284)
!8298 = !DILocation(line: 1713, column: 9, scope: !8284)
!8299 = !DILocation(line: 1715, column: 5, scope: !8260)
!8300 = !DILocation(line: 1715, column: 9, scope: !8260)
!8301 = !DILocation(line: 1715, column: 19, scope: !8260)
!8302 = !DILocation(line: 1715, column: 39, scope: !8260)
!8303 = !DILocation(line: 1717, column: 5, scope: !8260)
!8304 = !DILocation(line: 1718, column: 1, scope: !8260)
!8305 = distinct !DISubprogram(name: "recheck_discard_flags", scope: !939, file: !939, line: 1980, type: !8306, isLocal: true, isDefinition: true, scopeLine: 1981, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!8306 = !DISubroutineType(types: !8307)
!8307 = !{!963, !2235, !963}
!8308 = !DILocalVariable(name: "s", arg: 1, scope: !8305, file: !939, line: 1980, type: !2235)
!8309 = !DILocation(line: 1980, column: 51, scope: !8305)
!8310 = !DILocalVariable(name: "first", arg: 2, scope: !8305, file: !939, line: 1980, type: !963)
!8311 = !DILocation(line: 1980, column: 58, scope: !8305)
!8312 = !DILocalVariable(name: "c", scope: !8305, file: !939, line: 1982, type: !2386)
!8313 = !DILocation(line: 1982, column: 17, scope: !8305)
!8314 = !DILocation(line: 1982, column: 21, scope: !8305)
!8315 = !DILocation(line: 1982, column: 24, scope: !8305)
!8316 = !DILocalVariable(name: "i", scope: !8305, file: !939, line: 1983, type: !963)
!8317 = !DILocation(line: 1983, column: 9, scope: !8305)
!8318 = !DILocalVariable(name: "changed", scope: !8305, file: !939, line: 1983, type: !963)
!8319 = !DILocation(line: 1983, column: 12, scope: !8305)
!8320 = !DILocalVariable(name: "cur_needed", scope: !8305, file: !939, line: 1984, type: !963)
!8321 = !DILocation(line: 1984, column: 9, scope: !8305)
!8322 = !DILocation(line: 1987, column: 12, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8305, file: !939, line: 1987, column: 5)
!8324 = !DILocation(line: 1987, column: 10, scope: !8323)
!8325 = !DILocation(line: 1987, column: 17, scope: !8326)
!8326 = !DILexicalBlockFile(scope: !8327, file: !939, discriminator: 1)
!8327 = distinct !DILexicalBlock(scope: !8323, file: !939, line: 1987, column: 5)
!8328 = !DILocation(line: 1987, column: 21, scope: !8326)
!8329 = !DILocation(line: 1987, column: 24, scope: !8326)
!8330 = !DILocation(line: 1987, column: 19, scope: !8326)
!8331 = !DILocation(line: 1987, column: 5, scope: !8326)
!8332 = !DILocalVariable(name: "pls", scope: !8333, file: !939, line: 1988, type: !2245)
!8333 = distinct !DILexicalBlock(scope: !8327, file: !939, line: 1987, column: 42)
!8334 = !DILocation(line: 1988, column: 26, scope: !8333)
!8335 = !DILocation(line: 1988, column: 45, scope: !8333)
!8336 = !DILocation(line: 1988, column: 32, scope: !8333)
!8337 = !DILocation(line: 1988, column: 35, scope: !8333)
!8338 = !DILocation(line: 1990, column: 51, scope: !8333)
!8339 = !DILocation(line: 1990, column: 38, scope: !8333)
!8340 = !DILocation(line: 1990, column: 41, scope: !8333)
!8341 = !DILocation(line: 1990, column: 22, scope: !8333)
!8342 = !DILocation(line: 1990, column: 20, scope: !8333)
!8343 = !DILocation(line: 1992, column: 13, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8333, file: !939, line: 1992, column: 13)
!8345 = !DILocation(line: 1992, column: 24, scope: !8344)
!8346 = !DILocation(line: 1992, column: 28, scope: !8347)
!8347 = !DILexicalBlockFile(scope: !8344, file: !939, discriminator: 1)
!8348 = !DILocation(line: 1992, column: 33, scope: !8347)
!8349 = !DILocation(line: 1992, column: 13, scope: !8347)
!8350 = !DILocation(line: 1993, column: 13, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8344, file: !939, line: 1992, column: 41)
!8352 = !DILocation(line: 1993, column: 18, scope: !8351)
!8353 = !DILocation(line: 1993, column: 25, scope: !8351)
!8354 = !DILocation(line: 1994, column: 21, scope: !8351)
!8355 = !DILocation(line: 1995, column: 49, scope: !8351)
!8356 = !DILocation(line: 1995, column: 52, scope: !8351)
!8357 = !DILocation(line: 1995, column: 31, scope: !8351)
!8358 = !DILocation(line: 1995, column: 13, scope: !8351)
!8359 = !DILocation(line: 1995, column: 18, scope: !8351)
!8360 = !DILocation(line: 1995, column: 29, scope: !8351)
!8361 = !DILocation(line: 1996, column: 13, scope: !8351)
!8362 = !DILocation(line: 1996, column: 18, scope: !8351)
!8363 = !DILocation(line: 1996, column: 21, scope: !8351)
!8364 = !DILocation(line: 1996, column: 33, scope: !8351)
!8365 = !DILocation(line: 1997, column: 17, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8351, file: !939, line: 1997, column: 17)
!8367 = !DILocation(line: 1997, column: 20, scope: !8366)
!8368 = !DILocation(line: 1997, column: 34, scope: !8366)
!8369 = !DILocation(line: 1997, column: 17, scope: !8351)
!8370 = !DILocation(line: 1999, column: 39, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8366, file: !939, line: 1997, column: 70)
!8372 = !DILocation(line: 1999, column: 42, scope: !8371)
!8373 = !DILocation(line: 1999, column: 17, scope: !8371)
!8374 = !DILocation(line: 1999, column: 22, scope: !8371)
!8375 = !DILocation(line: 1999, column: 37, scope: !8371)
!8376 = !DILocation(line: 2000, column: 17, scope: !8371)
!8377 = !DILocation(line: 2000, column: 22, scope: !8371)
!8378 = !DILocation(line: 2000, column: 33, scope: !8371)
!8379 = !DILocation(line: 2001, column: 17, scope: !8371)
!8380 = !DILocation(line: 2001, column: 22, scope: !8371)
!8381 = !DILocation(line: 2001, column: 40, scope: !8371)
!8382 = !DILocation(line: 2002, column: 13, scope: !8371)
!8383 = !DILocation(line: 2003, column: 20, scope: !8351)
!8384 = !DILocation(line: 2003, column: 70, scope: !8351)
!8385 = !DILocation(line: 2003, column: 73, scope: !8351)
!8386 = !DILocation(line: 2003, column: 78, scope: !8351)
!8387 = !DILocation(line: 2003, column: 13, scope: !8351)
!8388 = !DILocation(line: 2004, column: 9, scope: !8351)
!8389 = !DILocation(line: 2004, column: 20, scope: !8390)
!8390 = !DILexicalBlockFile(scope: !8391, file: !939, discriminator: 1)
!8391 = distinct !DILexicalBlock(scope: !8344, file: !939, line: 2004, column: 20)
!8392 = !DILocation(line: 2004, column: 26, scope: !8390)
!8393 = !DILocation(line: 2004, column: 30, scope: !8394)
!8394 = !DILexicalBlockFile(scope: !8391, file: !939, discriminator: 2)
!8395 = !DILocation(line: 2004, column: 41, scope: !8394)
!8396 = !DILocation(line: 2004, column: 44, scope: !8397)
!8397 = !DILexicalBlockFile(scope: !8391, file: !939, discriminator: 3)
!8398 = !DILocation(line: 2004, column: 49, scope: !8397)
!8399 = !DILocation(line: 2004, column: 20, scope: !8397)
!8400 = !DILocation(line: 2005, column: 17, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !939, line: 2005, column: 17)
!8402 = distinct !DILexicalBlock(scope: !8391, file: !939, line: 2004, column: 57)
!8403 = !DILocation(line: 2005, column: 22, scope: !8401)
!8404 = !DILocation(line: 2005, column: 17, scope: !8402)
!8405 = !DILocation(line: 2006, column: 36, scope: !8401)
!8406 = !DILocation(line: 2006, column: 41, scope: !8401)
!8407 = !DILocation(line: 2006, column: 50, scope: !8401)
!8408 = !DILocation(line: 2006, column: 55, scope: !8401)
!8409 = !DILocation(line: 2006, column: 17, scope: !8401)
!8410 = !DILocation(line: 2007, column: 13, scope: !8402)
!8411 = !DILocation(line: 2007, column: 18, scope: !8402)
!8412 = !DILocation(line: 2007, column: 34, scope: !8402)
!8413 = !DILocation(line: 2008, column: 17, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8402, file: !939, line: 2008, column: 17)
!8415 = !DILocation(line: 2008, column: 22, scope: !8414)
!8416 = !DILocation(line: 2008, column: 17, scope: !8402)
!8417 = !DILocation(line: 2009, column: 36, scope: !8414)
!8418 = !DILocation(line: 2009, column: 41, scope: !8414)
!8419 = !DILocation(line: 2009, column: 50, scope: !8414)
!8420 = !DILocation(line: 2009, column: 55, scope: !8414)
!8421 = !DILocation(line: 2009, column: 17, scope: !8414)
!8422 = !DILocation(line: 2010, column: 13, scope: !8402)
!8423 = !DILocation(line: 2010, column: 18, scope: !8402)
!8424 = !DILocation(line: 2010, column: 39, scope: !8402)
!8425 = !DILocation(line: 2011, column: 13, scope: !8402)
!8426 = !DILocation(line: 2011, column: 18, scope: !8402)
!8427 = !DILocation(line: 2011, column: 25, scope: !8402)
!8428 = !DILocation(line: 2012, column: 21, scope: !8402)
!8429 = !DILocation(line: 2013, column: 20, scope: !8402)
!8430 = !DILocation(line: 2013, column: 64, scope: !8402)
!8431 = !DILocation(line: 2013, column: 13, scope: !8402)
!8432 = !DILocation(line: 2014, column: 9, scope: !8402)
!8433 = !DILocation(line: 2015, column: 5, scope: !8333)
!8434 = !DILocation(line: 1987, column: 38, scope: !8435)
!8435 = !DILexicalBlockFile(scope: !8327, file: !939, discriminator: 2)
!8436 = !DILocation(line: 1987, column: 5, scope: !8435)
!8437 = distinct !{!8437, !8438}
!8438 = !DILocation(line: 1987, column: 5, scope: !8305)
!8439 = !DILocation(line: 2016, column: 12, scope: !8305)
!8440 = !DILocation(line: 2016, column: 5, scope: !8305)
!8441 = distinct !DISubprogram(name: "fill_timing_for_id3_timestamped_stream", scope: !939, file: !939, line: 2019, type: !8442, isLocal: true, isDefinition: true, scopeLine: 2020, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!8442 = !DISubroutineType(types: !8443)
!8443 = !{null, !2245}
!8444 = !DILocalVariable(name: "pls", arg: 1, scope: !8441, file: !939, line: 2019, type: !2245)
!8445 = !DILocation(line: 2019, column: 69, scope: !8441)
!8446 = !DILocation(line: 2021, column: 9, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8441, file: !939, line: 2021, column: 9)
!8448 = !DILocation(line: 2021, column: 14, scope: !8447)
!8449 = !DILocation(line: 2021, column: 25, scope: !8447)
!8450 = !DILocation(line: 2021, column: 9, scope: !8441)
!8451 = !DILocation(line: 2022, column: 24, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8447, file: !939, line: 2021, column: 31)
!8453 = !DILocation(line: 2022, column: 29, scope: !8452)
!8454 = !DILocation(line: 2023, column: 47, scope: !8452)
!8455 = !DILocation(line: 2023, column: 52, scope: !8452)
!8456 = !DILocation(line: 2024, column: 65, scope: !8452)
!8457 = !DILocation(line: 2024, column: 70, scope: !8452)
!8458 = !DILocation(line: 2024, column: 74, scope: !8452)
!8459 = !DILocation(line: 2024, column: 47, scope: !8452)
!8460 = !DILocation(line: 2024, column: 52, scope: !8452)
!8461 = !DILocation(line: 2024, column: 57, scope: !8452)
!8462 = !DILocation(line: 2024, column: 89, scope: !8452)
!8463 = !DILocation(line: 2025, column: 59, scope: !8452)
!8464 = !DILocation(line: 2023, column: 34, scope: !8452)
!8465 = !DILocation(line: 2022, column: 50, scope: !8452)
!8466 = !DILocation(line: 2022, column: 9, scope: !8452)
!8467 = !DILocation(line: 2022, column: 14, scope: !8452)
!8468 = !DILocation(line: 2022, column: 18, scope: !8452)
!8469 = !DILocation(line: 2022, column: 22, scope: !8452)
!8470 = !DILocation(line: 2026, column: 13, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8452, file: !939, line: 2026, column: 13)
!8472 = !DILocation(line: 2026, column: 18, scope: !8471)
!8473 = !DILocation(line: 2026, column: 22, scope: !8471)
!8474 = !DILocation(line: 2026, column: 13, scope: !8452)
!8475 = !DILocation(line: 2027, column: 32, scope: !8471)
!8476 = !DILocation(line: 2027, column: 37, scope: !8471)
!8477 = !DILocation(line: 2027, column: 41, scope: !8471)
!8478 = !DILocation(line: 2027, column: 13, scope: !8471)
!8479 = !DILocation(line: 2027, column: 18, scope: !8471)
!8480 = !DILocation(line: 2027, column: 29, scope: !8471)
!8481 = !DILocation(line: 2029, column: 13, scope: !8471)
!8482 = !DILocation(line: 2029, column: 18, scope: !8471)
!8483 = !DILocation(line: 2029, column: 29, scope: !8471)
!8484 = !DILocation(line: 2030, column: 5, scope: !8452)
!8485 = !DILocation(line: 2033, column: 9, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8447, file: !939, line: 2030, column: 12)
!8487 = !DILocation(line: 2033, column: 14, scope: !8486)
!8488 = !DILocation(line: 2033, column: 18, scope: !8486)
!8489 = !DILocation(line: 2033, column: 22, scope: !8486)
!8490 = !DILocation(line: 2036, column: 9, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8441, file: !939, line: 2036, column: 9)
!8492 = !DILocation(line: 2036, column: 14, scope: !8491)
!8493 = !DILocation(line: 2036, column: 18, scope: !8491)
!8494 = !DILocation(line: 2036, column: 9, scope: !8441)
!8495 = !DILocation(line: 2037, column: 42, scope: !8491)
!8496 = !DILocation(line: 2037, column: 47, scope: !8491)
!8497 = !DILocation(line: 2037, column: 51, scope: !8491)
!8498 = !DILocation(line: 2038, column: 60, scope: !8491)
!8499 = !DILocation(line: 2038, column: 65, scope: !8491)
!8500 = !DILocation(line: 2038, column: 69, scope: !8491)
!8501 = !DILocation(line: 2038, column: 42, scope: !8491)
!8502 = !DILocation(line: 2038, column: 47, scope: !8491)
!8503 = !DILocation(line: 2038, column: 52, scope: !8491)
!8504 = !DILocation(line: 2038, column: 84, scope: !8491)
!8505 = !DILocation(line: 2039, column: 54, scope: !8491)
!8506 = !DILocation(line: 2037, column: 29, scope: !8491)
!8507 = !DILocation(line: 2037, column: 9, scope: !8491)
!8508 = !DILocation(line: 2037, column: 14, scope: !8491)
!8509 = !DILocation(line: 2037, column: 18, scope: !8491)
!8510 = !DILocation(line: 2037, column: 27, scope: !8491)
!8511 = !DILocation(line: 2041, column: 5, scope: !8441)
!8512 = !DILocation(line: 2041, column: 10, scope: !8441)
!8513 = !DILocation(line: 2041, column: 14, scope: !8441)
!8514 = !DILocation(line: 2041, column: 18, scope: !8441)
!8515 = !DILocation(line: 2042, column: 1, scope: !8441)
!8516 = distinct !DISubprogram(name: "get_timebase", scope: !939, file: !939, line: 2044, type: !8517, isLocal: true, isDefinition: true, scopeLine: 2045, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!8517 = !DISubroutineType(types: !8518)
!8518 = !{!1039, !2245}
!8519 = !DILocalVariable(name: "pls", arg: 1, scope: !8516, file: !939, line: 2044, type: !2245)
!8520 = !DILocation(line: 2044, column: 49, scope: !8516)
!8521 = !DILocation(line: 2046, column: 9, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8516, file: !939, line: 2046, column: 9)
!8523 = !DILocation(line: 2046, column: 14, scope: !8522)
!8524 = !DILocation(line: 2046, column: 9, scope: !8516)
!8525 = !DILocation(line: 2047, column: 28, scope: !8522)
!8526 = !DILocation(line: 2047, column: 9, scope: !8522)
!8527 = !DILocation(line: 2049, column: 30, scope: !8516)
!8528 = !DILocation(line: 2049, column: 35, scope: !8516)
!8529 = !DILocation(line: 2049, column: 39, scope: !8516)
!8530 = !DILocation(line: 2049, column: 12, scope: !8516)
!8531 = !DILocation(line: 2049, column: 17, scope: !8516)
!8532 = !DILocation(line: 2049, column: 22, scope: !8516)
!8533 = !DILocation(line: 2049, column: 54, scope: !8516)
!8534 = !DILocation(line: 2049, column: 5, scope: !8516)
!8535 = !DILocation(line: 2050, column: 1, scope: !8516)
!8536 = distinct !DISubprogram(name: "compare_ts_with_wrapdetect", scope: !939, file: !939, line: 2052, type: !8537, isLocal: true, isDefinition: true, scopeLine: 2054, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!8537 = !DISubroutineType(types: !8538)
!8538 = !{!963, !959, !2245, !959, !2245}
!8539 = !DILocalVariable(name: "ts_a", arg: 1, scope: !8536, file: !939, line: 2052, type: !959)
!8540 = !DILocation(line: 2052, column: 47, scope: !8536)
!8541 = !DILocalVariable(name: "pls_a", arg: 2, scope: !8536, file: !939, line: 2052, type: !2245)
!8542 = !DILocation(line: 2052, column: 70, scope: !8536)
!8543 = !DILocalVariable(name: "ts_b", arg: 3, scope: !8536, file: !939, line: 2053, type: !959)
!8544 = !DILocation(line: 2053, column: 47, scope: !8536)
!8545 = !DILocalVariable(name: "pls_b", arg: 4, scope: !8536, file: !939, line: 2053, type: !2245)
!8546 = !DILocation(line: 2053, column: 70, scope: !8536)
!8547 = !DILocalVariable(name: "scaled_ts_a", scope: !8536, file: !939, line: 2055, type: !959)
!8548 = !DILocation(line: 2055, column: 13, scope: !8536)
!8549 = !DILocation(line: 2055, column: 40, scope: !8536)
!8550 = !DILocation(line: 2055, column: 59, scope: !8536)
!8551 = !DILocation(line: 2055, column: 46, scope: !8536)
!8552 = !DILocation(line: 2055, column: 79, scope: !8536)
!8553 = !DILocation(line: 2055, column: 27, scope: !8536)
!8554 = !DILocation(line: 2055, column: 27, scope: !8555)
!8555 = !DILexicalBlockFile(scope: !8536, file: !939, discriminator: 1)
!8556 = !DILocalVariable(name: "scaled_ts_b", scope: !8536, file: !939, line: 2056, type: !959)
!8557 = !DILocation(line: 2056, column: 13, scope: !8536)
!8558 = !DILocation(line: 2056, column: 40, scope: !8536)
!8559 = !DILocation(line: 2056, column: 59, scope: !8536)
!8560 = !DILocation(line: 2056, column: 46, scope: !8536)
!8561 = !DILocation(line: 2056, column: 79, scope: !8536)
!8562 = !DILocation(line: 2056, column: 27, scope: !8536)
!8563 = !DILocation(line: 2056, column: 27, scope: !8555)
!8564 = !DILocation(line: 2058, column: 27, scope: !8536)
!8565 = !DILocation(line: 2058, column: 40, scope: !8536)
!8566 = !DILocation(line: 2058, column: 12, scope: !8536)
!8567 = !DILocation(line: 2058, column: 5, scope: !8536)
!8568 = distinct !DISubprogram(name: "free_playlist_list", scope: !939, file: !939, line: 242, type: !8569, isLocal: true, isDefinition: true, scopeLine: 243, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!8569 = !DISubroutineType(types: !8570)
!8570 = !{null, !2386}
!8571 = !DILocalVariable(name: "c", arg: 1, scope: !8568, file: !939, line: 242, type: !2386)
!8572 = !DILocation(line: 242, column: 44, scope: !8568)
!8573 = !DILocalVariable(name: "i", scope: !8568, file: !939, line: 244, type: !963)
!8574 = !DILocation(line: 244, column: 9, scope: !8568)
!8575 = !DILocation(line: 245, column: 12, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8568, file: !939, line: 245, column: 5)
!8577 = !DILocation(line: 245, column: 10, scope: !8576)
!8578 = !DILocation(line: 245, column: 17, scope: !8579)
!8579 = !DILexicalBlockFile(scope: !8580, file: !939, discriminator: 1)
!8580 = distinct !DILexicalBlock(scope: !8576, file: !939, line: 245, column: 5)
!8581 = !DILocation(line: 245, column: 21, scope: !8579)
!8582 = !DILocation(line: 245, column: 24, scope: !8579)
!8583 = !DILocation(line: 245, column: 19, scope: !8579)
!8584 = !DILocation(line: 245, column: 5, scope: !8579)
!8585 = !DILocalVariable(name: "pls", scope: !8586, file: !939, line: 246, type: !2245)
!8586 = distinct !DILexicalBlock(scope: !8580, file: !939, line: 245, column: 42)
!8587 = !DILocation(line: 246, column: 26, scope: !8586)
!8588 = !DILocation(line: 246, column: 45, scope: !8586)
!8589 = !DILocation(line: 246, column: 32, scope: !8586)
!8590 = !DILocation(line: 246, column: 35, scope: !8586)
!8591 = !DILocation(line: 247, column: 27, scope: !8586)
!8592 = !DILocation(line: 247, column: 9, scope: !8586)
!8593 = !DILocation(line: 248, column: 32, scope: !8586)
!8594 = !DILocation(line: 248, column: 9, scope: !8586)
!8595 = !DILocation(line: 249, column: 19, scope: !8586)
!8596 = !DILocation(line: 249, column: 24, scope: !8586)
!8597 = !DILocation(line: 249, column: 18, scope: !8586)
!8598 = !DILocation(line: 249, column: 9, scope: !8586)
!8599 = !DILocation(line: 250, column: 19, scope: !8586)
!8600 = !DILocation(line: 250, column: 24, scope: !8586)
!8601 = !DILocation(line: 250, column: 18, scope: !8586)
!8602 = !DILocation(line: 250, column: 9, scope: !8586)
!8603 = !DILocation(line: 251, column: 19, scope: !8586)
!8604 = !DILocation(line: 251, column: 24, scope: !8586)
!8605 = !DILocation(line: 251, column: 18, scope: !8586)
!8606 = !DILocation(line: 251, column: 9, scope: !8586)
!8607 = !DILocation(line: 252, column: 23, scope: !8586)
!8608 = !DILocation(line: 252, column: 28, scope: !8586)
!8609 = !DILocation(line: 252, column: 9, scope: !8586)
!8610 = !DILocation(line: 253, column: 35, scope: !8586)
!8611 = !DILocation(line: 253, column: 40, scope: !8586)
!8612 = !DILocation(line: 253, column: 9, scope: !8586)
!8613 = !DILocation(line: 254, column: 19, scope: !8586)
!8614 = !DILocation(line: 254, column: 24, scope: !8586)
!8615 = !DILocation(line: 254, column: 18, scope: !8586)
!8616 = !DILocation(line: 254, column: 9, scope: !8586)
!8617 = !DILocation(line: 255, column: 26, scope: !8586)
!8618 = !DILocation(line: 255, column: 31, scope: !8586)
!8619 = !DILocation(line: 255, column: 9, scope: !8586)
!8620 = !DILocation(line: 256, column: 19, scope: !8586)
!8621 = !DILocation(line: 256, column: 24, scope: !8586)
!8622 = !DILocation(line: 256, column: 27, scope: !8586)
!8623 = !DILocation(line: 256, column: 18, scope: !8586)
!8624 = !DILocation(line: 256, column: 9, scope: !8586)
!8625 = !DILocation(line: 257, column: 13, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8586, file: !939, line: 257, column: 13)
!8627 = !DILocation(line: 257, column: 18, scope: !8626)
!8628 = !DILocation(line: 257, column: 13, scope: !8586)
!8629 = !DILocation(line: 258, column: 32, scope: !8626)
!8630 = !DILocation(line: 258, column: 35, scope: !8626)
!8631 = !DILocation(line: 258, column: 41, scope: !8626)
!8632 = !DILocation(line: 258, column: 46, scope: !8626)
!8633 = !DILocation(line: 258, column: 13, scope: !8626)
!8634 = !DILocation(line: 259, column: 9, scope: !8586)
!8635 = !DILocation(line: 259, column: 14, scope: !8586)
!8636 = !DILocation(line: 259, column: 30, scope: !8586)
!8637 = !DILocation(line: 260, column: 13, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8586, file: !939, line: 260, column: 13)
!8639 = !DILocation(line: 260, column: 18, scope: !8638)
!8640 = !DILocation(line: 260, column: 13, scope: !8586)
!8641 = !DILocation(line: 261, column: 32, scope: !8638)
!8642 = !DILocation(line: 261, column: 35, scope: !8638)
!8643 = !DILocation(line: 261, column: 41, scope: !8638)
!8644 = !DILocation(line: 261, column: 46, scope: !8638)
!8645 = !DILocation(line: 261, column: 13, scope: !8638)
!8646 = !DILocation(line: 262, column: 9, scope: !8586)
!8647 = !DILocation(line: 262, column: 14, scope: !8586)
!8648 = !DILocation(line: 262, column: 35, scope: !8586)
!8649 = !DILocation(line: 263, column: 13, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8586, file: !939, line: 263, column: 13)
!8651 = !DILocation(line: 263, column: 18, scope: !8650)
!8652 = !DILocation(line: 263, column: 13, scope: !8586)
!8653 = !DILocation(line: 264, column: 13, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8650, file: !939, line: 263, column: 23)
!8655 = !DILocation(line: 264, column: 18, scope: !8654)
!8656 = !DILocation(line: 264, column: 23, scope: !8654)
!8657 = !DILocation(line: 264, column: 26, scope: !8654)
!8658 = !DILocation(line: 265, column: 35, scope: !8654)
!8659 = !DILocation(line: 265, column: 40, scope: !8654)
!8660 = !DILocation(line: 265, column: 13, scope: !8654)
!8661 = !DILocation(line: 266, column: 9, scope: !8654)
!8662 = !DILocation(line: 267, column: 17, scope: !8586)
!8663 = !DILocation(line: 267, column: 9, scope: !8586)
!8664 = !DILocation(line: 268, column: 5, scope: !8586)
!8665 = !DILocation(line: 245, column: 38, scope: !8666)
!8666 = !DILexicalBlockFile(scope: !8580, file: !939, discriminator: 2)
!8667 = !DILocation(line: 245, column: 5, scope: !8666)
!8668 = distinct !{!8668, !8669}
!8669 = !DILocation(line: 245, column: 5, scope: !8568)
!8670 = !DILocation(line: 269, column: 15, scope: !8568)
!8671 = !DILocation(line: 269, column: 18, scope: !8568)
!8672 = !DILocation(line: 269, column: 14, scope: !8568)
!8673 = !DILocation(line: 269, column: 5, scope: !8568)
!8674 = !DILocation(line: 270, column: 5, scope: !8568)
!8675 = !DILocation(line: 270, column: 8, scope: !8568)
!8676 = !DILocation(line: 270, column: 20, scope: !8568)
!8677 = !DILocation(line: 271, column: 1, scope: !8568)
!8678 = distinct !DISubprogram(name: "free_variant_list", scope: !939, file: !939, line: 273, type: !8569, isLocal: true, isDefinition: true, scopeLine: 274, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!8679 = !DILocalVariable(name: "c", arg: 1, scope: !8678, file: !939, line: 273, type: !2386)
!8680 = !DILocation(line: 273, column: 43, scope: !8678)
!8681 = !DILocalVariable(name: "i", scope: !8678, file: !939, line: 275, type: !963)
!8682 = !DILocation(line: 275, column: 9, scope: !8678)
!8683 = !DILocation(line: 276, column: 12, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8678, file: !939, line: 276, column: 5)
!8685 = !DILocation(line: 276, column: 10, scope: !8684)
!8686 = !DILocation(line: 276, column: 17, scope: !8687)
!8687 = !DILexicalBlockFile(scope: !8688, file: !939, discriminator: 1)
!8688 = distinct !DILexicalBlock(scope: !8684, file: !939, line: 276, column: 5)
!8689 = !DILocation(line: 276, column: 21, scope: !8687)
!8690 = !DILocation(line: 276, column: 24, scope: !8687)
!8691 = !DILocation(line: 276, column: 19, scope: !8687)
!8692 = !DILocation(line: 276, column: 5, scope: !8687)
!8693 = !DILocalVariable(name: "var", scope: !8694, file: !939, line: 277, type: !2396)
!8694 = distinct !DILexicalBlock(scope: !8688, file: !939, line: 276, column: 41)
!8695 = !DILocation(line: 277, column: 25, scope: !8694)
!8696 = !DILocation(line: 277, column: 43, scope: !8694)
!8697 = !DILocation(line: 277, column: 31, scope: !8694)
!8698 = !DILocation(line: 277, column: 34, scope: !8694)
!8699 = !DILocation(line: 278, column: 19, scope: !8694)
!8700 = !DILocation(line: 278, column: 24, scope: !8694)
!8701 = !DILocation(line: 278, column: 18, scope: !8694)
!8702 = !DILocation(line: 278, column: 9, scope: !8694)
!8703 = !DILocation(line: 279, column: 17, scope: !8694)
!8704 = !DILocation(line: 279, column: 9, scope: !8694)
!8705 = !DILocation(line: 280, column: 5, scope: !8694)
!8706 = !DILocation(line: 276, column: 37, scope: !8707)
!8707 = !DILexicalBlockFile(scope: !8688, file: !939, discriminator: 2)
!8708 = !DILocation(line: 276, column: 5, scope: !8707)
!8709 = distinct !{!8709, !8710}
!8710 = !DILocation(line: 276, column: 5, scope: !8678)
!8711 = !DILocation(line: 281, column: 15, scope: !8678)
!8712 = !DILocation(line: 281, column: 18, scope: !8678)
!8713 = !DILocation(line: 281, column: 14, scope: !8678)
!8714 = !DILocation(line: 281, column: 5, scope: !8678)
!8715 = !DILocation(line: 282, column: 5, scope: !8678)
!8716 = !DILocation(line: 282, column: 8, scope: !8678)
!8717 = !DILocation(line: 282, column: 19, scope: !8678)
!8718 = !DILocation(line: 283, column: 1, scope: !8678)
!8719 = distinct !DISubprogram(name: "free_rendition_list", scope: !939, file: !939, line: 285, type: !8569, isLocal: true, isDefinition: true, scopeLine: 286, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!8720 = !DILocalVariable(name: "c", arg: 1, scope: !8719, file: !939, line: 285, type: !2386)
!8721 = !DILocation(line: 285, column: 45, scope: !8719)
!8722 = !DILocalVariable(name: "i", scope: !8719, file: !939, line: 287, type: !963)
!8723 = !DILocation(line: 287, column: 9, scope: !8719)
!8724 = !DILocation(line: 288, column: 12, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8719, file: !939, line: 288, column: 5)
!8726 = !DILocation(line: 288, column: 10, scope: !8725)
!8727 = !DILocation(line: 288, column: 17, scope: !8728)
!8728 = !DILexicalBlockFile(scope: !8729, file: !939, discriminator: 1)
!8729 = distinct !DILexicalBlock(scope: !8725, file: !939, line: 288, column: 5)
!8730 = !DILocation(line: 288, column: 21, scope: !8728)
!8731 = !DILocation(line: 288, column: 24, scope: !8728)
!8732 = !DILocation(line: 288, column: 19, scope: !8728)
!8733 = !DILocation(line: 288, column: 5, scope: !8728)
!8734 = !DILocation(line: 289, column: 33, scope: !8729)
!8735 = !DILocation(line: 289, column: 19, scope: !8729)
!8736 = !DILocation(line: 289, column: 22, scope: !8729)
!8737 = !DILocation(line: 289, column: 18, scope: !8729)
!8738 = !DILocation(line: 289, column: 9, scope: !8729)
!8739 = !DILocation(line: 288, column: 39, scope: !8740)
!8740 = !DILexicalBlockFile(scope: !8729, file: !939, discriminator: 2)
!8741 = !DILocation(line: 288, column: 5, scope: !8740)
!8742 = distinct !{!8742, !8743}
!8743 = !DILocation(line: 288, column: 5, scope: !8719)
!8744 = !DILocation(line: 290, column: 15, scope: !8719)
!8745 = !DILocation(line: 290, column: 18, scope: !8719)
!8746 = !DILocation(line: 290, column: 14, scope: !8719)
!8747 = !DILocation(line: 290, column: 5, scope: !8719)
!8748 = !DILocation(line: 291, column: 5, scope: !8719)
!8749 = !DILocation(line: 291, column: 8, scope: !8719)
!8750 = !DILocation(line: 291, column: 21, scope: !8719)
!8751 = !DILocation(line: 292, column: 1, scope: !8719)
!8752 = distinct !DISubprogram(name: "free_segment_list", scope: !939, file: !939, line: 224, type: !8442, isLocal: true, isDefinition: true, scopeLine: 225, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!8753 = !DILocalVariable(name: "pls", arg: 1, scope: !8752, file: !939, line: 224, type: !2245)
!8754 = !DILocation(line: 224, column: 48, scope: !8752)
!8755 = !DILocation(line: 226, column: 27, scope: !8752)
!8756 = !DILocation(line: 226, column: 32, scope: !8752)
!8757 = !DILocation(line: 226, column: 42, scope: !8752)
!8758 = !DILocation(line: 226, column: 47, scope: !8752)
!8759 = !DILocation(line: 226, column: 5, scope: !8752)
!8760 = !DILocation(line: 227, column: 15, scope: !8752)
!8761 = !DILocation(line: 227, column: 20, scope: !8752)
!8762 = !DILocation(line: 227, column: 14, scope: !8752)
!8763 = !DILocation(line: 227, column: 5, scope: !8752)
!8764 = !DILocation(line: 228, column: 5, scope: !8752)
!8765 = !DILocation(line: 228, column: 10, scope: !8752)
!8766 = !DILocation(line: 228, column: 21, scope: !8752)
!8767 = !DILocation(line: 229, column: 1, scope: !8752)
!8768 = distinct !DISubprogram(name: "free_init_section_list", scope: !939, file: !939, line: 231, type: !8442, isLocal: true, isDefinition: true, scopeLine: 232, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2237)
!8769 = !DILocalVariable(name: "pls", arg: 1, scope: !8768, file: !939, line: 231, type: !2245)
!8770 = !DILocation(line: 231, column: 53, scope: !8768)
!8771 = !DILocalVariable(name: "i", scope: !8768, file: !939, line: 233, type: !963)
!8772 = !DILocation(line: 233, column: 9, scope: !8768)
!8773 = !DILocation(line: 234, column: 12, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8768, file: !939, line: 234, column: 5)
!8775 = !DILocation(line: 234, column: 10, scope: !8774)
!8776 = !DILocation(line: 234, column: 17, scope: !8777)
!8777 = !DILexicalBlockFile(scope: !8778, file: !939, discriminator: 1)
!8778 = distinct !DILexicalBlock(scope: !8774, file: !939, line: 234, column: 5)
!8779 = !DILocation(line: 234, column: 21, scope: !8777)
!8780 = !DILocation(line: 234, column: 26, scope: !8777)
!8781 = !DILocation(line: 234, column: 19, scope: !8777)
!8782 = !DILocation(line: 234, column: 5, scope: !8777)
!8783 = !DILocation(line: 235, column: 38, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8778, file: !939, line: 234, column: 48)
!8785 = !DILocation(line: 235, column: 19, scope: !8784)
!8786 = !DILocation(line: 235, column: 24, scope: !8784)
!8787 = !DILocation(line: 235, column: 42, scope: !8784)
!8788 = !DILocation(line: 235, column: 18, scope: !8784)
!8789 = !DILocation(line: 235, column: 9, scope: !8784)
!8790 = !DILocation(line: 236, column: 38, scope: !8784)
!8791 = !DILocation(line: 236, column: 19, scope: !8784)
!8792 = !DILocation(line: 236, column: 24, scope: !8784)
!8793 = !DILocation(line: 236, column: 18, scope: !8784)
!8794 = !DILocation(line: 236, column: 9, scope: !8784)
!8795 = !DILocation(line: 237, column: 5, scope: !8784)
!8796 = !DILocation(line: 234, column: 44, scope: !8797)
!8797 = !DILexicalBlockFile(scope: !8778, file: !939, discriminator: 2)
!8798 = !DILocation(line: 234, column: 5, scope: !8797)
!8799 = distinct !{!8799, !8800}
!8800 = !DILocation(line: 234, column: 5, scope: !8768)
!8801 = !DILocation(line: 238, column: 15, scope: !8768)
!8802 = !DILocation(line: 238, column: 20, scope: !8768)
!8803 = !DILocation(line: 238, column: 14, scope: !8768)
!8804 = !DILocation(line: 238, column: 5, scope: !8768)
!8805 = !DILocation(line: 239, column: 5, scope: !8768)
!8806 = !DILocation(line: 239, column: 10, scope: !8768)
!8807 = !DILocation(line: 239, column: 26, scope: !8768)
!8808 = !DILocation(line: 240, column: 1, scope: !8768)
