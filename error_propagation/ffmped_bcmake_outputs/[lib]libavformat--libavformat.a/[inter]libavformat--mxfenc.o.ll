; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a/[inter]libavformat--mxfenc.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a/[inter]libavformat--mxfenc.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, i32 (%struct.AVFormatContext*)*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVCodecTag = type { i32, i32 }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, {}*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, {}*, {}*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, %struct.anon*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, %struct.AVPacketList*, %struct.AVProbeData, [17 x i64], %struct.AVIndexEntry*, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], i64, i8, i8, i32, %struct.AVRational, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVRational = type { i32, i32 }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext**, i32, i32, %struct.AVCodecContext*, i32, i32, %struct.anon.0, i32, %struct.FFFrac* }
%struct.anon.0 = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.MXFContainerEssenceEntry = type { [16 x i8], [16 x i8], [16 x i8], void (%struct.AVFormatContext*, %struct.AVStream*)* }
%struct.anon.1 = type { i32, i32 }
%struct.anon.2 = type { i32, [16 x i8] }
%struct.anon.3 = type { i32, [16 x i8] }
%struct.anon.4 = type { [16 x i8], i32, i32, i8, i32 }
%struct.MXFLocalTagPair = type { i32, [16 x i8] }
%struct.MXFCodecUL = type { [16 x i8], i32, i32, i8*, i32, i32 }
%struct.MXFContext = type { %struct.AVClass*, i64, i32, %struct.AVRational, i32, %struct.MXFIndexEntry*, i32, i64, i8, i32, i64*, i32, i32, i64, %struct.AVTimecode, %struct.AVStream*, i32, i32, i32, i64, i32, [16 x i8], i32, i32, i32, %struct.AVRational, i32, i32, i32 }
%struct.MXFIndexEntry = type { i8, i64, i32, i16 }
%struct.AVTimecode = type { i32, i32, %struct.AVRational, i32 }
%struct.MXFSamplesPerFrame = type { %struct.AVRational, [6 x i32] }
%struct.MXFStreamContext = type { %struct.AudioInterleaveContext, [16 x i8], i32, [16 x i8]*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AudioInterleaveContext = type { %struct.AVFifoBuffer*, i32, i64, i32, i32*, i32*, %struct.AVRational }
%struct.AVFifoBuffer = type { i8*, i8*, i8*, i8*, i32, i32 }
%struct.AVPixFmtDescriptor = type { i8*, i8, i8, i8, i64, [4 x %struct.AVComponentDescriptor], i8* }
%struct.AVComponentDescriptor = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVDictionaryEntry = type { i8*, i8* }
%union.unaligned_32 = type { i32 }
%union.unaligned_64 = type { i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.AVDVProfile = type { i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, [2 x %struct.AVRational], i32, i32, i8*, i32, [3 x i32], [5 x i32], [9 x i8]* }
%union.unaligned_16 = type { i16 }
%struct.MXFPackage = type { i8*, i32, i32, %struct.MXFPackage* }

@.str = private unnamed_addr constant [4 x i8] c"mxf\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"MXF (Material eXchange Format)\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"application/mxf\00", align 1
@mxf_muxer_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([10 x %struct.AVOption], [10 x %struct.AVOption]* @mxf_options, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_mxf_muxer = global %struct.AVOutputFormat { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 65536, i32 2, i32 0, i32 128, %struct.AVCodecTag** null, %struct.AVClass* @mxf_muxer_class, %struct.AVOutputFormat* null, i32 200, i32 (%struct.AVFormatContext*)* @mxf_write_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @mxf_write_packet, i32 (%struct.AVFormatContext*)* @mxf_write_footer, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)* @mxf_interleave, i32 (i32, i32)* null, void (%struct.AVFormatContext*, i32, i64*, i64*)* null, i32 (%struct.AVFormatContext*, i32, i8*, i64)* null, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 0, i32 (%struct.AVFormatContext*)* null, void (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* null }, align 8
@.str.3 = private unnamed_addr constant [8 x i8] c"mxf_d10\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"MXF (Material eXchange Format) D-10 Mapping\00", align 1
@mxf_d10_muxer_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.74, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([11 x %struct.AVOption], [11 x %struct.AVOption]* @d10_options, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_mxf_d10_muxer = global %struct.AVOutputFormat { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i32 0, i32 0), i8* null, i32 65536, i32 2, i32 0, i32 128, %struct.AVCodecTag** null, %struct.AVClass* @mxf_d10_muxer_class, %struct.AVOutputFormat* null, i32 200, i32 (%struct.AVFormatContext*)* @mxf_write_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @mxf_write_packet, i32 (%struct.AVFormatContext*)* @mxf_write_footer, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)* @mxf_interleave, i32 (i32, i32)* null, void (%struct.AVFormatContext*, i32, i64*, i64*)* null, i32 (%struct.AVFormatContext*, i32, i8*, i64)* null, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 0, i32 (%struct.AVFormatContext*)* null, void (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* null }, align 8
@.str.5 = private unnamed_addr constant [11 x i8] c"mxf_opatom\00", align 1
@.str.6 = private unnamed_addr constant [56 x i8] c"MXF (Material eXchange Format) Operational Pattern Atom\00", align 1
@mxf_opatom_muxer_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([10 x %struct.AVOption], [10 x %struct.AVOption]* bitcast (<{ { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @opatom_options to [10 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_mxf_opatom_muxer = global %struct.AVOutputFormat { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 65536, i32 99, i32 0, i32 128, %struct.AVCodecTag** null, %struct.AVClass* @mxf_opatom_muxer_class, %struct.AVOutputFormat* null, i32 200, i32 (%struct.AVFormatContext*)* @mxf_write_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @mxf_write_packet, i32 (%struct.AVFormatContext*)* @mxf_write_footer, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)* @mxf_interleave, i32 (i32, i32)* null, void (%struct.AVFormatContext*, i32, i64*, i64*)* null, i32 (%struct.AVFormatContext*, i32, i8*, i64)* null, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 0, i32 (%struct.AVFormatContext*)* null, void (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* null }, align 8
@.str.7 = private unnamed_addr constant [10 x i8] c"MXF muxer\00", align 1
@mxf_options = internal constant [10 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i32 0, i32 0), i32 168, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.11, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.13, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 3 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 5 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 6 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 7 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.25, i32 0, i32 0), i32 184, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 1, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.8 = private unnamed_addr constant [16 x i8] c"signal_standard\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"Force/set Signal Standard\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"bt601\00", align 1
@.str.11 = private unnamed_addr constant [71 x i8] c"ITU-R BT.601 and BT.656, also SMPTE 125M (525 and 625 line interlaced)\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"bt1358\00", align 1
@.str.13 = private unnamed_addr constant [81 x i8] c"ITU-R BT.1358 and ITU-R BT.799-3, also SMPTE 293M (525 and 625 line progressive)\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"smpte347m\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"SMPTE 347M (540 Mbps mappings)\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"smpte274m\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"SMPTE 274M (1125 line)\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"smpte296m\00", align 1
@.str.19 = private unnamed_addr constant [34 x i8] c"SMPTE 296M (750 line progressive)\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"smpte349m\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"SMPTE 349M (1485 Mbps mappings)\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"smpte428\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"SMPTE 428-1 DCDM\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"store_user_comments\00", align 1
@.str.25 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.26 = private unnamed_addr constant [49 x i8] c"there must be exactly one stream for mxf opatom\0A\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"comment_\00", align 1
@.str.28 = private unnamed_addr constant [69 x i8] c"there must be exactly one video stream and it must be the first one\0A\00", align 1
@.str.29 = private unnamed_addr constant [36 x i8] c"Unsupported video frame rate %d/%d\0A\00", align 1
@.str.30 = private unnamed_addr constant [42 x i8] c"error MXF D-10 only support MPEG-2 Video\0A\00", align 1
@.str.31 = private unnamed_addr constant [45 x i8] c"error MXF D-10 only support 30/40/50 mbit/s\0A\00", align 1
@.str.32 = private unnamed_addr constant [27 x i8] c"only 48khz is implemented\0A\00", align 1
@.str.33 = private unnamed_addr constant [39 x i8] c"MXF D-10 only support one audio track\0A\00", align 1
@.str.34 = private unnamed_addr constant [46 x i8] c"MXF D-10 only support 16 or 24 bits le audio\0A\00", align 1
@.str.35 = private unnamed_addr constant [59 x i8] c"Only pcm_s16le and pcm_s24le audio codecs are implemented\0A\00", align 1
@.str.36 = private unnamed_addr constant [47 x i8] c"MXF OPAtom only supports single channel audio\0A\00", align 1
@.str.37 = private unnamed_addr constant [39 x i8] c"Unsupported timecode frame rate %d/%d\0A\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"data_type\00", align 1
@.str.39 = private unnamed_addr constant [20 x i8] c"vbi_vanc_smpte_436M\00", align 1
@.str.40 = private unnamed_addr constant [33 x i8] c"track %d: unsupported data type\0A\00", align 1
@.str.41 = private unnamed_addr constant [32 x i8] c"data track must be placed last\0A\00", align 1
@.str.42 = private unnamed_addr constant [91 x i8] c"track %d: could not find essence container ul, codec not currently supported in container\0A\00", align 1
@mxf_essence_container_uls = internal constant [32 x %struct.MXFContainerEssenceEntry] [%struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\02\0D\01\03\01\02\04`\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\15\01\05\00", [16 x i8] c"\06\0E+4\04\01\01\03\04\01\02\02\01\00\00\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_mpegvideo_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\06\03\00", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\16\01\03\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\02\02\01\00\00\00\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_aes3_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\06\01\00", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\16\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\02\02\01\00\00\00\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_wav_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\01\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\05\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\01\02\01\01", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\01\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\06\01\10\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\02\02\01\00\00\00\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_generic_sound_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\02\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\05\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\01\02\01\02", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\02\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\06\01\10\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\02\02\01\00\00\00\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_generic_sound_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\03\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\05\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\01\02\01\03", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\03\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\06\01\10\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\02\02\01\00\00\00\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_generic_sound_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\04\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\05\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\01\02\01\04", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\04\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\06\01\10\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\02\02\01\00\00\00\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_generic_sound_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\05\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\05\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\01\02\01\05", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\05\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\06\01\10\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\02\02\01\00\00\00\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_generic_sound_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\06\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\05\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\01\02\01\06", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\06\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\06\01\10\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\02\02\01\00\00\00\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_generic_sound_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\02\7F\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\18\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\02\00\00\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\02@\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\18\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\02\02\01\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\02A\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\18\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\02\02\02\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\02\01\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\18\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\02\02\01\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\02\02\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\18\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\02\01\02\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\02P\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\18\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\02\02\03\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\02Q\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\18\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\02\02\04\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\02`\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\18\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\02\02\05\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\02a\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\18\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\02\02\06\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\02b\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\18\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\02\02\07\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\02c\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\18\01\01\00", [16 x i8] c"\06\0E+4\04\01\01\01\04\01\02\02\02\02\08\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\11\01\00", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\15\01\05\00", [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\01\00\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\07\0D\01\03\01\02\0C\01\00", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\15\01\08\00", [16 x i8] c"\06\0E+4\04\01\01\07\04\01\02\02\03\01\01\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\0A\0D\01\03\01\02\10`\01", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\15\01\05\00", [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\01\00\00\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_mpegvideo_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\0A\0D\01\03\01\02\0E\00\00", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\17\01\02\00", [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\01\01\5C\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_s436m_anc_desc }, %struct.MXFContainerEssenceEntry { [16 x i8] c"\06\0E+4\04\01\01\0D\0D\01\03\01\02\1C\01\00", [16 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01\15\01\17\00", [16 x i8] c"\06\0E+4\04\01\01\0D\04\01\02\02\03\06\03\00", void (%struct.AVFormatContext*, %struct.AVStream*)* @mxf_write_cdci_desc }, %struct.MXFContainerEssenceEntry zeroinitializer], align 16
@.str.43 = private unnamed_addr constant [9 x i8] c"timecode\00", align 1
@mxf_essence_mappings = internal constant [9 x %struct.anon.1] [%struct.anon.1 { i32 2, i32 0 }, %struct.anon.1 { i32 65548, i32 1 }, %struct.anon.1 { i32 65536, i32 1 }, %struct.anon.1 { i32 24, i32 15 }, %struct.anon.1 { i32 99, i32 26 }, %struct.anon.1 { i32 88, i32 27 }, %struct.anon.1 { i32 27, i32 28 }, %struct.anon.1 { i32 147, i32 30 }, %struct.anon.1 zeroinitializer], align 16
@mxf_mpegvideo_descriptor_key = internal constant [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01Q\00", align 16
@uuid_base = internal constant [12 x i8] c"\AD\ABD$/%M\C7\92\FF)\BD", align 1
@mxf_aes3_descriptor_key = internal constant [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01G\00", align 16
@.str.44 = private unnamed_addr constant [128 x i8] c"the number of audio channels shall be 4 or 8 : the output will not comply to MXF D-10 specs, use -d10_channelcount to fix this\0A\00", align 1
@.str.45 = private unnamed_addr constant [86 x i8] c"d10_channelcount < actual number of audio channels : some channels will be discarded\0A\00", align 1
@.str.46 = private unnamed_addr constant [88 x i8] c"d10_channelcount shall be set to 4 or 8 : the output will not comply to MXF D-10 specs\0A\00", align 1
@mxf_wav_descriptor_key = internal constant [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01H\00", align 16
@mxf_cdci_descriptor_key = internal constant [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01(\00", align 16
@mxf_generic_sound_descriptor_key = internal constant [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01B\00", align 16
@mxf_s436m_anc_descriptor_key = internal constant [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01\5C\00", align 16
@.str.47 = private unnamed_addr constant [34 x i8] c"could not allocate index entries\0A\00", align 1
@.str.48 = private unnamed_addr constant [39 x i8] c"could not get mpeg2 profile and level\0A\00", align 1
@.str.49 = private unnamed_addr constant [29 x i8] c"could not get dnxhd profile\0A\00", align 1
@.str.50 = private unnamed_addr constant [30 x i8] c"could not get prores profile\0A\00", align 1
@.str.51 = private unnamed_addr constant [26 x i8] c"could not get dv profile\0A\00", align 1
@.str.52 = private unnamed_addr constant [28 x i8] c"could not get h264 profile\0A\00", align 1
@.str.53 = private unnamed_addr constant [63 x i8] c"track %d: frame size does not match index unit size, %d != %d\0A\00", align 1
@header_open_partition_key = internal constant [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\02\01\00", align 16
@body_partition_key = internal constant [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\03\04\00", align 16
@.str.54 = private unnamed_addr constant [28 x i8] c"No packets in first stream\0A\00", align 1
@.str.55 = private unnamed_addr constant [27 x i8] c"error parsing mpeg2 frame\0A\00", align 1
@mxf_mpeg2_codec_uls = internal constant [10 x [16 x i8]] [[16 x i8] c"\06\0E+4\04\01\01\03\04\01\02\02\01\01\10\00", [16 x i8] c"\06\0E+4\04\01\01\03\04\01\02\02\01\01\11\00", [16 x i8] c"\06\0E+4\04\01\01\03\04\01\02\02\01\02\02\00", [16 x i8] c"\06\0E+4\04\01\01\03\04\01\02\02\01\02\03\00", [16 x i8] c"\06\0E+4\04\01\01\03\04\01\02\02\01\03\02\00", [16 x i8] c"\06\0E+4\04\01\01\03\04\01\02\02\01\03\03\00", [16 x i8] c"\06\0E+4\04\01\01\03\04\01\02\02\01\04\02\00", [16 x i8] c"\06\0E+4\04\01\01\03\04\01\02\02\01\04\03\00", [16 x i8] c"\06\0E+4\04\01\01\03\04\01\02\02\01\05\02\00", [16 x i8] c"\06\0E+4\04\01\01\03\04\01\02\02\01\05\03\00"], align 16
@mxf_dnxhd_codec_uls = internal constant [20 x %struct.anon.2] [%struct.anon.2 { i32 1235, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\01\00\00" }, %struct.anon.2 { i32 1237, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\03\00\00" }, %struct.anon.2 { i32 1238, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\04\00\00" }, %struct.anon.2 { i32 1241, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\07\00\00" }, %struct.anon.2 { i32 1242, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\08\00\00" }, %struct.anon.2 { i32 1243, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\09\00\00" }, %struct.anon.2 { i32 1244, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\0A\00\00" }, %struct.anon.2 { i32 1250, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\10\00\00" }, %struct.anon.2 { i32 1251, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\11\00\00" }, %struct.anon.2 { i32 1252, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\12\00\00" }, %struct.anon.2 { i32 1253, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\13\00\00" }, %struct.anon.2 { i32 1256, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\16\00\00" }, %struct.anon.2 { i32 1258, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\18\00\00" }, %struct.anon.2 { i32 1259, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\19\00\00" }, %struct.anon.2 { i32 1260, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q\1A\00\00" }, %struct.anon.2 { i32 1270, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q$\00\00" }, %struct.anon.2 { i32 1271, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q%\00\00" }, %struct.anon.2 { i32 1272, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q&\00\00" }, %struct.anon.2 { i32 1273, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q'\00\00" }, %struct.anon.2 { i32 1274, [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02q(\00\00" }], align 16
@mxf_prores_codec_uls = internal constant [6 x %struct.anon.3] [%struct.anon.3 { i32 0, [16 x i8] c"\06\0E+4\04\01\01\0D\04\01\02\02\03\06\01\00" }, %struct.anon.3 { i32 1, [16 x i8] c"\06\0E+4\04\01\01\0D\04\01\02\02\03\06\02\00" }, %struct.anon.3 { i32 2, [16 x i8] c"\06\0E+4\04\01\01\0D\04\01\02\02\03\06\03\00" }, %struct.anon.3 { i32 3, [16 x i8] c"\06\0E+4\04\01\01\0D\04\01\02\02\03\06\04\00" }, %struct.anon.3 { i32 4, [16 x i8] c"\06\0E+4\04\01\01\0D\04\01\02\02\03\06\05\00" }, %struct.anon.3 { i32 5, [16 x i8] c"\06\0E+4\04\01\01\0D\04\01\02\02\03\06\06\00" }], align 16
@.str.56 = private unnamed_addr constant [62 x i8] c"source marked as interlaced but codec profile is progressive\0A\00", align 1
@mxf_parse_h264_frame.mxf_h264_num_codec_uls = internal constant i32 23, align 4
@mxf_h264_codec_uls = internal constant [23 x %struct.anon.4] [%struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\011\11\01", i32 0, i32 66, i8 0, i32 -1 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\011 \01", i32 0, i32 77, i8 0, i32 -1 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\0110\01", i32 0, i32 88, i8 0, i32 -1 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\011@\01", i32 0, i32 100, i8 0, i32 -1 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\011P\01", i32 0, i32 110, i8 0, i32 1 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\011`\01", i32 0, i32 122, i8 0, i32 1 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\011p\01", i32 0, i32 244, i8 0, i32 1 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\012 \01", i32 0, i32 110, i8 0, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\012!\01", i32 232960, i32 0, i8 1, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\012!\02", i32 281088, i32 0, i8 1, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\012!\03", i32 232960, i32 0, i8 0, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\012!\04", i32 281088, i32 0, i8 0, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\012!\08", i32 116736, i32 0, i8 0, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\012!\09", i32 140800, i32 0, i8 0, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\0120\01", i32 0, i32 122, i8 0, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\0121\01", i32 472576, i32 0, i8 1, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\0121\02", i32 568832, i32 0, i8 1, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\0121\03", i32 472576, i32 0, i8 0, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\0121\04", i32 568832, i32 0, i8 0, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\0121\08", i32 236544, i32 0, i8 0, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\0121\09", i32 284672, i32 0, i8 0, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0D\04\01\02\02\012@\01", i32 0, i32 244, i8 0, i32 0 }, %struct.anon.4 { [16 x i8] c"\06\0E+4\04\01\01\0D\04\01\02\02\012P\01", i32 0, i32 44, i8 0, i32 -1 }], align 16
@.str.57 = private unnamed_addr constant [28 x i8] c"h264 profile not supported\0A\00", align 1
@footer_partition_key = internal constant [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\04\04\00", align 16
@opatom_ul = internal constant [16 x i8] c"\06\0E+4\04\01\01\02\0D\01\02\01\10\03\00\00", align 16
@op1a_ul = internal constant [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\02\01\01\01\09\00", align 16
@.str.58 = private unnamed_addr constant [28 x i8] c"essence container count:%d\0A\00", align 1
@multiple_desc_ul = internal constant [16 x i8] c"\06\0E+4\04\01\01\03\0D\01\03\01\02\7F\01\00", align 16
@primer_pack_key = internal constant [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\05\01\00", align 16
@mxf_local_tag_batch = internal constant [98 x %struct.MXFLocalTagPair] [%struct.MXFLocalTagPair { i32 15370, [16 x i8] c"\06\0E+4\01\01\01\01\01\01\15\02\00\00\00\00" }, %struct.MXFLocalTagPair { i32 15106, [16 x i8] c"\06\0E+4\01\01\01\02\07\02\01\10\02\04\00\00" }, %struct.MXFLocalTagPair { i32 15109, [16 x i8] c"\06\0E+4\01\01\01\02\03\01\02\01\05\00\00\00" }, %struct.MXFLocalTagPair { i32 15111, [16 x i8] c"\06\0E+4\01\01\01\02\03\01\02\01\04\00\00\00" }, %struct.MXFLocalTagPair { i32 15110, [16 x i8] c"\06\0E+4\01\01\01\02\06\01\01\04\06\04\00\00" }, %struct.MXFLocalTagPair { i32 15107, [16 x i8] c"\06\0E+4\01\01\01\02\06\01\01\04\02\01\00\00" }, %struct.MXFLocalTagPair { i32 15113, [16 x i8] c"\06\0E+4\01\01\01\05\01\02\02\03\00\00\00\00" }, %struct.MXFLocalTagPair { i32 15114, [16 x i8] c"\06\0E+4\01\01\01\05\01\02\02\10\02\01\00\00" }, %struct.MXFLocalTagPair { i32 15115, [16 x i8] c"\06\0E+4\01\01\01\05\01\02\02\10\02\02\00\00" }, %struct.MXFLocalTagPair { i32 15369, [16 x i8] c"\06\0E+4\01\01\01\02\05 \07\01\01\00\00\00" }, %struct.MXFLocalTagPair { i32 15361, [16 x i8] c"\06\0E+4\01\01\01\02\05 \07\01\02\01\00\00" }, %struct.MXFLocalTagPair { i32 15362, [16 x i8] c"\06\0E+4\01\01\01\02\05 \07\01\03\01\00\00" }, %struct.MXFLocalTagPair { i32 15363, [16 x i8] c"\06\0E+4\01\01\01\02\05 \07\01\04\00\00\00" }, %struct.MXFLocalTagPair { i32 15364, [16 x i8] c"\06\0E+4\01\01\01\02\05 \07\01\05\01\00\00" }, %struct.MXFLocalTagPair { i32 15365, [16 x i8] c"\06\0E+4\01\01\01\02\05 \07\01\07\00\00\00" }, %struct.MXFLocalTagPair { i32 15366, [16 x i8] c"\06\0E+4\01\01\01\02\07\02\01\10\02\03\00\00" }, %struct.MXFLocalTagPair { i32 15367, [16 x i8] c"\06\0E+4\01\01\01\02\05 \07\01\0A\00\00\00" }, %struct.MXFLocalTagPair { i32 15368, [16 x i8] c"\06\0E+4\01\01\01\02\05 \07\01\06\01\00\00" }, %struct.MXFLocalTagPair { i32 6401, [16 x i8] c"\06\0E+4\01\01\01\02\06\01\01\04\05\01\00\00" }, %struct.MXFLocalTagPair { i32 6402, [16 x i8] c"\06\0E+4\01\01\01\02\06\01\01\04\05\02\00\00" }, %struct.MXFLocalTagPair { i32 9985, [16 x i8] c"\06\0E+4\01\01\01\02\06\01\01\06\01\00\00\00" }, %struct.MXFLocalTagPair { i32 16135, [16 x i8] c"\06\0E+4\01\01\01\04\01\03\04\04\00\00\00\00" }, %struct.MXFLocalTagPair { i32 17409, [16 x i8] c"\06\0E+4\01\01\01\01\01\01\15\10\00\00\00\00" }, %struct.MXFLocalTagPair { i32 17413, [16 x i8] c"\06\0E+4\01\01\01\02\07\02\01\10\01\03\00\00" }, %struct.MXFLocalTagPair { i32 17412, [16 x i8] c"\06\0E+4\01\01\01\02\07\02\01\10\02\05\00\00" }, %struct.MXFLocalTagPair { i32 17410, [16 x i8] c"\06\0E+4\01\01\01\01\01\03\03\02\01\00\00\00" }, %struct.MXFLocalTagPair { i32 17411, [16 x i8] c"\06\0E+4\01\01\01\02\06\01\01\04\06\05\00\00" }, %struct.MXFLocalTagPair { i32 18177, [16 x i8] c"\06\0E+4\01\01\01\02\06\01\01\04\02\03\00\00" }, %struct.MXFLocalTagPair { i32 18433, [16 x i8] c"\06\0E+4\01\01\01\02\01\07\01\01\00\00\00\00" }, %struct.MXFLocalTagPair { i32 18436, [16 x i8] c"\06\0E+4\01\01\01\02\01\04\01\03\00\00\00\00" }, %struct.MXFLocalTagPair { i32 19201, [16 x i8] c"\06\0E+4\01\01\01\02\050\04\05\00\00\00\00" }, %struct.MXFLocalTagPair { i32 19202, [16 x i8] c"\06\0E+4\01\01\01\02\07\02\01\03\01\03\00\00" }, %struct.MXFLocalTagPair { i32 18435, [16 x i8] c"\06\0E+4\01\01\01\02\06\01\01\04\02\04\00\00" }, %struct.MXFLocalTagPair { i32 513, [16 x i8] c"\06\0E+4\01\01\01\02\04\07\01\00\00\00\00\00" }, %struct.MXFLocalTagPair { i32 514, [16 x i8] c"\06\0E+4\01\01\01\02\07\02\02\01\01\03\00\00" }, %struct.MXFLocalTagPair { i32 4097, [16 x i8] c"\06\0E+4\01\01\01\02\06\01\01\04\06\09\00\00" }, %struct.MXFLocalTagPair { i32 4609, [16 x i8] c"\06\0E+4\01\01\01\02\07\02\01\03\01\04\00\00" }, %struct.MXFLocalTagPair { i32 4353, [16 x i8] c"\06\0E+4\01\01\01\02\06\01\01\03\01\00\00\00" }, %struct.MXFLocalTagPair { i32 4354, [16 x i8] c"\06\0E+4\01\01\01\02\06\01\01\03\02\00\00\00" }, %struct.MXFLocalTagPair { i32 5377, [16 x i8] c"\06\0E+4\01\01\01\02\07\02\01\03\01\05\00\00" }, %struct.MXFLocalTagPair { i32 5378, [16 x i8] c"\06\0E+4\01\01\01\02\04\04\01\01\02\06\00\00" }, %struct.MXFLocalTagPair { i32 5379, [16 x i8] c"\06\0E+4\01\01\01\01\04\04\01\01\05\00\00\00" }, %struct.MXFLocalTagPair { i32 16129, [16 x i8] c"\06\0E+4\01\01\01\04\06\01\01\04\06\0B\00\00" }, %struct.MXFLocalTagPair { i32 12294, [16 x i8] c"\06\0E+4\01\01\01\05\06\01\01\03\05\00\00\00" }, %struct.MXFLocalTagPair { i32 12289, [16 x i8] c"\06\0E+4\01\01\01\01\04\06\01\01\00\00\00\00" }, %struct.MXFLocalTagPair { i32 12290, [16 x i8] c"\06\0E+4\01\01\01\01\04\06\01\02\00\00\00\00" }, %struct.MXFLocalTagPair { i32 12292, [16 x i8] c"\06\0E+4\01\01\01\02\06\01\01\04\01\02\00\00" }, %struct.MXFLocalTagPair { i32 12812, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\03\01\04\00\00\00" }, %struct.MXFLocalTagPair { i32 12813, [16 x i8] c"\06\0E+4\01\01\01\02\04\01\03\02\05\00\00\00" }, %struct.MXFLocalTagPair { i32 12803, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\05\02\02\00\00\00" }, %struct.MXFLocalTagPair { i32 12802, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\05\02\01\00\00\00" }, %struct.MXFLocalTagPair { i32 12822, [16 x i8] c"\06\0E+4\01\01\01\05\04\01\03\02\08\00\00\00" }, %struct.MXFLocalTagPair { i32 12805, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\05\01\08\00\00\00" }, %struct.MXFLocalTagPair { i32 12804, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\05\01\07\00\00\00" }, %struct.MXFLocalTagPair { i32 12806, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\05\01\09\00\00\00" }, %struct.MXFLocalTagPair { i32 12807, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\05\01\0A\00\00\00" }, %struct.MXFLocalTagPair { i32 12809, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\05\01\0C\00\00\00" }, %struct.MXFLocalTagPair { i32 12808, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\05\01\0B\00\00\00" }, %struct.MXFLocalTagPair { i32 12810, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\05\01\0D\00\00\00" }, %struct.MXFLocalTagPair { i32 12811, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\05\01\0E\00\00\00" }, %struct.MXFLocalTagPair { i32 12823, [16 x i8] c"\06\0E+4\01\01\01\05\04\01\03\02\07\00\00\00" }, %struct.MXFLocalTagPair { i32 12814, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\01\01\01\00\00\00" }, %struct.MXFLocalTagPair { i32 12816, [16 x i8] c"\06\0E+4\01\01\01\02\04\01\02\01\01\01\02\00" }, %struct.MXFLocalTagPair { i32 12819, [16 x i8] c"\06\0E+4\01\01\01\02\04\18\01\02\00\00\00\00" }, %struct.MXFLocalTagPair { i32 12820, [16 x i8] c"\06\0E+4\01\01\01\02\04\18\01\03\00\00\00\00" }, %struct.MXFLocalTagPair { i32 12801, [16 x i8] c"\06\0E+4\01\01\01\02\04\01\06\01\00\00\00\00" }, %struct.MXFLocalTagPair { i32 12818, [16 x i8] c"\06\0E+4\01\01\01\02\04\01\03\01\06\00\00\00" }, %struct.MXFLocalTagPair { i32 12821, [16 x i8] c"\06\0E+4\01\01\01\05\04\05\01\13\00\00\00\00" }, %struct.MXFLocalTagPair { i32 13057, [16 x i8] c"\06\0E+4\01\01\01\02\04\01\05\03\0A\00\00\00" }, %struct.MXFLocalTagPair { i32 13058, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\05\01\05\00\00\00" }, %struct.MXFLocalTagPair { i32 13064, [16 x i8] c"\06\0E+4\01\01\01\02\04\01\05\01\10\00\00\00" }, %struct.MXFLocalTagPair { i32 13059, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\05\01\06\00\00\00" }, %struct.MXFLocalTagPair { i32 13063, [16 x i8] c"\06\0E+4\01\01\01\02\04\18\01\04\00\00\00\00" }, %struct.MXFLocalTagPair { i32 13060, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\05\03\03\00\00\00" }, %struct.MXFLocalTagPair { i32 13061, [16 x i8] c"\06\0E+4\01\01\01\01\04\01\05\03\04\00\00\00" }, %struct.MXFLocalTagPair { i32 13062, [16 x i8] c"\06\0E+4\01\01\01\02\04\01\05\03\05\00\00\00" }, %struct.MXFLocalTagPair { i32 15618, [16 x i8] c"\06\0E+4\01\01\01\04\04\02\03\01\04\00\00\00" }, %struct.MXFLocalTagPair { i32 15619, [16 x i8] c"\06\0E+4\01\01\01\05\04\02\03\01\01\01\00\00" }, %struct.MXFLocalTagPair { i32 15620, [16 x i8] c"\06\0E+4\01\01\01\01\04\02\01\01\03\00\00\00" }, %struct.MXFLocalTagPair { i32 15623, [16 x i8] c"\06\0E+4\01\01\01\05\04\02\01\01\04\00\00\00" }, %struct.MXFLocalTagPair { i32 15617, [16 x i8] c"\06\0E+4\01\01\01\04\04\02\03\03\04\00\00\00" }, %struct.MXFLocalTagPair { i32 15622, [16 x i8] c"\06\0E+4\01\01\01\02\04\02\04\02\00\00\00\00" }, %struct.MXFLocalTagPair { i32 16139, [16 x i8] c"\06\0E+4\01\01\01\05\050\04\06\00\00\00\00" }, %struct.MXFLocalTagPair { i32 16140, [16 x i8] c"\06\0E+4\01\01\01\05\07\02\01\03\01\0A\00\00" }, %struct.MXFLocalTagPair { i32 16141, [16 x i8] c"\06\0E+4\01\01\01\05\07\02\02\01\01\02\00\00" }, %struct.MXFLocalTagPair { i32 16133, [16 x i8] c"\06\0E+4\01\01\01\04\04\06\02\01\00\00\00\00" }, %struct.MXFLocalTagPair { i32 16134, [16 x i8] c"\06\0E+4\01\01\01\04\01\03\04\05\00\00\00\00" }, %struct.MXFLocalTagPair { i32 16136, [16 x i8] c"\06\0E+4\01\01\01\04\04\04\04\01\01\00\00\00" }, %struct.MXFLocalTagPair { i32 16137, [16 x i8] c"\06\0E+4\01\01\01\05\04\04\04\01\06\00\00\00" }, %struct.MXFLocalTagPair { i32 16138, [16 x i8] c"\06\0E+4\01\01\01\05\04\04\04\02\05\00\00\00" }, %struct.MXFLocalTagPair { i32 32768, [16 x i8] c"\06\0E+4\01\01\01\05\04\01\06\02\01\0B\00\00" }, %struct.MXFLocalTagPair { i32 32771, [16 x i8] c"\06\0E+4\01\01\01\05\04\01\06\02\01\05\00\00" }, %struct.MXFLocalTagPair { i32 32772, [16 x i8] c"\06\0E+4\01\01\01\05\04\01\06\02\01\06\00\00" }, %struct.MXFLocalTagPair { i32 32774, [16 x i8] c"\06\0E+4\01\01\01\05\04\01\06\02\01\08\00\00" }, %struct.MXFLocalTagPair { i32 32775, [16 x i8] c"\06\0E+4\01\01\01\05\04\01\06\02\01\0A\00\00" }, %struct.MXFLocalTagPair { i32 32776, [16 x i8] c"\06\0E+4\01\01\01\05\04\01\06\02\01\09\00\00" }, %struct.MXFLocalTagPair { i32 15625, [16 x i8] c"\06\0E+4\01\01\01\05\04\02\03\03\05\00\00\00" }, %struct.MXFLocalTagPair { i32 15626, [16 x i8] c"\06\0E+4\01\01\01\05\04\02\03\02\01\00\00\00" }], align 16
@mxf_user_comments_local_tag = internal constant [3 x %struct.MXFLocalTagPair] [%struct.MXFLocalTagPair { i32 17414, [16 x i8] c"\06\0E+4\01\01\01\02\03\02\01\02\0C\00\00\00" }, %struct.MXFLocalTagPair { i32 20481, [16 x i8] c"\06\0E+4\01\01\01\02\03\02\01\02\09\01\00\00" }, %struct.MXFLocalTagPair { i32 20483, [16 x i8] c"\06\0E+4\01\01\01\02\03\02\01\02\0A\01\00\00" }], align 16
@.str.59 = private unnamed_addr constant [22 x i8] c"material_package_name\00", align 1
@.str.60 = private unnamed_addr constant [18 x i8] c"file_package_name\00", align 1
@.str.61 = private unnamed_addr constant [10 x i8] c"reel_name\00", align 1
@header_metadata_key = internal constant [13 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"FFmpeg\00", align 1
@.str.63 = private unnamed_addr constant [11 x i8] c"OP1a Muxer\00", align 1
@.str.64 = private unnamed_addr constant [13 x i8] c"OPAtom Muxer\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"0.0.0\00", align 1
@.str.66 = private unnamed_addr constant [10 x i8] c"58.26.101\00", align 1
@.str.67 = private unnamed_addr constant [56 x i8] c"utf16 local tag size %lx invalid (too large), ignoring\0A\00", align 1
@.str.68 = private unnamed_addr constant [40 x i8] c"Invalid UTF8 sequence in mxf_utf16len\0A\0A\00", align 1
@.str.69 = private unnamed_addr constant [17 x i8] c"package type:%d\0A\00", align 1
@.str.70 = private unnamed_addr constant [44 x i8] c"too many tagged values, ignoring remaining\0A\00", align 1
@mxf_indirect_value_utf16le = internal constant [17 x i8] c"L\00\02\10\01\00\00\00\00\06\0E+4\01\04\01\01", align 16
@umid_ul = internal constant [13 x i8] c"\06\0A+4\01\01\01\05\01\01\0D\00\13", align 1
@smpte_12m_timecode_track_data_ul = internal constant [16 x i8] c"\06\0E+4\04\01\01\01\01\03\02\01\01\00\00\00", align 16
@ff_mxf_data_definition_uls = external constant [0 x %struct.MXFCodecUL], align 8
@klv_fill_key = internal constant [16 x i8] c"\06\0E+4\01\01\01\02\03\01\02\10\01\00\00\00", align 16
@.str.71 = private unnamed_addr constant [21 x i8] c"edit units count %d\0A\00", align 1
@index_table_segment_key = internal constant [16 x i8] c"\06\0E+4\02S\01\01\0D\01\02\01\01\10\01\00", align 16
@.str.72 = private unnamed_addr constant [16 x i8] c"missing frames\0A\00", align 1
@system_metadata_pack_key = internal constant [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\03\01\04\01\01\00", align 16
@system_metadata_package_set_key = internal constant [16 x i8] c"\06\0E+4\02C\01\01\0D\01\03\01\04\01\02\01", align 16
@header_closed_partition_key = internal constant [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\02\04\00", align 16
@random_index_pack_key = internal constant [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\11\01\00", align 16
@.str.73 = private unnamed_addr constant [19 x i8] c"out st:%d dts:%ld\0A\00", align 1
@.str.74 = private unnamed_addr constant [14 x i8] c"MXF-D10 muxer\00", align 1
@d10_options = internal constant [11 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.76, i32 0, i32 0), i32 164, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 8.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i32 0, i32 0), i32 168, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.11, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.13, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 3 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 5 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 6 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 7 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.25, i32 0, i32 0), i32 184, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 1, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.75 = private unnamed_addr constant [17 x i8] c"d10_channelcount\00", align 1
@.str.76 = private unnamed_addr constant [59 x i8] c"Force/set channelcount in generic sound essence descriptor\00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"MXF-OPAtom muxer\00", align 1
@.str.78 = private unnamed_addr constant [20 x i8] c"mxf_audio_edit_rate\00", align 1
@.str.79 = private unnamed_addr constant [29 x i8] c"Audio edit rate for timecode\00", align 1
@opatom_options = internal constant <{ { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.79, i32 0, i32 0), i32 176, i32 6, { double } { double 2.500000e+01 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i32 0, i32 0), i32 168, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.11, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.13, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 3 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 5 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 6 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 7 }, double -1.000000e+00, double 7.000000e+00, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0) }, %struct.AVOption zeroinitializer }>, align 16

; Function Attrs: nounwind uwtable
define internal i32 @mxf_write_header(%struct.AVFormatContext* %s) #0 !dbg !2522 {
entry:
  %retval.i476 = alloca %struct.AVRational, align 4
  %q.i477 = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i477, metadata !2525, metadata !2529), !dbg !2530
  %r.i478 = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i478, metadata !2542, metadata !2529), !dbg !2543
  %x.addr.i461 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i461, metadata !2544, metadata !2529), !dbg !2549
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2544, metadata !2529), !dbg !2555
  %retval.i454 = alloca %struct.AVRational, align 4
  %q.i455 = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i455, metadata !2525, metadata !2529), !dbg !2557
  %r.i456 = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i456, metadata !2542, metadata !2529), !dbg !2559
  %retval.i = alloca %struct.AVRational, align 4
  %q.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i, metadata !2525, metadata !2529), !dbg !2560
  %r.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i, metadata !2542, metadata !2529), !dbg !2563
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %present = alloca [32 x i8], align 16
  %spf = alloca %struct.MXFSamplesPerFrame*, align 8
  %timestamp = alloca i64, align 8
  %st = alloca %struct.AVStream*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  %pix_desc = alloca %struct.AVPixFmtDescriptor*, align 8
  %rate = alloca %struct.AVRational, align 4
  %tbc = alloca %struct.AVRational, align 4
  %agg.tmp = alloca %struct.AVRational, align 4
  %coerce = alloca %struct.AVRational, align 4
  %coerce79 = alloca %struct.AVRational, align 4
  %tbc246 = alloca %struct.AVRational, align 4
  %agg.tmp272 = alloca %struct.AVRational, align 4
  %e = alloca %struct.AVDictionaryEntry*, align 8
  %sc389 = alloca %struct.MXFStreamContext*, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !2564, metadata !2529), !dbg !2565
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !2566, metadata !2529), !dbg !2609
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2610
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !2611
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2611
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !2610
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !2609
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2612, metadata !2529), !dbg !2613
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2614, metadata !2529), !dbg !2615
  call void @llvm.dbg.declare(metadata [32 x i8]* %present, metadata !2616, metadata !2529), !dbg !2618
  %3 = bitcast [32 x i8]* %present to i8*, !dbg !2618
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 32, i32 16, i1 false), !dbg !2618
  call void @llvm.dbg.declare(metadata %struct.MXFSamplesPerFrame** %spf, metadata !2619, metadata !2529), !dbg !2628
  store %struct.MXFSamplesPerFrame* null, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !2628
  call void @llvm.dbg.declare(metadata i64* %timestamp, metadata !2629, metadata !2529), !dbg !2630
  store i64 0, i64* %timestamp, align 8, !dbg !2630
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2631
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 6, !dbg !2633
  %5 = load i32, i32* %nb_streams, align 4, !dbg !2633
  %tobool = icmp ne i32 %5, 0, !dbg !2631
  br i1 %tobool, label %if.end, label %if.then, !dbg !2634

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !2635
  br label %return, !dbg !2635

if.end:                                           ; preds = %entry
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2636
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i32 0, i32 2, !dbg !2638
  %7 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !2638
  %cmp = icmp eq %struct.AVOutputFormat* %7, @ff_mxf_opatom_muxer, !dbg !2639
  br i1 %cmp, label %land.lhs.true, label %if.end4, !dbg !2640

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2641
  %nb_streams1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i32 0, i32 6, !dbg !2643
  %9 = load i32, i32* %nb_streams1, align 4, !dbg !2643
  %cmp2 = icmp ne i32 %9, 1, !dbg !2644
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2645

if.then3:                                         ; preds = %land.lhs.true
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2646
  %11 = bitcast %struct.AVFormatContext* %10 to i8*, !dbg !2646
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26, i32 0, i32 0)), !dbg !2648
  store i32 -1, i32* %retval, align 4, !dbg !2649
  br label %return, !dbg !2649

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2650
  %metadata = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i32 0, i32 29, !dbg !2652
  %13 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !2652
  %call = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 2), !dbg !2653
  %tobool5 = icmp ne %struct.AVDictionaryEntry* %call, null, !dbg !2653
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !2654

if.then6:                                         ; preds = %if.end4
  %14 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2655
  %store_user_comments = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %14, i32 0, i32 26, !dbg !2656
  store i32 0, i32* %store_user_comments, align 8, !dbg !2657
  br label %if.end7, !dbg !2655

if.end7:                                          ; preds = %if.then6, %if.end4
  store i32 0, i32* %i, align 4, !dbg !2658
  br label %for.cond, !dbg !2659

for.cond:                                         ; preds = %for.inc, %if.end7
  %15 = load i32, i32* %i, align 4, !dbg !2660
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2662
  %nb_streams8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %16, i32 0, i32 6, !dbg !2663
  %17 = load i32, i32* %nb_streams8, align 4, !dbg !2663
  %cmp9 = icmp ult i32 %15, %17, !dbg !2664
  br i1 %cmp9, label %for.body, label %for.end, !dbg !2665

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !2666, metadata !2529), !dbg !2667
  %18 = load i32, i32* %i, align 4, !dbg !2668
  %idxprom = sext i32 %18 to i64, !dbg !2669
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2669
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %19, i32 0, i32 7, !dbg !2670
  %20 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !2670
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %20, i64 %idxprom, !dbg !2669
  %21 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !2669
  store %struct.AVStream* %21, %struct.AVStream** %st, align 8, !dbg !2667
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !2671, metadata !2529), !dbg !2672
  %call10 = call noalias i8* @av_mallocz(i64 168), !dbg !2673
  %22 = bitcast i8* %call10 to %struct.MXFStreamContext*, !dbg !2673
  store %struct.MXFStreamContext* %22, %struct.MXFStreamContext** %sc, align 8, !dbg !2672
  %23 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2674
  %tobool11 = icmp ne %struct.MXFStreamContext* %23, null, !dbg !2674
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !2676

if.then12:                                        ; preds = %for.body
  store i32 -12, i32* %retval, align 4, !dbg !2677
  br label %return, !dbg !2677

if.end13:                                         ; preds = %for.body
  %24 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2678
  %25 = bitcast %struct.MXFStreamContext* %24 to i8*, !dbg !2678
  %26 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2679
  %priv_data14 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %26, i32 0, i32 3, !dbg !2680
  store i8* %25, i8** %priv_data14, align 8, !dbg !2681
  %27 = load i32, i32* %i, align 4, !dbg !2682
  %cmp15 = icmp eq i32 %27, 0, !dbg !2684
  %conv = zext i1 %cmp15 to i32, !dbg !2684
  %28 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2685
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %28, i32 0, i32 19, !dbg !2686
  %29 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !2686
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %29, i32 0, i32 0, !dbg !2687
  %30 = load i32, i32* %codec_type, align 8, !dbg !2687
  %cmp16 = icmp eq i32 %30, 0, !dbg !2688
  %conv17 = zext i1 %cmp16 to i32, !dbg !2688
  %xor = xor i32 %conv, %conv17, !dbg !2689
  %tobool18 = icmp ne i32 %xor, 0, !dbg !2689
  br i1 %tobool18, label %land.lhs.true19, label %if.end24, !dbg !2690

land.lhs.true19:                                  ; preds = %if.end13
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2691
  %oformat20 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %31, i32 0, i32 2, !dbg !2693
  %32 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat20, align 8, !dbg !2693
  %cmp21 = icmp ne %struct.AVOutputFormat* %32, @ff_mxf_opatom_muxer, !dbg !2694
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !2695

if.then23:                                        ; preds = %land.lhs.true19
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2696
  %34 = bitcast %struct.AVFormatContext* %33 to i8*, !dbg !2696
  call void (i8*, i32, i8*, ...) @av_log(i8* %34, i32 16, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.28, i32 0, i32 0)), !dbg !2698
  store i32 -1, i32* %retval, align 4, !dbg !2699
  br label %return, !dbg !2699

if.end24:                                         ; preds = %land.lhs.true19, %if.end13
  %35 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2700
  %codecpar25 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %35, i32 0, i32 19, !dbg !2701
  %36 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar25, align 8, !dbg !2701
  %codec_type26 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %36, i32 0, i32 0, !dbg !2702
  %37 = load i32, i32* %codec_type26, align 8, !dbg !2702
  %cmp27 = icmp eq i32 %37, 0, !dbg !2703
  br i1 %cmp27, label %if.then29, label %if.else196, !dbg !2704

if.then29:                                        ; preds = %if.end24
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %pix_desc, metadata !2705, metadata !2529), !dbg !2731
  %38 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2732
  %codecpar30 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %38, i32 0, i32 19, !dbg !2733
  %39 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar30, align 8, !dbg !2733
  %format = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %39, i32 0, i32 5, !dbg !2734
  %40 = load i32, i32* %format, align 4, !dbg !2734
  %call31 = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %40), !dbg !2735
  store %struct.AVPixFmtDescriptor* %call31, %struct.AVPixFmtDescriptor** %pix_desc, align 8, !dbg !2731
  call void @llvm.dbg.declare(metadata %struct.AVRational* %rate, metadata !2736, metadata !2529), !dbg !2737
  call void @llvm.dbg.declare(metadata %struct.AVRational* %tbc, metadata !2738, metadata !2529), !dbg !2739
  %41 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2740
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %41, i32 0, i32 4, !dbg !2741
  %42 = bitcast %struct.AVRational* %tbc to i8*, !dbg !2741
  %43 = bitcast %struct.AVRational* %time_base to i8*, !dbg !2741
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 4, i1 false), !dbg !2741
  %44 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2742
  %component_depth = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %44, i32 0, i32 7, !dbg !2743
  store i32 8, i32* %component_depth, align 4, !dbg !2744
  %45 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2745
  %h_chroma_sub_sample = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %45, i32 0, i32 10, !dbg !2746
  store i32 2, i32* %h_chroma_sub_sample, align 8, !dbg !2747
  %46 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2748
  %v_chroma_sub_sample = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %46, i32 0, i32 11, !dbg !2749
  store i32 2, i32* %v_chroma_sub_sample, align 4, !dbg !2750
  %47 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2751
  %color_siting = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %47, i32 0, i32 8, !dbg !2752
  store i32 255, i32* %color_siting, align 8, !dbg !2753
  %48 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2754
  %codecpar32 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %48, i32 0, i32 19, !dbg !2756
  %49 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar32, align 8, !dbg !2756
  %sample_aspect_ratio = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %49, i32 0, i32 13, !dbg !2757
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio, i32 0, i32 0, !dbg !2758
  %50 = load i32, i32* %num, align 8, !dbg !2758
  %tobool33 = icmp ne i32 %50, 0, !dbg !2754
  br i1 %tobool33, label %land.lhs.true34, label %if.end45, !dbg !2759

land.lhs.true34:                                  ; preds = %if.then29
  %51 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2760
  %codecpar35 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %51, i32 0, i32 19, !dbg !2762
  %52 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar35, align 8, !dbg !2762
  %sample_aspect_ratio36 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %52, i32 0, i32 13, !dbg !2763
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio36, i32 0, i32 1, !dbg !2764
  %53 = load i32, i32* %den, align 4, !dbg !2764
  %tobool37 = icmp ne i32 %53, 0, !dbg !2760
  br i1 %tobool37, label %if.then38, label %if.end45, !dbg !2765

if.then38:                                        ; preds = %land.lhs.true34
  %54 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2766
  %aspect_ratio = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %54, i32 0, i32 13, !dbg !2768
  %55 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2769
  %codecpar39 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %55, i32 0, i32 19, !dbg !2770
  %56 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar39, align 8, !dbg !2770
  %sample_aspect_ratio40 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %56, i32 0, i32 13, !dbg !2771
  %57 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2772
  %codecpar41 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %57, i32 0, i32 19, !dbg !2773
  %58 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar41, align 8, !dbg !2773
  %width = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %58, i32 0, i32 11, !dbg !2774
  %59 = load i32, i32* %width, align 8, !dbg !2774
  %60 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2775
  %codecpar42 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %60, i32 0, i32 19, !dbg !2776
  %61 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar42, align 8, !dbg !2776
  %height = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %61, i32 0, i32 12, !dbg !2777
  %62 = load i32, i32* %height, align 4, !dbg !2777
  %call43 = call i64 @av_make_q(i32 %59, i32 %62), !dbg !2778
  %63 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !2778
  store i64 %call43, i64* %63, align 4, !dbg !2778
  %64 = bitcast %struct.AVRational* %sample_aspect_ratio40 to i64*, !dbg !2779
  %65 = load i64, i64* %64, align 8, !dbg !2779
  %66 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !2779
  %67 = load i64, i64* %66, align 4, !dbg !2779
  %call44 = call i64 @av_mul_q(i64 %65, i64 %67) #2, !dbg !2779
  %68 = bitcast %struct.AVRational* %coerce to i64*, !dbg !2779
  store i64 %call44, i64* %68, align 4, !dbg !2779
  %69 = bitcast %struct.AVRational* %aspect_ratio to i8*, !dbg !2779
  %70 = bitcast %struct.AVRational* %coerce to i8*, !dbg !2779
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 4, i1 false), !dbg !2780
  br label %if.end45, !dbg !2782

if.end45:                                         ; preds = %if.then38, %land.lhs.true34, %if.then29
  %71 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pix_desc, align 8, !dbg !2783
  %tobool46 = icmp ne %struct.AVPixFmtDescriptor* %71, null, !dbg !2783
  br i1 %tobool46, label %if.then47, label %if.end55, !dbg !2785

if.then47:                                        ; preds = %if.end45
  %72 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pix_desc, align 8, !dbg !2786
  %comp = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %72, i32 0, i32 5, !dbg !2788
  %arrayidx48 = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp, i64 0, i64 0, !dbg !2786
  %depth = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx48, i32 0, i32 4, !dbg !2789
  %73 = load i32, i32* %depth, align 8, !dbg !2789
  %74 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2790
  %component_depth49 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %74, i32 0, i32 7, !dbg !2791
  store i32 %73, i32* %component_depth49, align 4, !dbg !2792
  %75 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pix_desc, align 8, !dbg !2793
  %log2_chroma_w = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %75, i32 0, i32 2, !dbg !2794
  %76 = load i8, i8* %log2_chroma_w, align 1, !dbg !2794
  %conv50 = zext i8 %76 to i32, !dbg !2793
  %shl = shl i32 1, %conv50, !dbg !2795
  %77 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2796
  %h_chroma_sub_sample51 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %77, i32 0, i32 10, !dbg !2797
  store i32 %shl, i32* %h_chroma_sub_sample51, align 8, !dbg !2798
  %78 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pix_desc, align 8, !dbg !2799
  %log2_chroma_h = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %78, i32 0, i32 3, !dbg !2800
  %79 = load i8, i8* %log2_chroma_h, align 2, !dbg !2800
  %conv52 = zext i8 %79 to i32, !dbg !2799
  %shl53 = shl i32 1, %conv52, !dbg !2801
  %80 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2802
  %v_chroma_sub_sample54 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %80, i32 0, i32 11, !dbg !2803
  store i32 %shl53, i32* %v_chroma_sub_sample54, align 4, !dbg !2804
  br label %if.end55, !dbg !2805

if.end55:                                         ; preds = %if.then47, %if.end45
  %81 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2806
  %82 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2807
  %call56 = call i32 @ff_choose_chroma_location(%struct.AVFormatContext* %81, %struct.AVStream* %82), !dbg !2808
  switch i32 %call56, label %sw.epilog [
    i32 3, label %sw.bb
    i32 1, label %sw.bb58
    i32 4, label %sw.bb60
    i32 2, label %sw.bb62
  ], !dbg !2809

sw.bb:                                            ; preds = %if.end55
  %83 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2810
  %color_siting57 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %83, i32 0, i32 8, !dbg !2812
  store i32 0, i32* %color_siting57, align 8, !dbg !2813
  br label %sw.epilog, !dbg !2814

sw.bb58:                                          ; preds = %if.end55
  %84 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2815
  %color_siting59 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %84, i32 0, i32 8, !dbg !2816
  store i32 6, i32* %color_siting59, align 8, !dbg !2817
  br label %sw.epilog, !dbg !2818

sw.bb60:                                          ; preds = %if.end55
  %85 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2819
  %color_siting61 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %85, i32 0, i32 8, !dbg !2820
  store i32 1, i32* %color_siting61, align 8, !dbg !2821
  br label %sw.epilog, !dbg !2822

sw.bb62:                                          ; preds = %if.end55
  %86 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2823
  %color_siting63 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %86, i32 0, i32 8, !dbg !2824
  store i32 3, i32* %color_siting63, align 8, !dbg !2825
  br label %sw.epilog, !dbg !2826

sw.epilog:                                        ; preds = %if.end55, %sw.bb62, %sw.bb60, %sw.bb58, %sw.bb
  %den64 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %tbc, i32 0, i32 1, !dbg !2827
  %87 = load i32, i32* %den64, align 4, !dbg !2827
  %num65 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %tbc, i32 0, i32 0, !dbg !2828
  %88 = load i32, i32* %num65, align 4, !dbg !2828
  %div = sdiv i32 %88, 2, !dbg !2829
  %add = add nsw i32 %87, %div, !dbg !2830
  %num66 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %tbc, i32 0, i32 0, !dbg !2831
  %89 = load i32, i32* %num66, align 4, !dbg !2831
  %div67 = sdiv i32 %add, %89, !dbg !2832
  %90 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2833
  %timecode_base = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %90, i32 0, i32 16, !dbg !2834
  store i32 %div67, i32* %timecode_base, align 8, !dbg !2835
  %91 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2836
  %92 = bitcast %struct.AVRational* %tbc to i64*, !dbg !2837
  %93 = load i64, i64* %92, align 4, !dbg !2837
  %call68 = call %struct.MXFSamplesPerFrame* @ff_mxf_get_samples_per_frame(%struct.AVFormatContext* %91, i64 %93), !dbg !2837
  store %struct.MXFSamplesPerFrame* %call68, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !2838
  %94 = load %struct.MXFSamplesPerFrame*, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !2839
  %tobool69 = icmp ne %struct.MXFSamplesPerFrame* %94, null, !dbg !2839
  br i1 %tobool69, label %if.end73, label %if.then70, !dbg !2841

if.then70:                                        ; preds = %sw.epilog
  %95 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2842
  %96 = bitcast %struct.AVFormatContext* %95 to i8*, !dbg !2842
  %den71 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %tbc, i32 0, i32 1, !dbg !2844
  %97 = load i32, i32* %den71, align 4, !dbg !2844
  %num72 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %tbc, i32 0, i32 0, !dbg !2845
  %98 = load i32, i32* %num72, align 4, !dbg !2845
  call void (i8*, i32, i8*, ...) @av_log(i8* %96, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i32 0, i32 0), i32 %97, i32 %98), !dbg !2846
  store i32 -22, i32* %retval, align 4, !dbg !2847
  br label %return, !dbg !2847

if.end73:                                         ; preds = %sw.epilog
  %99 = bitcast %struct.AVRational* %tbc to i64*, !dbg !2848
  %100 = load i64, i64* %99, align 4, !dbg !2848
  %call74 = call i32 @ff_mxf_get_content_package_rate(i64 %100), !dbg !2848
  %101 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2849
  %content_package_rate = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %101, i32 0, i32 18, !dbg !2850
  store i32 %call74, i32* %content_package_rate, align 8, !dbg !2851
  %102 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2852
  %time_base75 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %102, i32 0, i32 3, !dbg !2853
  %103 = load %struct.MXFSamplesPerFrame*, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !2854
  %time_base76 = getelementptr inbounds %struct.MXFSamplesPerFrame, %struct.MXFSamplesPerFrame* %103, i32 0, i32 0, !dbg !2855
  %104 = bitcast %struct.AVRational* %time_base75 to i8*, !dbg !2855
  %105 = bitcast %struct.AVRational* %time_base76 to i8*, !dbg !2855
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %105, i64 8, i32 4, i1 false), !dbg !2855
  %106 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2856
  %time_base77 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %106, i32 0, i32 3, !dbg !2857
  %107 = bitcast %struct.AVRational* %time_base77 to i64*, !dbg !2858
  %108 = load i64, i64* %107, align 4, !dbg !2858
  %109 = bitcast %struct.AVRational* %q.i to i64*, !dbg !2858
  store i64 %108, i64* %109, align 4, !dbg !2858
  %num.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 0, !dbg !2859
  %den.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 1, !dbg !2860
  %110 = load i32, i32* %den.i, align 4, !dbg !2860
  store i32 %110, i32* %num.i, align 4, !dbg !2859
  %den1.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 1, !dbg !2859
  %num2.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 0, !dbg !2861
  %111 = load i32, i32* %num2.i, align 4, !dbg !2861
  store i32 %111, i32* %den1.i, align 4, !dbg !2859
  %112 = bitcast %struct.AVRational* %retval.i to i8*, !dbg !2862
  %113 = bitcast %struct.AVRational* %r.i to i8*, !dbg !2862
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %112, i8* %113, i64 8, i32 4, i1 false) #9, !dbg !2862
  %114 = bitcast %struct.AVRational* %retval.i to i64*, !dbg !2863
  %115 = load i64, i64* %114, align 4, !dbg !2863
  %116 = bitcast %struct.AVRational* %coerce79 to i64*, !dbg !2858
  store i64 %115, i64* %116, align 4, !dbg !2858
  %117 = bitcast %struct.AVRational* %rate to i8*, !dbg !2858
  %118 = bitcast %struct.AVRational* %coerce79 to i8*, !dbg !2858
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %117, i8* %118, i64 8, i32 4, i1 false), !dbg !2864
  %119 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2866
  %120 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2867
  %time_base80 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %120, i32 0, i32 3, !dbg !2868
  %num81 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base80, i32 0, i32 0, !dbg !2869
  %121 = load i32, i32* %num81, align 4, !dbg !2869
  %122 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2870
  %time_base82 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %122, i32 0, i32 3, !dbg !2871
  %den83 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base82, i32 0, i32 1, !dbg !2872
  %123 = load i32, i32* %den83, align 4, !dbg !2872
  call void @avpriv_set_pts_info(%struct.AVStream* %119, i32 64, i32 %121, i32 %123), !dbg !2873
  %124 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2874
  %125 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2876
  %126 = bitcast %struct.AVRational* %rate to i64*, !dbg !2877
  %127 = load i64, i64* %126, align 4, !dbg !2877
  %call84 = call i32 @mxf_init_timecode(%struct.AVFormatContext* %124, %struct.AVStream* %125, i64 %127), !dbg !2877
  store i32 %call84, i32* %ret, align 4, !dbg !2878
  %cmp85 = icmp slt i32 %call84, 0, !dbg !2879
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !2880

if.then87:                                        ; preds = %if.end73
  %128 = load i32, i32* %ret, align 4, !dbg !2881
  store i32 %128, i32* %retval, align 4, !dbg !2882
  br label %return, !dbg !2882

if.end88:                                         ; preds = %if.end73
  %129 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2883
  %codecpar89 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %129, i32 0, i32 19, !dbg !2885
  %130 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar89, align 8, !dbg !2885
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %130, i32 0, i32 1, !dbg !2886
  %131 = load i32, i32* %codec_id, align 4, !dbg !2886
  %cmp90 = icmp eq i32 %131, 2, !dbg !2887
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !2888

if.then92:                                        ; preds = %if.end88
  %132 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2889
  %seq_closed_gop = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %132, i32 0, i32 18, !dbg !2891
  store i32 -1, i32* %seq_closed_gop, align 4, !dbg !2892
  br label %if.end93, !dbg !2893

if.end93:                                         ; preds = %if.then92, %if.end88
  %133 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2894
  %codecpar94 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %133, i32 0, i32 19, !dbg !2895
  %134 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar94, align 8, !dbg !2895
  %bit_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %134, i32 0, i32 6, !dbg !2896
  %135 = load i64, i64* %bit_rate, align 8, !dbg !2896
  %conv95 = trunc i64 %135 to i32, !dbg !2894
  %136 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2897
  %video_bit_rate = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %136, i32 0, i32 15, !dbg !2898
  store i32 %conv95, i32* %video_bit_rate, align 8, !dbg !2899
  %137 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2900
  %oformat96 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %137, i32 0, i32 2, !dbg !2902
  %138 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat96, align 8, !dbg !2902
  %cmp97 = icmp eq %struct.AVOutputFormat* %138, @ff_mxf_d10_muxer, !dbg !2903
  br i1 %cmp97, label %if.then108, label %lor.lhs.false, !dbg !2904

lor.lhs.false:                                    ; preds = %if.end93
  %139 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2905
  %codecpar99 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %139, i32 0, i32 19, !dbg !2906
  %140 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar99, align 8, !dbg !2906
  %codec_id100 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %140, i32 0, i32 1, !dbg !2907
  %141 = load i32, i32* %codec_id100, align 4, !dbg !2907
  %cmp101 = icmp eq i32 %141, 99, !dbg !2908
  br i1 %cmp101, label %if.then108, label %lor.lhs.false103, !dbg !2909

lor.lhs.false103:                                 ; preds = %lor.lhs.false
  %142 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2910
  %codecpar104 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %142, i32 0, i32 19, !dbg !2911
  %143 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar104, align 8, !dbg !2911
  %codec_id105 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %143, i32 0, i32 1, !dbg !2912
  %144 = load i32, i32* %codec_id105, align 4, !dbg !2912
  %cmp106 = icmp eq i32 %144, 24, !dbg !2913
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !2914

if.then108:                                       ; preds = %lor.lhs.false103, %lor.lhs.false, %if.end93
  %145 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2915
  %cbr_index = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %145, i32 0, i32 28, !dbg !2916
  store i32 1, i32* %cbr_index, align 8, !dbg !2917
  br label %if.end109, !dbg !2915

if.end109:                                        ; preds = %if.then108, %lor.lhs.false103
  %146 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2918
  %oformat110 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %146, i32 0, i32 2, !dbg !2920
  %147 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat110, align 8, !dbg !2920
  %cmp111 = icmp eq %struct.AVOutputFormat* %147, @ff_mxf_d10_muxer, !dbg !2921
  br i1 %cmp111, label %if.then113, label %if.end188, !dbg !2922

if.then113:                                       ; preds = %if.end109
  %148 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !2923
  %codecpar114 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %148, i32 0, i32 19, !dbg !2926
  %149 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar114, align 8, !dbg !2926
  %codec_id115 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %149, i32 0, i32 1, !dbg !2927
  %150 = load i32, i32* %codec_id115, align 4, !dbg !2927
  %cmp116 = icmp ne i32 %150, 2, !dbg !2928
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !2929

if.then118:                                       ; preds = %if.then113
  %151 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2930
  %152 = bitcast %struct.AVFormatContext* %151 to i8*, !dbg !2930
  call void (i8*, i32, i8*, ...) @av_log(i8* %152, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.30, i32 0, i32 0)), !dbg !2932
  store i32 -22, i32* %retval, align 4, !dbg !2933
  br label %return, !dbg !2933

if.end119:                                        ; preds = %if.then113
  %153 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2934
  %video_bit_rate120 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %153, i32 0, i32 15, !dbg !2936
  %154 = load i32, i32* %video_bit_rate120, align 8, !dbg !2936
  %cmp121 = icmp eq i32 %154, 50000000, !dbg !2937
  br i1 %cmp121, label %land.lhs.true123, label %if.else, !dbg !2938

land.lhs.true123:                                 ; preds = %if.end119
  %155 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2939
  %time_base124 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %155, i32 0, i32 3, !dbg !2941
  %den125 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base124, i32 0, i32 1, !dbg !2942
  %156 = load i32, i32* %den125, align 4, !dbg !2942
  %cmp126 = icmp eq i32 %156, 25, !dbg !2943
  br i1 %cmp126, label %if.then128, label %if.else, !dbg !2944

if.then128:                                       ; preds = %land.lhs.true123
  %157 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2945
  %index = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %157, i32 0, i32 2, !dbg !2947
  store i32 3, i32* %index, align 8, !dbg !2948
  br label %if.end175, !dbg !2949

if.else:                                          ; preds = %land.lhs.true123, %if.end119
  %158 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2950
  %video_bit_rate129 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %158, i32 0, i32 15, !dbg !2953
  %159 = load i32, i32* %video_bit_rate129, align 8, !dbg !2953
  %cmp130 = icmp eq i32 %159, 49999840, !dbg !2954
  br i1 %cmp130, label %land.lhs.true136, label %lor.lhs.false132, !dbg !2955

lor.lhs.false132:                                 ; preds = %if.else
  %160 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2956
  %video_bit_rate133 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %160, i32 0, i32 15, !dbg !2958
  %161 = load i32, i32* %video_bit_rate133, align 8, !dbg !2958
  %cmp134 = icmp eq i32 %161, 50000000, !dbg !2959
  br i1 %cmp134, label %land.lhs.true136, label %if.else143, !dbg !2960

land.lhs.true136:                                 ; preds = %lor.lhs.false132, %if.else
  %162 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2961
  %time_base137 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %162, i32 0, i32 3, !dbg !2963
  %den138 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base137, i32 0, i32 1, !dbg !2964
  %163 = load i32, i32* %den138, align 4, !dbg !2964
  %cmp139 = icmp ne i32 %163, 25, !dbg !2965
  br i1 %cmp139, label %if.then141, label %if.else143, !dbg !2966

if.then141:                                       ; preds = %land.lhs.true136
  %164 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2967
  %index142 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %164, i32 0, i32 2, !dbg !2969
  store i32 5, i32* %index142, align 8, !dbg !2970
  br label %if.end174, !dbg !2971

if.else143:                                       ; preds = %land.lhs.true136, %lor.lhs.false132
  %165 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2972
  %video_bit_rate144 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %165, i32 0, i32 15, !dbg !2975
  %166 = load i32, i32* %video_bit_rate144, align 8, !dbg !2975
  %cmp145 = icmp eq i32 %166, 40000000, !dbg !2976
  br i1 %cmp145, label %if.then147, label %if.else157, !dbg !2972

if.then147:                                       ; preds = %if.else143
  %167 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2977
  %time_base148 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %167, i32 0, i32 3, !dbg !2980
  %den149 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base148, i32 0, i32 1, !dbg !2981
  %168 = load i32, i32* %den149, align 4, !dbg !2981
  %cmp150 = icmp eq i32 %168, 25, !dbg !2982
  br i1 %cmp150, label %if.then152, label %if.else154, !dbg !2983

if.then152:                                       ; preds = %if.then147
  %169 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2984
  %index153 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %169, i32 0, i32 2, !dbg !2986
  store i32 7, i32* %index153, align 8, !dbg !2987
  br label %if.end156, !dbg !2984

if.else154:                                       ; preds = %if.then147
  %170 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2988
  %index155 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %170, i32 0, i32 2, !dbg !2989
  store i32 9, i32* %index155, align 8, !dbg !2990
  br label %if.end156

if.end156:                                        ; preds = %if.else154, %if.then152
  br label %if.end173, !dbg !2991

if.else157:                                       ; preds = %if.else143
  %171 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !2992
  %video_bit_rate158 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %171, i32 0, i32 15, !dbg !2995
  %172 = load i32, i32* %video_bit_rate158, align 8, !dbg !2995
  %cmp159 = icmp eq i32 %172, 30000000, !dbg !2996
  br i1 %cmp159, label %if.then161, label %if.else171, !dbg !2992

if.then161:                                       ; preds = %if.else157
  %173 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2997
  %time_base162 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %173, i32 0, i32 3, !dbg !3000
  %den163 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base162, i32 0, i32 1, !dbg !3001
  %174 = load i32, i32* %den163, align 4, !dbg !3001
  %cmp164 = icmp eq i32 %174, 25, !dbg !3002
  br i1 %cmp164, label %if.then166, label %if.else168, !dbg !3003

if.then166:                                       ; preds = %if.then161
  %175 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3004
  %index167 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %175, i32 0, i32 2, !dbg !3006
  store i32 11, i32* %index167, align 8, !dbg !3007
  br label %if.end170, !dbg !3004

if.else168:                                       ; preds = %if.then161
  %176 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3008
  %index169 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %176, i32 0, i32 2, !dbg !3009
  store i32 13, i32* %index169, align 8, !dbg !3010
  br label %if.end170

if.end170:                                        ; preds = %if.else168, %if.then166
  br label %if.end172, !dbg !3011

if.else171:                                       ; preds = %if.else157
  %177 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3012
  %178 = bitcast %struct.AVFormatContext* %177 to i8*, !dbg !3012
  call void (i8*, i32, i8*, ...) @av_log(i8* %178, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.31, i32 0, i32 0)), !dbg !3014
  store i32 -1, i32* %retval, align 4, !dbg !3015
  br label %return, !dbg !3015

if.end172:                                        ; preds = %if.end170
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.end156
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then141
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then128
  %179 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3016
  %signal_standard = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %179, i32 0, i32 9, !dbg !3017
  store i32 1, i32* %signal_standard, align 4, !dbg !3018
  %180 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3019
  %color_siting176 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %180, i32 0, i32 8, !dbg !3020
  store i32 0, i32* %color_siting176, align 8, !dbg !3021
  %181 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3022
  %video_bit_rate177 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %181, i32 0, i32 15, !dbg !3023
  %182 = load i32, i32* %video_bit_rate177, align 8, !dbg !3023
  %conv178 = sext i32 %182 to i64, !dbg !3024
  %183 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3025
  %time_base179 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %183, i32 0, i32 3, !dbg !3026
  %num180 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base179, i32 0, i32 0, !dbg !3027
  %184 = load i32, i32* %num180, align 4, !dbg !3027
  %conv181 = sext i32 %184 to i64, !dbg !3025
  %mul = mul nsw i64 %conv178, %conv181, !dbg !3028
  %185 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3029
  %time_base182 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %185, i32 0, i32 3, !dbg !3030
  %den183 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base182, i32 0, i32 1, !dbg !3031
  %186 = load i32, i32* %den183, align 4, !dbg !3031
  %mul184 = mul nsw i32 8, %186, !dbg !3032
  %conv185 = sext i32 %mul184 to i64, !dbg !3033
  %div186 = sdiv i64 %mul, %conv185, !dbg !3034
  %conv187 = trunc i64 %div186 to i32, !dbg !3024
  %187 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3035
  %frame_size = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %187, i32 0, i32 17, !dbg !3036
  store i32 %conv187, i32* %frame_size, align 8, !dbg !3037
  br label %if.end188, !dbg !3038

if.end188:                                        ; preds = %if.end175, %if.end109
  %188 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3039
  %signal_standard189 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %188, i32 0, i32 23, !dbg !3041
  %189 = load i32, i32* %signal_standard189, align 8, !dbg !3041
  %cmp190 = icmp sge i32 %189, 0, !dbg !3042
  br i1 %cmp190, label %if.then192, label %if.end195, !dbg !3043

if.then192:                                       ; preds = %if.end188
  %190 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3044
  %signal_standard193 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %190, i32 0, i32 23, !dbg !3045
  %191 = load i32, i32* %signal_standard193, align 8, !dbg !3045
  %192 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3046
  %signal_standard194 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %192, i32 0, i32 9, !dbg !3047
  store i32 %191, i32* %signal_standard194, align 4, !dbg !3048
  br label %if.end195, !dbg !3046

if.end195:                                        ; preds = %if.then192, %if.end188
  br label %if.end333, !dbg !3049

if.else196:                                       ; preds = %if.end24
  %193 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3050
  %codecpar197 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %193, i32 0, i32 19, !dbg !3052
  %194 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar197, align 8, !dbg !3052
  %codec_type198 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %194, i32 0, i32 0, !dbg !3053
  %195 = load i32, i32* %codec_type198, align 8, !dbg !3053
  %cmp199 = icmp eq i32 %195, 1, !dbg !3054
  br i1 %cmp199, label %if.then201, label %if.else309, !dbg !3050

if.then201:                                       ; preds = %if.else196
  %196 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3055
  %codecpar202 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %196, i32 0, i32 19, !dbg !3057
  %197 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar202, align 8, !dbg !3057
  %sample_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %197, i32 0, i32 23, !dbg !3058
  %198 = load i32, i32* %sample_rate, align 4, !dbg !3058
  %cmp203 = icmp ne i32 %198, 48000, !dbg !3059
  br i1 %cmp203, label %if.then205, label %if.end206, !dbg !3060

if.then205:                                       ; preds = %if.then201
  %199 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3061
  %200 = bitcast %struct.AVFormatContext* %199 to i8*, !dbg !3061
  call void (i8*, i32, i8*, ...) @av_log(i8* %200, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.32, i32 0, i32 0)), !dbg !3063
  store i32 -1, i32* %retval, align 4, !dbg !3064
  br label %return, !dbg !3064

if.end206:                                        ; preds = %if.then201
  %201 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3065
  %202 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3066
  %codecpar207 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %202, i32 0, i32 19, !dbg !3067
  %203 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar207, align 8, !dbg !3067
  %sample_rate208 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %203, i32 0, i32 23, !dbg !3068
  %204 = load i32, i32* %sample_rate208, align 4, !dbg !3068
  call void @avpriv_set_pts_info(%struct.AVStream* %201, i32 64, i32 1, i32 %204), !dbg !3069
  %205 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3070
  %oformat209 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %205, i32 0, i32 2, !dbg !3071
  %206 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat209, align 8, !dbg !3071
  %cmp210 = icmp eq %struct.AVOutputFormat* %206, @ff_mxf_d10_muxer, !dbg !3072
  br i1 %cmp210, label %if.then212, label %if.else241, !dbg !3073

if.then212:                                       ; preds = %if.end206
  %207 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3074
  %index213 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %207, i32 0, i32 0, !dbg !3077
  %208 = load i32, i32* %index213, align 8, !dbg !3077
  %cmp214 = icmp ne i32 %208, 1, !dbg !3078
  br i1 %cmp214, label %if.then216, label %if.end217, !dbg !3079

if.then216:                                       ; preds = %if.then212
  %209 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3080
  %210 = bitcast %struct.AVFormatContext* %209 to i8*, !dbg !3080
  call void (i8*, i32, i8*, ...) @av_log(i8* %210, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i32 0, i32 0)), !dbg !3082
  store i32 -1, i32* %retval, align 4, !dbg !3083
  br label %return, !dbg !3083

if.end217:                                        ; preds = %if.then212
  %211 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3084
  %codecpar218 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %211, i32 0, i32 19, !dbg !3086
  %212 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar218, align 8, !dbg !3086
  %codec_id219 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %212, i32 0, i32 1, !dbg !3087
  %213 = load i32, i32* %codec_id219, align 4, !dbg !3087
  %cmp220 = icmp ne i32 %213, 65536, !dbg !3088
  br i1 %cmp220, label %land.lhs.true222, label %if.end228, !dbg !3089

land.lhs.true222:                                 ; preds = %if.end217
  %214 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3090
  %codecpar223 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %214, i32 0, i32 19, !dbg !3091
  %215 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar223, align 8, !dbg !3091
  %codec_id224 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %215, i32 0, i32 1, !dbg !3092
  %216 = load i32, i32* %codec_id224, align 4, !dbg !3092
  %cmp225 = icmp ne i32 %216, 65548, !dbg !3093
  br i1 %cmp225, label %if.then227, label %if.end228, !dbg !3094

if.then227:                                       ; preds = %land.lhs.true222
  %217 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3096
  %218 = bitcast %struct.AVFormatContext* %217 to i8*, !dbg !3096
  call void (i8*, i32, i8*, ...) @av_log(i8* %218, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.34, i32 0, i32 0)), !dbg !3098
  br label %if.end228, !dbg !3099

if.end228:                                        ; preds = %if.then227, %land.lhs.true222, %if.end217
  %219 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3100
  %streams229 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %219, i32 0, i32 7, !dbg !3101
  %220 = load %struct.AVStream**, %struct.AVStream*** %streams229, align 8, !dbg !3101
  %arrayidx230 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %220, i64 0, !dbg !3100
  %221 = load %struct.AVStream*, %struct.AVStream** %arrayidx230, align 8, !dbg !3100
  %priv_data231 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %221, i32 0, i32 3, !dbg !3102
  %222 = load i8*, i8** %priv_data231, align 8, !dbg !3102
  %223 = bitcast i8* %222 to %struct.MXFStreamContext*, !dbg !3103
  %index232 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %223, i32 0, i32 2, !dbg !3104
  %224 = load i32, i32* %index232, align 8, !dbg !3104
  %add233 = add nsw i32 %224, 1, !dbg !3105
  %225 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3106
  %index234 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %225, i32 0, i32 2, !dbg !3107
  store i32 %add233, i32* %index234, align 8, !dbg !3108
  %226 = load %struct.MXFSamplesPerFrame*, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !3109
  %arrayidx235 = getelementptr inbounds %struct.MXFSamplesPerFrame, %struct.MXFSamplesPerFrame* %226, i64 0, !dbg !3109
  %samples_per_frame = getelementptr inbounds %struct.MXFSamplesPerFrame, %struct.MXFSamplesPerFrame* %arrayidx235, i32 0, i32 1, !dbg !3110
  %arrayidx236 = getelementptr inbounds [6 x i32], [6 x i32]* %samples_per_frame, i64 0, i64 0, !dbg !3109
  %227 = load i32, i32* %arrayidx236, align 4, !dbg !3109
  %mul237 = mul nsw i32 8, %227, !dbg !3111
  %mul238 = mul nsw i32 %mul237, 4, !dbg !3112
  %add239 = add nsw i32 4, %mul238, !dbg !3113
  %228 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3114
  %frame_size240 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %228, i32 0, i32 17, !dbg !3115
  store i32 %add239, i32* %frame_size240, align 8, !dbg !3116
  br label %if.end308, !dbg !3117

if.else241:                                       ; preds = %if.end206
  %229 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3118
  %oformat242 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %229, i32 0, i32 2, !dbg !3120
  %230 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat242, align 8, !dbg !3120
  %cmp243 = icmp eq %struct.AVOutputFormat* %230, @ff_mxf_opatom_muxer, !dbg !3121
  br i1 %cmp243, label %if.then245, label %if.else294, !dbg !3118

if.then245:                                       ; preds = %if.else241
  call void @llvm.dbg.declare(metadata %struct.AVRational* %tbc246, metadata !3122, metadata !2529), !dbg !3123
  %231 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3124
  %audio_edit_rate = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %231, i32 0, i32 25, !dbg !3125
  %232 = bitcast %struct.AVRational* %audio_edit_rate to i64*, !dbg !3126
  %233 = load i64, i64* %232, align 8, !dbg !3126
  %234 = bitcast %struct.AVRational* %q.i455 to i64*, !dbg !3126
  store i64 %233, i64* %234, align 4, !dbg !3126
  %num.i457 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i456, i32 0, i32 0, !dbg !3127
  %den.i458 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i455, i32 0, i32 1, !dbg !3128
  %235 = load i32, i32* %den.i458, align 4, !dbg !3128
  store i32 %235, i32* %num.i457, align 4, !dbg !3127
  %den1.i459 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i456, i32 0, i32 1, !dbg !3127
  %num2.i460 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i455, i32 0, i32 0, !dbg !3129
  %236 = load i32, i32* %num2.i460, align 4, !dbg !3129
  store i32 %236, i32* %den1.i459, align 4, !dbg !3127
  %237 = bitcast %struct.AVRational* %retval.i454 to i8*, !dbg !3130
  %238 = bitcast %struct.AVRational* %r.i456 to i8*, !dbg !3130
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %237, i8* %238, i64 8, i32 4, i1 false) #9, !dbg !3130
  %239 = bitcast %struct.AVRational* %retval.i454 to i64*, !dbg !3131
  %240 = load i64, i64* %239, align 4, !dbg !3131
  %241 = bitcast %struct.AVRational* %tbc246 to i64*, !dbg !3126
  store i64 %240, i64* %241, align 4, !dbg !3126
  %242 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3132
  %codecpar248 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %242, i32 0, i32 19, !dbg !3134
  %243 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar248, align 8, !dbg !3134
  %codec_id249 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %243, i32 0, i32 1, !dbg !3135
  %244 = load i32, i32* %codec_id249, align 4, !dbg !3135
  %cmp250 = icmp ne i32 %244, 65536, !dbg !3136
  br i1 %cmp250, label %land.lhs.true252, label %if.end258, !dbg !3137

land.lhs.true252:                                 ; preds = %if.then245
  %245 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3138
  %codecpar253 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %245, i32 0, i32 19, !dbg !3139
  %246 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar253, align 8, !dbg !3139
  %codec_id254 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %246, i32 0, i32 1, !dbg !3140
  %247 = load i32, i32* %codec_id254, align 4, !dbg !3140
  %cmp255 = icmp ne i32 %247, 65548, !dbg !3141
  br i1 %cmp255, label %if.then257, label %if.end258, !dbg !3142

if.then257:                                       ; preds = %land.lhs.true252
  %248 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3144
  %249 = bitcast %struct.AVFormatContext* %248 to i8*, !dbg !3144
  call void (i8*, i32, i8*, ...) @av_log(i8* %249, i32 16, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.35, i32 0, i32 0)), !dbg !3146
  store i32 -1163346256, i32* %retval, align 4, !dbg !3147
  br label %return, !dbg !3147

if.end258:                                        ; preds = %land.lhs.true252, %if.then245
  %250 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3148
  %codecpar259 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %250, i32 0, i32 19, !dbg !3150
  %251 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar259, align 8, !dbg !3150
  %channels = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %251, i32 0, i32 22, !dbg !3151
  %252 = load i32, i32* %channels, align 8, !dbg !3151
  %cmp260 = icmp ne i32 %252, 1, !dbg !3152
  br i1 %cmp260, label %if.then262, label %if.end263, !dbg !3153

if.then262:                                       ; preds = %if.end258
  %253 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3154
  %254 = bitcast %struct.AVFormatContext* %253 to i8*, !dbg !3154
  call void (i8*, i32, i8*, ...) @av_log(i8* %254, i32 16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i32 0, i32 0)), !dbg !3156
  store i32 -22, i32* %retval, align 4, !dbg !3157
  br label %return, !dbg !3157

if.end263:                                        ; preds = %if.end258
  %255 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3158
  %256 = bitcast %struct.AVRational* %tbc246 to i64*, !dbg !3159
  %257 = load i64, i64* %256, align 4, !dbg !3159
  %call264 = call %struct.MXFSamplesPerFrame* @ff_mxf_get_samples_per_frame(%struct.AVFormatContext* %255, i64 %257), !dbg !3159
  store %struct.MXFSamplesPerFrame* %call264, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !3160
  %258 = load %struct.MXFSamplesPerFrame*, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !3161
  %tobool265 = icmp ne %struct.MXFSamplesPerFrame* %258, null, !dbg !3161
  br i1 %tobool265, label %if.end269, label %if.then266, !dbg !3163

if.then266:                                       ; preds = %if.end263
  %259 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3164
  %260 = bitcast %struct.AVFormatContext* %259 to i8*, !dbg !3164
  %den267 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %tbc246, i32 0, i32 1, !dbg !3166
  %261 = load i32, i32* %den267, align 4, !dbg !3166
  %num268 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %tbc246, i32 0, i32 0, !dbg !3167
  %262 = load i32, i32* %num268, align 4, !dbg !3167
  call void (i8*, i32, i8*, ...) @av_log(i8* %260, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.37, i32 0, i32 0), i32 %261, i32 %262), !dbg !3168
  store i32 -22, i32* %retval, align 4, !dbg !3169
  br label %return, !dbg !3169

if.end269:                                        ; preds = %if.end263
  %263 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3170
  %time_base270 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %263, i32 0, i32 3, !dbg !3171
  %264 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3172
  %time_base271 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %264, i32 0, i32 4, !dbg !3173
  %265 = bitcast %struct.AVRational* %time_base270 to i8*, !dbg !3173
  %266 = bitcast %struct.AVRational* %time_base271 to i8*, !dbg !3173
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %265, i8* %266, i64 8, i32 4, i1 false), !dbg !3173
  %267 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3174
  %268 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3175
  %269 = load %struct.MXFSamplesPerFrame*, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !3176
  %time_base273 = getelementptr inbounds %struct.MXFSamplesPerFrame, %struct.MXFSamplesPerFrame* %269, i32 0, i32 0, !dbg !3177
  %270 = bitcast %struct.AVRational* %time_base273 to i64*, !dbg !3178
  %271 = load i64, i64* %270, align 4, !dbg !3178
  %272 = bitcast %struct.AVRational* %q.i477 to i64*, !dbg !3178
  store i64 %271, i64* %272, align 4, !dbg !3178
  %num.i479 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i478, i32 0, i32 0, !dbg !3179
  %den.i480 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i477, i32 0, i32 1, !dbg !3180
  %273 = load i32, i32* %den.i480, align 4, !dbg !3180
  store i32 %273, i32* %num.i479, align 4, !dbg !3179
  %den1.i481 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i478, i32 0, i32 1, !dbg !3179
  %num2.i482 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i477, i32 0, i32 0, !dbg !3181
  %274 = load i32, i32* %num2.i482, align 4, !dbg !3181
  store i32 %274, i32* %den1.i481, align 4, !dbg !3179
  %275 = bitcast %struct.AVRational* %retval.i476 to i8*, !dbg !3182
  %276 = bitcast %struct.AVRational* %r.i478 to i8*, !dbg !3182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %275, i8* %276, i64 8, i32 4, i1 false) #9, !dbg !3182
  %277 = bitcast %struct.AVRational* %retval.i476 to i64*, !dbg !3183
  %278 = load i64, i64* %277, align 4, !dbg !3183
  %279 = bitcast %struct.AVRational* %agg.tmp272 to i64*, !dbg !3178
  store i64 %278, i64* %279, align 4, !dbg !3178
  %280 = bitcast %struct.AVRational* %agg.tmp272 to i64*, !dbg !3184
  %281 = load i64, i64* %280, align 4, !dbg !3184
  %call275 = call i32 @mxf_init_timecode(%struct.AVFormatContext* %267, %struct.AVStream* %268, i64 %281), !dbg !3185
  store i32 %call275, i32* %ret, align 4, !dbg !3187
  %cmp276 = icmp slt i32 %call275, 0, !dbg !3188
  br i1 %cmp276, label %if.then278, label %if.end279, !dbg !3189

if.then278:                                       ; preds = %if.end269
  %282 = load i32, i32* %ret, align 4, !dbg !3190
  store i32 %282, i32* %retval, align 4, !dbg !3191
  br label %return, !dbg !3191

if.end279:                                        ; preds = %if.end269
  %den280 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %tbc246, i32 0, i32 1, !dbg !3192
  %283 = load i32, i32* %den280, align 4, !dbg !3192
  %num281 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %tbc246, i32 0, i32 0, !dbg !3193
  %284 = load i32, i32* %num281, align 4, !dbg !3193
  %div282 = sdiv i32 %284, 2, !dbg !3194
  %add283 = add nsw i32 %283, %div282, !dbg !3195
  %num284 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %tbc246, i32 0, i32 0, !dbg !3196
  %285 = load i32, i32* %num284, align 4, !dbg !3196
  %div285 = sdiv i32 %add283, %285, !dbg !3197
  %286 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3198
  %timecode_base286 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %286, i32 0, i32 16, !dbg !3199
  store i32 %div285, i32* %timecode_base286, align 8, !dbg !3200
  %287 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3201
  %codecpar287 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %287, i32 0, i32 19, !dbg !3202
  %288 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar287, align 8, !dbg !3202
  %codec_id288 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %288, i32 0, i32 1, !dbg !3203
  %289 = load i32, i32* %codec_id288, align 4, !dbg !3203
  %call289 = call i32 @av_get_bits_per_sample(i32 %289), !dbg !3204
  %290 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3205
  %codecpar290 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %290, i32 0, i32 19, !dbg !3206
  %291 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar290, align 8, !dbg !3206
  %channels291 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %291, i32 0, i32 22, !dbg !3207
  %292 = load i32, i32* %channels291, align 8, !dbg !3207
  %mul292 = mul nsw i32 %call289, %292, !dbg !3208
  %shr = ashr i32 %mul292, 3, !dbg !3209
  %293 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3210
  %edit_unit_byte_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %293, i32 0, i32 17, !dbg !3211
  store i32 %shr, i32* %edit_unit_byte_count, align 4, !dbg !3212
  %294 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3213
  %index293 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %294, i32 0, i32 2, !dbg !3214
  store i32 2, i32* %index293, align 8, !dbg !3215
  br label %if.end307, !dbg !3216

if.else294:                                       ; preds = %if.else241
  %295 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3217
  %slice_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %295, i32 0, i32 8, !dbg !3219
  store i8 1, i8* %slice_count, align 8, !dbg !3220
  %296 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3221
  %codecpar295 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %296, i32 0, i32 19, !dbg !3222
  %297 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar295, align 8, !dbg !3222
  %channels296 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %297, i32 0, i32 22, !dbg !3223
  %298 = load i32, i32* %channels296, align 8, !dbg !3223
  %299 = load %struct.MXFSamplesPerFrame*, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !3224
  %arrayidx297 = getelementptr inbounds %struct.MXFSamplesPerFrame, %struct.MXFSamplesPerFrame* %299, i64 0, !dbg !3224
  %samples_per_frame298 = getelementptr inbounds %struct.MXFSamplesPerFrame, %struct.MXFSamplesPerFrame* %arrayidx297, i32 0, i32 1, !dbg !3225
  %arrayidx299 = getelementptr inbounds [6 x i32], [6 x i32]* %samples_per_frame298, i64 0, i64 0, !dbg !3224
  %300 = load i32, i32* %arrayidx299, align 4, !dbg !3224
  %mul300 = mul nsw i32 %298, %300, !dbg !3226
  %301 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3227
  %codecpar301 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %301, i32 0, i32 19, !dbg !3228
  %302 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar301, align 8, !dbg !3228
  %codec_id302 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %302, i32 0, i32 1, !dbg !3229
  %303 = load i32, i32* %codec_id302, align 4, !dbg !3229
  %call303 = call i32 @av_get_bits_per_sample(i32 %303), !dbg !3230
  %mul304 = mul nsw i32 %mul300, %call303, !dbg !3231
  %div305 = sdiv i32 %mul304, 8, !dbg !3232
  %304 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3233
  %frame_size306 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %304, i32 0, i32 17, !dbg !3234
  store i32 %div305, i32* %frame_size306, align 8, !dbg !3235
  br label %if.end307

if.end307:                                        ; preds = %if.else294, %if.end279
  br label %if.end308

if.end308:                                        ; preds = %if.end307, %if.end228
  br label %if.end332, !dbg !3236

if.else309:                                       ; preds = %if.else196
  %305 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3237
  %codecpar310 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %305, i32 0, i32 19, !dbg !3240
  %306 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar310, align 8, !dbg !3240
  %codec_type311 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %306, i32 0, i32 0, !dbg !3241
  %307 = load i32, i32* %codec_type311, align 8, !dbg !3241
  %cmp312 = icmp eq i32 %307, 2, !dbg !3242
  br i1 %cmp312, label %if.then314, label %if.end331, !dbg !3237

if.then314:                                       ; preds = %if.else309
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %e, metadata !3243, metadata !2529), !dbg !3251
  %308 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3252
  %metadata315 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %308, i32 0, i32 11, !dbg !3253
  %309 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata315, align 8, !dbg !3253
  %call316 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %309, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !3254
  store %struct.AVDictionaryEntry* %call316, %struct.AVDictionaryEntry** %e, align 8, !dbg !3251
  %310 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !3255
  %tobool317 = icmp ne %struct.AVDictionaryEntry* %310, null, !dbg !3255
  br i1 %tobool317, label %land.lhs.true318, label %if.else323, !dbg !3257

land.lhs.true318:                                 ; preds = %if.then314
  %311 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %e, align 8, !dbg !3258
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %311, i32 0, i32 1, !dbg !3260
  %312 = load i8*, i8** %value, align 8, !dbg !3260
  %call319 = call i32 @strcmp(i8* %312, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.39, i32 0, i32 0)) #10, !dbg !3261
  %tobool320 = icmp ne i32 %call319, 0, !dbg !3261
  br i1 %tobool320, label %if.else323, label %if.then321, !dbg !3262

if.then321:                                       ; preds = %land.lhs.true318
  %313 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3263
  %index322 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %313, i32 0, i32 2, !dbg !3265
  store i32 29, i32* %index322, align 8, !dbg !3266
  br label %if.end324, !dbg !3267

if.else323:                                       ; preds = %land.lhs.true318, %if.then314
  %314 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3268
  %315 = bitcast %struct.AVFormatContext* %314 to i8*, !dbg !3268
  %316 = load i32, i32* %i, align 4, !dbg !3270
  call void (i8*, i32, i8*, ...) @av_log(i8* %315, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i32 0, i32 0), i32 %316), !dbg !3271
  store i32 -1, i32* %retval, align 4, !dbg !3272
  br label %return, !dbg !3272

if.end324:                                        ; preds = %if.then321
  %317 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3273
  %index325 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %317, i32 0, i32 0, !dbg !3275
  %318 = load i32, i32* %index325, align 8, !dbg !3275
  %319 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3276
  %nb_streams326 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %319, i32 0, i32 6, !dbg !3277
  %320 = load i32, i32* %nb_streams326, align 4, !dbg !3277
  %sub = sub i32 %320, 1, !dbg !3278
  %cmp327 = icmp ne i32 %318, %sub, !dbg !3279
  br i1 %cmp327, label %if.then329, label %if.end330, !dbg !3280

if.then329:                                       ; preds = %if.end324
  %321 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3281
  %322 = bitcast %struct.AVFormatContext* %321 to i8*, !dbg !3281
  call void (i8*, i32, i8*, ...) @av_log(i8* %322, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.41, i32 0, i32 0)), !dbg !3283
  store i32 -1, i32* %retval, align 4, !dbg !3284
  br label %return, !dbg !3284

if.end330:                                        ; preds = %if.end324
  br label %if.end331, !dbg !3285

if.end331:                                        ; preds = %if.end330, %if.else309
  br label %if.end332

if.end332:                                        ; preds = %if.end331, %if.end308
  br label %if.end333

if.end333:                                        ; preds = %if.end332, %if.end195
  %323 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3286
  %index334 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %323, i32 0, i32 2, !dbg !3288
  %324 = load i32, i32* %index334, align 8, !dbg !3288
  %tobool335 = icmp ne i32 %324, 0, !dbg !3286
  br i1 %tobool335, label %if.end346, label %if.then336, !dbg !3289

if.then336:                                       ; preds = %if.end333
  %325 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3290
  %codecpar337 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %325, i32 0, i32 19, !dbg !3292
  %326 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar337, align 8, !dbg !3292
  %codec_id338 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %326, i32 0, i32 1, !dbg !3293
  %327 = load i32, i32* %codec_id338, align 4, !dbg !3293
  %call339 = call i32 @mxf_get_essence_container_ul_index(i32 %327), !dbg !3294
  %328 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3295
  %index340 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %328, i32 0, i32 2, !dbg !3296
  store i32 %call339, i32* %index340, align 8, !dbg !3297
  %329 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3298
  %index341 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %329, i32 0, i32 2, !dbg !3300
  %330 = load i32, i32* %index341, align 8, !dbg !3300
  %cmp342 = icmp eq i32 %330, -1, !dbg !3301
  br i1 %cmp342, label %if.then344, label %if.end345, !dbg !3302

if.then344:                                       ; preds = %if.then336
  %331 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3303
  %332 = bitcast %struct.AVFormatContext* %331 to i8*, !dbg !3303
  %333 = load i32, i32* %i, align 4, !dbg !3305
  call void (i8*, i32, i8*, ...) @av_log(i8* %332, i32 16, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.42, i32 0, i32 0), i32 %333), !dbg !3306
  store i32 -1, i32* %retval, align 4, !dbg !3307
  br label %return, !dbg !3307

if.end345:                                        ; preds = %if.then336
  br label %if.end346, !dbg !3308

if.end346:                                        ; preds = %if.end345, %if.end333
  %334 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3309
  %index347 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %334, i32 0, i32 2, !dbg !3310
  %335 = load i32, i32* %index347, align 8, !dbg !3310
  %idxprom348 = sext i32 %335 to i64, !dbg !3311
  %arrayidx349 = getelementptr inbounds [32 x %struct.MXFContainerEssenceEntry], [32 x %struct.MXFContainerEssenceEntry]* @mxf_essence_container_uls, i64 0, i64 %idxprom348, !dbg !3311
  %codec_ul = getelementptr inbounds %struct.MXFContainerEssenceEntry, %struct.MXFContainerEssenceEntry* %arrayidx349, i32 0, i32 2, !dbg !3312
  %336 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3313
  %codec_ul350 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %336, i32 0, i32 3, !dbg !3314
  store [16 x i8]* %codec_ul, [16 x i8]** %codec_ul350, align 8, !dbg !3315
  %337 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3316
  %track_essence_element_key = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %337, i32 0, i32 1, !dbg !3317
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %track_essence_element_key, i32 0, i32 0, !dbg !3318
  %338 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3319
  %index351 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %338, i32 0, i32 2, !dbg !3320
  %339 = load i32, i32* %index351, align 8, !dbg !3320
  %idxprom352 = sext i32 %339 to i64, !dbg !3321
  %arrayidx353 = getelementptr inbounds [32 x %struct.MXFContainerEssenceEntry], [32 x %struct.MXFContainerEssenceEntry]* @mxf_essence_container_uls, i64 0, i64 %idxprom352, !dbg !3321
  %element_ul = getelementptr inbounds %struct.MXFContainerEssenceEntry, %struct.MXFContainerEssenceEntry* %arrayidx353, i32 0, i32 1, !dbg !3322
  %arraydecay354 = getelementptr inbounds [16 x i8], [16 x i8]* %element_ul, i32 0, i32 0, !dbg !3318
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arraydecay354, i64 15, i32 8, i1 false), !dbg !3318
  %340 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3323
  %index355 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %340, i32 0, i32 2, !dbg !3324
  %341 = load i32, i32* %index355, align 8, !dbg !3324
  %idxprom356 = sext i32 %341 to i64, !dbg !3325
  %arrayidx357 = getelementptr inbounds [32 x i8], [32 x i8]* %present, i64 0, i64 %idxprom356, !dbg !3325
  %342 = load i8, i8* %arrayidx357, align 1, !dbg !3325
  %343 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3326
  %track_essence_element_key358 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %343, i32 0, i32 1, !dbg !3327
  %arrayidx359 = getelementptr inbounds [16 x i8], [16 x i8]* %track_essence_element_key358, i64 0, i64 15, !dbg !3326
  store i8 %342, i8* %arrayidx359, align 1, !dbg !3328
  br label %do.body, !dbg !3329, !llvm.loop !3330

do.body:                                          ; preds = %if.end346
  br label %do.end, !dbg !3331

do.end:                                           ; preds = %do.body
  %344 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3334
  %index360 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %344, i32 0, i32 2, !dbg !3336
  %345 = load i32, i32* %index360, align 8, !dbg !3336
  %idxprom361 = sext i32 %345 to i64, !dbg !3337
  %arrayidx362 = getelementptr inbounds [32 x i8], [32 x i8]* %present, i64 0, i64 %idxprom361, !dbg !3337
  %346 = load i8, i8* %arrayidx362, align 1, !dbg !3337
  %tobool363 = icmp ne i8 %346, 0, !dbg !3337
  br i1 %tobool363, label %if.end365, label %if.then364, !dbg !3338

if.then364:                                       ; preds = %do.end
  %347 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3339
  %essence_container_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %347, i32 0, i32 2, !dbg !3340
  %348 = load i32, i32* %essence_container_count, align 8, !dbg !3341
  %inc = add nsw i32 %348, 1, !dbg !3341
  store i32 %inc, i32* %essence_container_count, align 8, !dbg !3341
  br label %if.end365, !dbg !3339

if.end365:                                        ; preds = %if.then364, %do.end
  %349 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3342
  %index366 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %349, i32 0, i32 2, !dbg !3343
  %350 = load i32, i32* %index366, align 8, !dbg !3343
  %idxprom367 = sext i32 %350 to i64, !dbg !3344
  %arrayidx368 = getelementptr inbounds [32 x i8], [32 x i8]* %present, i64 0, i64 %idxprom367, !dbg !3344
  %351 = load i8, i8* %arrayidx368, align 1, !dbg !3345
  %inc369 = add i8 %351, 1, !dbg !3345
  store i8 %inc369, i8* %arrayidx368, align 1, !dbg !3345
  br label %for.inc, !dbg !3346

for.inc:                                          ; preds = %if.end365
  %352 = load i32, i32* %i, align 4, !dbg !3347
  %inc370 = add nsw i32 %352, 1, !dbg !3347
  store i32 %inc370, i32* %i, align 4, !dbg !3347
  br label %for.cond, !dbg !3349, !llvm.loop !3350

for.end:                                          ; preds = %for.cond
  %353 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3352
  %oformat371 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %353, i32 0, i32 2, !dbg !3354
  %354 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat371, align 8, !dbg !3354
  %cmp372 = icmp eq %struct.AVOutputFormat* %354, @ff_mxf_d10_muxer, !dbg !3355
  br i1 %cmp372, label %if.then378, label %lor.lhs.false374, !dbg !3356

lor.lhs.false374:                                 ; preds = %for.end
  %355 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3357
  %oformat375 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %355, i32 0, i32 2, !dbg !3359
  %356 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat375, align 8, !dbg !3359
  %cmp376 = icmp eq %struct.AVOutputFormat* %356, @ff_mxf_opatom_muxer, !dbg !3360
  br i1 %cmp376, label %if.then378, label %if.end380, !dbg !3361

if.then378:                                       ; preds = %lor.lhs.false374, %for.end
  %357 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3362
  %essence_container_count379 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %357, i32 0, i32 2, !dbg !3364
  store i32 1, i32* %essence_container_count379, align 8, !dbg !3365
  br label %if.end380, !dbg !3366

if.end380:                                        ; preds = %if.then378, %lor.lhs.false374
  %358 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3367
  %flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %358, i32 0, i32 15, !dbg !3369
  %359 = load i32, i32* %flags, align 8, !dbg !3369
  %and = and i32 %359, 1024, !dbg !3370
  %tobool381 = icmp ne i32 %and, 0, !dbg !3370
  br i1 %tobool381, label %if.end383, label %if.then382, !dbg !3371

if.then382:                                       ; preds = %if.end380
  %360 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3372
  call void @mxf_gen_umid(%struct.AVFormatContext* %360), !dbg !3373
  br label %if.end383, !dbg !3373

if.end383:                                        ; preds = %if.then382, %if.end380
  store i32 0, i32* %i, align 4, !dbg !3374
  br label %for.cond384, !dbg !3375

for.cond384:                                      ; preds = %for.inc415, %if.end383
  %361 = load i32, i32* %i, align 4, !dbg !3376
  %362 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3378
  %nb_streams385 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %362, i32 0, i32 6, !dbg !3379
  %363 = load i32, i32* %nb_streams385, align 4, !dbg !3379
  %cmp386 = icmp ult i32 %361, %363, !dbg !3380
  br i1 %cmp386, label %for.body388, label %for.end417, !dbg !3381

for.body388:                                      ; preds = %for.cond384
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc389, metadata !3382, metadata !2529), !dbg !3383
  %364 = load i32, i32* %i, align 4, !dbg !3384
  %idxprom390 = sext i32 %364 to i64, !dbg !3385
  %365 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3385
  %streams391 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %365, i32 0, i32 7, !dbg !3386
  %366 = load %struct.AVStream**, %struct.AVStream*** %streams391, align 8, !dbg !3386
  %arrayidx392 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %366, i64 %idxprom390, !dbg !3385
  %367 = load %struct.AVStream*, %struct.AVStream** %arrayidx392, align 8, !dbg !3385
  %priv_data393 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %367, i32 0, i32 3, !dbg !3387
  %368 = load i8*, i8** %priv_data393, align 8, !dbg !3387
  %369 = bitcast i8* %368 to %struct.MXFStreamContext*, !dbg !3385
  store %struct.MXFStreamContext* %369, %struct.MXFStreamContext** %sc389, align 8, !dbg !3383
  %370 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc389, align 8, !dbg !3388
  %index394 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %370, i32 0, i32 2, !dbg !3389
  %371 = load i32, i32* %index394, align 8, !dbg !3389
  %idxprom395 = sext i32 %371 to i64, !dbg !3390
  %arrayidx396 = getelementptr inbounds [32 x i8], [32 x i8]* %present, i64 0, i64 %idxprom395, !dbg !3390
  %372 = load i8, i8* %arrayidx396, align 1, !dbg !3390
  %373 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc389, align 8, !dbg !3391
  %track_essence_element_key397 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %373, i32 0, i32 1, !dbg !3392
  %arrayidx398 = getelementptr inbounds [16 x i8], [16 x i8]* %track_essence_element_key397, i64 0, i64 13, !dbg !3391
  store i8 %372, i8* %arrayidx398, align 1, !dbg !3393
  %374 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc389, align 8, !dbg !3394
  %track_essence_element_key399 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %374, i32 0, i32 1, !dbg !3395
  %arraydecay400 = getelementptr inbounds [16 x i8], [16 x i8]* %track_essence_element_key399, i32 0, i32 0, !dbg !3394
  %call401 = call i32 @memcmp(i8* %arraydecay400, i8* getelementptr inbounds ([32 x %struct.MXFContainerEssenceEntry], [32 x %struct.MXFContainerEssenceEntry]* @mxf_essence_container_uls, i64 0, i64 15, i32 1, i32 0), i64 13) #10, !dbg !3396
  %tobool402 = icmp ne i32 %call401, 0, !dbg !3396
  br i1 %tobool402, label %if.else407, label %if.then403, !dbg !3397

if.then403:                                       ; preds = %for.body388
  %375 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc389, align 8, !dbg !3398
  %track_essence_element_key404 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %375, i32 0, i32 1, !dbg !3399
  %arraydecay405 = getelementptr inbounds [16 x i8], [16 x i8]* %track_essence_element_key404, i32 0, i32 0, !dbg !3398
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay405, i64 13, !dbg !3400
  %376 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !3401
  %l = bitcast %union.unaligned_32* %376 to i32*, !dbg !3401
  %377 = load i32, i32* %l, align 1, !dbg !3401
  store i32 %377, i32* %x.addr.i461, align 4, !dbg !3402
  %378 = load i32, i32* %x.addr.i461, align 4, !dbg !3403
  %shl.i462 = shl i32 %378, 8, !dbg !3404
  %and.i463 = and i32 %shl.i462, 65280, !dbg !3405
  %379 = load i32, i32* %x.addr.i461, align 4, !dbg !3406
  %shr.i464 = lshr i32 %379, 8, !dbg !3407
  %and1.i465 = and i32 %shr.i464, 255, !dbg !3408
  %or.i466 = or i32 %and.i463, %and1.i465, !dbg !3409
  %shl2.i467 = shl i32 %or.i466, 16, !dbg !3410
  %380 = load i32, i32* %x.addr.i461, align 4, !dbg !3411
  %shr3.i468 = lshr i32 %380, 16, !dbg !3412
  %shl4.i469 = shl i32 %shr3.i468, 8, !dbg !3413
  %and5.i470 = and i32 %shl4.i469, 65280, !dbg !3414
  %381 = load i32, i32* %x.addr.i461, align 4, !dbg !3415
  %shr6.i471 = lshr i32 %381, 16, !dbg !3416
  %shr7.i472 = lshr i32 %shr6.i471, 8, !dbg !3417
  %and8.i473 = and i32 %shr7.i472, 255, !dbg !3418
  %or9.i474 = or i32 %and5.i470, %and8.i473, !dbg !3419
  %or10.i475 = or i32 %shl2.i467, %or9.i474, !dbg !3420
  %or = or i32 352321536, %or10.i475, !dbg !3421
  %382 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc389, align 8, !dbg !3422
  %order = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %382, i32 0, i32 4, !dbg !3423
  store i32 %or, i32* %order, align 8, !dbg !3424
  br label %if.end414, !dbg !3422

if.else407:                                       ; preds = %for.body388
  %383 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc389, align 8, !dbg !3425
  %track_essence_element_key408 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %383, i32 0, i32 1, !dbg !3426
  %arraydecay409 = getelementptr inbounds [16 x i8], [16 x i8]* %track_essence_element_key408, i32 0, i32 0, !dbg !3425
  %add.ptr410 = getelementptr inbounds i8, i8* %arraydecay409, i64 12, !dbg !3427
  %384 = bitcast i8* %add.ptr410 to %union.unaligned_32*, !dbg !3428
  %l411 = bitcast %union.unaligned_32* %384 to i32*, !dbg !3428
  %385 = load i32, i32* %l411, align 1, !dbg !3428
  store i32 %385, i32* %x.addr.i, align 4, !dbg !3429
  %386 = load i32, i32* %x.addr.i, align 4, !dbg !3430
  %shl.i = shl i32 %386, 8, !dbg !3431
  %and.i = and i32 %shl.i, 65280, !dbg !3432
  %387 = load i32, i32* %x.addr.i, align 4, !dbg !3433
  %shr.i = lshr i32 %387, 8, !dbg !3434
  %and1.i = and i32 %shr.i, 255, !dbg !3435
  %or.i = or i32 %and.i, %and1.i, !dbg !3436
  %shl2.i = shl i32 %or.i, 16, !dbg !3437
  %388 = load i32, i32* %x.addr.i, align 4, !dbg !3438
  %shr3.i = lshr i32 %388, 16, !dbg !3439
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3440
  %and5.i = and i32 %shl4.i, 65280, !dbg !3441
  %389 = load i32, i32* %x.addr.i, align 4, !dbg !3442
  %shr6.i = lshr i32 %389, 16, !dbg !3443
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3444
  %and8.i = and i32 %shr7.i, 255, !dbg !3445
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3446
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3447
  %390 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc389, align 8, !dbg !3448
  %order413 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %390, i32 0, i32 4, !dbg !3449
  store i32 %or10.i, i32* %order413, align 8, !dbg !3450
  br label %if.end414

if.end414:                                        ; preds = %if.else407, %if.then403
  br label %for.inc415, !dbg !3451

for.inc415:                                       ; preds = %if.end414
  %391 = load i32, i32* %i, align 4, !dbg !3452
  %inc416 = add nsw i32 %391, 1, !dbg !3452
  store i32 %inc416, i32* %i, align 4, !dbg !3452
  br label %for.cond384, !dbg !3454, !llvm.loop !3455

for.end417:                                       ; preds = %for.cond384
  %392 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3457
  %call418 = call i32 @ff_parse_creation_time_metadata(%struct.AVFormatContext* %392, i64* %timestamp, i32 0), !dbg !3459
  %cmp419 = icmp sgt i32 %call418, 0, !dbg !3460
  br i1 %cmp419, label %if.then421, label %if.end424, !dbg !3461

if.then421:                                       ; preds = %for.end417
  %393 = load i64, i64* %timestamp, align 8, !dbg !3462
  %call422 = call i64 @mxf_parse_timestamp(i64 %393), !dbg !3463
  %394 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3464
  %timestamp423 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %394, i32 0, i32 7, !dbg !3465
  store i64 %call422, i64* %timestamp423, align 8, !dbg !3466
  br label %if.end424, !dbg !3464

if.end424:                                        ; preds = %if.then421, %for.end417
  %395 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3467
  %duration = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %395, i32 0, i32 13, !dbg !3468
  store i64 -1, i64* %duration, align 8, !dbg !3469
  %call425 = call noalias i8* @av_mallocz(i64 768), !dbg !3470
  %396 = bitcast i8* %call425 to %struct.AVStream*, !dbg !3470
  %397 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3471
  %timecode_track = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %397, i32 0, i32 15, !dbg !3472
  store %struct.AVStream* %396, %struct.AVStream** %timecode_track, align 8, !dbg !3473
  %398 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3474
  %timecode_track426 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %398, i32 0, i32 15, !dbg !3476
  %399 = load %struct.AVStream*, %struct.AVStream** %timecode_track426, align 8, !dbg !3476
  %tobool427 = icmp ne %struct.AVStream* %399, null, !dbg !3474
  br i1 %tobool427, label %if.end429, label %if.then428, !dbg !3477

if.then428:                                       ; preds = %if.end424
  store i32 -12, i32* %retval, align 4, !dbg !3478
  br label %return, !dbg !3478

if.end429:                                        ; preds = %if.end424
  %call430 = call noalias i8* @av_mallocz(i64 168), !dbg !3479
  %400 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3480
  %timecode_track431 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %400, i32 0, i32 15, !dbg !3481
  %401 = load %struct.AVStream*, %struct.AVStream** %timecode_track431, align 8, !dbg !3481
  %priv_data432 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %401, i32 0, i32 3, !dbg !3482
  store i8* %call430, i8** %priv_data432, align 8, !dbg !3483
  %402 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3484
  %timecode_track433 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %402, i32 0, i32 15, !dbg !3486
  %403 = load %struct.AVStream*, %struct.AVStream** %timecode_track433, align 8, !dbg !3486
  %priv_data434 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %403, i32 0, i32 3, !dbg !3487
  %404 = load i8*, i8** %priv_data434, align 8, !dbg !3487
  %tobool435 = icmp ne i8* %404, null, !dbg !3484
  br i1 %tobool435, label %if.end437, label %if.then436, !dbg !3488

if.then436:                                       ; preds = %if.end429
  store i32 -12, i32* %retval, align 4, !dbg !3489
  br label %return, !dbg !3489

if.end437:                                        ; preds = %if.end429
  %405 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3490
  %timecode_track438 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %405, i32 0, i32 15, !dbg !3491
  %406 = load %struct.AVStream*, %struct.AVStream** %timecode_track438, align 8, !dbg !3491
  %index439 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %406, i32 0, i32 0, !dbg !3492
  store i32 -1, i32* %index439, align 8, !dbg !3493
  %407 = load %struct.MXFSamplesPerFrame*, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !3494
  %tobool440 = icmp ne %struct.MXFSamplesPerFrame* %407, null, !dbg !3494
  br i1 %tobool440, label %if.end445, label %if.then441, !dbg !3496

if.then441:                                       ; preds = %if.end437
  %408 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3497
  %num442 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !3498
  store i32 1, i32* %num442, align 4, !dbg !3498
  %den443 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !3498
  store i32 25, i32* %den443, align 4, !dbg !3498
  %409 = bitcast %struct.AVRational* %.compoundliteral to i64*, !dbg !3499
  %410 = load i64, i64* %409, align 4, !dbg !3499
  %call444 = call %struct.MXFSamplesPerFrame* @ff_mxf_get_samples_per_frame(%struct.AVFormatContext* %408, i64 %410), !dbg !3499
  store %struct.MXFSamplesPerFrame* %call444, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !3500
  br label %if.end445, !dbg !3501

if.end445:                                        ; preds = %if.then441, %if.end437
  %411 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3502
  %412 = load %struct.MXFSamplesPerFrame*, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !3504
  %samples_per_frame446 = getelementptr inbounds %struct.MXFSamplesPerFrame, %struct.MXFSamplesPerFrame* %412, i32 0, i32 1, !dbg !3505
  %arraydecay447 = getelementptr inbounds [6 x i32], [6 x i32]* %samples_per_frame446, i32 0, i32 0, !dbg !3504
  %413 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3506
  %time_base448 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %413, i32 0, i32 3, !dbg !3507
  %414 = bitcast %struct.AVRational* %time_base448 to i64*, !dbg !3508
  %415 = load i64, i64* %414, align 4, !dbg !3508
  %call449 = call i32 @ff_audio_interleave_init(%struct.AVFormatContext* %411, i32* %arraydecay447, i64 %415), !dbg !3508
  %cmp450 = icmp slt i32 %call449, 0, !dbg !3509
  br i1 %cmp450, label %if.then452, label %if.end453, !dbg !3510

if.then452:                                       ; preds = %if.end445
  store i32 -1, i32* %retval, align 4, !dbg !3511
  br label %return, !dbg !3511

if.end453:                                        ; preds = %if.end445
  store i32 0, i32* %retval, align 4, !dbg !3512
  br label %return, !dbg !3512

return:                                           ; preds = %if.end453, %if.then452, %if.then436, %if.then428, %if.then344, %if.then329, %if.else323, %if.then278, %if.then266, %if.then262, %if.then257, %if.then216, %if.then205, %if.else171, %if.then118, %if.then87, %if.then70, %if.then23, %if.then12, %if.then3, %if.then
  %416 = load i32, i32* %retval, align 4, !dbg !3513
  ret i32 %416, !dbg !3513
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_write_packet(%struct.AVFormatContext* %s, %struct.AVPacket* %pkt) #0 !dbg !3514 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %st = alloca %struct.AVStream*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  %ie = alloca %struct.MXFIndexEntry, align 8
  %err = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3517, metadata !2529), !dbg !3518
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !3519, metadata !2529), !dbg !3520
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !3521, metadata !2529), !dbg !3522
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3523
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !3524
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3524
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !3523
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !3522
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !3525, metadata !2529), !dbg !3526
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3527
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !3528
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !3528
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !3526
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !3529, metadata !2529), !dbg !3530
  %5 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3531
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i32 0, i32 5, !dbg !3532
  %6 = load i32, i32* %stream_index, align 4, !dbg !3532
  %idxprom = sext i32 %6 to i64, !dbg !3533
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3533
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 7, !dbg !3534
  %8 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !3534
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %8, i64 %idxprom, !dbg !3533
  %9 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !3533
  store %struct.AVStream* %9, %struct.AVStream** %st, align 8, !dbg !3530
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !3535, metadata !2529), !dbg !3536
  %10 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3537
  %priv_data2 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %10, i32 0, i32 3, !dbg !3538
  %11 = load i8*, i8** %priv_data2, align 8, !dbg !3538
  %12 = bitcast i8* %11 to %struct.MXFStreamContext*, !dbg !3537
  store %struct.MXFStreamContext* %12, %struct.MXFStreamContext** %sc, align 8, !dbg !3536
  call void @llvm.dbg.declare(metadata %struct.MXFIndexEntry* %ie, metadata !3539, metadata !2529), !dbg !3540
  %13 = bitcast %struct.MXFIndexEntry* %ie to i8*, !dbg !3540
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 24, i32 8, i1 false), !dbg !3540
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3541, metadata !2529), !dbg !3542
  %14 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3543
  %cbr_index = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %14, i32 0, i32 28, !dbg !3545
  %15 = load i32, i32* %cbr_index, align 8, !dbg !3545
  %tobool = icmp ne i32 %15, 0, !dbg !3543
  br i1 %tobool, label %if.end10, label %land.lhs.true, !dbg !3546

land.lhs.true:                                    ; preds = %entry
  %16 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3547
  %edit_unit_byte_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %16, i32 0, i32 17, !dbg !3549
  %17 = load i32, i32* %edit_unit_byte_count, align 4, !dbg !3549
  %tobool3 = icmp ne i32 %17, 0, !dbg !3547
  br i1 %tobool3, label %if.end10, label %land.lhs.true4, !dbg !3550

land.lhs.true4:                                   ; preds = %land.lhs.true
  %18 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3551
  %edit_units_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %18, i32 0, i32 6, !dbg !3553
  %19 = load i32, i32* %edit_units_count, align 8, !dbg !3553
  %rem = urem i32 %19, 250, !dbg !3554
  %tobool5 = icmp ne i32 %rem, 0, !dbg !3554
  br i1 %tobool5, label %if.end10, label %if.then, !dbg !3555

if.then:                                          ; preds = %land.lhs.true4
  %20 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3556
  %index_entries = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %20, i32 0, i32 5, !dbg !3559
  %21 = bitcast %struct.MXFIndexEntry** %index_entries to i8*, !dbg !3560
  %22 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3561
  %edit_units_count6 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %22, i32 0, i32 6, !dbg !3562
  %23 = load i32, i32* %edit_units_count6, align 8, !dbg !3562
  %add = add i32 %23, 250, !dbg !3563
  %conv = zext i32 %add to i64, !dbg !3561
  %call = call i32 @av_reallocp_array(i8* %21, i64 %conv, i64 24), !dbg !3564
  store i32 %call, i32* %err, align 4, !dbg !3565
  %cmp = icmp slt i32 %call, 0, !dbg !3566
  br i1 %cmp, label %if.then8, label %if.end, !dbg !3567

if.then8:                                         ; preds = %if.then
  %24 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3568
  %edit_units_count9 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %24, i32 0, i32 6, !dbg !3570
  store i32 0, i32* %edit_units_count9, align 8, !dbg !3571
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3572
  %26 = bitcast %struct.AVFormatContext* %25 to i8*, !dbg !3572
  call void (i8*, i32, i8*, ...) @av_log(i8* %26, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.47, i32 0, i32 0)), !dbg !3573
  %27 = load i32, i32* %err, align 4, !dbg !3574
  store i32 %27, i32* %retval, align 4, !dbg !3575
  br label %return, !dbg !3575

if.end:                                           ; preds = %if.then
  br label %if.end10, !dbg !3576

if.end10:                                         ; preds = %if.end, %land.lhs.true4, %land.lhs.true, %entry
  %28 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3577
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %28, i32 0, i32 19, !dbg !3579
  %29 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !3579
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %29, i32 0, i32 1, !dbg !3580
  %30 = load i32, i32* %codec_id, align 4, !dbg !3580
  %cmp11 = icmp eq i32 %30, 2, !dbg !3581
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !3582

if.then13:                                        ; preds = %if.end10
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3583
  %32 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3586
  %33 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3587
  %call14 = call i32 @mxf_parse_mpeg2_frame(%struct.AVFormatContext* %31, %struct.AVStream* %32, %struct.AVPacket* %33, %struct.MXFIndexEntry* %ie), !dbg !3588
  %tobool15 = icmp ne i32 %call14, 0, !dbg !3588
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !3589

if.then16:                                        ; preds = %if.then13
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3590
  %35 = bitcast %struct.AVFormatContext* %34 to i8*, !dbg !3590
  call void (i8*, i32, i8*, ...) @av_log(i8* %35, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.48, i32 0, i32 0)), !dbg !3592
  store i32 -1, i32* %retval, align 4, !dbg !3593
  br label %return, !dbg !3593

if.end17:                                         ; preds = %if.then13
  br label %if.end61, !dbg !3594

if.else:                                          ; preds = %if.end10
  %36 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3595
  %codecpar18 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %36, i32 0, i32 19, !dbg !3598
  %37 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar18, align 8, !dbg !3598
  %codec_id19 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %37, i32 0, i32 1, !dbg !3599
  %38 = load i32, i32* %codec_id19, align 4, !dbg !3599
  %cmp20 = icmp eq i32 %38, 99, !dbg !3600
  br i1 %cmp20, label %if.then22, label %if.else27, !dbg !3595

if.then22:                                        ; preds = %if.else
  %39 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3601
  %40 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3604
  %41 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3605
  %call23 = call i32 @mxf_parse_dnxhd_frame(%struct.AVFormatContext* %39, %struct.AVStream* %40, %struct.AVPacket* %41), !dbg !3606
  %tobool24 = icmp ne i32 %call23, 0, !dbg !3606
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !3607

if.then25:                                        ; preds = %if.then22
  %42 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3608
  %43 = bitcast %struct.AVFormatContext* %42 to i8*, !dbg !3608
  call void (i8*, i32, i8*, ...) @av_log(i8* %43, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i32 0, i32 0)), !dbg !3610
  store i32 -1, i32* %retval, align 4, !dbg !3611
  br label %return, !dbg !3611

if.end26:                                         ; preds = %if.then22
  br label %if.end60, !dbg !3612

if.else27:                                        ; preds = %if.else
  %44 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3613
  %codecpar28 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %44, i32 0, i32 19, !dbg !3616
  %45 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar28, align 8, !dbg !3616
  %codec_id29 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %45, i32 0, i32 1, !dbg !3617
  %46 = load i32, i32* %codec_id29, align 4, !dbg !3617
  %cmp30 = icmp eq i32 %46, 147, !dbg !3618
  br i1 %cmp30, label %if.then32, label %if.else37, !dbg !3613

if.then32:                                        ; preds = %if.else27
  %47 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3619
  %48 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3622
  %49 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3623
  %call33 = call i32 @mxf_parse_prores_frame(%struct.AVFormatContext* %47, %struct.AVStream* %48, %struct.AVPacket* %49), !dbg !3624
  %tobool34 = icmp ne i32 %call33, 0, !dbg !3624
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !3625

if.then35:                                        ; preds = %if.then32
  %50 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3626
  %51 = bitcast %struct.AVFormatContext* %50 to i8*, !dbg !3626
  call void (i8*, i32, i8*, ...) @av_log(i8* %51, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50, i32 0, i32 0)), !dbg !3628
  store i32 -1, i32* %retval, align 4, !dbg !3629
  br label %return, !dbg !3629

if.end36:                                         ; preds = %if.then32
  br label %if.end59, !dbg !3630

if.else37:                                        ; preds = %if.else27
  %52 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3631
  %codecpar38 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %52, i32 0, i32 19, !dbg !3634
  %53 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar38, align 8, !dbg !3634
  %codec_id39 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %53, i32 0, i32 1, !dbg !3635
  %54 = load i32, i32* %codec_id39, align 4, !dbg !3635
  %cmp40 = icmp eq i32 %54, 24, !dbg !3636
  br i1 %cmp40, label %if.then42, label %if.else47, !dbg !3631

if.then42:                                        ; preds = %if.else37
  %55 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3637
  %56 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3640
  %57 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3641
  %call43 = call i32 @mxf_parse_dv_frame(%struct.AVFormatContext* %55, %struct.AVStream* %56, %struct.AVPacket* %57), !dbg !3642
  %tobool44 = icmp ne i32 %call43, 0, !dbg !3642
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !3643

if.then45:                                        ; preds = %if.then42
  %58 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3644
  %59 = bitcast %struct.AVFormatContext* %58 to i8*, !dbg !3644
  call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.51, i32 0, i32 0)), !dbg !3646
  store i32 -1, i32* %retval, align 4, !dbg !3647
  br label %return, !dbg !3647

if.end46:                                         ; preds = %if.then42
  br label %if.end58, !dbg !3648

if.else47:                                        ; preds = %if.else37
  %60 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3649
  %codecpar48 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %60, i32 0, i32 19, !dbg !3652
  %61 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar48, align 8, !dbg !3652
  %codec_id49 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %61, i32 0, i32 1, !dbg !3653
  %62 = load i32, i32* %codec_id49, align 4, !dbg !3653
  %cmp50 = icmp eq i32 %62, 27, !dbg !3654
  br i1 %cmp50, label %if.then52, label %if.end57, !dbg !3649

if.then52:                                        ; preds = %if.else47
  %63 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3655
  %64 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3658
  %65 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3659
  %call53 = call i32 @mxf_parse_h264_frame(%struct.AVFormatContext* %63, %struct.AVStream* %64, %struct.AVPacket* %65, %struct.MXFIndexEntry* %ie), !dbg !3660
  %tobool54 = icmp ne i32 %call53, 0, !dbg !3660
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !3661

if.then55:                                        ; preds = %if.then52
  %66 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3662
  %67 = bitcast %struct.AVFormatContext* %66 to i8*, !dbg !3662
  call void (i8*, i32, i8*, ...) @av_log(i8* %67, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.52, i32 0, i32 0)), !dbg !3664
  store i32 -1, i32* %retval, align 4, !dbg !3665
  br label %return, !dbg !3665

if.end56:                                         ; preds = %if.then52
  br label %if.end57, !dbg !3666

if.end57:                                         ; preds = %if.end56, %if.else47
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end46
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end36
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end26
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.end17
  %68 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3667
  %cbr_index62 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %68, i32 0, i32 28, !dbg !3669
  %69 = load i32, i32* %cbr_index62, align 8, !dbg !3669
  %tobool63 = icmp ne i32 %69, 0, !dbg !3667
  br i1 %tobool63, label %if.then64, label %if.end78, !dbg !3670

if.then64:                                        ; preds = %if.end61
  %70 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3671
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %70, i32 0, i32 4, !dbg !3674
  %71 = load i32, i32* %size, align 8, !dbg !3674
  %72 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3675
  %frame_size = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %72, i32 0, i32 17, !dbg !3676
  %73 = load i32, i32* %frame_size, align 8, !dbg !3676
  %cmp65 = icmp ne i32 %71, %73, !dbg !3677
  br i1 %cmp65, label %land.lhs.true67, label %if.end74, !dbg !3678

land.lhs.true67:                                  ; preds = %if.then64
  %74 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3679
  %codecpar68 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %74, i32 0, i32 19, !dbg !3681
  %75 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar68, align 8, !dbg !3681
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %75, i32 0, i32 0, !dbg !3682
  %76 = load i32, i32* %codec_type, align 8, !dbg !3682
  %cmp69 = icmp eq i32 %76, 0, !dbg !3683
  br i1 %cmp69, label %if.then71, label %if.end74, !dbg !3684

if.then71:                                        ; preds = %land.lhs.true67
  %77 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3685
  %78 = bitcast %struct.AVFormatContext* %77 to i8*, !dbg !3685
  %79 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3687
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %79, i32 0, i32 0, !dbg !3688
  %80 = load i32, i32* %index, align 8, !dbg !3688
  %81 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3689
  %size72 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %81, i32 0, i32 4, !dbg !3690
  %82 = load i32, i32* %size72, align 8, !dbg !3690
  %83 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3691
  %frame_size73 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %83, i32 0, i32 17, !dbg !3692
  %84 = load i32, i32* %frame_size73, align 8, !dbg !3692
  call void (i8*, i32, i8*, ...) @av_log(i8* %78, i32 16, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.53, i32 0, i32 0), i32 %80, i32 %82, i32 %84), !dbg !3693
  store i32 -1, i32* %retval, align 4, !dbg !3694
  br label %return, !dbg !3694

if.end74:                                         ; preds = %land.lhs.true67, %if.then64
  %85 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3695
  %header_written = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %85, i32 0, i32 4, !dbg !3697
  %86 = load i32, i32* %header_written, align 4, !dbg !3697
  %tobool75 = icmp ne i32 %86, 0, !dbg !3695
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !3698

if.then76:                                        ; preds = %if.end74
  %87 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3699
  call void @mxf_compute_edit_unit_byte_count(%struct.AVFormatContext* %87), !dbg !3700
  br label %if.end77, !dbg !3700

if.end77:                                         ; preds = %if.then76, %if.end74
  br label %if.end78, !dbg !3701

if.end78:                                         ; preds = %if.end77, %if.end61
  %88 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3702
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %88, i32 0, i32 2, !dbg !3704
  %89 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !3704
  %cmp79 = icmp eq %struct.AVOutputFormat* %89, @ff_mxf_opatom_muxer, !dbg !3705
  br i1 %cmp79, label %if.then81, label %if.end83, !dbg !3706

if.then81:                                        ; preds = %if.end78
  %90 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3707
  %91 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3708
  %call82 = call i32 @mxf_write_opatom_packet(%struct.AVFormatContext* %90, %struct.AVPacket* %91, %struct.MXFIndexEntry* %ie), !dbg !3709
  store i32 %call82, i32* %retval, align 4, !dbg !3710
  br label %return, !dbg !3710

if.end83:                                         ; preds = %if.end78
  %92 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3711
  %header_written84 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %92, i32 0, i32 4, !dbg !3713
  %93 = load i32, i32* %header_written84, align 4, !dbg !3713
  %tobool85 = icmp ne i32 %93, 0, !dbg !3711
  br i1 %tobool85, label %if.end103, label %if.then86, !dbg !3714

if.then86:                                        ; preds = %if.end83
  %94 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3715
  %edit_unit_byte_count87 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %94, i32 0, i32 17, !dbg !3718
  %95 = load i32, i32* %edit_unit_byte_count87, align 4, !dbg !3718
  %tobool88 = icmp ne i32 %95, 0, !dbg !3715
  br i1 %tobool88, label %if.then89, label %if.else95, !dbg !3719

if.then89:                                        ; preds = %if.then86
  %96 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3720
  %call90 = call i32 @mxf_write_partition(%struct.AVFormatContext* %96, i32 1, i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @header_open_partition_key, i32 0, i32 0), i32 1), !dbg !3723
  store i32 %call90, i32* %err, align 4, !dbg !3724
  %cmp91 = icmp slt i32 %call90, 0, !dbg !3725
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !3726

if.then93:                                        ; preds = %if.then89
  %97 = load i32, i32* %err, align 4, !dbg !3727
  store i32 %97, i32* %retval, align 4, !dbg !3728
  br label %return, !dbg !3728

if.end94:                                         ; preds = %if.then89
  %98 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3729
  call void @mxf_write_klv_fill(%struct.AVFormatContext* %98), !dbg !3730
  %99 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3731
  call void @mxf_write_index_table_segment(%struct.AVFormatContext* %99), !dbg !3732
  br label %if.end101, !dbg !3733

if.else95:                                        ; preds = %if.then86
  %100 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3734
  %call96 = call i32 @mxf_write_partition(%struct.AVFormatContext* %100, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @header_open_partition_key, i32 0, i32 0), i32 1), !dbg !3737
  store i32 %call96, i32* %err, align 4, !dbg !3738
  %cmp97 = icmp slt i32 %call96, 0, !dbg !3739
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !3740

if.then99:                                        ; preds = %if.else95
  %101 = load i32, i32* %err, align 4, !dbg !3741
  store i32 %101, i32* %retval, align 4, !dbg !3742
  br label %return, !dbg !3742

if.end100:                                        ; preds = %if.else95
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.end94
  %102 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3743
  %header_written102 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %102, i32 0, i32 4, !dbg !3744
  store i32 1, i32* %header_written102, align 4, !dbg !3745
  br label %if.end103, !dbg !3746

if.end103:                                        ; preds = %if.end101, %if.end83
  %103 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3747
  %index104 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %103, i32 0, i32 0, !dbg !3749
  %104 = load i32, i32* %index104, align 8, !dbg !3749
  %cmp105 = icmp eq i32 %104, 0, !dbg !3750
  br i1 %cmp105, label %if.then107, label %if.else148, !dbg !3751

if.then107:                                       ; preds = %if.end103
  %105 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3752
  %edit_unit_byte_count108 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %105, i32 0, i32 17, !dbg !3755
  %106 = load i32, i32* %edit_unit_byte_count108, align 4, !dbg !3755
  %tobool109 = icmp ne i32 %106, 0, !dbg !3752
  br i1 %tobool109, label %if.end125, label %land.lhs.true110, !dbg !3756

land.lhs.true110:                                 ; preds = %if.then107
  %107 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3757
  %edit_units_count111 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %107, i32 0, i32 6, !dbg !3758
  %108 = load i32, i32* %edit_units_count111, align 8, !dbg !3758
  %tobool112 = icmp ne i32 %108, 0, !dbg !3757
  br i1 %tobool112, label %lor.lhs.false, label %land.lhs.true116, !dbg !3759

lor.lhs.false:                                    ; preds = %land.lhs.true110
  %109 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3760
  %edit_units_count113 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %109, i32 0, i32 6, !dbg !3762
  %110 = load i32, i32* %edit_units_count113, align 8, !dbg !3762
  %cmp114 = icmp ugt i32 %110, 250, !dbg !3763
  br i1 %cmp114, label %land.lhs.true116, label %if.end125, !dbg !3764

land.lhs.true116:                                 ; preds = %lor.lhs.false, %land.lhs.true110
  %flags = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %ie, i32 0, i32 0, !dbg !3765
  %111 = load i8, i8* %flags, align 8, !dbg !3765
  %conv117 = zext i8 %111 to i32, !dbg !3766
  %and = and i32 %conv117, 51, !dbg !3767
  %tobool118 = icmp ne i32 %and, 0, !dbg !3767
  br i1 %tobool118, label %if.end125, label %if.then119, !dbg !3768

if.then119:                                       ; preds = %land.lhs.true116
  %112 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3770
  call void @mxf_write_klv_fill(%struct.AVFormatContext* %112), !dbg !3772
  %113 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3773
  %call120 = call i32 @mxf_write_partition(%struct.AVFormatContext* %113, i32 1, i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @body_partition_key, i32 0, i32 0), i32 0), !dbg !3775
  store i32 %call120, i32* %err, align 4, !dbg !3776
  %cmp121 = icmp slt i32 %call120, 0, !dbg !3777
  br i1 %cmp121, label %if.then123, label %if.end124, !dbg !3778

if.then123:                                       ; preds = %if.then119
  %114 = load i32, i32* %err, align 4, !dbg !3779
  store i32 %114, i32* %retval, align 4, !dbg !3780
  br label %return, !dbg !3780

if.end124:                                        ; preds = %if.then119
  %115 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3781
  call void @mxf_write_klv_fill(%struct.AVFormatContext* %115), !dbg !3782
  %116 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3783
  call void @mxf_write_index_table_segment(%struct.AVFormatContext* %116), !dbg !3784
  br label %if.end125, !dbg !3785

if.end125:                                        ; preds = %if.end124, %land.lhs.true116, %lor.lhs.false, %if.then107
  %117 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3786
  call void @mxf_write_klv_fill(%struct.AVFormatContext* %117), !dbg !3787
  %118 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3788
  call void @mxf_write_system_item(%struct.AVFormatContext* %118), !dbg !3789
  %119 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3790
  %edit_unit_byte_count126 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %119, i32 0, i32 17, !dbg !3792
  %120 = load i32, i32* %edit_unit_byte_count126, align 4, !dbg !3792
  %tobool127 = icmp ne i32 %120, 0, !dbg !3790
  br i1 %tobool127, label %if.end146, label %if.then128, !dbg !3793

if.then128:                                       ; preds = %if.end125
  %121 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3794
  %body_offset = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %121, i32 0, i32 19, !dbg !3796
  %122 = load i64, i64* %body_offset, align 8, !dbg !3796
  %123 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3797
  %edit_units_count129 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %123, i32 0, i32 6, !dbg !3798
  %124 = load i32, i32* %edit_units_count129, align 8, !dbg !3798
  %idxprom130 = zext i32 %124 to i64, !dbg !3799
  %125 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3799
  %index_entries131 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %125, i32 0, i32 5, !dbg !3800
  %126 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries131, align 8, !dbg !3800
  %arrayidx132 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %126, i64 %idxprom130, !dbg !3799
  %offset = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx132, i32 0, i32 1, !dbg !3801
  store i64 %122, i64* %offset, align 8, !dbg !3802
  %flags133 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %ie, i32 0, i32 0, !dbg !3803
  %127 = load i8, i8* %flags133, align 8, !dbg !3803
  %128 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3804
  %edit_units_count134 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %128, i32 0, i32 6, !dbg !3805
  %129 = load i32, i32* %edit_units_count134, align 8, !dbg !3805
  %idxprom135 = zext i32 %129 to i64, !dbg !3806
  %130 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3806
  %index_entries136 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %130, i32 0, i32 5, !dbg !3807
  %131 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries136, align 8, !dbg !3807
  %arrayidx137 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %131, i64 %idxprom135, !dbg !3806
  %flags138 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx137, i32 0, i32 0, !dbg !3808
  store i8 %127, i8* %flags138, align 8, !dbg !3809
  %temporal_ref = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %ie, i32 0, i32 3, !dbg !3810
  %132 = load i16, i16* %temporal_ref, align 4, !dbg !3810
  %133 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3811
  %edit_units_count139 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %133, i32 0, i32 6, !dbg !3812
  %134 = load i32, i32* %edit_units_count139, align 8, !dbg !3812
  %idxprom140 = zext i32 %134 to i64, !dbg !3813
  %135 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3813
  %index_entries141 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %135, i32 0, i32 5, !dbg !3814
  %136 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries141, align 8, !dbg !3814
  %arrayidx142 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %136, i64 %idxprom140, !dbg !3813
  %temporal_ref143 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx142, i32 0, i32 3, !dbg !3815
  store i16 %132, i16* %temporal_ref143, align 4, !dbg !3816
  %137 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3817
  %body_offset144 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %137, i32 0, i32 19, !dbg !3818
  %138 = load i64, i64* %body_offset144, align 8, !dbg !3819
  %add145 = add i64 %138, 512, !dbg !3819
  store i64 %add145, i64* %body_offset144, align 8, !dbg !3819
  br label %if.end146, !dbg !3820

if.end146:                                        ; preds = %if.then128, %if.end125
  %139 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3821
  %edit_units_count147 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %139, i32 0, i32 6, !dbg !3822
  %140 = load i32, i32* %edit_units_count147, align 8, !dbg !3823
  %inc = add i32 %140, 1, !dbg !3823
  store i32 %inc, i32* %edit_units_count147, align 8, !dbg !3823
  br label %if.end174, !dbg !3824

if.else148:                                       ; preds = %if.end103
  %141 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3825
  %edit_unit_byte_count149 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %141, i32 0, i32 17, !dbg !3828
  %142 = load i32, i32* %edit_unit_byte_count149, align 4, !dbg !3828
  %tobool150 = icmp ne i32 %142, 0, !dbg !3825
  br i1 %tobool150, label %if.end173, label %land.lhs.true151, !dbg !3829

land.lhs.true151:                                 ; preds = %if.else148
  %143 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3830
  %index152 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %143, i32 0, i32 0, !dbg !3832
  %144 = load i32, i32* %index152, align 8, !dbg !3832
  %cmp153 = icmp eq i32 %144, 1, !dbg !3833
  br i1 %cmp153, label %if.then155, label %if.end173, !dbg !3834

if.then155:                                       ; preds = %land.lhs.true151
  %145 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3835
  %edit_units_count156 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %145, i32 0, i32 6, !dbg !3838
  %146 = load i32, i32* %edit_units_count156, align 8, !dbg !3838
  %tobool157 = icmp ne i32 %146, 0, !dbg !3835
  br i1 %tobool157, label %if.end159, label %if.then158, !dbg !3839

if.then158:                                       ; preds = %if.then155
  %147 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3840
  %148 = bitcast %struct.AVFormatContext* %147 to i8*, !dbg !3840
  call void (i8*, i32, i8*, ...) @av_log(i8* %148, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.54, i32 0, i32 0)), !dbg !3842
  store i32 -1163346256, i32* %retval, align 4, !dbg !3843
  br label %return, !dbg !3843

if.end159:                                        ; preds = %if.then155
  %149 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3844
  %body_offset160 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %149, i32 0, i32 19, !dbg !3845
  %150 = load i64, i64* %body_offset160, align 8, !dbg !3845
  %151 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3846
  %edit_units_count161 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %151, i32 0, i32 6, !dbg !3847
  %152 = load i32, i32* %edit_units_count161, align 8, !dbg !3847
  %sub = sub i32 %152, 1, !dbg !3848
  %idxprom162 = zext i32 %sub to i64, !dbg !3849
  %153 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3849
  %index_entries163 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %153, i32 0, i32 5, !dbg !3850
  %154 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries163, align 8, !dbg !3850
  %arrayidx164 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %154, i64 %idxprom162, !dbg !3849
  %offset165 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx164, i32 0, i32 1, !dbg !3851
  %155 = load i64, i64* %offset165, align 8, !dbg !3851
  %sub166 = sub i64 %150, %155, !dbg !3852
  %conv167 = trunc i64 %sub166 to i32, !dbg !3844
  %156 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3853
  %edit_units_count168 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %156, i32 0, i32 6, !dbg !3854
  %157 = load i32, i32* %edit_units_count168, align 8, !dbg !3854
  %sub169 = sub i32 %157, 1, !dbg !3855
  %idxprom170 = zext i32 %sub169 to i64, !dbg !3856
  %158 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3856
  %index_entries171 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %158, i32 0, i32 5, !dbg !3857
  %159 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries171, align 8, !dbg !3857
  %arrayidx172 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %159, i64 %idxprom170, !dbg !3856
  %slice_offset = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx172, i32 0, i32 2, !dbg !3858
  store i32 %conv167, i32* %slice_offset, align 8, !dbg !3859
  br label %if.end173, !dbg !3860

if.end173:                                        ; preds = %if.end159, %land.lhs.true151, %if.else148
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.end146
  %160 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3861
  call void @mxf_write_klv_fill(%struct.AVFormatContext* %160), !dbg !3862
  %161 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3863
  %162 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !3864
  %track_essence_element_key = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %162, i32 0, i32 1, !dbg !3865
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %track_essence_element_key, i32 0, i32 0, !dbg !3864
  call void @avio_write(%struct.AVIOContext* %161, i8* %arraydecay, i32 16), !dbg !3866
  %163 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3867
  %oformat175 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %163, i32 0, i32 2, !dbg !3869
  %164 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat175, align 8, !dbg !3869
  %cmp176 = icmp eq %struct.AVOutputFormat* %164, @ff_mxf_d10_muxer, !dbg !3870
  br i1 %cmp176, label %land.lhs.true178, label %if.else184, !dbg !3871

land.lhs.true178:                                 ; preds = %if.end174
  %165 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3872
  %codecpar179 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %165, i32 0, i32 19, !dbg !3873
  %166 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar179, align 8, !dbg !3873
  %codec_type180 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %166, i32 0, i32 0, !dbg !3874
  %167 = load i32, i32* %codec_type180, align 8, !dbg !3874
  %cmp181 = icmp eq i32 %167, 1, !dbg !3875
  br i1 %cmp181, label %if.then183, label %if.else184, !dbg !3876

if.then183:                                       ; preds = %land.lhs.true178
  %168 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3878
  %169 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3880
  %170 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3881
  call void @mxf_write_d10_audio_packet(%struct.AVFormatContext* %168, %struct.AVStream* %169, %struct.AVPacket* %170), !dbg !3882
  br label %if.end197, !dbg !3883

if.else184:                                       ; preds = %land.lhs.true178, %if.end174
  %171 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3884
  %172 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3886
  %size185 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %172, i32 0, i32 4, !dbg !3887
  %173 = load i32, i32* %size185, align 8, !dbg !3887
  call void @klv_encode_ber4_length(%struct.AVIOContext* %171, i32 %173), !dbg !3888
  %174 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3889
  %175 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3890
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %175, i32 0, i32 3, !dbg !3891
  %176 = load i8*, i8** %data, align 8, !dbg !3891
  %177 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3892
  %size186 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %177, i32 0, i32 4, !dbg !3893
  %178 = load i32, i32* %size186, align 8, !dbg !3893
  call void @avio_write(%struct.AVIOContext* %174, i8* %176, i32 %178), !dbg !3894
  %179 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3895
  %size187 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %179, i32 0, i32 4, !dbg !3896
  %180 = load i32, i32* %size187, align 8, !dbg !3896
  %add188 = add nsw i32 20, %180, !dbg !3897
  %181 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3898
  %size189 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %181, i32 0, i32 4, !dbg !3899
  %182 = load i32, i32* %size189, align 8, !dbg !3899
  %add190 = add nsw i32 20, %182, !dbg !3900
  %conv191 = sext i32 %add190 to i64, !dbg !3901
  %call192 = call i32 @klv_fill_size(i64 %conv191), !dbg !3902
  %add193 = add i32 %add188, %call192, !dbg !3903
  %conv194 = zext i32 %add193 to i64, !dbg !3904
  %183 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3905
  %body_offset195 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %183, i32 0, i32 19, !dbg !3906
  %184 = load i64, i64* %body_offset195, align 8, !dbg !3907
  %add196 = add i64 %184, %conv194, !dbg !3907
  store i64 %add196, i64* %body_offset195, align 8, !dbg !3907
  br label %if.end197

if.end197:                                        ; preds = %if.else184, %if.then183
  %185 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3908
  call void @avio_flush(%struct.AVIOContext* %185), !dbg !3909
  store i32 0, i32* %retval, align 4, !dbg !3910
  br label %return, !dbg !3910

return:                                           ; preds = %if.end197, %if.then158, %if.then123, %if.then99, %if.then93, %if.then81, %if.then71, %if.then55, %if.then45, %if.then35, %if.then25, %if.then16, %if.then8
  %186 = load i32, i32* %retval, align 4, !dbg !3911
  ret i32 %186, !dbg !3911
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_write_footer(%struct.AVFormatContext* %s) #0 !dbg !3912 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !3913, metadata !2529), !dbg !3917
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3919, metadata !2529), !dbg !3920
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !3921, metadata !2529), !dbg !3922
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3923
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !3924
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3924
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !3923
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !3922
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !3925, metadata !2529), !dbg !3926
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3927
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !3928
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !3928
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !3926
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3929, metadata !2529), !dbg !3930
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3931, metadata !2529), !dbg !3932
  store i32 0, i32* %err, align 4, !dbg !3932
  %5 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3933
  %header_written = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %5, i32 0, i32 4, !dbg !3935
  %6 = load i32, i32* %header_written, align 4, !dbg !3935
  %tobool = icmp ne i32 %6, 0, !dbg !3933
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3936

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3937
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 2, !dbg !3938
  %8 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !3938
  %cmp = icmp eq %struct.AVOutputFormat* %8, @ff_mxf_opatom_muxer, !dbg !3939
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3940

land.lhs.true:                                    ; preds = %lor.lhs.false
  %9 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3941
  %body_partition_offset = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %9, i32 0, i32 10, !dbg !3943
  %10 = load i64*, i64** %body_partition_offset, align 8, !dbg !3943
  %tobool2 = icmp ne i64* %10, null, !dbg !3941
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3944

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 -1313558101, i32* %err, align 4, !dbg !3946
  br label %end, !dbg !3948

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %11 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3949
  %last_indexed_edit_unit = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %11, i32 0, i32 9, !dbg !3950
  %12 = load i32, i32* %last_indexed_edit_unit, align 4, !dbg !3950
  %13 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3951
  %edit_units_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %13, i32 0, i32 6, !dbg !3952
  %14 = load i32, i32* %edit_units_count, align 8, !dbg !3952
  %add = add i32 %12, %14, !dbg !3953
  %conv = zext i32 %add to i64, !dbg !3949
  %15 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3954
  %duration = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %15, i32 0, i32 13, !dbg !3955
  store i64 %conv, i64* %duration, align 8, !dbg !3956
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3957
  call void @mxf_write_klv_fill(%struct.AVFormatContext* %16), !dbg !3958
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3959
  store %struct.AVIOContext* %17, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3960
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3961
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %18, i64 0, i32 1) #9, !dbg !3962
  %19 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3963
  %footer_partition_offset = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %19, i32 0, i32 1, !dbg !3964
  store i64 %call.i, i64* %footer_partition_offset, align 8, !dbg !3965
  %20 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3966
  %edit_unit_byte_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %20, i32 0, i32 17, !dbg !3968
  %21 = load i32, i32* %edit_unit_byte_count, align 4, !dbg !3968
  %tobool3 = icmp ne i32 %21, 0, !dbg !3966
  br i1 %tobool3, label %land.lhs.true4, label %if.else, !dbg !3969

land.lhs.true4:                                   ; preds = %if.end
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3970
  %oformat5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i32 0, i32 2, !dbg !3972
  %23 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat5, align 8, !dbg !3972
  %cmp6 = icmp ne %struct.AVOutputFormat* %23, @ff_mxf_opatom_muxer, !dbg !3973
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !3974

if.then8:                                         ; preds = %land.lhs.true4
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3975
  %call9 = call i32 @mxf_write_partition(%struct.AVFormatContext* %24, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @footer_partition_key, i32 0, i32 0), i32 0), !dbg !3978
  store i32 %call9, i32* %err, align 4, !dbg !3979
  %cmp10 = icmp slt i32 %call9, 0, !dbg !3980
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !3981

if.then12:                                        ; preds = %if.then8
  br label %end, !dbg !3982

if.end13:                                         ; preds = %if.then8
  br label %if.end19, !dbg !3983

if.else:                                          ; preds = %land.lhs.true4, %if.end
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3984
  %call14 = call i32 @mxf_write_partition(%struct.AVFormatContext* %25, i32 0, i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @footer_partition_key, i32 0, i32 0), i32 0), !dbg !3987
  store i32 %call14, i32* %err, align 4, !dbg !3988
  %cmp15 = icmp slt i32 %call14, 0, !dbg !3989
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !3990

if.then17:                                        ; preds = %if.else
  br label %end, !dbg !3991

if.end18:                                         ; preds = %if.else
  %26 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3992
  call void @mxf_write_klv_fill(%struct.AVFormatContext* %26), !dbg !3993
  %27 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3994
  call void @mxf_write_index_table_segment(%struct.AVFormatContext* %27), !dbg !3995
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end13
  %28 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3996
  call void @mxf_write_klv_fill(%struct.AVFormatContext* %28), !dbg !3997
  %29 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3998
  call void @mxf_write_random_index_pack(%struct.AVFormatContext* %29), !dbg !3999
  %30 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4000
  %pb20 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %30, i32 0, i32 4, !dbg !4002
  %31 = load %struct.AVIOContext*, %struct.AVIOContext** %pb20, align 8, !dbg !4002
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %31, i32 0, i32 19, !dbg !4003
  %32 = load i32, i32* %seekable, align 8, !dbg !4003
  %and = and i32 %32, 1, !dbg !4004
  %tobool21 = icmp ne i32 %and, 0, !dbg !4004
  br i1 %tobool21, label %if.then22, label %if.end62, !dbg !4005

if.then22:                                        ; preds = %if.end19
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4006
  %oformat23 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %33, i32 0, i32 2, !dbg !4009
  %34 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat23, align 8, !dbg !4009
  %cmp24 = icmp eq %struct.AVOutputFormat* %34, @ff_mxf_opatom_muxer, !dbg !4010
  br i1 %cmp24, label %if.then26, label %if.end34, !dbg !4011

if.then26:                                        ; preds = %if.then22
  %35 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4012
  %36 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4014
  %body_partition_offset27 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %36, i32 0, i32 10, !dbg !4015
  %37 = load i64*, i64** %body_partition_offset27, align 8, !dbg !4015
  %arrayidx = getelementptr inbounds i64, i64* %37, i64 0, !dbg !4014
  %38 = load i64, i64* %arrayidx, align 8, !dbg !4014
  %call28 = call i64 @avio_seek(%struct.AVIOContext* %35, i64 %38, i32 0), !dbg !4016
  %39 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4017
  %call29 = call i32 @mxf_write_opatom_body_partition(%struct.AVFormatContext* %39), !dbg !4019
  store i32 %call29, i32* %err, align 4, !dbg !4020
  %cmp30 = icmp slt i32 %call29, 0, !dbg !4021
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !4022

if.then32:                                        ; preds = %if.then26
  br label %end, !dbg !4023

if.end33:                                         ; preds = %if.then26
  br label %if.end34, !dbg !4024

if.end34:                                         ; preds = %if.end33, %if.then22
  %40 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4025
  %call35 = call i64 @avio_seek(%struct.AVIOContext* %40, i64 0, i32 0), !dbg !4026
  %41 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4027
  %edit_unit_byte_count36 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %41, i32 0, i32 17, !dbg !4029
  %42 = load i32, i32* %edit_unit_byte_count36, align 4, !dbg !4029
  %tobool37 = icmp ne i32 %42, 0, !dbg !4027
  br i1 %tobool37, label %land.lhs.true38, label %if.else48, !dbg !4030

land.lhs.true38:                                  ; preds = %if.end34
  %43 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4031
  %oformat39 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %43, i32 0, i32 2, !dbg !4033
  %44 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat39, align 8, !dbg !4033
  %cmp40 = icmp ne %struct.AVOutputFormat* %44, @ff_mxf_opatom_muxer, !dbg !4034
  br i1 %cmp40, label %if.then42, label %if.else48, !dbg !4035

if.then42:                                        ; preds = %land.lhs.true38
  %45 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4036
  %call43 = call i32 @mxf_write_partition(%struct.AVFormatContext* %45, i32 1, i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @header_closed_partition_key, i32 0, i32 0), i32 1), !dbg !4039
  store i32 %call43, i32* %err, align 4, !dbg !4040
  %cmp44 = icmp slt i32 %call43, 0, !dbg !4041
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !4042

if.then46:                                        ; preds = %if.then42
  br label %end, !dbg !4043

if.end47:                                         ; preds = %if.then42
  %46 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4044
  call void @mxf_write_klv_fill(%struct.AVFormatContext* %46), !dbg !4045
  %47 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4046
  call void @mxf_write_index_table_segment(%struct.AVFormatContext* %47), !dbg !4047
  br label %if.end54, !dbg !4048

if.else48:                                        ; preds = %land.lhs.true38, %if.end34
  %48 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4049
  %call49 = call i32 @mxf_write_partition(%struct.AVFormatContext* %48, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @header_closed_partition_key, i32 0, i32 0), i32 1), !dbg !4052
  store i32 %call49, i32* %err, align 4, !dbg !4053
  %cmp50 = icmp slt i32 %call49, 0, !dbg !4054
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !4055

if.then52:                                        ; preds = %if.else48
  br label %end, !dbg !4056

if.end53:                                         ; preds = %if.else48
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end47
  store i32 0, i32* %i, align 4, !dbg !4057
  br label %for.cond, !dbg !4059

for.cond:                                         ; preds = %for.inc, %if.end54
  %49 = load i32, i32* %i, align 4, !dbg !4060
  %50 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4063
  %body_partitions_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %50, i32 0, i32 11, !dbg !4064
  %51 = load i32, i32* %body_partitions_count, align 8, !dbg !4064
  %cmp55 = icmp ult i32 %49, %51, !dbg !4065
  br i1 %cmp55, label %for.body, label %for.end, !dbg !4066

for.body:                                         ; preds = %for.cond
  %52 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4067
  %53 = load i32, i32* %i, align 4, !dbg !4069
  %idxprom = sext i32 %53 to i64, !dbg !4070
  %54 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4070
  %body_partition_offset57 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %54, i32 0, i32 10, !dbg !4071
  %55 = load i64*, i64** %body_partition_offset57, align 8, !dbg !4071
  %arrayidx58 = getelementptr inbounds i64, i64* %55, i64 %idxprom, !dbg !4070
  %56 = load i64, i64* %arrayidx58, align 8, !dbg !4070
  %add59 = add i64 %56, 44, !dbg !4072
  %call60 = call i64 @avio_seek(%struct.AVIOContext* %52, i64 %add59, i32 0), !dbg !4073
  %57 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4074
  %58 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4075
  %footer_partition_offset61 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %58, i32 0, i32 1, !dbg !4076
  %59 = load i64, i64* %footer_partition_offset61, align 8, !dbg !4076
  call void @avio_wb64(%struct.AVIOContext* %57, i64 %59), !dbg !4077
  br label %for.inc, !dbg !4078

for.inc:                                          ; preds = %for.body
  %60 = load i32, i32* %i, align 4, !dbg !4079
  %inc = add nsw i32 %60, 1, !dbg !4079
  store i32 %inc, i32* %i, align 4, !dbg !4079
  br label %for.cond, !dbg !4081, !llvm.loop !4082

for.end:                                          ; preds = %for.cond
  br label %if.end62, !dbg !4084

if.end62:                                         ; preds = %for.end, %if.end19
  br label %end, !dbg !4085

end:                                              ; preds = %if.end62, %if.then52, %if.then46, %if.then32, %if.then17, %if.then12, %if.then
  %61 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4087
  call void @ff_audio_interleave_close(%struct.AVFormatContext* %61), !dbg !4088
  %62 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4089
  %index_entries = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %62, i32 0, i32 5, !dbg !4090
  %63 = bitcast %struct.MXFIndexEntry** %index_entries to i8*, !dbg !4091
  call void @av_freep(i8* %63), !dbg !4092
  %64 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4093
  %body_partition_offset63 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %64, i32 0, i32 10, !dbg !4094
  %65 = bitcast i64** %body_partition_offset63 to i8*, !dbg !4095
  call void @av_freep(i8* %65), !dbg !4096
  %66 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4097
  %timecode_track = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %66, i32 0, i32 15, !dbg !4098
  %67 = load %struct.AVStream*, %struct.AVStream** %timecode_track, align 8, !dbg !4098
  %priv_data64 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %67, i32 0, i32 3, !dbg !4099
  %68 = bitcast i8** %priv_data64 to i8*, !dbg !4100
  call void @av_freep(i8* %68), !dbg !4101
  %69 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4102
  %timecode_track65 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %69, i32 0, i32 15, !dbg !4103
  %70 = bitcast %struct.AVStream** %timecode_track65 to i8*, !dbg !4104
  call void @av_freep(i8* %70), !dbg !4105
  %71 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4106
  call void @mxf_free(%struct.AVFormatContext* %71), !dbg !4107
  %72 = load i32, i32* %err, align 4, !dbg !4108
  %cmp66 = icmp slt i32 %72, 0, !dbg !4109
  br i1 %cmp66, label %cond.true, label %cond.false, !dbg !4108

cond.true:                                        ; preds = %end
  %73 = load i32, i32* %err, align 4, !dbg !4110
  br label %cond.end, !dbg !4111

cond.false:                                       ; preds = %end
  br label %cond.end, !dbg !4112

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %73, %cond.true ], [ 0, %cond.false ], !dbg !4114
  ret i32 %cond, !dbg !4116
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_interleave(%struct.AVFormatContext* %s, %struct.AVPacket* %out, %struct.AVPacket* %pkt, i32 %flush) #0 !dbg !4117 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %out.addr = alloca %struct.AVPacket*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %flush.addr = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4120, metadata !2529), !dbg !4121
  store %struct.AVPacket* %out, %struct.AVPacket** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %out.addr, metadata !4122, metadata !2529), !dbg !4123
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !4124, metadata !2529), !dbg !4125
  store i32 %flush, i32* %flush.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flush.addr, metadata !4126, metadata !2529), !dbg !4127
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4128
  %1 = load %struct.AVPacket*, %struct.AVPacket** %out.addr, align 8, !dbg !4129
  %2 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !4130
  %3 = load i32, i32* %flush.addr, align 4, !dbg !4131
  %call = call i32 @ff_audio_rechunk_interleave(%struct.AVFormatContext* %0, %struct.AVPacket* %1, %struct.AVPacket* %2, i32 %3, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)* @mxf_interleave_get_packet, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*)* @mxf_compare_timestamps), !dbg !4132
  ret i32 %call, !dbg !4133
}

declare i8* @av_default_item_name(i8*) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #3

declare void @av_log(i8*, i32, i8*, ...) #1

declare %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary*, i8*, %struct.AVDictionaryEntry*, i32) #1

declare noalias i8* @av_mallocz(i64) #1

declare %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind readnone
declare i64 @av_mul_q(i64, i64) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @av_make_q(i32 %num, i32 %den) #5 !dbg !4134 {
entry:
  %retval = alloca %struct.AVRational, align 4
  %num.addr = alloca i32, align 4
  %den.addr = alloca i32, align 4
  %r = alloca %struct.AVRational, align 4
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !4137, metadata !2529), !dbg !4138
  store i32 %den, i32* %den.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %den.addr, metadata !4139, metadata !2529), !dbg !4140
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r, metadata !4141, metadata !2529), !dbg !4142
  %num1 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r, i32 0, i32 0, !dbg !4143
  %0 = load i32, i32* %num.addr, align 4, !dbg !4144
  store i32 %0, i32* %num1, align 4, !dbg !4143
  %den2 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r, i32 0, i32 1, !dbg !4143
  %1 = load i32, i32* %den.addr, align 4, !dbg !4145
  store i32 %1, i32* %den2, align 4, !dbg !4143
  %2 = bitcast %struct.AVRational* %retval to i8*, !dbg !4146
  %3 = bitcast %struct.AVRational* %r to i8*, !dbg !4146
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 8, i32 4, i1 false), !dbg !4146
  %4 = bitcast %struct.AVRational* %retval to i64*, !dbg !4147
  %5 = load i64, i64* %4, align 4, !dbg !4147
  ret i64 %5, !dbg !4147
}

declare i32 @ff_choose_chroma_location(%struct.AVFormatContext*, %struct.AVStream*) #1

declare %struct.MXFSamplesPerFrame* @ff_mxf_get_samples_per_frame(%struct.AVFormatContext*, i64) #1

declare i32 @ff_mxf_get_content_package_rate(i64) #1

declare void @avpriv_set_pts_info(%struct.AVStream*, i32, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_init_timecode(%struct.AVFormatContext* %s, %struct.AVStream* %st, i64 %rate.coerce) #0 !dbg !4148 {
entry:
  %retval = alloca i32, align 4
  %rate = alloca %struct.AVRational, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %tcr = alloca %struct.AVDictionaryEntry*, align 8
  %0 = bitcast %struct.AVRational* %rate to i64*
  store i64 %rate.coerce, i64* %0, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4151, metadata !2529), !dbg !4152
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !4153, metadata !2529), !dbg !4154
  call void @llvm.dbg.declare(metadata %struct.AVRational* %rate, metadata !4155, metadata !2529), !dbg !4156
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !4157, metadata !2529), !dbg !4158
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4159
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 3, !dbg !4160
  %2 = load i8*, i8** %priv_data, align 8, !dbg !4160
  %3 = bitcast i8* %2 to %struct.MXFContext*, !dbg !4159
  store %struct.MXFContext* %3, %struct.MXFContext** %mxf, align 8, !dbg !4158
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %tcr, metadata !4161, metadata !2529), !dbg !4162
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4163
  %metadata = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 29, !dbg !4164
  %5 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !4164
  %call = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !4165
  store %struct.AVDictionaryEntry* %call, %struct.AVDictionaryEntry** %tcr, align 8, !dbg !4162
  %6 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tcr, align 8, !dbg !4166
  %tobool = icmp ne %struct.AVDictionaryEntry* %6, null, !dbg !4166
  br i1 %tobool, label %if.end, label %if.then, !dbg !4168

if.then:                                          ; preds = %entry
  %7 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4169
  %metadata1 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %7, i32 0, i32 11, !dbg !4170
  %8 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata1, align 8, !dbg !4170
  %call2 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !4171
  store %struct.AVDictionaryEntry* %call2, %struct.AVDictionaryEntry** %tcr, align 8, !dbg !4172
  br label %if.end, !dbg !4173

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tcr, align 8, !dbg !4174
  %tobool3 = icmp ne %struct.AVDictionaryEntry* %9, null, !dbg !4174
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !4176

if.then4:                                         ; preds = %if.end
  %10 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4177
  %tc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %10, i32 0, i32 14, !dbg !4178
  %11 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %tcr, align 8, !dbg !4179
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %11, i32 0, i32 1, !dbg !4180
  %12 = load i8*, i8** %value, align 8, !dbg !4180
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4181
  %14 = bitcast %struct.AVFormatContext* %13 to i8*, !dbg !4181
  %15 = bitcast %struct.AVRational* %rate to i64*, !dbg !4182
  %16 = load i64, i64* %15, align 4, !dbg !4182
  %call5 = call i32 @av_timecode_init_from_string(%struct.AVTimecode* %tc, i64 %16, i8* %12, i8* %14), !dbg !4182
  store i32 %call5, i32* %retval, align 4, !dbg !4183
  br label %return, !dbg !4183

if.else:                                          ; preds = %if.end
  %17 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4184
  %tc6 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %17, i32 0, i32 14, !dbg !4185
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4186
  %19 = bitcast %struct.AVFormatContext* %18 to i8*, !dbg !4186
  %20 = bitcast %struct.AVRational* %rate to i64*, !dbg !4187
  %21 = load i64, i64* %20, align 4, !dbg !4187
  %call7 = call i32 @av_timecode_init(%struct.AVTimecode* %tc6, i64 %21, i32 0, i32 0, i8* %19), !dbg !4187
  store i32 %call7, i32* %retval, align 4, !dbg !4188
  br label %return, !dbg !4188

return:                                           ; preds = %if.else, %if.then4
  %22 = load i32, i32* %retval, align 4, !dbg !4189
  ret i32 %22, !dbg !4189
}

declare i32 @av_get_bits_per_sample(i32) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #6

; Function Attrs: nounwind uwtable
define internal i32 @mxf_get_essence_container_ul_index(i32 %id) #0 !dbg !4190 {
entry:
  %retval = alloca i32, align 4
  %id.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4193, metadata !2529), !dbg !4194
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4195, metadata !2529), !dbg !4196
  store i32 0, i32* %i, align 4, !dbg !4197
  br label %for.cond, !dbg !4199

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4200
  %idxprom = sext i32 %0 to i64, !dbg !4203
  %arrayidx = getelementptr inbounds [9 x %struct.anon.1], [9 x %struct.anon.1]* @mxf_essence_mappings, i64 0, i64 %idxprom, !dbg !4203
  %id1 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 0, !dbg !4204
  %1 = load i32, i32* %id1, align 8, !dbg !4204
  %tobool = icmp ne i32 %1, 0, !dbg !4205
  br i1 %tobool, label %for.body, label %for.end, !dbg !4205

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !4206
  %idxprom2 = sext i32 %2 to i64, !dbg !4208
  %arrayidx3 = getelementptr inbounds [9 x %struct.anon.1], [9 x %struct.anon.1]* @mxf_essence_mappings, i64 0, i64 %idxprom2, !dbg !4208
  %id4 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx3, i32 0, i32 0, !dbg !4209
  %3 = load i32, i32* %id4, align 8, !dbg !4209
  %4 = load i32, i32* %id.addr, align 4, !dbg !4210
  %cmp = icmp eq i32 %3, %4, !dbg !4211
  br i1 %cmp, label %if.then, label %if.end, !dbg !4212

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !4213
  %idxprom5 = sext i32 %5 to i64, !dbg !4214
  %arrayidx6 = getelementptr inbounds [9 x %struct.anon.1], [9 x %struct.anon.1]* @mxf_essence_mappings, i64 0, i64 %idxprom5, !dbg !4214
  %index = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx6, i32 0, i32 1, !dbg !4215
  %6 = load i32, i32* %index, align 4, !dbg !4215
  store i32 %6, i32* %retval, align 4, !dbg !4216
  br label %return, !dbg !4216

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4217

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !4219
  %inc = add nsw i32 %7, 1, !dbg !4219
  store i32 %inc, i32* %i, align 4, !dbg !4219
  br label %for.cond, !dbg !4221, !llvm.loop !4222

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !4224
  br label %return, !dbg !4224

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4225
  ret i32 %8, !dbg !4225
}

; Function Attrs: nounwind uwtable
define internal void @mxf_gen_umid(%struct.AVFormatContext* %s) #0 !dbg !4226 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %seed = alloca i32, align 4
  %umid = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4229, metadata !2529), !dbg !4230
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !4231, metadata !2529), !dbg !4232
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4233
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !4234
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4234
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !4233
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !4232
  call void @llvm.dbg.declare(metadata i32* %seed, metadata !4235, metadata !2529), !dbg !4236
  %call = call i32 @av_get_random_seed(), !dbg !4237
  store i32 %call, i32* %seed, align 4, !dbg !4236
  call void @llvm.dbg.declare(metadata i64* %umid, metadata !4238, metadata !2529), !dbg !4239
  %3 = load i32, i32* %seed, align 4, !dbg !4240
  %conv = zext i32 %3 to i64, !dbg !4240
  %add = add nsw i64 %conv, 5950505475815505920, !dbg !4241
  store i64 %add, i64* %umid, align 8, !dbg !4239
  %4 = load i64, i64* %umid, align 8, !dbg !4242
  %call1 = call i64 @av_bswap64(i64 %4) #2, !dbg !4243
  %5 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4244
  %umid2 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %5, i32 0, i32 21, !dbg !4245
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %umid2, i32 0, i32 0, !dbg !4246
  %6 = bitcast i8* %arraydecay to %union.unaligned_64*, !dbg !4246
  %l = bitcast %union.unaligned_64* %6 to i64*, !dbg !4246
  store i64 %call1, i64* %l, align 4, !dbg !4247
  %7 = load i64, i64* %umid, align 8, !dbg !4248
  %shr = lshr i64 %7, 8, !dbg !4249
  %call3 = call i64 @av_bswap64(i64 %shr) #2, !dbg !4250
  %8 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4251
  %umid4 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %8, i32 0, i32 21, !dbg !4252
  %arraydecay5 = getelementptr inbounds [16 x i8], [16 x i8]* %umid4, i32 0, i32 0, !dbg !4251
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay5, i64 8, !dbg !4253
  %9 = bitcast i8* %add.ptr to %union.unaligned_64*, !dbg !4254
  %l6 = bitcast %union.unaligned_64* %9 to i64*, !dbg !4254
  store i64 %call3, i64* %l6, align 1, !dbg !4255
  %10 = load i32, i32* %seed, align 4, !dbg !4256
  %and = and i32 %10, 16777215, !dbg !4257
  %11 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4258
  %instance_number = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %11, i32 0, i32 20, !dbg !4259
  store i32 %and, i32* %instance_number, align 8, !dbg !4260
  ret void, !dbg !4261
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #6

declare i32 @ff_parse_creation_time_metadata(%struct.AVFormatContext*, i64*, i32) #1

; Function Attrs: nounwind uwtable
define internal i64 @mxf_parse_timestamp(i64 %timestamp64) #0 !dbg !4262 {
entry:
  %retval = alloca i64, align 8
  %timestamp64.addr = alloca i64, align 8
  %timestamp = alloca i64, align 8
  %tmbuf = alloca %struct.tm, align 8
  %time = alloca %struct.tm*, align 8
  store i64 %timestamp64, i64* %timestamp64.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timestamp64.addr, metadata !4265, metadata !2529), !dbg !4266
  call void @llvm.dbg.declare(metadata i64* %timestamp, metadata !4267, metadata !2529), !dbg !4272
  %0 = load i64, i64* %timestamp64.addr, align 8, !dbg !4273
  %div = sdiv i64 %0, 1000000, !dbg !4274
  store i64 %div, i64* %timestamp, align 8, !dbg !4272
  call void @llvm.dbg.declare(metadata %struct.tm* %tmbuf, metadata !4275, metadata !2529), !dbg !4289
  call void @llvm.dbg.declare(metadata %struct.tm** %time, metadata !4290, metadata !2529), !dbg !4292
  %call = call %struct.tm* @gmtime_r(i64* %timestamp, %struct.tm* %tmbuf) #9, !dbg !4293
  store %struct.tm* %call, %struct.tm** %time, align 8, !dbg !4292
  %1 = load %struct.tm*, %struct.tm** %time, align 8, !dbg !4294
  %tobool = icmp ne %struct.tm* %1, null, !dbg !4294
  br i1 %tobool, label %if.end, label %if.then, !dbg !4296

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !4297
  br label %return, !dbg !4297

if.end:                                           ; preds = %entry
  %2 = load %struct.tm*, %struct.tm** %time, align 8, !dbg !4298
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %2, i32 0, i32 5, !dbg !4299
  %3 = load i32, i32* %tm_year, align 4, !dbg !4299
  %add = add nsw i32 %3, 1900, !dbg !4300
  %conv = sext i32 %add to i64, !dbg !4301
  %shl = shl i64 %conv, 48, !dbg !4302
  %4 = load %struct.tm*, %struct.tm** %time, align 8, !dbg !4303
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %4, i32 0, i32 4, !dbg !4304
  %5 = load i32, i32* %tm_mon, align 8, !dbg !4304
  %add1 = add nsw i32 %5, 1, !dbg !4305
  %conv2 = sext i32 %add1 to i64, !dbg !4306
  %shl3 = shl i64 %conv2, 40, !dbg !4307
  %or = or i64 %shl, %shl3, !dbg !4308
  %6 = load %struct.tm*, %struct.tm** %time, align 8, !dbg !4309
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %6, i32 0, i32 3, !dbg !4310
  %7 = load i32, i32* %tm_mday, align 4, !dbg !4310
  %conv4 = sext i32 %7 to i64, !dbg !4311
  %shl5 = shl i64 %conv4, 32, !dbg !4312
  %or6 = or i64 %or, %shl5, !dbg !4313
  %8 = load %struct.tm*, %struct.tm** %time, align 8, !dbg !4314
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 2, !dbg !4315
  %9 = load i32, i32* %tm_hour, align 8, !dbg !4315
  %shl7 = shl i32 %9, 24, !dbg !4316
  %conv8 = sext i32 %shl7 to i64, !dbg !4314
  %or9 = or i64 %or6, %conv8, !dbg !4317
  %10 = load %struct.tm*, %struct.tm** %time, align 8, !dbg !4318
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %10, i32 0, i32 1, !dbg !4319
  %11 = load i32, i32* %tm_min, align 4, !dbg !4319
  %shl10 = shl i32 %11, 16, !dbg !4320
  %conv11 = sext i32 %shl10 to i64, !dbg !4318
  %or12 = or i64 %or9, %conv11, !dbg !4321
  %12 = load %struct.tm*, %struct.tm** %time, align 8, !dbg !4322
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %12, i32 0, i32 0, !dbg !4323
  %13 = load i32, i32* %tm_sec, align 8, !dbg !4323
  %shl13 = shl i32 %13, 8, !dbg !4324
  %conv14 = sext i32 %shl13 to i64, !dbg !4322
  %or15 = or i64 %or12, %conv14, !dbg !4325
  %14 = load i64, i64* %timestamp64.addr, align 8, !dbg !4326
  %rem = srem i64 %14, 1000000, !dbg !4327
  %div16 = sdiv i64 %rem, 4000, !dbg !4328
  %or17 = or i64 %or15, %div16, !dbg !4329
  store i64 %or17, i64* %retval, align 8, !dbg !4330
  br label %return, !dbg !4330

return:                                           ; preds = %if.end, %if.then
  %15 = load i64, i64* %retval, align 8, !dbg !4331
  ret i64 %15, !dbg !4331
}

declare i32 @ff_audio_interleave_init(%struct.AVFormatContext*, i32*, i64) #1

declare i32 @av_timecode_init_from_string(%struct.AVTimecode*, i64, i8*, i8*) #1

declare i32 @av_timecode_init(%struct.AVTimecode*, i64, i32, i32, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @mxf_write_mpegvideo_desc(%struct.AVFormatContext* %s, %struct.AVStream* %st) #0 !dbg !4332 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  %profile_and_level = alloca i32, align 4
  %pos = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4333, metadata !2529), !dbg !4334
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !4335, metadata !2529), !dbg !4336
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !4337, metadata !2529), !dbg !4338
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4339
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 4, !dbg !4340
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !4340
  store %struct.AVIOContext* %1, %struct.AVIOContext** %pb, align 8, !dbg !4338
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !4341, metadata !2529), !dbg !4342
  %2 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4343
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %2, i32 0, i32 3, !dbg !4344
  %3 = load i8*, i8** %priv_data, align 8, !dbg !4344
  %4 = bitcast i8* %3 to %struct.MXFStreamContext*, !dbg !4343
  store %struct.MXFStreamContext* %4, %struct.MXFStreamContext** %sc, align 8, !dbg !4342
  call void @llvm.dbg.declare(metadata i32* %profile_and_level, metadata !4345, metadata !2529), !dbg !4346
  %5 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4347
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %5, i32 0, i32 19, !dbg !4348
  %6 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !4348
  %profile = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %6, i32 0, i32 9, !dbg !4349
  %7 = load i32, i32* %profile, align 8, !dbg !4349
  %shl = shl i32 %7, 4, !dbg !4350
  %8 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4351
  %codecpar2 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %8, i32 0, i32 19, !dbg !4352
  %9 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar2, align 8, !dbg !4352
  %level = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %9, i32 0, i32 10, !dbg !4353
  %10 = load i32, i32* %level, align 4, !dbg !4353
  %or = or i32 %shl, %10, !dbg !4354
  store i32 %or, i32* %profile_and_level, align 4, !dbg !4346
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !4355, metadata !2529), !dbg !4356
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4357
  %12 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4358
  %call = call i64 @mxf_write_cdci_common(%struct.AVFormatContext* %11, %struct.AVStream* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_mpegvideo_descriptor_key, i32 0, i32 0)), !dbg !4359
  store i64 %call, i64* %pos, align 8, !dbg !4356
  %13 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4360
  %codecpar3 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %13, i32 0, i32 19, !dbg !4362
  %14 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar3, align 8, !dbg !4362
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %14, i32 0, i32 1, !dbg !4363
  %15 = load i32, i32* %codec_id, align 4, !dbg !4363
  %cmp = icmp ne i32 %15, 27, !dbg !4364
  br i1 %cmp, label %if.then, label %if.end8, !dbg !4365

if.then:                                          ; preds = %entry
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4366
  call void @mxf_write_local_tag(%struct.AVIOContext* %16, i32 4, i32 32768), !dbg !4368
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4369
  %18 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4370
  %video_bit_rate = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %18, i32 0, i32 15, !dbg !4371
  %19 = load i32, i32* %video_bit_rate, align 8, !dbg !4371
  call void @avio_wb32(%struct.AVIOContext* %17, i32 %19), !dbg !4372
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4373
  call void @mxf_write_local_tag(%struct.AVIOContext* %20, i32 1, i32 32775), !dbg !4374
  %21 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4375
  %codecpar4 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i32 0, i32 19, !dbg !4377
  %22 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar4, align 8, !dbg !4377
  %profile5 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %22, i32 0, i32 9, !dbg !4378
  %23 = load i32, i32* %profile5, align 8, !dbg !4378
  %tobool = icmp ne i32 %23, 0, !dbg !4375
  br i1 %tobool, label %if.end, label %if.then6, !dbg !4379

if.then6:                                         ; preds = %if.then
  %24 = load i32, i32* %profile_and_level, align 4, !dbg !4380
  %or7 = or i32 %24, 128, !dbg !4380
  store i32 %or7, i32* %profile_and_level, align 4, !dbg !4380
  br label %if.end, !dbg !4381

if.end:                                           ; preds = %if.then6, %if.then
  %25 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4382
  %26 = load i32, i32* %profile_and_level, align 4, !dbg !4383
  call void @avio_w8(%struct.AVIOContext* %25, i32 %26), !dbg !4384
  %27 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4385
  call void @mxf_write_local_tag(%struct.AVIOContext* %27, i32 1, i32 32771), !dbg !4386
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4387
  %29 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4388
  %low_delay = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %29, i32 0, i32 21, !dbg !4389
  %30 = load i32, i32* %low_delay, align 8, !dbg !4389
  call void @avio_w8(%struct.AVIOContext* %28, i32 %30), !dbg !4390
  %31 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4391
  call void @mxf_write_local_tag(%struct.AVIOContext* %31, i32 1, i32 32772), !dbg !4392
  %32 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4393
  %33 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4394
  %seq_closed_gop = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %33, i32 0, i32 18, !dbg !4395
  %34 = load i32, i32* %seq_closed_gop, align 4, !dbg !4395
  call void @avio_w8(%struct.AVIOContext* %32, i32 %34), !dbg !4396
  %35 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4397
  call void @mxf_write_local_tag(%struct.AVIOContext* %35, i32 2, i32 32774), !dbg !4398
  %36 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4399
  %37 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4400
  %max_gop = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %37, i32 0, i32 19, !dbg !4401
  %38 = load i32, i32* %max_gop, align 8, !dbg !4401
  call void @avio_wb16(%struct.AVIOContext* %36, i32 %38), !dbg !4402
  %39 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4403
  call void @mxf_write_local_tag(%struct.AVIOContext* %39, i32 2, i32 32776), !dbg !4404
  %40 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4405
  %41 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4406
  %b_picture_count = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %41, i32 0, i32 20, !dbg !4407
  %42 = load i32, i32* %b_picture_count, align 4, !dbg !4407
  call void @avio_wb16(%struct.AVIOContext* %40, i32 %42), !dbg !4408
  br label %if.end8, !dbg !4409

if.end8:                                          ; preds = %if.end, %entry
  %43 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4410
  %44 = load i64, i64* %pos, align 8, !dbg !4411
  call void @mxf_update_klv_size(%struct.AVIOContext* %43, i64 %44), !dbg !4412
  ret void, !dbg !4413
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_aes3_desc(%struct.AVFormatContext* %s, %struct.AVStream* %st) #0 !dbg !4414 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pos = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4415, metadata !2529), !dbg !4416
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !4417, metadata !2529), !dbg !4418
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !4419, metadata !2529), !dbg !4420
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4421
  %1 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4422
  %call = call i64 @mxf_write_wav_common(%struct.AVFormatContext* %0, %struct.AVStream* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_aes3_descriptor_key, i32 0, i32 0)), !dbg !4423
  store i64 %call, i64* %pos, align 8, !dbg !4420
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4424
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 4, !dbg !4425
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4425
  %4 = load i64, i64* %pos, align 8, !dbg !4426
  call void @mxf_update_klv_size(%struct.AVIOContext* %3, i64 %4), !dbg !4427
  ret void, !dbg !4428
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_wav_desc(%struct.AVFormatContext* %s, %struct.AVStream* %st) #0 !dbg !4429 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pos = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4430, metadata !2529), !dbg !4431
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !4432, metadata !2529), !dbg !4433
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !4434, metadata !2529), !dbg !4435
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4436
  %1 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4437
  %call = call i64 @mxf_write_wav_common(%struct.AVFormatContext* %0, %struct.AVStream* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_wav_descriptor_key, i32 0, i32 0)), !dbg !4438
  store i64 %call, i64* %pos, align 8, !dbg !4435
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4439
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 4, !dbg !4440
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4440
  %4 = load i64, i64* %pos, align 8, !dbg !4441
  call void @mxf_update_klv_size(%struct.AVIOContext* %3, i64 %4), !dbg !4442
  ret void, !dbg !4443
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_cdci_desc(%struct.AVFormatContext* %s, %struct.AVStream* %st) #0 !dbg !4444 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pos = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4445, metadata !2529), !dbg !4446
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !4447, metadata !2529), !dbg !4448
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !4449, metadata !2529), !dbg !4450
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4451
  %1 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4452
  %call = call i64 @mxf_write_cdci_common(%struct.AVFormatContext* %0, %struct.AVStream* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_cdci_descriptor_key, i32 0, i32 0)), !dbg !4453
  store i64 %call, i64* %pos, align 8, !dbg !4450
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4454
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 4, !dbg !4455
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4455
  %4 = load i64, i64* %pos, align 8, !dbg !4456
  call void @mxf_update_klv_size(%struct.AVIOContext* %3, i64 %4), !dbg !4457
  ret void, !dbg !4458
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_generic_sound_desc(%struct.AVFormatContext* %s, %struct.AVStream* %st) #0 !dbg !4459 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pos = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4460, metadata !2529), !dbg !4461
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !4462, metadata !2529), !dbg !4463
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !4464, metadata !2529), !dbg !4465
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4466
  %1 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4467
  %call = call i64 @mxf_write_generic_sound_common(%struct.AVFormatContext* %0, %struct.AVStream* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_generic_sound_descriptor_key, i32 0, i32 0)), !dbg !4468
  store i64 %call, i64* %pos, align 8, !dbg !4465
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4469
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 4, !dbg !4470
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4470
  %4 = load i64, i64* %pos, align 8, !dbg !4471
  call void @mxf_update_klv_size(%struct.AVIOContext* %3, i64 %4), !dbg !4472
  ret void, !dbg !4473
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_s436m_anc_desc(%struct.AVFormatContext* %s, %struct.AVStream* %st) #0 !dbg !4474 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pos = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4475, metadata !2529), !dbg !4476
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !4477, metadata !2529), !dbg !4478
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !4479, metadata !2529), !dbg !4480
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4481
  %1 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4482
  %call = call i64 @mxf_write_generic_desc(%struct.AVFormatContext* %0, %struct.AVStream* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_s436m_anc_descriptor_key, i32 0, i32 0)), !dbg !4483
  store i64 %call, i64* %pos, align 8, !dbg !4480
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4484
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 4, !dbg !4485
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4485
  %4 = load i64, i64* %pos, align 8, !dbg !4486
  call void @mxf_update_klv_size(%struct.AVIOContext* %3, i64 %4), !dbg !4487
  ret void, !dbg !4488
}

; Function Attrs: nounwind uwtable
define internal i64 @mxf_write_cdci_common(%struct.AVFormatContext* %s, %struct.AVStream* %st, i8* %key) #0 !dbg !4489 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %key.addr = alloca i8*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %stored_width = alloca i32, align 4
  %stored_height = alloca i32, align 4
  %display_height = alloca i32, align 4
  %f1 = alloca i32, align 4
  %f2 = alloca i32, align 4
  %transfer_ul = alloca [16 x i8], align 16
  %pos = alloca i64, align 8
  %black = alloca i32, align 4
  %white = alloca i32, align 4
  %color = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4492, metadata !2529), !dbg !4493
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !4494, metadata !2529), !dbg !4495
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !4496, metadata !2529), !dbg !4497
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !4498, metadata !2529), !dbg !4499
  %0 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4500
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %0, i32 0, i32 3, !dbg !4501
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4501
  %2 = bitcast i8* %1 to %struct.MXFStreamContext*, !dbg !4500
  store %struct.MXFStreamContext* %2, %struct.MXFStreamContext** %sc, align 8, !dbg !4499
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !4502, metadata !2529), !dbg !4503
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4504
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !4505
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !4505
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !4503
  call void @llvm.dbg.declare(metadata i32* %stored_width, metadata !4506, metadata !2529), !dbg !4507
  %5 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4508
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %5, i32 0, i32 19, !dbg !4509
  %6 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !4509
  %width = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %6, i32 0, i32 11, !dbg !4510
  %7 = load i32, i32* %width, align 8, !dbg !4510
  %add = add nsw i32 %7, 15, !dbg !4511
  %div = sdiv i32 %add, 16, !dbg !4512
  %mul = mul nsw i32 %div, 16, !dbg !4513
  store i32 %mul, i32* %stored_width, align 4, !dbg !4507
  call void @llvm.dbg.declare(metadata i32* %stored_height, metadata !4514, metadata !2529), !dbg !4515
  %8 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4516
  %codecpar2 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %8, i32 0, i32 19, !dbg !4517
  %9 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar2, align 8, !dbg !4517
  %height = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %9, i32 0, i32 12, !dbg !4518
  %10 = load i32, i32* %height, align 4, !dbg !4518
  %add3 = add nsw i32 %10, 15, !dbg !4519
  %div4 = sdiv i32 %add3, 16, !dbg !4520
  %mul5 = mul nsw i32 %div4, 16, !dbg !4521
  store i32 %mul5, i32* %stored_height, align 4, !dbg !4515
  call void @llvm.dbg.declare(metadata i32* %display_height, metadata !4522, metadata !2529), !dbg !4523
  call void @llvm.dbg.declare(metadata i32* %f1, metadata !4524, metadata !2529), !dbg !4525
  call void @llvm.dbg.declare(metadata i32* %f2, metadata !4526, metadata !2529), !dbg !4527
  call void @llvm.dbg.declare(metadata [16 x i8]* %transfer_ul, metadata !4528, metadata !2529), !dbg !4529
  %11 = bitcast [16 x i8]* %transfer_ul to i8*, !dbg !4529
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 16, i32 16, i1 false), !dbg !4529
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !4530, metadata !2529), !dbg !4531
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4532
  %13 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4533
  %14 = load i8*, i8** %key.addr, align 8, !dbg !4534
  %call = call i64 @mxf_write_generic_desc(%struct.AVFormatContext* %12, %struct.AVStream* %13, i8* %14), !dbg !4535
  store i64 %call, i64* %pos, align 8, !dbg !4531
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %transfer_ul, i32 0, i32 0, !dbg !4536
  %15 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4537
  %codecpar6 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %15, i32 0, i32 19, !dbg !4538
  %16 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar6, align 8, !dbg !4538
  %color_trc = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %16, i32 0, i32 17, !dbg !4539
  %17 = load i32, i32* %color_trc, align 4, !dbg !4539
  %call7 = call i32 @get_trc(i8* %arraydecay, i32 %17), !dbg !4540
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4541
  call void @mxf_write_local_tag(%struct.AVIOContext* %18, i32 4, i32 12803), !dbg !4542
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4543
  %20 = load i32, i32* %stored_width, align 4, !dbg !4544
  call void @avio_wb32(%struct.AVIOContext* %19, i32 %20), !dbg !4545
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4546
  call void @mxf_write_local_tag(%struct.AVIOContext* %21, i32 4, i32 12802), !dbg !4547
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4548
  %23 = load i32, i32* %stored_height, align 4, !dbg !4549
  %24 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4550
  %interlaced = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %24, i32 0, i32 5, !dbg !4551
  %25 = load i32, i32* %interlaced, align 4, !dbg !4551
  %shr = ashr i32 %23, %25, !dbg !4552
  call void @avio_wb32(%struct.AVIOContext* %22, i32 %shr), !dbg !4553
  %26 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4554
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %26, i32 0, i32 2, !dbg !4556
  %27 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !4556
  %cmp = icmp eq %struct.AVOutputFormat* %27, @ff_mxf_d10_muxer, !dbg !4557
  br i1 %cmp, label %if.then, label %if.end, !dbg !4558

if.then:                                          ; preds = %entry
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4559
  call void @mxf_write_local_tag(%struct.AVIOContext* %28, i32 4, i32 12822), !dbg !4561
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4562
  call void @avio_wb32(%struct.AVIOContext* %29, i32 0), !dbg !4563
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4564
  call void @mxf_write_local_tag(%struct.AVIOContext* %30, i32 4, i32 12819), !dbg !4565
  %31 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4566
  call void @avio_wb32(%struct.AVIOContext* %31, i32 0), !dbg !4567
  %32 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4568
  call void @mxf_write_local_tag(%struct.AVIOContext* %32, i32 4, i32 12820), !dbg !4569
  %33 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4570
  call void @avio_wb32(%struct.AVIOContext* %33, i32 0), !dbg !4571
  br label %if.end, !dbg !4572

if.end:                                           ; preds = %if.then, %entry
  %34 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4573
  call void @mxf_write_local_tag(%struct.AVIOContext* %34, i32 4, i32 12805), !dbg !4574
  %35 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4575
  %36 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4576
  %codecpar8 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %36, i32 0, i32 19, !dbg !4577
  %37 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar8, align 8, !dbg !4577
  %width9 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %37, i32 0, i32 11, !dbg !4578
  %38 = load i32, i32* %width9, align 8, !dbg !4578
  call void @avio_wb32(%struct.AVIOContext* %35, i32 %38), !dbg !4579
  %39 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4580
  call void @mxf_write_local_tag(%struct.AVIOContext* %39, i32 4, i32 12804), !dbg !4581
  %40 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4582
  %41 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4583
  %codecpar10 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %41, i32 0, i32 19, !dbg !4584
  %42 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar10, align 8, !dbg !4584
  %height11 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %42, i32 0, i32 12, !dbg !4585
  %43 = load i32, i32* %height11, align 4, !dbg !4585
  %44 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4586
  %interlaced12 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %44, i32 0, i32 5, !dbg !4587
  %45 = load i32, i32* %interlaced12, align 4, !dbg !4587
  %shr13 = ashr i32 %43, %45, !dbg !4588
  call void @avio_wb32(%struct.AVIOContext* %40, i32 %shr13), !dbg !4589
  %46 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4590
  call void @mxf_write_local_tag(%struct.AVIOContext* %46, i32 4, i32 12806), !dbg !4591
  %47 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4592
  call void @avio_wb32(%struct.AVIOContext* %47, i32 0), !dbg !4593
  %48 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4594
  call void @mxf_write_local_tag(%struct.AVIOContext* %48, i32 4, i32 12807), !dbg !4595
  %49 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4596
  call void @avio_wb32(%struct.AVIOContext* %49, i32 0), !dbg !4597
  %50 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4598
  call void @mxf_write_local_tag(%struct.AVIOContext* %50, i32 4, i32 12809), !dbg !4599
  %51 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4600
  %52 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4601
  %codecpar14 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %52, i32 0, i32 19, !dbg !4602
  %53 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar14, align 8, !dbg !4602
  %width15 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %53, i32 0, i32 11, !dbg !4603
  %54 = load i32, i32* %width15, align 8, !dbg !4603
  call void @avio_wb32(%struct.AVIOContext* %51, i32 %54), !dbg !4604
  %55 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4605
  %codecpar16 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %55, i32 0, i32 19, !dbg !4607
  %56 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar16, align 8, !dbg !4607
  %height17 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %56, i32 0, i32 12, !dbg !4608
  %57 = load i32, i32* %height17, align 4, !dbg !4608
  %cmp18 = icmp eq i32 %57, 608, !dbg !4609
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !4610

if.then19:                                        ; preds = %if.end
  store i32 576, i32* %display_height, align 4, !dbg !4611
  br label %if.end28, !dbg !4612

if.else:                                          ; preds = %if.end
  %58 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4613
  %codecpar20 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %58, i32 0, i32 19, !dbg !4615
  %59 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar20, align 8, !dbg !4615
  %height21 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %59, i32 0, i32 12, !dbg !4616
  %60 = load i32, i32* %height21, align 4, !dbg !4616
  %cmp22 = icmp eq i32 %60, 512, !dbg !4617
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !4618

if.then23:                                        ; preds = %if.else
  store i32 486, i32* %display_height, align 4, !dbg !4619
  br label %if.end27, !dbg !4620

if.else24:                                        ; preds = %if.else
  %61 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4621
  %codecpar25 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %61, i32 0, i32 19, !dbg !4622
  %62 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar25, align 8, !dbg !4622
  %height26 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %62, i32 0, i32 12, !dbg !4623
  %63 = load i32, i32* %height26, align 4, !dbg !4623
  store i32 %63, i32* %display_height, align 4, !dbg !4624
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then23
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then19
  %64 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4625
  call void @mxf_write_local_tag(%struct.AVIOContext* %64, i32 4, i32 12808), !dbg !4626
  %65 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4627
  %66 = load i32, i32* %display_height, align 4, !dbg !4628
  %67 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4629
  %interlaced29 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %67, i32 0, i32 5, !dbg !4630
  %68 = load i32, i32* %interlaced29, align 4, !dbg !4630
  %shr30 = ashr i32 %66, %68, !dbg !4631
  call void @avio_wb32(%struct.AVIOContext* %65, i32 %shr30), !dbg !4632
  %69 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4633
  call void @mxf_write_local_tag(%struct.AVIOContext* %69, i32 4, i32 12810), !dbg !4634
  %70 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4635
  call void @avio_wb32(%struct.AVIOContext* %70, i32 0), !dbg !4636
  %71 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4637
  call void @mxf_write_local_tag(%struct.AVIOContext* %71, i32 4, i32 12811), !dbg !4638
  %72 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4639
  %73 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4640
  %codecpar31 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %73, i32 0, i32 19, !dbg !4641
  %74 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar31, align 8, !dbg !4641
  %height32 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %74, i32 0, i32 12, !dbg !4642
  %75 = load i32, i32* %height32, align 4, !dbg !4642
  %76 = load i32, i32* %display_height, align 4, !dbg !4643
  %sub = sub nsw i32 %75, %76, !dbg !4644
  %77 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4645
  %interlaced33 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %77, i32 0, i32 5, !dbg !4646
  %78 = load i32, i32* %interlaced33, align 4, !dbg !4646
  %shr34 = ashr i32 %sub, %78, !dbg !4647
  call void @avio_wb32(%struct.AVIOContext* %72, i32 %shr34), !dbg !4648
  %79 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4649
  %interlaced35 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %79, i32 0, i32 5, !dbg !4651
  %80 = load i32, i32* %interlaced35, align 4, !dbg !4651
  %tobool = icmp ne i32 %80, 0, !dbg !4649
  br i1 %tobool, label %if.then36, label %if.end41, !dbg !4652

if.then36:                                        ; preds = %if.end28
  %81 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4653
  call void @mxf_write_local_tag(%struct.AVIOContext* %81, i32 4, i32 12823), !dbg !4655
  %82 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4656
  %83 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4657
  %codecpar37 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %83, i32 0, i32 19, !dbg !4658
  %84 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar37, align 8, !dbg !4658
  %height38 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %84, i32 0, i32 12, !dbg !4659
  %85 = load i32, i32* %height38, align 4, !dbg !4659
  %86 = load i32, i32* %display_height, align 4, !dbg !4660
  %sub39 = sub nsw i32 %85, %86, !dbg !4661
  %and = and i32 %sub39, 1, !dbg !4662
  %sub40 = sub nsw i32 0, %and, !dbg !4663
  call void @avio_wb32(%struct.AVIOContext* %82, i32 %sub40), !dbg !4664
  br label %if.end41, !dbg !4665

if.end41:                                         ; preds = %if.then36, %if.end28
  %87 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4666
  call void @mxf_write_local_tag(%struct.AVIOContext* %87, i32 4, i32 13057), !dbg !4667
  %88 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4668
  %89 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4669
  %component_depth = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %89, i32 0, i32 7, !dbg !4670
  %90 = load i32, i32* %component_depth, align 4, !dbg !4670
  call void @avio_wb32(%struct.AVIOContext* %88, i32 %90), !dbg !4671
  %91 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4672
  call void @mxf_write_local_tag(%struct.AVIOContext* %91, i32 4, i32 13058), !dbg !4673
  %92 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4674
  %93 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4675
  %h_chroma_sub_sample = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %93, i32 0, i32 10, !dbg !4676
  %94 = load i32, i32* %h_chroma_sub_sample, align 8, !dbg !4676
  call void @avio_wb32(%struct.AVIOContext* %92, i32 %94), !dbg !4677
  %95 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4678
  call void @mxf_write_local_tag(%struct.AVIOContext* %95, i32 4, i32 13064), !dbg !4679
  %96 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4680
  %97 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4681
  %v_chroma_sub_sample = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %97, i32 0, i32 11, !dbg !4682
  %98 = load i32, i32* %v_chroma_sub_sample, align 4, !dbg !4682
  call void @avio_wb32(%struct.AVIOContext* %96, i32 %98), !dbg !4683
  %99 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4684
  call void @mxf_write_local_tag(%struct.AVIOContext* %99, i32 1, i32 13059), !dbg !4685
  %100 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4686
  %101 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4687
  %color_siting = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %101, i32 0, i32 8, !dbg !4688
  %102 = load i32, i32* %color_siting, align 8, !dbg !4688
  call void @avio_w8(%struct.AVIOContext* %100, i32 %102), !dbg !4689
  %103 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4690
  call void @mxf_write_local_tag(%struct.AVIOContext* %103, i32 2, i32 13063), !dbg !4691
  %104 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4692
  call void @avio_wb16(%struct.AVIOContext* %104, i32 0), !dbg !4693
  %105 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4694
  %codecpar42 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %105, i32 0, i32 19, !dbg !4696
  %106 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar42, align 8, !dbg !4696
  %color_range = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %106, i32 0, i32 15, !dbg !4697
  %107 = load i32, i32* %color_range, align 4, !dbg !4697
  %cmp43 = icmp ne i32 %107, 0, !dbg !4698
  br i1 %cmp43, label %if.then44, label %if.end65, !dbg !4699

if.then44:                                        ; preds = %if.end41
  call void @llvm.dbg.declare(metadata i32* %black, metadata !4700, metadata !2529), !dbg !4702
  store i32 0, i32* %black, align 4, !dbg !4702
  call void @llvm.dbg.declare(metadata i32* %white, metadata !4703, metadata !2529), !dbg !4704
  %108 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4705
  %component_depth45 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %108, i32 0, i32 7, !dbg !4706
  %109 = load i32, i32* %component_depth45, align 4, !dbg !4706
  %shl = shl i32 1, %109, !dbg !4707
  %sub46 = sub nsw i32 %shl, 1, !dbg !4708
  store i32 %sub46, i32* %white, align 4, !dbg !4704
  call void @llvm.dbg.declare(metadata i32* %color, metadata !4709, metadata !2529), !dbg !4710
  %110 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4711
  %component_depth47 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %110, i32 0, i32 7, !dbg !4712
  %111 = load i32, i32* %component_depth47, align 4, !dbg !4712
  %shl48 = shl i32 1, %111, !dbg !4713
  %sub49 = sub nsw i32 %shl48, 1, !dbg !4714
  store i32 %sub49, i32* %color, align 4, !dbg !4710
  %112 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4715
  %codecpar50 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %112, i32 0, i32 19, !dbg !4717
  %113 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar50, align 8, !dbg !4717
  %color_range51 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %113, i32 0, i32 15, !dbg !4718
  %114 = load i32, i32* %color_range51, align 4, !dbg !4718
  %cmp52 = icmp eq i32 %114, 1, !dbg !4719
  br i1 %cmp52, label %if.then53, label %if.end64, !dbg !4720

if.then53:                                        ; preds = %if.then44
  %115 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4721
  %component_depth54 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %115, i32 0, i32 7, !dbg !4723
  %116 = load i32, i32* %component_depth54, align 4, !dbg !4723
  %sub55 = sub nsw i32 %116, 4, !dbg !4724
  %shl56 = shl i32 1, %sub55, !dbg !4725
  store i32 %shl56, i32* %black, align 4, !dbg !4726
  %117 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4727
  %component_depth57 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %117, i32 0, i32 7, !dbg !4728
  %118 = load i32, i32* %component_depth57, align 4, !dbg !4728
  %sub58 = sub nsw i32 %118, 8, !dbg !4729
  %shl59 = shl i32 235, %sub58, !dbg !4730
  store i32 %shl59, i32* %white, align 4, !dbg !4731
  %119 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4732
  %component_depth60 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %119, i32 0, i32 7, !dbg !4733
  %120 = load i32, i32* %component_depth60, align 4, !dbg !4733
  %sub61 = sub nsw i32 %120, 4, !dbg !4734
  %shl62 = shl i32 14, %sub61, !dbg !4735
  %add63 = add nsw i32 %shl62, 1, !dbg !4736
  store i32 %add63, i32* %color, align 4, !dbg !4737
  br label %if.end64, !dbg !4738

if.end64:                                         ; preds = %if.then53, %if.then44
  %121 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4739
  call void @mxf_write_local_tag(%struct.AVIOContext* %121, i32 4, i32 13060), !dbg !4740
  %122 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4741
  %123 = load i32, i32* %black, align 4, !dbg !4742
  call void @avio_wb32(%struct.AVIOContext* %122, i32 %123), !dbg !4743
  %124 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4744
  call void @mxf_write_local_tag(%struct.AVIOContext* %124, i32 4, i32 13061), !dbg !4745
  %125 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4746
  %126 = load i32, i32* %white, align 4, !dbg !4747
  call void @avio_wb32(%struct.AVIOContext* %125, i32 %126), !dbg !4748
  %127 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4749
  call void @mxf_write_local_tag(%struct.AVIOContext* %127, i32 4, i32 13062), !dbg !4750
  %128 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4751
  %129 = load i32, i32* %color, align 4, !dbg !4752
  call void @avio_wb32(%struct.AVIOContext* %128, i32 %129), !dbg !4753
  br label %if.end65, !dbg !4754

if.end65:                                         ; preds = %if.end64, %if.end41
  %130 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4755
  %signal_standard = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %130, i32 0, i32 9, !dbg !4757
  %131 = load i32, i32* %signal_standard, align 4, !dbg !4757
  %tobool66 = icmp ne i32 %131, 0, !dbg !4755
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !4758

if.then67:                                        ; preds = %if.end65
  %132 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4759
  call void @mxf_write_local_tag(%struct.AVIOContext* %132, i32 1, i32 12821), !dbg !4761
  %133 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4762
  %134 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4763
  %signal_standard68 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %134, i32 0, i32 9, !dbg !4764
  %135 = load i32, i32* %signal_standard68, align 4, !dbg !4764
  call void @avio_w8(%struct.AVIOContext* %133, i32 %135), !dbg !4765
  br label %if.end69, !dbg !4766

if.end69:                                         ; preds = %if.then67, %if.end65
  %136 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4767
  call void @mxf_write_local_tag(%struct.AVIOContext* %136, i32 1, i32 12812), !dbg !4768
  %137 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4769
  %138 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4770
  %interlaced70 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %138, i32 0, i32 5, !dbg !4771
  %139 = load i32, i32* %interlaced70, align 4, !dbg !4771
  call void @avio_w8(%struct.AVIOContext* %137, i32 %139), !dbg !4772
  %140 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4773
  %codecpar71 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %140, i32 0, i32 19, !dbg !4774
  %141 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar71, align 8, !dbg !4774
  %height72 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %141, i32 0, i32 12, !dbg !4775
  %142 = load i32, i32* %height72, align 4, !dbg !4775
  switch i32 %142, label %sw.default [
    i32 576, label %sw.bb
    i32 608, label %sw.bb75
    i32 480, label %sw.bb76
    i32 512, label %sw.bb81
    i32 720, label %sw.bb82
    i32 1080, label %sw.bb83
  ], !dbg !4776

sw.bb:                                            ; preds = %if.end69
  store i32 23, i32* %f1, align 4, !dbg !4777
  %143 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4779
  %codecpar73 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %143, i32 0, i32 19, !dbg !4780
  %144 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar73, align 8, !dbg !4780
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %144, i32 0, i32 1, !dbg !4781
  %145 = load i32, i32* %codec_id, align 4, !dbg !4781
  %cmp74 = icmp eq i32 %145, 24, !dbg !4782
  %cond = select i1 %cmp74, i32 335, i32 336, !dbg !4779
  store i32 %cond, i32* %f2, align 4, !dbg !4783
  br label %sw.epilog, !dbg !4784

sw.bb75:                                          ; preds = %if.end69
  store i32 7, i32* %f1, align 4, !dbg !4785
  store i32 320, i32* %f2, align 4, !dbg !4786
  br label %sw.epilog, !dbg !4787

sw.bb76:                                          ; preds = %if.end69
  store i32 20, i32* %f1, align 4, !dbg !4788
  %146 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4789
  %codecpar77 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %146, i32 0, i32 19, !dbg !4790
  %147 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar77, align 8, !dbg !4790
  %codec_id78 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %147, i32 0, i32 1, !dbg !4791
  %148 = load i32, i32* %codec_id78, align 4, !dbg !4791
  %cmp79 = icmp eq i32 %148, 24, !dbg !4792
  %cond80 = select i1 %cmp79, i32 285, i32 283, !dbg !4789
  store i32 %cond80, i32* %f2, align 4, !dbg !4793
  br label %sw.epilog, !dbg !4794

sw.bb81:                                          ; preds = %if.end69
  store i32 7, i32* %f1, align 4, !dbg !4795
  store i32 270, i32* %f2, align 4, !dbg !4796
  br label %sw.epilog, !dbg !4797

sw.bb82:                                          ; preds = %if.end69
  store i32 26, i32* %f1, align 4, !dbg !4798
  store i32 0, i32* %f2, align 4, !dbg !4799
  br label %sw.epilog, !dbg !4800

sw.bb83:                                          ; preds = %if.end69
  store i32 21, i32* %f1, align 4, !dbg !4801
  store i32 584, i32* %f2, align 4, !dbg !4802
  br label %sw.epilog, !dbg !4803

sw.default:                                       ; preds = %if.end69
  store i32 0, i32* %f1, align 4, !dbg !4804
  store i32 0, i32* %f2, align 4, !dbg !4805
  br label %sw.epilog, !dbg !4806

sw.epilog:                                        ; preds = %sw.default, %sw.bb83, %sw.bb82, %sw.bb81, %sw.bb76, %sw.bb75, %sw.bb
  %149 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4807
  %interlaced84 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %149, i32 0, i32 5, !dbg !4809
  %150 = load i32, i32* %interlaced84, align 4, !dbg !4809
  %tobool85 = icmp ne i32 %150, 0, !dbg !4807
  br i1 %tobool85, label %if.end89, label %land.lhs.true, !dbg !4810

land.lhs.true:                                    ; preds = %sw.epilog
  %151 = load i32, i32* %f2, align 4, !dbg !4811
  %tobool86 = icmp ne i32 %151, 0, !dbg !4811
  br i1 %tobool86, label %if.then87, label %if.end89, !dbg !4813

if.then87:                                        ; preds = %land.lhs.true
  store i32 0, i32* %f2, align 4, !dbg !4814
  %152 = load i32, i32* %f1, align 4, !dbg !4816
  %mul88 = mul nsw i32 %152, 2, !dbg !4816
  store i32 %mul88, i32* %f1, align 4, !dbg !4816
  br label %if.end89, !dbg !4817

if.end89:                                         ; preds = %if.then87, %land.lhs.true, %sw.epilog
  %153 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4818
  call void @mxf_write_local_tag(%struct.AVIOContext* %153, i32 16, i32 12813), !dbg !4819
  %154 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4820
  call void @avio_wb32(%struct.AVIOContext* %154, i32 2), !dbg !4821
  %155 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4822
  call void @avio_wb32(%struct.AVIOContext* %155, i32 4), !dbg !4823
  %156 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4824
  %157 = load i32, i32* %f1, align 4, !dbg !4825
  call void @avio_wb32(%struct.AVIOContext* %156, i32 %157), !dbg !4826
  %158 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4827
  %159 = load i32, i32* %f2, align 4, !dbg !4828
  call void @avio_wb32(%struct.AVIOContext* %158, i32 %159), !dbg !4829
  %160 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4830
  call void @mxf_write_local_tag(%struct.AVIOContext* %160, i32 8, i32 12814), !dbg !4831
  %161 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4832
  %162 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4833
  %aspect_ratio = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %162, i32 0, i32 13, !dbg !4834
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect_ratio, i32 0, i32 0, !dbg !4835
  %163 = load i32, i32* %num, align 4, !dbg !4835
  call void @avio_wb32(%struct.AVIOContext* %161, i32 %163), !dbg !4836
  %164 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4837
  %165 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4838
  %aspect_ratio90 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %165, i32 0, i32 13, !dbg !4839
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect_ratio90, i32 0, i32 1, !dbg !4840
  %166 = load i32, i32* %den, align 4, !dbg !4840
  call void @avio_wb32(%struct.AVIOContext* %164, i32 %166), !dbg !4841
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %transfer_ul, i64 0, i64 0, !dbg !4842
  %167 = load i8, i8* %arrayidx, align 16, !dbg !4842
  %tobool91 = icmp ne i8 %167, 0, !dbg !4842
  br i1 %tobool91, label %if.then92, label %if.end94, !dbg !4844

if.then92:                                        ; preds = %if.end89
  %168 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4845
  call void @mxf_write_local_tag(%struct.AVIOContext* %168, i32 16, i32 12816), !dbg !4847
  %169 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4848
  %arraydecay93 = getelementptr inbounds [16 x i8], [16 x i8]* %transfer_ul, i32 0, i32 0, !dbg !4849
  call void @avio_write(%struct.AVIOContext* %169, i8* %arraydecay93, i32 16), !dbg !4850
  br label %if.end94, !dbg !4851

if.end94:                                         ; preds = %if.then92, %if.end89
  %170 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4852
  call void @mxf_write_local_tag(%struct.AVIOContext* %170, i32 16, i32 12801), !dbg !4853
  %171 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4854
  %172 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4855
  %codec_ul = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %172, i32 0, i32 3, !dbg !4856
  %173 = load [16 x i8]*, [16 x i8]** %codec_ul, align 8, !dbg !4856
  %arraydecay95 = getelementptr inbounds [16 x i8], [16 x i8]* %173, i32 0, i32 0, !dbg !4857
  call void @avio_write(%struct.AVIOContext* %171, i8* %arraydecay95, i32 16), !dbg !4858
  %174 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4859
  %interlaced96 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %174, i32 0, i32 5, !dbg !4861
  %175 = load i32, i32* %interlaced96, align 4, !dbg !4861
  %tobool97 = icmp ne i32 %175, 0, !dbg !4859
  br i1 %tobool97, label %land.lhs.true98, label %if.end102, !dbg !4862

land.lhs.true98:                                  ; preds = %if.end94
  %176 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4863
  %field_dominance = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %176, i32 0, i32 6, !dbg !4865
  %177 = load i32, i32* %field_dominance, align 8, !dbg !4865
  %tobool99 = icmp ne i32 %177, 0, !dbg !4863
  br i1 %tobool99, label %if.then100, label %if.end102, !dbg !4866

if.then100:                                       ; preds = %land.lhs.true98
  %178 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4867
  call void @mxf_write_local_tag(%struct.AVIOContext* %178, i32 1, i32 12818), !dbg !4869
  %179 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4870
  %180 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !4871
  %field_dominance101 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %180, i32 0, i32 6, !dbg !4872
  %181 = load i32, i32* %field_dominance101, align 8, !dbg !4872
  call void @avio_w8(%struct.AVIOContext* %179, i32 %181), !dbg !4873
  br label %if.end102, !dbg !4874

if.end102:                                        ; preds = %if.then100, %land.lhs.true98, %if.end94
  %182 = load i64, i64* %pos, align 8, !dbg !4875
  ret i64 %182, !dbg !4876
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_local_tag(%struct.AVIOContext* %pb, i32 %size, i32 %tag) #0 !dbg !4877 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %size.addr = alloca i32, align 4
  %tag.addr = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !4880, metadata !2529), !dbg !4881
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !4882, metadata !2529), !dbg !4883
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !4884, metadata !2529), !dbg !4885
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4886
  %1 = load i32, i32* %tag.addr, align 4, !dbg !4887
  call void @avio_wb16(%struct.AVIOContext* %0, i32 %1), !dbg !4888
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4889
  %3 = load i32, i32* %size.addr, align 4, !dbg !4890
  call void @avio_wb16(%struct.AVIOContext* %2, i32 %3), !dbg !4891
  ret void, !dbg !4892
}

declare void @avio_wb32(%struct.AVIOContext*, i32) #1

declare void @avio_w8(%struct.AVIOContext*, i32) #1

declare void @avio_wb16(%struct.AVIOContext*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @mxf_update_klv_size(%struct.AVIOContext* %pb, i64 %pos) #0 !dbg !4893 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !3913, metadata !2529), !dbg !4896
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %pos.addr = alloca i64, align 8
  %cur_pos = alloca i64, align 8
  %size = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !4898, metadata !2529), !dbg !4899
  store i64 %pos, i64* %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pos.addr, metadata !4900, metadata !2529), !dbg !4901
  call void @llvm.dbg.declare(metadata i64* %cur_pos, metadata !4902, metadata !2529), !dbg !4903
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4904
  store %struct.AVIOContext* %0, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4905
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4906
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %1, i64 0, i32 1) #9, !dbg !4907
  store i64 %call.i, i64* %cur_pos, align 8, !dbg !4903
  call void @llvm.dbg.declare(metadata i32* %size, metadata !4908, metadata !2529), !dbg !4909
  %2 = load i64, i64* %cur_pos, align 8, !dbg !4910
  %3 = load i64, i64* %pos.addr, align 8, !dbg !4911
  %sub = sub nsw i64 %2, %3, !dbg !4912
  %conv = trunc i64 %sub to i32, !dbg !4910
  store i32 %conv, i32* %size, align 4, !dbg !4909
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4913
  %5 = load i64, i64* %pos.addr, align 8, !dbg !4914
  %sub1 = sub nsw i64 %5, 4, !dbg !4915
  %call2 = call i64 @avio_seek(%struct.AVIOContext* %4, i64 %sub1, i32 0), !dbg !4916
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4917
  %7 = load i32, i32* %size, align 4, !dbg !4918
  call void @klv_encode_ber4_length(%struct.AVIOContext* %6, i32 %7), !dbg !4919
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4920
  %9 = load i64, i64* %cur_pos, align 8, !dbg !4921
  %call3 = call i64 @avio_seek(%struct.AVIOContext* %8, i64 %9, i32 0), !dbg !4922
  ret void, !dbg !4923
}

; Function Attrs: nounwind uwtable
define internal i64 @mxf_write_generic_desc(%struct.AVFormatContext* %s, %struct.AVStream* %st, i8* %key) #0 !dbg !4924 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !3913, metadata !2529), !dbg !4925
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %key.addr = alloca i8*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %pos = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4927, metadata !2529), !dbg !4928
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !4929, metadata !2529), !dbg !4930
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !4931, metadata !2529), !dbg !4932
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !4933, metadata !2529), !dbg !4934
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4935
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !4936
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4936
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !4935
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !4934
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !4937, metadata !2529), !dbg !4938
  %3 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4939
  %priv_data1 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %3, i32 0, i32 3, !dbg !4940
  %4 = load i8*, i8** %priv_data1, align 8, !dbg !4940
  %5 = bitcast i8* %4 to %struct.MXFStreamContext*, !dbg !4939
  store %struct.MXFStreamContext* %5, %struct.MXFStreamContext** %sc, align 8, !dbg !4938
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !4941, metadata !2529), !dbg !4942
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4943
  %pb2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i32 0, i32 4, !dbg !4944
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb2, align 8, !dbg !4944
  store %struct.AVIOContext* %7, %struct.AVIOContext** %pb, align 8, !dbg !4942
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !4945, metadata !2529), !dbg !4946
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4947
  %9 = load i8*, i8** %key.addr, align 8, !dbg !4948
  call void @avio_write(%struct.AVIOContext* %8, i8* %9, i32 16), !dbg !4949
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4950
  call void @klv_encode_ber4_length(%struct.AVIOContext* %10, i32 0), !dbg !4951
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4952
  store %struct.AVIOContext* %11, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4953
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4954
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %12, i64 0, i32 1) #9, !dbg !4955
  store i64 %call.i, i64* %pos, align 8, !dbg !4956
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4957
  call void @mxf_write_local_tag(%struct.AVIOContext* %13, i32 16, i32 15370), !dbg !4958
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4959
  %15 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4960
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %15, i32 0, i32 0, !dbg !4961
  %16 = load i32, i32* %index, align 8, !dbg !4961
  call void @mxf_write_uuid(%struct.AVIOContext* %14, i32 14, i32 %16), !dbg !4962
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4963
  call void @mxf_write_local_tag(%struct.AVIOContext* %17, i32 4, i32 12294), !dbg !4964
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4965
  %19 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4966
  %index3 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i32 0, i32 0, !dbg !4967
  %20 = load i32, i32* %index3, align 8, !dbg !4967
  %add = add nsw i32 %20, 2, !dbg !4968
  call void @avio_wb32(%struct.AVIOContext* %18, i32 %add), !dbg !4969
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4970
  call void @mxf_write_local_tag(%struct.AVIOContext* %21, i32 8, i32 12289), !dbg !4971
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4972
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i32 0, i32 2, !dbg !4974
  %23 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !4974
  %cmp = icmp eq %struct.AVOutputFormat* %23, @ff_mxf_d10_muxer, !dbg !4975
  br i1 %cmp, label %if.then, label %if.else, !dbg !4976

if.then:                                          ; preds = %entry
  %24 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4977
  %25 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4979
  %time_base = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %25, i32 0, i32 3, !dbg !4980
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 1, !dbg !4981
  %26 = load i32, i32* %den, align 4, !dbg !4981
  call void @avio_wb32(%struct.AVIOContext* %24, i32 %26), !dbg !4982
  %27 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4983
  %28 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4984
  %time_base4 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %28, i32 0, i32 3, !dbg !4985
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base4, i32 0, i32 0, !dbg !4986
  %29 = load i32, i32* %num, align 4, !dbg !4986
  call void @avio_wb32(%struct.AVIOContext* %27, i32 %29), !dbg !4987
  br label %if.end16, !dbg !4988

if.else:                                          ; preds = %entry
  %30 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4989
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %30, i32 0, i32 19, !dbg !4992
  %31 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !4992
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %31, i32 0, i32 1, !dbg !4993
  %32 = load i32, i32* %codec_id, align 4, !dbg !4993
  %cmp5 = icmp eq i32 %32, 65536, !dbg !4994
  br i1 %cmp5, label %if.then9, label %lor.lhs.false, !dbg !4995

lor.lhs.false:                                    ; preds = %if.else
  %33 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !4996
  %codecpar6 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %33, i32 0, i32 19, !dbg !4997
  %34 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar6, align 8, !dbg !4997
  %codec_id7 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %34, i32 0, i32 1, !dbg !4998
  %35 = load i32, i32* %codec_id7, align 4, !dbg !4998
  %cmp8 = icmp eq i32 %35, 65548, !dbg !4999
  br i1 %cmp8, label %if.then9, label %if.else11, !dbg !5000

if.then9:                                         ; preds = %lor.lhs.false, %if.else
  %36 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5002
  %37 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5004
  %codecpar10 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i32 0, i32 19, !dbg !5005
  %38 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar10, align 8, !dbg !5005
  %sample_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %38, i32 0, i32 23, !dbg !5006
  %39 = load i32, i32* %sample_rate, align 4, !dbg !5006
  call void @avio_wb32(%struct.AVIOContext* %36, i32 %39), !dbg !5007
  %40 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5008
  call void @avio_wb32(%struct.AVIOContext* %40, i32 1), !dbg !5009
  br label %if.end, !dbg !5010

if.else11:                                        ; preds = %lor.lhs.false
  %41 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5011
  %42 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !5013
  %time_base12 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %42, i32 0, i32 3, !dbg !5014
  %den13 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base12, i32 0, i32 1, !dbg !5015
  %43 = load i32, i32* %den13, align 4, !dbg !5015
  call void @avio_wb32(%struct.AVIOContext* %41, i32 %43), !dbg !5016
  %44 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5017
  %45 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !5018
  %time_base14 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %45, i32 0, i32 3, !dbg !5019
  %num15 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base14, i32 0, i32 0, !dbg !5020
  %46 = load i32, i32* %num15, align 4, !dbg !5020
  call void @avio_wb32(%struct.AVIOContext* %44, i32 %46), !dbg !5021
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then9
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then
  %47 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5022
  call void @mxf_write_local_tag(%struct.AVIOContext* %47, i32 16, i32 12292), !dbg !5023
  %48 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5024
  %49 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5025
  %index17 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %49, i32 0, i32 2, !dbg !5026
  %50 = load i32, i32* %index17, align 8, !dbg !5026
  %idxprom = sext i32 %50 to i64, !dbg !5027
  %arrayidx = getelementptr inbounds [32 x %struct.MXFContainerEssenceEntry], [32 x %struct.MXFContainerEssenceEntry]* @mxf_essence_container_uls, i64 0, i64 %idxprom, !dbg !5027
  %container_ul = getelementptr inbounds %struct.MXFContainerEssenceEntry, %struct.MXFContainerEssenceEntry* %arrayidx, i32 0, i32 0, !dbg !5028
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %container_ul, i32 0, i32 0, !dbg !5027
  call void @avio_write(%struct.AVIOContext* %48, i8* %arraydecay, i32 16), !dbg !5029
  %51 = load i64, i64* %pos, align 8, !dbg !5030
  ret i64 %51, !dbg !5031
}

; Function Attrs: nounwind uwtable
define internal i32 @get_trc(i8* %ul, i32 %trc) #0 !dbg !5032 {
entry:
  %retval = alloca i32, align 4
  %ul.addr = alloca i8*, align 8
  %trc.addr = alloca i32, align 4
  %.compoundliteral = alloca [16 x i8], align 1
  %.compoundliteral16 = alloca [16 x i8], align 1
  %.compoundliteral35 = alloca [16 x i8], align 1
  %.compoundliteral54 = alloca [16 x i8], align 1
  %.compoundliteral73 = alloca [16 x i8], align 1
  %.compoundliteral92 = alloca [16 x i8], align 1
  store i8* %ul, i8** %ul.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ul.addr, metadata !5035, metadata !2529), !dbg !5036
  store i32 %trc, i32* %trc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %trc.addr, metadata !5037, metadata !2529), !dbg !5038
  %0 = load i32, i32* %trc.addr, align 4, !dbg !5039
  switch i32 %0, label %sw.default [
    i32 5, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb15
    i32 6, label %sw.bb15
    i32 7, label %sw.bb34
    i32 12, label %sw.bb53
    i32 8, label %sw.bb72
    i32 17, label %sw.bb91
  ], !dbg !5040

sw.bb:                                            ; preds = %entry, %entry
  %1 = load i8*, i8** %ul.addr, align 8, !dbg !5041
  %arrayinit.begin = getelementptr inbounds [16 x i8], [16 x i8]* %.compoundliteral, i64 0, i64 0, !dbg !5043
  store i8 6, i8* %arrayinit.begin, align 1, !dbg !5043
  %arrayinit.element = getelementptr inbounds i8, i8* %arrayinit.begin, i64 1, !dbg !5043
  store i8 14, i8* %arrayinit.element, align 1, !dbg !5043
  %arrayinit.element1 = getelementptr inbounds i8, i8* %arrayinit.element, i64 1, !dbg !5043
  store i8 43, i8* %arrayinit.element1, align 1, !dbg !5043
  %arrayinit.element2 = getelementptr inbounds i8, i8* %arrayinit.element1, i64 1, !dbg !5043
  store i8 52, i8* %arrayinit.element2, align 1, !dbg !5043
  %arrayinit.element3 = getelementptr inbounds i8, i8* %arrayinit.element2, i64 1, !dbg !5043
  store i8 4, i8* %arrayinit.element3, align 1, !dbg !5043
  %arrayinit.element4 = getelementptr inbounds i8, i8* %arrayinit.element3, i64 1, !dbg !5043
  store i8 1, i8* %arrayinit.element4, align 1, !dbg !5043
  %arrayinit.element5 = getelementptr inbounds i8, i8* %arrayinit.element4, i64 1, !dbg !5043
  store i8 1, i8* %arrayinit.element5, align 1, !dbg !5043
  %arrayinit.element6 = getelementptr inbounds i8, i8* %arrayinit.element5, i64 1, !dbg !5043
  store i8 1, i8* %arrayinit.element6, align 1, !dbg !5043
  %arrayinit.element7 = getelementptr inbounds i8, i8* %arrayinit.element6, i64 1, !dbg !5043
  store i8 4, i8* %arrayinit.element7, align 1, !dbg !5043
  %arrayinit.element8 = getelementptr inbounds i8, i8* %arrayinit.element7, i64 1, !dbg !5043
  store i8 1, i8* %arrayinit.element8, align 1, !dbg !5043
  %arrayinit.element9 = getelementptr inbounds i8, i8* %arrayinit.element8, i64 1, !dbg !5043
  store i8 1, i8* %arrayinit.element9, align 1, !dbg !5043
  %arrayinit.element10 = getelementptr inbounds i8, i8* %arrayinit.element9, i64 1, !dbg !5043
  store i8 1, i8* %arrayinit.element10, align 1, !dbg !5043
  %arrayinit.element11 = getelementptr inbounds i8, i8* %arrayinit.element10, i64 1, !dbg !5043
  store i8 1, i8* %arrayinit.element11, align 1, !dbg !5043
  %arrayinit.element12 = getelementptr inbounds i8, i8* %arrayinit.element11, i64 1, !dbg !5043
  store i8 1, i8* %arrayinit.element12, align 1, !dbg !5043
  %arrayinit.element13 = getelementptr inbounds i8, i8* %arrayinit.element12, i64 1, !dbg !5043
  store i8 0, i8* %arrayinit.element13, align 1, !dbg !5043
  %arrayinit.element14 = getelementptr inbounds i8, i8* %arrayinit.element13, i64 1, !dbg !5043
  store i8 0, i8* %arrayinit.element14, align 1, !dbg !5043
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %.compoundliteral, i32 0, i32 0, !dbg !5044
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %arraydecay, i64 16, i32 1, i1 false), !dbg !5044
  store i32 0, i32* %retval, align 4, !dbg !5045
  br label %return, !dbg !5045

sw.bb15:                                          ; preds = %entry, %entry
  %2 = load i8*, i8** %ul.addr, align 8, !dbg !5046
  %arrayinit.begin17 = getelementptr inbounds [16 x i8], [16 x i8]* %.compoundliteral16, i64 0, i64 0, !dbg !5047
  store i8 6, i8* %arrayinit.begin17, align 1, !dbg !5047
  %arrayinit.element18 = getelementptr inbounds i8, i8* %arrayinit.begin17, i64 1, !dbg !5047
  store i8 14, i8* %arrayinit.element18, align 1, !dbg !5047
  %arrayinit.element19 = getelementptr inbounds i8, i8* %arrayinit.element18, i64 1, !dbg !5047
  store i8 43, i8* %arrayinit.element19, align 1, !dbg !5047
  %arrayinit.element20 = getelementptr inbounds i8, i8* %arrayinit.element19, i64 1, !dbg !5047
  store i8 52, i8* %arrayinit.element20, align 1, !dbg !5047
  %arrayinit.element21 = getelementptr inbounds i8, i8* %arrayinit.element20, i64 1, !dbg !5047
  store i8 4, i8* %arrayinit.element21, align 1, !dbg !5047
  %arrayinit.element22 = getelementptr inbounds i8, i8* %arrayinit.element21, i64 1, !dbg !5047
  store i8 1, i8* %arrayinit.element22, align 1, !dbg !5047
  %arrayinit.element23 = getelementptr inbounds i8, i8* %arrayinit.element22, i64 1, !dbg !5047
  store i8 1, i8* %arrayinit.element23, align 1, !dbg !5047
  %arrayinit.element24 = getelementptr inbounds i8, i8* %arrayinit.element23, i64 1, !dbg !5047
  store i8 1, i8* %arrayinit.element24, align 1, !dbg !5047
  %arrayinit.element25 = getelementptr inbounds i8, i8* %arrayinit.element24, i64 1, !dbg !5047
  store i8 4, i8* %arrayinit.element25, align 1, !dbg !5047
  %arrayinit.element26 = getelementptr inbounds i8, i8* %arrayinit.element25, i64 1, !dbg !5047
  store i8 1, i8* %arrayinit.element26, align 1, !dbg !5047
  %arrayinit.element27 = getelementptr inbounds i8, i8* %arrayinit.element26, i64 1, !dbg !5047
  store i8 1, i8* %arrayinit.element27, align 1, !dbg !5047
  %arrayinit.element28 = getelementptr inbounds i8, i8* %arrayinit.element27, i64 1, !dbg !5047
  store i8 1, i8* %arrayinit.element28, align 1, !dbg !5047
  %arrayinit.element29 = getelementptr inbounds i8, i8* %arrayinit.element28, i64 1, !dbg !5047
  store i8 1, i8* %arrayinit.element29, align 1, !dbg !5047
  %arrayinit.element30 = getelementptr inbounds i8, i8* %arrayinit.element29, i64 1, !dbg !5047
  store i8 2, i8* %arrayinit.element30, align 1, !dbg !5047
  %arrayinit.element31 = getelementptr inbounds i8, i8* %arrayinit.element30, i64 1, !dbg !5047
  store i8 0, i8* %arrayinit.element31, align 1, !dbg !5047
  %arrayinit.element32 = getelementptr inbounds i8, i8* %arrayinit.element31, i64 1, !dbg !5047
  store i8 0, i8* %arrayinit.element32, align 1, !dbg !5047
  %arraydecay33 = getelementptr inbounds [16 x i8], [16 x i8]* %.compoundliteral16, i32 0, i32 0, !dbg !5048
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %arraydecay33, i64 16, i32 1, i1 false), !dbg !5048
  store i32 0, i32* %retval, align 4, !dbg !5049
  br label %return, !dbg !5049

sw.bb34:                                          ; preds = %entry
  %3 = load i8*, i8** %ul.addr, align 8, !dbg !5050
  %arrayinit.begin36 = getelementptr inbounds [16 x i8], [16 x i8]* %.compoundliteral35, i64 0, i64 0, !dbg !5051
  store i8 6, i8* %arrayinit.begin36, align 1, !dbg !5051
  %arrayinit.element37 = getelementptr inbounds i8, i8* %arrayinit.begin36, i64 1, !dbg !5051
  store i8 14, i8* %arrayinit.element37, align 1, !dbg !5051
  %arrayinit.element38 = getelementptr inbounds i8, i8* %arrayinit.element37, i64 1, !dbg !5051
  store i8 43, i8* %arrayinit.element38, align 1, !dbg !5051
  %arrayinit.element39 = getelementptr inbounds i8, i8* %arrayinit.element38, i64 1, !dbg !5051
  store i8 52, i8* %arrayinit.element39, align 1, !dbg !5051
  %arrayinit.element40 = getelementptr inbounds i8, i8* %arrayinit.element39, i64 1, !dbg !5051
  store i8 4, i8* %arrayinit.element40, align 1, !dbg !5051
  %arrayinit.element41 = getelementptr inbounds i8, i8* %arrayinit.element40, i64 1, !dbg !5051
  store i8 1, i8* %arrayinit.element41, align 1, !dbg !5051
  %arrayinit.element42 = getelementptr inbounds i8, i8* %arrayinit.element41, i64 1, !dbg !5051
  store i8 1, i8* %arrayinit.element42, align 1, !dbg !5051
  %arrayinit.element43 = getelementptr inbounds i8, i8* %arrayinit.element42, i64 1, !dbg !5051
  store i8 1, i8* %arrayinit.element43, align 1, !dbg !5051
  %arrayinit.element44 = getelementptr inbounds i8, i8* %arrayinit.element43, i64 1, !dbg !5051
  store i8 4, i8* %arrayinit.element44, align 1, !dbg !5051
  %arrayinit.element45 = getelementptr inbounds i8, i8* %arrayinit.element44, i64 1, !dbg !5051
  store i8 1, i8* %arrayinit.element45, align 1, !dbg !5051
  %arrayinit.element46 = getelementptr inbounds i8, i8* %arrayinit.element45, i64 1, !dbg !5051
  store i8 1, i8* %arrayinit.element46, align 1, !dbg !5051
  %arrayinit.element47 = getelementptr inbounds i8, i8* %arrayinit.element46, i64 1, !dbg !5051
  store i8 1, i8* %arrayinit.element47, align 1, !dbg !5051
  %arrayinit.element48 = getelementptr inbounds i8, i8* %arrayinit.element47, i64 1, !dbg !5051
  store i8 1, i8* %arrayinit.element48, align 1, !dbg !5051
  %arrayinit.element49 = getelementptr inbounds i8, i8* %arrayinit.element48, i64 1, !dbg !5051
  store i8 3, i8* %arrayinit.element49, align 1, !dbg !5051
  %arrayinit.element50 = getelementptr inbounds i8, i8* %arrayinit.element49, i64 1, !dbg !5051
  store i8 0, i8* %arrayinit.element50, align 1, !dbg !5051
  %arrayinit.element51 = getelementptr inbounds i8, i8* %arrayinit.element50, i64 1, !dbg !5051
  store i8 0, i8* %arrayinit.element51, align 1, !dbg !5051
  %arraydecay52 = getelementptr inbounds [16 x i8], [16 x i8]* %.compoundliteral35, i32 0, i32 0, !dbg !5052
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %arraydecay52, i64 16, i32 1, i1 false), !dbg !5052
  store i32 0, i32* %retval, align 4, !dbg !5053
  br label %return, !dbg !5053

sw.bb53:                                          ; preds = %entry
  %4 = load i8*, i8** %ul.addr, align 8, !dbg !5054
  %arrayinit.begin55 = getelementptr inbounds [16 x i8], [16 x i8]* %.compoundliteral54, i64 0, i64 0, !dbg !5055
  store i8 6, i8* %arrayinit.begin55, align 1, !dbg !5055
  %arrayinit.element56 = getelementptr inbounds i8, i8* %arrayinit.begin55, i64 1, !dbg !5055
  store i8 14, i8* %arrayinit.element56, align 1, !dbg !5055
  %arrayinit.element57 = getelementptr inbounds i8, i8* %arrayinit.element56, i64 1, !dbg !5055
  store i8 43, i8* %arrayinit.element57, align 1, !dbg !5055
  %arrayinit.element58 = getelementptr inbounds i8, i8* %arrayinit.element57, i64 1, !dbg !5055
  store i8 52, i8* %arrayinit.element58, align 1, !dbg !5055
  %arrayinit.element59 = getelementptr inbounds i8, i8* %arrayinit.element58, i64 1, !dbg !5055
  store i8 4, i8* %arrayinit.element59, align 1, !dbg !5055
  %arrayinit.element60 = getelementptr inbounds i8, i8* %arrayinit.element59, i64 1, !dbg !5055
  store i8 1, i8* %arrayinit.element60, align 1, !dbg !5055
  %arrayinit.element61 = getelementptr inbounds i8, i8* %arrayinit.element60, i64 1, !dbg !5055
  store i8 1, i8* %arrayinit.element61, align 1, !dbg !5055
  %arrayinit.element62 = getelementptr inbounds i8, i8* %arrayinit.element61, i64 1, !dbg !5055
  store i8 6, i8* %arrayinit.element62, align 1, !dbg !5055
  %arrayinit.element63 = getelementptr inbounds i8, i8* %arrayinit.element62, i64 1, !dbg !5055
  store i8 4, i8* %arrayinit.element63, align 1, !dbg !5055
  %arrayinit.element64 = getelementptr inbounds i8, i8* %arrayinit.element63, i64 1, !dbg !5055
  store i8 1, i8* %arrayinit.element64, align 1, !dbg !5055
  %arrayinit.element65 = getelementptr inbounds i8, i8* %arrayinit.element64, i64 1, !dbg !5055
  store i8 1, i8* %arrayinit.element65, align 1, !dbg !5055
  %arrayinit.element66 = getelementptr inbounds i8, i8* %arrayinit.element65, i64 1, !dbg !5055
  store i8 1, i8* %arrayinit.element66, align 1, !dbg !5055
  %arrayinit.element67 = getelementptr inbounds i8, i8* %arrayinit.element66, i64 1, !dbg !5055
  store i8 1, i8* %arrayinit.element67, align 1, !dbg !5055
  %arrayinit.element68 = getelementptr inbounds i8, i8* %arrayinit.element67, i64 1, !dbg !5055
  store i8 5, i8* %arrayinit.element68, align 1, !dbg !5055
  %arrayinit.element69 = getelementptr inbounds i8, i8* %arrayinit.element68, i64 1, !dbg !5055
  store i8 0, i8* %arrayinit.element69, align 1, !dbg !5055
  %arrayinit.element70 = getelementptr inbounds i8, i8* %arrayinit.element69, i64 1, !dbg !5055
  store i8 0, i8* %arrayinit.element70, align 1, !dbg !5055
  %arraydecay71 = getelementptr inbounds [16 x i8], [16 x i8]* %.compoundliteral54, i32 0, i32 0, !dbg !5056
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %arraydecay71, i64 16, i32 1, i1 false), !dbg !5056
  store i32 0, i32* %retval, align 4, !dbg !5057
  br label %return, !dbg !5057

sw.bb72:                                          ; preds = %entry
  %5 = load i8*, i8** %ul.addr, align 8, !dbg !5058
  %arrayinit.begin74 = getelementptr inbounds [16 x i8], [16 x i8]* %.compoundliteral73, i64 0, i64 0, !dbg !5059
  store i8 6, i8* %arrayinit.begin74, align 1, !dbg !5059
  %arrayinit.element75 = getelementptr inbounds i8, i8* %arrayinit.begin74, i64 1, !dbg !5059
  store i8 14, i8* %arrayinit.element75, align 1, !dbg !5059
  %arrayinit.element76 = getelementptr inbounds i8, i8* %arrayinit.element75, i64 1, !dbg !5059
  store i8 43, i8* %arrayinit.element76, align 1, !dbg !5059
  %arrayinit.element77 = getelementptr inbounds i8, i8* %arrayinit.element76, i64 1, !dbg !5059
  store i8 52, i8* %arrayinit.element77, align 1, !dbg !5059
  %arrayinit.element78 = getelementptr inbounds i8, i8* %arrayinit.element77, i64 1, !dbg !5059
  store i8 4, i8* %arrayinit.element78, align 1, !dbg !5059
  %arrayinit.element79 = getelementptr inbounds i8, i8* %arrayinit.element78, i64 1, !dbg !5059
  store i8 1, i8* %arrayinit.element79, align 1, !dbg !5059
  %arrayinit.element80 = getelementptr inbounds i8, i8* %arrayinit.element79, i64 1, !dbg !5059
  store i8 1, i8* %arrayinit.element80, align 1, !dbg !5059
  %arrayinit.element81 = getelementptr inbounds i8, i8* %arrayinit.element80, i64 1, !dbg !5059
  store i8 6, i8* %arrayinit.element81, align 1, !dbg !5059
  %arrayinit.element82 = getelementptr inbounds i8, i8* %arrayinit.element81, i64 1, !dbg !5059
  store i8 4, i8* %arrayinit.element82, align 1, !dbg !5059
  %arrayinit.element83 = getelementptr inbounds i8, i8* %arrayinit.element82, i64 1, !dbg !5059
  store i8 1, i8* %arrayinit.element83, align 1, !dbg !5059
  %arrayinit.element84 = getelementptr inbounds i8, i8* %arrayinit.element83, i64 1, !dbg !5059
  store i8 1, i8* %arrayinit.element84, align 1, !dbg !5059
  %arrayinit.element85 = getelementptr inbounds i8, i8* %arrayinit.element84, i64 1, !dbg !5059
  store i8 1, i8* %arrayinit.element85, align 1, !dbg !5059
  %arrayinit.element86 = getelementptr inbounds i8, i8* %arrayinit.element85, i64 1, !dbg !5059
  store i8 1, i8* %arrayinit.element86, align 1, !dbg !5059
  %arrayinit.element87 = getelementptr inbounds i8, i8* %arrayinit.element86, i64 1, !dbg !5059
  store i8 6, i8* %arrayinit.element87, align 1, !dbg !5059
  %arrayinit.element88 = getelementptr inbounds i8, i8* %arrayinit.element87, i64 1, !dbg !5059
  store i8 0, i8* %arrayinit.element88, align 1, !dbg !5059
  %arrayinit.element89 = getelementptr inbounds i8, i8* %arrayinit.element88, i64 1, !dbg !5059
  store i8 0, i8* %arrayinit.element89, align 1, !dbg !5059
  %arraydecay90 = getelementptr inbounds [16 x i8], [16 x i8]* %.compoundliteral73, i32 0, i32 0, !dbg !5060
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %arraydecay90, i64 16, i32 1, i1 false), !dbg !5060
  store i32 0, i32* %retval, align 4, !dbg !5061
  br label %return, !dbg !5061

sw.bb91:                                          ; preds = %entry
  %6 = load i8*, i8** %ul.addr, align 8, !dbg !5062
  %arrayinit.begin93 = getelementptr inbounds [16 x i8], [16 x i8]* %.compoundliteral92, i64 0, i64 0, !dbg !5063
  store i8 6, i8* %arrayinit.begin93, align 1, !dbg !5063
  %arrayinit.element94 = getelementptr inbounds i8, i8* %arrayinit.begin93, i64 1, !dbg !5063
  store i8 14, i8* %arrayinit.element94, align 1, !dbg !5063
  %arrayinit.element95 = getelementptr inbounds i8, i8* %arrayinit.element94, i64 1, !dbg !5063
  store i8 43, i8* %arrayinit.element95, align 1, !dbg !5063
  %arrayinit.element96 = getelementptr inbounds i8, i8* %arrayinit.element95, i64 1, !dbg !5063
  store i8 52, i8* %arrayinit.element96, align 1, !dbg !5063
  %arrayinit.element97 = getelementptr inbounds i8, i8* %arrayinit.element96, i64 1, !dbg !5063
  store i8 4, i8* %arrayinit.element97, align 1, !dbg !5063
  %arrayinit.element98 = getelementptr inbounds i8, i8* %arrayinit.element97, i64 1, !dbg !5063
  store i8 1, i8* %arrayinit.element98, align 1, !dbg !5063
  %arrayinit.element99 = getelementptr inbounds i8, i8* %arrayinit.element98, i64 1, !dbg !5063
  store i8 1, i8* %arrayinit.element99, align 1, !dbg !5063
  %arrayinit.element100 = getelementptr inbounds i8, i8* %arrayinit.element99, i64 1, !dbg !5063
  store i8 8, i8* %arrayinit.element100, align 1, !dbg !5063
  %arrayinit.element101 = getelementptr inbounds i8, i8* %arrayinit.element100, i64 1, !dbg !5063
  store i8 4, i8* %arrayinit.element101, align 1, !dbg !5063
  %arrayinit.element102 = getelementptr inbounds i8, i8* %arrayinit.element101, i64 1, !dbg !5063
  store i8 1, i8* %arrayinit.element102, align 1, !dbg !5063
  %arrayinit.element103 = getelementptr inbounds i8, i8* %arrayinit.element102, i64 1, !dbg !5063
  store i8 1, i8* %arrayinit.element103, align 1, !dbg !5063
  %arrayinit.element104 = getelementptr inbounds i8, i8* %arrayinit.element103, i64 1, !dbg !5063
  store i8 1, i8* %arrayinit.element104, align 1, !dbg !5063
  %arrayinit.element105 = getelementptr inbounds i8, i8* %arrayinit.element104, i64 1, !dbg !5063
  store i8 1, i8* %arrayinit.element105, align 1, !dbg !5063
  %arrayinit.element106 = getelementptr inbounds i8, i8* %arrayinit.element105, i64 1, !dbg !5063
  store i8 7, i8* %arrayinit.element106, align 1, !dbg !5063
  %arrayinit.element107 = getelementptr inbounds i8, i8* %arrayinit.element106, i64 1, !dbg !5063
  store i8 0, i8* %arrayinit.element107, align 1, !dbg !5063
  %arrayinit.element108 = getelementptr inbounds i8, i8* %arrayinit.element107, i64 1, !dbg !5063
  store i8 0, i8* %arrayinit.element108, align 1, !dbg !5063
  %arraydecay109 = getelementptr inbounds [16 x i8], [16 x i8]* %.compoundliteral92, i32 0, i32 0, !dbg !5064
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %arraydecay109, i64 16, i32 1, i1 false), !dbg !5064
  store i32 0, i32* %retval, align 4, !dbg !5065
  br label %return, !dbg !5065

sw.default:                                       ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !5066
  br label %return, !dbg !5066

return:                                           ; preds = %sw.default, %sw.bb91, %sw.bb72, %sw.bb53, %sw.bb34, %sw.bb15, %sw.bb
  %7 = load i32, i32* %retval, align 4, !dbg !5067
  ret i32 %7, !dbg !5067
}

declare void @avio_write(%struct.AVIOContext*, i8*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @klv_encode_ber4_length(%struct.AVIOContext* %pb, i32 %len) #0 !dbg !5068 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %len.addr = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !5071, metadata !2529), !dbg !5072
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !5073, metadata !2529), !dbg !5074
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5075
  call void @avio_w8(%struct.AVIOContext* %0, i32 131), !dbg !5076
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5077
  %2 = load i32, i32* %len.addr, align 4, !dbg !5078
  call void @avio_wb24(%struct.AVIOContext* %1, i32 %2), !dbg !5079
  ret void, !dbg !5080
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_uuid(%struct.AVIOContext* %pb, i32 %type, i32 %value) #0 !dbg !5081 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %type.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !5084, metadata !2529), !dbg !5085
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5086, metadata !2529), !dbg !5087
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5088, metadata !2529), !dbg !5089
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5090
  call void @avio_write(%struct.AVIOContext* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @uuid_base, i32 0, i32 0), i32 12), !dbg !5091
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5092
  %2 = load i32, i32* %type.addr, align 4, !dbg !5093
  call void @avio_wb16(%struct.AVIOContext* %1, i32 %2), !dbg !5094
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !5095
  %4 = load i32, i32* %value.addr, align 4, !dbg !5096
  call void @avio_wb16(%struct.AVIOContext* %3, i32 %4), !dbg !5097
  ret void, !dbg !5098
}

declare void @avio_wb24(%struct.AVIOContext*, i32) #1

declare i64 @avio_seek(%struct.AVIOContext*, i64, i32) #1

; Function Attrs: nounwind uwtable
define internal i64 @mxf_write_wav_common(%struct.AVFormatContext* %s, %struct.AVStream* %st, i8* %key) #0 !dbg !5099 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %key.addr = alloca i8*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %pos = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5100, metadata !2529), !dbg !5101
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !5102, metadata !2529), !dbg !5103
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !5104, metadata !2529), !dbg !5105
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !5106, metadata !2529), !dbg !5107
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5108
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 4, !dbg !5109
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !5109
  store %struct.AVIOContext* %1, %struct.AVIOContext** %pb, align 8, !dbg !5107
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !5110, metadata !2529), !dbg !5111
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5112
  %3 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5113
  %4 = load i8*, i8** %key.addr, align 8, !dbg !5114
  %call = call i64 @mxf_write_generic_sound_common(%struct.AVFormatContext* %2, %struct.AVStream* %3, i8* %4), !dbg !5115
  store i64 %call, i64* %pos, align 8, !dbg !5111
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5116
  call void @mxf_write_local_tag(%struct.AVIOContext* %5, i32 2, i32 15626), !dbg !5117
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5118
  %7 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5119
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %7, i32 0, i32 19, !dbg !5120
  %8 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !5120
  %block_align = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %8, i32 0, i32 24, !dbg !5121
  %9 = load i32, i32* %block_align, align 8, !dbg !5121
  call void @avio_wb16(%struct.AVIOContext* %6, i32 %9), !dbg !5122
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5123
  call void @mxf_write_local_tag(%struct.AVIOContext* %10, i32 4, i32 15625), !dbg !5124
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5125
  %12 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5126
  %codecpar2 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %12, i32 0, i32 19, !dbg !5127
  %13 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar2, align 8, !dbg !5127
  %block_align3 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %13, i32 0, i32 24, !dbg !5128
  %14 = load i32, i32* %block_align3, align 8, !dbg !5128
  %15 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5129
  %codecpar4 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %15, i32 0, i32 19, !dbg !5130
  %16 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar4, align 8, !dbg !5130
  %sample_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %16, i32 0, i32 23, !dbg !5131
  %17 = load i32, i32* %sample_rate, align 4, !dbg !5131
  %mul = mul nsw i32 %14, %17, !dbg !5132
  call void @avio_wb32(%struct.AVIOContext* %11, i32 %mul), !dbg !5133
  %18 = load i64, i64* %pos, align 8, !dbg !5134
  ret i64 %18, !dbg !5135
}

; Function Attrs: nounwind uwtable
define internal i64 @mxf_write_generic_sound_common(%struct.AVFormatContext* %s, %struct.AVStream* %st, i8* %key) #0 !dbg !5136 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %key.addr = alloca i8*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %show_warnings = alloca i32, align 4
  %pos = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5137, metadata !2529), !dbg !5138
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !5139, metadata !2529), !dbg !5140
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !5141, metadata !2529), !dbg !5142
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !5143, metadata !2529), !dbg !5144
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5145
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 4, !dbg !5146
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !5146
  store %struct.AVIOContext* %1, %struct.AVIOContext** %pb, align 8, !dbg !5144
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !5147, metadata !2529), !dbg !5148
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5149
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 3, !dbg !5150
  %3 = load i8*, i8** %priv_data, align 8, !dbg !5150
  %4 = bitcast i8* %3 to %struct.MXFContext*, !dbg !5149
  store %struct.MXFContext* %4, %struct.MXFContext** %mxf, align 8, !dbg !5148
  call void @llvm.dbg.declare(metadata i32* %show_warnings, metadata !5151, metadata !2529), !dbg !5152
  %5 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !5153
  %footer_partition_offset = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %5, i32 0, i32 1, !dbg !5154
  %6 = load i64, i64* %footer_partition_offset, align 8, !dbg !5154
  %tobool = icmp ne i64 %6, 0, !dbg !5155
  %lnot = xor i1 %tobool, true, !dbg !5155
  %lnot.ext = zext i1 %lnot to i32, !dbg !5155
  store i32 %lnot.ext, i32* %show_warnings, align 4, !dbg !5152
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !5156, metadata !2529), !dbg !5157
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5158
  %8 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5159
  %9 = load i8*, i8** %key.addr, align 8, !dbg !5160
  %call = call i64 @mxf_write_generic_desc(%struct.AVFormatContext* %7, %struct.AVStream* %8, i8* %9), !dbg !5161
  store i64 %call, i64* %pos, align 8, !dbg !5157
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5162
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %10, i32 0, i32 2, !dbg !5164
  %11 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !5164
  %cmp = icmp eq %struct.AVOutputFormat* %11, @ff_mxf_opatom_muxer, !dbg !5165
  br i1 %cmp, label %if.then, label %if.end, !dbg !5166

if.then:                                          ; preds = %entry
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5167
  call void @mxf_write_local_tag(%struct.AVIOContext* %12, i32 8, i32 12290), !dbg !5169
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5170
  %14 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !5171
  %body_offset = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %14, i32 0, i32 19, !dbg !5172
  %15 = load i64, i64* %body_offset, align 8, !dbg !5172
  %16 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !5173
  %edit_unit_byte_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %16, i32 0, i32 17, !dbg !5174
  %17 = load i32, i32* %edit_unit_byte_count, align 4, !dbg !5174
  %conv = sext i32 %17 to i64, !dbg !5173
  %div = udiv i64 %15, %conv, !dbg !5175
  call void @avio_wb64(%struct.AVIOContext* %13, i64 %div), !dbg !5176
  br label %if.end, !dbg !5177

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5178
  call void @mxf_write_local_tag(%struct.AVIOContext* %18, i32 1, i32 15618), !dbg !5179
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5180
  call void @avio_w8(%struct.AVIOContext* %19, i32 1), !dbg !5181
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5182
  call void @mxf_write_local_tag(%struct.AVIOContext* %20, i32 8, i32 15619), !dbg !5183
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5184
  %22 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5185
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %22, i32 0, i32 19, !dbg !5186
  %23 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !5186
  %sample_rate = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %23, i32 0, i32 23, !dbg !5187
  %24 = load i32, i32* %sample_rate, align 4, !dbg !5187
  call void @avio_wb32(%struct.AVIOContext* %21, i32 %24), !dbg !5188
  %25 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5189
  call void @avio_wb32(%struct.AVIOContext* %25, i32 1), !dbg !5190
  %26 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5191
  %oformat2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %26, i32 0, i32 2, !dbg !5193
  %27 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat2, align 8, !dbg !5193
  %cmp3 = icmp eq %struct.AVOutputFormat* %27, @ff_mxf_d10_muxer, !dbg !5194
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !5195

if.then5:                                         ; preds = %if.end
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5196
  call void @mxf_write_local_tag(%struct.AVIOContext* %28, i32 1, i32 15620), !dbg !5198
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5199
  call void @avio_w8(%struct.AVIOContext* %29, i32 0), !dbg !5200
  br label %if.end6, !dbg !5201

if.end6:                                          ; preds = %if.then5, %if.end
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5202
  call void @mxf_write_local_tag(%struct.AVIOContext* %30, i32 4, i32 15623), !dbg !5203
  %31 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !5204
  %channel_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %31, i32 0, i32 22, !dbg !5206
  %32 = load i32, i32* %channel_count, align 4, !dbg !5206
  %cmp7 = icmp eq i32 %32, -1, !dbg !5207
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !5208

if.then9:                                         ; preds = %if.end6
  %33 = load i32, i32* %show_warnings, align 4, !dbg !5209
  %tobool10 = icmp ne i32 %33, 0, !dbg !5209
  br i1 %tobool10, label %land.lhs.true, label %if.end24, !dbg !5212

land.lhs.true:                                    ; preds = %if.then9
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5213
  %oformat11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %34, i32 0, i32 2, !dbg !5215
  %35 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat11, align 8, !dbg !5215
  %cmp12 = icmp eq %struct.AVOutputFormat* %35, @ff_mxf_d10_muxer, !dbg !5216
  br i1 %cmp12, label %land.lhs.true14, label %if.end24, !dbg !5217

land.lhs.true14:                                  ; preds = %land.lhs.true
  %36 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5218
  %codecpar15 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %36, i32 0, i32 19, !dbg !5220
  %37 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar15, align 8, !dbg !5220
  %channels = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %37, i32 0, i32 22, !dbg !5221
  %38 = load i32, i32* %channels, align 8, !dbg !5221
  %cmp16 = icmp ne i32 %38, 4, !dbg !5222
  br i1 %cmp16, label %land.lhs.true18, label %if.end24, !dbg !5223

land.lhs.true18:                                  ; preds = %land.lhs.true14
  %39 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5224
  %codecpar19 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %39, i32 0, i32 19, !dbg !5226
  %40 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar19, align 8, !dbg !5226
  %channels20 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %40, i32 0, i32 22, !dbg !5227
  %41 = load i32, i32* %channels20, align 8, !dbg !5227
  %cmp21 = icmp ne i32 %41, 8, !dbg !5228
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !5229

if.then23:                                        ; preds = %land.lhs.true18
  %42 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5230
  %43 = bitcast %struct.AVFormatContext* %42 to i8*, !dbg !5230
  call void (i8*, i32, i8*, ...) @av_log(i8* %43, i32 24, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.44, i32 0, i32 0)), !dbg !5231
  br label %if.end24, !dbg !5231

if.end24:                                         ; preds = %if.then23, %land.lhs.true18, %land.lhs.true14, %land.lhs.true, %if.then9
  %44 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5232
  %45 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5233
  %codecpar25 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %45, i32 0, i32 19, !dbg !5234
  %46 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar25, align 8, !dbg !5234
  %channels26 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %46, i32 0, i32 22, !dbg !5235
  %47 = load i32, i32* %channels26, align 8, !dbg !5235
  call void @avio_wb32(%struct.AVIOContext* %44, i32 %47), !dbg !5236
  br label %if.end56, !dbg !5237

if.else:                                          ; preds = %if.end6
  %48 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5238
  %oformat27 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %48, i32 0, i32 2, !dbg !5241
  %49 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat27, align 8, !dbg !5241
  %cmp28 = icmp eq %struct.AVOutputFormat* %49, @ff_mxf_d10_muxer, !dbg !5242
  br i1 %cmp28, label %if.then30, label %if.else52, !dbg !5238

if.then30:                                        ; preds = %if.else
  %50 = load i32, i32* %show_warnings, align 4, !dbg !5243
  %tobool31 = icmp ne i32 %50, 0, !dbg !5243
  br i1 %tobool31, label %land.lhs.true32, label %if.end39, !dbg !5246

land.lhs.true32:                                  ; preds = %if.then30
  %51 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !5247
  %channel_count33 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %51, i32 0, i32 22, !dbg !5249
  %52 = load i32, i32* %channel_count33, align 4, !dbg !5249
  %53 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5250
  %codecpar34 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %53, i32 0, i32 19, !dbg !5251
  %54 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar34, align 8, !dbg !5251
  %channels35 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %54, i32 0, i32 22, !dbg !5252
  %55 = load i32, i32* %channels35, align 8, !dbg !5252
  %cmp36 = icmp slt i32 %52, %55, !dbg !5253
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !5254

if.then38:                                        ; preds = %land.lhs.true32
  %56 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5255
  %57 = bitcast %struct.AVFormatContext* %56 to i8*, !dbg !5255
  call void (i8*, i32, i8*, ...) @av_log(i8* %57, i32 24, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.45, i32 0, i32 0)), !dbg !5256
  br label %if.end39, !dbg !5256

if.end39:                                         ; preds = %if.then38, %land.lhs.true32, %if.then30
  %58 = load i32, i32* %show_warnings, align 4, !dbg !5257
  %tobool40 = icmp ne i32 %58, 0, !dbg !5257
  br i1 %tobool40, label %land.lhs.true41, label %if.end50, !dbg !5259

land.lhs.true41:                                  ; preds = %if.end39
  %59 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !5260
  %channel_count42 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %59, i32 0, i32 22, !dbg !5262
  %60 = load i32, i32* %channel_count42, align 4, !dbg !5262
  %cmp43 = icmp ne i32 %60, 4, !dbg !5263
  br i1 %cmp43, label %land.lhs.true45, label %if.end50, !dbg !5264

land.lhs.true45:                                  ; preds = %land.lhs.true41
  %61 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !5265
  %channel_count46 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %61, i32 0, i32 22, !dbg !5267
  %62 = load i32, i32* %channel_count46, align 4, !dbg !5267
  %cmp47 = icmp ne i32 %62, 8, !dbg !5268
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !5269

if.then49:                                        ; preds = %land.lhs.true45
  %63 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5270
  %64 = bitcast %struct.AVFormatContext* %63 to i8*, !dbg !5270
  call void (i8*, i32, i8*, ...) @av_log(i8* %64, i32 24, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.46, i32 0, i32 0)), !dbg !5271
  br label %if.end50, !dbg !5271

if.end50:                                         ; preds = %if.then49, %land.lhs.true45, %land.lhs.true41, %if.end39
  %65 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5272
  %66 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !5273
  %channel_count51 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %66, i32 0, i32 22, !dbg !5274
  %67 = load i32, i32* %channel_count51, align 4, !dbg !5274
  call void @avio_wb32(%struct.AVIOContext* %65, i32 %67), !dbg !5275
  br label %if.end55, !dbg !5276

if.else52:                                        ; preds = %if.else
  %68 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5277
  %69 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5279
  %codecpar53 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %69, i32 0, i32 19, !dbg !5280
  %70 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar53, align 8, !dbg !5280
  %channels54 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %70, i32 0, i32 22, !dbg !5281
  %71 = load i32, i32* %channels54, align 8, !dbg !5281
  call void @avio_wb32(%struct.AVIOContext* %68, i32 %71), !dbg !5282
  br label %if.end55

if.end55:                                         ; preds = %if.else52, %if.end50
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end24
  %72 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5283
  call void @mxf_write_local_tag(%struct.AVIOContext* %72, i32 4, i32 15617), !dbg !5284
  %73 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !5285
  %74 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5286
  %codecpar57 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %74, i32 0, i32 19, !dbg !5287
  %75 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar57, align 8, !dbg !5287
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %75, i32 0, i32 1, !dbg !5288
  %76 = load i32, i32* %codec_id, align 4, !dbg !5288
  %call58 = call i32 @av_get_bits_per_sample(i32 %76), !dbg !5289
  call void @avio_wb32(%struct.AVIOContext* %73, i32 %call58), !dbg !5290
  %77 = load i64, i64* %pos, align 8, !dbg !5292
  ret i64 %77, !dbg !5293
}

declare void @avio_wb64(%struct.AVIOContext*, i64) #1

declare i32 @av_get_random_seed() #1

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_bswap64(i64 %x) #7 !dbg !5294 {
entry:
  %x.addr.i5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i5, metadata !2544, metadata !2529), !dbg !5297
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2544, metadata !2529), !dbg !5300
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !5302, metadata !2529), !dbg !5303
  %0 = load i64, i64* %x.addr, align 8, !dbg !5304
  %conv = trunc i64 %0 to i32, !dbg !5304
  store i32 %conv, i32* %x.addr.i, align 4, !dbg !5305
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !5306
  %shl.i = shl i32 %1, 8, !dbg !5307
  %and.i = and i32 %shl.i, 65280, !dbg !5308
  %2 = load i32, i32* %x.addr.i, align 4, !dbg !5309
  %shr.i = lshr i32 %2, 8, !dbg !5310
  %and1.i = and i32 %shr.i, 255, !dbg !5311
  %or.i = or i32 %and.i, %and1.i, !dbg !5312
  %shl2.i = shl i32 %or.i, 16, !dbg !5313
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !5314
  %shr3.i = lshr i32 %3, 16, !dbg !5315
  %shl4.i = shl i32 %shr3.i, 8, !dbg !5316
  %and5.i = and i32 %shl4.i, 65280, !dbg !5317
  %4 = load i32, i32* %x.addr.i, align 4, !dbg !5318
  %shr6.i = lshr i32 %4, 16, !dbg !5319
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !5320
  %and8.i = and i32 %shr7.i, 255, !dbg !5321
  %or9.i = or i32 %and5.i, %and8.i, !dbg !5322
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !5323
  %conv1 = zext i32 %or10.i to i64, !dbg !5324
  %shl = shl i64 %conv1, 32, !dbg !5325
  %5 = load i64, i64* %x.addr, align 8, !dbg !5326
  %shr = lshr i64 %5, 32, !dbg !5327
  %conv2 = trunc i64 %shr to i32, !dbg !5326
  store i32 %conv2, i32* %x.addr.i5, align 4, !dbg !5328
  %6 = load i32, i32* %x.addr.i5, align 4, !dbg !5329
  %shl.i6 = shl i32 %6, 8, !dbg !5330
  %and.i7 = and i32 %shl.i6, 65280, !dbg !5331
  %7 = load i32, i32* %x.addr.i5, align 4, !dbg !5332
  %shr.i8 = lshr i32 %7, 8, !dbg !5333
  %and1.i9 = and i32 %shr.i8, 255, !dbg !5334
  %or.i10 = or i32 %and.i7, %and1.i9, !dbg !5335
  %shl2.i11 = shl i32 %or.i10, 16, !dbg !5336
  %8 = load i32, i32* %x.addr.i5, align 4, !dbg !5337
  %shr3.i12 = lshr i32 %8, 16, !dbg !5338
  %shl4.i13 = shl i32 %shr3.i12, 8, !dbg !5339
  %and5.i14 = and i32 %shl4.i13, 65280, !dbg !5340
  %9 = load i32, i32* %x.addr.i5, align 4, !dbg !5341
  %shr6.i15 = lshr i32 %9, 16, !dbg !5342
  %shr7.i16 = lshr i32 %shr6.i15, 8, !dbg !5343
  %and8.i17 = and i32 %shr7.i16, 255, !dbg !5344
  %or9.i18 = or i32 %and5.i14, %and8.i17, !dbg !5345
  %or10.i19 = or i32 %shl2.i11, %or9.i18, !dbg !5346
  %conv4 = zext i32 %or10.i19 to i64, !dbg !5347
  %or = or i64 %shl, %conv4, !dbg !5348
  ret i64 %or, !dbg !5349
}

; Function Attrs: nounwind
declare %struct.tm* @gmtime_r(i64*, %struct.tm*) #8

declare i32 @av_reallocp_array(i8*, i64, i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_parse_mpeg2_frame(%struct.AVFormatContext* %s, %struct.AVStream* %st, %struct.AVPacket* %pkt, %struct.MXFIndexEntry* %e) #0 !dbg !5350 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %e.addr = alloca %struct.MXFIndexEntry*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %.compoundliteral = alloca %struct.AVRational, align 4
  %.compoundliteral110 = alloca %struct.AVRational, align 4
  %.compoundliteral115 = alloca %struct.AVRational, align 4
  %pict_type = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5351, metadata !2529), !dbg !5352
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !5353, metadata !2529), !dbg !5354
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !5355, metadata !2529), !dbg !5356
  store %struct.MXFIndexEntry* %e, %struct.MXFIndexEntry** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFIndexEntry** %e.addr, metadata !5357, metadata !2529), !dbg !5358
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !5359, metadata !2529), !dbg !5360
  %0 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5361
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %0, i32 0, i32 3, !dbg !5362
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5362
  %2 = bitcast i8* %1 to %struct.MXFStreamContext*, !dbg !5361
  store %struct.MXFStreamContext* %2, %struct.MXFStreamContext** %sc, align 8, !dbg !5360
  call void @llvm.dbg.declare(metadata i32* %c, metadata !5363, metadata !2529), !dbg !5364
  store i32 -1, i32* %c, align 4, !dbg !5364
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5365, metadata !2529), !dbg !5366
  store i32 0, i32* %i, align 4, !dbg !5367
  br label %for.cond, !dbg !5369

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !5370
  %4 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5373
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i32 0, i32 4, !dbg !5374
  %5 = load i32, i32* %size, align 8, !dbg !5374
  %sub = sub nsw i32 %5, 4, !dbg !5375
  %cmp = icmp slt i32 %3, %sub, !dbg !5376
  br i1 %cmp, label %for.body, label %for.end, !dbg !5377

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %c, align 4, !dbg !5378
  %shl = shl i32 %6, 8, !dbg !5380
  %7 = load i32, i32* %i, align 4, !dbg !5381
  %idxprom = sext i32 %7 to i64, !dbg !5382
  %8 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5382
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i32 0, i32 3, !dbg !5383
  %9 = load i8*, i8** %data, align 8, !dbg !5383
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %idxprom, !dbg !5382
  %10 = load i8, i8* %arrayidx, align 1, !dbg !5382
  %conv = zext i8 %10 to i32, !dbg !5382
  %add = add i32 %shl, %conv, !dbg !5384
  store i32 %add, i32* %c, align 4, !dbg !5385
  %11 = load i32, i32* %c, align 4, !dbg !5386
  %cmp1 = icmp eq i32 %11, 437, !dbg !5388
  br i1 %cmp1, label %if.then, label %if.else63, !dbg !5389

if.then:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !5390
  %add3 = add nsw i32 %12, 1, !dbg !5393
  %idxprom4 = sext i32 %add3 to i64, !dbg !5394
  %13 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5394
  %data5 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %13, i32 0, i32 3, !dbg !5395
  %14 = load i8*, i8** %data5, align 8, !dbg !5395
  %arrayidx6 = getelementptr inbounds i8, i8* %14, i64 %idxprom4, !dbg !5394
  %15 = load i8, i8* %arrayidx6, align 1, !dbg !5394
  %conv7 = zext i8 %15 to i32, !dbg !5394
  %and = and i32 %conv7, 240, !dbg !5396
  %cmp8 = icmp eq i32 %and, 16, !dbg !5397
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !5398

if.then10:                                        ; preds = %if.then
  %16 = load i32, i32* %i, align 4, !dbg !5399
  %add11 = add nsw i32 %16, 1, !dbg !5401
  %idxprom12 = sext i32 %add11 to i64, !dbg !5402
  %17 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5402
  %data13 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %17, i32 0, i32 3, !dbg !5403
  %18 = load i8*, i8** %data13, align 8, !dbg !5403
  %arrayidx14 = getelementptr inbounds i8, i8* %18, i64 %idxprom12, !dbg !5402
  %19 = load i8, i8* %arrayidx14, align 1, !dbg !5402
  %conv15 = zext i8 %19 to i32, !dbg !5402
  %and16 = and i32 %conv15, 7, !dbg !5404
  %20 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5405
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %20, i32 0, i32 19, !dbg !5406
  %21 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !5406
  %profile = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %21, i32 0, i32 9, !dbg !5407
  store i32 %and16, i32* %profile, align 8, !dbg !5408
  %22 = load i32, i32* %i, align 4, !dbg !5409
  %add17 = add nsw i32 %22, 2, !dbg !5410
  %idxprom18 = sext i32 %add17 to i64, !dbg !5411
  %23 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5411
  %data19 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %23, i32 0, i32 3, !dbg !5412
  %24 = load i8*, i8** %data19, align 8, !dbg !5412
  %arrayidx20 = getelementptr inbounds i8, i8* %24, i64 %idxprom18, !dbg !5411
  %25 = load i8, i8* %arrayidx20, align 1, !dbg !5411
  %conv21 = zext i8 %25 to i32, !dbg !5411
  %shr = ashr i32 %conv21, 4, !dbg !5413
  %26 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5414
  %codecpar22 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %26, i32 0, i32 19, !dbg !5415
  %27 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar22, align 8, !dbg !5415
  %level = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %27, i32 0, i32 10, !dbg !5416
  store i32 %shr, i32* %level, align 4, !dbg !5417
  %28 = load i32, i32* %i, align 4, !dbg !5418
  %add23 = add nsw i32 %28, 6, !dbg !5419
  %idxprom24 = sext i32 %add23 to i64, !dbg !5420
  %29 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5420
  %data25 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %29, i32 0, i32 3, !dbg !5421
  %30 = load i8*, i8** %data25, align 8, !dbg !5421
  %arrayidx26 = getelementptr inbounds i8, i8* %30, i64 %idxprom24, !dbg !5420
  %31 = load i8, i8* %arrayidx26, align 1, !dbg !5420
  %conv27 = zext i8 %31 to i32, !dbg !5420
  %shr28 = ashr i32 %conv27, 7, !dbg !5422
  %32 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5423
  %low_delay = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %32, i32 0, i32 21, !dbg !5424
  store i32 %shr28, i32* %low_delay, align 8, !dbg !5425
  br label %if.end62, !dbg !5426

if.else:                                          ; preds = %if.then
  %33 = load i32, i32* %i, align 4, !dbg !5427
  %add29 = add nsw i32 %33, 5, !dbg !5430
  %34 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5431
  %size30 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %34, i32 0, i32 4, !dbg !5432
  %35 = load i32, i32* %size30, align 8, !dbg !5432
  %cmp31 = icmp slt i32 %add29, %35, !dbg !5433
  br i1 %cmp31, label %land.lhs.true, label %if.end61, !dbg !5434

land.lhs.true:                                    ; preds = %if.else
  %36 = load i32, i32* %i, align 4, !dbg !5435
  %add33 = add nsw i32 %36, 1, !dbg !5437
  %idxprom34 = sext i32 %add33 to i64, !dbg !5438
  %37 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5438
  %data35 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %37, i32 0, i32 3, !dbg !5439
  %38 = load i8*, i8** %data35, align 8, !dbg !5439
  %arrayidx36 = getelementptr inbounds i8, i8* %38, i64 %idxprom34, !dbg !5438
  %39 = load i8, i8* %arrayidx36, align 1, !dbg !5438
  %conv37 = zext i8 %39 to i32, !dbg !5438
  %and38 = and i32 %conv37, 240, !dbg !5440
  %cmp39 = icmp eq i32 %and38, 128, !dbg !5441
  br i1 %cmp39, label %if.then41, label %if.end61, !dbg !5442

if.then41:                                        ; preds = %land.lhs.true
  %40 = load i32, i32* %i, align 4, !dbg !5443
  %add42 = add nsw i32 %40, 5, !dbg !5445
  %idxprom43 = sext i32 %add42 to i64, !dbg !5446
  %41 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5446
  %data44 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %41, i32 0, i32 3, !dbg !5447
  %42 = load i8*, i8** %data44, align 8, !dbg !5447
  %arrayidx45 = getelementptr inbounds i8, i8* %42, i64 %idxprom43, !dbg !5446
  %43 = load i8, i8* %arrayidx45, align 1, !dbg !5446
  %conv46 = zext i8 %43 to i32, !dbg !5446
  %and47 = and i32 %conv46, 128, !dbg !5448
  %tobool = icmp ne i32 %and47, 0, !dbg !5449
  %lnot = xor i1 %tobool, true, !dbg !5449
  %lnot.ext = zext i1 %lnot to i32, !dbg !5449
  %44 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5450
  %interlaced = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %44, i32 0, i32 5, !dbg !5451
  store i32 %lnot.ext, i32* %interlaced, align 4, !dbg !5452
  %45 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5453
  %interlaced48 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %45, i32 0, i32 5, !dbg !5455
  %46 = load i32, i32* %interlaced48, align 4, !dbg !5455
  %tobool49 = icmp ne i32 %46, 0, !dbg !5453
  br i1 %tobool49, label %if.then50, label %if.end, !dbg !5456

if.then50:                                        ; preds = %if.then41
  %47 = load i32, i32* %i, align 4, !dbg !5457
  %add51 = add nsw i32 %47, 4, !dbg !5458
  %idxprom52 = sext i32 %add51 to i64, !dbg !5459
  %48 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5459
  %data53 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %48, i32 0, i32 3, !dbg !5460
  %49 = load i8*, i8** %data53, align 8, !dbg !5460
  %arrayidx54 = getelementptr inbounds i8, i8* %49, i64 %idxprom52, !dbg !5459
  %50 = load i8, i8* %arrayidx54, align 1, !dbg !5459
  %conv55 = zext i8 %50 to i32, !dbg !5459
  %and56 = and i32 %conv55, 128, !dbg !5461
  %tobool57 = icmp ne i32 %and56, 0, !dbg !5462
  %lnot58 = xor i1 %tobool57, true, !dbg !5462
  %lnot.ext59 = zext i1 %lnot58 to i32, !dbg !5462
  %add60 = add nsw i32 1, %lnot.ext59, !dbg !5463
  %51 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5464
  %field_dominance = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %51, i32 0, i32 6, !dbg !5465
  store i32 %add60, i32* %field_dominance, align 8, !dbg !5466
  br label %if.end, !dbg !5464

if.end:                                           ; preds = %if.then50, %if.then41
  br label %for.end, !dbg !5467

if.end61:                                         ; preds = %land.lhs.true, %if.else
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then10
  br label %if.end185, !dbg !5468

if.else63:                                        ; preds = %for.body
  %52 = load i32, i32* %c, align 4, !dbg !5469
  %cmp64 = icmp eq i32 %52, 440, !dbg !5472
  br i1 %cmp64, label %if.then66, label %if.else93, !dbg !5469

if.then66:                                        ; preds = %if.else63
  %53 = load i32, i32* %i, align 4, !dbg !5473
  %add67 = add nsw i32 %53, 4, !dbg !5476
  %idxprom68 = sext i32 %add67 to i64, !dbg !5477
  %54 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5477
  %data69 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %54, i32 0, i32 3, !dbg !5478
  %55 = load i8*, i8** %data69, align 8, !dbg !5478
  %arrayidx70 = getelementptr inbounds i8, i8* %55, i64 %idxprom68, !dbg !5477
  %56 = load i8, i8* %arrayidx70, align 1, !dbg !5477
  %conv71 = zext i8 %56 to i32, !dbg !5477
  %shr72 = ashr i32 %conv71, 6, !dbg !5479
  %and73 = and i32 %shr72, 1, !dbg !5480
  %tobool74 = icmp ne i32 %and73, 0, !dbg !5480
  br i1 %tobool74, label %if.then75, label %if.else89, !dbg !5481

if.then75:                                        ; preds = %if.then66
  %57 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5482
  %seq_closed_gop = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %57, i32 0, i32 18, !dbg !5485
  %58 = load i32, i32* %seq_closed_gop, align 4, !dbg !5485
  %cmp76 = icmp eq i32 %58, -1, !dbg !5486
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !5487

if.then78:                                        ; preds = %if.then75
  %59 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5488
  %seq_closed_gop79 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %59, i32 0, i32 18, !dbg !5489
  store i32 1, i32* %seq_closed_gop79, align 4, !dbg !5490
  br label %if.end80, !dbg !5488

if.end80:                                         ; preds = %if.then78, %if.then75
  %60 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5491
  %closed_gop = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %60, i32 0, i32 14, !dbg !5492
  store i32 1, i32* %closed_gop, align 4, !dbg !5493
  %61 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %e.addr, align 8, !dbg !5494
  %flags = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %61, i32 0, i32 0, !dbg !5496
  %62 = load i8, i8* %flags, align 8, !dbg !5496
  %conv81 = zext i8 %62 to i32, !dbg !5494
  %and82 = and i32 %conv81, 64, !dbg !5497
  %tobool83 = icmp ne i32 %and82, 0, !dbg !5497
  br i1 %tobool83, label %if.then84, label %if.end88, !dbg !5498

if.then84:                                        ; preds = %if.end80
  %63 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %e.addr, align 8, !dbg !5499
  %flags85 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %63, i32 0, i32 0, !dbg !5500
  %64 = load i8, i8* %flags85, align 8, !dbg !5501
  %conv86 = zext i8 %64 to i32, !dbg !5501
  %or = or i32 %conv86, 128, !dbg !5501
  %conv87 = trunc i32 %or to i8, !dbg !5501
  store i8 %conv87, i8* %flags85, align 8, !dbg !5501
  br label %if.end88, !dbg !5499

if.end88:                                         ; preds = %if.then84, %if.end80
  br label %if.end92, !dbg !5502

if.else89:                                        ; preds = %if.then66
  %65 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5503
  %seq_closed_gop90 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %65, i32 0, i32 18, !dbg !5505
  store i32 0, i32* %seq_closed_gop90, align 4, !dbg !5506
  %66 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5507
  %closed_gop91 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %66, i32 0, i32 14, !dbg !5508
  store i32 0, i32* %closed_gop91, align 4, !dbg !5509
  br label %if.end92

if.end92:                                         ; preds = %if.else89, %if.end88
  br label %if.end184, !dbg !5510

if.else93:                                        ; preds = %if.else63
  %67 = load i32, i32* %c, align 4, !dbg !5511
  %cmp94 = icmp eq i32 %67, 435, !dbg !5514
  br i1 %cmp94, label %if.then96, label %if.else126, !dbg !5511

if.then96:                                        ; preds = %if.else93
  %68 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %e.addr, align 8, !dbg !5515
  %flags97 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %68, i32 0, i32 0, !dbg !5517
  %69 = load i8, i8* %flags97, align 8, !dbg !5518
  %conv98 = zext i8 %69 to i32, !dbg !5518
  %or99 = or i32 %conv98, 64, !dbg !5518
  %conv100 = trunc i32 %or99 to i8, !dbg !5518
  store i8 %conv100, i8* %flags97, align 8, !dbg !5518
  %70 = load i32, i32* %i, align 4, !dbg !5519
  %add101 = add nsw i32 %70, 4, !dbg !5520
  %idxprom102 = sext i32 %add101 to i64, !dbg !5521
  %71 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5521
  %data103 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %71, i32 0, i32 3, !dbg !5522
  %72 = load i8*, i8** %data103, align 8, !dbg !5522
  %arrayidx104 = getelementptr inbounds i8, i8* %72, i64 %idxprom102, !dbg !5521
  %73 = load i8, i8* %arrayidx104, align 1, !dbg !5521
  %conv105 = zext i8 %73 to i32, !dbg !5521
  %shr106 = ashr i32 %conv105, 4, !dbg !5523
  %and107 = and i32 %shr106, 15, !dbg !5524
  switch i32 %and107, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb108
    i32 4, label %sw.bb113
  ], !dbg !5525

sw.bb:                                            ; preds = %if.then96
  %74 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5526
  %aspect_ratio = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %74, i32 0, i32 13, !dbg !5528
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !5529
  store i32 4, i32* %num, align 4, !dbg !5529
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !5529
  store i32 3, i32* %den, align 4, !dbg !5529
  %75 = bitcast %struct.AVRational* %aspect_ratio to i8*, !dbg !5530
  %76 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !5530
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 8, i32 4, i1 false), !dbg !5530
  br label %sw.epilog, !dbg !5531

sw.bb108:                                         ; preds = %if.then96
  %77 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5532
  %aspect_ratio109 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %77, i32 0, i32 13, !dbg !5533
  %num111 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral110, i32 0, i32 0, !dbg !5534
  store i32 16, i32* %num111, align 4, !dbg !5534
  %den112 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral110, i32 0, i32 1, !dbg !5534
  store i32 9, i32* %den112, align 4, !dbg !5534
  %78 = bitcast %struct.AVRational* %aspect_ratio109 to i8*, !dbg !5535
  %79 = bitcast %struct.AVRational* %.compoundliteral110 to i8*, !dbg !5535
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 8, i32 4, i1 false), !dbg !5535
  br label %sw.epilog, !dbg !5536

sw.bb113:                                         ; preds = %if.then96
  %80 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5537
  %aspect_ratio114 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %80, i32 0, i32 13, !dbg !5538
  %num116 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral115, i32 0, i32 0, !dbg !5539
  store i32 221, i32* %num116, align 4, !dbg !5539
  %den117 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral115, i32 0, i32 1, !dbg !5539
  store i32 100, i32* %den117, align 4, !dbg !5539
  %81 = bitcast %struct.AVRational* %aspect_ratio114 to i8*, !dbg !5540
  %82 = bitcast %struct.AVRational* %.compoundliteral115 to i8*, !dbg !5540
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %82, i64 8, i32 4, i1 false), !dbg !5540
  br label %sw.epilog, !dbg !5541

sw.default:                                       ; preds = %if.then96
  %83 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5542
  %aspect_ratio118 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %83, i32 0, i32 13, !dbg !5543
  %num119 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect_ratio118, i32 0, i32 0, !dbg !5544
  %84 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5545
  %aspect_ratio120 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %84, i32 0, i32 13, !dbg !5546
  %den121 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect_ratio120, i32 0, i32 1, !dbg !5547
  %85 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5548
  %codecpar122 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %85, i32 0, i32 19, !dbg !5549
  %86 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar122, align 8, !dbg !5549
  %width = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %86, i32 0, i32 11, !dbg !5550
  %87 = load i32, i32* %width, align 8, !dbg !5550
  %conv123 = sext i32 %87 to i64, !dbg !5548
  %88 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5551
  %codecpar124 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %88, i32 0, i32 19, !dbg !5552
  %89 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar124, align 8, !dbg !5552
  %height = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %89, i32 0, i32 12, !dbg !5553
  %90 = load i32, i32* %height, align 4, !dbg !5553
  %conv125 = sext i32 %90 to i64, !dbg !5551
  %call = call i32 @av_reduce(i32* %num119, i32* %den121, i64 %conv123, i64 %conv125, i64 1048576), !dbg !5554
  br label %sw.epilog, !dbg !5555

sw.epilog:                                        ; preds = %sw.default, %sw.bb113, %sw.bb108, %sw.bb
  br label %if.end183, !dbg !5556

if.else126:                                       ; preds = %if.else93
  %91 = load i32, i32* %c, align 4, !dbg !5557
  %cmp127 = icmp eq i32 %91, 256, !dbg !5560
  br i1 %cmp127, label %if.then129, label %if.end182, !dbg !5557

if.then129:                                       ; preds = %if.else126
  call void @llvm.dbg.declare(metadata i32* %pict_type, metadata !5561, metadata !2529), !dbg !5563
  %92 = load i32, i32* %i, align 4, !dbg !5564
  %add130 = add nsw i32 %92, 2, !dbg !5565
  %idxprom131 = sext i32 %add130 to i64, !dbg !5566
  %93 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5566
  %data132 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %93, i32 0, i32 3, !dbg !5567
  %94 = load i8*, i8** %data132, align 8, !dbg !5567
  %arrayidx133 = getelementptr inbounds i8, i8* %94, i64 %idxprom131, !dbg !5566
  %95 = load i8, i8* %arrayidx133, align 1, !dbg !5566
  %conv134 = zext i8 %95 to i32, !dbg !5566
  %shr135 = ashr i32 %conv134, 3, !dbg !5568
  %and136 = and i32 %shr135, 7, !dbg !5569
  store i32 %and136, i32* %pict_type, align 4, !dbg !5563
  %96 = load i32, i32* %i, align 4, !dbg !5570
  %add137 = add nsw i32 %96, 1, !dbg !5571
  %idxprom138 = sext i32 %add137 to i64, !dbg !5572
  %97 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5572
  %data139 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %97, i32 0, i32 3, !dbg !5573
  %98 = load i8*, i8** %data139, align 8, !dbg !5573
  %arrayidx140 = getelementptr inbounds i8, i8* %98, i64 %idxprom138, !dbg !5572
  %99 = load i8, i8* %arrayidx140, align 1, !dbg !5572
  %conv141 = zext i8 %99 to i32, !dbg !5572
  %shl142 = shl i32 %conv141, 2, !dbg !5574
  %100 = load i32, i32* %i, align 4, !dbg !5575
  %add143 = add nsw i32 %100, 2, !dbg !5576
  %idxprom144 = sext i32 %add143 to i64, !dbg !5577
  %101 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5577
  %data145 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %101, i32 0, i32 3, !dbg !5578
  %102 = load i8*, i8** %data145, align 8, !dbg !5578
  %arrayidx146 = getelementptr inbounds i8, i8* %102, i64 %idxprom144, !dbg !5577
  %103 = load i8, i8* %arrayidx146, align 1, !dbg !5577
  %conv147 = zext i8 %103 to i32, !dbg !5577
  %shr148 = ashr i32 %conv147, 6, !dbg !5579
  %or149 = or i32 %shl142, %shr148, !dbg !5580
  %conv150 = trunc i32 %or149 to i16, !dbg !5581
  %104 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %e.addr, align 8, !dbg !5582
  %temporal_ref = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %104, i32 0, i32 3, !dbg !5583
  store i16 %conv150, i16* %temporal_ref, align 4, !dbg !5584
  %105 = load i32, i32* %pict_type, align 4, !dbg !5585
  %cmp151 = icmp eq i32 %105, 2, !dbg !5587
  br i1 %cmp151, label %if.then153, label %if.else159, !dbg !5588

if.then153:                                       ; preds = %if.then129
  %106 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %e.addr, align 8, !dbg !5589
  %flags154 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %106, i32 0, i32 0, !dbg !5591
  %107 = load i8, i8* %flags154, align 8, !dbg !5592
  %conv155 = zext i8 %107 to i32, !dbg !5592
  %or156 = or i32 %conv155, 34, !dbg !5592
  %conv157 = trunc i32 %or156 to i8, !dbg !5592
  store i8 %conv157, i8* %flags154, align 8, !dbg !5592
  %108 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5593
  %closed_gop158 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %108, i32 0, i32 14, !dbg !5594
  store i32 0, i32* %closed_gop158, align 4, !dbg !5595
  br label %if.end181, !dbg !5596

if.else159:                                       ; preds = %if.then129
  %109 = load i32, i32* %pict_type, align 4, !dbg !5597
  %cmp160 = icmp eq i32 %109, 3, !dbg !5600
  br i1 %cmp160, label %if.then162, label %if.else176, !dbg !5597

if.then162:                                       ; preds = %if.else159
  %110 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5601
  %closed_gop163 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %110, i32 0, i32 14, !dbg !5604
  %111 = load i32, i32* %closed_gop163, align 4, !dbg !5604
  %tobool164 = icmp ne i32 %111, 0, !dbg !5601
  br i1 %tobool164, label %if.then165, label %if.else170, !dbg !5605

if.then165:                                       ; preds = %if.then162
  %112 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %e.addr, align 8, !dbg !5606
  %flags166 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %112, i32 0, i32 0, !dbg !5607
  %113 = load i8, i8* %flags166, align 8, !dbg !5608
  %conv167 = zext i8 %113 to i32, !dbg !5608
  %or168 = or i32 %conv167, 19, !dbg !5608
  %conv169 = trunc i32 %or168 to i8, !dbg !5608
  store i8 %conv169, i8* %flags166, align 8, !dbg !5608
  br label %if.end175, !dbg !5606

if.else170:                                       ; preds = %if.then162
  %114 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %e.addr, align 8, !dbg !5609
  %flags171 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %114, i32 0, i32 0, !dbg !5610
  %115 = load i8, i8* %flags171, align 8, !dbg !5611
  %conv172 = zext i8 %115 to i32, !dbg !5611
  %or173 = or i32 %conv172, 51, !dbg !5611
  %conv174 = trunc i32 %or173 to i8, !dbg !5611
  store i8 %conv174, i8* %flags171, align 8, !dbg !5611
  br label %if.end175

if.end175:                                        ; preds = %if.else170, %if.then165
  %116 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5612
  %temporal_reordering = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %116, i32 0, i32 12, !dbg !5613
  store i32 -1, i32* %temporal_reordering, align 8, !dbg !5614
  br label %if.end180, !dbg !5615

if.else176:                                       ; preds = %if.else159
  %117 = load i32, i32* %pict_type, align 4, !dbg !5616
  %tobool177 = icmp ne i32 %117, 0, !dbg !5616
  br i1 %tobool177, label %if.end179, label %if.then178, !dbg !5619

if.then178:                                       ; preds = %if.else176
  %118 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5620
  %119 = bitcast %struct.AVFormatContext* %118 to i8*, !dbg !5620
  call void (i8*, i32, i8*, ...) @av_log(i8* %119, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.55, i32 0, i32 0)), !dbg !5622
  store i32 0, i32* %retval, align 4, !dbg !5623
  br label %return, !dbg !5623

if.end179:                                        ; preds = %if.else176
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %if.end175
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.then153
  br label %if.end182, !dbg !5624

if.end182:                                        ; preds = %if.end181, %if.else126
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %sw.epilog
  br label %if.end184

if.end184:                                        ; preds = %if.end183, %if.end92
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %if.end62
  br label %for.inc, !dbg !5625

for.inc:                                          ; preds = %if.end185
  %120 = load i32, i32* %i, align 4, !dbg !5626
  %inc = add nsw i32 %120, 1, !dbg !5626
  store i32 %inc, i32* %i, align 4, !dbg !5626
  br label %for.cond, !dbg !5628, !llvm.loop !5629

for.end:                                          ; preds = %if.end, %for.cond
  %121 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5631
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %121, i32 0, i32 2, !dbg !5633
  %122 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !5633
  %cmp186 = icmp ne %struct.AVOutputFormat* %122, @ff_mxf_d10_muxer, !dbg !5634
  br i1 %cmp186, label %if.then188, label %if.end191, !dbg !5635

if.then188:                                       ; preds = %for.end
  %123 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5636
  %codecpar189 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %123, i32 0, i32 19, !dbg !5637
  %124 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar189, align 8, !dbg !5637
  %call190 = call [16 x i8]* @mxf_get_mpeg2_codec_ul(%struct.AVCodecParameters* %124), !dbg !5638
  %125 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5639
  %codec_ul = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %125, i32 0, i32 3, !dbg !5640
  store [16 x i8]* %call190, [16 x i8]** %codec_ul, align 8, !dbg !5641
  br label %if.end191, !dbg !5639

if.end191:                                        ; preds = %if.then188, %for.end
  %126 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5642
  %codec_ul192 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %126, i32 0, i32 3, !dbg !5643
  %127 = load [16 x i8]*, [16 x i8]** %codec_ul192, align 8, !dbg !5643
  %tobool193 = icmp ne [16 x i8]* %127, null, !dbg !5644
  %lnot194 = xor i1 %tobool193, true, !dbg !5644
  %lnot196 = xor i1 %lnot194, true, !dbg !5645
  %lnot.ext197 = zext i1 %lnot196 to i32, !dbg !5645
  store i32 %lnot.ext197, i32* %retval, align 4, !dbg !5646
  br label %return, !dbg !5646

return:                                           ; preds = %if.end191, %if.then178
  %128 = load i32, i32* %retval, align 4, !dbg !5647
  ret i32 %128, !dbg !5647
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_parse_dnxhd_frame(%struct.AVFormatContext* %s, %struct.AVStream* %st, %struct.AVPacket* %pkt) #0 !dbg !5648 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2544, metadata !2529), !dbg !5651
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  %i = alloca i32, align 4
  %cid = alloca i32, align 4
  %frame_size = alloca i32, align 4
  %.compoundliteral = alloca %struct.AVRational, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5653, metadata !2529), !dbg !5654
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !5655, metadata !2529), !dbg !5656
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !5657, metadata !2529), !dbg !5658
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !5659, metadata !2529), !dbg !5660
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5661
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !5662
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5662
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !5661
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !5660
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !5663, metadata !2529), !dbg !5664
  %3 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5665
  %priv_data1 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %3, i32 0, i32 3, !dbg !5666
  %4 = load i8*, i8** %priv_data1, align 8, !dbg !5666
  %5 = bitcast i8* %4 to %struct.MXFStreamContext*, !dbg !5665
  store %struct.MXFStreamContext* %5, %struct.MXFStreamContext** %sc, align 8, !dbg !5664
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5667, metadata !2529), !dbg !5668
  call void @llvm.dbg.declare(metadata i32* %cid, metadata !5669, metadata !2529), !dbg !5670
  call void @llvm.dbg.declare(metadata i32* %frame_size, metadata !5671, metadata !2529), !dbg !5672
  store i32 0, i32* %frame_size, align 4, !dbg !5672
  %6 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !5673
  %header_written = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %6, i32 0, i32 4, !dbg !5675
  %7 = load i32, i32* %header_written, align 4, !dbg !5675
  %tobool = icmp ne i32 %7, 0, !dbg !5673
  br i1 %tobool, label %if.then, label %if.end, !dbg !5676

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5677
  br label %return, !dbg !5677

if.end:                                           ; preds = %entry
  %8 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5678
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i32 0, i32 4, !dbg !5680
  %9 = load i32, i32* %size, align 8, !dbg !5680
  %cmp = icmp slt i32 %9, 43, !dbg !5681
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5682

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5683
  br label %return, !dbg !5683

if.end3:                                          ; preds = %if.end
  %10 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5684
  %codec_ul = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %10, i32 0, i32 3, !dbg !5685
  store [16 x i8]* null, [16 x i8]** %codec_ul, align 8, !dbg !5686
  %11 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5687
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %11, i32 0, i32 3, !dbg !5688
  %12 = load i8*, i8** %data, align 8, !dbg !5688
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 40, !dbg !5689
  %13 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !5690
  %l = bitcast %union.unaligned_32* %13 to i32*, !dbg !5690
  %14 = load i32, i32* %l, align 1, !dbg !5690
  store i32 %14, i32* %x.addr.i, align 4, !dbg !5691
  %15 = load i32, i32* %x.addr.i, align 4, !dbg !5692
  %shl.i = shl i32 %15, 8, !dbg !5693
  %and.i = and i32 %shl.i, 65280, !dbg !5694
  %16 = load i32, i32* %x.addr.i, align 4, !dbg !5695
  %shr.i = lshr i32 %16, 8, !dbg !5696
  %and1.i = and i32 %shr.i, 255, !dbg !5697
  %or.i = or i32 %and.i, %and1.i, !dbg !5698
  %shl2.i = shl i32 %or.i, 16, !dbg !5699
  %17 = load i32, i32* %x.addr.i, align 4, !dbg !5700
  %shr3.i = lshr i32 %17, 16, !dbg !5701
  %shl4.i = shl i32 %shr3.i, 8, !dbg !5702
  %and5.i = and i32 %shl4.i, 65280, !dbg !5703
  %18 = load i32, i32* %x.addr.i, align 4, !dbg !5704
  %shr6.i = lshr i32 %18, 16, !dbg !5705
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !5706
  %and8.i = and i32 %shr7.i, 255, !dbg !5707
  %or9.i = or i32 %and5.i, %and8.i, !dbg !5708
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !5709
  store i32 %or10.i, i32* %cid, align 4, !dbg !5710
  store i32 0, i32* %i, align 4, !dbg !5711
  br label %for.cond, !dbg !5713

for.cond:                                         ; preds = %for.inc, %if.end3
  %19 = load i32, i32* %i, align 4, !dbg !5714
  %conv = sext i32 %19 to i64, !dbg !5714
  %cmp4 = icmp ult i64 %conv, 20, !dbg !5717
  br i1 %cmp4, label %for.body, label %for.end, !dbg !5718

for.body:                                         ; preds = %for.cond
  %20 = load i32, i32* %cid, align 4, !dbg !5719
  %21 = load i32, i32* %i, align 4, !dbg !5722
  %idxprom = sext i32 %21 to i64, !dbg !5723
  %arrayidx = getelementptr inbounds [20 x %struct.anon.2], [20 x %struct.anon.2]* @mxf_dnxhd_codec_uls, i64 0, i64 %idxprom, !dbg !5723
  %cid6 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx, i32 0, i32 0, !dbg !5724
  %22 = load i32, i32* %cid6, align 4, !dbg !5724
  %cmp7 = icmp eq i32 %20, %22, !dbg !5725
  br i1 %cmp7, label %if.then9, label %if.end14, !dbg !5726

if.then9:                                         ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !5727
  %idxprom10 = sext i32 %23 to i64, !dbg !5729
  %arrayidx11 = getelementptr inbounds [20 x %struct.anon.2], [20 x %struct.anon.2]* @mxf_dnxhd_codec_uls, i64 0, i64 %idxprom10, !dbg !5729
  %codec_ul12 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %arrayidx11, i32 0, i32 1, !dbg !5730
  %24 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5731
  %codec_ul13 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %24, i32 0, i32 3, !dbg !5732
  store [16 x i8]* %codec_ul12, [16 x i8]** %codec_ul13, align 8, !dbg !5733
  br label %for.end, !dbg !5734

if.end14:                                         ; preds = %for.body
  br label %for.inc, !dbg !5735

for.inc:                                          ; preds = %if.end14
  %25 = load i32, i32* %i, align 4, !dbg !5736
  %inc = add nsw i32 %25, 1, !dbg !5736
  store i32 %inc, i32* %i, align 4, !dbg !5736
  br label %for.cond, !dbg !5738, !llvm.loop !5739

for.end:                                          ; preds = %if.then9, %for.cond
  %26 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5741
  %codec_ul15 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %26, i32 0, i32 3, !dbg !5743
  %27 = load [16 x i8]*, [16 x i8]** %codec_ul15, align 8, !dbg !5743
  %tobool16 = icmp ne [16 x i8]* %27, null, !dbg !5741
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !5744

if.then17:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !5745
  br label %return, !dbg !5745

if.end18:                                         ; preds = %for.end
  %28 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5746
  %component_depth = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %28, i32 0, i32 7, !dbg !5747
  store i32 0, i32* %component_depth, align 4, !dbg !5748
  %29 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5749
  %data19 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %29, i32 0, i32 3, !dbg !5750
  %30 = load i8*, i8** %data19, align 8, !dbg !5750
  %arrayidx20 = getelementptr inbounds i8, i8* %30, i64 33, !dbg !5749
  %31 = load i8, i8* %arrayidx20, align 1, !dbg !5749
  %conv21 = zext i8 %31 to i32, !dbg !5749
  %shr = ashr i32 %conv21, 5, !dbg !5751
  switch i32 %shr, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb23
    i32 3, label %sw.bb25
  ], !dbg !5752

sw.bb:                                            ; preds = %if.end18
  %32 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5753
  %component_depth22 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %32, i32 0, i32 7, !dbg !5755
  store i32 8, i32* %component_depth22, align 4, !dbg !5756
  br label %sw.epilog, !dbg !5757

sw.bb23:                                          ; preds = %if.end18
  %33 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5758
  %component_depth24 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %33, i32 0, i32 7, !dbg !5759
  store i32 10, i32* %component_depth24, align 4, !dbg !5760
  br label %sw.epilog, !dbg !5761

sw.bb25:                                          ; preds = %if.end18
  %34 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5762
  %component_depth26 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %34, i32 0, i32 7, !dbg !5763
  store i32 12, i32* %component_depth26, align 4, !dbg !5764
  br label %sw.epilog, !dbg !5765

sw.epilog:                                        ; preds = %if.end18, %sw.bb25, %sw.bb23, %sw.bb
  %35 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5766
  %component_depth27 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %35, i32 0, i32 7, !dbg !5768
  %36 = load i32, i32* %component_depth27, align 4, !dbg !5768
  %tobool28 = icmp ne i32 %36, 0, !dbg !5766
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !5769

if.then29:                                        ; preds = %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !5770
  br label %return, !dbg !5770

if.end30:                                         ; preds = %sw.epilog
  %37 = load i32, i32* %cid, align 4, !dbg !5771
  %call31 = call i32 @avpriv_dnxhd_get_frame_size(i32 %37), !dbg !5773
  store i32 %call31, i32* %frame_size, align 4, !dbg !5774
  %cmp32 = icmp eq i32 %call31, 0, !dbg !5775
  br i1 %cmp32, label %if.then34, label %if.end37, !dbg !5776

if.then34:                                        ; preds = %if.end30
  %38 = load i32, i32* %cid, align 4, !dbg !5777
  %39 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5779
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %39, i32 0, i32 19, !dbg !5780
  %40 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !5780
  %width = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %40, i32 0, i32 11, !dbg !5781
  %41 = load i32, i32* %width, align 8, !dbg !5781
  %42 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5782
  %codecpar35 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %42, i32 0, i32 19, !dbg !5783
  %43 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar35, align 8, !dbg !5783
  %height = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %43, i32 0, i32 12, !dbg !5784
  %44 = load i32, i32* %height, align 4, !dbg !5784
  %call36 = call i32 @avpriv_dnxhd_get_hr_frame_size(i32 %38, i32 %41, i32 %44), !dbg !5785
  store i32 %call36, i32* %frame_size, align 4, !dbg !5786
  br label %if.end37, !dbg !5787

if.end37:                                         ; preds = %if.then34, %if.end30
  %45 = load i32, i32* %frame_size, align 4, !dbg !5788
  %cmp38 = icmp slt i32 %45, 0, !dbg !5790
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !5791

if.then40:                                        ; preds = %if.end37
  store i32 0, i32* %retval, align 4, !dbg !5792
  br label %return, !dbg !5792

if.end41:                                         ; preds = %if.end37
  %46 = load i32, i32* %cid, align 4, !dbg !5793
  %call42 = call i32 @avpriv_dnxhd_get_interlaced(i32 %46), !dbg !5795
  %47 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5796
  %interlaced = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %47, i32 0, i32 5, !dbg !5797
  store i32 %call42, i32* %interlaced, align 4, !dbg !5798
  %cmp43 = icmp slt i32 %call42, 0, !dbg !5799
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !5800

if.then45:                                        ; preds = %if.end41
  store i32 0, i32* %retval, align 4, !dbg !5801
  br label %return, !dbg !5801

if.end46:                                         ; preds = %if.end41
  %48 = load i32, i32* %cid, align 4, !dbg !5802
  %cmp47 = icmp sge i32 %48, 1270, !dbg !5804
  br i1 %cmp47, label %if.then49, label %if.else, !dbg !5805

if.then49:                                        ; preds = %if.end46
  %49 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5806
  %aspect_ratio = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %49, i32 0, i32 13, !dbg !5808
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect_ratio, i32 0, i32 0, !dbg !5809
  %50 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5810
  %aspect_ratio50 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %50, i32 0, i32 13, !dbg !5811
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect_ratio50, i32 0, i32 1, !dbg !5812
  %51 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5813
  %codecpar51 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %51, i32 0, i32 19, !dbg !5814
  %52 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar51, align 8, !dbg !5814
  %width52 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %52, i32 0, i32 11, !dbg !5815
  %53 = load i32, i32* %width52, align 8, !dbg !5815
  %conv53 = sext i32 %53 to i64, !dbg !5813
  %54 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5816
  %codecpar54 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %54, i32 0, i32 19, !dbg !5817
  %55 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar54, align 8, !dbg !5817
  %height55 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %55, i32 0, i32 12, !dbg !5818
  %56 = load i32, i32* %height55, align 4, !dbg !5818
  %conv56 = sext i32 %56 to i64, !dbg !5816
  %call57 = call i32 @av_reduce(i32* %num, i32* %den, i64 %conv53, i64 %conv56, i64 2147483647), !dbg !5819
  br label %if.end61, !dbg !5820

if.else:                                          ; preds = %if.end46
  %57 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5821
  %aspect_ratio58 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %57, i32 0, i32 13, !dbg !5823
  %num59 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !5824
  store i32 16, i32* %num59, align 4, !dbg !5824
  %den60 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !5824
  store i32 9, i32* %den60, align 4, !dbg !5824
  %58 = bitcast %struct.AVRational* %aspect_ratio58 to i8*, !dbg !5825
  %59 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !5825
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 8, i32 4, i1 false), !dbg !5825
  br label %if.end61

if.end61:                                         ; preds = %if.else, %if.then49
  %60 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5826
  %size62 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %60, i32 0, i32 4, !dbg !5827
  %61 = load i32, i32* %size62, align 8, !dbg !5827
  %62 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5828
  %frame_size63 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %62, i32 0, i32 17, !dbg !5829
  store i32 %61, i32* %frame_size63, align 8, !dbg !5830
  store i32 1, i32* %retval, align 4, !dbg !5831
  br label %return, !dbg !5831

return:                                           ; preds = %if.end61, %if.then45, %if.then40, %if.then29, %if.then17, %if.then2, %if.then
  %63 = load i32, i32* %retval, align 4, !dbg !5832
  ret i32 %63, !dbg !5832
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_parse_prores_frame(%struct.AVFormatContext* %s, %struct.AVStream* %st, %struct.AVPacket* %pkt) #0 !dbg !5833 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  %i = alloca i32, align 4
  %profile = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5834, metadata !2529), !dbg !5835
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !5836, metadata !2529), !dbg !5837
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !5838, metadata !2529), !dbg !5839
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !5840, metadata !2529), !dbg !5841
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5842
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !5843
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5843
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !5842
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !5841
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !5844, metadata !2529), !dbg !5845
  %3 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5846
  %priv_data1 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %3, i32 0, i32 3, !dbg !5847
  %4 = load i8*, i8** %priv_data1, align 8, !dbg !5847
  %5 = bitcast i8* %4 to %struct.MXFStreamContext*, !dbg !5846
  store %struct.MXFStreamContext* %5, %struct.MXFStreamContext** %sc, align 8, !dbg !5845
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5848, metadata !2529), !dbg !5849
  call void @llvm.dbg.declare(metadata i32* %profile, metadata !5850, metadata !2529), !dbg !5851
  %6 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !5852
  %header_written = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %6, i32 0, i32 4, !dbg !5854
  %7 = load i32, i32* %header_written, align 4, !dbg !5854
  %tobool = icmp ne i32 %7, 0, !dbg !5852
  br i1 %tobool, label %if.then, label %if.end, !dbg !5855

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5856
  br label %return, !dbg !5856

if.end:                                           ; preds = %entry
  %8 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5857
  %codec_ul = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %8, i32 0, i32 3, !dbg !5858
  store [16 x i8]* null, [16 x i8]** %codec_ul, align 8, !dbg !5859
  %9 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5860
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %9, i32 0, i32 19, !dbg !5861
  %10 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !5861
  %profile2 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %10, i32 0, i32 9, !dbg !5862
  %11 = load i32, i32* %profile2, align 8, !dbg !5862
  store i32 %11, i32* %profile, align 4, !dbg !5863
  store i32 0, i32* %i, align 4, !dbg !5864
  br label %for.cond, !dbg !5866

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !5867
  %conv = sext i32 %12 to i64, !dbg !5867
  %cmp = icmp ult i64 %conv, 6, !dbg !5870
  br i1 %cmp, label %for.body, label %for.end, !dbg !5871

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %profile, align 4, !dbg !5872
  %14 = load i32, i32* %i, align 4, !dbg !5875
  %idxprom = sext i32 %14 to i64, !dbg !5876
  %arrayidx = getelementptr inbounds [6 x %struct.anon.3], [6 x %struct.anon.3]* @mxf_prores_codec_uls, i64 0, i64 %idxprom, !dbg !5876
  %profile4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %arrayidx, i32 0, i32 0, !dbg !5877
  %15 = load i32, i32* %profile4, align 4, !dbg !5877
  %cmp5 = icmp eq i32 %13, %15, !dbg !5878
  br i1 %cmp5, label %if.then7, label %if.end12, !dbg !5879

if.then7:                                         ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !5880
  %idxprom8 = sext i32 %16 to i64, !dbg !5882
  %arrayidx9 = getelementptr inbounds [6 x %struct.anon.3], [6 x %struct.anon.3]* @mxf_prores_codec_uls, i64 0, i64 %idxprom8, !dbg !5882
  %codec_ul10 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %arrayidx9, i32 0, i32 1, !dbg !5883
  %17 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5884
  %codec_ul11 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %17, i32 0, i32 3, !dbg !5885
  store [16 x i8]* %codec_ul10, [16 x i8]** %codec_ul11, align 8, !dbg !5886
  br label %for.end, !dbg !5887

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !5888

for.inc:                                          ; preds = %if.end12
  %18 = load i32, i32* %i, align 4, !dbg !5889
  %inc = add nsw i32 %18, 1, !dbg !5889
  store i32 %inc, i32* %i, align 4, !dbg !5889
  br label %for.cond, !dbg !5891, !llvm.loop !5892

for.end:                                          ; preds = %if.then7, %for.cond
  %19 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5894
  %codec_ul13 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %19, i32 0, i32 3, !dbg !5896
  %20 = load [16 x i8]*, [16 x i8]** %codec_ul13, align 8, !dbg !5896
  %tobool14 = icmp ne [16 x i8]* %20, null, !dbg !5894
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !5897

if.then15:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !5898
  br label %return, !dbg !5898

if.end16:                                         ; preds = %for.end
  %21 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5899
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %21, i32 0, i32 4, !dbg !5900
  %22 = load i32, i32* %size, align 8, !dbg !5900
  %23 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !5901
  %frame_size = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %23, i32 0, i32 17, !dbg !5902
  store i32 %22, i32* %frame_size, align 8, !dbg !5903
  store i32 1, i32* %retval, align 4, !dbg !5904
  br label %return, !dbg !5904

return:                                           ; preds = %if.end16, %if.then15, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !5905
  ret i32 %24, !dbg !5905
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_parse_dv_frame(%struct.AVFormatContext* %s, %struct.AVStream* %st, %struct.AVPacket* %pkt) #0 !dbg !5906 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  %vs_pack = alloca i8*, align 8
  %vsc_pack = alloca i8*, align 8
  %ul_index = alloca i32, align 4
  %stype = alloca i32, align 4
  %pal = alloca i32, align 4
  %profile = alloca %struct.AVDVProfile*, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  %.compoundliteral20 = alloca %struct.AVRational, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !5907, metadata !2529), !dbg !5908
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !5909, metadata !2529), !dbg !5910
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !5911, metadata !2529), !dbg !5912
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !5913, metadata !2529), !dbg !5914
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !5915
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !5916
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5916
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !5915
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !5914
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !5917, metadata !2529), !dbg !5918
  %3 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5919
  %priv_data1 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %3, i32 0, i32 3, !dbg !5920
  %4 = load i8*, i8** %priv_data1, align 8, !dbg !5920
  %5 = bitcast i8* %4 to %struct.MXFStreamContext*, !dbg !5919
  store %struct.MXFStreamContext* %5, %struct.MXFStreamContext** %sc, align 8, !dbg !5918
  call void @llvm.dbg.declare(metadata i8** %vs_pack, metadata !5921, metadata !2529), !dbg !5922
  call void @llvm.dbg.declare(metadata i8** %vsc_pack, metadata !5923, metadata !2529), !dbg !5924
  call void @llvm.dbg.declare(metadata i32* %ul_index, metadata !5925, metadata !2529), !dbg !5926
  call void @llvm.dbg.declare(metadata i32* %stype, metadata !5927, metadata !2529), !dbg !5928
  call void @llvm.dbg.declare(metadata i32* %pal, metadata !5929, metadata !2529), !dbg !5930
  call void @llvm.dbg.declare(metadata %struct.AVDVProfile** %profile, metadata !5931, metadata !2529), !dbg !5960
  %6 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !5961
  %header_written = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %6, i32 0, i32 4, !dbg !5963
  %7 = load i32, i32* %header_written, align 4, !dbg !5963
  %tobool = icmp ne i32 %7, 0, !dbg !5961
  br i1 %tobool, label %if.then, label %if.end, !dbg !5964

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5965
  br label %return, !dbg !5965

if.end:                                           ; preds = %entry
  %8 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5966
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i32 0, i32 4, !dbg !5968
  %9 = load i32, i32* %size, align 8, !dbg !5968
  %cmp = icmp slt i32 %9, 120000, !dbg !5969
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5970

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !5971
  br label %return, !dbg !5971

if.end3:                                          ; preds = %if.end
  %10 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5972
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %10, i32 0, i32 3, !dbg !5973
  %11 = load i8*, i8** %data, align 8, !dbg !5973
  %12 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5974
  %size4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %12, i32 0, i32 4, !dbg !5975
  %13 = load i32, i32* %size4, align 8, !dbg !5975
  %call = call %struct.AVDVProfile* @av_dv_frame_profile(%struct.AVDVProfile* null, i8* %11, i32 %13), !dbg !5976
  store %struct.AVDVProfile* %call, %struct.AVDVProfile** %profile, align 8, !dbg !5977
  %14 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5978
  %data5 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %14, i32 0, i32 3, !dbg !5979
  %15 = load i8*, i8** %data5, align 8, !dbg !5979
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 400, !dbg !5980
  %add.ptr6 = getelementptr inbounds i8, i8* %add.ptr, i64 48, !dbg !5981
  store i8* %add.ptr6, i8** %vs_pack, align 8, !dbg !5982
  %16 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !5983
  %data7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %16, i32 0, i32 3, !dbg !5984
  %17 = load i8*, i8** %data7, align 8, !dbg !5984
  %add.ptr8 = getelementptr inbounds i8, i8* %17, i64 400, !dbg !5985
  %add.ptr9 = getelementptr inbounds i8, i8* %add.ptr8, i64 53, !dbg !5986
  store i8* %add.ptr9, i8** %vsc_pack, align 8, !dbg !5987
  %18 = load i8*, i8** %vs_pack, align 8, !dbg !5988
  %arrayidx = getelementptr inbounds i8, i8* %18, i64 3, !dbg !5988
  %19 = load i8, i8* %arrayidx, align 1, !dbg !5988
  %conv = zext i8 %19 to i32, !dbg !5988
  %and = and i32 %conv, 31, !dbg !5989
  store i32 %and, i32* %stype, align 4, !dbg !5990
  %20 = load i8*, i8** %vs_pack, align 8, !dbg !5991
  %arrayidx10 = getelementptr inbounds i8, i8* %20, i64 3, !dbg !5991
  %21 = load i8, i8* %arrayidx10, align 1, !dbg !5991
  %conv11 = zext i8 %21 to i32, !dbg !5991
  %shr = ashr i32 %conv11, 5, !dbg !5992
  %and12 = and i32 %shr, 1, !dbg !5993
  store i32 %and12, i32* %pal, align 4, !dbg !5994
  %22 = load i8*, i8** %vsc_pack, align 8, !dbg !5995
  %arrayidx13 = getelementptr inbounds i8, i8* %22, i64 2, !dbg !5995
  %23 = load i8, i8* %arrayidx13, align 1, !dbg !5995
  %conv14 = zext i8 %23 to i32, !dbg !5995
  %and15 = and i32 %conv14, 7, !dbg !5997
  %cmp16 = icmp eq i32 %and15, 2, !dbg !5998
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !5999

if.then18:                                        ; preds = %if.end3
  %24 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6000
  %aspect_ratio = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %24, i32 0, i32 13, !dbg !6002
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !6003
  store i32 16, i32* %num, align 4, !dbg !6003
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !6003
  store i32 9, i32* %den, align 4, !dbg !6003
  %25 = bitcast %struct.AVRational* %aspect_ratio to i8*, !dbg !6004
  %26 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !6004
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 4, i1 false), !dbg !6004
  br label %if.end23, !dbg !6005

if.else:                                          ; preds = %if.end3
  %27 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6006
  %aspect_ratio19 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %27, i32 0, i32 13, !dbg !6008
  %num21 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral20, i32 0, i32 0, !dbg !6009
  store i32 4, i32* %num21, align 4, !dbg !6009
  %den22 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral20, i32 0, i32 1, !dbg !6009
  store i32 3, i32* %den22, align 4, !dbg !6009
  %28 = bitcast %struct.AVRational* %aspect_ratio19 to i8*, !dbg !6010
  %29 = bitcast %struct.AVRational* %.compoundliteral20 to i8*, !dbg !6010
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 4, i1 false), !dbg !6010
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %30 = load i8*, i8** %vsc_pack, align 8, !dbg !6011
  %arrayidx24 = getelementptr inbounds i8, i8* %30, i64 3, !dbg !6011
  %31 = load i8, i8* %arrayidx24, align 1, !dbg !6011
  %conv25 = zext i8 %31 to i32, !dbg !6011
  %shr26 = ashr i32 %conv25, 4, !dbg !6012
  %and27 = and i32 %shr26, 1, !dbg !6013
  %32 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6014
  %interlaced = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %32, i32 0, i32 5, !dbg !6015
  store i32 %and27, i32* %interlaced, align 4, !dbg !6016
  %33 = load i32, i32* %stype, align 4, !dbg !6017
  switch i32 %33, label %sw.default [
    i32 24, label %sw.bb
    i32 20, label %sw.bb33
    i32 4, label %sw.bb35
  ], !dbg !6018

sw.bb:                                            ; preds = %if.end23
  %34 = load i32, i32* %pal, align 4, !dbg !6019
  %add = add nsw i32 25, %34, !dbg !6021
  store i32 %add, i32* %ul_index, align 4, !dbg !6022
  %35 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6023
  %interlaced28 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %35, i32 0, i32 5, !dbg !6025
  %36 = load i32, i32* %interlaced28, align 4, !dbg !6025
  %tobool29 = icmp ne i32 %36, 0, !dbg !6023
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !6026

if.then30:                                        ; preds = %sw.bb
  %37 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6027
  %38 = bitcast %struct.AVFormatContext* %37 to i8*, !dbg !6027
  call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 16, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.56, i32 0, i32 0)), !dbg !6029
  %39 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6030
  %interlaced31 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %39, i32 0, i32 5, !dbg !6031
  store i32 0, i32* %interlaced31, align 4, !dbg !6032
  br label %if.end32, !dbg !6033

if.end32:                                         ; preds = %if.then30, %sw.bb
  br label %sw.epilog, !dbg !6034

sw.bb33:                                          ; preds = %if.end23
  %40 = load i32, i32* %pal, align 4, !dbg !6035
  %add34 = add nsw i32 23, %40, !dbg !6036
  store i32 %add34, i32* %ul_index, align 4, !dbg !6037
  br label %sw.epilog, !dbg !6038

sw.bb35:                                          ; preds = %if.end23
  %41 = load i32, i32* %pal, align 4, !dbg !6039
  %add36 = add nsw i32 20, %41, !dbg !6040
  store i32 %add36, i32* %ul_index, align 4, !dbg !6041
  br label %sw.epilog, !dbg !6042

sw.default:                                       ; preds = %if.end23
  %42 = load %struct.AVDVProfile*, %struct.AVDVProfile** %profile, align 8, !dbg !6043
  %tobool37 = icmp ne %struct.AVDVProfile* %42, null, !dbg !6043
  br i1 %tobool37, label %land.lhs.true, label %if.end44, !dbg !6045

land.lhs.true:                                    ; preds = %sw.default
  %43 = load %struct.AVDVProfile*, %struct.AVDVProfile** %profile, align 8, !dbg !6046
  %pix_fmt = getelementptr inbounds %struct.AVDVProfile, %struct.AVDVProfile* %43, i32 0, i32 10, !dbg !6048
  %44 = load i32, i32* %pix_fmt, align 8, !dbg !6048
  %cmp38 = icmp eq i32 %44, 0, !dbg !6049
  br i1 %cmp38, label %land.lhs.true40, label %if.end44, !dbg !6050

land.lhs.true40:                                  ; preds = %land.lhs.true
  %45 = load i32, i32* %pal, align 4, !dbg !6051
  %tobool41 = icmp ne i32 %45, 0, !dbg !6051
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !6053

if.then42:                                        ; preds = %land.lhs.true40
  %46 = load i32, i32* %pal, align 4, !dbg !6054
  %add43 = add nsw i32 18, %46, !dbg !6056
  store i32 %add43, i32* %ul_index, align 4, !dbg !6057
  br label %sw.epilog, !dbg !6058

if.end44:                                         ; preds = %land.lhs.true40, %land.lhs.true, %sw.default
  %47 = load i32, i32* %pal, align 4, !dbg !6059
  %add45 = add nsw i32 16, %47, !dbg !6060
  store i32 %add45, i32* %ul_index, align 4, !dbg !6061
  br label %sw.epilog, !dbg !6062

sw.epilog:                                        ; preds = %if.end44, %if.then42, %sw.bb35, %sw.bb33, %if.end32
  %48 = load i32, i32* %ul_index, align 4, !dbg !6063
  %49 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6064
  %index = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %49, i32 0, i32 2, !dbg !6065
  store i32 %48, i32* %index, align 8, !dbg !6066
  %50 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6067
  %index46 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %50, i32 0, i32 2, !dbg !6068
  %51 = load i32, i32* %index46, align 8, !dbg !6068
  %idxprom = sext i32 %51 to i64, !dbg !6069
  %arrayidx47 = getelementptr inbounds [32 x %struct.MXFContainerEssenceEntry], [32 x %struct.MXFContainerEssenceEntry]* @mxf_essence_container_uls, i64 0, i64 %idxprom, !dbg !6069
  %codec_ul = getelementptr inbounds %struct.MXFContainerEssenceEntry, %struct.MXFContainerEssenceEntry* %arrayidx47, i32 0, i32 2, !dbg !6070
  %52 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6071
  %codec_ul48 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %52, i32 0, i32 3, !dbg !6072
  store [16 x i8]* %codec_ul, [16 x i8]** %codec_ul48, align 8, !dbg !6073
  %53 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !6074
  %size49 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %53, i32 0, i32 4, !dbg !6075
  %54 = load i32, i32* %size49, align 8, !dbg !6075
  %55 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6076
  %frame_size = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %55, i32 0, i32 17, !dbg !6077
  store i32 %54, i32* %frame_size, align 8, !dbg !6078
  store i32 1, i32* %retval, align 4, !dbg !6079
  br label %return, !dbg !6079

return:                                           ; preds = %sw.epilog, %if.then2, %if.then
  %56 = load i32, i32* %retval, align 4, !dbg !6080
  ret i32 %56, !dbg !6080
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_parse_h264_frame(%struct.AVFormatContext* %s, %struct.AVStream* %st, %struct.AVPacket* %pkt, %struct.MXFIndexEntry* %e) #0 !dbg !2452 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %e.addr = alloca %struct.MXFIndexEntry*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  %par = alloca %struct.AVCodecParameters*, align 8
  %buf = alloca i8*, align 8
  %buf_end = alloca i8*, align 8
  %state = alloca i32, align 4
  %long_gop = alloca i32, align 4
  %extra_size = alloca i32, align 4
  %i = alloca i32, align 4
  %frame_size = alloca i32, align 4
  %uid_found = alloca i8, align 1
  %.compoundliteral = alloca %struct.AVRational, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !6081, metadata !2529), !dbg !6082
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !6083, metadata !2529), !dbg !6084
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !6085, metadata !2529), !dbg !6086
  store %struct.MXFIndexEntry* %e, %struct.MXFIndexEntry** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFIndexEntry** %e.addr, metadata !6087, metadata !2529), !dbg !6088
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !6089, metadata !2529), !dbg !6090
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6091
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !6092
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6092
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !6091
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !6090
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !6093, metadata !2529), !dbg !6094
  %3 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !6095
  %priv_data1 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %3, i32 0, i32 3, !dbg !6096
  %4 = load i8*, i8** %priv_data1, align 8, !dbg !6096
  %5 = bitcast i8* %4 to %struct.MXFStreamContext*, !dbg !6095
  store %struct.MXFStreamContext* %5, %struct.MXFStreamContext** %sc, align 8, !dbg !6094
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par, metadata !6097, metadata !2529), !dbg !6098
  %6 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !6099
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %6, i32 0, i32 19, !dbg !6100
  %7 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !6100
  store %struct.AVCodecParameters* %7, %struct.AVCodecParameters** %par, align 8, !dbg !6098
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6101, metadata !2529), !dbg !6102
  %8 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !6103
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i32 0, i32 3, !dbg !6104
  %9 = load i8*, i8** %data, align 8, !dbg !6104
  store i8* %9, i8** %buf, align 8, !dbg !6102
  call void @llvm.dbg.declare(metadata i8** %buf_end, metadata !6105, metadata !2529), !dbg !6106
  %10 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !6107
  %data2 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %10, i32 0, i32 3, !dbg !6108
  %11 = load i8*, i8** %data2, align 8, !dbg !6108
  %12 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !6109
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %12, i32 0, i32 4, !dbg !6110
  %13 = load i32, i32* %size, align 8, !dbg !6110
  %idx.ext = sext i32 %13 to i64, !dbg !6111
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !6111
  store i8* %add.ptr, i8** %buf_end, align 8, !dbg !6106
  call void @llvm.dbg.declare(metadata i32* %state, metadata !6112, metadata !2529), !dbg !6113
  store i32 -1, i32* %state, align 4, !dbg !6113
  call void @llvm.dbg.declare(metadata i32* %long_gop, metadata !6114, metadata !2529), !dbg !6115
  store i32 0, i32* %long_gop, align 4, !dbg !6115
  call void @llvm.dbg.declare(metadata i32* %extra_size, metadata !6116, metadata !2529), !dbg !6117
  store i32 512, i32* %extra_size, align 4, !dbg !6117
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6118, metadata !2529), !dbg !6119
  call void @llvm.dbg.declare(metadata i32* %frame_size, metadata !6120, metadata !2529), !dbg !6121
  call void @llvm.dbg.declare(metadata i8* %uid_found, metadata !6122, metadata !2529), !dbg !6123
  %14 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !6124
  %size3 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %14, i32 0, i32 4, !dbg !6126
  %15 = load i32, i32* %size3, align 8, !dbg !6126
  %16 = load i32, i32* %extra_size, align 4, !dbg !6127
  %cmp = icmp sgt i32 %15, %16, !dbg !6128
  br i1 %cmp, label %if.then, label %if.end, !dbg !6129

if.then:                                          ; preds = %entry
  %17 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !6130
  %size4 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %17, i32 0, i32 4, !dbg !6131
  %18 = load i32, i32* %size4, align 8, !dbg !6131
  %19 = load i32, i32* %extra_size, align 4, !dbg !6132
  %sub = sub nsw i32 %18, %19, !dbg !6133
  %20 = load i8*, i8** %buf_end, align 8, !dbg !6134
  %idx.ext5 = sext i32 %sub to i64, !dbg !6134
  %idx.neg = sub i64 0, %idx.ext5, !dbg !6134
  %add.ptr6 = getelementptr inbounds i8, i8* %20, i64 %idx.neg, !dbg !6134
  store i8* %add.ptr6, i8** %buf_end, align 8, !dbg !6134
  br label %if.end, !dbg !6135

if.end:                                           ; preds = %if.then, %entry
  br label %for.cond, !dbg !6136

for.cond:                                         ; preds = %sw.epilog, %if.end
  %21 = load i8*, i8** %buf, align 8, !dbg !6137
  %22 = load i8*, i8** %buf_end, align 8, !dbg !6141
  %call = call i8* @avpriv_find_start_code(i8* %21, i8* %22, i32* %state), !dbg !6142
  store i8* %call, i8** %buf, align 8, !dbg !6143
  %23 = load i8*, i8** %buf, align 8, !dbg !6144
  %24 = load i8*, i8** %buf_end, align 8, !dbg !6146
  %cmp7 = icmp uge i8* %23, %24, !dbg !6147
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !6148

if.then8:                                         ; preds = %for.cond
  br label %for.end, !dbg !6149

if.end9:                                          ; preds = %for.cond
  %25 = load i8*, i8** %buf, align 8, !dbg !6150
  %incdec.ptr = getelementptr inbounds i8, i8* %25, i32 -1, !dbg !6150
  store i8* %incdec.ptr, i8** %buf, align 8, !dbg !6150
  %26 = load i32, i32* %state, align 4, !dbg !6151
  %and = and i32 %26, 31, !dbg !6152
  switch i32 %and, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb15
  ], !dbg !6153

sw.bb:                                            ; preds = %if.end9
  %27 = load i8*, i8** %buf, align 8, !dbg !6154
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 1, !dbg !6154
  %28 = load i8, i8* %arrayidx, align 1, !dbg !6154
  %conv = zext i8 %28 to i32, !dbg !6154
  %29 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6156
  %profile = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %29, i32 0, i32 9, !dbg !6157
  store i32 %conv, i32* %profile, align 8, !dbg !6158
  %30 = load i8*, i8** %buf, align 8, !dbg !6159
  %arrayidx10 = getelementptr inbounds i8, i8* %30, i64 2, !dbg !6159
  %31 = load i8, i8* %arrayidx10, align 1, !dbg !6159
  %conv11 = zext i8 %31 to i32, !dbg !6159
  %and12 = and i32 %conv11, 16, !dbg !6160
  %tobool = icmp ne i32 %and12, 0, !dbg !6159
  %cond = select i1 %tobool, i32 0, i32 1, !dbg !6159
  store i32 %cond, i32* %long_gop, align 4, !dbg !6161
  %32 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %e.addr, align 8, !dbg !6162
  %flags = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %32, i32 0, i32 0, !dbg !6163
  %33 = load i8, i8* %flags, align 8, !dbg !6164
  %conv13 = zext i8 %33 to i32, !dbg !6164
  %or = or i32 %conv13, 64, !dbg !6164
  %conv14 = trunc i32 %or to i8, !dbg !6164
  store i8 %conv14, i8* %flags, align 8, !dbg !6164
  br label %sw.epilog, !dbg !6165

sw.bb15:                                          ; preds = %if.end9
  %34 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %e.addr, align 8, !dbg !6166
  %flags16 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %34, i32 0, i32 0, !dbg !6168
  %35 = load i8, i8* %flags16, align 8, !dbg !6168
  %conv17 = zext i8 %35 to i32, !dbg !6166
  %and18 = and i32 %conv17, 64, !dbg !6169
  %tobool19 = icmp ne i32 %and18, 0, !dbg !6169
  br i1 %tobool19, label %if.then20, label %if.end25, !dbg !6170

if.then20:                                        ; preds = %sw.bb15
  %36 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %e.addr, align 8, !dbg !6171
  %flags21 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %36, i32 0, i32 0, !dbg !6173
  %37 = load i8, i8* %flags21, align 8, !dbg !6174
  %conv22 = zext i8 %37 to i32, !dbg !6174
  %or23 = or i32 %conv22, 128, !dbg !6174
  %conv24 = trunc i32 %or23 to i8, !dbg !6174
  store i8 %conv24, i8* %flags21, align 8, !dbg !6174
  store i32 0, i32* %extra_size, align 4, !dbg !6175
  %38 = load i8*, i8** %buf_end, align 8, !dbg !6176
  store i8* %38, i8** %buf, align 8, !dbg !6177
  br label %if.end25, !dbg !6178

if.end25:                                         ; preds = %if.then20, %sw.bb15
  br label %sw.epilog, !dbg !6179

sw.default:                                       ; preds = %if.end9
  br label %sw.epilog, !dbg !6180

sw.epilog:                                        ; preds = %sw.default, %if.end25, %sw.bb
  br label %for.cond, !dbg !6181, !llvm.loop !6183

for.end:                                          ; preds = %if.then8
  %39 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6184
  %header_written = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %39, i32 0, i32 4, !dbg !6186
  %40 = load i32, i32* %header_written, align 4, !dbg !6186
  %tobool26 = icmp ne i32 %40, 0, !dbg !6184
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !6187

if.then27:                                        ; preds = %for.end
  store i32 1, i32* %retval, align 4, !dbg !6188
  br label %return, !dbg !6188

if.end28:                                         ; preds = %for.end
  %41 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6189
  %aspect_ratio = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %41, i32 0, i32 13, !dbg !6190
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !6191
  store i32 16, i32* %num, align 4, !dbg !6191
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !6191
  store i32 9, i32* %den, align 4, !dbg !6191
  %42 = bitcast %struct.AVRational* %aspect_ratio to i8*, !dbg !6192
  %43 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !6192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 4, i1 false), !dbg !6192
  %44 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6193
  %field_order = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %44, i32 0, i32 14, !dbg !6194
  %45 = load i32, i32* %field_order, align 8, !dbg !6194
  %cmp29 = icmp ne i32 %45, 1, !dbg !6195
  %cond31 = select i1 %cmp29, i32 1, i32 0, !dbg !6193
  %46 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6196
  %interlaced = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %46, i32 0, i32 5, !dbg !6197
  store i32 %cond31, i32* %interlaced, align 4, !dbg !6198
  store i8 0, i8* %uid_found, align 1, !dbg !6199
  %47 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !6200
  %size32 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %47, i32 0, i32 4, !dbg !6201
  %48 = load i32, i32* %size32, align 8, !dbg !6201
  %49 = load i32, i32* %extra_size, align 4, !dbg !6202
  %add = add nsw i32 %48, %49, !dbg !6203
  store i32 %add, i32* %frame_size, align 4, !dbg !6204
  store i32 0, i32* %i, align 4, !dbg !6205
  br label %for.cond33, !dbg !6207

for.cond33:                                       ; preds = %for.inc, %if.end28
  %50 = load i32, i32* %i, align 4, !dbg !6208
  %cmp34 = icmp slt i32 %50, 23, !dbg !6211
  br i1 %cmp34, label %for.body, label %for.end78, !dbg !6212

for.body:                                         ; preds = %for.cond33
  %51 = load i32, i32* %frame_size, align 4, !dbg !6213
  %52 = load i32, i32* %i, align 4, !dbg !6216
  %idxprom = sext i32 %52 to i64, !dbg !6217
  %arrayidx36 = getelementptr inbounds [23 x %struct.anon.4], [23 x %struct.anon.4]* @mxf_h264_codec_uls, i64 0, i64 %idxprom, !dbg !6217
  %frame_size37 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %arrayidx36, i32 0, i32 1, !dbg !6218
  %53 = load i32, i32* %frame_size37, align 16, !dbg !6218
  %cmp38 = icmp eq i32 %51, %53, !dbg !6219
  br i1 %cmp38, label %land.lhs.true, label %if.else, !dbg !6220

land.lhs.true:                                    ; preds = %for.body
  %54 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6221
  %interlaced40 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %54, i32 0, i32 5, !dbg !6223
  %55 = load i32, i32* %interlaced40, align 4, !dbg !6223
  %56 = load i32, i32* %i, align 4, !dbg !6224
  %idxprom41 = sext i32 %56 to i64, !dbg !6225
  %arrayidx42 = getelementptr inbounds [23 x %struct.anon.4], [23 x %struct.anon.4]* @mxf_h264_codec_uls, i64 0, i64 %idxprom41, !dbg !6225
  %interlaced43 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %arrayidx42, i32 0, i32 3, !dbg !6226
  %57 = load i8, i8* %interlaced43, align 8, !dbg !6226
  %conv44 = zext i8 %57 to i32, !dbg !6225
  %cmp45 = icmp eq i32 %55, %conv44, !dbg !6227
  br i1 %cmp45, label %if.then47, label %if.else, !dbg !6228

if.then47:                                        ; preds = %land.lhs.true
  %58 = load i32, i32* %i, align 4, !dbg !6229
  %idxprom48 = sext i32 %58 to i64, !dbg !6231
  %arrayidx49 = getelementptr inbounds [23 x %struct.anon.4], [23 x %struct.anon.4]* @mxf_h264_codec_uls, i64 0, i64 %idxprom48, !dbg !6231
  %uid = getelementptr inbounds %struct.anon.4, %struct.anon.4* %arrayidx49, i32 0, i32 0, !dbg !6232
  %59 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6233
  %codec_ul = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %59, i32 0, i32 3, !dbg !6234
  store [16 x i8]* %uid, [16 x i8]** %codec_ul, align 8, !dbg !6235
  %60 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6236
  %component_depth = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %60, i32 0, i32 7, !dbg !6237
  store i32 10, i32* %component_depth, align 4, !dbg !6238
  %61 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6239
  %interlaced50 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %61, i32 0, i32 5, !dbg !6241
  %62 = load i32, i32* %interlaced50, align 4, !dbg !6241
  %tobool51 = icmp ne i32 %62, 0, !dbg !6239
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !6242

if.then52:                                        ; preds = %if.then47
  %63 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6243
  %field_dominance = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %63, i32 0, i32 6, !dbg !6244
  store i32 1, i32* %field_dominance, align 8, !dbg !6245
  br label %if.end53, !dbg !6243

if.end53:                                         ; preds = %if.then52, %if.then47
  store i32 1, i32* %retval, align 4, !dbg !6246
  br label %return, !dbg !6246

if.else:                                          ; preds = %land.lhs.true, %for.body
  %64 = load i32, i32* %i, align 4, !dbg !6247
  %idxprom54 = sext i32 %64 to i64, !dbg !6249
  %arrayidx55 = getelementptr inbounds [23 x %struct.anon.4], [23 x %struct.anon.4]* @mxf_h264_codec_uls, i64 0, i64 %idxprom54, !dbg !6249
  %profile56 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %arrayidx55, i32 0, i32 2, !dbg !6250
  %65 = load i32, i32* %profile56, align 4, !dbg !6250
  %66 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !6251
  %profile57 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %66, i32 0, i32 9, !dbg !6252
  %67 = load i32, i32* %profile57, align 8, !dbg !6252
  %cmp58 = icmp eq i32 %65, %67, !dbg !6253
  br i1 %cmp58, label %land.lhs.true60, label %if.end76, !dbg !6254

land.lhs.true60:                                  ; preds = %if.else
  %68 = load i32, i32* %i, align 4, !dbg !6255
  %idxprom61 = sext i32 %68 to i64, !dbg !6256
  %arrayidx62 = getelementptr inbounds [23 x %struct.anon.4], [23 x %struct.anon.4]* @mxf_h264_codec_uls, i64 0, i64 %idxprom61, !dbg !6256
  %long_gop63 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %arrayidx62, i32 0, i32 4, !dbg !6257
  %69 = load i32, i32* %long_gop63, align 4, !dbg !6257
  %cmp64 = icmp slt i32 %69, 0, !dbg !6258
  br i1 %cmp64, label %if.then71, label %lor.lhs.false, !dbg !6259

lor.lhs.false:                                    ; preds = %land.lhs.true60
  %70 = load i32, i32* %i, align 4, !dbg !6260
  %idxprom66 = sext i32 %70 to i64, !dbg !6261
  %arrayidx67 = getelementptr inbounds [23 x %struct.anon.4], [23 x %struct.anon.4]* @mxf_h264_codec_uls, i64 0, i64 %idxprom66, !dbg !6261
  %long_gop68 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %arrayidx67, i32 0, i32 4, !dbg !6262
  %71 = load i32, i32* %long_gop68, align 4, !dbg !6262
  %72 = load i32, i32* %long_gop, align 4, !dbg !6263
  %cmp69 = icmp eq i32 %71, %72, !dbg !6264
  br i1 %cmp69, label %if.then71, label %if.end76, !dbg !6265

if.then71:                                        ; preds = %lor.lhs.false, %land.lhs.true60
  %73 = load i32, i32* %i, align 4, !dbg !6266
  %idxprom72 = sext i32 %73 to i64, !dbg !6268
  %arrayidx73 = getelementptr inbounds [23 x %struct.anon.4], [23 x %struct.anon.4]* @mxf_h264_codec_uls, i64 0, i64 %idxprom72, !dbg !6268
  %uid74 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %arrayidx73, i32 0, i32 0, !dbg !6269
  %74 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6270
  %codec_ul75 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %74, i32 0, i32 3, !dbg !6271
  store [16 x i8]* %uid74, [16 x i8]** %codec_ul75, align 8, !dbg !6272
  store i8 1, i8* %uid_found, align 1, !dbg !6273
  br label %if.end76, !dbg !6274

if.end76:                                         ; preds = %if.then71, %lor.lhs.false, %if.else
  br label %if.end77

if.end77:                                         ; preds = %if.end76
  br label %for.inc, !dbg !6275

for.inc:                                          ; preds = %if.end77
  %75 = load i32, i32* %i, align 4, !dbg !6276
  %inc = add nsw i32 %75, 1, !dbg !6276
  store i32 %inc, i32* %i, align 4, !dbg !6276
  br label %for.cond33, !dbg !6278, !llvm.loop !6279

for.end78:                                        ; preds = %for.cond33
  %76 = load i8, i8* %uid_found, align 1, !dbg !6281
  %tobool79 = icmp ne i8 %76, 0, !dbg !6281
  br i1 %tobool79, label %if.end81, label %if.then80, !dbg !6283

if.then80:                                        ; preds = %for.end78
  %77 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6284
  %78 = bitcast %struct.AVFormatContext* %77 to i8*, !dbg !6284
  call void (i8*, i32, i8*, ...) @av_log(i8* %78, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.57, i32 0, i32 0)), !dbg !6286
  store i32 0, i32* %retval, align 4, !dbg !6287
  br label %return, !dbg !6287

if.end81:                                         ; preds = %for.end78
  store i32 1, i32* %retval, align 4, !dbg !6288
  br label %return, !dbg !6288

return:                                           ; preds = %if.end81, %if.then80, %if.end53, %if.then27
  %79 = load i32, i32* %retval, align 4, !dbg !6289
  ret i32 %79, !dbg !6289
}

; Function Attrs: nounwind uwtable
define internal void @mxf_compute_edit_unit_byte_count(%struct.AVFormatContext* %s) #0 !dbg !6290 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %i = alloca i32, align 4
  %sc = alloca %struct.MXFStreamContext*, align 8
  %st = alloca %struct.AVStream*, align 8
  %sc6 = alloca %struct.MXFStreamContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !6291, metadata !2529), !dbg !6292
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !6293, metadata !2529), !dbg !6294
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6295
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !6296
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6296
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !6295
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !6294
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6297, metadata !2529), !dbg !6298
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6299
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 2, !dbg !6301
  %4 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !6301
  %cmp = icmp eq %struct.AVOutputFormat* %4, @ff_mxf_opatom_muxer, !dbg !6302
  br i1 %cmp, label %if.then, label %if.end, !dbg !6303

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !6304, metadata !2529), !dbg !6306
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6307
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 7, !dbg !6308
  %6 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !6308
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %6, i64 0, !dbg !6307
  %7 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !6307
  %priv_data1 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %7, i32 0, i32 3, !dbg !6309
  %8 = load i8*, i8** %priv_data1, align 8, !dbg !6309
  %9 = bitcast i8* %8 to %struct.MXFStreamContext*, !dbg !6307
  store %struct.MXFStreamContext* %9, %struct.MXFStreamContext** %sc, align 8, !dbg !6306
  %10 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6310
  %frame_size = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %10, i32 0, i32 17, !dbg !6311
  %11 = load i32, i32* %frame_size, align 8, !dbg !6311
  %12 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6312
  %edit_unit_byte_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %12, i32 0, i32 17, !dbg !6313
  store i32 %11, i32* %edit_unit_byte_count, align 4, !dbg !6314
  br label %for.end, !dbg !6315

if.end:                                           ; preds = %entry
  %13 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6316
  %edit_unit_byte_count2 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %13, i32 0, i32 17, !dbg !6317
  store i32 512, i32* %edit_unit_byte_count2, align 4, !dbg !6318
  store i32 0, i32* %i, align 4, !dbg !6319
  br label %for.cond, !dbg !6321

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !6322
  %15 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6325
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %15, i32 0, i32 6, !dbg !6326
  %16 = load i32, i32* %nb_streams, align 4, !dbg !6326
  %cmp3 = icmp ult i32 %14, %16, !dbg !6327
  br i1 %cmp3, label %for.body, label %for.end, !dbg !6328

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !6329, metadata !2529), !dbg !6331
  %17 = load i32, i32* %i, align 4, !dbg !6332
  %idxprom = sext i32 %17 to i64, !dbg !6333
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6333
  %streams4 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %18, i32 0, i32 7, !dbg !6334
  %19 = load %struct.AVStream**, %struct.AVStream*** %streams4, align 8, !dbg !6334
  %arrayidx5 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %19, i64 %idxprom, !dbg !6333
  %20 = load %struct.AVStream*, %struct.AVStream** %arrayidx5, align 8, !dbg !6333
  store %struct.AVStream* %20, %struct.AVStream** %st, align 8, !dbg !6331
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc6, metadata !6335, metadata !2529), !dbg !6336
  %21 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6337
  %priv_data7 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i32 0, i32 3, !dbg !6338
  %22 = load i8*, i8** %priv_data7, align 8, !dbg !6338
  %23 = bitcast i8* %22 to %struct.MXFStreamContext*, !dbg !6337
  store %struct.MXFStreamContext* %23, %struct.MXFStreamContext** %sc6, align 8, !dbg !6336
  %24 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6339
  %edit_unit_byte_count8 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %24, i32 0, i32 17, !dbg !6340
  %25 = load i32, i32* %edit_unit_byte_count8, align 4, !dbg !6340
  %26 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc6, align 8, !dbg !6341
  %slice_offset = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %26, i32 0, i32 16, !dbg !6342
  store i32 %25, i32* %slice_offset, align 4, !dbg !6343
  %27 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc6, align 8, !dbg !6344
  %frame_size9 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %27, i32 0, i32 17, !dbg !6345
  %28 = load i32, i32* %frame_size9, align 8, !dbg !6345
  %add = add nsw i32 20, %28, !dbg !6346
  %29 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6347
  %edit_unit_byte_count10 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %29, i32 0, i32 17, !dbg !6348
  %30 = load i32, i32* %edit_unit_byte_count10, align 4, !dbg !6349
  %add11 = add nsw i32 %30, %add, !dbg !6349
  store i32 %add11, i32* %edit_unit_byte_count10, align 4, !dbg !6349
  %31 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6350
  %edit_unit_byte_count12 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %31, i32 0, i32 17, !dbg !6351
  %32 = load i32, i32* %edit_unit_byte_count12, align 4, !dbg !6351
  %conv = sext i32 %32 to i64, !dbg !6350
  %call = call i32 @klv_fill_size(i64 %conv), !dbg !6352
  %33 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6353
  %edit_unit_byte_count13 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %33, i32 0, i32 17, !dbg !6354
  %34 = load i32, i32* %edit_unit_byte_count13, align 4, !dbg !6355
  %add14 = add i32 %34, %call, !dbg !6355
  store i32 %add14, i32* %edit_unit_byte_count13, align 4, !dbg !6355
  br label %for.inc, !dbg !6356

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %i, align 4, !dbg !6357
  %inc = add nsw i32 %35, 1, !dbg !6357
  store i32 %inc, i32* %i, align 4, !dbg !6357
  br label %for.cond, !dbg !6359, !llvm.loop !6360

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !6362
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_write_opatom_packet(%struct.AVFormatContext* %s, %struct.AVPacket* %pkt, %struct.MXFIndexEntry* %ie) #0 !dbg !6363 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %ie.addr = alloca %struct.MXFIndexEntry*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %err = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !6366, metadata !2529), !dbg !6367
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !6368, metadata !2529), !dbg !6369
  store %struct.MXFIndexEntry* %ie, %struct.MXFIndexEntry** %ie.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFIndexEntry** %ie.addr, metadata !6370, metadata !2529), !dbg !6371
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !6372, metadata !2529), !dbg !6373
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6374
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !6375
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6375
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !6374
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !6373
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !6376, metadata !2529), !dbg !6377
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6378
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !6379
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !6379
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !6377
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6380, metadata !2529), !dbg !6381
  %5 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6382
  %header_written = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %5, i32 0, i32 4, !dbg !6384
  %6 = load i32, i32* %header_written, align 4, !dbg !6384
  %tobool = icmp ne i32 %6, 0, !dbg !6382
  br i1 %tobool, label %if.end8, label %if.then, !dbg !6385

if.then:                                          ; preds = %entry
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6386
  %call = call i32 @mxf_write_partition(%struct.AVFormatContext* %7, i32 0, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @header_open_partition_key, i32 0, i32 0), i32 1), !dbg !6389
  store i32 %call, i32* %err, align 4, !dbg !6390
  %cmp = icmp slt i32 %call, 0, !dbg !6391
  br i1 %cmp, label %if.then2, label %if.end, !dbg !6392

if.then2:                                         ; preds = %if.then
  %8 = load i32, i32* %err, align 4, !dbg !6393
  store i32 %8, i32* %retval, align 4, !dbg !6394
  br label %return, !dbg !6394

if.end:                                           ; preds = %if.then
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6395
  call void @mxf_write_klv_fill(%struct.AVFormatContext* %9), !dbg !6396
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6397
  %call3 = call i32 @mxf_write_opatom_body_partition(%struct.AVFormatContext* %10), !dbg !6399
  store i32 %call3, i32* %err, align 4, !dbg !6400
  %cmp4 = icmp slt i32 %call3, 0, !dbg !6401
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !6402

if.then5:                                         ; preds = %if.end
  %11 = load i32, i32* %err, align 4, !dbg !6403
  store i32 %11, i32* %retval, align 4, !dbg !6404
  br label %return, !dbg !6404

if.end6:                                          ; preds = %if.end
  %12 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6405
  %header_written7 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %12, i32 0, i32 4, !dbg !6406
  store i32 1, i32* %header_written7, align 4, !dbg !6407
  br label %if.end8, !dbg !6408

if.end8:                                          ; preds = %if.end6, %entry
  %13 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6409
  %edit_unit_byte_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %13, i32 0, i32 17, !dbg !6411
  %14 = load i32, i32* %edit_unit_byte_count, align 4, !dbg !6411
  %tobool9 = icmp ne i32 %14, 0, !dbg !6409
  br i1 %tobool9, label %if.end21, label %if.then10, !dbg !6412

if.then10:                                        ; preds = %if.end8
  %15 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6413
  %body_offset = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %15, i32 0, i32 19, !dbg !6415
  %16 = load i64, i64* %body_offset, align 8, !dbg !6415
  %17 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6416
  %edit_units_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %17, i32 0, i32 6, !dbg !6417
  %18 = load i32, i32* %edit_units_count, align 8, !dbg !6417
  %idxprom = zext i32 %18 to i64, !dbg !6418
  %19 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6418
  %index_entries = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %19, i32 0, i32 5, !dbg !6419
  %20 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries, align 8, !dbg !6419
  %arrayidx = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %20, i64 %idxprom, !dbg !6418
  %offset = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx, i32 0, i32 1, !dbg !6420
  store i64 %16, i64* %offset, align 8, !dbg !6421
  %21 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %ie.addr, align 8, !dbg !6422
  %flags = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %21, i32 0, i32 0, !dbg !6423
  %22 = load i8, i8* %flags, align 8, !dbg !6423
  %23 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6424
  %edit_units_count11 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %23, i32 0, i32 6, !dbg !6425
  %24 = load i32, i32* %edit_units_count11, align 8, !dbg !6425
  %idxprom12 = zext i32 %24 to i64, !dbg !6426
  %25 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6426
  %index_entries13 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %25, i32 0, i32 5, !dbg !6427
  %26 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries13, align 8, !dbg !6427
  %arrayidx14 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %26, i64 %idxprom12, !dbg !6426
  %flags15 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx14, i32 0, i32 0, !dbg !6428
  store i8 %22, i8* %flags15, align 8, !dbg !6429
  %27 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %ie.addr, align 8, !dbg !6430
  %temporal_ref = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %27, i32 0, i32 3, !dbg !6431
  %28 = load i16, i16* %temporal_ref, align 4, !dbg !6431
  %29 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6432
  %edit_units_count16 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %29, i32 0, i32 6, !dbg !6433
  %30 = load i32, i32* %edit_units_count16, align 8, !dbg !6433
  %idxprom17 = zext i32 %30 to i64, !dbg !6434
  %31 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6434
  %index_entries18 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %31, i32 0, i32 5, !dbg !6435
  %32 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries18, align 8, !dbg !6435
  %arrayidx19 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %32, i64 %idxprom17, !dbg !6434
  %temporal_ref20 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx19, i32 0, i32 3, !dbg !6436
  store i16 %28, i16* %temporal_ref20, align 4, !dbg !6437
  br label %if.end21, !dbg !6438

if.end21:                                         ; preds = %if.then10, %if.end8
  %33 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6439
  %edit_units_count22 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %33, i32 0, i32 6, !dbg !6440
  %34 = load i32, i32* %edit_units_count22, align 8, !dbg !6441
  %inc = add i32 %34, 1, !dbg !6441
  store i32 %inc, i32* %edit_units_count22, align 8, !dbg !6441
  %35 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6442
  %36 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !6443
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %36, i32 0, i32 3, !dbg !6444
  %37 = load i8*, i8** %data, align 8, !dbg !6444
  %38 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !6445
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %38, i32 0, i32 4, !dbg !6446
  %39 = load i32, i32* %size, align 8, !dbg !6446
  call void @avio_write(%struct.AVIOContext* %35, i8* %37, i32 %39), !dbg !6447
  %40 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !6448
  %size23 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %40, i32 0, i32 4, !dbg !6449
  %41 = load i32, i32* %size23, align 8, !dbg !6449
  %conv = sext i32 %41 to i64, !dbg !6448
  %42 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6450
  %body_offset24 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %42, i32 0, i32 19, !dbg !6451
  %43 = load i64, i64* %body_offset24, align 8, !dbg !6452
  %add = add i64 %43, %conv, !dbg !6452
  store i64 %add, i64* %body_offset24, align 8, !dbg !6452
  %44 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6453
  call void @avio_flush(%struct.AVIOContext* %44), !dbg !6454
  store i32 0, i32* %retval, align 4, !dbg !6455
  br label %return, !dbg !6455

return:                                           ; preds = %if.end21, %if.then5, %if.then2
  %45 = load i32, i32* %retval, align 4, !dbg !6456
  ret i32 %45, !dbg !6456
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_write_partition(%struct.AVFormatContext* %s, i32 %bodysid, i32 %indexsid, i8* %key, i32 %write_metadata) #0 !dbg !6457 {
entry:
  %s.addr.i130 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i130, metadata !3913, metadata !2529), !dbg !6460
  %s.addr.i128 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i128, metadata !3913, metadata !2529), !dbg !6464
  %s.addr.i126 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i126, metadata !3913, metadata !2529), !dbg !6466
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !3913, metadata !2529), !dbg !6468
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %bodysid.addr = alloca i32, align 4
  %indexsid.addr = alloca i32, align 4
  %key.addr = alloca i8*, align 8
  %write_metadata.addr = alloca i32, align 4
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %header_byte_count_offset = alloca i64, align 8
  %index_byte_count = alloca i32, align 4
  %partition_offset = alloca i64, align 8
  %err = alloca i32, align 4
  %pos = alloca i64, align 8
  %start = alloca i64, align 8
  %header_byte_count = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !6470, metadata !2529), !dbg !6471
  store i32 %bodysid, i32* %bodysid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bodysid.addr, metadata !6472, metadata !2529), !dbg !6473
  store i32 %indexsid, i32* %indexsid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %indexsid.addr, metadata !6474, metadata !2529), !dbg !6475
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !6476, metadata !2529), !dbg !6477
  store i32 %write_metadata, i32* %write_metadata.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %write_metadata.addr, metadata !6478, metadata !2529), !dbg !6479
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !6480, metadata !2529), !dbg !6481
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6482
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !6483
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6483
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !6482
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !6481
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !6484, metadata !2529), !dbg !6485
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6486
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !6487
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !6487
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !6485
  call void @llvm.dbg.declare(metadata i64* %header_byte_count_offset, metadata !6488, metadata !2529), !dbg !6489
  call void @llvm.dbg.declare(metadata i32* %index_byte_count, metadata !6490, metadata !2529), !dbg !6491
  store i32 0, i32* %index_byte_count, align 4, !dbg !6491
  call void @llvm.dbg.declare(metadata i64* %partition_offset, metadata !6492, metadata !2529), !dbg !6493
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6494
  store %struct.AVIOContext* %5, %struct.AVIOContext** %s.addr.i, align 8, !dbg !6495
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !6496
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %6, i64 0, i32 1) #9, !dbg !6497
  store i64 %call.i, i64* %partition_offset, align 8, !dbg !6493
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6498, metadata !2529), !dbg !6499
  %7 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6500
  %edit_unit_byte_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %7, i32 0, i32 17, !dbg !6502
  %8 = load i32, i32* %edit_unit_byte_count, align 4, !dbg !6502
  %tobool = icmp ne i32 %8, 0, !dbg !6500
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6503

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6504
  %edit_units_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %9, i32 0, i32 6, !dbg !6506
  %10 = load i32, i32* %edit_units_count, align 8, !dbg !6506
  %tobool2 = icmp ne i32 %10, 0, !dbg !6504
  br i1 %tobool2, label %if.then, label %if.else, !dbg !6507

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6508
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %11, i32 0, i32 6, !dbg !6509
  %12 = load i32, i32* %nb_streams, align 4, !dbg !6509
  %add = add i32 %12, 1, !dbg !6510
  %mul = mul i32 %add, 6, !dbg !6511
  %add3 = add i32 97, %mul, !dbg !6512
  %add4 = add i32 %add3, 12, !dbg !6513
  %13 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6514
  %edit_units_count5 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %13, i32 0, i32 6, !dbg !6515
  %14 = load i32, i32* %edit_units_count5, align 8, !dbg !6515
  %mul6 = mul i32 %14, 15, !dbg !6516
  %add7 = add i32 %add4, %mul6, !dbg !6517
  store i32 %add7, i32* %index_byte_count, align 4, !dbg !6518
  br label %if.end13, !dbg !6519

if.else:                                          ; preds = %land.lhs.true, %entry
  %15 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6520
  %edit_unit_byte_count8 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %15, i32 0, i32 17, !dbg !6522
  %16 = load i32, i32* %edit_unit_byte_count8, align 4, !dbg !6522
  %tobool9 = icmp ne i32 %16, 0, !dbg !6520
  br i1 %tobool9, label %land.lhs.true10, label %if.end, !dbg !6523

land.lhs.true10:                                  ; preds = %if.else
  %17 = load i32, i32* %indexsid.addr, align 4, !dbg !6524
  %tobool11 = icmp ne i32 %17, 0, !dbg !6524
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !6526

if.then12:                                        ; preds = %land.lhs.true10
  store i32 80, i32* %index_byte_count, align 4, !dbg !6527
  br label %if.end, !dbg !6528

if.end:                                           ; preds = %if.then12, %land.lhs.true10, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  %18 = load i32, i32* %index_byte_count, align 4, !dbg !6529
  %tobool14 = icmp ne i32 %18, 0, !dbg !6529
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !6531

if.then15:                                        ; preds = %if.end13
  %19 = load i32, i32* %index_byte_count, align 4, !dbg !6532
  %conv = zext i32 %19 to i64, !dbg !6532
  %call16 = call i32 @klv_ber_length(i64 %conv), !dbg !6534
  %add17 = add nsw i32 16, %call16, !dbg !6535
  %20 = load i32, i32* %index_byte_count, align 4, !dbg !6536
  %add18 = add i32 %20, %add17, !dbg !6536
  store i32 %add18, i32* %index_byte_count, align 4, !dbg !6536
  %21 = load i32, i32* %index_byte_count, align 4, !dbg !6537
  %conv19 = zext i32 %21 to i64, !dbg !6537
  %call20 = call i32 @klv_fill_size(i64 %conv19), !dbg !6538
  %22 = load i32, i32* %index_byte_count, align 4, !dbg !6539
  %add21 = add i32 %22, %call20, !dbg !6539
  store i32 %add21, i32* %index_byte_count, align 4, !dbg !6539
  br label %if.end22, !dbg !6540

if.end22:                                         ; preds = %if.then15, %if.end13
  %23 = load i8*, i8** %key.addr, align 8, !dbg !6541
  %tobool23 = icmp ne i8* %23, null, !dbg !6541
  br i1 %tobool23, label %land.lhs.true24, label %if.end37, !dbg !6543

land.lhs.true24:                                  ; preds = %if.end22
  %24 = load i8*, i8** %key.addr, align 8, !dbg !6544
  %call25 = call i32 @memcmp(i8* %24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @body_partition_key, i32 0, i32 0), i64 16) #10, !dbg !6546
  %tobool26 = icmp ne i32 %call25, 0, !dbg !6546
  br i1 %tobool26, label %if.end37, label %if.then27, !dbg !6547

if.then27:                                        ; preds = %land.lhs.true24
  %25 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6548
  %body_partition_offset = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %25, i32 0, i32 10, !dbg !6551
  %26 = bitcast i64** %body_partition_offset to i8*, !dbg !6552
  %27 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6553
  %body_partitions_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %27, i32 0, i32 11, !dbg !6554
  %28 = load i32, i32* %body_partitions_count, align 8, !dbg !6554
  %add28 = add i32 %28, 1, !dbg !6555
  %conv29 = zext i32 %add28 to i64, !dbg !6553
  %call30 = call i32 @av_reallocp_array(i8* %26, i64 %conv29, i64 8), !dbg !6556
  store i32 %call30, i32* %err, align 4, !dbg !6557
  %cmp = icmp slt i32 %call30, 0, !dbg !6558
  br i1 %cmp, label %if.then32, label %if.end34, !dbg !6559

if.then32:                                        ; preds = %if.then27
  %29 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6560
  %body_partitions_count33 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %29, i32 0, i32 11, !dbg !6562
  store i32 0, i32* %body_partitions_count33, align 8, !dbg !6563
  %30 = load i32, i32* %err, align 4, !dbg !6564
  store i32 %30, i32* %retval, align 4, !dbg !6565
  br label %return, !dbg !6565

if.end34:                                         ; preds = %if.then27
  %31 = load i64, i64* %partition_offset, align 8, !dbg !6566
  %32 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6567
  %body_partitions_count35 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %32, i32 0, i32 11, !dbg !6568
  %33 = load i32, i32* %body_partitions_count35, align 8, !dbg !6569
  %inc = add i32 %33, 1, !dbg !6569
  store i32 %inc, i32* %body_partitions_count35, align 8, !dbg !6569
  %idxprom = zext i32 %33 to i64, !dbg !6570
  %34 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6570
  %body_partition_offset36 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %34, i32 0, i32 10, !dbg !6571
  %35 = load i64*, i64** %body_partition_offset36, align 8, !dbg !6571
  %arrayidx = getelementptr inbounds i64, i64* %35, i64 %idxprom, !dbg !6570
  store i64 %31, i64* %arrayidx, align 8, !dbg !6572
  br label %if.end37, !dbg !6573

if.end37:                                         ; preds = %if.end34, %land.lhs.true24, %if.end22
  %36 = load i8*, i8** %key.addr, align 8, !dbg !6574
  %tobool38 = icmp ne i8* %36, null, !dbg !6574
  br i1 %tobool38, label %if.then39, label %if.else40, !dbg !6576

if.then39:                                        ; preds = %if.end37
  %37 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6577
  %38 = load i8*, i8** %key.addr, align 8, !dbg !6578
  call void @avio_write(%struct.AVIOContext* %37, i8* %38, i32 16), !dbg !6579
  br label %if.end41, !dbg !6579

if.else40:                                        ; preds = %if.end37
  %39 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6580
  call void @avio_write(%struct.AVIOContext* %39, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @body_partition_key, i32 0, i32 0), i32 16), !dbg !6581
  br label %if.end41

if.end41:                                         ; preds = %if.else40, %if.then39
  %40 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6582
  %41 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6583
  %essence_container_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %41, i32 0, i32 2, !dbg !6584
  %42 = load i32, i32* %essence_container_count, align 8, !dbg !6584
  %cmp42 = icmp sgt i32 %42, 1, !dbg !6585
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !6583

cond.true:                                        ; preds = %if.end41
  %43 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6586
  %essence_container_count44 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %43, i32 0, i32 2, !dbg !6588
  %44 = load i32, i32* %essence_container_count44, align 8, !dbg !6588
  %add45 = add nsw i32 %44, 1, !dbg !6589
  br label %cond.end, !dbg !6590

cond.false:                                       ; preds = %if.end41
  %45 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6591
  %essence_container_count46 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %45, i32 0, i32 2, !dbg !6593
  %46 = load i32, i32* %essence_container_count46, align 8, !dbg !6593
  br label %cond.end, !dbg !6594

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add45, %cond.true ], [ %46, %cond.false ], !dbg !6595
  %conv47 = sext i32 %cond to i64, !dbg !6597
  %mul48 = mul nsw i64 16, %conv47, !dbg !6598
  %add49 = add nsw i64 88, %mul48, !dbg !6599
  %conv50 = trunc i64 %add49 to i32, !dbg !6600
  call void @klv_encode_ber4_length(%struct.AVIOContext* %40, i32 %conv50), !dbg !6601
  %47 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6602
  call void @avio_wb16(%struct.AVIOContext* %47, i32 1), !dbg !6603
  %48 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6604
  call void @avio_wb16(%struct.AVIOContext* %48, i32 3), !dbg !6605
  %49 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6606
  call void @avio_wb32(%struct.AVIOContext* %49, i32 512), !dbg !6607
  %50 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6608
  %51 = load i64, i64* %partition_offset, align 8, !dbg !6609
  call void @avio_wb64(%struct.AVIOContext* %50, i64 %51), !dbg !6610
  %52 = load i8*, i8** %key.addr, align 8, !dbg !6611
  %tobool51 = icmp ne i8* %52, null, !dbg !6611
  br i1 %tobool51, label %land.lhs.true52, label %if.else64, !dbg !6613

land.lhs.true52:                                  ; preds = %cond.end
  %53 = load i8*, i8** %key.addr, align 8, !dbg !6614
  %call53 = call i32 @memcmp(i8* %53, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @body_partition_key, i32 0, i32 0), i64 16) #10, !dbg !6616
  %tobool54 = icmp ne i32 %call53, 0, !dbg !6616
  br i1 %tobool54, label %if.else64, label %land.lhs.true55, !dbg !6617

land.lhs.true55:                                  ; preds = %land.lhs.true52
  %54 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6618
  %body_partitions_count56 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %54, i32 0, i32 11, !dbg !6620
  %55 = load i32, i32* %body_partitions_count56, align 8, !dbg !6620
  %cmp57 = icmp ugt i32 %55, 1, !dbg !6621
  br i1 %cmp57, label %if.then59, label %if.else64, !dbg !6622

if.then59:                                        ; preds = %land.lhs.true55
  %56 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6623
  %57 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6624
  %body_partitions_count60 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %57, i32 0, i32 11, !dbg !6625
  %58 = load i32, i32* %body_partitions_count60, align 8, !dbg !6625
  %sub = sub i32 %58, 2, !dbg !6626
  %idxprom61 = zext i32 %sub to i64, !dbg !6627
  %59 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6627
  %body_partition_offset62 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %59, i32 0, i32 10, !dbg !6628
  %60 = load i64*, i64** %body_partition_offset62, align 8, !dbg !6628
  %arrayidx63 = getelementptr inbounds i64, i64* %60, i64 %idxprom61, !dbg !6627
  %61 = load i64, i64* %arrayidx63, align 8, !dbg !6627
  call void @avio_wb64(%struct.AVIOContext* %56, i64 %61), !dbg !6629
  br label %if.end80, !dbg !6629

if.else64:                                        ; preds = %land.lhs.true55, %land.lhs.true52, %cond.end
  %62 = load i8*, i8** %key.addr, align 8, !dbg !6630
  %tobool65 = icmp ne i8* %62, null, !dbg !6630
  br i1 %tobool65, label %land.lhs.true66, label %if.else78, !dbg !6632

land.lhs.true66:                                  ; preds = %if.else64
  %63 = load i8*, i8** %key.addr, align 8, !dbg !6633
  %call67 = call i32 @memcmp(i8* %63, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @footer_partition_key, i32 0, i32 0), i64 16) #10, !dbg !6635
  %tobool68 = icmp ne i32 %call67, 0, !dbg !6635
  br i1 %tobool68, label %if.else78, label %land.lhs.true69, !dbg !6636

land.lhs.true69:                                  ; preds = %land.lhs.true66
  %64 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6637
  %body_partitions_count70 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %64, i32 0, i32 11, !dbg !6639
  %65 = load i32, i32* %body_partitions_count70, align 8, !dbg !6639
  %tobool71 = icmp ne i32 %65, 0, !dbg !6637
  br i1 %tobool71, label %if.then72, label %if.else78, !dbg !6640

if.then72:                                        ; preds = %land.lhs.true69
  %66 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6641
  %67 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6642
  %body_partitions_count73 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %67, i32 0, i32 11, !dbg !6643
  %68 = load i32, i32* %body_partitions_count73, align 8, !dbg !6643
  %sub74 = sub i32 %68, 1, !dbg !6644
  %idxprom75 = zext i32 %sub74 to i64, !dbg !6645
  %69 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6645
  %body_partition_offset76 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %69, i32 0, i32 10, !dbg !6646
  %70 = load i64*, i64** %body_partition_offset76, align 8, !dbg !6646
  %arrayidx77 = getelementptr inbounds i64, i64* %70, i64 %idxprom75, !dbg !6645
  %71 = load i64, i64* %arrayidx77, align 8, !dbg !6645
  call void @avio_wb64(%struct.AVIOContext* %66, i64 %71), !dbg !6647
  br label %if.end79, !dbg !6647

if.else78:                                        ; preds = %land.lhs.true69, %land.lhs.true66, %if.else64
  %72 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6648
  call void @avio_wb64(%struct.AVIOContext* %72, i64 0), !dbg !6649
  br label %if.end79

if.end79:                                         ; preds = %if.else78, %if.then72
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then59
  %73 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6650
  %74 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6651
  %footer_partition_offset = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %74, i32 0, i32 1, !dbg !6652
  %75 = load i64, i64* %footer_partition_offset, align 8, !dbg !6652
  call void @avio_wb64(%struct.AVIOContext* %73, i64 %75), !dbg !6653
  %76 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6654
  store %struct.AVIOContext* %76, %struct.AVIOContext** %s.addr.i126, align 8, !dbg !6655
  %77 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i126, align 8, !dbg !6656
  %call.i127 = call i64 @avio_seek(%struct.AVIOContext* %77, i64 0, i32 1) #9, !dbg !6657
  store i64 %call.i127, i64* %header_byte_count_offset, align 8, !dbg !6658
  %78 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6659
  call void @avio_wb64(%struct.AVIOContext* %78, i64 0), !dbg !6660
  %79 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6661
  %80 = load i32, i32* %index_byte_count, align 4, !dbg !6662
  %conv82 = zext i32 %80 to i64, !dbg !6662
  call void @avio_wb64(%struct.AVIOContext* %79, i64 %conv82), !dbg !6663
  %81 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6664
  %82 = load i32, i32* %index_byte_count, align 4, !dbg !6665
  %tobool83 = icmp ne i32 %82, 0, !dbg !6665
  br i1 %tobool83, label %cond.true84, label %cond.false85, !dbg !6665

cond.true84:                                      ; preds = %if.end80
  %83 = load i32, i32* %indexsid.addr, align 4, !dbg !6666
  br label %cond.end86, !dbg !6667

cond.false85:                                     ; preds = %if.end80
  br label %cond.end86, !dbg !6668

cond.end86:                                       ; preds = %cond.false85, %cond.true84
  %cond87 = phi i32 [ %83, %cond.true84 ], [ 0, %cond.false85 ], !dbg !6669
  call void @avio_wb32(%struct.AVIOContext* %81, i32 %cond87), !dbg !6670
  %84 = load i32, i32* %bodysid.addr, align 4, !dbg !6671
  %tobool88 = icmp ne i32 %84, 0, !dbg !6671
  br i1 %tobool88, label %land.lhs.true89, label %if.else99, !dbg !6673

land.lhs.true89:                                  ; preds = %cond.end86
  %85 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6674
  %edit_units_count90 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %85, i32 0, i32 6, !dbg !6676
  %86 = load i32, i32* %edit_units_count90, align 8, !dbg !6676
  %tobool91 = icmp ne i32 %86, 0, !dbg !6674
  br i1 %tobool91, label %land.lhs.true92, label %if.else99, !dbg !6677

land.lhs.true92:                                  ; preds = %land.lhs.true89
  %87 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6678
  %body_partitions_count93 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %87, i32 0, i32 11, !dbg !6680
  %88 = load i32, i32* %body_partitions_count93, align 8, !dbg !6680
  %tobool94 = icmp ne i32 %88, 0, !dbg !6678
  br i1 %tobool94, label %land.lhs.true95, label %if.else99, !dbg !6681

land.lhs.true95:                                  ; preds = %land.lhs.true92
  %89 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6682
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %89, i32 0, i32 2, !dbg !6684
  %90 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !6684
  %cmp96 = icmp ne %struct.AVOutputFormat* %90, @ff_mxf_opatom_muxer, !dbg !6685
  br i1 %cmp96, label %if.then98, label %if.else99, !dbg !6686

if.then98:                                        ; preds = %land.lhs.true95
  %91 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6687
  %92 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6688
  %body_offset = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %92, i32 0, i32 19, !dbg !6689
  %93 = load i64, i64* %body_offset, align 8, !dbg !6689
  call void @avio_wb64(%struct.AVIOContext* %91, i64 %93), !dbg !6690
  br label %if.end100, !dbg !6690

if.else99:                                        ; preds = %land.lhs.true95, %land.lhs.true92, %land.lhs.true89, %cond.end86
  %94 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6691
  call void @avio_wb64(%struct.AVIOContext* %94, i64 0), !dbg !6692
  br label %if.end100

if.end100:                                        ; preds = %if.else99, %if.then98
  %95 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6693
  %96 = load i32, i32* %bodysid.addr, align 4, !dbg !6694
  call void @avio_wb32(%struct.AVIOContext* %95, i32 %96), !dbg !6695
  %97 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6696
  %oformat101 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %97, i32 0, i32 2, !dbg !6698
  %98 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat101, align 8, !dbg !6698
  %cmp102 = icmp eq %struct.AVOutputFormat* %98, @ff_mxf_opatom_muxer, !dbg !6699
  br i1 %cmp102, label %if.then104, label %if.else105, !dbg !6700

if.then104:                                       ; preds = %if.end100
  %99 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6701
  call void @avio_write(%struct.AVIOContext* %99, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @opatom_ul, i32 0, i32 0), i32 16), !dbg !6702
  br label %if.end106, !dbg !6702

if.else105:                                       ; preds = %if.end100
  %100 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6703
  call void @avio_write(%struct.AVIOContext* %100, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @op1a_ul, i32 0, i32 0), i32 16), !dbg !6704
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then104
  %101 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6705
  call void @mxf_write_essence_container_refs(%struct.AVFormatContext* %101), !dbg !6706
  %102 = load i32, i32* %write_metadata.addr, align 4, !dbg !6707
  %tobool107 = icmp ne i32 %102, 0, !dbg !6707
  br i1 %tobool107, label %if.then108, label %if.end122, !dbg !6708

if.then108:                                       ; preds = %if.end106
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !6709, metadata !2529), !dbg !6710
  call void @llvm.dbg.declare(metadata i64* %start, metadata !6711, metadata !2529), !dbg !6712
  call void @llvm.dbg.declare(metadata i32* %header_byte_count, metadata !6713, metadata !2529), !dbg !6714
  %103 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6715
  call void @mxf_write_klv_fill(%struct.AVFormatContext* %103), !dbg !6716
  %104 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6717
  %pb109 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %104, i32 0, i32 4, !dbg !6718
  %105 = load %struct.AVIOContext*, %struct.AVIOContext** %pb109, align 8, !dbg !6718
  store %struct.AVIOContext* %105, %struct.AVIOContext** %s.addr.i128, align 8, !dbg !6719
  %106 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i128, align 8, !dbg !6720
  %call.i129 = call i64 @avio_seek(%struct.AVIOContext* %106, i64 0, i32 1) #9, !dbg !6721
  store i64 %call.i129, i64* %start, align 8, !dbg !6722
  %107 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6723
  call void @mxf_write_primer_pack(%struct.AVFormatContext* %107), !dbg !6724
  %108 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6725
  call void @mxf_write_klv_fill(%struct.AVFormatContext* %108), !dbg !6726
  %109 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6727
  %call111 = call i32 @mxf_write_header_metadata_sets(%struct.AVFormatContext* %109), !dbg !6728
  %110 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6729
  %pb112 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %110, i32 0, i32 4, !dbg !6730
  %111 = load %struct.AVIOContext*, %struct.AVIOContext** %pb112, align 8, !dbg !6730
  store %struct.AVIOContext* %111, %struct.AVIOContext** %s.addr.i130, align 8, !dbg !6731
  %112 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i130, align 8, !dbg !6732
  %call.i131 = call i64 @avio_seek(%struct.AVIOContext* %112, i64 0, i32 1) #9, !dbg !6733
  store i64 %call.i131, i64* %pos, align 8, !dbg !6734
  %113 = load i64, i64* %pos, align 8, !dbg !6735
  %114 = load i64, i64* %start, align 8, !dbg !6736
  %sub114 = sub nsw i64 %113, %114, !dbg !6737
  %115 = load i64, i64* %pos, align 8, !dbg !6738
  %call115 = call i32 @klv_fill_size(i64 %115), !dbg !6739
  %conv116 = zext i32 %call115 to i64, !dbg !6739
  %add117 = add nsw i64 %sub114, %conv116, !dbg !6740
  %conv118 = trunc i64 %add117 to i32, !dbg !6735
  store i32 %conv118, i32* %header_byte_count, align 4, !dbg !6741
  %116 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6742
  %117 = load i64, i64* %header_byte_count_offset, align 8, !dbg !6743
  %call119 = call i64 @avio_seek(%struct.AVIOContext* %116, i64 %117, i32 0), !dbg !6744
  %118 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6745
  %119 = load i32, i32* %header_byte_count, align 4, !dbg !6746
  %conv120 = zext i32 %119 to i64, !dbg !6746
  call void @avio_wb64(%struct.AVIOContext* %118, i64 %conv120), !dbg !6747
  %120 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6748
  %121 = load i64, i64* %pos, align 8, !dbg !6749
  %call121 = call i64 @avio_seek(%struct.AVIOContext* %120, i64 %121, i32 0), !dbg !6750
  br label %if.end122, !dbg !6751

if.end122:                                        ; preds = %if.then108, %if.end106
  %122 = load i8*, i8** %key.addr, align 8, !dbg !6752
  %tobool123 = icmp ne i8* %122, null, !dbg !6752
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !6754

if.then124:                                       ; preds = %if.end122
  %123 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6755
  call void @avio_flush(%struct.AVIOContext* %123), !dbg !6756
  br label %if.end125, !dbg !6756

if.end125:                                        ; preds = %if.then124, %if.end122
  store i32 0, i32* %retval, align 4, !dbg !6757
  br label %return, !dbg !6757

return:                                           ; preds = %if.end125, %if.then32
  %124 = load i32, i32* %retval, align 4, !dbg !6758
  ret i32 %124, !dbg !6758
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_klv_fill(%struct.AVFormatContext* %s) #0 !dbg !6759 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !3913, metadata !2529), !dbg !6760
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pad = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !6762, metadata !2529), !dbg !6763
  call void @llvm.dbg.declare(metadata i32* %pad, metadata !6764, metadata !2529), !dbg !6765
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6766
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 4, !dbg !6767
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6767
  store %struct.AVIOContext* %1, %struct.AVIOContext** %s.addr.i, align 8, !dbg !6768
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !6769
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %2, i64 0, i32 1) #9, !dbg !6770
  %call1 = call i32 @klv_fill_size(i64 %call.i), !dbg !6771
  store i32 %call1, i32* %pad, align 4, !dbg !6765
  %3 = load i32, i32* %pad, align 4, !dbg !6773
  %tobool = icmp ne i32 %3, 0, !dbg !6773
  br i1 %tobool, label %if.then, label %if.end, !dbg !6775

if.then:                                          ; preds = %entry
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6776
  %pb2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 4, !dbg !6778
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb2, align 8, !dbg !6778
  call void @avio_write(%struct.AVIOContext* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @klv_fill_key, i32 0, i32 0), i32 16), !dbg !6779
  %6 = load i32, i32* %pad, align 4, !dbg !6780
  %sub = sub i32 %6, 20, !dbg !6780
  store i32 %sub, i32* %pad, align 4, !dbg !6780
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6781
  %pb3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 4, !dbg !6782
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb3, align 8, !dbg !6782
  %9 = load i32, i32* %pad, align 4, !dbg !6783
  call void @klv_encode_ber4_length(%struct.AVIOContext* %8, i32 %9), !dbg !6784
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6785
  %pb4 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %10, i32 0, i32 4, !dbg !6786
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb4, align 8, !dbg !6786
  %12 = load i32, i32* %pad, align 4, !dbg !6787
  call void @ffio_fill(%struct.AVIOContext* %11, i32 0, i32 %12), !dbg !6788
  br label %if.end, !dbg !6789

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6790
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_index_table_segment(%struct.AVFormatContext* %s) #0 !dbg !6791 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !3913, metadata !2529), !dbg !6792
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %temporal_reordering = alloca i32, align 4
  %key_index = alloca i32, align 4
  %prev_non_b_picture = alloca i32, align 4
  %audio_frame_size = alloca i32, align 4
  %pos = alloca i64, align 8
  %st = alloca %struct.AVStream*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  %sc48 = alloca %struct.MXFStreamContext*, align 8
  %temporal_offset = alloca i32, align 4
  %pic_num_in_gop = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !6794, metadata !2529), !dbg !6795
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !6796, metadata !2529), !dbg !6797
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6798
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !6799
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6799
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !6798
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !6797
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !6800, metadata !2529), !dbg !6801
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6802
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !6803
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !6803
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !6801
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6804, metadata !2529), !dbg !6805
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6806, metadata !2529), !dbg !6807
  call void @llvm.dbg.declare(metadata i32* %temporal_reordering, metadata !6808, metadata !2529), !dbg !6809
  store i32 0, i32* %temporal_reordering, align 4, !dbg !6809
  call void @llvm.dbg.declare(metadata i32* %key_index, metadata !6810, metadata !2529), !dbg !6811
  %5 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6812
  %last_key_index = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %5, i32 0, i32 12, !dbg !6813
  %6 = load i32, i32* %last_key_index, align 4, !dbg !6813
  store i32 %6, i32* %key_index, align 4, !dbg !6811
  call void @llvm.dbg.declare(metadata i32* %prev_non_b_picture, metadata !6814, metadata !2529), !dbg !6815
  store i32 0, i32* %prev_non_b_picture, align 4, !dbg !6815
  call void @llvm.dbg.declare(metadata i32* %audio_frame_size, metadata !6816, metadata !2529), !dbg !6817
  store i32 0, i32* %audio_frame_size, align 4, !dbg !6817
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !6818, metadata !2529), !dbg !6819
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6820
  %8 = bitcast %struct.AVFormatContext* %7 to i8*, !dbg !6820
  %9 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6821
  %edit_units_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %9, i32 0, i32 6, !dbg !6822
  %10 = load i32, i32* %edit_units_count, align 8, !dbg !6822
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 48, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.71, i32 0, i32 0), i32 %10), !dbg !6823
  %11 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6824
  %edit_units_count2 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %11, i32 0, i32 6, !dbg !6826
  %12 = load i32, i32* %edit_units_count2, align 8, !dbg !6826
  %tobool = icmp ne i32 %12, 0, !dbg !6824
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6827

land.lhs.true:                                    ; preds = %entry
  %13 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6828
  %edit_unit_byte_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %13, i32 0, i32 17, !dbg !6830
  %14 = load i32, i32* %edit_unit_byte_count, align 4, !dbg !6830
  %tobool3 = icmp ne i32 %14, 0, !dbg !6828
  br i1 %tobool3, label %if.end, label %if.then, !dbg !6831

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !6832

if.end:                                           ; preds = %land.lhs.true, %entry
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6833
  call void @avio_write(%struct.AVIOContext* %15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @index_table_segment_key, i32 0, i32 0), i32 16), !dbg !6834
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6835
  call void @klv_encode_ber4_length(%struct.AVIOContext* %16, i32 0), !dbg !6836
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6837
  store %struct.AVIOContext* %17, %struct.AVIOContext** %s.addr.i, align 8, !dbg !6838
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !6839
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %18, i64 0, i32 1) #9, !dbg !6840
  store i64 %call.i, i64* %pos, align 8, !dbg !6841
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6842
  call void @mxf_write_local_tag(%struct.AVIOContext* %19, i32 16, i32 15370), !dbg !6843
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6844
  call void @mxf_write_uuid(%struct.AVIOContext* %20, i32 15, i32 0), !dbg !6845
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6846
  call void @mxf_write_local_tag(%struct.AVIOContext* %21, i32 8, i32 16139), !dbg !6847
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6848
  %23 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6849
  %time_base = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %23, i32 0, i32 3, !dbg !6850
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 1, !dbg !6851
  %24 = load i32, i32* %den, align 4, !dbg !6851
  call void @avio_wb32(%struct.AVIOContext* %22, i32 %24), !dbg !6852
  %25 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6853
  %26 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6854
  %time_base4 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %26, i32 0, i32 3, !dbg !6855
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base4, i32 0, i32 0, !dbg !6856
  %27 = load i32, i32* %num, align 4, !dbg !6856
  call void @avio_wb32(%struct.AVIOContext* %25, i32 %27), !dbg !6857
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6858
  call void @mxf_write_local_tag(%struct.AVIOContext* %28, i32 8, i32 16140), !dbg !6859
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6860
  %30 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6861
  %last_indexed_edit_unit = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %30, i32 0, i32 9, !dbg !6862
  %31 = load i32, i32* %last_indexed_edit_unit, align 4, !dbg !6862
  %conv = sext i32 %31 to i64, !dbg !6861
  call void @avio_wb64(%struct.AVIOContext* %29, i64 %conv), !dbg !6863
  %32 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6864
  call void @mxf_write_local_tag(%struct.AVIOContext* %32, i32 8, i32 16141), !dbg !6865
  %33 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6866
  %edit_unit_byte_count5 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %33, i32 0, i32 17, !dbg !6868
  %34 = load i32, i32* %edit_unit_byte_count5, align 4, !dbg !6868
  %tobool6 = icmp ne i32 %34, 0, !dbg !6866
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !6869

if.then7:                                         ; preds = %if.end
  %35 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6870
  call void @avio_wb64(%struct.AVIOContext* %35, i64 0), !dbg !6871
  br label %if.end10, !dbg !6871

if.else:                                          ; preds = %if.end
  %36 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6872
  %37 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6873
  %edit_units_count8 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %37, i32 0, i32 6, !dbg !6874
  %38 = load i32, i32* %edit_units_count8, align 8, !dbg !6874
  %conv9 = zext i32 %38 to i64, !dbg !6873
  call void @avio_wb64(%struct.AVIOContext* %36, i64 %conv9), !dbg !6875
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  %39 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6876
  call void @mxf_write_local_tag(%struct.AVIOContext* %39, i32 4, i32 16133), !dbg !6877
  %40 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6878
  %41 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6879
  %edit_unit_byte_count11 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %41, i32 0, i32 17, !dbg !6880
  %42 = load i32, i32* %edit_unit_byte_count11, align 4, !dbg !6880
  call void @avio_wb32(%struct.AVIOContext* %40, i32 %42), !dbg !6881
  %43 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6882
  call void @mxf_write_local_tag(%struct.AVIOContext* %43, i32 4, i32 16134), !dbg !6883
  %44 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6884
  call void @avio_wb32(%struct.AVIOContext* %44, i32 2), !dbg !6885
  %45 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6886
  call void @mxf_write_local_tag(%struct.AVIOContext* %45, i32 4, i32 16135), !dbg !6887
  %46 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6888
  call void @avio_wb32(%struct.AVIOContext* %46, i32 1), !dbg !6889
  %47 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6890
  call void @mxf_write_local_tag(%struct.AVIOContext* %47, i32 1, i32 16136), !dbg !6891
  %48 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6892
  %49 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6893
  %edit_unit_byte_count12 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %49, i32 0, i32 17, !dbg !6894
  %50 = load i32, i32* %edit_unit_byte_count12, align 4, !dbg !6894
  %tobool13 = icmp ne i32 %50, 0, !dbg !6895
  %lnot = xor i1 %tobool13, true, !dbg !6895
  %lnot.ext = zext i1 %lnot to i32, !dbg !6895
  call void @avio_w8(%struct.AVIOContext* %48, i32 %lnot.ext), !dbg !6896
  %51 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6897
  %52 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6898
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %52, i32 0, i32 6, !dbg !6899
  %53 = load i32, i32* %nb_streams, align 4, !dbg !6899
  %add = add i32 %53, 1, !dbg !6900
  %mul = mul i32 %add, 6, !dbg !6901
  %add14 = add i32 8, %mul, !dbg !6902
  call void @mxf_write_local_tag(%struct.AVIOContext* %51, i32 %add14, i32 16137), !dbg !6903
  %54 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6904
  %55 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6905
  %nb_streams15 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %55, i32 0, i32 6, !dbg !6906
  %56 = load i32, i32* %nb_streams15, align 4, !dbg !6906
  %add16 = add i32 %56, 1, !dbg !6907
  call void @avio_wb32(%struct.AVIOContext* %54, i32 %add16), !dbg !6908
  %57 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6909
  call void @avio_wb32(%struct.AVIOContext* %57, i32 6), !dbg !6910
  %58 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6911
  call void @avio_w8(%struct.AVIOContext* %58, i32 0), !dbg !6912
  %59 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6913
  call void @avio_w8(%struct.AVIOContext* %59, i32 0), !dbg !6914
  %60 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6915
  call void @avio_wb32(%struct.AVIOContext* %60, i32 0), !dbg !6916
  store i32 0, i32* %i, align 4, !dbg !6917
  br label %for.cond, !dbg !6919

for.cond:                                         ; preds = %for.inc, %if.end10
  %61 = load i32, i32* %i, align 4, !dbg !6920
  %62 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6923
  %nb_streams17 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %62, i32 0, i32 6, !dbg !6924
  %63 = load i32, i32* %nb_streams17, align 4, !dbg !6924
  %cmp = icmp ult i32 %61, %63, !dbg !6925
  br i1 %cmp, label %for.body, label %for.end, !dbg !6926

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !6927, metadata !2529), !dbg !6929
  %64 = load i32, i32* %i, align 4, !dbg !6930
  %idxprom = sext i32 %64 to i64, !dbg !6931
  %65 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6931
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %65, i32 0, i32 7, !dbg !6932
  %66 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !6932
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %66, i64 %idxprom, !dbg !6931
  %67 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !6931
  store %struct.AVStream* %67, %struct.AVStream** %st, align 8, !dbg !6929
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !6933, metadata !2529), !dbg !6934
  %68 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !6935
  %priv_data19 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %68, i32 0, i32 3, !dbg !6936
  %69 = load i8*, i8** %priv_data19, align 8, !dbg !6936
  %70 = bitcast i8* %69 to %struct.MXFStreamContext*, !dbg !6935
  store %struct.MXFStreamContext* %70, %struct.MXFStreamContext** %sc, align 8, !dbg !6934
  %71 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6937
  %72 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6938
  %temporal_reordering20 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %72, i32 0, i32 12, !dbg !6939
  %73 = load i32, i32* %temporal_reordering20, align 8, !dbg !6939
  call void @avio_w8(%struct.AVIOContext* %71, i32 %73), !dbg !6940
  %74 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6941
  %temporal_reordering21 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %74, i32 0, i32 12, !dbg !6943
  %75 = load i32, i32* %temporal_reordering21, align 8, !dbg !6943
  %tobool22 = icmp ne i32 %75, 0, !dbg !6941
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !6944

if.then23:                                        ; preds = %for.body
  store i32 1, i32* %temporal_reordering, align 4, !dbg !6945
  br label %if.end24, !dbg !6946

if.end24:                                         ; preds = %if.then23, %for.body
  %76 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6947
  %edit_unit_byte_count25 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %76, i32 0, i32 17, !dbg !6949
  %77 = load i32, i32* %edit_unit_byte_count25, align 4, !dbg !6949
  %tobool26 = icmp ne i32 %77, 0, !dbg !6947
  br i1 %tobool26, label %if.then27, label %if.else28, !dbg !6950

if.then27:                                        ; preds = %if.end24
  %78 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6951
  call void @avio_w8(%struct.AVIOContext* %78, i32 0), !dbg !6953
  %79 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6954
  %80 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6955
  %slice_offset = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %80, i32 0, i32 16, !dbg !6956
  %81 = load i32, i32* %slice_offset, align 4, !dbg !6956
  call void @avio_wb32(%struct.AVIOContext* %79, i32 %81), !dbg !6957
  br label %if.end44, !dbg !6958

if.else28:                                        ; preds = %if.end24
  %82 = load i32, i32* %i, align 4, !dbg !6959
  %cmp29 = icmp eq i32 %82, 0, !dbg !6962
  br i1 %cmp29, label %if.then31, label %if.else32, !dbg !6959

if.then31:                                        ; preds = %if.else28
  %83 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6963
  call void @avio_w8(%struct.AVIOContext* %83, i32 0), !dbg !6965
  %84 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6966
  call void @avio_wb32(%struct.AVIOContext* %84, i32 512), !dbg !6967
  br label %if.end43, !dbg !6968

if.else32:                                        ; preds = %if.else28
  %85 = load i32, i32* %audio_frame_size, align 4, !dbg !6969
  %tobool33 = icmp ne i32 %85, 0, !dbg !6969
  br i1 %tobool33, label %if.end41, label %if.then34, !dbg !6972

if.then34:                                        ; preds = %if.else32
  %86 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6973
  %aic = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %86, i32 0, i32 0, !dbg !6975
  %samples = getelementptr inbounds %struct.AudioInterleaveContext, %struct.AudioInterleaveContext* %aic, i32 0, i32 5, !dbg !6976
  %87 = load i32*, i32** %samples, align 8, !dbg !6976
  %arrayidx35 = getelementptr inbounds i32, i32* %87, i64 0, !dbg !6973
  %88 = load i32, i32* %arrayidx35, align 4, !dbg !6973
  %89 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !6977
  %aic36 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %89, i32 0, i32 0, !dbg !6978
  %sample_size = getelementptr inbounds %struct.AudioInterleaveContext, %struct.AudioInterleaveContext* %aic36, i32 0, i32 3, !dbg !6979
  %90 = load i32, i32* %sample_size, align 8, !dbg !6979
  %mul37 = mul nsw i32 %88, %90, !dbg !6980
  store i32 %mul37, i32* %audio_frame_size, align 4, !dbg !6981
  %91 = load i32, i32* %audio_frame_size, align 4, !dbg !6982
  %conv38 = sext i32 %91 to i64, !dbg !6982
  %call39 = call i32 @klv_fill_size(i64 %conv38), !dbg !6983
  %92 = load i32, i32* %audio_frame_size, align 4, !dbg !6984
  %add40 = add i32 %92, %call39, !dbg !6984
  store i32 %add40, i32* %audio_frame_size, align 4, !dbg !6984
  br label %if.end41, !dbg !6985

if.end41:                                         ; preds = %if.then34, %if.else32
  %93 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6986
  call void @avio_w8(%struct.AVIOContext* %93, i32 1), !dbg !6987
  %94 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6988
  %95 = load i32, i32* %i, align 4, !dbg !6989
  %sub = sub nsw i32 %95, 1, !dbg !6990
  %96 = load i32, i32* %audio_frame_size, align 4, !dbg !6991
  %mul42 = mul nsw i32 %sub, %96, !dbg !6992
  call void @avio_wb32(%struct.AVIOContext* %94, i32 %mul42), !dbg !6993
  br label %if.end43

if.end43:                                         ; preds = %if.end41, %if.then31
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then27
  br label %for.inc, !dbg !6994

for.inc:                                          ; preds = %if.end44
  %97 = load i32, i32* %i, align 4, !dbg !6995
  %inc = add nsw i32 %97, 1, !dbg !6995
  store i32 %inc, i32* %i, align 4, !dbg !6995
  br label %for.cond, !dbg !6997, !llvm.loop !6998

for.end:                                          ; preds = %for.cond
  %98 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7000
  %edit_unit_byte_count45 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %98, i32 0, i32 17, !dbg !7002
  %99 = load i32, i32* %edit_unit_byte_count45, align 4, !dbg !7002
  %tobool46 = icmp ne i32 %99, 0, !dbg !7000
  br i1 %tobool46, label %if.end200, label %if.then47, !dbg !7003

if.then47:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc48, metadata !7004, metadata !2529), !dbg !7006
  %100 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7007
  %streams49 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %100, i32 0, i32 7, !dbg !7008
  %101 = load %struct.AVStream**, %struct.AVStream*** %streams49, align 8, !dbg !7008
  %arrayidx50 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %101, i64 0, !dbg !7007
  %102 = load %struct.AVStream*, %struct.AVStream** %arrayidx50, align 8, !dbg !7007
  %priv_data51 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %102, i32 0, i32 3, !dbg !7009
  %103 = load i8*, i8** %priv_data51, align 8, !dbg !7009
  %104 = bitcast i8* %103 to %struct.MXFStreamContext*, !dbg !7007
  store %struct.MXFStreamContext* %104, %struct.MXFStreamContext** %sc48, align 8, !dbg !7006
  %105 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7010
  %106 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7011
  %edit_units_count52 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %106, i32 0, i32 6, !dbg !7012
  %107 = load i32, i32* %edit_units_count52, align 8, !dbg !7012
  %mul53 = mul i32 %107, 15, !dbg !7013
  %add54 = add i32 8, %mul53, !dbg !7014
  call void @mxf_write_local_tag(%struct.AVIOContext* %105, i32 %add54, i32 16138), !dbg !7015
  %108 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7016
  %109 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7017
  %edit_units_count55 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %109, i32 0, i32 6, !dbg !7018
  %110 = load i32, i32* %edit_units_count55, align 8, !dbg !7018
  call void @avio_wb32(%struct.AVIOContext* %108, i32 %110), !dbg !7019
  %111 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7020
  call void @avio_wb32(%struct.AVIOContext* %111, i32 15), !dbg !7021
  store i32 0, i32* %i, align 4, !dbg !7022
  br label %for.cond56, !dbg !7024

for.cond56:                                       ; preds = %for.inc190, %if.then47
  %112 = load i32, i32* %i, align 4, !dbg !7025
  %113 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7028
  %edit_units_count57 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %113, i32 0, i32 6, !dbg !7029
  %114 = load i32, i32* %edit_units_count57, align 8, !dbg !7029
  %cmp58 = icmp ult i32 %112, %114, !dbg !7030
  br i1 %cmp58, label %for.body60, label %for.end192, !dbg !7031

for.body60:                                       ; preds = %for.cond56
  call void @llvm.dbg.declare(metadata i32* %temporal_offset, metadata !7032, metadata !2529), !dbg !7034
  store i32 0, i32* %temporal_offset, align 4, !dbg !7034
  %115 = load i32, i32* %i, align 4, !dbg !7035
  %idxprom61 = sext i32 %115 to i64, !dbg !7037
  %116 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7037
  %index_entries = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %116, i32 0, i32 5, !dbg !7038
  %117 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries, align 8, !dbg !7038
  %arrayidx62 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %117, i64 %idxprom61, !dbg !7037
  %flags = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx62, i32 0, i32 0, !dbg !7039
  %118 = load i8, i8* %flags, align 8, !dbg !7039
  %conv63 = zext i8 %118 to i32, !dbg !7037
  %and = and i32 %conv63, 51, !dbg !7040
  %tobool64 = icmp ne i32 %and, 0, !dbg !7040
  br i1 %tobool64, label %if.end75, label %if.then65, !dbg !7041

if.then65:                                        ; preds = %for.body60
  %119 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc48, align 8, !dbg !7042
  %max_gop = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %119, i32 0, i32 19, !dbg !7044
  %120 = load i32, i32* %max_gop, align 8, !dbg !7044
  %121 = load i32, i32* %i, align 4, !dbg !7045
  %122 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7046
  %last_key_index66 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %122, i32 0, i32 12, !dbg !7047
  %123 = load i32, i32* %last_key_index66, align 4, !dbg !7047
  %sub67 = sub nsw i32 %121, %123, !dbg !7048
  %cmp68 = icmp sgt i32 %120, %sub67, !dbg !7049
  br i1 %cmp68, label %cond.true, label %cond.false, !dbg !7050

cond.true:                                        ; preds = %if.then65
  %124 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc48, align 8, !dbg !7051
  %max_gop70 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %124, i32 0, i32 19, !dbg !7053
  %125 = load i32, i32* %max_gop70, align 8, !dbg !7053
  br label %cond.end, !dbg !7054

cond.false:                                       ; preds = %if.then65
  %126 = load i32, i32* %i, align 4, !dbg !7055
  %127 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7057
  %last_key_index71 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %127, i32 0, i32 12, !dbg !7058
  %128 = load i32, i32* %last_key_index71, align 4, !dbg !7058
  %sub72 = sub nsw i32 %126, %128, !dbg !7059
  br label %cond.end, !dbg !7060

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %125, %cond.true ], [ %sub72, %cond.false ], !dbg !7061
  %129 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc48, align 8, !dbg !7063
  %max_gop73 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %129, i32 0, i32 19, !dbg !7064
  store i32 %cond, i32* %max_gop73, align 8, !dbg !7065
  %130 = load i32, i32* %key_index, align 4, !dbg !7066
  %131 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7067
  %last_key_index74 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %131, i32 0, i32 12, !dbg !7068
  store i32 %130, i32* %last_key_index74, align 4, !dbg !7069
  %132 = load i32, i32* %i, align 4, !dbg !7070
  store i32 %132, i32* %key_index, align 4, !dbg !7071
  br label %if.end75, !dbg !7072

if.end75:                                         ; preds = %cond.end, %for.body60
  %133 = load i32, i32* %temporal_reordering, align 4, !dbg !7073
  %tobool76 = icmp ne i32 %133, 0, !dbg !7073
  br i1 %tobool76, label %if.then77, label %if.end111, !dbg !7075

if.then77:                                        ; preds = %if.end75
  call void @llvm.dbg.declare(metadata i32* %pic_num_in_gop, metadata !7076, metadata !2529), !dbg !7078
  %134 = load i32, i32* %i, align 4, !dbg !7079
  %135 = load i32, i32* %key_index, align 4, !dbg !7080
  %sub78 = sub nsw i32 %134, %135, !dbg !7081
  store i32 %sub78, i32* %pic_num_in_gop, align 4, !dbg !7078
  %136 = load i32, i32* %pic_num_in_gop, align 4, !dbg !7082
  %137 = load i32, i32* %i, align 4, !dbg !7084
  %idxprom79 = sext i32 %137 to i64, !dbg !7085
  %138 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7085
  %index_entries80 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %138, i32 0, i32 5, !dbg !7086
  %139 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries80, align 8, !dbg !7086
  %arrayidx81 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %139, i64 %idxprom79, !dbg !7085
  %temporal_ref = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx81, i32 0, i32 3, !dbg !7087
  %140 = load i16, i16* %temporal_ref, align 4, !dbg !7087
  %conv82 = zext i16 %140 to i32, !dbg !7085
  %cmp83 = icmp ne i32 %136, %conv82, !dbg !7088
  br i1 %cmp83, label %if.then85, label %if.end110, !dbg !7089

if.then85:                                        ; preds = %if.then77
  %141 = load i32, i32* %key_index, align 4, !dbg !7090
  store i32 %141, i32* %j, align 4, !dbg !7093
  br label %for.cond86, !dbg !7094

for.cond86:                                       ; preds = %for.inc100, %if.then85
  %142 = load i32, i32* %j, align 4, !dbg !7095
  %143 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7098
  %edit_units_count87 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %143, i32 0, i32 6, !dbg !7099
  %144 = load i32, i32* %edit_units_count87, align 8, !dbg !7099
  %cmp88 = icmp ult i32 %142, %144, !dbg !7100
  br i1 %cmp88, label %for.body90, label %for.end102, !dbg !7101

for.body90:                                       ; preds = %for.cond86
  %145 = load i32, i32* %pic_num_in_gop, align 4, !dbg !7102
  %146 = load i32, i32* %j, align 4, !dbg !7105
  %idxprom91 = sext i32 %146 to i64, !dbg !7106
  %147 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7106
  %index_entries92 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %147, i32 0, i32 5, !dbg !7107
  %148 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries92, align 8, !dbg !7107
  %arrayidx93 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %148, i64 %idxprom91, !dbg !7106
  %temporal_ref94 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx93, i32 0, i32 3, !dbg !7108
  %149 = load i16, i16* %temporal_ref94, align 4, !dbg !7108
  %conv95 = zext i16 %149 to i32, !dbg !7106
  %cmp96 = icmp eq i32 %145, %conv95, !dbg !7109
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !7110

if.then98:                                        ; preds = %for.body90
  br label %for.end102, !dbg !7111

if.end99:                                         ; preds = %for.body90
  br label %for.inc100, !dbg !7112

for.inc100:                                       ; preds = %if.end99
  %150 = load i32, i32* %j, align 4, !dbg !7113
  %inc101 = add nsw i32 %150, 1, !dbg !7113
  store i32 %inc101, i32* %j, align 4, !dbg !7113
  br label %for.cond86, !dbg !7115, !llvm.loop !7116

for.end102:                                       ; preds = %if.then98, %for.cond86
  %151 = load i32, i32* %j, align 4, !dbg !7118
  %152 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7120
  %edit_units_count103 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %152, i32 0, i32 6, !dbg !7121
  %153 = load i32, i32* %edit_units_count103, align 8, !dbg !7121
  %cmp104 = icmp eq i32 %151, %153, !dbg !7122
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !7123

if.then106:                                       ; preds = %for.end102
  %154 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7124
  %155 = bitcast %struct.AVFormatContext* %154 to i8*, !dbg !7124
  call void (i8*, i32, i8*, ...) @av_log(i8* %155, i32 24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.72, i32 0, i32 0)), !dbg !7125
  br label %if.end107, !dbg !7125

if.end107:                                        ; preds = %if.then106, %for.end102
  %156 = load i32, i32* %j, align 4, !dbg !7126
  %157 = load i32, i32* %key_index, align 4, !dbg !7127
  %sub108 = sub nsw i32 %156, %157, !dbg !7128
  %158 = load i32, i32* %pic_num_in_gop, align 4, !dbg !7129
  %sub109 = sub nsw i32 %sub108, %158, !dbg !7130
  store i32 %sub109, i32* %temporal_offset, align 4, !dbg !7131
  br label %if.end110, !dbg !7132

if.end110:                                        ; preds = %if.end107, %if.then77
  br label %if.end111, !dbg !7133

if.end111:                                        ; preds = %if.end110, %if.end75
  %159 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7134
  %160 = load i32, i32* %temporal_offset, align 4, !dbg !7135
  call void @avio_w8(%struct.AVIOContext* %159, i32 %160), !dbg !7136
  %161 = load i32, i32* %i, align 4, !dbg !7137
  %idxprom112 = sext i32 %161 to i64, !dbg !7139
  %162 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7139
  %index_entries113 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %162, i32 0, i32 5, !dbg !7140
  %163 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries113, align 8, !dbg !7140
  %arrayidx114 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %163, i64 %idxprom112, !dbg !7139
  %flags115 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx114, i32 0, i32 0, !dbg !7141
  %164 = load i8, i8* %flags115, align 8, !dbg !7141
  %conv116 = zext i8 %164 to i32, !dbg !7139
  %and117 = and i32 %conv116, 48, !dbg !7142
  %cmp118 = icmp eq i32 %and117, 48, !dbg !7143
  br i1 %cmp118, label %if.then120, label %if.else133, !dbg !7144

if.then120:                                       ; preds = %if.end111
  %165 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc48, align 8, !dbg !7145
  %b_picture_count = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %165, i32 0, i32 20, !dbg !7147
  %166 = load i32, i32* %b_picture_count, align 4, !dbg !7147
  %167 = load i32, i32* %i, align 4, !dbg !7148
  %168 = load i32, i32* %prev_non_b_picture, align 4, !dbg !7149
  %sub121 = sub nsw i32 %167, %168, !dbg !7150
  %cmp122 = icmp sgt i32 %166, %sub121, !dbg !7151
  br i1 %cmp122, label %cond.true124, label %cond.false126, !dbg !7152

cond.true124:                                     ; preds = %if.then120
  %169 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc48, align 8, !dbg !7153
  %b_picture_count125 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %169, i32 0, i32 20, !dbg !7155
  %170 = load i32, i32* %b_picture_count125, align 4, !dbg !7155
  br label %cond.end128, !dbg !7156

cond.false126:                                    ; preds = %if.then120
  %171 = load i32, i32* %i, align 4, !dbg !7157
  %172 = load i32, i32* %prev_non_b_picture, align 4, !dbg !7159
  %sub127 = sub nsw i32 %171, %172, !dbg !7160
  br label %cond.end128, !dbg !7161

cond.end128:                                      ; preds = %cond.false126, %cond.true124
  %cond129 = phi i32 [ %170, %cond.true124 ], [ %sub127, %cond.false126 ], !dbg !7162
  %173 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc48, align 8, !dbg !7164
  %b_picture_count130 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %173, i32 0, i32 20, !dbg !7165
  store i32 %cond129, i32* %b_picture_count130, align 4, !dbg !7166
  %174 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7167
  %175 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7168
  %last_key_index131 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %175, i32 0, i32 12, !dbg !7169
  %176 = load i32, i32* %last_key_index131, align 4, !dbg !7169
  %177 = load i32, i32* %i, align 4, !dbg !7170
  %sub132 = sub nsw i32 %176, %177, !dbg !7171
  call void @avio_w8(%struct.AVIOContext* %174, i32 %sub132), !dbg !7172
  br label %if.end146, !dbg !7173

if.else133:                                       ; preds = %if.end111
  %178 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7174
  %179 = load i32, i32* %key_index, align 4, !dbg !7176
  %180 = load i32, i32* %i, align 4, !dbg !7177
  %sub134 = sub nsw i32 %179, %180, !dbg !7178
  call void @avio_w8(%struct.AVIOContext* %178, i32 %sub134), !dbg !7179
  %181 = load i32, i32* %i, align 4, !dbg !7180
  %idxprom135 = sext i32 %181 to i64, !dbg !7182
  %182 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7182
  %index_entries136 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %182, i32 0, i32 5, !dbg !7183
  %183 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries136, align 8, !dbg !7183
  %arrayidx137 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %183, i64 %idxprom135, !dbg !7182
  %flags138 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx137, i32 0, i32 0, !dbg !7184
  %184 = load i8, i8* %flags138, align 8, !dbg !7184
  %conv139 = zext i8 %184 to i32, !dbg !7182
  %and140 = and i32 %conv139, 32, !dbg !7185
  %cmp141 = icmp eq i32 %and140, 32, !dbg !7186
  br i1 %cmp141, label %if.then143, label %if.end145, !dbg !7187

if.then143:                                       ; preds = %if.else133
  %185 = load i32, i32* %key_index, align 4, !dbg !7188
  %186 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7189
  %last_key_index144 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %186, i32 0, i32 12, !dbg !7190
  store i32 %185, i32* %last_key_index144, align 4, !dbg !7191
  br label %if.end145, !dbg !7189

if.end145:                                        ; preds = %if.then143, %if.else133
  %187 = load i32, i32* %i, align 4, !dbg !7192
  store i32 %187, i32* %prev_non_b_picture, align 4, !dbg !7193
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %cond.end128
  %188 = load i32, i32* %i, align 4, !dbg !7194
  %idxprom147 = sext i32 %188 to i64, !dbg !7196
  %189 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7196
  %index_entries148 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %189, i32 0, i32 5, !dbg !7197
  %190 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries148, align 8, !dbg !7197
  %arrayidx149 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %190, i64 %idxprom147, !dbg !7196
  %flags150 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx149, i32 0, i32 0, !dbg !7198
  %191 = load i8, i8* %flags150, align 8, !dbg !7198
  %conv151 = zext i8 %191 to i32, !dbg !7196
  %and152 = and i32 %conv151, 51, !dbg !7199
  %tobool153 = icmp ne i32 %and152, 0, !dbg !7199
  br i1 %tobool153, label %if.end171, label %land.lhs.true154, !dbg !7200

land.lhs.true154:                                 ; preds = %if.end146
  %192 = load i32, i32* %i, align 4, !dbg !7201
  %idxprom155 = sext i32 %192 to i64, !dbg !7202
  %193 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7202
  %index_entries156 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %193, i32 0, i32 5, !dbg !7203
  %194 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries156, align 8, !dbg !7203
  %arrayidx157 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %194, i64 %idxprom155, !dbg !7202
  %flags158 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx157, i32 0, i32 0, !dbg !7204
  %195 = load i8, i8* %flags158, align 8, !dbg !7204
  %conv159 = zext i8 %195 to i32, !dbg !7202
  %and160 = and i32 %conv159, 64, !dbg !7205
  %tobool161 = icmp ne i32 %and160, 0, !dbg !7205
  br i1 %tobool161, label %land.lhs.true162, label %if.end171, !dbg !7206

land.lhs.true162:                                 ; preds = %land.lhs.true154
  %196 = load i32, i32* %temporal_offset, align 4, !dbg !7207
  %tobool163 = icmp ne i32 %196, 0, !dbg !7207
  br i1 %tobool163, label %if.end171, label %if.then164, !dbg !7209

if.then164:                                       ; preds = %land.lhs.true162
  %197 = load i32, i32* %i, align 4, !dbg !7211
  %idxprom165 = sext i32 %197 to i64, !dbg !7212
  %198 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7212
  %index_entries166 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %198, i32 0, i32 5, !dbg !7213
  %199 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries166, align 8, !dbg !7213
  %arrayidx167 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %199, i64 %idxprom165, !dbg !7212
  %flags168 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx167, i32 0, i32 0, !dbg !7214
  %200 = load i8, i8* %flags168, align 8, !dbg !7215
  %conv169 = zext i8 %200 to i32, !dbg !7215
  %or = or i32 %conv169, 128, !dbg !7215
  %conv170 = trunc i32 %or to i8, !dbg !7215
  store i8 %conv170, i8* %flags168, align 8, !dbg !7215
  br label %if.end171, !dbg !7212

if.end171:                                        ; preds = %if.then164, %land.lhs.true162, %land.lhs.true154, %if.end146
  %201 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7216
  %202 = load i32, i32* %i, align 4, !dbg !7217
  %idxprom172 = sext i32 %202 to i64, !dbg !7218
  %203 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7218
  %index_entries173 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %203, i32 0, i32 5, !dbg !7219
  %204 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries173, align 8, !dbg !7219
  %arrayidx174 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %204, i64 %idxprom172, !dbg !7218
  %flags175 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx174, i32 0, i32 0, !dbg !7220
  %205 = load i8, i8* %flags175, align 8, !dbg !7220
  %conv176 = zext i8 %205 to i32, !dbg !7218
  call void @avio_w8(%struct.AVIOContext* %201, i32 %conv176), !dbg !7221
  %206 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7222
  %207 = load i32, i32* %i, align 4, !dbg !7223
  %idxprom177 = sext i32 %207 to i64, !dbg !7224
  %208 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7224
  %index_entries178 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %208, i32 0, i32 5, !dbg !7225
  %209 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries178, align 8, !dbg !7225
  %arrayidx179 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %209, i64 %idxprom177, !dbg !7224
  %offset = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx179, i32 0, i32 1, !dbg !7226
  %210 = load i64, i64* %offset, align 8, !dbg !7226
  call void @avio_wb64(%struct.AVIOContext* %206, i64 %210), !dbg !7227
  %211 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7228
  %nb_streams180 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %211, i32 0, i32 6, !dbg !7230
  %212 = load i32, i32* %nb_streams180, align 4, !dbg !7230
  %cmp181 = icmp ugt i32 %212, 1, !dbg !7231
  br i1 %cmp181, label %if.then183, label %if.else188, !dbg !7232

if.then183:                                       ; preds = %if.end171
  %213 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7233
  %214 = load i32, i32* %i, align 4, !dbg !7234
  %idxprom184 = sext i32 %214 to i64, !dbg !7235
  %215 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7235
  %index_entries185 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %215, i32 0, i32 5, !dbg !7236
  %216 = load %struct.MXFIndexEntry*, %struct.MXFIndexEntry** %index_entries185, align 8, !dbg !7236
  %arrayidx186 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %216, i64 %idxprom184, !dbg !7235
  %slice_offset187 = getelementptr inbounds %struct.MXFIndexEntry, %struct.MXFIndexEntry* %arrayidx186, i32 0, i32 2, !dbg !7237
  %217 = load i32, i32* %slice_offset187, align 8, !dbg !7237
  call void @avio_wb32(%struct.AVIOContext* %213, i32 %217), !dbg !7238
  br label %if.end189, !dbg !7238

if.else188:                                       ; preds = %if.end171
  %218 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7239
  call void @avio_wb32(%struct.AVIOContext* %218, i32 0), !dbg !7240
  br label %if.end189

if.end189:                                        ; preds = %if.else188, %if.then183
  br label %for.inc190, !dbg !7241

for.inc190:                                       ; preds = %if.end189
  %219 = load i32, i32* %i, align 4, !dbg !7242
  %inc191 = add nsw i32 %219, 1, !dbg !7242
  store i32 %inc191, i32* %i, align 4, !dbg !7242
  br label %for.cond56, !dbg !7244, !llvm.loop !7245

for.end192:                                       ; preds = %for.cond56
  %220 = load i32, i32* %key_index, align 4, !dbg !7247
  %221 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7248
  %edit_units_count193 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %221, i32 0, i32 6, !dbg !7249
  %222 = load i32, i32* %edit_units_count193, align 8, !dbg !7249
  %sub194 = sub i32 %220, %222, !dbg !7250
  %223 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7251
  %last_key_index195 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %223, i32 0, i32 12, !dbg !7252
  store i32 %sub194, i32* %last_key_index195, align 4, !dbg !7253
  %224 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7254
  %edit_units_count196 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %224, i32 0, i32 6, !dbg !7255
  %225 = load i32, i32* %edit_units_count196, align 8, !dbg !7255
  %226 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7256
  %last_indexed_edit_unit197 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %226, i32 0, i32 9, !dbg !7257
  %227 = load i32, i32* %last_indexed_edit_unit197, align 4, !dbg !7258
  %add198 = add i32 %227, %225, !dbg !7258
  store i32 %add198, i32* %last_indexed_edit_unit197, align 4, !dbg !7258
  %228 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7259
  %edit_units_count199 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %228, i32 0, i32 6, !dbg !7260
  store i32 0, i32* %edit_units_count199, align 8, !dbg !7261
  br label %if.end200, !dbg !7262

if.end200:                                        ; preds = %for.end192, %for.end
  %229 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7263
  %230 = load i64, i64* %pos, align 8, !dbg !7264
  call void @mxf_update_klv_size(%struct.AVIOContext* %229, i64 %230), !dbg !7265
  br label %return, !dbg !7266

return:                                           ; preds = %if.end200, %if.then
  ret void, !dbg !7267
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_system_item(%struct.AVFormatContext* %s) #0 !dbg !7269 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %frame = alloca i32, align 4
  %time_code = alloca i32, align 4
  %i = alloca i32, align 4
  %system_item_bitmap = alloca i32, align 4
  %sc = alloca %struct.MXFStreamContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7270, metadata !2529), !dbg !7271
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !7272, metadata !2529), !dbg !7273
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7274
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !7275
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7275
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !7274
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !7273
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !7276, metadata !2529), !dbg !7277
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7278
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !7279
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !7279
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !7277
  call void @llvm.dbg.declare(metadata i32* %frame, metadata !7280, metadata !2529), !dbg !7281
  call void @llvm.dbg.declare(metadata i32* %time_code, metadata !7282, metadata !2529), !dbg !7283
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7284, metadata !2529), !dbg !7285
  call void @llvm.dbg.declare(metadata i32* %system_item_bitmap, metadata !7286, metadata !2529), !dbg !7287
  store i32 88, i32* %system_item_bitmap, align 4, !dbg !7287
  %5 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7288
  %last_indexed_edit_unit = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %5, i32 0, i32 9, !dbg !7289
  %6 = load i32, i32* %last_indexed_edit_unit, align 4, !dbg !7289
  %7 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7290
  %edit_units_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %7, i32 0, i32 6, !dbg !7291
  %8 = load i32, i32* %edit_units_count, align 8, !dbg !7291
  %add = add i32 %6, %8, !dbg !7292
  store i32 %add, i32* %frame, align 4, !dbg !7293
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7294
  call void @avio_write(%struct.AVIOContext* %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @system_metadata_pack_key, i32 0, i32 0), i32 16), !dbg !7295
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7296
  call void @klv_encode_ber4_length(%struct.AVIOContext* %10, i32 57), !dbg !7297
  store i32 0, i32* %i, align 4, !dbg !7298
  br label %for.cond, !dbg !7300

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %i, align 4, !dbg !7301
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7304
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i32 0, i32 6, !dbg !7305
  %13 = load i32, i32* %nb_streams, align 4, !dbg !7305
  %cmp = icmp ult i32 %11, %13, !dbg !7306
  br i1 %cmp, label %for.body, label %for.end, !dbg !7307

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %i, align 4, !dbg !7308
  %idxprom = sext i32 %14 to i64, !dbg !7311
  %15 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7311
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %15, i32 0, i32 7, !dbg !7312
  %16 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !7312
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %16, i64 %idxprom, !dbg !7311
  %17 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !7311
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %17, i32 0, i32 19, !dbg !7313
  %18 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !7313
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %18, i32 0, i32 0, !dbg !7314
  %19 = load i32, i32* %codec_type, align 8, !dbg !7314
  %cmp2 = icmp eq i32 %19, 1, !dbg !7315
  br i1 %cmp2, label %if.then, label %if.else, !dbg !7316

if.then:                                          ; preds = %for.body
  %20 = load i32, i32* %system_item_bitmap, align 4, !dbg !7317
  %or = or i32 %20, 4, !dbg !7317
  store i32 %or, i32* %system_item_bitmap, align 4, !dbg !7317
  br label %if.end11, !dbg !7318

if.else:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !7319
  %idxprom3 = sext i32 %21 to i64, !dbg !7321
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7321
  %streams4 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i32 0, i32 7, !dbg !7322
  %23 = load %struct.AVStream**, %struct.AVStream*** %streams4, align 8, !dbg !7322
  %arrayidx5 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %23, i64 %idxprom3, !dbg !7321
  %24 = load %struct.AVStream*, %struct.AVStream** %arrayidx5, align 8, !dbg !7321
  %codecpar6 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %24, i32 0, i32 19, !dbg !7323
  %25 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar6, align 8, !dbg !7323
  %codec_type7 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %25, i32 0, i32 0, !dbg !7324
  %26 = load i32, i32* %codec_type7, align 8, !dbg !7324
  %cmp8 = icmp eq i32 %26, 2, !dbg !7325
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !7326

if.then9:                                         ; preds = %if.else
  %27 = load i32, i32* %system_item_bitmap, align 4, !dbg !7327
  %or10 = or i32 %27, 2, !dbg !7327
  store i32 %or10, i32* %system_item_bitmap, align 4, !dbg !7327
  br label %if.end, !dbg !7328

if.end:                                           ; preds = %if.then9, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !7329

for.inc:                                          ; preds = %if.end11
  %28 = load i32, i32* %i, align 4, !dbg !7330
  %inc = add nsw i32 %28, 1, !dbg !7330
  store i32 %inc, i32* %i, align 4, !dbg !7330
  br label %for.cond, !dbg !7332, !llvm.loop !7333

for.end:                                          ; preds = %for.cond
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7335
  %30 = load i32, i32* %system_item_bitmap, align 4, !dbg !7336
  call void @avio_w8(%struct.AVIOContext* %29, i32 %30), !dbg !7337
  %31 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7338
  %32 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7339
  %content_package_rate = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %32, i32 0, i32 18, !dbg !7340
  %33 = load i32, i32* %content_package_rate, align 8, !dbg !7340
  call void @avio_w8(%struct.AVIOContext* %31, i32 %33), !dbg !7341
  %34 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7342
  call void @avio_w8(%struct.AVIOContext* %34, i32 0), !dbg !7343
  %35 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7344
  call void @avio_wb16(%struct.AVIOContext* %35, i32 0), !dbg !7345
  %36 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7346
  %37 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7347
  %tc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %37, i32 0, i32 14, !dbg !7348
  %start = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %tc, i32 0, i32 0, !dbg !7349
  %38 = load i32, i32* %start, align 8, !dbg !7349
  %39 = load i32, i32* %frame, align 4, !dbg !7350
  %add12 = add i32 %38, %39, !dbg !7351
  %and = and i32 %add12, 65535, !dbg !7352
  call void @avio_wb16(%struct.AVIOContext* %36, i32 %and), !dbg !7353
  %40 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7354
  %essence_container_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %40, i32 0, i32 2, !dbg !7356
  %41 = load i32, i32* %essence_container_count, align 8, !dbg !7356
  %cmp13 = icmp sgt i32 %41, 1, !dbg !7357
  br i1 %cmp13, label %if.then14, label %if.else15, !dbg !7358

if.then14:                                        ; preds = %for.end
  %42 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7359
  call void @avio_write(%struct.AVIOContext* %42, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @multiple_desc_ul, i32 0, i32 0), i32 16), !dbg !7360
  br label %if.end21, !dbg !7360

if.else15:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !7361, metadata !2529), !dbg !7363
  %43 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7364
  %streams16 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %43, i32 0, i32 7, !dbg !7365
  %44 = load %struct.AVStream**, %struct.AVStream*** %streams16, align 8, !dbg !7365
  %arrayidx17 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %44, i64 0, !dbg !7364
  %45 = load %struct.AVStream*, %struct.AVStream** %arrayidx17, align 8, !dbg !7364
  %priv_data18 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %45, i32 0, i32 3, !dbg !7366
  %46 = load i8*, i8** %priv_data18, align 8, !dbg !7366
  %47 = bitcast i8* %46 to %struct.MXFStreamContext*, !dbg !7364
  store %struct.MXFStreamContext* %47, %struct.MXFStreamContext** %sc, align 8, !dbg !7363
  %48 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7367
  %49 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !7368
  %index = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %49, i32 0, i32 2, !dbg !7369
  %50 = load i32, i32* %index, align 8, !dbg !7369
  %idxprom19 = sext i32 %50 to i64, !dbg !7370
  %arrayidx20 = getelementptr inbounds [32 x %struct.MXFContainerEssenceEntry], [32 x %struct.MXFContainerEssenceEntry]* @mxf_essence_container_uls, i64 0, i64 %idxprom19, !dbg !7370
  %container_ul = getelementptr inbounds %struct.MXFContainerEssenceEntry, %struct.MXFContainerEssenceEntry* %arrayidx20, i32 0, i32 0, !dbg !7371
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %container_ul, i32 0, i32 0, !dbg !7370
  call void @avio_write(%struct.AVIOContext* %48, i8* %arraydecay, i32 16), !dbg !7372
  br label %if.end21

if.end21:                                         ; preds = %if.else15, %if.then14
  %51 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7373
  call void @avio_w8(%struct.AVIOContext* %51, i32 0), !dbg !7374
  %52 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7375
  call void @avio_wb64(%struct.AVIOContext* %52, i64 0), !dbg !7376
  %53 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7377
  call void @avio_wb64(%struct.AVIOContext* %53, i64 0), !dbg !7378
  %54 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7379
  call void @avio_w8(%struct.AVIOContext* %54, i32 129), !dbg !7380
  %55 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7381
  %tc22 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %55, i32 0, i32 14, !dbg !7382
  %56 = load i32, i32* %frame, align 4, !dbg !7383
  %call = call i32 @av_timecode_get_smpte_from_framenum(%struct.AVTimecode* %tc22, i32 %56), !dbg !7384
  store i32 %call, i32* %time_code, align 4, !dbg !7385
  %57 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7386
  %58 = load i32, i32* %time_code, align 4, !dbg !7387
  call void @avio_wb32(%struct.AVIOContext* %57, i32 %58), !dbg !7388
  %59 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7389
  call void @avio_wb32(%struct.AVIOContext* %59, i32 0), !dbg !7390
  %60 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7391
  call void @avio_wb64(%struct.AVIOContext* %60, i64 0), !dbg !7392
  %61 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7393
  call void @avio_write(%struct.AVIOContext* %61, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @system_metadata_package_set_key, i32 0, i32 0), i32 16), !dbg !7394
  %62 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7395
  call void @klv_encode_ber4_length(%struct.AVIOContext* %62, i32 35), !dbg !7396
  %63 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7397
  call void @avio_w8(%struct.AVIOContext* %63, i32 131), !dbg !7398
  %64 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7399
  call void @avio_wb16(%struct.AVIOContext* %64, i32 32), !dbg !7400
  %65 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7401
  call void @mxf_write_umid(%struct.AVFormatContext* %65, i32 1), !dbg !7402
  ret void, !dbg !7403
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_d10_audio_packet(%struct.AVFormatContext* %s, %struct.AVStream* %st, %struct.AVPacket* %pkt) #0 !dbg !7404 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %frame_size = alloca i32, align 4
  %samples = alloca i8*, align 8
  %end = alloca i8*, align 8
  %i = alloca i32, align 4
  %sample = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7407, metadata !2529), !dbg !7408
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !7409, metadata !2529), !dbg !7410
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !7411, metadata !2529), !dbg !7412
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !7413, metadata !2529), !dbg !7414
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7415
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !7416
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7416
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !7415
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !7414
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !7417, metadata !2529), !dbg !7418
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7419
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !7420
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !7420
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !7418
  call void @llvm.dbg.declare(metadata i32* %frame_size, metadata !7421, metadata !2529), !dbg !7422
  %5 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !7423
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %5, i32 0, i32 4, !dbg !7424
  %6 = load i32, i32* %size, align 8, !dbg !7424
  %7 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !7425
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %7, i32 0, i32 19, !dbg !7426
  %8 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !7426
  %block_align = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %8, i32 0, i32 24, !dbg !7427
  %9 = load i32, i32* %block_align, align 8, !dbg !7427
  %div = sdiv i32 %6, %9, !dbg !7428
  store i32 %div, i32* %frame_size, align 4, !dbg !7422
  call void @llvm.dbg.declare(metadata i8** %samples, metadata !7429, metadata !2529), !dbg !7430
  %10 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !7431
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %10, i32 0, i32 3, !dbg !7432
  %11 = load i8*, i8** %data, align 8, !dbg !7432
  store i8* %11, i8** %samples, align 8, !dbg !7430
  call void @llvm.dbg.declare(metadata i8** %end, metadata !7433, metadata !2529), !dbg !7434
  %12 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !7435
  %data2 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %12, i32 0, i32 3, !dbg !7436
  %13 = load i8*, i8** %data2, align 8, !dbg !7436
  %14 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !7437
  %size3 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %14, i32 0, i32 4, !dbg !7438
  %15 = load i32, i32* %size3, align 8, !dbg !7438
  %idx.ext = sext i32 %15 to i64, !dbg !7439
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !7439
  store i8* %add.ptr, i8** %end, align 8, !dbg !7434
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7440, metadata !2529), !dbg !7441
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7442
  %17 = load i32, i32* %frame_size, align 4, !dbg !7443
  %mul = mul nsw i32 %17, 4, !dbg !7444
  %mul4 = mul nsw i32 %mul, 8, !dbg !7445
  %add = add nsw i32 4, %mul4, !dbg !7446
  call void @klv_encode_ber4_length(%struct.AVIOContext* %16, i32 %add), !dbg !7447
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7448
  %19 = load i32, i32* %frame_size, align 4, !dbg !7449
  %cmp = icmp eq i32 %19, 1920, !dbg !7450
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7449

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7451

cond.false:                                       ; preds = %entry
  %20 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7453
  %edit_units_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %20, i32 0, i32 6, !dbg !7455
  %21 = load i32, i32* %edit_units_count, align 8, !dbg !7455
  %sub = sub i32 %21, 1, !dbg !7456
  %rem = urem i32 %sub, 5, !dbg !7457
  %add5 = add i32 %rem, 1, !dbg !7458
  br label %cond.end, !dbg !7459

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %add5, %cond.false ], !dbg !7460
  call void @avio_w8(%struct.AVIOContext* %18, i32 %cond), !dbg !7462
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7463
  %23 = load i32, i32* %frame_size, align 4, !dbg !7464
  call void @avio_wl16(%struct.AVIOContext* %22, i32 %23), !dbg !7465
  %24 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7466
  %25 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !7467
  %codecpar6 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %25, i32 0, i32 19, !dbg !7468
  %26 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar6, align 8, !dbg !7468
  %channels = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %26, i32 0, i32 22, !dbg !7469
  %27 = load i32, i32* %channels, align 8, !dbg !7469
  %shl = shl i32 1, %27, !dbg !7470
  %sub7 = sub nsw i32 %shl, 1, !dbg !7471
  call void @avio_w8(%struct.AVIOContext* %24, i32 %sub7), !dbg !7472
  br label %while.cond, !dbg !7473

while.cond:                                       ; preds = %for.end33, %cond.end
  %28 = load i8*, i8** %samples, align 8, !dbg !7474
  %29 = load i8*, i8** %end, align 8, !dbg !7475
  %cmp8 = icmp ult i8* %28, %29, !dbg !7476
  br i1 %cmp8, label %while.body, label %while.end, !dbg !7477

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %i, align 4, !dbg !7478
  br label %for.cond, !dbg !7481

for.cond:                                         ; preds = %for.inc, %while.body
  %30 = load i32, i32* %i, align 4, !dbg !7482
  %31 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !7485
  %codecpar9 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %31, i32 0, i32 19, !dbg !7486
  %32 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar9, align 8, !dbg !7486
  %channels10 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %32, i32 0, i32 22, !dbg !7487
  %33 = load i32, i32* %channels10, align 8, !dbg !7487
  %cmp11 = icmp slt i32 %30, %33, !dbg !7488
  br i1 %cmp11, label %for.body, label %for.end, !dbg !7489

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !7490, metadata !2529), !dbg !7492
  %34 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !7493
  %codecpar12 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %34, i32 0, i32 19, !dbg !7495
  %35 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar12, align 8, !dbg !7495
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %35, i32 0, i32 1, !dbg !7496
  %36 = load i32, i32* %codec_id, align 4, !dbg !7496
  %cmp13 = icmp eq i32 %36, 65548, !dbg !7497
  br i1 %cmp13, label %if.then, label %if.else, !dbg !7498

if.then:                                          ; preds = %for.body
  %37 = load i8*, i8** %samples, align 8, !dbg !7499
  %arrayidx = getelementptr inbounds i8, i8* %37, i64 2, !dbg !7501
  %38 = load i8, i8* %arrayidx, align 1, !dbg !7501
  %conv = zext i8 %38 to i32, !dbg !7501
  %shl14 = shl i32 %conv, 16, !dbg !7502
  %39 = load i8*, i8** %samples, align 8, !dbg !7503
  %arrayidx15 = getelementptr inbounds i8, i8* %39, i64 1, !dbg !7504
  %40 = load i8, i8* %arrayidx15, align 1, !dbg !7504
  %conv16 = zext i8 %40 to i32, !dbg !7504
  %shl17 = shl i32 %conv16, 8, !dbg !7505
  %or = or i32 %shl14, %shl17, !dbg !7506
  %41 = load i8*, i8** %samples, align 8, !dbg !7507
  %arrayidx18 = getelementptr inbounds i8, i8* %41, i64 0, !dbg !7508
  %42 = load i8, i8* %arrayidx18, align 1, !dbg !7508
  %conv19 = zext i8 %42 to i32, !dbg !7508
  %or20 = or i32 %or, %conv19, !dbg !7509
  %shl21 = shl i32 %or20, 4, !dbg !7510
  store i32 %shl21, i32* %sample, align 4, !dbg !7511
  %43 = load i8*, i8** %samples, align 8, !dbg !7512
  %add.ptr22 = getelementptr inbounds i8, i8* %43, i64 3, !dbg !7512
  store i8* %add.ptr22, i8** %samples, align 8, !dbg !7512
  br label %if.end, !dbg !7513

if.else:                                          ; preds = %for.body
  %44 = load i8*, i8** %samples, align 8, !dbg !7514
  %45 = bitcast i8* %44 to %union.unaligned_16*, !dbg !7516
  %l = bitcast %union.unaligned_16* %45 to i16*, !dbg !7516
  %46 = load i16, i16* %l, align 1, !dbg !7516
  %conv23 = zext i16 %46 to i32, !dbg !7517
  %shl24 = shl i32 %conv23, 12, !dbg !7518
  store i32 %shl24, i32* %sample, align 4, !dbg !7519
  %47 = load i8*, i8** %samples, align 8, !dbg !7520
  %add.ptr25 = getelementptr inbounds i8, i8* %47, i64 2, !dbg !7520
  store i8* %add.ptr25, i8** %samples, align 8, !dbg !7520
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %48 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7521
  %49 = load i32, i32* %sample, align 4, !dbg !7522
  %50 = load i32, i32* %i, align 4, !dbg !7523
  %or26 = or i32 %49, %50, !dbg !7524
  call void @avio_wl32(%struct.AVIOContext* %48, i32 %or26), !dbg !7525
  br label %for.inc, !dbg !7526

for.inc:                                          ; preds = %if.end
  %51 = load i32, i32* %i, align 4, !dbg !7527
  %inc = add nsw i32 %51, 1, !dbg !7527
  store i32 %inc, i32* %i, align 4, !dbg !7527
  br label %for.cond, !dbg !7529, !llvm.loop !7530

for.end:                                          ; preds = %for.cond
  br label %for.cond27, !dbg !7532

for.cond27:                                       ; preds = %for.inc31, %for.end
  %52 = load i32, i32* %i, align 4, !dbg !7533
  %cmp28 = icmp slt i32 %52, 8, !dbg !7537
  br i1 %cmp28, label %for.body30, label %for.end33, !dbg !7538

for.body30:                                       ; preds = %for.cond27
  %53 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7539
  %54 = load i32, i32* %i, align 4, !dbg !7540
  call void @avio_wl32(%struct.AVIOContext* %53, i32 %54), !dbg !7541
  br label %for.inc31, !dbg !7541

for.inc31:                                        ; preds = %for.body30
  %55 = load i32, i32* %i, align 4, !dbg !7542
  %inc32 = add nsw i32 %55, 1, !dbg !7542
  store i32 %inc32, i32* %i, align 4, !dbg !7542
  br label %for.cond27, !dbg !7544, !llvm.loop !7545

for.end33:                                        ; preds = %for.cond27
  br label %while.cond, !dbg !7546, !llvm.loop !7547

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7548
}

; Function Attrs: nounwind uwtable
define internal i32 @klv_fill_size(i64 %size) #0 !dbg !7549 {
entry:
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  %pad = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7552, metadata !2529), !dbg !7553
  call void @llvm.dbg.declare(metadata i32* %pad, metadata !7554, metadata !2529), !dbg !7555
  %0 = load i64, i64* %size.addr, align 8, !dbg !7556
  %and = and i64 %0, 511, !dbg !7557
  %sub = sub i64 512, %and, !dbg !7558
  %conv = trunc i64 %sub to i32, !dbg !7559
  store i32 %conv, i32* %pad, align 4, !dbg !7555
  %1 = load i32, i32* %pad, align 4, !dbg !7560
  %cmp = icmp ult i32 %1, 20, !dbg !7562
  br i1 %cmp, label %if.then, label %if.else, !dbg !7563

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %pad, align 4, !dbg !7564
  %add = add i32 %2, 512, !dbg !7565
  store i32 %add, i32* %retval, align 4, !dbg !7566
  br label %return, !dbg !7566

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %pad, align 4, !dbg !7567
  %and2 = and i32 %3, 511, !dbg !7568
  store i32 %and2, i32* %retval, align 4, !dbg !7569
  br label %return, !dbg !7569

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !7570
  ret i32 %4, !dbg !7570
}

declare void @avio_flush(%struct.AVIOContext*) #1

declare i32 @av_reduce(i32*, i32*, i64, i64, i64) #1

; Function Attrs: nounwind uwtable
define internal [16 x i8]* @mxf_get_mpeg2_codec_ul(%struct.AVCodecParameters* %par) #0 !dbg !7571 {
entry:
  %retval = alloca [16 x i8]*, align 8
  %par.addr = alloca %struct.AVCodecParameters*, align 8
  %long_gop = alloca i32, align 4
  store %struct.AVCodecParameters* %par, %struct.AVCodecParameters** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.addr, metadata !7574, metadata !2529), !dbg !7575
  call void @llvm.dbg.declare(metadata i32* %long_gop, metadata !7576, metadata !2529), !dbg !7577
  store i32 1, i32* %long_gop, align 4, !dbg !7577
  %0 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7578
  %profile = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %0, i32 0, i32 9, !dbg !7580
  %1 = load i32, i32* %profile, align 8, !dbg !7580
  %cmp = icmp eq i32 %1, 4, !dbg !7581
  br i1 %cmp, label %if.then, label %if.else18, !dbg !7582

if.then:                                          ; preds = %entry
  %2 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7583
  %level = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %2, i32 0, i32 10, !dbg !7586
  %3 = load i32, i32* %level, align 4, !dbg !7586
  %cmp1 = icmp eq i32 %3, 8, !dbg !7587
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !7588

if.then2:                                         ; preds = %if.then
  %4 = load i32, i32* %long_gop, align 4, !dbg !7589
  %add = add nsw i32 0, %4, !dbg !7590
  %idxprom = sext i32 %add to i64, !dbg !7591
  %arrayidx = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @mxf_mpeg2_codec_uls, i64 0, i64 %idxprom, !dbg !7591
  store [16 x i8]* %arrayidx, [16 x i8]** %retval, align 8, !dbg !7592
  br label %return, !dbg !7592

if.else:                                          ; preds = %if.then
  %5 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7593
  %level3 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %5, i32 0, i32 10, !dbg !7595
  %6 = load i32, i32* %level3, align 4, !dbg !7595
  %cmp4 = icmp eq i32 %6, 4, !dbg !7596
  br i1 %cmp4, label %if.then5, label %if.else9, !dbg !7597

if.then5:                                         ; preds = %if.else
  %7 = load i32, i32* %long_gop, align 4, !dbg !7598
  %add6 = add nsw i32 4, %7, !dbg !7599
  %idxprom7 = sext i32 %add6 to i64, !dbg !7600
  %arrayidx8 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @mxf_mpeg2_codec_uls, i64 0, i64 %idxprom7, !dbg !7600
  store [16 x i8]* %arrayidx8, [16 x i8]** %retval, align 8, !dbg !7601
  br label %return, !dbg !7601

if.else9:                                         ; preds = %if.else
  %8 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7602
  %level10 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %8, i32 0, i32 10, !dbg !7604
  %9 = load i32, i32* %level10, align 4, !dbg !7604
  %cmp11 = icmp eq i32 %9, 6, !dbg !7605
  br i1 %cmp11, label %if.then12, label %if.end, !dbg !7606

if.then12:                                        ; preds = %if.else9
  %10 = load i32, i32* %long_gop, align 4, !dbg !7607
  %add13 = add nsw i32 8, %10, !dbg !7608
  %idxprom14 = sext i32 %add13 to i64, !dbg !7609
  %arrayidx15 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @mxf_mpeg2_codec_uls, i64 0, i64 %idxprom14, !dbg !7609
  store [16 x i8]* %arrayidx15, [16 x i8]** %retval, align 8, !dbg !7610
  br label %return, !dbg !7610

if.end:                                           ; preds = %if.else9
  br label %if.end16

if.end16:                                         ; preds = %if.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end38, !dbg !7611

if.else18:                                        ; preds = %entry
  %11 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7612
  %profile19 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %11, i32 0, i32 9, !dbg !7615
  %12 = load i32, i32* %profile19, align 8, !dbg !7615
  %cmp20 = icmp eq i32 %12, 0, !dbg !7616
  br i1 %cmp20, label %if.then21, label %if.end37, !dbg !7612

if.then21:                                        ; preds = %if.else18
  %13 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7617
  %level22 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %13, i32 0, i32 10, !dbg !7620
  %14 = load i32, i32* %level22, align 4, !dbg !7620
  %cmp23 = icmp eq i32 %14, 5, !dbg !7621
  br i1 %cmp23, label %if.then24, label %if.else28, !dbg !7622

if.then24:                                        ; preds = %if.then21
  %15 = load i32, i32* %long_gop, align 4, !dbg !7623
  %add25 = add nsw i32 2, %15, !dbg !7624
  %idxprom26 = sext i32 %add25 to i64, !dbg !7625
  %arrayidx27 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @mxf_mpeg2_codec_uls, i64 0, i64 %idxprom26, !dbg !7625
  store [16 x i8]* %arrayidx27, [16 x i8]** %retval, align 8, !dbg !7626
  br label %return, !dbg !7626

if.else28:                                        ; preds = %if.then21
  %16 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !7627
  %level29 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %16, i32 0, i32 10, !dbg !7629
  %17 = load i32, i32* %level29, align 4, !dbg !7629
  %cmp30 = icmp eq i32 %17, 2, !dbg !7630
  br i1 %cmp30, label %if.then31, label %if.end35, !dbg !7631

if.then31:                                        ; preds = %if.else28
  %18 = load i32, i32* %long_gop, align 4, !dbg !7632
  %add32 = add nsw i32 6, %18, !dbg !7633
  %idxprom33 = sext i32 %add32 to i64, !dbg !7634
  %arrayidx34 = getelementptr inbounds [10 x [16 x i8]], [10 x [16 x i8]]* @mxf_mpeg2_codec_uls, i64 0, i64 %idxprom33, !dbg !7634
  store [16 x i8]* %arrayidx34, [16 x i8]** %retval, align 8, !dbg !7635
  br label %return, !dbg !7635

if.end35:                                         ; preds = %if.else28
  br label %if.end36

if.end36:                                         ; preds = %if.end35
  br label %if.end37, !dbg !7636

if.end37:                                         ; preds = %if.end36, %if.else18
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end17
  store [16 x i8]* null, [16 x i8]** %retval, align 8, !dbg !7637
  br label %return, !dbg !7637

return:                                           ; preds = %if.end38, %if.then31, %if.then24, %if.then12, %if.then5, %if.then2
  %19 = load [16 x i8]*, [16 x i8]** %retval, align 8, !dbg !7638
  ret [16 x i8]* %19, !dbg !7638
}

declare i32 @avpriv_dnxhd_get_frame_size(i32) #1

declare i32 @avpriv_dnxhd_get_hr_frame_size(i32, i32, i32) #1

declare i32 @avpriv_dnxhd_get_interlaced(i32) #1

declare %struct.AVDVProfile* @av_dv_frame_profile(%struct.AVDVProfile*, i8*, i32) #1

declare i8* @avpriv_find_start_code(i8*, i8*, i32*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_write_opatom_body_partition(%struct.AVFormatContext* %s) #0 !dbg !7639 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %st = alloca %struct.AVStream*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  %key = alloca i8*, align 8
  %err = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7640, metadata !2529), !dbg !7641
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !7642, metadata !2529), !dbg !7643
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7644
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !7645
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7645
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !7644
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !7643
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !7646, metadata !2529), !dbg !7647
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7648
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !7649
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !7649
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !7647
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !7650, metadata !2529), !dbg !7651
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7652
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 7, !dbg !7653
  %6 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !7653
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %6, i64 0, !dbg !7652
  %7 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !7652
  store %struct.AVStream* %7, %struct.AVStream** %st, align 8, !dbg !7651
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !7654, metadata !2529), !dbg !7655
  %8 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !7656
  %priv_data2 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %8, i32 0, i32 3, !dbg !7657
  %9 = load i8*, i8** %priv_data2, align 8, !dbg !7657
  %10 = bitcast i8* %9 to %struct.MXFStreamContext*, !dbg !7656
  store %struct.MXFStreamContext* %10, %struct.MXFStreamContext** %sc, align 8, !dbg !7655
  call void @llvm.dbg.declare(metadata i8** %key, metadata !7658, metadata !2529), !dbg !7659
  store i8* null, i8** %key, align 8, !dbg !7659
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7660, metadata !2529), !dbg !7661
  %11 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7662
  %header_written = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %11, i32 0, i32 4, !dbg !7664
  %12 = load i32, i32* %header_written, align 4, !dbg !7664
  %tobool = icmp ne i32 %12, 0, !dbg !7662
  br i1 %tobool, label %if.end, label %if.then, !dbg !7665

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @body_partition_key, i32 0, i32 0), i8** %key, align 8, !dbg !7666
  br label %if.end, !dbg !7667

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7668
  %14 = load i8*, i8** %key, align 8, !dbg !7670
  %call = call i32 @mxf_write_partition(%struct.AVFormatContext* %13, i32 1, i32 0, i8* %14, i32 0), !dbg !7671
  store i32 %call, i32* %err, align 4, !dbg !7672
  %cmp = icmp slt i32 %call, 0, !dbg !7673
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !7674

if.then3:                                         ; preds = %if.end
  %15 = load i32, i32* %err, align 4, !dbg !7675
  store i32 %15, i32* %retval, align 4, !dbg !7676
  br label %return, !dbg !7676

if.end4:                                          ; preds = %if.end
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7677
  call void @mxf_write_klv_fill(%struct.AVFormatContext* %16), !dbg !7678
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7679
  %18 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !7680
  %track_essence_element_key = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %18, i32 0, i32 1, !dbg !7681
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %track_essence_element_key, i32 0, i32 0, !dbg !7680
  call void @avio_write(%struct.AVIOContext* %17, i8* %arraydecay, i32 16), !dbg !7682
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7683
  %20 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7684
  %body_offset = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %20, i32 0, i32 19, !dbg !7685
  %21 = load i64, i64* %body_offset, align 8, !dbg !7685
  call void @klv_encode_ber9_length(%struct.AVIOContext* %19, i64 %21), !dbg !7686
  store i32 0, i32* %retval, align 4, !dbg !7687
  br label %return, !dbg !7687

return:                                           ; preds = %if.end4, %if.then3
  %22 = load i32, i32* %retval, align 4, !dbg !7688
  ret i32 %22, !dbg !7688
}

; Function Attrs: nounwind uwtable
define internal void @klv_encode_ber9_length(%struct.AVIOContext* %pb, i64 %len) #0 !dbg !7689 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %len.addr = alloca i64, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7692, metadata !2529), !dbg !7693
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !7694, metadata !2529), !dbg !7695
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7696
  call void @avio_w8(%struct.AVIOContext* %0, i32 136), !dbg !7697
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7698
  %2 = load i64, i64* %len.addr, align 8, !dbg !7699
  call void @avio_wb64(%struct.AVIOContext* %1, i64 %2), !dbg !7700
  ret void, !dbg !7701
}

; Function Attrs: nounwind uwtable
define internal i32 @klv_ber_length(i64 %len) #0 !dbg !7702 {
entry:
  %retval = alloca i32, align 4
  %len.addr = alloca i64, align 8
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !7705, metadata !2529), !dbg !7706
  %0 = load i64, i64* %len.addr, align 8, !dbg !7707
  %cmp = icmp ult i64 %0, 128, !dbg !7709
  br i1 %cmp, label %if.then, label %if.else, !dbg !7710

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !7711
  br label %return, !dbg !7711

if.else:                                          ; preds = %entry
  %1 = load i64, i64* %len.addr, align 8, !dbg !7712
  %or = or i64 %1, 1, !dbg !7713
  %conv = trunc i64 %or to i32, !dbg !7714
  %2 = call i32 @llvm.ctlz.i32(i32 %conv, i1 true), !dbg !7715
  %sub = sub nsw i32 31, %2, !dbg !7716
  %shr = ashr i32 %sub, 3, !dbg !7717
  %add = add nsw i32 %shr, 2, !dbg !7718
  store i32 %add, i32* %retval, align 4, !dbg !7719
  br label %return, !dbg !7719

return:                                           ; preds = %if.else, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !7720
  ret i32 %3, !dbg !7720
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_essence_container_refs(%struct.AVFormatContext* %s) #0 !dbg !7721 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %c = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %i = alloca i32, align 4
  %sc = alloca %struct.MXFStreamContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7722, metadata !2529), !dbg !7723
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %c, metadata !7724, metadata !2529), !dbg !7725
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7726
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !7727
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7727
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !7726
  store %struct.MXFContext* %2, %struct.MXFContext** %c, align 8, !dbg !7725
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !7728, metadata !2529), !dbg !7729
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7730
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !7731
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !7731
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !7729
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7732, metadata !2529), !dbg !7733
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7734
  %6 = load %struct.MXFContext*, %struct.MXFContext** %c, align 8, !dbg !7735
  %essence_container_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %6, i32 0, i32 2, !dbg !7736
  %7 = load i32, i32* %essence_container_count, align 8, !dbg !7736
  %cmp = icmp sgt i32 %7, 1, !dbg !7737
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7735

cond.true:                                        ; preds = %entry
  %8 = load %struct.MXFContext*, %struct.MXFContext** %c, align 8, !dbg !7738
  %essence_container_count2 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %8, i32 0, i32 2, !dbg !7740
  %9 = load i32, i32* %essence_container_count2, align 8, !dbg !7740
  %add = add nsw i32 %9, 1, !dbg !7741
  br label %cond.end, !dbg !7742

cond.false:                                       ; preds = %entry
  %10 = load %struct.MXFContext*, %struct.MXFContext** %c, align 8, !dbg !7743
  %essence_container_count3 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %10, i32 0, i32 2, !dbg !7745
  %11 = load i32, i32* %essence_container_count3, align 8, !dbg !7745
  br label %cond.end, !dbg !7746

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %11, %cond.false ], !dbg !7747
  call void @mxf_write_refs_count(%struct.AVIOContext* %5, i32 %cond), !dbg !7749
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7750
  %13 = bitcast %struct.AVFormatContext* %12 to i8*, !dbg !7750
  %14 = load %struct.MXFContext*, %struct.MXFContext** %c, align 8, !dbg !7751
  %essence_container_count4 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %14, i32 0, i32 2, !dbg !7752
  %15 = load i32, i32* %essence_container_count4, align 8, !dbg !7752
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 48, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.58, i32 0, i32 0), i32 %15), !dbg !7753
  store i32 0, i32* %i, align 4, !dbg !7754
  br label %for.cond, !dbg !7756

for.cond:                                         ; preds = %for.inc, %cond.end
  %16 = load i32, i32* %i, align 4, !dbg !7757
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7760
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %17, i32 0, i32 6, !dbg !7761
  %18 = load i32, i32* %nb_streams, align 4, !dbg !7761
  %cmp5 = icmp ult i32 %16, %18, !dbg !7762
  br i1 %cmp5, label %for.body, label %for.end, !dbg !7763

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !7764, metadata !2529), !dbg !7766
  %19 = load i32, i32* %i, align 4, !dbg !7767
  %idxprom = sext i32 %19 to i64, !dbg !7768
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7768
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i32 0, i32 7, !dbg !7769
  %21 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !7769
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %21, i64 %idxprom, !dbg !7768
  %22 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !7768
  %priv_data6 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %22, i32 0, i32 3, !dbg !7770
  %23 = load i8*, i8** %priv_data6, align 8, !dbg !7770
  %24 = bitcast i8* %23 to %struct.MXFStreamContext*, !dbg !7768
  store %struct.MXFStreamContext* %24, %struct.MXFStreamContext** %sc, align 8, !dbg !7766
  %25 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !7771
  %track_essence_element_key = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %25, i32 0, i32 1, !dbg !7773
  %arrayidx7 = getelementptr inbounds [16 x i8], [16 x i8]* %track_essence_element_key, i64 0, i64 15, !dbg !7771
  %26 = load i8, i8* %arrayidx7, align 1, !dbg !7771
  %conv = zext i8 %26 to i32, !dbg !7771
  %cmp8 = icmp ne i32 %conv, 0, !dbg !7774
  br i1 %cmp8, label %if.then, label %if.end, !dbg !7775

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !7776

if.end:                                           ; preds = %for.body
  %27 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7777
  %28 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !7778
  %index = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %28, i32 0, i32 2, !dbg !7779
  %29 = load i32, i32* %index, align 8, !dbg !7779
  %idxprom10 = sext i32 %29 to i64, !dbg !7780
  %arrayidx11 = getelementptr inbounds [32 x %struct.MXFContainerEssenceEntry], [32 x %struct.MXFContainerEssenceEntry]* @mxf_essence_container_uls, i64 0, i64 %idxprom10, !dbg !7780
  %container_ul = getelementptr inbounds %struct.MXFContainerEssenceEntry, %struct.MXFContainerEssenceEntry* %arrayidx11, i32 0, i32 0, !dbg !7781
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %container_ul, i32 0, i32 0, !dbg !7780
  call void @avio_write(%struct.AVIOContext* %27, i8* %arraydecay, i32 16), !dbg !7782
  %30 = load %struct.MXFContext*, %struct.MXFContext** %c, align 8, !dbg !7783
  %essence_container_count12 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %30, i32 0, i32 2, !dbg !7785
  %31 = load i32, i32* %essence_container_count12, align 8, !dbg !7785
  %cmp13 = icmp eq i32 %31, 1, !dbg !7786
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !7787

if.then15:                                        ; preds = %if.end
  br label %for.end, !dbg !7788

if.end16:                                         ; preds = %if.end
  br label %for.inc, !dbg !7789

for.inc:                                          ; preds = %if.end16, %if.then
  %32 = load i32, i32* %i, align 4, !dbg !7790
  %inc = add nsw i32 %32, 1, !dbg !7790
  store i32 %inc, i32* %i, align 4, !dbg !7790
  br label %for.cond, !dbg !7792, !llvm.loop !7793

for.end:                                          ; preds = %if.then15, %for.cond
  %33 = load %struct.MXFContext*, %struct.MXFContext** %c, align 8, !dbg !7795
  %essence_container_count17 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %33, i32 0, i32 2, !dbg !7797
  %34 = load i32, i32* %essence_container_count17, align 8, !dbg !7797
  %cmp18 = icmp sgt i32 %34, 1, !dbg !7798
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !7799

if.then20:                                        ; preds = %for.end
  %35 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7800
  call void @avio_write(%struct.AVIOContext* %35, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @multiple_desc_ul, i32 0, i32 0), i32 16), !dbg !7801
  br label %if.end21, !dbg !7801

if.end21:                                         ; preds = %if.then20, %for.end
  ret void, !dbg !7802
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_primer_pack(%struct.AVFormatContext* %s) #0 !dbg !7803 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %local_tag_number = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7804, metadata !2529), !dbg !7805
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !7806, metadata !2529), !dbg !7807
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7808
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !7809
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7809
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !7808
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !7807
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !7810, metadata !2529), !dbg !7811
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7812
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !7813
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !7813
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !7811
  call void @llvm.dbg.declare(metadata i32* %local_tag_number, metadata !7814, metadata !2529), !dbg !7815
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7816, metadata !2529), !dbg !7817
  store i32 0, i32* %i, align 4, !dbg !7817
  store i32 98, i32* %local_tag_number, align 4, !dbg !7818
  %5 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7819
  %store_user_comments = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %5, i32 0, i32 26, !dbg !7820
  %6 = load i32, i32* %store_user_comments, align 8, !dbg !7820
  %conv = sext i32 %6 to i64, !dbg !7819
  %mul = mul i64 %conv, 3, !dbg !7821
  %7 = load i32, i32* %local_tag_number, align 4, !dbg !7822
  %conv2 = sext i32 %7 to i64, !dbg !7822
  %add = add i64 %conv2, %mul, !dbg !7822
  %conv3 = trunc i64 %add to i32, !dbg !7822
  store i32 %conv3, i32* %local_tag_number, align 4, !dbg !7822
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7823
  call void @avio_write(%struct.AVIOContext* %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @primer_pack_key, i32 0, i32 0), i32 16), !dbg !7824
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7825
  %10 = load i32, i32* %local_tag_number, align 4, !dbg !7826
  %mul4 = mul nsw i32 %10, 18, !dbg !7827
  %add5 = add nsw i32 %mul4, 8, !dbg !7828
  %conv6 = sext i32 %add5 to i64, !dbg !7826
  %call = call i32 @klv_encode_ber_length(%struct.AVIOContext* %9, i64 %conv6), !dbg !7829
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7830
  %12 = load i32, i32* %local_tag_number, align 4, !dbg !7831
  call void @avio_wb32(%struct.AVIOContext* %11, i32 %12), !dbg !7832
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7833
  call void @avio_wb32(%struct.AVIOContext* %13, i32 18), !dbg !7834
  store i32 0, i32* %i, align 4, !dbg !7835
  br label %for.cond, !dbg !7837

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %i, align 4, !dbg !7838
  %conv7 = sext i32 %14 to i64, !dbg !7838
  %cmp = icmp ult i64 %conv7, 98, !dbg !7841
  br i1 %cmp, label %for.body, label %for.end, !dbg !7842

for.body:                                         ; preds = %for.cond
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7843
  %16 = load i32, i32* %i, align 4, !dbg !7845
  %idxprom = sext i32 %16 to i64, !dbg !7846
  %arrayidx = getelementptr inbounds [98 x %struct.MXFLocalTagPair], [98 x %struct.MXFLocalTagPair]* @mxf_local_tag_batch, i64 0, i64 %idxprom, !dbg !7846
  %local_tag = getelementptr inbounds %struct.MXFLocalTagPair, %struct.MXFLocalTagPair* %arrayidx, i32 0, i32 0, !dbg !7847
  %17 = load i32, i32* %local_tag, align 4, !dbg !7847
  call void @avio_wb16(%struct.AVIOContext* %15, i32 %17), !dbg !7848
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7849
  %19 = load i32, i32* %i, align 4, !dbg !7850
  %idxprom9 = sext i32 %19 to i64, !dbg !7851
  %arrayidx10 = getelementptr inbounds [98 x %struct.MXFLocalTagPair], [98 x %struct.MXFLocalTagPair]* @mxf_local_tag_batch, i64 0, i64 %idxprom9, !dbg !7851
  %uid = getelementptr inbounds %struct.MXFLocalTagPair, %struct.MXFLocalTagPair* %arrayidx10, i32 0, i32 1, !dbg !7852
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %uid, i32 0, i32 0, !dbg !7851
  call void @avio_write(%struct.AVIOContext* %18, i8* %arraydecay, i32 16), !dbg !7853
  br label %for.inc, !dbg !7854

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !7855
  %inc = add nsw i32 %20, 1, !dbg !7855
  store i32 %inc, i32* %i, align 4, !dbg !7855
  br label %for.cond, !dbg !7857, !llvm.loop !7858

for.end:                                          ; preds = %for.cond
  %21 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7860
  %store_user_comments11 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %21, i32 0, i32 26, !dbg !7862
  %22 = load i32, i32* %store_user_comments11, align 8, !dbg !7862
  %tobool = icmp ne i32 %22, 0, !dbg !7860
  br i1 %tobool, label %if.then, label %if.end, !dbg !7863

if.then:                                          ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !7864
  br label %for.cond12, !dbg !7866

for.cond12:                                       ; preds = %for.inc24, %if.then
  %23 = load i32, i32* %i, align 4, !dbg !7867
  %conv13 = sext i32 %23 to i64, !dbg !7867
  %cmp14 = icmp ult i64 %conv13, 3, !dbg !7870
  br i1 %cmp14, label %for.body16, label %for.end26, !dbg !7871

for.body16:                                       ; preds = %for.cond12
  %24 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7872
  %25 = load i32, i32* %i, align 4, !dbg !7874
  %idxprom17 = sext i32 %25 to i64, !dbg !7875
  %arrayidx18 = getelementptr inbounds [3 x %struct.MXFLocalTagPair], [3 x %struct.MXFLocalTagPair]* @mxf_user_comments_local_tag, i64 0, i64 %idxprom17, !dbg !7875
  %local_tag19 = getelementptr inbounds %struct.MXFLocalTagPair, %struct.MXFLocalTagPair* %arrayidx18, i32 0, i32 0, !dbg !7876
  %26 = load i32, i32* %local_tag19, align 4, !dbg !7876
  call void @avio_wb16(%struct.AVIOContext* %24, i32 %26), !dbg !7877
  %27 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !7878
  %28 = load i32, i32* %i, align 4, !dbg !7879
  %idxprom20 = sext i32 %28 to i64, !dbg !7880
  %arrayidx21 = getelementptr inbounds [3 x %struct.MXFLocalTagPair], [3 x %struct.MXFLocalTagPair]* @mxf_user_comments_local_tag, i64 0, i64 %idxprom20, !dbg !7880
  %uid22 = getelementptr inbounds %struct.MXFLocalTagPair, %struct.MXFLocalTagPair* %arrayidx21, i32 0, i32 1, !dbg !7881
  %arraydecay23 = getelementptr inbounds [16 x i8], [16 x i8]* %uid22, i32 0, i32 0, !dbg !7880
  call void @avio_write(%struct.AVIOContext* %27, i8* %arraydecay23, i32 16), !dbg !7882
  br label %for.inc24, !dbg !7883

for.inc24:                                        ; preds = %for.body16
  %29 = load i32, i32* %i, align 4, !dbg !7884
  %inc25 = add nsw i32 %29, 1, !dbg !7884
  store i32 %inc25, i32* %i, align 4, !dbg !7884
  br label %for.cond12, !dbg !7886, !llvm.loop !7887

for.end26:                                        ; preds = %for.cond12
  br label %if.end, !dbg !7889

if.end:                                           ; preds = %for.end26, %for.end
  ret void, !dbg !7891
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_write_header_metadata_sets(%struct.AVFormatContext* %s) #0 !dbg !7892 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %entry1 = alloca %struct.AVDictionaryEntry*, align 8
  %st = alloca %struct.AVStream*, align 8
  %i = alloca i32, align 4
  %packages = alloca [3 x %struct.MXFPackage], align 16
  %package_count = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !7893, metadata !2529), !dbg !7894
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !7895, metadata !2529), !dbg !7896
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7897
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !7898
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7898
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !7897
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !7896
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %entry1, metadata !7899, metadata !2529), !dbg !7900
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !7900
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !7901, metadata !2529), !dbg !7902
  store %struct.AVStream* null, %struct.AVStream** %st, align 8, !dbg !7902
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7903, metadata !2529), !dbg !7904
  call void @llvm.dbg.declare(metadata [3 x %struct.MXFPackage]* %packages, metadata !7905, metadata !2529), !dbg !7915
  %3 = bitcast [3 x %struct.MXFPackage]* %packages to i8*, !dbg !7915
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 72, i32 16, i1 false), !dbg !7915
  call void @llvm.dbg.declare(metadata i32* %package_count, metadata !7916, metadata !2529), !dbg !7917
  store i32 2, i32* %package_count, align 4, !dbg !7917
  %arrayidx = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i64 0, i64 0, !dbg !7918
  %type = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %arrayidx, i32 0, i32 1, !dbg !7919
  store i32 1, i32* %type, align 8, !dbg !7920
  %arrayidx2 = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i64 0, i64 1, !dbg !7921
  %type3 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %arrayidx2, i32 0, i32 1, !dbg !7922
  store i32 2, i32* %type3, align 8, !dbg !7923
  %arrayidx4 = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i64 0, i64 1, !dbg !7924
  %instance = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %arrayidx4, i32 0, i32 2, !dbg !7925
  store i32 1, i32* %instance, align 4, !dbg !7926
  %arrayidx5 = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i64 0, i64 1, !dbg !7927
  %arrayidx6 = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i64 0, i64 0, !dbg !7928
  %ref = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %arrayidx6, i32 0, i32 3, !dbg !7929
  store %struct.MXFPackage* %arrayidx5, %struct.MXFPackage** %ref, align 16, !dbg !7930
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7931
  %metadata = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 29, !dbg !7933
  %5 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !7933
  %call = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !7934
  store %struct.AVDictionaryEntry* %call, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !7935
  %tobool = icmp ne %struct.AVDictionaryEntry* %call, null, !dbg !7935
  br i1 %tobool, label %if.then, label %if.end, !dbg !7936

if.then:                                          ; preds = %entry
  %6 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !7937
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %6, i32 0, i32 1, !dbg !7938
  %7 = load i8*, i8** %value, align 8, !dbg !7938
  %arrayidx7 = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i64 0, i64 0, !dbg !7939
  %name = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %arrayidx7, i32 0, i32 0, !dbg !7940
  store i8* %7, i8** %name, align 16, !dbg !7941
  br label %if.end, !dbg !7939

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7942
  %metadata8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i32 0, i32 29, !dbg !7944
  %9 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata8, align 8, !dbg !7944
  %call9 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %9, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.60, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !7945
  store %struct.AVDictionaryEntry* %call9, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !7946
  %tobool10 = icmp ne %struct.AVDictionaryEntry* %call9, null, !dbg !7946
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !7947

if.then11:                                        ; preds = %if.end
  %10 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !7948
  %value12 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %10, i32 0, i32 1, !dbg !7950
  %11 = load i8*, i8** %value12, align 8, !dbg !7950
  %arrayidx13 = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i64 0, i64 1, !dbg !7951
  %name14 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %arrayidx13, i32 0, i32 0, !dbg !7952
  store i8* %11, i8** %name14, align 8, !dbg !7953
  br label %if.end24, !dbg !7954

if.else:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !7955
  br label %for.cond, !dbg !7958

for.cond:                                         ; preds = %for.inc, %if.else
  %12 = load i32, i32* %i, align 4, !dbg !7959
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7962
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i32 0, i32 6, !dbg !7963
  %14 = load i32, i32* %nb_streams, align 4, !dbg !7963
  %cmp = icmp ult i32 %12, %14, !dbg !7964
  br i1 %cmp, label %for.body, label %for.end, !dbg !7965

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !7966
  %idxprom = sext i32 %15 to i64, !dbg !7968
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7968
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %16, i32 0, i32 7, !dbg !7969
  %17 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !7969
  %arrayidx15 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %17, i64 %idxprom, !dbg !7968
  %18 = load %struct.AVStream*, %struct.AVStream** %arrayidx15, align 8, !dbg !7968
  store %struct.AVStream* %18, %struct.AVStream** %st, align 8, !dbg !7970
  %19 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !7971
  %metadata16 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i32 0, i32 11, !dbg !7973
  %20 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata16, align 8, !dbg !7973
  %call17 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %20, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.60, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !7974
  store %struct.AVDictionaryEntry* %call17, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !7975
  %tobool18 = icmp ne %struct.AVDictionaryEntry* %call17, null, !dbg !7975
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !7976

if.then19:                                        ; preds = %for.body
  %21 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !7977
  %value20 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %21, i32 0, i32 1, !dbg !7979
  %22 = load i8*, i8** %value20, align 8, !dbg !7979
  %arrayidx21 = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i64 0, i64 1, !dbg !7980
  %name22 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %arrayidx21, i32 0, i32 0, !dbg !7981
  store i8* %22, i8** %name22, align 8, !dbg !7982
  br label %for.end, !dbg !7983

if.end23:                                         ; preds = %for.body
  br label %for.inc, !dbg !7984

for.inc:                                          ; preds = %if.end23
  %23 = load i32, i32* %i, align 4, !dbg !7985
  %inc = add nsw i32 %23, 1, !dbg !7985
  store i32 %inc, i32* %i, align 4, !dbg !7985
  br label %for.cond, !dbg !7987, !llvm.loop !7988

for.end:                                          ; preds = %if.then19, %for.cond
  br label %if.end24

if.end24:                                         ; preds = %for.end, %if.then11
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !7990
  %metadata25 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %24, i32 0, i32 29, !dbg !7991
  %25 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata25, align 8, !dbg !7991
  %call26 = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %25, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i32 0, i32 0), %struct.AVDictionaryEntry* null, i32 0), !dbg !7992
  store %struct.AVDictionaryEntry* %call26, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !7993
  %26 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !7994
  %tobool27 = icmp ne %struct.AVDictionaryEntry* %26, null, !dbg !7994
  br i1 %tobool27, label %if.then28, label %if.end39, !dbg !7996

if.then28:                                        ; preds = %if.end24
  %27 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %entry1, align 8, !dbg !7997
  %value29 = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %27, i32 0, i32 1, !dbg !7999
  %28 = load i8*, i8** %value29, align 8, !dbg !7999
  %arrayidx30 = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i64 0, i64 2, !dbg !8000
  %name31 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %arrayidx30, i32 0, i32 0, !dbg !8001
  store i8* %28, i8** %name31, align 16, !dbg !8002
  %arrayidx32 = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i64 0, i64 2, !dbg !8003
  %type33 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %arrayidx32, i32 0, i32 1, !dbg !8004
  store i32 2, i32* %type33, align 8, !dbg !8005
  %arrayidx34 = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i64 0, i64 2, !dbg !8006
  %instance35 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %arrayidx34, i32 0, i32 2, !dbg !8007
  store i32 2, i32* %instance35, align 4, !dbg !8008
  %arrayidx36 = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i64 0, i64 2, !dbg !8009
  %arrayidx37 = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i64 0, i64 1, !dbg !8010
  %ref38 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %arrayidx37, i32 0, i32 3, !dbg !8011
  store %struct.MXFPackage* %arrayidx36, %struct.MXFPackage** %ref38, align 8, !dbg !8012
  store i32 3, i32* %package_count, align 4, !dbg !8013
  br label %if.end39, !dbg !8014

if.end39:                                         ; preds = %if.then28, %if.end24
  %29 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8015
  call void @mxf_write_preface(%struct.AVFormatContext* %29), !dbg !8016
  %30 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8017
  call void @mxf_write_identification(%struct.AVFormatContext* %30), !dbg !8018
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8019
  %arraydecay = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i32 0, i32 0, !dbg !8020
  %32 = load i32, i32* %package_count, align 4, !dbg !8021
  call void @mxf_write_content_storage(%struct.AVFormatContext* %31, %struct.MXFPackage* %arraydecay, i32 %32), !dbg !8022
  %33 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8023
  %track_instance_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %33, i32 0, i32 27, !dbg !8024
  store i32 0, i32* %track_instance_count, align 4, !dbg !8025
  store i32 0, i32* %i, align 4, !dbg !8026
  br label %for.cond40, !dbg !8028

for.cond40:                                       ; preds = %for.inc45, %if.end39
  %34 = load i32, i32* %i, align 4, !dbg !8029
  %35 = load i32, i32* %package_count, align 4, !dbg !8032
  %cmp41 = icmp slt i32 %34, %35, !dbg !8033
  br i1 %cmp41, label %for.body42, label %for.end47, !dbg !8034

for.body42:                                       ; preds = %for.cond40
  %36 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8035
  %37 = load i32, i32* %i, align 4, !dbg !8036
  %idxprom43 = sext i32 %37 to i64, !dbg !8037
  %arrayidx44 = getelementptr inbounds [3 x %struct.MXFPackage], [3 x %struct.MXFPackage]* %packages, i64 0, i64 %idxprom43, !dbg !8037
  call void @mxf_write_package(%struct.AVFormatContext* %36, %struct.MXFPackage* %arrayidx44), !dbg !8038
  br label %for.inc45, !dbg !8038

for.inc45:                                        ; preds = %for.body42
  %38 = load i32, i32* %i, align 4, !dbg !8039
  %inc46 = add nsw i32 %38, 1, !dbg !8039
  store i32 %inc46, i32* %i, align 4, !dbg !8039
  br label %for.cond40, !dbg !8041, !llvm.loop !8042

for.end47:                                        ; preds = %for.cond40
  %39 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8044
  %call48 = call i32 @mxf_write_essence_container_data(%struct.AVFormatContext* %39), !dbg !8045
  ret i32 0, !dbg !8046
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #2

; Function Attrs: nounwind uwtable
define internal void @mxf_write_refs_count(%struct.AVIOContext* %pb, i32 %ref_count) #0 !dbg !8047 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %ref_count.addr = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8048, metadata !2529), !dbg !8049
  store i32 %ref_count, i32* %ref_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref_count.addr, metadata !8050, metadata !2529), !dbg !8051
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8052
  %1 = load i32, i32* %ref_count.addr, align 4, !dbg !8053
  call void @avio_wb32(%struct.AVIOContext* %0, i32 %1), !dbg !8054
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8055
  call void @avio_wb32(%struct.AVIOContext* %2, i32 16), !dbg !8056
  ret void, !dbg !8057
}

; Function Attrs: nounwind uwtable
define internal i32 @klv_encode_ber_length(%struct.AVIOContext* %pb, i64 %len) #0 !dbg !8058 {
entry:
  %retval = alloca i32, align 4
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %len.addr = alloca i64, align 8
  %size = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8061, metadata !2529), !dbg !8062
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !8063, metadata !2529), !dbg !8064
  call void @llvm.dbg.declare(metadata i32* %size, metadata !8065, metadata !2529), !dbg !8066
  %0 = load i64, i64* %len.addr, align 8, !dbg !8067
  %cmp = icmp ult i64 %0, 128, !dbg !8069
  br i1 %cmp, label %if.then, label %if.end, !dbg !8070

if.then:                                          ; preds = %entry
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8071
  %2 = load i64, i64* %len.addr, align 8, !dbg !8073
  %conv = trunc i64 %2 to i32, !dbg !8073
  call void @avio_w8(%struct.AVIOContext* %1, i32 %conv), !dbg !8074
  store i32 1, i32* %retval, align 4, !dbg !8075
  br label %return, !dbg !8075

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %len.addr, align 8, !dbg !8076
  %or = or i64 %3, 1, !dbg !8077
  %conv1 = trunc i64 %or to i32, !dbg !8078
  %4 = call i32 @llvm.ctlz.i32(i32 %conv1, i1 true), !dbg !8079
  %sub = sub nsw i32 31, %4, !dbg !8080
  %shr = ashr i32 %sub, 3, !dbg !8081
  %add = add nsw i32 %shr, 1, !dbg !8082
  store i32 %add, i32* %size, align 4, !dbg !8083
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8084
  %6 = load i32, i32* %size, align 4, !dbg !8085
  %add2 = add nsw i32 128, %6, !dbg !8086
  call void @avio_w8(%struct.AVIOContext* %5, i32 %add2), !dbg !8087
  br label %while.cond, !dbg !8088

while.cond:                                       ; preds = %while.body, %if.end
  %7 = load i32, i32* %size, align 4, !dbg !8089
  %tobool = icmp ne i32 %7, 0, !dbg !8091
  br i1 %tobool, label %while.body, label %while.end, !dbg !8091

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %size, align 4, !dbg !8092
  %dec = add nsw i32 %8, -1, !dbg !8092
  store i32 %dec, i32* %size, align 4, !dbg !8092
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8094
  %10 = load i64, i64* %len.addr, align 8, !dbg !8095
  %11 = load i32, i32* %size, align 4, !dbg !8096
  %mul = mul nsw i32 8, %11, !dbg !8097
  %sh_prom = zext i32 %mul to i64, !dbg !8098
  %shr3 = lshr i64 %10, %sh_prom, !dbg !8098
  %and = and i64 %shr3, 255, !dbg !8099
  %conv4 = trunc i64 %and to i32, !dbg !8095
  call void @avio_w8(%struct.AVIOContext* %9, i32 %conv4), !dbg !8100
  br label %while.cond, !dbg !8101, !llvm.loop !8103

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !8104
  br label %return, !dbg !8104

return:                                           ; preds = %while.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8105
  ret i32 %12, !dbg !8105
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_preface(%struct.AVFormatContext* %s) #0 !dbg !8106 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8107, metadata !2529), !dbg !8108
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !8109, metadata !2529), !dbg !8110
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8111
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !8112
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8112
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !8111
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !8110
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !8113, metadata !2529), !dbg !8114
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8115
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !8116
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !8116
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !8114
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8117
  call void @mxf_write_metadata_key(%struct.AVIOContext* %5, i32 77568), !dbg !8118
  br label %do.body, !dbg !8119, !llvm.loop !8120

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8121

do.end:                                           ; preds = %do.body
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8124
  %7 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8125
  %essence_container_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %7, i32 0, i32 2, !dbg !8126
  %8 = load i32, i32* %essence_container_count, align 8, !dbg !8126
  %cmp = icmp sgt i32 %8, 1, !dbg !8127
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8125

cond.true:                                        ; preds = %do.end
  %9 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8128
  %essence_container_count2 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %9, i32 0, i32 2, !dbg !8130
  %10 = load i32, i32* %essence_container_count2, align 8, !dbg !8130
  %add = add nsw i32 %10, 1, !dbg !8131
  br label %cond.end, !dbg !8132

cond.false:                                       ; preds = %do.end
  %11 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8133
  %essence_container_count3 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %11, i32 0, i32 2, !dbg !8135
  %12 = load i32, i32* %essence_container_count3, align 8, !dbg !8135
  br label %cond.end, !dbg !8136

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %12, %cond.false ], !dbg !8137
  %conv = sext i32 %cond to i64, !dbg !8139
  %mul = mul nsw i64 16, %conv, !dbg !8140
  %add4 = add nsw i64 138, %mul, !dbg !8141
  %call = call i32 @klv_encode_ber_length(%struct.AVIOContext* %6, i64 %add4), !dbg !8142
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8143
  call void @mxf_write_local_tag(%struct.AVIOContext* %13, i32 16, i32 15370), !dbg !8144
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8145
  call void @mxf_write_uuid(%struct.AVIOContext* %14, i32 11, i32 0), !dbg !8146
  br label %do.body5, !dbg !8147, !llvm.loop !8148

do.body5:                                         ; preds = %cond.end
  br label %do.end6, !dbg !8149

do.end6:                                          ; preds = %do.body5
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8152
  call void @mxf_write_local_tag(%struct.AVIOContext* %15, i32 8, i32 15106), !dbg !8153
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8154
  %17 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8155
  %timestamp = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %17, i32 0, i32 7, !dbg !8156
  %18 = load i64, i64* %timestamp, align 8, !dbg !8156
  call void @avio_wb64(%struct.AVIOContext* %16, i64 %18), !dbg !8157
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8158
  call void @mxf_write_local_tag(%struct.AVIOContext* %19, i32 2, i32 15109), !dbg !8159
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8160
  call void @avio_wb16(%struct.AVIOContext* %20, i32 259), !dbg !8161
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8162
  call void @mxf_write_local_tag(%struct.AVIOContext* %21, i32 4, i32 15111), !dbg !8163
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8164
  call void @avio_wb32(%struct.AVIOContext* %22, i32 1), !dbg !8165
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8166
  call void @mxf_write_local_tag(%struct.AVIOContext* %23, i32 24, i32 15110), !dbg !8167
  %24 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8168
  call void @mxf_write_refs_count(%struct.AVIOContext* %24, i32 1), !dbg !8169
  %25 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8170
  call void @mxf_write_uuid(%struct.AVIOContext* %25, i32 12, i32 0), !dbg !8171
  %26 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8172
  call void @mxf_write_local_tag(%struct.AVIOContext* %26, i32 16, i32 15107), !dbg !8173
  %27 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8174
  call void @mxf_write_uuid(%struct.AVIOContext* %27, i32 13, i32 0), !dbg !8175
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8176
  call void @mxf_write_local_tag(%struct.AVIOContext* %28, i32 16, i32 15113), !dbg !8177
  %29 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8178
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %29, i32 0, i32 2, !dbg !8180
  %30 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !8180
  %cmp7 = icmp eq %struct.AVOutputFormat* %30, @ff_mxf_opatom_muxer, !dbg !8181
  br i1 %cmp7, label %if.then, label %if.else, !dbg !8182

if.then:                                          ; preds = %do.end6
  %31 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8183
  call void @avio_write(%struct.AVIOContext* %31, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @opatom_ul, i32 0, i32 0), i32 16), !dbg !8184
  br label %if.end, !dbg !8184

if.else:                                          ; preds = %do.end6
  %32 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8185
  call void @avio_write(%struct.AVIOContext* %32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @op1a_ul, i32 0, i32 0), i32 16), !dbg !8186
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %33 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8187
  %34 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8188
  %essence_container_count9 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %34, i32 0, i32 2, !dbg !8189
  %35 = load i32, i32* %essence_container_count9, align 8, !dbg !8189
  %cmp10 = icmp sgt i32 %35, 1, !dbg !8190
  br i1 %cmp10, label %cond.true12, label %cond.false15, !dbg !8188

cond.true12:                                      ; preds = %if.end
  %36 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8191
  %essence_container_count13 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %36, i32 0, i32 2, !dbg !8192
  %37 = load i32, i32* %essence_container_count13, align 8, !dbg !8192
  %add14 = add nsw i32 %37, 1, !dbg !8193
  br label %cond.end17, !dbg !8194

cond.false15:                                     ; preds = %if.end
  %38 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8195
  %essence_container_count16 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %38, i32 0, i32 2, !dbg !8196
  %39 = load i32, i32* %essence_container_count16, align 8, !dbg !8196
  br label %cond.end17, !dbg !8197

cond.end17:                                       ; preds = %cond.false15, %cond.true12
  %cond18 = phi i32 [ %add14, %cond.true12 ], [ %39, %cond.false15 ], !dbg !8198
  %conv19 = sext i32 %cond18 to i64, !dbg !8199
  %mul20 = mul nsw i64 16, %conv19, !dbg !8200
  %add21 = add nsw i64 8, %mul20, !dbg !8201
  %conv22 = trunc i64 %add21 to i32, !dbg !8202
  call void @mxf_write_local_tag(%struct.AVIOContext* %33, i32 %conv22, i32 15114), !dbg !8203
  %40 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8204
  call void @mxf_write_essence_container_refs(%struct.AVFormatContext* %40), !dbg !8205
  %41 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8206
  call void @mxf_write_local_tag(%struct.AVIOContext* %41, i32 8, i32 15115), !dbg !8207
  %42 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8208
  call void @avio_wb64(%struct.AVIOContext* %42, i64 0), !dbg !8209
  ret void, !dbg !8210
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_identification(%struct.AVFormatContext* %s) #0 !dbg !8211 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %company = alloca i8*, align 8
  %product = alloca i8*, align 8
  %version = alloca i8*, align 8
  %length = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8212, metadata !2529), !dbg !8213
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !8214, metadata !2529), !dbg !8215
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8216
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !8217
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8217
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !8216
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !8215
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !8218, metadata !2529), !dbg !8219
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8220
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !8221
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !8221
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !8219
  call void @llvm.dbg.declare(metadata i8** %company, metadata !8222, metadata !2529), !dbg !8223
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i32 0, i32 0), i8** %company, align 8, !dbg !8223
  call void @llvm.dbg.declare(metadata i8** %product, metadata !8224, metadata !2529), !dbg !8225
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8226
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 2, !dbg !8227
  %6 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !8227
  %cmp = icmp ne %struct.AVOutputFormat* %6, @ff_mxf_opatom_muxer, !dbg !8228
  %cond = select i1 %cmp, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.64, i32 0, i32 0), !dbg !8226
  store i8* %cond, i8** %product, align 8, !dbg !8225
  call void @llvm.dbg.declare(metadata i8** %version, metadata !8229, metadata !2529), !dbg !8230
  call void @llvm.dbg.declare(metadata i32* %length, metadata !8231, metadata !2529), !dbg !8232
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8233
  call void @mxf_write_metadata_key(%struct.AVIOContext* %7, i32 77824), !dbg !8234
  br label %do.body, !dbg !8235, !llvm.loop !8236

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8237

do.end:                                           ; preds = %do.body
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8240
  %flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i32 0, i32 15, !dbg !8241
  %9 = load i32, i32* %flags, align 8, !dbg !8241
  %and = and i32 %9, 1024, !dbg !8242
  %tobool = icmp ne i32 %and, 0, !dbg !8240
  %cond2 = select i1 %tobool, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0), !dbg !8240
  store i8* %cond2, i8** %version, align 8, !dbg !8243
  %10 = load i8*, i8** %company, align 8, !dbg !8244
  %call = call i32 @mxf_utf16_local_tag_length(i8* %10), !dbg !8245
  %add = add nsw i32 100, %call, !dbg !8246
  %11 = load i8*, i8** %product, align 8, !dbg !8247
  %call3 = call i32 @mxf_utf16_local_tag_length(i8* %11), !dbg !8248
  %add4 = add nsw i32 %add, %call3, !dbg !8249
  %12 = load i8*, i8** %version, align 8, !dbg !8250
  %call5 = call i32 @mxf_utf16_local_tag_length(i8* %12), !dbg !8251
  %add6 = add nsw i32 %add4, %call5, !dbg !8252
  store i32 %add6, i32* %length, align 4, !dbg !8253
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8254
  %14 = load i32, i32* %length, align 4, !dbg !8255
  %conv = sext i32 %14 to i64, !dbg !8255
  %call7 = call i32 @klv_encode_ber_length(%struct.AVIOContext* %13, i64 %conv), !dbg !8256
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8257
  call void @mxf_write_local_tag(%struct.AVIOContext* %15, i32 16, i32 15370), !dbg !8258
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8259
  call void @mxf_write_uuid(%struct.AVIOContext* %16, i32 12, i32 0), !dbg !8260
  br label %do.body8, !dbg !8261, !llvm.loop !8262

do.body8:                                         ; preds = %do.end
  br label %do.end9, !dbg !8263

do.end9:                                          ; preds = %do.body8
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8266
  call void @mxf_write_local_tag(%struct.AVIOContext* %17, i32 16, i32 15369), !dbg !8267
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8268
  call void @mxf_write_uuid(%struct.AVIOContext* %18, i32 12, i32 1), !dbg !8269
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8270
  %20 = load i8*, i8** %company, align 8, !dbg !8271
  call void @mxf_write_local_tag_utf16(%struct.AVIOContext* %19, i32 15361, i8* %20), !dbg !8272
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8273
  %22 = load i8*, i8** %product, align 8, !dbg !8274
  call void @mxf_write_local_tag_utf16(%struct.AVIOContext* %21, i32 15362, i8* %22), !dbg !8275
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8276
  call void @mxf_write_local_tag(%struct.AVIOContext* %23, i32 10, i32 15363), !dbg !8277
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8278
  call void @store_version(%struct.AVFormatContext* %24), !dbg !8279
  %25 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8280
  %26 = load i8*, i8** %version, align 8, !dbg !8281
  call void @mxf_write_local_tag_utf16(%struct.AVIOContext* %25, i32 15364, i8* %26), !dbg !8282
  %27 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8283
  call void @mxf_write_local_tag(%struct.AVIOContext* %27, i32 16, i32 15365), !dbg !8284
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8285
  call void @mxf_write_uuid(%struct.AVIOContext* %28, i32 12, i32 2), !dbg !8286
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8287
  call void @mxf_write_local_tag(%struct.AVIOContext* %29, i32 8, i32 15366), !dbg !8288
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8289
  %31 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8290
  %timestamp = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %31, i32 0, i32 7, !dbg !8291
  %32 = load i64, i64* %timestamp, align 8, !dbg !8291
  call void @avio_wb64(%struct.AVIOContext* %30, i64 %32), !dbg !8292
  %33 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8293
  call void @mxf_write_local_tag(%struct.AVIOContext* %33, i32 10, i32 15367), !dbg !8294
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8295
  call void @store_version(%struct.AVFormatContext* %34), !dbg !8296
  ret void, !dbg !8297
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_content_storage(%struct.AVFormatContext* %s, %struct.MXFPackage* %packages, i32 %package_count) #0 !dbg !8298 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %packages.addr = alloca %struct.MXFPackage*, align 8
  %package_count.addr = alloca i32, align 4
  %pb = alloca %struct.AVIOContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8302, metadata !2529), !dbg !8303
  store %struct.MXFPackage* %packages, %struct.MXFPackage** %packages.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFPackage** %packages.addr, metadata !8304, metadata !2529), !dbg !8305
  store i32 %package_count, i32* %package_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %package_count.addr, metadata !8306, metadata !2529), !dbg !8307
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !8308, metadata !2529), !dbg !8309
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8310
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 4, !dbg !8311
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !8311
  store %struct.AVIOContext* %1, %struct.AVIOContext** %pb, align 8, !dbg !8309
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8312, metadata !2529), !dbg !8313
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8314
  call void @mxf_write_metadata_key(%struct.AVIOContext* %2, i32 71680), !dbg !8315
  br label %do.body, !dbg !8316, !llvm.loop !8317

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8318

do.end:                                           ; preds = %do.body
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8321
  %4 = load i32, i32* %package_count.addr, align 4, !dbg !8322
  %mul = mul nsw i32 16, %4, !dbg !8323
  %add = add nsw i32 60, %mul, !dbg !8324
  %conv = sext i32 %add to i64, !dbg !8325
  %call = call i32 @klv_encode_ber_length(%struct.AVIOContext* %3, i64 %conv), !dbg !8326
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8327
  call void @mxf_write_local_tag(%struct.AVIOContext* %5, i32 16, i32 15370), !dbg !8328
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8329
  call void @mxf_write_uuid(%struct.AVIOContext* %6, i32 13, i32 0), !dbg !8330
  br label %do.body2, !dbg !8331, !llvm.loop !8332

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !8333

do.end3:                                          ; preds = %do.body2
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8336
  %8 = load i32, i32* %package_count.addr, align 4, !dbg !8337
  %mul4 = mul nsw i32 16, %8, !dbg !8338
  %add5 = add nsw i32 %mul4, 8, !dbg !8339
  call void @mxf_write_local_tag(%struct.AVIOContext* %7, i32 %add5, i32 6401), !dbg !8340
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8341
  %10 = load i32, i32* %package_count.addr, align 4, !dbg !8342
  call void @mxf_write_refs_count(%struct.AVIOContext* %9, i32 %10), !dbg !8343
  store i32 0, i32* %i, align 4, !dbg !8344
  br label %for.cond, !dbg !8346

for.cond:                                         ; preds = %for.inc, %do.end3
  %11 = load i32, i32* %i, align 4, !dbg !8347
  %12 = load i32, i32* %package_count.addr, align 4, !dbg !8350
  %cmp = icmp slt i32 %11, %12, !dbg !8351
  br i1 %cmp, label %for.body, label %for.end, !dbg !8352

for.body:                                         ; preds = %for.cond
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8353
  %14 = load i32, i32* %i, align 4, !dbg !8355
  %idxprom = sext i32 %14 to i64, !dbg !8356
  %15 = load %struct.MXFPackage*, %struct.MXFPackage** %packages.addr, align 8, !dbg !8356
  %arrayidx = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %15, i64 %idxprom, !dbg !8356
  %type = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %arrayidx, i32 0, i32 1, !dbg !8357
  %16 = load i32, i32* %type, align 8, !dbg !8357
  %17 = load i32, i32* %i, align 4, !dbg !8358
  %idxprom7 = sext i32 %17 to i64, !dbg !8359
  %18 = load %struct.MXFPackage*, %struct.MXFPackage** %packages.addr, align 8, !dbg !8359
  %arrayidx8 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %18, i64 %idxprom7, !dbg !8359
  %instance = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %arrayidx8, i32 0, i32 2, !dbg !8360
  %19 = load i32, i32* %instance, align 4, !dbg !8360
  call void @mxf_write_uuid(%struct.AVIOContext* %13, i32 %16, i32 %19), !dbg !8361
  br label %for.inc, !dbg !8362

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !8363
  %inc = add nsw i32 %20, 1, !dbg !8363
  store i32 %inc, i32* %i, align 4, !dbg !8363
  br label %for.cond, !dbg !8365, !llvm.loop !8366

for.end:                                          ; preds = %for.cond
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8368
  call void @mxf_write_local_tag(%struct.AVIOContext* %21, i32 24, i32 6402), !dbg !8369
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8370
  call void @mxf_write_refs_count(%struct.AVIOContext* %22, i32 1), !dbg !8371
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8372
  call void @mxf_write_uuid(%struct.AVIOContext* %23, i32 16, i32 0), !dbg !8373
  ret void, !dbg !8374
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_package(%struct.AVFormatContext* %s, %struct.MXFPackage* %package) #0 !dbg !8375 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %package.addr = alloca %struct.MXFPackage*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %i = alloca i32, align 4
  %track_count = alloca i32, align 4
  %name_size = alloca i32, align 4
  %user_comment_count = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8378, metadata !2529), !dbg !8379
  store %struct.MXFPackage* %package, %struct.MXFPackage** %package.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFPackage** %package.addr, metadata !8380, metadata !2529), !dbg !8381
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !8382, metadata !2529), !dbg !8383
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8384
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !8385
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8385
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !8384
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !8383
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !8386, metadata !2529), !dbg !8387
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8388
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !8389
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !8389
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !8387
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8390, metadata !2529), !dbg !8391
  call void @llvm.dbg.declare(metadata i32* %track_count, metadata !8392, metadata !2529), !dbg !8393
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8394
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 6, !dbg !8395
  %6 = load i32, i32* %nb_streams, align 4, !dbg !8395
  %add = add i32 %6, 1, !dbg !8396
  store i32 %add, i32* %track_count, align 4, !dbg !8393
  call void @llvm.dbg.declare(metadata i32* %name_size, metadata !8397, metadata !2529), !dbg !8398
  %7 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8399
  %name = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %7, i32 0, i32 0, !dbg !8400
  %8 = load i8*, i8** %name, align 8, !dbg !8400
  %call = call i32 @mxf_utf16_local_tag_length(i8* %8), !dbg !8401
  store i32 %call, i32* %name_size, align 4, !dbg !8398
  call void @llvm.dbg.declare(metadata i32* %user_comment_count, metadata !8402, metadata !2529), !dbg !8403
  store i32 0, i32* %user_comment_count, align 4, !dbg !8403
  %9 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8404
  %type = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %9, i32 0, i32 1, !dbg !8406
  %10 = load i32, i32* %type, align 8, !dbg !8406
  %cmp = icmp eq i32 %10, 1, !dbg !8407
  br i1 %cmp, label %if.then, label %if.else, !dbg !8408

if.then:                                          ; preds = %entry
  %11 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8409
  %store_user_comments = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %11, i32 0, i32 26, !dbg !8412
  %12 = load i32, i32* %store_user_comments, align 8, !dbg !8412
  %tobool = icmp ne i32 %12, 0, !dbg !8409
  br i1 %tobool, label %if.then2, label %if.end, !dbg !8413

if.then2:                                         ; preds = %if.then
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8414
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8415
  %metadata = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %14, i32 0, i32 29, !dbg !8416
  %15 = load %struct.AVDictionary*, %struct.AVDictionary** %metadata, align 8, !dbg !8416
  %call3 = call i32 @mxf_write_user_comments(%struct.AVFormatContext* %13, %struct.AVDictionary* %15), !dbg !8417
  store i32 %call3, i32* %user_comment_count, align 4, !dbg !8418
  br label %if.end, !dbg !8419

if.end:                                           ; preds = %if.then2, %if.then
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8420
  call void @mxf_write_metadata_key(%struct.AVIOContext* %16, i32 79360), !dbg !8421
  br label %do.body, !dbg !8422, !llvm.loop !8423

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !8424

do.end:                                           ; preds = %do.body
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8427
  %18 = load i32, i32* %name_size, align 4, !dbg !8428
  %add4 = add nsw i32 92, %18, !dbg !8429
  %19 = load i32, i32* %track_count, align 4, !dbg !8430
  %mul = mul nsw i32 16, %19, !dbg !8431
  %add5 = add nsw i32 %add4, %mul, !dbg !8432
  %20 = load i32, i32* %user_comment_count, align 4, !dbg !8433
  %mul6 = mul nsw i32 16, %20, !dbg !8434
  %add7 = add nsw i32 %add5, %mul6, !dbg !8435
  %conv = sext i32 %add7 to i64, !dbg !8436
  %21 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8437
  %store_user_comments8 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %21, i32 0, i32 26, !dbg !8438
  %22 = load i32, i32* %store_user_comments8, align 8, !dbg !8438
  %conv9 = sext i32 %22 to i64, !dbg !8437
  %mul10 = mul nsw i64 12, %conv9, !dbg !8439
  %add11 = add nsw i64 %conv, %mul10, !dbg !8440
  %call12 = call i32 @klv_encode_ber_length(%struct.AVIOContext* %17, i64 %add11), !dbg !8441
  br label %if.end24, !dbg !8442

if.else:                                          ; preds = %entry
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8443
  call void @mxf_write_metadata_key(%struct.AVIOContext* %23, i32 79616), !dbg !8445
  br label %do.body13, !dbg !8446, !llvm.loop !8447

do.body13:                                        ; preds = %if.else
  br label %do.end14, !dbg !8448

do.end14:                                         ; preds = %do.body13
  %24 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8451
  %25 = load i32, i32* %name_size, align 4, !dbg !8452
  %add15 = add nsw i32 112, %25, !dbg !8453
  %26 = load i32, i32* %track_count, align 4, !dbg !8454
  %mul16 = mul nsw i32 16, %26, !dbg !8455
  %add17 = add nsw i32 %add15, %mul16, !dbg !8456
  %conv18 = sext i32 %add17 to i64, !dbg !8457
  %27 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8458
  %store_user_comments19 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %27, i32 0, i32 26, !dbg !8459
  %28 = load i32, i32* %store_user_comments19, align 8, !dbg !8459
  %conv20 = sext i32 %28 to i64, !dbg !8458
  %mul21 = mul nsw i64 12, %conv20, !dbg !8460
  %add22 = add nsw i64 %conv18, %mul21, !dbg !8461
  %call23 = call i32 @klv_encode_ber_length(%struct.AVIOContext* %24, i64 %add22), !dbg !8462
  br label %if.end24

if.end24:                                         ; preds = %do.end14, %do.end
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8463
  call void @mxf_write_local_tag(%struct.AVIOContext* %29, i32 16, i32 15370), !dbg !8464
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8465
  %31 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8466
  %type25 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %31, i32 0, i32 1, !dbg !8467
  %32 = load i32, i32* %type25, align 8, !dbg !8467
  %33 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8468
  %instance = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %33, i32 0, i32 2, !dbg !8469
  %34 = load i32, i32* %instance, align 4, !dbg !8469
  call void @mxf_write_uuid(%struct.AVIOContext* %30, i32 %32, i32 %34), !dbg !8470
  %35 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8471
  %36 = bitcast %struct.AVFormatContext* %35 to i8*, !dbg !8471
  %37 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8472
  %type26 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %37, i32 0, i32 1, !dbg !8473
  %38 = load i32, i32* %type26, align 8, !dbg !8473
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 48, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.69, i32 0, i32 0), i32 %38), !dbg !8474
  br label %do.body27, !dbg !8475, !llvm.loop !8476

do.body27:                                        ; preds = %if.end24
  br label %do.end28, !dbg !8477

do.end28:                                         ; preds = %do.body27
  %39 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8480
  call void @mxf_write_local_tag(%struct.AVIOContext* %39, i32 32, i32 17409), !dbg !8481
  %40 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8482
  %41 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8483
  %instance29 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %41, i32 0, i32 2, !dbg !8484
  %42 = load i32, i32* %instance29, align 4, !dbg !8484
  call void @mxf_write_umid(%struct.AVFormatContext* %40, i32 %42), !dbg !8485
  br label %do.body30, !dbg !8486, !llvm.loop !8487

do.body30:                                        ; preds = %do.end28
  br label %do.end31, !dbg !8488

do.end31:                                         ; preds = %do.body30
  %43 = load i32, i32* %name_size, align 4, !dbg !8491
  %tobool32 = icmp ne i32 %43, 0, !dbg !8491
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !8493

if.then33:                                        ; preds = %do.end31
  %44 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8494
  %45 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8495
  %name34 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %45, i32 0, i32 0, !dbg !8496
  %46 = load i8*, i8** %name34, align 8, !dbg !8496
  call void @mxf_write_local_tag_utf16(%struct.AVIOContext* %44, i32 17410, i8* %46), !dbg !8497
  br label %if.end35, !dbg !8497

if.end35:                                         ; preds = %if.then33, %do.end31
  %47 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8498
  call void @mxf_write_local_tag(%struct.AVIOContext* %47, i32 8, i32 17413), !dbg !8499
  %48 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8500
  %49 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8501
  %timestamp = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %49, i32 0, i32 7, !dbg !8502
  %50 = load i64, i64* %timestamp, align 8, !dbg !8502
  call void @avio_wb64(%struct.AVIOContext* %48, i64 %50), !dbg !8503
  %51 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8504
  call void @mxf_write_local_tag(%struct.AVIOContext* %51, i32 8, i32 17412), !dbg !8505
  %52 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8506
  %53 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8507
  %timestamp36 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %53, i32 0, i32 7, !dbg !8508
  %54 = load i64, i64* %timestamp36, align 8, !dbg !8508
  call void @avio_wb64(%struct.AVIOContext* %52, i64 %54), !dbg !8509
  %55 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8510
  %56 = load i32, i32* %track_count, align 4, !dbg !8511
  %mul37 = mul nsw i32 %56, 16, !dbg !8512
  %add38 = add nsw i32 %mul37, 8, !dbg !8513
  call void @mxf_write_local_tag(%struct.AVIOContext* %55, i32 %add38, i32 17411), !dbg !8514
  %57 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8515
  %58 = load i32, i32* %track_count, align 4, !dbg !8516
  call void @mxf_write_refs_count(%struct.AVIOContext* %57, i32 %58), !dbg !8517
  store i32 0, i32* %i, align 4, !dbg !8518
  br label %for.cond, !dbg !8520

for.cond:                                         ; preds = %for.inc, %if.end35
  %59 = load i32, i32* %i, align 4, !dbg !8521
  %60 = load i32, i32* %track_count, align 4, !dbg !8524
  %cmp39 = icmp slt i32 %59, %60, !dbg !8525
  br i1 %cmp39, label %for.body, label %for.end, !dbg !8526

for.body:                                         ; preds = %for.cond
  %61 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8527
  %62 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8528
  %track_instance_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %62, i32 0, i32 27, !dbg !8529
  %63 = load i32, i32* %track_instance_count, align 4, !dbg !8529
  %64 = load i32, i32* %i, align 4, !dbg !8530
  %add41 = add nsw i32 %63, %64, !dbg !8531
  call void @mxf_write_uuid(%struct.AVIOContext* %61, i32 9, i32 %add41), !dbg !8532
  br label %for.inc, !dbg !8532

for.inc:                                          ; preds = %for.body
  %65 = load i32, i32* %i, align 4, !dbg !8533
  %inc = add nsw i32 %65, 1, !dbg !8533
  store i32 %inc, i32* %i, align 4, !dbg !8533
  br label %for.cond, !dbg !8535, !llvm.loop !8536

for.end:                                          ; preds = %for.cond
  %66 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8538
  %store_user_comments42 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %66, i32 0, i32 26, !dbg !8540
  %67 = load i32, i32* %store_user_comments42, align 8, !dbg !8540
  %tobool43 = icmp ne i32 %67, 0, !dbg !8538
  br i1 %tobool43, label %if.then44, label %if.end55, !dbg !8541

if.then44:                                        ; preds = %for.end
  %68 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8542
  %69 = load i32, i32* %user_comment_count, align 4, !dbg !8544
  %mul45 = mul nsw i32 %69, 16, !dbg !8545
  %add46 = add nsw i32 %mul45, 8, !dbg !8546
  call void @mxf_write_local_tag(%struct.AVIOContext* %68, i32 %add46, i32 17414), !dbg !8547
  %70 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8548
  %71 = load i32, i32* %user_comment_count, align 4, !dbg !8549
  call void @mxf_write_refs_count(%struct.AVIOContext* %70, i32 %71), !dbg !8550
  store i32 0, i32* %i, align 4, !dbg !8551
  br label %for.cond47, !dbg !8553

for.cond47:                                       ; preds = %for.inc52, %if.then44
  %72 = load i32, i32* %i, align 4, !dbg !8554
  %73 = load i32, i32* %user_comment_count, align 4, !dbg !8557
  %cmp48 = icmp slt i32 %72, %73, !dbg !8558
  br i1 %cmp48, label %for.body50, label %for.end54, !dbg !8559

for.body50:                                       ; preds = %for.cond47
  %74 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8560
  %75 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8561
  %tagged_value_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %75, i32 0, i32 24, !dbg !8562
  %76 = load i32, i32* %tagged_value_count, align 4, !dbg !8562
  %77 = load i32, i32* %user_comment_count, align 4, !dbg !8563
  %sub = sub i32 %76, %77, !dbg !8564
  %78 = load i32, i32* %i, align 4, !dbg !8565
  %add51 = add i32 %sub, %78, !dbg !8566
  call void @mxf_write_uuid(%struct.AVIOContext* %74, i32 18, i32 %add51), !dbg !8567
  br label %for.inc52, !dbg !8567

for.inc52:                                        ; preds = %for.body50
  %79 = load i32, i32* %i, align 4, !dbg !8568
  %inc53 = add nsw i32 %79, 1, !dbg !8568
  store i32 %inc53, i32* %i, align 4, !dbg !8568
  br label %for.cond47, !dbg !8570, !llvm.loop !8571

for.end54:                                        ; preds = %for.cond47
  br label %if.end55, !dbg !8573

if.end55:                                         ; preds = %for.end54, %for.end
  %80 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8574
  %type56 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %80, i32 0, i32 1, !dbg !8576
  %81 = load i32, i32* %type56, align 8, !dbg !8576
  %cmp57 = icmp eq i32 %81, 2, !dbg !8577
  br i1 %cmp57, label %land.lhs.true, label %if.else69, !dbg !8578

land.lhs.true:                                    ; preds = %if.end55
  %82 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8579
  %instance59 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %82, i32 0, i32 2, !dbg !8581
  %83 = load i32, i32* %instance59, align 4, !dbg !8581
  %cmp60 = icmp eq i32 %83, 1, !dbg !8582
  br i1 %cmp60, label %if.then62, label %if.else69, !dbg !8583

if.then62:                                        ; preds = %land.lhs.true
  %84 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8584
  call void @mxf_write_local_tag(%struct.AVIOContext* %84, i32 16, i32 18177), !dbg !8586
  %85 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8587
  %nb_streams63 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %85, i32 0, i32 6, !dbg !8589
  %86 = load i32, i32* %nb_streams63, align 4, !dbg !8589
  %cmp64 = icmp ugt i32 %86, 1, !dbg !8590
  br i1 %cmp64, label %if.then66, label %if.else67, !dbg !8591

if.then66:                                        ; preds = %if.then62
  %87 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8592
  call void @mxf_write_uuid(%struct.AVIOContext* %87, i32 7, i32 0), !dbg !8594
  %88 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8595
  call void @mxf_write_multi_descriptor(%struct.AVFormatContext* %88), !dbg !8596
  br label %if.end68, !dbg !8597

if.else67:                                        ; preds = %if.then62
  %89 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8598
  call void @mxf_write_uuid(%struct.AVIOContext* %89, i32 14, i32 0), !dbg !8599
  br label %if.end68

if.end68:                                         ; preds = %if.else67, %if.then66
  br label %if.end79, !dbg !8600

if.else69:                                        ; preds = %land.lhs.true, %if.end55
  %90 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8601
  %type70 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %90, i32 0, i32 1, !dbg !8604
  %91 = load i32, i32* %type70, align 8, !dbg !8604
  %cmp71 = icmp eq i32 %91, 2, !dbg !8605
  br i1 %cmp71, label %land.lhs.true73, label %if.end78, !dbg !8606

land.lhs.true73:                                  ; preds = %if.else69
  %92 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8607
  %instance74 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %92, i32 0, i32 2, !dbg !8609
  %93 = load i32, i32* %instance74, align 4, !dbg !8609
  %cmp75 = icmp eq i32 %93, 2, !dbg !8610
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !8611

if.then77:                                        ; preds = %land.lhs.true73
  %94 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8612
  call void @mxf_write_local_tag(%struct.AVIOContext* %94, i32 16, i32 18177), !dbg !8614
  %95 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8615
  call void @mxf_write_uuid(%struct.AVIOContext* %95, i32 19, i32 0), !dbg !8616
  %96 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8617
  call void @mxf_write_tape_descriptor(%struct.AVFormatContext* %96), !dbg !8618
  br label %if.end78, !dbg !8619

if.end78:                                         ; preds = %if.then77, %land.lhs.true73, %if.else69
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.end68
  %97 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8620
  %98 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8621
  %timecode_track = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %98, i32 0, i32 15, !dbg !8622
  %99 = load %struct.AVStream*, %struct.AVStream** %timecode_track, align 8, !dbg !8622
  %100 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8623
  call void @mxf_write_track(%struct.AVFormatContext* %97, %struct.AVStream* %99, %struct.MXFPackage* %100), !dbg !8624
  %101 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8625
  %102 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8626
  %timecode_track80 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %102, i32 0, i32 15, !dbg !8627
  %103 = load %struct.AVStream*, %struct.AVStream** %timecode_track80, align 8, !dbg !8627
  %104 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8628
  call void @mxf_write_sequence(%struct.AVFormatContext* %101, %struct.AVStream* %103, %struct.MXFPackage* %104), !dbg !8629
  %105 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8630
  %106 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8631
  %timecode_track81 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %106, i32 0, i32 15, !dbg !8632
  %107 = load %struct.AVStream*, %struct.AVStream** %timecode_track81, align 8, !dbg !8632
  %108 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8633
  call void @mxf_write_timecode_component(%struct.AVFormatContext* %105, %struct.AVStream* %107, %struct.MXFPackage* %108), !dbg !8634
  %109 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8635
  %track_instance_count82 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %109, i32 0, i32 27, !dbg !8636
  %110 = load i32, i32* %track_instance_count82, align 4, !dbg !8637
  %inc83 = add nsw i32 %110, 1, !dbg !8637
  store i32 %inc83, i32* %track_instance_count82, align 4, !dbg !8637
  store i32 0, i32* %i, align 4, !dbg !8638
  br label %for.cond84, !dbg !8640

for.cond84:                                       ; preds = %for.inc103, %if.end79
  %111 = load i32, i32* %i, align 4, !dbg !8641
  %112 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8644
  %nb_streams85 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %112, i32 0, i32 6, !dbg !8645
  %113 = load i32, i32* %nb_streams85, align 4, !dbg !8645
  %cmp86 = icmp ult i32 %111, %113, !dbg !8646
  br i1 %cmp86, label %for.body88, label %for.end105, !dbg !8647

for.body88:                                       ; preds = %for.cond84
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !8648, metadata !2529), !dbg !8650
  %114 = load i32, i32* %i, align 4, !dbg !8651
  %idxprom = sext i32 %114 to i64, !dbg !8652
  %115 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8652
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %115, i32 0, i32 7, !dbg !8653
  %116 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !8653
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %116, i64 %idxprom, !dbg !8652
  %117 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !8652
  store %struct.AVStream* %117, %struct.AVStream** %st, align 8, !dbg !8650
  %118 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8654
  %119 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !8655
  %120 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8656
  call void @mxf_write_track(%struct.AVFormatContext* %118, %struct.AVStream* %119, %struct.MXFPackage* %120), !dbg !8657
  %121 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8658
  %122 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !8659
  %123 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8660
  call void @mxf_write_sequence(%struct.AVFormatContext* %121, %struct.AVStream* %122, %struct.MXFPackage* %123), !dbg !8661
  %124 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8662
  %125 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !8663
  %126 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8664
  call void @mxf_write_structural_component(%struct.AVFormatContext* %124, %struct.AVStream* %125, %struct.MXFPackage* %126), !dbg !8665
  %127 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8666
  %track_instance_count89 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %127, i32 0, i32 27, !dbg !8667
  %128 = load i32, i32* %track_instance_count89, align 4, !dbg !8668
  %inc90 = add nsw i32 %128, 1, !dbg !8668
  store i32 %inc90, i32* %track_instance_count89, align 4, !dbg !8668
  %129 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8669
  %type91 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %129, i32 0, i32 1, !dbg !8671
  %130 = load i32, i32* %type91, align 8, !dbg !8671
  %cmp92 = icmp eq i32 %130, 2, !dbg !8672
  br i1 %cmp92, label %land.lhs.true94, label %if.end102, !dbg !8673

land.lhs.true94:                                  ; preds = %for.body88
  %131 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !8674
  %instance95 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %131, i32 0, i32 2, !dbg !8676
  %132 = load i32, i32* %instance95, align 4, !dbg !8676
  %cmp96 = icmp eq i32 %132, 1, !dbg !8677
  br i1 %cmp96, label %if.then98, label %if.end102, !dbg !8678

if.then98:                                        ; preds = %land.lhs.true94
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !8679, metadata !2529), !dbg !8681
  %133 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !8682
  %priv_data99 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %133, i32 0, i32 3, !dbg !8683
  %134 = load i8*, i8** %priv_data99, align 8, !dbg !8683
  %135 = bitcast i8* %134 to %struct.MXFStreamContext*, !dbg !8682
  store %struct.MXFStreamContext* %135, %struct.MXFStreamContext** %sc, align 8, !dbg !8681
  %136 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !8684
  %index = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %136, i32 0, i32 2, !dbg !8685
  %137 = load i32, i32* %index, align 8, !dbg !8685
  %idxprom100 = sext i32 %137 to i64, !dbg !8686
  %arrayidx101 = getelementptr inbounds [32 x %struct.MXFContainerEssenceEntry], [32 x %struct.MXFContainerEssenceEntry]* @mxf_essence_container_uls, i64 0, i64 %idxprom100, !dbg !8686
  %write_desc = getelementptr inbounds %struct.MXFContainerEssenceEntry, %struct.MXFContainerEssenceEntry* %arrayidx101, i32 0, i32 3, !dbg !8687
  %138 = load void (%struct.AVFormatContext*, %struct.AVStream*)*, void (%struct.AVFormatContext*, %struct.AVStream*)** %write_desc, align 8, !dbg !8687
  %139 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8688
  %140 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !8689
  call void %138(%struct.AVFormatContext* %139, %struct.AVStream* %140), !dbg !8686
  br label %if.end102, !dbg !8690

if.end102:                                        ; preds = %if.then98, %land.lhs.true94, %for.body88
  br label %for.inc103, !dbg !8691

for.inc103:                                       ; preds = %if.end102
  %141 = load i32, i32* %i, align 4, !dbg !8692
  %inc104 = add nsw i32 %141, 1, !dbg !8692
  store i32 %inc104, i32* %i, align 4, !dbg !8692
  br label %for.cond84, !dbg !8694, !llvm.loop !8695

for.end105:                                       ; preds = %for.cond84
  ret void, !dbg !8697
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_write_essence_container_data(%struct.AVFormatContext* %s) #0 !dbg !8698 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8699, metadata !2529), !dbg !8700
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !8701, metadata !2529), !dbg !8702
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8703
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 4, !dbg !8704
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !8704
  store %struct.AVIOContext* %1, %struct.AVIOContext** %pb, align 8, !dbg !8702
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8705
  call void @mxf_write_metadata_key(%struct.AVIOContext* %2, i32 74496), !dbg !8706
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8707
  %call = call i32 @klv_encode_ber_length(%struct.AVIOContext* %3, i64 72), !dbg !8708
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8709
  call void @mxf_write_local_tag(%struct.AVIOContext* %4, i32 16, i32 15370), !dbg !8710
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8711
  call void @mxf_write_uuid(%struct.AVIOContext* %5, i32 16, i32 0), !dbg !8712
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8713
  call void @mxf_write_local_tag(%struct.AVIOContext* %6, i32 32, i32 9985), !dbg !8714
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8715
  call void @mxf_write_umid(%struct.AVFormatContext* %7, i32 1), !dbg !8716
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8717
  call void @mxf_write_local_tag(%struct.AVIOContext* %8, i32 4, i32 16135), !dbg !8718
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8719
  call void @avio_wb32(%struct.AVIOContext* %9, i32 1), !dbg !8720
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8721
  call void @mxf_write_local_tag(%struct.AVIOContext* %10, i32 4, i32 16134), !dbg !8722
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8723
  call void @avio_wb32(%struct.AVIOContext* %11, i32 2), !dbg !8724
  ret i32 0, !dbg !8725
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_metadata_key(%struct.AVIOContext* %pb, i32 %value) #0 !dbg !8726 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %value.addr = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8729, metadata !2529), !dbg !8730
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !8731, metadata !2529), !dbg !8732
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8733
  call void @avio_write(%struct.AVIOContext* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @header_metadata_key, i32 0, i32 0), i32 13), !dbg !8734
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8735
  %2 = load i32, i32* %value.addr, align 4, !dbg !8736
  call void @avio_wb24(%struct.AVIOContext* %1, i32 %2), !dbg !8737
  ret void, !dbg !8738
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_utf16_local_tag_length(i8* %utf8_str) #0 !dbg !8739 {
entry:
  %retval = alloca i32, align 4
  %utf8_str.addr = alloca i8*, align 8
  %size = alloca i64, align 8
  store i8* %utf8_str, i8** %utf8_str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %utf8_str.addr, metadata !8742, metadata !2529), !dbg !8743
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8744, metadata !2529), !dbg !8745
  %0 = load i8*, i8** %utf8_str.addr, align 8, !dbg !8746
  %tobool = icmp ne i8* %0, null, !dbg !8746
  br i1 %tobool, label %if.end, label %if.then, !dbg !8748

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8749
  br label %return, !dbg !8749

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %utf8_str.addr, align 8, !dbg !8750
  %call = call i64 @mxf_utf16len(i8* %1), !dbg !8751
  store i64 %call, i64* %size, align 8, !dbg !8752
  %2 = load i64, i64* %size, align 8, !dbg !8753
  %cmp = icmp uge i64 %2, 32767, !dbg !8755
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !8756

if.then1:                                         ; preds = %if.end
  %3 = load i64, i64* %size, align 8, !dbg !8757
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.67, i32 0, i32 0), i64 %3), !dbg !8759
  store i32 0, i32* %retval, align 4, !dbg !8760
  br label %return, !dbg !8760

if.end2:                                          ; preds = %if.end
  %4 = load i64, i64* %size, align 8, !dbg !8761
  %mul = mul i64 %4, 2, !dbg !8762
  %add = add i64 4, %mul, !dbg !8763
  %conv = trunc i64 %add to i32, !dbg !8764
  store i32 %conv, i32* %retval, align 4, !dbg !8765
  br label %return, !dbg !8765

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8766
  ret i32 %5, !dbg !8766
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_local_tag_utf16(%struct.AVIOContext* %pb, i32 %tag, i8* %value) #0 !dbg !8767 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %value.addr = alloca i8*, align 8
  %size = alloca i64, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8770, metadata !2529), !dbg !8771
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !8772, metadata !2529), !dbg !8773
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !8774, metadata !2529), !dbg !8775
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8776, metadata !2529), !dbg !8777
  %0 = load i8*, i8** %value.addr, align 8, !dbg !8778
  %call = call i64 @mxf_utf16len(i8* %0), !dbg !8779
  store i64 %call, i64* %size, align 8, !dbg !8777
  %1 = load i64, i64* %size, align 8, !dbg !8780
  %cmp = icmp uge i64 %1, 32767, !dbg !8782
  br i1 %cmp, label %if.then, label %if.end, !dbg !8783

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size, align 8, !dbg !8784
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.67, i32 0, i32 0), i64 %2), !dbg !8786
  br label %return, !dbg !8787

if.end:                                           ; preds = %entry
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8788
  %4 = load i64, i64* %size, align 8, !dbg !8789
  %mul = mul i64 %4, 2, !dbg !8790
  %conv = trunc i64 %mul to i32, !dbg !8789
  %5 = load i32, i32* %tag.addr, align 4, !dbg !8791
  call void @mxf_write_local_tag(%struct.AVIOContext* %3, i32 %conv, i32 %5), !dbg !8792
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8793
  %7 = load i8*, i8** %value.addr, align 8, !dbg !8794
  %call1 = call i32 @avio_put_str16be(%struct.AVIOContext* %6, i8* %7), !dbg !8795
  br label %return, !dbg !8796

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8797
}

; Function Attrs: nounwind uwtable
define internal void @store_version(%struct.AVFormatContext* %s) #0 !dbg !8799 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8800, metadata !2529), !dbg !8801
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !8802, metadata !2529), !dbg !8803
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8804
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 4, !dbg !8805
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !8805
  store %struct.AVIOContext* %1, %struct.AVIOContext** %pb, align 8, !dbg !8803
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8806
  %flags = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 15, !dbg !8808
  %3 = load i32, i32* %flags, align 8, !dbg !8808
  %and = and i32 %3, 1024, !dbg !8809
  %tobool = icmp ne i32 %and, 0, !dbg !8809
  br i1 %tobool, label %if.then, label %if.else, !dbg !8810

if.then:                                          ; preds = %entry
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8811
  call void @avio_wb16(%struct.AVIOContext* %4, i32 0), !dbg !8813
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8814
  call void @avio_wb16(%struct.AVIOContext* %5, i32 0), !dbg !8815
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8816
  call void @avio_wb16(%struct.AVIOContext* %6, i32 0), !dbg !8817
  br label %if.end, !dbg !8818

if.else:                                          ; preds = %entry
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8819
  call void @avio_wb16(%struct.AVIOContext* %7, i32 58), !dbg !8821
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8822
  call void @avio_wb16(%struct.AVIOContext* %8, i32 26), !dbg !8823
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8824
  call void @avio_wb16(%struct.AVIOContext* %9, i32 101), !dbg !8825
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8826
  call void @avio_wb16(%struct.AVIOContext* %10, i32 0), !dbg !8827
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8828
  call void @avio_wb16(%struct.AVIOContext* %11, i32 0), !dbg !8829
  ret void, !dbg !8830
}

; Function Attrs: nounwind uwtable
define internal i64 @mxf_utf16len(i8* %utf8_str) #0 !dbg !8831 {
entry:
  %utf8_str.addr = alloca i8*, align 8
  %q = alloca i8*, align 8
  %size = alloca i64, align 8
  %ch = alloca i32, align 4
  %top = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i8* %utf8_str, i8** %utf8_str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %utf8_str.addr, metadata !8834, metadata !2529), !dbg !8835
  call void @llvm.dbg.declare(metadata i8** %q, metadata !8836, metadata !2529), !dbg !8837
  %0 = load i8*, i8** %utf8_str.addr, align 8, !dbg !8838
  store i8* %0, i8** %q, align 8, !dbg !8837
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8839, metadata !2529), !dbg !8840
  store i64 0, i64* %size, align 8, !dbg !8840
  br label %while.cond, !dbg !8841

while.cond:                                       ; preds = %invalid, %if.end23, %entry
  %1 = load i8*, i8** %q, align 8, !dbg !8842
  %2 = load i8, i8* %1, align 1, !dbg !8844
  %tobool = icmp ne i8 %2, 0, !dbg !8845
  br i1 %tobool, label %while.body, label %while.end24, !dbg !8845

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8846, metadata !2529), !dbg !8848
  %3 = load i8*, i8** %q, align 8, !dbg !8849
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !8849
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !8849
  %4 = load i8, i8* %3, align 1, !dbg !8850
  %conv = zext i8 %4 to i32, !dbg !8851
  store i32 %conv, i32* %ch, align 4, !dbg !8852
  call void @llvm.dbg.declare(metadata i32* %top, metadata !8853, metadata !2529), !dbg !8855
  %5 = load i32, i32* %ch, align 4, !dbg !8856
  %and = and i32 %5, 128, !dbg !8857
  %shr = lshr i32 %and, 1, !dbg !8858
  store i32 %shr, i32* %top, align 4, !dbg !8855
  %6 = load i32, i32* %ch, align 4, !dbg !8859
  %and1 = and i32 %6, 192, !dbg !8861
  %cmp = icmp eq i32 %and1, 128, !dbg !8862
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8863

lor.lhs.false:                                    ; preds = %while.body
  %7 = load i32, i32* %ch, align 4, !dbg !8864
  %cmp3 = icmp uge i32 %7, 254, !dbg !8866
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8867

if.then:                                          ; preds = %lor.lhs.false, %while.body
  br label %invalid, !dbg !8868

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond5, !dbg !8870

while.cond5:                                      ; preds = %if.end14, %if.end
  %8 = load i32, i32* %ch, align 4, !dbg !8872
  %9 = load i32, i32* %top, align 4, !dbg !8874
  %and6 = and i32 %8, %9, !dbg !8875
  %tobool7 = icmp ne i32 %and6, 0, !dbg !8876
  br i1 %tobool7, label %while.body8, label %while.end, !dbg !8876

while.body8:                                      ; preds = %while.cond5
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8877, metadata !2529), !dbg !8879
  %10 = load i8*, i8** %q, align 8, !dbg !8880
  %incdec.ptr9 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8880
  store i8* %incdec.ptr9, i8** %q, align 8, !dbg !8880
  %11 = load i8, i8* %10, align 1, !dbg !8882
  %conv10 = zext i8 %11 to i32, !dbg !8883
  %sub = sub nsw i32 %conv10, 128, !dbg !8884
  store i32 %sub, i32* %tmp, align 4, !dbg !8885
  %12 = load i32, i32* %tmp, align 4, !dbg !8886
  %shr11 = ashr i32 %12, 6, !dbg !8887
  %tobool12 = icmp ne i32 %shr11, 0, !dbg !8887
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !8886

if.then13:                                        ; preds = %while.body8
  br label %invalid, !dbg !8888

if.end14:                                         ; preds = %while.body8
  %13 = load i32, i32* %ch, align 4, !dbg !8891
  %shl = shl i32 %13, 6, !dbg !8893
  %14 = load i32, i32* %tmp, align 4, !dbg !8894
  %add = add i32 %shl, %14, !dbg !8895
  store i32 %add, i32* %ch, align 4, !dbg !8896
  %15 = load i32, i32* %top, align 4, !dbg !8897
  %shl15 = shl i32 %15, 5, !dbg !8897
  store i32 %shl15, i32* %top, align 4, !dbg !8897
  br label %while.cond5, !dbg !8898, !llvm.loop !8899

while.end:                                        ; preds = %while.cond5
  %16 = load i32, i32* %top, align 4, !dbg !8901
  %shl16 = shl i32 %16, 1, !dbg !8903
  %sub17 = sub i32 %shl16, 1, !dbg !8904
  %17 = load i32, i32* %ch, align 4, !dbg !8905
  %and18 = and i32 %17, %sub17, !dbg !8905
  store i32 %and18, i32* %ch, align 4, !dbg !8905
  %18 = load i32, i32* %ch, align 4, !dbg !8906
  %cmp19 = icmp ult i32 %18, 65536, !dbg !8908
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !8909

if.then21:                                        ; preds = %while.end
  %19 = load i64, i64* %size, align 8, !dbg !8910
  %inc = add i64 %19, 1, !dbg !8910
  store i64 %inc, i64* %size, align 8, !dbg !8910
  br label %if.end23, !dbg !8911

if.else:                                          ; preds = %while.end
  %20 = load i64, i64* %size, align 8, !dbg !8912
  %add22 = add i64 %20, 2, !dbg !8912
  store i64 %add22, i64* %size, align 8, !dbg !8912
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then21
  br label %while.cond, !dbg !8913, !llvm.loop !8914

invalid:                                          ; preds = %if.then13, %if.then
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.68, i32 0, i32 0)), !dbg !8915
  br label %while.cond, !dbg !8916, !llvm.loop !8914

while.end24:                                      ; preds = %while.cond
  %21 = load i64, i64* %size, align 8, !dbg !8918
  %add25 = add i64 %21, 1, !dbg !8918
  store i64 %add25, i64* %size, align 8, !dbg !8918
  %22 = load i64, i64* %size, align 8, !dbg !8919
  ret i64 %22, !dbg !8920
}

declare i32 @avio_put_str16be(%struct.AVIOContext*, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_write_user_comments(%struct.AVFormatContext* %s, %struct.AVDictionary* %m) #0 !dbg !8921 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %m.addr = alloca %struct.AVDictionary*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %t = alloca %struct.AVDictionaryEntry*, align 8
  %count = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8926, metadata !2529), !dbg !8927
  store %struct.AVDictionary* %m, %struct.AVDictionary** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary** %m.addr, metadata !8928, metadata !2529), !dbg !8929
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !8930, metadata !2529), !dbg !8931
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8932
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !8933
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8933
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !8932
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !8931
  call void @llvm.dbg.declare(metadata %struct.AVDictionaryEntry** %t, metadata !8934, metadata !2529), !dbg !8935
  store %struct.AVDictionaryEntry* null, %struct.AVDictionaryEntry** %t, align 8, !dbg !8935
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8936, metadata !2529), !dbg !8937
  store i32 0, i32* %count, align 4, !dbg !8937
  br label %while.cond, !dbg !8938

while.cond:                                       ; preds = %if.end4, %entry
  %3 = load %struct.AVDictionary*, %struct.AVDictionary** %m.addr, align 8, !dbg !8939
  %4 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t, align 8, !dbg !8941
  %call = call %struct.AVDictionaryEntry* @av_dict_get(%struct.AVDictionary* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), %struct.AVDictionaryEntry* %4, i32 2), !dbg !8942
  store %struct.AVDictionaryEntry* %call, %struct.AVDictionaryEntry** %t, align 8, !dbg !8943
  %tobool = icmp ne %struct.AVDictionaryEntry* %call, null, !dbg !8944
  br i1 %tobool, label %while.body, label %while.end, !dbg !8944

while.body:                                       ; preds = %while.cond
  %5 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8945
  %tagged_value_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %5, i32 0, i32 24, !dbg !8948
  %6 = load i32, i32* %tagged_value_count, align 4, !dbg !8948
  %cmp = icmp uge i32 %6, 65535, !dbg !8949
  br i1 %cmp, label %if.then, label %if.end, !dbg !8950

if.then:                                          ; preds = %while.body
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8951
  %8 = bitcast %struct.AVFormatContext* %7 to i8*, !dbg !8951
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.70, i32 0, i32 0)), !dbg !8953
  %9 = load i32, i32* %count, align 4, !dbg !8954
  store i32 %9, i32* %retval, align 4, !dbg !8955
  br label %return, !dbg !8955

if.end:                                           ; preds = %while.body
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8956
  %11 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t, align 8, !dbg !8958
  %key = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %11, i32 0, i32 0, !dbg !8959
  %12 = load i8*, i8** %key, align 8, !dbg !8959
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 8, !dbg !8960
  %13 = load %struct.AVDictionaryEntry*, %struct.AVDictionaryEntry** %t, align 8, !dbg !8961
  %value = getelementptr inbounds %struct.AVDictionaryEntry, %struct.AVDictionaryEntry* %13, i32 0, i32 1, !dbg !8962
  %14 = load i8*, i8** %value, align 8, !dbg !8962
  %call1 = call i32 @mxf_write_tagged_value(%struct.AVFormatContext* %10, i8* %add.ptr, i8* %14), !dbg !8963
  %cmp2 = icmp eq i32 %call1, 0, !dbg !8964
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8965

if.then3:                                         ; preds = %if.end
  %15 = load i32, i32* %count, align 4, !dbg !8966
  %inc = add nsw i32 %15, 1, !dbg !8966
  store i32 %inc, i32* %count, align 4, !dbg !8966
  br label %if.end4, !dbg !8967

if.end4:                                          ; preds = %if.then3, %if.end
  br label %while.cond, !dbg !8968, !llvm.loop !8970

while.end:                                        ; preds = %while.cond
  %16 = load i32, i32* %count, align 4, !dbg !8971
  store i32 %16, i32* %retval, align 4, !dbg !8972
  br label %return, !dbg !8972

return:                                           ; preds = %while.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !8973
  ret i32 %17, !dbg !8973
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_umid(%struct.AVFormatContext* %s, i32 %type) #0 !dbg !8974 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %type.addr = alloca i32, align 4
  %mxf = alloca %struct.MXFContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !8977, metadata !2529), !dbg !8978
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8979, metadata !2529), !dbg !8980
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !8981, metadata !2529), !dbg !8982
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8983
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !8984
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8984
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !8983
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !8982
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8985
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !8986
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !8986
  call void @avio_write(%struct.AVIOContext* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @umid_ul, i32 0, i32 0), i32 13), !dbg !8987
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8988
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i32 0, i32 4, !dbg !8989
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !8989
  %7 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8990
  %instance_number = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %7, i32 0, i32 20, !dbg !8991
  %8 = load i32, i32* %instance_number, align 8, !dbg !8991
  call void @avio_wb24(%struct.AVIOContext* %6, i32 %8), !dbg !8992
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8993
  %pb2 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i32 0, i32 4, !dbg !8994
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb2, align 8, !dbg !8994
  %11 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !8995
  %umid = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %11, i32 0, i32 21, !dbg !8996
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %umid, i32 0, i32 0, !dbg !8995
  call void @avio_write(%struct.AVIOContext* %10, i8* %arraydecay, i32 15), !dbg !8997
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !8998
  %pb3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i32 0, i32 4, !dbg !8999
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb3, align 8, !dbg !8999
  %14 = load i32, i32* %type.addr, align 4, !dbg !9000
  call void @avio_w8(%struct.AVIOContext* %13, i32 %14), !dbg !9001
  ret void, !dbg !9002
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_multi_descriptor(%struct.AVFormatContext* %s) #0 !dbg !9003 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %ul = alloca i8*, align 8
  %i = alloca i32, align 4
  %sc = alloca %struct.MXFStreamContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9004, metadata !2529), !dbg !9005
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !9006, metadata !2529), !dbg !9007
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9008
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9009
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9009
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !9008
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !9007
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !9010, metadata !2529), !dbg !9011
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9012
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !9013
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !9013
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !9011
  call void @llvm.dbg.declare(metadata i8** %ul, metadata !9014, metadata !2529), !dbg !9015
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9016, metadata !2529), !dbg !9017
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9018
  call void @mxf_write_metadata_key(%struct.AVIOContext* %5, i32 82944), !dbg !9019
  br label %do.body, !dbg !9020, !llvm.loop !9021

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9022

do.end:                                           ; preds = %do.body
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9025
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9026
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 6, !dbg !9027
  %8 = load i32, i32* %nb_streams, align 4, !dbg !9027
  %conv = zext i32 %8 to i64, !dbg !9026
  %mul = mul nsw i64 16, %conv, !dbg !9028
  %add = add nsw i64 64, %mul, !dbg !9029
  %call = call i32 @klv_encode_ber_length(%struct.AVIOContext* %6, i64 %add), !dbg !9030
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9031
  call void @mxf_write_local_tag(%struct.AVIOContext* %9, i32 16, i32 15370), !dbg !9032
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9033
  call void @mxf_write_uuid(%struct.AVIOContext* %10, i32 7, i32 0), !dbg !9034
  br label %do.body2, !dbg !9035, !llvm.loop !9036

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !9037

do.end3:                                          ; preds = %do.body2
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9040
  call void @mxf_write_local_tag(%struct.AVIOContext* %11, i32 8, i32 12289), !dbg !9041
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9042
  %13 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9043
  %time_base = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %13, i32 0, i32 3, !dbg !9044
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 1, !dbg !9045
  %14 = load i32, i32* %den, align 4, !dbg !9045
  call void @avio_wb32(%struct.AVIOContext* %12, i32 %14), !dbg !9046
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9047
  %16 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9048
  %time_base4 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %16, i32 0, i32 3, !dbg !9049
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base4, i32 0, i32 0, !dbg !9050
  %17 = load i32, i32* %num, align 4, !dbg !9050
  call void @avio_wb32(%struct.AVIOContext* %15, i32 %17), !dbg !9051
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9052
  call void @mxf_write_local_tag(%struct.AVIOContext* %18, i32 16, i32 12292), !dbg !9053
  %19 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9054
  %essence_container_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %19, i32 0, i32 2, !dbg !9056
  %20 = load i32, i32* %essence_container_count, align 8, !dbg !9056
  %cmp = icmp sgt i32 %20, 1, !dbg !9057
  br i1 %cmp, label %if.then, label %if.else, !dbg !9058

if.then:                                          ; preds = %do.end3
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @multiple_desc_ul, i32 0, i32 0), i8** %ul, align 8, !dbg !9059
  br label %if.end, !dbg !9060

if.else:                                          ; preds = %do.end3
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !9061, metadata !2529), !dbg !9063
  %21 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9064
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %21, i32 0, i32 7, !dbg !9065
  %22 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !9065
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %22, i64 0, !dbg !9064
  %23 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !9064
  %priv_data6 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %23, i32 0, i32 3, !dbg !9066
  %24 = load i8*, i8** %priv_data6, align 8, !dbg !9066
  %25 = bitcast i8* %24 to %struct.MXFStreamContext*, !dbg !9064
  store %struct.MXFStreamContext* %25, %struct.MXFStreamContext** %sc, align 8, !dbg !9063
  %26 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !9067
  %index = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %26, i32 0, i32 2, !dbg !9068
  %27 = load i32, i32* %index, align 8, !dbg !9068
  %idxprom = sext i32 %27 to i64, !dbg !9069
  %arrayidx7 = getelementptr inbounds [32 x %struct.MXFContainerEssenceEntry], [32 x %struct.MXFContainerEssenceEntry]* @mxf_essence_container_uls, i64 0, i64 %idxprom, !dbg !9069
  %container_ul = getelementptr inbounds %struct.MXFContainerEssenceEntry, %struct.MXFContainerEssenceEntry* %arrayidx7, i32 0, i32 0, !dbg !9070
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %container_ul, i32 0, i32 0, !dbg !9069
  store i8* %arraydecay, i8** %ul, align 8, !dbg !9071
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9072
  %29 = load i8*, i8** %ul, align 8, !dbg !9073
  call void @avio_write(%struct.AVIOContext* %28, i8* %29, i32 16), !dbg !9074
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9075
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9076
  %nb_streams8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %31, i32 0, i32 6, !dbg !9077
  %32 = load i32, i32* %nb_streams8, align 4, !dbg !9077
  %mul9 = mul i32 %32, 16, !dbg !9078
  %add10 = add i32 %mul9, 8, !dbg !9079
  call void @mxf_write_local_tag(%struct.AVIOContext* %30, i32 %add10, i32 16129), !dbg !9080
  %33 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9081
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9082
  %nb_streams11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %34, i32 0, i32 6, !dbg !9083
  %35 = load i32, i32* %nb_streams11, align 4, !dbg !9083
  call void @mxf_write_refs_count(%struct.AVIOContext* %33, i32 %35), !dbg !9084
  store i32 0, i32* %i, align 4, !dbg !9085
  br label %for.cond, !dbg !9087

for.cond:                                         ; preds = %for.inc, %if.end
  %36 = load i32, i32* %i, align 4, !dbg !9088
  %37 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9091
  %nb_streams12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %37, i32 0, i32 6, !dbg !9092
  %38 = load i32, i32* %nb_streams12, align 4, !dbg !9092
  %cmp13 = icmp ult i32 %36, %38, !dbg !9093
  br i1 %cmp13, label %for.body, label %for.end, !dbg !9094

for.body:                                         ; preds = %for.cond
  %39 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9095
  %40 = load i32, i32* %i, align 4, !dbg !9096
  call void @mxf_write_uuid(%struct.AVIOContext* %39, i32 14, i32 %40), !dbg !9097
  br label %for.inc, !dbg !9097

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %i, align 4, !dbg !9098
  %inc = add nsw i32 %41, 1, !dbg !9098
  store i32 %inc, i32* %i, align 4, !dbg !9098
  br label %for.cond, !dbg !9100, !llvm.loop !9101

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9103
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_tape_descriptor(%struct.AVFormatContext* %s) #0 !dbg !9104 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9105, metadata !2529), !dbg !9106
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !9107, metadata !2529), !dbg !9108
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9109
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 4, !dbg !9110
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !9110
  store %struct.AVIOContext* %1, %struct.AVIOContext** %pb, align 8, !dbg !9108
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9111
  call void @mxf_write_metadata_key(%struct.AVIOContext* %2, i32 77312), !dbg !9112
  br label %do.body, !dbg !9113, !llvm.loop !9114

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9115

do.end:                                           ; preds = %do.body
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9118
  %call = call i32 @klv_encode_ber_length(%struct.AVIOContext* %3, i64 20), !dbg !9119
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9120
  call void @mxf_write_local_tag(%struct.AVIOContext* %4, i32 16, i32 15370), !dbg !9121
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9122
  call void @mxf_write_uuid(%struct.AVIOContext* %5, i32 19, i32 0), !dbg !9123
  br label %do.body2, !dbg !9124, !llvm.loop !9125

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !9126

do.end3:                                          ; preds = %do.body2
  ret void, !dbg !9129
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_track(%struct.AVFormatContext* %s, %struct.AVStream* %st, %struct.MXFPackage* %package) #0 !dbg !9130 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %package.addr = alloca %struct.MXFPackage*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9133, metadata !2529), !dbg !9134
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !9135, metadata !2529), !dbg !9136
  store %struct.MXFPackage* %package, %struct.MXFPackage** %package.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFPackage** %package.addr, metadata !9137, metadata !2529), !dbg !9138
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !9139, metadata !2529), !dbg !9140
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9141
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9142
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9142
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !9141
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !9140
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !9143, metadata !2529), !dbg !9144
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9145
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !9146
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !9146
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !9144
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !9147, metadata !2529), !dbg !9148
  %5 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9149
  %priv_data2 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %5, i32 0, i32 3, !dbg !9150
  %6 = load i8*, i8** %priv_data2, align 8, !dbg !9150
  %7 = bitcast i8* %6 to %struct.MXFStreamContext*, !dbg !9149
  store %struct.MXFStreamContext* %7, %struct.MXFStreamContext** %sc, align 8, !dbg !9148
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9151
  call void @mxf_write_metadata_key(%struct.AVIOContext* %8, i32 80640), !dbg !9152
  br label %do.body, !dbg !9153, !llvm.loop !9154

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9155

do.end:                                           ; preds = %do.body
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9158
  %call = call i32 @klv_encode_ber_length(%struct.AVIOContext* %9, i64 80), !dbg !9159
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9160
  call void @mxf_write_local_tag(%struct.AVIOContext* %10, i32 16, i32 15370), !dbg !9161
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9162
  %12 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9163
  %track_instance_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %12, i32 0, i32 27, !dbg !9164
  %13 = load i32, i32* %track_instance_count, align 4, !dbg !9164
  call void @mxf_write_uuid(%struct.AVIOContext* %11, i32 9, i32 %13), !dbg !9165
  br label %do.body3, !dbg !9166, !llvm.loop !9167

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !9168

do.end4:                                          ; preds = %do.body3
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9171
  call void @mxf_write_local_tag(%struct.AVIOContext* %14, i32 4, i32 18433), !dbg !9172
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9173
  %16 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9174
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %16, i32 0, i32 0, !dbg !9175
  %17 = load i32, i32* %index, align 8, !dbg !9175
  %add = add nsw i32 %17, 2, !dbg !9176
  call void @avio_wb32(%struct.AVIOContext* %15, i32 %add), !dbg !9177
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9178
  call void @mxf_write_local_tag(%struct.AVIOContext* %18, i32 4, i32 18436), !dbg !9179
  %19 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !9180
  %type = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %19, i32 0, i32 1, !dbg !9182
  %20 = load i32, i32* %type, align 8, !dbg !9182
  %cmp = icmp eq i32 %20, 1, !dbg !9183
  br i1 %cmp, label %if.then, label %if.else, !dbg !9184

if.then:                                          ; preds = %do.end4
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9185
  call void @avio_wb32(%struct.AVIOContext* %21, i32 0), !dbg !9186
  br label %if.end, !dbg !9186

if.else:                                          ; preds = %do.end4
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9187
  %23 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !9188
  %track_essence_element_key = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %23, i32 0, i32 1, !dbg !9189
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %track_essence_element_key, i32 0, i32 0, !dbg !9188
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 12, !dbg !9190
  call void @avio_write(%struct.AVIOContext* %22, i8* %add.ptr, i32 4), !dbg !9191
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %24 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9192
  call void @mxf_write_local_tag(%struct.AVIOContext* %24, i32 8, i32 19201), !dbg !9193
  %25 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9194
  %26 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9196
  %timecode_track = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %26, i32 0, i32 15, !dbg !9197
  %27 = load %struct.AVStream*, %struct.AVStream** %timecode_track, align 8, !dbg !9197
  %cmp5 = icmp eq %struct.AVStream* %25, %27, !dbg !9198
  br i1 %cmp5, label %land.lhs.true, label %if.else10, !dbg !9199

land.lhs.true:                                    ; preds = %if.end
  %28 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9200
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %28, i32 0, i32 2, !dbg !9202
  %29 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !9202
  %cmp6 = icmp eq %struct.AVOutputFormat* %29, @ff_mxf_opatom_muxer, !dbg !9203
  br i1 %cmp6, label %if.then7, label %if.else10, !dbg !9204

if.then7:                                         ; preds = %land.lhs.true
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9205
  %31 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9207
  %tc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %31, i32 0, i32 14, !dbg !9208
  %rate = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %tc, i32 0, i32 2, !dbg !9209
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %rate, i32 0, i32 0, !dbg !9210
  %32 = load i32, i32* %num, align 8, !dbg !9210
  call void @avio_wb32(%struct.AVIOContext* %30, i32 %32), !dbg !9211
  %33 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9212
  %34 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9213
  %tc8 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %34, i32 0, i32 14, !dbg !9214
  %rate9 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %tc8, i32 0, i32 2, !dbg !9215
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %rate9, i32 0, i32 1, !dbg !9216
  %35 = load i32, i32* %den, align 4, !dbg !9216
  call void @avio_wb32(%struct.AVIOContext* %33, i32 %35), !dbg !9217
  br label %if.end14, !dbg !9218

if.else10:                                        ; preds = %land.lhs.true, %if.end
  %36 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9219
  %37 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9221
  %time_base = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %37, i32 0, i32 3, !dbg !9222
  %den11 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 1, !dbg !9223
  %38 = load i32, i32* %den11, align 4, !dbg !9223
  call void @avio_wb32(%struct.AVIOContext* %36, i32 %38), !dbg !9224
  %39 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9225
  %40 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9226
  %time_base12 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %40, i32 0, i32 3, !dbg !9227
  %num13 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base12, i32 0, i32 0, !dbg !9228
  %41 = load i32, i32* %num13, align 4, !dbg !9228
  call void @avio_wb32(%struct.AVIOContext* %39, i32 %41), !dbg !9229
  br label %if.end14

if.end14:                                         ; preds = %if.else10, %if.then7
  %42 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9230
  call void @mxf_write_local_tag(%struct.AVIOContext* %42, i32 8, i32 19202), !dbg !9231
  %43 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9232
  call void @avio_wb64(%struct.AVIOContext* %43, i64 0), !dbg !9233
  %44 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9234
  call void @mxf_write_local_tag(%struct.AVIOContext* %44, i32 16, i32 18435), !dbg !9235
  %45 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9236
  %46 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9237
  %track_instance_count15 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %46, i32 0, i32 27, !dbg !9238
  %47 = load i32, i32* %track_instance_count15, align 4, !dbg !9238
  call void @mxf_write_uuid(%struct.AVIOContext* %45, i32 6, i32 %47), !dbg !9239
  ret void, !dbg !9240
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_sequence(%struct.AVFormatContext* %s, %struct.AVStream* %st, %struct.MXFPackage* %package) #0 !dbg !9241 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %package.addr = alloca %struct.MXFPackage*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %component = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9242, metadata !2529), !dbg !9243
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !9244, metadata !2529), !dbg !9245
  store %struct.MXFPackage* %package, %struct.MXFPackage** %package.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFPackage** %package.addr, metadata !9246, metadata !2529), !dbg !9247
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !9248, metadata !2529), !dbg !9249
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9250
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9251
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9251
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !9250
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !9249
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !9252, metadata !2529), !dbg !9253
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9254
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !9255
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !9255
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !9253
  call void @llvm.dbg.declare(metadata i32* %component, metadata !9256, metadata !2529), !dbg !9257
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9258
  call void @mxf_write_metadata_key(%struct.AVIOContext* %5, i32 69376), !dbg !9259
  br label %do.body, !dbg !9260, !llvm.loop !9261

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9262

do.end:                                           ; preds = %do.body
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9265
  %call = call i32 @klv_encode_ber_length(%struct.AVIOContext* %6, i64 80), !dbg !9266
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9267
  call void @mxf_write_local_tag(%struct.AVIOContext* %7, i32 16, i32 15370), !dbg !9268
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9269
  %9 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9270
  %track_instance_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %9, i32 0, i32 27, !dbg !9271
  %10 = load i32, i32* %track_instance_count, align 4, !dbg !9271
  call void @mxf_write_uuid(%struct.AVIOContext* %8, i32 6, i32 %10), !dbg !9272
  br label %do.body2, !dbg !9273, !llvm.loop !9274

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !9275

do.end3:                                          ; preds = %do.body2
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9278
  %12 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9279
  call void @mxf_write_common_fields(%struct.AVFormatContext* %11, %struct.AVStream* %12), !dbg !9280
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9281
  call void @mxf_write_local_tag(%struct.AVIOContext* %13, i32 24, i32 4097), !dbg !9282
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9283
  call void @mxf_write_refs_count(%struct.AVIOContext* %14, i32 1), !dbg !9284
  %15 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9285
  %16 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9287
  %timecode_track = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %16, i32 0, i32 15, !dbg !9288
  %17 = load %struct.AVStream*, %struct.AVStream** %timecode_track, align 8, !dbg !9288
  %cmp = icmp eq %struct.AVStream* %15, %17, !dbg !9289
  br i1 %cmp, label %if.then, label %if.else, !dbg !9290

if.then:                                          ; preds = %do.end3
  store i32 4, i32* %component, align 4, !dbg !9291
  br label %if.end, !dbg !9292

if.else:                                          ; preds = %do.end3
  store i32 3, i32* %component, align 4, !dbg !9293
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9294
  %19 = load i32, i32* %component, align 4, !dbg !9295
  %20 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9296
  %track_instance_count4 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %20, i32 0, i32 27, !dbg !9297
  %21 = load i32, i32* %track_instance_count4, align 4, !dbg !9297
  call void @mxf_write_uuid(%struct.AVIOContext* %18, i32 %19, i32 %21), !dbg !9298
  ret void, !dbg !9299
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_timecode_component(%struct.AVFormatContext* %s, %struct.AVStream* %st, %struct.MXFPackage* %package) #0 !dbg !9300 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %package.addr = alloca %struct.MXFPackage*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9301, metadata !2529), !dbg !9302
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !9303, metadata !2529), !dbg !9304
  store %struct.MXFPackage* %package, %struct.MXFPackage** %package.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFPackage** %package.addr, metadata !9305, metadata !2529), !dbg !9306
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !9307, metadata !2529), !dbg !9308
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9309
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9310
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9310
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !9309
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !9308
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !9311, metadata !2529), !dbg !9312
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9313
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !9314
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !9314
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !9312
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9315
  call void @mxf_write_metadata_key(%struct.AVIOContext* %5, i32 70656), !dbg !9316
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9317
  %call = call i32 @klv_encode_ber_length(%struct.AVIOContext* %6, i64 75), !dbg !9318
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9319
  call void @mxf_write_local_tag(%struct.AVIOContext* %7, i32 16, i32 15370), !dbg !9320
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9321
  %9 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9322
  %track_instance_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %9, i32 0, i32 27, !dbg !9323
  %10 = load i32, i32* %track_instance_count, align 4, !dbg !9323
  call void @mxf_write_uuid(%struct.AVIOContext* %8, i32 4, i32 %10), !dbg !9324
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9325
  %12 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9326
  call void @mxf_write_common_fields(%struct.AVFormatContext* %11, %struct.AVStream* %12), !dbg !9327
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9328
  call void @mxf_write_local_tag(%struct.AVIOContext* %13, i32 8, i32 5377), !dbg !9329
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9330
  %15 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9331
  %tc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %15, i32 0, i32 14, !dbg !9332
  %start = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %tc, i32 0, i32 0, !dbg !9333
  %16 = load i32, i32* %start, align 8, !dbg !9333
  %conv = sext i32 %16 to i64, !dbg !9331
  call void @avio_wb64(%struct.AVIOContext* %14, i64 %conv), !dbg !9334
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9335
  call void @mxf_write_local_tag(%struct.AVIOContext* %17, i32 2, i32 5378), !dbg !9336
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9337
  %19 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9338
  %timecode_base = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %19, i32 0, i32 16, !dbg !9339
  %20 = load i32, i32* %timecode_base, align 8, !dbg !9339
  call void @avio_wb16(%struct.AVIOContext* %18, i32 %20), !dbg !9340
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9341
  call void @mxf_write_local_tag(%struct.AVIOContext* %21, i32 1, i32 5379), !dbg !9342
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9343
  %23 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9344
  %tc2 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %23, i32 0, i32 14, !dbg !9345
  %flags = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %tc2, i32 0, i32 1, !dbg !9346
  %24 = load i32, i32* %flags, align 4, !dbg !9346
  %and = and i32 %24, 1, !dbg !9347
  %tobool = icmp ne i32 %and, 0, !dbg !9348
  %lnot = xor i1 %tobool, true, !dbg !9348
  %lnot3 = xor i1 %lnot, true, !dbg !9349
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !9349
  call void @avio_w8(%struct.AVIOContext* %22, i32 %lnot.ext), !dbg !9350
  ret void, !dbg !9351
}

; Function Attrs: nounwind uwtable
define internal void @mxf_write_structural_component(%struct.AVFormatContext* %s, %struct.AVStream* %st, %struct.MXFPackage* %package) #0 !dbg !9352 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %package.addr = alloca %struct.MXFPackage*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9353, metadata !2529), !dbg !9354
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !9355, metadata !2529), !dbg !9356
  store %struct.MXFPackage* %package, %struct.MXFPackage** %package.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFPackage** %package.addr, metadata !9357, metadata !2529), !dbg !9358
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !9359, metadata !2529), !dbg !9360
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9361
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9362
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9362
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !9361
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !9360
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !9363, metadata !2529), !dbg !9364
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9365
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !9366
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !9366
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !9364
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9367, metadata !2529), !dbg !9368
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9369
  call void @mxf_write_metadata_key(%struct.AVIOContext* %5, i32 69888), !dbg !9370
  br label %do.body, !dbg !9371, !llvm.loop !9372

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9373

do.end:                                           ; preds = %do.body
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9376
  %call = call i32 @klv_encode_ber_length(%struct.AVIOContext* %6, i64 108), !dbg !9377
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9378
  call void @mxf_write_local_tag(%struct.AVIOContext* %7, i32 16, i32 15370), !dbg !9379
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9380
  %9 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9381
  %track_instance_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %9, i32 0, i32 27, !dbg !9382
  %10 = load i32, i32* %track_instance_count, align 4, !dbg !9382
  call void @mxf_write_uuid(%struct.AVIOContext* %8, i32 3, i32 %10), !dbg !9383
  br label %do.body2, !dbg !9384, !llvm.loop !9385

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !9386

do.end3:                                          ; preds = %do.body2
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9389
  %12 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9390
  call void @mxf_write_common_fields(%struct.AVFormatContext* %11, %struct.AVStream* %12), !dbg !9391
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9392
  call void @mxf_write_local_tag(%struct.AVIOContext* %13, i32 8, i32 4609), !dbg !9393
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9394
  call void @avio_wb64(%struct.AVIOContext* %14, i64 0), !dbg !9395
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9396
  call void @mxf_write_local_tag(%struct.AVIOContext* %15, i32 32, i32 4353), !dbg !9397
  %16 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !9398
  %ref = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %16, i32 0, i32 3, !dbg !9400
  %17 = load %struct.MXFPackage*, %struct.MXFPackage** %ref, align 8, !dbg !9400
  %tobool = icmp ne %struct.MXFPackage* %17, null, !dbg !9398
  br i1 %tobool, label %if.else, label %if.then, !dbg !9401

if.then:                                          ; preds = %do.end3
  store i32 0, i32* %i, align 4, !dbg !9402
  br label %for.cond, !dbg !9405

for.cond:                                         ; preds = %for.inc, %if.then
  %18 = load i32, i32* %i, align 4, !dbg !9406
  %cmp = icmp slt i32 %18, 4, !dbg !9409
  br i1 %cmp, label %for.body, label %for.end, !dbg !9410

for.body:                                         ; preds = %for.cond
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9411
  call void @avio_wb64(%struct.AVIOContext* %19, i64 0), !dbg !9412
  br label %for.inc, !dbg !9412

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !9413
  %inc = add nsw i32 %20, 1, !dbg !9413
  store i32 %inc, i32* %i, align 4, !dbg !9413
  br label %for.cond, !dbg !9415, !llvm.loop !9416

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !9418

if.else:                                          ; preds = %do.end3
  %21 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9419
  %22 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !9420
  %ref4 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %22, i32 0, i32 3, !dbg !9421
  %23 = load %struct.MXFPackage*, %struct.MXFPackage** %ref4, align 8, !dbg !9421
  %instance = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %23, i32 0, i32 2, !dbg !9422
  %24 = load i32, i32* %instance, align 4, !dbg !9422
  call void @mxf_write_umid(%struct.AVFormatContext* %21, i32 %24), !dbg !9423
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  %25 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9424
  call void @mxf_write_local_tag(%struct.AVIOContext* %25, i32 4, i32 4354), !dbg !9425
  %26 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !9426
  %type = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %26, i32 0, i32 1, !dbg !9428
  %27 = load i32, i32* %type, align 8, !dbg !9428
  %cmp5 = icmp eq i32 %27, 2, !dbg !9429
  br i1 %cmp5, label %land.lhs.true, label %if.else9, !dbg !9430

land.lhs.true:                                    ; preds = %if.end
  %28 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !9431
  %ref6 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %28, i32 0, i32 3, !dbg !9433
  %29 = load %struct.MXFPackage*, %struct.MXFPackage** %ref6, align 8, !dbg !9433
  %tobool7 = icmp ne %struct.MXFPackage* %29, null, !dbg !9431
  br i1 %tobool7, label %if.else9, label %if.then8, !dbg !9434

if.then8:                                         ; preds = %land.lhs.true
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9435
  call void @avio_wb32(%struct.AVIOContext* %30, i32 0), !dbg !9436
  br label %if.end10, !dbg !9436

if.else9:                                         ; preds = %land.lhs.true, %if.end
  %31 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9437
  %32 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9438
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %32, i32 0, i32 0, !dbg !9439
  %33 = load i32, i32* %index, align 8, !dbg !9439
  %add = add nsw i32 %33, 2, !dbg !9440
  call void @avio_wb32(%struct.AVIOContext* %31, i32 %add), !dbg !9441
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.then8
  ret void, !dbg !9442
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_write_tagged_value(%struct.AVFormatContext* %s, i8* %name, i8* %value) #0 !dbg !9443 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %name.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %name_size = alloca i32, align 4
  %indirect_value_size = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9446, metadata !2529), !dbg !9447
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9448, metadata !2529), !dbg !9449
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !9450, metadata !2529), !dbg !9451
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !9452, metadata !2529), !dbg !9453
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9454
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9455
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9455
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !9454
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !9453
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !9456, metadata !2529), !dbg !9457
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9458
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !9459
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !9459
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !9457
  call void @llvm.dbg.declare(metadata i32* %name_size, metadata !9460, metadata !2529), !dbg !9461
  %5 = load i8*, i8** %name.addr, align 8, !dbg !9462
  %call = call i32 @mxf_utf16_local_tag_length(i8* %5), !dbg !9463
  store i32 %call, i32* %name_size, align 4, !dbg !9461
  call void @llvm.dbg.declare(metadata i32* %indirect_value_size, metadata !9464, metadata !2529), !dbg !9465
  %6 = load i8*, i8** %value.addr, align 8, !dbg !9466
  %call2 = call i32 @mxf_utf16_local_tag_length(i8* %6), !dbg !9467
  %add = add nsw i32 13, %call2, !dbg !9468
  store i32 %add, i32* %indirect_value_size, align 4, !dbg !9465
  %7 = load i32, i32* %name_size, align 4, !dbg !9469
  %tobool = icmp ne i32 %7, 0, !dbg !9469
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9471

lor.lhs.false:                                    ; preds = %entry
  %8 = load i32, i32* %indirect_value_size, align 4, !dbg !9472
  %cmp = icmp eq i32 %8, 13, !dbg !9474
  br i1 %cmp, label %if.then, label %if.end, !dbg !9475

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !9476
  br label %return, !dbg !9476

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9477
  call void @mxf_write_metadata_key(%struct.AVIOContext* %9, i32 81664), !dbg !9478
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9479
  %11 = load i32, i32* %name_size, align 4, !dbg !9480
  %add3 = add nsw i32 24, %11, !dbg !9481
  %12 = load i32, i32* %indirect_value_size, align 4, !dbg !9482
  %add4 = add nsw i32 %add3, %12, !dbg !9483
  %conv = sext i32 %add4 to i64, !dbg !9484
  %call5 = call i32 @klv_encode_ber_length(%struct.AVIOContext* %10, i64 %conv), !dbg !9485
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9486
  call void @mxf_write_local_tag(%struct.AVIOContext* %13, i32 16, i32 15370), !dbg !9487
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9488
  %15 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9489
  %tagged_value_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %15, i32 0, i32 24, !dbg !9490
  %16 = load i32, i32* %tagged_value_count, align 4, !dbg !9490
  call void @mxf_write_uuid(%struct.AVIOContext* %14, i32 18, i32 %16), !dbg !9491
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9492
  %18 = load i8*, i8** %name.addr, align 8, !dbg !9493
  call void @mxf_write_local_tag_utf16(%struct.AVIOContext* %17, i32 20481, i8* %18), !dbg !9494
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9495
  %20 = load i32, i32* %indirect_value_size, align 4, !dbg !9496
  call void @mxf_write_local_tag(%struct.AVIOContext* %19, i32 %20, i32 20483), !dbg !9497
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9498
  call void @avio_write(%struct.AVIOContext* %21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @mxf_indirect_value_utf16le, i32 0, i32 0), i32 17), !dbg !9499
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9500
  %23 = load i8*, i8** %value.addr, align 8, !dbg !9501
  %call6 = call i32 @avio_put_str16le(%struct.AVIOContext* %22, i8* %23), !dbg !9502
  %24 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9503
  %tagged_value_count7 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %24, i32 0, i32 24, !dbg !9504
  %25 = load i32, i32* %tagged_value_count7, align 4, !dbg !9505
  %inc = add i32 %25, 1, !dbg !9505
  store i32 %inc, i32* %tagged_value_count7, align 4, !dbg !9505
  store i32 0, i32* %retval, align 4, !dbg !9506
  br label %return, !dbg !9506

return:                                           ; preds = %if.end, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !9507
  ret i32 %26, !dbg !9507
}

declare i32 @avio_put_str16le(%struct.AVIOContext*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @mxf_write_common_fields(%struct.AVFormatContext* %s, %struct.AVStream* %st) #0 !dbg !9508 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %data_def_ul = alloca %struct.MXFCodecUL*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9509, metadata !2529), !dbg !9510
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !9511, metadata !2529), !dbg !9512
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !9513, metadata !2529), !dbg !9514
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9515
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9516
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9516
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !9515
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !9514
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !9517, metadata !2529), !dbg !9518
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9519
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !9520
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !9520
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !9518
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9521
  call void @mxf_write_local_tag(%struct.AVIOContext* %5, i32 16, i32 513), !dbg !9522
  %6 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9523
  %7 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9525
  %timecode_track = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %7, i32 0, i32 15, !dbg !9526
  %8 = load %struct.AVStream*, %struct.AVStream** %timecode_track, align 8, !dbg !9526
  %cmp = icmp eq %struct.AVStream* %6, %8, !dbg !9527
  br i1 %cmp, label %if.then, label %if.else, !dbg !9528

if.then:                                          ; preds = %entry
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9529
  call void @avio_write(%struct.AVIOContext* %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @smpte_12m_timecode_track_data_ul, i32 0, i32 0), i32 16), !dbg !9530
  br label %if.end, !dbg !9530

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MXFCodecUL** %data_def_ul, metadata !9531, metadata !2529), !dbg !9545
  %10 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9546
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %10, i32 0, i32 19, !dbg !9547
  %11 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !9547
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %11, i32 0, i32 0, !dbg !9548
  %12 = load i32, i32* %codec_type, align 8, !dbg !9548
  %call = call %struct.MXFCodecUL* @mxf_get_data_definition_ul(i32 %12), !dbg !9549
  store %struct.MXFCodecUL* %call, %struct.MXFCodecUL** %data_def_ul, align 8, !dbg !9545
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9550
  %14 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %data_def_ul, align 8, !dbg !9551
  %uid = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %14, i32 0, i32 0, !dbg !9552
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %uid, i32 0, i32 0, !dbg !9551
  call void @avio_write(%struct.AVIOContext* %13, i8* %arraydecay, i32 16), !dbg !9553
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9554
  call void @mxf_write_local_tag(%struct.AVIOContext* %15, i32 8, i32 514), !dbg !9555
  %16 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9556
  %17 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9558
  %timecode_track2 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %17, i32 0, i32 15, !dbg !9559
  %18 = load %struct.AVStream*, %struct.AVStream** %timecode_track2, align 8, !dbg !9559
  %cmp3 = icmp ne %struct.AVStream* %16, %18, !dbg !9560
  br i1 %cmp3, label %land.lhs.true, label %if.else10, !dbg !9561

land.lhs.true:                                    ; preds = %if.end
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9562
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %19, i32 0, i32 2, !dbg !9564
  %20 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !9564
  %cmp4 = icmp eq %struct.AVOutputFormat* %20, @ff_mxf_opatom_muxer, !dbg !9565
  br i1 %cmp4, label %land.lhs.true5, label %if.else10, !dbg !9566

land.lhs.true5:                                   ; preds = %land.lhs.true
  %21 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !9567
  %codecpar6 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i32 0, i32 19, !dbg !9569
  %22 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar6, align 8, !dbg !9569
  %codec_type7 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %22, i32 0, i32 0, !dbg !9570
  %23 = load i32, i32* %codec_type7, align 8, !dbg !9570
  %cmp8 = icmp eq i32 %23, 1, !dbg !9571
  br i1 %cmp8, label %if.then9, label %if.else10, !dbg !9572

if.then9:                                         ; preds = %land.lhs.true5
  %24 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9573
  %25 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9575
  %body_offset = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %25, i32 0, i32 19, !dbg !9576
  %26 = load i64, i64* %body_offset, align 8, !dbg !9576
  %27 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9577
  %edit_unit_byte_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %27, i32 0, i32 17, !dbg !9578
  %28 = load i32, i32* %edit_unit_byte_count, align 4, !dbg !9578
  %conv = sext i32 %28 to i64, !dbg !9577
  %div = udiv i64 %26, %conv, !dbg !9579
  call void @avio_wb64(%struct.AVIOContext* %24, i64 %div), !dbg !9580
  br label %if.end11, !dbg !9581

if.else10:                                        ; preds = %land.lhs.true5, %land.lhs.true, %if.end
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9582
  %30 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9584
  %duration = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %30, i32 0, i32 13, !dbg !9585
  %31 = load i64, i64* %duration, align 8, !dbg !9585
  call void @avio_wb64(%struct.AVIOContext* %29, i64 %31), !dbg !9586
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.then9
  ret void, !dbg !9587
}

; Function Attrs: nounwind uwtable
define internal %struct.MXFCodecUL* @mxf_get_data_definition_ul(i32 %type) #0 !dbg !9588 {
entry:
  %type.addr = alloca i32, align 4
  %uls = alloca %struct.MXFCodecUL*, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9591, metadata !2529), !dbg !9592
  call void @llvm.dbg.declare(metadata %struct.MXFCodecUL** %uls, metadata !9593, metadata !2529), !dbg !9594
  store %struct.MXFCodecUL* getelementptr inbounds ([0 x %struct.MXFCodecUL], [0 x %struct.MXFCodecUL]* @ff_mxf_data_definition_uls, i32 0, i32 0), %struct.MXFCodecUL** %uls, align 8, !dbg !9594
  br label %while.cond, !dbg !9595

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %uls, align 8, !dbg !9596
  %uid = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %0, i32 0, i32 0, !dbg !9598
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %uid, i64 0, i64 0, !dbg !9596
  %1 = load i8, i8* %arrayidx, align 8, !dbg !9596
  %tobool = icmp ne i8 %1, 0, !dbg !9599
  br i1 %tobool, label %while.body, label %while.end, !dbg !9599

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %type.addr, align 4, !dbg !9600
  %3 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %uls, align 8, !dbg !9603
  %id = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %3, i32 0, i32 2, !dbg !9604
  %4 = load i32, i32* %id, align 4, !dbg !9604
  %cmp = icmp eq i32 %2, %4, !dbg !9605
  br i1 %cmp, label %if.then, label %if.end, !dbg !9606

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !9607

if.end:                                           ; preds = %while.body
  %5 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %uls, align 8, !dbg !9608
  %incdec.ptr = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %5, i32 1, !dbg !9608
  store %struct.MXFCodecUL* %incdec.ptr, %struct.MXFCodecUL** %uls, align 8, !dbg !9608
  br label %while.cond, !dbg !9609, !llvm.loop !9611

while.end:                                        ; preds = %if.then, %while.cond
  %6 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %uls, align 8, !dbg !9612
  ret %struct.MXFCodecUL* %6, !dbg !9613
}

declare void @ffio_fill(%struct.AVIOContext*, i32, i32) #1

declare i32 @av_timecode_get_smpte_from_framenum(%struct.AVTimecode*, i32) #1

declare void @avio_wl16(%struct.AVIOContext*, i32) #1

declare void @avio_wl32(%struct.AVIOContext*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @mxf_write_random_index_pack(%struct.AVFormatContext* %s) #0 !dbg !9614 {
entry:
  %s.addr.i10 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i10, metadata !3913, metadata !2529), !dbg !9615
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !3913, metadata !2529), !dbg !9617
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %pos = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9619, metadata !2529), !dbg !9620
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !9621, metadata !2529), !dbg !9622
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9623
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !9624
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9624
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !9623
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !9622
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !9625, metadata !2529), !dbg !9626
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9627
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !9628
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !9628
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !9626
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !9629, metadata !2529), !dbg !9630
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9631
  store %struct.AVIOContext* %5, %struct.AVIOContext** %s.addr.i, align 8, !dbg !9632
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !9633
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %6, i64 0, i32 1) #9, !dbg !9634
  store i64 %call.i, i64* %pos, align 8, !dbg !9630
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9635, metadata !2529), !dbg !9636
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9637
  call void @avio_write(%struct.AVIOContext* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @random_index_pack_key, i32 0, i32 0), i32 16), !dbg !9638
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9639
  %9 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9640
  %body_partitions_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %9, i32 0, i32 11, !dbg !9641
  %10 = load i32, i32* %body_partitions_count, align 8, !dbg !9641
  %conv = zext i32 %10 to i64, !dbg !9640
  %mul = mul nsw i64 12, %conv, !dbg !9642
  %add = add nsw i64 28, %mul, !dbg !9643
  %call2 = call i32 @klv_encode_ber_length(%struct.AVIOContext* %8, i64 %add), !dbg !9644
  %11 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9645
  %edit_unit_byte_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %11, i32 0, i32 17, !dbg !9647
  %12 = load i32, i32* %edit_unit_byte_count, align 4, !dbg !9647
  %tobool = icmp ne i32 %12, 0, !dbg !9645
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9648

land.lhs.true:                                    ; preds = %entry
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9649
  %oformat = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i32 0, i32 2, !dbg !9651
  %14 = load %struct.AVOutputFormat*, %struct.AVOutputFormat** %oformat, align 8, !dbg !9651
  %cmp = icmp ne %struct.AVOutputFormat* %14, @ff_mxf_opatom_muxer, !dbg !9652
  br i1 %cmp, label %if.then, label %if.else, !dbg !9653

if.then:                                          ; preds = %land.lhs.true
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9654
  call void @avio_wb32(%struct.AVIOContext* %15, i32 1), !dbg !9655
  br label %if.end, !dbg !9655

if.else:                                          ; preds = %land.lhs.true, %entry
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9656
  call void @avio_wb32(%struct.AVIOContext* %16, i32 0), !dbg !9657
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9658
  call void @avio_wb64(%struct.AVIOContext* %17, i64 0), !dbg !9659
  store i32 0, i32* %i, align 4, !dbg !9660
  br label %for.cond, !dbg !9662

for.cond:                                         ; preds = %for.inc, %if.end
  %18 = load i32, i32* %i, align 4, !dbg !9663
  %19 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9666
  %body_partitions_count4 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %19, i32 0, i32 11, !dbg !9667
  %20 = load i32, i32* %body_partitions_count4, align 8, !dbg !9667
  %cmp5 = icmp ult i32 %18, %20, !dbg !9668
  br i1 %cmp5, label %for.body, label %for.end, !dbg !9669

for.body:                                         ; preds = %for.cond
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9670
  call void @avio_wb32(%struct.AVIOContext* %21, i32 1), !dbg !9672
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9673
  %23 = load i32, i32* %i, align 4, !dbg !9674
  %idxprom = sext i32 %23 to i64, !dbg !9675
  %24 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9675
  %body_partition_offset = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %24, i32 0, i32 10, !dbg !9676
  %25 = load i64*, i64** %body_partition_offset, align 8, !dbg !9676
  %arrayidx = getelementptr inbounds i64, i64* %25, i64 %idxprom, !dbg !9675
  %26 = load i64, i64* %arrayidx, align 8, !dbg !9675
  call void @avio_wb64(%struct.AVIOContext* %22, i64 %26), !dbg !9677
  br label %for.inc, !dbg !9678

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !9679
  %inc = add nsw i32 %27, 1, !dbg !9679
  store i32 %inc, i32* %i, align 4, !dbg !9679
  br label %for.cond, !dbg !9681, !llvm.loop !9682

for.end:                                          ; preds = %for.cond
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9684
  call void @avio_wb32(%struct.AVIOContext* %28, i32 0), !dbg !9685
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9686
  %30 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !9687
  %footer_partition_offset = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %30, i32 0, i32 1, !dbg !9688
  %31 = load i64, i64* %footer_partition_offset, align 8, !dbg !9688
  call void @avio_wb64(%struct.AVIOContext* %29, i64 %31), !dbg !9689
  %32 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9690
  %33 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9691
  store %struct.AVIOContext* %33, %struct.AVIOContext** %s.addr.i10, align 8, !dbg !9692
  %34 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i10, align 8, !dbg !9693
  %call.i11 = call i64 @avio_seek(%struct.AVIOContext* %34, i64 0, i32 1) #9, !dbg !9694
  %35 = load i64, i64* %pos, align 8, !dbg !9695
  %sub = sub i64 %call.i11, %35, !dbg !9696
  %add8 = add i64 %sub, 4, !dbg !9697
  %conv9 = trunc i64 %add8 to i32, !dbg !9692
  call void @avio_wb32(%struct.AVIOContext* %32, i32 %conv9), !dbg !9698
  ret void, !dbg !9700
}

declare void @ff_audio_interleave_close(%struct.AVFormatContext*) #1

declare void @av_freep(i8*) #1

; Function Attrs: nounwind uwtable
define internal void @mxf_free(%struct.AVFormatContext* %s) #0 !dbg !9701 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %i = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9702, metadata !2529), !dbg !9703
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9704, metadata !2529), !dbg !9705
  store i32 0, i32* %i, align 4, !dbg !9706
  br label %for.cond, !dbg !9708

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9709
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9712
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 6, !dbg !9713
  %2 = load i32, i32* %nb_streams, align 4, !dbg !9713
  %cmp = icmp ult i32 %0, %2, !dbg !9714
  br i1 %cmp, label %for.body, label %for.end, !dbg !9715

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !9716, metadata !2529), !dbg !9718
  %3 = load i32, i32* %i, align 4, !dbg !9719
  %idxprom = sext i32 %3 to i64, !dbg !9720
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9720
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 7, !dbg !9721
  %5 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !9721
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %5, i64 %idxprom, !dbg !9720
  %6 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !9720
  store %struct.AVStream* %6, %struct.AVStream** %st, align 8, !dbg !9718
  %7 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9722
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %7, i32 0, i32 3, !dbg !9723
  %8 = bitcast i8** %priv_data to i8*, !dbg !9724
  call void @av_freep(i8* %8), !dbg !9725
  br label %for.inc, !dbg !9726

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !9727
  %inc = add nsw i32 %9, 1, !dbg !9727
  store i32 %inc, i32* %i, align 4, !dbg !9727
  br label %for.cond, !dbg !9729, !llvm.loop !9730

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9732
}

declare i32 @ff_audio_rechunk_interleave(%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*)*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_interleave_get_packet(%struct.AVFormatContext* %s, %struct.AVPacket* %out, %struct.AVPacket* %pkt, i32 %flush) #0 !dbg !9733 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %out.addr = alloca %struct.AVPacket*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %flush.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %stream_count = alloca i32, align 4
  %pktl = alloca %struct.AVPacketList*, align 8
  %last = alloca %struct.AVPacketList*, align 8
  %next33 = alloca %struct.AVPacketList*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9734, metadata !2529), !dbg !9735
  store %struct.AVPacket* %out, %struct.AVPacket** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %out.addr, metadata !9736, metadata !2529), !dbg !9737
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !9738, metadata !2529), !dbg !9739
  store i32 %flush, i32* %flush.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flush.addr, metadata !9740, metadata !2529), !dbg !9741
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9742, metadata !2529), !dbg !9743
  call void @llvm.dbg.declare(metadata i32* %stream_count, metadata !9744, metadata !2529), !dbg !9745
  store i32 0, i32* %stream_count, align 4, !dbg !9745
  store i32 0, i32* %i, align 4, !dbg !9746
  br label %for.cond, !dbg !9748

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9749
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9752
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 6, !dbg !9753
  %2 = load i32, i32* %nb_streams, align 4, !dbg !9753
  %cmp = icmp ult i32 %0, %2, !dbg !9754
  br i1 %cmp, label %for.body, label %for.end, !dbg !9755

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !9756
  %idxprom = sext i32 %3 to i64, !dbg !9757
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9757
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 7, !dbg !9758
  %5 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !9758
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %5, i64 %idxprom, !dbg !9757
  %6 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !9757
  %last_in_packet_buffer = getelementptr inbounds %struct.AVStream, %struct.AVStream* %6, i32 0, i32 30, !dbg !9759
  %7 = load %struct.AVPacketList*, %struct.AVPacketList** %last_in_packet_buffer, align 8, !dbg !9759
  %tobool = icmp ne %struct.AVPacketList* %7, null, !dbg !9760
  %lnot = xor i1 %tobool, true, !dbg !9760
  %lnot1 = xor i1 %lnot, true, !dbg !9761
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9761
  %8 = load i32, i32* %stream_count, align 4, !dbg !9762
  %add = add nsw i32 %8, %lnot.ext, !dbg !9762
  store i32 %add, i32* %stream_count, align 4, !dbg !9762
  br label %for.inc, !dbg !9763

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !9764
  %inc = add nsw i32 %9, 1, !dbg !9764
  store i32 %inc, i32* %i, align 4, !dbg !9764
  br label %for.cond, !dbg !9766, !llvm.loop !9767

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %stream_count, align 4, !dbg !9769
  %tobool2 = icmp ne i32 %10, 0, !dbg !9769
  br i1 %tobool2, label %land.lhs.true, label %if.else74, !dbg !9771

land.lhs.true:                                    ; preds = %for.end
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9772
  %nb_streams3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %11, i32 0, i32 6, !dbg !9774
  %12 = load i32, i32* %nb_streams3, align 4, !dbg !9774
  %13 = load i32, i32* %stream_count, align 4, !dbg !9775
  %cmp4 = icmp eq i32 %12, %13, !dbg !9776
  br i1 %cmp4, label %if.then, label %lor.lhs.false, !dbg !9777

lor.lhs.false:                                    ; preds = %land.lhs.true
  %14 = load i32, i32* %flush.addr, align 4, !dbg !9778
  %tobool5 = icmp ne i32 %14, 0, !dbg !9778
  br i1 %tobool5, label %if.then, label %if.else74, !dbg !9780

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.AVPacketList** %pktl, metadata !9781, metadata !2529), !dbg !9785
  %15 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9786
  %internal = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %15, i32 0, i32 55, !dbg !9787
  %16 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %internal, align 8, !dbg !9787
  %packet_buffer = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %16, i32 0, i32 1, !dbg !9788
  %17 = load %struct.AVPacketList*, %struct.AVPacketList** %packet_buffer, align 8, !dbg !9788
  store %struct.AVPacketList* %17, %struct.AVPacketList** %pktl, align 8, !dbg !9785
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9789
  %nb_streams6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %18, i32 0, i32 6, !dbg !9791
  %19 = load i32, i32* %nb_streams6, align 4, !dbg !9791
  %20 = load i32, i32* %stream_count, align 4, !dbg !9792
  %cmp7 = icmp ne i32 %19, %20, !dbg !9793
  br i1 %cmp7, label %if.then8, label %if.end46, !dbg !9794

if.then8:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.AVPacketList** %last, metadata !9795, metadata !2529), !dbg !9797
  store %struct.AVPacketList* null, %struct.AVPacketList** %last, align 8, !dbg !9797
  br label %while.cond, !dbg !9798

while.cond:                                       ; preds = %if.end29, %if.then8
  %21 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9799
  %tobool9 = icmp ne %struct.AVPacketList* %21, null, !dbg !9801
  br i1 %tobool9, label %while.body, label %while.end, !dbg !9801

while.body:                                       ; preds = %while.cond
  %22 = load i32, i32* %stream_count, align 4, !dbg !9802
  %tobool10 = icmp ne i32 %22, 0, !dbg !9802
  br i1 %tobool10, label %lor.lhs.false11, label %if.then14, !dbg !9805

lor.lhs.false11:                                  ; preds = %while.body
  %23 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9806
  %pkt12 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %23, i32 0, i32 0, !dbg !9808
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt12, i32 0, i32 5, !dbg !9809
  %24 = load i32, i32* %stream_index, align 4, !dbg !9809
  %cmp13 = icmp eq i32 %24, 0, !dbg !9810
  br i1 %cmp13, label %if.then14, label %if.end, !dbg !9811

if.then14:                                        ; preds = %lor.lhs.false11, %while.body
  br label %while.end, !dbg !9812

if.end:                                           ; preds = %lor.lhs.false11
  %25 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9813
  %pkt15 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %25, i32 0, i32 0, !dbg !9815
  %stream_index16 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt15, i32 0, i32 5, !dbg !9816
  %26 = load i32, i32* %stream_index16, align 4, !dbg !9816
  %idxprom17 = sext i32 %26 to i64, !dbg !9817
  %27 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9817
  %streams18 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %27, i32 0, i32 7, !dbg !9818
  %28 = load %struct.AVStream**, %struct.AVStream*** %streams18, align 8, !dbg !9818
  %arrayidx19 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %28, i64 %idxprom17, !dbg !9817
  %29 = load %struct.AVStream*, %struct.AVStream** %arrayidx19, align 8, !dbg !9817
  %last_in_packet_buffer20 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %29, i32 0, i32 30, !dbg !9819
  %30 = load %struct.AVPacketList*, %struct.AVPacketList** %last_in_packet_buffer20, align 8, !dbg !9819
  %31 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9820
  %cmp21 = icmp ne %struct.AVPacketList* %30, %31, !dbg !9821
  br i1 %cmp21, label %if.then22, label %if.end29, !dbg !9822

if.then22:                                        ; preds = %if.end
  %32 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9823
  %33 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9824
  %pkt23 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %33, i32 0, i32 0, !dbg !9825
  %stream_index24 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt23, i32 0, i32 5, !dbg !9826
  %34 = load i32, i32* %stream_index24, align 4, !dbg !9826
  %idxprom25 = sext i32 %34 to i64, !dbg !9827
  %35 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9827
  %streams26 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %35, i32 0, i32 7, !dbg !9828
  %36 = load %struct.AVStream**, %struct.AVStream*** %streams26, align 8, !dbg !9828
  %arrayidx27 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %36, i64 %idxprom25, !dbg !9827
  %37 = load %struct.AVStream*, %struct.AVStream** %arrayidx27, align 8, !dbg !9827
  %last_in_packet_buffer28 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i32 0, i32 30, !dbg !9829
  store %struct.AVPacketList* %32, %struct.AVPacketList** %last_in_packet_buffer28, align 8, !dbg !9830
  br label %if.end29, !dbg !9827

if.end29:                                         ; preds = %if.then22, %if.end
  %38 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9831
  store %struct.AVPacketList* %38, %struct.AVPacketList** %last, align 8, !dbg !9832
  %39 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9833
  %next = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %39, i32 0, i32 1, !dbg !9834
  %40 = load %struct.AVPacketList*, %struct.AVPacketList** %next, align 8, !dbg !9834
  store %struct.AVPacketList* %40, %struct.AVPacketList** %pktl, align 8, !dbg !9835
  %41 = load i32, i32* %stream_count, align 4, !dbg !9836
  %dec = add nsw i32 %41, -1, !dbg !9836
  store i32 %dec, i32* %stream_count, align 4, !dbg !9836
  br label %while.cond, !dbg !9837, !llvm.loop !9839

while.end:                                        ; preds = %if.then14, %while.cond
  br label %while.cond30, !dbg !9840

while.cond30:                                     ; preds = %while.body32, %while.end
  %42 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9841
  %tobool31 = icmp ne %struct.AVPacketList* %42, null, !dbg !9842
  br i1 %tobool31, label %while.body32, label %while.end36, !dbg !9842

while.body32:                                     ; preds = %while.cond30
  call void @llvm.dbg.declare(metadata %struct.AVPacketList** %next33, metadata !9843, metadata !2529), !dbg !9845
  %43 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9846
  %next34 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %43, i32 0, i32 1, !dbg !9847
  %44 = load %struct.AVPacketList*, %struct.AVPacketList** %next34, align 8, !dbg !9847
  store %struct.AVPacketList* %44, %struct.AVPacketList** %next33, align 8, !dbg !9845
  %45 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9848
  %pkt35 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %45, i32 0, i32 0, !dbg !9849
  call void @av_packet_unref(%struct.AVPacket* %pkt35), !dbg !9850
  %46 = bitcast %struct.AVPacketList** %pktl to i8*, !dbg !9851
  call void @av_freep(i8* %46), !dbg !9852
  %47 = load %struct.AVPacketList*, %struct.AVPacketList** %next33, align 8, !dbg !9853
  store %struct.AVPacketList* %47, %struct.AVPacketList** %pktl, align 8, !dbg !9854
  br label %while.cond30, !dbg !9855, !llvm.loop !9856

while.end36:                                      ; preds = %while.cond30
  %48 = load %struct.AVPacketList*, %struct.AVPacketList** %last, align 8, !dbg !9857
  %tobool37 = icmp ne %struct.AVPacketList* %48, null, !dbg !9857
  br i1 %tobool37, label %if.then38, label %if.else, !dbg !9859

if.then38:                                        ; preds = %while.end36
  %49 = load %struct.AVPacketList*, %struct.AVPacketList** %last, align 8, !dbg !9860
  %next39 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %49, i32 0, i32 1, !dbg !9861
  store %struct.AVPacketList* null, %struct.AVPacketList** %next39, align 8, !dbg !9862
  br label %if.end43, !dbg !9860

if.else:                                          ; preds = %while.end36
  %50 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9863
  %internal40 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %50, i32 0, i32 55, !dbg !9865
  %51 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %internal40, align 8, !dbg !9865
  %packet_buffer41 = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %51, i32 0, i32 1, !dbg !9866
  store %struct.AVPacketList* null, %struct.AVPacketList** %packet_buffer41, align 8, !dbg !9867
  %52 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9868
  %internal42 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %52, i32 0, i32 55, !dbg !9869
  %53 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %internal42, align 8, !dbg !9869
  %packet_buffer_end = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %53, i32 0, i32 2, !dbg !9870
  store %struct.AVPacketList* null, %struct.AVPacketList** %packet_buffer_end, align 8, !dbg !9871
  br label %out75, !dbg !9872

if.end43:                                         ; preds = %if.then38
  %54 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9873
  %internal44 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %54, i32 0, i32 55, !dbg !9874
  %55 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %internal44, align 8, !dbg !9874
  %packet_buffer45 = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %55, i32 0, i32 1, !dbg !9875
  %56 = load %struct.AVPacketList*, %struct.AVPacketList** %packet_buffer45, align 8, !dbg !9875
  store %struct.AVPacketList* %56, %struct.AVPacketList** %pktl, align 8, !dbg !9876
  br label %if.end46, !dbg !9877

if.end46:                                         ; preds = %if.end43, %if.then
  %57 = load %struct.AVPacket*, %struct.AVPacket** %out.addr, align 8, !dbg !9878
  %58 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9879
  %pkt47 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %58, i32 0, i32 0, !dbg !9880
  %59 = bitcast %struct.AVPacket* %57 to i8*, !dbg !9880
  %60 = bitcast %struct.AVPacket* %pkt47 to i8*, !dbg !9880
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 88, i32 8, i1 false), !dbg !9880
  %61 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9881
  %62 = bitcast %struct.AVFormatContext* %61 to i8*, !dbg !9881
  %63 = load %struct.AVPacket*, %struct.AVPacket** %out.addr, align 8, !dbg !9882
  %stream_index48 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %63, i32 0, i32 5, !dbg !9883
  %64 = load i32, i32* %stream_index48, align 4, !dbg !9883
  %65 = load %struct.AVPacket*, %struct.AVPacket** %out.addr, align 8, !dbg !9884
  %dts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %65, i32 0, i32 2, !dbg !9885
  %66 = load i64, i64* %dts, align 8, !dbg !9885
  call void (i8*, i32, i8*, ...) @av_log(i8* %62, i32 56, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.73, i32 0, i32 0), i32 %64, i64 %66), !dbg !9886
  %67 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9887
  %next49 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %67, i32 0, i32 1, !dbg !9888
  %68 = load %struct.AVPacketList*, %struct.AVPacketList** %next49, align 8, !dbg !9888
  %69 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9889
  %internal50 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %69, i32 0, i32 55, !dbg !9890
  %70 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %internal50, align 8, !dbg !9890
  %packet_buffer51 = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %70, i32 0, i32 1, !dbg !9891
  store %struct.AVPacketList* %68, %struct.AVPacketList** %packet_buffer51, align 8, !dbg !9892
  %71 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9893
  %pkt52 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %71, i32 0, i32 0, !dbg !9895
  %stream_index53 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt52, i32 0, i32 5, !dbg !9896
  %72 = load i32, i32* %stream_index53, align 4, !dbg !9896
  %idxprom54 = sext i32 %72 to i64, !dbg !9897
  %73 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9897
  %streams55 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %73, i32 0, i32 7, !dbg !9898
  %74 = load %struct.AVStream**, %struct.AVStream*** %streams55, align 8, !dbg !9898
  %arrayidx56 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %74, i64 %idxprom54, !dbg !9897
  %75 = load %struct.AVStream*, %struct.AVStream** %arrayidx56, align 8, !dbg !9897
  %last_in_packet_buffer57 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %75, i32 0, i32 30, !dbg !9899
  %76 = load %struct.AVPacketList*, %struct.AVPacketList** %last_in_packet_buffer57, align 8, !dbg !9899
  %77 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9900
  %cmp58 = icmp eq %struct.AVPacketList* %76, %77, !dbg !9901
  br i1 %cmp58, label %if.then59, label %if.end66, !dbg !9902

if.then59:                                        ; preds = %if.end46
  %78 = load %struct.AVPacketList*, %struct.AVPacketList** %pktl, align 8, !dbg !9903
  %pkt60 = getelementptr inbounds %struct.AVPacketList, %struct.AVPacketList* %78, i32 0, i32 0, !dbg !9904
  %stream_index61 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %pkt60, i32 0, i32 5, !dbg !9905
  %79 = load i32, i32* %stream_index61, align 4, !dbg !9905
  %idxprom62 = sext i32 %79 to i64, !dbg !9906
  %80 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9906
  %streams63 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %80, i32 0, i32 7, !dbg !9907
  %81 = load %struct.AVStream**, %struct.AVStream*** %streams63, align 8, !dbg !9907
  %arrayidx64 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %81, i64 %idxprom62, !dbg !9906
  %82 = load %struct.AVStream*, %struct.AVStream** %arrayidx64, align 8, !dbg !9906
  %last_in_packet_buffer65 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %82, i32 0, i32 30, !dbg !9908
  store %struct.AVPacketList* null, %struct.AVPacketList** %last_in_packet_buffer65, align 8, !dbg !9909
  br label %if.end66, !dbg !9906

if.end66:                                         ; preds = %if.then59, %if.end46
  %83 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9910
  %internal67 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %83, i32 0, i32 55, !dbg !9912
  %84 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %internal67, align 8, !dbg !9912
  %packet_buffer68 = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %84, i32 0, i32 1, !dbg !9913
  %85 = load %struct.AVPacketList*, %struct.AVPacketList** %packet_buffer68, align 8, !dbg !9913
  %tobool69 = icmp ne %struct.AVPacketList* %85, null, !dbg !9910
  br i1 %tobool69, label %if.end73, label %if.then70, !dbg !9914

if.then70:                                        ; preds = %if.end66
  %86 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9915
  %internal71 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %86, i32 0, i32 55, !dbg !9916
  %87 = load %struct.AVFormatInternal*, %struct.AVFormatInternal** %internal71, align 8, !dbg !9916
  %packet_buffer_end72 = getelementptr inbounds %struct.AVFormatInternal, %struct.AVFormatInternal* %87, i32 0, i32 2, !dbg !9917
  store %struct.AVPacketList* null, %struct.AVPacketList** %packet_buffer_end72, align 8, !dbg !9918
  br label %if.end73, !dbg !9915

if.end73:                                         ; preds = %if.then70, %if.end66
  %88 = bitcast %struct.AVPacketList** %pktl to i8*, !dbg !9919
  call void @av_freep(i8* %88), !dbg !9920
  store i32 1, i32* %retval, align 4, !dbg !9921
  br label %return, !dbg !9921

if.else74:                                        ; preds = %lor.lhs.false, %for.end
  br label %out75, !dbg !9922

out75:                                            ; preds = %if.else74, %if.else
  %89 = load %struct.AVPacket*, %struct.AVPacket** %out.addr, align 8, !dbg !9923
  call void @av_init_packet(%struct.AVPacket* %89), !dbg !9925
  store i32 0, i32* %retval, align 4, !dbg !9926
  br label %return, !dbg !9926

return:                                           ; preds = %out75, %if.end73
  %90 = load i32, i32* %retval, align 4, !dbg !9927
  ret i32 %90, !dbg !9927
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_compare_timestamps(%struct.AVFormatContext* %s, %struct.AVPacket* %next, %struct.AVPacket* %pkt) #0 !dbg !9928 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %next.addr = alloca %struct.AVPacket*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %sc = alloca %struct.MXFStreamContext*, align 8
  %sc2 = alloca %struct.MXFStreamContext*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !9931, metadata !2529), !dbg !9932
  store %struct.AVPacket* %next, %struct.AVPacket** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %next.addr, metadata !9933, metadata !2529), !dbg !9934
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !9935, metadata !2529), !dbg !9936
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc, metadata !9937, metadata !2529), !dbg !9938
  %0 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9939
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i32 0, i32 5, !dbg !9940
  %1 = load i32, i32* %stream_index, align 4, !dbg !9940
  %idxprom = sext i32 %1 to i64, !dbg !9941
  %2 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9941
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %2, i32 0, i32 7, !dbg !9942
  %3 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !9942
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %3, i64 %idxprom, !dbg !9941
  %4 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !9941
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %4, i32 0, i32 3, !dbg !9943
  %5 = load i8*, i8** %priv_data, align 8, !dbg !9943
  %6 = bitcast i8* %5 to %struct.MXFStreamContext*, !dbg !9941
  store %struct.MXFStreamContext* %6, %struct.MXFStreamContext** %sc, align 8, !dbg !9938
  call void @llvm.dbg.declare(metadata %struct.MXFStreamContext** %sc2, metadata !9944, metadata !2529), !dbg !9945
  %7 = load %struct.AVPacket*, %struct.AVPacket** %next.addr, align 8, !dbg !9946
  %stream_index1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %7, i32 0, i32 5, !dbg !9947
  %8 = load i32, i32* %stream_index1, align 4, !dbg !9947
  %idxprom2 = sext i32 %8 to i64, !dbg !9948
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !9948
  %streams3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i32 0, i32 7, !dbg !9949
  %10 = load %struct.AVStream**, %struct.AVStream*** %streams3, align 8, !dbg !9949
  %arrayidx4 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %10, i64 %idxprom2, !dbg !9948
  %11 = load %struct.AVStream*, %struct.AVStream** %arrayidx4, align 8, !dbg !9948
  %priv_data5 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i32 0, i32 3, !dbg !9950
  %12 = load i8*, i8** %priv_data5, align 8, !dbg !9950
  %13 = bitcast i8* %12 to %struct.MXFStreamContext*, !dbg !9948
  store %struct.MXFStreamContext* %13, %struct.MXFStreamContext** %sc2, align 8, !dbg !9945
  %14 = load %struct.AVPacket*, %struct.AVPacket** %next.addr, align 8, !dbg !9951
  %dts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %14, i32 0, i32 2, !dbg !9952
  %15 = load i64, i64* %dts, align 8, !dbg !9952
  %16 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9953
  %dts6 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %16, i32 0, i32 2, !dbg !9954
  %17 = load i64, i64* %dts6, align 8, !dbg !9954
  %cmp = icmp sgt i64 %15, %17, !dbg !9955
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9956

lor.rhs:                                          ; preds = %entry
  %18 = load %struct.AVPacket*, %struct.AVPacket** %next.addr, align 8, !dbg !9957
  %dts7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %18, i32 0, i32 2, !dbg !9958
  %19 = load i64, i64* %dts7, align 8, !dbg !9958
  %20 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !9959
  %dts8 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %20, i32 0, i32 2, !dbg !9960
  %21 = load i64, i64* %dts8, align 8, !dbg !9960
  %cmp9 = icmp eq i64 %19, %21, !dbg !9961
  br i1 %cmp9, label %land.rhs, label %land.end, !dbg !9962

land.rhs:                                         ; preds = %lor.rhs
  %22 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc, align 8, !dbg !9963
  %order = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %22, i32 0, i32 4, !dbg !9965
  %23 = load i32, i32* %order, align 8, !dbg !9965
  %24 = load %struct.MXFStreamContext*, %struct.MXFStreamContext** %sc2, align 8, !dbg !9966
  %order10 = getelementptr inbounds %struct.MXFStreamContext, %struct.MXFStreamContext* %24, i32 0, i32 4, !dbg !9967
  %25 = load i32, i32* %order10, align 8, !dbg !9967
  %cmp11 = icmp slt i32 %23, %25, !dbg !9968
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %26 = phi i1 [ false, %lor.rhs ], [ %cmp11, %land.rhs ]
  br label %lor.end, !dbg !9969

lor.end:                                          ; preds = %land.end, %entry
  %27 = phi i1 [ true, %entry ], [ %26, %land.end ]
  %lor.ext = zext i1 %27 to i32, !dbg !9970
  ret i32 %lor.ext, !dbg !9972
}

declare void @av_packet_unref(%struct.AVPacket*) #1

declare void @av_init_packet(%struct.AVPacket*) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2519, !2520}
!llvm.ident = !{!2521}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1007, globals: !1101)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a/[inter]libavformat--mxfenc.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!2 = !{!3, !463, !485, !506, !536, !545, !555, !755, !772, !778, !788, !812, !818, !836, !860, !879, !889, !897, !909, !918, !927, !933, !938, !972, !995, !1001}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !4, line: 215, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462}
!6 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!7 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!8 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!9 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!10 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!11 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!12 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!13 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!14 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!15 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!16 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!17 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!19 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!20 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!21 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!22 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!23 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!24 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!25 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!26 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!27 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!28 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!29 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!30 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!31 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!32 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!33 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!34 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!35 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!36 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!37 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!38 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!39 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!40 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!41 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!43 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!44 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!45 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!46 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!47 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!48 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!49 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!50 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!53 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!54 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!55 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!56 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!57 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!58 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!59 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!60 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!61 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!62 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!63 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!64 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!65 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!66 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!67 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!68 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!69 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!70 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!71 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!72 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!73 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!74 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!75 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!76 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!77 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!78 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!79 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!80 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!81 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!82 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!83 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!84 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!85 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!86 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!87 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!88 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!89 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!90 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!91 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!93 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!94 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!95 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!97 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!98 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!99 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!100 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!101 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!102 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!103 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!104 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!105 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!106 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!107 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!108 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!109 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!110 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!112 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!113 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!114 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!115 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!116 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!117 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!118 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!119 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!120 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!121 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!122 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!123 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!125 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!126 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!127 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!128 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!129 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!130 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!131 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!133 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!134 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!136 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!137 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!138 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!139 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!140 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!141 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!142 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!143 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!144 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!147 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!148 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!149 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!150 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!151 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!152 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!153 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!154 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!155 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!156 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!157 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!158 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!159 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!160 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!161 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!163 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!164 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!165 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!166 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!167 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!168 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!169 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!170 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!171 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!172 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!173 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!174 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!175 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!176 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!177 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!178 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!179 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!180 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!181 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!182 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!183 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!184 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!185 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!186 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!187 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!188 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!189 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!190 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!191 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!192 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!193 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!194 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!195 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!197 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!198 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!199 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!200 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!201 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!202 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!203 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!204 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!205 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!206 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!207 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!209 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!210 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!211 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!212 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!213 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!214 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!215 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!216 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!217 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!218 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!219 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!220 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!221 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!222 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!223 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!224 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!225 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!226 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!227 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!228 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!229 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!230 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!231 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!232 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!233 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!235 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!236 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!237 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!238 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!239 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!240 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!241 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!242 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!243 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!244 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!245 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!247 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!248 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!249 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!250 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!251 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!269 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!279 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!280 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!281 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!282 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!283 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!284 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!285 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!286 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!287 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!288 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!320 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!321 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!322 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!323 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!325 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!326 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!327 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!328 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!329 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!330 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!331 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!332 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!333 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!334 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!335 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!336 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!337 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!338 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!339 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!341 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!342 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!343 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!344 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!345 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!348 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!349 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!350 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!351 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!352 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!353 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!354 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!355 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!356 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!357 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!358 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!359 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!361 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!362 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!363 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!364 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!365 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!366 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!367 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!370 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!371 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!372 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!373 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!374 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!376 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!377 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!378 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!379 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!381 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!382 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!383 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!384 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!385 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!386 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!387 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!389 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!390 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!391 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!392 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!393 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!394 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!395 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!396 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!397 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!398 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!399 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!400 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!403 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!404 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!405 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!407 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!408 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!409 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!410 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!411 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!412 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!413 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!415 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!416 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!417 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!418 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!419 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!420 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!422 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!424 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!425 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!426 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!427 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!428 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!429 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!430 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!431 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!432 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!434 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!435 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!436 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!437 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!438 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!439 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!441 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!442 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!444 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!445 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!446 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!447 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!448 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!449 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!450 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!451 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!452 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!453 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!454 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!455 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!456 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!457 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!458 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!459 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!460 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!461 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!462 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!463 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !464, line: 221, size: 32, align: 32, elements: !465)
!464 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!465 = !{!466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484}
!466 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!467 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!468 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!469 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!470 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!471 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!472 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!473 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!474 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!475 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!476 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!477 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!478 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!479 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!480 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!481 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!482 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!483 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!484 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!485 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !486, line: 29, size: 32, align: 32, elements: !487)
!486 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!487 = !{!488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505}
!488 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!489 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!490 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!491 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!492 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!493 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!494 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!495 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!496 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!497 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!498 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!499 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!500 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!501 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!502 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!503 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!504 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!505 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!506 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !4, line: 1175, size: 32, align: 32, elements: !507)
!507 = !{!508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535}
!508 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!509 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!510 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!511 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!512 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!513 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!514 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!515 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!516 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!517 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!518 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!519 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!520 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!521 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!522 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!523 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!524 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!525 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!526 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!527 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!528 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!529 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!530 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!531 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!532 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!533 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!534 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!535 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!536 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVIODataMarkerType", file: !537, line: 111, size: 32, align: 32, elements: !538)
!537 = !DIFile(filename: "libavformat/avio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!538 = !{!539, !540, !541, !542, !543, !544}
!539 = !DIEnumerator(name: "AVIO_DATA_MARKER_HEADER", value: 0)
!540 = !DIEnumerator(name: "AVIO_DATA_MARKER_SYNC_POINT", value: 1)
!541 = !DIEnumerator(name: "AVIO_DATA_MARKER_BOUNDARY_POINT", value: 2)
!542 = !DIEnumerator(name: "AVIO_DATA_MARKER_UNKNOWN", value: 3)
!543 = !DIEnumerator(name: "AVIO_DATA_MARKER_TRAILER", value: 4)
!544 = !DIEnumerator(name: "AVIO_DATA_MARKER_FLUSH_POINT", value: 5)
!545 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !546, line: 199, size: 32, align: 32, elements: !547)
!546 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!547 = !{!548, !549, !550, !551, !552, !553, !554}
!548 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!549 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!550 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!551 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!552 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!553 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!554 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!555 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !556, line: 64, size: 32, align: 32, elements: !557)
!556 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!557 = !{!558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754}
!558 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!559 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!560 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!561 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!562 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!567 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!568 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!569 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!570 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!574 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!575 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!576 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!577 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!578 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!579 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!580 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!581 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!582 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!583 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!584 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!585 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!586 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!587 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!588 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!589 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!593 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!594 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!595 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!596 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!597 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!598 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!599 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!600 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!601 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!602 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!603 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!604 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!605 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!606 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!613 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!614 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!615 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!616 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!617 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!618 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!619 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!621 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!623 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!624 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!625 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!635 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!636 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!637 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!642 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!643 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!644 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!645 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!646 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!647 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!648 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!649 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!650 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!651 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!652 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!653 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!654 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!655 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!660 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!661 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!662 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!663 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!664 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!665 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!666 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!667 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!668 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!669 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!670 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!671 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!672 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!673 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!674 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!675 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!676 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!679 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!680 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!681 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!682 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!683 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!684 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!685 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!686 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!687 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!688 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!693 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!694 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!695 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!696 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!697 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!698 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!699 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!700 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!701 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!702 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!703 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!704 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!705 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!706 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!707 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!708 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!709 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!710 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!711 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!712 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!713 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!714 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!715 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!716 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!717 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!718 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!719 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!720 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!721 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!722 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!723 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!724 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!725 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!726 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!727 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!728 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!729 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!730 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!731 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!732 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!733 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!734 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!735 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!736 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!737 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!738 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!739 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!740 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!741 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!742 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!743 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!744 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!745 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!746 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!747 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!748 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!749 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!750 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!751 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!752 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!753 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!754 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!755 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !756, line: 58, size: 32, align: 32, elements: !757)
!756 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!757 = !{!758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771}
!758 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!759 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!760 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!761 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!762 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!763 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!764 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!765 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!766 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!767 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!768 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!769 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!770 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!771 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!772 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !4, line: 3865, size: 32, align: 32, elements: !773)
!773 = !{!774, !775, !776, !777}
!774 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!775 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!776 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!777 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!778 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !546, line: 272, size: 32, align: 32, elements: !779)
!779 = !{!780, !781, !782, !783, !784, !785, !786, !787}
!780 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!781 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!782 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!783 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!784 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!785 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!786 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!787 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!788 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !789, line: 48, size: 32, align: 32, elements: !790)
!789 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!790 = !{!791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!791 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!792 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!793 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!794 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!795 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!796 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!797 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!798 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!799 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!800 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!801 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!802 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!803 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!804 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!805 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!806 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!807 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!808 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!809 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!810 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!811 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !556, line: 516, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817}
!814 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!816 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!817 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!818 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !556, line: 440, size: 32, align: 32, elements: !819)
!819 = !{!820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835}
!820 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!821 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!822 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!823 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!824 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!825 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!826 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!827 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!828 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!829 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!830 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!831 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!832 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!833 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!834 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!835 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!836 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !556, line: 464, size: 32, align: 32, elements: !837)
!837 = !{!838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859}
!838 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!839 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!840 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!841 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!842 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!843 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!844 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!845 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!846 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!847 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!848 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!849 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!850 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!851 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!852 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!853 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!854 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!855 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!856 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!857 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!858 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!859 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !556, line: 493, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878}
!862 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!863 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!864 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!865 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!866 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!867 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!868 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!869 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!870 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!871 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!872 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!873 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!874 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!875 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!876 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!877 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!878 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!879 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !556, line: 538, size: 32, align: 32, elements: !880)
!880 = !{!881, !882, !883, !884, !885, !886, !887, !888}
!881 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!882 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!883 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!884 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!885 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!886 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!887 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!888 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!889 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !4, line: 1534, size: 32, align: 32, elements: !890)
!890 = !{!891, !892, !893, !894, !895, !896}
!891 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!892 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!893 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!894 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!895 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!896 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !4, line: 810, size: 32, align: 32, elements: !898)
!898 = !{!899, !900, !901, !902, !903, !904, !905, !906, !907, !908}
!899 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!900 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!901 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!902 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!903 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!904 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!905 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!906 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!907 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!908 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !4, line: 798, size: 32, align: 32, elements: !910)
!910 = !{!911, !912, !913, !914, !915, !916, !917}
!911 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!912 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!913 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!914 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!915 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!916 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!917 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!918 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVStreamParseType", file: !919, line: 782, size: 32, align: 32, elements: !920)
!919 = !DIFile(filename: "libavformat/avformat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!920 = !{!921, !922, !923, !924, !925, !926}
!921 = !DIEnumerator(name: "AVSTREAM_PARSE_NONE", value: 0)
!922 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL", value: 1)
!923 = !DIEnumerator(name: "AVSTREAM_PARSE_HEADERS", value: 2)
!924 = !DIEnumerator(name: "AVSTREAM_PARSE_TIMESTAMPS", value: 3)
!925 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_ONCE", value: 4)
!926 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_RAW", value: 5)
!927 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureStructure", file: !4, line: 5085, size: 32, align: 32, elements: !928)
!928 = !{!929, !930, !931, !932}
!929 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_UNKNOWN", value: 0)
!930 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_TOP_FIELD", value: 1)
!931 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_BOTTOM_FIELD", value: 2)
!932 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_FRAME", value: 3)
!933 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDurationEstimationMethod", file: !919, line: 1315, size: 32, align: 32, elements: !934)
!934 = !{!935, !936, !937}
!935 = !DIEnumerator(name: "AVFMT_DURATION_FROM_PTS", value: 0)
!936 = !DIEnumerator(name: "AVFMT_DURATION_FROM_STREAM", value: 1)
!937 = !DIEnumerator(name: "AVFMT_DURATION_FROM_BITRATE", value: 2)
!938 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ULIndex", file: !939, line: 118, size: 32, align: 32, elements: !940)
!939 = !DIFile(filename: "libavformat/mxfenc.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!940 = !{!941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971}
!941 = !DIEnumerator(name: "INDEX_MPEG2", value: 0)
!942 = !DIEnumerator(name: "INDEX_AES3", value: 1)
!943 = !DIEnumerator(name: "INDEX_WAV", value: 2)
!944 = !DIEnumerator(name: "INDEX_D10_625_50_50_VIDEO", value: 3)
!945 = !DIEnumerator(name: "INDEX_D10_625_50_50_AUDIO", value: 4)
!946 = !DIEnumerator(name: "INDEX_D10_525_60_50_VIDEO", value: 5)
!947 = !DIEnumerator(name: "INDEX_D10_525_60_50_AUDIO", value: 6)
!948 = !DIEnumerator(name: "INDEX_D10_625_50_40_VIDEO", value: 7)
!949 = !DIEnumerator(name: "INDEX_D10_625_50_40_AUDIO", value: 8)
!950 = !DIEnumerator(name: "INDEX_D10_525_60_40_VIDEO", value: 9)
!951 = !DIEnumerator(name: "INDEX_D10_525_60_40_AUDIO", value: 10)
!952 = !DIEnumerator(name: "INDEX_D10_625_50_30_VIDEO", value: 11)
!953 = !DIEnumerator(name: "INDEX_D10_625_50_30_AUDIO", value: 12)
!954 = !DIEnumerator(name: "INDEX_D10_525_60_30_VIDEO", value: 13)
!955 = !DIEnumerator(name: "INDEX_D10_525_60_30_AUDIO", value: 14)
!956 = !DIEnumerator(name: "INDEX_DV", value: 15)
!957 = !DIEnumerator(name: "INDEX_DV25_525_60", value: 16)
!958 = !DIEnumerator(name: "INDEX_DV25_625_50", value: 17)
!959 = !DIEnumerator(name: "INDEX_DV25_525_60_IEC", value: 18)
!960 = !DIEnumerator(name: "INDEX_DV25_625_50_IEC", value: 19)
!961 = !DIEnumerator(name: "INDEX_DV50_525_60", value: 20)
!962 = !DIEnumerator(name: "INDEX_DV50_625_50", value: 21)
!963 = !DIEnumerator(name: "INDEX_DV100_1080_60", value: 22)
!964 = !DIEnumerator(name: "INDEX_DV100_1080_50", value: 23)
!965 = !DIEnumerator(name: "INDEX_DV100_720_60", value: 24)
!966 = !DIEnumerator(name: "INDEX_DV100_720_50", value: 25)
!967 = !DIEnumerator(name: "INDEX_DNXHD", value: 26)
!968 = !DIEnumerator(name: "INDEX_JPEG2000", value: 27)
!969 = !DIEnumerator(name: "INDEX_H264", value: 28)
!970 = !DIEnumerator(name: "INDEX_S436M", value: 29)
!971 = !DIEnumerator(name: "INDEX_PRORES", value: 30)
!972 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MXFMetadataSetType", file: !973, line: 30, size: 32, align: 32, elements: !974)
!973 = !DIFile(filename: "libavformat/mxf.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!974 = !{!975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994}
!975 = !DIEnumerator(name: "AnyType", value: 0)
!976 = !DIEnumerator(name: "MaterialPackage", value: 1)
!977 = !DIEnumerator(name: "SourcePackage", value: 2)
!978 = !DIEnumerator(name: "SourceClip", value: 3)
!979 = !DIEnumerator(name: "TimecodeComponent", value: 4)
!980 = !DIEnumerator(name: "PulldownComponent", value: 5)
!981 = !DIEnumerator(name: "Sequence", value: 6)
!982 = !DIEnumerator(name: "MultipleDescriptor", value: 7)
!983 = !DIEnumerator(name: "Descriptor", value: 8)
!984 = !DIEnumerator(name: "Track", value: 9)
!985 = !DIEnumerator(name: "CryptoContext", value: 10)
!986 = !DIEnumerator(name: "Preface", value: 11)
!987 = !DIEnumerator(name: "Identification", value: 12)
!988 = !DIEnumerator(name: "ContentStorage", value: 13)
!989 = !DIEnumerator(name: "SubDescriptor", value: 14)
!990 = !DIEnumerator(name: "IndexTableSegment", value: 15)
!991 = !DIEnumerator(name: "EssenceContainerData", value: 16)
!992 = !DIEnumerator(name: "EssenceGroup", value: 17)
!993 = !DIEnumerator(name: "TaggedValue", value: 18)
!994 = !DIEnumerator(name: "TapeDescriptor", value: 19)
!995 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !973, line: 68, size: 32, align: 32, elements: !996)
!996 = !{!997, !998, !999, !1000}
!997 = !DIEnumerator(name: "NormalWrap", value: 0)
!998 = !DIEnumerator(name: "D10D11Wrap", value: 1)
!999 = !DIEnumerator(name: "RawAWrap", value: 2)
!1000 = !DIEnumerator(name: "RawVWrap", value: 3)
!1001 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVTimecodeFlag", file: !1002, line: 35, size: 32, align: 32, elements: !1003)
!1002 = !DIFile(filename: "./libavutil/timecode.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1003 = !{!1004, !1005, !1006}
!1004 = !DIEnumerator(name: "AV_TIMECODE_FLAG_DROPFRAME", value: 1)
!1005 = !DIEnumerator(name: "AV_TIMECODE_FLAG_24HOURSMAX", value: 2)
!1006 = !DIEnumerator(name: "AV_TIMECODE_FLAG_ALLOWNEGATIVE", value: 4)
!1007 = !{!1008, !1011, !1042, !1035, !1081, !1087, !1039, !1091, !1092, !1094}
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1009, line: 40, baseType: !1010)
!1009 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1010 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64, align: 64)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFStreamContext", file: !939, line: 102, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFStreamContext", file: !939, line: 79, size: 1344, align: 64, elements: !1014)
!1014 = !{!1015, !1054, !1059, !1060, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "aic", scope: !1013, file: !939, line: 80, baseType: !1016, size: 448, align: 64)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioInterleaveContext", file: !1017, line: 37, baseType: !1018)
!1017 = !DIFile(filename: "libavformat/audiointerleave.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioInterleaveContext", file: !1017, line: 29, size: 448, align: 64, elements: !1019)
!1019 = !{!1020, !1037, !1038, !1041, !1043, !1046, !1047}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "fifo", scope: !1018, file: !1017, line: 30, baseType: !1021, size: 64, align: 64)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64, align: 64)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFifoBuffer", file: !1023, line: 35, baseType: !1024)
!1023 = !DIFile(filename: "./libavutil/fifo.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFifoBuffer", file: !1023, line: 31, size: 320, align: 64, elements: !1025)
!1025 = !{!1026, !1030, !1031, !1032, !1033, !1036}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1024, file: !1023, line: 32, baseType: !1027, size: 64, align: 64)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64, align: 64)
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1009, line: 48, baseType: !1029)
!1029 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "rptr", scope: !1024, file: !1023, line: 33, baseType: !1027, size: 64, align: 64, offset: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "wptr", scope: !1024, file: !1023, line: 33, baseType: !1027, size: 64, align: 64, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1024, file: !1023, line: 33, baseType: !1027, size: 64, align: 64, offset: 192)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "rndx", scope: !1024, file: !1023, line: 34, baseType: !1034, size: 32, align: 32, offset: 256)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1009, line: 51, baseType: !1035)
!1035 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "wndx", scope: !1024, file: !1023, line: 34, baseType: !1034, size: 32, align: 32, offset: 288)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_size", scope: !1018, file: !1017, line: 31, baseType: !1035, size: 32, align: 32, offset: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1018, file: !1017, line: 32, baseType: !1039, size: 64, align: 64, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1009, line: 55, baseType: !1040)
!1040 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "sample_size", scope: !1018, file: !1017, line: 33, baseType: !1042, size: 32, align: 32, offset: 192)
!1042 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "samples_per_frame", scope: !1018, file: !1017, line: 34, baseType: !1044, size: 64, align: 64, offset: 256)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64, align: 64)
!1045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1018, file: !1017, line: 35, baseType: !1044, size: 64, align: 64, offset: 320)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1018, file: !1017, line: 36, baseType: !1048, size: 64, align: 32, offset: 384)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1049, line: 61, baseType: !1050)
!1049 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1049, line: 58, size: 64, align: 32, elements: !1051)
!1051 = !{!1052, !1053}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1050, file: !1049, line: 59, baseType: !1042, size: 32, align: 32)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1050, file: !1049, line: 60, baseType: !1042, size: 32, align: 32, offset: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "track_essence_element_key", scope: !1013, file: !939, line: 81, baseType: !1055, size: 128, align: 8, offset: 448)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "UID", file: !973, line: 28, baseType: !1056)
!1056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 128, align: 8, elements: !1057)
!1057 = !{!1058}
!1058 = !DISubrange(count: 16)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1013, file: !939, line: 82, baseType: !1042, size: 32, align: 32, offset: 576)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ul", scope: !1013, file: !939, line: 83, baseType: !1061, size: 64, align: 64, offset: 640)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64, align: 64)
!1062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1055)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !1013, file: !939, line: 84, baseType: !1042, size: 32, align: 32, offset: 704)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced", scope: !1013, file: !939, line: 85, baseType: !1042, size: 32, align: 32, offset: 736)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "field_dominance", scope: !1013, file: !939, line: 86, baseType: !1042, size: 32, align: 32, offset: 768)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "component_depth", scope: !1013, file: !939, line: 87, baseType: !1042, size: 32, align: 32, offset: 800)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "color_siting", scope: !1013, file: !939, line: 88, baseType: !1042, size: 32, align: 32, offset: 832)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "signal_standard", scope: !1013, file: !939, line: 89, baseType: !1042, size: 32, align: 32, offset: 864)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "h_chroma_sub_sample", scope: !1013, file: !939, line: 90, baseType: !1042, size: 32, align: 32, offset: 896)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "v_chroma_sub_sample", scope: !1013, file: !939, line: 91, baseType: !1042, size: 32, align: 32, offset: 928)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_reordering", scope: !1013, file: !939, line: 92, baseType: !1042, size: 32, align: 32, offset: 960)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "aspect_ratio", scope: !1013, file: !939, line: 93, baseType: !1048, size: 64, align: 32, offset: 992)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "closed_gop", scope: !1013, file: !939, line: 94, baseType: !1042, size: 32, align: 32, offset: 1056)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "video_bit_rate", scope: !1013, file: !939, line: 95, baseType: !1042, size: 32, align: 32, offset: 1088)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1013, file: !939, line: 96, baseType: !1042, size: 32, align: 32, offset: 1120)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1013, file: !939, line: 97, baseType: !1042, size: 32, align: 32, offset: 1152)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "seq_closed_gop", scope: !1013, file: !939, line: 98, baseType: !1042, size: 32, align: 32, offset: 1184)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "max_gop", scope: !1013, file: !939, line: 99, baseType: !1042, size: 32, align: 32, offset: 1216)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "b_picture_count", scope: !1013, file: !939, line: 100, baseType: !1042, size: 32, align: 32, offset: 1248)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "low_delay", scope: !1013, file: !939, line: 101, baseType: !1042, size: 32, align: 32, offset: 1280)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64, align: 64)
!1082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1083)
!1083 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1084, line: 221, size: 32, align: 8, elements: !1085)
!1084 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1085 = !{!1086}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1083, file: !1084, line: 221, baseType: !1034, size: 32, align: 32)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64, align: 64)
!1088 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_64", file: !1084, line: 220, size: 64, align: 8, elements: !1089)
!1089 = !{!1090}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1088, file: !1084, line: 220, baseType: !1039, size: 64, align: 64)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64, align: 64)
!1093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1028)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64, align: 64)
!1095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !1084, line: 222, size: 16, align: 8, elements: !1097)
!1097 = !{!1098}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1096, file: !1084, line: 222, baseType: !1099, size: 16, align: 16)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1009, line: 49, baseType: !1100)
!1100 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1101 = !{!1102, !2386, !2387, !2388, !2389, !2395, !2404, !2421, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2433, !2442, !2451, !2464, !2476, !2478, !2479, !2480, !2481, !2482, !2492, !2496, !2500, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2517, !2518}
!1102 = distinct !DIGlobalVariable(name: "ff_mxf_muxer", scope: !0, file: !939, line: 3108, type: !1103, isLocal: false, isDefinition: true, variable: %struct.AVOutputFormat* @ff_mxf_muxer)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOutputFormat", file: !919, line: 624, baseType: !1104)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOutputFormat", file: !919, line: 497, size: 1600, align: 64, elements: !1105)
!1105 = !{!1106, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1127, !1200, !1202, !1203, !2351, !2352, !2353, !2357, !2361, !2365, !2366, !2371, !2372, !2373, !2374, !2375, !2376, !2380}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1104, file: !919, line: 498, baseType: !1107, size: 64, align: 64)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64, align: 64)
!1108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1109)
!1109 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1104, file: !919, line: 504, baseType: !1107, size: 64, align: 64, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1104, file: !919, line: 505, baseType: !1107, size: 64, align: 64, offset: 128)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !1104, file: !919, line: 506, baseType: !1107, size: 64, align: 64, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1104, file: !919, line: 508, baseType: !3, size: 32, align: 32, offset: 256)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !1104, file: !919, line: 509, baseType: !3, size: 32, align: 32, offset: 288)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !1104, file: !919, line: 510, baseType: !3, size: 32, align: 32, offset: 320)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1104, file: !919, line: 517, baseType: !1042, size: 32, align: 32, offset: 352)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1104, file: !919, line: 523, baseType: !1118, size: 64, align: 64, offset: 384)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64, align: 64)
!1119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1120)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64, align: 64)
!1121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1122)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecTag", file: !1123, line: 44, size: 64, align: 32, elements: !1124)
!1123 = !DIFile(filename: "libavformat/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1124 = !{!1125, !1126}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1122, file: !1123, line: 45, baseType: !3, size: 32, align: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1122, file: !1123, line: 46, baseType: !1035, size: 32, align: 32, offset: 32)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1104, file: !919, line: 526, baseType: !1128, size: 64, align: 64, offset: 448)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64, align: 64)
!1129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1130)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !486, line: 143, baseType: !1131)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !486, line: 67, size: 640, align: 64, elements: !1132)
!1132 = !{!1133, !1134, !1138, !1159, !1160, !1161, !1162, !1166, !1172, !1174, !1178}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1131, file: !486, line: 72, baseType: !1107, size: 64, align: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1131, file: !486, line: 78, baseType: !1135, size: 64, align: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64, align: 64)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!1107, !1091}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1131, file: !486, line: 85, baseType: !1139, size: 64, align: 64, offset: 128)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1141)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !464, line: 246, size: 512, align: 64, elements: !1142)
!1142 = !{!1143, !1144, !1145, !1146, !1147, !1155, !1156, !1157, !1158}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1141, file: !464, line: 247, baseType: !1107, size: 64, align: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1141, file: !464, line: 253, baseType: !1107, size: 64, align: 64, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1141, file: !464, line: 259, baseType: !1042, size: 32, align: 32, offset: 128)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1141, file: !464, line: 260, baseType: !463, size: 32, align: 32, offset: 160)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1141, file: !464, line: 271, baseType: !1148, size: 64, align: 64, offset: 192)
!1148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1141, file: !464, line: 265, size: 64, align: 64, elements: !1149)
!1149 = !{!1150, !1151, !1153, !1154}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1148, file: !464, line: 266, baseType: !1008, size: 64, align: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1148, file: !464, line: 267, baseType: !1152, size: 64, align: 64)
!1152 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1148, file: !464, line: 268, baseType: !1107, size: 64, align: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1148, file: !464, line: 270, baseType: !1048, size: 64, align: 32)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1141, file: !464, line: 272, baseType: !1152, size: 64, align: 64, offset: 256)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1141, file: !464, line: 273, baseType: !1152, size: 64, align: 64, offset: 320)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1141, file: !464, line: 275, baseType: !1042, size: 32, align: 32, offset: 384)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1141, file: !464, line: 300, baseType: !1107, size: 64, align: 64, offset: 448)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1131, file: !486, line: 93, baseType: !1042, size: 32, align: 32, offset: 192)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1131, file: !486, line: 99, baseType: !1042, size: 32, align: 32, offset: 224)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1131, file: !486, line: 108, baseType: !1042, size: 32, align: 32, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1131, file: !486, line: 113, baseType: !1163, size: 64, align: 64, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64, align: 64)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!1091, !1091, !1091}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1131, file: !486, line: 123, baseType: !1167, size: 64, align: 64, offset: 384)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64, align: 64)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!1170, !1170}
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64, align: 64)
!1171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1131)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1131, file: !486, line: 130, baseType: !1173, size: 32, align: 32, offset: 448)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !486, line: 48, baseType: !485)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1131, file: !486, line: 136, baseType: !1175, size: 64, align: 64, offset: 512)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64, align: 64)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!1173, !1091}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1131, file: !486, line: 142, baseType: !1179, size: 64, align: 64, offset: 576)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64, align: 64)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{!1042, !1182, !1091, !1107, !1042}
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64, align: 64)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64, align: 64)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !464, line: 329, size: 128, align: 64, elements: !1185)
!1185 = !{!1186, !1198, !1199}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1184, file: !464, line: 360, baseType: !1187, size: 64, align: 64)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64, align: 64)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64, align: 64)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !464, line: 324, baseType: !1190)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !464, line: 306, size: 384, align: 64, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195, !1196, !1197}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1190, file: !464, line: 307, baseType: !1107, size: 64, align: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1190, file: !464, line: 313, baseType: !1152, size: 64, align: 64, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1190, file: !464, line: 313, baseType: !1152, size: 64, align: 64, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1190, file: !464, line: 318, baseType: !1152, size: 64, align: 64, offset: 192)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1190, file: !464, line: 318, baseType: !1152, size: 64, align: 64, offset: 256)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1190, file: !464, line: 323, baseType: !1042, size: 32, align: 32, offset: 320)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1184, file: !464, line: 364, baseType: !1042, size: 32, align: 32, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1184, file: !464, line: 368, baseType: !1042, size: 32, align: 32, offset: 96)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1104, file: !919, line: 535, baseType: !1201, size: 64, align: 64, offset: 512)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64, align: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1104, file: !919, line: 539, baseType: !1042, size: 32, align: 32, offset: 576)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !1104, file: !919, line: 541, baseType: !1204, size: 64, align: 64, offset: 640)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64, align: 64)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!1042, !1207}
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64, align: 64)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatContext", file: !919, line: 1337, size: 11968, align: 64, elements: !1209)
!1209 = !{!1210, !1211, !1306, !1307, !1308, !1371, !1372, !1373, !2205, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2259, !2260, !2261, !2262, !2263, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2314, !2315, !2318, !2319, !2320, !2321, !2322, !2323, !2328, !2329, !2330, !2331, !2339, !2340, !2344, !2348, !2349, !2350}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1208, file: !919, line: 1342, baseType: !1128, size: 64, align: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "iformat", scope: !1208, file: !919, line: 1349, baseType: !1212, size: 64, align: 64, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64, align: 64)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVInputFormat", file: !919, line: 633, size: 1344, align: 64, elements: !1214)
!1214 = !{!1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1238, !1239, !1277, !1278, !1282, !1287, !1288, !1289, !1293, !1299, !1305}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1213, file: !919, line: 638, baseType: !1107, size: 64, align: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1213, file: !919, line: 645, baseType: !1107, size: 64, align: 64, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1213, file: !919, line: 652, baseType: !1042, size: 32, align: 32, offset: 128)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !1213, file: !919, line: 659, baseType: !1107, size: 64, align: 64, offset: 192)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1213, file: !919, line: 661, baseType: !1118, size: 64, align: 64, offset: 256)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1213, file: !919, line: 663, baseType: !1128, size: 64, align: 64, offset: 320)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1213, file: !919, line: 670, baseType: !1107, size: 64, align: 64, offset: 384)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1213, file: !919, line: 679, baseType: !1212, size: 64, align: 64, offset: 448)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "raw_codec_id", scope: !1213, file: !919, line: 684, baseType: !1042, size: 32, align: 32, offset: 512)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1213, file: !919, line: 689, baseType: !1042, size: 32, align: 32, offset: 544)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "read_probe", scope: !1213, file: !919, line: 696, baseType: !1226, size: 64, align: 64, offset: 576)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64, align: 64)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!1042, !1229}
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64, align: 64)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProbeData", file: !919, line: 453, baseType: !1231)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProbeData", file: !919, line: 448, size: 256, align: 64, elements: !1232)
!1232 = !{!1233, !1234, !1236, !1237}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1231, file: !919, line: 449, baseType: !1107, size: 64, align: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1231, file: !919, line: 450, baseType: !1235, size: 64, align: 64, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64, align: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !1231, file: !919, line: 451, baseType: !1042, size: 32, align: 32, offset: 128)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1231, file: !919, line: 452, baseType: !1107, size: 64, align: 64, offset: 192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !1213, file: !919, line: 703, baseType: !1204, size: 64, align: 64, offset: 640)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !1213, file: !919, line: 714, baseType: !1240, size: 64, align: 64, offset: 704)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64, align: 64)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!1042, !1207, !1243}
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !4, line: 1499, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !4, line: 1445, size: 704, align: 64, elements: !1246)
!1246 = !{!1247, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1273, !1274, !1275, !1276}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1245, file: !4, line: 1451, baseType: !1248, size: 64, align: 64)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64, align: 64)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1250, line: 94, baseType: !1251)
!1250 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1250, line: 81, size: 192, align: 64, elements: !1252)
!1252 = !{!1253, !1257, !1258}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1251, file: !1250, line: 82, baseType: !1254, size: 64, align: 64)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64, align: 64)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1250, line: 73, baseType: !1256)
!1256 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1250, line: 73, flags: DIFlagFwdDecl)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1251, file: !1250, line: 89, baseType: !1027, size: 64, align: 64, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1251, file: !1250, line: 93, baseType: !1042, size: 32, align: 32, offset: 128)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1245, file: !4, line: 1461, baseType: !1008, size: 64, align: 64, offset: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1245, file: !4, line: 1467, baseType: !1008, size: 64, align: 64, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1245, file: !4, line: 1468, baseType: !1027, size: 64, align: 64, offset: 192)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1245, file: !4, line: 1469, baseType: !1042, size: 32, align: 32, offset: 256)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1245, file: !4, line: 1470, baseType: !1042, size: 32, align: 32, offset: 288)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1245, file: !4, line: 1474, baseType: !1042, size: 32, align: 32, offset: 320)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1245, file: !4, line: 1479, baseType: !1266, size: 64, align: 64, offset: 384)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64, align: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !4, line: 1415, baseType: !1268)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !4, line: 1411, size: 128, align: 64, elements: !1269)
!1269 = !{!1270, !1271, !1272}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1268, file: !4, line: 1412, baseType: !1027, size: 64, align: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1268, file: !4, line: 1413, baseType: !1042, size: 32, align: 32, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1268, file: !4, line: 1414, baseType: !506, size: 32, align: 32, offset: 96)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1245, file: !4, line: 1480, baseType: !1042, size: 32, align: 32, offset: 448)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1245, file: !4, line: 1486, baseType: !1008, size: 64, align: 64, offset: 512)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1245, file: !4, line: 1488, baseType: !1008, size: 64, align: 64, offset: 576)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1245, file: !4, line: 1497, baseType: !1008, size: 64, align: 64, offset: 640)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "read_close", scope: !1213, file: !919, line: 720, baseType: !1204, size: 64, align: 64, offset: 768)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !1213, file: !919, line: 730, baseType: !1279, size: 64, align: 64, offset: 832)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64, align: 64)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!1042, !1207, !1042, !1008, !1042}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "read_timestamp", scope: !1213, file: !919, line: 737, baseType: !1283, size: 64, align: 64, offset: 896)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64, align: 64)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!1008, !1207, !1042, !1286, !1008}
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64, align: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "read_play", scope: !1213, file: !919, line: 744, baseType: !1204, size: 64, align: 64, offset: 960)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !1213, file: !919, line: 750, baseType: !1204, size: 64, align: 64, offset: 1024)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek2", scope: !1213, file: !919, line: 758, baseType: !1290, size: 64, align: 64, offset: 1088)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64, align: 64)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!1042, !1207, !1042, !1008, !1008, !1008, !1042}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !1213, file: !919, line: 764, baseType: !1294, size: 64, align: 64, offset: 1152)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64, align: 64)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{!1042, !1207, !1297}
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64, align: 64)
!1298 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceInfoList", file: !919, line: 328, flags: DIFlagFwdDecl)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !1213, file: !919, line: 770, baseType: !1300, size: 64, align: 64, offset: 1216)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64, align: 64)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!1042, !1207, !1303}
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64, align: 64)
!1304 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceCapabilitiesQuery", file: !919, line: 329, flags: DIFlagFwdDecl)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !1213, file: !919, line: 776, baseType: !1300, size: 64, align: 64, offset: 1280)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "oformat", scope: !1208, file: !919, line: 1356, baseType: !1201, size: 64, align: 64, offset: 128)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1208, file: !919, line: 1365, baseType: !1091, size: 64, align: 64, offset: 192)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1208, file: !919, line: 1379, baseType: !1309, size: 64, align: 64, offset: 256)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64, align: 64)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOContext", file: !537, line: 352, baseType: !1311)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOContext", file: !537, line: 161, size: 2112, align: 64, elements: !1312)
!1312 = !{!1313, !1314, !1315, !1316, !1317, !1318, !1319, !1323, !1324, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1338, !1339, !1343, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1361, !1362, !1363, !1364, !1368, !1369, !1370}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1311, file: !537, line: 174, baseType: !1128, size: 64, align: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1311, file: !537, line: 226, baseType: !1235, size: 64, align: 64, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !1311, file: !537, line: 227, baseType: !1042, size: 32, align: 32, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1311, file: !537, line: 228, baseType: !1235, size: 64, align: 64, offset: 192)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1311, file: !537, line: 229, baseType: !1235, size: 64, align: 64, offset: 256)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1311, file: !537, line: 233, baseType: !1091, size: 64, align: 64, offset: 320)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !1311, file: !537, line: 235, baseType: !1320, size: 64, align: 64, offset: 384)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64, align: 64)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!1042, !1091, !1027, !1042}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !1311, file: !537, line: 236, baseType: !1320, size: 64, align: 64, offset: 448)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !1311, file: !537, line: 237, baseType: !1325, size: 64, align: 64, offset: 512)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64, align: 64)
!1326 = !DISubroutineType(types: !1327)
!1327 = !{!1008, !1091, !1008, !1042}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1311, file: !537, line: 238, baseType: !1008, size: 64, align: 64, offset: 576)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "eof_reached", scope: !1311, file: !537, line: 239, baseType: !1042, size: 32, align: 32, offset: 640)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "write_flag", scope: !1311, file: !537, line: 240, baseType: !1042, size: 32, align: 32, offset: 672)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "max_packet_size", scope: !1311, file: !537, line: 241, baseType: !1042, size: 32, align: 32, offset: 704)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !1311, file: !537, line: 242, baseType: !1040, size: 64, align: 64, offset: 768)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_ptr", scope: !1311, file: !537, line: 243, baseType: !1235, size: 64, align: 64, offset: 832)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "update_checksum", scope: !1311, file: !537, line: 244, baseType: !1335, size: 64, align: 64, offset: 896)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64, align: 64)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!1040, !1040, !1092, !1035}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1311, file: !537, line: 245, baseType: !1042, size: 32, align: 32, offset: 960)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !1311, file: !537, line: 249, baseType: !1340, size: 64, align: 64, offset: 1024)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64, align: 64)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!1042, !1091, !1042}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !1311, file: !537, line: 255, baseType: !1344, size: 64, align: 64, offset: 1088)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64, align: 64)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!1008, !1091, !1042, !1008, !1042}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "seekable", scope: !1311, file: !537, line: 260, baseType: !1042, size: 32, align: 32, offset: 1152)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "maxsize", scope: !1311, file: !537, line: 266, baseType: !1008, size: 64, align: 64, offset: 1216)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "direct", scope: !1311, file: !537, line: 273, baseType: !1042, size: 32, align: 32, offset: 1280)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_read", scope: !1311, file: !537, line: 279, baseType: !1008, size: 64, align: 64, offset: 1344)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "seek_count", scope: !1311, file: !537, line: 285, baseType: !1042, size: 32, align: 32, offset: 1408)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "writeout_count", scope: !1311, file: !537, line: 291, baseType: !1042, size: 32, align: 32, offset: 1440)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "orig_buffer_size", scope: !1311, file: !537, line: 298, baseType: !1042, size: 32, align: 32, offset: 1472)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_threshold", scope: !1311, file: !537, line: 304, baseType: !1042, size: 32, align: 32, offset: 1504)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !1311, file: !537, line: 309, baseType: !1107, size: 64, align: 64, offset: 1536)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !1311, file: !537, line: 314, baseType: !1107, size: 64, align: 64, offset: 1600)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "write_data_type", scope: !1311, file: !537, line: 319, baseType: !1358, size: 64, align: 64, offset: 1664)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64, align: 64)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!1042, !1091, !1027, !1042, !536, !1008}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_boundary_point", scope: !1311, file: !537, line: 326, baseType: !1042, size: 32, align: 32, offset: 1728)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "current_type", scope: !1311, file: !537, line: 331, baseType: !536, size: 32, align: 32, offset: 1760)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !1311, file: !537, line: 332, baseType: !1008, size: 64, align: 64, offset: 1792)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_get", scope: !1311, file: !537, line: 338, baseType: !1365, size: 64, align: 64, offset: 1856)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64, align: 64)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!1042, !1091}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !1311, file: !537, line: 340, baseType: !1008, size: 64, align: 64, offset: 1920)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr_max", scope: !1311, file: !537, line: 346, baseType: !1235, size: 64, align: 64, offset: 1984)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "min_packet_size", scope: !1311, file: !537, line: 351, baseType: !1042, size: 32, align: 32, offset: 2048)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_flags", scope: !1208, file: !919, line: 1386, baseType: !1042, size: 32, align: 32, offset: 320)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "nb_streams", scope: !1208, file: !919, line: 1393, baseType: !1035, size: 32, align: 32, offset: 352)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !1208, file: !919, line: 1405, baseType: !1374, size: 64, align: 64, offset: 384)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64, align: 64)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64, align: 64)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStream", file: !919, line: 1223, baseType: !1377)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStream", file: !919, line: 865, size: 6144, align: 64, elements: !1378)
!1378 = !{!1379, !1380, !1381, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2130, !2136, !2137, !2141, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2173, !2174, !2175, !2176, !2177, !2178}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1377, file: !919, line: 866, baseType: !1042, size: 32, align: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1377, file: !919, line: 872, baseType: !1042, size: 32, align: 32, offset: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1377, file: !919, line: 878, baseType: !1382, size: 64, align: 64, offset: 64)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64, align: 64)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !4, line: 3360, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !4, line: 1556, size: 8448, align: 64, elements: !1385)
!1385 = !{!1386, !1387, !1388, !1389, !1611, !1612, !1613, !1614, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1767, !1771, !1772, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1951, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1384, file: !4, line: 1561, baseType: !1128, size: 64, align: 64)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1384, file: !4, line: 1562, baseType: !1042, size: 32, align: 32, offset: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1384, file: !4, line: 1564, baseType: !545, size: 32, align: 32, offset: 96)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1384, file: !4, line: 1565, baseType: !1390, size: 64, align: 64, offset: 128)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64, align: 64)
!1391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !4, line: 3468, size: 1984, align: 64, elements: !1393)
!1393 = !{!1394, !1395, !1396, !1397, !1398, !1399, !1402, !1405, !1406, !1409, !1412, !1413, !1414, !1422, !1423, !1424, !1426, !1430, !1436, !1445, !1449, !1450, !1495, !1582, !1586, !1587, !1591, !1595, !1600, !1604, !1605, !1606}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1392, file: !4, line: 3475, baseType: !1107, size: 64, align: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1392, file: !4, line: 3480, baseType: !1107, size: 64, align: 64, offset: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1392, file: !4, line: 3481, baseType: !545, size: 32, align: 32, offset: 128)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1392, file: !4, line: 3482, baseType: !3, size: 32, align: 32, offset: 160)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1392, file: !4, line: 3487, baseType: !1042, size: 32, align: 32, offset: 192)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1392, file: !4, line: 3488, baseType: !1400, size: 64, align: 64, offset: 256)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64, align: 64)
!1401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1048)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1392, file: !4, line: 3489, baseType: !1403, size: 64, align: 64, offset: 320)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64, align: 64)
!1404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !555)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1392, file: !4, line: 3490, baseType: !1044, size: 64, align: 64, offset: 384)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1392, file: !4, line: 3491, baseType: !1407, size: 64, align: 64, offset: 448)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64, align: 64)
!1408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !755)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1392, file: !4, line: 3492, baseType: !1410, size: 64, align: 64, offset: 512)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64, align: 64)
!1411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1392, file: !4, line: 3493, baseType: !1028, size: 8, align: 8, offset: 576)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1392, file: !4, line: 3494, baseType: !1128, size: 64, align: 64, offset: 640)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1392, file: !4, line: 3495, baseType: !1415, size: 64, align: 64, offset: 704)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64, align: 64)
!1416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1417)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !4, line: 3404, baseType: !1418)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !4, line: 3401, size: 128, align: 64, elements: !1419)
!1419 = !{!1420, !1421}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1418, file: !4, line: 3402, baseType: !1042, size: 32, align: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1418, file: !4, line: 3403, baseType: !1107, size: 64, align: 64, offset: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1392, file: !4, line: 3507, baseType: !1107, size: 64, align: 64, offset: 768)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1392, file: !4, line: 3516, baseType: !1042, size: 32, align: 32, offset: 832)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1392, file: !4, line: 3517, baseType: !1425, size: 64, align: 64, offset: 896)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64, align: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1392, file: !4, line: 3527, baseType: !1427, size: 64, align: 64, offset: 960)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64, align: 64)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!1042, !1382}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1392, file: !4, line: 3535, baseType: !1431, size: 64, align: 64, offset: 1024)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64, align: 64)
!1432 = !DISubroutineType(types: !1433)
!1433 = !{!1042, !1382, !1434}
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64, align: 64)
!1435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1383)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1392, file: !4, line: 3541, baseType: !1437, size: 64, align: 64, offset: 1088)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64, align: 64)
!1438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1439)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !4, line: 3461, baseType: !1440)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1441, line: 223, size: 128, align: 64, elements: !1442)
!1441 = !DIFile(filename: "./libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1442 = !{!1443, !1444}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1440, file: !1441, line: 224, baseType: !1092, size: 64, align: 64)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1440, file: !1441, line: 225, baseType: !1092, size: 64, align: 64, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1392, file: !4, line: 3549, baseType: !1446, size: 64, align: 64, offset: 1152)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64, align: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{null, !1425}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1392, file: !4, line: 3551, baseType: !1427, size: 64, align: 64, offset: 1216)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1392, file: !4, line: 3552, baseType: !1451, size: 64, align: 64, offset: 1280)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64, align: 64)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!1042, !1382, !1027, !1042, !1454}
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64, align: 64)
!1455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1456)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !4, line: 3920, size: 256, align: 64, elements: !1457)
!1457 = !{!1458, !1459, !1460, !1461, !1462, !1494}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1456, file: !4, line: 3921, baseType: !1099, size: 16, align: 16)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1456, file: !4, line: 3922, baseType: !1034, size: 32, align: 32, offset: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1456, file: !4, line: 3923, baseType: !1034, size: 32, align: 32, offset: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1456, file: !4, line: 3924, baseType: !1035, size: 32, align: 32, offset: 96)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1456, file: !4, line: 3925, baseType: !1463, size: 64, align: 64, offset: 128)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64, align: 64)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64, align: 64)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !4, line: 3918, baseType: !1466)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !4, line: 3885, size: 1600, align: 64, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1472, !1473, !1483, !1487, !1489, !1490, !1492, !1493}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1466, file: !4, line: 3886, baseType: !1042, size: 32, align: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1466, file: !4, line: 3887, baseType: !1042, size: 32, align: 32, offset: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1466, file: !4, line: 3888, baseType: !1042, size: 32, align: 32, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1466, file: !4, line: 3889, baseType: !1042, size: 32, align: 32, offset: 96)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1466, file: !4, line: 3890, baseType: !1042, size: 32, align: 32, offset: 128)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1466, file: !4, line: 3897, baseType: !1474, size: 768, align: 64, offset: 192)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !4, line: 3858, baseType: !1475)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !4, line: 3853, size: 768, align: 64, elements: !1476)
!1476 = !{!1477, !1481}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1475, file: !4, line: 3855, baseType: !1478, size: 512, align: 64)
!1478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 512, align: 64, elements: !1479)
!1479 = !{!1480}
!1480 = !DISubrange(count: 8)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1475, file: !4, line: 3857, baseType: !1482, size: 256, align: 32, offset: 512)
!1482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 256, align: 32, elements: !1479)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1466, file: !4, line: 3903, baseType: !1484, size: 256, align: 64, offset: 960)
!1484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 256, align: 64, elements: !1485)
!1485 = !{!1486}
!1486 = !DISubrange(count: 4)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1466, file: !4, line: 3904, baseType: !1488, size: 128, align: 32, offset: 1216)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 128, align: 32, elements: !1485)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1466, file: !4, line: 3906, baseType: !772, size: 32, align: 32, offset: 1344)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1466, file: !4, line: 3908, baseType: !1491, size: 64, align: 64, offset: 1408)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64, align: 64)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1466, file: !4, line: 3915, baseType: !1491, size: 64, align: 64, offset: 1472)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1466, file: !4, line: 3917, baseType: !1042, size: 32, align: 32, offset: 1536)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1456, file: !4, line: 3926, baseType: !1008, size: 64, align: 64, offset: 192)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1392, file: !4, line: 3564, baseType: !1496, size: 64, align: 64, offset: 1344)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64, align: 64)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!1042, !1382, !1243, !1499, !1581}
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64, align: 64)
!1500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1501)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !789, line: 646, baseType: !1502)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !789, line: 268, size: 4288, align: 64, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1533, !1535, !1536, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1569, !1570, !1571, !1572, !1573, !1574, !1577, !1578, !1579, !1580}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1502, file: !789, line: 282, baseType: !1478, size: 512, align: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1502, file: !789, line: 299, baseType: !1482, size: 256, align: 32, offset: 512)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1502, file: !789, line: 315, baseType: !1507, size: 64, align: 64, offset: 768)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64, align: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1502, file: !789, line: 326, baseType: !1042, size: 32, align: 32, offset: 832)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1502, file: !789, line: 326, baseType: !1042, size: 32, align: 32, offset: 864)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1502, file: !789, line: 334, baseType: !1042, size: 32, align: 32, offset: 896)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1502, file: !789, line: 341, baseType: !1042, size: 32, align: 32, offset: 928)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1502, file: !789, line: 346, baseType: !1042, size: 32, align: 32, offset: 960)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1502, file: !789, line: 351, baseType: !778, size: 32, align: 32, offset: 992)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1502, file: !789, line: 356, baseType: !1048, size: 64, align: 32, offset: 1024)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1502, file: !789, line: 361, baseType: !1008, size: 64, align: 64, offset: 1088)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1502, file: !789, line: 369, baseType: !1008, size: 64, align: 64, offset: 1152)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1502, file: !789, line: 377, baseType: !1008, size: 64, align: 64, offset: 1216)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1502, file: !789, line: 382, baseType: !1042, size: 32, align: 32, offset: 1280)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1502, file: !789, line: 386, baseType: !1042, size: 32, align: 32, offset: 1312)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1502, file: !789, line: 391, baseType: !1042, size: 32, align: 32, offset: 1344)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1502, file: !789, line: 396, baseType: !1091, size: 64, align: 64, offset: 1408)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1502, file: !789, line: 403, baseType: !1523, size: 512, align: 64, offset: 1472)
!1523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 512, align: 64, elements: !1479)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1502, file: !789, line: 410, baseType: !1042, size: 32, align: 32, offset: 1984)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1502, file: !789, line: 415, baseType: !1042, size: 32, align: 32, offset: 2016)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1502, file: !789, line: 420, baseType: !1042, size: 32, align: 32, offset: 2048)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1502, file: !789, line: 425, baseType: !1042, size: 32, align: 32, offset: 2080)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1502, file: !789, line: 435, baseType: !1008, size: 64, align: 64, offset: 2112)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1502, file: !789, line: 440, baseType: !1042, size: 32, align: 32, offset: 2176)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1502, file: !789, line: 445, baseType: !1039, size: 64, align: 64, offset: 2240)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1502, file: !789, line: 459, baseType: !1532, size: 512, align: 64, offset: 2304)
!1532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1248, size: 512, align: 64, elements: !1479)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1502, file: !789, line: 473, baseType: !1534, size: 64, align: 64, offset: 2816)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64, align: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1502, file: !789, line: 477, baseType: !1042, size: 32, align: 32, offset: 2880)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1502, file: !789, line: 479, baseType: !1537, size: 64, align: 64, offset: 2944)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64, align: 64)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64, align: 64)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !789, line: 207, baseType: !1540)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !789, line: 201, size: 320, align: 64, elements: !1541)
!1541 = !{!1542, !1543, !1544, !1545, !1550}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1540, file: !789, line: 202, baseType: !788, size: 32, align: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1540, file: !789, line: 203, baseType: !1027, size: 64, align: 64, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1540, file: !789, line: 204, baseType: !1042, size: 32, align: 32, offset: 128)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1540, file: !789, line: 205, baseType: !1546, size: 64, align: 64, offset: 192)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64, align: 64)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1548, line: 86, baseType: !1549)
!1548 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1549 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1548, line: 86, flags: DIFlagFwdDecl)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1540, file: !789, line: 206, baseType: !1248, size: 64, align: 64, offset: 256)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1502, file: !789, line: 480, baseType: !1042, size: 32, align: 32, offset: 3008)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1502, file: !789, line: 505, baseType: !1042, size: 32, align: 32, offset: 3040)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1502, file: !789, line: 512, baseType: !812, size: 32, align: 32, offset: 3072)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1502, file: !789, line: 514, baseType: !818, size: 32, align: 32, offset: 3104)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1502, file: !789, line: 516, baseType: !836, size: 32, align: 32, offset: 3136)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1502, file: !789, line: 523, baseType: !860, size: 32, align: 32, offset: 3168)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1502, file: !789, line: 525, baseType: !879, size: 32, align: 32, offset: 3200)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1502, file: !789, line: 532, baseType: !1008, size: 64, align: 64, offset: 3264)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1502, file: !789, line: 539, baseType: !1008, size: 64, align: 64, offset: 3328)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1502, file: !789, line: 547, baseType: !1008, size: 64, align: 64, offset: 3392)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1502, file: !789, line: 554, baseType: !1546, size: 64, align: 64, offset: 3456)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1502, file: !789, line: 563, baseType: !1042, size: 32, align: 32, offset: 3520)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1502, file: !789, line: 572, baseType: !1042, size: 32, align: 32, offset: 3552)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1502, file: !789, line: 581, baseType: !1042, size: 32, align: 32, offset: 3584)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1502, file: !789, line: 588, baseType: !1566, size: 64, align: 64, offset: 3648)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64, align: 64)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1009, line: 36, baseType: !1568)
!1568 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1502, file: !789, line: 593, baseType: !1042, size: 32, align: 32, offset: 3712)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1502, file: !789, line: 596, baseType: !1042, size: 32, align: 32, offset: 3744)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1502, file: !789, line: 599, baseType: !1248, size: 64, align: 64, offset: 3776)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1502, file: !789, line: 605, baseType: !1248, size: 64, align: 64, offset: 3840)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1502, file: !789, line: 616, baseType: !1248, size: 64, align: 64, offset: 3904)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1502, file: !789, line: 626, baseType: !1575, size: 64, align: 64, offset: 3968)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1576, line: 216, baseType: !1040)
!1576 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1502, file: !789, line: 627, baseType: !1575, size: 64, align: 64, offset: 4032)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1502, file: !789, line: 628, baseType: !1575, size: 64, align: 64, offset: 4096)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1502, file: !789, line: 629, baseType: !1575, size: 64, align: 64, offset: 4160)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1502, file: !789, line: 645, baseType: !1248, size: 64, align: 64, offset: 4224)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1392, file: !4, line: 3566, baseType: !1583, size: 64, align: 64, offset: 1408)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64, align: 64)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!1042, !1382, !1091, !1581, !1243}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1392, file: !4, line: 3567, baseType: !1427, size: 64, align: 64, offset: 1472)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1392, file: !4, line: 3576, baseType: !1588, size: 64, align: 64, offset: 1536)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64, align: 64)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!1042, !1382, !1499}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1392, file: !4, line: 3577, baseType: !1592, size: 64, align: 64, offset: 1600)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64, align: 64)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!1042, !1382, !1243}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1392, file: !4, line: 3584, baseType: !1596, size: 64, align: 64, offset: 1664)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64, align: 64)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!1042, !1382, !1599}
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64, align: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1392, file: !4, line: 3589, baseType: !1601, size: 64, align: 64, offset: 1728)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64, align: 64)
!1602 = !DISubroutineType(types: !1603)
!1603 = !{null, !1382}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1392, file: !4, line: 3594, baseType: !1042, size: 32, align: 32, offset: 1792)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1392, file: !4, line: 3600, baseType: !1107, size: 64, align: 64, offset: 1856)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1392, file: !4, line: 3609, baseType: !1607, size: 64, align: 64, offset: 1920)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64, align: 64)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64, align: 64)
!1609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1610)
!1610 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !4, line: 3609, flags: DIFlagFwdDecl)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1384, file: !4, line: 1566, baseType: !3, size: 32, align: 32, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1384, file: !4, line: 1581, baseType: !1035, size: 32, align: 32, offset: 224)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1384, file: !4, line: 1583, baseType: !1091, size: 64, align: 64, offset: 256)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1384, file: !4, line: 1591, baseType: !1615, size: 64, align: 64, offset: 320)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64, align: 64)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1441, line: 129, size: 1664, align: 64, elements: !1617)
!1617 = !{!1618, !1619, !1620, !1621, !1622, !1640, !1641, !1647, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1616, file: !1441, line: 136, baseType: !1042, size: 32, align: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1616, file: !1441, line: 151, baseType: !1042, size: 32, align: 32, offset: 32)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1616, file: !1441, line: 157, baseType: !1042, size: 32, align: 32, offset: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1616, file: !1441, line: 159, baseType: !1599, size: 64, align: 64, offset: 128)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1616, file: !1441, line: 161, baseType: !1623, size: 64, align: 64, offset: 192)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64, align: 64)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1441, line: 117, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1441, line: 100, size: 832, align: 64, elements: !1626)
!1626 = !{!1627, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1625, file: !1441, line: 105, baseType: !1628, size: 256, align: 64)
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1629, size: 256, align: 64, elements: !1485)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64, align: 64)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1250, line: 238, baseType: !1631)
!1631 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1250, line: 238, flags: DIFlagFwdDecl)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1625, file: !1441, line: 110, baseType: !1042, size: 32, align: 32, offset: 256)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1625, file: !1441, line: 111, baseType: !1042, size: 32, align: 32, offset: 288)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1625, file: !1441, line: 111, baseType: !1042, size: 32, align: 32, offset: 320)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1625, file: !1441, line: 112, baseType: !1482, size: 256, align: 32, offset: 352)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1625, file: !1441, line: 113, baseType: !1488, size: 128, align: 32, offset: 608)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1625, file: !1441, line: 114, baseType: !1042, size: 32, align: 32, offset: 736)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1625, file: !1441, line: 115, baseType: !1042, size: 32, align: 32, offset: 768)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1625, file: !1441, line: 116, baseType: !1042, size: 32, align: 32, offset: 800)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1616, file: !1441, line: 163, baseType: !1091, size: 64, align: 64, offset: 256)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1616, file: !1441, line: 165, baseType: !1642, size: 128, align: 64, offset: 320)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1441, line: 122, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1441, line: 119, size: 128, align: 64, elements: !1644)
!1644 = !{!1645, !1646}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1643, file: !1441, line: 120, baseType: !1243, size: 64, align: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1643, file: !1441, line: 121, baseType: !1599, size: 64, align: 64, offset: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1616, file: !1441, line: 166, baseType: !1648, size: 128, align: 64, offset: 448)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1441, line: 127, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1441, line: 124, size: 128, align: 64, elements: !1650)
!1650 = !{!1651, !1724}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1649, file: !1441, line: 125, baseType: !1652, size: 64, align: 64)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64, align: 64)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64, align: 64)
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !4, line: 5794, baseType: !1655)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !4, line: 5747, size: 512, align: 64, elements: !1656)
!1656 = !{!1657, !1658, !1682, !1686, !1687, !1721, !1722, !1723}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1655, file: !4, line: 5751, baseType: !1128, size: 64, align: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1655, file: !4, line: 5756, baseType: !1659, size: 64, align: 64, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64, align: 64)
!1660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1661)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !4, line: 5796, size: 512, align: 64, elements: !1662)
!1662 = !{!1663, !1664, !1667, !1668, !1669, !1673, !1677, !1681}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1661, file: !4, line: 5797, baseType: !1107, size: 64, align: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1661, file: !4, line: 5804, baseType: !1665, size: 64, align: 64, offset: 64)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64, align: 64)
!1666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1661, file: !4, line: 5815, baseType: !1128, size: 64, align: 64, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1661, file: !4, line: 5825, baseType: !1042, size: 32, align: 32, offset: 192)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1661, file: !4, line: 5826, baseType: !1670, size: 64, align: 64, offset: 256)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64, align: 64)
!1671 = !DISubroutineType(types: !1672)
!1672 = !{!1042, !1653}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1661, file: !4, line: 5827, baseType: !1674, size: 64, align: 64, offset: 320)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64, align: 64)
!1675 = !DISubroutineType(types: !1676)
!1676 = !{!1042, !1653, !1243}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1661, file: !4, line: 5828, baseType: !1678, size: 64, align: 64, offset: 384)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64, align: 64)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{null, !1653}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1661, file: !4, line: 5829, baseType: !1678, size: 64, align: 64, offset: 448)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1655, file: !4, line: 5762, baseType: !1683, size: 64, align: 64, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64, align: 64)
!1684 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !4, line: 5735, baseType: !1685)
!1685 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !4, line: 5735, flags: DIFlagFwdDecl)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1655, file: !4, line: 5768, baseType: !1091, size: 64, align: 64, offset: 192)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1655, file: !4, line: 5775, baseType: !1688, size: 64, align: 64, offset: 256)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64, align: 64)
!1689 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !4, line: 4085, baseType: !1690)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !4, line: 3936, size: 1152, align: 64, elements: !1691)
!1691 = !{!1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1690, file: !4, line: 3940, baseType: !545, size: 32, align: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1690, file: !4, line: 3944, baseType: !3, size: 32, align: 32, offset: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1690, file: !4, line: 3948, baseType: !1034, size: 32, align: 32, offset: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1690, file: !4, line: 3958, baseType: !1027, size: 64, align: 64, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1690, file: !4, line: 3962, baseType: !1042, size: 32, align: 32, offset: 192)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1690, file: !4, line: 3968, baseType: !1042, size: 32, align: 32, offset: 224)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1690, file: !4, line: 3973, baseType: !1008, size: 64, align: 64, offset: 256)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1690, file: !4, line: 3986, baseType: !1042, size: 32, align: 32, offset: 320)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1690, file: !4, line: 3999, baseType: !1042, size: 32, align: 32, offset: 352)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1690, file: !4, line: 4004, baseType: !1042, size: 32, align: 32, offset: 384)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1690, file: !4, line: 4005, baseType: !1042, size: 32, align: 32, offset: 416)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1690, file: !4, line: 4010, baseType: !1042, size: 32, align: 32, offset: 448)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1690, file: !4, line: 4011, baseType: !1042, size: 32, align: 32, offset: 480)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1690, file: !4, line: 4020, baseType: !1048, size: 64, align: 32, offset: 512)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1690, file: !4, line: 4025, baseType: !889, size: 32, align: 32, offset: 576)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1690, file: !4, line: 4030, baseType: !812, size: 32, align: 32, offset: 608)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1690, file: !4, line: 4031, baseType: !818, size: 32, align: 32, offset: 640)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1690, file: !4, line: 4032, baseType: !836, size: 32, align: 32, offset: 672)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1690, file: !4, line: 4033, baseType: !860, size: 32, align: 32, offset: 704)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1690, file: !4, line: 4034, baseType: !879, size: 32, align: 32, offset: 736)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1690, file: !4, line: 4039, baseType: !1042, size: 32, align: 32, offset: 768)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1690, file: !4, line: 4046, baseType: !1039, size: 64, align: 64, offset: 832)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1690, file: !4, line: 4050, baseType: !1042, size: 32, align: 32, offset: 896)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1690, file: !4, line: 4054, baseType: !1042, size: 32, align: 32, offset: 928)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1690, file: !4, line: 4061, baseType: !1042, size: 32, align: 32, offset: 960)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1690, file: !4, line: 4065, baseType: !1042, size: 32, align: 32, offset: 992)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1690, file: !4, line: 4073, baseType: !1042, size: 32, align: 32, offset: 1024)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1690, file: !4, line: 4080, baseType: !1042, size: 32, align: 32, offset: 1056)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1690, file: !4, line: 4084, baseType: !1042, size: 32, align: 32, offset: 1088)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1655, file: !4, line: 5781, baseType: !1688, size: 64, align: 64, offset: 320)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1655, file: !4, line: 5787, baseType: !1048, size: 64, align: 32, offset: 384)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1655, file: !4, line: 5793, baseType: !1048, size: 64, align: 32, offset: 448)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1649, file: !1441, line: 126, baseType: !1042, size: 32, align: 32, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1616, file: !1441, line: 172, baseType: !1243, size: 64, align: 64, offset: 576)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1616, file: !1441, line: 177, baseType: !1027, size: 64, align: 64, offset: 640)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1616, file: !1441, line: 178, baseType: !1035, size: 32, align: 32, offset: 704)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1616, file: !1441, line: 180, baseType: !1091, size: 64, align: 64, offset: 768)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1616, file: !1441, line: 185, baseType: !1042, size: 32, align: 32, offset: 832)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1616, file: !1441, line: 190, baseType: !1091, size: 64, align: 64, offset: 896)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1616, file: !1441, line: 195, baseType: !1042, size: 32, align: 32, offset: 960)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1616, file: !1441, line: 200, baseType: !1243, size: 64, align: 64, offset: 1024)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1616, file: !1441, line: 201, baseType: !1042, size: 32, align: 32, offset: 1088)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1616, file: !1441, line: 202, baseType: !1599, size: 64, align: 64, offset: 1152)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1616, file: !1441, line: 203, baseType: !1042, size: 32, align: 32, offset: 1216)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1616, file: !1441, line: 205, baseType: !1042, size: 32, align: 32, offset: 1248)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1616, file: !1441, line: 206, baseType: !1042, size: 32, align: 32, offset: 1280)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1616, file: !1441, line: 209, baseType: !1575, size: 64, align: 64, offset: 1344)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1616, file: !1441, line: 212, baseType: !1575, size: 64, align: 64, offset: 1408)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1616, file: !1441, line: 213, baseType: !1599, size: 64, align: 64, offset: 1472)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1616, file: !1441, line: 215, baseType: !1042, size: 32, align: 32, offset: 1536)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1616, file: !1441, line: 217, baseType: !1042, size: 32, align: 32, offset: 1568)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1616, file: !1441, line: 220, baseType: !1042, size: 32, align: 32, offset: 1600)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1384, file: !4, line: 1598, baseType: !1091, size: 64, align: 64, offset: 384)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1384, file: !4, line: 1606, baseType: !1008, size: 64, align: 64, offset: 448)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1384, file: !4, line: 1614, baseType: !1042, size: 32, align: 32, offset: 512)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1384, file: !4, line: 1622, baseType: !1042, size: 32, align: 32, offset: 544)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1384, file: !4, line: 1628, baseType: !1042, size: 32, align: 32, offset: 576)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1384, file: !4, line: 1636, baseType: !1042, size: 32, align: 32, offset: 608)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1384, file: !4, line: 1643, baseType: !1042, size: 32, align: 32, offset: 640)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1384, file: !4, line: 1657, baseType: !1027, size: 64, align: 64, offset: 704)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1384, file: !4, line: 1658, baseType: !1042, size: 32, align: 32, offset: 768)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1384, file: !4, line: 1679, baseType: !1048, size: 64, align: 32, offset: 800)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1384, file: !4, line: 1688, baseType: !1042, size: 32, align: 32, offset: 864)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1384, file: !4, line: 1712, baseType: !1042, size: 32, align: 32, offset: 896)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1384, file: !4, line: 1729, baseType: !1042, size: 32, align: 32, offset: 928)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1384, file: !4, line: 1729, baseType: !1042, size: 32, align: 32, offset: 960)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1384, file: !4, line: 1744, baseType: !1042, size: 32, align: 32, offset: 992)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1384, file: !4, line: 1744, baseType: !1042, size: 32, align: 32, offset: 1024)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1384, file: !4, line: 1751, baseType: !1042, size: 32, align: 32, offset: 1056)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1384, file: !4, line: 1766, baseType: !555, size: 32, align: 32, offset: 1088)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1384, file: !4, line: 1791, baseType: !1763, size: 64, align: 64, offset: 1152)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 64, align: 64)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{null, !1766, !1499, !1581, !1042, !1042, !1042}
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64, align: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1384, file: !4, line: 1808, baseType: !1768, size: 64, align: 64, offset: 1216)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64, align: 64)
!1769 = !DISubroutineType(types: !1770)
!1770 = !{!555, !1766, !1403}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1384, file: !4, line: 1816, baseType: !1042, size: 32, align: 32, offset: 1280)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1384, file: !4, line: 1825, baseType: !1773, size: 32, align: 32, offset: 1312)
!1773 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1384, file: !4, line: 1830, baseType: !1042, size: 32, align: 32, offset: 1344)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1384, file: !4, line: 1838, baseType: !1773, size: 32, align: 32, offset: 1376)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1384, file: !4, line: 1846, baseType: !1042, size: 32, align: 32, offset: 1408)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1384, file: !4, line: 1851, baseType: !1042, size: 32, align: 32, offset: 1440)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1384, file: !4, line: 1861, baseType: !1773, size: 32, align: 32, offset: 1472)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1384, file: !4, line: 1868, baseType: !1773, size: 32, align: 32, offset: 1504)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1384, file: !4, line: 1875, baseType: !1773, size: 32, align: 32, offset: 1536)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1384, file: !4, line: 1882, baseType: !1773, size: 32, align: 32, offset: 1568)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1384, file: !4, line: 1889, baseType: !1773, size: 32, align: 32, offset: 1600)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1384, file: !4, line: 1896, baseType: !1773, size: 32, align: 32, offset: 1632)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1384, file: !4, line: 1903, baseType: !1773, size: 32, align: 32, offset: 1664)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1384, file: !4, line: 1910, baseType: !1042, size: 32, align: 32, offset: 1696)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1384, file: !4, line: 1915, baseType: !1042, size: 32, align: 32, offset: 1728)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1384, file: !4, line: 1926, baseType: !1581, size: 64, align: 64, offset: 1792)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1384, file: !4, line: 1935, baseType: !1048, size: 64, align: 32, offset: 1856)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1384, file: !4, line: 1942, baseType: !1042, size: 32, align: 32, offset: 1920)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1384, file: !4, line: 1948, baseType: !1042, size: 32, align: 32, offset: 1952)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1384, file: !4, line: 1954, baseType: !1042, size: 32, align: 32, offset: 1984)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1384, file: !4, line: 1960, baseType: !1042, size: 32, align: 32, offset: 2016)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1384, file: !4, line: 1984, baseType: !1042, size: 32, align: 32, offset: 2048)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1384, file: !4, line: 1991, baseType: !1042, size: 32, align: 32, offset: 2080)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1384, file: !4, line: 1996, baseType: !1042, size: 32, align: 32, offset: 2112)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1384, file: !4, line: 2004, baseType: !1042, size: 32, align: 32, offset: 2144)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1384, file: !4, line: 2011, baseType: !1042, size: 32, align: 32, offset: 2176)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1384, file: !4, line: 2018, baseType: !1042, size: 32, align: 32, offset: 2208)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1384, file: !4, line: 2027, baseType: !1042, size: 32, align: 32, offset: 2240)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1384, file: !4, line: 2034, baseType: !1042, size: 32, align: 32, offset: 2272)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1384, file: !4, line: 2044, baseType: !1042, size: 32, align: 32, offset: 2304)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1384, file: !4, line: 2054, baseType: !1803, size: 64, align: 64, offset: 2368)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64, align: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1384, file: !4, line: 2061, baseType: !1803, size: 64, align: 64, offset: 2432)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1384, file: !4, line: 2066, baseType: !1042, size: 32, align: 32, offset: 2496)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1384, file: !4, line: 2070, baseType: !1042, size: 32, align: 32, offset: 2528)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1384, file: !4, line: 2078, baseType: !1042, size: 32, align: 32, offset: 2560)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1384, file: !4, line: 2085, baseType: !1042, size: 32, align: 32, offset: 2592)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1384, file: !4, line: 2092, baseType: !1042, size: 32, align: 32, offset: 2624)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1384, file: !4, line: 2099, baseType: !1042, size: 32, align: 32, offset: 2656)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1384, file: !4, line: 2106, baseType: !1042, size: 32, align: 32, offset: 2688)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1384, file: !4, line: 2113, baseType: !1042, size: 32, align: 32, offset: 2720)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1384, file: !4, line: 2120, baseType: !1042, size: 32, align: 32, offset: 2752)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1384, file: !4, line: 2125, baseType: !1042, size: 32, align: 32, offset: 2784)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1384, file: !4, line: 2133, baseType: !1042, size: 32, align: 32, offset: 2816)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1384, file: !4, line: 2140, baseType: !1042, size: 32, align: 32, offset: 2848)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1384, file: !4, line: 2145, baseType: !1042, size: 32, align: 32, offset: 2880)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1384, file: !4, line: 2153, baseType: !1042, size: 32, align: 32, offset: 2912)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1384, file: !4, line: 2158, baseType: !1042, size: 32, align: 32, offset: 2944)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1384, file: !4, line: 2166, baseType: !818, size: 32, align: 32, offset: 2976)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1384, file: !4, line: 2173, baseType: !836, size: 32, align: 32, offset: 3008)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1384, file: !4, line: 2180, baseType: !860, size: 32, align: 32, offset: 3040)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1384, file: !4, line: 2187, baseType: !812, size: 32, align: 32, offset: 3072)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1384, file: !4, line: 2194, baseType: !879, size: 32, align: 32, offset: 3104)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1384, file: !4, line: 2203, baseType: !1042, size: 32, align: 32, offset: 3136)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1384, file: !4, line: 2209, baseType: !889, size: 32, align: 32, offset: 3168)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1384, file: !4, line: 2212, baseType: !1042, size: 32, align: 32, offset: 3200)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1384, file: !4, line: 2213, baseType: !1042, size: 32, align: 32, offset: 3232)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1384, file: !4, line: 2220, baseType: !755, size: 32, align: 32, offset: 3264)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1384, file: !4, line: 2232, baseType: !1042, size: 32, align: 32, offset: 3296)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1384, file: !4, line: 2243, baseType: !1042, size: 32, align: 32, offset: 3328)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1384, file: !4, line: 2249, baseType: !1042, size: 32, align: 32, offset: 3360)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1384, file: !4, line: 2256, baseType: !1042, size: 32, align: 32, offset: 3392)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1384, file: !4, line: 2263, baseType: !1039, size: 64, align: 64, offset: 3456)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1384, file: !4, line: 2270, baseType: !1039, size: 64, align: 64, offset: 3520)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1384, file: !4, line: 2277, baseType: !897, size: 32, align: 32, offset: 3584)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1384, file: !4, line: 2285, baseType: !755, size: 32, align: 32, offset: 3616)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1384, file: !4, line: 2367, baseType: !1839, size: 64, align: 64, offset: 3648)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64, align: 64)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{!1042, !1766, !1599, !1042}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1384, file: !4, line: 2383, baseType: !1042, size: 32, align: 32, offset: 3712)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1384, file: !4, line: 2386, baseType: !1773, size: 32, align: 32, offset: 3744)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1384, file: !4, line: 2387, baseType: !1773, size: 32, align: 32, offset: 3776)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1384, file: !4, line: 2394, baseType: !1042, size: 32, align: 32, offset: 3808)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1384, file: !4, line: 2401, baseType: !1042, size: 32, align: 32, offset: 3840)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1384, file: !4, line: 2408, baseType: !1042, size: 32, align: 32, offset: 3872)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1384, file: !4, line: 2415, baseType: !1042, size: 32, align: 32, offset: 3904)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1384, file: !4, line: 2422, baseType: !1042, size: 32, align: 32, offset: 3936)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1384, file: !4, line: 2423, baseType: !1851, size: 64, align: 64, offset: 3968)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64, align: 64)
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !4, line: 831, baseType: !1853)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !4, line: 826, size: 128, align: 32, elements: !1854)
!1854 = !{!1855, !1856, !1857, !1858}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1853, file: !4, line: 827, baseType: !1042, size: 32, align: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1853, file: !4, line: 828, baseType: !1042, size: 32, align: 32, offset: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1853, file: !4, line: 829, baseType: !1042, size: 32, align: 32, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1853, file: !4, line: 830, baseType: !1773, size: 32, align: 32, offset: 96)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1384, file: !4, line: 2430, baseType: !1008, size: 64, align: 64, offset: 4032)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1384, file: !4, line: 2437, baseType: !1008, size: 64, align: 64, offset: 4096)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1384, file: !4, line: 2444, baseType: !1773, size: 32, align: 32, offset: 4160)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1384, file: !4, line: 2451, baseType: !1773, size: 32, align: 32, offset: 4192)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1384, file: !4, line: 2458, baseType: !1042, size: 32, align: 32, offset: 4224)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1384, file: !4, line: 2469, baseType: !1042, size: 32, align: 32, offset: 4256)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1384, file: !4, line: 2475, baseType: !1042, size: 32, align: 32, offset: 4288)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1384, file: !4, line: 2481, baseType: !1042, size: 32, align: 32, offset: 4320)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1384, file: !4, line: 2485, baseType: !1042, size: 32, align: 32, offset: 4352)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1384, file: !4, line: 2489, baseType: !1042, size: 32, align: 32, offset: 4384)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1384, file: !4, line: 2493, baseType: !1042, size: 32, align: 32, offset: 4416)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1384, file: !4, line: 2501, baseType: !1042, size: 32, align: 32, offset: 4448)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1384, file: !4, line: 2506, baseType: !1042, size: 32, align: 32, offset: 4480)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1384, file: !4, line: 2510, baseType: !1042, size: 32, align: 32, offset: 4512)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1384, file: !4, line: 2514, baseType: !1008, size: 64, align: 64, offset: 4544)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1384, file: !4, line: 2528, baseType: !1875, size: 64, align: 64, offset: 4608)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64, align: 64)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{null, !1766, !1091, !1042, !1042}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1384, file: !4, line: 2534, baseType: !1042, size: 32, align: 32, offset: 4672)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1384, file: !4, line: 2545, baseType: !1042, size: 32, align: 32, offset: 4704)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1384, file: !4, line: 2547, baseType: !1042, size: 32, align: 32, offset: 4736)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1384, file: !4, line: 2549, baseType: !1042, size: 32, align: 32, offset: 4768)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1384, file: !4, line: 2551, baseType: !1042, size: 32, align: 32, offset: 4800)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1384, file: !4, line: 2553, baseType: !1042, size: 32, align: 32, offset: 4832)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1384, file: !4, line: 2555, baseType: !1042, size: 32, align: 32, offset: 4864)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1384, file: !4, line: 2557, baseType: !1042, size: 32, align: 32, offset: 4896)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1384, file: !4, line: 2559, baseType: !1042, size: 32, align: 32, offset: 4928)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1384, file: !4, line: 2563, baseType: !1042, size: 32, align: 32, offset: 4960)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1384, file: !4, line: 2571, baseType: !1491, size: 64, align: 64, offset: 4992)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1384, file: !4, line: 2579, baseType: !1491, size: 64, align: 64, offset: 5056)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1384, file: !4, line: 2586, baseType: !1042, size: 32, align: 32, offset: 5120)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1384, file: !4, line: 2615, baseType: !1042, size: 32, align: 32, offset: 5152)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1384, file: !4, line: 2627, baseType: !1042, size: 32, align: 32, offset: 5184)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1384, file: !4, line: 2637, baseType: !1042, size: 32, align: 32, offset: 5216)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1384, file: !4, line: 2681, baseType: !1042, size: 32, align: 32, offset: 5248)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1384, file: !4, line: 2709, baseType: !1008, size: 64, align: 64, offset: 5312)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1384, file: !4, line: 2716, baseType: !1897, size: 64, align: 64, offset: 5376)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64, align: 64)
!1898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1899)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !4, line: 3636, size: 896, align: 64, elements: !1900)
!1900 = !{!1901, !1902, !1903, !1904, !1905, !1906, !1907, !1911, !1915, !1916, !1917, !1918, !1924, !1925, !1926, !1927, !1928}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1899, file: !4, line: 3642, baseType: !1107, size: 64, align: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1899, file: !4, line: 3649, baseType: !545, size: 32, align: 32, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1899, file: !4, line: 3656, baseType: !3, size: 32, align: 32, offset: 96)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1899, file: !4, line: 3663, baseType: !555, size: 32, align: 32, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1899, file: !4, line: 3669, baseType: !1042, size: 32, align: 32, offset: 160)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1899, file: !4, line: 3682, baseType: !1596, size: 64, align: 64, offset: 192)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1899, file: !4, line: 3698, baseType: !1908, size: 64, align: 64, offset: 256)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64, align: 64)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{!1042, !1382, !1092, !1034}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1899, file: !4, line: 3712, baseType: !1912, size: 64, align: 64, offset: 320)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64, align: 64)
!1913 = !DISubroutineType(types: !1914)
!1914 = !{!1042, !1382, !1042, !1092, !1034}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1899, file: !4, line: 3726, baseType: !1908, size: 64, align: 64, offset: 384)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1899, file: !4, line: 3737, baseType: !1427, size: 64, align: 64, offset: 448)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1899, file: !4, line: 3746, baseType: !1042, size: 32, align: 32, offset: 512)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1899, file: !4, line: 3757, baseType: !1919, size: 64, align: 64, offset: 576)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64, align: 64)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{null, !1922}
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64, align: 64)
!1923 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !4, line: 3617, flags: DIFlagFwdDecl)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1899, file: !4, line: 3766, baseType: !1427, size: 64, align: 64, offset: 640)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1899, file: !4, line: 3774, baseType: !1427, size: 64, align: 64, offset: 704)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1899, file: !4, line: 3780, baseType: !1042, size: 32, align: 32, offset: 768)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1899, file: !4, line: 3785, baseType: !1042, size: 32, align: 32, offset: 800)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1899, file: !4, line: 3795, baseType: !1929, size: 64, align: 64, offset: 832)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64, align: 64)
!1930 = !DISubroutineType(types: !1931)
!1931 = !{!1042, !1382, !1248}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1384, file: !4, line: 2728, baseType: !1091, size: 64, align: 64, offset: 5440)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1384, file: !4, line: 2735, baseType: !1523, size: 512, align: 64, offset: 5504)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1384, file: !4, line: 2742, baseType: !1042, size: 32, align: 32, offset: 6016)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1384, file: !4, line: 2755, baseType: !1042, size: 32, align: 32, offset: 6048)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1384, file: !4, line: 2776, baseType: !1042, size: 32, align: 32, offset: 6080)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1384, file: !4, line: 2783, baseType: !1042, size: 32, align: 32, offset: 6112)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1384, file: !4, line: 2791, baseType: !1042, size: 32, align: 32, offset: 6144)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1384, file: !4, line: 2802, baseType: !1599, size: 64, align: 64, offset: 6208)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1384, file: !4, line: 2811, baseType: !1042, size: 32, align: 32, offset: 6272)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1384, file: !4, line: 2821, baseType: !1042, size: 32, align: 32, offset: 6304)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1384, file: !4, line: 2830, baseType: !1042, size: 32, align: 32, offset: 6336)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1384, file: !4, line: 2840, baseType: !1042, size: 32, align: 32, offset: 6368)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1384, file: !4, line: 2851, baseType: !1945, size: 64, align: 64, offset: 6400)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64, align: 64)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!1042, !1766, !1948, !1091, !1581, !1042, !1042}
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64, align: 64)
!1949 = !DISubroutineType(types: !1950)
!1950 = !{!1042, !1766, !1091}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1384, file: !4, line: 2871, baseType: !1952, size: 64, align: 64, offset: 6464)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64, align: 64)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{!1042, !1766, !1955, !1091, !1581, !1042}
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64, align: 64)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{!1042, !1766, !1091, !1042, !1042}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1384, file: !4, line: 2878, baseType: !1042, size: 32, align: 32, offset: 6528)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1384, file: !4, line: 2885, baseType: !1042, size: 32, align: 32, offset: 6560)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1384, file: !4, line: 3005, baseType: !1042, size: 32, align: 32, offset: 6592)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1384, file: !4, line: 3013, baseType: !909, size: 32, align: 32, offset: 6624)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1384, file: !4, line: 3020, baseType: !909, size: 32, align: 32, offset: 6656)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1384, file: !4, line: 3027, baseType: !909, size: 32, align: 32, offset: 6688)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1384, file: !4, line: 3037, baseType: !1027, size: 64, align: 64, offset: 6720)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1384, file: !4, line: 3038, baseType: !1042, size: 32, align: 32, offset: 6784)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1384, file: !4, line: 3050, baseType: !1039, size: 64, align: 64, offset: 6848)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1384, file: !4, line: 3065, baseType: !1042, size: 32, align: 32, offset: 6912)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1384, file: !4, line: 3083, baseType: !1042, size: 32, align: 32, offset: 6944)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1384, file: !4, line: 3092, baseType: !1048, size: 64, align: 32, offset: 6976)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1384, file: !4, line: 3099, baseType: !555, size: 32, align: 32, offset: 7040)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1384, file: !4, line: 3106, baseType: !1048, size: 64, align: 32, offset: 7072)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1384, file: !4, line: 3113, baseType: !1973, size: 64, align: 64, offset: 7168)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64, align: 64)
!1974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1975)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !4, line: 740, baseType: !1976)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !4, line: 712, size: 384, align: 64, elements: !1977)
!1977 = !{!1978, !1979, !1980, !1981, !1982, !1983, !1986}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1976, file: !4, line: 713, baseType: !3, size: 32, align: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1976, file: !4, line: 714, baseType: !545, size: 32, align: 32, offset: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1976, file: !4, line: 720, baseType: !1107, size: 64, align: 64, offset: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1976, file: !4, line: 724, baseType: !1107, size: 64, align: 64, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1976, file: !4, line: 728, baseType: !1042, size: 32, align: 32, offset: 192)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1976, file: !4, line: 734, baseType: !1984, size: 64, align: 64, offset: 256)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64, align: 64)
!1985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1107)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1976, file: !4, line: 739, baseType: !1987, size: 64, align: 64, offset: 320)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64, align: 64)
!1988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1418)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1384, file: !4, line: 3129, baseType: !1008, size: 64, align: 64, offset: 7232)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1384, file: !4, line: 3130, baseType: !1008, size: 64, align: 64, offset: 7296)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1384, file: !4, line: 3131, baseType: !1008, size: 64, align: 64, offset: 7360)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1384, file: !4, line: 3132, baseType: !1008, size: 64, align: 64, offset: 7424)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1384, file: !4, line: 3139, baseType: !1491, size: 64, align: 64, offset: 7488)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1384, file: !4, line: 3147, baseType: !1042, size: 32, align: 32, offset: 7552)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1384, file: !4, line: 3165, baseType: !1042, size: 32, align: 32, offset: 7584)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1384, file: !4, line: 3172, baseType: !1042, size: 32, align: 32, offset: 7616)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1384, file: !4, line: 3180, baseType: !1042, size: 32, align: 32, offset: 7648)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1384, file: !4, line: 3191, baseType: !1803, size: 64, align: 64, offset: 7680)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1384, file: !4, line: 3199, baseType: !1027, size: 64, align: 64, offset: 7744)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1384, file: !4, line: 3207, baseType: !1491, size: 64, align: 64, offset: 7808)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1384, file: !4, line: 3214, baseType: !1035, size: 32, align: 32, offset: 7872)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1384, file: !4, line: 3224, baseType: !1266, size: 64, align: 64, offset: 7936)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1384, file: !4, line: 3225, baseType: !1042, size: 32, align: 32, offset: 8000)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1384, file: !4, line: 3249, baseType: !1248, size: 64, align: 64, offset: 8064)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1384, file: !4, line: 3256, baseType: !1042, size: 32, align: 32, offset: 8128)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1384, file: !4, line: 3271, baseType: !1042, size: 32, align: 32, offset: 8160)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1384, file: !4, line: 3279, baseType: !1008, size: 64, align: 64, offset: 8192)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1384, file: !4, line: 3301, baseType: !1248, size: 64, align: 64, offset: 8256)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1384, file: !4, line: 3310, baseType: !1042, size: 32, align: 32, offset: 8320)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1384, file: !4, line: 3337, baseType: !1042, size: 32, align: 32, offset: 8352)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1384, file: !4, line: 3351, baseType: !1042, size: 32, align: 32, offset: 8384)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1384, file: !4, line: 3359, baseType: !1042, size: 32, align: 32, offset: 8416)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1377, file: !919, line: 880, baseType: !1091, size: 64, align: 64, offset: 128)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1377, file: !919, line: 894, baseType: !1048, size: 64, align: 32, offset: 192)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1377, file: !919, line: 904, baseType: !1008, size: 64, align: 64, offset: 256)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1377, file: !919, line: 914, baseType: !1008, size: 64, align: 64, offset: 320)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "nb_frames", scope: !1377, file: !919, line: 916, baseType: !1008, size: 64, align: 64, offset: 384)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "disposition", scope: !1377, file: !919, line: 918, baseType: !1042, size: 32, align: 32, offset: 448)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !1377, file: !919, line: 920, baseType: !909, size: 32, align: 32, offset: 480)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1377, file: !919, line: 927, baseType: !1048, size: 64, align: 32, offset: 512)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1377, file: !919, line: 929, baseType: !1546, size: 64, align: 64, offset: 576)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "avg_frame_rate", scope: !1377, file: !919, line: 938, baseType: !1048, size: 64, align: 32, offset: 640)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "attached_pic", scope: !1377, file: !919, line: 947, baseType: !1244, size: 704, align: 64, offset: 704)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1377, file: !919, line: 967, baseType: !1266, size: 64, align: 64, offset: 1408)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1377, file: !919, line: 971, baseType: !1042, size: 32, align: 32, offset: 1472)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1377, file: !919, line: 978, baseType: !1042, size: 32, align: 32, offset: 1504)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "r_frame_rate", scope: !1377, file: !919, line: 989, baseType: !1048, size: 64, align: 32, offset: 1536)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "recommended_encoder_configuration", scope: !1377, file: !919, line: 1000, baseType: !1491, size: 64, align: 64, offset: 1600)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "codecpar", scope: !1377, file: !919, line: 1012, baseType: !1688, size: 64, align: 64, offset: 1664)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1377, file: !919, line: 1055, baseType: !2031, size: 64, align: 64, offset: 1728)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64, align: 64)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1377, file: !919, line: 1028, size: 832, align: 64, elements: !2033)
!2033 = !{!2034, !2035, !2036, !2037, !2038, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !2032, file: !919, line: 1029, baseType: !1008, size: 64, align: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "duration_gcd", scope: !2032, file: !919, line: 1030, baseType: !1008, size: 64, align: 64, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "duration_count", scope: !2032, file: !919, line: 1031, baseType: !1042, size: 32, align: 32, offset: 128)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "rfps_duration_sum", scope: !2032, file: !919, line: 1032, baseType: !1008, size: 64, align: 64, offset: 192)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "duration_error", scope: !2032, file: !919, line: 1033, baseType: !2039, size: 64, align: 64, offset: 256)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64, align: 64)
!2040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1152, size: 51072, align: 64, elements: !2041)
!2041 = !{!2042, !2043}
!2042 = !DISubrange(count: 2)
!2043 = !DISubrange(count: 399)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration", scope: !2032, file: !919, line: 1034, baseType: !1008, size: 64, align: 64, offset: 320)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration_fields", scope: !2032, file: !919, line: 1035, baseType: !1008, size: 64, align: 64, offset: 384)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "frame_delay_evidence", scope: !2032, file: !919, line: 1036, baseType: !1042, size: 32, align: 32, offset: 448)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "found_decoder", scope: !2032, file: !919, line: 1043, baseType: !1042, size: 32, align: 32, offset: 480)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "last_duration", scope: !2032, file: !919, line: 1045, baseType: !1008, size: 64, align: 64, offset: 512)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts", scope: !2032, file: !919, line: 1050, baseType: !1008, size: 64, align: 64, offset: 576)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts_idx", scope: !2032, file: !919, line: 1051, baseType: !1042, size: 32, align: 32, offset: 640)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts", scope: !2032, file: !919, line: 1052, baseType: !1008, size: 64, align: 64, offset: 704)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts_idx", scope: !2032, file: !919, line: 1053, baseType: !1042, size: 32, align: 32, offset: 768)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_bits", scope: !1377, file: !919, line: 1057, baseType: !1042, size: 32, align: 32, offset: 1792)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "first_dts", scope: !1377, file: !919, line: 1067, baseType: !1008, size: 64, align: 64, offset: 1856)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "cur_dts", scope: !1377, file: !919, line: 1068, baseType: !1008, size: 64, align: 64, offset: 1920)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_pts", scope: !1377, file: !919, line: 1069, baseType: !1008, size: 64, align: 64, offset: 1984)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_duration", scope: !1377, file: !919, line: 1070, baseType: !1042, size: 32, align: 32, offset: 2048)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "probe_packets", scope: !1377, file: !919, line: 1075, baseType: !1042, size: 32, align: 32, offset: 2080)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_nb_frames", scope: !1377, file: !919, line: 1080, baseType: !1042, size: 32, align: 32, offset: 2112)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "need_parsing", scope: !1377, file: !919, line: 1083, baseType: !918, size: 32, align: 32, offset: 2144)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !1377, file: !919, line: 1084, baseType: !2062, size: 64, align: 64, offset: 2176)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64, align: 64)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParserContext", file: !4, line: 5092, size: 2816, align: 64, elements: !2064)
!2064 = !{!2065, !2066, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !2063, file: !4, line: 5093, baseType: !1091, size: 64, align: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !2063, file: !4, line: 5094, baseType: !2067, size: 64, align: 64, offset: 64)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64, align: 64)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParser", file: !4, line: 5259, size: 512, align: 64, elements: !2069)
!2069 = !{!2070, !2074, !2075, !2081, !2086, !2090, !2094}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !2068, file: !4, line: 5260, baseType: !2071, size: 160, align: 32)
!2071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 160, align: 32, elements: !2072)
!2072 = !{!2073}
!2073 = !DISubrange(count: 5)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2068, file: !4, line: 5261, baseType: !1042, size: 32, align: 32, offset: 160)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "parser_init", scope: !2068, file: !4, line: 5262, baseType: !2076, size: 64, align: 64, offset: 192)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64, align: 64)
!2077 = !DISubroutineType(types: !2078)
!2078 = !{!1042, !2079}
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64, align: 64)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParserContext", file: !4, line: 5257, baseType: !2063)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "parser_parse", scope: !2068, file: !4, line: 5265, baseType: !2082, size: 64, align: 64, offset: 256)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64, align: 64)
!2083 = !DISubroutineType(types: !2084)
!2084 = !{!1042, !2079, !1382, !2085, !1581, !1092, !1042}
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64, align: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "parser_close", scope: !2068, file: !4, line: 5269, baseType: !2087, size: 64, align: 64, offset: 320)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64, align: 64)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{null, !2079}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2068, file: !4, line: 5270, baseType: !2091, size: 64, align: 64, offset: 384)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64, align: 64)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{!1042, !1382, !1092, !1042}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2068, file: !4, line: 5271, baseType: !2067, size: 64, align: 64, offset: 448)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !2063, file: !4, line: 5095, baseType: !1008, size: 64, align: 64, offset: 128)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "cur_offset", scope: !2063, file: !4, line: 5096, baseType: !1008, size: 64, align: 64, offset: 192)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "next_frame_offset", scope: !2063, file: !4, line: 5098, baseType: !1008, size: 64, align: 64, offset: 256)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !2063, file: !4, line: 5100, baseType: !1042, size: 32, align: 32, offset: 320)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !2063, file: !4, line: 5110, baseType: !1042, size: 32, align: 32, offset: 352)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !2063, file: !4, line: 5111, baseType: !1008, size: 64, align: 64, offset: 384)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !2063, file: !4, line: 5112, baseType: !1008, size: 64, align: 64, offset: 448)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "last_pts", scope: !2063, file: !4, line: 5115, baseType: !1008, size: 64, align: 64, offset: 512)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !2063, file: !4, line: 5116, baseType: !1008, size: 64, align: 64, offset: 576)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_timestamp", scope: !2063, file: !4, line: 5117, baseType: !1042, size: 32, align: 32, offset: 640)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_start_index", scope: !2063, file: !4, line: 5120, baseType: !1042, size: 32, align: 32, offset: 672)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_offset", scope: !2063, file: !4, line: 5121, baseType: !2107, size: 256, align: 64, offset: 704)
!2107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 256, align: 64, elements: !1485)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pts", scope: !2063, file: !4, line: 5122, baseType: !2107, size: 256, align: 64, offset: 960)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_dts", scope: !2063, file: !4, line: 5123, baseType: !2107, size: 256, align: 64, offset: 1216)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2063, file: !4, line: 5125, baseType: !1042, size: 32, align: 32, offset: 1472)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2063, file: !4, line: 5132, baseType: !1008, size: 64, align: 64, offset: 1536)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_end", scope: !2063, file: !4, line: 5133, baseType: !2107, size: 256, align: 64, offset: 1600)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !2063, file: !4, line: 5141, baseType: !1042, size: 32, align: 32, offset: 1856)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !2063, file: !4, line: 5148, baseType: !1008, size: 64, align: 64, offset: 1920)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "dts_sync_point", scope: !2063, file: !4, line: 5161, baseType: !1042, size: 32, align: 32, offset: 1984)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ref_dts_delta", scope: !2063, file: !4, line: 5176, baseType: !1042, size: 32, align: 32, offset: 2016)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "pts_dts_delta", scope: !2063, file: !4, line: 5190, baseType: !1042, size: 32, align: 32, offset: 2048)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pos", scope: !2063, file: !4, line: 5197, baseType: !2107, size: 256, align: 64, offset: 2112)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2063, file: !4, line: 5202, baseType: !1008, size: 64, align: 64, offset: 2368)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "last_pos", scope: !2063, file: !4, line: 5207, baseType: !1008, size: 64, align: 64, offset: 2432)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2063, file: !4, line: 5214, baseType: !1042, size: 32, align: 32, offset: 2496)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !2063, file: !4, line: 5216, baseType: !889, size: 32, align: 32, offset: 2528)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "picture_structure", scope: !2063, file: !4, line: 5226, baseType: !927, size: 32, align: 32, offset: 2560)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "output_picture_number", scope: !2063, file: !4, line: 5234, baseType: !1042, size: 32, align: 32, offset: 2592)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2063, file: !4, line: 5239, baseType: !1042, size: 32, align: 32, offset: 2624)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2063, file: !4, line: 5240, baseType: !1042, size: 32, align: 32, offset: 2656)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !2063, file: !4, line: 5245, baseType: !1042, size: 32, align: 32, offset: 2688)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !2063, file: !4, line: 5246, baseType: !1042, size: 32, align: 32, offset: 2720)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2063, file: !4, line: 5256, baseType: !1042, size: 32, align: 32, offset: 2752)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "last_in_packet_buffer", scope: !1377, file: !919, line: 1089, baseType: !2131, size: 64, align: 64, offset: 2240)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64, align: 64)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketList", file: !919, line: 2003, size: 768, align: 64, elements: !2133)
!2133 = !{!2134, !2135}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !2132, file: !919, line: 2004, baseType: !1244, size: 704, align: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2132, file: !919, line: 2005, baseType: !2131, size: 64, align: 64, offset: 704)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "probe_data", scope: !1377, file: !919, line: 1090, baseType: !1230, size: 256, align: 64, offset: 2304)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "pts_buffer", scope: !1377, file: !919, line: 1092, baseType: !2138, size: 1088, align: 64, offset: 2560)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1008, size: 1088, align: 64, elements: !2139)
!2139 = !{!2140}
!2140 = !DISubrange(count: 17)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries", scope: !1377, file: !919, line: 1094, baseType: !2142, size: 64, align: 64, offset: 3648)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64, align: 64)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIndexEntry", file: !919, line: 808, baseType: !2144)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIndexEntry", file: !919, line: 793, size: 192, align: 64, elements: !2145)
!2145 = !{!2146, !2147, !2148, !2149, !2150}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2144, file: !919, line: 794, baseType: !1008, size: 64, align: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !2144, file: !919, line: 795, baseType: !1008, size: 64, align: 64, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2144, file: !919, line: 805, baseType: !1042, size: 2, align: 32, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2144, file: !919, line: 806, baseType: !1042, size: 30, align: 32, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "min_distance", scope: !2144, file: !919, line: 807, baseType: !1042, size: 32, align: 32, offset: 160)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index_entries", scope: !1377, file: !919, line: 1096, baseType: !1042, size: 32, align: 32, offset: 3712)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries_allocated_size", scope: !1377, file: !919, line: 1097, baseType: !1035, size: 32, align: 32, offset: 3744)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "stream_identifier", scope: !1377, file: !919, line: 1104, baseType: !1042, size: 32, align: 32, offset: 3776)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !1377, file: !919, line: 1109, baseType: !1042, size: 32, align: 32, offset: 3808)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !1377, file: !919, line: 1110, baseType: !1042, size: 32, align: 32, offset: 3840)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_stream_idx", scope: !1377, file: !919, line: 1111, baseType: !1042, size: 32, align: 32, offset: 3872)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_size", scope: !1377, file: !919, line: 1113, baseType: !1008, size: 64, align: 64, offset: 3904)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_duration", scope: !1377, file: !919, line: 1114, baseType: !1008, size: 64, align: 64, offset: 3968)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "request_probe", scope: !1377, file: !919, line: 1123, baseType: !1042, size: 32, align: 32, offset: 4032)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "skip_to_keyframe", scope: !1377, file: !919, line: 1128, baseType: !1042, size: 32, align: 32, offset: 4064)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1377, file: !919, line: 1133, baseType: !1042, size: 32, align: 32, offset: 4096)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "start_skip_samples", scope: !1377, file: !919, line: 1142, baseType: !1008, size: 64, align: 64, offset: 4160)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "first_discard_sample", scope: !1377, file: !919, line: 1150, baseType: !1008, size: 64, align: 64, offset: 4224)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "last_discard_sample", scope: !1377, file: !919, line: 1157, baseType: !1008, size: 64, align: 64, offset: 4288)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_decoded_frames", scope: !1377, file: !919, line: 1163, baseType: !1042, size: 32, align: 32, offset: 4352)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "mux_ts_offset", scope: !1377, file: !919, line: 1169, baseType: !1008, size: 64, align: 64, offset: 4416)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !1377, file: !919, line: 1174, baseType: !1008, size: 64, align: 64, offset: 4480)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !1377, file: !919, line: 1186, baseType: !1042, size: 32, align: 32, offset: 4544)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "update_initial_durations_done", scope: !1377, file: !919, line: 1191, baseType: !1042, size: 32, align: 32, offset: 4576)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error", scope: !1377, file: !919, line: 1196, baseType: !2138, size: 1088, align: 64, offset: 4608)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error_count", scope: !1377, file: !919, line: 1197, baseType: !2172, size: 136, align: 8, offset: 5696)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 136, align: 8, elements: !2139)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts_for_order_check", scope: !1377, file: !919, line: 1202, baseType: !1008, size: 64, align: 64, offset: 5888)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ordered", scope: !1377, file: !919, line: 1203, baseType: !1028, size: 8, align: 8, offset: 5952)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "dts_misordered", scope: !1377, file: !919, line: 1204, baseType: !1028, size: 8, align: 8, offset: 5960)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "inject_global_side_data", scope: !1377, file: !919, line: 1209, baseType: !1042, size: 32, align: 32, offset: 5984)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "display_aspect_ratio", scope: !1377, file: !919, line: 1216, baseType: !1048, size: 64, align: 32, offset: 6016)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1377, file: !919, line: 1222, baseType: !2179, size: 64, align: 64, offset: 6080)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64, align: 64)
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStreamInternal", file: !919, line: 840, baseType: !2181)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStreamInternal", file: !1123, line: 149, size: 640, align: 64, elements: !2182)
!2182 = !{!2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2196, !2197}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "reorder", scope: !2181, file: !1123, line: 154, baseType: !1042, size: 32, align: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "bsfcs", scope: !2181, file: !1123, line: 161, baseType: !1652, size: 64, align: 64, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfcs", scope: !2181, file: !1123, line: 162, baseType: !1042, size: 32, align: 32, offset: 128)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_checked", scope: !2181, file: !1123, line: 167, baseType: !1042, size: 32, align: 32, offset: 160)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2181, file: !1123, line: 172, baseType: !1382, size: 64, align: 64, offset: 192)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "avctx_inited", scope: !2181, file: !1123, line: 176, baseType: !1042, size: 32, align: 32, offset: 256)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "orig_codec_id", scope: !2181, file: !1123, line: 178, baseType: !3, size: 32, align: 32, offset: 288)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "extract_extradata", scope: !2181, file: !1123, line: 187, baseType: !2191, size: 192, align: 64, offset: 320)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2181, file: !1123, line: 183, size: 192, align: 64, elements: !2192)
!2192 = !{!2193, !2194, !2195}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "bsf", scope: !2191, file: !1123, line: 184, baseType: !1653, size: 64, align: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !2191, file: !1123, line: 185, baseType: !1243, size: 64, align: 64, offset: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "inited", scope: !2191, file: !1123, line: 186, baseType: !1042, size: 32, align: 32, offset: 128)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "need_context_update", scope: !2181, file: !1123, line: 192, baseType: !1042, size: 32, align: 32, offset: 512)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "priv_pts", scope: !2181, file: !1123, line: 194, baseType: !2198, size: 64, align: 64, offset: 576)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64, align: 64)
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFFrac", file: !1123, line: 63, baseType: !2200)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFFrac", file: !1123, line: 61, size: 192, align: 64, elements: !2201)
!2201 = !{!2202, !2203, !2204}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2200, file: !1123, line: 62, baseType: !1008, size: 64, align: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2200, file: !1123, line: 62, baseType: !1008, size: 64, align: 64, offset: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !2200, file: !1123, line: 62, baseType: !1008, size: 64, align: 64, offset: 128)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1208, file: !919, line: 1417, baseType: !2206, size: 8192, align: 8, offset: 448)
!2206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1109, size: 8192, align: 8, elements: !2207)
!2207 = !{!2208}
!2208 = !DISubrange(count: 1024)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1208, file: !919, line: 1433, baseType: !1491, size: 64, align: 64, offset: 8640)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1208, file: !919, line: 1442, baseType: !1008, size: 64, align: 64, offset: 8704)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1208, file: !919, line: 1452, baseType: !1008, size: 64, align: 64, offset: 8768)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1208, file: !919, line: 1459, baseType: !1008, size: 64, align: 64, offset: 8832)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "packet_size", scope: !1208, file: !919, line: 1461, baseType: !1035, size: 32, align: 32, offset: 8896)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "max_delay", scope: !1208, file: !919, line: 1462, baseType: !1042, size: 32, align: 32, offset: 8928)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1208, file: !919, line: 1468, baseType: !1042, size: 32, align: 32, offset: 8960)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "probesize", scope: !1208, file: !919, line: 1503, baseType: !1008, size: 64, align: 64, offset: 9024)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "max_analyze_duration", scope: !1208, file: !919, line: 1511, baseType: !1008, size: 64, align: 64, offset: 9088)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1208, file: !919, line: 1513, baseType: !1092, size: 64, align: 64, offset: 9152)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1208, file: !919, line: 1514, baseType: !1042, size: 32, align: 32, offset: 9216)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "nb_programs", scope: !1208, file: !919, line: 1516, baseType: !1035, size: 32, align: 32, offset: 9248)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "programs", scope: !1208, file: !919, line: 1517, baseType: !2222, size: 64, align: 64, offset: 9280)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64, align: 64)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 64, align: 64)
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProgram", file: !919, line: 1284, baseType: !2225)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProgram", file: !919, line: 1259, size: 704, align: 64, elements: !2226)
!2226 = !{!2227, !2228, !2229, !2230, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2225, file: !919, line: 1260, baseType: !1042, size: 32, align: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2225, file: !919, line: 1261, baseType: !1042, size: 32, align: 32, offset: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !2225, file: !919, line: 1262, baseType: !909, size: 32, align: 32, offset: 64)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !2225, file: !919, line: 1263, baseType: !2231, size: 64, align: 64, offset: 128)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64, align: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "nb_stream_indexes", scope: !2225, file: !919, line: 1264, baseType: !1035, size: 32, align: 32, offset: 192)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2225, file: !919, line: 1265, baseType: !1546, size: 64, align: 64, offset: 256)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !2225, file: !919, line: 1267, baseType: !1042, size: 32, align: 32, offset: 320)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_pid", scope: !2225, file: !919, line: 1268, baseType: !1042, size: 32, align: 32, offset: 352)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "pcr_pid", scope: !2225, file: !919, line: 1269, baseType: !1042, size: 32, align: 32, offset: 384)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !2225, file: !919, line: 1270, baseType: !1042, size: 32, align: 32, offset: 416)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2225, file: !919, line: 1279, baseType: !1008, size: 64, align: 64, offset: 448)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "end_time", scope: !2225, file: !919, line: 1280, baseType: !1008, size: 64, align: 64, offset: 512)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !2225, file: !919, line: 1282, baseType: !1008, size: 64, align: 64, offset: 576)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !2225, file: !919, line: 1283, baseType: !1042, size: 32, align: 32, offset: 640)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec_id", scope: !1208, file: !919, line: 1523, baseType: !3, size: 32, align: 32, offset: 9344)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec_id", scope: !1208, file: !919, line: 1529, baseType: !3, size: 32, align: 32, offset: 9376)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec_id", scope: !1208, file: !919, line: 1535, baseType: !3, size: 32, align: 32, offset: 9408)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "max_index_size", scope: !1208, file: !919, line: 1547, baseType: !1035, size: 32, align: 32, offset: 9440)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "max_picture_buffer", scope: !1208, file: !919, line: 1553, baseType: !1035, size: 32, align: 32, offset: 9472)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "nb_chapters", scope: !1208, file: !919, line: 1566, baseType: !1035, size: 32, align: 32, offset: 9504)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "chapters", scope: !1208, file: !919, line: 1567, baseType: !2249, size: 64, align: 64, offset: 9536)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64, align: 64)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64, align: 64)
!2251 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVChapter", file: !919, line: 1299, baseType: !2252)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVChapter", file: !919, line: 1294, size: 320, align: 64, elements: !2253)
!2253 = !{!2254, !2255, !2256, !2257, !2258}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2252, file: !919, line: 1295, baseType: !1042, size: 32, align: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !2252, file: !919, line: 1296, baseType: !1048, size: 64, align: 32, offset: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2252, file: !919, line: 1297, baseType: !1008, size: 64, align: 64, offset: 128)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2252, file: !919, line: 1297, baseType: !1008, size: 64, align: 64, offset: 192)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2252, file: !919, line: 1298, baseType: !1546, size: 64, align: 64, offset: 256)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1208, file: !919, line: 1577, baseType: !1546, size: 64, align: 64, offset: 9600)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_realtime", scope: !1208, file: !919, line: 1590, baseType: !1008, size: 64, align: 64, offset: 9664)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "fps_probe_size", scope: !1208, file: !919, line: 1597, baseType: !1042, size: 32, align: 32, offset: 9728)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "error_recognition", scope: !1208, file: !919, line: 1604, baseType: !1042, size: 32, align: 32, offset: 9760)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_callback", scope: !1208, file: !919, line: 1615, baseType: !2264, size: 128, align: 64, offset: 9792)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOInterruptCB", file: !537, line: 61, baseType: !2265)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOInterruptCB", file: !537, line: 58, size: 128, align: 64, elements: !2266)
!2266 = !{!2267, !2268}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2265, file: !537, line: 59, baseType: !1365, size: 64, align: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2265, file: !537, line: 60, baseType: !1091, size: 64, align: 64, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1208, file: !919, line: 1620, baseType: !1042, size: 32, align: 32, offset: 9920)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "max_interleave_delta", scope: !1208, file: !919, line: 1639, baseType: !1008, size: 64, align: 64, offset: 9984)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1208, file: !919, line: 1645, baseType: !1042, size: 32, align: 32, offset: 10048)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1208, file: !919, line: 1652, baseType: !1042, size: 32, align: 32, offset: 10080)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "max_ts_probe", scope: !1208, file: !919, line: 1659, baseType: !1042, size: 32, align: 32, offset: 10112)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_negative_ts", scope: !1208, file: !919, line: 1668, baseType: !1042, size: 32, align: 32, offset: 10144)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "ts_id", scope: !1208, file: !919, line: 1677, baseType: !1042, size: 32, align: 32, offset: 10176)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "audio_preload", scope: !1208, file: !919, line: 1685, baseType: !1042, size: 32, align: 32, offset: 10208)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_duration", scope: !1208, file: !919, line: 1693, baseType: !1042, size: 32, align: 32, offset: 10240)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_size", scope: !1208, file: !919, line: 1701, baseType: !1042, size: 32, align: 32, offset: 10272)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "use_wallclock_as_timestamps", scope: !1208, file: !919, line: 1709, baseType: !1042, size: 32, align: 32, offset: 10304)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "avio_flags", scope: !1208, file: !919, line: 1716, baseType: !1042, size: 32, align: 32, offset: 10336)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "duration_estimation_method", scope: !1208, file: !919, line: 1724, baseType: !933, size: 32, align: 32, offset: 10368)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "skip_initial_bytes", scope: !1208, file: !919, line: 1731, baseType: !1008, size: 64, align: 64, offset: 10432)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "correct_ts_overflow", scope: !1208, file: !919, line: 1738, baseType: !1035, size: 32, align: 32, offset: 10496)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "seek2any", scope: !1208, file: !919, line: 1745, baseType: !1042, size: 32, align: 32, offset: 10528)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "flush_packets", scope: !1208, file: !919, line: 1752, baseType: !1042, size: 32, align: 32, offset: 10560)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "probe_score", scope: !1208, file: !919, line: 1761, baseType: !1042, size: 32, align: 32, offset: 10592)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "format_probesize", scope: !1208, file: !919, line: 1768, baseType: !1042, size: 32, align: 32, offset: 10624)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1208, file: !919, line: 1776, baseType: !1491, size: 64, align: 64, offset: 10688)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "format_whitelist", scope: !1208, file: !919, line: 1784, baseType: !1491, size: 64, align: 64, offset: 10752)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1208, file: !919, line: 1790, baseType: !2291, size: 64, align: 64, offset: 10816)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64, align: 64)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatInternal", file: !919, line: 1321, baseType: !2293)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatInternal", file: !1123, line: 66, size: 1088, align: 64, elements: !2294)
!2294 = !{!2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "nb_interleaved_streams", scope: !2293, file: !1123, line: 71, baseType: !1042, size: 32, align: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "packet_buffer", scope: !2293, file: !1123, line: 78, baseType: !2131, size: 64, align: 64, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "packet_buffer_end", scope: !2293, file: !1123, line: 79, baseType: !2131, size: 64, align: 64, offset: 128)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "data_offset", scope: !2293, file: !1123, line: 82, baseType: !1008, size: 64, align: 64, offset: 192)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer", scope: !2293, file: !1123, line: 90, baseType: !2131, size: 64, align: 64, offset: 256)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer_end", scope: !2293, file: !1123, line: 91, baseType: !2131, size: 64, align: 64, offset: 320)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "parse_queue", scope: !2293, file: !1123, line: 95, baseType: !2131, size: 64, align: 64, offset: 384)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "parse_queue_end", scope: !2293, file: !1123, line: 96, baseType: !2131, size: 64, align: 64, offset: 448)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer_remaining_size", scope: !2293, file: !1123, line: 101, baseType: !1042, size: 32, align: 32, offset: 512)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2293, file: !1123, line: 108, baseType: !1008, size: 64, align: 64, offset: 576)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "offset_timebase", scope: !2293, file: !1123, line: 113, baseType: !1048, size: 64, align: 32, offset: 640)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "missing_ts_warning", scope: !2293, file: !1123, line: 116, baseType: !1042, size: 32, align: 32, offset: 704)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "inject_global_side_data", scope: !2293, file: !1123, line: 119, baseType: !1042, size: 32, align: 32, offset: 736)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_negative_ts_use_pts", scope: !2293, file: !1123, line: 121, baseType: !1042, size: 32, align: 32, offset: 768)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "shortest_end", scope: !2293, file: !1123, line: 126, baseType: !1008, size: 64, align: 64, offset: 832)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2293, file: !1123, line: 131, baseType: !1042, size: 32, align: 32, offset: 896)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "streams_initialized", scope: !2293, file: !1123, line: 136, baseType: !1042, size: 32, align: 32, offset: 928)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "id3v2_meta", scope: !2293, file: !1123, line: 141, baseType: !1546, size: 64, align: 64, offset: 960)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_codec_framerate", scope: !2293, file: !1123, line: 146, baseType: !1042, size: 32, align: 32, offset: 1024)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "io_repositioned", scope: !1208, file: !919, line: 1798, baseType: !1042, size: 32, align: 32, offset: 10880)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !1208, file: !919, line: 1806, baseType: !2316, size: 64, align: 64, offset: 10944)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64, align: 64)
!2317 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !4, line: 3610, baseType: !1392)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1208, file: !919, line: 1814, baseType: !2316, size: 64, align: 64, offset: 11008)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !1208, file: !919, line: 1822, baseType: !2316, size: 64, align: 64, offset: 11072)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !1208, file: !919, line: 1830, baseType: !2316, size: 64, align: 64, offset: 11136)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_header_padding", scope: !1208, file: !919, line: 1837, baseType: !1042, size: 32, align: 32, offset: 11200)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1208, file: !919, line: 1843, baseType: !1091, size: 64, align: 64, offset: 11264)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "control_message_cb", scope: !1208, file: !919, line: 1848, baseType: !2324, size: 64, align: 64, offset: 11328)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_format_control_message", file: !919, line: 1305, baseType: !2325)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64, align: 64)
!2326 = !DISubroutineType(types: !2327)
!2327 = !{!1042, !1207, !1042, !1091, !1575}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "output_ts_offset", scope: !1208, file: !919, line: 1854, baseType: !1008, size: 64, align: 64, offset: 11392)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1208, file: !919, line: 1862, baseType: !1027, size: 64, align: 64, offset: 11456)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec_id", scope: !1208, file: !919, line: 1868, baseType: !3, size: 32, align: 32, offset: 11520)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "open_cb", scope: !1208, file: !919, line: 1889, baseType: !2332, size: 64, align: 64, offset: 11584)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 64, align: 64)
!2333 = !DISubroutineType(types: !2334)
!2334 = !{!1042, !1207, !2335, !1107, !1042, !2336, !2338}
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64, align: 64)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64, align: 64)
!2337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2264)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64, align: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !1208, file: !919, line: 1897, baseType: !1491, size: 64, align: 64, offset: 11648)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "io_open", scope: !1208, file: !919, line: 1919, baseType: !2341, size: 64, align: 64, offset: 11712)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64, align: 64)
!2342 = !DISubroutineType(types: !2343)
!2343 = !{!1042, !1207, !2335, !1107, !1042, !2338}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "io_close", scope: !1208, file: !919, line: 1925, baseType: !2345, size: 64, align: 64, offset: 11776)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64, align: 64)
!2346 = !DISubroutineType(types: !2347)
!2347 = !{null, !1207, !1309}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !1208, file: !919, line: 1932, baseType: !1491, size: 64, align: 64, offset: 11840)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "max_streams", scope: !1208, file: !919, line: 1939, baseType: !1042, size: 32, align: 32, offset: 11904)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "skip_estimate_duration_from_pts", scope: !1208, file: !919, line: 1946, baseType: !1042, size: 32, align: 32, offset: 11936)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !1104, file: !919, line: 549, baseType: !1240, size: 64, align: 64, offset: 704)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "write_trailer", scope: !1104, file: !919, line: 550, baseType: !1204, size: 64, align: 64, offset: 768)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "interleave_packet", scope: !1104, file: !919, line: 554, baseType: !2354, size: 64, align: 64, offset: 832)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64, align: 64)
!2355 = !DISubroutineType(types: !2356)
!2356 = !{!1042, !1207, !1243, !1243, !1042}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "query_codec", scope: !1104, file: !919, line: 563, baseType: !2358, size: 64, align: 64, offset: 896)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 64, align: 64)
!2359 = !DISubroutineType(types: !2360)
!2360 = !{!1042, !3, !1042}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "get_output_timestamp", scope: !1104, file: !919, line: 565, baseType: !2362, size: 64, align: 64, offset: 960)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64, align: 64)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{null, !1207, !1042, !1286, !1286}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "control_message", scope: !1104, file: !919, line: 570, baseType: !2325, size: 64, align: 64, offset: 1024)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "write_uncoded_frame", scope: !1104, file: !919, line: 581, baseType: !2367, size: 64, align: 64, offset: 1088)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 64, align: 64)
!2368 = !DISubroutineType(types: !2369)
!2369 = !{!1042, !1207, !1042, !2370, !1035}
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64, align: 64)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !1104, file: !919, line: 587, baseType: !1294, size: 64, align: 64, offset: 1152)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !1104, file: !919, line: 592, baseType: !1300, size: 64, align: 64, offset: 1216)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !1104, file: !919, line: 597, baseType: !1300, size: 64, align: 64, offset: 1280)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !1104, file: !919, line: 598, baseType: !3, size: 32, align: 32, offset: 1344)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1104, file: !919, line: 608, baseType: !1204, size: 64, align: 64, offset: 1408)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "deinit", scope: !1104, file: !919, line: 617, baseType: !2377, size: 64, align: 64, offset: 1472)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64, align: 64)
!2378 = !DISubroutineType(types: !2379)
!2379 = !{null, !1207}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "check_bitstream", scope: !1104, file: !919, line: 623, baseType: !2381, size: 64, align: 64, offset: 1536)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 64, align: 64)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{!1042, !1207, !2384}
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64, align: 64)
!2385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1244)
!2386 = distinct !DIGlobalVariable(name: "ff_mxf_d10_muxer", scope: !0, file: !939, line: 3124, type: !1103, isLocal: false, isDefinition: true, variable: %struct.AVOutputFormat* @ff_mxf_d10_muxer)
!2387 = distinct !DIGlobalVariable(name: "ff_mxf_opatom_muxer", scope: !0, file: !939, line: 3139, type: !1103, isLocal: false, isDefinition: true, variable: %struct.AVOutputFormat* @ff_mxf_opatom_muxer)
!2388 = distinct !DIGlobalVariable(name: "mxf_muxer_class", scope: !0, file: !939, line: 3071, type: !1129, isLocal: true, isDefinition: true, variable: %struct.AVClass* @mxf_muxer_class)
!2389 = distinct !DIGlobalVariable(name: "mxf_options", scope: !0, file: !939, line: 3064, type: !2390, isLocal: true, isDefinition: true, variable: [10 x %struct.AVOption]* @mxf_options)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2391, size: 5120, align: 64, elements: !2393)
!2391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2392)
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !464, line: 301, baseType: !1141)
!2393 = !{!2394}
!2394 = !DISubrange(count: 10)
!2395 = distinct !DIGlobalVariable(name: "mxf_essence_mappings", scope: !0, file: !939, line: 155, type: !2396, isLocal: true, isDefinition: true, variable: [9 x %struct.anon.1]* @mxf_essence_mappings)
!2396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2397, size: 576, align: 32, elements: !2402)
!2397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2398)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !939, line: 152, size: 64, align: 32, elements: !2399)
!2399 = !{!2400, !2401}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2398, file: !939, line: 153, baseType: !3, size: 32, align: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2398, file: !939, line: 154, baseType: !938, size: 32, align: 32, offset: 32)
!2402 = !{!2403}
!2403 = !DISubrange(count: 9)
!2404 = distinct !DIGlobalVariable(name: "mxf_essence_container_uls", scope: !0, file: !939, line: 174, type: !2405, isLocal: true, isDefinition: true, variable: [32 x %struct.MXFContainerEssenceEntry]* @mxf_essence_container_uls)
!2405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2406, size: 14336, align: 64, elements: !2419)
!2406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2407)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFContainerEssenceEntry", file: !939, line: 109, baseType: !2408)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFContainerEssenceEntry", file: !939, line: 104, size: 448, align: 64, elements: !2409)
!2409 = !{!2410, !2411, !2412, !2413}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "container_ul", scope: !2408, file: !939, line: 105, baseType: !1055, size: 128, align: 8)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "element_ul", scope: !2408, file: !939, line: 106, baseType: !1055, size: 128, align: 8, offset: 128)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ul", scope: !2408, file: !939, line: 107, baseType: !1055, size: 128, align: 8, offset: 256)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "write_desc", scope: !2408, file: !939, line: 108, baseType: !2414, size: 64, align: 64, offset: 384)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64, align: 64)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{null, !2417, !1375}
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64, align: 64)
!2418 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatContext", file: !919, line: 1947, baseType: !1208)
!2419 = !{!2420}
!2420 = !DISubrange(count: 32)
!2421 = distinct !DIGlobalVariable(name: "uuid_base", scope: !0, file: !939, line: 362, type: !2422, isLocal: true, isDefinition: true, variable: [12 x i8]* @uuid_base)
!2422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1093, size: 96, align: 8, elements: !2423)
!2423 = !{!2424}
!2424 = !DISubrange(count: 12)
!2425 = distinct !DIGlobalVariable(name: "mxf_mpegvideo_descriptor_key", scope: !0, file: !939, line: 1123, type: !1062, isLocal: true, isDefinition: true, variable: [16 x i8]* @mxf_mpegvideo_descriptor_key)
!2426 = distinct !DIGlobalVariable(name: "mxf_aes3_descriptor_key", scope: !0, file: !939, line: 1125, type: !1062, isLocal: true, isDefinition: true, variable: [16 x i8]* @mxf_aes3_descriptor_key)
!2427 = distinct !DIGlobalVariable(name: "mxf_wav_descriptor_key", scope: !0, file: !939, line: 1124, type: !1062, isLocal: true, isDefinition: true, variable: [16 x i8]* @mxf_wav_descriptor_key)
!2428 = distinct !DIGlobalVariable(name: "mxf_cdci_descriptor_key", scope: !0, file: !939, line: 1126, type: !1062, isLocal: true, isDefinition: true, variable: [16 x i8]* @mxf_cdci_descriptor_key)
!2429 = distinct !DIGlobalVariable(name: "mxf_generic_sound_descriptor_key", scope: !0, file: !939, line: 1127, type: !1062, isLocal: true, isDefinition: true, variable: [16 x i8]* @mxf_generic_sound_descriptor_key)
!2430 = distinct !DIGlobalVariable(name: "mxf_s436m_anc_descriptor_key", scope: !0, file: !939, line: 1122, type: !1062, isLocal: true, isDefinition: true, variable: [16 x i8]* @mxf_s436m_anc_descriptor_key)
!2431 = distinct !DIGlobalVariable(name: "mxf_mpeg2_codec_uls", scope: !0, file: !939, line: 2238, type: !2432, isLocal: true, isDefinition: true, variable: [10 x [16 x i8]]* @mxf_mpeg2_codec_uls)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1062, size: 1280, align: 8, elements: !2393)
!2433 = distinct !DIGlobalVariable(name: "mxf_dnxhd_codec_uls", scope: !0, file: !939, line: 1995, type: !2434, isLocal: true, isDefinition: true, variable: [20 x %struct.anon.2]* @mxf_dnxhd_codec_uls)
!2434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2435, size: 3200, align: 32, elements: !2440)
!2435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2436)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !939, line: 1992, size: 160, align: 32, elements: !2437)
!2437 = !{!2438, !2439}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "cid", scope: !2436, file: !939, line: 1993, baseType: !1042, size: 32, align: 32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ul", scope: !2436, file: !939, line: 1994, baseType: !1055, size: 128, align: 8, offset: 32)
!2440 = !{!2441}
!2441 = !DISubrange(count: 20)
!2442 = distinct !DIGlobalVariable(name: "mxf_prores_codec_uls", scope: !0, file: !939, line: 1958, type: !2443, isLocal: true, isDefinition: true, variable: [6 x %struct.anon.3]* @mxf_prores_codec_uls)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2444, size: 960, align: 32, elements: !2449)
!2444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2445)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !939, line: 1955, size: 160, align: 32, elements: !2446)
!2446 = !{!2447, !2448}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !2445, file: !939, line: 1956, baseType: !1042, size: 32, align: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ul", scope: !2445, file: !939, line: 1957, baseType: !1055, size: 128, align: 8, offset: 32)
!2449 = !{!2450}
!2450 = !DISubrange(count: 6)
!2451 = distinct !DIGlobalVariable(name: "mxf_h264_num_codec_uls", scope: !2452, file: !939, line: 2172, type: !1045, isLocal: true, isDefinition: true, variable: i32* @mxf_parse_h264_frame.mxf_h264_num_codec_uls)
!2452 = distinct !DISubprogram(name: "mxf_parse_h264_frame", scope: !939, file: !939, line: 2166, type: !2453, isLocal: true, isDefinition: true, scopeLine: 2168, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!2453 = !DISubroutineType(types: !2454)
!2454 = !{!1042, !2417, !1375, !1243, !2455}
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 64, align: 64)
!2456 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFIndexEntry", file: !939, line: 77, baseType: !2457)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFIndexEntry", file: !939, line: 72, size: 192, align: 64, elements: !2458)
!2458 = !{!2459, !2460, !2461, !2462}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2457, file: !939, line: 73, baseType: !1028, size: 8, align: 8)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2457, file: !939, line: 74, baseType: !1039, size: 64, align: 64, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !2457, file: !939, line: 75, baseType: !1035, size: 32, align: 32, offset: 128)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_ref", scope: !2457, file: !939, line: 76, baseType: !1099, size: 16, align: 16, offset: 160)
!2463 = !{}
!2464 = distinct !DIGlobalVariable(name: "mxf_h264_codec_uls", scope: !0, file: !939, line: 2140, type: !2465, isLocal: true, isDefinition: true, variable: [23 x %struct.anon.4]* @mxf_h264_codec_uls)
!2465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2466, size: 5888, align: 32, elements: !2474)
!2466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2467)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !939, line: 2134, size: 256, align: 32, elements: !2468)
!2468 = !{!2469, !2470, !2471, !2472, !2473}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2467, file: !939, line: 2135, baseType: !1055, size: 128, align: 8)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !2467, file: !939, line: 2136, baseType: !1042, size: 32, align: 32, offset: 128)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !2467, file: !939, line: 2137, baseType: !1042, size: 32, align: 32, offset: 160)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced", scope: !2467, file: !939, line: 2138, baseType: !1028, size: 8, align: 8, offset: 192)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "long_gop", scope: !2467, file: !939, line: 2139, baseType: !1042, size: 32, align: 32, offset: 224)
!2474 = !{!2475}
!2475 = !DISubrange(count: 23)
!2476 = distinct !DIGlobalVariable(name: "footer_partition_key", scope: !0, file: !939, line: 370, type: !2477, isLocal: true, isDefinition: true, variable: [16 x i8]* @footer_partition_key)
!2477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1093, size: 128, align: 8, elements: !1057)
!2478 = distinct !DIGlobalVariable(name: "opatom_ul", scope: !0, file: !939, line: 369, type: !2477, isLocal: true, isDefinition: true, variable: [16 x i8]* @opatom_ul)
!2479 = distinct !DIGlobalVariable(name: "op1a_ul", scope: !0, file: !939, line: 368, type: !2477, isLocal: true, isDefinition: true, variable: [16 x i8]* @op1a_ul)
!2480 = distinct !DIGlobalVariable(name: "multiple_desc_ul", scope: !0, file: !939, line: 383, type: !2477, isLocal: true, isDefinition: true, variable: [16 x i8]* @multiple_desc_ul)
!2481 = distinct !DIGlobalVariable(name: "primer_pack_key", scope: !0, file: !939, line: 371, type: !2477, isLocal: true, isDefinition: true, variable: [16 x i8]* @primer_pack_key)
!2482 = distinct !DIGlobalVariable(name: "mxf_local_tag_batch", scope: !0, file: !939, line: 389, type: !2483, isLocal: true, isDefinition: true, variable: [98 x %struct.MXFLocalTagPair]* @mxf_local_tag_batch)
!2483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 15680, align: 32, elements: !2490)
!2484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2485)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFLocalTagPair", file: !939, line: 70, baseType: !2486)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFLocalTagPair", file: !939, line: 67, size: 160, align: 32, elements: !2487)
!2487 = !{!2488, !2489}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "local_tag", scope: !2486, file: !939, line: 68, baseType: !1042, size: 32, align: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2486, file: !939, line: 69, baseType: !1055, size: 128, align: 8, offset: 32)
!2490 = !{!2491}
!2491 = !DISubrange(count: 98)
!2492 = distinct !DIGlobalVariable(name: "mxf_user_comments_local_tag", scope: !0, file: !939, line: 506, type: !2493, isLocal: true, isDefinition: true, variable: [3 x %struct.MXFLocalTagPair]* @mxf_user_comments_local_tag)
!2493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 480, align: 32, elements: !2494)
!2494 = !{!2495}
!2495 = !DISubrange(count: 3)
!2496 = distinct !DIGlobalVariable(name: "header_metadata_key", scope: !0, file: !939, line: 382, type: !2497, isLocal: true, isDefinition: true, variable: [13 x i8]* @header_metadata_key)
!2497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1093, size: 104, align: 8, elements: !2498)
!2498 = !{!2499}
!2499 = !DISubrange(count: 13)
!2500 = distinct !DIGlobalVariable(name: "mxf_indirect_value_utf16le", scope: !0, file: !939, line: 1462, type: !2501, isLocal: true, isDefinition: true, variable: [17 x i8]* @mxf_indirect_value_utf16le)
!2501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1093, size: 136, align: 8, elements: !2139)
!2502 = distinct !DIGlobalVariable(name: "umid_ul", scope: !0, file: !939, line: 363, type: !2497, isLocal: true, isDefinition: true, variable: [13 x i8]* @umid_ul)
!2503 = distinct !DIGlobalVariable(name: "smpte_12m_timecode_track_data_ul", scope: !0, file: !939, line: 917, type: !2477, isLocal: true, isDefinition: true, variable: [16 x i8]* @smpte_12m_timecode_track_data_ul)
!2504 = distinct !DIGlobalVariable(name: "header_open_partition_key", scope: !0, file: !939, line: 374, type: !2477, isLocal: true, isDefinition: true, variable: [16 x i8]* @header_open_partition_key)
!2505 = distinct !DIGlobalVariable(name: "klv_fill_key", scope: !0, file: !939, line: 376, type: !2477, isLocal: true, isDefinition: true, variable: [16 x i8]* @klv_fill_key)
!2506 = distinct !DIGlobalVariable(name: "index_table_segment_key", scope: !0, file: !939, line: 372, type: !2477, isLocal: true, isDefinition: true, variable: [16 x i8]* @index_table_segment_key)
!2507 = distinct !DIGlobalVariable(name: "body_partition_key", scope: !0, file: !939, line: 377, type: !2477, isLocal: true, isDefinition: true, variable: [16 x i8]* @body_partition_key)
!2508 = distinct !DIGlobalVariable(name: "system_metadata_pack_key", scope: !0, file: !939, line: 2606, type: !2477, isLocal: true, isDefinition: true, variable: [16 x i8]* @system_metadata_pack_key)
!2509 = distinct !DIGlobalVariable(name: "system_metadata_package_set_key", scope: !0, file: !939, line: 2607, type: !2477, isLocal: true, isDefinition: true, variable: [16 x i8]* @system_metadata_package_set_key)
!2510 = distinct !DIGlobalVariable(name: "random_index_pack_key", scope: !0, file: !939, line: 373, type: !2477, isLocal: true, isDefinition: true, variable: [16 x i8]* @random_index_pack_key)
!2511 = distinct !DIGlobalVariable(name: "header_closed_partition_key", scope: !0, file: !939, line: 375, type: !2477, isLocal: true, isDefinition: true, variable: [16 x i8]* @header_closed_partition_key)
!2512 = distinct !DIGlobalVariable(name: "mxf_d10_muxer_class", scope: !0, file: !939, line: 3087, type: !1129, isLocal: true, isDefinition: true, variable: %struct.AVClass* @mxf_d10_muxer_class)
!2513 = distinct !DIGlobalVariable(name: "d10_options", scope: !0, file: !939, line: 3078, type: !2514, isLocal: true, isDefinition: true, variable: [11 x %struct.AVOption]* @d10_options)
!2514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2391, size: 5632, align: 64, elements: !2515)
!2515 = !{!2516}
!2516 = !DISubrange(count: 11)
!2517 = distinct !DIGlobalVariable(name: "mxf_opatom_muxer_class", scope: !0, file: !939, line: 3101, type: !1129, isLocal: true, isDefinition: true, variable: %struct.AVClass* @mxf_opatom_muxer_class)
!2518 = distinct !DIGlobalVariable(name: "opatom_options", scope: !0, file: !939, line: 3094, type: !2390, isLocal: true, isDefinition: true, variable: <{ { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @opatom_options)
!2519 = !{i32 2, !"Dwarf Version", i32 4}
!2520 = !{i32 2, !"Debug Info Version", i32 3}
!2521 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2522 = distinct !DISubprogram(name: "mxf_write_header", scope: !939, file: !939, line: 2376, type: !2523, isLocal: true, isDefinition: true, scopeLine: 2377, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{!1042, !2417}
!2525 = !DILocalVariable(name: "q", arg: 1, scope: !2526, file: !1049, line: 159, type: !1048)
!2526 = distinct !DISubprogram(name: "av_inv_q", scope: !1049, file: !1049, line: 159, type: !2527, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!2527 = !DISubroutineType(types: !2528)
!2528 = !{!1048, !1048}
!2529 = !DIExpression()
!2530 = !DILocation(line: 159, column: 77, scope: !2526, inlinedAt: !2531)
!2531 = distinct !DILocation(line: 2523, column: 52, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2533, file: !939, line: 2523, column: 20)
!2533 = distinct !DILexicalBlock(scope: !2534, file: !939, line: 2503, column: 60)
!2534 = distinct !DILexicalBlock(scope: !2535, file: !939, line: 2503, column: 24)
!2535 = distinct !DILexicalBlock(scope: !2536, file: !939, line: 2492, column: 17)
!2536 = distinct !DILexicalBlock(scope: !2537, file: !939, line: 2486, column: 68)
!2537 = distinct !DILexicalBlock(scope: !2538, file: !939, line: 2486, column: 20)
!2538 = distinct !DILexicalBlock(scope: !2539, file: !939, line: 2407, column: 13)
!2539 = distinct !DILexicalBlock(scope: !2540, file: !939, line: 2395, column: 41)
!2540 = distinct !DILexicalBlock(scope: !2541, file: !939, line: 2395, column: 5)
!2541 = distinct !DILexicalBlock(scope: !2522, file: !939, line: 2395, column: 5)
!2542 = !DILocalVariable(name: "r", scope: !2526, file: !1049, line: 161, type: !1048)
!2543 = !DILocation(line: 161, column: 16, scope: !2526, inlinedAt: !2531)
!2544 = !DILocalVariable(name: "x", arg: 1, scope: !2545, file: !2546, line: 66, type: !1034)
!2545 = distinct !DISubprogram(name: "av_bswap32", scope: !2546, file: !2546, line: 66, type: !2547, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!2546 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!2547 = !DISubroutineType(types: !2548)
!2548 = !{!1034, !1034}
!2549 = !DILocation(line: 66, column: 98, scope: !2545, inlinedAt: !2550)
!2550 = distinct !DILocation(line: 2580, column: 40, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2552, file: !939, line: 2579, column: 13)
!2552 = distinct !DILexicalBlock(scope: !2553, file: !939, line: 2575, column: 41)
!2553 = distinct !DILexicalBlock(scope: !2554, file: !939, line: 2575, column: 5)
!2554 = distinct !DILexicalBlock(scope: !2522, file: !939, line: 2575, column: 5)
!2555 = !DILocation(line: 66, column: 98, scope: !2545, inlinedAt: !2556)
!2556 = distinct !DILocation(line: 2582, column: 25, scope: !2551)
!2557 = !DILocation(line: 159, column: 77, scope: !2526, inlinedAt: !2558)
!2558 = distinct !DILocation(line: 2504, column: 34, scope: !2533)
!2559 = !DILocation(line: 161, column: 16, scope: !2526, inlinedAt: !2558)
!2560 = !DILocation(line: 159, column: 77, scope: !2526, inlinedAt: !2561)
!2561 = distinct !DILocation(line: 2443, column: 20, scope: !2562)
!2562 = distinct !DILexicalBlock(scope: !2538, file: !939, line: 2407, column: 61)
!2563 = !DILocation(line: 161, column: 16, scope: !2526, inlinedAt: !2561)
!2564 = !DILocalVariable(name: "s", arg: 1, scope: !2522, file: !939, line: 2376, type: !2417)
!2565 = !DILocation(line: 2376, column: 46, scope: !2522)
!2566 = !DILocalVariable(name: "mxf", scope: !2522, file: !939, line: 2378, type: !2567)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64, align: 64)
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFContext", file: !939, line: 360, baseType: !2569)
!2569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFContext", file: !939, line: 330, size: 1600, align: 64, elements: !2570)
!2570 = !{!2571, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2584, !2585, !2586, !2587, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !2569, file: !939, line: 331, baseType: !2572, size: 64, align: 64)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64, align: 64)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "footer_partition_offset", scope: !2569, file: !939, line: 332, baseType: !1008, size: 64, align: 64, offset: 64)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "essence_container_count", scope: !2569, file: !939, line: 333, baseType: !1042, size: 32, align: 32, offset: 128)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !2569, file: !939, line: 334, baseType: !1048, size: 64, align: 32, offset: 160)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "header_written", scope: !2569, file: !939, line: 335, baseType: !1042, size: 32, align: 32, offset: 224)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries", scope: !2569, file: !939, line: 336, baseType: !2455, size: 64, align: 64, offset: 256)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "edit_units_count", scope: !2569, file: !939, line: 337, baseType: !1035, size: 32, align: 32, offset: 320)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !2569, file: !939, line: 338, baseType: !1039, size: 64, align: 64, offset: 384)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !2569, file: !939, line: 339, baseType: !1028, size: 8, align: 8, offset: 448)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "last_indexed_edit_unit", scope: !2569, file: !939, line: 340, baseType: !1042, size: 32, align: 32, offset: 480)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "body_partition_offset", scope: !2569, file: !939, line: 341, baseType: !2583, size: 64, align: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64, align: 64)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "body_partitions_count", scope: !2569, file: !939, line: 342, baseType: !1035, size: 32, align: 32, offset: 576)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "last_key_index", scope: !2569, file: !939, line: 343, baseType: !1042, size: 32, align: 32, offset: 608)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2569, file: !939, line: 344, baseType: !1039, size: 64, align: 64, offset: 640)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2569, file: !939, line: 345, baseType: !2588, size: 160, align: 32, offset: 704)
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVTimecode", file: !1002, line: 46, baseType: !2589)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1002, line: 41, size: 160, align: 32, elements: !2590)
!2590 = !{!2591, !2592, !2593, !2594}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2589, file: !1002, line: 42, baseType: !1042, size: 32, align: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2589, file: !1002, line: 43, baseType: !1034, size: 32, align: 32, offset: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !2589, file: !1002, line: 44, baseType: !1048, size: 64, align: 32, offset: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "fps", scope: !2589, file: !1002, line: 45, baseType: !1035, size: 32, align: 32, offset: 128)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_track", scope: !2569, file: !939, line: 346, baseType: !1375, size: 64, align: 64, offset: 896)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_base", scope: !2569, file: !939, line: 347, baseType: !1042, size: 32, align: 32, offset: 960)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "edit_unit_byte_count", scope: !2569, file: !939, line: 348, baseType: !1042, size: 32, align: 32, offset: 992)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "content_package_rate", scope: !2569, file: !939, line: 349, baseType: !1042, size: 32, align: 32, offset: 1024)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "body_offset", scope: !2569, file: !939, line: 350, baseType: !1039, size: 64, align: 64, offset: 1088)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "instance_number", scope: !2569, file: !939, line: 351, baseType: !1034, size: 32, align: 32, offset: 1152)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "umid", scope: !2569, file: !939, line: 352, baseType: !1056, size: 128, align: 8, offset: 1184)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "channel_count", scope: !2569, file: !939, line: 353, baseType: !1042, size: 32, align: 32, offset: 1312)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "signal_standard", scope: !2569, file: !939, line: 354, baseType: !1042, size: 32, align: 32, offset: 1344)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_value_count", scope: !2569, file: !939, line: 355, baseType: !1034, size: 32, align: 32, offset: 1376)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "audio_edit_rate", scope: !2569, file: !939, line: 356, baseType: !1048, size: 64, align: 32, offset: 1408)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "store_user_comments", scope: !2569, file: !939, line: 357, baseType: !1042, size: 32, align: 32, offset: 1472)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "track_instance_count", scope: !2569, file: !939, line: 358, baseType: !1042, size: 32, align: 32, offset: 1504)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "cbr_index", scope: !2569, file: !939, line: 359, baseType: !1042, size: 32, align: 32, offset: 1536)
!2609 = !DILocation(line: 2378, column: 17, scope: !2522)
!2610 = !DILocation(line: 2378, column: 23, scope: !2522)
!2611 = !DILocation(line: 2378, column: 26, scope: !2522)
!2612 = !DILocalVariable(name: "i", scope: !2522, file: !939, line: 2379, type: !1042)
!2613 = !DILocation(line: 2379, column: 9, scope: !2522)
!2614 = !DILocalVariable(name: "ret", scope: !2522, file: !939, line: 2379, type: !1042)
!2615 = !DILocation(line: 2379, column: 12, scope: !2522)
!2616 = !DILocalVariable(name: "present", scope: !2522, file: !939, line: 2380, type: !2617)
!2617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 256, align: 8, elements: !2419)
!2618 = !DILocation(line: 2380, column: 13, scope: !2522)
!2619 = !DILocalVariable(name: "spf", scope: !2522, file: !939, line: 2381, type: !2620)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64, align: 64)
!2621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2622)
!2622 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFSamplesPerFrame", file: !973, line: 87, baseType: !2623)
!2623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !973, line: 84, size: 256, align: 32, elements: !2624)
!2624 = !{!2625, !2626}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !2623, file: !973, line: 85, baseType: !1050, size: 64, align: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "samples_per_frame", scope: !2623, file: !973, line: 86, baseType: !2627, size: 192, align: 32, offset: 64)
!2627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 192, align: 32, elements: !2449)
!2628 = !DILocation(line: 2381, column: 31, scope: !2522)
!2629 = !DILocalVariable(name: "timestamp", scope: !2522, file: !939, line: 2382, type: !1008)
!2630 = !DILocation(line: 2382, column: 13, scope: !2522)
!2631 = !DILocation(line: 2384, column: 10, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2522, file: !939, line: 2384, column: 9)
!2633 = !DILocation(line: 2384, column: 13, scope: !2632)
!2634 = !DILocation(line: 2384, column: 9, scope: !2522)
!2635 = !DILocation(line: 2385, column: 9, scope: !2632)
!2636 = !DILocation(line: 2387, column: 9, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2522, file: !939, line: 2387, column: 9)
!2638 = !DILocation(line: 2387, column: 12, scope: !2637)
!2639 = !DILocation(line: 2387, column: 20, scope: !2637)
!2640 = !DILocation(line: 2387, column: 44, scope: !2637)
!2641 = !DILocation(line: 2387, column: 47, scope: !2642)
!2642 = !DILexicalBlockFile(scope: !2637, file: !939, discriminator: 1)
!2643 = !DILocation(line: 2387, column: 50, scope: !2642)
!2644 = !DILocation(line: 2387, column: 61, scope: !2642)
!2645 = !DILocation(line: 2387, column: 9, scope: !2642)
!2646 = !DILocation(line: 2388, column: 16, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2637, file: !939, line: 2387, column: 66)
!2648 = !DILocation(line: 2388, column: 9, scope: !2647)
!2649 = !DILocation(line: 2389, column: 9, scope: !2647)
!2650 = !DILocation(line: 2392, column: 22, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2522, file: !939, line: 2392, column: 9)
!2652 = !DILocation(line: 2392, column: 25, scope: !2651)
!2653 = !DILocation(line: 2392, column: 10, scope: !2651)
!2654 = !DILocation(line: 2392, column: 9, scope: !2522)
!2655 = !DILocation(line: 2393, column: 9, scope: !2651)
!2656 = !DILocation(line: 2393, column: 14, scope: !2651)
!2657 = !DILocation(line: 2393, column: 34, scope: !2651)
!2658 = !DILocation(line: 2395, column: 12, scope: !2541)
!2659 = !DILocation(line: 2395, column: 10, scope: !2541)
!2660 = !DILocation(line: 2395, column: 17, scope: !2661)
!2661 = !DILexicalBlockFile(scope: !2540, file: !939, discriminator: 1)
!2662 = !DILocation(line: 2395, column: 21, scope: !2661)
!2663 = !DILocation(line: 2395, column: 24, scope: !2661)
!2664 = !DILocation(line: 2395, column: 19, scope: !2661)
!2665 = !DILocation(line: 2395, column: 5, scope: !2661)
!2666 = !DILocalVariable(name: "st", scope: !2539, file: !939, line: 2396, type: !1375)
!2667 = !DILocation(line: 2396, column: 19, scope: !2539)
!2668 = !DILocation(line: 2396, column: 35, scope: !2539)
!2669 = !DILocation(line: 2396, column: 24, scope: !2539)
!2670 = !DILocation(line: 2396, column: 27, scope: !2539)
!2671 = !DILocalVariable(name: "sc", scope: !2539, file: !939, line: 2397, type: !1011)
!2672 = !DILocation(line: 2397, column: 27, scope: !2539)
!2673 = !DILocation(line: 2397, column: 32, scope: !2539)
!2674 = !DILocation(line: 2398, column: 14, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2539, file: !939, line: 2398, column: 13)
!2676 = !DILocation(line: 2398, column: 13, scope: !2539)
!2677 = !DILocation(line: 2399, column: 13, scope: !2675)
!2678 = !DILocation(line: 2400, column: 25, scope: !2539)
!2679 = !DILocation(line: 2400, column: 9, scope: !2539)
!2680 = !DILocation(line: 2400, column: 13, scope: !2539)
!2681 = !DILocation(line: 2400, column: 23, scope: !2539)
!2682 = !DILocation(line: 2402, column: 15, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2539, file: !939, line: 2402, column: 13)
!2684 = !DILocation(line: 2402, column: 17, scope: !2683)
!2685 = !DILocation(line: 2402, column: 26, scope: !2683)
!2686 = !DILocation(line: 2402, column: 30, scope: !2683)
!2687 = !DILocation(line: 2402, column: 40, scope: !2683)
!2688 = !DILocation(line: 2402, column: 51, scope: !2683)
!2689 = !DILocation(line: 2402, column: 23, scope: !2683)
!2690 = !DILocation(line: 2402, column: 75, scope: !2683)
!2691 = !DILocation(line: 2402, column: 78, scope: !2692)
!2692 = !DILexicalBlockFile(scope: !2683, file: !939, discriminator: 1)
!2693 = !DILocation(line: 2402, column: 81, scope: !2692)
!2694 = !DILocation(line: 2402, column: 89, scope: !2692)
!2695 = !DILocation(line: 2402, column: 13, scope: !2692)
!2696 = !DILocation(line: 2403, column: 20, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2683, file: !939, line: 2402, column: 114)
!2698 = !DILocation(line: 2403, column: 13, scope: !2697)
!2699 = !DILocation(line: 2404, column: 13, scope: !2697)
!2700 = !DILocation(line: 2407, column: 13, scope: !2538)
!2701 = !DILocation(line: 2407, column: 17, scope: !2538)
!2702 = !DILocation(line: 2407, column: 27, scope: !2538)
!2703 = !DILocation(line: 2407, column: 38, scope: !2538)
!2704 = !DILocation(line: 2407, column: 13, scope: !2539)
!2705 = !DILocalVariable(name: "pix_desc", scope: !2562, file: !939, line: 2408, type: !2706)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64, align: 64)
!2707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2708)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPixFmtDescriptor", file: !2709, line: 123, baseType: !2710)
!2709 = !DIFile(filename: "./libavutil/pixdesc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPixFmtDescriptor", file: !2709, line: 81, size: 1280, align: 64, elements: !2711)
!2711 = !{!2712, !2713, !2714, !2715, !2716, !2717, !2730}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2710, file: !2709, line: 82, baseType: !1107, size: 64, align: 64)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !2710, file: !2709, line: 83, baseType: !1028, size: 8, align: 8, offset: 64)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_w", scope: !2710, file: !2709, line: 92, baseType: !1028, size: 8, align: 8, offset: 72)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_h", scope: !2710, file: !2709, line: 101, baseType: !1028, size: 8, align: 8, offset: 80)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2710, file: !2709, line: 106, baseType: !1039, size: 64, align: 64, offset: 128)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !2710, file: !2709, line: 117, baseType: !2718, size: 1024, align: 32, offset: 192)
!2718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2719, size: 1024, align: 32, elements: !1485)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVComponentDescriptor", file: !2709, line: 70, baseType: !2720)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVComponentDescriptor", file: !2709, line: 31, size: 256, align: 32, elements: !2721)
!2721 = !{!2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !2720, file: !2709, line: 35, baseType: !1042, size: 32, align: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2720, file: !2709, line: 41, baseType: !1042, size: 32, align: 32, offset: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2720, file: !2709, line: 47, baseType: !1042, size: 32, align: 32, offset: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2720, file: !2709, line: 53, baseType: !1042, size: 32, align: 32, offset: 96)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2720, file: !2709, line: 58, baseType: !1042, size: 32, align: 32, offset: 128)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "step_minus1", scope: !2720, file: !2709, line: 62, baseType: !1042, size: 32, align: 32, offset: 160)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "depth_minus1", scope: !2720, file: !2709, line: 65, baseType: !1042, size: 32, align: 32, offset: 192)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "offset_plus1", scope: !2720, file: !2709, line: 68, baseType: !1042, size: 32, align: 32, offset: 224)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2710, file: !2709, line: 122, baseType: !1107, size: 64, align: 64, offset: 1216)
!2731 = !DILocation(line: 2408, column: 39, scope: !2562)
!2732 = !DILocation(line: 2408, column: 70, scope: !2562)
!2733 = !DILocation(line: 2408, column: 74, scope: !2562)
!2734 = !DILocation(line: 2408, column: 84, scope: !2562)
!2735 = !DILocation(line: 2408, column: 50, scope: !2562)
!2736 = !DILocalVariable(name: "rate", scope: !2562, file: !939, line: 2410, type: !1048)
!2737 = !DILocation(line: 2410, column: 24, scope: !2562)
!2738 = !DILocalVariable(name: "tbc", scope: !2562, file: !939, line: 2410, type: !1048)
!2739 = !DILocation(line: 2410, column: 30, scope: !2562)
!2740 = !DILocation(line: 2410, column: 36, scope: !2562)
!2741 = !DILocation(line: 2410, column: 40, scope: !2562)
!2742 = !DILocation(line: 2412, column: 13, scope: !2562)
!2743 = !DILocation(line: 2412, column: 17, scope: !2562)
!2744 = !DILocation(line: 2412, column: 33, scope: !2562)
!2745 = !DILocation(line: 2413, column: 13, scope: !2562)
!2746 = !DILocation(line: 2413, column: 17, scope: !2562)
!2747 = !DILocation(line: 2413, column: 37, scope: !2562)
!2748 = !DILocation(line: 2414, column: 13, scope: !2562)
!2749 = !DILocation(line: 2414, column: 17, scope: !2562)
!2750 = !DILocation(line: 2414, column: 37, scope: !2562)
!2751 = !DILocation(line: 2415, column: 13, scope: !2562)
!2752 = !DILocation(line: 2415, column: 17, scope: !2562)
!2753 = !DILocation(line: 2415, column: 30, scope: !2562)
!2754 = !DILocation(line: 2417, column: 17, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2562, file: !939, line: 2417, column: 17)
!2756 = !DILocation(line: 2417, column: 21, scope: !2755)
!2757 = !DILocation(line: 2417, column: 31, scope: !2755)
!2758 = !DILocation(line: 2417, column: 51, scope: !2755)
!2759 = !DILocation(line: 2417, column: 55, scope: !2755)
!2760 = !DILocation(line: 2417, column: 58, scope: !2761)
!2761 = !DILexicalBlockFile(scope: !2755, file: !939, discriminator: 1)
!2762 = !DILocation(line: 2417, column: 62, scope: !2761)
!2763 = !DILocation(line: 2417, column: 72, scope: !2761)
!2764 = !DILocation(line: 2417, column: 92, scope: !2761)
!2765 = !DILocation(line: 2417, column: 17, scope: !2761)
!2766 = !DILocation(line: 2418, column: 17, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2755, file: !939, line: 2417, column: 97)
!2768 = !DILocation(line: 2418, column: 21, scope: !2767)
!2769 = !DILocation(line: 2418, column: 45, scope: !2767)
!2770 = !DILocation(line: 2418, column: 49, scope: !2767)
!2771 = !DILocation(line: 2418, column: 59, scope: !2767)
!2772 = !DILocation(line: 2419, column: 55, scope: !2767)
!2773 = !DILocation(line: 2419, column: 59, scope: !2767)
!2774 = !DILocation(line: 2419, column: 69, scope: !2767)
!2775 = !DILocation(line: 2419, column: 76, scope: !2767)
!2776 = !DILocation(line: 2419, column: 80, scope: !2767)
!2777 = !DILocation(line: 2419, column: 90, scope: !2767)
!2778 = !DILocation(line: 2419, column: 45, scope: !2767)
!2779 = !DILocation(line: 2418, column: 36, scope: !2767)
!2780 = !DILocation(line: 2418, column: 36, scope: !2781)
!2781 = !DILexicalBlockFile(scope: !2767, file: !939, discriminator: 1)
!2782 = !DILocation(line: 2420, column: 13, scope: !2767)
!2783 = !DILocation(line: 2422, column: 17, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2562, file: !939, line: 2422, column: 17)
!2785 = !DILocation(line: 2422, column: 17, scope: !2562)
!2786 = !DILocation(line: 2423, column: 39, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2784, file: !939, line: 2422, column: 27)
!2788 = !DILocation(line: 2423, column: 49, scope: !2787)
!2789 = !DILocation(line: 2423, column: 57, scope: !2787)
!2790 = !DILocation(line: 2423, column: 17, scope: !2787)
!2791 = !DILocation(line: 2423, column: 21, scope: !2787)
!2792 = !DILocation(line: 2423, column: 37, scope: !2787)
!2793 = !DILocation(line: 2424, column: 48, scope: !2787)
!2794 = !DILocation(line: 2424, column: 58, scope: !2787)
!2795 = !DILocation(line: 2424, column: 45, scope: !2787)
!2796 = !DILocation(line: 2424, column: 17, scope: !2787)
!2797 = !DILocation(line: 2424, column: 21, scope: !2787)
!2798 = !DILocation(line: 2424, column: 41, scope: !2787)
!2799 = !DILocation(line: 2425, column: 48, scope: !2787)
!2800 = !DILocation(line: 2425, column: 58, scope: !2787)
!2801 = !DILocation(line: 2425, column: 45, scope: !2787)
!2802 = !DILocation(line: 2425, column: 17, scope: !2787)
!2803 = !DILocation(line: 2425, column: 21, scope: !2787)
!2804 = !DILocation(line: 2425, column: 41, scope: !2787)
!2805 = !DILocation(line: 2426, column: 13, scope: !2787)
!2806 = !DILocation(line: 2427, column: 47, scope: !2562)
!2807 = !DILocation(line: 2427, column: 50, scope: !2562)
!2808 = !DILocation(line: 2427, column: 21, scope: !2562)
!2809 = !DILocation(line: 2427, column: 13, scope: !2562)
!2810 = !DILocation(line: 2428, column: 40, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2562, file: !939, line: 2427, column: 55)
!2812 = !DILocation(line: 2428, column: 44, scope: !2811)
!2813 = !DILocation(line: 2428, column: 57, scope: !2811)
!2814 = !DILocation(line: 2428, column: 62, scope: !2811)
!2815 = !DILocation(line: 2429, column: 37, scope: !2811)
!2816 = !DILocation(line: 2429, column: 41, scope: !2811)
!2817 = !DILocation(line: 2429, column: 54, scope: !2811)
!2818 = !DILocation(line: 2429, column: 59, scope: !2811)
!2819 = !DILocation(line: 2430, column: 36, scope: !2811)
!2820 = !DILocation(line: 2430, column: 40, scope: !2811)
!2821 = !DILocation(line: 2430, column: 53, scope: !2811)
!2822 = !DILocation(line: 2430, column: 58, scope: !2811)
!2823 = !DILocation(line: 2431, column: 39, scope: !2811)
!2824 = !DILocation(line: 2431, column: 43, scope: !2811)
!2825 = !DILocation(line: 2431, column: 56, scope: !2811)
!2826 = !DILocation(line: 2431, column: 61, scope: !2811)
!2827 = !DILocation(line: 2434, column: 39, scope: !2562)
!2828 = !DILocation(line: 2434, column: 49, scope: !2562)
!2829 = !DILocation(line: 2434, column: 52, scope: !2562)
!2830 = !DILocation(line: 2434, column: 43, scope: !2562)
!2831 = !DILocation(line: 2434, column: 62, scope: !2562)
!2832 = !DILocation(line: 2434, column: 56, scope: !2562)
!2833 = !DILocation(line: 2434, column: 13, scope: !2562)
!2834 = !DILocation(line: 2434, column: 18, scope: !2562)
!2835 = !DILocation(line: 2434, column: 32, scope: !2562)
!2836 = !DILocation(line: 2435, column: 48, scope: !2562)
!2837 = !DILocation(line: 2435, column: 19, scope: !2562)
!2838 = !DILocation(line: 2435, column: 17, scope: !2562)
!2839 = !DILocation(line: 2436, column: 18, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2562, file: !939, line: 2436, column: 17)
!2841 = !DILocation(line: 2436, column: 17, scope: !2562)
!2842 = !DILocation(line: 2437, column: 24, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2840, file: !939, line: 2436, column: 23)
!2844 = !DILocation(line: 2438, column: 28, scope: !2843)
!2845 = !DILocation(line: 2438, column: 37, scope: !2843)
!2846 = !DILocation(line: 2437, column: 17, scope: !2843)
!2847 = !DILocation(line: 2439, column: 17, scope: !2843)
!2848 = !DILocation(line: 2441, column: 41, scope: !2562)
!2849 = !DILocation(line: 2441, column: 13, scope: !2562)
!2850 = !DILocation(line: 2441, column: 18, scope: !2562)
!2851 = !DILocation(line: 2441, column: 39, scope: !2562)
!2852 = !DILocation(line: 2442, column: 13, scope: !2562)
!2853 = !DILocation(line: 2442, column: 18, scope: !2562)
!2854 = !DILocation(line: 2442, column: 30, scope: !2562)
!2855 = !DILocation(line: 2442, column: 35, scope: !2562)
!2856 = !DILocation(line: 2443, column: 29, scope: !2562)
!2857 = !DILocation(line: 2443, column: 34, scope: !2562)
!2858 = !DILocation(line: 2443, column: 20, scope: !2562)
!2859 = !DILocation(line: 161, column: 20, scope: !2526, inlinedAt: !2561)
!2860 = !DILocation(line: 161, column: 24, scope: !2526, inlinedAt: !2561)
!2861 = !DILocation(line: 161, column: 31, scope: !2526, inlinedAt: !2561)
!2862 = !DILocation(line: 162, column: 12, scope: !2526, inlinedAt: !2561)
!2863 = !DILocation(line: 162, column: 5, scope: !2526, inlinedAt: !2561)
!2864 = !DILocation(line: 2443, column: 20, scope: !2865)
!2865 = !DILexicalBlockFile(scope: !2562, file: !939, discriminator: 1)
!2866 = !DILocation(line: 2444, column: 33, scope: !2562)
!2867 = !DILocation(line: 2444, column: 41, scope: !2562)
!2868 = !DILocation(line: 2444, column: 46, scope: !2562)
!2869 = !DILocation(line: 2444, column: 56, scope: !2562)
!2870 = !DILocation(line: 2444, column: 61, scope: !2562)
!2871 = !DILocation(line: 2444, column: 66, scope: !2562)
!2872 = !DILocation(line: 2444, column: 76, scope: !2562)
!2873 = !DILocation(line: 2444, column: 13, scope: !2562)
!2874 = !DILocation(line: 2445, column: 41, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2562, file: !939, line: 2445, column: 16)
!2876 = !DILocation(line: 2445, column: 44, scope: !2875)
!2877 = !DILocation(line: 2445, column: 23, scope: !2875)
!2878 = !DILocation(line: 2445, column: 21, scope: !2875)
!2879 = !DILocation(line: 2445, column: 55, scope: !2875)
!2880 = !DILocation(line: 2445, column: 16, scope: !2562)
!2881 = !DILocation(line: 2446, column: 24, scope: !2875)
!2882 = !DILocation(line: 2446, column: 17, scope: !2875)
!2883 = !DILocation(line: 2448, column: 17, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2562, file: !939, line: 2448, column: 17)
!2885 = !DILocation(line: 2448, column: 21, scope: !2884)
!2886 = !DILocation(line: 2448, column: 31, scope: !2884)
!2887 = !DILocation(line: 2448, column: 40, scope: !2884)
!2888 = !DILocation(line: 2448, column: 17, scope: !2562)
!2889 = !DILocation(line: 2449, column: 17, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2884, file: !939, line: 2448, column: 67)
!2891 = !DILocation(line: 2449, column: 21, scope: !2890)
!2892 = !DILocation(line: 2449, column: 36, scope: !2890)
!2893 = !DILocation(line: 2450, column: 13, scope: !2890)
!2894 = !DILocation(line: 2452, column: 34, scope: !2562)
!2895 = !DILocation(line: 2452, column: 38, scope: !2562)
!2896 = !DILocation(line: 2452, column: 48, scope: !2562)
!2897 = !DILocation(line: 2452, column: 13, scope: !2562)
!2898 = !DILocation(line: 2452, column: 17, scope: !2562)
!2899 = !DILocation(line: 2452, column: 32, scope: !2562)
!2900 = !DILocation(line: 2454, column: 17, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2562, file: !939, line: 2454, column: 17)
!2902 = !DILocation(line: 2454, column: 20, scope: !2901)
!2903 = !DILocation(line: 2454, column: 28, scope: !2901)
!2904 = !DILocation(line: 2454, column: 49, scope: !2901)
!2905 = !DILocation(line: 2455, column: 17, scope: !2901)
!2906 = !DILocation(line: 2455, column: 21, scope: !2901)
!2907 = !DILocation(line: 2455, column: 31, scope: !2901)
!2908 = !DILocation(line: 2455, column: 40, scope: !2901)
!2909 = !DILocation(line: 2455, column: 61, scope: !2901)
!2910 = !DILocation(line: 2456, column: 17, scope: !2901)
!2911 = !DILocation(line: 2456, column: 21, scope: !2901)
!2912 = !DILocation(line: 2456, column: 31, scope: !2901)
!2913 = !DILocation(line: 2456, column: 40, scope: !2901)
!2914 = !DILocation(line: 2454, column: 17, scope: !2865)
!2915 = !DILocation(line: 2457, column: 17, scope: !2901)
!2916 = !DILocation(line: 2457, column: 22, scope: !2901)
!2917 = !DILocation(line: 2457, column: 32, scope: !2901)
!2918 = !DILocation(line: 2459, column: 17, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2562, file: !939, line: 2459, column: 17)
!2920 = !DILocation(line: 2459, column: 20, scope: !2919)
!2921 = !DILocation(line: 2459, column: 28, scope: !2919)
!2922 = !DILocation(line: 2459, column: 17, scope: !2562)
!2923 = !DILocation(line: 2460, column: 21, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2925, file: !939, line: 2460, column: 21)
!2925 = distinct !DILexicalBlock(scope: !2919, file: !939, line: 2459, column: 50)
!2926 = !DILocation(line: 2460, column: 25, scope: !2924)
!2927 = !DILocation(line: 2460, column: 35, scope: !2924)
!2928 = !DILocation(line: 2460, column: 44, scope: !2924)
!2929 = !DILocation(line: 2460, column: 21, scope: !2925)
!2930 = !DILocation(line: 2461, column: 28, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2924, file: !939, line: 2460, column: 71)
!2932 = !DILocation(line: 2461, column: 21, scope: !2931)
!2933 = !DILocation(line: 2462, column: 21, scope: !2931)
!2934 = !DILocation(line: 2464, column: 22, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2925, file: !939, line: 2464, column: 21)
!2936 = !DILocation(line: 2464, column: 26, scope: !2935)
!2937 = !DILocation(line: 2464, column: 41, scope: !2935)
!2938 = !DILocation(line: 2464, column: 54, scope: !2935)
!2939 = !DILocation(line: 2464, column: 58, scope: !2940)
!2940 = !DILexicalBlockFile(scope: !2935, file: !939, discriminator: 1)
!2941 = !DILocation(line: 2464, column: 63, scope: !2940)
!2942 = !DILocation(line: 2464, column: 73, scope: !2940)
!2943 = !DILocation(line: 2464, column: 77, scope: !2940)
!2944 = !DILocation(line: 2464, column: 21, scope: !2940)
!2945 = !DILocation(line: 2465, column: 21, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2935, file: !939, line: 2464, column: 85)
!2947 = !DILocation(line: 2465, column: 25, scope: !2946)
!2948 = !DILocation(line: 2465, column: 31, scope: !2946)
!2949 = !DILocation(line: 2466, column: 17, scope: !2946)
!2950 = !DILocation(line: 2466, column: 29, scope: !2951)
!2951 = !DILexicalBlockFile(scope: !2952, file: !939, discriminator: 1)
!2952 = distinct !DILexicalBlock(scope: !2935, file: !939, line: 2466, column: 28)
!2953 = !DILocation(line: 2466, column: 33, scope: !2951)
!2954 = !DILocation(line: 2466, column: 48, scope: !2951)
!2955 = !DILocation(line: 2466, column: 60, scope: !2951)
!2956 = !DILocation(line: 2466, column: 63, scope: !2957)
!2957 = !DILexicalBlockFile(scope: !2952, file: !939, discriminator: 2)
!2958 = !DILocation(line: 2466, column: 67, scope: !2957)
!2959 = !DILocation(line: 2466, column: 82, scope: !2957)
!2960 = !DILocation(line: 2466, column: 95, scope: !2957)
!2961 = !DILocation(line: 2466, column: 99, scope: !2962)
!2962 = !DILexicalBlockFile(scope: !2952, file: !939, discriminator: 3)
!2963 = !DILocation(line: 2466, column: 104, scope: !2962)
!2964 = !DILocation(line: 2466, column: 114, scope: !2962)
!2965 = !DILocation(line: 2466, column: 118, scope: !2962)
!2966 = !DILocation(line: 2466, column: 28, scope: !2962)
!2967 = !DILocation(line: 2467, column: 21, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2952, file: !939, line: 2466, column: 126)
!2969 = !DILocation(line: 2467, column: 25, scope: !2968)
!2970 = !DILocation(line: 2467, column: 31, scope: !2968)
!2971 = !DILocation(line: 2468, column: 17, scope: !2968)
!2972 = !DILocation(line: 2468, column: 28, scope: !2973)
!2973 = !DILexicalBlockFile(scope: !2974, file: !939, discriminator: 1)
!2974 = distinct !DILexicalBlock(scope: !2952, file: !939, line: 2468, column: 28)
!2975 = !DILocation(line: 2468, column: 32, scope: !2973)
!2976 = !DILocation(line: 2468, column: 47, scope: !2973)
!2977 = !DILocation(line: 2469, column: 25, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2979, file: !939, line: 2469, column: 25)
!2979 = distinct !DILexicalBlock(scope: !2974, file: !939, line: 2468, column: 60)
!2980 = !DILocation(line: 2469, column: 30, scope: !2978)
!2981 = !DILocation(line: 2469, column: 40, scope: !2978)
!2982 = !DILocation(line: 2469, column: 44, scope: !2978)
!2983 = !DILocation(line: 2469, column: 25, scope: !2979)
!2984 = !DILocation(line: 2469, column: 51, scope: !2985)
!2985 = !DILexicalBlockFile(scope: !2978, file: !939, discriminator: 1)
!2986 = !DILocation(line: 2469, column: 55, scope: !2985)
!2987 = !DILocation(line: 2469, column: 61, scope: !2985)
!2988 = !DILocation(line: 2470, column: 26, scope: !2978)
!2989 = !DILocation(line: 2470, column: 30, scope: !2978)
!2990 = !DILocation(line: 2470, column: 36, scope: !2978)
!2991 = !DILocation(line: 2471, column: 17, scope: !2979)
!2992 = !DILocation(line: 2471, column: 28, scope: !2993)
!2993 = !DILexicalBlockFile(scope: !2994, file: !939, discriminator: 1)
!2994 = distinct !DILexicalBlock(scope: !2974, file: !939, line: 2471, column: 28)
!2995 = !DILocation(line: 2471, column: 32, scope: !2993)
!2996 = !DILocation(line: 2471, column: 47, scope: !2993)
!2997 = !DILocation(line: 2472, column: 25, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2999, file: !939, line: 2472, column: 25)
!2999 = distinct !DILexicalBlock(scope: !2994, file: !939, line: 2471, column: 60)
!3000 = !DILocation(line: 2472, column: 30, scope: !2998)
!3001 = !DILocation(line: 2472, column: 40, scope: !2998)
!3002 = !DILocation(line: 2472, column: 44, scope: !2998)
!3003 = !DILocation(line: 2472, column: 25, scope: !2999)
!3004 = !DILocation(line: 2472, column: 51, scope: !3005)
!3005 = !DILexicalBlockFile(scope: !2998, file: !939, discriminator: 1)
!3006 = !DILocation(line: 2472, column: 55, scope: !3005)
!3007 = !DILocation(line: 2472, column: 61, scope: !3005)
!3008 = !DILocation(line: 2473, column: 26, scope: !2998)
!3009 = !DILocation(line: 2473, column: 30, scope: !2998)
!3010 = !DILocation(line: 2473, column: 36, scope: !2998)
!3011 = !DILocation(line: 2474, column: 17, scope: !2999)
!3012 = !DILocation(line: 2475, column: 28, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !2994, file: !939, line: 2474, column: 24)
!3014 = !DILocation(line: 2475, column: 21, scope: !3013)
!3015 = !DILocation(line: 2476, column: 21, scope: !3013)
!3016 = !DILocation(line: 2479, column: 17, scope: !2925)
!3017 = !DILocation(line: 2479, column: 21, scope: !2925)
!3018 = !DILocation(line: 2479, column: 37, scope: !2925)
!3019 = !DILocation(line: 2480, column: 17, scope: !2925)
!3020 = !DILocation(line: 2480, column: 21, scope: !2925)
!3021 = !DILocation(line: 2480, column: 34, scope: !2925)
!3022 = !DILocation(line: 2481, column: 43, scope: !2925)
!3023 = !DILocation(line: 2481, column: 47, scope: !2925)
!3024 = !DILocation(line: 2481, column: 34, scope: !2925)
!3025 = !DILocation(line: 2482, column: 21, scope: !2925)
!3026 = !DILocation(line: 2482, column: 26, scope: !2925)
!3027 = !DILocation(line: 2482, column: 36, scope: !2925)
!3028 = !DILocation(line: 2481, column: 62, scope: !2925)
!3029 = !DILocation(line: 2482, column: 45, scope: !2925)
!3030 = !DILocation(line: 2482, column: 50, scope: !2925)
!3031 = !DILocation(line: 2482, column: 60, scope: !2925)
!3032 = !DILocation(line: 2482, column: 44, scope: !2925)
!3033 = !DILocation(line: 2482, column: 42, scope: !2925)
!3034 = !DILocation(line: 2482, column: 40, scope: !2925)
!3035 = !DILocation(line: 2481, column: 17, scope: !2925)
!3036 = !DILocation(line: 2481, column: 21, scope: !2925)
!3037 = !DILocation(line: 2481, column: 32, scope: !2925)
!3038 = !DILocation(line: 2483, column: 13, scope: !2925)
!3039 = !DILocation(line: 2484, column: 17, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !2562, file: !939, line: 2484, column: 17)
!3041 = !DILocation(line: 2484, column: 22, scope: !3040)
!3042 = !DILocation(line: 2484, column: 38, scope: !3040)
!3043 = !DILocation(line: 2484, column: 17, scope: !2562)
!3044 = !DILocation(line: 2485, column: 39, scope: !3040)
!3045 = !DILocation(line: 2485, column: 44, scope: !3040)
!3046 = !DILocation(line: 2485, column: 17, scope: !3040)
!3047 = !DILocation(line: 2485, column: 21, scope: !3040)
!3048 = !DILocation(line: 2485, column: 37, scope: !3040)
!3049 = !DILocation(line: 2486, column: 9, scope: !2562)
!3050 = !DILocation(line: 2486, column: 20, scope: !3051)
!3051 = !DILexicalBlockFile(scope: !2537, file: !939, discriminator: 1)
!3052 = !DILocation(line: 2486, column: 24, scope: !3051)
!3053 = !DILocation(line: 2486, column: 34, scope: !3051)
!3054 = !DILocation(line: 2486, column: 45, scope: !3051)
!3055 = !DILocation(line: 2487, column: 17, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !2536, file: !939, line: 2487, column: 17)
!3057 = !DILocation(line: 2487, column: 21, scope: !3056)
!3058 = !DILocation(line: 2487, column: 31, scope: !3056)
!3059 = !DILocation(line: 2487, column: 43, scope: !3056)
!3060 = !DILocation(line: 2487, column: 17, scope: !2536)
!3061 = !DILocation(line: 2488, column: 24, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3056, file: !939, line: 2487, column: 53)
!3063 = !DILocation(line: 2488, column: 17, scope: !3062)
!3064 = !DILocation(line: 2489, column: 17, scope: !3062)
!3065 = !DILocation(line: 2491, column: 33, scope: !2536)
!3066 = !DILocation(line: 2491, column: 44, scope: !2536)
!3067 = !DILocation(line: 2491, column: 48, scope: !2536)
!3068 = !DILocation(line: 2491, column: 58, scope: !2536)
!3069 = !DILocation(line: 2491, column: 13, scope: !2536)
!3070 = !DILocation(line: 2492, column: 17, scope: !2535)
!3071 = !DILocation(line: 2492, column: 20, scope: !2535)
!3072 = !DILocation(line: 2492, column: 28, scope: !2535)
!3073 = !DILocation(line: 2492, column: 17, scope: !2536)
!3074 = !DILocation(line: 2493, column: 21, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3076, file: !939, line: 2493, column: 21)
!3076 = distinct !DILexicalBlock(scope: !2535, file: !939, line: 2492, column: 50)
!3077 = !DILocation(line: 2493, column: 25, scope: !3075)
!3078 = !DILocation(line: 2493, column: 31, scope: !3075)
!3079 = !DILocation(line: 2493, column: 21, scope: !3076)
!3080 = !DILocation(line: 2494, column: 28, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3075, file: !939, line: 2493, column: 37)
!3082 = !DILocation(line: 2494, column: 21, scope: !3081)
!3083 = !DILocation(line: 2495, column: 21, scope: !3081)
!3084 = !DILocation(line: 2497, column: 21, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3076, file: !939, line: 2497, column: 21)
!3086 = !DILocation(line: 2497, column: 25, scope: !3085)
!3087 = !DILocation(line: 2497, column: 35, scope: !3085)
!3088 = !DILocation(line: 2497, column: 44, scope: !3085)
!3089 = !DILocation(line: 2497, column: 69, scope: !3085)
!3090 = !DILocation(line: 2498, column: 21, scope: !3085)
!3091 = !DILocation(line: 2498, column: 25, scope: !3085)
!3092 = !DILocation(line: 2498, column: 35, scope: !3085)
!3093 = !DILocation(line: 2498, column: 44, scope: !3085)
!3094 = !DILocation(line: 2497, column: 21, scope: !3095)
!3095 = !DILexicalBlockFile(scope: !3076, file: !939, discriminator: 1)
!3096 = !DILocation(line: 2499, column: 28, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3085, file: !939, line: 2498, column: 70)
!3098 = !DILocation(line: 2499, column: 21, scope: !3097)
!3099 = !DILocation(line: 2500, column: 17, scope: !3097)
!3100 = !DILocation(line: 2501, column: 49, scope: !3076)
!3101 = !DILocation(line: 2501, column: 52, scope: !3076)
!3102 = !DILocation(line: 2501, column: 64, scope: !3076)
!3103 = !DILocation(line: 2501, column: 30, scope: !3076)
!3104 = !DILocation(line: 2501, column: 76, scope: !3076)
!3105 = !DILocation(line: 2501, column: 82, scope: !3076)
!3106 = !DILocation(line: 2501, column: 17, scope: !3076)
!3107 = !DILocation(line: 2501, column: 21, scope: !3076)
!3108 = !DILocation(line: 2501, column: 27, scope: !3076)
!3109 = !DILocation(line: 2502, column: 42, scope: !3076)
!3110 = !DILocation(line: 2502, column: 49, scope: !3076)
!3111 = !DILocation(line: 2502, column: 40, scope: !3076)
!3112 = !DILocation(line: 2502, column: 70, scope: !3076)
!3113 = !DILocation(line: 2502, column: 36, scope: !3076)
!3114 = !DILocation(line: 2502, column: 17, scope: !3076)
!3115 = !DILocation(line: 2502, column: 21, scope: !3076)
!3116 = !DILocation(line: 2502, column: 32, scope: !3076)
!3117 = !DILocation(line: 2503, column: 13, scope: !3076)
!3118 = !DILocation(line: 2503, column: 24, scope: !3119)
!3119 = !DILexicalBlockFile(scope: !2534, file: !939, discriminator: 1)
!3120 = !DILocation(line: 2503, column: 27, scope: !3119)
!3121 = !DILocation(line: 2503, column: 35, scope: !3119)
!3122 = !DILocalVariable(name: "tbc", scope: !2533, file: !939, line: 2504, type: !1048)
!3123 = !DILocation(line: 2504, column: 28, scope: !2533)
!3124 = !DILocation(line: 2504, column: 43, scope: !2533)
!3125 = !DILocation(line: 2504, column: 48, scope: !2533)
!3126 = !DILocation(line: 2504, column: 34, scope: !2533)
!3127 = !DILocation(line: 161, column: 20, scope: !2526, inlinedAt: !2558)
!3128 = !DILocation(line: 161, column: 24, scope: !2526, inlinedAt: !2558)
!3129 = !DILocation(line: 161, column: 31, scope: !2526, inlinedAt: !2558)
!3130 = !DILocation(line: 162, column: 12, scope: !2526, inlinedAt: !2558)
!3131 = !DILocation(line: 162, column: 5, scope: !2526, inlinedAt: !2558)
!3132 = !DILocation(line: 2506, column: 21, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !2533, file: !939, line: 2506, column: 21)
!3134 = !DILocation(line: 2506, column: 25, scope: !3133)
!3135 = !DILocation(line: 2506, column: 35, scope: !3133)
!3136 = !DILocation(line: 2506, column: 44, scope: !3133)
!3137 = !DILocation(line: 2506, column: 69, scope: !3133)
!3138 = !DILocation(line: 2507, column: 21, scope: !3133)
!3139 = !DILocation(line: 2507, column: 25, scope: !3133)
!3140 = !DILocation(line: 2507, column: 35, scope: !3133)
!3141 = !DILocation(line: 2507, column: 44, scope: !3133)
!3142 = !DILocation(line: 2506, column: 21, scope: !3143)
!3143 = !DILexicalBlockFile(scope: !2533, file: !939, discriminator: 1)
!3144 = !DILocation(line: 2508, column: 28, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3133, file: !939, line: 2507, column: 70)
!3146 = !DILocation(line: 2508, column: 21, scope: !3145)
!3147 = !DILocation(line: 2509, column: 21, scope: !3145)
!3148 = !DILocation(line: 2511, column: 21, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !2533, file: !939, line: 2511, column: 21)
!3150 = !DILocation(line: 2511, column: 25, scope: !3149)
!3151 = !DILocation(line: 2511, column: 35, scope: !3149)
!3152 = !DILocation(line: 2511, column: 44, scope: !3149)
!3153 = !DILocation(line: 2511, column: 21, scope: !2533)
!3154 = !DILocation(line: 2512, column: 28, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3149, file: !939, line: 2511, column: 50)
!3156 = !DILocation(line: 2512, column: 21, scope: !3155)
!3157 = !DILocation(line: 2513, column: 21, scope: !3155)
!3158 = !DILocation(line: 2516, column: 52, scope: !2533)
!3159 = !DILocation(line: 2516, column: 23, scope: !2533)
!3160 = !DILocation(line: 2516, column: 21, scope: !2533)
!3161 = !DILocation(line: 2517, column: 22, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !2533, file: !939, line: 2517, column: 21)
!3163 = !DILocation(line: 2517, column: 21, scope: !2533)
!3164 = !DILocation(line: 2518, column: 28, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3162, file: !939, line: 2517, column: 27)
!3166 = !DILocation(line: 2518, column: 82, scope: !3165)
!3167 = !DILocation(line: 2518, column: 91, scope: !3165)
!3168 = !DILocation(line: 2518, column: 21, scope: !3165)
!3169 = !DILocation(line: 2519, column: 21, scope: !3165)
!3170 = !DILocation(line: 2522, column: 17, scope: !2533)
!3171 = !DILocation(line: 2522, column: 22, scope: !2533)
!3172 = !DILocation(line: 2522, column: 34, scope: !2533)
!3173 = !DILocation(line: 2522, column: 38, scope: !2533)
!3174 = !DILocation(line: 2523, column: 45, scope: !2532)
!3175 = !DILocation(line: 2523, column: 48, scope: !2532)
!3176 = !DILocation(line: 2523, column: 61, scope: !2532)
!3177 = !DILocation(line: 2523, column: 66, scope: !2532)
!3178 = !DILocation(line: 2523, column: 52, scope: !2532)
!3179 = !DILocation(line: 161, column: 20, scope: !2526, inlinedAt: !2531)
!3180 = !DILocation(line: 161, column: 24, scope: !2526, inlinedAt: !2531)
!3181 = !DILocation(line: 161, column: 31, scope: !2526, inlinedAt: !2531)
!3182 = !DILocation(line: 162, column: 12, scope: !2526, inlinedAt: !2531)
!3183 = !DILocation(line: 162, column: 5, scope: !2526, inlinedAt: !2531)
!3184 = !DILocation(line: 2523, column: 27, scope: !2532)
!3185 = !DILocation(line: 2523, column: 27, scope: !3186)
!3186 = !DILexicalBlockFile(scope: !2532, file: !939, discriminator: 1)
!3187 = !DILocation(line: 2523, column: 25, scope: !2532)
!3188 = !DILocation(line: 2523, column: 79, scope: !2532)
!3189 = !DILocation(line: 2523, column: 20, scope: !2533)
!3190 = !DILocation(line: 2524, column: 28, scope: !2532)
!3191 = !DILocation(line: 2524, column: 21, scope: !2532)
!3192 = !DILocation(line: 2526, column: 43, scope: !2533)
!3193 = !DILocation(line: 2526, column: 53, scope: !2533)
!3194 = !DILocation(line: 2526, column: 56, scope: !2533)
!3195 = !DILocation(line: 2526, column: 47, scope: !2533)
!3196 = !DILocation(line: 2526, column: 66, scope: !2533)
!3197 = !DILocation(line: 2526, column: 60, scope: !2533)
!3198 = !DILocation(line: 2526, column: 17, scope: !2533)
!3199 = !DILocation(line: 2526, column: 22, scope: !2533)
!3200 = !DILocation(line: 2526, column: 36, scope: !2533)
!3201 = !DILocation(line: 2527, column: 69, scope: !2533)
!3202 = !DILocation(line: 2527, column: 73, scope: !2533)
!3203 = !DILocation(line: 2527, column: 83, scope: !2533)
!3204 = !DILocation(line: 2527, column: 46, scope: !2533)
!3205 = !DILocation(line: 2527, column: 95, scope: !2533)
!3206 = !DILocation(line: 2527, column: 99, scope: !2533)
!3207 = !DILocation(line: 2527, column: 109, scope: !2533)
!3208 = !DILocation(line: 2527, column: 93, scope: !2533)
!3209 = !DILocation(line: 2527, column: 119, scope: !2533)
!3210 = !DILocation(line: 2527, column: 17, scope: !2533)
!3211 = !DILocation(line: 2527, column: 22, scope: !2533)
!3212 = !DILocation(line: 2527, column: 43, scope: !2533)
!3213 = !DILocation(line: 2528, column: 17, scope: !2533)
!3214 = !DILocation(line: 2528, column: 21, scope: !2533)
!3215 = !DILocation(line: 2528, column: 27, scope: !2533)
!3216 = !DILocation(line: 2529, column: 13, scope: !2533)
!3217 = !DILocation(line: 2530, column: 17, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !2534, file: !939, line: 2529, column: 20)
!3219 = !DILocation(line: 2530, column: 22, scope: !3218)
!3220 = !DILocation(line: 2530, column: 34, scope: !3218)
!3221 = !DILocation(line: 2531, column: 35, scope: !3218)
!3222 = !DILocation(line: 2531, column: 39, scope: !3218)
!3223 = !DILocation(line: 2531, column: 49, scope: !3218)
!3224 = !DILocation(line: 2531, column: 60, scope: !3218)
!3225 = !DILocation(line: 2531, column: 67, scope: !3218)
!3226 = !DILocation(line: 2531, column: 58, scope: !3218)
!3227 = !DILocation(line: 2532, column: 58, scope: !3218)
!3228 = !DILocation(line: 2532, column: 62, scope: !3218)
!3229 = !DILocation(line: 2532, column: 72, scope: !3218)
!3230 = !DILocation(line: 2532, column: 35, scope: !3218)
!3231 = !DILocation(line: 2531, column: 88, scope: !3218)
!3232 = !DILocation(line: 2532, column: 83, scope: !3218)
!3233 = !DILocation(line: 2531, column: 17, scope: !3218)
!3234 = !DILocation(line: 2531, column: 21, scope: !3218)
!3235 = !DILocation(line: 2531, column: 32, scope: !3218)
!3236 = !DILocation(line: 2534, column: 9, scope: !2536)
!3237 = !DILocation(line: 2534, column: 20, scope: !3238)
!3238 = !DILexicalBlockFile(scope: !3239, file: !939, discriminator: 1)
!3239 = distinct !DILexicalBlock(scope: !2537, file: !939, line: 2534, column: 20)
!3240 = !DILocation(line: 2534, column: 24, scope: !3238)
!3241 = !DILocation(line: 2534, column: 34, scope: !3238)
!3242 = !DILocation(line: 2534, column: 45, scope: !3238)
!3243 = !DILocalVariable(name: "e", scope: !3244, file: !939, line: 2535, type: !3245)
!3244 = distinct !DILexicalBlock(scope: !3239, file: !939, line: 2534, column: 67)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64, align: 64)
!3246 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionaryEntry", file: !1548, line: 84, baseType: !3247)
!3247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionaryEntry", file: !1548, line: 81, size: 128, align: 64, elements: !3248)
!3248 = !{!3249, !3250}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3247, file: !1548, line: 82, baseType: !1491, size: 64, align: 64)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3247, file: !1548, line: 83, baseType: !1491, size: 64, align: 64, offset: 64)
!3251 = !DILocation(line: 2535, column: 32, scope: !3244)
!3252 = !DILocation(line: 2535, column: 48, scope: !3244)
!3253 = !DILocation(line: 2535, column: 52, scope: !3244)
!3254 = !DILocation(line: 2535, column: 36, scope: !3244)
!3255 = !DILocation(line: 2536, column: 17, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3244, file: !939, line: 2536, column: 17)
!3257 = !DILocation(line: 2536, column: 19, scope: !3256)
!3258 = !DILocation(line: 2536, column: 30, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3256, file: !939, discriminator: 1)
!3260 = !DILocation(line: 2536, column: 33, scope: !3259)
!3261 = !DILocation(line: 2536, column: 23, scope: !3259)
!3262 = !DILocation(line: 2536, column: 17, scope: !3259)
!3263 = !DILocation(line: 2537, column: 17, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3256, file: !939, line: 2536, column: 64)
!3265 = !DILocation(line: 2537, column: 21, scope: !3264)
!3266 = !DILocation(line: 2537, column: 27, scope: !3264)
!3267 = !DILocation(line: 2538, column: 13, scope: !3264)
!3268 = !DILocation(line: 2539, column: 24, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3256, file: !939, line: 2538, column: 20)
!3270 = !DILocation(line: 2539, column: 68, scope: !3269)
!3271 = !DILocation(line: 2539, column: 17, scope: !3269)
!3272 = !DILocation(line: 2540, column: 17, scope: !3269)
!3273 = !DILocation(line: 2542, column: 17, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3244, file: !939, line: 2542, column: 17)
!3275 = !DILocation(line: 2542, column: 21, scope: !3274)
!3276 = !DILocation(line: 2542, column: 30, scope: !3274)
!3277 = !DILocation(line: 2542, column: 33, scope: !3274)
!3278 = !DILocation(line: 2542, column: 44, scope: !3274)
!3279 = !DILocation(line: 2542, column: 27, scope: !3274)
!3280 = !DILocation(line: 2542, column: 17, scope: !3244)
!3281 = !DILocation(line: 2543, column: 24, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3274, file: !939, line: 2542, column: 49)
!3283 = !DILocation(line: 2543, column: 17, scope: !3282)
!3284 = !DILocation(line: 2544, column: 17, scope: !3282)
!3285 = !DILocation(line: 2546, column: 9, scope: !3244)
!3286 = !DILocation(line: 2548, column: 14, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !2539, file: !939, line: 2548, column: 13)
!3288 = !DILocation(line: 2548, column: 18, scope: !3287)
!3289 = !DILocation(line: 2548, column: 13, scope: !2539)
!3290 = !DILocation(line: 2549, column: 60, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3287, file: !939, line: 2548, column: 25)
!3292 = !DILocation(line: 2549, column: 64, scope: !3291)
!3293 = !DILocation(line: 2549, column: 74, scope: !3291)
!3294 = !DILocation(line: 2549, column: 25, scope: !3291)
!3295 = !DILocation(line: 2549, column: 13, scope: !3291)
!3296 = !DILocation(line: 2549, column: 17, scope: !3291)
!3297 = !DILocation(line: 2549, column: 23, scope: !3291)
!3298 = !DILocation(line: 2550, column: 17, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3291, file: !939, line: 2550, column: 17)
!3300 = !DILocation(line: 2550, column: 21, scope: !3299)
!3301 = !DILocation(line: 2550, column: 27, scope: !3299)
!3302 = !DILocation(line: 2550, column: 17, scope: !3291)
!3303 = !DILocation(line: 2551, column: 24, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3299, file: !939, line: 2550, column: 34)
!3305 = !DILocation(line: 2552, column: 72, scope: !3304)
!3306 = !DILocation(line: 2551, column: 17, scope: !3304)
!3307 = !DILocation(line: 2553, column: 17, scope: !3304)
!3308 = !DILocation(line: 2555, column: 9, scope: !3291)
!3309 = !DILocation(line: 2557, column: 51, scope: !2539)
!3310 = !DILocation(line: 2557, column: 55, scope: !2539)
!3311 = !DILocation(line: 2557, column: 25, scope: !2539)
!3312 = !DILocation(line: 2557, column: 62, scope: !2539)
!3313 = !DILocation(line: 2557, column: 9, scope: !2539)
!3314 = !DILocation(line: 2557, column: 13, scope: !2539)
!3315 = !DILocation(line: 2557, column: 22, scope: !2539)
!3316 = !DILocation(line: 2559, column: 16, scope: !2539)
!3317 = !DILocation(line: 2559, column: 20, scope: !2539)
!3318 = !DILocation(line: 2559, column: 9, scope: !2539)
!3319 = !DILocation(line: 2559, column: 73, scope: !2539)
!3320 = !DILocation(line: 2559, column: 77, scope: !2539)
!3321 = !DILocation(line: 2559, column: 47, scope: !2539)
!3322 = !DILocation(line: 2559, column: 84, scope: !2539)
!3323 = !DILocation(line: 2560, column: 53, scope: !2539)
!3324 = !DILocation(line: 2560, column: 57, scope: !2539)
!3325 = !DILocation(line: 2560, column: 45, scope: !2539)
!3326 = !DILocation(line: 2560, column: 9, scope: !2539)
!3327 = !DILocation(line: 2560, column: 13, scope: !2539)
!3328 = !DILocation(line: 2560, column: 43, scope: !2539)
!3329 = !DILocation(line: 2561, column: 9, scope: !2539)
!3330 = distinct !{!3330, !3329}
!3331 = !DILocation(line: 2561, column: 777, scope: !3332)
!3332 = !DILexicalBlockFile(scope: !3333, file: !939, discriminator: 1)
!3333 = distinct !DILexicalBlock(scope: !2539, file: !939, line: 2561, column: 12)
!3334 = !DILocation(line: 2563, column: 22, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !2539, file: !939, line: 2563, column: 13)
!3336 = !DILocation(line: 2563, column: 26, scope: !3335)
!3337 = !DILocation(line: 2563, column: 14, scope: !3335)
!3338 = !DILocation(line: 2563, column: 13, scope: !2539)
!3339 = !DILocation(line: 2564, column: 13, scope: !3335)
!3340 = !DILocation(line: 2564, column: 18, scope: !3335)
!3341 = !DILocation(line: 2564, column: 41, scope: !3335)
!3342 = !DILocation(line: 2565, column: 17, scope: !2539)
!3343 = !DILocation(line: 2565, column: 21, scope: !2539)
!3344 = !DILocation(line: 2565, column: 9, scope: !2539)
!3345 = !DILocation(line: 2565, column: 27, scope: !2539)
!3346 = !DILocation(line: 2566, column: 5, scope: !2539)
!3347 = !DILocation(line: 2395, column: 37, scope: !3348)
!3348 = !DILexicalBlockFile(scope: !2540, file: !939, discriminator: 2)
!3349 = !DILocation(line: 2395, column: 5, scope: !3348)
!3350 = distinct !{!3350, !3351}
!3351 = !DILocation(line: 2395, column: 5, scope: !2522)
!3352 = !DILocation(line: 2568, column: 9, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !2522, file: !939, line: 2568, column: 9)
!3354 = !DILocation(line: 2568, column: 12, scope: !3353)
!3355 = !DILocation(line: 2568, column: 20, scope: !3353)
!3356 = !DILocation(line: 2568, column: 41, scope: !3353)
!3357 = !DILocation(line: 2568, column: 44, scope: !3358)
!3358 = !DILexicalBlockFile(scope: !3353, file: !939, discriminator: 1)
!3359 = !DILocation(line: 2568, column: 47, scope: !3358)
!3360 = !DILocation(line: 2568, column: 55, scope: !3358)
!3361 = !DILocation(line: 2568, column: 9, scope: !3358)
!3362 = !DILocation(line: 2569, column: 9, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3353, file: !939, line: 2568, column: 80)
!3364 = !DILocation(line: 2569, column: 14, scope: !3363)
!3365 = !DILocation(line: 2569, column: 38, scope: !3363)
!3366 = !DILocation(line: 2570, column: 5, scope: !3363)
!3367 = !DILocation(line: 2572, column: 11, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !2522, file: !939, line: 2572, column: 9)
!3369 = !DILocation(line: 2572, column: 14, scope: !3368)
!3370 = !DILocation(line: 2572, column: 20, scope: !3368)
!3371 = !DILocation(line: 2572, column: 9, scope: !2522)
!3372 = !DILocation(line: 2573, column: 22, scope: !3368)
!3373 = !DILocation(line: 2573, column: 9, scope: !3368)
!3374 = !DILocation(line: 2575, column: 12, scope: !2554)
!3375 = !DILocation(line: 2575, column: 10, scope: !2554)
!3376 = !DILocation(line: 2575, column: 17, scope: !3377)
!3377 = !DILexicalBlockFile(scope: !2553, file: !939, discriminator: 1)
!3378 = !DILocation(line: 2575, column: 21, scope: !3377)
!3379 = !DILocation(line: 2575, column: 24, scope: !3377)
!3380 = !DILocation(line: 2575, column: 19, scope: !3377)
!3381 = !DILocation(line: 2575, column: 5, scope: !3377)
!3382 = !DILocalVariable(name: "sc", scope: !2552, file: !939, line: 2576, type: !1011)
!3383 = !DILocation(line: 2576, column: 27, scope: !2552)
!3384 = !DILocation(line: 2576, column: 43, scope: !2552)
!3385 = !DILocation(line: 2576, column: 32, scope: !2552)
!3386 = !DILocation(line: 2576, column: 35, scope: !2552)
!3387 = !DILocation(line: 2576, column: 47, scope: !2552)
!3388 = !DILocation(line: 2578, column: 53, scope: !2552)
!3389 = !DILocation(line: 2578, column: 57, scope: !2552)
!3390 = !DILocation(line: 2578, column: 45, scope: !2552)
!3391 = !DILocation(line: 2578, column: 9, scope: !2552)
!3392 = !DILocation(line: 2578, column: 13, scope: !2552)
!3393 = !DILocation(line: 2578, column: 43, scope: !2552)
!3394 = !DILocation(line: 2579, column: 21, scope: !2551)
!3395 = !DILocation(line: 2579, column: 25, scope: !2551)
!3396 = !DILocation(line: 2579, column: 14, scope: !2551)
!3397 = !DILocation(line: 2579, column: 13, scope: !2552)
!3398 = !DILocation(line: 2580, column: 83, scope: !2551)
!3399 = !DILocation(line: 2580, column: 87, scope: !2551)
!3400 = !DILocation(line: 2580, column: 112, scope: !2551)
!3401 = !DILocation(line: 2580, column: 119, scope: !2551)
!3402 = !DILocation(line: 2580, column: 40, scope: !2551)
!3403 = !DILocation(line: 68, column: 16, scope: !2545, inlinedAt: !2550)
!3404 = !DILocation(line: 68, column: 19, scope: !2545, inlinedAt: !2550)
!3405 = !DILocation(line: 68, column: 24, scope: !2545, inlinedAt: !2550)
!3406 = !DILocation(line: 68, column: 38, scope: !2545, inlinedAt: !2550)
!3407 = !DILocation(line: 68, column: 41, scope: !2545, inlinedAt: !2550)
!3408 = !DILocation(line: 68, column: 46, scope: !2545, inlinedAt: !2550)
!3409 = !DILocation(line: 68, column: 34, scope: !2545, inlinedAt: !2550)
!3410 = !DILocation(line: 68, column: 57, scope: !2545, inlinedAt: !2550)
!3411 = !DILocation(line: 68, column: 69, scope: !2545, inlinedAt: !2550)
!3412 = !DILocation(line: 68, column: 72, scope: !2545, inlinedAt: !2550)
!3413 = !DILocation(line: 68, column: 79, scope: !2545, inlinedAt: !2550)
!3414 = !DILocation(line: 68, column: 84, scope: !2545, inlinedAt: !2550)
!3415 = !DILocation(line: 68, column: 99, scope: !2545, inlinedAt: !2550)
!3416 = !DILocation(line: 68, column: 102, scope: !2545, inlinedAt: !2550)
!3417 = !DILocation(line: 68, column: 109, scope: !2545, inlinedAt: !2550)
!3418 = !DILocation(line: 68, column: 114, scope: !2545, inlinedAt: !2550)
!3419 = !DILocation(line: 68, column: 94, scope: !2545, inlinedAt: !2550)
!3420 = !DILocation(line: 68, column: 63, scope: !2545, inlinedAt: !2550)
!3421 = !DILocation(line: 2580, column: 38, scope: !2551)
!3422 = !DILocation(line: 2580, column: 13, scope: !2551)
!3423 = !DILocation(line: 2580, column: 17, scope: !2551)
!3424 = !DILocation(line: 2580, column: 23, scope: !2551)
!3425 = !DILocation(line: 2582, column: 68, scope: !2551)
!3426 = !DILocation(line: 2582, column: 72, scope: !2551)
!3427 = !DILocation(line: 2582, column: 97, scope: !2551)
!3428 = !DILocation(line: 2582, column: 104, scope: !2551)
!3429 = !DILocation(line: 2582, column: 25, scope: !2551)
!3430 = !DILocation(line: 68, column: 16, scope: !2545, inlinedAt: !2556)
!3431 = !DILocation(line: 68, column: 19, scope: !2545, inlinedAt: !2556)
!3432 = !DILocation(line: 68, column: 24, scope: !2545, inlinedAt: !2556)
!3433 = !DILocation(line: 68, column: 38, scope: !2545, inlinedAt: !2556)
!3434 = !DILocation(line: 68, column: 41, scope: !2545, inlinedAt: !2556)
!3435 = !DILocation(line: 68, column: 46, scope: !2545, inlinedAt: !2556)
!3436 = !DILocation(line: 68, column: 34, scope: !2545, inlinedAt: !2556)
!3437 = !DILocation(line: 68, column: 57, scope: !2545, inlinedAt: !2556)
!3438 = !DILocation(line: 68, column: 69, scope: !2545, inlinedAt: !2556)
!3439 = !DILocation(line: 68, column: 72, scope: !2545, inlinedAt: !2556)
!3440 = !DILocation(line: 68, column: 79, scope: !2545, inlinedAt: !2556)
!3441 = !DILocation(line: 68, column: 84, scope: !2545, inlinedAt: !2556)
!3442 = !DILocation(line: 68, column: 99, scope: !2545, inlinedAt: !2556)
!3443 = !DILocation(line: 68, column: 102, scope: !2545, inlinedAt: !2556)
!3444 = !DILocation(line: 68, column: 109, scope: !2545, inlinedAt: !2556)
!3445 = !DILocation(line: 68, column: 114, scope: !2545, inlinedAt: !2556)
!3446 = !DILocation(line: 68, column: 94, scope: !2545, inlinedAt: !2556)
!3447 = !DILocation(line: 68, column: 63, scope: !2545, inlinedAt: !2556)
!3448 = !DILocation(line: 2582, column: 13, scope: !2551)
!3449 = !DILocation(line: 2582, column: 17, scope: !2551)
!3450 = !DILocation(line: 2582, column: 23, scope: !2551)
!3451 = !DILocation(line: 2583, column: 5, scope: !2552)
!3452 = !DILocation(line: 2575, column: 37, scope: !3453)
!3453 = !DILexicalBlockFile(scope: !2553, file: !939, discriminator: 2)
!3454 = !DILocation(line: 2575, column: 5, scope: !3453)
!3455 = distinct !{!3455, !3456}
!3456 = !DILocation(line: 2575, column: 5, scope: !2522)
!3457 = !DILocation(line: 2585, column: 41, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !2522, file: !939, line: 2585, column: 9)
!3459 = !DILocation(line: 2585, column: 9, scope: !3458)
!3460 = !DILocation(line: 2585, column: 59, scope: !3458)
!3461 = !DILocation(line: 2585, column: 9, scope: !2522)
!3462 = !DILocation(line: 2586, column: 46, scope: !3458)
!3463 = !DILocation(line: 2586, column: 26, scope: !3458)
!3464 = !DILocation(line: 2586, column: 9, scope: !3458)
!3465 = !DILocation(line: 2586, column: 14, scope: !3458)
!3466 = !DILocation(line: 2586, column: 24, scope: !3458)
!3467 = !DILocation(line: 2587, column: 5, scope: !2522)
!3468 = !DILocation(line: 2587, column: 10, scope: !2522)
!3469 = !DILocation(line: 2587, column: 19, scope: !2522)
!3470 = !DILocation(line: 2589, column: 27, scope: !2522)
!3471 = !DILocation(line: 2589, column: 5, scope: !2522)
!3472 = !DILocation(line: 2589, column: 10, scope: !2522)
!3473 = !DILocation(line: 2589, column: 25, scope: !2522)
!3474 = !DILocation(line: 2590, column: 10, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !2522, file: !939, line: 2590, column: 9)
!3476 = !DILocation(line: 2590, column: 15, scope: !3475)
!3477 = !DILocation(line: 2590, column: 9, scope: !2522)
!3478 = !DILocation(line: 2591, column: 9, scope: !3475)
!3479 = !DILocation(line: 2592, column: 38, scope: !2522)
!3480 = !DILocation(line: 2592, column: 5, scope: !2522)
!3481 = !DILocation(line: 2592, column: 10, scope: !2522)
!3482 = !DILocation(line: 2592, column: 26, scope: !2522)
!3483 = !DILocation(line: 2592, column: 36, scope: !2522)
!3484 = !DILocation(line: 2593, column: 10, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !2522, file: !939, line: 2593, column: 9)
!3486 = !DILocation(line: 2593, column: 15, scope: !3485)
!3487 = !DILocation(line: 2593, column: 31, scope: !3485)
!3488 = !DILocation(line: 2593, column: 9, scope: !2522)
!3489 = !DILocation(line: 2594, column: 9, scope: !3485)
!3490 = !DILocation(line: 2595, column: 5, scope: !2522)
!3491 = !DILocation(line: 2595, column: 10, scope: !2522)
!3492 = !DILocation(line: 2595, column: 26, scope: !2522)
!3493 = !DILocation(line: 2595, column: 32, scope: !2522)
!3494 = !DILocation(line: 2597, column: 10, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !2522, file: !939, line: 2597, column: 9)
!3496 = !DILocation(line: 2597, column: 9, scope: !2522)
!3497 = !DILocation(line: 2598, column: 44, scope: !3495)
!3498 = !DILocation(line: 2598, column: 59, scope: !3495)
!3499 = !DILocation(line: 2598, column: 15, scope: !3495)
!3500 = !DILocation(line: 2598, column: 13, scope: !3495)
!3501 = !DILocation(line: 2598, column: 9, scope: !3495)
!3502 = !DILocation(line: 2600, column: 34, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !2522, file: !939, line: 2600, column: 9)
!3504 = !DILocation(line: 2600, column: 37, scope: !3503)
!3505 = !DILocation(line: 2600, column: 42, scope: !3503)
!3506 = !DILocation(line: 2600, column: 61, scope: !3503)
!3507 = !DILocation(line: 2600, column: 66, scope: !3503)
!3508 = !DILocation(line: 2600, column: 9, scope: !3503)
!3509 = !DILocation(line: 2600, column: 77, scope: !3503)
!3510 = !DILocation(line: 2600, column: 9, scope: !2522)
!3511 = !DILocation(line: 2601, column: 9, scope: !3503)
!3512 = !DILocation(line: 2603, column: 5, scope: !2522)
!3513 = !DILocation(line: 2604, column: 1, scope: !2522)
!3514 = distinct !DISubprogram(name: "mxf_write_packet", scope: !939, file: !939, line: 2762, type: !3515, isLocal: true, isDefinition: true, scopeLine: 2763, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!3515 = !DISubroutineType(types: !3516)
!3516 = !{!1042, !2417, !1243}
!3517 = !DILocalVariable(name: "s", arg: 1, scope: !3514, file: !939, line: 2762, type: !2417)
!3518 = !DILocation(line: 2762, column: 46, scope: !3514)
!3519 = !DILocalVariable(name: "pkt", arg: 2, scope: !3514, file: !939, line: 2762, type: !1243)
!3520 = !DILocation(line: 2762, column: 59, scope: !3514)
!3521 = !DILocalVariable(name: "mxf", scope: !3514, file: !939, line: 2764, type: !2567)
!3522 = !DILocation(line: 2764, column: 17, scope: !3514)
!3523 = !DILocation(line: 2764, column: 23, scope: !3514)
!3524 = !DILocation(line: 2764, column: 26, scope: !3514)
!3525 = !DILocalVariable(name: "pb", scope: !3514, file: !939, line: 2765, type: !1309)
!3526 = !DILocation(line: 2765, column: 18, scope: !3514)
!3527 = !DILocation(line: 2765, column: 23, scope: !3514)
!3528 = !DILocation(line: 2765, column: 26, scope: !3514)
!3529 = !DILocalVariable(name: "st", scope: !3514, file: !939, line: 2766, type: !1375)
!3530 = !DILocation(line: 2766, column: 15, scope: !3514)
!3531 = !DILocation(line: 2766, column: 31, scope: !3514)
!3532 = !DILocation(line: 2766, column: 36, scope: !3514)
!3533 = !DILocation(line: 2766, column: 20, scope: !3514)
!3534 = !DILocation(line: 2766, column: 23, scope: !3514)
!3535 = !DILocalVariable(name: "sc", scope: !3514, file: !939, line: 2767, type: !1011)
!3536 = !DILocation(line: 2767, column: 23, scope: !3514)
!3537 = !DILocation(line: 2767, column: 28, scope: !3514)
!3538 = !DILocation(line: 2767, column: 32, scope: !3514)
!3539 = !DILocalVariable(name: "ie", scope: !3514, file: !939, line: 2768, type: !2456)
!3540 = !DILocation(line: 2768, column: 19, scope: !3514)
!3541 = !DILocalVariable(name: "err", scope: !3514, file: !939, line: 2769, type: !1042)
!3542 = !DILocation(line: 2769, column: 9, scope: !3514)
!3543 = !DILocation(line: 2771, column: 10, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3514, file: !939, line: 2771, column: 9)
!3545 = !DILocation(line: 2771, column: 15, scope: !3544)
!3546 = !DILocation(line: 2771, column: 25, scope: !3544)
!3547 = !DILocation(line: 2771, column: 29, scope: !3548)
!3548 = !DILexicalBlockFile(scope: !3544, file: !939, discriminator: 1)
!3549 = !DILocation(line: 2771, column: 34, scope: !3548)
!3550 = !DILocation(line: 2771, column: 55, scope: !3548)
!3551 = !DILocation(line: 2771, column: 60, scope: !3552)
!3552 = !DILexicalBlockFile(scope: !3544, file: !939, discriminator: 2)
!3553 = !DILocation(line: 2771, column: 65, scope: !3552)
!3554 = !DILocation(line: 2771, column: 82, scope: !3552)
!3555 = !DILocation(line: 2771, column: 9, scope: !3552)
!3556 = !DILocation(line: 2772, column: 39, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3558, file: !939, line: 2772, column: 13)
!3558 = distinct !DILexicalBlock(scope: !3544, file: !939, line: 2771, column: 90)
!3559 = !DILocation(line: 2772, column: 44, scope: !3557)
!3560 = !DILocation(line: 2772, column: 38, scope: !3557)
!3561 = !DILocation(line: 2772, column: 59, scope: !3557)
!3562 = !DILocation(line: 2772, column: 64, scope: !3557)
!3563 = !DILocation(line: 2773, column: 38, scope: !3557)
!3564 = !DILocation(line: 2772, column: 20, scope: !3557)
!3565 = !DILocation(line: 2772, column: 18, scope: !3557)
!3566 = !DILocation(line: 2773, column: 75, scope: !3557)
!3567 = !DILocation(line: 2772, column: 13, scope: !3558)
!3568 = !DILocation(line: 2774, column: 13, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3557, file: !939, line: 2773, column: 80)
!3570 = !DILocation(line: 2774, column: 18, scope: !3569)
!3571 = !DILocation(line: 2774, column: 35, scope: !3569)
!3572 = !DILocation(line: 2775, column: 20, scope: !3569)
!3573 = !DILocation(line: 2775, column: 13, scope: !3569)
!3574 = !DILocation(line: 2776, column: 20, scope: !3569)
!3575 = !DILocation(line: 2776, column: 13, scope: !3569)
!3576 = !DILocation(line: 2778, column: 5, scope: !3558)
!3577 = !DILocation(line: 2780, column: 9, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3514, file: !939, line: 2780, column: 9)
!3579 = !DILocation(line: 2780, column: 13, scope: !3578)
!3580 = !DILocation(line: 2780, column: 23, scope: !3578)
!3581 = !DILocation(line: 2780, column: 32, scope: !3578)
!3582 = !DILocation(line: 2780, column: 9, scope: !3514)
!3583 = !DILocation(line: 2781, column: 36, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !939, line: 2781, column: 13)
!3585 = distinct !DILexicalBlock(scope: !3578, file: !939, line: 2780, column: 59)
!3586 = !DILocation(line: 2781, column: 39, scope: !3584)
!3587 = !DILocation(line: 2781, column: 43, scope: !3584)
!3588 = !DILocation(line: 2781, column: 14, scope: !3584)
!3589 = !DILocation(line: 2781, column: 13, scope: !3585)
!3590 = !DILocation(line: 2782, column: 20, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3584, file: !939, line: 2781, column: 54)
!3592 = !DILocation(line: 2782, column: 13, scope: !3591)
!3593 = !DILocation(line: 2783, column: 13, scope: !3591)
!3594 = !DILocation(line: 2785, column: 5, scope: !3585)
!3595 = !DILocation(line: 2785, column: 16, scope: !3596)
!3596 = !DILexicalBlockFile(scope: !3597, file: !939, discriminator: 1)
!3597 = distinct !DILexicalBlock(scope: !3578, file: !939, line: 2785, column: 16)
!3598 = !DILocation(line: 2785, column: 20, scope: !3596)
!3599 = !DILocation(line: 2785, column: 30, scope: !3596)
!3600 = !DILocation(line: 2785, column: 39, scope: !3596)
!3601 = !DILocation(line: 2786, column: 36, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3603, file: !939, line: 2786, column: 13)
!3603 = distinct !DILexicalBlock(scope: !3597, file: !939, line: 2785, column: 61)
!3604 = !DILocation(line: 2786, column: 39, scope: !3602)
!3605 = !DILocation(line: 2786, column: 43, scope: !3602)
!3606 = !DILocation(line: 2786, column: 14, scope: !3602)
!3607 = !DILocation(line: 2786, column: 13, scope: !3603)
!3608 = !DILocation(line: 2787, column: 20, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3602, file: !939, line: 2786, column: 49)
!3610 = !DILocation(line: 2787, column: 13, scope: !3609)
!3611 = !DILocation(line: 2788, column: 13, scope: !3609)
!3612 = !DILocation(line: 2790, column: 5, scope: !3603)
!3613 = !DILocation(line: 2790, column: 16, scope: !3614)
!3614 = !DILexicalBlockFile(scope: !3615, file: !939, discriminator: 1)
!3615 = distinct !DILexicalBlock(scope: !3597, file: !939, line: 2790, column: 16)
!3616 = !DILocation(line: 2790, column: 20, scope: !3614)
!3617 = !DILocation(line: 2790, column: 30, scope: !3614)
!3618 = !DILocation(line: 2790, column: 39, scope: !3614)
!3619 = !DILocation(line: 2791, column: 37, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !939, line: 2791, column: 13)
!3621 = distinct !DILexicalBlock(scope: !3615, file: !939, line: 2790, column: 62)
!3622 = !DILocation(line: 2791, column: 40, scope: !3620)
!3623 = !DILocation(line: 2791, column: 44, scope: !3620)
!3624 = !DILocation(line: 2791, column: 14, scope: !3620)
!3625 = !DILocation(line: 2791, column: 13, scope: !3621)
!3626 = !DILocation(line: 2792, column: 20, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3620, file: !939, line: 2791, column: 50)
!3628 = !DILocation(line: 2792, column: 13, scope: !3627)
!3629 = !DILocation(line: 2793, column: 13, scope: !3627)
!3630 = !DILocation(line: 2795, column: 5, scope: !3621)
!3631 = !DILocation(line: 2795, column: 16, scope: !3632)
!3632 = !DILexicalBlockFile(scope: !3633, file: !939, discriminator: 1)
!3633 = distinct !DILexicalBlock(scope: !3615, file: !939, line: 2795, column: 16)
!3634 = !DILocation(line: 2795, column: 20, scope: !3632)
!3635 = !DILocation(line: 2795, column: 30, scope: !3632)
!3636 = !DILocation(line: 2795, column: 39, scope: !3632)
!3637 = !DILocation(line: 2796, column: 33, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !939, line: 2796, column: 13)
!3639 = distinct !DILexicalBlock(scope: !3633, file: !939, line: 2795, column: 63)
!3640 = !DILocation(line: 2796, column: 36, scope: !3638)
!3641 = !DILocation(line: 2796, column: 40, scope: !3638)
!3642 = !DILocation(line: 2796, column: 14, scope: !3638)
!3643 = !DILocation(line: 2796, column: 13, scope: !3639)
!3644 = !DILocation(line: 2797, column: 20, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3638, file: !939, line: 2796, column: 46)
!3646 = !DILocation(line: 2797, column: 13, scope: !3645)
!3647 = !DILocation(line: 2798, column: 13, scope: !3645)
!3648 = !DILocation(line: 2800, column: 5, scope: !3639)
!3649 = !DILocation(line: 2800, column: 16, scope: !3650)
!3650 = !DILexicalBlockFile(scope: !3651, file: !939, discriminator: 1)
!3651 = distinct !DILexicalBlock(scope: !3633, file: !939, line: 2800, column: 16)
!3652 = !DILocation(line: 2800, column: 20, scope: !3650)
!3653 = !DILocation(line: 2800, column: 30, scope: !3650)
!3654 = !DILocation(line: 2800, column: 39, scope: !3650)
!3655 = !DILocation(line: 2801, column: 35, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3657, file: !939, line: 2801, column: 13)
!3657 = distinct !DILexicalBlock(scope: !3651, file: !939, line: 2800, column: 60)
!3658 = !DILocation(line: 2801, column: 38, scope: !3656)
!3659 = !DILocation(line: 2801, column: 42, scope: !3656)
!3660 = !DILocation(line: 2801, column: 14, scope: !3656)
!3661 = !DILocation(line: 2801, column: 13, scope: !3657)
!3662 = !DILocation(line: 2802, column: 20, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3656, file: !939, line: 2801, column: 53)
!3664 = !DILocation(line: 2802, column: 13, scope: !3663)
!3665 = !DILocation(line: 2803, column: 13, scope: !3663)
!3666 = !DILocation(line: 2805, column: 5, scope: !3657)
!3667 = !DILocation(line: 2807, column: 9, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3514, file: !939, line: 2807, column: 9)
!3669 = !DILocation(line: 2807, column: 14, scope: !3668)
!3670 = !DILocation(line: 2807, column: 9, scope: !3514)
!3671 = !DILocation(line: 2808, column: 13, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3673, file: !939, line: 2808, column: 13)
!3673 = distinct !DILexicalBlock(scope: !3668, file: !939, line: 2807, column: 25)
!3674 = !DILocation(line: 2808, column: 18, scope: !3672)
!3675 = !DILocation(line: 2808, column: 26, scope: !3672)
!3676 = !DILocation(line: 2808, column: 30, scope: !3672)
!3677 = !DILocation(line: 2808, column: 23, scope: !3672)
!3678 = !DILocation(line: 2808, column: 41, scope: !3672)
!3679 = !DILocation(line: 2808, column: 44, scope: !3680)
!3680 = !DILexicalBlockFile(scope: !3672, file: !939, discriminator: 1)
!3681 = !DILocation(line: 2808, column: 48, scope: !3680)
!3682 = !DILocation(line: 2808, column: 58, scope: !3680)
!3683 = !DILocation(line: 2808, column: 69, scope: !3680)
!3684 = !DILocation(line: 2808, column: 13, scope: !3680)
!3685 = !DILocation(line: 2809, column: 20, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3672, file: !939, line: 2808, column: 92)
!3687 = !DILocation(line: 2810, column: 20, scope: !3686)
!3688 = !DILocation(line: 2810, column: 24, scope: !3686)
!3689 = !DILocation(line: 2810, column: 31, scope: !3686)
!3690 = !DILocation(line: 2810, column: 36, scope: !3686)
!3691 = !DILocation(line: 2810, column: 42, scope: !3686)
!3692 = !DILocation(line: 2810, column: 46, scope: !3686)
!3693 = !DILocation(line: 2809, column: 13, scope: !3686)
!3694 = !DILocation(line: 2811, column: 13, scope: !3686)
!3695 = !DILocation(line: 2813, column: 14, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3673, file: !939, line: 2813, column: 13)
!3697 = !DILocation(line: 2813, column: 19, scope: !3696)
!3698 = !DILocation(line: 2813, column: 13, scope: !3673)
!3699 = !DILocation(line: 2814, column: 46, scope: !3696)
!3700 = !DILocation(line: 2814, column: 13, scope: !3696)
!3701 = !DILocation(line: 2815, column: 5, scope: !3673)
!3702 = !DILocation(line: 2817, column: 9, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3514, file: !939, line: 2817, column: 9)
!3704 = !DILocation(line: 2817, column: 12, scope: !3703)
!3705 = !DILocation(line: 2817, column: 20, scope: !3703)
!3706 = !DILocation(line: 2817, column: 9, scope: !3514)
!3707 = !DILocation(line: 2818, column: 40, scope: !3703)
!3708 = !DILocation(line: 2818, column: 43, scope: !3703)
!3709 = !DILocation(line: 2818, column: 16, scope: !3703)
!3710 = !DILocation(line: 2818, column: 9, scope: !3703)
!3711 = !DILocation(line: 2820, column: 10, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3514, file: !939, line: 2820, column: 9)
!3713 = !DILocation(line: 2820, column: 15, scope: !3712)
!3714 = !DILocation(line: 2820, column: 9, scope: !3514)
!3715 = !DILocation(line: 2821, column: 13, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !939, line: 2821, column: 13)
!3717 = distinct !DILexicalBlock(scope: !3712, file: !939, line: 2820, column: 31)
!3718 = !DILocation(line: 2821, column: 18, scope: !3716)
!3719 = !DILocation(line: 2821, column: 13, scope: !3717)
!3720 = !DILocation(line: 2822, column: 44, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !939, line: 2822, column: 17)
!3722 = distinct !DILexicalBlock(scope: !3716, file: !939, line: 2821, column: 40)
!3723 = !DILocation(line: 2822, column: 24, scope: !3721)
!3724 = !DILocation(line: 2822, column: 22, scope: !3721)
!3725 = !DILocation(line: 2822, column: 84, scope: !3721)
!3726 = !DILocation(line: 2822, column: 17, scope: !3722)
!3727 = !DILocation(line: 2823, column: 24, scope: !3721)
!3728 = !DILocation(line: 2823, column: 17, scope: !3721)
!3729 = !DILocation(line: 2824, column: 32, scope: !3722)
!3730 = !DILocation(line: 2824, column: 13, scope: !3722)
!3731 = !DILocation(line: 2825, column: 43, scope: !3722)
!3732 = !DILocation(line: 2825, column: 13, scope: !3722)
!3733 = !DILocation(line: 2826, column: 9, scope: !3722)
!3734 = !DILocation(line: 2827, column: 44, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !939, line: 2827, column: 17)
!3736 = distinct !DILexicalBlock(scope: !3716, file: !939, line: 2826, column: 16)
!3737 = !DILocation(line: 2827, column: 24, scope: !3735)
!3738 = !DILocation(line: 2827, column: 22, scope: !3735)
!3739 = !DILocation(line: 2827, column: 84, scope: !3735)
!3740 = !DILocation(line: 2827, column: 17, scope: !3736)
!3741 = !DILocation(line: 2828, column: 24, scope: !3735)
!3742 = !DILocation(line: 2828, column: 17, scope: !3735)
!3743 = !DILocation(line: 2830, column: 9, scope: !3717)
!3744 = !DILocation(line: 2830, column: 14, scope: !3717)
!3745 = !DILocation(line: 2830, column: 29, scope: !3717)
!3746 = !DILocation(line: 2831, column: 5, scope: !3717)
!3747 = !DILocation(line: 2833, column: 9, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3514, file: !939, line: 2833, column: 9)
!3749 = !DILocation(line: 2833, column: 13, scope: !3748)
!3750 = !DILocation(line: 2833, column: 19, scope: !3748)
!3751 = !DILocation(line: 2833, column: 9, scope: !3514)
!3752 = !DILocation(line: 2834, column: 14, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !939, line: 2834, column: 13)
!3754 = distinct !DILexicalBlock(scope: !3748, file: !939, line: 2833, column: 25)
!3755 = !DILocation(line: 2834, column: 19, scope: !3753)
!3756 = !DILocation(line: 2834, column: 40, scope: !3753)
!3757 = !DILocation(line: 2835, column: 15, scope: !3753)
!3758 = !DILocation(line: 2835, column: 20, scope: !3753)
!3759 = !DILocation(line: 2835, column: 37, scope: !3753)
!3760 = !DILocation(line: 2835, column: 40, scope: !3761)
!3761 = !DILexicalBlockFile(scope: !3753, file: !939, discriminator: 1)
!3762 = !DILocation(line: 2835, column: 45, scope: !3761)
!3763 = !DILocation(line: 2835, column: 62, scope: !3761)
!3764 = !DILocation(line: 2835, column: 69, scope: !3761)
!3765 = !DILocation(line: 2836, column: 18, scope: !3753)
!3766 = !DILocation(line: 2836, column: 15, scope: !3753)
!3767 = !DILocation(line: 2836, column: 24, scope: !3753)
!3768 = !DILocation(line: 2834, column: 13, scope: !3769)
!3769 = !DILexicalBlockFile(scope: !3754, file: !939, discriminator: 1)
!3770 = !DILocation(line: 2837, column: 32, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3753, file: !939, line: 2836, column: 33)
!3772 = !DILocation(line: 2837, column: 13, scope: !3771)
!3773 = !DILocation(line: 2838, column: 44, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3771, file: !939, line: 2838, column: 17)
!3775 = !DILocation(line: 2838, column: 24, scope: !3774)
!3776 = !DILocation(line: 2838, column: 22, scope: !3774)
!3777 = !DILocation(line: 2838, column: 77, scope: !3774)
!3778 = !DILocation(line: 2838, column: 17, scope: !3771)
!3779 = !DILocation(line: 2839, column: 24, scope: !3774)
!3780 = !DILocation(line: 2839, column: 17, scope: !3774)
!3781 = !DILocation(line: 2840, column: 32, scope: !3771)
!3782 = !DILocation(line: 2840, column: 13, scope: !3771)
!3783 = !DILocation(line: 2841, column: 43, scope: !3771)
!3784 = !DILocation(line: 2841, column: 13, scope: !3771)
!3785 = !DILocation(line: 2842, column: 9, scope: !3771)
!3786 = !DILocation(line: 2844, column: 28, scope: !3754)
!3787 = !DILocation(line: 2844, column: 9, scope: !3754)
!3788 = !DILocation(line: 2845, column: 31, scope: !3754)
!3789 = !DILocation(line: 2845, column: 9, scope: !3754)
!3790 = !DILocation(line: 2847, column: 14, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3754, file: !939, line: 2847, column: 13)
!3792 = !DILocation(line: 2847, column: 19, scope: !3791)
!3793 = !DILocation(line: 2847, column: 13, scope: !3754)
!3794 = !DILocation(line: 2848, column: 64, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3791, file: !939, line: 2847, column: 41)
!3796 = !DILocation(line: 2848, column: 69, scope: !3795)
!3797 = !DILocation(line: 2848, column: 32, scope: !3795)
!3798 = !DILocation(line: 2848, column: 37, scope: !3795)
!3799 = !DILocation(line: 2848, column: 13, scope: !3795)
!3800 = !DILocation(line: 2848, column: 18, scope: !3795)
!3801 = !DILocation(line: 2848, column: 55, scope: !3795)
!3802 = !DILocation(line: 2848, column: 62, scope: !3795)
!3803 = !DILocation(line: 2849, column: 66, scope: !3795)
!3804 = !DILocation(line: 2849, column: 32, scope: !3795)
!3805 = !DILocation(line: 2849, column: 37, scope: !3795)
!3806 = !DILocation(line: 2849, column: 13, scope: !3795)
!3807 = !DILocation(line: 2849, column: 18, scope: !3795)
!3808 = !DILocation(line: 2849, column: 55, scope: !3795)
!3809 = !DILocation(line: 2849, column: 61, scope: !3795)
!3810 = !DILocation(line: 2850, column: 73, scope: !3795)
!3811 = !DILocation(line: 2850, column: 32, scope: !3795)
!3812 = !DILocation(line: 2850, column: 37, scope: !3795)
!3813 = !DILocation(line: 2850, column: 13, scope: !3795)
!3814 = !DILocation(line: 2850, column: 18, scope: !3795)
!3815 = !DILocation(line: 2850, column: 55, scope: !3795)
!3816 = !DILocation(line: 2850, column: 68, scope: !3795)
!3817 = !DILocation(line: 2851, column: 13, scope: !3795)
!3818 = !DILocation(line: 2851, column: 18, scope: !3795)
!3819 = !DILocation(line: 2851, column: 30, scope: !3795)
!3820 = !DILocation(line: 2852, column: 9, scope: !3795)
!3821 = !DILocation(line: 2853, column: 9, scope: !3754)
!3822 = !DILocation(line: 2853, column: 14, scope: !3754)
!3823 = !DILocation(line: 2853, column: 30, scope: !3754)
!3824 = !DILocation(line: 2854, column: 5, scope: !3754)
!3825 = !DILocation(line: 2854, column: 17, scope: !3826)
!3826 = !DILexicalBlockFile(scope: !3827, file: !939, discriminator: 1)
!3827 = distinct !DILexicalBlock(scope: !3748, file: !939, line: 2854, column: 16)
!3828 = !DILocation(line: 2854, column: 22, scope: !3826)
!3829 = !DILocation(line: 2854, column: 43, scope: !3826)
!3830 = !DILocation(line: 2854, column: 46, scope: !3831)
!3831 = !DILexicalBlockFile(scope: !3827, file: !939, discriminator: 2)
!3832 = !DILocation(line: 2854, column: 50, scope: !3831)
!3833 = !DILocation(line: 2854, column: 56, scope: !3831)
!3834 = !DILocation(line: 2854, column: 16, scope: !3831)
!3835 = !DILocation(line: 2855, column: 14, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !939, line: 2855, column: 13)
!3837 = distinct !DILexicalBlock(scope: !3827, file: !939, line: 2854, column: 62)
!3838 = !DILocation(line: 2855, column: 19, scope: !3836)
!3839 = !DILocation(line: 2855, column: 13, scope: !3837)
!3840 = !DILocation(line: 2856, column: 20, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3836, file: !939, line: 2855, column: 37)
!3842 = !DILocation(line: 2856, column: 13, scope: !3841)
!3843 = !DILocation(line: 2857, column: 13, scope: !3841)
!3844 = !DILocation(line: 2860, column: 13, scope: !3837)
!3845 = !DILocation(line: 2860, column: 18, scope: !3837)
!3846 = !DILocation(line: 2860, column: 51, scope: !3837)
!3847 = !DILocation(line: 2860, column: 56, scope: !3837)
!3848 = !DILocation(line: 2860, column: 72, scope: !3837)
!3849 = !DILocation(line: 2860, column: 32, scope: !3837)
!3850 = !DILocation(line: 2860, column: 37, scope: !3837)
!3851 = !DILocation(line: 2860, column: 76, scope: !3837)
!3852 = !DILocation(line: 2860, column: 30, scope: !3837)
!3853 = !DILocation(line: 2859, column: 28, scope: !3837)
!3854 = !DILocation(line: 2859, column: 33, scope: !3837)
!3855 = !DILocation(line: 2859, column: 49, scope: !3837)
!3856 = !DILocation(line: 2859, column: 9, scope: !3837)
!3857 = !DILocation(line: 2859, column: 14, scope: !3837)
!3858 = !DILocation(line: 2859, column: 53, scope: !3837)
!3859 = !DILocation(line: 2859, column: 66, scope: !3837)
!3860 = !DILocation(line: 2861, column: 5, scope: !3837)
!3861 = !DILocation(line: 2863, column: 24, scope: !3514)
!3862 = !DILocation(line: 2863, column: 5, scope: !3514)
!3863 = !DILocation(line: 2864, column: 16, scope: !3514)
!3864 = !DILocation(line: 2864, column: 20, scope: !3514)
!3865 = !DILocation(line: 2864, column: 24, scope: !3514)
!3866 = !DILocation(line: 2864, column: 5, scope: !3514)
!3867 = !DILocation(line: 2865, column: 9, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3514, file: !939, line: 2865, column: 9)
!3869 = !DILocation(line: 2865, column: 12, scope: !3868)
!3870 = !DILocation(line: 2865, column: 20, scope: !3868)
!3871 = !DILocation(line: 2865, column: 41, scope: !3868)
!3872 = !DILocation(line: 2866, column: 9, scope: !3868)
!3873 = !DILocation(line: 2866, column: 13, scope: !3868)
!3874 = !DILocation(line: 2866, column: 23, scope: !3868)
!3875 = !DILocation(line: 2866, column: 34, scope: !3868)
!3876 = !DILocation(line: 2865, column: 9, scope: !3877)
!3877 = !DILexicalBlockFile(scope: !3514, file: !939, discriminator: 1)
!3878 = !DILocation(line: 2867, column: 36, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3868, file: !939, line: 2866, column: 57)
!3880 = !DILocation(line: 2867, column: 39, scope: !3879)
!3881 = !DILocation(line: 2867, column: 43, scope: !3879)
!3882 = !DILocation(line: 2867, column: 9, scope: !3879)
!3883 = !DILocation(line: 2868, column: 5, scope: !3879)
!3884 = !DILocation(line: 2869, column: 32, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3868, file: !939, line: 2868, column: 12)
!3886 = !DILocation(line: 2869, column: 36, scope: !3885)
!3887 = !DILocation(line: 2869, column: 41, scope: !3885)
!3888 = !DILocation(line: 2869, column: 9, scope: !3885)
!3889 = !DILocation(line: 2870, column: 20, scope: !3885)
!3890 = !DILocation(line: 2870, column: 24, scope: !3885)
!3891 = !DILocation(line: 2870, column: 29, scope: !3885)
!3892 = !DILocation(line: 2870, column: 35, scope: !3885)
!3893 = !DILocation(line: 2870, column: 40, scope: !3885)
!3894 = !DILocation(line: 2870, column: 9, scope: !3885)
!3895 = !DILocation(line: 2871, column: 34, scope: !3885)
!3896 = !DILocation(line: 2871, column: 39, scope: !3885)
!3897 = !DILocation(line: 2871, column: 33, scope: !3885)
!3898 = !DILocation(line: 2871, column: 65, scope: !3885)
!3899 = !DILocation(line: 2871, column: 70, scope: !3885)
!3900 = !DILocation(line: 2871, column: 64, scope: !3885)
!3901 = !DILocation(line: 2871, column: 60, scope: !3885)
!3902 = !DILocation(line: 2871, column: 46, scope: !3885)
!3903 = !DILocation(line: 2871, column: 44, scope: !3885)
!3904 = !DILocation(line: 2871, column: 29, scope: !3885)
!3905 = !DILocation(line: 2871, column: 9, scope: !3885)
!3906 = !DILocation(line: 2871, column: 14, scope: !3885)
!3907 = !DILocation(line: 2871, column: 26, scope: !3885)
!3908 = !DILocation(line: 2874, column: 16, scope: !3514)
!3909 = !DILocation(line: 2874, column: 5, scope: !3514)
!3910 = !DILocation(line: 2876, column: 5, scope: !3514)
!3911 = !DILocation(line: 2877, column: 1, scope: !3514)
!3912 = distinct !DISubprogram(name: "mxf_write_footer", scope: !939, file: !939, line: 2906, type: !2523, isLocal: true, isDefinition: true, scopeLine: 2907, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!3913 = !DILocalVariable(name: "s", arg: 1, scope: !3914, file: !537, line: 557, type: !1309)
!3914 = distinct !DISubprogram(name: "avio_tell", scope: !537, file: !537, line: 557, type: !3915, isLocal: true, isDefinition: true, scopeLine: 558, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!3915 = !DISubroutineType(types: !3916)
!3916 = !{!1008, !1309}
!3917 = !DILocation(line: 557, column: 77, scope: !3914, inlinedAt: !3918)
!3918 = distinct !DILocation(line: 2922, column: 36, scope: !3912)
!3919 = !DILocalVariable(name: "s", arg: 1, scope: !3912, file: !939, line: 2906, type: !2417)
!3920 = !DILocation(line: 2906, column: 46, scope: !3912)
!3921 = !DILocalVariable(name: "mxf", scope: !3912, file: !939, line: 2908, type: !2567)
!3922 = !DILocation(line: 2908, column: 17, scope: !3912)
!3923 = !DILocation(line: 2908, column: 23, scope: !3912)
!3924 = !DILocation(line: 2908, column: 26, scope: !3912)
!3925 = !DILocalVariable(name: "pb", scope: !3912, file: !939, line: 2909, type: !1309)
!3926 = !DILocation(line: 2909, column: 18, scope: !3912)
!3927 = !DILocation(line: 2909, column: 23, scope: !3912)
!3928 = !DILocation(line: 2909, column: 26, scope: !3912)
!3929 = !DILocalVariable(name: "i", scope: !3912, file: !939, line: 2910, type: !1042)
!3930 = !DILocation(line: 2910, column: 9, scope: !3912)
!3931 = !DILocalVariable(name: "err", scope: !3912, file: !939, line: 2910, type: !1042)
!3932 = !DILocation(line: 2910, column: 12, scope: !3912)
!3933 = !DILocation(line: 2912, column: 10, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3912, file: !939, line: 2912, column: 9)
!3935 = !DILocation(line: 2912, column: 15, scope: !3934)
!3936 = !DILocation(line: 2912, column: 30, scope: !3934)
!3937 = !DILocation(line: 2913, column: 10, scope: !3934)
!3938 = !DILocation(line: 2913, column: 13, scope: !3934)
!3939 = !DILocation(line: 2913, column: 21, scope: !3934)
!3940 = !DILocation(line: 2913, column: 45, scope: !3934)
!3941 = !DILocation(line: 2913, column: 49, scope: !3942)
!3942 = !DILexicalBlockFile(scope: !3934, file: !939, discriminator: 1)
!3943 = !DILocation(line: 2913, column: 54, scope: !3942)
!3944 = !DILocation(line: 2912, column: 9, scope: !3945)
!3945 = !DILexicalBlockFile(scope: !3912, file: !939, discriminator: 1)
!3946 = !DILocation(line: 2915, column: 13, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3934, file: !939, line: 2913, column: 78)
!3948 = !DILocation(line: 2916, column: 9, scope: !3947)
!3949 = !DILocation(line: 2919, column: 21, scope: !3912)
!3950 = !DILocation(line: 2919, column: 26, scope: !3912)
!3951 = !DILocation(line: 2919, column: 51, scope: !3912)
!3952 = !DILocation(line: 2919, column: 56, scope: !3912)
!3953 = !DILocation(line: 2919, column: 49, scope: !3912)
!3954 = !DILocation(line: 2919, column: 5, scope: !3912)
!3955 = !DILocation(line: 2919, column: 10, scope: !3912)
!3956 = !DILocation(line: 2919, column: 19, scope: !3912)
!3957 = !DILocation(line: 2921, column: 24, scope: !3912)
!3958 = !DILocation(line: 2921, column: 5, scope: !3912)
!3959 = !DILocation(line: 2922, column: 46, scope: !3912)
!3960 = !DILocation(line: 2922, column: 36, scope: !3912)
!3961 = !DILocation(line: 559, column: 22, scope: !3914, inlinedAt: !3918)
!3962 = !DILocation(line: 559, column: 12, scope: !3914, inlinedAt: !3918)
!3963 = !DILocation(line: 2922, column: 5, scope: !3912)
!3964 = !DILocation(line: 2922, column: 10, scope: !3912)
!3965 = !DILocation(line: 2922, column: 34, scope: !3912)
!3966 = !DILocation(line: 2923, column: 9, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3912, file: !939, line: 2923, column: 9)
!3968 = !DILocation(line: 2923, column: 14, scope: !3967)
!3969 = !DILocation(line: 2923, column: 35, scope: !3967)
!3970 = !DILocation(line: 2923, column: 38, scope: !3971)
!3971 = !DILexicalBlockFile(scope: !3967, file: !939, discriminator: 1)
!3972 = !DILocation(line: 2923, column: 41, scope: !3971)
!3973 = !DILocation(line: 2923, column: 49, scope: !3971)
!3974 = !DILocation(line: 2923, column: 9, scope: !3971)
!3975 = !DILocation(line: 2924, column: 40, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !939, line: 2924, column: 13)
!3977 = distinct !DILexicalBlock(scope: !3967, file: !939, line: 2923, column: 74)
!3978 = !DILocation(line: 2924, column: 20, scope: !3976)
!3979 = !DILocation(line: 2924, column: 18, scope: !3976)
!3980 = !DILocation(line: 2924, column: 75, scope: !3976)
!3981 = !DILocation(line: 2924, column: 13, scope: !3977)
!3982 = !DILocation(line: 2925, column: 13, scope: !3976)
!3983 = !DILocation(line: 2926, column: 5, scope: !3977)
!3984 = !DILocation(line: 2927, column: 40, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !939, line: 2927, column: 13)
!3986 = distinct !DILexicalBlock(scope: !3967, file: !939, line: 2926, column: 12)
!3987 = !DILocation(line: 2927, column: 20, scope: !3985)
!3988 = !DILocation(line: 2927, column: 18, scope: !3985)
!3989 = !DILocation(line: 2927, column: 75, scope: !3985)
!3990 = !DILocation(line: 2927, column: 13, scope: !3986)
!3991 = !DILocation(line: 2928, column: 13, scope: !3985)
!3992 = !DILocation(line: 2929, column: 28, scope: !3986)
!3993 = !DILocation(line: 2929, column: 9, scope: !3986)
!3994 = !DILocation(line: 2930, column: 39, scope: !3986)
!3995 = !DILocation(line: 2930, column: 9, scope: !3986)
!3996 = !DILocation(line: 2933, column: 24, scope: !3912)
!3997 = !DILocation(line: 2933, column: 5, scope: !3912)
!3998 = !DILocation(line: 2934, column: 33, scope: !3912)
!3999 = !DILocation(line: 2934, column: 5, scope: !3912)
!4000 = !DILocation(line: 2936, column: 9, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3912, file: !939, line: 2936, column: 9)
!4002 = !DILocation(line: 2936, column: 12, scope: !4001)
!4003 = !DILocation(line: 2936, column: 16, scope: !4001)
!4004 = !DILocation(line: 2936, column: 25, scope: !4001)
!4005 = !DILocation(line: 2936, column: 9, scope: !3912)
!4006 = !DILocation(line: 2937, column: 13, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !4008, file: !939, line: 2937, column: 13)
!4008 = distinct !DILexicalBlock(scope: !4001, file: !939, line: 2936, column: 37)
!4009 = !DILocation(line: 2937, column: 16, scope: !4007)
!4010 = !DILocation(line: 2937, column: 24, scope: !4007)
!4011 = !DILocation(line: 2937, column: 13, scope: !4008)
!4012 = !DILocation(line: 2939, column: 23, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4007, file: !939, line: 2937, column: 49)
!4014 = !DILocation(line: 2939, column: 27, scope: !4013)
!4015 = !DILocation(line: 2939, column: 32, scope: !4013)
!4016 = !DILocation(line: 2939, column: 13, scope: !4013)
!4017 = !DILocation(line: 2940, column: 56, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4013, file: !939, line: 2940, column: 17)
!4019 = !DILocation(line: 2940, column: 24, scope: !4018)
!4020 = !DILocation(line: 2940, column: 22, scope: !4018)
!4021 = !DILocation(line: 2940, column: 60, scope: !4018)
!4022 = !DILocation(line: 2940, column: 17, scope: !4013)
!4023 = !DILocation(line: 2941, column: 17, scope: !4018)
!4024 = !DILocation(line: 2942, column: 9, scope: !4013)
!4025 = !DILocation(line: 2944, column: 19, scope: !4008)
!4026 = !DILocation(line: 2944, column: 9, scope: !4008)
!4027 = !DILocation(line: 2945, column: 13, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4008, file: !939, line: 2945, column: 13)
!4029 = !DILocation(line: 2945, column: 18, scope: !4028)
!4030 = !DILocation(line: 2945, column: 39, scope: !4028)
!4031 = !DILocation(line: 2945, column: 42, scope: !4032)
!4032 = !DILexicalBlockFile(scope: !4028, file: !939, discriminator: 1)
!4033 = !DILocation(line: 2945, column: 45, scope: !4032)
!4034 = !DILocation(line: 2945, column: 53, scope: !4032)
!4035 = !DILocation(line: 2945, column: 13, scope: !4032)
!4036 = !DILocation(line: 2946, column: 44, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !939, line: 2946, column: 17)
!4038 = distinct !DILexicalBlock(scope: !4028, file: !939, line: 2945, column: 78)
!4039 = !DILocation(line: 2946, column: 24, scope: !4037)
!4040 = !DILocation(line: 2946, column: 22, scope: !4037)
!4041 = !DILocation(line: 2946, column: 86, scope: !4037)
!4042 = !DILocation(line: 2946, column: 17, scope: !4038)
!4043 = !DILocation(line: 2947, column: 17, scope: !4037)
!4044 = !DILocation(line: 2948, column: 32, scope: !4038)
!4045 = !DILocation(line: 2948, column: 13, scope: !4038)
!4046 = !DILocation(line: 2949, column: 43, scope: !4038)
!4047 = !DILocation(line: 2949, column: 13, scope: !4038)
!4048 = !DILocation(line: 2950, column: 9, scope: !4038)
!4049 = !DILocation(line: 2951, column: 44, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !939, line: 2951, column: 17)
!4051 = distinct !DILexicalBlock(scope: !4028, file: !939, line: 2950, column: 16)
!4052 = !DILocation(line: 2951, column: 24, scope: !4050)
!4053 = !DILocation(line: 2951, column: 22, scope: !4050)
!4054 = !DILocation(line: 2951, column: 86, scope: !4050)
!4055 = !DILocation(line: 2951, column: 17, scope: !4051)
!4056 = !DILocation(line: 2952, column: 17, scope: !4050)
!4057 = !DILocation(line: 2955, column: 16, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4008, file: !939, line: 2955, column: 9)
!4059 = !DILocation(line: 2955, column: 14, scope: !4058)
!4060 = !DILocation(line: 2955, column: 21, scope: !4061)
!4061 = !DILexicalBlockFile(scope: !4062, file: !939, discriminator: 1)
!4062 = distinct !DILexicalBlock(scope: !4058, file: !939, line: 2955, column: 9)
!4063 = !DILocation(line: 2955, column: 25, scope: !4061)
!4064 = !DILocation(line: 2955, column: 30, scope: !4061)
!4065 = !DILocation(line: 2955, column: 23, scope: !4061)
!4066 = !DILocation(line: 2955, column: 9, scope: !4061)
!4067 = !DILocation(line: 2956, column: 23, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4062, file: !939, line: 2955, column: 58)
!4069 = !DILocation(line: 2956, column: 54, scope: !4068)
!4070 = !DILocation(line: 2956, column: 27, scope: !4068)
!4071 = !DILocation(line: 2956, column: 32, scope: !4068)
!4072 = !DILocation(line: 2956, column: 56, scope: !4068)
!4073 = !DILocation(line: 2956, column: 13, scope: !4068)
!4074 = !DILocation(line: 2957, column: 23, scope: !4068)
!4075 = !DILocation(line: 2957, column: 27, scope: !4068)
!4076 = !DILocation(line: 2957, column: 32, scope: !4068)
!4077 = !DILocation(line: 2957, column: 13, scope: !4068)
!4078 = !DILocation(line: 2958, column: 9, scope: !4068)
!4079 = !DILocation(line: 2955, column: 54, scope: !4080)
!4080 = !DILexicalBlockFile(scope: !4062, file: !939, discriminator: 2)
!4081 = !DILocation(line: 2955, column: 9, scope: !4080)
!4082 = distinct !{!4082, !4083}
!4083 = !DILocation(line: 2955, column: 9, scope: !4008)
!4084 = !DILocation(line: 2959, column: 5, scope: !4008)
!4085 = !DILocation(line: 2936, column: 34, scope: !4086)
!4086 = !DILexicalBlockFile(scope: !4001, file: !939, discriminator: 1)
!4087 = !DILocation(line: 2962, column: 31, scope: !3912)
!4088 = !DILocation(line: 2962, column: 5, scope: !3912)
!4089 = !DILocation(line: 2964, column: 15, scope: !3912)
!4090 = !DILocation(line: 2964, column: 20, scope: !3912)
!4091 = !DILocation(line: 2964, column: 14, scope: !3912)
!4092 = !DILocation(line: 2964, column: 5, scope: !3912)
!4093 = !DILocation(line: 2965, column: 15, scope: !3912)
!4094 = !DILocation(line: 2965, column: 20, scope: !3912)
!4095 = !DILocation(line: 2965, column: 14, scope: !3912)
!4096 = !DILocation(line: 2965, column: 5, scope: !3912)
!4097 = !DILocation(line: 2966, column: 15, scope: !3912)
!4098 = !DILocation(line: 2966, column: 20, scope: !3912)
!4099 = !DILocation(line: 2966, column: 36, scope: !3912)
!4100 = !DILocation(line: 2966, column: 14, scope: !3912)
!4101 = !DILocation(line: 2966, column: 5, scope: !3912)
!4102 = !DILocation(line: 2967, column: 15, scope: !3912)
!4103 = !DILocation(line: 2967, column: 20, scope: !3912)
!4104 = !DILocation(line: 2967, column: 14, scope: !3912)
!4105 = !DILocation(line: 2967, column: 5, scope: !3912)
!4106 = !DILocation(line: 2969, column: 14, scope: !3912)
!4107 = !DILocation(line: 2969, column: 5, scope: !3912)
!4108 = !DILocation(line: 2971, column: 12, scope: !3912)
!4109 = !DILocation(line: 2971, column: 16, scope: !3912)
!4110 = !DILocation(line: 2971, column: 22, scope: !3945)
!4111 = !DILocation(line: 2971, column: 12, scope: !3945)
!4112 = !DILocation(line: 2971, column: 12, scope: !4113)
!4113 = !DILexicalBlockFile(scope: !3912, file: !939, discriminator: 2)
!4114 = !DILocation(line: 2971, column: 12, scope: !4115)
!4115 = !DILexicalBlockFile(scope: !3912, file: !939, discriminator: 3)
!4116 = !DILocation(line: 2971, column: 5, scope: !4115)
!4117 = distinct !DISubprogram(name: "mxf_interleave", scope: !939, file: !939, line: 3038, type: !4118, isLocal: true, isDefinition: true, scopeLine: 3039, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{!1042, !2417, !1243, !1243, !1042}
!4120 = !DILocalVariable(name: "s", arg: 1, scope: !4117, file: !939, line: 3038, type: !2417)
!4121 = !DILocation(line: 3038, column: 44, scope: !4117)
!4122 = !DILocalVariable(name: "out", arg: 2, scope: !4117, file: !939, line: 3038, type: !1243)
!4123 = !DILocation(line: 3038, column: 57, scope: !4117)
!4124 = !DILocalVariable(name: "pkt", arg: 3, scope: !4117, file: !939, line: 3038, type: !1243)
!4125 = !DILocation(line: 3038, column: 72, scope: !4117)
!4126 = !DILocalVariable(name: "flush", arg: 4, scope: !4117, file: !939, line: 3038, type: !1042)
!4127 = !DILocation(line: 3038, column: 81, scope: !4117)
!4128 = !DILocation(line: 3040, column: 40, scope: !4117)
!4129 = !DILocation(line: 3040, column: 43, scope: !4117)
!4130 = !DILocation(line: 3040, column: 48, scope: !4117)
!4131 = !DILocation(line: 3040, column: 53, scope: !4117)
!4132 = !DILocation(line: 3040, column: 12, scope: !4117)
!4133 = !DILocation(line: 3040, column: 5, scope: !4117)
!4134 = distinct !DISubprogram(name: "av_make_q", scope: !1049, file: !1049, line: 71, type: !4135, isLocal: true, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4135 = !DISubroutineType(types: !4136)
!4136 = !{!1048, !1042, !1042}
!4137 = !DILocalVariable(name: "num", arg: 1, scope: !4134, file: !1049, line: 71, type: !1042)
!4138 = !DILocation(line: 71, column: 40, scope: !4134)
!4139 = !DILocalVariable(name: "den", arg: 2, scope: !4134, file: !1049, line: 71, type: !1042)
!4140 = !DILocation(line: 71, column: 49, scope: !4134)
!4141 = !DILocalVariable(name: "r", scope: !4134, file: !1049, line: 73, type: !1048)
!4142 = !DILocation(line: 73, column: 16, scope: !4134)
!4143 = !DILocation(line: 73, column: 20, scope: !4134)
!4144 = !DILocation(line: 73, column: 22, scope: !4134)
!4145 = !DILocation(line: 73, column: 27, scope: !4134)
!4146 = !DILocation(line: 74, column: 12, scope: !4134)
!4147 = !DILocation(line: 74, column: 5, scope: !4134)
!4148 = distinct !DISubprogram(name: "mxf_init_timecode", scope: !939, file: !939, line: 2363, type: !4149, isLocal: true, isDefinition: true, scopeLine: 2364, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4149 = !DISubroutineType(types: !4150)
!4150 = !{!1042, !2417, !1375, !1048}
!4151 = !DILocalVariable(name: "s", arg: 1, scope: !4148, file: !939, line: 2363, type: !2417)
!4152 = !DILocation(line: 2363, column: 47, scope: !4148)
!4153 = !DILocalVariable(name: "st", arg: 2, scope: !4148, file: !939, line: 2363, type: !1375)
!4154 = !DILocation(line: 2363, column: 60, scope: !4148)
!4155 = !DILocalVariable(name: "rate", arg: 3, scope: !4148, file: !939, line: 2363, type: !1048)
!4156 = !DILocation(line: 2363, column: 75, scope: !4148)
!4157 = !DILocalVariable(name: "mxf", scope: !4148, file: !939, line: 2365, type: !2567)
!4158 = !DILocation(line: 2365, column: 17, scope: !4148)
!4159 = !DILocation(line: 2365, column: 23, scope: !4148)
!4160 = !DILocation(line: 2365, column: 26, scope: !4148)
!4161 = !DILocalVariable(name: "tcr", scope: !4148, file: !939, line: 2366, type: !3245)
!4162 = !DILocation(line: 2366, column: 24, scope: !4148)
!4163 = !DILocation(line: 2366, column: 42, scope: !4148)
!4164 = !DILocation(line: 2366, column: 45, scope: !4148)
!4165 = !DILocation(line: 2366, column: 30, scope: !4148)
!4166 = !DILocation(line: 2367, column: 10, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4148, file: !939, line: 2367, column: 9)
!4168 = !DILocation(line: 2367, column: 9, scope: !4148)
!4169 = !DILocation(line: 2368, column: 27, scope: !4167)
!4170 = !DILocation(line: 2368, column: 31, scope: !4167)
!4171 = !DILocation(line: 2368, column: 15, scope: !4167)
!4172 = !DILocation(line: 2368, column: 13, scope: !4167)
!4173 = !DILocation(line: 2368, column: 9, scope: !4167)
!4174 = !DILocation(line: 2370, column: 9, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4148, file: !939, line: 2370, column: 9)
!4176 = !DILocation(line: 2370, column: 9, scope: !4148)
!4177 = !DILocation(line: 2371, column: 46, scope: !4175)
!4178 = !DILocation(line: 2371, column: 51, scope: !4175)
!4179 = !DILocation(line: 2371, column: 61, scope: !4175)
!4180 = !DILocation(line: 2371, column: 66, scope: !4175)
!4181 = !DILocation(line: 2371, column: 73, scope: !4175)
!4182 = !DILocation(line: 2371, column: 16, scope: !4175)
!4183 = !DILocation(line: 2371, column: 9, scope: !4175)
!4184 = !DILocation(line: 2373, column: 34, scope: !4175)
!4185 = !DILocation(line: 2373, column: 39, scope: !4175)
!4186 = !DILocation(line: 2373, column: 55, scope: !4175)
!4187 = !DILocation(line: 2373, column: 16, scope: !4175)
!4188 = !DILocation(line: 2373, column: 9, scope: !4175)
!4189 = !DILocation(line: 2374, column: 1, scope: !4148)
!4190 = distinct !DISubprogram(name: "mxf_get_essence_container_ul_index", scope: !939, file: !939, line: 578, type: !4191, isLocal: true, isDefinition: true, scopeLine: 579, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{!1042, !3}
!4193 = !DILocalVariable(name: "id", arg: 1, scope: !4190, file: !939, line: 578, type: !3)
!4194 = !DILocation(line: 578, column: 62, scope: !4190)
!4195 = !DILocalVariable(name: "i", scope: !4190, file: !939, line: 580, type: !1042)
!4196 = !DILocation(line: 580, column: 9, scope: !4190)
!4197 = !DILocation(line: 581, column: 12, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4190, file: !939, line: 581, column: 5)
!4199 = !DILocation(line: 581, column: 10, scope: !4198)
!4200 = !DILocation(line: 581, column: 38, scope: !4201)
!4201 = !DILexicalBlockFile(scope: !4202, file: !939, discriminator: 1)
!4202 = distinct !DILexicalBlock(scope: !4198, file: !939, line: 581, column: 5)
!4203 = !DILocation(line: 581, column: 17, scope: !4201)
!4204 = !DILocation(line: 581, column: 41, scope: !4201)
!4205 = !DILocation(line: 581, column: 5, scope: !4201)
!4206 = !DILocation(line: 582, column: 34, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4202, file: !939, line: 582, column: 13)
!4208 = !DILocation(line: 582, column: 13, scope: !4207)
!4209 = !DILocation(line: 582, column: 37, scope: !4207)
!4210 = !DILocation(line: 582, column: 43, scope: !4207)
!4211 = !DILocation(line: 582, column: 40, scope: !4207)
!4212 = !DILocation(line: 582, column: 13, scope: !4202)
!4213 = !DILocation(line: 583, column: 41, scope: !4207)
!4214 = !DILocation(line: 583, column: 20, scope: !4207)
!4215 = !DILocation(line: 583, column: 44, scope: !4207)
!4216 = !DILocation(line: 583, column: 13, scope: !4207)
!4217 = !DILocation(line: 582, column: 43, scope: !4218)
!4218 = !DILexicalBlockFile(scope: !4207, file: !939, discriminator: 1)
!4219 = !DILocation(line: 581, column: 46, scope: !4220)
!4220 = !DILexicalBlockFile(scope: !4202, file: !939, discriminator: 2)
!4221 = !DILocation(line: 581, column: 5, scope: !4220)
!4222 = distinct !{!4222, !4223}
!4223 = !DILocation(line: 581, column: 5, scope: !4190)
!4224 = !DILocation(line: 584, column: 5, scope: !4190)
!4225 = !DILocation(line: 585, column: 1, scope: !4190)
!4226 = distinct !DISubprogram(name: "mxf_gen_umid", scope: !939, file: !939, line: 2351, type: !4227, isLocal: true, isDefinition: true, scopeLine: 2352, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4227 = !DISubroutineType(types: !4228)
!4228 = !{null, !2417}
!4229 = !DILocalVariable(name: "s", arg: 1, scope: !4226, file: !939, line: 2351, type: !2417)
!4230 = !DILocation(line: 2351, column: 43, scope: !4226)
!4231 = !DILocalVariable(name: "mxf", scope: !4226, file: !939, line: 2353, type: !2567)
!4232 = !DILocation(line: 2353, column: 17, scope: !4226)
!4233 = !DILocation(line: 2353, column: 23, scope: !4226)
!4234 = !DILocation(line: 2353, column: 26, scope: !4226)
!4235 = !DILocalVariable(name: "seed", scope: !4226, file: !939, line: 2354, type: !1034)
!4236 = !DILocation(line: 2354, column: 14, scope: !4226)
!4237 = !DILocation(line: 2354, column: 21, scope: !4226)
!4238 = !DILocalVariable(name: "umid", scope: !4226, file: !939, line: 2355, type: !1039)
!4239 = !DILocation(line: 2355, column: 14, scope: !4226)
!4240 = !DILocation(line: 2355, column: 21, scope: !4226)
!4241 = !DILocation(line: 2355, column: 26, scope: !4226)
!4242 = !DILocation(line: 2357, column: 62, scope: !4226)
!4243 = !DILocation(line: 2357, column: 51, scope: !4226)
!4244 = !DILocation(line: 2357, column: 32, scope: !4226)
!4245 = !DILocation(line: 2357, column: 37, scope: !4226)
!4246 = !DILocation(line: 2357, column: 45, scope: !4226)
!4247 = !DILocation(line: 2357, column: 48, scope: !4226)
!4248 = !DILocation(line: 2358, column: 64, scope: !4226)
!4249 = !DILocation(line: 2358, column: 68, scope: !4226)
!4250 = !DILocation(line: 2358, column: 53, scope: !4226)
!4251 = !DILocation(line: 2358, column: 32, scope: !4226)
!4252 = !DILocation(line: 2358, column: 37, scope: !4226)
!4253 = !DILocation(line: 2358, column: 41, scope: !4226)
!4254 = !DILocation(line: 2358, column: 47, scope: !4226)
!4255 = !DILocation(line: 2358, column: 50, scope: !4226)
!4256 = !DILocation(line: 2360, column: 28, scope: !4226)
!4257 = !DILocation(line: 2360, column: 33, scope: !4226)
!4258 = !DILocation(line: 2360, column: 5, scope: !4226)
!4259 = !DILocation(line: 2360, column: 10, scope: !4226)
!4260 = !DILocation(line: 2360, column: 26, scope: !4226)
!4261 = !DILocation(line: 2361, column: 1, scope: !4226)
!4262 = distinct !DISubprogram(name: "mxf_parse_timestamp", scope: !939, file: !939, line: 2335, type: !4263, isLocal: true, isDefinition: true, scopeLine: 2336, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{!1039, !1008}
!4265 = !DILocalVariable(name: "timestamp64", arg: 1, scope: !4262, file: !939, line: 2335, type: !1008)
!4266 = !DILocation(line: 2335, column: 45, scope: !4262)
!4267 = !DILocalVariable(name: "timestamp", scope: !4262, file: !939, line: 2337, type: !4268)
!4268 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !4269, line: 75, baseType: !4270)
!4269 = !DIFile(filename: "/usr/include/time.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!4270 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !4271, line: 139, baseType: !1010)
!4271 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!4272 = !DILocation(line: 2337, column: 12, scope: !4262)
!4273 = !DILocation(line: 2337, column: 24, scope: !4262)
!4274 = !DILocation(line: 2337, column: 36, scope: !4262)
!4275 = !DILocalVariable(name: "tmbuf", scope: !4262, file: !939, line: 2338, type: !4276)
!4276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !4269, line: 133, size: 448, align: 64, elements: !4277)
!4277 = !{!4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288}
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !4276, file: !4269, line: 135, baseType: !1042, size: 32, align: 32)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !4276, file: !4269, line: 136, baseType: !1042, size: 32, align: 32, offset: 32)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !4276, file: !4269, line: 137, baseType: !1042, size: 32, align: 32, offset: 64)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !4276, file: !4269, line: 138, baseType: !1042, size: 32, align: 32, offset: 96)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !4276, file: !4269, line: 139, baseType: !1042, size: 32, align: 32, offset: 128)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !4276, file: !4269, line: 140, baseType: !1042, size: 32, align: 32, offset: 160)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !4276, file: !4269, line: 141, baseType: !1042, size: 32, align: 32, offset: 192)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !4276, file: !4269, line: 142, baseType: !1042, size: 32, align: 32, offset: 224)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !4276, file: !4269, line: 143, baseType: !1042, size: 32, align: 32, offset: 256)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_gmtoff", scope: !4276, file: !4269, line: 149, baseType: !1010, size: 64, align: 64, offset: 320)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_zone", scope: !4276, file: !4269, line: 150, baseType: !1107, size: 64, align: 64, offset: 384)
!4289 = !DILocation(line: 2338, column: 15, scope: !4262)
!4290 = !DILocalVariable(name: "time", scope: !4262, file: !939, line: 2339, type: !4291)
!4291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64, align: 64)
!4292 = !DILocation(line: 2339, column: 16, scope: !4262)
!4293 = !DILocation(line: 2339, column: 23, scope: !4262)
!4294 = !DILocation(line: 2340, column: 10, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4262, file: !939, line: 2340, column: 9)
!4296 = !DILocation(line: 2340, column: 9, scope: !4262)
!4297 = !DILocation(line: 2341, column: 9, scope: !4295)
!4298 = !DILocation(line: 2342, column: 23, scope: !4262)
!4299 = !DILocation(line: 2342, column: 29, scope: !4262)
!4300 = !DILocation(line: 2342, column: 36, scope: !4262)
!4301 = !DILocation(line: 2342, column: 12, scope: !4262)
!4302 = !DILocation(line: 2342, column: 43, scope: !4262)
!4303 = !DILocation(line: 2343, column: 23, scope: !4262)
!4304 = !DILocation(line: 2343, column: 29, scope: !4262)
!4305 = !DILocation(line: 2343, column: 35, scope: !4262)
!4306 = !DILocation(line: 2343, column: 12, scope: !4262)
!4307 = !DILocation(line: 2343, column: 39, scope: !4262)
!4308 = !DILocation(line: 2342, column: 49, scope: !4262)
!4309 = !DILocation(line: 2344, column: 23, scope: !4262)
!4310 = !DILocation(line: 2344, column: 29, scope: !4262)
!4311 = !DILocation(line: 2344, column: 12, scope: !4262)
!4312 = !DILocation(line: 2344, column: 37, scope: !4262)
!4313 = !DILocation(line: 2343, column: 45, scope: !4262)
!4314 = !DILocation(line: 2345, column: 23, scope: !4262)
!4315 = !DILocation(line: 2345, column: 29, scope: !4262)
!4316 = !DILocation(line: 2345, column: 37, scope: !4262)
!4317 = !DILocation(line: 2344, column: 43, scope: !4262)
!4318 = !DILocation(line: 2346, column: 23, scope: !4262)
!4319 = !DILocation(line: 2346, column: 29, scope: !4262)
!4320 = !DILocation(line: 2346, column: 36, scope: !4262)
!4321 = !DILocation(line: 2345, column: 43, scope: !4262)
!4322 = !DILocation(line: 2347, column: 23, scope: !4262)
!4323 = !DILocation(line: 2347, column: 29, scope: !4262)
!4324 = !DILocation(line: 2347, column: 36, scope: !4262)
!4325 = !DILocation(line: 2346, column: 42, scope: !4262)
!4326 = !DILocation(line: 2348, column: 24, scope: !4262)
!4327 = !DILocation(line: 2348, column: 36, scope: !4262)
!4328 = !DILocation(line: 2348, column: 47, scope: !4262)
!4329 = !DILocation(line: 2347, column: 41, scope: !4262)
!4330 = !DILocation(line: 2342, column: 5, scope: !4262)
!4331 = !DILocation(line: 2349, column: 1, scope: !4262)
!4332 = distinct !DISubprogram(name: "mxf_write_mpegvideo_desc", scope: !939, file: !939, line: 1344, type: !2415, isLocal: true, isDefinition: true, scopeLine: 1345, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4333 = !DILocalVariable(name: "s", arg: 1, scope: !4332, file: !939, line: 1344, type: !2417)
!4334 = !DILocation(line: 1344, column: 55, scope: !4332)
!4335 = !DILocalVariable(name: "st", arg: 2, scope: !4332, file: !939, line: 1344, type: !1375)
!4336 = !DILocation(line: 1344, column: 68, scope: !4332)
!4337 = !DILocalVariable(name: "pb", scope: !4332, file: !939, line: 1346, type: !1309)
!4338 = !DILocation(line: 1346, column: 18, scope: !4332)
!4339 = !DILocation(line: 1346, column: 23, scope: !4332)
!4340 = !DILocation(line: 1346, column: 26, scope: !4332)
!4341 = !DILocalVariable(name: "sc", scope: !4332, file: !939, line: 1347, type: !1011)
!4342 = !DILocation(line: 1347, column: 23, scope: !4332)
!4343 = !DILocation(line: 1347, column: 28, scope: !4332)
!4344 = !DILocation(line: 1347, column: 32, scope: !4332)
!4345 = !DILocalVariable(name: "profile_and_level", scope: !4332, file: !939, line: 1348, type: !1042)
!4346 = !DILocation(line: 1348, column: 9, scope: !4332)
!4347 = !DILocation(line: 1348, column: 30, scope: !4332)
!4348 = !DILocation(line: 1348, column: 34, scope: !4332)
!4349 = !DILocation(line: 1348, column: 44, scope: !4332)
!4350 = !DILocation(line: 1348, column: 51, scope: !4332)
!4351 = !DILocation(line: 1348, column: 58, scope: !4332)
!4352 = !DILocation(line: 1348, column: 62, scope: !4332)
!4353 = !DILocation(line: 1348, column: 72, scope: !4332)
!4354 = !DILocation(line: 1348, column: 56, scope: !4332)
!4355 = !DILocalVariable(name: "pos", scope: !4332, file: !939, line: 1349, type: !1008)
!4356 = !DILocation(line: 1349, column: 13, scope: !4332)
!4357 = !DILocation(line: 1349, column: 41, scope: !4332)
!4358 = !DILocation(line: 1349, column: 44, scope: !4332)
!4359 = !DILocation(line: 1349, column: 19, scope: !4332)
!4360 = !DILocation(line: 1351, column: 9, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4332, file: !939, line: 1351, column: 9)
!4362 = !DILocation(line: 1351, column: 13, scope: !4361)
!4363 = !DILocation(line: 1351, column: 23, scope: !4361)
!4364 = !DILocation(line: 1351, column: 32, scope: !4361)
!4365 = !DILocation(line: 1351, column: 9, scope: !4332)
!4366 = !DILocation(line: 1353, column: 29, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4361, file: !939, line: 1351, column: 53)
!4368 = !DILocation(line: 1353, column: 9, scope: !4367)
!4369 = !DILocation(line: 1354, column: 19, scope: !4367)
!4370 = !DILocation(line: 1354, column: 23, scope: !4367)
!4371 = !DILocation(line: 1354, column: 27, scope: !4367)
!4372 = !DILocation(line: 1354, column: 9, scope: !4367)
!4373 = !DILocation(line: 1357, column: 29, scope: !4367)
!4374 = !DILocation(line: 1357, column: 9, scope: !4367)
!4375 = !DILocation(line: 1358, column: 14, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4367, file: !939, line: 1358, column: 13)
!4377 = !DILocation(line: 1358, column: 18, scope: !4376)
!4378 = !DILocation(line: 1358, column: 28, scope: !4376)
!4379 = !DILocation(line: 1358, column: 13, scope: !4367)
!4380 = !DILocation(line: 1359, column: 31, scope: !4376)
!4381 = !DILocation(line: 1359, column: 13, scope: !4376)
!4382 = !DILocation(line: 1360, column: 17, scope: !4367)
!4383 = !DILocation(line: 1360, column: 21, scope: !4367)
!4384 = !DILocation(line: 1360, column: 9, scope: !4367)
!4385 = !DILocation(line: 1363, column: 29, scope: !4367)
!4386 = !DILocation(line: 1363, column: 9, scope: !4367)
!4387 = !DILocation(line: 1364, column: 17, scope: !4367)
!4388 = !DILocation(line: 1364, column: 21, scope: !4367)
!4389 = !DILocation(line: 1364, column: 25, scope: !4367)
!4390 = !DILocation(line: 1364, column: 9, scope: !4367)
!4391 = !DILocation(line: 1367, column: 29, scope: !4367)
!4392 = !DILocation(line: 1367, column: 9, scope: !4367)
!4393 = !DILocation(line: 1368, column: 17, scope: !4367)
!4394 = !DILocation(line: 1368, column: 21, scope: !4367)
!4395 = !DILocation(line: 1368, column: 25, scope: !4367)
!4396 = !DILocation(line: 1368, column: 9, scope: !4367)
!4397 = !DILocation(line: 1371, column: 29, scope: !4367)
!4398 = !DILocation(line: 1371, column: 9, scope: !4367)
!4399 = !DILocation(line: 1372, column: 19, scope: !4367)
!4400 = !DILocation(line: 1372, column: 23, scope: !4367)
!4401 = !DILocation(line: 1372, column: 27, scope: !4367)
!4402 = !DILocation(line: 1372, column: 9, scope: !4367)
!4403 = !DILocation(line: 1375, column: 29, scope: !4367)
!4404 = !DILocation(line: 1375, column: 9, scope: !4367)
!4405 = !DILocation(line: 1376, column: 19, scope: !4367)
!4406 = !DILocation(line: 1376, column: 23, scope: !4367)
!4407 = !DILocation(line: 1376, column: 27, scope: !4367)
!4408 = !DILocation(line: 1376, column: 9, scope: !4367)
!4409 = !DILocation(line: 1377, column: 5, scope: !4367)
!4410 = !DILocation(line: 1379, column: 25, scope: !4332)
!4411 = !DILocation(line: 1379, column: 29, scope: !4332)
!4412 = !DILocation(line: 1379, column: 5, scope: !4332)
!4413 = !DILocation(line: 1380, column: 1, scope: !4332)
!4414 = distinct !DISubprogram(name: "mxf_write_aes3_desc", scope: !939, file: !939, line: 1450, type: !2415, isLocal: true, isDefinition: true, scopeLine: 1451, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4415 = !DILocalVariable(name: "s", arg: 1, scope: !4414, file: !939, line: 1450, type: !2417)
!4416 = !DILocation(line: 1450, column: 50, scope: !4414)
!4417 = !DILocalVariable(name: "st", arg: 2, scope: !4414, file: !939, line: 1450, type: !1375)
!4418 = !DILocation(line: 1450, column: 63, scope: !4414)
!4419 = !DILocalVariable(name: "pos", scope: !4414, file: !939, line: 1452, type: !1008)
!4420 = !DILocation(line: 1452, column: 13, scope: !4414)
!4421 = !DILocation(line: 1452, column: 40, scope: !4414)
!4422 = !DILocation(line: 1452, column: 43, scope: !4414)
!4423 = !DILocation(line: 1452, column: 19, scope: !4414)
!4424 = !DILocation(line: 1453, column: 25, scope: !4414)
!4425 = !DILocation(line: 1453, column: 28, scope: !4414)
!4426 = !DILocation(line: 1453, column: 32, scope: !4414)
!4427 = !DILocation(line: 1453, column: 5, scope: !4414)
!4428 = !DILocation(line: 1454, column: 1, scope: !4414)
!4429 = distinct !DISubprogram(name: "mxf_write_wav_desc", scope: !939, file: !939, line: 1444, type: !2415, isLocal: true, isDefinition: true, scopeLine: 1445, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4430 = !DILocalVariable(name: "s", arg: 1, scope: !4429, file: !939, line: 1444, type: !2417)
!4431 = !DILocation(line: 1444, column: 49, scope: !4429)
!4432 = !DILocalVariable(name: "st", arg: 2, scope: !4429, file: !939, line: 1444, type: !1375)
!4433 = !DILocation(line: 1444, column: 62, scope: !4429)
!4434 = !DILocalVariable(name: "pos", scope: !4429, file: !939, line: 1446, type: !1008)
!4435 = !DILocation(line: 1446, column: 13, scope: !4429)
!4436 = !DILocation(line: 1446, column: 40, scope: !4429)
!4437 = !DILocation(line: 1446, column: 43, scope: !4429)
!4438 = !DILocation(line: 1446, column: 19, scope: !4429)
!4439 = !DILocation(line: 1447, column: 25, scope: !4429)
!4440 = !DILocation(line: 1447, column: 28, scope: !4429)
!4441 = !DILocation(line: 1447, column: 32, scope: !4429)
!4442 = !DILocation(line: 1447, column: 5, scope: !4429)
!4443 = !DILocation(line: 1448, column: 1, scope: !4429)
!4444 = distinct !DISubprogram(name: "mxf_write_cdci_desc", scope: !939, file: !939, line: 1332, type: !2415, isLocal: true, isDefinition: true, scopeLine: 1333, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4445 = !DILocalVariable(name: "s", arg: 1, scope: !4444, file: !939, line: 1332, type: !2417)
!4446 = !DILocation(line: 1332, column: 50, scope: !4444)
!4447 = !DILocalVariable(name: "st", arg: 2, scope: !4444, file: !939, line: 1332, type: !1375)
!4448 = !DILocation(line: 1332, column: 63, scope: !4444)
!4449 = !DILocalVariable(name: "pos", scope: !4444, file: !939, line: 1334, type: !1008)
!4450 = !DILocation(line: 1334, column: 13, scope: !4444)
!4451 = !DILocation(line: 1334, column: 41, scope: !4444)
!4452 = !DILocation(line: 1334, column: 44, scope: !4444)
!4453 = !DILocation(line: 1334, column: 19, scope: !4444)
!4454 = !DILocation(line: 1335, column: 25, scope: !4444)
!4455 = !DILocation(line: 1335, column: 28, scope: !4444)
!4456 = !DILocation(line: 1335, column: 32, scope: !4444)
!4457 = !DILocation(line: 1335, column: 5, scope: !4444)
!4458 = !DILocation(line: 1336, column: 1, scope: !4444)
!4459 = distinct !DISubprogram(name: "mxf_write_generic_sound_desc", scope: !939, file: !939, line: 1456, type: !2415, isLocal: true, isDefinition: true, scopeLine: 1457, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4460 = !DILocalVariable(name: "s", arg: 1, scope: !4459, file: !939, line: 1456, type: !2417)
!4461 = !DILocation(line: 1456, column: 59, scope: !4459)
!4462 = !DILocalVariable(name: "st", arg: 2, scope: !4459, file: !939, line: 1456, type: !1375)
!4463 = !DILocation(line: 1456, column: 72, scope: !4459)
!4464 = !DILocalVariable(name: "pos", scope: !4459, file: !939, line: 1458, type: !1008)
!4465 = !DILocation(line: 1458, column: 13, scope: !4459)
!4466 = !DILocation(line: 1458, column: 50, scope: !4459)
!4467 = !DILocation(line: 1458, column: 53, scope: !4459)
!4468 = !DILocation(line: 1458, column: 19, scope: !4459)
!4469 = !DILocation(line: 1459, column: 25, scope: !4459)
!4470 = !DILocation(line: 1459, column: 28, scope: !4459)
!4471 = !DILocation(line: 1459, column: 32, scope: !4459)
!4472 = !DILocation(line: 1459, column: 5, scope: !4459)
!4473 = !DILocation(line: 1460, column: 1, scope: !4459)
!4474 = distinct !DISubprogram(name: "mxf_write_s436m_anc_desc", scope: !939, file: !939, line: 1338, type: !2415, isLocal: true, isDefinition: true, scopeLine: 1339, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4475 = !DILocalVariable(name: "s", arg: 1, scope: !4474, file: !939, line: 1338, type: !2417)
!4476 = !DILocation(line: 1338, column: 55, scope: !4474)
!4477 = !DILocalVariable(name: "st", arg: 2, scope: !4474, file: !939, line: 1338, type: !1375)
!4478 = !DILocation(line: 1338, column: 68, scope: !4474)
!4479 = !DILocalVariable(name: "pos", scope: !4474, file: !939, line: 1340, type: !1008)
!4480 = !DILocation(line: 1340, column: 13, scope: !4474)
!4481 = !DILocation(line: 1340, column: 42, scope: !4474)
!4482 = !DILocation(line: 1340, column: 45, scope: !4474)
!4483 = !DILocation(line: 1340, column: 19, scope: !4474)
!4484 = !DILocation(line: 1341, column: 25, scope: !4474)
!4485 = !DILocation(line: 1341, column: 28, scope: !4474)
!4486 = !DILocation(line: 1341, column: 32, scope: !4474)
!4487 = !DILocation(line: 1341, column: 5, scope: !4474)
!4488 = !DILocation(line: 1342, column: 1, scope: !4474)
!4489 = distinct !DISubprogram(name: "mxf_write_cdci_common", scope: !939, file: !939, line: 1157, type: !4490, isLocal: true, isDefinition: true, scopeLine: 1158, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4490 = !DISubroutineType(types: !4491)
!4491 = !{!1008, !2417, !1375, !1092}
!4492 = !DILocalVariable(name: "s", arg: 1, scope: !4489, file: !939, line: 1157, type: !2417)
!4493 = !DILocation(line: 1157, column: 55, scope: !4489)
!4494 = !DILocalVariable(name: "st", arg: 2, scope: !4489, file: !939, line: 1157, type: !1375)
!4495 = !DILocation(line: 1157, column: 68, scope: !4489)
!4496 = !DILocalVariable(name: "key", arg: 3, scope: !4489, file: !939, line: 1157, type: !1092)
!4497 = !DILocation(line: 1157, column: 82, scope: !4489)
!4498 = !DILocalVariable(name: "sc", scope: !4489, file: !939, line: 1159, type: !1011)
!4499 = !DILocation(line: 1159, column: 23, scope: !4489)
!4500 = !DILocation(line: 1159, column: 28, scope: !4489)
!4501 = !DILocation(line: 1159, column: 32, scope: !4489)
!4502 = !DILocalVariable(name: "pb", scope: !4489, file: !939, line: 1160, type: !1309)
!4503 = !DILocation(line: 1160, column: 18, scope: !4489)
!4504 = !DILocation(line: 1160, column: 23, scope: !4489)
!4505 = !DILocation(line: 1160, column: 26, scope: !4489)
!4506 = !DILocalVariable(name: "stored_width", scope: !4489, file: !939, line: 1161, type: !1042)
!4507 = !DILocation(line: 1161, column: 9, scope: !4489)
!4508 = !DILocation(line: 1161, column: 25, scope: !4489)
!4509 = !DILocation(line: 1161, column: 29, scope: !4489)
!4510 = !DILocation(line: 1161, column: 39, scope: !4489)
!4511 = !DILocation(line: 1161, column: 45, scope: !4489)
!4512 = !DILocation(line: 1161, column: 49, scope: !4489)
!4513 = !DILocation(line: 1161, column: 52, scope: !4489)
!4514 = !DILocalVariable(name: "stored_height", scope: !4489, file: !939, line: 1162, type: !1042)
!4515 = !DILocation(line: 1162, column: 9, scope: !4489)
!4516 = !DILocation(line: 1162, column: 26, scope: !4489)
!4517 = !DILocation(line: 1162, column: 30, scope: !4489)
!4518 = !DILocation(line: 1162, column: 40, scope: !4489)
!4519 = !DILocation(line: 1162, column: 46, scope: !4489)
!4520 = !DILocation(line: 1162, column: 50, scope: !4489)
!4521 = !DILocation(line: 1162, column: 53, scope: !4489)
!4522 = !DILocalVariable(name: "display_height", scope: !4489, file: !939, line: 1163, type: !1042)
!4523 = !DILocation(line: 1163, column: 9, scope: !4489)
!4524 = !DILocalVariable(name: "f1", scope: !4489, file: !939, line: 1164, type: !1042)
!4525 = !DILocation(line: 1164, column: 9, scope: !4489)
!4526 = !DILocalVariable(name: "f2", scope: !4489, file: !939, line: 1164, type: !1042)
!4527 = !DILocation(line: 1164, column: 13, scope: !4489)
!4528 = !DILocalVariable(name: "transfer_ul", scope: !4489, file: !939, line: 1165, type: !1055)
!4529 = !DILocation(line: 1165, column: 9, scope: !4489)
!4530 = !DILocalVariable(name: "pos", scope: !4489, file: !939, line: 1166, type: !1008)
!4531 = !DILocation(line: 1166, column: 13, scope: !4489)
!4532 = !DILocation(line: 1166, column: 42, scope: !4489)
!4533 = !DILocation(line: 1166, column: 45, scope: !4489)
!4534 = !DILocation(line: 1166, column: 49, scope: !4489)
!4535 = !DILocation(line: 1166, column: 19, scope: !4489)
!4536 = !DILocation(line: 1168, column: 13, scope: !4489)
!4537 = !DILocation(line: 1168, column: 26, scope: !4489)
!4538 = !DILocation(line: 1168, column: 30, scope: !4489)
!4539 = !DILocation(line: 1168, column: 40, scope: !4489)
!4540 = !DILocation(line: 1168, column: 5, scope: !4489)
!4541 = !DILocation(line: 1170, column: 25, scope: !4489)
!4542 = !DILocation(line: 1170, column: 5, scope: !4489)
!4543 = !DILocation(line: 1171, column: 15, scope: !4489)
!4544 = !DILocation(line: 1171, column: 19, scope: !4489)
!4545 = !DILocation(line: 1171, column: 5, scope: !4489)
!4546 = !DILocation(line: 1173, column: 25, scope: !4489)
!4547 = !DILocation(line: 1173, column: 5, scope: !4489)
!4548 = !DILocation(line: 1174, column: 15, scope: !4489)
!4549 = !DILocation(line: 1174, column: 19, scope: !4489)
!4550 = !DILocation(line: 1174, column: 34, scope: !4489)
!4551 = !DILocation(line: 1174, column: 38, scope: !4489)
!4552 = !DILocation(line: 1174, column: 32, scope: !4489)
!4553 = !DILocation(line: 1174, column: 5, scope: !4489)
!4554 = !DILocation(line: 1176, column: 9, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4489, file: !939, line: 1176, column: 9)
!4556 = !DILocation(line: 1176, column: 12, scope: !4555)
!4557 = !DILocation(line: 1176, column: 20, scope: !4555)
!4558 = !DILocation(line: 1176, column: 9, scope: !4489)
!4559 = !DILocation(line: 1178, column: 29, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4555, file: !939, line: 1176, column: 42)
!4561 = !DILocation(line: 1178, column: 9, scope: !4560)
!4562 = !DILocation(line: 1179, column: 19, scope: !4560)
!4563 = !DILocation(line: 1179, column: 9, scope: !4560)
!4564 = !DILocation(line: 1182, column: 29, scope: !4560)
!4565 = !DILocation(line: 1182, column: 9, scope: !4560)
!4566 = !DILocation(line: 1183, column: 19, scope: !4560)
!4567 = !DILocation(line: 1183, column: 9, scope: !4560)
!4568 = !DILocation(line: 1186, column: 29, scope: !4560)
!4569 = !DILocation(line: 1186, column: 9, scope: !4560)
!4570 = !DILocation(line: 1187, column: 19, scope: !4560)
!4571 = !DILocation(line: 1187, column: 9, scope: !4560)
!4572 = !DILocation(line: 1188, column: 5, scope: !4560)
!4573 = !DILocation(line: 1191, column: 25, scope: !4489)
!4574 = !DILocation(line: 1191, column: 5, scope: !4489)
!4575 = !DILocation(line: 1192, column: 15, scope: !4489)
!4576 = !DILocation(line: 1192, column: 19, scope: !4489)
!4577 = !DILocation(line: 1192, column: 23, scope: !4489)
!4578 = !DILocation(line: 1192, column: 33, scope: !4489)
!4579 = !DILocation(line: 1192, column: 5, scope: !4489)
!4580 = !DILocation(line: 1195, column: 25, scope: !4489)
!4581 = !DILocation(line: 1195, column: 5, scope: !4489)
!4582 = !DILocation(line: 1196, column: 15, scope: !4489)
!4583 = !DILocation(line: 1196, column: 19, scope: !4489)
!4584 = !DILocation(line: 1196, column: 23, scope: !4489)
!4585 = !DILocation(line: 1196, column: 33, scope: !4489)
!4586 = !DILocation(line: 1196, column: 41, scope: !4489)
!4587 = !DILocation(line: 1196, column: 45, scope: !4489)
!4588 = !DILocation(line: 1196, column: 39, scope: !4489)
!4589 = !DILocation(line: 1196, column: 5, scope: !4489)
!4590 = !DILocation(line: 1199, column: 25, scope: !4489)
!4591 = !DILocation(line: 1199, column: 5, scope: !4489)
!4592 = !DILocation(line: 1200, column: 15, scope: !4489)
!4593 = !DILocation(line: 1200, column: 5, scope: !4489)
!4594 = !DILocation(line: 1203, column: 25, scope: !4489)
!4595 = !DILocation(line: 1203, column: 5, scope: !4489)
!4596 = !DILocation(line: 1204, column: 15, scope: !4489)
!4597 = !DILocation(line: 1204, column: 5, scope: !4489)
!4598 = !DILocation(line: 1206, column: 25, scope: !4489)
!4599 = !DILocation(line: 1206, column: 5, scope: !4489)
!4600 = !DILocation(line: 1207, column: 15, scope: !4489)
!4601 = !DILocation(line: 1207, column: 19, scope: !4489)
!4602 = !DILocation(line: 1207, column: 23, scope: !4489)
!4603 = !DILocation(line: 1207, column: 33, scope: !4489)
!4604 = !DILocation(line: 1207, column: 5, scope: !4489)
!4605 = !DILocation(line: 1209, column: 9, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4489, file: !939, line: 1209, column: 9)
!4607 = !DILocation(line: 1209, column: 13, scope: !4606)
!4608 = !DILocation(line: 1209, column: 23, scope: !4606)
!4609 = !DILocation(line: 1209, column: 30, scope: !4606)
!4610 = !DILocation(line: 1209, column: 9, scope: !4489)
!4611 = !DILocation(line: 1210, column: 24, scope: !4606)
!4612 = !DILocation(line: 1210, column: 9, scope: !4606)
!4613 = !DILocation(line: 1211, column: 14, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4606, file: !939, line: 1211, column: 14)
!4615 = !DILocation(line: 1211, column: 18, scope: !4614)
!4616 = !DILocation(line: 1211, column: 28, scope: !4614)
!4617 = !DILocation(line: 1211, column: 35, scope: !4614)
!4618 = !DILocation(line: 1211, column: 14, scope: !4606)
!4619 = !DILocation(line: 1212, column: 24, scope: !4614)
!4620 = !DILocation(line: 1212, column: 9, scope: !4614)
!4621 = !DILocation(line: 1214, column: 26, scope: !4614)
!4622 = !DILocation(line: 1214, column: 30, scope: !4614)
!4623 = !DILocation(line: 1214, column: 40, scope: !4614)
!4624 = !DILocation(line: 1214, column: 24, scope: !4614)
!4625 = !DILocation(line: 1216, column: 25, scope: !4489)
!4626 = !DILocation(line: 1216, column: 5, scope: !4489)
!4627 = !DILocation(line: 1217, column: 15, scope: !4489)
!4628 = !DILocation(line: 1217, column: 19, scope: !4489)
!4629 = !DILocation(line: 1217, column: 35, scope: !4489)
!4630 = !DILocation(line: 1217, column: 39, scope: !4489)
!4631 = !DILocation(line: 1217, column: 33, scope: !4489)
!4632 = !DILocation(line: 1217, column: 5, scope: !4489)
!4633 = !DILocation(line: 1220, column: 25, scope: !4489)
!4634 = !DILocation(line: 1220, column: 5, scope: !4489)
!4635 = !DILocation(line: 1221, column: 15, scope: !4489)
!4636 = !DILocation(line: 1221, column: 5, scope: !4489)
!4637 = !DILocation(line: 1224, column: 25, scope: !4489)
!4638 = !DILocation(line: 1224, column: 5, scope: !4489)
!4639 = !DILocation(line: 1225, column: 15, scope: !4489)
!4640 = !DILocation(line: 1225, column: 20, scope: !4489)
!4641 = !DILocation(line: 1225, column: 24, scope: !4489)
!4642 = !DILocation(line: 1225, column: 34, scope: !4489)
!4643 = !DILocation(line: 1225, column: 43, scope: !4489)
!4644 = !DILocation(line: 1225, column: 41, scope: !4489)
!4645 = !DILocation(line: 1225, column: 60, scope: !4489)
!4646 = !DILocation(line: 1225, column: 64, scope: !4489)
!4647 = !DILocation(line: 1225, column: 58, scope: !4489)
!4648 = !DILocation(line: 1225, column: 5, scope: !4489)
!4649 = !DILocation(line: 1227, column: 9, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4489, file: !939, line: 1227, column: 9)
!4651 = !DILocation(line: 1227, column: 13, scope: !4650)
!4652 = !DILocation(line: 1227, column: 9, scope: !4489)
!4653 = !DILocation(line: 1229, column: 29, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4650, file: !939, line: 1227, column: 25)
!4655 = !DILocation(line: 1229, column: 9, scope: !4654)
!4656 = !DILocation(line: 1230, column: 19, scope: !4654)
!4657 = !DILocation(line: 1230, column: 26, scope: !4654)
!4658 = !DILocation(line: 1230, column: 30, scope: !4654)
!4659 = !DILocation(line: 1230, column: 40, scope: !4654)
!4660 = !DILocation(line: 1230, column: 49, scope: !4654)
!4661 = !DILocation(line: 1230, column: 47, scope: !4654)
!4662 = !DILocation(line: 1230, column: 64, scope: !4654)
!4663 = !DILocation(line: 1230, column: 23, scope: !4654)
!4664 = !DILocation(line: 1230, column: 9, scope: !4654)
!4665 = !DILocation(line: 1231, column: 5, scope: !4654)
!4666 = !DILocation(line: 1234, column: 25, scope: !4489)
!4667 = !DILocation(line: 1234, column: 5, scope: !4489)
!4668 = !DILocation(line: 1235, column: 15, scope: !4489)
!4669 = !DILocation(line: 1235, column: 19, scope: !4489)
!4670 = !DILocation(line: 1235, column: 23, scope: !4489)
!4671 = !DILocation(line: 1235, column: 5, scope: !4489)
!4672 = !DILocation(line: 1238, column: 25, scope: !4489)
!4673 = !DILocation(line: 1238, column: 5, scope: !4489)
!4674 = !DILocation(line: 1239, column: 15, scope: !4489)
!4675 = !DILocation(line: 1239, column: 19, scope: !4489)
!4676 = !DILocation(line: 1239, column: 23, scope: !4489)
!4677 = !DILocation(line: 1239, column: 5, scope: !4489)
!4678 = !DILocation(line: 1242, column: 25, scope: !4489)
!4679 = !DILocation(line: 1242, column: 5, scope: !4489)
!4680 = !DILocation(line: 1243, column: 15, scope: !4489)
!4681 = !DILocation(line: 1243, column: 19, scope: !4489)
!4682 = !DILocation(line: 1243, column: 23, scope: !4489)
!4683 = !DILocation(line: 1243, column: 5, scope: !4489)
!4684 = !DILocation(line: 1246, column: 25, scope: !4489)
!4685 = !DILocation(line: 1246, column: 5, scope: !4489)
!4686 = !DILocation(line: 1247, column: 13, scope: !4489)
!4687 = !DILocation(line: 1247, column: 17, scope: !4489)
!4688 = !DILocation(line: 1247, column: 21, scope: !4489)
!4689 = !DILocation(line: 1247, column: 5, scope: !4489)
!4690 = !DILocation(line: 1250, column: 25, scope: !4489)
!4691 = !DILocation(line: 1250, column: 5, scope: !4489)
!4692 = !DILocation(line: 1251, column: 15, scope: !4489)
!4693 = !DILocation(line: 1251, column: 5, scope: !4489)
!4694 = !DILocation(line: 1253, column: 9, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4489, file: !939, line: 1253, column: 9)
!4696 = !DILocation(line: 1253, column: 13, scope: !4695)
!4697 = !DILocation(line: 1253, column: 23, scope: !4695)
!4698 = !DILocation(line: 1253, column: 35, scope: !4695)
!4699 = !DILocation(line: 1253, column: 9, scope: !4489)
!4700 = !DILocalVariable(name: "black", scope: !4701, file: !939, line: 1254, type: !1042)
!4701 = distinct !DILexicalBlock(scope: !4695, file: !939, line: 1253, column: 63)
!4702 = !DILocation(line: 1254, column: 13, scope: !4701)
!4703 = !DILocalVariable(name: "white", scope: !4701, file: !939, line: 1255, type: !1042)
!4704 = !DILocation(line: 1255, column: 13, scope: !4701)
!4705 = !DILocation(line: 1255, column: 25, scope: !4701)
!4706 = !DILocation(line: 1255, column: 29, scope: !4701)
!4707 = !DILocation(line: 1255, column: 23, scope: !4701)
!4708 = !DILocation(line: 1255, column: 46, scope: !4701)
!4709 = !DILocalVariable(name: "color", scope: !4701, file: !939, line: 1256, type: !1042)
!4710 = !DILocation(line: 1256, column: 13, scope: !4701)
!4711 = !DILocation(line: 1256, column: 25, scope: !4701)
!4712 = !DILocation(line: 1256, column: 29, scope: !4701)
!4713 = !DILocation(line: 1256, column: 23, scope: !4701)
!4714 = !DILocation(line: 1256, column: 46, scope: !4701)
!4715 = !DILocation(line: 1257, column: 13, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4701, file: !939, line: 1257, column: 13)
!4717 = !DILocation(line: 1257, column: 17, scope: !4716)
!4718 = !DILocation(line: 1257, column: 27, scope: !4716)
!4719 = !DILocation(line: 1257, column: 39, scope: !4716)
!4720 = !DILocation(line: 1257, column: 13, scope: !4701)
!4721 = !DILocation(line: 1258, column: 27, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4716, file: !939, line: 1257, column: 60)
!4723 = !DILocation(line: 1258, column: 31, scope: !4722)
!4724 = !DILocation(line: 1258, column: 47, scope: !4722)
!4725 = !DILocation(line: 1258, column: 23, scope: !4722)
!4726 = !DILocation(line: 1258, column: 19, scope: !4722)
!4727 = !DILocation(line: 1259, column: 29, scope: !4722)
!4728 = !DILocation(line: 1259, column: 33, scope: !4722)
!4729 = !DILocation(line: 1259, column: 49, scope: !4722)
!4730 = !DILocation(line: 1259, column: 25, scope: !4722)
!4731 = !DILocation(line: 1259, column: 19, scope: !4722)
!4732 = !DILocation(line: 1260, column: 29, scope: !4722)
!4733 = !DILocation(line: 1260, column: 33, scope: !4722)
!4734 = !DILocation(line: 1260, column: 49, scope: !4722)
!4735 = !DILocation(line: 1260, column: 25, scope: !4722)
!4736 = !DILocation(line: 1260, column: 55, scope: !4722)
!4737 = !DILocation(line: 1260, column: 19, scope: !4722)
!4738 = !DILocation(line: 1261, column: 9, scope: !4722)
!4739 = !DILocation(line: 1262, column: 29, scope: !4701)
!4740 = !DILocation(line: 1262, column: 9, scope: !4701)
!4741 = !DILocation(line: 1263, column: 19, scope: !4701)
!4742 = !DILocation(line: 1263, column: 23, scope: !4701)
!4743 = !DILocation(line: 1263, column: 9, scope: !4701)
!4744 = !DILocation(line: 1264, column: 29, scope: !4701)
!4745 = !DILocation(line: 1264, column: 9, scope: !4701)
!4746 = !DILocation(line: 1265, column: 19, scope: !4701)
!4747 = !DILocation(line: 1265, column: 23, scope: !4701)
!4748 = !DILocation(line: 1265, column: 9, scope: !4701)
!4749 = !DILocation(line: 1266, column: 29, scope: !4701)
!4750 = !DILocation(line: 1266, column: 9, scope: !4701)
!4751 = !DILocation(line: 1267, column: 19, scope: !4701)
!4752 = !DILocation(line: 1267, column: 23, scope: !4701)
!4753 = !DILocation(line: 1267, column: 9, scope: !4701)
!4754 = !DILocation(line: 1268, column: 5, scope: !4701)
!4755 = !DILocation(line: 1270, column: 9, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4489, file: !939, line: 1270, column: 9)
!4757 = !DILocation(line: 1270, column: 13, scope: !4756)
!4758 = !DILocation(line: 1270, column: 9, scope: !4489)
!4759 = !DILocation(line: 1271, column: 29, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4756, file: !939, line: 1270, column: 30)
!4761 = !DILocation(line: 1271, column: 9, scope: !4760)
!4762 = !DILocation(line: 1272, column: 17, scope: !4760)
!4763 = !DILocation(line: 1272, column: 21, scope: !4760)
!4764 = !DILocation(line: 1272, column: 25, scope: !4760)
!4765 = !DILocation(line: 1272, column: 9, scope: !4760)
!4766 = !DILocation(line: 1273, column: 5, scope: !4760)
!4767 = !DILocation(line: 1276, column: 25, scope: !4489)
!4768 = !DILocation(line: 1276, column: 5, scope: !4489)
!4769 = !DILocation(line: 1277, column: 13, scope: !4489)
!4770 = !DILocation(line: 1277, column: 17, scope: !4489)
!4771 = !DILocation(line: 1277, column: 21, scope: !4489)
!4772 = !DILocation(line: 1277, column: 5, scope: !4489)
!4773 = !DILocation(line: 1280, column: 13, scope: !4489)
!4774 = !DILocation(line: 1280, column: 17, scope: !4489)
!4775 = !DILocation(line: 1280, column: 27, scope: !4489)
!4776 = !DILocation(line: 1280, column: 5, scope: !4489)
!4777 = !DILocation(line: 1281, column: 18, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4489, file: !939, line: 1280, column: 35)
!4779 = !DILocation(line: 1281, column: 29, scope: !4778)
!4780 = !DILocation(line: 1281, column: 33, scope: !4778)
!4781 = !DILocation(line: 1281, column: 43, scope: !4778)
!4782 = !DILocation(line: 1281, column: 52, scope: !4778)
!4783 = !DILocation(line: 1281, column: 27, scope: !4778)
!4784 = !DILocation(line: 1281, column: 88, scope: !4778)
!4785 = !DILocation(line: 1282, column: 18, scope: !4778)
!4786 = !DILocation(line: 1282, column: 26, scope: !4778)
!4787 = !DILocation(line: 1282, column: 33, scope: !4778)
!4788 = !DILocation(line: 1283, column: 18, scope: !4778)
!4789 = !DILocation(line: 1283, column: 29, scope: !4778)
!4790 = !DILocation(line: 1283, column: 33, scope: !4778)
!4791 = !DILocation(line: 1283, column: 43, scope: !4778)
!4792 = !DILocation(line: 1283, column: 52, scope: !4778)
!4793 = !DILocation(line: 1283, column: 27, scope: !4778)
!4794 = !DILocation(line: 1283, column: 88, scope: !4778)
!4795 = !DILocation(line: 1284, column: 18, scope: !4778)
!4796 = !DILocation(line: 1284, column: 26, scope: !4778)
!4797 = !DILocation(line: 1284, column: 33, scope: !4778)
!4798 = !DILocation(line: 1285, column: 18, scope: !4778)
!4799 = !DILocation(line: 1285, column: 27, scope: !4778)
!4800 = !DILocation(line: 1285, column: 32, scope: !4778)
!4801 = !DILocation(line: 1286, column: 19, scope: !4778)
!4802 = !DILocation(line: 1286, column: 28, scope: !4778)
!4803 = !DILocation(line: 1286, column: 35, scope: !4778)
!4804 = !DILocation(line: 1287, column: 17, scope: !4778)
!4805 = !DILocation(line: 1287, column: 25, scope: !4778)
!4806 = !DILocation(line: 1287, column: 30, scope: !4778)
!4807 = !DILocation(line: 1290, column: 10, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4489, file: !939, line: 1290, column: 9)
!4809 = !DILocation(line: 1290, column: 14, scope: !4808)
!4810 = !DILocation(line: 1290, column: 25, scope: !4808)
!4811 = !DILocation(line: 1290, column: 28, scope: !4812)
!4812 = !DILexicalBlockFile(scope: !4808, file: !939, discriminator: 1)
!4813 = !DILocation(line: 1290, column: 9, scope: !4812)
!4814 = !DILocation(line: 1291, column: 12, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4808, file: !939, line: 1290, column: 32)
!4816 = !DILocation(line: 1292, column: 12, scope: !4815)
!4817 = !DILocation(line: 1293, column: 5, scope: !4815)
!4818 = !DILocation(line: 1296, column: 25, scope: !4489)
!4819 = !DILocation(line: 1296, column: 5, scope: !4489)
!4820 = !DILocation(line: 1297, column: 15, scope: !4489)
!4821 = !DILocation(line: 1297, column: 5, scope: !4489)
!4822 = !DILocation(line: 1298, column: 15, scope: !4489)
!4823 = !DILocation(line: 1298, column: 5, scope: !4489)
!4824 = !DILocation(line: 1299, column: 15, scope: !4489)
!4825 = !DILocation(line: 1299, column: 19, scope: !4489)
!4826 = !DILocation(line: 1299, column: 5, scope: !4489)
!4827 = !DILocation(line: 1300, column: 15, scope: !4489)
!4828 = !DILocation(line: 1300, column: 19, scope: !4489)
!4829 = !DILocation(line: 1300, column: 5, scope: !4489)
!4830 = !DILocation(line: 1302, column: 25, scope: !4489)
!4831 = !DILocation(line: 1302, column: 5, scope: !4489)
!4832 = !DILocation(line: 1303, column: 15, scope: !4489)
!4833 = !DILocation(line: 1303, column: 19, scope: !4489)
!4834 = !DILocation(line: 1303, column: 23, scope: !4489)
!4835 = !DILocation(line: 1303, column: 36, scope: !4489)
!4836 = !DILocation(line: 1303, column: 5, scope: !4489)
!4837 = !DILocation(line: 1304, column: 15, scope: !4489)
!4838 = !DILocation(line: 1304, column: 19, scope: !4489)
!4839 = !DILocation(line: 1304, column: 23, scope: !4489)
!4840 = !DILocation(line: 1304, column: 36, scope: !4489)
!4841 = !DILocation(line: 1304, column: 5, scope: !4489)
!4842 = !DILocation(line: 1307, column: 9, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4489, file: !939, line: 1307, column: 9)
!4844 = !DILocation(line: 1307, column: 9, scope: !4489)
!4845 = !DILocation(line: 1308, column: 29, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4843, file: !939, line: 1307, column: 25)
!4847 = !DILocation(line: 1308, column: 9, scope: !4846)
!4848 = !DILocation(line: 1309, column: 20, scope: !4846)
!4849 = !DILocation(line: 1309, column: 24, scope: !4846)
!4850 = !DILocation(line: 1309, column: 9, scope: !4846)
!4851 = !DILocation(line: 1310, column: 5, scope: !4846)
!4852 = !DILocation(line: 1312, column: 25, scope: !4489)
!4853 = !DILocation(line: 1312, column: 5, scope: !4489)
!4854 = !DILocation(line: 1313, column: 16, scope: !4489)
!4855 = !DILocation(line: 1313, column: 21, scope: !4489)
!4856 = !DILocation(line: 1313, column: 25, scope: !4489)
!4857 = !DILocation(line: 1313, column: 20, scope: !4489)
!4858 = !DILocation(line: 1313, column: 5, scope: !4489)
!4859 = !DILocation(line: 1315, column: 9, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4489, file: !939, line: 1315, column: 9)
!4861 = !DILocation(line: 1315, column: 13, scope: !4860)
!4862 = !DILocation(line: 1315, column: 24, scope: !4860)
!4863 = !DILocation(line: 1315, column: 27, scope: !4864)
!4864 = !DILexicalBlockFile(scope: !4860, file: !939, discriminator: 1)
!4865 = !DILocation(line: 1315, column: 31, scope: !4864)
!4866 = !DILocation(line: 1315, column: 9, scope: !4864)
!4867 = !DILocation(line: 1316, column: 29, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4860, file: !939, line: 1315, column: 48)
!4869 = !DILocation(line: 1316, column: 9, scope: !4868)
!4870 = !DILocation(line: 1317, column: 17, scope: !4868)
!4871 = !DILocation(line: 1317, column: 21, scope: !4868)
!4872 = !DILocation(line: 1317, column: 25, scope: !4868)
!4873 = !DILocation(line: 1317, column: 9, scope: !4868)
!4874 = !DILocation(line: 1318, column: 5, scope: !4868)
!4875 = !DILocation(line: 1320, column: 12, scope: !4489)
!4876 = !DILocation(line: 1320, column: 5, scope: !4489)
!4877 = distinct !DISubprogram(name: "mxf_write_local_tag", scope: !939, file: !939, line: 613, type: !4878, isLocal: true, isDefinition: true, scopeLine: 614, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4878 = !DISubroutineType(types: !4879)
!4879 = !{null, !1309, !1042, !1042}
!4880 = !DILocalVariable(name: "pb", arg: 1, scope: !4877, file: !939, line: 613, type: !1309)
!4881 = !DILocation(line: 613, column: 46, scope: !4877)
!4882 = !DILocalVariable(name: "size", arg: 2, scope: !4877, file: !939, line: 613, type: !1042)
!4883 = !DILocation(line: 613, column: 54, scope: !4877)
!4884 = !DILocalVariable(name: "tag", arg: 3, scope: !4877, file: !939, line: 613, type: !1042)
!4885 = !DILocation(line: 613, column: 64, scope: !4877)
!4886 = !DILocation(line: 615, column: 15, scope: !4877)
!4887 = !DILocation(line: 615, column: 19, scope: !4877)
!4888 = !DILocation(line: 615, column: 5, scope: !4877)
!4889 = !DILocation(line: 616, column: 15, scope: !4877)
!4890 = !DILocation(line: 616, column: 19, scope: !4877)
!4891 = !DILocation(line: 616, column: 5, scope: !4877)
!4892 = !DILocation(line: 617, column: 1, scope: !4877)
!4893 = distinct !DISubprogram(name: "mxf_update_klv_size", scope: !939, file: !939, line: 1323, type: !4894, isLocal: true, isDefinition: true, scopeLine: 1324, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4894 = !DISubroutineType(types: !4895)
!4895 = !{null, !1309, !1008}
!4896 = !DILocation(line: 557, column: 77, scope: !3914, inlinedAt: !4897)
!4897 = distinct !DILocation(line: 1325, column: 23, scope: !4893)
!4898 = !DILocalVariable(name: "pb", arg: 1, scope: !4893, file: !939, line: 1323, type: !1309)
!4899 = !DILocation(line: 1323, column: 46, scope: !4893)
!4900 = !DILocalVariable(name: "pos", arg: 2, scope: !4893, file: !939, line: 1323, type: !1008)
!4901 = !DILocation(line: 1323, column: 58, scope: !4893)
!4902 = !DILocalVariable(name: "cur_pos", scope: !4893, file: !939, line: 1325, type: !1008)
!4903 = !DILocation(line: 1325, column: 13, scope: !4893)
!4904 = !DILocation(line: 1325, column: 33, scope: !4893)
!4905 = !DILocation(line: 1325, column: 23, scope: !4893)
!4906 = !DILocation(line: 559, column: 22, scope: !3914, inlinedAt: !4897)
!4907 = !DILocation(line: 559, column: 12, scope: !3914, inlinedAt: !4897)
!4908 = !DILocalVariable(name: "size", scope: !4893, file: !939, line: 1326, type: !1042)
!4909 = !DILocation(line: 1326, column: 9, scope: !4893)
!4910 = !DILocation(line: 1326, column: 16, scope: !4893)
!4911 = !DILocation(line: 1326, column: 26, scope: !4893)
!4912 = !DILocation(line: 1326, column: 24, scope: !4893)
!4913 = !DILocation(line: 1327, column: 15, scope: !4893)
!4914 = !DILocation(line: 1327, column: 19, scope: !4893)
!4915 = !DILocation(line: 1327, column: 23, scope: !4893)
!4916 = !DILocation(line: 1327, column: 5, scope: !4893)
!4917 = !DILocation(line: 1328, column: 28, scope: !4893)
!4918 = !DILocation(line: 1328, column: 32, scope: !4893)
!4919 = !DILocation(line: 1328, column: 5, scope: !4893)
!4920 = !DILocation(line: 1329, column: 15, scope: !4893)
!4921 = !DILocation(line: 1329, column: 19, scope: !4893)
!4922 = !DILocation(line: 1329, column: 5, scope: !4893)
!4923 = !DILocation(line: 1330, column: 1, scope: !4893)
!4924 = distinct !DISubprogram(name: "mxf_write_generic_desc", scope: !939, file: !939, line: 1084, type: !4490, isLocal: true, isDefinition: true, scopeLine: 1085, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!4925 = !DILocation(line: 557, column: 77, scope: !3914, inlinedAt: !4926)
!4926 = distinct !DILocation(line: 1093, column: 11, scope: !4924)
!4927 = !DILocalVariable(name: "s", arg: 1, scope: !4924, file: !939, line: 1084, type: !2417)
!4928 = !DILocation(line: 1084, column: 56, scope: !4924)
!4929 = !DILocalVariable(name: "st", arg: 2, scope: !4924, file: !939, line: 1084, type: !1375)
!4930 = !DILocation(line: 1084, column: 69, scope: !4924)
!4931 = !DILocalVariable(name: "key", arg: 3, scope: !4924, file: !939, line: 1084, type: !1092)
!4932 = !DILocation(line: 1084, column: 83, scope: !4924)
!4933 = !DILocalVariable(name: "mxf", scope: !4924, file: !939, line: 1086, type: !2567)
!4934 = !DILocation(line: 1086, column: 17, scope: !4924)
!4935 = !DILocation(line: 1086, column: 23, scope: !4924)
!4936 = !DILocation(line: 1086, column: 26, scope: !4924)
!4937 = !DILocalVariable(name: "sc", scope: !4924, file: !939, line: 1087, type: !1011)
!4938 = !DILocation(line: 1087, column: 23, scope: !4924)
!4939 = !DILocation(line: 1087, column: 28, scope: !4924)
!4940 = !DILocation(line: 1087, column: 32, scope: !4924)
!4941 = !DILocalVariable(name: "pb", scope: !4924, file: !939, line: 1088, type: !1309)
!4942 = !DILocation(line: 1088, column: 18, scope: !4924)
!4943 = !DILocation(line: 1088, column: 23, scope: !4924)
!4944 = !DILocation(line: 1088, column: 26, scope: !4924)
!4945 = !DILocalVariable(name: "pos", scope: !4924, file: !939, line: 1089, type: !1008)
!4946 = !DILocation(line: 1089, column: 13, scope: !4924)
!4947 = !DILocation(line: 1091, column: 16, scope: !4924)
!4948 = !DILocation(line: 1091, column: 20, scope: !4924)
!4949 = !DILocation(line: 1091, column: 5, scope: !4924)
!4950 = !DILocation(line: 1092, column: 28, scope: !4924)
!4951 = !DILocation(line: 1092, column: 5, scope: !4924)
!4952 = !DILocation(line: 1093, column: 21, scope: !4924)
!4953 = !DILocation(line: 1093, column: 11, scope: !4924)
!4954 = !DILocation(line: 559, column: 22, scope: !3914, inlinedAt: !4926)
!4955 = !DILocation(line: 559, column: 12, scope: !3914, inlinedAt: !4926)
!4956 = !DILocation(line: 1093, column: 9, scope: !4924)
!4957 = !DILocation(line: 1095, column: 25, scope: !4924)
!4958 = !DILocation(line: 1095, column: 5, scope: !4924)
!4959 = !DILocation(line: 1096, column: 20, scope: !4924)
!4960 = !DILocation(line: 1096, column: 39, scope: !4924)
!4961 = !DILocation(line: 1096, column: 43, scope: !4924)
!4962 = !DILocation(line: 1096, column: 5, scope: !4924)
!4963 = !DILocation(line: 1098, column: 25, scope: !4924)
!4964 = !DILocation(line: 1098, column: 5, scope: !4924)
!4965 = !DILocation(line: 1099, column: 15, scope: !4924)
!4966 = !DILocation(line: 1099, column: 19, scope: !4924)
!4967 = !DILocation(line: 1099, column: 23, scope: !4924)
!4968 = !DILocation(line: 1099, column: 28, scope: !4924)
!4969 = !DILocation(line: 1099, column: 5, scope: !4924)
!4970 = !DILocation(line: 1101, column: 25, scope: !4924)
!4971 = !DILocation(line: 1101, column: 5, scope: !4924)
!4972 = !DILocation(line: 1102, column: 9, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4924, file: !939, line: 1102, column: 9)
!4974 = !DILocation(line: 1102, column: 12, scope: !4973)
!4975 = !DILocation(line: 1102, column: 20, scope: !4973)
!4976 = !DILocation(line: 1102, column: 9, scope: !4924)
!4977 = !DILocation(line: 1103, column: 19, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4973, file: !939, line: 1102, column: 42)
!4979 = !DILocation(line: 1103, column: 23, scope: !4978)
!4980 = !DILocation(line: 1103, column: 28, scope: !4978)
!4981 = !DILocation(line: 1103, column: 38, scope: !4978)
!4982 = !DILocation(line: 1103, column: 9, scope: !4978)
!4983 = !DILocation(line: 1104, column: 19, scope: !4978)
!4984 = !DILocation(line: 1104, column: 23, scope: !4978)
!4985 = !DILocation(line: 1104, column: 28, scope: !4978)
!4986 = !DILocation(line: 1104, column: 38, scope: !4978)
!4987 = !DILocation(line: 1104, column: 9, scope: !4978)
!4988 = !DILocation(line: 1105, column: 5, scope: !4978)
!4989 = !DILocation(line: 1106, column: 13, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4991, file: !939, line: 1106, column: 13)
!4991 = distinct !DILexicalBlock(scope: !4973, file: !939, line: 1105, column: 12)
!4992 = !DILocation(line: 1106, column: 17, scope: !4990)
!4993 = !DILocation(line: 1106, column: 27, scope: !4990)
!4994 = !DILocation(line: 1106, column: 36, scope: !4990)
!4995 = !DILocation(line: 1106, column: 61, scope: !4990)
!4996 = !DILocation(line: 1107, column: 13, scope: !4990)
!4997 = !DILocation(line: 1107, column: 17, scope: !4990)
!4998 = !DILocation(line: 1107, column: 27, scope: !4990)
!4999 = !DILocation(line: 1107, column: 36, scope: !4990)
!5000 = !DILocation(line: 1106, column: 13, scope: !5001)
!5001 = !DILexicalBlockFile(scope: !4991, file: !939, discriminator: 1)
!5002 = !DILocation(line: 1108, column: 23, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4990, file: !939, line: 1107, column: 62)
!5004 = !DILocation(line: 1108, column: 27, scope: !5003)
!5005 = !DILocation(line: 1108, column: 31, scope: !5003)
!5006 = !DILocation(line: 1108, column: 41, scope: !5003)
!5007 = !DILocation(line: 1108, column: 13, scope: !5003)
!5008 = !DILocation(line: 1109, column: 23, scope: !5003)
!5009 = !DILocation(line: 1109, column: 13, scope: !5003)
!5010 = !DILocation(line: 1110, column: 9, scope: !5003)
!5011 = !DILocation(line: 1111, column: 23, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !4990, file: !939, line: 1110, column: 16)
!5013 = !DILocation(line: 1111, column: 27, scope: !5012)
!5014 = !DILocation(line: 1111, column: 32, scope: !5012)
!5015 = !DILocation(line: 1111, column: 42, scope: !5012)
!5016 = !DILocation(line: 1111, column: 13, scope: !5012)
!5017 = !DILocation(line: 1112, column: 23, scope: !5012)
!5018 = !DILocation(line: 1112, column: 27, scope: !5012)
!5019 = !DILocation(line: 1112, column: 32, scope: !5012)
!5020 = !DILocation(line: 1112, column: 42, scope: !5012)
!5021 = !DILocation(line: 1112, column: 13, scope: !5012)
!5022 = !DILocation(line: 1116, column: 25, scope: !4924)
!5023 = !DILocation(line: 1116, column: 5, scope: !4924)
!5024 = !DILocation(line: 1117, column: 16, scope: !4924)
!5025 = !DILocation(line: 1117, column: 46, scope: !4924)
!5026 = !DILocation(line: 1117, column: 50, scope: !4924)
!5027 = !DILocation(line: 1117, column: 20, scope: !4924)
!5028 = !DILocation(line: 1117, column: 57, scope: !4924)
!5029 = !DILocation(line: 1117, column: 5, scope: !4924)
!5030 = !DILocation(line: 1119, column: 12, scope: !4924)
!5031 = !DILocation(line: 1119, column: 5, scope: !4924)
!5032 = distinct !DISubprogram(name: "get_trc", scope: !939, file: !939, line: 1129, type: !5033, isLocal: true, isDefinition: true, scopeLine: 1130, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!5033 = !DISubroutineType(types: !5034)
!5034 = !{!1042, !1027, !836}
!5035 = !DILocalVariable(name: "ul", arg: 1, scope: !5032, file: !939, line: 1129, type: !1027)
!5036 = !DILocation(line: 1129, column: 24, scope: !5032)
!5037 = !DILocalVariable(name: "trc", arg: 2, scope: !5032, file: !939, line: 1129, type: !836)
!5038 = !DILocation(line: 1129, column: 63, scope: !5032)
!5039 = !DILocation(line: 1131, column: 13, scope: !5032)
!5040 = !DILocation(line: 1131, column: 5, scope: !5032)
!5041 = !DILocation(line: 1134, column: 16, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5032, file: !939, line: 1131, column: 17)
!5043 = !DILocation(line: 1134, column: 26, scope: !5042)
!5044 = !DILocation(line: 1134, column: 9, scope: !5042)
!5045 = !DILocation(line: 1135, column: 9, scope: !5042)
!5046 = !DILocation(line: 1138, column: 16, scope: !5042)
!5047 = !DILocation(line: 1138, column: 26, scope: !5042)
!5048 = !DILocation(line: 1138, column: 9, scope: !5042)
!5049 = !DILocation(line: 1139, column: 9, scope: !5042)
!5050 = !DILocation(line: 1141, column: 16, scope: !5042)
!5051 = !DILocation(line: 1141, column: 26, scope: !5042)
!5052 = !DILocation(line: 1141, column: 9, scope: !5042)
!5053 = !DILocation(line: 1142, column: 9, scope: !5042)
!5054 = !DILocation(line: 1144, column: 16, scope: !5042)
!5055 = !DILocation(line: 1144, column: 26, scope: !5042)
!5056 = !DILocation(line: 1144, column: 9, scope: !5042)
!5057 = !DILocation(line: 1145, column: 9, scope: !5042)
!5058 = !DILocation(line: 1147, column: 16, scope: !5042)
!5059 = !DILocation(line: 1147, column: 26, scope: !5042)
!5060 = !DILocation(line: 1147, column: 9, scope: !5042)
!5061 = !DILocation(line: 1148, column: 9, scope: !5042)
!5062 = !DILocation(line: 1150, column: 16, scope: !5042)
!5063 = !DILocation(line: 1150, column: 26, scope: !5042)
!5064 = !DILocation(line: 1150, column: 9, scope: !5042)
!5065 = !DILocation(line: 1151, column: 9, scope: !5042)
!5066 = !DILocation(line: 1153, column: 9, scope: !5042)
!5067 = !DILocation(line: 1155, column: 1, scope: !5032)
!5068 = distinct !DISubprogram(name: "klv_encode_ber4_length", scope: !939, file: !939, line: 563, type: !5069, isLocal: true, isDefinition: true, scopeLine: 564, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{null, !1309, !1042}
!5071 = !DILocalVariable(name: "pb", arg: 1, scope: !5068, file: !939, line: 563, type: !1309)
!5072 = !DILocation(line: 563, column: 49, scope: !5068)
!5073 = !DILocalVariable(name: "len", arg: 2, scope: !5068, file: !939, line: 563, type: !1042)
!5074 = !DILocation(line: 563, column: 57, scope: !5068)
!5075 = !DILocation(line: 565, column: 13, scope: !5068)
!5076 = !DILocation(line: 565, column: 5, scope: !5068)
!5077 = !DILocation(line: 566, column: 15, scope: !5068)
!5078 = !DILocation(line: 566, column: 19, scope: !5068)
!5079 = !DILocation(line: 566, column: 5, scope: !5068)
!5080 = !DILocation(line: 567, column: 1, scope: !5068)
!5081 = distinct !DISubprogram(name: "mxf_write_uuid", scope: !939, file: !939, line: 512, type: !5082, isLocal: true, isDefinition: true, scopeLine: 513, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!5082 = !DISubroutineType(types: !5083)
!5083 = !{null, !1309, !972, !1042}
!5084 = !DILocalVariable(name: "pb", arg: 1, scope: !5081, file: !939, line: 512, type: !1309)
!5085 = !DILocation(line: 512, column: 41, scope: !5081)
!5086 = !DILocalVariable(name: "type", arg: 2, scope: !5081, file: !939, line: 512, type: !972)
!5087 = !DILocation(line: 512, column: 69, scope: !5081)
!5088 = !DILocalVariable(name: "value", arg: 3, scope: !5081, file: !939, line: 512, type: !1042)
!5089 = !DILocation(line: 512, column: 79, scope: !5081)
!5090 = !DILocation(line: 514, column: 16, scope: !5081)
!5091 = !DILocation(line: 514, column: 5, scope: !5081)
!5092 = !DILocation(line: 515, column: 15, scope: !5081)
!5093 = !DILocation(line: 515, column: 19, scope: !5081)
!5094 = !DILocation(line: 515, column: 5, scope: !5081)
!5095 = !DILocation(line: 516, column: 15, scope: !5081)
!5096 = !DILocation(line: 516, column: 19, scope: !5081)
!5097 = !DILocation(line: 516, column: 5, scope: !5081)
!5098 = !DILocation(line: 517, column: 1, scope: !5081)
!5099 = distinct !DISubprogram(name: "mxf_write_wav_common", scope: !939, file: !939, line: 1429, type: !4490, isLocal: true, isDefinition: true, scopeLine: 1430, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!5100 = !DILocalVariable(name: "s", arg: 1, scope: !5099, file: !939, line: 1429, type: !2417)
!5101 = !DILocation(line: 1429, column: 54, scope: !5099)
!5102 = !DILocalVariable(name: "st", arg: 2, scope: !5099, file: !939, line: 1429, type: !1375)
!5103 = !DILocation(line: 1429, column: 67, scope: !5099)
!5104 = !DILocalVariable(name: "key", arg: 3, scope: !5099, file: !939, line: 1429, type: !1092)
!5105 = !DILocation(line: 1429, column: 81, scope: !5099)
!5106 = !DILocalVariable(name: "pb", scope: !5099, file: !939, line: 1431, type: !1309)
!5107 = !DILocation(line: 1431, column: 18, scope: !5099)
!5108 = !DILocation(line: 1431, column: 23, scope: !5099)
!5109 = !DILocation(line: 1431, column: 26, scope: !5099)
!5110 = !DILocalVariable(name: "pos", scope: !5099, file: !939, line: 1432, type: !1008)
!5111 = !DILocation(line: 1432, column: 13, scope: !5099)
!5112 = !DILocation(line: 1432, column: 50, scope: !5099)
!5113 = !DILocation(line: 1432, column: 53, scope: !5099)
!5114 = !DILocation(line: 1432, column: 57, scope: !5099)
!5115 = !DILocation(line: 1432, column: 19, scope: !5099)
!5116 = !DILocation(line: 1434, column: 25, scope: !5099)
!5117 = !DILocation(line: 1434, column: 5, scope: !5099)
!5118 = !DILocation(line: 1435, column: 15, scope: !5099)
!5119 = !DILocation(line: 1435, column: 19, scope: !5099)
!5120 = !DILocation(line: 1435, column: 23, scope: !5099)
!5121 = !DILocation(line: 1435, column: 33, scope: !5099)
!5122 = !DILocation(line: 1435, column: 5, scope: !5099)
!5123 = !DILocation(line: 1438, column: 25, scope: !5099)
!5124 = !DILocation(line: 1438, column: 5, scope: !5099)
!5125 = !DILocation(line: 1439, column: 15, scope: !5099)
!5126 = !DILocation(line: 1439, column: 19, scope: !5099)
!5127 = !DILocation(line: 1439, column: 23, scope: !5099)
!5128 = !DILocation(line: 1439, column: 33, scope: !5099)
!5129 = !DILocation(line: 1439, column: 45, scope: !5099)
!5130 = !DILocation(line: 1439, column: 49, scope: !5099)
!5131 = !DILocation(line: 1439, column: 59, scope: !5099)
!5132 = !DILocation(line: 1439, column: 44, scope: !5099)
!5133 = !DILocation(line: 1439, column: 5, scope: !5099)
!5134 = !DILocation(line: 1441, column: 12, scope: !5099)
!5135 = !DILocation(line: 1441, column: 5, scope: !5099)
!5136 = distinct !DISubprogram(name: "mxf_write_generic_sound_common", scope: !939, file: !939, line: 1382, type: !4490, isLocal: true, isDefinition: true, scopeLine: 1383, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!5137 = !DILocalVariable(name: "s", arg: 1, scope: !5136, file: !939, line: 1382, type: !2417)
!5138 = !DILocation(line: 1382, column: 64, scope: !5136)
!5139 = !DILocalVariable(name: "st", arg: 2, scope: !5136, file: !939, line: 1382, type: !1375)
!5140 = !DILocation(line: 1382, column: 77, scope: !5136)
!5141 = !DILocalVariable(name: "key", arg: 3, scope: !5136, file: !939, line: 1382, type: !1092)
!5142 = !DILocation(line: 1382, column: 91, scope: !5136)
!5143 = !DILocalVariable(name: "pb", scope: !5136, file: !939, line: 1384, type: !1309)
!5144 = !DILocation(line: 1384, column: 18, scope: !5136)
!5145 = !DILocation(line: 1384, column: 23, scope: !5136)
!5146 = !DILocation(line: 1384, column: 26, scope: !5136)
!5147 = !DILocalVariable(name: "mxf", scope: !5136, file: !939, line: 1385, type: !2567)
!5148 = !DILocation(line: 1385, column: 17, scope: !5136)
!5149 = !DILocation(line: 1385, column: 23, scope: !5136)
!5150 = !DILocation(line: 1385, column: 26, scope: !5136)
!5151 = !DILocalVariable(name: "show_warnings", scope: !5136, file: !939, line: 1386, type: !1042)
!5152 = !DILocation(line: 1386, column: 9, scope: !5136)
!5153 = !DILocation(line: 1386, column: 26, scope: !5136)
!5154 = !DILocation(line: 1386, column: 31, scope: !5136)
!5155 = !DILocation(line: 1386, column: 25, scope: !5136)
!5156 = !DILocalVariable(name: "pos", scope: !5136, file: !939, line: 1387, type: !1008)
!5157 = !DILocation(line: 1387, column: 13, scope: !5136)
!5158 = !DILocation(line: 1387, column: 42, scope: !5136)
!5159 = !DILocation(line: 1387, column: 45, scope: !5136)
!5160 = !DILocation(line: 1387, column: 49, scope: !5136)
!5161 = !DILocation(line: 1387, column: 19, scope: !5136)
!5162 = !DILocation(line: 1389, column: 9, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5136, file: !939, line: 1389, column: 9)
!5164 = !DILocation(line: 1389, column: 12, scope: !5163)
!5165 = !DILocation(line: 1389, column: 20, scope: !5163)
!5166 = !DILocation(line: 1389, column: 9, scope: !5136)
!5167 = !DILocation(line: 1390, column: 29, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5163, file: !939, line: 1389, column: 45)
!5169 = !DILocation(line: 1390, column: 9, scope: !5168)
!5170 = !DILocation(line: 1391, column: 19, scope: !5168)
!5171 = !DILocation(line: 1391, column: 23, scope: !5168)
!5172 = !DILocation(line: 1391, column: 28, scope: !5168)
!5173 = !DILocation(line: 1391, column: 42, scope: !5168)
!5174 = !DILocation(line: 1391, column: 47, scope: !5168)
!5175 = !DILocation(line: 1391, column: 40, scope: !5168)
!5176 = !DILocation(line: 1391, column: 9, scope: !5168)
!5177 = !DILocation(line: 1392, column: 5, scope: !5168)
!5178 = !DILocation(line: 1395, column: 25, scope: !5136)
!5179 = !DILocation(line: 1395, column: 5, scope: !5136)
!5180 = !DILocation(line: 1396, column: 13, scope: !5136)
!5181 = !DILocation(line: 1396, column: 5, scope: !5136)
!5182 = !DILocation(line: 1399, column: 25, scope: !5136)
!5183 = !DILocation(line: 1399, column: 5, scope: !5136)
!5184 = !DILocation(line: 1400, column: 15, scope: !5136)
!5185 = !DILocation(line: 1400, column: 19, scope: !5136)
!5186 = !DILocation(line: 1400, column: 23, scope: !5136)
!5187 = !DILocation(line: 1400, column: 33, scope: !5136)
!5188 = !DILocation(line: 1400, column: 5, scope: !5136)
!5189 = !DILocation(line: 1401, column: 15, scope: !5136)
!5190 = !DILocation(line: 1401, column: 5, scope: !5136)
!5191 = !DILocation(line: 1403, column: 9, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5136, file: !939, line: 1403, column: 9)
!5193 = !DILocation(line: 1403, column: 12, scope: !5192)
!5194 = !DILocation(line: 1403, column: 20, scope: !5192)
!5195 = !DILocation(line: 1403, column: 9, scope: !5136)
!5196 = !DILocation(line: 1404, column: 29, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5192, file: !939, line: 1403, column: 42)
!5198 = !DILocation(line: 1404, column: 9, scope: !5197)
!5199 = !DILocation(line: 1405, column: 17, scope: !5197)
!5200 = !DILocation(line: 1405, column: 9, scope: !5197)
!5201 = !DILocation(line: 1406, column: 5, scope: !5197)
!5202 = !DILocation(line: 1408, column: 25, scope: !5136)
!5203 = !DILocation(line: 1408, column: 5, scope: !5136)
!5204 = !DILocation(line: 1409, column: 9, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5136, file: !939, line: 1409, column: 9)
!5206 = !DILocation(line: 1409, column: 14, scope: !5205)
!5207 = !DILocation(line: 1409, column: 28, scope: !5205)
!5208 = !DILocation(line: 1409, column: 9, scope: !5136)
!5209 = !DILocation(line: 1410, column: 13, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5211, file: !939, line: 1410, column: 13)
!5211 = distinct !DILexicalBlock(scope: !5205, file: !939, line: 1409, column: 35)
!5212 = !DILocation(line: 1410, column: 27, scope: !5210)
!5213 = !DILocation(line: 1410, column: 31, scope: !5214)
!5214 = !DILexicalBlockFile(scope: !5210, file: !939, discriminator: 1)
!5215 = !DILocation(line: 1410, column: 34, scope: !5214)
!5216 = !DILocation(line: 1410, column: 42, scope: !5214)
!5217 = !DILocation(line: 1410, column: 64, scope: !5214)
!5218 = !DILocation(line: 1410, column: 68, scope: !5219)
!5219 = !DILexicalBlockFile(scope: !5210, file: !939, discriminator: 2)
!5220 = !DILocation(line: 1410, column: 72, scope: !5219)
!5221 = !DILocation(line: 1410, column: 82, scope: !5219)
!5222 = !DILocation(line: 1410, column: 91, scope: !5219)
!5223 = !DILocation(line: 1410, column: 97, scope: !5219)
!5224 = !DILocation(line: 1410, column: 101, scope: !5225)
!5225 = !DILexicalBlockFile(scope: !5210, file: !939, discriminator: 3)
!5226 = !DILocation(line: 1410, column: 105, scope: !5225)
!5227 = !DILocation(line: 1410, column: 115, scope: !5225)
!5228 = !DILocation(line: 1410, column: 124, scope: !5225)
!5229 = !DILocation(line: 1410, column: 13, scope: !5225)
!5230 = !DILocation(line: 1411, column: 20, scope: !5210)
!5231 = !DILocation(line: 1411, column: 13, scope: !5210)
!5232 = !DILocation(line: 1412, column: 19, scope: !5211)
!5233 = !DILocation(line: 1412, column: 23, scope: !5211)
!5234 = !DILocation(line: 1412, column: 27, scope: !5211)
!5235 = !DILocation(line: 1412, column: 37, scope: !5211)
!5236 = !DILocation(line: 1412, column: 9, scope: !5211)
!5237 = !DILocation(line: 1413, column: 5, scope: !5211)
!5238 = !DILocation(line: 1413, column: 16, scope: !5239)
!5239 = !DILexicalBlockFile(scope: !5240, file: !939, discriminator: 1)
!5240 = distinct !DILexicalBlock(scope: !5205, file: !939, line: 1413, column: 16)
!5241 = !DILocation(line: 1413, column: 19, scope: !5239)
!5242 = !DILocation(line: 1413, column: 27, scope: !5239)
!5243 = !DILocation(line: 1414, column: 13, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5245, file: !939, line: 1414, column: 13)
!5245 = distinct !DILexicalBlock(scope: !5240, file: !939, line: 1413, column: 49)
!5246 = !DILocation(line: 1414, column: 27, scope: !5244)
!5247 = !DILocation(line: 1414, column: 31, scope: !5248)
!5248 = !DILexicalBlockFile(scope: !5244, file: !939, discriminator: 1)
!5249 = !DILocation(line: 1414, column: 36, scope: !5248)
!5250 = !DILocation(line: 1414, column: 52, scope: !5248)
!5251 = !DILocation(line: 1414, column: 56, scope: !5248)
!5252 = !DILocation(line: 1414, column: 66, scope: !5248)
!5253 = !DILocation(line: 1414, column: 50, scope: !5248)
!5254 = !DILocation(line: 1414, column: 13, scope: !5248)
!5255 = !DILocation(line: 1415, column: 20, scope: !5244)
!5256 = !DILocation(line: 1415, column: 13, scope: !5244)
!5257 = !DILocation(line: 1416, column: 13, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5245, file: !939, line: 1416, column: 13)
!5259 = !DILocation(line: 1416, column: 27, scope: !5258)
!5260 = !DILocation(line: 1416, column: 31, scope: !5261)
!5261 = !DILexicalBlockFile(scope: !5258, file: !939, discriminator: 1)
!5262 = !DILocation(line: 1416, column: 36, scope: !5261)
!5263 = !DILocation(line: 1416, column: 50, scope: !5261)
!5264 = !DILocation(line: 1416, column: 56, scope: !5261)
!5265 = !DILocation(line: 1416, column: 60, scope: !5266)
!5266 = !DILexicalBlockFile(scope: !5258, file: !939, discriminator: 2)
!5267 = !DILocation(line: 1416, column: 65, scope: !5266)
!5268 = !DILocation(line: 1416, column: 79, scope: !5266)
!5269 = !DILocation(line: 1416, column: 13, scope: !5266)
!5270 = !DILocation(line: 1417, column: 20, scope: !5258)
!5271 = !DILocation(line: 1417, column: 13, scope: !5258)
!5272 = !DILocation(line: 1418, column: 19, scope: !5245)
!5273 = !DILocation(line: 1418, column: 23, scope: !5245)
!5274 = !DILocation(line: 1418, column: 28, scope: !5245)
!5275 = !DILocation(line: 1418, column: 9, scope: !5245)
!5276 = !DILocation(line: 1419, column: 5, scope: !5245)
!5277 = !DILocation(line: 1420, column: 19, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5240, file: !939, line: 1419, column: 12)
!5279 = !DILocation(line: 1420, column: 23, scope: !5278)
!5280 = !DILocation(line: 1420, column: 27, scope: !5278)
!5281 = !DILocation(line: 1420, column: 37, scope: !5278)
!5282 = !DILocation(line: 1420, column: 9, scope: !5278)
!5283 = !DILocation(line: 1423, column: 25, scope: !5136)
!5284 = !DILocation(line: 1423, column: 5, scope: !5136)
!5285 = !DILocation(line: 1424, column: 15, scope: !5136)
!5286 = !DILocation(line: 1424, column: 42, scope: !5136)
!5287 = !DILocation(line: 1424, column: 46, scope: !5136)
!5288 = !DILocation(line: 1424, column: 56, scope: !5136)
!5289 = !DILocation(line: 1424, column: 19, scope: !5136)
!5290 = !DILocation(line: 1424, column: 5, scope: !5291)
!5291 = !DILexicalBlockFile(scope: !5136, file: !939, discriminator: 1)
!5292 = !DILocation(line: 1426, column: 12, scope: !5136)
!5293 = !DILocation(line: 1426, column: 5, scope: !5136)
!5294 = distinct !DISubprogram(name: "av_bswap64", scope: !2546, file: !2546, line: 73, type: !5295, isLocal: true, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!5295 = !DISubroutineType(types: !5296)
!5296 = !{!1039, !1039}
!5297 = !DILocation(line: 66, column: 98, scope: !2545, inlinedAt: !5298)
!5298 = distinct !DILocation(line: 75, column: 44, scope: !5299)
!5299 = !DILexicalBlockFile(scope: !5294, file: !2546, discriminator: 1)
!5300 = !DILocation(line: 66, column: 98, scope: !2545, inlinedAt: !5301)
!5301 = distinct !DILocation(line: 75, column: 22, scope: !5294)
!5302 = !DILocalVariable(name: "x", arg: 1, scope: !5294, file: !2546, line: 73, type: !1039)
!5303 = !DILocation(line: 73, column: 67, scope: !5294)
!5304 = !DILocation(line: 75, column: 33, scope: !5294)
!5305 = !DILocation(line: 75, column: 22, scope: !5294)
!5306 = !DILocation(line: 68, column: 16, scope: !2545, inlinedAt: !5301)
!5307 = !DILocation(line: 68, column: 19, scope: !2545, inlinedAt: !5301)
!5308 = !DILocation(line: 68, column: 24, scope: !2545, inlinedAt: !5301)
!5309 = !DILocation(line: 68, column: 38, scope: !2545, inlinedAt: !5301)
!5310 = !DILocation(line: 68, column: 41, scope: !2545, inlinedAt: !5301)
!5311 = !DILocation(line: 68, column: 46, scope: !2545, inlinedAt: !5301)
!5312 = !DILocation(line: 68, column: 34, scope: !2545, inlinedAt: !5301)
!5313 = !DILocation(line: 68, column: 57, scope: !2545, inlinedAt: !5301)
!5314 = !DILocation(line: 68, column: 69, scope: !2545, inlinedAt: !5301)
!5315 = !DILocation(line: 68, column: 72, scope: !2545, inlinedAt: !5301)
!5316 = !DILocation(line: 68, column: 79, scope: !2545, inlinedAt: !5301)
!5317 = !DILocation(line: 68, column: 84, scope: !2545, inlinedAt: !5301)
!5318 = !DILocation(line: 68, column: 99, scope: !2545, inlinedAt: !5301)
!5319 = !DILocation(line: 68, column: 102, scope: !2545, inlinedAt: !5301)
!5320 = !DILocation(line: 68, column: 109, scope: !2545, inlinedAt: !5301)
!5321 = !DILocation(line: 68, column: 114, scope: !2545, inlinedAt: !5301)
!5322 = !DILocation(line: 68, column: 94, scope: !2545, inlinedAt: !5301)
!5323 = !DILocation(line: 68, column: 63, scope: !2545, inlinedAt: !5301)
!5324 = !DILocation(line: 75, column: 12, scope: !5294)
!5325 = !DILocation(line: 75, column: 36, scope: !5294)
!5326 = !DILocation(line: 75, column: 55, scope: !5294)
!5327 = !DILocation(line: 75, column: 57, scope: !5294)
!5328 = !DILocation(line: 75, column: 44, scope: !5299)
!5329 = !DILocation(line: 68, column: 16, scope: !2545, inlinedAt: !5298)
!5330 = !DILocation(line: 68, column: 19, scope: !2545, inlinedAt: !5298)
!5331 = !DILocation(line: 68, column: 24, scope: !2545, inlinedAt: !5298)
!5332 = !DILocation(line: 68, column: 38, scope: !2545, inlinedAt: !5298)
!5333 = !DILocation(line: 68, column: 41, scope: !2545, inlinedAt: !5298)
!5334 = !DILocation(line: 68, column: 46, scope: !2545, inlinedAt: !5298)
!5335 = !DILocation(line: 68, column: 34, scope: !2545, inlinedAt: !5298)
!5336 = !DILocation(line: 68, column: 57, scope: !2545, inlinedAt: !5298)
!5337 = !DILocation(line: 68, column: 69, scope: !2545, inlinedAt: !5298)
!5338 = !DILocation(line: 68, column: 72, scope: !2545, inlinedAt: !5298)
!5339 = !DILocation(line: 68, column: 79, scope: !2545, inlinedAt: !5298)
!5340 = !DILocation(line: 68, column: 84, scope: !2545, inlinedAt: !5298)
!5341 = !DILocation(line: 68, column: 99, scope: !2545, inlinedAt: !5298)
!5342 = !DILocation(line: 68, column: 102, scope: !2545, inlinedAt: !5298)
!5343 = !DILocation(line: 68, column: 109, scope: !2545, inlinedAt: !5298)
!5344 = !DILocation(line: 68, column: 114, scope: !2545, inlinedAt: !5298)
!5345 = !DILocation(line: 68, column: 94, scope: !2545, inlinedAt: !5298)
!5346 = !DILocation(line: 68, column: 63, scope: !2545, inlinedAt: !5298)
!5347 = !DILocation(line: 75, column: 44, scope: !5294)
!5348 = !DILocation(line: 75, column: 42, scope: !5294)
!5349 = !DILocation(line: 75, column: 5, scope: !5294)
!5350 = distinct !DISubprogram(name: "mxf_parse_mpeg2_frame", scope: !939, file: !939, line: 2271, type: !2453, isLocal: true, isDefinition: true, scopeLine: 2273, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!5351 = !DILocalVariable(name: "s", arg: 1, scope: !5350, file: !939, line: 2271, type: !2417)
!5352 = !DILocation(line: 2271, column: 51, scope: !5350)
!5353 = !DILocalVariable(name: "st", arg: 2, scope: !5350, file: !939, line: 2271, type: !1375)
!5354 = !DILocation(line: 2271, column: 64, scope: !5350)
!5355 = !DILocalVariable(name: "pkt", arg: 3, scope: !5350, file: !939, line: 2272, type: !1243)
!5356 = !DILocation(line: 2272, column: 44, scope: !5350)
!5357 = !DILocalVariable(name: "e", arg: 4, scope: !5350, file: !939, line: 2272, type: !2455)
!5358 = !DILocation(line: 2272, column: 64, scope: !5350)
!5359 = !DILocalVariable(name: "sc", scope: !5350, file: !939, line: 2274, type: !1011)
!5360 = !DILocation(line: 2274, column: 23, scope: !5350)
!5361 = !DILocation(line: 2274, column: 28, scope: !5350)
!5362 = !DILocation(line: 2274, column: 32, scope: !5350)
!5363 = !DILocalVariable(name: "c", scope: !5350, file: !939, line: 2275, type: !1034)
!5364 = !DILocation(line: 2275, column: 14, scope: !5350)
!5365 = !DILocalVariable(name: "i", scope: !5350, file: !939, line: 2276, type: !1042)
!5366 = !DILocation(line: 2276, column: 9, scope: !5350)
!5367 = !DILocation(line: 2278, column: 11, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5350, file: !939, line: 2278, column: 5)
!5369 = !DILocation(line: 2278, column: 9, scope: !5368)
!5370 = !DILocation(line: 2278, column: 16, scope: !5371)
!5371 = !DILexicalBlockFile(scope: !5372, file: !939, discriminator: 1)
!5372 = distinct !DILexicalBlock(scope: !5368, file: !939, line: 2278, column: 5)
!5373 = !DILocation(line: 2278, column: 20, scope: !5371)
!5374 = !DILocation(line: 2278, column: 25, scope: !5371)
!5375 = !DILocation(line: 2278, column: 30, scope: !5371)
!5376 = !DILocation(line: 2278, column: 18, scope: !5371)
!5377 = !DILocation(line: 2278, column: 5, scope: !5371)
!5378 = !DILocation(line: 2279, column: 14, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5372, file: !939, line: 2278, column: 40)
!5380 = !DILocation(line: 2279, column: 15, scope: !5379)
!5381 = !DILocation(line: 2279, column: 32, scope: !5379)
!5382 = !DILocation(line: 2279, column: 22, scope: !5379)
!5383 = !DILocation(line: 2279, column: 27, scope: !5379)
!5384 = !DILocation(line: 2279, column: 20, scope: !5379)
!5385 = !DILocation(line: 2279, column: 11, scope: !5379)
!5386 = !DILocation(line: 2280, column: 13, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5379, file: !939, line: 2280, column: 13)
!5388 = !DILocation(line: 2280, column: 15, scope: !5387)
!5389 = !DILocation(line: 2280, column: 13, scope: !5379)
!5390 = !DILocation(line: 2281, column: 28, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !939, line: 2281, column: 17)
!5392 = distinct !DILexicalBlock(scope: !5387, file: !939, line: 2280, column: 25)
!5393 = !DILocation(line: 2281, column: 29, scope: !5391)
!5394 = !DILocation(line: 2281, column: 18, scope: !5391)
!5395 = !DILocation(line: 2281, column: 23, scope: !5391)
!5396 = !DILocation(line: 2281, column: 33, scope: !5391)
!5397 = !DILocation(line: 2281, column: 41, scope: !5391)
!5398 = !DILocation(line: 2281, column: 17, scope: !5392)
!5399 = !DILocation(line: 2282, column: 51, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5391, file: !939, line: 2281, column: 50)
!5401 = !DILocation(line: 2282, column: 52, scope: !5400)
!5402 = !DILocation(line: 2282, column: 41, scope: !5400)
!5403 = !DILocation(line: 2282, column: 46, scope: !5400)
!5404 = !DILocation(line: 2282, column: 56, scope: !5400)
!5405 = !DILocation(line: 2282, column: 17, scope: !5400)
!5406 = !DILocation(line: 2282, column: 21, scope: !5400)
!5407 = !DILocation(line: 2282, column: 31, scope: !5400)
!5408 = !DILocation(line: 2282, column: 39, scope: !5400)
!5409 = !DILocation(line: 2283, column: 49, scope: !5400)
!5410 = !DILocation(line: 2283, column: 50, scope: !5400)
!5411 = !DILocation(line: 2283, column: 39, scope: !5400)
!5412 = !DILocation(line: 2283, column: 44, scope: !5400)
!5413 = !DILocation(line: 2283, column: 54, scope: !5400)
!5414 = !DILocation(line: 2283, column: 17, scope: !5400)
!5415 = !DILocation(line: 2283, column: 21, scope: !5400)
!5416 = !DILocation(line: 2283, column: 31, scope: !5400)
!5417 = !DILocation(line: 2283, column: 37, scope: !5400)
!5418 = !DILocation(line: 2284, column: 43, scope: !5400)
!5419 = !DILocation(line: 2284, column: 44, scope: !5400)
!5420 = !DILocation(line: 2284, column: 33, scope: !5400)
!5421 = !DILocation(line: 2284, column: 38, scope: !5400)
!5422 = !DILocation(line: 2284, column: 48, scope: !5400)
!5423 = !DILocation(line: 2284, column: 17, scope: !5400)
!5424 = !DILocation(line: 2284, column: 21, scope: !5400)
!5425 = !DILocation(line: 2284, column: 31, scope: !5400)
!5426 = !DILocation(line: 2285, column: 13, scope: !5400)
!5427 = !DILocation(line: 2285, column: 24, scope: !5428)
!5428 = !DILexicalBlockFile(scope: !5429, file: !939, discriminator: 1)
!5429 = distinct !DILexicalBlock(scope: !5391, file: !939, line: 2285, column: 24)
!5430 = !DILocation(line: 2285, column: 26, scope: !5428)
!5431 = !DILocation(line: 2285, column: 32, scope: !5428)
!5432 = !DILocation(line: 2285, column: 37, scope: !5428)
!5433 = !DILocation(line: 2285, column: 30, scope: !5428)
!5434 = !DILocation(line: 2285, column: 42, scope: !5428)
!5435 = !DILocation(line: 2285, column: 56, scope: !5436)
!5436 = !DILexicalBlockFile(scope: !5429, file: !939, discriminator: 2)
!5437 = !DILocation(line: 2285, column: 57, scope: !5436)
!5438 = !DILocation(line: 2285, column: 46, scope: !5436)
!5439 = !DILocation(line: 2285, column: 51, scope: !5436)
!5440 = !DILocation(line: 2285, column: 61, scope: !5436)
!5441 = !DILocation(line: 2285, column: 69, scope: !5436)
!5442 = !DILocation(line: 2285, column: 24, scope: !5436)
!5443 = !DILocation(line: 2286, column: 46, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5429, file: !939, line: 2285, column: 78)
!5445 = !DILocation(line: 2286, column: 47, scope: !5444)
!5446 = !DILocation(line: 2286, column: 36, scope: !5444)
!5447 = !DILocation(line: 2286, column: 41, scope: !5444)
!5448 = !DILocation(line: 2286, column: 51, scope: !5444)
!5449 = !DILocation(line: 2286, column: 34, scope: !5444)
!5450 = !DILocation(line: 2286, column: 17, scope: !5444)
!5451 = !DILocation(line: 2286, column: 21, scope: !5444)
!5452 = !DILocation(line: 2286, column: 32, scope: !5444)
!5453 = !DILocation(line: 2287, column: 21, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5444, file: !939, line: 2287, column: 21)
!5455 = !DILocation(line: 2287, column: 25, scope: !5454)
!5456 = !DILocation(line: 2287, column: 21, scope: !5444)
!5457 = !DILocation(line: 2288, column: 59, scope: !5454)
!5458 = !DILocation(line: 2288, column: 60, scope: !5454)
!5459 = !DILocation(line: 2288, column: 49, scope: !5454)
!5460 = !DILocation(line: 2288, column: 54, scope: !5454)
!5461 = !DILocation(line: 2288, column: 64, scope: !5454)
!5462 = !DILocation(line: 2288, column: 47, scope: !5454)
!5463 = !DILocation(line: 2288, column: 45, scope: !5454)
!5464 = !DILocation(line: 2288, column: 21, scope: !5454)
!5465 = !DILocation(line: 2288, column: 25, scope: !5454)
!5466 = !DILocation(line: 2288, column: 41, scope: !5454)
!5467 = !DILocation(line: 2289, column: 17, scope: !5444)
!5468 = !DILocation(line: 2291, column: 9, scope: !5392)
!5469 = !DILocation(line: 2291, column: 20, scope: !5470)
!5470 = !DILexicalBlockFile(scope: !5471, file: !939, discriminator: 1)
!5471 = distinct !DILexicalBlock(scope: !5387, file: !939, line: 2291, column: 20)
!5472 = !DILocation(line: 2291, column: 22, scope: !5470)
!5473 = !DILocation(line: 2292, column: 27, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5475, file: !939, line: 2292, column: 17)
!5475 = distinct !DILexicalBlock(scope: !5471, file: !939, line: 2291, column: 32)
!5476 = !DILocation(line: 2292, column: 28, scope: !5474)
!5477 = !DILocation(line: 2292, column: 17, scope: !5474)
!5478 = !DILocation(line: 2292, column: 22, scope: !5474)
!5479 = !DILocation(line: 2292, column: 31, scope: !5474)
!5480 = !DILocation(line: 2292, column: 35, scope: !5474)
!5481 = !DILocation(line: 2292, column: 17, scope: !5475)
!5482 = !DILocation(line: 2293, column: 21, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5484, file: !939, line: 2293, column: 21)
!5484 = distinct !DILexicalBlock(scope: !5474, file: !939, line: 2292, column: 43)
!5485 = !DILocation(line: 2293, column: 25, scope: !5483)
!5486 = !DILocation(line: 2293, column: 40, scope: !5483)
!5487 = !DILocation(line: 2293, column: 21, scope: !5484)
!5488 = !DILocation(line: 2294, column: 21, scope: !5483)
!5489 = !DILocation(line: 2294, column: 25, scope: !5483)
!5490 = !DILocation(line: 2294, column: 40, scope: !5483)
!5491 = !DILocation(line: 2295, column: 17, scope: !5484)
!5492 = !DILocation(line: 2295, column: 21, scope: !5484)
!5493 = !DILocation(line: 2295, column: 32, scope: !5484)
!5494 = !DILocation(line: 2296, column: 21, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5484, file: !939, line: 2296, column: 21)
!5496 = !DILocation(line: 2296, column: 24, scope: !5495)
!5497 = !DILocation(line: 2296, column: 30, scope: !5495)
!5498 = !DILocation(line: 2296, column: 21, scope: !5484)
!5499 = !DILocation(line: 2297, column: 21, scope: !5495)
!5500 = !DILocation(line: 2297, column: 24, scope: !5495)
!5501 = !DILocation(line: 2297, column: 30, scope: !5495)
!5502 = !DILocation(line: 2298, column: 13, scope: !5484)
!5503 = !DILocation(line: 2299, column: 17, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5474, file: !939, line: 2298, column: 20)
!5505 = !DILocation(line: 2299, column: 21, scope: !5504)
!5506 = !DILocation(line: 2299, column: 36, scope: !5504)
!5507 = !DILocation(line: 2300, column: 17, scope: !5504)
!5508 = !DILocation(line: 2300, column: 21, scope: !5504)
!5509 = !DILocation(line: 2300, column: 32, scope: !5504)
!5510 = !DILocation(line: 2302, column: 9, scope: !5475)
!5511 = !DILocation(line: 2302, column: 20, scope: !5512)
!5512 = !DILexicalBlockFile(scope: !5513, file: !939, discriminator: 1)
!5513 = distinct !DILexicalBlock(scope: !5471, file: !939, line: 2302, column: 20)
!5514 = !DILocation(line: 2302, column: 22, scope: !5512)
!5515 = !DILocation(line: 2303, column: 13, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5513, file: !939, line: 2302, column: 32)
!5517 = !DILocation(line: 2303, column: 16, scope: !5516)
!5518 = !DILocation(line: 2303, column: 22, scope: !5516)
!5519 = !DILocation(line: 2304, column: 32, scope: !5516)
!5520 = !DILocation(line: 2304, column: 33, scope: !5516)
!5521 = !DILocation(line: 2304, column: 22, scope: !5516)
!5522 = !DILocation(line: 2304, column: 27, scope: !5516)
!5523 = !DILocation(line: 2304, column: 36, scope: !5516)
!5524 = !DILocation(line: 2304, column: 41, scope: !5516)
!5525 = !DILocation(line: 2304, column: 13, scope: !5516)
!5526 = !DILocation(line: 2305, column: 21, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5516, file: !939, line: 2304, column: 48)
!5528 = !DILocation(line: 2305, column: 25, scope: !5527)
!5529 = !DILocation(line: 2305, column: 52, scope: !5527)
!5530 = !DILocation(line: 2305, column: 40, scope: !5527)
!5531 = !DILocation(line: 2305, column: 61, scope: !5527)
!5532 = !DILocation(line: 2306, column: 21, scope: !5527)
!5533 = !DILocation(line: 2306, column: 25, scope: !5527)
!5534 = !DILocation(line: 2306, column: 52, scope: !5527)
!5535 = !DILocation(line: 2306, column: 40, scope: !5527)
!5536 = !DILocation(line: 2306, column: 62, scope: !5527)
!5537 = !DILocation(line: 2307, column: 21, scope: !5527)
!5538 = !DILocation(line: 2307, column: 25, scope: !5527)
!5539 = !DILocation(line: 2307, column: 52, scope: !5527)
!5540 = !DILocation(line: 2307, column: 40, scope: !5527)
!5541 = !DILocation(line: 2307, column: 63, scope: !5527)
!5542 = !DILocation(line: 2309, column: 28, scope: !5527)
!5543 = !DILocation(line: 2309, column: 32, scope: !5527)
!5544 = !DILocation(line: 2309, column: 45, scope: !5527)
!5545 = !DILocation(line: 2309, column: 51, scope: !5527)
!5546 = !DILocation(line: 2309, column: 55, scope: !5527)
!5547 = !DILocation(line: 2309, column: 68, scope: !5527)
!5548 = !DILocation(line: 2310, column: 27, scope: !5527)
!5549 = !DILocation(line: 2310, column: 31, scope: !5527)
!5550 = !DILocation(line: 2310, column: 41, scope: !5527)
!5551 = !DILocation(line: 2310, column: 48, scope: !5527)
!5552 = !DILocation(line: 2310, column: 52, scope: !5527)
!5553 = !DILocation(line: 2310, column: 62, scope: !5527)
!5554 = !DILocation(line: 2309, column: 17, scope: !5527)
!5555 = !DILocation(line: 2311, column: 13, scope: !5527)
!5556 = !DILocation(line: 2312, column: 9, scope: !5516)
!5557 = !DILocation(line: 2312, column: 20, scope: !5558)
!5558 = !DILexicalBlockFile(scope: !5559, file: !939, discriminator: 1)
!5559 = distinct !DILexicalBlock(scope: !5513, file: !939, line: 2312, column: 20)
!5560 = !DILocation(line: 2312, column: 22, scope: !5558)
!5561 = !DILocalVariable(name: "pict_type", scope: !5562, file: !939, line: 2313, type: !1042)
!5562 = distinct !DILexicalBlock(scope: !5559, file: !939, line: 2312, column: 32)
!5563 = !DILocation(line: 2313, column: 17, scope: !5562)
!5564 = !DILocation(line: 2313, column: 40, scope: !5562)
!5565 = !DILocation(line: 2313, column: 41, scope: !5562)
!5566 = !DILocation(line: 2313, column: 30, scope: !5562)
!5567 = !DILocation(line: 2313, column: 35, scope: !5562)
!5568 = !DILocation(line: 2313, column: 44, scope: !5562)
!5569 = !DILocation(line: 2313, column: 49, scope: !5562)
!5570 = !DILocation(line: 2314, column: 42, scope: !5562)
!5571 = !DILocation(line: 2314, column: 43, scope: !5562)
!5572 = !DILocation(line: 2314, column: 32, scope: !5562)
!5573 = !DILocation(line: 2314, column: 37, scope: !5562)
!5574 = !DILocation(line: 2314, column: 46, scope: !5562)
!5575 = !DILocation(line: 2314, column: 64, scope: !5562)
!5576 = !DILocation(line: 2314, column: 65, scope: !5562)
!5577 = !DILocation(line: 2314, column: 54, scope: !5562)
!5578 = !DILocation(line: 2314, column: 59, scope: !5562)
!5579 = !DILocation(line: 2314, column: 68, scope: !5562)
!5580 = !DILocation(line: 2314, column: 51, scope: !5562)
!5581 = !DILocation(line: 2314, column: 31, scope: !5562)
!5582 = !DILocation(line: 2314, column: 13, scope: !5562)
!5583 = !DILocation(line: 2314, column: 16, scope: !5562)
!5584 = !DILocation(line: 2314, column: 29, scope: !5562)
!5585 = !DILocation(line: 2315, column: 17, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5562, file: !939, line: 2315, column: 17)
!5587 = !DILocation(line: 2315, column: 27, scope: !5586)
!5588 = !DILocation(line: 2315, column: 17, scope: !5562)
!5589 = !DILocation(line: 2316, column: 17, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5586, file: !939, line: 2315, column: 33)
!5591 = !DILocation(line: 2316, column: 20, scope: !5590)
!5592 = !DILocation(line: 2316, column: 26, scope: !5590)
!5593 = !DILocation(line: 2317, column: 17, scope: !5590)
!5594 = !DILocation(line: 2317, column: 21, scope: !5590)
!5595 = !DILocation(line: 2317, column: 32, scope: !5590)
!5596 = !DILocation(line: 2318, column: 13, scope: !5590)
!5597 = !DILocation(line: 2318, column: 24, scope: !5598)
!5598 = !DILexicalBlockFile(scope: !5599, file: !939, discriminator: 1)
!5599 = distinct !DILexicalBlock(scope: !5586, file: !939, line: 2318, column: 24)
!5600 = !DILocation(line: 2318, column: 34, scope: !5598)
!5601 = !DILocation(line: 2319, column: 21, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5603, file: !939, line: 2319, column: 21)
!5603 = distinct !DILexicalBlock(scope: !5599, file: !939, line: 2318, column: 40)
!5604 = !DILocation(line: 2319, column: 25, scope: !5602)
!5605 = !DILocation(line: 2319, column: 21, scope: !5603)
!5606 = !DILocation(line: 2320, column: 21, scope: !5602)
!5607 = !DILocation(line: 2320, column: 24, scope: !5602)
!5608 = !DILocation(line: 2320, column: 30, scope: !5602)
!5609 = !DILocation(line: 2322, column: 21, scope: !5602)
!5610 = !DILocation(line: 2322, column: 24, scope: !5602)
!5611 = !DILocation(line: 2322, column: 30, scope: !5602)
!5612 = !DILocation(line: 2323, column: 17, scope: !5603)
!5613 = !DILocation(line: 2323, column: 21, scope: !5603)
!5614 = !DILocation(line: 2323, column: 41, scope: !5603)
!5615 = !DILocation(line: 2324, column: 13, scope: !5603)
!5616 = !DILocation(line: 2324, column: 25, scope: !5617)
!5617 = !DILexicalBlockFile(scope: !5618, file: !939, discriminator: 1)
!5618 = distinct !DILexicalBlock(scope: !5599, file: !939, line: 2324, column: 24)
!5619 = !DILocation(line: 2324, column: 24, scope: !5617)
!5620 = !DILocation(line: 2325, column: 24, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5618, file: !939, line: 2324, column: 36)
!5622 = !DILocation(line: 2325, column: 17, scope: !5621)
!5623 = !DILocation(line: 2326, column: 17, scope: !5621)
!5624 = !DILocation(line: 2328, column: 9, scope: !5562)
!5625 = !DILocation(line: 2329, column: 5, scope: !5379)
!5626 = !DILocation(line: 2278, column: 36, scope: !5627)
!5627 = !DILexicalBlockFile(scope: !5372, file: !939, discriminator: 2)
!5628 = !DILocation(line: 2278, column: 5, scope: !5627)
!5629 = distinct !{!5629, !5630}
!5630 = !DILocation(line: 2278, column: 5, scope: !5350)
!5631 = !DILocation(line: 2330, column: 9, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5350, file: !939, line: 2330, column: 9)
!5633 = !DILocation(line: 2330, column: 12, scope: !5632)
!5634 = !DILocation(line: 2330, column: 20, scope: !5632)
!5635 = !DILocation(line: 2330, column: 9, scope: !5350)
!5636 = !DILocation(line: 2331, column: 47, scope: !5632)
!5637 = !DILocation(line: 2331, column: 51, scope: !5632)
!5638 = !DILocation(line: 2331, column: 24, scope: !5632)
!5639 = !DILocation(line: 2331, column: 9, scope: !5632)
!5640 = !DILocation(line: 2331, column: 13, scope: !5632)
!5641 = !DILocation(line: 2331, column: 22, scope: !5632)
!5642 = !DILocation(line: 2332, column: 14, scope: !5350)
!5643 = !DILocation(line: 2332, column: 18, scope: !5350)
!5644 = !DILocation(line: 2332, column: 13, scope: !5350)
!5645 = !DILocation(line: 2332, column: 12, scope: !5350)
!5646 = !DILocation(line: 2332, column: 5, scope: !5350)
!5647 = !DILocation(line: 2333, column: 1, scope: !5350)
!5648 = distinct !DISubprogram(name: "mxf_parse_dnxhd_frame", scope: !939, file: !939, line: 2018, type: !5649, isLocal: true, isDefinition: true, scopeLine: 2019, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!5649 = !DISubroutineType(types: !5650)
!5650 = !{!1042, !2417, !1375, !1243}
!5651 = !DILocation(line: 66, column: 98, scope: !2545, inlinedAt: !5652)
!5652 = distinct !DILocation(line: 2031, column: 11, scope: !5648)
!5653 = !DILocalVariable(name: "s", arg: 1, scope: !5648, file: !939, line: 2018, type: !2417)
!5654 = !DILocation(line: 2018, column: 51, scope: !5648)
!5655 = !DILocalVariable(name: "st", arg: 2, scope: !5648, file: !939, line: 2018, type: !1375)
!5656 = !DILocation(line: 2018, column: 64, scope: !5648)
!5657 = !DILocalVariable(name: "pkt", arg: 3, scope: !5648, file: !939, line: 2018, type: !1243)
!5658 = !DILocation(line: 2018, column: 78, scope: !5648)
!5659 = !DILocalVariable(name: "mxf", scope: !5648, file: !939, line: 2020, type: !2567)
!5660 = !DILocation(line: 2020, column: 17, scope: !5648)
!5661 = !DILocation(line: 2020, column: 23, scope: !5648)
!5662 = !DILocation(line: 2020, column: 26, scope: !5648)
!5663 = !DILocalVariable(name: "sc", scope: !5648, file: !939, line: 2021, type: !1011)
!5664 = !DILocation(line: 2021, column: 23, scope: !5648)
!5665 = !DILocation(line: 2021, column: 28, scope: !5648)
!5666 = !DILocation(line: 2021, column: 32, scope: !5648)
!5667 = !DILocalVariable(name: "i", scope: !5648, file: !939, line: 2022, type: !1042)
!5668 = !DILocation(line: 2022, column: 9, scope: !5648)
!5669 = !DILocalVariable(name: "cid", scope: !5648, file: !939, line: 2022, type: !1042)
!5670 = !DILocation(line: 2022, column: 12, scope: !5648)
!5671 = !DILocalVariable(name: "frame_size", scope: !5648, file: !939, line: 2022, type: !1042)
!5672 = !DILocation(line: 2022, column: 17, scope: !5648)
!5673 = !DILocation(line: 2024, column: 9, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5648, file: !939, line: 2024, column: 9)
!5675 = !DILocation(line: 2024, column: 14, scope: !5674)
!5676 = !DILocation(line: 2024, column: 9, scope: !5648)
!5677 = !DILocation(line: 2025, column: 9, scope: !5674)
!5678 = !DILocation(line: 2027, column: 9, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5648, file: !939, line: 2027, column: 9)
!5680 = !DILocation(line: 2027, column: 14, scope: !5679)
!5681 = !DILocation(line: 2027, column: 19, scope: !5679)
!5682 = !DILocation(line: 2027, column: 9, scope: !5648)
!5683 = !DILocation(line: 2028, column: 9, scope: !5679)
!5684 = !DILocation(line: 2030, column: 5, scope: !5648)
!5685 = !DILocation(line: 2030, column: 9, scope: !5648)
!5686 = !DILocation(line: 2030, column: 18, scope: !5648)
!5687 = !DILocation(line: 2031, column: 54, scope: !5648)
!5688 = !DILocation(line: 2031, column: 59, scope: !5648)
!5689 = !DILocation(line: 2031, column: 64, scope: !5648)
!5690 = !DILocation(line: 2031, column: 74, scope: !5648)
!5691 = !DILocation(line: 2031, column: 11, scope: !5648)
!5692 = !DILocation(line: 68, column: 16, scope: !2545, inlinedAt: !5652)
!5693 = !DILocation(line: 68, column: 19, scope: !2545, inlinedAt: !5652)
!5694 = !DILocation(line: 68, column: 24, scope: !2545, inlinedAt: !5652)
!5695 = !DILocation(line: 68, column: 38, scope: !2545, inlinedAt: !5652)
!5696 = !DILocation(line: 68, column: 41, scope: !2545, inlinedAt: !5652)
!5697 = !DILocation(line: 68, column: 46, scope: !2545, inlinedAt: !5652)
!5698 = !DILocation(line: 68, column: 34, scope: !2545, inlinedAt: !5652)
!5699 = !DILocation(line: 68, column: 57, scope: !2545, inlinedAt: !5652)
!5700 = !DILocation(line: 68, column: 69, scope: !2545, inlinedAt: !5652)
!5701 = !DILocation(line: 68, column: 72, scope: !2545, inlinedAt: !5652)
!5702 = !DILocation(line: 68, column: 79, scope: !2545, inlinedAt: !5652)
!5703 = !DILocation(line: 68, column: 84, scope: !2545, inlinedAt: !5652)
!5704 = !DILocation(line: 68, column: 99, scope: !2545, inlinedAt: !5652)
!5705 = !DILocation(line: 68, column: 102, scope: !2545, inlinedAt: !5652)
!5706 = !DILocation(line: 68, column: 109, scope: !2545, inlinedAt: !5652)
!5707 = !DILocation(line: 68, column: 114, scope: !2545, inlinedAt: !5652)
!5708 = !DILocation(line: 68, column: 94, scope: !2545, inlinedAt: !5652)
!5709 = !DILocation(line: 68, column: 63, scope: !2545, inlinedAt: !5652)
!5710 = !DILocation(line: 2031, column: 9, scope: !5648)
!5711 = !DILocation(line: 2032, column: 12, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5648, file: !939, line: 2032, column: 5)
!5713 = !DILocation(line: 2032, column: 10, scope: !5712)
!5714 = !DILocation(line: 2032, column: 17, scope: !5715)
!5715 = !DILexicalBlockFile(scope: !5716, file: !939, discriminator: 1)
!5716 = distinct !DILexicalBlock(scope: !5712, file: !939, line: 2032, column: 5)
!5717 = !DILocation(line: 2032, column: 19, scope: !5715)
!5718 = !DILocation(line: 2032, column: 5, scope: !5715)
!5719 = !DILocation(line: 2033, column: 13, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5721, file: !939, line: 2033, column: 13)
!5721 = distinct !DILexicalBlock(scope: !5716, file: !939, line: 2032, column: 92)
!5722 = !DILocation(line: 2033, column: 40, scope: !5720)
!5723 = !DILocation(line: 2033, column: 20, scope: !5720)
!5724 = !DILocation(line: 2033, column: 43, scope: !5720)
!5725 = !DILocation(line: 2033, column: 17, scope: !5720)
!5726 = !DILocation(line: 2033, column: 13, scope: !5721)
!5727 = !DILocation(line: 2034, column: 49, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5720, file: !939, line: 2033, column: 48)
!5729 = !DILocation(line: 2034, column: 29, scope: !5728)
!5730 = !DILocation(line: 2034, column: 52, scope: !5728)
!5731 = !DILocation(line: 2034, column: 13, scope: !5728)
!5732 = !DILocation(line: 2034, column: 17, scope: !5728)
!5733 = !DILocation(line: 2034, column: 26, scope: !5728)
!5734 = !DILocation(line: 2035, column: 13, scope: !5728)
!5735 = !DILocation(line: 2037, column: 5, scope: !5721)
!5736 = !DILocation(line: 2032, column: 88, scope: !5737)
!5737 = !DILexicalBlockFile(scope: !5716, file: !939, discriminator: 2)
!5738 = !DILocation(line: 2032, column: 5, scope: !5737)
!5739 = distinct !{!5739, !5740}
!5740 = !DILocation(line: 2032, column: 5, scope: !5648)
!5741 = !DILocation(line: 2038, column: 10, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5648, file: !939, line: 2038, column: 9)
!5743 = !DILocation(line: 2038, column: 14, scope: !5742)
!5744 = !DILocation(line: 2038, column: 9, scope: !5648)
!5745 = !DILocation(line: 2039, column: 9, scope: !5742)
!5746 = !DILocation(line: 2041, column: 5, scope: !5648)
!5747 = !DILocation(line: 2041, column: 9, scope: !5648)
!5748 = !DILocation(line: 2041, column: 25, scope: !5648)
!5749 = !DILocation(line: 2042, column: 13, scope: !5648)
!5750 = !DILocation(line: 2042, column: 18, scope: !5648)
!5751 = !DILocation(line: 2042, column: 29, scope: !5648)
!5752 = !DILocation(line: 2042, column: 5, scope: !5648)
!5753 = !DILocation(line: 2043, column: 13, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5648, file: !939, line: 2042, column: 35)
!5755 = !DILocation(line: 2043, column: 17, scope: !5754)
!5756 = !DILocation(line: 2043, column: 33, scope: !5754)
!5757 = !DILocation(line: 2043, column: 38, scope: !5754)
!5758 = !DILocation(line: 2044, column: 13, scope: !5754)
!5759 = !DILocation(line: 2044, column: 17, scope: !5754)
!5760 = !DILocation(line: 2044, column: 33, scope: !5754)
!5761 = !DILocation(line: 2044, column: 39, scope: !5754)
!5762 = !DILocation(line: 2045, column: 13, scope: !5754)
!5763 = !DILocation(line: 2045, column: 17, scope: !5754)
!5764 = !DILocation(line: 2045, column: 33, scope: !5754)
!5765 = !DILocation(line: 2045, column: 39, scope: !5754)
!5766 = !DILocation(line: 2047, column: 10, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5648, file: !939, line: 2047, column: 9)
!5768 = !DILocation(line: 2047, column: 14, scope: !5767)
!5769 = !DILocation(line: 2047, column: 9, scope: !5648)
!5770 = !DILocation(line: 2048, column: 9, scope: !5767)
!5771 = !DILocation(line: 2050, column: 51, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5648, file: !939, line: 2050, column: 9)
!5773 = !DILocation(line: 2050, column: 23, scope: !5772)
!5774 = !DILocation(line: 2050, column: 21, scope: !5772)
!5775 = !DILocation(line: 2050, column: 57, scope: !5772)
!5776 = !DILocation(line: 2050, column: 9, scope: !5648)
!5777 = !DILocation(line: 2051, column: 53, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5772, file: !939, line: 2050, column: 63)
!5779 = !DILocation(line: 2051, column: 58, scope: !5778)
!5780 = !DILocation(line: 2051, column: 62, scope: !5778)
!5781 = !DILocation(line: 2051, column: 72, scope: !5778)
!5782 = !DILocation(line: 2051, column: 79, scope: !5778)
!5783 = !DILocation(line: 2051, column: 83, scope: !5778)
!5784 = !DILocation(line: 2051, column: 93, scope: !5778)
!5785 = !DILocation(line: 2051, column: 22, scope: !5778)
!5786 = !DILocation(line: 2051, column: 20, scope: !5778)
!5787 = !DILocation(line: 2052, column: 5, scope: !5778)
!5788 = !DILocation(line: 2053, column: 9, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5648, file: !939, line: 2053, column: 9)
!5790 = !DILocation(line: 2053, column: 20, scope: !5789)
!5791 = !DILocation(line: 2053, column: 9, scope: !5648)
!5792 = !DILocation(line: 2054, column: 9, scope: !5789)
!5793 = !DILocation(line: 2056, column: 55, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5648, file: !939, line: 2056, column: 9)
!5795 = !DILocation(line: 2056, column: 27, scope: !5794)
!5796 = !DILocation(line: 2056, column: 10, scope: !5794)
!5797 = !DILocation(line: 2056, column: 14, scope: !5794)
!5798 = !DILocation(line: 2056, column: 25, scope: !5794)
!5799 = !DILocation(line: 2056, column: 61, scope: !5794)
!5800 = !DILocation(line: 2056, column: 9, scope: !5648)
!5801 = !DILocation(line: 2057, column: 9, scope: !5794)
!5802 = !DILocation(line: 2059, column: 9, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5648, file: !939, line: 2059, column: 9)
!5804 = !DILocation(line: 2059, column: 13, scope: !5803)
!5805 = !DILocation(line: 2059, column: 9, scope: !5648)
!5806 = !DILocation(line: 2060, column: 20, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5803, file: !939, line: 2059, column: 22)
!5808 = !DILocation(line: 2060, column: 24, scope: !5807)
!5809 = !DILocation(line: 2060, column: 37, scope: !5807)
!5810 = !DILocation(line: 2060, column: 43, scope: !5807)
!5811 = !DILocation(line: 2060, column: 47, scope: !5807)
!5812 = !DILocation(line: 2060, column: 60, scope: !5807)
!5813 = !DILocation(line: 2061, column: 19, scope: !5807)
!5814 = !DILocation(line: 2061, column: 23, scope: !5807)
!5815 = !DILocation(line: 2061, column: 33, scope: !5807)
!5816 = !DILocation(line: 2061, column: 40, scope: !5807)
!5817 = !DILocation(line: 2061, column: 44, scope: !5807)
!5818 = !DILocation(line: 2061, column: 54, scope: !5807)
!5819 = !DILocation(line: 2060, column: 9, scope: !5807)
!5820 = !DILocation(line: 2063, column: 5, scope: !5807)
!5821 = !DILocation(line: 2064, column: 9, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5803, file: !939, line: 2063, column: 12)
!5823 = !DILocation(line: 2064, column: 13, scope: !5822)
!5824 = !DILocation(line: 2064, column: 40, scope: !5822)
!5825 = !DILocation(line: 2064, column: 28, scope: !5822)
!5826 = !DILocation(line: 2067, column: 22, scope: !5648)
!5827 = !DILocation(line: 2067, column: 27, scope: !5648)
!5828 = !DILocation(line: 2067, column: 5, scope: !5648)
!5829 = !DILocation(line: 2067, column: 9, scope: !5648)
!5830 = !DILocation(line: 2067, column: 20, scope: !5648)
!5831 = !DILocation(line: 2069, column: 5, scope: !5648)
!5832 = !DILocation(line: 2070, column: 1, scope: !5648)
!5833 = distinct !DISubprogram(name: "mxf_parse_prores_frame", scope: !939, file: !939, line: 1967, type: !5649, isLocal: true, isDefinition: true, scopeLine: 1968, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!5834 = !DILocalVariable(name: "s", arg: 1, scope: !5833, file: !939, line: 1967, type: !2417)
!5835 = !DILocation(line: 1967, column: 52, scope: !5833)
!5836 = !DILocalVariable(name: "st", arg: 2, scope: !5833, file: !939, line: 1967, type: !1375)
!5837 = !DILocation(line: 1967, column: 65, scope: !5833)
!5838 = !DILocalVariable(name: "pkt", arg: 3, scope: !5833, file: !939, line: 1967, type: !1243)
!5839 = !DILocation(line: 1967, column: 79, scope: !5833)
!5840 = !DILocalVariable(name: "mxf", scope: !5833, file: !939, line: 1969, type: !2567)
!5841 = !DILocation(line: 1969, column: 17, scope: !5833)
!5842 = !DILocation(line: 1969, column: 23, scope: !5833)
!5843 = !DILocation(line: 1969, column: 26, scope: !5833)
!5844 = !DILocalVariable(name: "sc", scope: !5833, file: !939, line: 1970, type: !1011)
!5845 = !DILocation(line: 1970, column: 23, scope: !5833)
!5846 = !DILocation(line: 1970, column: 28, scope: !5833)
!5847 = !DILocation(line: 1970, column: 32, scope: !5833)
!5848 = !DILocalVariable(name: "i", scope: !5833, file: !939, line: 1971, type: !1042)
!5849 = !DILocation(line: 1971, column: 9, scope: !5833)
!5850 = !DILocalVariable(name: "profile", scope: !5833, file: !939, line: 1971, type: !1042)
!5851 = !DILocation(line: 1971, column: 12, scope: !5833)
!5852 = !DILocation(line: 1973, column: 9, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5833, file: !939, line: 1973, column: 9)
!5854 = !DILocation(line: 1973, column: 14, scope: !5853)
!5855 = !DILocation(line: 1973, column: 9, scope: !5833)
!5856 = !DILocation(line: 1974, column: 9, scope: !5853)
!5857 = !DILocation(line: 1976, column: 5, scope: !5833)
!5858 = !DILocation(line: 1976, column: 9, scope: !5833)
!5859 = !DILocation(line: 1976, column: 18, scope: !5833)
!5860 = !DILocation(line: 1977, column: 15, scope: !5833)
!5861 = !DILocation(line: 1977, column: 19, scope: !5833)
!5862 = !DILocation(line: 1977, column: 29, scope: !5833)
!5863 = !DILocation(line: 1977, column: 13, scope: !5833)
!5864 = !DILocation(line: 1978, column: 12, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5833, file: !939, line: 1978, column: 5)
!5866 = !DILocation(line: 1978, column: 10, scope: !5865)
!5867 = !DILocation(line: 1978, column: 17, scope: !5868)
!5868 = !DILexicalBlockFile(scope: !5869, file: !939, discriminator: 1)
!5869 = distinct !DILexicalBlock(scope: !5865, file: !939, line: 1978, column: 5)
!5870 = !DILocation(line: 1978, column: 19, scope: !5868)
!5871 = !DILocation(line: 1978, column: 5, scope: !5868)
!5872 = !DILocation(line: 1979, column: 13, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5874, file: !939, line: 1979, column: 13)
!5874 = distinct !DILexicalBlock(scope: !5869, file: !939, line: 1978, column: 94)
!5875 = !DILocation(line: 1979, column: 45, scope: !5873)
!5876 = !DILocation(line: 1979, column: 24, scope: !5873)
!5877 = !DILocation(line: 1979, column: 48, scope: !5873)
!5878 = !DILocation(line: 1979, column: 21, scope: !5873)
!5879 = !DILocation(line: 1979, column: 13, scope: !5874)
!5880 = !DILocation(line: 1980, column: 50, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5873, file: !939, line: 1979, column: 57)
!5882 = !DILocation(line: 1980, column: 29, scope: !5881)
!5883 = !DILocation(line: 1980, column: 53, scope: !5881)
!5884 = !DILocation(line: 1980, column: 13, scope: !5881)
!5885 = !DILocation(line: 1980, column: 17, scope: !5881)
!5886 = !DILocation(line: 1980, column: 26, scope: !5881)
!5887 = !DILocation(line: 1981, column: 13, scope: !5881)
!5888 = !DILocation(line: 1983, column: 5, scope: !5874)
!5889 = !DILocation(line: 1978, column: 90, scope: !5890)
!5890 = !DILexicalBlockFile(scope: !5869, file: !939, discriminator: 2)
!5891 = !DILocation(line: 1978, column: 5, scope: !5890)
!5892 = distinct !{!5892, !5893}
!5893 = !DILocation(line: 1978, column: 5, scope: !5833)
!5894 = !DILocation(line: 1984, column: 10, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5833, file: !939, line: 1984, column: 9)
!5896 = !DILocation(line: 1984, column: 14, scope: !5895)
!5897 = !DILocation(line: 1984, column: 9, scope: !5833)
!5898 = !DILocation(line: 1985, column: 9, scope: !5895)
!5899 = !DILocation(line: 1987, column: 22, scope: !5833)
!5900 = !DILocation(line: 1987, column: 27, scope: !5833)
!5901 = !DILocation(line: 1987, column: 5, scope: !5833)
!5902 = !DILocation(line: 1987, column: 9, scope: !5833)
!5903 = !DILocation(line: 1987, column: 20, scope: !5833)
!5904 = !DILocation(line: 1989, column: 5, scope: !5833)
!5905 = !DILocation(line: 1990, column: 1, scope: !5833)
!5906 = distinct !DISubprogram(name: "mxf_parse_dv_frame", scope: !939, file: !939, line: 2072, type: !5649, isLocal: true, isDefinition: true, scopeLine: 2073, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!5907 = !DILocalVariable(name: "s", arg: 1, scope: !5906, file: !939, line: 2072, type: !2417)
!5908 = !DILocation(line: 2072, column: 48, scope: !5906)
!5909 = !DILocalVariable(name: "st", arg: 2, scope: !5906, file: !939, line: 2072, type: !1375)
!5910 = !DILocation(line: 2072, column: 61, scope: !5906)
!5911 = !DILocalVariable(name: "pkt", arg: 3, scope: !5906, file: !939, line: 2072, type: !1243)
!5912 = !DILocation(line: 2072, column: 75, scope: !5906)
!5913 = !DILocalVariable(name: "mxf", scope: !5906, file: !939, line: 2074, type: !2567)
!5914 = !DILocation(line: 2074, column: 17, scope: !5906)
!5915 = !DILocation(line: 2074, column: 23, scope: !5906)
!5916 = !DILocation(line: 2074, column: 26, scope: !5906)
!5917 = !DILocalVariable(name: "sc", scope: !5906, file: !939, line: 2075, type: !1011)
!5918 = !DILocation(line: 2075, column: 23, scope: !5906)
!5919 = !DILocation(line: 2075, column: 28, scope: !5906)
!5920 = !DILocation(line: 2075, column: 32, scope: !5906)
!5921 = !DILocalVariable(name: "vs_pack", scope: !5906, file: !939, line: 2076, type: !1027)
!5922 = !DILocation(line: 2076, column: 14, scope: !5906)
!5923 = !DILocalVariable(name: "vsc_pack", scope: !5906, file: !939, line: 2076, type: !1027)
!5924 = !DILocation(line: 2076, column: 24, scope: !5906)
!5925 = !DILocalVariable(name: "ul_index", scope: !5906, file: !939, line: 2077, type: !1042)
!5926 = !DILocation(line: 2077, column: 9, scope: !5906)
!5927 = !DILocalVariable(name: "stype", scope: !5906, file: !939, line: 2077, type: !1042)
!5928 = !DILocation(line: 2077, column: 19, scope: !5906)
!5929 = !DILocalVariable(name: "pal", scope: !5906, file: !939, line: 2077, type: !1042)
!5930 = !DILocation(line: 2077, column: 26, scope: !5906)
!5931 = !DILocalVariable(name: "profile", scope: !5906, file: !939, line: 2078, type: !5932)
!5932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5933, size: 64, align: 64)
!5933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5934)
!5934 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDVProfile", file: !5935, line: 59, baseType: !5936)
!5935 = !DIFile(filename: "./libavcodec/dv_profile.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!5936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVDVProfile", file: !5935, line: 39, size: 960, align: 64, elements: !5937)
!5937 = !{!5938, !5939, !5940, !5941, !5942, !5943, !5944, !5945, !5946, !5947, !5950, !5951, !5952, !5953, !5954, !5956, !5957}
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "dsf", scope: !5936, file: !5935, line: 40, baseType: !1042, size: 32, align: 32)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "video_stype", scope: !5936, file: !5935, line: 41, baseType: !1042, size: 32, align: 32, offset: 32)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !5936, file: !5935, line: 42, baseType: !1042, size: 32, align: 32, offset: 64)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "difseg_size", scope: !5936, file: !5935, line: 43, baseType: !1042, size: 32, align: 32, offset: 96)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "n_difchan", scope: !5936, file: !5935, line: 44, baseType: !1042, size: 32, align: 32, offset: 128)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !5936, file: !5935, line: 45, baseType: !1048, size: 64, align: 32, offset: 160)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "ltc_divisor", scope: !5936, file: !5935, line: 46, baseType: !1042, size: 32, align: 32, offset: 224)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !5936, file: !5935, line: 47, baseType: !1042, size: 32, align: 32, offset: 256)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !5936, file: !5935, line: 48, baseType: !1042, size: 32, align: 32, offset: 288)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "sar", scope: !5936, file: !5935, line: 49, baseType: !5948, size: 128, align: 32, offset: 320)
!5948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1048, size: 128, align: 32, elements: !5949)
!5949 = !{!2042}
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !5936, file: !5935, line: 50, baseType: !555, size: 32, align: 32, offset: 448)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "bpm", scope: !5936, file: !5935, line: 51, baseType: !1042, size: 32, align: 32, offset: 480)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "block_sizes", scope: !5936, file: !5935, line: 52, baseType: !1092, size: 64, align: 64, offset: 512)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "audio_stride", scope: !5936, file: !5935, line: 53, baseType: !1042, size: 32, align: 32, offset: 576)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "audio_min_samples", scope: !5936, file: !5935, line: 54, baseType: !5955, size: 96, align: 32, offset: 608)
!5955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 96, align: 32, elements: !2494)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "audio_samples_dist", scope: !5936, file: !5935, line: 56, baseType: !2071, size: 160, align: 32, offset: 704)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "audio_shuffle", scope: !5936, file: !5935, line: 58, baseType: !5958, size: 64, align: 64, offset: 896)
!5958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5959, size: 64, align: 64)
!5959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1093, size: 72, align: 8, elements: !2402)
!5960 = !DILocation(line: 2078, column: 24, scope: !5906)
!5961 = !DILocation(line: 2080, column: 9, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5906, file: !939, line: 2080, column: 9)
!5963 = !DILocation(line: 2080, column: 14, scope: !5962)
!5964 = !DILocation(line: 2080, column: 9, scope: !5906)
!5965 = !DILocation(line: 2081, column: 9, scope: !5962)
!5966 = !DILocation(line: 2084, column: 9, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5906, file: !939, line: 2084, column: 9)
!5968 = !DILocation(line: 2084, column: 14, scope: !5967)
!5969 = !DILocation(line: 2084, column: 19, scope: !5967)
!5970 = !DILocation(line: 2084, column: 9, scope: !5906)
!5971 = !DILocation(line: 2085, column: 9, scope: !5967)
!5972 = !DILocation(line: 2087, column: 40, scope: !5906)
!5973 = !DILocation(line: 2087, column: 45, scope: !5906)
!5974 = !DILocation(line: 2087, column: 51, scope: !5906)
!5975 = !DILocation(line: 2087, column: 56, scope: !5906)
!5976 = !DILocation(line: 2087, column: 15, scope: !5906)
!5977 = !DILocation(line: 2087, column: 13, scope: !5906)
!5978 = !DILocation(line: 2089, column: 15, scope: !5906)
!5979 = !DILocation(line: 2089, column: 20, scope: !5906)
!5980 = !DILocation(line: 2089, column: 25, scope: !5906)
!5981 = !DILocation(line: 2089, column: 32, scope: !5906)
!5982 = !DILocation(line: 2089, column: 13, scope: !5906)
!5983 = !DILocation(line: 2090, column: 16, scope: !5906)
!5984 = !DILocation(line: 2090, column: 21, scope: !5906)
!5985 = !DILocation(line: 2090, column: 26, scope: !5906)
!5986 = !DILocation(line: 2090, column: 33, scope: !5906)
!5987 = !DILocation(line: 2090, column: 14, scope: !5906)
!5988 = !DILocation(line: 2091, column: 13, scope: !5906)
!5989 = !DILocation(line: 2091, column: 24, scope: !5906)
!5990 = !DILocation(line: 2091, column: 11, scope: !5906)
!5991 = !DILocation(line: 2092, column: 12, scope: !5906)
!5992 = !DILocation(line: 2092, column: 23, scope: !5906)
!5993 = !DILocation(line: 2092, column: 29, scope: !5906)
!5994 = !DILocation(line: 2092, column: 9, scope: !5906)
!5995 = !DILocation(line: 2094, column: 10, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5906, file: !939, line: 2094, column: 9)
!5997 = !DILocation(line: 2094, column: 22, scope: !5996)
!5998 = !DILocation(line: 2094, column: 30, scope: !5996)
!5999 = !DILocation(line: 2094, column: 9, scope: !5906)
!6000 = !DILocation(line: 2095, column: 9, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5996, file: !939, line: 2094, column: 39)
!6002 = !DILocation(line: 2095, column: 13, scope: !6001)
!6003 = !DILocation(line: 2095, column: 40, scope: !6001)
!6004 = !DILocation(line: 2095, column: 28, scope: !6001)
!6005 = !DILocation(line: 2096, column: 5, scope: !6001)
!6006 = !DILocation(line: 2097, column: 9, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5996, file: !939, line: 2096, column: 12)
!6008 = !DILocation(line: 2097, column: 13, scope: !6007)
!6009 = !DILocation(line: 2097, column: 40, scope: !6007)
!6010 = !DILocation(line: 2097, column: 28, scope: !6007)
!6011 = !DILocation(line: 2100, column: 23, scope: !5906)
!6012 = !DILocation(line: 2100, column: 35, scope: !5906)
!6013 = !DILocation(line: 2100, column: 41, scope: !5906)
!6014 = !DILocation(line: 2100, column: 5, scope: !5906)
!6015 = !DILocation(line: 2100, column: 9, scope: !5906)
!6016 = !DILocation(line: 2100, column: 20, scope: !5906)
!6017 = !DILocation(line: 2105, column: 13, scope: !5906)
!6018 = !DILocation(line: 2105, column: 5, scope: !5906)
!6019 = !DILocation(line: 2107, column: 41, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !5906, file: !939, line: 2105, column: 20)
!6021 = !DILocation(line: 2107, column: 39, scope: !6020)
!6022 = !DILocation(line: 2107, column: 18, scope: !6020)
!6023 = !DILocation(line: 2108, column: 13, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6020, file: !939, line: 2108, column: 13)
!6025 = !DILocation(line: 2108, column: 17, scope: !6024)
!6026 = !DILocation(line: 2108, column: 13, scope: !6020)
!6027 = !DILocation(line: 2109, column: 20, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6024, file: !939, line: 2108, column: 29)
!6029 = !DILocation(line: 2109, column: 13, scope: !6028)
!6030 = !DILocation(line: 2110, column: 13, scope: !6028)
!6031 = !DILocation(line: 2110, column: 17, scope: !6028)
!6032 = !DILocation(line: 2110, column: 28, scope: !6028)
!6033 = !DILocation(line: 2111, column: 9, scope: !6028)
!6034 = !DILocation(line: 2112, column: 9, scope: !6020)
!6035 = !DILocation(line: 2114, column: 42, scope: !6020)
!6036 = !DILocation(line: 2114, column: 40, scope: !6020)
!6037 = !DILocation(line: 2114, column: 18, scope: !6020)
!6038 = !DILocation(line: 2115, column: 9, scope: !6020)
!6039 = !DILocation(line: 2117, column: 40, scope: !6020)
!6040 = !DILocation(line: 2117, column: 38, scope: !6020)
!6041 = !DILocation(line: 2117, column: 18, scope: !6020)
!6042 = !DILocation(line: 2118, column: 9, scope: !6020)
!6043 = !DILocation(line: 2120, column: 13, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6020, file: !939, line: 2120, column: 13)
!6045 = !DILocation(line: 2120, column: 21, scope: !6044)
!6046 = !DILocation(line: 2120, column: 24, scope: !6047)
!6047 = !DILexicalBlockFile(scope: !6044, file: !939, discriminator: 1)
!6048 = !DILocation(line: 2120, column: 33, scope: !6047)
!6049 = !DILocation(line: 2120, column: 41, scope: !6047)
!6050 = !DILocation(line: 2120, column: 63, scope: !6047)
!6051 = !DILocation(line: 2120, column: 66, scope: !6052)
!6052 = !DILexicalBlockFile(scope: !6044, file: !939, discriminator: 2)
!6053 = !DILocation(line: 2120, column: 13, scope: !6052)
!6054 = !DILocation(line: 2121, column: 48, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6044, file: !939, line: 2120, column: 71)
!6056 = !DILocation(line: 2121, column: 46, scope: !6055)
!6057 = !DILocation(line: 2121, column: 22, scope: !6055)
!6058 = !DILocation(line: 2122, column: 13, scope: !6055)
!6059 = !DILocation(line: 2124, column: 40, scope: !6020)
!6060 = !DILocation(line: 2124, column: 38, scope: !6020)
!6061 = !DILocation(line: 2124, column: 18, scope: !6020)
!6062 = !DILocation(line: 2125, column: 5, scope: !6020)
!6063 = !DILocation(line: 2127, column: 17, scope: !5906)
!6064 = !DILocation(line: 2127, column: 5, scope: !5906)
!6065 = !DILocation(line: 2127, column: 9, scope: !5906)
!6066 = !DILocation(line: 2127, column: 15, scope: !5906)
!6067 = !DILocation(line: 2128, column: 47, scope: !5906)
!6068 = !DILocation(line: 2128, column: 51, scope: !5906)
!6069 = !DILocation(line: 2128, column: 21, scope: !5906)
!6070 = !DILocation(line: 2128, column: 58, scope: !5906)
!6071 = !DILocation(line: 2128, column: 5, scope: !5906)
!6072 = !DILocation(line: 2128, column: 9, scope: !5906)
!6073 = !DILocation(line: 2128, column: 18, scope: !5906)
!6074 = !DILocation(line: 2129, column: 22, scope: !5906)
!6075 = !DILocation(line: 2129, column: 27, scope: !5906)
!6076 = !DILocation(line: 2129, column: 5, scope: !5906)
!6077 = !DILocation(line: 2129, column: 9, scope: !5906)
!6078 = !DILocation(line: 2129, column: 20, scope: !5906)
!6079 = !DILocation(line: 2131, column: 5, scope: !5906)
!6080 = !DILocation(line: 2132, column: 1, scope: !5906)
!6081 = !DILocalVariable(name: "s", arg: 1, scope: !2452, file: !939, line: 2166, type: !2417)
!6082 = !DILocation(line: 2166, column: 50, scope: !2452)
!6083 = !DILocalVariable(name: "st", arg: 2, scope: !2452, file: !939, line: 2166, type: !1375)
!6084 = !DILocation(line: 2166, column: 63, scope: !2452)
!6085 = !DILocalVariable(name: "pkt", arg: 3, scope: !2452, file: !939, line: 2167, type: !1243)
!6086 = !DILocation(line: 2167, column: 43, scope: !2452)
!6087 = !DILocalVariable(name: "e", arg: 4, scope: !2452, file: !939, line: 2167, type: !2455)
!6088 = !DILocation(line: 2167, column: 63, scope: !2452)
!6089 = !DILocalVariable(name: "mxf", scope: !2452, file: !939, line: 2169, type: !2567)
!6090 = !DILocation(line: 2169, column: 17, scope: !2452)
!6091 = !DILocation(line: 2169, column: 23, scope: !2452)
!6092 = !DILocation(line: 2169, column: 26, scope: !2452)
!6093 = !DILocalVariable(name: "sc", scope: !2452, file: !939, line: 2170, type: !1011)
!6094 = !DILocation(line: 2170, column: 23, scope: !2452)
!6095 = !DILocation(line: 2170, column: 28, scope: !2452)
!6096 = !DILocation(line: 2170, column: 32, scope: !2452)
!6097 = !DILocalVariable(name: "par", scope: !2452, file: !939, line: 2171, type: !1688)
!6098 = !DILocation(line: 2171, column: 24, scope: !2452)
!6099 = !DILocation(line: 2171, column: 30, scope: !2452)
!6100 = !DILocation(line: 2171, column: 34, scope: !2452)
!6101 = !DILocalVariable(name: "buf", scope: !2452, file: !939, line: 2173, type: !1092)
!6102 = !DILocation(line: 2173, column: 20, scope: !2452)
!6103 = !DILocation(line: 2173, column: 26, scope: !2452)
!6104 = !DILocation(line: 2173, column: 31, scope: !2452)
!6105 = !DILocalVariable(name: "buf_end", scope: !2452, file: !939, line: 2174, type: !1092)
!6106 = !DILocation(line: 2174, column: 20, scope: !2452)
!6107 = !DILocation(line: 2174, column: 30, scope: !2452)
!6108 = !DILocation(line: 2174, column: 35, scope: !2452)
!6109 = !DILocation(line: 2174, column: 42, scope: !2452)
!6110 = !DILocation(line: 2174, column: 47, scope: !2452)
!6111 = !DILocation(line: 2174, column: 40, scope: !2452)
!6112 = !DILocalVariable(name: "state", scope: !2452, file: !939, line: 2175, type: !1034)
!6113 = !DILocation(line: 2175, column: 14, scope: !2452)
!6114 = !DILocalVariable(name: "long_gop", scope: !2452, file: !939, line: 2176, type: !1042)
!6115 = !DILocation(line: 2176, column: 9, scope: !2452)
!6116 = !DILocalVariable(name: "extra_size", scope: !2452, file: !939, line: 2177, type: !1042)
!6117 = !DILocation(line: 2177, column: 9, scope: !2452)
!6118 = !DILocalVariable(name: "i", scope: !2452, file: !939, line: 2178, type: !1042)
!6119 = !DILocation(line: 2178, column: 9, scope: !2452)
!6120 = !DILocalVariable(name: "frame_size", scope: !2452, file: !939, line: 2178, type: !1042)
!6121 = !DILocation(line: 2178, column: 12, scope: !2452)
!6122 = !DILocalVariable(name: "uid_found", scope: !2452, file: !939, line: 2179, type: !1028)
!6123 = !DILocation(line: 2179, column: 13, scope: !2452)
!6124 = !DILocation(line: 2181, column: 9, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !2452, file: !939, line: 2181, column: 9)
!6126 = !DILocation(line: 2181, column: 14, scope: !6125)
!6127 = !DILocation(line: 2181, column: 21, scope: !6125)
!6128 = !DILocation(line: 2181, column: 19, scope: !6125)
!6129 = !DILocation(line: 2181, column: 9, scope: !2452)
!6130 = !DILocation(line: 2182, column: 20, scope: !6125)
!6131 = !DILocation(line: 2182, column: 25, scope: !6125)
!6132 = !DILocation(line: 2182, column: 32, scope: !6125)
!6133 = !DILocation(line: 2182, column: 30, scope: !6125)
!6134 = !DILocation(line: 2182, column: 17, scope: !6125)
!6135 = !DILocation(line: 2182, column: 9, scope: !6125)
!6136 = !DILocation(line: 2184, column: 5, scope: !2452)
!6137 = !DILocation(line: 2185, column: 38, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6139, file: !939, line: 2184, column: 14)
!6139 = distinct !DILexicalBlock(scope: !6140, file: !939, line: 2184, column: 5)
!6140 = distinct !DILexicalBlock(scope: !2452, file: !939, line: 2184, column: 5)
!6141 = !DILocation(line: 2185, column: 43, scope: !6138)
!6142 = !DILocation(line: 2185, column: 15, scope: !6138)
!6143 = !DILocation(line: 2185, column: 13, scope: !6138)
!6144 = !DILocation(line: 2186, column: 13, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6138, file: !939, line: 2186, column: 13)
!6146 = !DILocation(line: 2186, column: 20, scope: !6145)
!6147 = !DILocation(line: 2186, column: 17, scope: !6145)
!6148 = !DILocation(line: 2186, column: 13, scope: !6138)
!6149 = !DILocation(line: 2187, column: 13, scope: !6145)
!6150 = !DILocation(line: 2188, column: 9, scope: !6138)
!6151 = !DILocation(line: 2189, column: 17, scope: !6138)
!6152 = !DILocation(line: 2189, column: 23, scope: !6138)
!6153 = !DILocation(line: 2189, column: 9, scope: !6138)
!6154 = !DILocation(line: 2191, column: 28, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6138, file: !939, line: 2189, column: 31)
!6156 = !DILocation(line: 2191, column: 13, scope: !6155)
!6157 = !DILocation(line: 2191, column: 18, scope: !6155)
!6158 = !DILocation(line: 2191, column: 26, scope: !6155)
!6159 = !DILocation(line: 2192, column: 24, scope: !6155)
!6160 = !DILocation(line: 2192, column: 31, scope: !6155)
!6161 = !DILocation(line: 2192, column: 22, scope: !6155)
!6162 = !DILocation(line: 2193, column: 13, scope: !6155)
!6163 = !DILocation(line: 2193, column: 16, scope: !6155)
!6164 = !DILocation(line: 2193, column: 22, scope: !6155)
!6165 = !DILocation(line: 2194, column: 13, scope: !6155)
!6166 = !DILocation(line: 2196, column: 17, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6155, file: !939, line: 2196, column: 17)
!6168 = !DILocation(line: 2196, column: 20, scope: !6167)
!6169 = !DILocation(line: 2196, column: 26, scope: !6167)
!6170 = !DILocation(line: 2196, column: 17, scope: !6155)
!6171 = !DILocation(line: 2197, column: 17, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6167, file: !939, line: 2196, column: 34)
!6173 = !DILocation(line: 2197, column: 20, scope: !6172)
!6174 = !DILocation(line: 2197, column: 26, scope: !6172)
!6175 = !DILocation(line: 2198, column: 28, scope: !6172)
!6176 = !DILocation(line: 2199, column: 23, scope: !6172)
!6177 = !DILocation(line: 2199, column: 21, scope: !6172)
!6178 = !DILocation(line: 2200, column: 13, scope: !6172)
!6179 = !DILocation(line: 2201, column: 13, scope: !6155)
!6180 = !DILocation(line: 2203, column: 13, scope: !6155)
!6181 = !DILocation(line: 2184, column: 5, scope: !6182)
!6182 = !DILexicalBlockFile(scope: !6139, file: !939, discriminator: 1)
!6183 = distinct !{!6183, !6136}
!6184 = !DILocation(line: 2207, column: 9, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !2452, file: !939, line: 2207, column: 9)
!6186 = !DILocation(line: 2207, column: 14, scope: !6185)
!6187 = !DILocation(line: 2207, column: 9, scope: !2452)
!6188 = !DILocation(line: 2208, column: 9, scope: !6185)
!6189 = !DILocation(line: 2210, column: 5, scope: !2452)
!6190 = !DILocation(line: 2210, column: 9, scope: !2452)
!6191 = !DILocation(line: 2210, column: 36, scope: !2452)
!6192 = !DILocation(line: 2210, column: 24, scope: !2452)
!6193 = !DILocation(line: 2211, column: 22, scope: !2452)
!6194 = !DILocation(line: 2211, column: 27, scope: !2452)
!6195 = !DILocation(line: 2211, column: 39, scope: !2452)
!6196 = !DILocation(line: 2211, column: 5, scope: !2452)
!6197 = !DILocation(line: 2211, column: 9, scope: !2452)
!6198 = !DILocation(line: 2211, column: 20, scope: !2452)
!6199 = !DILocation(line: 2213, column: 15, scope: !2452)
!6200 = !DILocation(line: 2214, column: 18, scope: !2452)
!6201 = !DILocation(line: 2214, column: 23, scope: !2452)
!6202 = !DILocation(line: 2214, column: 30, scope: !2452)
!6203 = !DILocation(line: 2214, column: 28, scope: !2452)
!6204 = !DILocation(line: 2214, column: 16, scope: !2452)
!6205 = !DILocation(line: 2215, column: 12, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !2452, file: !939, line: 2215, column: 5)
!6207 = !DILocation(line: 2215, column: 10, scope: !6206)
!6208 = !DILocation(line: 2215, column: 17, scope: !6209)
!6209 = !DILexicalBlockFile(scope: !6210, file: !939, discriminator: 1)
!6210 = distinct !DILexicalBlock(scope: !6206, file: !939, line: 2215, column: 5)
!6211 = !DILocation(line: 2215, column: 19, scope: !6209)
!6212 = !DILocation(line: 2215, column: 5, scope: !6209)
!6213 = !DILocation(line: 2216, column: 13, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6215, file: !939, line: 2216, column: 13)
!6215 = distinct !DILexicalBlock(scope: !6210, file: !939, line: 2215, column: 50)
!6216 = !DILocation(line: 2216, column: 46, scope: !6214)
!6217 = !DILocation(line: 2216, column: 27, scope: !6214)
!6218 = !DILocation(line: 2216, column: 49, scope: !6214)
!6219 = !DILocation(line: 2216, column: 24, scope: !6214)
!6220 = !DILocation(line: 2216, column: 60, scope: !6214)
!6221 = !DILocation(line: 2216, column: 63, scope: !6222)
!6222 = !DILexicalBlockFile(scope: !6214, file: !939, discriminator: 1)
!6223 = !DILocation(line: 2216, column: 67, scope: !6222)
!6224 = !DILocation(line: 2216, column: 100, scope: !6222)
!6225 = !DILocation(line: 2216, column: 81, scope: !6222)
!6226 = !DILocation(line: 2216, column: 103, scope: !6222)
!6227 = !DILocation(line: 2216, column: 78, scope: !6222)
!6228 = !DILocation(line: 2216, column: 13, scope: !6222)
!6229 = !DILocation(line: 2217, column: 48, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6214, file: !939, line: 2216, column: 115)
!6231 = !DILocation(line: 2217, column: 29, scope: !6230)
!6232 = !DILocation(line: 2217, column: 51, scope: !6230)
!6233 = !DILocation(line: 2217, column: 13, scope: !6230)
!6234 = !DILocation(line: 2217, column: 17, scope: !6230)
!6235 = !DILocation(line: 2217, column: 26, scope: !6230)
!6236 = !DILocation(line: 2218, column: 13, scope: !6230)
!6237 = !DILocation(line: 2218, column: 17, scope: !6230)
!6238 = !DILocation(line: 2218, column: 33, scope: !6230)
!6239 = !DILocation(line: 2219, column: 17, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6230, file: !939, line: 2219, column: 17)
!6241 = !DILocation(line: 2219, column: 21, scope: !6240)
!6242 = !DILocation(line: 2219, column: 17, scope: !6230)
!6243 = !DILocation(line: 2220, column: 17, scope: !6240)
!6244 = !DILocation(line: 2220, column: 21, scope: !6240)
!6245 = !DILocation(line: 2220, column: 37, scope: !6240)
!6246 = !DILocation(line: 2221, column: 13, scope: !6230)
!6247 = !DILocation(line: 2222, column: 40, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6214, file: !939, line: 2222, column: 20)
!6249 = !DILocation(line: 2222, column: 21, scope: !6248)
!6250 = !DILocation(line: 2222, column: 43, scope: !6248)
!6251 = !DILocation(line: 2222, column: 54, scope: !6248)
!6252 = !DILocation(line: 2222, column: 59, scope: !6248)
!6253 = !DILocation(line: 2222, column: 51, scope: !6248)
!6254 = !DILocation(line: 2222, column: 68, scope: !6248)
!6255 = !DILocation(line: 2223, column: 41, scope: !6248)
!6256 = !DILocation(line: 2223, column: 22, scope: !6248)
!6257 = !DILocation(line: 2223, column: 44, scope: !6248)
!6258 = !DILocation(line: 2223, column: 53, scope: !6248)
!6259 = !DILocation(line: 2223, column: 58, scope: !6248)
!6260 = !DILocation(line: 2224, column: 40, scope: !6248)
!6261 = !DILocation(line: 2224, column: 21, scope: !6248)
!6262 = !DILocation(line: 2224, column: 43, scope: !6248)
!6263 = !DILocation(line: 2224, column: 55, scope: !6248)
!6264 = !DILocation(line: 2224, column: 52, scope: !6248)
!6265 = !DILocation(line: 2222, column: 20, scope: !6222)
!6266 = !DILocation(line: 2225, column: 48, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6248, file: !939, line: 2224, column: 67)
!6268 = !DILocation(line: 2225, column: 29, scope: !6267)
!6269 = !DILocation(line: 2225, column: 51, scope: !6267)
!6270 = !DILocation(line: 2225, column: 13, scope: !6267)
!6271 = !DILocation(line: 2225, column: 17, scope: !6267)
!6272 = !DILocation(line: 2225, column: 26, scope: !6267)
!6273 = !DILocation(line: 2226, column: 23, scope: !6267)
!6274 = !DILocation(line: 2227, column: 9, scope: !6267)
!6275 = !DILocation(line: 2228, column: 5, scope: !6215)
!6276 = !DILocation(line: 2215, column: 46, scope: !6277)
!6277 = !DILexicalBlockFile(scope: !6210, file: !939, discriminator: 2)
!6278 = !DILocation(line: 2215, column: 5, scope: !6277)
!6279 = distinct !{!6279, !6280}
!6280 = !DILocation(line: 2215, column: 5, scope: !2452)
!6281 = !DILocation(line: 2230, column: 10, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !2452, file: !939, line: 2230, column: 9)
!6283 = !DILocation(line: 2230, column: 9, scope: !2452)
!6284 = !DILocation(line: 2231, column: 16, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6282, file: !939, line: 2230, column: 21)
!6286 = !DILocation(line: 2231, column: 9, scope: !6285)
!6287 = !DILocation(line: 2232, column: 9, scope: !6285)
!6288 = !DILocation(line: 2235, column: 5, scope: !2452)
!6289 = !DILocation(line: 2236, column: 1, scope: !2452)
!6290 = distinct !DISubprogram(name: "mxf_compute_edit_unit_byte_count", scope: !939, file: !939, line: 2741, type: !4227, isLocal: true, isDefinition: true, scopeLine: 2742, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!6291 = !DILocalVariable(name: "s", arg: 1, scope: !6290, file: !939, line: 2741, type: !2417)
!6292 = !DILocation(line: 2741, column: 63, scope: !6290)
!6293 = !DILocalVariable(name: "mxf", scope: !6290, file: !939, line: 2743, type: !2567)
!6294 = !DILocation(line: 2743, column: 17, scope: !6290)
!6295 = !DILocation(line: 2743, column: 23, scope: !6290)
!6296 = !DILocation(line: 2743, column: 26, scope: !6290)
!6297 = !DILocalVariable(name: "i", scope: !6290, file: !939, line: 2744, type: !1042)
!6298 = !DILocation(line: 2744, column: 9, scope: !6290)
!6299 = !DILocation(line: 2746, column: 9, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6290, file: !939, line: 2746, column: 9)
!6301 = !DILocation(line: 2746, column: 12, scope: !6300)
!6302 = !DILocation(line: 2746, column: 20, scope: !6300)
!6303 = !DILocation(line: 2746, column: 9, scope: !6290)
!6304 = !DILocalVariable(name: "sc", scope: !6305, file: !939, line: 2747, type: !1011)
!6305 = distinct !DILexicalBlock(scope: !6300, file: !939, line: 2746, column: 45)
!6306 = !DILocation(line: 2747, column: 27, scope: !6305)
!6307 = !DILocation(line: 2747, column: 32, scope: !6305)
!6308 = !DILocation(line: 2747, column: 35, scope: !6305)
!6309 = !DILocation(line: 2747, column: 47, scope: !6305)
!6310 = !DILocation(line: 2748, column: 37, scope: !6305)
!6311 = !DILocation(line: 2748, column: 41, scope: !6305)
!6312 = !DILocation(line: 2748, column: 9, scope: !6305)
!6313 = !DILocation(line: 2748, column: 14, scope: !6305)
!6314 = !DILocation(line: 2748, column: 35, scope: !6305)
!6315 = !DILocation(line: 2749, column: 9, scope: !6305)
!6316 = !DILocation(line: 2752, column: 5, scope: !6290)
!6317 = !DILocation(line: 2752, column: 10, scope: !6290)
!6318 = !DILocation(line: 2752, column: 31, scope: !6290)
!6319 = !DILocation(line: 2753, column: 12, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6290, file: !939, line: 2753, column: 5)
!6321 = !DILocation(line: 2753, column: 10, scope: !6320)
!6322 = !DILocation(line: 2753, column: 17, scope: !6323)
!6323 = !DILexicalBlockFile(scope: !6324, file: !939, discriminator: 1)
!6324 = distinct !DILexicalBlock(scope: !6320, file: !939, line: 2753, column: 5)
!6325 = !DILocation(line: 2753, column: 21, scope: !6323)
!6326 = !DILocation(line: 2753, column: 24, scope: !6323)
!6327 = !DILocation(line: 2753, column: 19, scope: !6323)
!6328 = !DILocation(line: 2753, column: 5, scope: !6323)
!6329 = !DILocalVariable(name: "st", scope: !6330, file: !939, line: 2754, type: !1375)
!6330 = distinct !DILexicalBlock(scope: !6324, file: !939, line: 2753, column: 41)
!6331 = !DILocation(line: 2754, column: 19, scope: !6330)
!6332 = !DILocation(line: 2754, column: 35, scope: !6330)
!6333 = !DILocation(line: 2754, column: 24, scope: !6330)
!6334 = !DILocation(line: 2754, column: 27, scope: !6330)
!6335 = !DILocalVariable(name: "sc", scope: !6330, file: !939, line: 2755, type: !1011)
!6336 = !DILocation(line: 2755, column: 27, scope: !6330)
!6337 = !DILocation(line: 2755, column: 32, scope: !6330)
!6338 = !DILocation(line: 2755, column: 36, scope: !6330)
!6339 = !DILocation(line: 2756, column: 28, scope: !6330)
!6340 = !DILocation(line: 2756, column: 33, scope: !6330)
!6341 = !DILocation(line: 2756, column: 9, scope: !6330)
!6342 = !DILocation(line: 2756, column: 13, scope: !6330)
!6343 = !DILocation(line: 2756, column: 26, scope: !6330)
!6344 = !DILocation(line: 2757, column: 47, scope: !6330)
!6345 = !DILocation(line: 2757, column: 51, scope: !6330)
!6346 = !DILocation(line: 2757, column: 45, scope: !6330)
!6347 = !DILocation(line: 2757, column: 9, scope: !6330)
!6348 = !DILocation(line: 2757, column: 14, scope: !6330)
!6349 = !DILocation(line: 2757, column: 35, scope: !6330)
!6350 = !DILocation(line: 2758, column: 52, scope: !6330)
!6351 = !DILocation(line: 2758, column: 57, scope: !6330)
!6352 = !DILocation(line: 2758, column: 38, scope: !6330)
!6353 = !DILocation(line: 2758, column: 9, scope: !6330)
!6354 = !DILocation(line: 2758, column: 14, scope: !6330)
!6355 = !DILocation(line: 2758, column: 35, scope: !6330)
!6356 = !DILocation(line: 2759, column: 5, scope: !6330)
!6357 = !DILocation(line: 2753, column: 37, scope: !6358)
!6358 = !DILexicalBlockFile(scope: !6324, file: !939, discriminator: 2)
!6359 = !DILocation(line: 2753, column: 5, scope: !6358)
!6360 = distinct !{!6360, !6361}
!6361 = !DILocation(line: 2753, column: 5, scope: !6290)
!6362 = !DILocation(line: 2760, column: 1, scope: !6290)
!6363 = distinct !DISubprogram(name: "mxf_write_opatom_packet", scope: !939, file: !939, line: 2711, type: !6364, isLocal: true, isDefinition: true, scopeLine: 2712, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!6364 = !DISubroutineType(types: !6365)
!6365 = !{!1042, !2417, !1243, !2455}
!6366 = !DILocalVariable(name: "s", arg: 1, scope: !6363, file: !939, line: 2711, type: !2417)
!6367 = !DILocation(line: 2711, column: 53, scope: !6363)
!6368 = !DILocalVariable(name: "pkt", arg: 2, scope: !6363, file: !939, line: 2711, type: !1243)
!6369 = !DILocation(line: 2711, column: 66, scope: !6363)
!6370 = !DILocalVariable(name: "ie", arg: 3, scope: !6363, file: !939, line: 2711, type: !2455)
!6371 = !DILocation(line: 2711, column: 86, scope: !6363)
!6372 = !DILocalVariable(name: "mxf", scope: !6363, file: !939, line: 2713, type: !2567)
!6373 = !DILocation(line: 2713, column: 17, scope: !6363)
!6374 = !DILocation(line: 2713, column: 23, scope: !6363)
!6375 = !DILocation(line: 2713, column: 26, scope: !6363)
!6376 = !DILocalVariable(name: "pb", scope: !6363, file: !939, line: 2714, type: !1309)
!6377 = !DILocation(line: 2714, column: 18, scope: !6363)
!6378 = !DILocation(line: 2714, column: 23, scope: !6363)
!6379 = !DILocation(line: 2714, column: 26, scope: !6363)
!6380 = !DILocalVariable(name: "err", scope: !6363, file: !939, line: 2716, type: !1042)
!6381 = !DILocation(line: 2716, column: 9, scope: !6363)
!6382 = !DILocation(line: 2718, column: 10, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6363, file: !939, line: 2718, column: 9)
!6384 = !DILocation(line: 2718, column: 15, scope: !6383)
!6385 = !DILocation(line: 2718, column: 9, scope: !6363)
!6386 = !DILocation(line: 2719, column: 40, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6388, file: !939, line: 2719, column: 13)
!6388 = distinct !DILexicalBlock(scope: !6383, file: !939, line: 2718, column: 31)
!6389 = !DILocation(line: 2719, column: 20, scope: !6387)
!6390 = !DILocation(line: 2719, column: 18, scope: !6387)
!6391 = !DILocation(line: 2719, column: 80, scope: !6387)
!6392 = !DILocation(line: 2719, column: 13, scope: !6388)
!6393 = !DILocation(line: 2720, column: 20, scope: !6387)
!6394 = !DILocation(line: 2720, column: 13, scope: !6387)
!6395 = !DILocation(line: 2721, column: 28, scope: !6388)
!6396 = !DILocation(line: 2721, column: 9, scope: !6388)
!6397 = !DILocation(line: 2723, column: 52, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6388, file: !939, line: 2723, column: 13)
!6399 = !DILocation(line: 2723, column: 20, scope: !6398)
!6400 = !DILocation(line: 2723, column: 18, scope: !6398)
!6401 = !DILocation(line: 2723, column: 56, scope: !6398)
!6402 = !DILocation(line: 2723, column: 13, scope: !6388)
!6403 = !DILocation(line: 2724, column: 20, scope: !6398)
!6404 = !DILocation(line: 2724, column: 13, scope: !6398)
!6405 = !DILocation(line: 2725, column: 9, scope: !6388)
!6406 = !DILocation(line: 2725, column: 14, scope: !6388)
!6407 = !DILocation(line: 2725, column: 29, scope: !6388)
!6408 = !DILocation(line: 2726, column: 5, scope: !6388)
!6409 = !DILocation(line: 2728, column: 10, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6363, file: !939, line: 2728, column: 9)
!6411 = !DILocation(line: 2728, column: 15, scope: !6410)
!6412 = !DILocation(line: 2728, column: 9, scope: !6363)
!6413 = !DILocation(line: 2729, column: 60, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6410, file: !939, line: 2728, column: 37)
!6415 = !DILocation(line: 2729, column: 65, scope: !6414)
!6416 = !DILocation(line: 2729, column: 28, scope: !6414)
!6417 = !DILocation(line: 2729, column: 33, scope: !6414)
!6418 = !DILocation(line: 2729, column: 9, scope: !6414)
!6419 = !DILocation(line: 2729, column: 14, scope: !6414)
!6420 = !DILocation(line: 2729, column: 51, scope: !6414)
!6421 = !DILocation(line: 2729, column: 58, scope: !6414)
!6422 = !DILocation(line: 2730, column: 59, scope: !6414)
!6423 = !DILocation(line: 2730, column: 63, scope: !6414)
!6424 = !DILocation(line: 2730, column: 28, scope: !6414)
!6425 = !DILocation(line: 2730, column: 33, scope: !6414)
!6426 = !DILocation(line: 2730, column: 9, scope: !6414)
!6427 = !DILocation(line: 2730, column: 14, scope: !6414)
!6428 = !DILocation(line: 2730, column: 51, scope: !6414)
!6429 = !DILocation(line: 2730, column: 57, scope: !6414)
!6430 = !DILocation(line: 2731, column: 66, scope: !6414)
!6431 = !DILocation(line: 2731, column: 70, scope: !6414)
!6432 = !DILocation(line: 2731, column: 28, scope: !6414)
!6433 = !DILocation(line: 2731, column: 33, scope: !6414)
!6434 = !DILocation(line: 2731, column: 9, scope: !6414)
!6435 = !DILocation(line: 2731, column: 14, scope: !6414)
!6436 = !DILocation(line: 2731, column: 51, scope: !6414)
!6437 = !DILocation(line: 2731, column: 64, scope: !6414)
!6438 = !DILocation(line: 2732, column: 5, scope: !6414)
!6439 = !DILocation(line: 2733, column: 5, scope: !6363)
!6440 = !DILocation(line: 2733, column: 10, scope: !6363)
!6441 = !DILocation(line: 2733, column: 26, scope: !6363)
!6442 = !DILocation(line: 2734, column: 16, scope: !6363)
!6443 = !DILocation(line: 2734, column: 20, scope: !6363)
!6444 = !DILocation(line: 2734, column: 25, scope: !6363)
!6445 = !DILocation(line: 2734, column: 31, scope: !6363)
!6446 = !DILocation(line: 2734, column: 36, scope: !6363)
!6447 = !DILocation(line: 2734, column: 5, scope: !6363)
!6448 = !DILocation(line: 2735, column: 25, scope: !6363)
!6449 = !DILocation(line: 2735, column: 30, scope: !6363)
!6450 = !DILocation(line: 2735, column: 5, scope: !6363)
!6451 = !DILocation(line: 2735, column: 10, scope: !6363)
!6452 = !DILocation(line: 2735, column: 22, scope: !6363)
!6453 = !DILocation(line: 2736, column: 16, scope: !6363)
!6454 = !DILocation(line: 2736, column: 5, scope: !6363)
!6455 = !DILocation(line: 2738, column: 5, scope: !6363)
!6456 = !DILocation(line: 2739, column: 1, scope: !6363)
!6457 = distinct !DISubprogram(name: "mxf_write_partition", scope: !939, file: !939, line: 1849, type: !6458, isLocal: true, isDefinition: true, scopeLine: 1852, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!6458 = !DISubroutineType(types: !6459)
!6459 = !{!1042, !2417, !1042, !1042, !1092, !1042}
!6460 = !DILocation(line: 557, column: 77, scope: !3914, inlinedAt: !6461)
!6461 = distinct !DILocation(line: 1940, column: 15, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6463, file: !939, line: 1930, column: 25)
!6463 = distinct !DILexicalBlock(scope: !6457, file: !939, line: 1930, column: 9)
!6464 = !DILocation(line: 557, column: 77, scope: !3914, inlinedAt: !6465)
!6465 = distinct !DILocation(line: 1936, column: 17, scope: !6462)
!6466 = !DILocation(line: 557, column: 77, scope: !3914, inlinedAt: !6467)
!6467 = distinct !DILocation(line: 1906, column: 32, scope: !6457)
!6468 = !DILocation(line: 557, column: 77, scope: !3914, inlinedAt: !6469)
!6469 = distinct !DILocation(line: 1857, column: 33, scope: !6457)
!6470 = !DILocalVariable(name: "s", arg: 1, scope: !6457, file: !939, line: 1849, type: !2417)
!6471 = !DILocation(line: 1849, column: 49, scope: !6457)
!6472 = !DILocalVariable(name: "bodysid", arg: 2, scope: !6457, file: !939, line: 1849, type: !1042)
!6473 = !DILocation(line: 1849, column: 56, scope: !6457)
!6474 = !DILocalVariable(name: "indexsid", arg: 3, scope: !6457, file: !939, line: 1850, type: !1042)
!6475 = !DILocation(line: 1850, column: 37, scope: !6457)
!6476 = !DILocalVariable(name: "key", arg: 4, scope: !6457, file: !939, line: 1851, type: !1092)
!6477 = !DILocation(line: 1851, column: 48, scope: !6457)
!6478 = !DILocalVariable(name: "write_metadata", arg: 5, scope: !6457, file: !939, line: 1851, type: !1042)
!6479 = !DILocation(line: 1851, column: 57, scope: !6457)
!6480 = !DILocalVariable(name: "mxf", scope: !6457, file: !939, line: 1853, type: !2567)
!6481 = !DILocation(line: 1853, column: 17, scope: !6457)
!6482 = !DILocation(line: 1853, column: 23, scope: !6457)
!6483 = !DILocation(line: 1853, column: 26, scope: !6457)
!6484 = !DILocalVariable(name: "pb", scope: !6457, file: !939, line: 1854, type: !1309)
!6485 = !DILocation(line: 1854, column: 18, scope: !6457)
!6486 = !DILocation(line: 1854, column: 23, scope: !6457)
!6487 = !DILocation(line: 1854, column: 26, scope: !6457)
!6488 = !DILocalVariable(name: "header_byte_count_offset", scope: !6457, file: !939, line: 1855, type: !1008)
!6489 = !DILocation(line: 1855, column: 13, scope: !6457)
!6490 = !DILocalVariable(name: "index_byte_count", scope: !6457, file: !939, line: 1856, type: !1035)
!6491 = !DILocation(line: 1856, column: 14, scope: !6457)
!6492 = !DILocalVariable(name: "partition_offset", scope: !6457, file: !939, line: 1857, type: !1039)
!6493 = !DILocation(line: 1857, column: 14, scope: !6457)
!6494 = !DILocation(line: 1857, column: 43, scope: !6457)
!6495 = !DILocation(line: 1857, column: 33, scope: !6457)
!6496 = !DILocation(line: 559, column: 22, scope: !3914, inlinedAt: !6469)
!6497 = !DILocation(line: 559, column: 12, scope: !3914, inlinedAt: !6469)
!6498 = !DILocalVariable(name: "err", scope: !6457, file: !939, line: 1858, type: !1042)
!6499 = !DILocation(line: 1858, column: 9, scope: !6457)
!6500 = !DILocation(line: 1860, column: 10, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6457, file: !939, line: 1860, column: 9)
!6502 = !DILocation(line: 1860, column: 15, scope: !6501)
!6503 = !DILocation(line: 1860, column: 36, scope: !6501)
!6504 = !DILocation(line: 1860, column: 39, scope: !6505)
!6505 = !DILexicalBlockFile(scope: !6501, file: !939, discriminator: 1)
!6506 = !DILocation(line: 1860, column: 44, scope: !6505)
!6507 = !DILocation(line: 1860, column: 9, scope: !6505)
!6508 = !DILocation(line: 1861, column: 37, scope: !6501)
!6509 = !DILocation(line: 1861, column: 40, scope: !6501)
!6510 = !DILocation(line: 1861, column: 50, scope: !6501)
!6511 = !DILocation(line: 1861, column: 53, scope: !6501)
!6512 = !DILocation(line: 1861, column: 35, scope: !6501)
!6513 = !DILocation(line: 1861, column: 56, scope: !6501)
!6514 = !DILocation(line: 1862, column: 16, scope: !6501)
!6515 = !DILocation(line: 1862, column: 21, scope: !6501)
!6516 = !DILocation(line: 1862, column: 37, scope: !6501)
!6517 = !DILocation(line: 1862, column: 15, scope: !6501)
!6518 = !DILocation(line: 1861, column: 26, scope: !6501)
!6519 = !DILocation(line: 1861, column: 9, scope: !6501)
!6520 = !DILocation(line: 1863, column: 14, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6501, file: !939, line: 1863, column: 14)
!6522 = !DILocation(line: 1863, column: 19, scope: !6521)
!6523 = !DILocation(line: 1863, column: 40, scope: !6521)
!6524 = !DILocation(line: 1863, column: 43, scope: !6525)
!6525 = !DILexicalBlockFile(scope: !6521, file: !939, discriminator: 1)
!6526 = !DILocation(line: 1863, column: 14, scope: !6525)
!6527 = !DILocation(line: 1864, column: 26, scope: !6521)
!6528 = !DILocation(line: 1864, column: 9, scope: !6521)
!6529 = !DILocation(line: 1866, column: 9, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6457, file: !939, line: 1866, column: 9)
!6531 = !DILocation(line: 1866, column: 9, scope: !6457)
!6532 = !DILocation(line: 1868, column: 49, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6530, file: !939, line: 1866, column: 27)
!6534 = !DILocation(line: 1868, column: 34, scope: !6533)
!6535 = !DILocation(line: 1868, column: 32, scope: !6533)
!6536 = !DILocation(line: 1868, column: 26, scope: !6533)
!6537 = !DILocation(line: 1869, column: 43, scope: !6533)
!6538 = !DILocation(line: 1869, column: 29, scope: !6533)
!6539 = !DILocation(line: 1869, column: 26, scope: !6533)
!6540 = !DILocation(line: 1870, column: 5, scope: !6533)
!6541 = !DILocation(line: 1872, column: 9, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6457, file: !939, line: 1872, column: 9)
!6543 = !DILocation(line: 1872, column: 13, scope: !6542)
!6544 = !DILocation(line: 1872, column: 24, scope: !6545)
!6545 = !DILexicalBlockFile(scope: !6542, file: !939, discriminator: 1)
!6546 = !DILocation(line: 1872, column: 17, scope: !6545)
!6547 = !DILocation(line: 1872, column: 9, scope: !6545)
!6548 = !DILocation(line: 1873, column: 39, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !939, line: 1873, column: 13)
!6550 = distinct !DILexicalBlock(scope: !6542, file: !939, line: 1872, column: 54)
!6551 = !DILocation(line: 1873, column: 44, scope: !6549)
!6552 = !DILocation(line: 1873, column: 38, scope: !6549)
!6553 = !DILocation(line: 1873, column: 67, scope: !6549)
!6554 = !DILocation(line: 1873, column: 72, scope: !6549)
!6555 = !DILocation(line: 1873, column: 94, scope: !6549)
!6556 = !DILocation(line: 1873, column: 20, scope: !6549)
!6557 = !DILocation(line: 1873, column: 18, scope: !6549)
!6558 = !DILocation(line: 1874, column: 76, scope: !6549)
!6559 = !DILocation(line: 1873, column: 13, scope: !6550)
!6560 = !DILocation(line: 1875, column: 13, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6549, file: !939, line: 1874, column: 81)
!6562 = !DILocation(line: 1875, column: 18, scope: !6561)
!6563 = !DILocation(line: 1875, column: 40, scope: !6561)
!6564 = !DILocation(line: 1876, column: 20, scope: !6561)
!6565 = !DILocation(line: 1876, column: 13, scope: !6561)
!6566 = !DILocation(line: 1878, column: 68, scope: !6550)
!6567 = !DILocation(line: 1878, column: 36, scope: !6550)
!6568 = !DILocation(line: 1878, column: 41, scope: !6550)
!6569 = !DILocation(line: 1878, column: 62, scope: !6550)
!6570 = !DILocation(line: 1878, column: 9, scope: !6550)
!6571 = !DILocation(line: 1878, column: 14, scope: !6550)
!6572 = !DILocation(line: 1878, column: 66, scope: !6550)
!6573 = !DILocation(line: 1879, column: 5, scope: !6550)
!6574 = !DILocation(line: 1882, column: 9, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6457, file: !939, line: 1882, column: 9)
!6576 = !DILocation(line: 1882, column: 9, scope: !6457)
!6577 = !DILocation(line: 1883, column: 20, scope: !6575)
!6578 = !DILocation(line: 1883, column: 24, scope: !6575)
!6579 = !DILocation(line: 1883, column: 9, scope: !6575)
!6580 = !DILocation(line: 1885, column: 20, scope: !6575)
!6581 = !DILocation(line: 1885, column: 9, scope: !6575)
!6582 = !DILocation(line: 1887, column: 28, scope: !6457)
!6583 = !DILocation(line: 1887, column: 45, scope: !6457)
!6584 = !DILocation(line: 1887, column: 50, scope: !6457)
!6585 = !DILocation(line: 1887, column: 74, scope: !6457)
!6586 = !DILocation(line: 1887, column: 80, scope: !6587)
!6587 = !DILexicalBlockFile(scope: !6457, file: !939, discriminator: 1)
!6588 = !DILocation(line: 1887, column: 85, scope: !6587)
!6589 = !DILocation(line: 1887, column: 109, scope: !6587)
!6590 = !DILocation(line: 1887, column: 45, scope: !6587)
!6591 = !DILocation(line: 1887, column: 115, scope: !6592)
!6592 = !DILexicalBlockFile(scope: !6457, file: !939, discriminator: 2)
!6593 = !DILocation(line: 1887, column: 120, scope: !6592)
!6594 = !DILocation(line: 1887, column: 45, scope: !6592)
!6595 = !DILocation(line: 1887, column: 45, scope: !6596)
!6596 = !DILexicalBlockFile(scope: !6457, file: !939, discriminator: 3)
!6597 = !DILocation(line: 1887, column: 44, scope: !6596)
!6598 = !DILocation(line: 1887, column: 42, scope: !6596)
!6599 = !DILocation(line: 1887, column: 35, scope: !6596)
!6600 = !DILocation(line: 1887, column: 32, scope: !6596)
!6601 = !DILocation(line: 1887, column: 5, scope: !6596)
!6602 = !DILocation(line: 1890, column: 15, scope: !6457)
!6603 = !DILocation(line: 1890, column: 5, scope: !6457)
!6604 = !DILocation(line: 1891, column: 15, scope: !6457)
!6605 = !DILocation(line: 1891, column: 5, scope: !6457)
!6606 = !DILocation(line: 1892, column: 15, scope: !6457)
!6607 = !DILocation(line: 1892, column: 5, scope: !6457)
!6608 = !DILocation(line: 1894, column: 15, scope: !6457)
!6609 = !DILocation(line: 1894, column: 19, scope: !6457)
!6610 = !DILocation(line: 1894, column: 5, scope: !6457)
!6611 = !DILocation(line: 1896, column: 9, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6457, file: !939, line: 1896, column: 9)
!6613 = !DILocation(line: 1896, column: 13, scope: !6612)
!6614 = !DILocation(line: 1896, column: 24, scope: !6615)
!6615 = !DILexicalBlockFile(scope: !6612, file: !939, discriminator: 1)
!6616 = !DILocation(line: 1896, column: 17, scope: !6615)
!6617 = !DILocation(line: 1896, column: 53, scope: !6615)
!6618 = !DILocation(line: 1896, column: 56, scope: !6619)
!6619 = !DILexicalBlockFile(scope: !6612, file: !939, discriminator: 2)
!6620 = !DILocation(line: 1896, column: 61, scope: !6619)
!6621 = !DILocation(line: 1896, column: 83, scope: !6619)
!6622 = !DILocation(line: 1896, column: 9, scope: !6619)
!6623 = !DILocation(line: 1897, column: 19, scope: !6612)
!6624 = !DILocation(line: 1897, column: 50, scope: !6612)
!6625 = !DILocation(line: 1897, column: 55, scope: !6612)
!6626 = !DILocation(line: 1897, column: 76, scope: !6612)
!6627 = !DILocation(line: 1897, column: 23, scope: !6612)
!6628 = !DILocation(line: 1897, column: 28, scope: !6612)
!6629 = !DILocation(line: 1897, column: 9, scope: !6612)
!6630 = !DILocation(line: 1898, column: 14, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6612, file: !939, line: 1898, column: 14)
!6632 = !DILocation(line: 1898, column: 18, scope: !6631)
!6633 = !DILocation(line: 1898, column: 29, scope: !6634)
!6634 = !DILexicalBlockFile(scope: !6631, file: !939, discriminator: 1)
!6635 = !DILocation(line: 1898, column: 22, scope: !6634)
!6636 = !DILocation(line: 1898, column: 60, scope: !6634)
!6637 = !DILocation(line: 1898, column: 63, scope: !6638)
!6638 = !DILexicalBlockFile(scope: !6631, file: !939, discriminator: 2)
!6639 = !DILocation(line: 1898, column: 68, scope: !6638)
!6640 = !DILocation(line: 1898, column: 14, scope: !6638)
!6641 = !DILocation(line: 1899, column: 19, scope: !6631)
!6642 = !DILocation(line: 1899, column: 50, scope: !6631)
!6643 = !DILocation(line: 1899, column: 55, scope: !6631)
!6644 = !DILocation(line: 1899, column: 76, scope: !6631)
!6645 = !DILocation(line: 1899, column: 23, scope: !6631)
!6646 = !DILocation(line: 1899, column: 28, scope: !6631)
!6647 = !DILocation(line: 1899, column: 9, scope: !6631)
!6648 = !DILocation(line: 1901, column: 19, scope: !6631)
!6649 = !DILocation(line: 1901, column: 9, scope: !6631)
!6650 = !DILocation(line: 1903, column: 15, scope: !6457)
!6651 = !DILocation(line: 1903, column: 19, scope: !6457)
!6652 = !DILocation(line: 1903, column: 24, scope: !6457)
!6653 = !DILocation(line: 1903, column: 5, scope: !6457)
!6654 = !DILocation(line: 1906, column: 42, scope: !6457)
!6655 = !DILocation(line: 1906, column: 32, scope: !6457)
!6656 = !DILocation(line: 559, column: 22, scope: !3914, inlinedAt: !6467)
!6657 = !DILocation(line: 559, column: 12, scope: !3914, inlinedAt: !6467)
!6658 = !DILocation(line: 1906, column: 30, scope: !6457)
!6659 = !DILocation(line: 1907, column: 15, scope: !6457)
!6660 = !DILocation(line: 1907, column: 5, scope: !6457)
!6661 = !DILocation(line: 1910, column: 15, scope: !6457)
!6662 = !DILocation(line: 1910, column: 19, scope: !6457)
!6663 = !DILocation(line: 1910, column: 5, scope: !6457)
!6664 = !DILocation(line: 1911, column: 15, scope: !6457)
!6665 = !DILocation(line: 1911, column: 19, scope: !6457)
!6666 = !DILocation(line: 1911, column: 38, scope: !6587)
!6667 = !DILocation(line: 1911, column: 19, scope: !6587)
!6668 = !DILocation(line: 1911, column: 19, scope: !6592)
!6669 = !DILocation(line: 1911, column: 19, scope: !6596)
!6670 = !DILocation(line: 1911, column: 5, scope: !6596)
!6671 = !DILocation(line: 1914, column: 9, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6457, file: !939, line: 1914, column: 9)
!6673 = !DILocation(line: 1914, column: 17, scope: !6672)
!6674 = !DILocation(line: 1914, column: 20, scope: !6675)
!6675 = !DILexicalBlockFile(scope: !6672, file: !939, discriminator: 1)
!6676 = !DILocation(line: 1914, column: 25, scope: !6675)
!6677 = !DILocation(line: 1914, column: 42, scope: !6675)
!6678 = !DILocation(line: 1914, column: 45, scope: !6679)
!6679 = !DILexicalBlockFile(scope: !6672, file: !939, discriminator: 2)
!6680 = !DILocation(line: 1914, column: 50, scope: !6679)
!6681 = !DILocation(line: 1914, column: 72, scope: !6679)
!6682 = !DILocation(line: 1914, column: 75, scope: !6683)
!6683 = !DILexicalBlockFile(scope: !6672, file: !939, discriminator: 3)
!6684 = !DILocation(line: 1914, column: 78, scope: !6683)
!6685 = !DILocation(line: 1914, column: 86, scope: !6683)
!6686 = !DILocation(line: 1914, column: 9, scope: !6683)
!6687 = !DILocation(line: 1915, column: 19, scope: !6672)
!6688 = !DILocation(line: 1915, column: 23, scope: !6672)
!6689 = !DILocation(line: 1915, column: 28, scope: !6672)
!6690 = !DILocation(line: 1915, column: 9, scope: !6672)
!6691 = !DILocation(line: 1917, column: 19, scope: !6672)
!6692 = !DILocation(line: 1917, column: 9, scope: !6672)
!6693 = !DILocation(line: 1919, column: 15, scope: !6457)
!6694 = !DILocation(line: 1919, column: 19, scope: !6457)
!6695 = !DILocation(line: 1919, column: 5, scope: !6457)
!6696 = !DILocation(line: 1922, column: 9, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6457, file: !939, line: 1922, column: 9)
!6698 = !DILocation(line: 1922, column: 12, scope: !6697)
!6699 = !DILocation(line: 1922, column: 20, scope: !6697)
!6700 = !DILocation(line: 1922, column: 9, scope: !6457)
!6701 = !DILocation(line: 1923, column: 20, scope: !6697)
!6702 = !DILocation(line: 1923, column: 9, scope: !6697)
!6703 = !DILocation(line: 1925, column: 20, scope: !6697)
!6704 = !DILocation(line: 1925, column: 9, scope: !6697)
!6705 = !DILocation(line: 1928, column: 38, scope: !6457)
!6706 = !DILocation(line: 1928, column: 5, scope: !6457)
!6707 = !DILocation(line: 1930, column: 9, scope: !6463)
!6708 = !DILocation(line: 1930, column: 9, scope: !6457)
!6709 = !DILocalVariable(name: "pos", scope: !6462, file: !939, line: 1932, type: !1008)
!6710 = !DILocation(line: 1932, column: 17, scope: !6462)
!6711 = !DILocalVariable(name: "start", scope: !6462, file: !939, line: 1932, type: !1008)
!6712 = !DILocation(line: 1932, column: 22, scope: !6462)
!6713 = !DILocalVariable(name: "header_byte_count", scope: !6462, file: !939, line: 1933, type: !1035)
!6714 = !DILocation(line: 1933, column: 18, scope: !6462)
!6715 = !DILocation(line: 1935, column: 28, scope: !6462)
!6716 = !DILocation(line: 1935, column: 9, scope: !6462)
!6717 = !DILocation(line: 1936, column: 27, scope: !6462)
!6718 = !DILocation(line: 1936, column: 30, scope: !6462)
!6719 = !DILocation(line: 1936, column: 17, scope: !6462)
!6720 = !DILocation(line: 559, column: 22, scope: !3914, inlinedAt: !6465)
!6721 = !DILocation(line: 559, column: 12, scope: !3914, inlinedAt: !6465)
!6722 = !DILocation(line: 1936, column: 15, scope: !6462)
!6723 = !DILocation(line: 1937, column: 31, scope: !6462)
!6724 = !DILocation(line: 1937, column: 9, scope: !6462)
!6725 = !DILocation(line: 1938, column: 28, scope: !6462)
!6726 = !DILocation(line: 1938, column: 9, scope: !6462)
!6727 = !DILocation(line: 1939, column: 40, scope: !6462)
!6728 = !DILocation(line: 1939, column: 9, scope: !6462)
!6729 = !DILocation(line: 1940, column: 25, scope: !6462)
!6730 = !DILocation(line: 1940, column: 28, scope: !6462)
!6731 = !DILocation(line: 1940, column: 15, scope: !6462)
!6732 = !DILocation(line: 559, column: 22, scope: !3914, inlinedAt: !6461)
!6733 = !DILocation(line: 559, column: 12, scope: !3914, inlinedAt: !6461)
!6734 = !DILocation(line: 1940, column: 13, scope: !6462)
!6735 = !DILocation(line: 1941, column: 29, scope: !6462)
!6736 = !DILocation(line: 1941, column: 35, scope: !6462)
!6737 = !DILocation(line: 1941, column: 33, scope: !6462)
!6738 = !DILocation(line: 1941, column: 57, scope: !6462)
!6739 = !DILocation(line: 1941, column: 43, scope: !6462)
!6740 = !DILocation(line: 1941, column: 41, scope: !6462)
!6741 = !DILocation(line: 1941, column: 27, scope: !6462)
!6742 = !DILocation(line: 1944, column: 19, scope: !6462)
!6743 = !DILocation(line: 1944, column: 23, scope: !6462)
!6744 = !DILocation(line: 1944, column: 9, scope: !6462)
!6745 = !DILocation(line: 1945, column: 19, scope: !6462)
!6746 = !DILocation(line: 1945, column: 23, scope: !6462)
!6747 = !DILocation(line: 1945, column: 9, scope: !6462)
!6748 = !DILocation(line: 1946, column: 19, scope: !6462)
!6749 = !DILocation(line: 1946, column: 23, scope: !6462)
!6750 = !DILocation(line: 1946, column: 9, scope: !6462)
!6751 = !DILocation(line: 1947, column: 5, scope: !6462)
!6752 = !DILocation(line: 1949, column: 8, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6457, file: !939, line: 1949, column: 8)
!6754 = !DILocation(line: 1949, column: 8, scope: !6457)
!6755 = !DILocation(line: 1950, column: 20, scope: !6753)
!6756 = !DILocation(line: 1950, column: 9, scope: !6753)
!6757 = !DILocation(line: 1952, column: 5, scope: !6457)
!6758 = !DILocation(line: 1953, column: 1, scope: !6457)
!6759 = distinct !DISubprogram(name: "mxf_write_klv_fill", scope: !939, file: !939, line: 1837, type: !4227, isLocal: true, isDefinition: true, scopeLine: 1838, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!6760 = !DILocation(line: 557, column: 77, scope: !3914, inlinedAt: !6761)
!6761 = distinct !DILocation(line: 1839, column: 34, scope: !6759)
!6762 = !DILocalVariable(name: "s", arg: 1, scope: !6759, file: !939, line: 1837, type: !2417)
!6763 = !DILocation(line: 1837, column: 49, scope: !6759)
!6764 = !DILocalVariable(name: "pad", scope: !6759, file: !939, line: 1839, type: !1035)
!6765 = !DILocation(line: 1839, column: 14, scope: !6759)
!6766 = !DILocation(line: 1839, column: 44, scope: !6759)
!6767 = !DILocation(line: 1839, column: 47, scope: !6759)
!6768 = !DILocation(line: 1839, column: 34, scope: !6759)
!6769 = !DILocation(line: 559, column: 22, scope: !3914, inlinedAt: !6761)
!6770 = !DILocation(line: 559, column: 12, scope: !3914, inlinedAt: !6761)
!6771 = !DILocation(line: 1839, column: 20, scope: !6772)
!6772 = !DILexicalBlockFile(scope: !6759, file: !939, discriminator: 1)
!6773 = !DILocation(line: 1840, column: 9, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6759, file: !939, line: 1840, column: 9)
!6775 = !DILocation(line: 1840, column: 9, scope: !6759)
!6776 = !DILocation(line: 1841, column: 20, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6774, file: !939, line: 1840, column: 14)
!6778 = !DILocation(line: 1841, column: 23, scope: !6777)
!6779 = !DILocation(line: 1841, column: 9, scope: !6777)
!6780 = !DILocation(line: 1842, column: 13, scope: !6777)
!6781 = !DILocation(line: 1843, column: 32, scope: !6777)
!6782 = !DILocation(line: 1843, column: 35, scope: !6777)
!6783 = !DILocation(line: 1843, column: 39, scope: !6777)
!6784 = !DILocation(line: 1843, column: 9, scope: !6777)
!6785 = !DILocation(line: 1844, column: 19, scope: !6777)
!6786 = !DILocation(line: 1844, column: 22, scope: !6777)
!6787 = !DILocation(line: 1844, column: 29, scope: !6777)
!6788 = !DILocation(line: 1844, column: 9, scope: !6777)
!6789 = !DILocation(line: 1846, column: 5, scope: !6777)
!6790 = !DILocation(line: 1847, column: 1, scope: !6759)
!6791 = distinct !DISubprogram(name: "mxf_write_index_table_segment", scope: !939, file: !939, line: 1691, type: !4227, isLocal: true, isDefinition: true, scopeLine: 1692, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!6792 = !DILocation(line: 557, column: 77, scope: !3914, inlinedAt: !6793)
!6793 = distinct !DILocation(line: 1709, column: 11, scope: !6791)
!6794 = !DILocalVariable(name: "s", arg: 1, scope: !6791, file: !939, line: 1691, type: !2417)
!6795 = !DILocation(line: 1691, column: 60, scope: !6791)
!6796 = !DILocalVariable(name: "mxf", scope: !6791, file: !939, line: 1693, type: !2567)
!6797 = !DILocation(line: 1693, column: 17, scope: !6791)
!6798 = !DILocation(line: 1693, column: 23, scope: !6791)
!6799 = !DILocation(line: 1693, column: 26, scope: !6791)
!6800 = !DILocalVariable(name: "pb", scope: !6791, file: !939, line: 1694, type: !1309)
!6801 = !DILocation(line: 1694, column: 18, scope: !6791)
!6802 = !DILocation(line: 1694, column: 23, scope: !6791)
!6803 = !DILocation(line: 1694, column: 26, scope: !6791)
!6804 = !DILocalVariable(name: "i", scope: !6791, file: !939, line: 1695, type: !1042)
!6805 = !DILocation(line: 1695, column: 9, scope: !6791)
!6806 = !DILocalVariable(name: "j", scope: !6791, file: !939, line: 1695, type: !1042)
!6807 = !DILocation(line: 1695, column: 12, scope: !6791)
!6808 = !DILocalVariable(name: "temporal_reordering", scope: !6791, file: !939, line: 1695, type: !1042)
!6809 = !DILocation(line: 1695, column: 15, scope: !6791)
!6810 = !DILocalVariable(name: "key_index", scope: !6791, file: !939, line: 1696, type: !1042)
!6811 = !DILocation(line: 1696, column: 9, scope: !6791)
!6812 = !DILocation(line: 1696, column: 21, scope: !6791)
!6813 = !DILocation(line: 1696, column: 26, scope: !6791)
!6814 = !DILocalVariable(name: "prev_non_b_picture", scope: !6791, file: !939, line: 1697, type: !1042)
!6815 = !DILocation(line: 1697, column: 9, scope: !6791)
!6816 = !DILocalVariable(name: "audio_frame_size", scope: !6791, file: !939, line: 1698, type: !1042)
!6817 = !DILocation(line: 1698, column: 9, scope: !6791)
!6818 = !DILocalVariable(name: "pos", scope: !6791, file: !939, line: 1699, type: !1008)
!6819 = !DILocation(line: 1699, column: 13, scope: !6791)
!6820 = !DILocation(line: 1701, column: 12, scope: !6791)
!6821 = !DILocation(line: 1701, column: 44, scope: !6791)
!6822 = !DILocation(line: 1701, column: 49, scope: !6791)
!6823 = !DILocation(line: 1701, column: 5, scope: !6791)
!6824 = !DILocation(line: 1703, column: 10, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6791, file: !939, line: 1703, column: 9)
!6826 = !DILocation(line: 1703, column: 15, scope: !6825)
!6827 = !DILocation(line: 1703, column: 32, scope: !6825)
!6828 = !DILocation(line: 1703, column: 36, scope: !6829)
!6829 = !DILexicalBlockFile(scope: !6825, file: !939, discriminator: 1)
!6830 = !DILocation(line: 1703, column: 41, scope: !6829)
!6831 = !DILocation(line: 1703, column: 9, scope: !6829)
!6832 = !DILocation(line: 1704, column: 9, scope: !6825)
!6833 = !DILocation(line: 1706, column: 16, scope: !6791)
!6834 = !DILocation(line: 1706, column: 5, scope: !6791)
!6835 = !DILocation(line: 1708, column: 28, scope: !6791)
!6836 = !DILocation(line: 1708, column: 5, scope: !6791)
!6837 = !DILocation(line: 1709, column: 21, scope: !6791)
!6838 = !DILocation(line: 1709, column: 11, scope: !6791)
!6839 = !DILocation(line: 559, column: 22, scope: !3914, inlinedAt: !6793)
!6840 = !DILocation(line: 559, column: 12, scope: !3914, inlinedAt: !6793)
!6841 = !DILocation(line: 1709, column: 9, scope: !6791)
!6842 = !DILocation(line: 1712, column: 25, scope: !6791)
!6843 = !DILocation(line: 1712, column: 5, scope: !6791)
!6844 = !DILocation(line: 1713, column: 20, scope: !6791)
!6845 = !DILocation(line: 1713, column: 5, scope: !6791)
!6846 = !DILocation(line: 1716, column: 25, scope: !6791)
!6847 = !DILocation(line: 1716, column: 5, scope: !6791)
!6848 = !DILocation(line: 1717, column: 15, scope: !6791)
!6849 = !DILocation(line: 1717, column: 19, scope: !6791)
!6850 = !DILocation(line: 1717, column: 24, scope: !6791)
!6851 = !DILocation(line: 1717, column: 34, scope: !6791)
!6852 = !DILocation(line: 1717, column: 5, scope: !6791)
!6853 = !DILocation(line: 1718, column: 15, scope: !6791)
!6854 = !DILocation(line: 1718, column: 19, scope: !6791)
!6855 = !DILocation(line: 1718, column: 24, scope: !6791)
!6856 = !DILocation(line: 1718, column: 34, scope: !6791)
!6857 = !DILocation(line: 1718, column: 5, scope: !6791)
!6858 = !DILocation(line: 1721, column: 25, scope: !6791)
!6859 = !DILocation(line: 1721, column: 5, scope: !6791)
!6860 = !DILocation(line: 1722, column: 15, scope: !6791)
!6861 = !DILocation(line: 1722, column: 19, scope: !6791)
!6862 = !DILocation(line: 1722, column: 24, scope: !6791)
!6863 = !DILocation(line: 1722, column: 5, scope: !6791)
!6864 = !DILocation(line: 1725, column: 25, scope: !6791)
!6865 = !DILocation(line: 1725, column: 5, scope: !6791)
!6866 = !DILocation(line: 1726, column: 9, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6791, file: !939, line: 1726, column: 9)
!6868 = !DILocation(line: 1726, column: 14, scope: !6867)
!6869 = !DILocation(line: 1726, column: 9, scope: !6791)
!6870 = !DILocation(line: 1727, column: 19, scope: !6867)
!6871 = !DILocation(line: 1727, column: 9, scope: !6867)
!6872 = !DILocation(line: 1729, column: 19, scope: !6867)
!6873 = !DILocation(line: 1729, column: 23, scope: !6867)
!6874 = !DILocation(line: 1729, column: 28, scope: !6867)
!6875 = !DILocation(line: 1729, column: 9, scope: !6867)
!6876 = !DILocation(line: 1732, column: 25, scope: !6791)
!6877 = !DILocation(line: 1732, column: 5, scope: !6791)
!6878 = !DILocation(line: 1733, column: 15, scope: !6791)
!6879 = !DILocation(line: 1733, column: 19, scope: !6791)
!6880 = !DILocation(line: 1733, column: 24, scope: !6791)
!6881 = !DILocation(line: 1733, column: 5, scope: !6791)
!6882 = !DILocation(line: 1736, column: 25, scope: !6791)
!6883 = !DILocation(line: 1736, column: 5, scope: !6791)
!6884 = !DILocation(line: 1737, column: 15, scope: !6791)
!6885 = !DILocation(line: 1737, column: 5, scope: !6791)
!6886 = !DILocation(line: 1740, column: 25, scope: !6791)
!6887 = !DILocation(line: 1740, column: 5, scope: !6791)
!6888 = !DILocation(line: 1741, column: 15, scope: !6791)
!6889 = !DILocation(line: 1741, column: 5, scope: !6791)
!6890 = !DILocation(line: 1744, column: 25, scope: !6791)
!6891 = !DILocation(line: 1744, column: 5, scope: !6791)
!6892 = !DILocation(line: 1745, column: 13, scope: !6791)
!6893 = !DILocation(line: 1745, column: 18, scope: !6791)
!6894 = !DILocation(line: 1745, column: 23, scope: !6791)
!6895 = !DILocation(line: 1745, column: 17, scope: !6791)
!6896 = !DILocation(line: 1745, column: 5, scope: !6791)
!6897 = !DILocation(line: 1748, column: 25, scope: !6791)
!6898 = !DILocation(line: 1748, column: 34, scope: !6791)
!6899 = !DILocation(line: 1748, column: 37, scope: !6791)
!6900 = !DILocation(line: 1748, column: 47, scope: !6791)
!6901 = !DILocation(line: 1748, column: 50, scope: !6791)
!6902 = !DILocation(line: 1748, column: 31, scope: !6791)
!6903 = !DILocation(line: 1748, column: 5, scope: !6791)
!6904 = !DILocation(line: 1749, column: 15, scope: !6791)
!6905 = !DILocation(line: 1749, column: 19, scope: !6791)
!6906 = !DILocation(line: 1749, column: 22, scope: !6791)
!6907 = !DILocation(line: 1749, column: 32, scope: !6791)
!6908 = !DILocation(line: 1749, column: 5, scope: !6791)
!6909 = !DILocation(line: 1750, column: 15, scope: !6791)
!6910 = !DILocation(line: 1750, column: 5, scope: !6791)
!6911 = !DILocation(line: 1752, column: 13, scope: !6791)
!6912 = !DILocation(line: 1752, column: 5, scope: !6791)
!6913 = !DILocation(line: 1753, column: 13, scope: !6791)
!6914 = !DILocation(line: 1753, column: 5, scope: !6791)
!6915 = !DILocation(line: 1754, column: 15, scope: !6791)
!6916 = !DILocation(line: 1754, column: 5, scope: !6791)
!6917 = !DILocation(line: 1756, column: 12, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6791, file: !939, line: 1756, column: 5)
!6919 = !DILocation(line: 1756, column: 10, scope: !6918)
!6920 = !DILocation(line: 1756, column: 17, scope: !6921)
!6921 = !DILexicalBlockFile(scope: !6922, file: !939, discriminator: 1)
!6922 = distinct !DILexicalBlock(scope: !6918, file: !939, line: 1756, column: 5)
!6923 = !DILocation(line: 1756, column: 21, scope: !6921)
!6924 = !DILocation(line: 1756, column: 24, scope: !6921)
!6925 = !DILocation(line: 1756, column: 19, scope: !6921)
!6926 = !DILocation(line: 1756, column: 5, scope: !6921)
!6927 = !DILocalVariable(name: "st", scope: !6928, file: !939, line: 1757, type: !1375)
!6928 = distinct !DILexicalBlock(scope: !6922, file: !939, line: 1756, column: 41)
!6929 = !DILocation(line: 1757, column: 19, scope: !6928)
!6930 = !DILocation(line: 1757, column: 35, scope: !6928)
!6931 = !DILocation(line: 1757, column: 24, scope: !6928)
!6932 = !DILocation(line: 1757, column: 27, scope: !6928)
!6933 = !DILocalVariable(name: "sc", scope: !6928, file: !939, line: 1758, type: !1011)
!6934 = !DILocation(line: 1758, column: 27, scope: !6928)
!6935 = !DILocation(line: 1758, column: 32, scope: !6928)
!6936 = !DILocation(line: 1758, column: 36, scope: !6928)
!6937 = !DILocation(line: 1759, column: 17, scope: !6928)
!6938 = !DILocation(line: 1759, column: 21, scope: !6928)
!6939 = !DILocation(line: 1759, column: 25, scope: !6928)
!6940 = !DILocation(line: 1759, column: 9, scope: !6928)
!6941 = !DILocation(line: 1760, column: 13, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6928, file: !939, line: 1760, column: 13)
!6943 = !DILocation(line: 1760, column: 17, scope: !6942)
!6944 = !DILocation(line: 1760, column: 13, scope: !6928)
!6945 = !DILocation(line: 1761, column: 33, scope: !6942)
!6946 = !DILocation(line: 1761, column: 13, scope: !6942)
!6947 = !DILocation(line: 1762, column: 13, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6928, file: !939, line: 1762, column: 13)
!6949 = !DILocation(line: 1762, column: 18, scope: !6948)
!6950 = !DILocation(line: 1762, column: 13, scope: !6928)
!6951 = !DILocation(line: 1763, column: 21, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6948, file: !939, line: 1762, column: 40)
!6953 = !DILocation(line: 1763, column: 13, scope: !6952)
!6954 = !DILocation(line: 1764, column: 23, scope: !6952)
!6955 = !DILocation(line: 1764, column: 27, scope: !6952)
!6956 = !DILocation(line: 1764, column: 31, scope: !6952)
!6957 = !DILocation(line: 1764, column: 13, scope: !6952)
!6958 = !DILocation(line: 1765, column: 9, scope: !6952)
!6959 = !DILocation(line: 1765, column: 20, scope: !6960)
!6960 = !DILexicalBlockFile(scope: !6961, file: !939, discriminator: 1)
!6961 = distinct !DILexicalBlock(scope: !6948, file: !939, line: 1765, column: 20)
!6962 = !DILocation(line: 1765, column: 22, scope: !6960)
!6963 = !DILocation(line: 1766, column: 21, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6961, file: !939, line: 1765, column: 28)
!6965 = !DILocation(line: 1766, column: 13, scope: !6964)
!6966 = !DILocation(line: 1767, column: 23, scope: !6964)
!6967 = !DILocation(line: 1767, column: 13, scope: !6964)
!6968 = !DILocation(line: 1768, column: 9, scope: !6964)
!6969 = !DILocation(line: 1769, column: 18, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !939, line: 1769, column: 17)
!6971 = distinct !DILexicalBlock(scope: !6961, file: !939, line: 1768, column: 16)
!6972 = !DILocation(line: 1769, column: 17, scope: !6971)
!6973 = !DILocation(line: 1770, column: 36, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6970, file: !939, line: 1769, column: 36)
!6975 = !DILocation(line: 1770, column: 40, scope: !6974)
!6976 = !DILocation(line: 1770, column: 44, scope: !6974)
!6977 = !DILocation(line: 1770, column: 55, scope: !6974)
!6978 = !DILocation(line: 1770, column: 59, scope: !6974)
!6979 = !DILocation(line: 1770, column: 63, scope: !6974)
!6980 = !DILocation(line: 1770, column: 54, scope: !6974)
!6981 = !DILocation(line: 1770, column: 34, scope: !6974)
!6982 = !DILocation(line: 1771, column: 51, scope: !6974)
!6983 = !DILocation(line: 1771, column: 37, scope: !6974)
!6984 = !DILocation(line: 1771, column: 34, scope: !6974)
!6985 = !DILocation(line: 1772, column: 13, scope: !6974)
!6986 = !DILocation(line: 1773, column: 21, scope: !6971)
!6987 = !DILocation(line: 1773, column: 13, scope: !6971)
!6988 = !DILocation(line: 1774, column: 23, scope: !6971)
!6989 = !DILocation(line: 1774, column: 28, scope: !6971)
!6990 = !DILocation(line: 1774, column: 29, scope: !6971)
!6991 = !DILocation(line: 1774, column: 33, scope: !6971)
!6992 = !DILocation(line: 1774, column: 32, scope: !6971)
!6993 = !DILocation(line: 1774, column: 13, scope: !6971)
!6994 = !DILocation(line: 1776, column: 5, scope: !6928)
!6995 = !DILocation(line: 1756, column: 37, scope: !6996)
!6996 = !DILexicalBlockFile(scope: !6922, file: !939, discriminator: 2)
!6997 = !DILocation(line: 1756, column: 5, scope: !6996)
!6998 = distinct !{!6998, !6999}
!6999 = !DILocation(line: 1756, column: 5, scope: !6791)
!7000 = !DILocation(line: 1778, column: 10, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6791, file: !939, line: 1778, column: 9)
!7002 = !DILocation(line: 1778, column: 15, scope: !7001)
!7003 = !DILocation(line: 1778, column: 9, scope: !6791)
!7004 = !DILocalVariable(name: "sc", scope: !7005, file: !939, line: 1779, type: !1011)
!7005 = distinct !DILexicalBlock(scope: !7001, file: !939, line: 1778, column: 37)
!7006 = !DILocation(line: 1779, column: 27, scope: !7005)
!7007 = !DILocation(line: 1779, column: 32, scope: !7005)
!7008 = !DILocation(line: 1779, column: 35, scope: !7005)
!7009 = !DILocation(line: 1779, column: 47, scope: !7005)
!7010 = !DILocation(line: 1780, column: 29, scope: !7005)
!7011 = !DILocation(line: 1780, column: 37, scope: !7005)
!7012 = !DILocation(line: 1780, column: 42, scope: !7005)
!7013 = !DILocation(line: 1780, column: 58, scope: !7005)
!7014 = !DILocation(line: 1780, column: 35, scope: !7005)
!7015 = !DILocation(line: 1780, column: 9, scope: !7005)
!7016 = !DILocation(line: 1781, column: 19, scope: !7005)
!7017 = !DILocation(line: 1781, column: 23, scope: !7005)
!7018 = !DILocation(line: 1781, column: 28, scope: !7005)
!7019 = !DILocation(line: 1781, column: 9, scope: !7005)
!7020 = !DILocation(line: 1782, column: 19, scope: !7005)
!7021 = !DILocation(line: 1782, column: 9, scope: !7005)
!7022 = !DILocation(line: 1784, column: 16, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7005, file: !939, line: 1784, column: 9)
!7024 = !DILocation(line: 1784, column: 14, scope: !7023)
!7025 = !DILocation(line: 1784, column: 21, scope: !7026)
!7026 = !DILexicalBlockFile(scope: !7027, file: !939, discriminator: 1)
!7027 = distinct !DILexicalBlock(scope: !7023, file: !939, line: 1784, column: 9)
!7028 = !DILocation(line: 1784, column: 25, scope: !7026)
!7029 = !DILocation(line: 1784, column: 30, scope: !7026)
!7030 = !DILocation(line: 1784, column: 23, scope: !7026)
!7031 = !DILocation(line: 1784, column: 9, scope: !7026)
!7032 = !DILocalVariable(name: "temporal_offset", scope: !7033, file: !939, line: 1785, type: !1042)
!7033 = distinct !DILexicalBlock(scope: !7027, file: !939, line: 1784, column: 53)
!7034 = !DILocation(line: 1785, column: 17, scope: !7033)
!7035 = !DILocation(line: 1787, column: 38, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7033, file: !939, line: 1787, column: 17)
!7037 = !DILocation(line: 1787, column: 19, scope: !7036)
!7038 = !DILocation(line: 1787, column: 24, scope: !7036)
!7039 = !DILocation(line: 1787, column: 41, scope: !7036)
!7040 = !DILocation(line: 1787, column: 47, scope: !7036)
!7041 = !DILocation(line: 1787, column: 17, scope: !7033)
!7042 = !DILocation(line: 1788, column: 33, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7036, file: !939, line: 1787, column: 56)
!7044 = !DILocation(line: 1788, column: 37, scope: !7043)
!7045 = !DILocation(line: 1788, column: 49, scope: !7043)
!7046 = !DILocation(line: 1788, column: 53, scope: !7043)
!7047 = !DILocation(line: 1788, column: 58, scope: !7043)
!7048 = !DILocation(line: 1788, column: 51, scope: !7043)
!7049 = !DILocation(line: 1788, column: 46, scope: !7043)
!7050 = !DILocation(line: 1788, column: 32, scope: !7043)
!7051 = !DILocation(line: 1788, column: 77, scope: !7052)
!7052 = !DILexicalBlockFile(scope: !7043, file: !939, discriminator: 1)
!7053 = !DILocation(line: 1788, column: 81, scope: !7052)
!7054 = !DILocation(line: 1788, column: 32, scope: !7052)
!7055 = !DILocation(line: 1788, column: 93, scope: !7056)
!7056 = !DILexicalBlockFile(scope: !7043, file: !939, discriminator: 2)
!7057 = !DILocation(line: 1788, column: 97, scope: !7056)
!7058 = !DILocation(line: 1788, column: 102, scope: !7056)
!7059 = !DILocation(line: 1788, column: 95, scope: !7056)
!7060 = !DILocation(line: 1788, column: 32, scope: !7056)
!7061 = !DILocation(line: 1788, column: 32, scope: !7062)
!7062 = !DILexicalBlockFile(scope: !7043, file: !939, discriminator: 3)
!7063 = !DILocation(line: 1788, column: 17, scope: !7062)
!7064 = !DILocation(line: 1788, column: 21, scope: !7062)
!7065 = !DILocation(line: 1788, column: 29, scope: !7062)
!7066 = !DILocation(line: 1789, column: 39, scope: !7043)
!7067 = !DILocation(line: 1789, column: 17, scope: !7043)
!7068 = !DILocation(line: 1789, column: 22, scope: !7043)
!7069 = !DILocation(line: 1789, column: 37, scope: !7043)
!7070 = !DILocation(line: 1790, column: 29, scope: !7043)
!7071 = !DILocation(line: 1790, column: 27, scope: !7043)
!7072 = !DILocation(line: 1791, column: 13, scope: !7043)
!7073 = !DILocation(line: 1793, column: 17, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7033, file: !939, line: 1793, column: 17)
!7075 = !DILocation(line: 1793, column: 17, scope: !7033)
!7076 = !DILocalVariable(name: "pic_num_in_gop", scope: !7077, file: !939, line: 1794, type: !1042)
!7077 = distinct !DILexicalBlock(scope: !7074, file: !939, line: 1793, column: 38)
!7078 = !DILocation(line: 1794, column: 21, scope: !7077)
!7079 = !DILocation(line: 1794, column: 38, scope: !7077)
!7080 = !DILocation(line: 1794, column: 42, scope: !7077)
!7081 = !DILocation(line: 1794, column: 40, scope: !7077)
!7082 = !DILocation(line: 1795, column: 21, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7077, file: !939, line: 1795, column: 21)
!7084 = !DILocation(line: 1795, column: 58, scope: !7083)
!7085 = !DILocation(line: 1795, column: 39, scope: !7083)
!7086 = !DILocation(line: 1795, column: 44, scope: !7083)
!7087 = !DILocation(line: 1795, column: 61, scope: !7083)
!7088 = !DILocation(line: 1795, column: 36, scope: !7083)
!7089 = !DILocation(line: 1795, column: 21, scope: !7077)
!7090 = !DILocation(line: 1796, column: 30, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !939, line: 1796, column: 21)
!7092 = distinct !DILexicalBlock(scope: !7083, file: !939, line: 1795, column: 75)
!7093 = !DILocation(line: 1796, column: 28, scope: !7091)
!7094 = !DILocation(line: 1796, column: 26, scope: !7091)
!7095 = !DILocation(line: 1796, column: 41, scope: !7096)
!7096 = !DILexicalBlockFile(scope: !7097, file: !939, discriminator: 1)
!7097 = distinct !DILexicalBlock(scope: !7091, file: !939, line: 1796, column: 21)
!7098 = !DILocation(line: 1796, column: 45, scope: !7096)
!7099 = !DILocation(line: 1796, column: 50, scope: !7096)
!7100 = !DILocation(line: 1796, column: 43, scope: !7096)
!7101 = !DILocation(line: 1796, column: 21, scope: !7096)
!7102 = !DILocation(line: 1797, column: 29, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7104, file: !939, line: 1797, column: 29)
!7104 = distinct !DILexicalBlock(scope: !7097, file: !939, line: 1796, column: 73)
!7105 = !DILocation(line: 1797, column: 66, scope: !7103)
!7106 = !DILocation(line: 1797, column: 47, scope: !7103)
!7107 = !DILocation(line: 1797, column: 52, scope: !7103)
!7108 = !DILocation(line: 1797, column: 69, scope: !7103)
!7109 = !DILocation(line: 1797, column: 44, scope: !7103)
!7110 = !DILocation(line: 1797, column: 29, scope: !7104)
!7111 = !DILocation(line: 1798, column: 29, scope: !7103)
!7112 = !DILocation(line: 1799, column: 21, scope: !7104)
!7113 = !DILocation(line: 1796, column: 69, scope: !7114)
!7114 = !DILexicalBlockFile(scope: !7097, file: !939, discriminator: 2)
!7115 = !DILocation(line: 1796, column: 21, scope: !7114)
!7116 = distinct !{!7116, !7117}
!7117 = !DILocation(line: 1796, column: 21, scope: !7092)
!7118 = !DILocation(line: 1800, column: 25, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7092, file: !939, line: 1800, column: 25)
!7120 = !DILocation(line: 1800, column: 30, scope: !7119)
!7121 = !DILocation(line: 1800, column: 35, scope: !7119)
!7122 = !DILocation(line: 1800, column: 27, scope: !7119)
!7123 = !DILocation(line: 1800, column: 25, scope: !7092)
!7124 = !DILocation(line: 1801, column: 32, scope: !7119)
!7125 = !DILocation(line: 1801, column: 25, scope: !7119)
!7126 = !DILocation(line: 1802, column: 39, scope: !7092)
!7127 = !DILocation(line: 1802, column: 43, scope: !7092)
!7128 = !DILocation(line: 1802, column: 41, scope: !7092)
!7129 = !DILocation(line: 1802, column: 55, scope: !7092)
!7130 = !DILocation(line: 1802, column: 53, scope: !7092)
!7131 = !DILocation(line: 1802, column: 37, scope: !7092)
!7132 = !DILocation(line: 1803, column: 17, scope: !7092)
!7133 = !DILocation(line: 1804, column: 13, scope: !7077)
!7134 = !DILocation(line: 1805, column: 21, scope: !7033)
!7135 = !DILocation(line: 1805, column: 25, scope: !7033)
!7136 = !DILocation(line: 1805, column: 13, scope: !7033)
!7137 = !DILocation(line: 1807, column: 37, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7033, file: !939, line: 1807, column: 17)
!7139 = !DILocation(line: 1807, column: 18, scope: !7138)
!7140 = !DILocation(line: 1807, column: 23, scope: !7138)
!7141 = !DILocation(line: 1807, column: 40, scope: !7138)
!7142 = !DILocation(line: 1807, column: 46, scope: !7138)
!7143 = !DILocation(line: 1807, column: 54, scope: !7138)
!7144 = !DILocation(line: 1807, column: 17, scope: !7033)
!7145 = !DILocation(line: 1808, column: 41, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7138, file: !939, line: 1807, column: 63)
!7147 = !DILocation(line: 1808, column: 45, scope: !7146)
!7148 = !DILocation(line: 1808, column: 65, scope: !7146)
!7149 = !DILocation(line: 1808, column: 69, scope: !7146)
!7150 = !DILocation(line: 1808, column: 67, scope: !7146)
!7151 = !DILocation(line: 1808, column: 62, scope: !7146)
!7152 = !DILocation(line: 1808, column: 40, scope: !7146)
!7153 = !DILocation(line: 1808, column: 92, scope: !7154)
!7154 = !DILexicalBlockFile(scope: !7146, file: !939, discriminator: 1)
!7155 = !DILocation(line: 1808, column: 96, scope: !7154)
!7156 = !DILocation(line: 1808, column: 40, scope: !7154)
!7157 = !DILocation(line: 1808, column: 116, scope: !7158)
!7158 = !DILexicalBlockFile(scope: !7146, file: !939, discriminator: 2)
!7159 = !DILocation(line: 1808, column: 120, scope: !7158)
!7160 = !DILocation(line: 1808, column: 118, scope: !7158)
!7161 = !DILocation(line: 1808, column: 40, scope: !7158)
!7162 = !DILocation(line: 1808, column: 40, scope: !7163)
!7163 = !DILexicalBlockFile(scope: !7146, file: !939, discriminator: 3)
!7164 = !DILocation(line: 1808, column: 17, scope: !7163)
!7165 = !DILocation(line: 1808, column: 21, scope: !7163)
!7166 = !DILocation(line: 1808, column: 37, scope: !7163)
!7167 = !DILocation(line: 1809, column: 25, scope: !7146)
!7168 = !DILocation(line: 1809, column: 29, scope: !7146)
!7169 = !DILocation(line: 1809, column: 34, scope: !7146)
!7170 = !DILocation(line: 1809, column: 51, scope: !7146)
!7171 = !DILocation(line: 1809, column: 49, scope: !7146)
!7172 = !DILocation(line: 1809, column: 17, scope: !7146)
!7173 = !DILocation(line: 1810, column: 13, scope: !7146)
!7174 = !DILocation(line: 1811, column: 25, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7138, file: !939, line: 1810, column: 20)
!7176 = !DILocation(line: 1811, column: 29, scope: !7175)
!7177 = !DILocation(line: 1811, column: 41, scope: !7175)
!7178 = !DILocation(line: 1811, column: 39, scope: !7175)
!7179 = !DILocation(line: 1811, column: 17, scope: !7175)
!7180 = !DILocation(line: 1812, column: 41, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7175, file: !939, line: 1812, column: 21)
!7182 = !DILocation(line: 1812, column: 22, scope: !7181)
!7183 = !DILocation(line: 1812, column: 27, scope: !7181)
!7184 = !DILocation(line: 1812, column: 44, scope: !7181)
!7185 = !DILocation(line: 1812, column: 50, scope: !7181)
!7186 = !DILocation(line: 1812, column: 58, scope: !7181)
!7187 = !DILocation(line: 1812, column: 21, scope: !7175)
!7188 = !DILocation(line: 1813, column: 43, scope: !7181)
!7189 = !DILocation(line: 1813, column: 21, scope: !7181)
!7190 = !DILocation(line: 1813, column: 26, scope: !7181)
!7191 = !DILocation(line: 1813, column: 41, scope: !7181)
!7192 = !DILocation(line: 1814, column: 38, scope: !7175)
!7193 = !DILocation(line: 1814, column: 36, scope: !7175)
!7194 = !DILocation(line: 1817, column: 38, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7033, file: !939, line: 1817, column: 17)
!7196 = !DILocation(line: 1817, column: 19, scope: !7195)
!7197 = !DILocation(line: 1817, column: 24, scope: !7195)
!7198 = !DILocation(line: 1817, column: 41, scope: !7195)
!7199 = !DILocation(line: 1817, column: 47, scope: !7195)
!7200 = !DILocation(line: 1817, column: 55, scope: !7195)
!7201 = !DILocation(line: 1818, column: 36, scope: !7195)
!7202 = !DILocation(line: 1818, column: 17, scope: !7195)
!7203 = !DILocation(line: 1818, column: 22, scope: !7195)
!7204 = !DILocation(line: 1818, column: 39, scope: !7195)
!7205 = !DILocation(line: 1818, column: 45, scope: !7195)
!7206 = !DILocation(line: 1818, column: 52, scope: !7195)
!7207 = !DILocation(line: 1818, column: 56, scope: !7208)
!7208 = !DILexicalBlockFile(scope: !7195, file: !939, discriminator: 1)
!7209 = !DILocation(line: 1817, column: 17, scope: !7210)
!7210 = !DILexicalBlockFile(scope: !7033, file: !939, discriminator: 1)
!7211 = !DILocation(line: 1819, column: 36, scope: !7195)
!7212 = !DILocation(line: 1819, column: 17, scope: !7195)
!7213 = !DILocation(line: 1819, column: 22, scope: !7195)
!7214 = !DILocation(line: 1819, column: 39, scope: !7195)
!7215 = !DILocation(line: 1819, column: 45, scope: !7195)
!7216 = !DILocation(line: 1820, column: 21, scope: !7033)
!7217 = !DILocation(line: 1820, column: 44, scope: !7033)
!7218 = !DILocation(line: 1820, column: 25, scope: !7033)
!7219 = !DILocation(line: 1820, column: 30, scope: !7033)
!7220 = !DILocation(line: 1820, column: 47, scope: !7033)
!7221 = !DILocation(line: 1820, column: 13, scope: !7033)
!7222 = !DILocation(line: 1822, column: 23, scope: !7033)
!7223 = !DILocation(line: 1822, column: 46, scope: !7033)
!7224 = !DILocation(line: 1822, column: 27, scope: !7033)
!7225 = !DILocation(line: 1822, column: 32, scope: !7033)
!7226 = !DILocation(line: 1822, column: 49, scope: !7033)
!7227 = !DILocation(line: 1822, column: 13, scope: !7033)
!7228 = !DILocation(line: 1823, column: 17, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7033, file: !939, line: 1823, column: 17)
!7230 = !DILocation(line: 1823, column: 20, scope: !7229)
!7231 = !DILocation(line: 1823, column: 31, scope: !7229)
!7232 = !DILocation(line: 1823, column: 17, scope: !7033)
!7233 = !DILocation(line: 1824, column: 27, scope: !7229)
!7234 = !DILocation(line: 1824, column: 50, scope: !7229)
!7235 = !DILocation(line: 1824, column: 31, scope: !7229)
!7236 = !DILocation(line: 1824, column: 36, scope: !7229)
!7237 = !DILocation(line: 1824, column: 53, scope: !7229)
!7238 = !DILocation(line: 1824, column: 17, scope: !7229)
!7239 = !DILocation(line: 1826, column: 27, scope: !7229)
!7240 = !DILocation(line: 1826, column: 17, scope: !7229)
!7241 = !DILocation(line: 1827, column: 9, scope: !7033)
!7242 = !DILocation(line: 1784, column: 49, scope: !7243)
!7243 = !DILexicalBlockFile(scope: !7027, file: !939, discriminator: 2)
!7244 = !DILocation(line: 1784, column: 9, scope: !7243)
!7245 = distinct !{!7245, !7246}
!7246 = !DILocation(line: 1784, column: 9, scope: !7005)
!7247 = !DILocation(line: 1829, column: 31, scope: !7005)
!7248 = !DILocation(line: 1829, column: 43, scope: !7005)
!7249 = !DILocation(line: 1829, column: 48, scope: !7005)
!7250 = !DILocation(line: 1829, column: 41, scope: !7005)
!7251 = !DILocation(line: 1829, column: 9, scope: !7005)
!7252 = !DILocation(line: 1829, column: 14, scope: !7005)
!7253 = !DILocation(line: 1829, column: 29, scope: !7005)
!7254 = !DILocation(line: 1830, column: 40, scope: !7005)
!7255 = !DILocation(line: 1830, column: 45, scope: !7005)
!7256 = !DILocation(line: 1830, column: 9, scope: !7005)
!7257 = !DILocation(line: 1830, column: 14, scope: !7005)
!7258 = !DILocation(line: 1830, column: 37, scope: !7005)
!7259 = !DILocation(line: 1831, column: 9, scope: !7005)
!7260 = !DILocation(line: 1831, column: 14, scope: !7005)
!7261 = !DILocation(line: 1831, column: 31, scope: !7005)
!7262 = !DILocation(line: 1832, column: 5, scope: !7005)
!7263 = !DILocation(line: 1834, column: 25, scope: !6791)
!7264 = !DILocation(line: 1834, column: 29, scope: !6791)
!7265 = !DILocation(line: 1834, column: 5, scope: !6791)
!7266 = !DILocation(line: 1835, column: 1, scope: !6791)
!7267 = !DILocation(line: 1835, column: 1, scope: !7268)
!7268 = !DILexicalBlockFile(scope: !6791, file: !939, discriminator: 1)
!7269 = distinct !DISubprogram(name: "mxf_write_system_item", scope: !939, file: !939, line: 2609, type: !4227, isLocal: true, isDefinition: true, scopeLine: 2610, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!7270 = !DILocalVariable(name: "s", arg: 1, scope: !7269, file: !939, line: 2609, type: !2417)
!7271 = !DILocation(line: 2609, column: 52, scope: !7269)
!7272 = !DILocalVariable(name: "mxf", scope: !7269, file: !939, line: 2611, type: !2567)
!7273 = !DILocation(line: 2611, column: 17, scope: !7269)
!7274 = !DILocation(line: 2611, column: 23, scope: !7269)
!7275 = !DILocation(line: 2611, column: 26, scope: !7269)
!7276 = !DILocalVariable(name: "pb", scope: !7269, file: !939, line: 2612, type: !1309)
!7277 = !DILocation(line: 2612, column: 18, scope: !7269)
!7278 = !DILocation(line: 2612, column: 23, scope: !7269)
!7279 = !DILocation(line: 2612, column: 26, scope: !7269)
!7280 = !DILocalVariable(name: "frame", scope: !7269, file: !939, line: 2613, type: !1035)
!7281 = !DILocation(line: 2613, column: 14, scope: !7269)
!7282 = !DILocalVariable(name: "time_code", scope: !7269, file: !939, line: 2614, type: !1034)
!7283 = !DILocation(line: 2614, column: 14, scope: !7269)
!7284 = !DILocalVariable(name: "i", scope: !7269, file: !939, line: 2615, type: !1042)
!7285 = !DILocation(line: 2615, column: 9, scope: !7269)
!7286 = !DILocalVariable(name: "system_item_bitmap", scope: !7269, file: !939, line: 2615, type: !1042)
!7287 = !DILocation(line: 2615, column: 12, scope: !7269)
!7288 = !DILocation(line: 2617, column: 13, scope: !7269)
!7289 = !DILocation(line: 2617, column: 18, scope: !7269)
!7290 = !DILocation(line: 2617, column: 43, scope: !7269)
!7291 = !DILocation(line: 2617, column: 48, scope: !7269)
!7292 = !DILocation(line: 2617, column: 41, scope: !7269)
!7293 = !DILocation(line: 2617, column: 11, scope: !7269)
!7294 = !DILocation(line: 2620, column: 16, scope: !7269)
!7295 = !DILocation(line: 2620, column: 5, scope: !7269)
!7296 = !DILocation(line: 2621, column: 28, scope: !7269)
!7297 = !DILocation(line: 2621, column: 5, scope: !7269)
!7298 = !DILocation(line: 2623, column: 12, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7269, file: !939, line: 2623, column: 5)
!7300 = !DILocation(line: 2623, column: 10, scope: !7299)
!7301 = !DILocation(line: 2623, column: 17, scope: !7302)
!7302 = !DILexicalBlockFile(scope: !7303, file: !939, discriminator: 1)
!7303 = distinct !DILexicalBlock(scope: !7299, file: !939, line: 2623, column: 5)
!7304 = !DILocation(line: 2623, column: 21, scope: !7302)
!7305 = !DILocation(line: 2623, column: 24, scope: !7302)
!7306 = !DILocation(line: 2623, column: 19, scope: !7302)
!7307 = !DILocation(line: 2623, column: 5, scope: !7302)
!7308 = !DILocation(line: 2624, column: 24, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !939, line: 2624, column: 13)
!7310 = distinct !DILexicalBlock(scope: !7303, file: !939, line: 2623, column: 41)
!7311 = !DILocation(line: 2624, column: 13, scope: !7309)
!7312 = !DILocation(line: 2624, column: 16, scope: !7309)
!7313 = !DILocation(line: 2624, column: 28, scope: !7309)
!7314 = !DILocation(line: 2624, column: 38, scope: !7309)
!7315 = !DILocation(line: 2624, column: 49, scope: !7309)
!7316 = !DILocation(line: 2624, column: 13, scope: !7310)
!7317 = !DILocation(line: 2625, column: 32, scope: !7309)
!7318 = !DILocation(line: 2625, column: 13, scope: !7309)
!7319 = !DILocation(line: 2626, column: 29, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7309, file: !939, line: 2626, column: 18)
!7321 = !DILocation(line: 2626, column: 18, scope: !7320)
!7322 = !DILocation(line: 2626, column: 21, scope: !7320)
!7323 = !DILocation(line: 2626, column: 33, scope: !7320)
!7324 = !DILocation(line: 2626, column: 43, scope: !7320)
!7325 = !DILocation(line: 2626, column: 54, scope: !7320)
!7326 = !DILocation(line: 2626, column: 18, scope: !7309)
!7327 = !DILocation(line: 2627, column: 32, scope: !7320)
!7328 = !DILocation(line: 2627, column: 13, scope: !7320)
!7329 = !DILocation(line: 2628, column: 5, scope: !7310)
!7330 = !DILocation(line: 2623, column: 37, scope: !7331)
!7331 = !DILexicalBlockFile(scope: !7303, file: !939, discriminator: 2)
!7332 = !DILocation(line: 2623, column: 5, scope: !7331)
!7333 = distinct !{!7333, !7334}
!7334 = !DILocation(line: 2623, column: 5, scope: !7269)
!7335 = !DILocation(line: 2629, column: 13, scope: !7269)
!7336 = !DILocation(line: 2629, column: 17, scope: !7269)
!7337 = !DILocation(line: 2629, column: 5, scope: !7269)
!7338 = !DILocation(line: 2630, column: 13, scope: !7269)
!7339 = !DILocation(line: 2630, column: 17, scope: !7269)
!7340 = !DILocation(line: 2630, column: 22, scope: !7269)
!7341 = !DILocation(line: 2630, column: 5, scope: !7269)
!7342 = !DILocation(line: 2631, column: 13, scope: !7269)
!7343 = !DILocation(line: 2631, column: 5, scope: !7269)
!7344 = !DILocation(line: 2632, column: 15, scope: !7269)
!7345 = !DILocation(line: 2632, column: 5, scope: !7269)
!7346 = !DILocation(line: 2633, column: 15, scope: !7269)
!7347 = !DILocation(line: 2633, column: 20, scope: !7269)
!7348 = !DILocation(line: 2633, column: 25, scope: !7269)
!7349 = !DILocation(line: 2633, column: 28, scope: !7269)
!7350 = !DILocation(line: 2633, column: 36, scope: !7269)
!7351 = !DILocation(line: 2633, column: 34, scope: !7269)
!7352 = !DILocation(line: 2633, column: 43, scope: !7269)
!7353 = !DILocation(line: 2633, column: 5, scope: !7269)
!7354 = !DILocation(line: 2634, column: 9, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7269, file: !939, line: 2634, column: 9)
!7356 = !DILocation(line: 2634, column: 14, scope: !7355)
!7357 = !DILocation(line: 2634, column: 38, scope: !7355)
!7358 = !DILocation(line: 2634, column: 9, scope: !7269)
!7359 = !DILocation(line: 2635, column: 20, scope: !7355)
!7360 = !DILocation(line: 2635, column: 9, scope: !7355)
!7361 = !DILocalVariable(name: "sc", scope: !7362, file: !939, line: 2637, type: !1011)
!7362 = distinct !DILexicalBlock(scope: !7355, file: !939, line: 2636, column: 10)
!7363 = !DILocation(line: 2637, column: 27, scope: !7362)
!7364 = !DILocation(line: 2637, column: 32, scope: !7362)
!7365 = !DILocation(line: 2637, column: 35, scope: !7362)
!7366 = !DILocation(line: 2637, column: 47, scope: !7362)
!7367 = !DILocation(line: 2638, column: 20, scope: !7362)
!7368 = !DILocation(line: 2638, column: 50, scope: !7362)
!7369 = !DILocation(line: 2638, column: 54, scope: !7362)
!7370 = !DILocation(line: 2638, column: 24, scope: !7362)
!7371 = !DILocation(line: 2638, column: 61, scope: !7362)
!7372 = !DILocation(line: 2638, column: 9, scope: !7362)
!7373 = !DILocation(line: 2640, column: 13, scope: !7269)
!7374 = !DILocation(line: 2640, column: 5, scope: !7269)
!7375 = !DILocation(line: 2641, column: 15, scope: !7269)
!7376 = !DILocation(line: 2641, column: 5, scope: !7269)
!7377 = !DILocation(line: 2642, column: 15, scope: !7269)
!7378 = !DILocation(line: 2642, column: 5, scope: !7269)
!7379 = !DILocation(line: 2644, column: 13, scope: !7269)
!7380 = !DILocation(line: 2644, column: 5, scope: !7269)
!7381 = !DILocation(line: 2645, column: 54, scope: !7269)
!7382 = !DILocation(line: 2645, column: 59, scope: !7269)
!7383 = !DILocation(line: 2645, column: 63, scope: !7269)
!7384 = !DILocation(line: 2645, column: 17, scope: !7269)
!7385 = !DILocation(line: 2645, column: 15, scope: !7269)
!7386 = !DILocation(line: 2646, column: 15, scope: !7269)
!7387 = !DILocation(line: 2646, column: 19, scope: !7269)
!7388 = !DILocation(line: 2646, column: 5, scope: !7269)
!7389 = !DILocation(line: 2647, column: 15, scope: !7269)
!7390 = !DILocation(line: 2647, column: 5, scope: !7269)
!7391 = !DILocation(line: 2648, column: 15, scope: !7269)
!7392 = !DILocation(line: 2648, column: 5, scope: !7269)
!7393 = !DILocation(line: 2651, column: 16, scope: !7269)
!7394 = !DILocation(line: 2651, column: 5, scope: !7269)
!7395 = !DILocation(line: 2652, column: 28, scope: !7269)
!7396 = !DILocation(line: 2652, column: 5, scope: !7269)
!7397 = !DILocation(line: 2653, column: 13, scope: !7269)
!7398 = !DILocation(line: 2653, column: 5, scope: !7269)
!7399 = !DILocation(line: 2654, column: 15, scope: !7269)
!7400 = !DILocation(line: 2654, column: 5, scope: !7269)
!7401 = !DILocation(line: 2655, column: 20, scope: !7269)
!7402 = !DILocation(line: 2655, column: 5, scope: !7269)
!7403 = !DILocation(line: 2656, column: 1, scope: !7269)
!7404 = distinct !DISubprogram(name: "mxf_write_d10_audio_packet", scope: !939, file: !939, line: 2658, type: !7405, isLocal: true, isDefinition: true, scopeLine: 2659, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!7405 = !DISubroutineType(types: !7406)
!7406 = !{null, !2417, !1375, !1243}
!7407 = !DILocalVariable(name: "s", arg: 1, scope: !7404, file: !939, line: 2658, type: !2417)
!7408 = !DILocation(line: 2658, column: 57, scope: !7404)
!7409 = !DILocalVariable(name: "st", arg: 2, scope: !7404, file: !939, line: 2658, type: !1375)
!7410 = !DILocation(line: 2658, column: 70, scope: !7404)
!7411 = !DILocalVariable(name: "pkt", arg: 3, scope: !7404, file: !939, line: 2658, type: !1243)
!7412 = !DILocation(line: 2658, column: 84, scope: !7404)
!7413 = !DILocalVariable(name: "mxf", scope: !7404, file: !939, line: 2660, type: !2567)
!7414 = !DILocation(line: 2660, column: 17, scope: !7404)
!7415 = !DILocation(line: 2660, column: 23, scope: !7404)
!7416 = !DILocation(line: 2660, column: 26, scope: !7404)
!7417 = !DILocalVariable(name: "pb", scope: !7404, file: !939, line: 2661, type: !1309)
!7418 = !DILocation(line: 2661, column: 18, scope: !7404)
!7419 = !DILocation(line: 2661, column: 23, scope: !7404)
!7420 = !DILocation(line: 2661, column: 26, scope: !7404)
!7421 = !DILocalVariable(name: "frame_size", scope: !7404, file: !939, line: 2662, type: !1042)
!7422 = !DILocation(line: 2662, column: 9, scope: !7404)
!7423 = !DILocation(line: 2662, column: 22, scope: !7404)
!7424 = !DILocation(line: 2662, column: 27, scope: !7404)
!7425 = !DILocation(line: 2662, column: 34, scope: !7404)
!7426 = !DILocation(line: 2662, column: 38, scope: !7404)
!7427 = !DILocation(line: 2662, column: 48, scope: !7404)
!7428 = !DILocation(line: 2662, column: 32, scope: !7404)
!7429 = !DILocalVariable(name: "samples", scope: !7404, file: !939, line: 2663, type: !1027)
!7430 = !DILocation(line: 2663, column: 14, scope: !7404)
!7431 = !DILocation(line: 2663, column: 24, scope: !7404)
!7432 = !DILocation(line: 2663, column: 29, scope: !7404)
!7433 = !DILocalVariable(name: "end", scope: !7404, file: !939, line: 2664, type: !1027)
!7434 = !DILocation(line: 2664, column: 14, scope: !7404)
!7435 = !DILocation(line: 2664, column: 20, scope: !7404)
!7436 = !DILocation(line: 2664, column: 25, scope: !7404)
!7437 = !DILocation(line: 2664, column: 32, scope: !7404)
!7438 = !DILocation(line: 2664, column: 37, scope: !7404)
!7439 = !DILocation(line: 2664, column: 30, scope: !7404)
!7440 = !DILocalVariable(name: "i", scope: !7404, file: !939, line: 2665, type: !1042)
!7441 = !DILocation(line: 2665, column: 9, scope: !7404)
!7442 = !DILocation(line: 2667, column: 28, scope: !7404)
!7443 = !DILocation(line: 2667, column: 36, scope: !7404)
!7444 = !DILocation(line: 2667, column: 46, scope: !7404)
!7445 = !DILocation(line: 2667, column: 48, scope: !7404)
!7446 = !DILocation(line: 2667, column: 34, scope: !7404)
!7447 = !DILocation(line: 2667, column: 5, scope: !7404)
!7448 = !DILocation(line: 2669, column: 13, scope: !7404)
!7449 = !DILocation(line: 2669, column: 18, scope: !7404)
!7450 = !DILocation(line: 2669, column: 29, scope: !7404)
!7451 = !DILocation(line: 2669, column: 18, scope: !7452)
!7452 = !DILexicalBlockFile(scope: !7404, file: !939, discriminator: 1)
!7453 = !DILocation(line: 2669, column: 44, scope: !7454)
!7454 = !DILexicalBlockFile(scope: !7404, file: !939, discriminator: 2)
!7455 = !DILocation(line: 2669, column: 49, scope: !7454)
!7456 = !DILocation(line: 2669, column: 65, scope: !7454)
!7457 = !DILocation(line: 2669, column: 69, scope: !7454)
!7458 = !DILocation(line: 2669, column: 73, scope: !7454)
!7459 = !DILocation(line: 2669, column: 18, scope: !7454)
!7460 = !DILocation(line: 2669, column: 18, scope: !7461)
!7461 = !DILexicalBlockFile(scope: !7404, file: !939, discriminator: 3)
!7462 = !DILocation(line: 2669, column: 5, scope: !7461)
!7463 = !DILocation(line: 2670, column: 15, scope: !7404)
!7464 = !DILocation(line: 2670, column: 19, scope: !7404)
!7465 = !DILocation(line: 2670, column: 5, scope: !7404)
!7466 = !DILocation(line: 2671, column: 13, scope: !7404)
!7467 = !DILocation(line: 2671, column: 21, scope: !7404)
!7468 = !DILocation(line: 2671, column: 25, scope: !7404)
!7469 = !DILocation(line: 2671, column: 35, scope: !7404)
!7470 = !DILocation(line: 2671, column: 19, scope: !7404)
!7471 = !DILocation(line: 2671, column: 44, scope: !7404)
!7472 = !DILocation(line: 2671, column: 5, scope: !7404)
!7473 = !DILocation(line: 2673, column: 5, scope: !7404)
!7474 = !DILocation(line: 2673, column: 12, scope: !7452)
!7475 = !DILocation(line: 2673, column: 22, scope: !7452)
!7476 = !DILocation(line: 2673, column: 20, scope: !7452)
!7477 = !DILocation(line: 2673, column: 5, scope: !7452)
!7478 = !DILocation(line: 2674, column: 16, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7480, file: !939, line: 2674, column: 9)
!7480 = distinct !DILexicalBlock(scope: !7404, file: !939, line: 2673, column: 27)
!7481 = !DILocation(line: 2674, column: 14, scope: !7479)
!7482 = !DILocation(line: 2674, column: 21, scope: !7483)
!7483 = !DILexicalBlockFile(scope: !7484, file: !939, discriminator: 1)
!7484 = distinct !DILexicalBlock(scope: !7479, file: !939, line: 2674, column: 9)
!7485 = !DILocation(line: 2674, column: 25, scope: !7483)
!7486 = !DILocation(line: 2674, column: 29, scope: !7483)
!7487 = !DILocation(line: 2674, column: 39, scope: !7483)
!7488 = !DILocation(line: 2674, column: 23, scope: !7483)
!7489 = !DILocation(line: 2674, column: 9, scope: !7483)
!7490 = !DILocalVariable(name: "sample", scope: !7491, file: !939, line: 2675, type: !1034)
!7491 = distinct !DILexicalBlock(scope: !7484, file: !939, line: 2674, column: 54)
!7492 = !DILocation(line: 2675, column: 22, scope: !7491)
!7493 = !DILocation(line: 2676, column: 17, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7491, file: !939, line: 2676, column: 17)
!7495 = !DILocation(line: 2676, column: 21, scope: !7494)
!7496 = !DILocation(line: 2676, column: 31, scope: !7494)
!7497 = !DILocation(line: 2676, column: 40, scope: !7494)
!7498 = !DILocation(line: 2676, column: 17, scope: !7491)
!7499 = !DILocation(line: 2677, column: 46, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7494, file: !939, line: 2676, column: 66)
!7501 = !DILocation(line: 2677, column: 28, scope: !7500)
!7502 = !DILocation(line: 2677, column: 59, scope: !7500)
!7503 = !DILocation(line: 2677, column: 87, scope: !7500)
!7504 = !DILocation(line: 2677, column: 69, scope: !7500)
!7505 = !DILocation(line: 2677, column: 100, scope: !7500)
!7506 = !DILocation(line: 2677, column: 66, scope: !7500)
!7507 = !DILocation(line: 2677, column: 126, scope: !7500)
!7508 = !DILocation(line: 2677, column: 108, scope: !7500)
!7509 = !DILocation(line: 2677, column: 106, scope: !7500)
!7510 = !DILocation(line: 2677, column: 139, scope: !7500)
!7511 = !DILocation(line: 2677, column: 24, scope: !7500)
!7512 = !DILocation(line: 2678, column: 25, scope: !7500)
!7513 = !DILocation(line: 2679, column: 13, scope: !7500)
!7514 = !DILocation(line: 2680, column: 58, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7494, file: !939, line: 2679, column: 20)
!7516 = !DILocation(line: 2680, column: 69, scope: !7515)
!7517 = !DILocation(line: 2680, column: 26, scope: !7515)
!7518 = !DILocation(line: 2680, column: 71, scope: !7515)
!7519 = !DILocation(line: 2680, column: 24, scope: !7515)
!7520 = !DILocation(line: 2681, column: 25, scope: !7515)
!7521 = !DILocation(line: 2683, column: 23, scope: !7491)
!7522 = !DILocation(line: 2683, column: 27, scope: !7491)
!7523 = !DILocation(line: 2683, column: 36, scope: !7491)
!7524 = !DILocation(line: 2683, column: 34, scope: !7491)
!7525 = !DILocation(line: 2683, column: 13, scope: !7491)
!7526 = !DILocation(line: 2684, column: 9, scope: !7491)
!7527 = !DILocation(line: 2674, column: 50, scope: !7528)
!7528 = !DILexicalBlockFile(scope: !7484, file: !939, discriminator: 2)
!7529 = !DILocation(line: 2674, column: 9, scope: !7528)
!7530 = distinct !{!7530, !7531}
!7531 = !DILocation(line: 2674, column: 9, scope: !7480)
!7532 = !DILocation(line: 2685, column: 9, scope: !7480)
!7533 = !DILocation(line: 2685, column: 16, scope: !7534)
!7534 = !DILexicalBlockFile(scope: !7535, file: !939, discriminator: 1)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !939, line: 2685, column: 9)
!7536 = distinct !DILexicalBlock(scope: !7480, file: !939, line: 2685, column: 9)
!7537 = !DILocation(line: 2685, column: 18, scope: !7534)
!7538 = !DILocation(line: 2685, column: 9, scope: !7534)
!7539 = !DILocation(line: 2686, column: 23, scope: !7535)
!7540 = !DILocation(line: 2686, column: 27, scope: !7535)
!7541 = !DILocation(line: 2686, column: 13, scope: !7535)
!7542 = !DILocation(line: 2685, column: 24, scope: !7543)
!7543 = !DILexicalBlockFile(scope: !7535, file: !939, discriminator: 2)
!7544 = !DILocation(line: 2685, column: 9, scope: !7543)
!7545 = distinct !{!7545, !7532}
!7546 = !DILocation(line: 2673, column: 5, scope: !7454)
!7547 = distinct !{!7547, !7473}
!7548 = !DILocation(line: 2688, column: 1, scope: !7404)
!7549 = distinct !DISubprogram(name: "klv_fill_size", scope: !939, file: !939, line: 1682, type: !7550, isLocal: true, isDefinition: true, scopeLine: 1683, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!7550 = !DISubroutineType(types: !7551)
!7551 = !{!1035, !1039}
!7552 = !DILocalVariable(name: "size", arg: 1, scope: !7549, file: !939, line: 1682, type: !1039)
!7553 = !DILocation(line: 1682, column: 40, scope: !7549)
!7554 = !DILocalVariable(name: "pad", scope: !7549, file: !939, line: 1684, type: !1035)
!7555 = !DILocation(line: 1684, column: 14, scope: !7549)
!7556 = !DILocation(line: 1684, column: 27, scope: !7549)
!7557 = !DILocation(line: 1684, column: 32, scope: !7549)
!7558 = !DILocation(line: 1684, column: 24, scope: !7549)
!7559 = !DILocation(line: 1684, column: 20, scope: !7549)
!7560 = !DILocation(line: 1685, column: 9, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7549, file: !939, line: 1685, column: 9)
!7562 = !DILocation(line: 1685, column: 13, scope: !7561)
!7563 = !DILocation(line: 1685, column: 9, scope: !7549)
!7564 = !DILocation(line: 1686, column: 16, scope: !7561)
!7565 = !DILocation(line: 1686, column: 20, scope: !7561)
!7566 = !DILocation(line: 1686, column: 9, scope: !7561)
!7567 = !DILocation(line: 1688, column: 16, scope: !7561)
!7568 = !DILocation(line: 1688, column: 20, scope: !7561)
!7569 = !DILocation(line: 1688, column: 9, scope: !7561)
!7570 = !DILocation(line: 1689, column: 1, scope: !7549)
!7571 = distinct !DISubprogram(name: "mxf_get_mpeg2_codec_ul", scope: !939, file: !939, line: 2251, type: !7572, isLocal: true, isDefinition: true, scopeLine: 2252, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!7572 = !DISubroutineType(types: !7573)
!7573 = !{!1061, !1688}
!7574 = !DILocalVariable(name: "par", arg: 1, scope: !7571, file: !939, line: 2251, type: !1688)
!7575 = !DILocation(line: 2251, column: 61, scope: !7571)
!7576 = !DILocalVariable(name: "long_gop", scope: !7571, file: !939, line: 2253, type: !1042)
!7577 = !DILocation(line: 2253, column: 9, scope: !7571)
!7578 = !DILocation(line: 2255, column: 9, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7571, file: !939, line: 2255, column: 9)
!7580 = !DILocation(line: 2255, column: 14, scope: !7579)
!7581 = !DILocation(line: 2255, column: 22, scope: !7579)
!7582 = !DILocation(line: 2255, column: 9, scope: !7571)
!7583 = !DILocation(line: 2256, column: 13, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7585, file: !939, line: 2256, column: 13)
!7585 = distinct !DILexicalBlock(scope: !7579, file: !939, line: 2255, column: 28)
!7586 = !DILocation(line: 2256, column: 18, scope: !7584)
!7587 = !DILocation(line: 2256, column: 24, scope: !7584)
!7588 = !DILocation(line: 2256, column: 13, scope: !7585)
!7589 = !DILocation(line: 2257, column: 43, scope: !7584)
!7590 = !DILocation(line: 2257, column: 42, scope: !7584)
!7591 = !DILocation(line: 2257, column: 21, scope: !7584)
!7592 = !DILocation(line: 2257, column: 13, scope: !7584)
!7593 = !DILocation(line: 2258, column: 18, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7584, file: !939, line: 2258, column: 18)
!7595 = !DILocation(line: 2258, column: 23, scope: !7594)
!7596 = !DILocation(line: 2258, column: 29, scope: !7594)
!7597 = !DILocation(line: 2258, column: 18, scope: !7584)
!7598 = !DILocation(line: 2259, column: 43, scope: !7594)
!7599 = !DILocation(line: 2259, column: 42, scope: !7594)
!7600 = !DILocation(line: 2259, column: 21, scope: !7594)
!7601 = !DILocation(line: 2259, column: 13, scope: !7594)
!7602 = !DILocation(line: 2260, column: 18, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7594, file: !939, line: 2260, column: 18)
!7604 = !DILocation(line: 2260, column: 23, scope: !7603)
!7605 = !DILocation(line: 2260, column: 29, scope: !7603)
!7606 = !DILocation(line: 2260, column: 18, scope: !7594)
!7607 = !DILocation(line: 2261, column: 43, scope: !7603)
!7608 = !DILocation(line: 2261, column: 42, scope: !7603)
!7609 = !DILocation(line: 2261, column: 21, scope: !7603)
!7610 = !DILocation(line: 2261, column: 13, scope: !7603)
!7611 = !DILocation(line: 2262, column: 5, scope: !7585)
!7612 = !DILocation(line: 2262, column: 16, scope: !7613)
!7613 = !DILexicalBlockFile(scope: !7614, file: !939, discriminator: 1)
!7614 = distinct !DILexicalBlock(scope: !7579, file: !939, line: 2262, column: 16)
!7615 = !DILocation(line: 2262, column: 21, scope: !7613)
!7616 = !DILocation(line: 2262, column: 29, scope: !7613)
!7617 = !DILocation(line: 2263, column: 13, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7619, file: !939, line: 2263, column: 13)
!7619 = distinct !DILexicalBlock(scope: !7614, file: !939, line: 2262, column: 35)
!7620 = !DILocation(line: 2263, column: 18, scope: !7618)
!7621 = !DILocation(line: 2263, column: 24, scope: !7618)
!7622 = !DILocation(line: 2263, column: 13, scope: !7619)
!7623 = !DILocation(line: 2264, column: 43, scope: !7618)
!7624 = !DILocation(line: 2264, column: 42, scope: !7618)
!7625 = !DILocation(line: 2264, column: 21, scope: !7618)
!7626 = !DILocation(line: 2264, column: 13, scope: !7618)
!7627 = !DILocation(line: 2265, column: 18, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7618, file: !939, line: 2265, column: 18)
!7629 = !DILocation(line: 2265, column: 23, scope: !7628)
!7630 = !DILocation(line: 2265, column: 29, scope: !7628)
!7631 = !DILocation(line: 2265, column: 18, scope: !7618)
!7632 = !DILocation(line: 2266, column: 43, scope: !7628)
!7633 = !DILocation(line: 2266, column: 42, scope: !7628)
!7634 = !DILocation(line: 2266, column: 21, scope: !7628)
!7635 = !DILocation(line: 2266, column: 13, scope: !7628)
!7636 = !DILocation(line: 2267, column: 5, scope: !7619)
!7637 = !DILocation(line: 2268, column: 5, scope: !7571)
!7638 = !DILocation(line: 2269, column: 1, scope: !7571)
!7639 = distinct !DISubprogram(name: "mxf_write_opatom_body_partition", scope: !939, file: !939, line: 2690, type: !2523, isLocal: true, isDefinition: true, scopeLine: 2691, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!7640 = !DILocalVariable(name: "s", arg: 1, scope: !7639, file: !939, line: 2690, type: !2417)
!7641 = !DILocation(line: 2690, column: 61, scope: !7639)
!7642 = !DILocalVariable(name: "mxf", scope: !7639, file: !939, line: 2692, type: !2567)
!7643 = !DILocation(line: 2692, column: 17, scope: !7639)
!7644 = !DILocation(line: 2692, column: 23, scope: !7639)
!7645 = !DILocation(line: 2692, column: 26, scope: !7639)
!7646 = !DILocalVariable(name: "pb", scope: !7639, file: !939, line: 2693, type: !1309)
!7647 = !DILocation(line: 2693, column: 18, scope: !7639)
!7648 = !DILocation(line: 2693, column: 23, scope: !7639)
!7649 = !DILocation(line: 2693, column: 26, scope: !7639)
!7650 = !DILocalVariable(name: "st", scope: !7639, file: !939, line: 2694, type: !1375)
!7651 = !DILocation(line: 2694, column: 15, scope: !7639)
!7652 = !DILocation(line: 2694, column: 20, scope: !7639)
!7653 = !DILocation(line: 2694, column: 23, scope: !7639)
!7654 = !DILocalVariable(name: "sc", scope: !7639, file: !939, line: 2695, type: !1011)
!7655 = !DILocation(line: 2695, column: 23, scope: !7639)
!7656 = !DILocation(line: 2695, column: 28, scope: !7639)
!7657 = !DILocation(line: 2695, column: 32, scope: !7639)
!7658 = !DILocalVariable(name: "key", scope: !7639, file: !939, line: 2696, type: !1092)
!7659 = !DILocation(line: 2696, column: 20, scope: !7639)
!7660 = !DILocalVariable(name: "err", scope: !7639, file: !939, line: 2698, type: !1042)
!7661 = !DILocation(line: 2698, column: 9, scope: !7639)
!7662 = !DILocation(line: 2700, column: 10, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7639, file: !939, line: 2700, column: 9)
!7664 = !DILocation(line: 2700, column: 15, scope: !7663)
!7665 = !DILocation(line: 2700, column: 9, scope: !7639)
!7666 = !DILocation(line: 2701, column: 13, scope: !7663)
!7667 = !DILocation(line: 2701, column: 9, scope: !7663)
!7668 = !DILocation(line: 2703, column: 36, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7639, file: !939, line: 2703, column: 9)
!7670 = !DILocation(line: 2703, column: 45, scope: !7669)
!7671 = !DILocation(line: 2703, column: 16, scope: !7669)
!7672 = !DILocation(line: 2703, column: 14, scope: !7669)
!7673 = !DILocation(line: 2703, column: 54, scope: !7669)
!7674 = !DILocation(line: 2703, column: 9, scope: !7639)
!7675 = !DILocation(line: 2704, column: 16, scope: !7669)
!7676 = !DILocation(line: 2704, column: 9, scope: !7669)
!7677 = !DILocation(line: 2705, column: 24, scope: !7639)
!7678 = !DILocation(line: 2705, column: 5, scope: !7639)
!7679 = !DILocation(line: 2706, column: 16, scope: !7639)
!7680 = !DILocation(line: 2706, column: 20, scope: !7639)
!7681 = !DILocation(line: 2706, column: 24, scope: !7639)
!7682 = !DILocation(line: 2706, column: 5, scope: !7639)
!7683 = !DILocation(line: 2707, column: 28, scope: !7639)
!7684 = !DILocation(line: 2707, column: 32, scope: !7639)
!7685 = !DILocation(line: 2707, column: 37, scope: !7639)
!7686 = !DILocation(line: 2707, column: 5, scope: !7639)
!7687 = !DILocation(line: 2708, column: 5, scope: !7639)
!7688 = !DILocation(line: 2709, column: 1, scope: !7639)
!7689 = distinct !DISubprogram(name: "klv_encode_ber9_length", scope: !939, file: !939, line: 569, type: !7690, isLocal: true, isDefinition: true, scopeLine: 570, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!7690 = !DISubroutineType(types: !7691)
!7691 = !{null, !1309, !1039}
!7692 = !DILocalVariable(name: "pb", arg: 1, scope: !7689, file: !939, line: 569, type: !1309)
!7693 = !DILocation(line: 569, column: 49, scope: !7689)
!7694 = !DILocalVariable(name: "len", arg: 2, scope: !7689, file: !939, line: 569, type: !1039)
!7695 = !DILocation(line: 569, column: 62, scope: !7689)
!7696 = !DILocation(line: 571, column: 13, scope: !7689)
!7697 = !DILocation(line: 571, column: 5, scope: !7689)
!7698 = !DILocation(line: 572, column: 15, scope: !7689)
!7699 = !DILocation(line: 572, column: 19, scope: !7689)
!7700 = !DILocation(line: 572, column: 5, scope: !7689)
!7701 = !DILocation(line: 573, column: 1, scope: !7689)
!7702 = distinct !DISubprogram(name: "klv_ber_length", scope: !939, file: !939, line: 534, type: !7703, isLocal: true, isDefinition: true, scopeLine: 535, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!7703 = !DISubroutineType(types: !7704)
!7704 = !{!1042, !1039}
!7705 = !DILocalVariable(name: "len", arg: 1, scope: !7702, file: !939, line: 534, type: !1039)
!7706 = !DILocation(line: 534, column: 36, scope: !7702)
!7707 = !DILocation(line: 536, column: 9, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7702, file: !939, line: 536, column: 9)
!7709 = !DILocation(line: 536, column: 13, scope: !7708)
!7710 = !DILocation(line: 536, column: 9, scope: !7702)
!7711 = !DILocation(line: 537, column: 9, scope: !7708)
!7712 = !DILocation(line: 539, column: 38, scope: !7708)
!7713 = !DILocation(line: 539, column: 42, scope: !7708)
!7714 = !DILocation(line: 539, column: 37, scope: !7708)
!7715 = !DILocation(line: 539, column: 23, scope: !7708)
!7716 = !DILocation(line: 539, column: 21, scope: !7708)
!7717 = !DILocation(line: 539, column: 47, scope: !7708)
!7718 = !DILocation(line: 539, column: 53, scope: !7708)
!7719 = !DILocation(line: 539, column: 9, scope: !7708)
!7720 = !DILocation(line: 540, column: 1, scope: !7702)
!7721 = distinct !DISubprogram(name: "mxf_write_essence_container_refs", scope: !939, file: !939, line: 650, type: !4227, isLocal: true, isDefinition: true, scopeLine: 651, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!7722 = !DILocalVariable(name: "s", arg: 1, scope: !7721, file: !939, line: 650, type: !2417)
!7723 = !DILocation(line: 650, column: 63, scope: !7721)
!7724 = !DILocalVariable(name: "c", scope: !7721, file: !939, line: 652, type: !2567)
!7725 = !DILocation(line: 652, column: 17, scope: !7721)
!7726 = !DILocation(line: 652, column: 21, scope: !7721)
!7727 = !DILocation(line: 652, column: 24, scope: !7721)
!7728 = !DILocalVariable(name: "pb", scope: !7721, file: !939, line: 653, type: !1309)
!7729 = !DILocation(line: 653, column: 18, scope: !7721)
!7730 = !DILocation(line: 653, column: 23, scope: !7721)
!7731 = !DILocation(line: 653, column: 26, scope: !7721)
!7732 = !DILocalVariable(name: "i", scope: !7721, file: !939, line: 654, type: !1042)
!7733 = !DILocation(line: 654, column: 9, scope: !7721)
!7734 = !DILocation(line: 656, column: 26, scope: !7721)
!7735 = !DILocation(line: 656, column: 31, scope: !7721)
!7736 = !DILocation(line: 656, column: 34, scope: !7721)
!7737 = !DILocation(line: 656, column: 58, scope: !7721)
!7738 = !DILocation(line: 656, column: 64, scope: !7739)
!7739 = !DILexicalBlockFile(scope: !7721, file: !939, discriminator: 1)
!7740 = !DILocation(line: 656, column: 67, scope: !7739)
!7741 = !DILocation(line: 656, column: 91, scope: !7739)
!7742 = !DILocation(line: 656, column: 31, scope: !7739)
!7743 = !DILocation(line: 656, column: 97, scope: !7744)
!7744 = !DILexicalBlockFile(scope: !7721, file: !939, discriminator: 2)
!7745 = !DILocation(line: 656, column: 100, scope: !7744)
!7746 = !DILocation(line: 656, column: 31, scope: !7744)
!7747 = !DILocation(line: 656, column: 31, scope: !7748)
!7748 = !DILexicalBlockFile(scope: !7721, file: !939, discriminator: 3)
!7749 = !DILocation(line: 656, column: 5, scope: !7748)
!7750 = !DILocation(line: 657, column: 12, scope: !7721)
!7751 = !DILocation(line: 657, column: 50, scope: !7721)
!7752 = !DILocation(line: 657, column: 53, scope: !7721)
!7753 = !DILocation(line: 657, column: 5, scope: !7721)
!7754 = !DILocation(line: 658, column: 12, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7721, file: !939, line: 658, column: 5)
!7756 = !DILocation(line: 658, column: 10, scope: !7755)
!7757 = !DILocation(line: 658, column: 17, scope: !7758)
!7758 = !DILexicalBlockFile(scope: !7759, file: !939, discriminator: 1)
!7759 = distinct !DILexicalBlock(scope: !7755, file: !939, line: 658, column: 5)
!7760 = !DILocation(line: 658, column: 21, scope: !7758)
!7761 = !DILocation(line: 658, column: 24, scope: !7758)
!7762 = !DILocation(line: 658, column: 19, scope: !7758)
!7763 = !DILocation(line: 658, column: 5, scope: !7758)
!7764 = !DILocalVariable(name: "sc", scope: !7765, file: !939, line: 659, type: !1011)
!7765 = distinct !DILexicalBlock(scope: !7759, file: !939, line: 658, column: 41)
!7766 = !DILocation(line: 659, column: 27, scope: !7765)
!7767 = !DILocation(line: 659, column: 43, scope: !7765)
!7768 = !DILocation(line: 659, column: 32, scope: !7765)
!7769 = !DILocation(line: 659, column: 35, scope: !7765)
!7770 = !DILocation(line: 659, column: 47, scope: !7765)
!7771 = !DILocation(line: 661, column: 13, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7765, file: !939, line: 661, column: 13)
!7773 = !DILocation(line: 661, column: 17, scope: !7772)
!7774 = !DILocation(line: 661, column: 47, scope: !7772)
!7775 = !DILocation(line: 661, column: 13, scope: !7765)
!7776 = !DILocation(line: 662, column: 13, scope: !7772)
!7777 = !DILocation(line: 663, column: 20, scope: !7765)
!7778 = !DILocation(line: 663, column: 50, scope: !7765)
!7779 = !DILocation(line: 663, column: 54, scope: !7765)
!7780 = !DILocation(line: 663, column: 24, scope: !7765)
!7781 = !DILocation(line: 663, column: 61, scope: !7765)
!7782 = !DILocation(line: 663, column: 9, scope: !7765)
!7783 = !DILocation(line: 664, column: 13, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7765, file: !939, line: 664, column: 13)
!7785 = !DILocation(line: 664, column: 16, scope: !7784)
!7786 = !DILocation(line: 664, column: 40, scope: !7784)
!7787 = !DILocation(line: 664, column: 13, scope: !7765)
!7788 = !DILocation(line: 665, column: 13, scope: !7784)
!7789 = !DILocation(line: 666, column: 5, scope: !7765)
!7790 = !DILocation(line: 658, column: 37, scope: !7791)
!7791 = !DILexicalBlockFile(scope: !7759, file: !939, discriminator: 2)
!7792 = !DILocation(line: 658, column: 5, scope: !7791)
!7793 = distinct !{!7793, !7794}
!7794 = !DILocation(line: 658, column: 5, scope: !7721)
!7795 = !DILocation(line: 668, column: 9, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7721, file: !939, line: 668, column: 9)
!7797 = !DILocation(line: 668, column: 12, scope: !7796)
!7798 = !DILocation(line: 668, column: 36, scope: !7796)
!7799 = !DILocation(line: 668, column: 9, scope: !7721)
!7800 = !DILocation(line: 669, column: 20, scope: !7796)
!7801 = !DILocation(line: 669, column: 9, scope: !7796)
!7802 = !DILocation(line: 670, column: 1, scope: !7721)
!7803 = distinct !DISubprogram(name: "mxf_write_primer_pack", scope: !939, file: !939, line: 587, type: !4227, isLocal: true, isDefinition: true, scopeLine: 588, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!7804 = !DILocalVariable(name: "s", arg: 1, scope: !7803, file: !939, line: 587, type: !2417)
!7805 = !DILocation(line: 587, column: 52, scope: !7803)
!7806 = !DILocalVariable(name: "mxf", scope: !7803, file: !939, line: 589, type: !2567)
!7807 = !DILocation(line: 589, column: 17, scope: !7803)
!7808 = !DILocation(line: 589, column: 23, scope: !7803)
!7809 = !DILocation(line: 589, column: 26, scope: !7803)
!7810 = !DILocalVariable(name: "pb", scope: !7803, file: !939, line: 590, type: !1309)
!7811 = !DILocation(line: 590, column: 18, scope: !7803)
!7812 = !DILocation(line: 590, column: 23, scope: !7803)
!7813 = !DILocation(line: 590, column: 26, scope: !7803)
!7814 = !DILocalVariable(name: "local_tag_number", scope: !7803, file: !939, line: 591, type: !1042)
!7815 = !DILocation(line: 591, column: 9, scope: !7803)
!7816 = !DILocalVariable(name: "i", scope: !7803, file: !939, line: 591, type: !1042)
!7817 = !DILocation(line: 591, column: 27, scope: !7803)
!7818 = !DILocation(line: 593, column: 22, scope: !7803)
!7819 = !DILocation(line: 594, column: 25, scope: !7803)
!7820 = !DILocation(line: 594, column: 30, scope: !7803)
!7821 = !DILocation(line: 594, column: 50, scope: !7803)
!7822 = !DILocation(line: 594, column: 22, scope: !7803)
!7823 = !DILocation(line: 596, column: 16, scope: !7803)
!7824 = !DILocation(line: 596, column: 5, scope: !7803)
!7825 = !DILocation(line: 597, column: 27, scope: !7803)
!7826 = !DILocation(line: 597, column: 31, scope: !7803)
!7827 = !DILocation(line: 597, column: 48, scope: !7803)
!7828 = !DILocation(line: 597, column: 53, scope: !7803)
!7829 = !DILocation(line: 597, column: 5, scope: !7803)
!7830 = !DILocation(line: 599, column: 15, scope: !7803)
!7831 = !DILocation(line: 599, column: 19, scope: !7803)
!7832 = !DILocation(line: 599, column: 5, scope: !7803)
!7833 = !DILocation(line: 600, column: 15, scope: !7803)
!7834 = !DILocation(line: 600, column: 5, scope: !7803)
!7835 = !DILocation(line: 602, column: 12, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7803, file: !939, line: 602, column: 5)
!7837 = !DILocation(line: 602, column: 10, scope: !7836)
!7838 = !DILocation(line: 602, column: 17, scope: !7839)
!7839 = !DILexicalBlockFile(scope: !7840, file: !939, discriminator: 1)
!7840 = distinct !DILexicalBlock(scope: !7836, file: !939, line: 602, column: 5)
!7841 = !DILocation(line: 602, column: 19, scope: !7839)
!7842 = !DILocation(line: 602, column: 5, scope: !7839)
!7843 = !DILocation(line: 603, column: 19, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7840, file: !939, line: 602, column: 92)
!7845 = !DILocation(line: 603, column: 43, scope: !7844)
!7846 = !DILocation(line: 603, column: 23, scope: !7844)
!7847 = !DILocation(line: 603, column: 46, scope: !7844)
!7848 = !DILocation(line: 603, column: 9, scope: !7844)
!7849 = !DILocation(line: 604, column: 20, scope: !7844)
!7850 = !DILocation(line: 604, column: 44, scope: !7844)
!7851 = !DILocation(line: 604, column: 24, scope: !7844)
!7852 = !DILocation(line: 604, column: 47, scope: !7844)
!7853 = !DILocation(line: 604, column: 9, scope: !7844)
!7854 = !DILocation(line: 605, column: 5, scope: !7844)
!7855 = !DILocation(line: 602, column: 88, scope: !7856)
!7856 = !DILexicalBlockFile(scope: !7840, file: !939, discriminator: 2)
!7857 = !DILocation(line: 602, column: 5, scope: !7856)
!7858 = distinct !{!7858, !7859}
!7859 = !DILocation(line: 602, column: 5, scope: !7803)
!7860 = !DILocation(line: 606, column: 9, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7803, file: !939, line: 606, column: 9)
!7862 = !DILocation(line: 606, column: 14, scope: !7861)
!7863 = !DILocation(line: 606, column: 9, scope: !7803)
!7864 = !DILocation(line: 607, column: 16, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7861, file: !939, line: 607, column: 9)
!7866 = !DILocation(line: 607, column: 14, scope: !7865)
!7867 = !DILocation(line: 607, column: 21, scope: !7868)
!7868 = !DILexicalBlockFile(scope: !7869, file: !939, discriminator: 1)
!7869 = distinct !DILexicalBlock(scope: !7865, file: !939, line: 607, column: 9)
!7870 = !DILocation(line: 607, column: 23, scope: !7868)
!7871 = !DILocation(line: 607, column: 9, scope: !7868)
!7872 = !DILocation(line: 608, column: 23, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7869, file: !939, line: 607, column: 112)
!7874 = !DILocation(line: 608, column: 55, scope: !7873)
!7875 = !DILocation(line: 608, column: 27, scope: !7873)
!7876 = !DILocation(line: 608, column: 58, scope: !7873)
!7877 = !DILocation(line: 608, column: 13, scope: !7873)
!7878 = !DILocation(line: 609, column: 24, scope: !7873)
!7879 = !DILocation(line: 609, column: 56, scope: !7873)
!7880 = !DILocation(line: 609, column: 28, scope: !7873)
!7881 = !DILocation(line: 609, column: 59, scope: !7873)
!7882 = !DILocation(line: 609, column: 13, scope: !7873)
!7883 = !DILocation(line: 610, column: 9, scope: !7873)
!7884 = !DILocation(line: 607, column: 108, scope: !7885)
!7885 = !DILexicalBlockFile(scope: !7869, file: !939, discriminator: 2)
!7886 = !DILocation(line: 607, column: 9, scope: !7885)
!7887 = distinct !{!7887, !7888}
!7888 = !DILocation(line: 607, column: 9, scope: !7861)
!7889 = !DILocation(line: 610, column: 9, scope: !7890)
!7890 = !DILexicalBlockFile(scope: !7865, file: !939, discriminator: 1)
!7891 = !DILocation(line: 611, column: 1, scope: !7803)
!7892 = distinct !DISubprogram(name: "mxf_write_header_metadata_sets", scope: !939, file: !939, line: 1633, type: !2523, isLocal: true, isDefinition: true, scopeLine: 1634, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!7893 = !DILocalVariable(name: "s", arg: 1, scope: !7892, file: !939, line: 1633, type: !2417)
!7894 = !DILocation(line: 1633, column: 60, scope: !7892)
!7895 = !DILocalVariable(name: "mxf", scope: !7892, file: !939, line: 1635, type: !2567)
!7896 = !DILocation(line: 1635, column: 17, scope: !7892)
!7897 = !DILocation(line: 1635, column: 23, scope: !7892)
!7898 = !DILocation(line: 1635, column: 26, scope: !7892)
!7899 = !DILocalVariable(name: "entry", scope: !7892, file: !939, line: 1636, type: !3245)
!7900 = !DILocation(line: 1636, column: 24, scope: !7892)
!7901 = !DILocalVariable(name: "st", scope: !7892, file: !939, line: 1637, type: !1375)
!7902 = !DILocation(line: 1637, column: 15, scope: !7892)
!7903 = !DILocalVariable(name: "i", scope: !7892, file: !939, line: 1638, type: !1042)
!7904 = !DILocation(line: 1638, column: 9, scope: !7892)
!7905 = !DILocalVariable(name: "packages", scope: !7892, file: !939, line: 1639, type: !7906)
!7906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7907, size: 576, align: 64, elements: !2494)
!7907 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFPackage", file: !939, line: 116, baseType: !7908)
!7908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFPackage", file: !939, line: 111, size: 192, align: 64, elements: !7909)
!7909 = !{!7910, !7911, !7912, !7913}
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7908, file: !939, line: 112, baseType: !1491, size: 64, align: 64)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7908, file: !939, line: 113, baseType: !972, size: 32, align: 32, offset: 64)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "instance", scope: !7908, file: !939, line: 114, baseType: !1042, size: 32, align: 32, offset: 96)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7908, file: !939, line: 115, baseType: !7914, size: 64, align: 64, offset: 128)
!7914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7908, size: 64, align: 64)
!7915 = !DILocation(line: 1639, column: 16, scope: !7892)
!7916 = !DILocalVariable(name: "package_count", scope: !7892, file: !939, line: 1640, type: !1042)
!7917 = !DILocation(line: 1640, column: 9, scope: !7892)
!7918 = !DILocation(line: 1641, column: 5, scope: !7892)
!7919 = !DILocation(line: 1641, column: 17, scope: !7892)
!7920 = !DILocation(line: 1641, column: 22, scope: !7892)
!7921 = !DILocation(line: 1642, column: 5, scope: !7892)
!7922 = !DILocation(line: 1642, column: 17, scope: !7892)
!7923 = !DILocation(line: 1642, column: 22, scope: !7892)
!7924 = !DILocation(line: 1643, column: 5, scope: !7892)
!7925 = !DILocation(line: 1643, column: 17, scope: !7892)
!7926 = !DILocation(line: 1643, column: 26, scope: !7892)
!7927 = !DILocation(line: 1644, column: 24, scope: !7892)
!7928 = !DILocation(line: 1644, column: 5, scope: !7892)
!7929 = !DILocation(line: 1644, column: 17, scope: !7892)
!7930 = !DILocation(line: 1644, column: 21, scope: !7892)
!7931 = !DILocation(line: 1647, column: 29, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7892, file: !939, line: 1647, column: 9)
!7933 = !DILocation(line: 1647, column: 32, scope: !7932)
!7934 = !DILocation(line: 1647, column: 17, scope: !7932)
!7935 = !DILocation(line: 1647, column: 15, scope: !7932)
!7936 = !DILocation(line: 1647, column: 9, scope: !7892)
!7937 = !DILocation(line: 1648, column: 27, scope: !7932)
!7938 = !DILocation(line: 1648, column: 34, scope: !7932)
!7939 = !DILocation(line: 1648, column: 8, scope: !7932)
!7940 = !DILocation(line: 1648, column: 20, scope: !7932)
!7941 = !DILocation(line: 1648, column: 25, scope: !7932)
!7942 = !DILocation(line: 1650, column: 29, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7892, file: !939, line: 1650, column: 9)
!7944 = !DILocation(line: 1650, column: 32, scope: !7943)
!7945 = !DILocation(line: 1650, column: 17, scope: !7943)
!7946 = !DILocation(line: 1650, column: 15, scope: !7943)
!7947 = !DILocation(line: 1650, column: 9, scope: !7892)
!7948 = !DILocation(line: 1651, column: 28, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7943, file: !939, line: 1650, column: 72)
!7950 = !DILocation(line: 1651, column: 35, scope: !7949)
!7951 = !DILocation(line: 1651, column: 9, scope: !7949)
!7952 = !DILocation(line: 1651, column: 21, scope: !7949)
!7953 = !DILocation(line: 1651, column: 26, scope: !7949)
!7954 = !DILocation(line: 1652, column: 5, scope: !7949)
!7955 = !DILocation(line: 1654, column: 16, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7957, file: !939, line: 1654, column: 9)
!7957 = distinct !DILexicalBlock(scope: !7943, file: !939, line: 1652, column: 12)
!7958 = !DILocation(line: 1654, column: 14, scope: !7956)
!7959 = !DILocation(line: 1654, column: 21, scope: !7960)
!7960 = !DILexicalBlockFile(scope: !7961, file: !939, discriminator: 1)
!7961 = distinct !DILexicalBlock(scope: !7956, file: !939, line: 1654, column: 9)
!7962 = !DILocation(line: 1654, column: 25, scope: !7960)
!7963 = !DILocation(line: 1654, column: 28, scope: !7960)
!7964 = !DILocation(line: 1654, column: 23, scope: !7960)
!7965 = !DILocation(line: 1654, column: 9, scope: !7960)
!7966 = !DILocation(line: 1655, column: 29, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7961, file: !939, line: 1654, column: 45)
!7968 = !DILocation(line: 1655, column: 18, scope: !7967)
!7969 = !DILocation(line: 1655, column: 21, scope: !7967)
!7970 = !DILocation(line: 1655, column: 16, scope: !7967)
!7971 = !DILocation(line: 1656, column: 37, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7967, file: !939, line: 1656, column: 17)
!7973 = !DILocation(line: 1656, column: 41, scope: !7972)
!7974 = !DILocation(line: 1656, column: 25, scope: !7972)
!7975 = !DILocation(line: 1656, column: 23, scope: !7972)
!7976 = !DILocation(line: 1656, column: 17, scope: !7967)
!7977 = !DILocation(line: 1657, column: 36, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7972, file: !939, line: 1656, column: 81)
!7979 = !DILocation(line: 1657, column: 43, scope: !7978)
!7980 = !DILocation(line: 1657, column: 17, scope: !7978)
!7981 = !DILocation(line: 1657, column: 29, scope: !7978)
!7982 = !DILocation(line: 1657, column: 34, scope: !7978)
!7983 = !DILocation(line: 1658, column: 17, scope: !7978)
!7984 = !DILocation(line: 1660, column: 9, scope: !7967)
!7985 = !DILocation(line: 1654, column: 41, scope: !7986)
!7986 = !DILexicalBlockFile(scope: !7961, file: !939, discriminator: 2)
!7987 = !DILocation(line: 1654, column: 9, scope: !7986)
!7988 = distinct !{!7988, !7989}
!7989 = !DILocation(line: 1654, column: 9, scope: !7957)
!7990 = !DILocation(line: 1663, column: 25, scope: !7892)
!7991 = !DILocation(line: 1663, column: 28, scope: !7892)
!7992 = !DILocation(line: 1663, column: 13, scope: !7892)
!7993 = !DILocation(line: 1663, column: 11, scope: !7892)
!7994 = !DILocation(line: 1664, column: 9, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7892, file: !939, line: 1664, column: 9)
!7996 = !DILocation(line: 1664, column: 9, scope: !7892)
!7997 = !DILocation(line: 1665, column: 28, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7995, file: !939, line: 1664, column: 16)
!7999 = !DILocation(line: 1665, column: 35, scope: !7998)
!8000 = !DILocation(line: 1665, column: 9, scope: !7998)
!8001 = !DILocation(line: 1665, column: 21, scope: !7998)
!8002 = !DILocation(line: 1665, column: 26, scope: !7998)
!8003 = !DILocation(line: 1666, column: 9, scope: !7998)
!8004 = !DILocation(line: 1666, column: 21, scope: !7998)
!8005 = !DILocation(line: 1666, column: 26, scope: !7998)
!8006 = !DILocation(line: 1667, column: 9, scope: !7998)
!8007 = !DILocation(line: 1667, column: 21, scope: !7998)
!8008 = !DILocation(line: 1667, column: 30, scope: !7998)
!8009 = !DILocation(line: 1668, column: 28, scope: !7998)
!8010 = !DILocation(line: 1668, column: 9, scope: !7998)
!8011 = !DILocation(line: 1668, column: 21, scope: !7998)
!8012 = !DILocation(line: 1668, column: 25, scope: !7998)
!8013 = !DILocation(line: 1669, column: 23, scope: !7998)
!8014 = !DILocation(line: 1670, column: 5, scope: !7998)
!8015 = !DILocation(line: 1672, column: 23, scope: !7892)
!8016 = !DILocation(line: 1672, column: 5, scope: !7892)
!8017 = !DILocation(line: 1673, column: 30, scope: !7892)
!8018 = !DILocation(line: 1673, column: 5, scope: !7892)
!8019 = !DILocation(line: 1674, column: 31, scope: !7892)
!8020 = !DILocation(line: 1674, column: 34, scope: !7892)
!8021 = !DILocation(line: 1674, column: 44, scope: !7892)
!8022 = !DILocation(line: 1674, column: 5, scope: !7892)
!8023 = !DILocation(line: 1675, column: 5, scope: !7892)
!8024 = !DILocation(line: 1675, column: 10, scope: !7892)
!8025 = !DILocation(line: 1675, column: 31, scope: !7892)
!8026 = !DILocation(line: 1676, column: 12, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !7892, file: !939, line: 1676, column: 5)
!8028 = !DILocation(line: 1676, column: 10, scope: !8027)
!8029 = !DILocation(line: 1676, column: 17, scope: !8030)
!8030 = !DILexicalBlockFile(scope: !8031, file: !939, discriminator: 1)
!8031 = distinct !DILexicalBlock(scope: !8027, file: !939, line: 1676, column: 5)
!8032 = !DILocation(line: 1676, column: 21, scope: !8030)
!8033 = !DILocation(line: 1676, column: 19, scope: !8030)
!8034 = !DILocation(line: 1676, column: 5, scope: !8030)
!8035 = !DILocation(line: 1677, column: 27, scope: !8031)
!8036 = !DILocation(line: 1677, column: 40, scope: !8031)
!8037 = !DILocation(line: 1677, column: 31, scope: !8031)
!8038 = !DILocation(line: 1677, column: 9, scope: !8031)
!8039 = !DILocation(line: 1676, column: 37, scope: !8040)
!8040 = !DILexicalBlockFile(scope: !8031, file: !939, discriminator: 2)
!8041 = !DILocation(line: 1676, column: 5, scope: !8040)
!8042 = distinct !{!8042, !8043}
!8043 = !DILocation(line: 1676, column: 5, scope: !7892)
!8044 = !DILocation(line: 1678, column: 38, scope: !7892)
!8045 = !DILocation(line: 1678, column: 5, scope: !7892)
!8046 = !DILocation(line: 1679, column: 5, scope: !7892)
!8047 = distinct !DISubprogram(name: "mxf_write_refs_count", scope: !939, file: !939, line: 528, type: !5069, isLocal: true, isDefinition: true, scopeLine: 529, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!8048 = !DILocalVariable(name: "pb", arg: 1, scope: !8047, file: !939, line: 528, type: !1309)
!8049 = !DILocation(line: 528, column: 47, scope: !8047)
!8050 = !DILocalVariable(name: "ref_count", arg: 2, scope: !8047, file: !939, line: 528, type: !1042)
!8051 = !DILocation(line: 528, column: 55, scope: !8047)
!8052 = !DILocation(line: 530, column: 15, scope: !8047)
!8053 = !DILocation(line: 530, column: 19, scope: !8047)
!8054 = !DILocation(line: 530, column: 5, scope: !8047)
!8055 = !DILocation(line: 531, column: 15, scope: !8047)
!8056 = !DILocation(line: 531, column: 5, scope: !8047)
!8057 = !DILocation(line: 532, column: 1, scope: !8047)
!8058 = distinct !DISubprogram(name: "klv_encode_ber_length", scope: !939, file: !939, line: 542, type: !8059, isLocal: true, isDefinition: true, scopeLine: 543, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!8059 = !DISubroutineType(types: !8060)
!8060 = !{!1042, !1309, !1039}
!8061 = !DILocalVariable(name: "pb", arg: 1, scope: !8058, file: !939, line: 542, type: !1309)
!8062 = !DILocation(line: 542, column: 47, scope: !8058)
!8063 = !DILocalVariable(name: "len", arg: 2, scope: !8058, file: !939, line: 542, type: !1039)
!8064 = !DILocation(line: 542, column: 60, scope: !8058)
!8065 = !DILocalVariable(name: "size", scope: !8058, file: !939, line: 545, type: !1042)
!8066 = !DILocation(line: 545, column: 9, scope: !8058)
!8067 = !DILocation(line: 546, column: 9, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8058, file: !939, line: 546, column: 9)
!8069 = !DILocation(line: 546, column: 13, scope: !8068)
!8070 = !DILocation(line: 546, column: 9, scope: !8058)
!8071 = !DILocation(line: 548, column: 17, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8068, file: !939, line: 546, column: 20)
!8073 = !DILocation(line: 548, column: 21, scope: !8072)
!8074 = !DILocation(line: 548, column: 9, scope: !8072)
!8075 = !DILocation(line: 549, column: 9, scope: !8072)
!8076 = !DILocation(line: 552, column: 34, scope: !8058)
!8077 = !DILocation(line: 552, column: 38, scope: !8058)
!8078 = !DILocation(line: 552, column: 33, scope: !8058)
!8079 = !DILocation(line: 552, column: 19, scope: !8058)
!8080 = !DILocation(line: 552, column: 17, scope: !8058)
!8081 = !DILocation(line: 552, column: 43, scope: !8058)
!8082 = !DILocation(line: 552, column: 49, scope: !8058)
!8083 = !DILocation(line: 552, column: 10, scope: !8058)
!8084 = !DILocation(line: 555, column: 13, scope: !8058)
!8085 = !DILocation(line: 555, column: 24, scope: !8058)
!8086 = !DILocation(line: 555, column: 22, scope: !8058)
!8087 = !DILocation(line: 555, column: 5, scope: !8058)
!8088 = !DILocation(line: 556, column: 5, scope: !8058)
!8089 = !DILocation(line: 556, column: 11, scope: !8090)
!8090 = !DILexicalBlockFile(scope: !8058, file: !939, discriminator: 1)
!8091 = !DILocation(line: 556, column: 5, scope: !8090)
!8092 = !DILocation(line: 557, column: 13, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8058, file: !939, line: 556, column: 17)
!8094 = !DILocation(line: 558, column: 17, scope: !8093)
!8095 = !DILocation(line: 558, column: 21, scope: !8093)
!8096 = !DILocation(line: 558, column: 32, scope: !8093)
!8097 = !DILocation(line: 558, column: 30, scope: !8093)
!8098 = !DILocation(line: 558, column: 25, scope: !8093)
!8099 = !DILocation(line: 558, column: 37, scope: !8093)
!8100 = !DILocation(line: 558, column: 9, scope: !8093)
!8101 = !DILocation(line: 556, column: 5, scope: !8102)
!8102 = !DILexicalBlockFile(scope: !8058, file: !939, discriminator: 2)
!8103 = distinct !{!8103, !8088}
!8104 = !DILocation(line: 560, column: 5, scope: !8058)
!8105 = !DILocation(line: 561, column: 1, scope: !8058)
!8106 = distinct !DISubprogram(name: "mxf_write_preface", scope: !939, file: !939, line: 672, type: !4227, isLocal: true, isDefinition: true, scopeLine: 673, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!8107 = !DILocalVariable(name: "s", arg: 1, scope: !8106, file: !939, line: 672, type: !2417)
!8108 = !DILocation(line: 672, column: 48, scope: !8106)
!8109 = !DILocalVariable(name: "mxf", scope: !8106, file: !939, line: 674, type: !2567)
!8110 = !DILocation(line: 674, column: 17, scope: !8106)
!8111 = !DILocation(line: 674, column: 23, scope: !8106)
!8112 = !DILocation(line: 674, column: 26, scope: !8106)
!8113 = !DILocalVariable(name: "pb", scope: !8106, file: !939, line: 675, type: !1309)
!8114 = !DILocation(line: 675, column: 18, scope: !8106)
!8115 = !DILocation(line: 675, column: 23, scope: !8106)
!8116 = !DILocation(line: 675, column: 26, scope: !8106)
!8117 = !DILocation(line: 677, column: 28, scope: !8106)
!8118 = !DILocation(line: 677, column: 5, scope: !8106)
!8119 = !DILocation(line: 678, column: 5, scope: !8106)
!8120 = distinct !{!8120, !8119}
!8121 = !DILocation(line: 678, column: 551, scope: !8122)
!8122 = !DILexicalBlockFile(scope: !8123, file: !939, discriminator: 1)
!8123 = distinct !DILexicalBlock(scope: !8106, file: !939, line: 678, column: 8)
!8124 = !DILocation(line: 679, column: 27, scope: !8106)
!8125 = !DILocation(line: 679, column: 45, scope: !8106)
!8126 = !DILocation(line: 679, column: 50, scope: !8106)
!8127 = !DILocation(line: 679, column: 74, scope: !8106)
!8128 = !DILocation(line: 679, column: 80, scope: !8129)
!8129 = !DILexicalBlockFile(scope: !8106, file: !939, discriminator: 1)
!8130 = !DILocation(line: 679, column: 85, scope: !8129)
!8131 = !DILocation(line: 679, column: 109, scope: !8129)
!8132 = !DILocation(line: 679, column: 45, scope: !8129)
!8133 = !DILocation(line: 679, column: 115, scope: !8134)
!8134 = !DILexicalBlockFile(scope: !8106, file: !939, discriminator: 2)
!8135 = !DILocation(line: 679, column: 120, scope: !8134)
!8136 = !DILocation(line: 679, column: 45, scope: !8134)
!8137 = !DILocation(line: 679, column: 45, scope: !8138)
!8138 = !DILexicalBlockFile(scope: !8106, file: !939, discriminator: 3)
!8139 = !DILocation(line: 679, column: 44, scope: !8138)
!8140 = !DILocation(line: 679, column: 42, scope: !8138)
!8141 = !DILocation(line: 679, column: 35, scope: !8138)
!8142 = !DILocation(line: 679, column: 5, scope: !8138)
!8143 = !DILocation(line: 682, column: 25, scope: !8106)
!8144 = !DILocation(line: 682, column: 5, scope: !8106)
!8145 = !DILocation(line: 683, column: 20, scope: !8106)
!8146 = !DILocation(line: 683, column: 5, scope: !8106)
!8147 = !DILocation(line: 684, column: 5, scope: !8106)
!8148 = distinct !{!8148, !8147}
!8149 = !DILocation(line: 684, column: 551, scope: !8150)
!8150 = !DILexicalBlockFile(scope: !8151, file: !939, discriminator: 1)
!8151 = distinct !DILexicalBlock(scope: !8106, file: !939, line: 684, column: 8)
!8152 = !DILocation(line: 687, column: 25, scope: !8106)
!8153 = !DILocation(line: 687, column: 5, scope: !8106)
!8154 = !DILocation(line: 688, column: 15, scope: !8106)
!8155 = !DILocation(line: 688, column: 19, scope: !8106)
!8156 = !DILocation(line: 688, column: 24, scope: !8106)
!8157 = !DILocation(line: 688, column: 5, scope: !8106)
!8158 = !DILocation(line: 691, column: 25, scope: !8106)
!8159 = !DILocation(line: 691, column: 5, scope: !8106)
!8160 = !DILocation(line: 692, column: 15, scope: !8106)
!8161 = !DILocation(line: 692, column: 5, scope: !8106)
!8162 = !DILocation(line: 695, column: 25, scope: !8106)
!8163 = !DILocation(line: 695, column: 5, scope: !8106)
!8164 = !DILocation(line: 696, column: 15, scope: !8106)
!8165 = !DILocation(line: 696, column: 5, scope: !8106)
!8166 = !DILocation(line: 699, column: 25, scope: !8106)
!8167 = !DILocation(line: 699, column: 5, scope: !8106)
!8168 = !DILocation(line: 700, column: 26, scope: !8106)
!8169 = !DILocation(line: 700, column: 5, scope: !8106)
!8170 = !DILocation(line: 701, column: 20, scope: !8106)
!8171 = !DILocation(line: 701, column: 5, scope: !8106)
!8172 = !DILocation(line: 704, column: 25, scope: !8106)
!8173 = !DILocation(line: 704, column: 5, scope: !8106)
!8174 = !DILocation(line: 705, column: 20, scope: !8106)
!8175 = !DILocation(line: 705, column: 5, scope: !8106)
!8176 = !DILocation(line: 708, column: 25, scope: !8106)
!8177 = !DILocation(line: 708, column: 5, scope: !8106)
!8178 = !DILocation(line: 709, column: 9, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8106, file: !939, line: 709, column: 9)
!8180 = !DILocation(line: 709, column: 12, scope: !8179)
!8181 = !DILocation(line: 709, column: 20, scope: !8179)
!8182 = !DILocation(line: 709, column: 9, scope: !8106)
!8183 = !DILocation(line: 710, column: 20, scope: !8179)
!8184 = !DILocation(line: 710, column: 9, scope: !8179)
!8185 = !DILocation(line: 712, column: 20, scope: !8179)
!8186 = !DILocation(line: 712, column: 9, scope: !8179)
!8187 = !DILocation(line: 715, column: 25, scope: !8106)
!8188 = !DILocation(line: 715, column: 41, scope: !8106)
!8189 = !DILocation(line: 715, column: 46, scope: !8106)
!8190 = !DILocation(line: 715, column: 70, scope: !8106)
!8191 = !DILocation(line: 715, column: 76, scope: !8129)
!8192 = !DILocation(line: 715, column: 81, scope: !8129)
!8193 = !DILocation(line: 715, column: 105, scope: !8129)
!8194 = !DILocation(line: 715, column: 41, scope: !8129)
!8195 = !DILocation(line: 715, column: 111, scope: !8134)
!8196 = !DILocation(line: 715, column: 116, scope: !8134)
!8197 = !DILocation(line: 715, column: 41, scope: !8134)
!8198 = !DILocation(line: 715, column: 41, scope: !8138)
!8199 = !DILocation(line: 715, column: 40, scope: !8138)
!8200 = !DILocation(line: 715, column: 38, scope: !8138)
!8201 = !DILocation(line: 715, column: 31, scope: !8138)
!8202 = !DILocation(line: 715, column: 29, scope: !8138)
!8203 = !DILocation(line: 715, column: 5, scope: !8138)
!8204 = !DILocation(line: 716, column: 38, scope: !8106)
!8205 = !DILocation(line: 716, column: 5, scope: !8106)
!8206 = !DILocation(line: 719, column: 25, scope: !8106)
!8207 = !DILocation(line: 719, column: 5, scope: !8106)
!8208 = !DILocation(line: 720, column: 15, scope: !8106)
!8209 = !DILocation(line: 720, column: 5, scope: !8106)
!8210 = !DILocation(line: 721, column: 1, scope: !8106)
!8211 = distinct !DISubprogram(name: "mxf_write_identification", scope: !939, file: !939, line: 797, type: !4227, isLocal: true, isDefinition: true, scopeLine: 798, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!8212 = !DILocalVariable(name: "s", arg: 1, scope: !8211, file: !939, line: 797, type: !2417)
!8213 = !DILocation(line: 797, column: 55, scope: !8211)
!8214 = !DILocalVariable(name: "mxf", scope: !8211, file: !939, line: 799, type: !2567)
!8215 = !DILocation(line: 799, column: 17, scope: !8211)
!8216 = !DILocation(line: 799, column: 23, scope: !8211)
!8217 = !DILocation(line: 799, column: 26, scope: !8211)
!8218 = !DILocalVariable(name: "pb", scope: !8211, file: !939, line: 800, type: !1309)
!8219 = !DILocation(line: 800, column: 18, scope: !8211)
!8220 = !DILocation(line: 800, column: 23, scope: !8211)
!8221 = !DILocation(line: 800, column: 26, scope: !8211)
!8222 = !DILocalVariable(name: "company", scope: !8211, file: !939, line: 801, type: !1107)
!8223 = !DILocation(line: 801, column: 17, scope: !8211)
!8224 = !DILocalVariable(name: "product", scope: !8211, file: !939, line: 802, type: !1107)
!8225 = !DILocation(line: 802, column: 17, scope: !8211)
!8226 = !DILocation(line: 802, column: 27, scope: !8211)
!8227 = !DILocation(line: 802, column: 30, scope: !8211)
!8228 = !DILocation(line: 802, column: 38, scope: !8211)
!8229 = !DILocalVariable(name: "version", scope: !8211, file: !939, line: 803, type: !1107)
!8230 = !DILocation(line: 803, column: 17, scope: !8211)
!8231 = !DILocalVariable(name: "length", scope: !8211, file: !939, line: 804, type: !1042)
!8232 = !DILocation(line: 804, column: 9, scope: !8211)
!8233 = !DILocation(line: 806, column: 28, scope: !8211)
!8234 = !DILocation(line: 806, column: 5, scope: !8211)
!8235 = !DILocation(line: 807, column: 5, scope: !8211)
!8236 = distinct !{!8236, !8235}
!8237 = !DILocation(line: 807, column: 558, scope: !8238)
!8238 = !DILexicalBlockFile(scope: !8239, file: !939, discriminator: 1)
!8239 = distinct !DILexicalBlock(scope: !8211, file: !939, line: 807, column: 8)
!8240 = !DILocation(line: 809, column: 15, scope: !8211)
!8241 = !DILocation(line: 809, column: 18, scope: !8211)
!8242 = !DILocation(line: 809, column: 24, scope: !8211)
!8243 = !DILocation(line: 809, column: 13, scope: !8211)
!8244 = !DILocation(line: 811, column: 46, scope: !8211)
!8245 = !DILocation(line: 811, column: 19, scope: !8211)
!8246 = !DILocation(line: 811, column: 18, scope: !8211)
!8247 = !DILocation(line: 812, column: 46, scope: !8211)
!8248 = !DILocation(line: 812, column: 19, scope: !8211)
!8249 = !DILocation(line: 811, column: 55, scope: !8211)
!8250 = !DILocation(line: 813, column: 46, scope: !8211)
!8251 = !DILocation(line: 813, column: 19, scope: !8211)
!8252 = !DILocation(line: 812, column: 55, scope: !8211)
!8253 = !DILocation(line: 811, column: 12, scope: !8211)
!8254 = !DILocation(line: 814, column: 27, scope: !8211)
!8255 = !DILocation(line: 814, column: 31, scope: !8211)
!8256 = !DILocation(line: 814, column: 5, scope: !8211)
!8257 = !DILocation(line: 817, column: 25, scope: !8211)
!8258 = !DILocation(line: 817, column: 5, scope: !8211)
!8259 = !DILocation(line: 818, column: 20, scope: !8211)
!8260 = !DILocation(line: 818, column: 5, scope: !8211)
!8261 = !DILocation(line: 819, column: 5, scope: !8211)
!8262 = distinct !{!8262, !8261}
!8263 = !DILocation(line: 819, column: 558, scope: !8264)
!8264 = !DILexicalBlockFile(scope: !8265, file: !939, discriminator: 1)
!8265 = distinct !DILexicalBlock(scope: !8211, file: !939, line: 819, column: 8)
!8266 = !DILocation(line: 822, column: 25, scope: !8211)
!8267 = !DILocation(line: 822, column: 5, scope: !8211)
!8268 = !DILocation(line: 823, column: 20, scope: !8211)
!8269 = !DILocation(line: 823, column: 5, scope: !8211)
!8270 = !DILocation(line: 824, column: 31, scope: !8211)
!8271 = !DILocation(line: 824, column: 43, scope: !8211)
!8272 = !DILocation(line: 824, column: 5, scope: !8211)
!8273 = !DILocation(line: 825, column: 31, scope: !8211)
!8274 = !DILocation(line: 825, column: 43, scope: !8211)
!8275 = !DILocation(line: 825, column: 5, scope: !8211)
!8276 = !DILocation(line: 827, column: 25, scope: !8211)
!8277 = !DILocation(line: 827, column: 5, scope: !8211)
!8278 = !DILocation(line: 828, column: 19, scope: !8211)
!8279 = !DILocation(line: 828, column: 5, scope: !8211)
!8280 = !DILocation(line: 830, column: 31, scope: !8211)
!8281 = !DILocation(line: 830, column: 43, scope: !8211)
!8282 = !DILocation(line: 830, column: 5, scope: !8211)
!8283 = !DILocation(line: 833, column: 25, scope: !8211)
!8284 = !DILocation(line: 833, column: 5, scope: !8211)
!8285 = !DILocation(line: 834, column: 20, scope: !8211)
!8286 = !DILocation(line: 834, column: 5, scope: !8211)
!8287 = !DILocation(line: 837, column: 25, scope: !8211)
!8288 = !DILocation(line: 837, column: 5, scope: !8211)
!8289 = !DILocation(line: 838, column: 15, scope: !8211)
!8290 = !DILocation(line: 838, column: 19, scope: !8211)
!8291 = !DILocation(line: 838, column: 24, scope: !8211)
!8292 = !DILocation(line: 838, column: 5, scope: !8211)
!8293 = !DILocation(line: 840, column: 25, scope: !8211)
!8294 = !DILocation(line: 840, column: 5, scope: !8211)
!8295 = !DILocation(line: 841, column: 19, scope: !8211)
!8296 = !DILocation(line: 841, column: 5, scope: !8211)
!8297 = !DILocation(line: 842, column: 1, scope: !8211)
!8298 = distinct !DISubprogram(name: "mxf_write_content_storage", scope: !939, file: !939, line: 844, type: !8299, isLocal: true, isDefinition: true, scopeLine: 845, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!8299 = !DISubroutineType(types: !8300)
!8300 = !{null, !2417, !8301, !1042}
!8301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7907, size: 64, align: 64)
!8302 = !DILocalVariable(name: "s", arg: 1, scope: !8298, file: !939, line: 844, type: !2417)
!8303 = !DILocation(line: 844, column: 56, scope: !8298)
!8304 = !DILocalVariable(name: "packages", arg: 2, scope: !8298, file: !939, line: 844, type: !8301)
!8305 = !DILocation(line: 844, column: 71, scope: !8298)
!8306 = !DILocalVariable(name: "package_count", arg: 3, scope: !8298, file: !939, line: 844, type: !1042)
!8307 = !DILocation(line: 844, column: 85, scope: !8298)
!8308 = !DILocalVariable(name: "pb", scope: !8298, file: !939, line: 846, type: !1309)
!8309 = !DILocation(line: 846, column: 18, scope: !8298)
!8310 = !DILocation(line: 846, column: 23, scope: !8298)
!8311 = !DILocation(line: 846, column: 26, scope: !8298)
!8312 = !DILocalVariable(name: "i", scope: !8298, file: !939, line: 847, type: !1042)
!8313 = !DILocation(line: 847, column: 9, scope: !8298)
!8314 = !DILocation(line: 849, column: 28, scope: !8298)
!8315 = !DILocation(line: 849, column: 5, scope: !8298)
!8316 = !DILocation(line: 850, column: 5, scope: !8298)
!8317 = distinct !{!8317, !8316}
!8318 = !DILocation(line: 850, column: 559, scope: !8319)
!8319 = !DILexicalBlockFile(scope: !8320, file: !939, discriminator: 1)
!8320 = distinct !DILexicalBlock(scope: !8298, file: !939, line: 850, column: 8)
!8321 = !DILocation(line: 851, column: 27, scope: !8298)
!8322 = !DILocation(line: 851, column: 42, scope: !8298)
!8323 = !DILocation(line: 851, column: 40, scope: !8298)
!8324 = !DILocation(line: 851, column: 34, scope: !8298)
!8325 = !DILocation(line: 851, column: 31, scope: !8298)
!8326 = !DILocation(line: 851, column: 5, scope: !8298)
!8327 = !DILocation(line: 854, column: 25, scope: !8298)
!8328 = !DILocation(line: 854, column: 5, scope: !8298)
!8329 = !DILocation(line: 855, column: 20, scope: !8298)
!8330 = !DILocation(line: 855, column: 5, scope: !8298)
!8331 = !DILocation(line: 856, column: 5, scope: !8298)
!8332 = distinct !{!8332, !8331}
!8333 = !DILocation(line: 856, column: 559, scope: !8334)
!8334 = !DILexicalBlockFile(scope: !8335, file: !939, discriminator: 1)
!8335 = distinct !DILexicalBlock(scope: !8298, file: !939, line: 856, column: 8)
!8336 = !DILocation(line: 859, column: 25, scope: !8298)
!8337 = !DILocation(line: 859, column: 34, scope: !8298)
!8338 = !DILocation(line: 859, column: 32, scope: !8298)
!8339 = !DILocation(line: 859, column: 48, scope: !8298)
!8340 = !DILocation(line: 859, column: 5, scope: !8298)
!8341 = !DILocation(line: 860, column: 26, scope: !8298)
!8342 = !DILocation(line: 860, column: 30, scope: !8298)
!8343 = !DILocation(line: 860, column: 5, scope: !8298)
!8344 = !DILocation(line: 861, column: 12, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8298, file: !939, line: 861, column: 5)
!8346 = !DILocation(line: 861, column: 10, scope: !8345)
!8347 = !DILocation(line: 861, column: 17, scope: !8348)
!8348 = !DILexicalBlockFile(scope: !8349, file: !939, discriminator: 1)
!8349 = distinct !DILexicalBlock(scope: !8345, file: !939, line: 861, column: 5)
!8350 = !DILocation(line: 861, column: 21, scope: !8348)
!8351 = !DILocation(line: 861, column: 19, scope: !8348)
!8352 = !DILocation(line: 861, column: 5, scope: !8348)
!8353 = !DILocation(line: 862, column: 24, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8349, file: !939, line: 861, column: 41)
!8355 = !DILocation(line: 862, column: 37, scope: !8354)
!8356 = !DILocation(line: 862, column: 28, scope: !8354)
!8357 = !DILocation(line: 862, column: 40, scope: !8354)
!8358 = !DILocation(line: 862, column: 55, scope: !8354)
!8359 = !DILocation(line: 862, column: 46, scope: !8354)
!8360 = !DILocation(line: 862, column: 58, scope: !8354)
!8361 = !DILocation(line: 862, column: 9, scope: !8354)
!8362 = !DILocation(line: 863, column: 5, scope: !8354)
!8363 = !DILocation(line: 861, column: 37, scope: !8364)
!8364 = !DILexicalBlockFile(scope: !8349, file: !939, discriminator: 2)
!8365 = !DILocation(line: 861, column: 5, scope: !8364)
!8366 = distinct !{!8366, !8367}
!8367 = !DILocation(line: 861, column: 5, scope: !8298)
!8368 = !DILocation(line: 866, column: 25, scope: !8298)
!8369 = !DILocation(line: 866, column: 5, scope: !8298)
!8370 = !DILocation(line: 867, column: 26, scope: !8298)
!8371 = !DILocation(line: 867, column: 5, scope: !8298)
!8372 = !DILocation(line: 868, column: 20, scope: !8298)
!8373 = !DILocation(line: 868, column: 5, scope: !8298)
!8374 = !DILocation(line: 869, column: 1, scope: !8298)
!8375 = distinct !DISubprogram(name: "mxf_write_package", scope: !939, file: !939, line: 1511, type: !8376, isLocal: true, isDefinition: true, scopeLine: 1512, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!8376 = !DISubroutineType(types: !8377)
!8377 = !{null, !2417, !8301}
!8378 = !DILocalVariable(name: "s", arg: 1, scope: !8375, file: !939, line: 1511, type: !2417)
!8379 = !DILocation(line: 1511, column: 48, scope: !8375)
!8380 = !DILocalVariable(name: "package", arg: 2, scope: !8375, file: !939, line: 1511, type: !8301)
!8381 = !DILocation(line: 1511, column: 63, scope: !8375)
!8382 = !DILocalVariable(name: "mxf", scope: !8375, file: !939, line: 1513, type: !2567)
!8383 = !DILocation(line: 1513, column: 17, scope: !8375)
!8384 = !DILocation(line: 1513, column: 23, scope: !8375)
!8385 = !DILocation(line: 1513, column: 26, scope: !8375)
!8386 = !DILocalVariable(name: "pb", scope: !8375, file: !939, line: 1514, type: !1309)
!8387 = !DILocation(line: 1514, column: 18, scope: !8375)
!8388 = !DILocation(line: 1514, column: 23, scope: !8375)
!8389 = !DILocation(line: 1514, column: 26, scope: !8375)
!8390 = !DILocalVariable(name: "i", scope: !8375, file: !939, line: 1515, type: !1042)
!8391 = !DILocation(line: 1515, column: 9, scope: !8375)
!8392 = !DILocalVariable(name: "track_count", scope: !8375, file: !939, line: 1515, type: !1042)
!8393 = !DILocation(line: 1515, column: 12, scope: !8375)
!8394 = !DILocation(line: 1515, column: 26, scope: !8375)
!8395 = !DILocation(line: 1515, column: 29, scope: !8375)
!8396 = !DILocation(line: 1515, column: 39, scope: !8375)
!8397 = !DILocalVariable(name: "name_size", scope: !8375, file: !939, line: 1516, type: !1042)
!8398 = !DILocation(line: 1516, column: 9, scope: !8375)
!8399 = !DILocation(line: 1516, column: 48, scope: !8375)
!8400 = !DILocation(line: 1516, column: 57, scope: !8375)
!8401 = !DILocation(line: 1516, column: 21, scope: !8375)
!8402 = !DILocalVariable(name: "user_comment_count", scope: !8375, file: !939, line: 1517, type: !1042)
!8403 = !DILocation(line: 1517, column: 9, scope: !8375)
!8404 = !DILocation(line: 1519, column: 9, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8375, file: !939, line: 1519, column: 9)
!8406 = !DILocation(line: 1519, column: 18, scope: !8405)
!8407 = !DILocation(line: 1519, column: 23, scope: !8405)
!8408 = !DILocation(line: 1519, column: 9, scope: !8375)
!8409 = !DILocation(line: 1520, column: 13, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8411, file: !939, line: 1520, column: 13)
!8411 = distinct !DILexicalBlock(scope: !8405, file: !939, line: 1519, column: 43)
!8412 = !DILocation(line: 1520, column: 18, scope: !8410)
!8413 = !DILocation(line: 1520, column: 13, scope: !8411)
!8414 = !DILocation(line: 1521, column: 58, scope: !8410)
!8415 = !DILocation(line: 1521, column: 61, scope: !8410)
!8416 = !DILocation(line: 1521, column: 64, scope: !8410)
!8417 = !DILocation(line: 1521, column: 34, scope: !8410)
!8418 = !DILocation(line: 1521, column: 32, scope: !8410)
!8419 = !DILocation(line: 1521, column: 13, scope: !8410)
!8420 = !DILocation(line: 1522, column: 32, scope: !8411)
!8421 = !DILocation(line: 1522, column: 9, scope: !8411)
!8422 = !DILocation(line: 1523, column: 9, scope: !8411)
!8423 = distinct !{!8423, !8422}
!8424 = !DILocation(line: 1523, column: 564, scope: !8425)
!8425 = !DILexicalBlockFile(scope: !8426, file: !939, discriminator: 1)
!8426 = distinct !DILexicalBlock(scope: !8411, file: !939, line: 1523, column: 12)
!8427 = !DILocation(line: 1524, column: 31, scope: !8411)
!8428 = !DILocation(line: 1524, column: 40, scope: !8411)
!8429 = !DILocation(line: 1524, column: 38, scope: !8411)
!8430 = !DILocation(line: 1524, column: 56, scope: !8411)
!8431 = !DILocation(line: 1524, column: 55, scope: !8411)
!8432 = !DILocation(line: 1524, column: 50, scope: !8411)
!8433 = !DILocation(line: 1524, column: 75, scope: !8411)
!8434 = !DILocation(line: 1524, column: 74, scope: !8411)
!8435 = !DILocation(line: 1524, column: 69, scope: !8411)
!8436 = !DILocation(line: 1524, column: 35, scope: !8411)
!8437 = !DILocation(line: 1524, column: 102, scope: !8411)
!8438 = !DILocation(line: 1524, column: 107, scope: !8411)
!8439 = !DILocation(line: 1524, column: 101, scope: !8411)
!8440 = !DILocation(line: 1524, column: 95, scope: !8411)
!8441 = !DILocation(line: 1524, column: 9, scope: !8411)
!8442 = !DILocation(line: 1525, column: 5, scope: !8411)
!8443 = !DILocation(line: 1526, column: 32, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8405, file: !939, line: 1525, column: 12)
!8445 = !DILocation(line: 1526, column: 9, scope: !8444)
!8446 = !DILocation(line: 1527, column: 9, scope: !8444)
!8447 = distinct !{!8447, !8446}
!8448 = !DILocation(line: 1527, column: 562, scope: !8449)
!8449 = !DILexicalBlockFile(scope: !8450, file: !939, discriminator: 1)
!8450 = distinct !DILexicalBlock(scope: !8444, file: !939, line: 1527, column: 12)
!8451 = !DILocation(line: 1528, column: 31, scope: !8444)
!8452 = !DILocation(line: 1528, column: 41, scope: !8444)
!8453 = !DILocation(line: 1528, column: 39, scope: !8444)
!8454 = !DILocation(line: 1528, column: 57, scope: !8444)
!8455 = !DILocation(line: 1528, column: 56, scope: !8444)
!8456 = !DILocation(line: 1528, column: 51, scope: !8444)
!8457 = !DILocation(line: 1528, column: 35, scope: !8444)
!8458 = !DILocation(line: 1528, column: 77, scope: !8444)
!8459 = !DILocation(line: 1528, column: 82, scope: !8444)
!8460 = !DILocation(line: 1528, column: 76, scope: !8444)
!8461 = !DILocation(line: 1528, column: 70, scope: !8444)
!8462 = !DILocation(line: 1528, column: 9, scope: !8444)
!8463 = !DILocation(line: 1532, column: 25, scope: !8375)
!8464 = !DILocation(line: 1532, column: 5, scope: !8375)
!8465 = !DILocation(line: 1533, column: 20, scope: !8375)
!8466 = !DILocation(line: 1533, column: 24, scope: !8375)
!8467 = !DILocation(line: 1533, column: 33, scope: !8375)
!8468 = !DILocation(line: 1533, column: 39, scope: !8375)
!8469 = !DILocation(line: 1533, column: 48, scope: !8375)
!8470 = !DILocation(line: 1533, column: 5, scope: !8375)
!8471 = !DILocation(line: 1534, column: 12, scope: !8375)
!8472 = !DILocation(line: 1534, column: 40, scope: !8375)
!8473 = !DILocation(line: 1534, column: 49, scope: !8375)
!8474 = !DILocation(line: 1534, column: 5, scope: !8375)
!8475 = !DILocation(line: 1535, column: 5, scope: !8375)
!8476 = distinct !{!8476, !8475}
!8477 = !DILocation(line: 1535, column: 551, scope: !8478)
!8478 = !DILexicalBlockFile(scope: !8479, file: !939, discriminator: 1)
!8479 = distinct !DILexicalBlock(scope: !8375, file: !939, line: 1535, column: 8)
!8480 = !DILocation(line: 1538, column: 25, scope: !8375)
!8481 = !DILocation(line: 1538, column: 5, scope: !8375)
!8482 = !DILocation(line: 1539, column: 20, scope: !8375)
!8483 = !DILocation(line: 1539, column: 23, scope: !8375)
!8484 = !DILocation(line: 1539, column: 32, scope: !8375)
!8485 = !DILocation(line: 1539, column: 5, scope: !8375)
!8486 = !DILocation(line: 1540, column: 5, scope: !8375)
!8487 = distinct !{!8487, !8486}
!8488 = !DILocation(line: 1540, column: 564, scope: !8489)
!8489 = !DILexicalBlockFile(scope: !8490, file: !939, discriminator: 1)
!8490 = distinct !DILexicalBlock(scope: !8375, file: !939, line: 1540, column: 8)
!8491 = !DILocation(line: 1543, column: 9, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8375, file: !939, line: 1543, column: 9)
!8493 = !DILocation(line: 1543, column: 9, scope: !8375)
!8494 = !DILocation(line: 1544, column: 35, scope: !8492)
!8495 = !DILocation(line: 1544, column: 47, scope: !8492)
!8496 = !DILocation(line: 1544, column: 56, scope: !8492)
!8497 = !DILocation(line: 1544, column: 9, scope: !8492)
!8498 = !DILocation(line: 1547, column: 25, scope: !8375)
!8499 = !DILocation(line: 1547, column: 5, scope: !8375)
!8500 = !DILocation(line: 1548, column: 15, scope: !8375)
!8501 = !DILocation(line: 1548, column: 19, scope: !8375)
!8502 = !DILocation(line: 1548, column: 24, scope: !8375)
!8503 = !DILocation(line: 1548, column: 5, scope: !8375)
!8504 = !DILocation(line: 1551, column: 25, scope: !8375)
!8505 = !DILocation(line: 1551, column: 5, scope: !8375)
!8506 = !DILocation(line: 1552, column: 15, scope: !8375)
!8507 = !DILocation(line: 1552, column: 19, scope: !8375)
!8508 = !DILocation(line: 1552, column: 24, scope: !8375)
!8509 = !DILocation(line: 1552, column: 5, scope: !8375)
!8510 = !DILocation(line: 1555, column: 25, scope: !8375)
!8511 = !DILocation(line: 1555, column: 29, scope: !8375)
!8512 = !DILocation(line: 1555, column: 40, scope: !8375)
!8513 = !DILocation(line: 1555, column: 44, scope: !8375)
!8514 = !DILocation(line: 1555, column: 5, scope: !8375)
!8515 = !DILocation(line: 1556, column: 26, scope: !8375)
!8516 = !DILocation(line: 1556, column: 30, scope: !8375)
!8517 = !DILocation(line: 1556, column: 5, scope: !8375)
!8518 = !DILocation(line: 1558, column: 12, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8375, file: !939, line: 1558, column: 5)
!8520 = !DILocation(line: 1558, column: 10, scope: !8519)
!8521 = !DILocation(line: 1558, column: 17, scope: !8522)
!8522 = !DILexicalBlockFile(scope: !8523, file: !939, discriminator: 1)
!8523 = distinct !DILexicalBlock(scope: !8519, file: !939, line: 1558, column: 5)
!8524 = !DILocation(line: 1558, column: 21, scope: !8522)
!8525 = !DILocation(line: 1558, column: 19, scope: !8522)
!8526 = !DILocation(line: 1558, column: 5, scope: !8522)
!8527 = !DILocation(line: 1559, column: 24, scope: !8523)
!8528 = !DILocation(line: 1559, column: 35, scope: !8523)
!8529 = !DILocation(line: 1559, column: 40, scope: !8523)
!8530 = !DILocation(line: 1559, column: 63, scope: !8523)
!8531 = !DILocation(line: 1559, column: 61, scope: !8523)
!8532 = !DILocation(line: 1559, column: 9, scope: !8523)
!8533 = !DILocation(line: 1558, column: 35, scope: !8534)
!8534 = !DILexicalBlockFile(scope: !8523, file: !939, discriminator: 2)
!8535 = !DILocation(line: 1558, column: 5, scope: !8534)
!8536 = distinct !{!8536, !8537}
!8537 = !DILocation(line: 1558, column: 5, scope: !8375)
!8538 = !DILocation(line: 1562, column: 9, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8375, file: !939, line: 1562, column: 9)
!8540 = !DILocation(line: 1562, column: 14, scope: !8539)
!8541 = !DILocation(line: 1562, column: 9, scope: !8375)
!8542 = !DILocation(line: 1563, column: 29, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8539, file: !939, line: 1562, column: 35)
!8544 = !DILocation(line: 1563, column: 33, scope: !8543)
!8545 = !DILocation(line: 1563, column: 51, scope: !8543)
!8546 = !DILocation(line: 1563, column: 55, scope: !8543)
!8547 = !DILocation(line: 1563, column: 9, scope: !8543)
!8548 = !DILocation(line: 1564, column: 30, scope: !8543)
!8549 = !DILocation(line: 1564, column: 34, scope: !8543)
!8550 = !DILocation(line: 1564, column: 9, scope: !8543)
!8551 = !DILocation(line: 1565, column: 16, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8543, file: !939, line: 1565, column: 9)
!8553 = !DILocation(line: 1565, column: 14, scope: !8552)
!8554 = !DILocation(line: 1565, column: 21, scope: !8555)
!8555 = !DILexicalBlockFile(scope: !8556, file: !939, discriminator: 1)
!8556 = distinct !DILexicalBlock(scope: !8552, file: !939, line: 1565, column: 9)
!8557 = !DILocation(line: 1565, column: 25, scope: !8555)
!8558 = !DILocation(line: 1565, column: 23, scope: !8555)
!8559 = !DILocation(line: 1565, column: 9, scope: !8555)
!8560 = !DILocation(line: 1566, column: 28, scope: !8556)
!8561 = !DILocation(line: 1566, column: 45, scope: !8556)
!8562 = !DILocation(line: 1566, column: 50, scope: !8556)
!8563 = !DILocation(line: 1566, column: 71, scope: !8556)
!8564 = !DILocation(line: 1566, column: 69, scope: !8556)
!8565 = !DILocation(line: 1566, column: 92, scope: !8556)
!8566 = !DILocation(line: 1566, column: 90, scope: !8556)
!8567 = !DILocation(line: 1566, column: 13, scope: !8556)
!8568 = !DILocation(line: 1565, column: 46, scope: !8569)
!8569 = !DILexicalBlockFile(scope: !8556, file: !939, discriminator: 2)
!8570 = !DILocation(line: 1565, column: 9, scope: !8569)
!8571 = distinct !{!8571, !8572}
!8572 = !DILocation(line: 1565, column: 9, scope: !8543)
!8573 = !DILocation(line: 1567, column: 5, scope: !8543)
!8574 = !DILocation(line: 1570, column: 9, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8375, file: !939, line: 1570, column: 9)
!8576 = !DILocation(line: 1570, column: 18, scope: !8575)
!8577 = !DILocation(line: 1570, column: 23, scope: !8575)
!8578 = !DILocation(line: 1570, column: 40, scope: !8575)
!8579 = !DILocation(line: 1570, column: 43, scope: !8580)
!8580 = !DILexicalBlockFile(scope: !8575, file: !939, discriminator: 1)
!8581 = !DILocation(line: 1570, column: 52, scope: !8580)
!8582 = !DILocation(line: 1570, column: 61, scope: !8580)
!8583 = !DILocation(line: 1570, column: 9, scope: !8580)
!8584 = !DILocation(line: 1571, column: 29, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8575, file: !939, line: 1570, column: 67)
!8586 = !DILocation(line: 1571, column: 9, scope: !8585)
!8587 = !DILocation(line: 1572, column: 13, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8585, file: !939, line: 1572, column: 13)
!8589 = !DILocation(line: 1572, column: 16, scope: !8588)
!8590 = !DILocation(line: 1572, column: 27, scope: !8588)
!8591 = !DILocation(line: 1572, column: 13, scope: !8585)
!8592 = !DILocation(line: 1573, column: 28, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8588, file: !939, line: 1572, column: 32)
!8594 = !DILocation(line: 1573, column: 13, scope: !8593)
!8595 = !DILocation(line: 1574, column: 40, scope: !8593)
!8596 = !DILocation(line: 1574, column: 13, scope: !8593)
!8597 = !DILocation(line: 1575, column: 9, scope: !8593)
!8598 = !DILocation(line: 1576, column: 28, scope: !8588)
!8599 = !DILocation(line: 1576, column: 13, scope: !8588)
!8600 = !DILocation(line: 1577, column: 5, scope: !8585)
!8601 = !DILocation(line: 1577, column: 16, scope: !8602)
!8602 = !DILexicalBlockFile(scope: !8603, file: !939, discriminator: 1)
!8603 = distinct !DILexicalBlock(scope: !8575, file: !939, line: 1577, column: 16)
!8604 = !DILocation(line: 1577, column: 25, scope: !8602)
!8605 = !DILocation(line: 1577, column: 30, scope: !8602)
!8606 = !DILocation(line: 1577, column: 47, scope: !8602)
!8607 = !DILocation(line: 1577, column: 50, scope: !8608)
!8608 = !DILexicalBlockFile(scope: !8603, file: !939, discriminator: 2)
!8609 = !DILocation(line: 1577, column: 59, scope: !8608)
!8610 = !DILocation(line: 1577, column: 68, scope: !8608)
!8611 = !DILocation(line: 1577, column: 16, scope: !8608)
!8612 = !DILocation(line: 1578, column: 29, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8603, file: !939, line: 1577, column: 74)
!8614 = !DILocation(line: 1578, column: 9, scope: !8613)
!8615 = !DILocation(line: 1579, column: 24, scope: !8613)
!8616 = !DILocation(line: 1579, column: 9, scope: !8613)
!8617 = !DILocation(line: 1580, column: 35, scope: !8613)
!8618 = !DILocation(line: 1580, column: 9, scope: !8613)
!8619 = !DILocation(line: 1581, column: 5, scope: !8613)
!8620 = !DILocation(line: 1592, column: 21, scope: !8375)
!8621 = !DILocation(line: 1592, column: 24, scope: !8375)
!8622 = !DILocation(line: 1592, column: 29, scope: !8375)
!8623 = !DILocation(line: 1592, column: 45, scope: !8375)
!8624 = !DILocation(line: 1592, column: 5, scope: !8375)
!8625 = !DILocation(line: 1593, column: 24, scope: !8375)
!8626 = !DILocation(line: 1593, column: 27, scope: !8375)
!8627 = !DILocation(line: 1593, column: 32, scope: !8375)
!8628 = !DILocation(line: 1593, column: 48, scope: !8375)
!8629 = !DILocation(line: 1593, column: 5, scope: !8375)
!8630 = !DILocation(line: 1594, column: 34, scope: !8375)
!8631 = !DILocation(line: 1594, column: 37, scope: !8375)
!8632 = !DILocation(line: 1594, column: 42, scope: !8375)
!8633 = !DILocation(line: 1594, column: 58, scope: !8375)
!8634 = !DILocation(line: 1594, column: 5, scope: !8375)
!8635 = !DILocation(line: 1595, column: 5, scope: !8375)
!8636 = !DILocation(line: 1595, column: 10, scope: !8375)
!8637 = !DILocation(line: 1595, column: 30, scope: !8375)
!8638 = !DILocation(line: 1597, column: 12, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8375, file: !939, line: 1597, column: 5)
!8640 = !DILocation(line: 1597, column: 10, scope: !8639)
!8641 = !DILocation(line: 1597, column: 17, scope: !8642)
!8642 = !DILexicalBlockFile(scope: !8643, file: !939, discriminator: 1)
!8643 = distinct !DILexicalBlock(scope: !8639, file: !939, line: 1597, column: 5)
!8644 = !DILocation(line: 1597, column: 21, scope: !8642)
!8645 = !DILocation(line: 1597, column: 24, scope: !8642)
!8646 = !DILocation(line: 1597, column: 19, scope: !8642)
!8647 = !DILocation(line: 1597, column: 5, scope: !8642)
!8648 = !DILocalVariable(name: "st", scope: !8649, file: !939, line: 1598, type: !1375)
!8649 = distinct !DILexicalBlock(scope: !8643, file: !939, line: 1597, column: 41)
!8650 = !DILocation(line: 1598, column: 19, scope: !8649)
!8651 = !DILocation(line: 1598, column: 35, scope: !8649)
!8652 = !DILocation(line: 1598, column: 24, scope: !8649)
!8653 = !DILocation(line: 1598, column: 27, scope: !8649)
!8654 = !DILocation(line: 1599, column: 25, scope: !8649)
!8655 = !DILocation(line: 1599, column: 28, scope: !8649)
!8656 = !DILocation(line: 1599, column: 32, scope: !8649)
!8657 = !DILocation(line: 1599, column: 9, scope: !8649)
!8658 = !DILocation(line: 1600, column: 28, scope: !8649)
!8659 = !DILocation(line: 1600, column: 31, scope: !8649)
!8660 = !DILocation(line: 1600, column: 35, scope: !8649)
!8661 = !DILocation(line: 1600, column: 9, scope: !8649)
!8662 = !DILocation(line: 1601, column: 40, scope: !8649)
!8663 = !DILocation(line: 1601, column: 43, scope: !8649)
!8664 = !DILocation(line: 1601, column: 47, scope: !8649)
!8665 = !DILocation(line: 1601, column: 9, scope: !8649)
!8666 = !DILocation(line: 1602, column: 9, scope: !8649)
!8667 = !DILocation(line: 1602, column: 14, scope: !8649)
!8668 = !DILocation(line: 1602, column: 34, scope: !8649)
!8669 = !DILocation(line: 1604, column: 13, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8649, file: !939, line: 1604, column: 13)
!8671 = !DILocation(line: 1604, column: 22, scope: !8670)
!8672 = !DILocation(line: 1604, column: 27, scope: !8670)
!8673 = !DILocation(line: 1604, column: 44, scope: !8670)
!8674 = !DILocation(line: 1604, column: 47, scope: !8675)
!8675 = !DILexicalBlockFile(scope: !8670, file: !939, discriminator: 1)
!8676 = !DILocation(line: 1604, column: 56, scope: !8675)
!8677 = !DILocation(line: 1604, column: 65, scope: !8675)
!8678 = !DILocation(line: 1604, column: 13, scope: !8675)
!8679 = !DILocalVariable(name: "sc", scope: !8680, file: !939, line: 1605, type: !1011)
!8680 = distinct !DILexicalBlock(scope: !8670, file: !939, line: 1604, column: 71)
!8681 = !DILocation(line: 1605, column: 31, scope: !8680)
!8682 = !DILocation(line: 1605, column: 36, scope: !8680)
!8683 = !DILocation(line: 1605, column: 40, scope: !8680)
!8684 = !DILocation(line: 1606, column: 39, scope: !8680)
!8685 = !DILocation(line: 1606, column: 43, scope: !8680)
!8686 = !DILocation(line: 1606, column: 13, scope: !8680)
!8687 = !DILocation(line: 1606, column: 50, scope: !8680)
!8688 = !DILocation(line: 1606, column: 61, scope: !8680)
!8689 = !DILocation(line: 1606, column: 64, scope: !8680)
!8690 = !DILocation(line: 1607, column: 9, scope: !8680)
!8691 = !DILocation(line: 1608, column: 5, scope: !8649)
!8692 = !DILocation(line: 1597, column: 37, scope: !8693)
!8693 = !DILexicalBlockFile(scope: !8643, file: !939, discriminator: 2)
!8694 = !DILocation(line: 1597, column: 5, scope: !8693)
!8695 = distinct !{!8695, !8696}
!8696 = !DILocation(line: 1597, column: 5, scope: !8375)
!8697 = !DILocation(line: 1609, column: 1, scope: !8375)
!8698 = distinct !DISubprogram(name: "mxf_write_essence_container_data", scope: !939, file: !939, line: 1611, type: !2523, isLocal: true, isDefinition: true, scopeLine: 1612, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!8699 = !DILocalVariable(name: "s", arg: 1, scope: !8698, file: !939, line: 1611, type: !2417)
!8700 = !DILocation(line: 1611, column: 62, scope: !8698)
!8701 = !DILocalVariable(name: "pb", scope: !8698, file: !939, line: 1613, type: !1309)
!8702 = !DILocation(line: 1613, column: 18, scope: !8698)
!8703 = !DILocation(line: 1613, column: 23, scope: !8698)
!8704 = !DILocation(line: 1613, column: 26, scope: !8698)
!8705 = !DILocation(line: 1615, column: 28, scope: !8698)
!8706 = !DILocation(line: 1615, column: 5, scope: !8698)
!8707 = !DILocation(line: 1616, column: 27, scope: !8698)
!8708 = !DILocation(line: 1616, column: 5, scope: !8698)
!8709 = !DILocation(line: 1618, column: 25, scope: !8698)
!8710 = !DILocation(line: 1618, column: 5, scope: !8698)
!8711 = !DILocation(line: 1619, column: 20, scope: !8698)
!8712 = !DILocation(line: 1619, column: 5, scope: !8698)
!8713 = !DILocation(line: 1621, column: 25, scope: !8698)
!8714 = !DILocation(line: 1621, column: 5, scope: !8698)
!8715 = !DILocation(line: 1622, column: 20, scope: !8698)
!8716 = !DILocation(line: 1622, column: 5, scope: !8698)
!8717 = !DILocation(line: 1624, column: 25, scope: !8698)
!8718 = !DILocation(line: 1624, column: 5, scope: !8698)
!8719 = !DILocation(line: 1625, column: 15, scope: !8698)
!8720 = !DILocation(line: 1625, column: 5, scope: !8698)
!8721 = !DILocation(line: 1627, column: 25, scope: !8698)
!8722 = !DILocation(line: 1627, column: 5, scope: !8698)
!8723 = !DILocation(line: 1628, column: 15, scope: !8698)
!8724 = !DILocation(line: 1628, column: 5, scope: !8698)
!8725 = !DILocation(line: 1630, column: 5, scope: !8698)
!8726 = distinct !DISubprogram(name: "mxf_write_metadata_key", scope: !939, file: !939, line: 619, type: !8727, isLocal: true, isDefinition: true, scopeLine: 620, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!8727 = !DISubroutineType(types: !8728)
!8728 = !{null, !1309, !1035}
!8729 = !DILocalVariable(name: "pb", arg: 1, scope: !8726, file: !939, line: 619, type: !1309)
!8730 = !DILocation(line: 619, column: 49, scope: !8726)
!8731 = !DILocalVariable(name: "value", arg: 2, scope: !8726, file: !939, line: 619, type: !1035)
!8732 = !DILocation(line: 619, column: 66, scope: !8726)
!8733 = !DILocation(line: 621, column: 16, scope: !8726)
!8734 = !DILocation(line: 621, column: 5, scope: !8726)
!8735 = !DILocation(line: 622, column: 15, scope: !8726)
!8736 = !DILocation(line: 622, column: 19, scope: !8726)
!8737 = !DILocation(line: 622, column: 5, scope: !8726)
!8738 = !DILocation(line: 623, column: 1, scope: !8726)
!8739 = distinct !DISubprogram(name: "mxf_utf16_local_tag_length", scope: !939, file: !939, line: 749, type: !8740, isLocal: true, isDefinition: true, scopeLine: 750, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!8740 = !DISubroutineType(types: !8741)
!8741 = !{!1042, !1107}
!8742 = !DILocalVariable(name: "utf8_str", arg: 1, scope: !8739, file: !939, line: 749, type: !1107)
!8743 = !DILocation(line: 749, column: 51, scope: !8739)
!8744 = !DILocalVariable(name: "size", scope: !8739, file: !939, line: 751, type: !1039)
!8745 = !DILocation(line: 751, column: 14, scope: !8739)
!8746 = !DILocation(line: 753, column: 10, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8739, file: !939, line: 753, column: 9)
!8748 = !DILocation(line: 753, column: 9, scope: !8739)
!8749 = !DILocation(line: 754, column: 9, scope: !8747)
!8750 = !DILocation(line: 756, column: 25, scope: !8739)
!8751 = !DILocation(line: 756, column: 12, scope: !8739)
!8752 = !DILocation(line: 756, column: 10, scope: !8739)
!8753 = !DILocation(line: 757, column: 9, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8739, file: !939, line: 757, column: 9)
!8755 = !DILocation(line: 757, column: 14, scope: !8754)
!8756 = !DILocation(line: 757, column: 9, scope: !8739)
!8757 = !DILocation(line: 758, column: 101, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8754, file: !939, line: 757, column: 30)
!8759 = !DILocation(line: 758, column: 9, scope: !8758)
!8760 = !DILocation(line: 759, column: 9, scope: !8758)
!8761 = !DILocation(line: 762, column: 16, scope: !8739)
!8762 = !DILocation(line: 762, column: 21, scope: !8739)
!8763 = !DILocation(line: 762, column: 14, scope: !8739)
!8764 = !DILocation(line: 762, column: 12, scope: !8739)
!8765 = !DILocation(line: 762, column: 5, scope: !8739)
!8766 = !DILocation(line: 763, column: 1, scope: !8739)
!8767 = distinct !DISubprogram(name: "mxf_write_local_tag_utf16", scope: !939, file: !939, line: 768, type: !8768, isLocal: true, isDefinition: true, scopeLine: 769, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!8768 = !DISubroutineType(types: !8769)
!8769 = !{null, !1309, !1042, !1107}
!8770 = !DILocalVariable(name: "pb", arg: 1, scope: !8767, file: !939, line: 768, type: !1309)
!8771 = !DILocation(line: 768, column: 52, scope: !8767)
!8772 = !DILocalVariable(name: "tag", arg: 2, scope: !8767, file: !939, line: 768, type: !1042)
!8773 = !DILocation(line: 768, column: 60, scope: !8767)
!8774 = !DILocalVariable(name: "value", arg: 3, scope: !8767, file: !939, line: 768, type: !1107)
!8775 = !DILocation(line: 768, column: 77, scope: !8767)
!8776 = !DILocalVariable(name: "size", scope: !8767, file: !939, line: 770, type: !1039)
!8777 = !DILocation(line: 770, column: 14, scope: !8767)
!8778 = !DILocation(line: 770, column: 34, scope: !8767)
!8779 = !DILocation(line: 770, column: 21, scope: !8767)
!8780 = !DILocation(line: 772, column: 9, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8767, file: !939, line: 772, column: 9)
!8782 = !DILocation(line: 772, column: 14, scope: !8781)
!8783 = !DILocation(line: 772, column: 9, scope: !8767)
!8784 = !DILocation(line: 773, column: 101, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8781, file: !939, line: 772, column: 30)
!8786 = !DILocation(line: 773, column: 9, scope: !8785)
!8787 = !DILocation(line: 774, column: 9, scope: !8785)
!8788 = !DILocation(line: 777, column: 25, scope: !8767)
!8789 = !DILocation(line: 777, column: 29, scope: !8767)
!8790 = !DILocation(line: 777, column: 33, scope: !8767)
!8791 = !DILocation(line: 777, column: 37, scope: !8767)
!8792 = !DILocation(line: 777, column: 5, scope: !8767)
!8793 = !DILocation(line: 778, column: 22, scope: !8767)
!8794 = !DILocation(line: 778, column: 26, scope: !8767)
!8795 = !DILocation(line: 778, column: 5, scope: !8767)
!8796 = !DILocation(line: 779, column: 1, scope: !8767)
!8797 = !DILocation(line: 779, column: 1, scope: !8798)
!8798 = !DILexicalBlockFile(scope: !8767, file: !939, discriminator: 1)
!8799 = distinct !DISubprogram(name: "store_version", scope: !939, file: !939, line: 781, type: !4227, isLocal: true, isDefinition: true, scopeLine: 781, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!8800 = !DILocalVariable(name: "s", arg: 1, scope: !8799, file: !939, line: 781, type: !2417)
!8801 = !DILocation(line: 781, column: 44, scope: !8799)
!8802 = !DILocalVariable(name: "pb", scope: !8799, file: !939, line: 782, type: !1309)
!8803 = !DILocation(line: 782, column: 18, scope: !8799)
!8804 = !DILocation(line: 782, column: 23, scope: !8799)
!8805 = !DILocation(line: 782, column: 26, scope: !8799)
!8806 = !DILocation(line: 784, column: 9, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8799, file: !939, line: 784, column: 9)
!8808 = !DILocation(line: 784, column: 12, scope: !8807)
!8809 = !DILocation(line: 784, column: 18, scope: !8807)
!8810 = !DILocation(line: 784, column: 9, scope: !8799)
!8811 = !DILocation(line: 785, column: 19, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8807, file: !939, line: 784, column: 28)
!8813 = !DILocation(line: 785, column: 9, scope: !8812)
!8814 = !DILocation(line: 786, column: 19, scope: !8812)
!8815 = !DILocation(line: 786, column: 9, scope: !8812)
!8816 = !DILocation(line: 787, column: 19, scope: !8812)
!8817 = !DILocation(line: 787, column: 9, scope: !8812)
!8818 = !DILocation(line: 788, column: 5, scope: !8812)
!8819 = !DILocation(line: 789, column: 19, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8807, file: !939, line: 788, column: 12)
!8821 = !DILocation(line: 789, column: 9, scope: !8820)
!8822 = !DILocation(line: 790, column: 19, scope: !8820)
!8823 = !DILocation(line: 790, column: 9, scope: !8820)
!8824 = !DILocation(line: 791, column: 19, scope: !8820)
!8825 = !DILocation(line: 791, column: 9, scope: !8820)
!8826 = !DILocation(line: 793, column: 15, scope: !8799)
!8827 = !DILocation(line: 793, column: 5, scope: !8799)
!8828 = !DILocation(line: 794, column: 15, scope: !8799)
!8829 = !DILocation(line: 794, column: 5, scope: !8799)
!8830 = !DILocation(line: 795, column: 1, scope: !8799)
!8831 = distinct !DISubprogram(name: "mxf_utf16len", scope: !939, file: !939, line: 727, type: !8832, isLocal: true, isDefinition: true, scopeLine: 728, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!8832 = !DISubroutineType(types: !8833)
!8833 = !{!1039, !1107}
!8834 = !DILocalVariable(name: "utf8_str", arg: 1, scope: !8831, file: !939, line: 727, type: !1107)
!8835 = !DILocation(line: 727, column: 42, scope: !8831)
!8836 = !DILocalVariable(name: "q", scope: !8831, file: !939, line: 729, type: !1092)
!8837 = !DILocation(line: 729, column: 20, scope: !8831)
!8838 = !DILocation(line: 729, column: 24, scope: !8831)
!8839 = !DILocalVariable(name: "size", scope: !8831, file: !939, line: 730, type: !1039)
!8840 = !DILocation(line: 730, column: 14, scope: !8831)
!8841 = !DILocation(line: 731, column: 5, scope: !8831)
!8842 = !DILocation(line: 731, column: 13, scope: !8843)
!8843 = !DILexicalBlockFile(scope: !8831, file: !939, discriminator: 1)
!8844 = !DILocation(line: 731, column: 12, scope: !8843)
!8845 = !DILocation(line: 731, column: 5, scope: !8843)
!8846 = !DILocalVariable(name: "ch", scope: !8847, file: !939, line: 732, type: !1034)
!8847 = distinct !DILexicalBlock(scope: !8831, file: !939, line: 731, column: 16)
!8848 = !DILocation(line: 732, column: 18, scope: !8847)
!8849 = !DILocation(line: 733, column: 16, scope: !8847)
!8850 = !DILocation(line: 733, column: 14, scope: !8847)
!8851 = !DILocation(line: 733, column: 13, scope: !8847)
!8852 = !DILocation(line: 733, column: 11, scope: !8847)
!8853 = !DILocalVariable(name: "top", scope: !8854, file: !939, line: 733, type: !1034)
!8854 = distinct !DILexicalBlock(scope: !8847, file: !939, line: 733, column: 21)
!8855 = !DILocation(line: 733, column: 32, scope: !8854)
!8856 = !DILocation(line: 733, column: 39, scope: !8854)
!8857 = !DILocation(line: 733, column: 42, scope: !8854)
!8858 = !DILocation(line: 733, column: 49, scope: !8854)
!8859 = !DILocation(line: 733, column: 60, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8854, file: !939, line: 733, column: 59)
!8861 = !DILocation(line: 733, column: 63, scope: !8860)
!8862 = !DILocation(line: 733, column: 71, scope: !8860)
!8863 = !DILocation(line: 733, column: 79, scope: !8860)
!8864 = !DILocation(line: 733, column: 82, scope: !8865)
!8865 = !DILexicalBlockFile(scope: !8860, file: !939, discriminator: 1)
!8866 = !DILocation(line: 733, column: 85, scope: !8865)
!8867 = !DILocation(line: 733, column: 59, scope: !8865)
!8868 = !DILocation(line: 733, column: 94, scope: !8869)
!8869 = !DILexicalBlockFile(scope: !8860, file: !939, discriminator: 2)
!8870 = !DILocation(line: 733, column: 108, scope: !8871)
!8871 = !DILexicalBlockFile(scope: !8854, file: !939, discriminator: 3)
!8872 = !DILocation(line: 733, column: 115, scope: !8873)
!8873 = !DILexicalBlockFile(scope: !8854, file: !939, discriminator: 4)
!8874 = !DILocation(line: 733, column: 120, scope: !8873)
!8875 = !DILocation(line: 733, column: 118, scope: !8873)
!8876 = !DILocation(line: 733, column: 108, scope: !8873)
!8877 = !DILocalVariable(name: "tmp", scope: !8878, file: !939, line: 733, type: !1042)
!8878 = distinct !DILexicalBlock(scope: !8854, file: !939, line: 733, column: 125)
!8879 = !DILocation(line: 733, column: 131, scope: !8878)
!8880 = !DILocation(line: 733, column: 139, scope: !8881)
!8881 = !DILexicalBlockFile(scope: !8878, file: !939, discriminator: 5)
!8882 = !DILocation(line: 733, column: 137, scope: !8881)
!8883 = !DILocation(line: 733, column: 136, scope: !8881)
!8884 = !DILocation(line: 733, column: 143, scope: !8881)
!8885 = !DILocation(line: 733, column: 131, scope: !8881)
!8886 = !DILocation(line: 733, column: 153, scope: !8881)
!8887 = !DILocation(line: 733, column: 156, scope: !8881)
!8888 = !DILocation(line: 733, column: 161, scope: !8889)
!8889 = !DILexicalBlockFile(scope: !8890, file: !939, discriminator: 6)
!8890 = distinct !DILexicalBlock(scope: !8878, file: !939, line: 733, column: 153)
!8891 = !DILocation(line: 733, column: 180, scope: !8892)
!8892 = !DILexicalBlockFile(scope: !8878, file: !939, discriminator: 7)
!8893 = !DILocation(line: 733, column: 182, scope: !8892)
!8894 = !DILocation(line: 733, column: 189, scope: !8892)
!8895 = !DILocation(line: 733, column: 187, scope: !8892)
!8896 = !DILocation(line: 733, column: 177, scope: !8892)
!8897 = !DILocation(line: 733, column: 198, scope: !8892)
!8898 = !DILocation(line: 733, column: 108, scope: !8892)
!8899 = distinct !{!8899, !8900}
!8900 = !DILocation(line: 733, column: 108, scope: !8854)
!8901 = !DILocation(line: 733, column: 214, scope: !8902)
!8902 = !DILexicalBlockFile(scope: !8854, file: !939, discriminator: 8)
!8903 = !DILocation(line: 733, column: 218, scope: !8902)
!8904 = !DILocation(line: 733, column: 224, scope: !8902)
!8905 = !DILocation(line: 733, column: 210, scope: !8902)
!8906 = !DILocation(line: 734, column: 13, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8847, file: !939, line: 734, column: 13)
!8908 = !DILocation(line: 734, column: 16, scope: !8907)
!8909 = !DILocation(line: 734, column: 13, scope: !8847)
!8910 = !DILocation(line: 735, column: 17, scope: !8907)
!8911 = !DILocation(line: 735, column: 13, scope: !8907)
!8912 = !DILocation(line: 737, column: 18, scope: !8907)
!8913 = !DILocation(line: 738, column: 9, scope: !8847)
!8914 = distinct !{!8914, !8841}
!8915 = !DILocation(line: 740, column: 9, scope: !8847)
!8916 = !DILocation(line: 731, column: 5, scope: !8917)
!8917 = !DILexicalBlockFile(scope: !8831, file: !939, discriminator: 2)
!8918 = !DILocation(line: 742, column: 10, scope: !8831)
!8919 = !DILocation(line: 743, column: 12, scope: !8831)
!8920 = !DILocation(line: 743, column: 5, scope: !8831)
!8921 = distinct !DISubprogram(name: "mxf_write_user_comments", scope: !939, file: !939, line: 1493, type: !8922, isLocal: true, isDefinition: true, scopeLine: 1494, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!8922 = !DISubroutineType(types: !8923)
!8923 = !{!1042, !2417, !8924}
!8924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8925, size: 64, align: 64)
!8925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1547)
!8926 = !DILocalVariable(name: "s", arg: 1, scope: !8921, file: !939, line: 1493, type: !2417)
!8927 = !DILocation(line: 1493, column: 53, scope: !8921)
!8928 = !DILocalVariable(name: "m", arg: 2, scope: !8921, file: !939, line: 1493, type: !8924)
!8929 = !DILocation(line: 1493, column: 76, scope: !8921)
!8930 = !DILocalVariable(name: "mxf", scope: !8921, file: !939, line: 1495, type: !2567)
!8931 = !DILocation(line: 1495, column: 17, scope: !8921)
!8932 = !DILocation(line: 1495, column: 23, scope: !8921)
!8933 = !DILocation(line: 1495, column: 26, scope: !8921)
!8934 = !DILocalVariable(name: "t", scope: !8921, file: !939, line: 1496, type: !3245)
!8935 = !DILocation(line: 1496, column: 24, scope: !8921)
!8936 = !DILocalVariable(name: "count", scope: !8921, file: !939, line: 1497, type: !1042)
!8937 = !DILocation(line: 1497, column: 9, scope: !8921)
!8938 = !DILocation(line: 1499, column: 5, scope: !8921)
!8939 = !DILocation(line: 1499, column: 29, scope: !8940)
!8940 = !DILexicalBlockFile(scope: !8921, file: !939, discriminator: 1)
!8941 = !DILocation(line: 1499, column: 44, scope: !8940)
!8942 = !DILocation(line: 1499, column: 17, scope: !8940)
!8943 = !DILocation(line: 1499, column: 15, scope: !8940)
!8944 = !DILocation(line: 1499, column: 5, scope: !8940)
!8945 = !DILocation(line: 1500, column: 13, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8947, file: !939, line: 1500, column: 13)
!8947 = distinct !DILexicalBlock(scope: !8921, file: !939, line: 1499, column: 52)
!8948 = !DILocation(line: 1500, column: 18, scope: !8946)
!8949 = !DILocation(line: 1500, column: 37, scope: !8946)
!8950 = !DILocation(line: 1500, column: 13, scope: !8947)
!8951 = !DILocation(line: 1501, column: 20, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8946, file: !939, line: 1500, column: 51)
!8953 = !DILocation(line: 1501, column: 13, scope: !8952)
!8954 = !DILocation(line: 1502, column: 20, scope: !8952)
!8955 = !DILocation(line: 1502, column: 13, scope: !8952)
!8956 = !DILocation(line: 1505, column: 36, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8947, file: !939, line: 1505, column: 13)
!8958 = !DILocation(line: 1505, column: 39, scope: !8957)
!8959 = !DILocation(line: 1505, column: 42, scope: !8957)
!8960 = !DILocation(line: 1505, column: 46, scope: !8957)
!8961 = !DILocation(line: 1505, column: 51, scope: !8957)
!8962 = !DILocation(line: 1505, column: 54, scope: !8957)
!8963 = !DILocation(line: 1505, column: 13, scope: !8957)
!8964 = !DILocation(line: 1505, column: 61, scope: !8957)
!8965 = !DILocation(line: 1505, column: 13, scope: !8947)
!8966 = !DILocation(line: 1506, column: 18, scope: !8957)
!8967 = !DILocation(line: 1506, column: 13, scope: !8957)
!8968 = !DILocation(line: 1499, column: 5, scope: !8969)
!8969 = !DILexicalBlockFile(scope: !8921, file: !939, discriminator: 2)
!8970 = distinct !{!8970, !8938}
!8971 = !DILocation(line: 1508, column: 12, scope: !8921)
!8972 = !DILocation(line: 1508, column: 5, scope: !8921)
!8973 = !DILocation(line: 1509, column: 1, scope: !8921)
!8974 = distinct !DISubprogram(name: "mxf_write_umid", scope: !939, file: !939, line: 519, type: !8975, isLocal: true, isDefinition: true, scopeLine: 520, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!8975 = !DISubroutineType(types: !8976)
!8976 = !{null, !2417, !1042}
!8977 = !DILocalVariable(name: "s", arg: 1, scope: !8974, file: !939, line: 519, type: !2417)
!8978 = !DILocation(line: 519, column: 45, scope: !8974)
!8979 = !DILocalVariable(name: "type", arg: 2, scope: !8974, file: !939, line: 519, type: !1042)
!8980 = !DILocation(line: 519, column: 52, scope: !8974)
!8981 = !DILocalVariable(name: "mxf", scope: !8974, file: !939, line: 521, type: !2567)
!8982 = !DILocation(line: 521, column: 17, scope: !8974)
!8983 = !DILocation(line: 521, column: 23, scope: !8974)
!8984 = !DILocation(line: 521, column: 26, scope: !8974)
!8985 = !DILocation(line: 522, column: 16, scope: !8974)
!8986 = !DILocation(line: 522, column: 19, scope: !8974)
!8987 = !DILocation(line: 522, column: 5, scope: !8974)
!8988 = !DILocation(line: 523, column: 15, scope: !8974)
!8989 = !DILocation(line: 523, column: 18, scope: !8974)
!8990 = !DILocation(line: 523, column: 22, scope: !8974)
!8991 = !DILocation(line: 523, column: 27, scope: !8974)
!8992 = !DILocation(line: 523, column: 5, scope: !8974)
!8993 = !DILocation(line: 524, column: 16, scope: !8974)
!8994 = !DILocation(line: 524, column: 19, scope: !8974)
!8995 = !DILocation(line: 524, column: 23, scope: !8974)
!8996 = !DILocation(line: 524, column: 28, scope: !8974)
!8997 = !DILocation(line: 524, column: 5, scope: !8974)
!8998 = !DILocation(line: 525, column: 13, scope: !8974)
!8999 = !DILocation(line: 525, column: 16, scope: !8974)
!9000 = !DILocation(line: 525, column: 20, scope: !8974)
!9001 = !DILocation(line: 525, column: 5, scope: !8974)
!9002 = !DILocation(line: 526, column: 1, scope: !8974)
!9003 = distinct !DISubprogram(name: "mxf_write_multi_descriptor", scope: !939, file: !939, line: 1047, type: !4227, isLocal: true, isDefinition: true, scopeLine: 1048, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!9004 = !DILocalVariable(name: "s", arg: 1, scope: !9003, file: !939, line: 1047, type: !2417)
!9005 = !DILocation(line: 1047, column: 57, scope: !9003)
!9006 = !DILocalVariable(name: "mxf", scope: !9003, file: !939, line: 1049, type: !2567)
!9007 = !DILocation(line: 1049, column: 17, scope: !9003)
!9008 = !DILocation(line: 1049, column: 23, scope: !9003)
!9009 = !DILocation(line: 1049, column: 26, scope: !9003)
!9010 = !DILocalVariable(name: "pb", scope: !9003, file: !939, line: 1050, type: !1309)
!9011 = !DILocation(line: 1050, column: 18, scope: !9003)
!9012 = !DILocation(line: 1050, column: 23, scope: !9003)
!9013 = !DILocation(line: 1050, column: 26, scope: !9003)
!9014 = !DILocalVariable(name: "ul", scope: !9003, file: !939, line: 1051, type: !1092)
!9015 = !DILocation(line: 1051, column: 20, scope: !9003)
!9016 = !DILocalVariable(name: "i", scope: !9003, file: !939, line: 1052, type: !1042)
!9017 = !DILocation(line: 1052, column: 9, scope: !9003)
!9018 = !DILocation(line: 1054, column: 28, scope: !9003)
!9019 = !DILocation(line: 1054, column: 5, scope: !9003)
!9020 = !DILocation(line: 1055, column: 5, scope: !9003)
!9021 = distinct !{!9021, !9020}
!9022 = !DILocation(line: 1055, column: 563, scope: !9023)
!9023 = !DILexicalBlockFile(scope: !9024, file: !939, discriminator: 1)
!9024 = distinct !DILexicalBlock(scope: !9003, file: !939, line: 1055, column: 8)
!9025 = !DILocation(line: 1056, column: 27, scope: !9003)
!9026 = !DILocation(line: 1056, column: 43, scope: !9003)
!9027 = !DILocation(line: 1056, column: 46, scope: !9003)
!9028 = !DILocation(line: 1056, column: 41, scope: !9003)
!9029 = !DILocation(line: 1056, column: 34, scope: !9003)
!9030 = !DILocation(line: 1056, column: 5, scope: !9003)
!9031 = !DILocation(line: 1058, column: 25, scope: !9003)
!9032 = !DILocation(line: 1058, column: 5, scope: !9003)
!9033 = !DILocation(line: 1059, column: 20, scope: !9003)
!9034 = !DILocation(line: 1059, column: 5, scope: !9003)
!9035 = !DILocation(line: 1060, column: 5, scope: !9003)
!9036 = distinct !{!9036, !9035}
!9037 = !DILocation(line: 1060, column: 554, scope: !9038)
!9038 = !DILexicalBlockFile(scope: !9039, file: !939, discriminator: 1)
!9039 = distinct !DILexicalBlock(scope: !9003, file: !939, line: 1060, column: 8)
!9040 = !DILocation(line: 1063, column: 25, scope: !9003)
!9041 = !DILocation(line: 1063, column: 5, scope: !9003)
!9042 = !DILocation(line: 1064, column: 15, scope: !9003)
!9043 = !DILocation(line: 1064, column: 19, scope: !9003)
!9044 = !DILocation(line: 1064, column: 24, scope: !9003)
!9045 = !DILocation(line: 1064, column: 34, scope: !9003)
!9046 = !DILocation(line: 1064, column: 5, scope: !9003)
!9047 = !DILocation(line: 1065, column: 15, scope: !9003)
!9048 = !DILocation(line: 1065, column: 19, scope: !9003)
!9049 = !DILocation(line: 1065, column: 24, scope: !9003)
!9050 = !DILocation(line: 1065, column: 34, scope: !9003)
!9051 = !DILocation(line: 1065, column: 5, scope: !9003)
!9052 = !DILocation(line: 1068, column: 25, scope: !9003)
!9053 = !DILocation(line: 1068, column: 5, scope: !9003)
!9054 = !DILocation(line: 1069, column: 9, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9003, file: !939, line: 1069, column: 9)
!9056 = !DILocation(line: 1069, column: 14, scope: !9055)
!9057 = !DILocation(line: 1069, column: 38, scope: !9055)
!9058 = !DILocation(line: 1069, column: 9, scope: !9003)
!9059 = !DILocation(line: 1070, column: 12, scope: !9055)
!9060 = !DILocation(line: 1070, column: 9, scope: !9055)
!9061 = !DILocalVariable(name: "sc", scope: !9062, file: !939, line: 1072, type: !1011)
!9062 = distinct !DILexicalBlock(scope: !9055, file: !939, line: 1071, column: 10)
!9063 = !DILocation(line: 1072, column: 27, scope: !9062)
!9064 = !DILocation(line: 1072, column: 32, scope: !9062)
!9065 = !DILocation(line: 1072, column: 35, scope: !9062)
!9066 = !DILocation(line: 1072, column: 47, scope: !9062)
!9067 = !DILocation(line: 1073, column: 40, scope: !9062)
!9068 = !DILocation(line: 1073, column: 44, scope: !9062)
!9069 = !DILocation(line: 1073, column: 14, scope: !9062)
!9070 = !DILocation(line: 1073, column: 51, scope: !9062)
!9071 = !DILocation(line: 1073, column: 12, scope: !9062)
!9072 = !DILocation(line: 1075, column: 16, scope: !9003)
!9073 = !DILocation(line: 1075, column: 20, scope: !9003)
!9074 = !DILocation(line: 1075, column: 5, scope: !9003)
!9075 = !DILocation(line: 1078, column: 25, scope: !9003)
!9076 = !DILocation(line: 1078, column: 29, scope: !9003)
!9077 = !DILocation(line: 1078, column: 32, scope: !9003)
!9078 = !DILocation(line: 1078, column: 43, scope: !9003)
!9079 = !DILocation(line: 1078, column: 48, scope: !9003)
!9080 = !DILocation(line: 1078, column: 5, scope: !9003)
!9081 = !DILocation(line: 1079, column: 26, scope: !9003)
!9082 = !DILocation(line: 1079, column: 30, scope: !9003)
!9083 = !DILocation(line: 1079, column: 33, scope: !9003)
!9084 = !DILocation(line: 1079, column: 5, scope: !9003)
!9085 = !DILocation(line: 1080, column: 12, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9003, file: !939, line: 1080, column: 5)
!9087 = !DILocation(line: 1080, column: 10, scope: !9086)
!9088 = !DILocation(line: 1080, column: 17, scope: !9089)
!9089 = !DILexicalBlockFile(scope: !9090, file: !939, discriminator: 1)
!9090 = distinct !DILexicalBlock(scope: !9086, file: !939, line: 1080, column: 5)
!9091 = !DILocation(line: 1080, column: 21, scope: !9089)
!9092 = !DILocation(line: 1080, column: 24, scope: !9089)
!9093 = !DILocation(line: 1080, column: 19, scope: !9089)
!9094 = !DILocation(line: 1080, column: 5, scope: !9089)
!9095 = !DILocation(line: 1081, column: 24, scope: !9090)
!9096 = !DILocation(line: 1081, column: 43, scope: !9090)
!9097 = !DILocation(line: 1081, column: 9, scope: !9090)
!9098 = !DILocation(line: 1080, column: 37, scope: !9099)
!9099 = !DILexicalBlockFile(scope: !9090, file: !939, discriminator: 2)
!9100 = !DILocation(line: 1080, column: 5, scope: !9099)
!9101 = distinct !{!9101, !9102}
!9102 = !DILocation(line: 1080, column: 5, scope: !9003)
!9103 = !DILocation(line: 1082, column: 1, scope: !9003)
!9104 = distinct !DISubprogram(name: "mxf_write_tape_descriptor", scope: !939, file: !939, line: 1034, type: !4227, isLocal: true, isDefinition: true, scopeLine: 1035, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!9105 = !DILocalVariable(name: "s", arg: 1, scope: !9104, file: !939, line: 1034, type: !2417)
!9106 = !DILocation(line: 1034, column: 56, scope: !9104)
!9107 = !DILocalVariable(name: "pb", scope: !9104, file: !939, line: 1036, type: !1309)
!9108 = !DILocation(line: 1036, column: 18, scope: !9104)
!9109 = !DILocation(line: 1036, column: 23, scope: !9104)
!9110 = !DILocation(line: 1036, column: 26, scope: !9104)
!9111 = !DILocation(line: 1038, column: 28, scope: !9104)
!9112 = !DILocation(line: 1038, column: 5, scope: !9104)
!9113 = !DILocation(line: 1039, column: 5, scope: !9104)
!9114 = distinct !{!9114, !9113}
!9115 = !DILocation(line: 1039, column: 559, scope: !9116)
!9116 = !DILexicalBlockFile(scope: !9117, file: !939, discriminator: 1)
!9117 = distinct !DILexicalBlock(scope: !9104, file: !939, line: 1039, column: 8)
!9118 = !DILocation(line: 1040, column: 27, scope: !9104)
!9119 = !DILocation(line: 1040, column: 5, scope: !9104)
!9120 = !DILocation(line: 1041, column: 25, scope: !9104)
!9121 = !DILocation(line: 1041, column: 5, scope: !9104)
!9122 = !DILocation(line: 1042, column: 20, scope: !9104)
!9123 = !DILocation(line: 1042, column: 5, scope: !9104)
!9124 = !DILocation(line: 1043, column: 5, scope: !9104)
!9125 = distinct !{!9125, !9124}
!9126 = !DILocation(line: 1043, column: 553, scope: !9127)
!9127 = !DILexicalBlockFile(scope: !9128, file: !939, discriminator: 1)
!9128 = distinct !DILexicalBlock(scope: !9104, file: !939, line: 1043, column: 8)
!9129 = !DILocation(line: 1044, column: 1, scope: !9104)
!9130 = distinct !DISubprogram(name: "mxf_write_track", scope: !939, file: !939, line: 871, type: !9131, isLocal: true, isDefinition: true, scopeLine: 872, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{null, !2417, !1375, !8301}
!9133 = !DILocalVariable(name: "s", arg: 1, scope: !9130, file: !939, line: 871, type: !2417)
!9134 = !DILocation(line: 871, column: 46, scope: !9130)
!9135 = !DILocalVariable(name: "st", arg: 2, scope: !9130, file: !939, line: 871, type: !1375)
!9136 = !DILocation(line: 871, column: 59, scope: !9130)
!9137 = !DILocalVariable(name: "package", arg: 3, scope: !9130, file: !939, line: 871, type: !8301)
!9138 = !DILocation(line: 871, column: 75, scope: !9130)
!9139 = !DILocalVariable(name: "mxf", scope: !9130, file: !939, line: 873, type: !2567)
!9140 = !DILocation(line: 873, column: 17, scope: !9130)
!9141 = !DILocation(line: 873, column: 23, scope: !9130)
!9142 = !DILocation(line: 873, column: 26, scope: !9130)
!9143 = !DILocalVariable(name: "pb", scope: !9130, file: !939, line: 874, type: !1309)
!9144 = !DILocation(line: 874, column: 18, scope: !9130)
!9145 = !DILocation(line: 874, column: 23, scope: !9130)
!9146 = !DILocation(line: 874, column: 26, scope: !9130)
!9147 = !DILocalVariable(name: "sc", scope: !9130, file: !939, line: 875, type: !1011)
!9148 = !DILocation(line: 875, column: 23, scope: !9130)
!9149 = !DILocation(line: 875, column: 28, scope: !9130)
!9150 = !DILocation(line: 875, column: 32, scope: !9130)
!9151 = !DILocation(line: 877, column: 28, scope: !9130)
!9152 = !DILocation(line: 877, column: 5, scope: !9130)
!9153 = !DILocation(line: 878, column: 5, scope: !9130)
!9154 = distinct !{!9154, !9153}
!9155 = !DILocation(line: 878, column: 549, scope: !9156)
!9156 = !DILexicalBlockFile(scope: !9157, file: !939, discriminator: 1)
!9157 = distinct !DILexicalBlock(scope: !9130, file: !939, line: 878, column: 8)
!9158 = !DILocation(line: 879, column: 27, scope: !9130)
!9159 = !DILocation(line: 879, column: 5, scope: !9130)
!9160 = !DILocation(line: 882, column: 25, scope: !9130)
!9161 = !DILocation(line: 882, column: 5, scope: !9130)
!9162 = !DILocation(line: 883, column: 20, scope: !9130)
!9163 = !DILocation(line: 883, column: 31, scope: !9130)
!9164 = !DILocation(line: 883, column: 36, scope: !9130)
!9165 = !DILocation(line: 883, column: 5, scope: !9130)
!9166 = !DILocation(line: 884, column: 5, scope: !9130)
!9167 = distinct !{!9167, !9166}
!9168 = !DILocation(line: 884, column: 549, scope: !9169)
!9169 = !DILexicalBlockFile(scope: !9170, file: !939, discriminator: 1)
!9170 = distinct !DILexicalBlock(scope: !9130, file: !939, line: 884, column: 8)
!9171 = !DILocation(line: 887, column: 25, scope: !9130)
!9172 = !DILocation(line: 887, column: 5, scope: !9130)
!9173 = !DILocation(line: 888, column: 15, scope: !9130)
!9174 = !DILocation(line: 888, column: 19, scope: !9130)
!9175 = !DILocation(line: 888, column: 23, scope: !9130)
!9176 = !DILocation(line: 888, column: 28, scope: !9130)
!9177 = !DILocation(line: 888, column: 5, scope: !9130)
!9178 = !DILocation(line: 891, column: 25, scope: !9130)
!9179 = !DILocation(line: 891, column: 5, scope: !9130)
!9180 = !DILocation(line: 892, column: 9, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9130, file: !939, line: 892, column: 9)
!9182 = !DILocation(line: 892, column: 18, scope: !9181)
!9183 = !DILocation(line: 892, column: 23, scope: !9181)
!9184 = !DILocation(line: 892, column: 9, scope: !9130)
!9185 = !DILocation(line: 893, column: 19, scope: !9181)
!9186 = !DILocation(line: 893, column: 9, scope: !9181)
!9187 = !DILocation(line: 895, column: 20, scope: !9181)
!9188 = !DILocation(line: 895, column: 24, scope: !9181)
!9189 = !DILocation(line: 895, column: 28, scope: !9181)
!9190 = !DILocation(line: 895, column: 54, scope: !9181)
!9191 = !DILocation(line: 895, column: 9, scope: !9181)
!9192 = !DILocation(line: 898, column: 25, scope: !9130)
!9193 = !DILocation(line: 898, column: 5, scope: !9130)
!9194 = !DILocation(line: 900, column: 9, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9130, file: !939, line: 900, column: 9)
!9196 = !DILocation(line: 900, column: 15, scope: !9195)
!9197 = !DILocation(line: 900, column: 20, scope: !9195)
!9198 = !DILocation(line: 900, column: 12, scope: !9195)
!9199 = !DILocation(line: 900, column: 35, scope: !9195)
!9200 = !DILocation(line: 900, column: 38, scope: !9201)
!9201 = !DILexicalBlockFile(scope: !9195, file: !939, discriminator: 1)
!9202 = !DILocation(line: 900, column: 41, scope: !9201)
!9203 = !DILocation(line: 900, column: 49, scope: !9201)
!9204 = !DILocation(line: 900, column: 9, scope: !9201)
!9205 = !DILocation(line: 901, column: 19, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9195, file: !939, line: 900, column: 74)
!9207 = !DILocation(line: 901, column: 23, scope: !9206)
!9208 = !DILocation(line: 901, column: 28, scope: !9206)
!9209 = !DILocation(line: 901, column: 31, scope: !9206)
!9210 = !DILocation(line: 901, column: 36, scope: !9206)
!9211 = !DILocation(line: 901, column: 9, scope: !9206)
!9212 = !DILocation(line: 902, column: 19, scope: !9206)
!9213 = !DILocation(line: 902, column: 23, scope: !9206)
!9214 = !DILocation(line: 902, column: 28, scope: !9206)
!9215 = !DILocation(line: 902, column: 31, scope: !9206)
!9216 = !DILocation(line: 902, column: 36, scope: !9206)
!9217 = !DILocation(line: 902, column: 9, scope: !9206)
!9218 = !DILocation(line: 903, column: 5, scope: !9206)
!9219 = !DILocation(line: 904, column: 19, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9195, file: !939, line: 903, column: 12)
!9221 = !DILocation(line: 904, column: 23, scope: !9220)
!9222 = !DILocation(line: 904, column: 28, scope: !9220)
!9223 = !DILocation(line: 904, column: 38, scope: !9220)
!9224 = !DILocation(line: 904, column: 9, scope: !9220)
!9225 = !DILocation(line: 905, column: 19, scope: !9220)
!9226 = !DILocation(line: 905, column: 23, scope: !9220)
!9227 = !DILocation(line: 905, column: 28, scope: !9220)
!9228 = !DILocation(line: 905, column: 38, scope: !9220)
!9229 = !DILocation(line: 905, column: 9, scope: !9220)
!9230 = !DILocation(line: 909, column: 25, scope: !9130)
!9231 = !DILocation(line: 909, column: 5, scope: !9130)
!9232 = !DILocation(line: 910, column: 15, scope: !9130)
!9233 = !DILocation(line: 910, column: 5, scope: !9130)
!9234 = !DILocation(line: 913, column: 25, scope: !9130)
!9235 = !DILocation(line: 913, column: 5, scope: !9130)
!9236 = !DILocation(line: 914, column: 20, scope: !9130)
!9237 = !DILocation(line: 914, column: 34, scope: !9130)
!9238 = !DILocation(line: 914, column: 39, scope: !9130)
!9239 = !DILocation(line: 914, column: 5, scope: !9130)
!9240 = !DILocation(line: 915, column: 1, scope: !9130)
!9241 = distinct !DISubprogram(name: "mxf_write_sequence", scope: !939, file: !939, line: 943, type: !9131, isLocal: true, isDefinition: true, scopeLine: 944, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!9242 = !DILocalVariable(name: "s", arg: 1, scope: !9241, file: !939, line: 943, type: !2417)
!9243 = !DILocation(line: 943, column: 49, scope: !9241)
!9244 = !DILocalVariable(name: "st", arg: 2, scope: !9241, file: !939, line: 943, type: !1375)
!9245 = !DILocation(line: 943, column: 62, scope: !9241)
!9246 = !DILocalVariable(name: "package", arg: 3, scope: !9241, file: !939, line: 943, type: !8301)
!9247 = !DILocation(line: 943, column: 78, scope: !9241)
!9248 = !DILocalVariable(name: "mxf", scope: !9241, file: !939, line: 945, type: !2567)
!9249 = !DILocation(line: 945, column: 17, scope: !9241)
!9250 = !DILocation(line: 945, column: 23, scope: !9241)
!9251 = !DILocation(line: 945, column: 26, scope: !9241)
!9252 = !DILocalVariable(name: "pb", scope: !9241, file: !939, line: 946, type: !1309)
!9253 = !DILocation(line: 946, column: 18, scope: !9241)
!9254 = !DILocation(line: 946, column: 23, scope: !9241)
!9255 = !DILocation(line: 946, column: 26, scope: !9241)
!9256 = !DILocalVariable(name: "component", scope: !9241, file: !939, line: 947, type: !972)
!9257 = !DILocation(line: 947, column: 29, scope: !9241)
!9258 = !DILocation(line: 949, column: 28, scope: !9241)
!9259 = !DILocation(line: 949, column: 5, scope: !9241)
!9260 = !DILocation(line: 950, column: 5, scope: !9241)
!9261 = distinct !{!9261, !9260}
!9262 = !DILocation(line: 950, column: 552, scope: !9263)
!9263 = !DILexicalBlockFile(scope: !9264, file: !939, discriminator: 1)
!9264 = distinct !DILexicalBlock(scope: !9241, file: !939, line: 950, column: 8)
!9265 = !DILocation(line: 951, column: 27, scope: !9241)
!9266 = !DILocation(line: 951, column: 5, scope: !9241)
!9267 = !DILocation(line: 953, column: 25, scope: !9241)
!9268 = !DILocation(line: 953, column: 5, scope: !9241)
!9269 = !DILocation(line: 954, column: 20, scope: !9241)
!9270 = !DILocation(line: 954, column: 34, scope: !9241)
!9271 = !DILocation(line: 954, column: 39, scope: !9241)
!9272 = !DILocation(line: 954, column: 5, scope: !9241)
!9273 = !DILocation(line: 956, column: 5, scope: !9241)
!9274 = distinct !{!9274, !9273}
!9275 = !DILocation(line: 956, column: 552, scope: !9276)
!9276 = !DILexicalBlockFile(scope: !9277, file: !939, discriminator: 1)
!9277 = distinct !DILexicalBlock(scope: !9241, file: !939, line: 956, column: 8)
!9278 = !DILocation(line: 957, column: 29, scope: !9241)
!9279 = !DILocation(line: 957, column: 32, scope: !9241)
!9280 = !DILocation(line: 957, column: 5, scope: !9241)
!9281 = !DILocation(line: 960, column: 25, scope: !9241)
!9282 = !DILocation(line: 960, column: 5, scope: !9241)
!9283 = !DILocation(line: 961, column: 26, scope: !9241)
!9284 = !DILocation(line: 961, column: 5, scope: !9241)
!9285 = !DILocation(line: 962, column: 9, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9241, file: !939, line: 962, column: 9)
!9287 = !DILocation(line: 962, column: 15, scope: !9286)
!9288 = !DILocation(line: 962, column: 20, scope: !9286)
!9289 = !DILocation(line: 962, column: 12, scope: !9286)
!9290 = !DILocation(line: 962, column: 9, scope: !9241)
!9291 = !DILocation(line: 963, column: 19, scope: !9286)
!9292 = !DILocation(line: 963, column: 9, scope: !9286)
!9293 = !DILocation(line: 965, column: 19, scope: !9286)
!9294 = !DILocation(line: 967, column: 20, scope: !9241)
!9295 = !DILocation(line: 967, column: 24, scope: !9241)
!9296 = !DILocation(line: 967, column: 35, scope: !9241)
!9297 = !DILocation(line: 967, column: 40, scope: !9241)
!9298 = !DILocation(line: 967, column: 5, scope: !9241)
!9299 = !DILocation(line: 968, column: 1, scope: !9241)
!9300 = distinct !DISubprogram(name: "mxf_write_timecode_component", scope: !939, file: !939, line: 970, type: !9131, isLocal: true, isDefinition: true, scopeLine: 971, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!9301 = !DILocalVariable(name: "s", arg: 1, scope: !9300, file: !939, line: 970, type: !2417)
!9302 = !DILocation(line: 970, column: 59, scope: !9300)
!9303 = !DILocalVariable(name: "st", arg: 2, scope: !9300, file: !939, line: 970, type: !1375)
!9304 = !DILocation(line: 970, column: 72, scope: !9300)
!9305 = !DILocalVariable(name: "package", arg: 3, scope: !9300, file: !939, line: 970, type: !8301)
!9306 = !DILocation(line: 970, column: 88, scope: !9300)
!9307 = !DILocalVariable(name: "mxf", scope: !9300, file: !939, line: 972, type: !2567)
!9308 = !DILocation(line: 972, column: 17, scope: !9300)
!9309 = !DILocation(line: 972, column: 23, scope: !9300)
!9310 = !DILocation(line: 972, column: 26, scope: !9300)
!9311 = !DILocalVariable(name: "pb", scope: !9300, file: !939, line: 973, type: !1309)
!9312 = !DILocation(line: 973, column: 18, scope: !9300)
!9313 = !DILocation(line: 973, column: 23, scope: !9300)
!9314 = !DILocation(line: 973, column: 26, scope: !9300)
!9315 = !DILocation(line: 975, column: 28, scope: !9300)
!9316 = !DILocation(line: 975, column: 5, scope: !9300)
!9317 = !DILocation(line: 976, column: 27, scope: !9300)
!9318 = !DILocation(line: 976, column: 5, scope: !9300)
!9319 = !DILocation(line: 979, column: 25, scope: !9300)
!9320 = !DILocation(line: 979, column: 5, scope: !9300)
!9321 = !DILocation(line: 980, column: 20, scope: !9300)
!9322 = !DILocation(line: 980, column: 43, scope: !9300)
!9323 = !DILocation(line: 980, column: 48, scope: !9300)
!9324 = !DILocation(line: 980, column: 5, scope: !9300)
!9325 = !DILocation(line: 982, column: 29, scope: !9300)
!9326 = !DILocation(line: 982, column: 32, scope: !9300)
!9327 = !DILocation(line: 982, column: 5, scope: !9300)
!9328 = !DILocation(line: 985, column: 25, scope: !9300)
!9329 = !DILocation(line: 985, column: 5, scope: !9300)
!9330 = !DILocation(line: 986, column: 15, scope: !9300)
!9331 = !DILocation(line: 986, column: 19, scope: !9300)
!9332 = !DILocation(line: 986, column: 24, scope: !9300)
!9333 = !DILocation(line: 986, column: 27, scope: !9300)
!9334 = !DILocation(line: 986, column: 5, scope: !9300)
!9335 = !DILocation(line: 989, column: 25, scope: !9300)
!9336 = !DILocation(line: 989, column: 5, scope: !9300)
!9337 = !DILocation(line: 990, column: 15, scope: !9300)
!9338 = !DILocation(line: 990, column: 19, scope: !9300)
!9339 = !DILocation(line: 990, column: 24, scope: !9300)
!9340 = !DILocation(line: 990, column: 5, scope: !9300)
!9341 = !DILocation(line: 993, column: 25, scope: !9300)
!9342 = !DILocation(line: 993, column: 5, scope: !9300)
!9343 = !DILocation(line: 994, column: 13, scope: !9300)
!9344 = !DILocation(line: 994, column: 20, scope: !9300)
!9345 = !DILocation(line: 994, column: 25, scope: !9300)
!9346 = !DILocation(line: 994, column: 28, scope: !9300)
!9347 = !DILocation(line: 994, column: 34, scope: !9300)
!9348 = !DILocation(line: 994, column: 18, scope: !9300)
!9349 = !DILocation(line: 994, column: 17, scope: !9300)
!9350 = !DILocation(line: 994, column: 5, scope: !9300)
!9351 = !DILocation(line: 995, column: 1, scope: !9300)
!9352 = distinct !DISubprogram(name: "mxf_write_structural_component", scope: !939, file: !939, line: 997, type: !9131, isLocal: true, isDefinition: true, scopeLine: 998, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!9353 = !DILocalVariable(name: "s", arg: 1, scope: !9352, file: !939, line: 997, type: !2417)
!9354 = !DILocation(line: 997, column: 61, scope: !9352)
!9355 = !DILocalVariable(name: "st", arg: 2, scope: !9352, file: !939, line: 997, type: !1375)
!9356 = !DILocation(line: 997, column: 74, scope: !9352)
!9357 = !DILocalVariable(name: "package", arg: 3, scope: !9352, file: !939, line: 997, type: !8301)
!9358 = !DILocation(line: 997, column: 90, scope: !9352)
!9359 = !DILocalVariable(name: "mxf", scope: !9352, file: !939, line: 999, type: !2567)
!9360 = !DILocation(line: 999, column: 17, scope: !9352)
!9361 = !DILocation(line: 999, column: 23, scope: !9352)
!9362 = !DILocation(line: 999, column: 26, scope: !9352)
!9363 = !DILocalVariable(name: "pb", scope: !9352, file: !939, line: 1000, type: !1309)
!9364 = !DILocation(line: 1000, column: 18, scope: !9352)
!9365 = !DILocation(line: 1000, column: 23, scope: !9352)
!9366 = !DILocation(line: 1000, column: 26, scope: !9352)
!9367 = !DILocalVariable(name: "i", scope: !9352, file: !939, line: 1001, type: !1042)
!9368 = !DILocation(line: 1001, column: 9, scope: !9352)
!9369 = !DILocation(line: 1003, column: 28, scope: !9352)
!9370 = !DILocation(line: 1003, column: 5, scope: !9352)
!9371 = !DILocation(line: 1004, column: 5, scope: !9352)
!9372 = distinct !{!9372, !9371}
!9373 = !DILocation(line: 1004, column: 564, scope: !9374)
!9374 = !DILexicalBlockFile(scope: !9375, file: !939, discriminator: 1)
!9375 = distinct !DILexicalBlock(scope: !9352, file: !939, line: 1004, column: 8)
!9376 = !DILocation(line: 1005, column: 27, scope: !9352)
!9377 = !DILocation(line: 1005, column: 5, scope: !9352)
!9378 = !DILocation(line: 1008, column: 25, scope: !9352)
!9379 = !DILocation(line: 1008, column: 5, scope: !9352)
!9380 = !DILocation(line: 1009, column: 20, scope: !9352)
!9381 = !DILocation(line: 1009, column: 36, scope: !9352)
!9382 = !DILocation(line: 1009, column: 41, scope: !9352)
!9383 = !DILocation(line: 1009, column: 5, scope: !9352)
!9384 = !DILocation(line: 1011, column: 5, scope: !9352)
!9385 = distinct !{!9385, !9384}
!9386 = !DILocation(line: 1011, column: 564, scope: !9387)
!9387 = !DILexicalBlockFile(scope: !9388, file: !939, discriminator: 1)
!9388 = distinct !DILexicalBlock(scope: !9352, file: !939, line: 1011, column: 8)
!9389 = !DILocation(line: 1012, column: 29, scope: !9352)
!9390 = !DILocation(line: 1012, column: 32, scope: !9352)
!9391 = !DILocation(line: 1012, column: 5, scope: !9352)
!9392 = !DILocation(line: 1015, column: 25, scope: !9352)
!9393 = !DILocation(line: 1015, column: 5, scope: !9352)
!9394 = !DILocation(line: 1016, column: 15, scope: !9352)
!9395 = !DILocation(line: 1016, column: 5, scope: !9352)
!9396 = !DILocation(line: 1019, column: 25, scope: !9352)
!9397 = !DILocation(line: 1019, column: 5, scope: !9352)
!9398 = !DILocation(line: 1020, column: 10, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9352, file: !939, line: 1020, column: 9)
!9400 = !DILocation(line: 1020, column: 19, scope: !9399)
!9401 = !DILocation(line: 1020, column: 9, scope: !9352)
!9402 = !DILocation(line: 1021, column: 16, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9404, file: !939, line: 1021, column: 9)
!9404 = distinct !DILexicalBlock(scope: !9399, file: !939, line: 1020, column: 24)
!9405 = !DILocation(line: 1021, column: 14, scope: !9403)
!9406 = !DILocation(line: 1021, column: 21, scope: !9407)
!9407 = !DILexicalBlockFile(scope: !9408, file: !939, discriminator: 1)
!9408 = distinct !DILexicalBlock(scope: !9403, file: !939, line: 1021, column: 9)
!9409 = !DILocation(line: 1021, column: 23, scope: !9407)
!9410 = !DILocation(line: 1021, column: 9, scope: !9407)
!9411 = !DILocation(line: 1022, column: 23, scope: !9408)
!9412 = !DILocation(line: 1022, column: 13, scope: !9408)
!9413 = !DILocation(line: 1021, column: 29, scope: !9414)
!9414 = !DILexicalBlockFile(scope: !9408, file: !939, discriminator: 2)
!9415 = !DILocation(line: 1021, column: 9, scope: !9414)
!9416 = distinct !{!9416, !9417}
!9417 = !DILocation(line: 1021, column: 9, scope: !9404)
!9418 = !DILocation(line: 1023, column: 5, scope: !9404)
!9419 = !DILocation(line: 1024, column: 24, scope: !9399)
!9420 = !DILocation(line: 1024, column: 27, scope: !9399)
!9421 = !DILocation(line: 1024, column: 36, scope: !9399)
!9422 = !DILocation(line: 1024, column: 41, scope: !9399)
!9423 = !DILocation(line: 1024, column: 9, scope: !9399)
!9424 = !DILocation(line: 1027, column: 25, scope: !9352)
!9425 = !DILocation(line: 1027, column: 5, scope: !9352)
!9426 = !DILocation(line: 1028, column: 9, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9352, file: !939, line: 1028, column: 9)
!9428 = !DILocation(line: 1028, column: 18, scope: !9427)
!9429 = !DILocation(line: 1028, column: 23, scope: !9427)
!9430 = !DILocation(line: 1028, column: 40, scope: !9427)
!9431 = !DILocation(line: 1028, column: 44, scope: !9432)
!9432 = !DILexicalBlockFile(scope: !9427, file: !939, discriminator: 1)
!9433 = !DILocation(line: 1028, column: 53, scope: !9432)
!9434 = !DILocation(line: 1028, column: 9, scope: !9432)
!9435 = !DILocation(line: 1029, column: 19, scope: !9427)
!9436 = !DILocation(line: 1029, column: 9, scope: !9427)
!9437 = !DILocation(line: 1031, column: 19, scope: !9427)
!9438 = !DILocation(line: 1031, column: 23, scope: !9427)
!9439 = !DILocation(line: 1031, column: 27, scope: !9427)
!9440 = !DILocation(line: 1031, column: 32, scope: !9427)
!9441 = !DILocation(line: 1031, column: 9, scope: !9427)
!9442 = !DILocation(line: 1032, column: 1, scope: !9352)
!9443 = distinct !DISubprogram(name: "mxf_write_tagged_value", scope: !939, file: !939, line: 1464, type: !9444, isLocal: true, isDefinition: true, scopeLine: 1465, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!9444 = !DISubroutineType(types: !9445)
!9445 = !{!1042, !2417, !1107, !1107}
!9446 = !DILocalVariable(name: "s", arg: 1, scope: !9443, file: !939, line: 1464, type: !2417)
!9447 = !DILocation(line: 1464, column: 52, scope: !9443)
!9448 = !DILocalVariable(name: "name", arg: 2, scope: !9443, file: !939, line: 1464, type: !1107)
!9449 = !DILocation(line: 1464, column: 67, scope: !9443)
!9450 = !DILocalVariable(name: "value", arg: 3, scope: !9443, file: !939, line: 1464, type: !1107)
!9451 = !DILocation(line: 1464, column: 85, scope: !9443)
!9452 = !DILocalVariable(name: "mxf", scope: !9443, file: !939, line: 1466, type: !2567)
!9453 = !DILocation(line: 1466, column: 17, scope: !9443)
!9454 = !DILocation(line: 1466, column: 23, scope: !9443)
!9455 = !DILocation(line: 1466, column: 26, scope: !9443)
!9456 = !DILocalVariable(name: "pb", scope: !9443, file: !939, line: 1467, type: !1309)
!9457 = !DILocation(line: 1467, column: 18, scope: !9443)
!9458 = !DILocation(line: 1467, column: 23, scope: !9443)
!9459 = !DILocation(line: 1467, column: 26, scope: !9443)
!9460 = !DILocalVariable(name: "name_size", scope: !9443, file: !939, line: 1468, type: !1042)
!9461 = !DILocation(line: 1468, column: 9, scope: !9443)
!9462 = !DILocation(line: 1468, column: 48, scope: !9443)
!9463 = !DILocation(line: 1468, column: 21, scope: !9443)
!9464 = !DILocalVariable(name: "indirect_value_size", scope: !9443, file: !939, line: 1469, type: !1042)
!9465 = !DILocation(line: 1469, column: 9, scope: !9443)
!9466 = !DILocation(line: 1469, column: 63, scope: !9443)
!9467 = !DILocation(line: 1469, column: 36, scope: !9443)
!9468 = !DILocation(line: 1469, column: 34, scope: !9443)
!9469 = !DILocation(line: 1471, column: 10, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9443, file: !939, line: 1471, column: 9)
!9471 = !DILocation(line: 1471, column: 20, scope: !9470)
!9472 = !DILocation(line: 1471, column: 23, scope: !9473)
!9473 = !DILexicalBlockFile(scope: !9470, file: !939, discriminator: 1)
!9474 = !DILocation(line: 1471, column: 43, scope: !9473)
!9475 = !DILocation(line: 1471, column: 9, scope: !9473)
!9476 = !DILocation(line: 1472, column: 9, scope: !9470)
!9477 = !DILocation(line: 1474, column: 28, scope: !9443)
!9478 = !DILocation(line: 1474, column: 5, scope: !9443)
!9479 = !DILocation(line: 1475, column: 27, scope: !9443)
!9480 = !DILocation(line: 1475, column: 36, scope: !9443)
!9481 = !DILocation(line: 1475, column: 34, scope: !9443)
!9482 = !DILocation(line: 1475, column: 48, scope: !9443)
!9483 = !DILocation(line: 1475, column: 46, scope: !9443)
!9484 = !DILocation(line: 1475, column: 31, scope: !9443)
!9485 = !DILocation(line: 1475, column: 5, scope: !9443)
!9486 = !DILocation(line: 1478, column: 25, scope: !9443)
!9487 = !DILocation(line: 1478, column: 5, scope: !9443)
!9488 = !DILocation(line: 1479, column: 20, scope: !9443)
!9489 = !DILocation(line: 1479, column: 37, scope: !9443)
!9490 = !DILocation(line: 1479, column: 42, scope: !9443)
!9491 = !DILocation(line: 1479, column: 5, scope: !9443)
!9492 = !DILocation(line: 1482, column: 31, scope: !9443)
!9493 = !DILocation(line: 1482, column: 43, scope: !9443)
!9494 = !DILocation(line: 1482, column: 5, scope: !9443)
!9495 = !DILocation(line: 1485, column: 25, scope: !9443)
!9496 = !DILocation(line: 1485, column: 29, scope: !9443)
!9497 = !DILocation(line: 1485, column: 5, scope: !9443)
!9498 = !DILocation(line: 1486, column: 16, scope: !9443)
!9499 = !DILocation(line: 1486, column: 5, scope: !9443)
!9500 = !DILocation(line: 1487, column: 22, scope: !9443)
!9501 = !DILocation(line: 1487, column: 26, scope: !9443)
!9502 = !DILocation(line: 1487, column: 5, scope: !9443)
!9503 = !DILocation(line: 1489, column: 5, scope: !9443)
!9504 = !DILocation(line: 1489, column: 10, scope: !9443)
!9505 = !DILocation(line: 1489, column: 28, scope: !9443)
!9506 = !DILocation(line: 1490, column: 5, scope: !9443)
!9507 = !DILocation(line: 1491, column: 1, scope: !9443)
!9508 = distinct !DISubprogram(name: "mxf_write_common_fields", scope: !939, file: !939, line: 919, type: !2415, isLocal: true, isDefinition: true, scopeLine: 920, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!9509 = !DILocalVariable(name: "s", arg: 1, scope: !9508, file: !939, line: 919, type: !2417)
!9510 = !DILocation(line: 919, column: 54, scope: !9508)
!9511 = !DILocalVariable(name: "st", arg: 2, scope: !9508, file: !939, line: 919, type: !1375)
!9512 = !DILocation(line: 919, column: 67, scope: !9508)
!9513 = !DILocalVariable(name: "mxf", scope: !9508, file: !939, line: 921, type: !2567)
!9514 = !DILocation(line: 921, column: 17, scope: !9508)
!9515 = !DILocation(line: 921, column: 23, scope: !9508)
!9516 = !DILocation(line: 921, column: 26, scope: !9508)
!9517 = !DILocalVariable(name: "pb", scope: !9508, file: !939, line: 922, type: !1309)
!9518 = !DILocation(line: 922, column: 18, scope: !9508)
!9519 = !DILocation(line: 922, column: 23, scope: !9508)
!9520 = !DILocation(line: 922, column: 26, scope: !9508)
!9521 = !DILocation(line: 925, column: 25, scope: !9508)
!9522 = !DILocation(line: 925, column: 5, scope: !9508)
!9523 = !DILocation(line: 926, column: 9, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9508, file: !939, line: 926, column: 9)
!9525 = !DILocation(line: 926, column: 15, scope: !9524)
!9526 = !DILocation(line: 926, column: 20, scope: !9524)
!9527 = !DILocation(line: 926, column: 12, scope: !9524)
!9528 = !DILocation(line: 926, column: 9, scope: !9508)
!9529 = !DILocation(line: 927, column: 20, scope: !9524)
!9530 = !DILocation(line: 927, column: 9, scope: !9524)
!9531 = !DILocalVariable(name: "data_def_ul", scope: !9532, file: !939, line: 929, type: !9533)
!9532 = distinct !DILexicalBlock(scope: !9524, file: !939, line: 928, column: 10)
!9533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9534, size: 64, align: 64)
!9534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9535)
!9535 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFCodecUL", file: !973, line: 82, baseType: !9536)
!9536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFCodecUL", file: !973, line: 75, size: 320, align: 64, elements: !9537)
!9537 = !{!9538, !9539, !9540, !9541, !9542, !9543}
!9538 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !9536, file: !973, line: 76, baseType: !1055, size: 128, align: 8)
!9539 = !DIDerivedType(tag: DW_TAG_member, name: "matching_len", scope: !9536, file: !973, line: 77, baseType: !1035, size: 32, align: 32, offset: 128)
!9540 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9536, file: !973, line: 78, baseType: !1042, size: 32, align: 32, offset: 160)
!9541 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !9536, file: !973, line: 79, baseType: !1107, size: 64, align: 64, offset: 192)
!9542 = !DIDerivedType(tag: DW_TAG_member, name: "wrapping_indicator_pos", scope: !9536, file: !973, line: 80, baseType: !1035, size: 32, align: 32, offset: 256)
!9543 = !DIDerivedType(tag: DW_TAG_member, name: "wrapping_indicator_type", scope: !9536, file: !973, line: 81, baseType: !9544, size: 32, align: 32, offset: 288)
!9544 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFWrappingIndicatorType", file: !973, line: 73, baseType: !995)
!9545 = !DILocation(line: 929, column: 27, scope: !9532)
!9546 = !DILocation(line: 929, column: 68, scope: !9532)
!9547 = !DILocation(line: 929, column: 72, scope: !9532)
!9548 = !DILocation(line: 929, column: 82, scope: !9532)
!9549 = !DILocation(line: 929, column: 41, scope: !9532)
!9550 = !DILocation(line: 930, column: 20, scope: !9532)
!9551 = !DILocation(line: 930, column: 24, scope: !9532)
!9552 = !DILocation(line: 930, column: 37, scope: !9532)
!9553 = !DILocation(line: 930, column: 9, scope: !9532)
!9554 = !DILocation(line: 934, column: 25, scope: !9508)
!9555 = !DILocation(line: 934, column: 5, scope: !9508)
!9556 = !DILocation(line: 936, column: 9, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9508, file: !939, line: 936, column: 9)
!9558 = !DILocation(line: 936, column: 15, scope: !9557)
!9559 = !DILocation(line: 936, column: 20, scope: !9557)
!9560 = !DILocation(line: 936, column: 12, scope: !9557)
!9561 = !DILocation(line: 936, column: 35, scope: !9557)
!9562 = !DILocation(line: 936, column: 38, scope: !9563)
!9563 = !DILexicalBlockFile(scope: !9557, file: !939, discriminator: 1)
!9564 = !DILocation(line: 936, column: 41, scope: !9563)
!9565 = !DILocation(line: 936, column: 49, scope: !9563)
!9566 = !DILocation(line: 936, column: 73, scope: !9563)
!9567 = !DILocation(line: 936, column: 76, scope: !9568)
!9568 = !DILexicalBlockFile(scope: !9557, file: !939, discriminator: 2)
!9569 = !DILocation(line: 936, column: 80, scope: !9568)
!9570 = !DILocation(line: 936, column: 90, scope: !9568)
!9571 = !DILocation(line: 936, column: 101, scope: !9568)
!9572 = !DILocation(line: 936, column: 9, scope: !9568)
!9573 = !DILocation(line: 937, column: 19, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9557, file: !939, line: 936, column: 124)
!9575 = !DILocation(line: 937, column: 23, scope: !9574)
!9576 = !DILocation(line: 937, column: 28, scope: !9574)
!9577 = !DILocation(line: 937, column: 42, scope: !9574)
!9578 = !DILocation(line: 937, column: 47, scope: !9574)
!9579 = !DILocation(line: 937, column: 40, scope: !9574)
!9580 = !DILocation(line: 937, column: 9, scope: !9574)
!9581 = !DILocation(line: 938, column: 5, scope: !9574)
!9582 = !DILocation(line: 939, column: 19, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9557, file: !939, line: 938, column: 12)
!9584 = !DILocation(line: 939, column: 23, scope: !9583)
!9585 = !DILocation(line: 939, column: 28, scope: !9583)
!9586 = !DILocation(line: 939, column: 9, scope: !9583)
!9587 = !DILocation(line: 941, column: 1, scope: !9508)
!9588 = distinct !DISubprogram(name: "mxf_get_data_definition_ul", scope: !939, file: !939, line: 635, type: !9589, isLocal: true, isDefinition: true, scopeLine: 636, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!9589 = !DISubroutineType(types: !9590)
!9590 = !{!9533, !1042}
!9591 = !DILocalVariable(name: "type", arg: 1, scope: !9588, file: !939, line: 635, type: !1042)
!9592 = !DILocation(line: 635, column: 57, scope: !9588)
!9593 = !DILocalVariable(name: "uls", scope: !9588, file: !939, line: 637, type: !9533)
!9594 = !DILocation(line: 637, column: 23, scope: !9588)
!9595 = !DILocation(line: 638, column: 5, scope: !9588)
!9596 = !DILocation(line: 638, column: 12, scope: !9597)
!9597 = !DILexicalBlockFile(scope: !9588, file: !939, discriminator: 1)
!9598 = !DILocation(line: 638, column: 17, scope: !9597)
!9599 = !DILocation(line: 638, column: 5, scope: !9597)
!9600 = !DILocation(line: 639, column: 13, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9602, file: !939, line: 639, column: 13)
!9602 = distinct !DILexicalBlock(scope: !9588, file: !939, line: 638, column: 25)
!9603 = !DILocation(line: 639, column: 21, scope: !9601)
!9604 = !DILocation(line: 639, column: 26, scope: !9601)
!9605 = !DILocation(line: 639, column: 18, scope: !9601)
!9606 = !DILocation(line: 639, column: 13, scope: !9602)
!9607 = !DILocation(line: 640, column: 13, scope: !9601)
!9608 = !DILocation(line: 641, column: 12, scope: !9602)
!9609 = !DILocation(line: 638, column: 5, scope: !9610)
!9610 = !DILexicalBlockFile(scope: !9588, file: !939, discriminator: 2)
!9611 = distinct !{!9611, !9595}
!9612 = !DILocation(line: 643, column: 12, scope: !9588)
!9613 = !DILocation(line: 643, column: 5, scope: !9588)
!9614 = distinct !DISubprogram(name: "mxf_write_random_index_pack", scope: !939, file: !939, line: 2879, type: !4227, isLocal: true, isDefinition: true, scopeLine: 2880, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!9615 = !DILocation(line: 557, column: 77, scope: !3914, inlinedAt: !9616)
!9616 = distinct !DILocation(line: 2903, column: 19, scope: !9614)
!9617 = !DILocation(line: 557, column: 77, scope: !3914, inlinedAt: !9618)
!9618 = distinct !DILocation(line: 2883, column: 20, scope: !9614)
!9619 = !DILocalVariable(name: "s", arg: 1, scope: !9614, file: !939, line: 2879, type: !2417)
!9620 = !DILocation(line: 2879, column: 58, scope: !9614)
!9621 = !DILocalVariable(name: "mxf", scope: !9614, file: !939, line: 2881, type: !2567)
!9622 = !DILocation(line: 2881, column: 17, scope: !9614)
!9623 = !DILocation(line: 2881, column: 23, scope: !9614)
!9624 = !DILocation(line: 2881, column: 26, scope: !9614)
!9625 = !DILocalVariable(name: "pb", scope: !9614, file: !939, line: 2882, type: !1309)
!9626 = !DILocation(line: 2882, column: 18, scope: !9614)
!9627 = !DILocation(line: 2882, column: 23, scope: !9614)
!9628 = !DILocation(line: 2882, column: 26, scope: !9614)
!9629 = !DILocalVariable(name: "pos", scope: !9614, file: !939, line: 2883, type: !1039)
!9630 = !DILocation(line: 2883, column: 14, scope: !9614)
!9631 = !DILocation(line: 2883, column: 30, scope: !9614)
!9632 = !DILocation(line: 2883, column: 20, scope: !9614)
!9633 = !DILocation(line: 559, column: 22, scope: !3914, inlinedAt: !9618)
!9634 = !DILocation(line: 559, column: 12, scope: !3914, inlinedAt: !9618)
!9635 = !DILocalVariable(name: "i", scope: !9614, file: !939, line: 2884, type: !1042)
!9636 = !DILocation(line: 2884, column: 9, scope: !9614)
!9637 = !DILocation(line: 2886, column: 16, scope: !9614)
!9638 = !DILocation(line: 2886, column: 5, scope: !9614)
!9639 = !DILocation(line: 2887, column: 27, scope: !9614)
!9640 = !DILocation(line: 2887, column: 41, scope: !9614)
!9641 = !DILocation(line: 2887, column: 46, scope: !9614)
!9642 = !DILocation(line: 2887, column: 40, scope: !9614)
!9643 = !DILocation(line: 2887, column: 34, scope: !9614)
!9644 = !DILocation(line: 2887, column: 5, scope: !9614)
!9645 = !DILocation(line: 2889, column: 9, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9614, file: !939, line: 2889, column: 9)
!9647 = !DILocation(line: 2889, column: 14, scope: !9646)
!9648 = !DILocation(line: 2889, column: 35, scope: !9646)
!9649 = !DILocation(line: 2889, column: 38, scope: !9650)
!9650 = !DILexicalBlockFile(scope: !9646, file: !939, discriminator: 1)
!9651 = !DILocation(line: 2889, column: 41, scope: !9650)
!9652 = !DILocation(line: 2889, column: 49, scope: !9650)
!9653 = !DILocation(line: 2889, column: 9, scope: !9650)
!9654 = !DILocation(line: 2890, column: 19, scope: !9646)
!9655 = !DILocation(line: 2890, column: 9, scope: !9646)
!9656 = !DILocation(line: 2892, column: 19, scope: !9646)
!9657 = !DILocation(line: 2892, column: 9, scope: !9646)
!9658 = !DILocation(line: 2893, column: 15, scope: !9614)
!9659 = !DILocation(line: 2893, column: 5, scope: !9614)
!9660 = !DILocation(line: 2895, column: 12, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9614, file: !939, line: 2895, column: 5)
!9662 = !DILocation(line: 2895, column: 10, scope: !9661)
!9663 = !DILocation(line: 2895, column: 17, scope: !9664)
!9664 = !DILexicalBlockFile(scope: !9665, file: !939, discriminator: 1)
!9665 = distinct !DILexicalBlock(scope: !9661, file: !939, line: 2895, column: 5)
!9666 = !DILocation(line: 2895, column: 21, scope: !9664)
!9667 = !DILocation(line: 2895, column: 26, scope: !9664)
!9668 = !DILocation(line: 2895, column: 19, scope: !9664)
!9669 = !DILocation(line: 2895, column: 5, scope: !9664)
!9670 = !DILocation(line: 2896, column: 19, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9665, file: !939, line: 2895, column: 54)
!9672 = !DILocation(line: 2896, column: 9, scope: !9671)
!9673 = !DILocation(line: 2897, column: 19, scope: !9671)
!9674 = !DILocation(line: 2897, column: 50, scope: !9671)
!9675 = !DILocation(line: 2897, column: 23, scope: !9671)
!9676 = !DILocation(line: 2897, column: 28, scope: !9671)
!9677 = !DILocation(line: 2897, column: 9, scope: !9671)
!9678 = !DILocation(line: 2898, column: 5, scope: !9671)
!9679 = !DILocation(line: 2895, column: 50, scope: !9680)
!9680 = !DILexicalBlockFile(scope: !9665, file: !939, discriminator: 2)
!9681 = !DILocation(line: 2895, column: 5, scope: !9680)
!9682 = distinct !{!9682, !9683}
!9683 = !DILocation(line: 2895, column: 5, scope: !9614)
!9684 = !DILocation(line: 2900, column: 15, scope: !9614)
!9685 = !DILocation(line: 2900, column: 5, scope: !9614)
!9686 = !DILocation(line: 2901, column: 15, scope: !9614)
!9687 = !DILocation(line: 2901, column: 19, scope: !9614)
!9688 = !DILocation(line: 2901, column: 24, scope: !9614)
!9689 = !DILocation(line: 2901, column: 5, scope: !9614)
!9690 = !DILocation(line: 2903, column: 15, scope: !9614)
!9691 = !DILocation(line: 2903, column: 29, scope: !9614)
!9692 = !DILocation(line: 2903, column: 19, scope: !9614)
!9693 = !DILocation(line: 559, column: 22, scope: !3914, inlinedAt: !9616)
!9694 = !DILocation(line: 559, column: 12, scope: !3914, inlinedAt: !9616)
!9695 = !DILocation(line: 2903, column: 35, scope: !9614)
!9696 = !DILocation(line: 2903, column: 33, scope: !9614)
!9697 = !DILocation(line: 2903, column: 39, scope: !9614)
!9698 = !DILocation(line: 2903, column: 5, scope: !9699)
!9699 = !DILexicalBlockFile(scope: !9614, file: !939, discriminator: 1)
!9700 = !DILocation(line: 2904, column: 1, scope: !9614)
!9701 = distinct !DISubprogram(name: "mxf_free", scope: !939, file: !939, line: 625, type: !4227, isLocal: true, isDefinition: true, scopeLine: 626, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!9702 = !DILocalVariable(name: "s", arg: 1, scope: !9701, file: !939, line: 625, type: !2417)
!9703 = !DILocation(line: 625, column: 39, scope: !9701)
!9704 = !DILocalVariable(name: "i", scope: !9701, file: !939, line: 627, type: !1042)
!9705 = !DILocation(line: 627, column: 9, scope: !9701)
!9706 = !DILocation(line: 629, column: 12, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9701, file: !939, line: 629, column: 5)
!9708 = !DILocation(line: 629, column: 10, scope: !9707)
!9709 = !DILocation(line: 629, column: 17, scope: !9710)
!9710 = !DILexicalBlockFile(scope: !9711, file: !939, discriminator: 1)
!9711 = distinct !DILexicalBlock(scope: !9707, file: !939, line: 629, column: 5)
!9712 = !DILocation(line: 629, column: 21, scope: !9710)
!9713 = !DILocation(line: 629, column: 24, scope: !9710)
!9714 = !DILocation(line: 629, column: 19, scope: !9710)
!9715 = !DILocation(line: 629, column: 5, scope: !9710)
!9716 = !DILocalVariable(name: "st", scope: !9717, file: !939, line: 630, type: !1375)
!9717 = distinct !DILexicalBlock(scope: !9711, file: !939, line: 629, column: 41)
!9718 = !DILocation(line: 630, column: 19, scope: !9717)
!9719 = !DILocation(line: 630, column: 35, scope: !9717)
!9720 = !DILocation(line: 630, column: 24, scope: !9717)
!9721 = !DILocation(line: 630, column: 27, scope: !9717)
!9722 = !DILocation(line: 631, column: 19, scope: !9717)
!9723 = !DILocation(line: 631, column: 23, scope: !9717)
!9724 = !DILocation(line: 631, column: 18, scope: !9717)
!9725 = !DILocation(line: 631, column: 9, scope: !9717)
!9726 = !DILocation(line: 632, column: 5, scope: !9717)
!9727 = !DILocation(line: 629, column: 37, scope: !9728)
!9728 = !DILexicalBlockFile(scope: !9711, file: !939, discriminator: 2)
!9729 = !DILocation(line: 629, column: 5, scope: !9728)
!9730 = distinct !{!9730, !9731}
!9731 = !DILocation(line: 629, column: 5, scope: !9701)
!9732 = !DILocation(line: 633, column: 1, scope: !9701)
!9733 = distinct !DISubprogram(name: "mxf_interleave_get_packet", scope: !939, file: !939, line: 2974, type: !4118, isLocal: true, isDefinition: true, scopeLine: 2975, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!9734 = !DILocalVariable(name: "s", arg: 1, scope: !9733, file: !939, line: 2974, type: !2417)
!9735 = !DILocation(line: 2974, column: 55, scope: !9733)
!9736 = !DILocalVariable(name: "out", arg: 2, scope: !9733, file: !939, line: 2974, type: !1243)
!9737 = !DILocation(line: 2974, column: 68, scope: !9733)
!9738 = !DILocalVariable(name: "pkt", arg: 3, scope: !9733, file: !939, line: 2974, type: !1243)
!9739 = !DILocation(line: 2974, column: 83, scope: !9733)
!9740 = !DILocalVariable(name: "flush", arg: 4, scope: !9733, file: !939, line: 2974, type: !1042)
!9741 = !DILocation(line: 2974, column: 92, scope: !9733)
!9742 = !DILocalVariable(name: "i", scope: !9733, file: !939, line: 2976, type: !1042)
!9743 = !DILocation(line: 2976, column: 9, scope: !9733)
!9744 = !DILocalVariable(name: "stream_count", scope: !9733, file: !939, line: 2976, type: !1042)
!9745 = !DILocation(line: 2976, column: 12, scope: !9733)
!9746 = !DILocation(line: 2978, column: 12, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9733, file: !939, line: 2978, column: 5)
!9748 = !DILocation(line: 2978, column: 10, scope: !9747)
!9749 = !DILocation(line: 2978, column: 17, scope: !9750)
!9750 = !DILexicalBlockFile(scope: !9751, file: !939, discriminator: 1)
!9751 = distinct !DILexicalBlock(scope: !9747, file: !939, line: 2978, column: 5)
!9752 = !DILocation(line: 2978, column: 21, scope: !9750)
!9753 = !DILocation(line: 2978, column: 24, scope: !9750)
!9754 = !DILocation(line: 2978, column: 19, scope: !9750)
!9755 = !DILocation(line: 2978, column: 5, scope: !9750)
!9756 = !DILocation(line: 2979, column: 38, scope: !9751)
!9757 = !DILocation(line: 2979, column: 27, scope: !9751)
!9758 = !DILocation(line: 2979, column: 30, scope: !9751)
!9759 = !DILocation(line: 2979, column: 42, scope: !9751)
!9760 = !DILocation(line: 2979, column: 26, scope: !9751)
!9761 = !DILocation(line: 2979, column: 25, scope: !9751)
!9762 = !DILocation(line: 2979, column: 22, scope: !9751)
!9763 = !DILocation(line: 2979, column: 9, scope: !9751)
!9764 = !DILocation(line: 2978, column: 37, scope: !9765)
!9765 = !DILexicalBlockFile(scope: !9751, file: !939, discriminator: 2)
!9766 = !DILocation(line: 2978, column: 5, scope: !9765)
!9767 = distinct !{!9767, !9768}
!9768 = !DILocation(line: 2978, column: 5, scope: !9733)
!9769 = !DILocation(line: 2981, column: 9, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9733, file: !939, line: 2981, column: 9)
!9771 = !DILocation(line: 2981, column: 22, scope: !9770)
!9772 = !DILocation(line: 2981, column: 26, scope: !9773)
!9773 = !DILexicalBlockFile(scope: !9770, file: !939, discriminator: 1)
!9774 = !DILocation(line: 2981, column: 29, scope: !9773)
!9775 = !DILocation(line: 2981, column: 43, scope: !9773)
!9776 = !DILocation(line: 2981, column: 40, scope: !9773)
!9777 = !DILocation(line: 2981, column: 56, scope: !9773)
!9778 = !DILocation(line: 2981, column: 59, scope: !9779)
!9779 = !DILexicalBlockFile(scope: !9770, file: !939, discriminator: 2)
!9780 = !DILocation(line: 2981, column: 9, scope: !9779)
!9781 = !DILocalVariable(name: "pktl", scope: !9782, file: !939, line: 2982, type: !9783)
!9782 = distinct !DILexicalBlock(scope: !9770, file: !939, line: 2981, column: 67)
!9783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9784, size: 64, align: 64)
!9784 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketList", file: !919, line: 2006, baseType: !2132)
!9785 = !DILocation(line: 2982, column: 23, scope: !9782)
!9786 = !DILocation(line: 2982, column: 30, scope: !9782)
!9787 = !DILocation(line: 2982, column: 33, scope: !9782)
!9788 = !DILocation(line: 2982, column: 43, scope: !9782)
!9789 = !DILocation(line: 2983, column: 13, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9782, file: !939, line: 2983, column: 13)
!9791 = !DILocation(line: 2983, column: 16, scope: !9790)
!9792 = !DILocation(line: 2983, column: 30, scope: !9790)
!9793 = !DILocation(line: 2983, column: 27, scope: !9790)
!9794 = !DILocation(line: 2983, column: 13, scope: !9782)
!9795 = !DILocalVariable(name: "last", scope: !9796, file: !939, line: 2984, type: !9783)
!9796 = distinct !DILexicalBlock(scope: !9790, file: !939, line: 2983, column: 44)
!9797 = !DILocation(line: 2984, column: 27, scope: !9796)
!9798 = !DILocation(line: 2986, column: 13, scope: !9796)
!9799 = !DILocation(line: 2986, column: 20, scope: !9800)
!9800 = !DILexicalBlockFile(scope: !9796, file: !939, discriminator: 1)
!9801 = !DILocation(line: 2986, column: 13, scope: !9800)
!9802 = !DILocation(line: 2987, column: 22, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9804, file: !939, line: 2987, column: 21)
!9804 = distinct !DILexicalBlock(scope: !9796, file: !939, line: 2986, column: 26)
!9805 = !DILocation(line: 2987, column: 35, scope: !9803)
!9806 = !DILocation(line: 2987, column: 38, scope: !9807)
!9807 = !DILexicalBlockFile(scope: !9803, file: !939, discriminator: 1)
!9808 = !DILocation(line: 2987, column: 44, scope: !9807)
!9809 = !DILocation(line: 2987, column: 48, scope: !9807)
!9810 = !DILocation(line: 2987, column: 61, scope: !9807)
!9811 = !DILocation(line: 2987, column: 21, scope: !9807)
!9812 = !DILocation(line: 2988, column: 21, scope: !9803)
!9813 = !DILocation(line: 2990, column: 32, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9804, file: !939, line: 2990, column: 21)
!9815 = !DILocation(line: 2990, column: 38, scope: !9814)
!9816 = !DILocation(line: 2990, column: 42, scope: !9814)
!9817 = !DILocation(line: 2990, column: 21, scope: !9814)
!9818 = !DILocation(line: 2990, column: 24, scope: !9814)
!9819 = !DILocation(line: 2990, column: 57, scope: !9814)
!9820 = !DILocation(line: 2990, column: 82, scope: !9814)
!9821 = !DILocation(line: 2990, column: 79, scope: !9814)
!9822 = !DILocation(line: 2990, column: 21, scope: !9804)
!9823 = !DILocation(line: 2991, column: 81, scope: !9814)
!9824 = !DILocation(line: 2991, column: 32, scope: !9814)
!9825 = !DILocation(line: 2991, column: 38, scope: !9814)
!9826 = !DILocation(line: 2991, column: 42, scope: !9814)
!9827 = !DILocation(line: 2991, column: 21, scope: !9814)
!9828 = !DILocation(line: 2991, column: 24, scope: !9814)
!9829 = !DILocation(line: 2991, column: 57, scope: !9814)
!9830 = !DILocation(line: 2991, column: 79, scope: !9814)
!9831 = !DILocation(line: 2992, column: 24, scope: !9804)
!9832 = !DILocation(line: 2992, column: 22, scope: !9804)
!9833 = !DILocation(line: 2993, column: 24, scope: !9804)
!9834 = !DILocation(line: 2993, column: 30, scope: !9804)
!9835 = !DILocation(line: 2993, column: 22, scope: !9804)
!9836 = !DILocation(line: 2994, column: 29, scope: !9804)
!9837 = !DILocation(line: 2986, column: 13, scope: !9838)
!9838 = !DILexicalBlockFile(scope: !9796, file: !939, discriminator: 2)
!9839 = distinct !{!9839, !9798}
!9840 = !DILocation(line: 2997, column: 13, scope: !9796)
!9841 = !DILocation(line: 2997, column: 20, scope: !9800)
!9842 = !DILocation(line: 2997, column: 13, scope: !9800)
!9843 = !DILocalVariable(name: "next", scope: !9844, file: !939, line: 2998, type: !9783)
!9844 = distinct !DILexicalBlock(scope: !9796, file: !939, line: 2997, column: 26)
!9845 = !DILocation(line: 2998, column: 31, scope: !9844)
!9846 = !DILocation(line: 2998, column: 38, scope: !9844)
!9847 = !DILocation(line: 2998, column: 44, scope: !9844)
!9848 = !DILocation(line: 2999, column: 34, scope: !9844)
!9849 = !DILocation(line: 2999, column: 40, scope: !9844)
!9850 = !DILocation(line: 2999, column: 17, scope: !9844)
!9851 = !DILocation(line: 3000, column: 26, scope: !9844)
!9852 = !DILocation(line: 3000, column: 17, scope: !9844)
!9853 = !DILocation(line: 3001, column: 24, scope: !9844)
!9854 = !DILocation(line: 3001, column: 22, scope: !9844)
!9855 = !DILocation(line: 2997, column: 13, scope: !9838)
!9856 = distinct !{!9856, !9840}
!9857 = !DILocation(line: 3003, column: 17, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9796, file: !939, line: 3003, column: 17)
!9859 = !DILocation(line: 3003, column: 17, scope: !9796)
!9860 = !DILocation(line: 3004, column: 17, scope: !9858)
!9861 = !DILocation(line: 3004, column: 23, scope: !9858)
!9862 = !DILocation(line: 3004, column: 28, scope: !9858)
!9863 = !DILocation(line: 3006, column: 17, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9858, file: !939, line: 3005, column: 18)
!9865 = !DILocation(line: 3006, column: 20, scope: !9864)
!9866 = !DILocation(line: 3006, column: 30, scope: !9864)
!9867 = !DILocation(line: 3006, column: 44, scope: !9864)
!9868 = !DILocation(line: 3007, column: 17, scope: !9864)
!9869 = !DILocation(line: 3007, column: 20, scope: !9864)
!9870 = !DILocation(line: 3007, column: 30, scope: !9864)
!9871 = !DILocation(line: 3007, column: 47, scope: !9864)
!9872 = !DILocation(line: 3008, column: 17, scope: !9864)
!9873 = !DILocation(line: 3010, column: 20, scope: !9796)
!9874 = !DILocation(line: 3010, column: 23, scope: !9796)
!9875 = !DILocation(line: 3010, column: 33, scope: !9796)
!9876 = !DILocation(line: 3010, column: 18, scope: !9796)
!9877 = !DILocation(line: 3011, column: 9, scope: !9796)
!9878 = !DILocation(line: 3013, column: 10, scope: !9782)
!9879 = !DILocation(line: 3013, column: 16, scope: !9782)
!9880 = !DILocation(line: 3013, column: 22, scope: !9782)
!9881 = !DILocation(line: 3014, column: 16, scope: !9782)
!9882 = !DILocation(line: 3014, column: 63, scope: !9782)
!9883 = !DILocation(line: 3014, column: 68, scope: !9782)
!9884 = !DILocation(line: 3014, column: 84, scope: !9782)
!9885 = !DILocation(line: 3014, column: 89, scope: !9782)
!9886 = !DILocation(line: 3014, column: 9, scope: !9782)
!9887 = !DILocation(line: 3015, column: 38, scope: !9782)
!9888 = !DILocation(line: 3015, column: 44, scope: !9782)
!9889 = !DILocation(line: 3015, column: 9, scope: !9782)
!9890 = !DILocation(line: 3015, column: 12, scope: !9782)
!9891 = !DILocation(line: 3015, column: 22, scope: !9782)
!9892 = !DILocation(line: 3015, column: 36, scope: !9782)
!9893 = !DILocation(line: 3016, column: 23, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9782, file: !939, line: 3016, column: 12)
!9895 = !DILocation(line: 3016, column: 29, scope: !9894)
!9896 = !DILocation(line: 3016, column: 33, scope: !9894)
!9897 = !DILocation(line: 3016, column: 12, scope: !9894)
!9898 = !DILocation(line: 3016, column: 15, scope: !9894)
!9899 = !DILocation(line: 3016, column: 48, scope: !9894)
!9900 = !DILocation(line: 3016, column: 73, scope: !9894)
!9901 = !DILocation(line: 3016, column: 70, scope: !9894)
!9902 = !DILocation(line: 3016, column: 12, scope: !9782)
!9903 = !DILocation(line: 3017, column: 24, scope: !9894)
!9904 = !DILocation(line: 3017, column: 30, scope: !9894)
!9905 = !DILocation(line: 3017, column: 34, scope: !9894)
!9906 = !DILocation(line: 3017, column: 13, scope: !9894)
!9907 = !DILocation(line: 3017, column: 16, scope: !9894)
!9908 = !DILocation(line: 3017, column: 49, scope: !9894)
!9909 = !DILocation(line: 3017, column: 70, scope: !9894)
!9910 = !DILocation(line: 3018, column: 13, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9782, file: !939, line: 3018, column: 12)
!9912 = !DILocation(line: 3018, column: 16, scope: !9911)
!9913 = !DILocation(line: 3018, column: 26, scope: !9911)
!9914 = !DILocation(line: 3018, column: 12, scope: !9782)
!9915 = !DILocation(line: 3019, column: 13, scope: !9911)
!9916 = !DILocation(line: 3019, column: 16, scope: !9911)
!9917 = !DILocation(line: 3019, column: 26, scope: !9911)
!9918 = !DILocation(line: 3019, column: 43, scope: !9911)
!9919 = !DILocation(line: 3020, column: 18, scope: !9782)
!9920 = !DILocation(line: 3020, column: 9, scope: !9782)
!9921 = !DILocation(line: 3021, column: 9, scope: !9782)
!9922 = !DILocation(line: 3022, column: 12, scope: !9770)
!9923 = !DILocation(line: 3024, column: 24, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9770, file: !939, line: 3022, column: 12)
!9925 = !DILocation(line: 3024, column: 9, scope: !9924)
!9926 = !DILocation(line: 3025, column: 9, scope: !9924)
!9927 = !DILocation(line: 3027, column: 1, scope: !9733)
!9928 = distinct !DISubprogram(name: "mxf_compare_timestamps", scope: !939, file: !939, line: 3029, type: !9929, isLocal: true, isDefinition: true, scopeLine: 3030, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2463)
!9929 = !DISubroutineType(types: !9930)
!9930 = !{!1042, !2417, !1243, !1243}
!9931 = !DILocalVariable(name: "s", arg: 1, scope: !9928, file: !939, line: 3029, type: !2417)
!9932 = !DILocation(line: 3029, column: 52, scope: !9928)
!9933 = !DILocalVariable(name: "next", arg: 2, scope: !9928, file: !939, line: 3029, type: !1243)
!9934 = !DILocation(line: 3029, column: 65, scope: !9928)
!9935 = !DILocalVariable(name: "pkt", arg: 3, scope: !9928, file: !939, line: 3029, type: !1243)
!9936 = !DILocation(line: 3029, column: 81, scope: !9928)
!9937 = !DILocalVariable(name: "sc", scope: !9928, file: !939, line: 3031, type: !1011)
!9938 = !DILocation(line: 3031, column: 23, scope: !9928)
!9939 = !DILocation(line: 3031, column: 39, scope: !9928)
!9940 = !DILocation(line: 3031, column: 45, scope: !9928)
!9941 = !DILocation(line: 3031, column: 28, scope: !9928)
!9942 = !DILocation(line: 3031, column: 31, scope: !9928)
!9943 = !DILocation(line: 3031, column: 60, scope: !9928)
!9944 = !DILocalVariable(name: "sc2", scope: !9928, file: !939, line: 3032, type: !1011)
!9945 = !DILocation(line: 3032, column: 23, scope: !9928)
!9946 = !DILocation(line: 3032, column: 40, scope: !9928)
!9947 = !DILocation(line: 3032, column: 46, scope: !9928)
!9948 = !DILocation(line: 3032, column: 29, scope: !9928)
!9949 = !DILocation(line: 3032, column: 32, scope: !9928)
!9950 = !DILocation(line: 3032, column: 61, scope: !9928)
!9951 = !DILocation(line: 3034, column: 12, scope: !9928)
!9952 = !DILocation(line: 3034, column: 18, scope: !9928)
!9953 = !DILocation(line: 3034, column: 24, scope: !9928)
!9954 = !DILocation(line: 3034, column: 29, scope: !9928)
!9955 = !DILocation(line: 3034, column: 22, scope: !9928)
!9956 = !DILocation(line: 3034, column: 33, scope: !9928)
!9957 = !DILocation(line: 3035, column: 10, scope: !9928)
!9958 = !DILocation(line: 3035, column: 16, scope: !9928)
!9959 = !DILocation(line: 3035, column: 23, scope: !9928)
!9960 = !DILocation(line: 3035, column: 28, scope: !9928)
!9961 = !DILocation(line: 3035, column: 20, scope: !9928)
!9962 = !DILocation(line: 3035, column: 32, scope: !9928)
!9963 = !DILocation(line: 3035, column: 35, scope: !9964)
!9964 = !DILexicalBlockFile(scope: !9928, file: !939, discriminator: 1)
!9965 = !DILocation(line: 3035, column: 39, scope: !9964)
!9966 = !DILocation(line: 3035, column: 47, scope: !9964)
!9967 = !DILocation(line: 3035, column: 52, scope: !9964)
!9968 = !DILocation(line: 3035, column: 45, scope: !9964)
!9969 = !DILocation(line: 3034, column: 33, scope: !9964)
!9970 = !DILocation(line: 3034, column: 33, scope: !9971)
!9971 = !DILexicalBlockFile(scope: !9928, file: !939, discriminator: 2)
!9972 = !DILocation(line: 3034, column: 5, scope: !9971)
