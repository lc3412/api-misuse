; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a/[inter]libavformat--rtmpproto.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a/[inter]libavformat--rtmpproto.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.URLContext = type { %struct.AVClass*, %struct.URLProtocol*, i8*, i8*, i32, i32, i32, i32, %struct.AVIOInterruptCB, i64, i8*, i8*, i32 }
%struct.URLProtocol = type { i8*, {}*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* }
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVDictionary = type opaque
%struct.AVIODirEntry = type { i8*, i32, i32, i64, i64, i64, i64, i64, i64, i64 }
%struct.RTMPContext = type { %struct.AVClass*, %struct.URLContext*, [2 x %struct.RTMPPacket*], [2 x i32], i32, i32, i32, i8*, i32, i8*, i8*, i32, i32, i8*, i32, i32, i32, %struct.RTMPPacket, i32, i64, i64, i32, i32, i32, i32, i32, [11 x i8], i32, i32, i8*, i8*, i8*, i32, i32, i8*, i8*, [42 x i8], i8*, i8*, i32, i32, i32, i32, %struct.TrackedMethod*, i32, i32, i32, i32, i32, double, [50 x i8], [50 x i8], [500 x i8], i32, i32 }
%struct.RTMPPacket = type { i32, i32, i32, i32, i32, i8*, i32, i32, i32 }
%struct.TrackedMethod = type { i8*, i32 }
%struct.GetByteContext = type { i8*, i8*, i8* }
%struct.AVLFG = type { [64 x i32], i32 }
%union.unaligned_32 = type { i32 }
%union.unaligned_16 = type { i16 }
%union.av_intfloat64 = type { i64 }
%union.unaligned_64 = type { i64 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%struct.PutByteContext = type { i8*, i8*, i8*, i32 }
%struct.AVMD5 = type opaque

@.str = private unnamed_addr constant [5 x i8] c"rtmp\00", align 1
@rtmp_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([21 x %struct.AVOption], [21 x %struct.AVOption]* bitcast (<{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @rtmp_options to [21 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_rtmp_protocol = constant { i8*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32 (%struct.URLContext*, i8*, i32)* null, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)* @rtmp_open, i32 (%struct.URLContext*, %struct.URLContext**)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i8*, i32)* @rtmp_read, i32 (%struct.URLContext*, i8*, i32)* @rtmp_write, i64 (%struct.URLContext*, i64, i32)* null, i32 (%struct.URLContext*)* @rtmp_close, i32 (%struct.URLContext*, i32)* @rtmp_pause, i64 (%struct.URLContext*, i32, i64, i32)* @rtmp_seek, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i32**, i32*)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i32)* null, i32 1008, %struct.AVClass* @rtmp_class, i32 2, i32 (%struct.URLContext*, i32)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, %struct.AVIODirEntry**)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, %struct.URLContext*)* null, i8* null }, align 8
@.str.1 = private unnamed_addr constant [6 x i8] c"rtmpe\00", align 1
@rtmpe_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* bitcast (<{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @rtmp_options to %struct.AVOption*), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_rtmpe_protocol = constant { i8*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), i32 (%struct.URLContext*, i8*, i32)* null, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)* @rtmp_open, i32 (%struct.URLContext*, %struct.URLContext**)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i8*, i32)* @rtmp_read, i32 (%struct.URLContext*, i8*, i32)* @rtmp_write, i64 (%struct.URLContext*, i64, i32)* null, i32 (%struct.URLContext*)* @rtmp_close, i32 (%struct.URLContext*, i32)* @rtmp_pause, i64 (%struct.URLContext*, i32, i64, i32)* @rtmp_seek, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i32**, i32*)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i32)* null, i32 1008, %struct.AVClass* @rtmpe_class, i32 2, i32 (%struct.URLContext*, i32)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, %struct.AVIODirEntry**)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, %struct.URLContext*)* null, i8* null }, align 8
@.str.2 = private unnamed_addr constant [6 x i8] c"rtmps\00", align 1
@rtmps_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* bitcast (<{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @rtmp_options to %struct.AVOption*), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_rtmps_protocol = constant { i8*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i32 (%struct.URLContext*, i8*, i32)* null, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)* @rtmp_open, i32 (%struct.URLContext*, %struct.URLContext**)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i8*, i32)* @rtmp_read, i32 (%struct.URLContext*, i8*, i32)* @rtmp_write, i64 (%struct.URLContext*, i64, i32)* null, i32 (%struct.URLContext*)* @rtmp_close, i32 (%struct.URLContext*, i32)* @rtmp_pause, i64 (%struct.URLContext*, i32, i64, i32)* @rtmp_seek, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i32**, i32*)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i32)* null, i32 1008, %struct.AVClass* @rtmps_class, i32 2, i32 (%struct.URLContext*, i32)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, %struct.AVIODirEntry**)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, %struct.URLContext*)* null, i8* null }, align 8
@.str.3 = private unnamed_addr constant [6 x i8] c"rtmpt\00", align 1
@rtmpt_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* bitcast (<{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @rtmp_options to %struct.AVOption*), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_rtmpt_protocol = constant { i8*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i32 (%struct.URLContext*, i8*, i32)* null, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)* @rtmp_open, i32 (%struct.URLContext*, %struct.URLContext**)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i8*, i32)* @rtmp_read, i32 (%struct.URLContext*, i8*, i32)* @rtmp_write, i64 (%struct.URLContext*, i64, i32)* null, i32 (%struct.URLContext*)* @rtmp_close, i32 (%struct.URLContext*, i32)* @rtmp_pause, i64 (%struct.URLContext*, i32, i64, i32)* @rtmp_seek, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i32**, i32*)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i32)* null, i32 1008, %struct.AVClass* @rtmpt_class, i32 2, i32 (%struct.URLContext*, i32)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, %struct.AVIODirEntry**)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, %struct.URLContext*)* null, i8* null }, align 8
@.str.4 = private unnamed_addr constant [7 x i8] c"rtmpte\00", align 1
@rtmpte_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* bitcast (<{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @rtmp_options to %struct.AVOption*), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_rtmpte_protocol = constant { i8*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i32 (%struct.URLContext*, i8*, i32)* null, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)* @rtmp_open, i32 (%struct.URLContext*, %struct.URLContext**)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i8*, i32)* @rtmp_read, i32 (%struct.URLContext*, i8*, i32)* @rtmp_write, i64 (%struct.URLContext*, i64, i32)* null, i32 (%struct.URLContext*)* @rtmp_close, i32 (%struct.URLContext*, i32)* @rtmp_pause, i64 (%struct.URLContext*, i32, i64, i32)* @rtmp_seek, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i32**, i32*)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i32)* null, i32 1008, %struct.AVClass* @rtmpte_class, i32 2, i32 (%struct.URLContext*, i32)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, %struct.AVIODirEntry**)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, %struct.URLContext*)* null, i8* null }, align 8
@.str.5 = private unnamed_addr constant [7 x i8] c"rtmpts\00", align 1
@rtmpts_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* bitcast (<{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @rtmp_options to %struct.AVOption*), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 0, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_rtmpts_protocol = constant { i8*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), i32 (%struct.URLContext*, i8*, i32)* null, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)* @rtmp_open, i32 (%struct.URLContext*, %struct.URLContext**)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i8*, i32)* @rtmp_read, i32 (%struct.URLContext*, i8*, i32)* @rtmp_write, i64 (%struct.URLContext*, i64, i32)* null, i32 (%struct.URLContext*)* @rtmp_close, i32 (%struct.URLContext*, i32)* @rtmp_pause, i64 (%struct.URLContext*, i32, i64, i32)* @rtmp_seek, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i32**, i32*)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, i32)* null, i32 1008, %struct.AVClass* @rtmpts_class, i32 2, i32 (%struct.URLContext*, i32)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, %struct.AVIODirEntry**)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*)* null, i32 (%struct.URLContext*, %struct.URLContext*)* null, i8* null }, align 8
@.str.6 = private unnamed_addr constant [185 x i8] c"Detected librtmp style URL parameters, these aren't supported by the libavformat internal RTMP handler currently enabled. See the documentation for the correct way to pass parameters.\0A\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"rtmp_listen not available for %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"ffrtmphttp_tls\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"ffrtmphttp\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"tls\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"ffrtmpcrypt_tunneling\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"ffrtmpcrypt\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"tcp\00", align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"?listen&listen_timeout=%d\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"Cannot open connection %s\0A\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"slist=\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"/ondemand/\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"ondemand\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c".f4v\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c".mp4\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"mp4:\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c".flv\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"/%s\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"%s %d,%d,%d,%d\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"LNX\00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c"FMLE/3.0 (compatible; %s)\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"Lavf58.26.101\00", align 1
@.str.29 = private unnamed_addr constant [45 x i8] c"Proto = %s, path = %s, app = %s, fname = %s\0A\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"FLV\01\00\00\00\00\09\00\00\00\00\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"Cannot open connection %s.\0A\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"CWS\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"Genuine Adobe Flash Player 001\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"rtmp_swfhash\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"1.2.11\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"Handshaking...\0A\00", align 1
@.str.37 = private unnamed_addr constant [37 x i8] c"Cannot write RTMP handshake request\0A\00", align 1
@.str.38 = private unnamed_addr constant [37 x i8] c"Cannot read RTMP handshake response\0A\00", align 1
@.str.39 = private unnamed_addr constant [16 x i8] c"Type answer %d\0A\00", align 1
@.str.40 = private unnamed_addr constant [28 x i8] c"Server version %d.%d.%d.%d\0A\00", align 1
@.str.41 = private unnamed_addr constant [35 x i8] c"Server response validating failed\0A\00", align 1
@rtmp_server_key = internal constant [68 x i8] c"Genuine Adobe Flash Media Server 001\F0\EE\C2J\80h\BE\E8.\00\D0\D1\02\9E~Wn\EC]-)\80o\AB\93\B8\E66\CF\EB1\AE", align 16
@.str.42 = private unnamed_addr constant [20 x i8] c"Signature mismatch\0A\00", align 1
@rtmp_player_key = internal constant [62 x i8] c"Genuine Adobe Flash Player 001\F0\EE\C2J\80h\BE\E8.\00\D0\D1\02\9E~Wn\EC]-)\80o\AB\93\B8\E66\CF\EB1\AE", align 16
@.str.43 = private unnamed_addr constant [57 x i8] c"Hash of the decompressed SWF file is not 32 bytes long.\0A\00", align 1
@.str.44 = private unnamed_addr constant [26 x i8] c"Unable to read handshake\0A\00", align 1
@.str.45 = private unnamed_addr constant [32 x i8] c"RTMP protocol version mismatch\0A\00", align 1
@.str.46 = private unnamed_addr constant [34 x i8] c"Unable to write answer - RTMP S0\0A\00", align 1
@.str.47 = private unnamed_addr constant [25 x i8] c"RTMP Handshake C1 Error\0A\00", align 1
@.str.48 = private unnamed_addr constant [25 x i8] c"RTMP Handshake S1 Error\0A\00", align 1
@.str.49 = private unnamed_addr constant [25 x i8] c"RTMP Handshake S2 Error\0A\00", align 1
@.str.50 = private unnamed_addr constant [25 x i8] c"RTMP Handshake C2 Error\0A\00", align 1
@.str.51 = private unnamed_addr constant [60 x i8] c"Erroneous C2 Message epoch does not match up with C1 epoch\0A\00", align 1
@.str.52 = private unnamed_addr constant [47 x i8] c"Erroneous C2 Message random does not match up\0A\00", align 1
@.str.53 = private unnamed_addr constant [50 x i8] c"Erroneous Message size %d not following standard\0A\00", align 1
@.str.54 = private unnamed_addr constant [24 x i8] c"Unable to write answer\0A\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"connect\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"app\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.58 = private unnamed_addr constant [11 x i8] c"nonprivate\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c"flashVer\00", align 1
@.str.60 = private unnamed_addr constant [7 x i8] c"swfUrl\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"tcUrl\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"fpad\00", align 1
@.str.63 = private unnamed_addr constant [13 x i8] c"capabilities\00", align 1
@.str.64 = private unnamed_addr constant [12 x i8] c"audioCodecs\00", align 1
@.str.65 = private unnamed_addr constant [12 x i8] c"videoCodecs\00", align 1
@.str.66 = private unnamed_addr constant [14 x i8] c"videoFunction\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"pageUrl\00", align 1
@.str.68 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.69 = private unnamed_addr constant [27 x i8] c"Invalid AMF parameter: %s\0A\00", align 1
@.str.70 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.71 = private unnamed_addr constant [14 x i8] c"buf_size >= 0\00", align 1
@.str.72 = private unnamed_addr constant [26 x i8] c"./libavcodec/bytestream.h\00", align 1
@.str.73 = private unnamed_addr constant [24 x i8] c"received abort message\0A\00", align 1
@.str.74 = private unnamed_addr constant [26 x i8] c"received acknowledgement\0A\00", align 1
@.str.75 = private unnamed_addr constant [35 x i8] c"Unknown control message type (%d)\0A\00", align 1
@.str.76 = private unnamed_addr constant [31 x i8] c"Unable to read command string\0A\00", align 1
@.str.77 = private unnamed_addr constant [27 x i8] c"Expecting connect, got %s\0A\00", align 1
@.str.78 = private unnamed_addr constant [18 x i8] c"SeqNum not found\0A\00", align 1
@.str.79 = private unnamed_addr constant [32 x i8] c"App field not found in connect\0A\00", align 1
@.str.80 = private unnamed_addr constant [37 x i8] c"App field don't match up: %s <-> %s\0A\00", align 1
@.str.81 = private unnamed_addr constant [8 x i8] c"_result\00", align 1
@.str.82 = private unnamed_addr constant [7 x i8] c"fmsVer\00", align 1
@.str.83 = private unnamed_addr constant [14 x i8] c"FMS/3,0,1,123\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"level\00", align 1
@.str.85 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.87 = private unnamed_addr constant [30 x i8] c"NetConnection.Connect.Success\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"description\00", align 1
@.str.89 = private unnamed_addr constant [22 x i8] c"Connection succeeded.\00", align 1
@.str.90 = private unnamed_addr constant [15 x i8] c"objectEncoding\00", align 1
@.str.91 = private unnamed_addr constant [9 x i8] c"onBWDone\00", align 1
@.str.92 = private unnamed_addr constant [41 x i8] c"Too short chunk size change packet (%d)\0A\00", align 1
@.str.93 = private unnamed_addr constant [25 x i8] c"Incorrect chunk size %d\0A\00", align 1
@.str.94 = private unnamed_addr constant [30 x i8] c"New incoming chunk size = %d\0A\00", align 1
@.str.95 = private unnamed_addr constant [51 x i8] c"Too short window acknowledgement size packet (%d)\0A\00", align 1
@.str.96 = private unnamed_addr constant [42 x i8] c"Incorrect window acknowledgement size %d\0A\00", align 1
@.str.97 = private unnamed_addr constant [34 x i8] c"Window acknowledgement size = %d\0A\00", align 1
@.str.98 = private unnamed_addr constant [54 x i8] c"Peer bandwidth packet is less than 4 bytes long (%d)\0A\00", align 1
@.str.99 = private unnamed_addr constant [33 x i8] c"Incorrect set peer bandwidth %d\0A\00", align 1
@.str.100 = private unnamed_addr constant [24 x i8] c"Max sent, unacked = %d\0A\00", align 1
@.str.101 = private unnamed_addr constant [27 x i8] c"Sending bytes read report\0A\00", align 1
@.str.102 = private unnamed_addr constant [28 x i8] c"received bytes read report\0A\00", align 1
@.str.103 = private unnamed_addr constant [37 x i8] c"Unknown packet type received 0x%02X\0A\00", align 1
@.str.104 = private unnamed_addr constant [36 x i8] c"Too short user control packet (%d)\0A\00", align 1
@.str.105 = private unnamed_addr constant [35 x i8] c"Ignoring SWFVerification request.\0A\00", align 1
@.str.106 = private unnamed_addr constant [28 x i8] c"Too short ping packet (%d)\0A\00", align 1
@.str.107 = private unnamed_addr constant [29 x i8] c"Sending SWF verification...\0A\00", align 1
@.str.108 = private unnamed_addr constant [7 x i8] c"_error\00", align 1
@.str.109 = private unnamed_addr constant [9 x i8] c"onStatus\00", align 1
@.str.110 = private unnamed_addr constant [14 x i8] c"releaseStream\00", align 1
@.str.111 = private unnamed_addr constant [10 x i8] c"FCPublish\00", align 1
@.str.112 = private unnamed_addr constant [8 x i8] c"publish\00", align 1
@.str.113 = private unnamed_addr constant [5 x i8] c"play\00", align 1
@.str.114 = private unnamed_addr constant [9 x i8] c"_checkbw\00", align 1
@.str.115 = private unnamed_addr constant [13 x i8] c"createStream\00", align 1
@.str.116 = private unnamed_addr constant [12 x i8] c"FCSubscribe\00", align 1
@.str.117 = private unnamed_addr constant [16 x i8] c"getStreamLength\00", align 1
@.str.118 = private unnamed_addr constant [18 x i8] c"Server error: %s\0A\00", align 1
@.str.119 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.120 = private unnamed_addr constant [14 x i8] c"authmod=adobe\00", align 1
@.str.121 = private unnamed_addr constant [13 x i8] c"authmod=llnw\00", align 1
@.str.122 = private unnamed_addr constant [60 x i8] c"Unknown connect error (unsupported authentication method?)\0A\00", align 1
@.str.123 = private unnamed_addr constant [20 x i8] c"No credentials set\0A\00", align 1
@.str.124 = private unnamed_addr constant [19 x i8] c"?reason=authfailed\00", align 1
@.str.125 = private unnamed_addr constant [29 x i8] c"Incorrect username/password\0A\00", align 1
@.str.126 = private unnamed_addr constant [19 x i8] c"?reason=nosuchuser\00", align 1
@.str.127 = private unnamed_addr constant [20 x i8] c"Incorrect username\0A\00", align 1
@.str.128 = private unnamed_addr constant [23 x i8] c"Authentication failed\0A\00", align 1
@.str.129 = private unnamed_addr constant [19 x i8] c"code=403 need auth\00", align 1
@.str.130 = private unnamed_addr constant [20 x i8] c"?authmod=%s&user=%s\00", align 1
@.str.131 = private unnamed_addr constant [17 x i8] c"?reason=needauth\00", align 1
@.str.132 = private unnamed_addr constant [26 x i8] c"No auth parameters found\0A\00", align 1
@.str.133 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str.134 = private unnamed_addr constant [5 x i8] c"salt\00", align 1
@.str.135 = private unnamed_addr constant [7 x i8] c"opaque\00", align 1
@.str.136 = private unnamed_addr constant [10 x i8] c"challenge\00", align 1
@.str.137 = private unnamed_addr constant [6 x i8] c"nonce\00", align 1
@.str.138 = private unnamed_addr constant [29 x i8] c"Ignoring unsupported var %s\0A\00", align 1
@.str.139 = private unnamed_addr constant [28 x i8] c"Variable %s has NULL value\0A\00", align 1
@.str.140 = private unnamed_addr constant [6 x i8] c"adobe\00", align 1
@.str.141 = private unnamed_addr constant [5 x i8] c"%08x\00", align 1
@.str.142 = private unnamed_addr constant [45 x i8] c"?authmod=%s&user=%s&challenge=%s&response=%s\00", align 1
@.str.143 = private unnamed_addr constant [11 x i8] c"&opaque=%s\00", align 1
@.str.144 = private unnamed_addr constant [5 x i8] c"live\00", align 1
@.str.145 = private unnamed_addr constant [5 x i8] c"auth\00", align 1
@.str.146 = private unnamed_addr constant [9 x i8] c"00000001\00", align 1
@.str.147 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.148 = private unnamed_addr constant [3 x i8] c":/\00", align 1
@.str.149 = private unnamed_addr constant [11 x i8] c"/_definst_\00", align 1
@.str.150 = private unnamed_addr constant [57 x i8] c"?authmod=%s&user=%s&nonce=%s&cnonce=%s&nc=%s&response=%s\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"llnw\00", align 1
@.str.152 = private unnamed_addr constant [31 x i8] c"Unexpected reply on connect()\0A\00", align 1
@.str.153 = private unnamed_addr constant [39 x i8] c"Unexpected reply on getStreamLength()\0A\00", align 1
@.str.154 = private unnamed_addr constant [21 x i8] c"Releasing stream...\0A\00", align 1
@.str.155 = private unnamed_addr constant [21 x i8] c"FCPublish stream...\0A\00", align 1
@.str.156 = private unnamed_addr constant [20 x i8] c"Creating stream...\0A\00", align 1
@.str.157 = private unnamed_addr constant [34 x i8] c"Sending publish command for '%s'\0A\00", align 1
@.str.158 = private unnamed_addr constant [31 x i8] c"Sending play command for '%s'\0A\00", align 1
@.str.159 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.160 = private unnamed_addr constant [21 x i8] c"NetStream.Play.Start\00", align 1
@.str.161 = private unnamed_addr constant [20 x i8] c"NetStream.Play.Stop\00", align 1
@.str.162 = private unnamed_addr constant [31 x i8] c"NetStream.Play.UnpublishNotify\00", align 1
@.str.163 = private unnamed_addr constant [24 x i8] c"NetStream.Publish.Start\00", align 1
@.str.164 = private unnamed_addr constant [22 x i8] c"NetStream.Seek.Notify\00", align 1
@.str.165 = private unnamed_addr constant [20 x i8] c"Error in PT_INVOKE\0A\00", align 1
@.str.166 = private unnamed_addr constant [46 x i8] c"Unable to parse stream name - name too long?\0A\00", align 1
@.str.167 = private unnamed_addr constant [29 x i8] c"Unable to parse stream name\0A\00", align 1
@.str.168 = private unnamed_addr constant [40 x i8] c"Unable to find / in url %s, bad format\0A\00", align 1
@.str.169 = private unnamed_addr constant [36 x i8] c"Unexpected stream %s, expecting %s\0A\00", align 1
@.str.170 = private unnamed_addr constant [34 x i8] c"Unable to create response packet\0A\00", align 1
@.str.171 = private unnamed_addr constant [12 x i8] c"onFCPublish\00", align 1
@.str.172 = private unnamed_addr constant [20 x i8] c"%s is now published\00", align 1
@.str.173 = private unnamed_addr constant [8 x i8] c"details\00", align 1
@.str.174 = private unnamed_addr constant [11 x i8] c"onMetaData\00", align 1
@.str.175 = private unnamed_addr constant [13 x i8] c"videocodecid\00", align 1
@.str.176 = private unnamed_addr constant [13 x i8] c"audiocodecid\00", align 1
@.str.177 = private unnamed_addr constant [14 x i8] c"@setDataFrame\00", align 1
@.str.178 = private unnamed_addr constant [51 x i8] c"Incomplete flv packets in RTMP_PT_METADATA packet\0A\00", align 1
@.str.179 = private unnamed_addr constant [9 x i8] c"duration\00", align 1
@.str.180 = private unnamed_addr constant [18 x i8] c"|RtmpSampleAccess\00", align 1
@.str.181 = private unnamed_addr constant [24 x i8] c"UnPublishing stream...\0A\00", align 1
@.str.182 = private unnamed_addr constant [12 x i8] c"FCUnpublish\00", align 1
@.str.183 = private unnamed_addr constant [20 x i8] c"Deleting stream...\0A\00", align 1
@.str.184 = private unnamed_addr constant [13 x i8] c"deleteStream\00", align 1
@.str.185 = private unnamed_addr constant [23 x i8] c"Pause at timestamp %d\0A\00", align 1
@.str.186 = private unnamed_addr constant [46 x i8] c"Unable to send pause command at timestamp %d\0A\00", align 1
@.str.187 = private unnamed_addr constant [40 x i8] c"Sending pause command for timestamp %d\0A\00", align 1
@.str.188 = private unnamed_addr constant [6 x i8] c"pause\00", align 1
@.str.189 = private unnamed_addr constant [58 x i8] c"Seek on stream index %d at timestamp %ld with flags %08x\0A\00", align 1
@.str.190 = private unnamed_addr constant [81 x i8] c"Unable to send seek command on stream index %d at timestamp %ld with flags %08x\0A\00", align 1
@.str.191 = private unnamed_addr constant [40 x i8] c"Sending seek command for timestamp %ld\0A\00", align 1
@.str.192 = private unnamed_addr constant [5 x i8] c"seek\00", align 1
@.str.193 = private unnamed_addr constant [9 x i8] c"rtmp_app\00", align 1
@.str.194 = private unnamed_addr constant [53 x i8] c"Name of application to connect to on the RTMP server\00", align 1
@.str.195 = private unnamed_addr constant [12 x i8] c"rtmp_buffer\00", align 1
@.str.196 = private unnamed_addr constant [54 x i8] c"Set buffer time in milliseconds. The default is 3000.\00", align 1
@.str.197 = private unnamed_addr constant [10 x i8] c"rtmp_conn\00", align 1
@.str.198 = private unnamed_addr constant [49 x i8] c"Append arbitrary AMF data to the Connect message\00", align 1
@.str.199 = private unnamed_addr constant [14 x i8] c"rtmp_flashver\00", align 1
@.str.200 = private unnamed_addr constant [56 x i8] c"Version of the Flash plugin used to run the SWF player.\00", align 1
@.str.201 = private unnamed_addr constant [20 x i8] c"rtmp_flush_interval\00", align 1
@.str.202 = private unnamed_addr constant [60 x i8] c"Number of packets flushed in the same request (RTMPT only).\00", align 1
@.str.203 = private unnamed_addr constant [10 x i8] c"rtmp_live\00", align 1
@.str.204 = private unnamed_addr constant [41 x i8] c"Specify that the media is a live stream.\00", align 1
@.str.205 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@.str.206 = private unnamed_addr constant [5 x i8] c"both\00", align 1
@.str.207 = private unnamed_addr constant [12 x i8] c"live stream\00", align 1
@.str.208 = private unnamed_addr constant [9 x i8] c"recorded\00", align 1
@.str.209 = private unnamed_addr constant [16 x i8] c"recorded stream\00", align 1
@.str.210 = private unnamed_addr constant [13 x i8] c"rtmp_pageurl\00", align 1
@.str.211 = private unnamed_addr constant [87 x i8] c"URL of the web page in which the media was embedded. By default no value will be sent.\00", align 1
@.str.212 = private unnamed_addr constant [14 x i8] c"rtmp_playpath\00", align 1
@.str.213 = private unnamed_addr constant [40 x i8] c"Stream identifier to play or to publish\00", align 1
@.str.214 = private unnamed_addr constant [15 x i8] c"rtmp_subscribe\00", align 1
@.str.215 = private unnamed_addr constant [64 x i8] c"Name of live stream to subscribe to. Defaults to rtmp_playpath.\00", align 1
@.str.216 = private unnamed_addr constant [53 x i8] c"SHA256 hash of the decompressed SWF file (32 bytes).\00", align 1
@.str.217 = private unnamed_addr constant [13 x i8] c"rtmp_swfsize\00", align 1
@.str.218 = private unnamed_addr constant [65 x i8] c"Size of the decompressed SWF file, required for SWFVerification.\00", align 1
@.str.219 = private unnamed_addr constant [12 x i8] c"rtmp_swfurl\00", align 1
@.str.220 = private unnamed_addr constant [56 x i8] c"URL of the SWF player. By default no value will be sent\00", align 1
@.str.221 = private unnamed_addr constant [15 x i8] c"rtmp_swfverify\00", align 1
@.str.222 = private unnamed_addr constant [57 x i8] c"URL to player swf file, compute hash/size automatically.\00", align 1
@.str.223 = private unnamed_addr constant [11 x i8] c"rtmp_tcurl\00", align 1
@.str.224 = private unnamed_addr constant [63 x i8] c"URL of the target stream. Defaults to proto://host[:port]/app.\00", align 1
@.str.225 = private unnamed_addr constant [12 x i8] c"rtmp_listen\00", align 1
@.str.226 = private unnamed_addr constant [37 x i8] c"Listen for incoming rtmp connections\00", align 1
@.str.227 = private unnamed_addr constant [7 x i8] c"listen\00", align 1
@.str.228 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@.str.229 = private unnamed_addr constant [102 x i8] c"Maximum timeout (in seconds) to wait for incoming connections. -1 is infinite. Implies -rtmp_listen 1\00", align 1
@rtmp_options = internal constant <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.194, i32 0, i32 0), i32 72, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 3, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.196, i32 0, i32 0), i32 348, i32 1, %union.anon { i64 3000 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 3, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.198, i32 0, i32 0), i32 80, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 3, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.200, i32 0, i32 0), i32 240, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 3, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.202, i32 0, i32 0), i32 352, i32 1, %union.anon { i64 10 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.204, i32 0, i32 0), i32 64, i32 1, %union.anon { i64 -2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.206, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 -2 }, double 0.000000e+00, double 0.000000e+00, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.207, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 -1 }, double 0.000000e+00, double 0.000000e+00, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.209, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i32 0, i32 0) }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.211, i32 0, i32 0), i32 328, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 2, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.213, i32 0, i32 0), i32 56, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 3, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.215, i32 0, i32 0), i32 336, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.216, i32 0, i32 0), i32 248, i32 7, %union.anon zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.218, i32 0, i32 0), i32 260, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 2, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.219, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.220, i32 0, i32 0), i32 264, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 3, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.222, i32 0, i32 0), i32 272, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 2, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.223, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.224, i32 0, i32 0), i32 232, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 3, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.226, i32 0, i32 0), i32 376, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.225, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.226, i32 0, i32 0), i32 376, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.225, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.228, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.229, i32 0, i32 0), i32 380, i32 1, %union.anon { i64 -1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.225, i32 0, i32 0) }, %struct.AVOption zeroinitializer }>, align 16

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_open(%struct.URLContext* %s, i8* %uri, i32 %flags, %struct.AVDictionary** %opts) #0 !dbg !373 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %uri.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %opts.addr = alloca %struct.AVDictionary**, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %proto = alloca [8 x i8], align 1
  %hostname = alloca [256 x i8], align 16
  %path = alloca [1024 x i8], align 16
  %auth = alloca [100 x i8], align 16
  %fname = alloca i8*, align 8
  %old_app = alloca i8*, align 8
  %qmark = alloca i8*, align 8
  %n = alloca i8*, align 8
  %fname_buffer = alloca [1024 x i8], align 16
  %buf = alloca [2048 x i8], align 16
  %port = alloca i32, align 4
  %ret = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %amp = alloca i8*, align 8
  %next = alloca i8*, align 8
  %p = alloca i8*, align 8
  %c = alloca i8*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !375, metadata !376), !dbg !377
  store i8* %uri, i8** %uri.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uri.addr, metadata !378, metadata !376), !dbg !379
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !380, metadata !376), !dbg !381
  store %struct.AVDictionary** %opts, %struct.AVDictionary*** %opts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %opts.addr, metadata !382, metadata !376), !dbg !383
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !384, metadata !376), !dbg !481
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !482
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !483
  %1 = load i8*, i8** %priv_data, align 8, !dbg !483
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !482
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !481
  call void @llvm.dbg.declare(metadata [8 x i8]* %proto, metadata !484, metadata !376), !dbg !488
  call void @llvm.dbg.declare(metadata [256 x i8]* %hostname, metadata !489, metadata !376), !dbg !493
  call void @llvm.dbg.declare(metadata [1024 x i8]* %path, metadata !494, metadata !376), !dbg !498
  call void @llvm.dbg.declare(metadata [100 x i8]* %auth, metadata !499, metadata !376), !dbg !503
  call void @llvm.dbg.declare(metadata i8** %fname, metadata !504, metadata !376), !dbg !505
  call void @llvm.dbg.declare(metadata i8** %old_app, metadata !506, metadata !376), !dbg !507
  call void @llvm.dbg.declare(metadata i8** %qmark, metadata !508, metadata !376), !dbg !509
  call void @llvm.dbg.declare(metadata i8** %n, metadata !510, metadata !376), !dbg !511
  call void @llvm.dbg.declare(metadata [1024 x i8]* %fname_buffer, metadata !512, metadata !376), !dbg !513
  call void @llvm.dbg.declare(metadata [2048 x i8]* %buf, metadata !514, metadata !376), !dbg !518
  call void @llvm.dbg.declare(metadata i32* %port, metadata !519, metadata !376), !dbg !520
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !521, metadata !376), !dbg !522
  %3 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !523
  %listen_timeout = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %3, i32 0, i32 47, !dbg !525
  %4 = load i32, i32* %listen_timeout, align 4, !dbg !525
  %cmp = icmp sgt i32 %4, 0, !dbg !526
  br i1 %cmp, label %if.then, label %if.end, !dbg !527

if.then:                                          ; preds = %entry
  %5 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !528
  %listen = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %5, i32 0, i32 46, !dbg !529
  store i32 1, i32* %listen, align 8, !dbg !530
  br label %if.end, !dbg !528

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %flags.addr, align 4, !dbg !531
  %and = and i32 %6, 2, !dbg !532
  %tobool = icmp ne i32 %and, 0, !dbg !533
  %lnot = xor i1 %tobool, true, !dbg !533
  %lnot.ext = zext i1 %lnot to i32, !dbg !533
  %7 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !534
  %is_input = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %7, i32 0, i32 6, !dbg !535
  store i32 %lnot.ext, i32* %is_input, align 8, !dbg !536
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %proto, i32 0, i32 0, !dbg !537
  %arraydecay1 = getelementptr inbounds [100 x i8], [100 x i8]* %auth, i32 0, i32 0, !dbg !538
  %arraydecay2 = getelementptr inbounds [256 x i8], [256 x i8]* %hostname, i32 0, i32 0, !dbg !539
  %arraydecay3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !540
  %8 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !541
  %filename = getelementptr inbounds %struct.URLContext, %struct.URLContext* %8, i32 0, i32 3, !dbg !542
  %9 = load i8*, i8** %filename, align 8, !dbg !542
  call void @av_url_split(i8* %arraydecay, i32 8, i8* %arraydecay1, i32 100, i8* %arraydecay2, i32 256, i32* %port, i8* %arraydecay3, i32 1024, i8* %9), !dbg !543
  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !544
  %call = call i8* @strchr(i8* %arraydecay4, i32 32) #9, !dbg !545
  store i8* %call, i8** %n, align 8, !dbg !546
  %10 = load i8*, i8** %n, align 8, !dbg !547
  %tobool5 = icmp ne i8* %10, null, !dbg !547
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !549

if.then6:                                         ; preds = %if.end
  %11 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !550
  %12 = bitcast %struct.URLContext* %11 to i8*, !dbg !550
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 24, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @.str.6, i32 0, i32 0)), !dbg !552
  %13 = load i8*, i8** %n, align 8, !dbg !553
  store i8 0, i8* %13, align 1, !dbg !554
  br label %if.end7, !dbg !555

if.end7:                                          ; preds = %if.then6, %if.end
  %arrayidx = getelementptr inbounds [100 x i8], [100 x i8]* %auth, i64 0, i64 0, !dbg !556
  %14 = load i8, i8* %arrayidx, align 16, !dbg !556
  %tobool8 = icmp ne i8 %14, 0, !dbg !556
  br i1 %tobool8, label %if.then9, label %if.end20, !dbg !558

if.then9:                                         ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !559, metadata !376), !dbg !561
  %arraydecay10 = getelementptr inbounds [100 x i8], [100 x i8]* %auth, i32 0, i32 0, !dbg !562
  %call11 = call i8* @strchr(i8* %arraydecay10, i32 58) #9, !dbg !563
  store i8* %call11, i8** %ptr, align 8, !dbg !561
  %15 = load i8*, i8** %ptr, align 8, !dbg !564
  %tobool12 = icmp ne i8* %15, null, !dbg !564
  br i1 %tobool12, label %if.then13, label %if.end19, !dbg !566

if.then13:                                        ; preds = %if.then9
  %16 = load i8*, i8** %ptr, align 8, !dbg !567
  store i8 0, i8* %16, align 1, !dbg !569
  %17 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !570
  %username = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %17, i32 0, i32 50, !dbg !571
  %arraydecay14 = getelementptr inbounds [50 x i8], [50 x i8]* %username, i32 0, i32 0, !dbg !570
  %arraydecay15 = getelementptr inbounds [100 x i8], [100 x i8]* %auth, i32 0, i32 0, !dbg !572
  %call16 = call i64 @av_strlcpy(i8* %arraydecay14, i8* %arraydecay15, i64 50), !dbg !573
  %18 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !574
  %password = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %18, i32 0, i32 51, !dbg !575
  %arraydecay17 = getelementptr inbounds [50 x i8], [50 x i8]* %password, i32 0, i32 0, !dbg !574
  %19 = load i8*, i8** %ptr, align 8, !dbg !576
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 1, !dbg !577
  %call18 = call i64 @av_strlcpy(i8* %arraydecay17, i8* %add.ptr, i64 50), !dbg !578
  br label %if.end19, !dbg !579

if.end19:                                         ; preds = %if.then13, %if.then9
  br label %if.end20, !dbg !580

if.end20:                                         ; preds = %if.end19, %if.end7
  %20 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !581
  %listen21 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %20, i32 0, i32 46, !dbg !583
  %21 = load i32, i32* %listen21, align 8, !dbg !583
  %tobool22 = icmp ne i32 %21, 0, !dbg !581
  br i1 %tobool22, label %land.lhs.true, label %if.end28, !dbg !584

land.lhs.true:                                    ; preds = %if.end20
  %arraydecay23 = getelementptr inbounds [8 x i8], [8 x i8]* %proto, i32 0, i32 0, !dbg !585
  %call24 = call i32 @strcmp(i8* %arraydecay23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)) #9, !dbg !587
  %tobool25 = icmp ne i32 %call24, 0, !dbg !587
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !588

if.then26:                                        ; preds = %land.lhs.true
  %22 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !589
  %23 = bitcast %struct.URLContext* %22 to i8*, !dbg !589
  %arraydecay27 = getelementptr inbounds [8 x i8], [8 x i8]* %proto, i32 0, i32 0, !dbg !591
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i32 0, i32 0), i8* %arraydecay27), !dbg !592
  store i32 -22, i32* %retval, align 4, !dbg !593
  br label %return, !dbg !593

if.end28:                                         ; preds = %land.lhs.true, %if.end20
  %arraydecay29 = getelementptr inbounds [8 x i8], [8 x i8]* %proto, i32 0, i32 0, !dbg !594
  %call30 = call i32 @strcmp(i8* %arraydecay29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0)) #9, !dbg !596
  %tobool31 = icmp ne i32 %call30, 0, !dbg !596
  br i1 %tobool31, label %lor.lhs.false, label %if.then35, !dbg !597

lor.lhs.false:                                    ; preds = %if.end28
  %arraydecay32 = getelementptr inbounds [8 x i8], [8 x i8]* %proto, i32 0, i32 0, !dbg !598
  %call33 = call i32 @strcmp(i8* %arraydecay32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0)) #9, !dbg !600
  %tobool34 = icmp ne i32 %call33, 0, !dbg !600
  br i1 %tobool34, label %if.else, label %if.then35, !dbg !601

if.then35:                                        ; preds = %lor.lhs.false, %if.end28
  %arraydecay36 = getelementptr inbounds [8 x i8], [8 x i8]* %proto, i32 0, i32 0, !dbg !602
  %call37 = call i32 @strcmp(i8* %arraydecay36, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0)) #9, !dbg !605
  %tobool38 = icmp ne i32 %call37, 0, !dbg !605
  br i1 %tobool38, label %if.end41, label %if.then39, !dbg !606

if.then39:                                        ; preds = %if.then35
  %24 = load %struct.AVDictionary**, %struct.AVDictionary*** %opts.addr, align 8, !dbg !607
  %call40 = call i32 @av_dict_set(%struct.AVDictionary** %24, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 1), !dbg !608
  br label %if.end41, !dbg !608

if.end41:                                         ; preds = %if.then39, %if.then35
  %arraydecay42 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !609
  %arraydecay43 = getelementptr inbounds [256 x i8], [256 x i8]* %hostname, i32 0, i32 0, !dbg !610
  %25 = load i32, i32* %port, align 4, !dbg !611
  %call44 = call i32 (i8*, i32, i8*, i8*, i8*, i32, i8*, ...) @ff_url_join(i8* %arraydecay42, i32 2048, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8* null, i8* %arraydecay43, i32 %25, i8* null), !dbg !612
  br label %if.end91, !dbg !613

if.else:                                          ; preds = %lor.lhs.false
  %arraydecay45 = getelementptr inbounds [8 x i8], [8 x i8]* %proto, i32 0, i32 0, !dbg !614
  %call46 = call i32 @strcmp(i8* %arraydecay45, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0)) #9, !dbg !617
  %tobool47 = icmp ne i32 %call46, 0, !dbg !617
  br i1 %tobool47, label %if.else55, label %if.then48, !dbg !618

if.then48:                                        ; preds = %if.else
  %26 = load i32, i32* %port, align 4, !dbg !619
  %cmp49 = icmp slt i32 %26, 0, !dbg !622
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !623

if.then50:                                        ; preds = %if.then48
  store i32 443, i32* %port, align 4, !dbg !624
  br label %if.end51, !dbg !625

if.end51:                                         ; preds = %if.then50, %if.then48
  %arraydecay52 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !626
  %arraydecay53 = getelementptr inbounds [256 x i8], [256 x i8]* %hostname, i32 0, i32 0, !dbg !627
  %27 = load i32, i32* %port, align 4, !dbg !628
  %call54 = call i32 (i8*, i32, i8*, i8*, i8*, i32, i8*, ...) @ff_url_join(i8* %arraydecay52, i32 2048, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i32 0, i32 0), i8* null, i8* %arraydecay53, i32 %27, i8* null), !dbg !629
  br label %if.end90, !dbg !630

if.else55:                                        ; preds = %if.else
  %arraydecay56 = getelementptr inbounds [8 x i8], [8 x i8]* %proto, i32 0, i32 0, !dbg !631
  %call57 = call i32 @strcmp(i8* %arraydecay56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0)) #9, !dbg !634
  %tobool58 = icmp ne i32 %call57, 0, !dbg !634
  br i1 %tobool58, label %lor.lhs.false59, label %if.then63, !dbg !635

lor.lhs.false59:                                  ; preds = %if.else55
  %arraydecay60 = getelementptr inbounds [8 x i8], [8 x i8]* %proto, i32 0, i32 0, !dbg !636
  %call61 = call i32 @strcmp(i8* %arraydecay60, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0)) #9, !dbg !638
  %tobool62 = icmp ne i32 %call61, 0, !dbg !638
  br i1 %tobool62, label %if.else73, label %if.then63, !dbg !639

if.then63:                                        ; preds = %lor.lhs.false59, %if.else55
  %arraydecay64 = getelementptr inbounds [8 x i8], [8 x i8]* %proto, i32 0, i32 0, !dbg !640
  %call65 = call i32 @strcmp(i8* %arraydecay64, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0)) #9, !dbg !643
  %tobool66 = icmp ne i32 %call65, 0, !dbg !643
  br i1 %tobool66, label %if.end69, label %if.then67, !dbg !644

if.then67:                                        ; preds = %if.then63
  %28 = load %struct.AVDictionary**, %struct.AVDictionary*** %opts.addr, align 8, !dbg !645
  %call68 = call i32 @av_dict_set(%struct.AVDictionary** %28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 1), !dbg !646
  br label %if.end69, !dbg !646

if.end69:                                         ; preds = %if.then67, %if.then63
  %arraydecay70 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !647
  %arraydecay71 = getelementptr inbounds [256 x i8], [256 x i8]* %hostname, i32 0, i32 0, !dbg !648
  %29 = load i32, i32* %port, align 4, !dbg !649
  %call72 = call i32 (i8*, i32, i8*, i8*, i8*, i32, i8*, ...) @ff_url_join(i8* %arraydecay70, i32 2048, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i32 0, i32 0), i8* null, i8* %arraydecay71, i32 %29, i8* null), !dbg !650
  %30 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !651
  %encrypted = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %30, i32 0, i32 42, !dbg !652
  store i32 1, i32* %encrypted, align 4, !dbg !653
  br label %if.end89, !dbg !654

if.else73:                                        ; preds = %lor.lhs.false59
  %31 = load i32, i32* %port, align 4, !dbg !655
  %cmp74 = icmp slt i32 %31, 0, !dbg !658
  br i1 %cmp74, label %if.then75, label %if.end76, !dbg !659

if.then75:                                        ; preds = %if.else73
  store i32 1935, i32* %port, align 4, !dbg !660
  br label %if.end76, !dbg !661

if.end76:                                         ; preds = %if.then75, %if.else73
  %32 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !662
  %listen77 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %32, i32 0, i32 46, !dbg !664
  %33 = load i32, i32* %listen77, align 8, !dbg !664
  %tobool78 = icmp ne i32 %33, 0, !dbg !662
  br i1 %tobool78, label %if.then79, label %if.else84, !dbg !665

if.then79:                                        ; preds = %if.end76
  %arraydecay80 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !666
  %arraydecay81 = getelementptr inbounds [256 x i8], [256 x i8]* %hostname, i32 0, i32 0, !dbg !667
  %34 = load i32, i32* %port, align 4, !dbg !668
  %35 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !669
  %listen_timeout82 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %35, i32 0, i32 47, !dbg !670
  %36 = load i32, i32* %listen_timeout82, align 4, !dbg !670
  %mul = mul nsw i32 %36, 1000, !dbg !671
  %call83 = call i32 (i8*, i32, i8*, i8*, i8*, i32, i8*, ...) @ff_url_join(i8* %arraydecay80, i32 2048, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i8* null, i8* %arraydecay81, i32 %34, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i32 0, i32 0), i32 %mul), !dbg !672
  br label %if.end88, !dbg !672

if.else84:                                        ; preds = %if.end76
  %arraydecay85 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !673
  %arraydecay86 = getelementptr inbounds [256 x i8], [256 x i8]* %hostname, i32 0, i32 0, !dbg !674
  %37 = load i32, i32* %port, align 4, !dbg !675
  %call87 = call i32 (i8*, i32, i8*, i8*, i8*, i32, i8*, ...) @ff_url_join(i8* %arraydecay85, i32 2048, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i8* null, i8* %arraydecay86, i32 %37, i8* null), !dbg !676
  br label %if.end88

if.end88:                                         ; preds = %if.else84, %if.then79
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end69
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end51
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.end41
  br label %reconnect, !dbg !677

reconnect:                                        ; preds = %for.end, %if.end91
  %38 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !679
  %stream = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %38, i32 0, i32 1, !dbg !681
  %arraydecay92 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !682
  %39 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !683
  %interrupt_callback = getelementptr inbounds %struct.URLContext, %struct.URLContext* %39, i32 0, i32 8, !dbg !684
  %40 = load %struct.AVDictionary**, %struct.AVDictionary*** %opts.addr, align 8, !dbg !685
  %41 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !686
  %protocol_whitelist = getelementptr inbounds %struct.URLContext, %struct.URLContext* %41, i32 0, i32 10, !dbg !687
  %42 = load i8*, i8** %protocol_whitelist, align 8, !dbg !687
  %43 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !688
  %protocol_blacklist = getelementptr inbounds %struct.URLContext, %struct.URLContext* %43, i32 0, i32 11, !dbg !689
  %44 = load i8*, i8** %protocol_blacklist, align 8, !dbg !689
  %45 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !690
  %call93 = call i32 @ffurl_open_whitelist(%struct.URLContext** %stream, i8* %arraydecay92, i32 3, %struct.AVIOInterruptCB* %interrupt_callback, %struct.AVDictionary** %40, i8* %42, i8* %44, %struct.URLContext* %45), !dbg !691
  store i32 %call93, i32* %ret, align 4, !dbg !692
  %cmp94 = icmp slt i32 %call93, 0, !dbg !693
  br i1 %cmp94, label %if.then95, label %if.end97, !dbg !694

if.then95:                                        ; preds = %reconnect
  %46 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !695
  %47 = bitcast %struct.URLContext* %46 to i8*, !dbg !695
  %arraydecay96 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0, !dbg !697
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i32 0, i32 0), i8* %arraydecay96), !dbg !698
  br label %fail, !dbg !699

if.end97:                                         ; preds = %reconnect
  %48 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !700
  %swfverify = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %48, i32 0, i32 35, !dbg !702
  %49 = load i8*, i8** %swfverify, align 8, !dbg !702
  %tobool98 = icmp ne i8* %49, null, !dbg !700
  br i1 %tobool98, label %if.then99, label %if.end104, !dbg !703

if.then99:                                        ; preds = %if.end97
  %50 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !704
  %call100 = call i32 @rtmp_calc_swfhash(%struct.URLContext* %50), !dbg !707
  store i32 %call100, i32* %ret, align 4, !dbg !708
  %cmp101 = icmp slt i32 %call100, 0, !dbg !709
  br i1 %cmp101, label %if.then102, label %if.end103, !dbg !710

if.then102:                                       ; preds = %if.then99
  br label %fail, !dbg !711

if.end103:                                        ; preds = %if.then99
  br label %if.end104, !dbg !712

if.end104:                                        ; preds = %if.end103, %if.end97
  %51 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !713
  %state = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %51, i32 0, i32 11, !dbg !714
  store i32 0, i32* %state, align 8, !dbg !715
  %52 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !716
  %listen105 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %52, i32 0, i32 46, !dbg !718
  %53 = load i32, i32* %listen105, align 8, !dbg !718
  %tobool106 = icmp ne i32 %53, 0, !dbg !716
  br i1 %tobool106, label %if.end111, label %land.lhs.true107, !dbg !719

land.lhs.true107:                                 ; preds = %if.end104
  %54 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !720
  %55 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !722
  %call108 = call i32 @rtmp_handshake(%struct.URLContext* %54, %struct.RTMPContext* %55), !dbg !723
  store i32 %call108, i32* %ret, align 4, !dbg !724
  %cmp109 = icmp slt i32 %call108, 0, !dbg !725
  br i1 %cmp109, label %if.then110, label %if.end111, !dbg !726

if.then110:                                       ; preds = %land.lhs.true107
  br label %fail, !dbg !727

if.end111:                                        ; preds = %land.lhs.true107, %if.end104
  %56 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !728
  %listen112 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %56, i32 0, i32 46, !dbg !730
  %57 = load i32, i32* %listen112, align 8, !dbg !730
  %tobool113 = icmp ne i32 %57, 0, !dbg !728
  br i1 %tobool113, label %land.lhs.true114, label %if.end118, !dbg !731

land.lhs.true114:                                 ; preds = %if.end111
  %58 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !732
  %59 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !734
  %call115 = call i32 @rtmp_server_handshake(%struct.URLContext* %58, %struct.RTMPContext* %59), !dbg !735
  store i32 %call115, i32* %ret, align 4, !dbg !736
  %cmp116 = icmp slt i32 %call115, 0, !dbg !737
  br i1 %cmp116, label %if.then117, label %if.end118, !dbg !738

if.then117:                                       ; preds = %land.lhs.true114
  br label %fail, !dbg !739

if.end118:                                        ; preds = %land.lhs.true114, %if.end111
  %60 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !740
  %out_chunk_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %60, i32 0, i32 5, !dbg !741
  store i32 128, i32* %out_chunk_size, align 4, !dbg !742
  %61 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !743
  %in_chunk_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %61, i32 0, i32 4, !dbg !744
  store i32 128, i32* %in_chunk_size, align 8, !dbg !745
  %62 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !746
  %state119 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %62, i32 0, i32 11, !dbg !747
  store i32 1, i32* %state119, align 8, !dbg !748
  %63 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !749
  %app = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %63, i32 0, i32 9, !dbg !750
  %64 = load i8*, i8** %app, align 8, !dbg !750
  store i8* %64, i8** %old_app, align 8, !dbg !751
  %call120 = call noalias i8* @av_malloc(i64 1024), !dbg !752
  %65 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !753
  %app121 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %65, i32 0, i32 9, !dbg !754
  store i8* %call120, i8** %app121, align 8, !dbg !755
  %66 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !756
  %app122 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %66, i32 0, i32 9, !dbg !758
  %67 = load i8*, i8** %app122, align 8, !dbg !758
  %tobool123 = icmp ne i8* %67, null, !dbg !756
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !759

if.then124:                                       ; preds = %if.end118
  store i32 -12, i32* %ret, align 4, !dbg !760
  br label %fail, !dbg !762

if.end125:                                        ; preds = %if.end118
  %arraydecay126 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !763
  %call127 = call i8* @strchr(i8* %arraydecay126, i32 63) #9, !dbg !764
  store i8* %call127, i8** %qmark, align 8, !dbg !765
  %68 = load i8*, i8** %qmark, align 8, !dbg !766
  %tobool128 = icmp ne i8* %68, null, !dbg !766
  br i1 %tobool128, label %land.lhs.true129, label %if.else152, !dbg !768

land.lhs.true129:                                 ; preds = %if.end125
  %69 = load i8*, i8** %qmark, align 8, !dbg !769
  %call130 = call i8* @strstr(i8* %69, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0)) #9, !dbg !771
  %tobool131 = icmp ne i8* %call130, null, !dbg !771
  br i1 %tobool131, label %if.then132, label %if.else152, !dbg !772

if.then132:                                       ; preds = %land.lhs.true129
  call void @llvm.dbg.declare(metadata i8** %amp, metadata !773, metadata !376), !dbg !775
  %70 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !776
  %app133 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %70, i32 0, i32 9, !dbg !777
  %71 = load i8*, i8** %app133, align 8, !dbg !777
  %arraydecay134 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !778
  %add.ptr135 = getelementptr inbounds i8, i8* %arraydecay134, i64 1, !dbg !779
  %call136 = call i64 @av_strlcpy(i8* %71, i8* %add.ptr135, i64 1024), !dbg !780
  %arraydecay137 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !781
  %call138 = call i8* @strstr(i8* %arraydecay137, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0)) #9, !dbg !782
  %add.ptr139 = getelementptr inbounds i8, i8* %call138, i64 6, !dbg !783
  store i8* %add.ptr139, i8** %fname, align 8, !dbg !784
  %72 = load i8*, i8** %fname, align 8, !dbg !785
  %call140 = call i8* @strchr(i8* %72, i32 38) #9, !dbg !786
  store i8* %call140, i8** %amp, align 8, !dbg !787
  %73 = load i8*, i8** %amp, align 8, !dbg !788
  %tobool141 = icmp ne i8* %73, null, !dbg !788
  br i1 %tobool141, label %if.then142, label %if.end151, !dbg !790

if.then142:                                       ; preds = %if.then132
  %arraydecay143 = getelementptr inbounds [1024 x i8], [1024 x i8]* %fname_buffer, i32 0, i32 0, !dbg !791
  %74 = load i8*, i8** %fname, align 8, !dbg !793
  %75 = load i8*, i8** %amp, align 8, !dbg !794
  %76 = load i8*, i8** %fname, align 8, !dbg !795
  %sub.ptr.lhs.cast = ptrtoint i8* %75 to i64, !dbg !796
  %sub.ptr.rhs.cast = ptrtoint i8* %76 to i64, !dbg !796
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !796
  %add = add nsw i64 %sub.ptr.sub, 1, !dbg !797
  %cmp144 = icmp ugt i64 %add, 1024, !dbg !798
  br i1 %cmp144, label %cond.true, label %cond.false, !dbg !799

cond.true:                                        ; preds = %if.then142
  br label %cond.end, !dbg !800

cond.false:                                       ; preds = %if.then142
  %77 = load i8*, i8** %amp, align 8, !dbg !802
  %78 = load i8*, i8** %fname, align 8, !dbg !804
  %sub.ptr.lhs.cast145 = ptrtoint i8* %77 to i64, !dbg !805
  %sub.ptr.rhs.cast146 = ptrtoint i8* %78 to i64, !dbg !805
  %sub.ptr.sub147 = sub i64 %sub.ptr.lhs.cast145, %sub.ptr.rhs.cast146, !dbg !805
  %add148 = add nsw i64 %sub.ptr.sub147, 1, !dbg !806
  br label %cond.end, !dbg !807

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 1024, %cond.true ], [ %add148, %cond.false ], !dbg !808
  %call149 = call i64 @av_strlcpy(i8* %arraydecay143, i8* %74, i64 %cond), !dbg !810
  %arraydecay150 = getelementptr inbounds [1024 x i8], [1024 x i8]* %fname_buffer, i32 0, i32 0, !dbg !811
  store i8* %arraydecay150, i8** %fname, align 8, !dbg !812
  br label %if.end151, !dbg !813

if.end151:                                        ; preds = %cond.end, %if.then132
  br label %if.end233, !dbg !814

if.else152:                                       ; preds = %land.lhs.true129, %if.end125
  %arraydecay153 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !815
  %call154 = call i32 @strncmp(i8* %arraydecay153, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i32 0, i32 0), i64 10) #9, !dbg !818
  %tobool155 = icmp ne i32 %call154, 0, !dbg !818
  br i1 %tobool155, label %if.else160, label %if.then156, !dbg !819

if.then156:                                       ; preds = %if.else152
  %arraydecay157 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !820
  %add.ptr158 = getelementptr inbounds i8, i8* %arraydecay157, i64 10, !dbg !822
  store i8* %add.ptr158, i8** %fname, align 8, !dbg !823
  %79 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !824
  %app159 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %79, i32 0, i32 9, !dbg !825
  %80 = load i8*, i8** %app159, align 8, !dbg !825
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), i64 9, i32 1, i1 false), !dbg !826
  br label %if.end232, !dbg !827

if.else160:                                       ; preds = %if.else152
  call void @llvm.dbg.declare(metadata i8** %next, metadata !828, metadata !376), !dbg !830
  %arraydecay161 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !831
  %81 = load i8, i8* %arraydecay161, align 16, !dbg !831
  %conv = sext i8 %81 to i32, !dbg !831
  %tobool162 = icmp ne i32 %conv, 0, !dbg !831
  br i1 %tobool162, label %cond.true163, label %cond.false166, !dbg !831

cond.true163:                                     ; preds = %if.else160
  %arraydecay164 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !832
  %add.ptr165 = getelementptr inbounds i8, i8* %arraydecay164, i64 1, !dbg !834
  br label %cond.end168, !dbg !835

cond.false166:                                    ; preds = %if.else160
  %arraydecay167 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !836
  br label %cond.end168, !dbg !838

cond.end168:                                      ; preds = %cond.false166, %cond.true163
  %cond169 = phi i8* [ %add.ptr165, %cond.true163 ], [ %arraydecay167, %cond.false166 ], !dbg !839
  store i8* %cond169, i8** %next, align 8, !dbg !841
  call void @llvm.dbg.declare(metadata i8** %p, metadata !842, metadata !376), !dbg !843
  %82 = load i8*, i8** %next, align 8, !dbg !844
  %call170 = call i8* @strchr(i8* %82, i32 47) #9, !dbg !845
  store i8* %call170, i8** %p, align 8, !dbg !843
  %83 = load i8*, i8** %p, align 8, !dbg !846
  %tobool171 = icmp ne i8* %83, null, !dbg !846
  br i1 %tobool171, label %if.else179, label %if.then172, !dbg !848

if.then172:                                       ; preds = %cond.end168
  %84 = load i8*, i8** %old_app, align 8, !dbg !849
  %tobool173 = icmp ne i8* %84, null, !dbg !849
  br i1 %tobool173, label %if.then174, label %if.else175, !dbg !852

if.then174:                                       ; preds = %if.then172
  %85 = load i8*, i8** %next, align 8, !dbg !853
  store i8* %85, i8** %fname, align 8, !dbg !855
  br label %if.end178, !dbg !856

if.else175:                                       ; preds = %if.then172
  store i8* null, i8** %fname, align 8, !dbg !857
  %86 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !859
  %app176 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %86, i32 0, i32 9, !dbg !860
  %87 = load i8*, i8** %app176, align 8, !dbg !860
  %88 = load i8*, i8** %next, align 8, !dbg !861
  %call177 = call i64 @av_strlcpy(i8* %87, i8* %88, i64 1024), !dbg !862
  br label %if.end178

if.end178:                                        ; preds = %if.else175, %if.then174
  br label %if.end231, !dbg !863

if.else179:                                       ; preds = %cond.end168
  call void @llvm.dbg.declare(metadata i8** %c, metadata !864, metadata !376), !dbg !866
  %89 = load i8*, i8** %p, align 8, !dbg !867
  %add.ptr180 = getelementptr inbounds i8, i8* %89, i64 1, !dbg !868
  %call181 = call i8* @strchr(i8* %add.ptr180, i32 58) #9, !dbg !869
  store i8* %call181, i8** %c, align 8, !dbg !866
  %90 = load i8*, i8** %p, align 8, !dbg !870
  %add.ptr182 = getelementptr inbounds i8, i8* %90, i64 1, !dbg !871
  %call183 = call i8* @strchr(i8* %add.ptr182, i32 47) #9, !dbg !872
  store i8* %call183, i8** %fname, align 8, !dbg !873
  %91 = load i8*, i8** %fname, align 8, !dbg !874
  %tobool184 = icmp ne i8* %91, null, !dbg !874
  br i1 %tobool184, label %lor.lhs.false185, label %if.then190, !dbg !876

lor.lhs.false185:                                 ; preds = %if.else179
  %92 = load i8*, i8** %c, align 8, !dbg !877
  %tobool186 = icmp ne i8* %92, null, !dbg !877
  br i1 %tobool186, label %land.lhs.true187, label %if.else210, !dbg !879

land.lhs.true187:                                 ; preds = %lor.lhs.false185
  %93 = load i8*, i8** %c, align 8, !dbg !880
  %94 = load i8*, i8** %fname, align 8, !dbg !882
  %cmp188 = icmp ult i8* %93, %94, !dbg !883
  br i1 %cmp188, label %if.then190, label %if.else210, !dbg !884

if.then190:                                       ; preds = %land.lhs.true187, %if.else179
  %95 = load i8*, i8** %p, align 8, !dbg !885
  %add.ptr191 = getelementptr inbounds i8, i8* %95, i64 1, !dbg !887
  store i8* %add.ptr191, i8** %fname, align 8, !dbg !888
  %96 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !889
  %app192 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %96, i32 0, i32 9, !dbg !890
  %97 = load i8*, i8** %app192, align 8, !dbg !890
  %arraydecay193 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !891
  %add.ptr194 = getelementptr inbounds i8, i8* %arraydecay193, i64 1, !dbg !892
  %98 = load i8*, i8** %p, align 8, !dbg !893
  %arraydecay195 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !894
  %sub.ptr.lhs.cast196 = ptrtoint i8* %98 to i64, !dbg !895
  %sub.ptr.rhs.cast197 = ptrtoint i8* %arraydecay195 to i64, !dbg !895
  %sub.ptr.sub198 = sub i64 %sub.ptr.lhs.cast196, %sub.ptr.rhs.cast197, !dbg !895
  %cmp199 = icmp sgt i64 %sub.ptr.sub198, 1024, !dbg !896
  br i1 %cmp199, label %cond.true201, label %cond.false202, !dbg !897

cond.true201:                                     ; preds = %if.then190
  br label %cond.end207, !dbg !898

cond.false202:                                    ; preds = %if.then190
  %99 = load i8*, i8** %p, align 8, !dbg !900
  %arraydecay203 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !902
  %sub.ptr.lhs.cast204 = ptrtoint i8* %99 to i64, !dbg !903
  %sub.ptr.rhs.cast205 = ptrtoint i8* %arraydecay203 to i64, !dbg !903
  %sub.ptr.sub206 = sub i64 %sub.ptr.lhs.cast204, %sub.ptr.rhs.cast205, !dbg !903
  br label %cond.end207, !dbg !904

cond.end207:                                      ; preds = %cond.false202, %cond.true201
  %cond208 = phi i64 [ 1024, %cond.true201 ], [ %sub.ptr.sub206, %cond.false202 ], !dbg !905
  %call209 = call i64 @av_strlcpy(i8* %97, i8* %add.ptr194, i64 %cond208), !dbg !907
  br label %if.end230, !dbg !908

if.else210:                                       ; preds = %land.lhs.true187, %lor.lhs.false185
  %100 = load i8*, i8** %fname, align 8, !dbg !909
  %incdec.ptr = getelementptr inbounds i8, i8* %100, i32 1, !dbg !909
  store i8* %incdec.ptr, i8** %fname, align 8, !dbg !909
  %101 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !911
  %app211 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %101, i32 0, i32 9, !dbg !912
  %102 = load i8*, i8** %app211, align 8, !dbg !912
  %arraydecay212 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !913
  %add.ptr213 = getelementptr inbounds i8, i8* %arraydecay212, i64 1, !dbg !914
  %103 = load i8*, i8** %fname, align 8, !dbg !915
  %arraydecay214 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !916
  %sub.ptr.lhs.cast215 = ptrtoint i8* %103 to i64, !dbg !917
  %sub.ptr.rhs.cast216 = ptrtoint i8* %arraydecay214 to i64, !dbg !917
  %sub.ptr.sub217 = sub i64 %sub.ptr.lhs.cast215, %sub.ptr.rhs.cast216, !dbg !917
  %sub = sub nsw i64 %sub.ptr.sub217, 1, !dbg !918
  %cmp218 = icmp sgt i64 %sub, 1024, !dbg !919
  br i1 %cmp218, label %cond.true220, label %cond.false221, !dbg !920

cond.true220:                                     ; preds = %if.else210
  br label %cond.end227, !dbg !921

cond.false221:                                    ; preds = %if.else210
  %104 = load i8*, i8** %fname, align 8, !dbg !923
  %arraydecay222 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !925
  %sub.ptr.lhs.cast223 = ptrtoint i8* %104 to i64, !dbg !926
  %sub.ptr.rhs.cast224 = ptrtoint i8* %arraydecay222 to i64, !dbg !926
  %sub.ptr.sub225 = sub i64 %sub.ptr.lhs.cast223, %sub.ptr.rhs.cast224, !dbg !926
  %sub226 = sub nsw i64 %sub.ptr.sub225, 1, !dbg !927
  br label %cond.end227, !dbg !928

cond.end227:                                      ; preds = %cond.false221, %cond.true220
  %cond228 = phi i64 [ 1024, %cond.true220 ], [ %sub226, %cond.false221 ], !dbg !929
  %call229 = call i64 @av_strlcpy(i8* %102, i8* %add.ptr213, i64 %cond228), !dbg !931
  br label %if.end230

if.end230:                                        ; preds = %cond.end227, %cond.end207
  br label %if.end231

if.end231:                                        ; preds = %if.end230, %if.end178
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %if.then156
  br label %if.end233

if.end233:                                        ; preds = %if.end232, %if.end151
  %105 = load i8*, i8** %old_app, align 8, !dbg !932
  %tobool234 = icmp ne i8* %105, null, !dbg !932
  br i1 %tobool234, label %if.then235, label %if.end243, !dbg !934

if.then235:                                       ; preds = %if.end233
  %106 = load i8*, i8** %old_app, align 8, !dbg !935
  %call236 = call i64 @strlen(i8* %106) #9, !dbg !938
  %cmp237 = icmp uge i64 %call236, 1024, !dbg !939
  br i1 %cmp237, label %if.then239, label %if.end240, !dbg !940

if.then239:                                       ; preds = %if.then235
  store i32 -22, i32* %ret, align 4, !dbg !941
  br label %fail, !dbg !943

if.end240:                                        ; preds = %if.then235
  %107 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !944
  %app241 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %107, i32 0, i32 9, !dbg !945
  %108 = load i8*, i8** %app241, align 8, !dbg !945
  call void @av_free(i8* %108), !dbg !946
  %109 = load i8*, i8** %old_app, align 8, !dbg !947
  %110 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !948
  %app242 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %110, i32 0, i32 9, !dbg !949
  store i8* %109, i8** %app242, align 8, !dbg !950
  br label %if.end243, !dbg !951

if.end243:                                        ; preds = %if.end240, %if.end233
  %111 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !952
  %playpath = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %111, i32 0, i32 7, !dbg !954
  %112 = load i8*, i8** %playpath, align 8, !dbg !954
  %tobool244 = icmp ne i8* %112, null, !dbg !952
  br i1 %tobool244, label %if.end296, label %if.then245, !dbg !955

if.then245:                                       ; preds = %if.end243
  %call246 = call noalias i8* @av_malloc(i64 512), !dbg !956
  %113 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !958
  %playpath247 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %113, i32 0, i32 7, !dbg !959
  store i8* %call246, i8** %playpath247, align 8, !dbg !960
  %114 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !961
  %playpath248 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %114, i32 0, i32 7, !dbg !963
  %115 = load i8*, i8** %playpath248, align 8, !dbg !963
  %tobool249 = icmp ne i8* %115, null, !dbg !961
  br i1 %tobool249, label %if.end251, label %if.then250, !dbg !964

if.then250:                                       ; preds = %if.then245
  store i32 -12, i32* %ret, align 4, !dbg !965
  br label %fail, !dbg !967

if.end251:                                        ; preds = %if.then245
  %116 = load i8*, i8** %fname, align 8, !dbg !968
  %tobool252 = icmp ne i8* %116, null, !dbg !968
  br i1 %tobool252, label %if.then253, label %if.else292, !dbg !970

if.then253:                                       ; preds = %if.end251
  call void @llvm.dbg.declare(metadata i32* %len, metadata !971, metadata !376), !dbg !973
  %117 = load i8*, i8** %fname, align 8, !dbg !974
  %call254 = call i64 @strlen(i8* %117) #9, !dbg !975
  %conv255 = trunc i64 %call254 to i32, !dbg !975
  store i32 %conv255, i32* %len, align 4, !dbg !973
  %118 = load i8*, i8** %fname, align 8, !dbg !976
  %call256 = call i8* @strchr(i8* %118, i32 58) #9, !dbg !978
  %tobool257 = icmp ne i8* %call256, null, !dbg !978
  br i1 %tobool257, label %if.else274, label %land.lhs.true258, !dbg !979

land.lhs.true258:                                 ; preds = %if.then253
  %119 = load i32, i32* %len, align 4, !dbg !980
  %cmp259 = icmp sge i32 %119, 4, !dbg !982
  br i1 %cmp259, label %land.lhs.true261, label %if.else274, !dbg !983

land.lhs.true261:                                 ; preds = %land.lhs.true258
  %120 = load i8*, i8** %fname, align 8, !dbg !984
  %121 = load i32, i32* %len, align 4, !dbg !985
  %idx.ext = sext i32 %121 to i64, !dbg !986
  %add.ptr262 = getelementptr inbounds i8, i8* %120, i64 %idx.ext, !dbg !986
  %add.ptr263 = getelementptr inbounds i8, i8* %add.ptr262, i64 -4, !dbg !987
  %call264 = call i32 @strcmp(i8* %add.ptr263, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0)) #9, !dbg !988
  %tobool265 = icmp ne i32 %call264, 0, !dbg !988
  br i1 %tobool265, label %lor.lhs.false266, label %if.then272, !dbg !989

lor.lhs.false266:                                 ; preds = %land.lhs.true261
  %122 = load i8*, i8** %fname, align 8, !dbg !990
  %123 = load i32, i32* %len, align 4, !dbg !991
  %idx.ext267 = sext i32 %123 to i64, !dbg !992
  %add.ptr268 = getelementptr inbounds i8, i8* %122, i64 %idx.ext267, !dbg !992
  %add.ptr269 = getelementptr inbounds i8, i8* %add.ptr268, i64 -4, !dbg !993
  %call270 = call i32 @strcmp(i8* %add.ptr269, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0)) #9, !dbg !994
  %tobool271 = icmp ne i32 %call270, 0, !dbg !994
  br i1 %tobool271, label %if.else274, label %if.then272, !dbg !995

if.then272:                                       ; preds = %lor.lhs.false266, %land.lhs.true261
  %124 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !997
  %playpath273 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %124, i32 0, i32 7, !dbg !999
  %125 = load i8*, i8** %playpath273, align 8, !dbg !999
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i64 5, i32 1, i1 false), !dbg !1000
  br label %if.end289, !dbg !1001

if.else274:                                       ; preds = %lor.lhs.false266, %land.lhs.true258, %if.then253
  %126 = load i32, i32* %len, align 4, !dbg !1002
  %cmp275 = icmp sge i32 %126, 4, !dbg !1005
  br i1 %cmp275, label %land.lhs.true277, label %if.end286, !dbg !1006

land.lhs.true277:                                 ; preds = %if.else274
  %127 = load i8*, i8** %fname, align 8, !dbg !1007
  %128 = load i32, i32* %len, align 4, !dbg !1009
  %idx.ext278 = sext i32 %128 to i64, !dbg !1010
  %add.ptr279 = getelementptr inbounds i8, i8* %127, i64 %idx.ext278, !dbg !1010
  %add.ptr280 = getelementptr inbounds i8, i8* %add.ptr279, i64 -4, !dbg !1011
  %call281 = call i32 @strcmp(i8* %add.ptr280, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0)) #9, !dbg !1012
  %tobool282 = icmp ne i32 %call281, 0, !dbg !1012
  br i1 %tobool282, label %if.end286, label %if.then283, !dbg !1013

if.then283:                                       ; preds = %land.lhs.true277
  %129 = load i32, i32* %len, align 4, !dbg !1014
  %sub284 = sub nsw i32 %129, 4, !dbg !1015
  %idxprom = sext i32 %sub284 to i64, !dbg !1016
  %130 = load i8*, i8** %fname, align 8, !dbg !1016
  %arrayidx285 = getelementptr inbounds i8, i8* %130, i64 %idxprom, !dbg !1016
  store i8 0, i8* %arrayidx285, align 1, !dbg !1017
  br label %if.end286, !dbg !1016

if.end286:                                        ; preds = %if.then283, %land.lhs.true277, %if.else274
  %131 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1018
  %playpath287 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %131, i32 0, i32 7, !dbg !1019
  %132 = load i8*, i8** %playpath287, align 8, !dbg !1019
  %arrayidx288 = getelementptr inbounds i8, i8* %132, i64 0, !dbg !1018
  store i8 0, i8* %arrayidx288, align 1, !dbg !1020
  br label %if.end289

if.end289:                                        ; preds = %if.end286, %if.then272
  %133 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1021
  %playpath290 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %133, i32 0, i32 7, !dbg !1022
  %134 = load i8*, i8** %playpath290, align 8, !dbg !1022
  %135 = load i8*, i8** %fname, align 8, !dbg !1023
  %call291 = call i64 @av_strlcat(i8* %134, i8* %135, i64 512), !dbg !1024
  br label %if.end295, !dbg !1025

if.else292:                                       ; preds = %if.end251
  %136 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1026
  %playpath293 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %136, i32 0, i32 7, !dbg !1028
  %137 = load i8*, i8** %playpath293, align 8, !dbg !1028
  %arrayidx294 = getelementptr inbounds i8, i8* %137, i64 0, !dbg !1026
  store i8 0, i8* %arrayidx294, align 1, !dbg !1029
  br label %if.end295

if.end295:                                        ; preds = %if.else292, %if.end289
  br label %if.end296, !dbg !1030

if.end296:                                        ; preds = %if.end295, %if.end243
  %138 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1031
  %tcurl = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %138, i32 0, i32 29, !dbg !1033
  %139 = load i8*, i8** %tcurl, align 8, !dbg !1033
  %tobool297 = icmp ne i8* %139, null, !dbg !1031
  br i1 %tobool297, label %if.end310, label %if.then298, !dbg !1034

if.then298:                                       ; preds = %if.end296
  %call299 = call noalias i8* @av_malloc(i64 1024), !dbg !1035
  %140 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1037
  %tcurl300 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %140, i32 0, i32 29, !dbg !1038
  store i8* %call299, i8** %tcurl300, align 8, !dbg !1039
  %141 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1040
  %tcurl301 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %141, i32 0, i32 29, !dbg !1042
  %142 = load i8*, i8** %tcurl301, align 8, !dbg !1042
  %tobool302 = icmp ne i8* %142, null, !dbg !1040
  br i1 %tobool302, label %if.end304, label %if.then303, !dbg !1043

if.then303:                                       ; preds = %if.then298
  store i32 -12, i32* %ret, align 4, !dbg !1044
  br label %fail, !dbg !1046

if.end304:                                        ; preds = %if.then298
  %143 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1047
  %tcurl305 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %143, i32 0, i32 29, !dbg !1048
  %144 = load i8*, i8** %tcurl305, align 8, !dbg !1048
  %arraydecay306 = getelementptr inbounds [8 x i8], [8 x i8]* %proto, i32 0, i32 0, !dbg !1049
  %arraydecay307 = getelementptr inbounds [256 x i8], [256 x i8]* %hostname, i32 0, i32 0, !dbg !1050
  %145 = load i32, i32* %port, align 4, !dbg !1051
  %146 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1052
  %app308 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %146, i32 0, i32 9, !dbg !1053
  %147 = load i8*, i8** %app308, align 8, !dbg !1053
  %call309 = call i32 (i8*, i32, i8*, i8*, i8*, i32, i8*, ...) @ff_url_join(i8* %144, i32 1024, i8* %arraydecay306, i8* null, i8* %arraydecay307, i32 %145, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0), i8* %147), !dbg !1054
  br label %if.end310, !dbg !1055

if.end310:                                        ; preds = %if.end304, %if.end296
  %148 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1056
  %flashver = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %148, i32 0, i32 30, !dbg !1058
  %149 = load i8*, i8** %flashver, align 8, !dbg !1058
  %tobool311 = icmp ne i8* %149, null, !dbg !1056
  br i1 %tobool311, label %if.end328, label %if.then312, !dbg !1059

if.then312:                                       ; preds = %if.end310
  %call313 = call noalias i8* @av_malloc(i64 64), !dbg !1060
  %150 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1062
  %flashver314 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %150, i32 0, i32 30, !dbg !1063
  store i8* %call313, i8** %flashver314, align 8, !dbg !1064
  %151 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1065
  %flashver315 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %151, i32 0, i32 30, !dbg !1067
  %152 = load i8*, i8** %flashver315, align 8, !dbg !1067
  %tobool316 = icmp ne i8* %152, null, !dbg !1065
  br i1 %tobool316, label %if.end318, label %if.then317, !dbg !1068

if.then317:                                       ; preds = %if.then312
  store i32 -12, i32* %ret, align 4, !dbg !1069
  br label %fail, !dbg !1071

if.end318:                                        ; preds = %if.then312
  %153 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1072
  %is_input319 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %153, i32 0, i32 6, !dbg !1074
  %154 = load i32, i32* %is_input319, align 8, !dbg !1074
  %tobool320 = icmp ne i32 %154, 0, !dbg !1072
  br i1 %tobool320, label %if.then321, label %if.else324, !dbg !1075

if.then321:                                       ; preds = %if.end318
  %155 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1076
  %flashver322 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %155, i32 0, i32 30, !dbg !1078
  %156 = load i8*, i8** %flashver322, align 8, !dbg !1078
  %call323 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %156, i64 64, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i32 0, i32 0), i32 9, i32 0, i32 124, i32 2) #10, !dbg !1079
  br label %if.end327, !dbg !1080

if.else324:                                       ; preds = %if.end318
  %157 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1081
  %flashver325 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %157, i32 0, i32 30, !dbg !1083
  %158 = load i8*, i8** %flashver325, align 8, !dbg !1083
  %call326 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %158, i64 64, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i32 0, i32 0)) #10, !dbg !1084
  br label %if.end327

if.end327:                                        ; preds = %if.else324, %if.then321
  br label %if.end328, !dbg !1085

if.end328:                                        ; preds = %if.end327, %if.end310
  %159 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1086
  %receive_report_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %159, i32 0, i32 18, !dbg !1087
  store i32 1048576, i32* %receive_report_size, align 8, !dbg !1088
  %160 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1089
  %bytes_read = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %160, i32 0, i32 19, !dbg !1090
  store i64 0, i64* %bytes_read, align 8, !dbg !1091
  %161 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1092
  %has_audio = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %161, i32 0, i32 23, !dbg !1093
  store i32 0, i32* %has_audio, align 8, !dbg !1094
  %162 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1095
  %has_video = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %162, i32 0, i32 24, !dbg !1096
  store i32 0, i32* %has_video, align 4, !dbg !1097
  %163 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1098
  %received_metadata = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %163, i32 0, i32 25, !dbg !1099
  store i32 0, i32* %received_metadata, align 8, !dbg !1100
  %164 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1101
  %last_bytes_read = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %164, i32 0, i32 20, !dbg !1102
  store i64 0, i64* %last_bytes_read, align 8, !dbg !1103
  %165 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1104
  %max_sent_unacked = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %165, i32 0, i32 39, !dbg !1105
  store i32 2500000, i32* %max_sent_unacked, align 8, !dbg !1106
  %166 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1107
  %duration = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %166, i32 0, i32 49, !dbg !1108
  store double 0.000000e+00, double* %duration, align 8, !dbg !1109
  %167 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !1110
  %168 = bitcast %struct.URLContext* %167 to i8*, !dbg !1110
  %arraydecay329 = getelementptr inbounds [8 x i8], [8 x i8]* %proto, i32 0, i32 0, !dbg !1111
  %arraydecay330 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i32 0, i32 0, !dbg !1112
  %169 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1113
  %app331 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %169, i32 0, i32 9, !dbg !1114
  %170 = load i8*, i8** %app331, align 8, !dbg !1114
  %171 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1115
  %playpath332 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %171, i32 0, i32 7, !dbg !1116
  %172 = load i8*, i8** %playpath332, align 8, !dbg !1116
  call void (i8*, i32, i8*, ...) @av_log(i8* %168, i32 48, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29, i32 0, i32 0), i8* %arraydecay329, i8* %arraydecay330, i8* %170, i8* %172), !dbg !1117
  %173 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1118
  %listen333 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %173, i32 0, i32 46, !dbg !1120
  %174 = load i32, i32* %listen333, align 8, !dbg !1120
  %tobool334 = icmp ne i32 %174, 0, !dbg !1118
  br i1 %tobool334, label %if.else341, label %if.then335, !dbg !1121

if.then335:                                       ; preds = %if.end328
  %175 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !1122
  %176 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1125
  %call336 = call i32 @gen_connect(%struct.URLContext* %175, %struct.RTMPContext* %176), !dbg !1126
  store i32 %call336, i32* %ret, align 4, !dbg !1127
  %cmp337 = icmp slt i32 %call336, 0, !dbg !1128
  br i1 %cmp337, label %if.then339, label %if.end340, !dbg !1129

if.then339:                                       ; preds = %if.then335
  br label %fail, !dbg !1130

if.end340:                                        ; preds = %if.then335
  br label %if.end348, !dbg !1131

if.else341:                                       ; preds = %if.end328
  %177 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !1132
  %178 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !1135
  %priv_data342 = getelementptr inbounds %struct.URLContext, %struct.URLContext* %178, i32 0, i32 2, !dbg !1136
  %179 = load i8*, i8** %priv_data342, align 8, !dbg !1136
  %180 = bitcast i8* %179 to %struct.RTMPContext*, !dbg !1135
  %call343 = call i32 @read_connect(%struct.URLContext* %177, %struct.RTMPContext* %180), !dbg !1137
  store i32 %call343, i32* %ret, align 4, !dbg !1138
  %cmp344 = icmp slt i32 %call343, 0, !dbg !1139
  br i1 %cmp344, label %if.then346, label %if.end347, !dbg !1140

if.then346:                                       ; preds = %if.else341
  br label %fail, !dbg !1141

if.end347:                                        ; preds = %if.else341
  br label %if.end348

if.end348:                                        ; preds = %if.end347, %if.end340
  br label %do.body, !dbg !1142, !llvm.loop !1143

do.body:                                          ; preds = %do.cond, %if.end348
  %181 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !1144
  %call349 = call i32 @get_packet(%struct.URLContext* %181, i32 1), !dbg !1146
  store i32 %call349, i32* %ret, align 4, !dbg !1147
  br label %do.cond, !dbg !1148

do.cond:                                          ; preds = %do.body
  %182 = load i32, i32* %ret, align 4, !dbg !1149
  %cmp350 = icmp eq i32 %182, -11, !dbg !1151
  br i1 %cmp350, label %do.body, label %do.end, !dbg !1152, !llvm.loop !1143

do.end:                                           ; preds = %do.cond
  %183 = load i32, i32* %ret, align 4, !dbg !1153
  %cmp352 = icmp slt i32 %183, 0, !dbg !1155
  br i1 %cmp352, label %if.then354, label %if.end355, !dbg !1156

if.then354:                                       ; preds = %do.end
  br label %fail, !dbg !1157

if.end355:                                        ; preds = %do.end
  %184 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1158
  %do_reconnect = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %184, i32 0, i32 53, !dbg !1160
  %185 = load i32, i32* %do_reconnect, align 8, !dbg !1160
  %tobool356 = icmp ne i32 %185, 0, !dbg !1158
  br i1 %tobool356, label %if.then357, label %if.end370, !dbg !1161

if.then357:                                       ; preds = %if.end355
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1162, metadata !376), !dbg !1164
  %186 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1165
  %stream358 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %186, i32 0, i32 1, !dbg !1166
  %187 = load %struct.URLContext*, %struct.URLContext** %stream358, align 8, !dbg !1166
  %call359 = call i32 @ffurl_close(%struct.URLContext* %187), !dbg !1167
  %188 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1168
  %stream360 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %188, i32 0, i32 1, !dbg !1169
  store %struct.URLContext* null, %struct.URLContext** %stream360, align 8, !dbg !1170
  %189 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1171
  %do_reconnect361 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %189, i32 0, i32 53, !dbg !1172
  store i32 0, i32* %do_reconnect361, align 8, !dbg !1173
  %190 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1174
  %nb_invokes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %190, i32 0, i32 28, !dbg !1175
  store i32 0, i32* %nb_invokes, align 4, !dbg !1176
  store i32 0, i32* %i, align 4, !dbg !1177
  br label %for.cond, !dbg !1179

for.cond:                                         ; preds = %for.inc, %if.then357
  %191 = load i32, i32* %i, align 4, !dbg !1180
  %cmp362 = icmp slt i32 %191, 2, !dbg !1183
  br i1 %cmp362, label %for.body, label %for.end, !dbg !1184

for.body:                                         ; preds = %for.cond
  %192 = load i32, i32* %i, align 4, !dbg !1185
  %idxprom364 = sext i32 %192 to i64, !dbg !1186
  %193 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1186
  %prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %193, i32 0, i32 2, !dbg !1187
  %arrayidx365 = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt, i64 0, i64 %idxprom364, !dbg !1186
  %194 = load %struct.RTMPPacket*, %struct.RTMPPacket** %arrayidx365, align 8, !dbg !1186
  %195 = bitcast %struct.RTMPPacket* %194 to i8*, !dbg !1188
  %196 = load i32, i32* %i, align 4, !dbg !1189
  %idxprom366 = sext i32 %196 to i64, !dbg !1190
  %197 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1190
  %nb_prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %197, i32 0, i32 3, !dbg !1191
  %arrayidx367 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt, i64 0, i64 %idxprom366, !dbg !1190
  %198 = load i32, i32* %arrayidx367, align 4, !dbg !1190
  %conv368 = sext i32 %198 to i64, !dbg !1190
  %mul369 = mul i64 48, %conv368, !dbg !1192
  call void @llvm.memset.p0i8.i64(i8* %195, i8 0, i64 %mul369, i32 8, i1 false), !dbg !1188
  br label %for.inc, !dbg !1188

for.inc:                                          ; preds = %for.body
  %199 = load i32, i32* %i, align 4, !dbg !1193
  %inc = add nsw i32 %199, 1, !dbg !1193
  store i32 %inc, i32* %i, align 4, !dbg !1193
  br label %for.cond, !dbg !1195, !llvm.loop !1196

for.end:                                          ; preds = %for.cond
  %200 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1198
  call void @free_tracked_methods(%struct.RTMPContext* %200), !dbg !1199
  br label %reconnect, !dbg !1200

if.end370:                                        ; preds = %if.end355
  %201 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1201
  %is_input371 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %201, i32 0, i32 6, !dbg !1203
  %202 = load i32, i32* %is_input371, align 8, !dbg !1203
  %tobool372 = icmp ne i32 %202, 0, !dbg !1201
  br i1 %tobool372, label %if.then373, label %if.else428, !dbg !1204

if.then373:                                       ; preds = %if.end370
  %203 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1205
  %flv_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %203, i32 0, i32 14, !dbg !1207
  store i32 13, i32* %flv_size, align 8, !dbg !1208
  %204 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1209
  %flv_data = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %204, i32 0, i32 13, !dbg !1211
  %205 = bitcast i8** %flv_data to i8*, !dbg !1212
  %206 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1213
  %flv_size374 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %206, i32 0, i32 14, !dbg !1214
  %207 = load i32, i32* %flv_size374, align 8, !dbg !1214
  %conv375 = sext i32 %207 to i64, !dbg !1213
  %call376 = call i32 @av_reallocp(i8* %205, i64 %conv375), !dbg !1215
  store i32 %call376, i32* %ret, align 4, !dbg !1216
  %cmp377 = icmp slt i32 %call376, 0, !dbg !1217
  br i1 %cmp377, label %if.then379, label %if.end380, !dbg !1218

if.then379:                                       ; preds = %if.then373
  br label %fail, !dbg !1219

if.end380:                                        ; preds = %if.then373
  %208 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1220
  %flv_off = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %208, i32 0, i32 15, !dbg !1221
  store i32 0, i32* %flv_off, align 4, !dbg !1222
  %209 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1223
  %flv_data381 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %209, i32 0, i32 13, !dbg !1224
  %210 = load i8*, i8** %flv_data381, align 8, !dbg !1224
  %211 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1225
  %flv_size382 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %211, i32 0, i32 14, !dbg !1226
  %212 = load i32, i32* %flv_size382, align 8, !dbg !1226
  %conv383 = sext i32 %212 to i64, !dbg !1225
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %210, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i32 0, i32 0), i64 %conv383, i32 1, i1 false), !dbg !1227
  br label %while.cond, !dbg !1228

while.cond:                                       ; preds = %if.end397, %if.end380
  %213 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1229
  %has_audio384 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %213, i32 0, i32 23, !dbg !1231
  %214 = load i32, i32* %has_audio384, align 8, !dbg !1231
  %tobool385 = icmp ne i32 %214, 0, !dbg !1229
  br i1 %tobool385, label %land.end, label %land.lhs.true386, !dbg !1232

land.lhs.true386:                                 ; preds = %while.cond
  %215 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1233
  %has_video387 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %215, i32 0, i32 24, !dbg !1235
  %216 = load i32, i32* %has_video387, align 4, !dbg !1235
  %tobool388 = icmp ne i32 %216, 0, !dbg !1233
  br i1 %tobool388, label %land.end, label %land.rhs, !dbg !1236

land.rhs:                                         ; preds = %land.lhs.true386
  %217 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1237
  %received_metadata389 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %217, i32 0, i32 25, !dbg !1239
  %218 = load i32, i32* %received_metadata389, align 8, !dbg !1239
  %tobool390 = icmp ne i32 %218, 0, !dbg !1240
  %lnot391 = xor i1 %tobool390, true, !dbg !1240
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true386, %while.cond
  %219 = phi i1 [ false, %land.lhs.true386 ], [ false, %while.cond ], [ %lnot391, %land.rhs ]
  br i1 %219, label %while.body, label %while.end, !dbg !1241

while.body:                                       ; preds = %land.end
  %220 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !1243
  %call393 = call i32 @get_packet(%struct.URLContext* %220, i32 0), !dbg !1246
  store i32 %call393, i32* %ret, align 4, !dbg !1247
  %cmp394 = icmp slt i32 %call393, 0, !dbg !1248
  br i1 %cmp394, label %if.then396, label %if.end397, !dbg !1249

if.then396:                                       ; preds = %while.body
  br label %fail, !dbg !1250

if.end397:                                        ; preds = %while.body
  br label %while.cond, !dbg !1251, !llvm.loop !1253

while.end:                                        ; preds = %land.end
  %221 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1254
  %has_audio398 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %221, i32 0, i32 23, !dbg !1256
  %222 = load i32, i32* %has_audio398, align 8, !dbg !1256
  %tobool399 = icmp ne i32 %222, 0, !dbg !1254
  br i1 %tobool399, label %if.then400, label %if.end405, !dbg !1257

if.then400:                                       ; preds = %while.end
  %223 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1258
  %flv_data401 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %223, i32 0, i32 13, !dbg !1260
  %224 = load i8*, i8** %flv_data401, align 8, !dbg !1260
  %arrayidx402 = getelementptr inbounds i8, i8* %224, i64 4, !dbg !1258
  %225 = load i8, i8* %arrayidx402, align 1, !dbg !1261
  %conv403 = zext i8 %225 to i32, !dbg !1261
  %or = or i32 %conv403, 4, !dbg !1261
  %conv404 = trunc i32 %or to i8, !dbg !1261
  store i8 %conv404, i8* %arrayidx402, align 1, !dbg !1261
  br label %if.end405, !dbg !1262

if.end405:                                        ; preds = %if.then400, %while.end
  %226 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1263
  %has_video406 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %226, i32 0, i32 24, !dbg !1265
  %227 = load i32, i32* %has_video406, align 4, !dbg !1265
  %tobool407 = icmp ne i32 %227, 0, !dbg !1263
  br i1 %tobool407, label %if.then408, label %if.end414, !dbg !1266

if.then408:                                       ; preds = %if.end405
  %228 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1267
  %flv_data409 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %228, i32 0, i32 13, !dbg !1269
  %229 = load i8*, i8** %flv_data409, align 8, !dbg !1269
  %arrayidx410 = getelementptr inbounds i8, i8* %229, i64 4, !dbg !1267
  %230 = load i8, i8* %arrayidx410, align 1, !dbg !1270
  %conv411 = zext i8 %230 to i32, !dbg !1270
  %or412 = or i32 %conv411, 1, !dbg !1270
  %conv413 = trunc i32 %or412 to i8, !dbg !1270
  store i8 %conv413, i8* %arrayidx410, align 1, !dbg !1270
  br label %if.end414, !dbg !1271

if.end414:                                        ; preds = %if.then408, %if.end405
  %231 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1272
  %received_metadata415 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %231, i32 0, i32 25, !dbg !1274
  %232 = load i32, i32* %received_metadata415, align 8, !dbg !1274
  %tobool416 = icmp ne i32 %232, 0, !dbg !1272
  br i1 %tobool416, label %if.end427, label %land.lhs.true417, !dbg !1275

land.lhs.true417:                                 ; preds = %if.end414
  %233 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1276
  %duration418 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %233, i32 0, i32 49, !dbg !1278
  %234 = load double, double* %duration418, align 8, !dbg !1278
  %cmp419 = fcmp ogt double %234, 0.000000e+00, !dbg !1279
  br i1 %cmp419, label %if.then421, label %if.end427, !dbg !1280

if.then421:                                       ; preds = %land.lhs.true417
  %235 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1281
  %call422 = call i32 @inject_fake_duration_metadata(%struct.RTMPContext* %235), !dbg !1284
  store i32 %call422, i32* %ret, align 4, !dbg !1285
  %cmp423 = icmp slt i32 %call422, 0, !dbg !1286
  br i1 %cmp423, label %if.then425, label %if.end426, !dbg !1287

if.then425:                                       ; preds = %if.then421
  br label %fail, !dbg !1288

if.end426:                                        ; preds = %if.then421
  br label %if.end427, !dbg !1289

if.end427:                                        ; preds = %if.end426, %land.lhs.true417, %if.end414
  br label %if.end432, !dbg !1290

if.else428:                                       ; preds = %if.end370
  %236 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1291
  %flv_size429 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %236, i32 0, i32 14, !dbg !1293
  store i32 0, i32* %flv_size429, align 8, !dbg !1294
  %237 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1295
  %flv_data430 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %237, i32 0, i32 13, !dbg !1296
  store i8* null, i8** %flv_data430, align 8, !dbg !1297
  %238 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1298
  %flv_off431 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %238, i32 0, i32 15, !dbg !1299
  store i32 0, i32* %flv_off431, align 4, !dbg !1300
  %239 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1301
  %skip_bytes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %239, i32 0, i32 22, !dbg !1302
  store i32 13, i32* %skip_bytes, align 4, !dbg !1303
  br label %if.end432

if.end432:                                        ; preds = %if.else428, %if.end427
  %240 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1304
  %stream433 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %240, i32 0, i32 1, !dbg !1305
  %241 = load %struct.URLContext*, %struct.URLContext** %stream433, align 8, !dbg !1305
  %max_packet_size = getelementptr inbounds %struct.URLContext, %struct.URLContext* %241, i32 0, i32 5, !dbg !1306
  %242 = load i32, i32* %max_packet_size, align 4, !dbg !1306
  %243 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !1307
  %max_packet_size434 = getelementptr inbounds %struct.URLContext, %struct.URLContext* %243, i32 0, i32 5, !dbg !1308
  store i32 %242, i32* %max_packet_size434, align 4, !dbg !1309
  %244 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !1310
  %is_streamed = getelementptr inbounds %struct.URLContext, %struct.URLContext* %244, i32 0, i32 6, !dbg !1311
  store i32 1, i32* %is_streamed, align 8, !dbg !1312
  store i32 0, i32* %retval, align 4, !dbg !1313
  br label %return, !dbg !1313

fail:                                             ; preds = %if.then425, %if.then396, %if.then379, %if.then354, %if.then346, %if.then339, %if.then317, %if.then303, %if.then250, %if.then239, %if.then124, %if.then117, %if.then110, %if.then102, %if.then95
  %245 = load %struct.AVDictionary**, %struct.AVDictionary*** %opts.addr, align 8, !dbg !1314
  call void @av_dict_free(%struct.AVDictionary** %245), !dbg !1315
  %246 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !1316
  %call435 = call i32 @rtmp_close(%struct.URLContext* %246), !dbg !1317
  %247 = load i32, i32* %ret, align 4, !dbg !1318
  store i32 %247, i32* %retval, align 4, !dbg !1319
  br label %return, !dbg !1319

return:                                           ; preds = %fail, %if.end432, %if.then26
  %248 = load i32, i32* %retval, align 4, !dbg !1320
  ret i32 %248, !dbg !1320
}

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_read(%struct.URLContext* %s, i8* %buf, i32 %size) #0 !dbg !1321 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %rt = alloca %struct.RTMPContext*, align 8
  %orig_size = alloca i32, align 4
  %ret = alloca i32, align 4
  %data_left = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !1324, metadata !376), !dbg !1325
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !1326, metadata !376), !dbg !1327
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !1328, metadata !376), !dbg !1329
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !1330, metadata !376), !dbg !1331
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !1332
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !1333
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1333
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !1332
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !1331
  call void @llvm.dbg.declare(metadata i32* %orig_size, metadata !1334, metadata !376), !dbg !1335
  %3 = load i32, i32* %size.addr, align 4, !dbg !1336
  store i32 %3, i32* %orig_size, align 4, !dbg !1335
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1337, metadata !376), !dbg !1338
  br label %while.cond, !dbg !1339

while.cond:                                       ; preds = %if.end21, %entry
  %4 = load i32, i32* %size.addr, align 4, !dbg !1340
  %cmp = icmp sgt i32 %4, 0, !dbg !1342
  br i1 %cmp, label %while.body, label %while.end, !dbg !1343

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %data_left, metadata !1344, metadata !376), !dbg !1346
  %5 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1347
  %flv_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %5, i32 0, i32 14, !dbg !1348
  %6 = load i32, i32* %flv_size, align 8, !dbg !1348
  %7 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1349
  %flv_off = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %7, i32 0, i32 15, !dbg !1350
  %8 = load i32, i32* %flv_off, align 4, !dbg !1350
  %sub = sub nsw i32 %6, %8, !dbg !1351
  store i32 %sub, i32* %data_left, align 4, !dbg !1346
  %9 = load i32, i32* %data_left, align 4, !dbg !1352
  %10 = load i32, i32* %size.addr, align 4, !dbg !1354
  %cmp1 = icmp sge i32 %9, %10, !dbg !1355
  br i1 %cmp1, label %if.then, label %if.end, !dbg !1356

if.then:                                          ; preds = %while.body
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !1357
  %12 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1359
  %flv_data = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %12, i32 0, i32 13, !dbg !1360
  %13 = load i8*, i8** %flv_data, align 8, !dbg !1360
  %14 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1361
  %flv_off2 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %14, i32 0, i32 15, !dbg !1362
  %15 = load i32, i32* %flv_off2, align 4, !dbg !1362
  %idx.ext = sext i32 %15 to i64, !dbg !1363
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !1363
  %16 = load i32, i32* %size.addr, align 4, !dbg !1364
  %conv = sext i32 %16 to i64, !dbg !1364
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %add.ptr, i64 %conv, i32 1, i1 false), !dbg !1365
  %17 = load i32, i32* %size.addr, align 4, !dbg !1366
  %18 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1367
  %flv_off3 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %18, i32 0, i32 15, !dbg !1368
  %19 = load i32, i32* %flv_off3, align 4, !dbg !1369
  %add = add nsw i32 %19, %17, !dbg !1369
  store i32 %add, i32* %flv_off3, align 4, !dbg !1369
  %20 = load i32, i32* %orig_size, align 4, !dbg !1370
  store i32 %20, i32* %retval, align 4, !dbg !1371
  br label %return, !dbg !1371

if.end:                                           ; preds = %while.body
  %21 = load i32, i32* %data_left, align 4, !dbg !1372
  %cmp4 = icmp sgt i32 %21, 0, !dbg !1374
  br i1 %cmp4, label %if.then6, label %if.end17, !dbg !1375

if.then6:                                         ; preds = %if.end
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !1376
  %23 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1378
  %flv_data7 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %23, i32 0, i32 13, !dbg !1379
  %24 = load i8*, i8** %flv_data7, align 8, !dbg !1379
  %25 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1380
  %flv_off8 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %25, i32 0, i32 15, !dbg !1381
  %26 = load i32, i32* %flv_off8, align 4, !dbg !1381
  %idx.ext9 = sext i32 %26 to i64, !dbg !1382
  %add.ptr10 = getelementptr inbounds i8, i8* %24, i64 %idx.ext9, !dbg !1382
  %27 = load i32, i32* %data_left, align 4, !dbg !1383
  %conv11 = sext i32 %27 to i64, !dbg !1383
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %add.ptr10, i64 %conv11, i32 1, i1 false), !dbg !1384
  %28 = load i32, i32* %data_left, align 4, !dbg !1385
  %29 = load i8*, i8** %buf.addr, align 8, !dbg !1386
  %idx.ext12 = sext i32 %28 to i64, !dbg !1386
  %add.ptr13 = getelementptr inbounds i8, i8* %29, i64 %idx.ext12, !dbg !1386
  store i8* %add.ptr13, i8** %buf.addr, align 8, !dbg !1386
  %30 = load i32, i32* %data_left, align 4, !dbg !1387
  %31 = load i32, i32* %size.addr, align 4, !dbg !1388
  %sub14 = sub nsw i32 %31, %30, !dbg !1388
  store i32 %sub14, i32* %size.addr, align 4, !dbg !1388
  %32 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1389
  %flv_size15 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %32, i32 0, i32 14, !dbg !1390
  %33 = load i32, i32* %flv_size15, align 8, !dbg !1390
  %34 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1391
  %flv_off16 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %34, i32 0, i32 15, !dbg !1392
  store i32 %33, i32* %flv_off16, align 4, !dbg !1393
  %35 = load i32, i32* %data_left, align 4, !dbg !1394
  store i32 %35, i32* %retval, align 4, !dbg !1395
  br label %return, !dbg !1395

if.end17:                                         ; preds = %if.end
  %36 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !1396
  %call = call i32 @get_packet(%struct.URLContext* %36, i32 0), !dbg !1398
  store i32 %call, i32* %ret, align 4, !dbg !1399
  %cmp18 = icmp slt i32 %call, 0, !dbg !1400
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !1401

if.then20:                                        ; preds = %if.end17
  %37 = load i32, i32* %ret, align 4, !dbg !1402
  store i32 %37, i32* %retval, align 4, !dbg !1403
  br label %return, !dbg !1403

if.end21:                                         ; preds = %if.end17
  br label %while.cond, !dbg !1404, !llvm.loop !1406

while.end:                                        ; preds = %while.cond
  %38 = load i32, i32* %orig_size, align 4, !dbg !1407
  store i32 %38, i32* %retval, align 4, !dbg !1408
  br label %return, !dbg !1408

return:                                           ; preds = %while.end, %if.then20, %if.then6, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !1409
  ret i32 %39, !dbg !1409
}

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_write(%struct.URLContext* %s, i8* %buf, i32 %size) #0 !dbg !1410 {
entry:
  %b.addr.i211 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i211, metadata !1413, metadata !376), !dbg !1419
  %b.addr.i205 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i205, metadata !1424, metadata !376), !dbg !1428
  %dst.addr.i206 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr.i206, metadata !1430, metadata !376), !dbg !1431
  %size.addr.i207 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i207, metadata !1432, metadata !376), !dbg !1433
  %b.addr.i201 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i201, metadata !1434, metadata !376), !dbg !1436
  %b.addr.i187 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i187, metadata !1413, metadata !376), !dbg !1438
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !1440, metadata !376), !dbg !1451
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !1457, metadata !376), !dbg !1458
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !1459, metadata !376), !dbg !1460
  %b.addr.i181 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i181, metadata !1413, metadata !376), !dbg !1461
  %b.addr.i178 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i178, metadata !1434, metadata !376), !dbg !1463
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !1424, metadata !376), !dbg !1465
  %dst.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr.i, metadata !1430, metadata !376), !dbg !1467
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !1432, metadata !376), !dbg !1468
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %rt = alloca %struct.RTMPContext*, align 8
  %size_temp = alloca i32, align 4
  %pktsize = alloca i32, align 4
  %pkttype = alloca i32, align 4
  %copy = alloca i32, align 4
  %ts = alloca i32, align 4
  %buf_temp = alloca i8*, align 8
  %c = alloca i8, align 1
  %ret = alloca i32, align 4
  %skip = alloca i32, align 4
  %header = alloca i8*, align 8
  %channel = alloca i32, align 4
  %commandbuffer = alloca [64 x i8], align 16
  %stringlen = alloca i32, align 4
  %gbc = alloca %struct.GetByteContext, align 8
  %ptr = alloca i8*, align 8
  %rpkt = alloca %struct.RTMPPacket, align 8
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !1469, metadata !376), !dbg !1470
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !1471, metadata !376), !dbg !1472
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !1473, metadata !376), !dbg !1474
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !1475, metadata !376), !dbg !1476
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !1477
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !1478
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1478
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !1477
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !1476
  call void @llvm.dbg.declare(metadata i32* %size_temp, metadata !1479, metadata !376), !dbg !1480
  %3 = load i32, i32* %size.addr, align 4, !dbg !1481
  store i32 %3, i32* %size_temp, align 4, !dbg !1480
  call void @llvm.dbg.declare(metadata i32* %pktsize, metadata !1482, metadata !376), !dbg !1483
  call void @llvm.dbg.declare(metadata i32* %pkttype, metadata !1484, metadata !376), !dbg !1485
  call void @llvm.dbg.declare(metadata i32* %copy, metadata !1486, metadata !376), !dbg !1487
  call void @llvm.dbg.declare(metadata i32* %ts, metadata !1488, metadata !376), !dbg !1489
  call void @llvm.dbg.declare(metadata i8** %buf_temp, metadata !1490, metadata !376), !dbg !1491
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !1492
  store i8* %4, i8** %buf_temp, align 8, !dbg !1491
  call void @llvm.dbg.declare(metadata i8* %c, metadata !1493, metadata !376), !dbg !1494
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1495, metadata !376), !dbg !1496
  br label %do.body, !dbg !1497, !llvm.loop !1498

do.body:                                          ; preds = %do.cond, %entry
  %5 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1499
  %skip_bytes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %5, i32 0, i32 22, !dbg !1501
  %6 = load i32, i32* %skip_bytes, align 4, !dbg !1501
  %tobool = icmp ne i32 %6, 0, !dbg !1499
  br i1 %tobool, label %if.then, label %if.end, !dbg !1502

if.then:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !1503, metadata !376), !dbg !1505
  %7 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1506
  %skip_bytes1 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %7, i32 0, i32 22, !dbg !1507
  %8 = load i32, i32* %skip_bytes1, align 4, !dbg !1507
  %9 = load i32, i32* %size_temp, align 4, !dbg !1508
  %cmp = icmp sgt i32 %8, %9, !dbg !1509
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !1510

cond.true:                                        ; preds = %if.then
  %10 = load i32, i32* %size_temp, align 4, !dbg !1511
  br label %cond.end, !dbg !1513

cond.false:                                       ; preds = %if.then
  %11 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1514
  %skip_bytes2 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %11, i32 0, i32 22, !dbg !1516
  %12 = load i32, i32* %skip_bytes2, align 4, !dbg !1516
  br label %cond.end, !dbg !1517

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %12, %cond.false ], !dbg !1518
  store i32 %cond, i32* %skip, align 4, !dbg !1520
  %13 = load i32, i32* %skip, align 4, !dbg !1521
  %14 = load i8*, i8** %buf_temp, align 8, !dbg !1522
  %idx.ext = sext i32 %13 to i64, !dbg !1522
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %idx.ext, !dbg !1522
  store i8* %add.ptr, i8** %buf_temp, align 8, !dbg !1522
  %15 = load i32, i32* %skip, align 4, !dbg !1523
  %16 = load i32, i32* %size_temp, align 4, !dbg !1524
  %sub = sub nsw i32 %16, %15, !dbg !1524
  store i32 %sub, i32* %size_temp, align 4, !dbg !1524
  %17 = load i32, i32* %skip, align 4, !dbg !1525
  %18 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1526
  %skip_bytes3 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %18, i32 0, i32 22, !dbg !1527
  %19 = load i32, i32* %skip_bytes3, align 4, !dbg !1528
  %sub4 = sub nsw i32 %19, %17, !dbg !1528
  store i32 %sub4, i32* %skip_bytes3, align 4, !dbg !1528
  br label %do.cond, !dbg !1529

if.end:                                           ; preds = %do.body
  %20 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1530
  %flv_header_bytes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %20, i32 0, i32 27, !dbg !1531
  %21 = load i32, i32* %flv_header_bytes, align 8, !dbg !1531
  %cmp5 = icmp slt i32 %21, 11, !dbg !1532
  br i1 %cmp5, label %if.then6, label %if.end56, !dbg !1533

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %header, metadata !1534, metadata !376), !dbg !1535
  %22 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1536
  %flv_header = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %22, i32 0, i32 26, !dbg !1537
  %arraydecay = getelementptr inbounds [11 x i8], [11 x i8]* %flv_header, i32 0, i32 0, !dbg !1536
  store i8* %arraydecay, i8** %header, align 8, !dbg !1535
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !1538, metadata !376), !dbg !1539
  store i32 4, i32* %channel, align 4, !dbg !1539
  %23 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1540
  %flv_header_bytes7 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %23, i32 0, i32 27, !dbg !1541
  %24 = load i32, i32* %flv_header_bytes7, align 8, !dbg !1541
  %sub8 = sub nsw i32 11, %24, !dbg !1542
  %25 = load i32, i32* %size_temp, align 4, !dbg !1543
  %cmp9 = icmp sgt i32 %sub8, %25, !dbg !1544
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !1545

cond.true10:                                      ; preds = %if.then6
  %26 = load i32, i32* %size_temp, align 4, !dbg !1546
  br label %cond.end14, !dbg !1548

cond.false11:                                     ; preds = %if.then6
  %27 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1549
  %flv_header_bytes12 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %27, i32 0, i32 27, !dbg !1551
  %28 = load i32, i32* %flv_header_bytes12, align 8, !dbg !1551
  %sub13 = sub nsw i32 11, %28, !dbg !1552
  br label %cond.end14, !dbg !1553

cond.end14:                                       ; preds = %cond.false11, %cond.true10
  %cond15 = phi i32 [ %26, %cond.true10 ], [ %sub13, %cond.false11 ], !dbg !1554
  store i32 %cond15, i32* %copy, align 4, !dbg !1556
  %29 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1557
  %flv_header16 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %29, i32 0, i32 26, !dbg !1558
  %arraydecay17 = getelementptr inbounds [11 x i8], [11 x i8]* %flv_header16, i32 0, i32 0, !dbg !1557
  %30 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1559
  %flv_header_bytes18 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %30, i32 0, i32 27, !dbg !1560
  %31 = load i32, i32* %flv_header_bytes18, align 8, !dbg !1560
  %idx.ext19 = sext i32 %31 to i64, !dbg !1561
  %add.ptr20 = getelementptr inbounds i8, i8* %arraydecay17, i64 %idx.ext19, !dbg !1561
  %32 = load i32, i32* %copy, align 4, !dbg !1562
  store i8** %buf_temp, i8*** %b.addr.i, align 8, !dbg !1563
  store i8* %add.ptr20, i8** %dst.addr.i, align 8, !dbg !1563
  store i32 %32, i32* %size.addr.i, align 4, !dbg !1563
  %33 = load i8*, i8** %dst.addr.i, align 8, !dbg !1564
  %34 = load i8**, i8*** %b.addr.i, align 8, !dbg !1565
  %35 = load i8*, i8** %34, align 8, !dbg !1566
  %36 = load i32, i32* %size.addr.i, align 4, !dbg !1567
  %conv.i = zext i32 %36 to i64, !dbg !1567
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %35, i64 %conv.i, i32 1, i1 false) #10, !dbg !1568
  %37 = load i32, i32* %size.addr.i, align 4, !dbg !1569
  %38 = load i8**, i8*** %b.addr.i, align 8, !dbg !1570
  %39 = load i8*, i8** %38, align 8, !dbg !1571
  %idx.ext.i = zext i32 %37 to i64, !dbg !1571
  %add.ptr.i = getelementptr inbounds i8, i8* %39, i64 %idx.ext.i, !dbg !1571
  store i8* %add.ptr.i, i8** %38, align 8, !dbg !1571
  %40 = load i32, i32* %size.addr.i, align 4, !dbg !1572
  %41 = load i32, i32* %copy, align 4, !dbg !1573
  %42 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1574
  %flv_header_bytes21 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %42, i32 0, i32 27, !dbg !1575
  %43 = load i32, i32* %flv_header_bytes21, align 8, !dbg !1576
  %add = add nsw i32 %43, %41, !dbg !1576
  store i32 %add, i32* %flv_header_bytes21, align 8, !dbg !1576
  %44 = load i32, i32* %copy, align 4, !dbg !1577
  %45 = load i32, i32* %size_temp, align 4, !dbg !1578
  %sub22 = sub nsw i32 %45, %44, !dbg !1578
  store i32 %sub22, i32* %size_temp, align 4, !dbg !1578
  %46 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1579
  %flv_header_bytes23 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %46, i32 0, i32 27, !dbg !1581
  %47 = load i32, i32* %flv_header_bytes23, align 8, !dbg !1581
  %cmp24 = icmp slt i32 %47, 11, !dbg !1582
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !1583

if.then25:                                        ; preds = %cond.end14
  br label %do.end, !dbg !1584

if.end26:                                         ; preds = %cond.end14
  store i8** %header, i8*** %b.addr.i178, align 8, !dbg !1585
  %48 = load i8**, i8*** %b.addr.i178, align 8, !dbg !1586
  %49 = load i8*, i8** %48, align 8, !dbg !1587
  %add.ptr.i179 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !1587
  store i8* %add.ptr.i179, i8** %48, align 8, !dbg !1587
  %50 = load i8**, i8*** %b.addr.i178, align 8, !dbg !1588
  %51 = load i8*, i8** %50, align 8, !dbg !1589
  %add.ptr1.i = getelementptr inbounds i8, i8* %51, i64 -1, !dbg !1590
  %52 = load i8, i8* %add.ptr1.i, align 1, !dbg !1591
  %conv.i180 = zext i8 %52 to i32, !dbg !1592
  store i32 %conv.i180, i32* %pkttype, align 4, !dbg !1593
  store i8** %header, i8*** %b.addr.i181, align 8, !dbg !1594
  %53 = load i8**, i8*** %b.addr.i181, align 8, !dbg !1595
  %54 = load i8*, i8** %53, align 8, !dbg !1596
  %add.ptr.i182 = getelementptr inbounds i8, i8* %54, i64 3, !dbg !1596
  store i8* %add.ptr.i182, i8** %53, align 8, !dbg !1596
  %55 = load i8**, i8*** %b.addr.i181, align 8, !dbg !1597
  %56 = load i8*, i8** %55, align 8, !dbg !1598
  %add.ptr1.i183 = getelementptr inbounds i8, i8* %56, i64 -3, !dbg !1599
  %57 = load i8, i8* %add.ptr1.i183, align 1, !dbg !1600
  %conv.i184 = zext i8 %57 to i32, !dbg !1600
  %shl.i = shl i32 %conv.i184, 16, !dbg !1601
  %58 = load i8**, i8*** %b.addr.i181, align 8, !dbg !1602
  %59 = load i8*, i8** %58, align 8, !dbg !1603
  %add.ptr2.i = getelementptr inbounds i8, i8* %59, i64 -3, !dbg !1604
  %arrayidx3.i = getelementptr inbounds i8, i8* %add.ptr2.i, i64 1, !dbg !1605
  %60 = load i8, i8* %arrayidx3.i, align 1, !dbg !1605
  %conv4.i = zext i8 %60 to i32, !dbg !1605
  %shl5.i = shl i32 %conv4.i, 8, !dbg !1606
  %or.i = or i32 %shl.i, %shl5.i, !dbg !1607
  %61 = load i8**, i8*** %b.addr.i181, align 8, !dbg !1608
  %62 = load i8*, i8** %61, align 8, !dbg !1609
  %add.ptr6.i = getelementptr inbounds i8, i8* %62, i64 -3, !dbg !1610
  %arrayidx7.i = getelementptr inbounds i8, i8* %add.ptr6.i, i64 2, !dbg !1611
  %63 = load i8, i8* %arrayidx7.i, align 1, !dbg !1611
  %conv8.i = zext i8 %63 to i32, !dbg !1611
  %or9.i = or i32 %or.i, %conv8.i, !dbg !1612
  store i32 %or9.i, i32* %pktsize, align 4, !dbg !1613
  store i8** %header, i8*** %b.addr.i187, align 8, !dbg !1614
  %64 = load i8**, i8*** %b.addr.i187, align 8, !dbg !1615
  %65 = load i8*, i8** %64, align 8, !dbg !1616
  %add.ptr.i188 = getelementptr inbounds i8, i8* %65, i64 3, !dbg !1616
  store i8* %add.ptr.i188, i8** %64, align 8, !dbg !1616
  %66 = load i8**, i8*** %b.addr.i187, align 8, !dbg !1617
  %67 = load i8*, i8** %66, align 8, !dbg !1618
  %add.ptr1.i189 = getelementptr inbounds i8, i8* %67, i64 -3, !dbg !1619
  %68 = load i8, i8* %add.ptr1.i189, align 1, !dbg !1620
  %conv.i190 = zext i8 %68 to i32, !dbg !1620
  %shl.i191 = shl i32 %conv.i190, 16, !dbg !1621
  %69 = load i8**, i8*** %b.addr.i187, align 8, !dbg !1622
  %70 = load i8*, i8** %69, align 8, !dbg !1623
  %add.ptr2.i192 = getelementptr inbounds i8, i8* %70, i64 -3, !dbg !1624
  %arrayidx3.i193 = getelementptr inbounds i8, i8* %add.ptr2.i192, i64 1, !dbg !1625
  %71 = load i8, i8* %arrayidx3.i193, align 1, !dbg !1625
  %conv4.i194 = zext i8 %71 to i32, !dbg !1625
  %shl5.i195 = shl i32 %conv4.i194, 8, !dbg !1626
  %or.i196 = or i32 %shl.i191, %shl5.i195, !dbg !1627
  %72 = load i8**, i8*** %b.addr.i187, align 8, !dbg !1628
  %73 = load i8*, i8** %72, align 8, !dbg !1629
  %add.ptr6.i197 = getelementptr inbounds i8, i8* %73, i64 -3, !dbg !1630
  %arrayidx7.i198 = getelementptr inbounds i8, i8* %add.ptr6.i197, i64 2, !dbg !1631
  %74 = load i8, i8* %arrayidx7.i198, align 1, !dbg !1631
  %conv8.i199 = zext i8 %74 to i32, !dbg !1631
  %or9.i200 = or i32 %or.i196, %conv8.i199, !dbg !1632
  store i32 %or9.i200, i32* %ts, align 4, !dbg !1633
  store i8** %header, i8*** %b.addr.i201, align 8, !dbg !1634
  %75 = load i8**, i8*** %b.addr.i201, align 8, !dbg !1635
  %76 = load i8*, i8** %75, align 8, !dbg !1636
  %add.ptr.i202 = getelementptr inbounds i8, i8* %76, i64 1, !dbg !1636
  store i8* %add.ptr.i202, i8** %75, align 8, !dbg !1636
  %77 = load i8**, i8*** %b.addr.i201, align 8, !dbg !1637
  %78 = load i8*, i8** %77, align 8, !dbg !1638
  %add.ptr1.i203 = getelementptr inbounds i8, i8* %78, i64 -1, !dbg !1639
  %79 = load i8, i8* %add.ptr1.i203, align 1, !dbg !1640
  %conv.i204 = zext i8 %79 to i32, !dbg !1641
  %shl = shl i32 %conv.i204, 24, !dbg !1642
  %80 = load i32, i32* %ts, align 4, !dbg !1643
  %or = or i32 %80, %shl, !dbg !1643
  store i32 %or, i32* %ts, align 4, !dbg !1643
  store i8** %header, i8*** %b.addr.i211, align 8, !dbg !1644
  %81 = load i8**, i8*** %b.addr.i211, align 8, !dbg !1645
  %82 = load i8*, i8** %81, align 8, !dbg !1646
  %add.ptr.i212 = getelementptr inbounds i8, i8* %82, i64 3, !dbg !1646
  store i8* %add.ptr.i212, i8** %81, align 8, !dbg !1646
  %83 = load i8**, i8*** %b.addr.i211, align 8, !dbg !1647
  %84 = load i8*, i8** %83, align 8, !dbg !1648
  %add.ptr1.i213 = getelementptr inbounds i8, i8* %84, i64 -3, !dbg !1649
  %85 = load i8, i8* %add.ptr1.i213, align 1, !dbg !1650
  %conv.i214 = zext i8 %85 to i32, !dbg !1650
  %shl.i215 = shl i32 %conv.i214, 16, !dbg !1651
  %86 = load i8**, i8*** %b.addr.i211, align 8, !dbg !1652
  %87 = load i8*, i8** %86, align 8, !dbg !1653
  %add.ptr2.i216 = getelementptr inbounds i8, i8* %87, i64 -3, !dbg !1654
  %arrayidx3.i217 = getelementptr inbounds i8, i8* %add.ptr2.i216, i64 1, !dbg !1655
  %88 = load i8, i8* %arrayidx3.i217, align 1, !dbg !1655
  %conv4.i218 = zext i8 %88 to i32, !dbg !1655
  %shl5.i219 = shl i32 %conv4.i218, 8, !dbg !1656
  %or.i220 = or i32 %shl.i215, %shl5.i219, !dbg !1657
  %89 = load i8**, i8*** %b.addr.i211, align 8, !dbg !1658
  %90 = load i8*, i8** %89, align 8, !dbg !1659
  %add.ptr6.i221 = getelementptr inbounds i8, i8* %90, i64 -3, !dbg !1660
  %arrayidx7.i222 = getelementptr inbounds i8, i8* %add.ptr6.i221, i64 2, !dbg !1661
  %91 = load i8, i8* %arrayidx7.i222, align 1, !dbg !1661
  %conv8.i223 = zext i8 %91 to i32, !dbg !1661
  %or9.i224 = or i32 %or.i220, %conv8.i223, !dbg !1662
  %92 = load i32, i32* %pktsize, align 4, !dbg !1663
  %93 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1664
  %flv_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %93, i32 0, i32 14, !dbg !1665
  store i32 %92, i32* %flv_size, align 8, !dbg !1666
  %94 = load i32, i32* %pkttype, align 4, !dbg !1667
  %cmp32 = icmp eq i32 %94, 9, !dbg !1669
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !1670

if.then33:                                        ; preds = %if.end26
  store i32 6, i32* %channel, align 4, !dbg !1671
  br label %if.end34, !dbg !1672

if.end34:                                         ; preds = %if.then33, %if.end26
  %95 = load i32, i32* %pkttype, align 4, !dbg !1673
  %cmp35 = icmp eq i32 %95, 9, !dbg !1675
  br i1 %cmp35, label %land.lhs.true, label %lor.lhs.false, !dbg !1676

lor.lhs.false:                                    ; preds = %if.end34
  %96 = load i32, i32* %pkttype, align 4, !dbg !1677
  %cmp36 = icmp eq i32 %96, 8, !dbg !1679
  br i1 %cmp36, label %land.lhs.true, label %lor.lhs.false38, !dbg !1680

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end34
  %97 = load i32, i32* %ts, align 4, !dbg !1681
  %cmp37 = icmp eq i32 %97, 0, !dbg !1683
  br i1 %cmp37, label %if.then40, label %lor.lhs.false38, !dbg !1684

lor.lhs.false38:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %98 = load i32, i32* %pkttype, align 4, !dbg !1685
  %cmp39 = icmp eq i32 %98, 18, !dbg !1686
  br i1 %cmp39, label %if.then40, label %if.end49, !dbg !1687

if.then40:                                        ; preds = %lor.lhs.false38, %land.lhs.true
  %99 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1688
  %prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %99, i32 0, i32 2, !dbg !1691
  %arrayidx = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt, i64 0, i64 1, !dbg !1688
  %100 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1692
  %nb_prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %100, i32 0, i32 3, !dbg !1693
  %arrayidx41 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt, i64 0, i64 1, !dbg !1692
  %101 = load i32, i32* %channel, align 4, !dbg !1694
  %call42 = call i32 @ff_rtmp_check_alloc_array(%struct.RTMPPacket** %arrayidx, i32* %arrayidx41, i32 %101), !dbg !1695
  store i32 %call42, i32* %ret, align 4, !dbg !1696
  %cmp43 = icmp slt i32 %call42, 0, !dbg !1697
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !1698

if.then44:                                        ; preds = %if.then40
  %102 = load i32, i32* %ret, align 4, !dbg !1699
  store i32 %102, i32* %retval, align 4, !dbg !1700
  br label %return, !dbg !1700

if.end45:                                         ; preds = %if.then40
  %103 = load i32, i32* %channel, align 4, !dbg !1701
  %idxprom = sext i32 %103 to i64, !dbg !1702
  %104 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1702
  %prev_pkt46 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %104, i32 0, i32 2, !dbg !1703
  %arrayidx47 = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt46, i64 0, i64 1, !dbg !1702
  %105 = load %struct.RTMPPacket*, %struct.RTMPPacket** %arrayidx47, align 8, !dbg !1702
  %arrayidx48 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %105, i64 %idxprom, !dbg !1702
  %channel_id = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %arrayidx48, i32 0, i32 0, !dbg !1704
  store i32 0, i32* %channel_id, align 8, !dbg !1705
  br label %if.end49, !dbg !1706

if.end49:                                         ; preds = %if.end45, %lor.lhs.false38
  %106 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1707
  %out_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %106, i32 0, i32 17, !dbg !1709
  %107 = load i32, i32* %channel, align 4, !dbg !1710
  %108 = load i32, i32* %pkttype, align 4, !dbg !1711
  %109 = load i32, i32* %ts, align 4, !dbg !1712
  %110 = load i32, i32* %pktsize, align 4, !dbg !1713
  %call50 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %out_pkt, i32 %107, i32 %108, i32 %109, i32 %110), !dbg !1714
  store i32 %call50, i32* %ret, align 4, !dbg !1715
  %cmp51 = icmp slt i32 %call50, 0, !dbg !1716
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !1717

if.then52:                                        ; preds = %if.end49
  %111 = load i32, i32* %ret, align 4, !dbg !1718
  store i32 %111, i32* %retval, align 4, !dbg !1719
  br label %return, !dbg !1719

if.end53:                                         ; preds = %if.end49
  %112 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1720
  %stream_id = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %112, i32 0, i32 12, !dbg !1721
  %113 = load i32, i32* %stream_id, align 4, !dbg !1721
  %114 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1722
  %out_pkt54 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %114, i32 0, i32 17, !dbg !1723
  %extra = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %out_pkt54, i32 0, i32 4, !dbg !1724
  store i32 %113, i32* %extra, align 8, !dbg !1725
  %115 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1726
  %out_pkt55 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %115, i32 0, i32 17, !dbg !1727
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %out_pkt55, i32 0, i32 5, !dbg !1728
  %116 = load i8*, i8** %data, align 8, !dbg !1728
  %117 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1729
  %flv_data = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %117, i32 0, i32 13, !dbg !1730
  store i8* %116, i8** %flv_data, align 8, !dbg !1731
  br label %if.end56, !dbg !1732

if.end56:                                         ; preds = %if.end53, %if.end
  %118 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1733
  %flv_size57 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %118, i32 0, i32 14, !dbg !1734
  %119 = load i32, i32* %flv_size57, align 8, !dbg !1734
  %120 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1735
  %flv_off = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %120, i32 0, i32 15, !dbg !1736
  %121 = load i32, i32* %flv_off, align 4, !dbg !1736
  %sub58 = sub nsw i32 %119, %121, !dbg !1737
  %122 = load i32, i32* %size_temp, align 4, !dbg !1738
  %cmp59 = icmp sgt i32 %sub58, %122, !dbg !1739
  br i1 %cmp59, label %cond.true60, label %cond.false61, !dbg !1740

cond.true60:                                      ; preds = %if.end56
  %123 = load i32, i32* %size_temp, align 4, !dbg !1741
  br label %cond.end65, !dbg !1743

cond.false61:                                     ; preds = %if.end56
  %124 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1744
  %flv_size62 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %124, i32 0, i32 14, !dbg !1746
  %125 = load i32, i32* %flv_size62, align 8, !dbg !1746
  %126 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1747
  %flv_off63 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %126, i32 0, i32 15, !dbg !1748
  %127 = load i32, i32* %flv_off63, align 4, !dbg !1748
  %sub64 = sub nsw i32 %125, %127, !dbg !1749
  br label %cond.end65, !dbg !1750

cond.end65:                                       ; preds = %cond.false61, %cond.true60
  %cond66 = phi i32 [ %123, %cond.true60 ], [ %sub64, %cond.false61 ], !dbg !1751
  store i32 %cond66, i32* %copy, align 4, !dbg !1753
  %128 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1754
  %flv_data67 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %128, i32 0, i32 13, !dbg !1755
  %129 = load i8*, i8** %flv_data67, align 8, !dbg !1755
  %130 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1756
  %flv_off68 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %130, i32 0, i32 15, !dbg !1757
  %131 = load i32, i32* %flv_off68, align 4, !dbg !1757
  %idx.ext69 = sext i32 %131 to i64, !dbg !1758
  %add.ptr70 = getelementptr inbounds i8, i8* %129, i64 %idx.ext69, !dbg !1758
  %132 = load i32, i32* %copy, align 4, !dbg !1759
  store i8** %buf_temp, i8*** %b.addr.i205, align 8, !dbg !1760
  store i8* %add.ptr70, i8** %dst.addr.i206, align 8, !dbg !1760
  store i32 %132, i32* %size.addr.i207, align 4, !dbg !1760
  %133 = load i8*, i8** %dst.addr.i206, align 8, !dbg !1761
  %134 = load i8**, i8*** %b.addr.i205, align 8, !dbg !1762
  %135 = load i8*, i8** %134, align 8, !dbg !1763
  %136 = load i32, i32* %size.addr.i207, align 4, !dbg !1764
  %conv.i208 = zext i32 %136 to i64, !dbg !1764
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %133, i8* %135, i64 %conv.i208, i32 1, i1 false) #10, !dbg !1765
  %137 = load i32, i32* %size.addr.i207, align 4, !dbg !1766
  %138 = load i8**, i8*** %b.addr.i205, align 8, !dbg !1767
  %139 = load i8*, i8** %138, align 8, !dbg !1768
  %idx.ext.i209 = zext i32 %137 to i64, !dbg !1768
  %add.ptr.i210 = getelementptr inbounds i8, i8* %139, i64 %idx.ext.i209, !dbg !1768
  store i8* %add.ptr.i210, i8** %138, align 8, !dbg !1768
  %140 = load i32, i32* %size.addr.i207, align 4, !dbg !1769
  %141 = load i32, i32* %copy, align 4, !dbg !1770
  %142 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1771
  %flv_off72 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %142, i32 0, i32 15, !dbg !1772
  %143 = load i32, i32* %flv_off72, align 4, !dbg !1773
  %add73 = add nsw i32 %143, %141, !dbg !1773
  store i32 %add73, i32* %flv_off72, align 4, !dbg !1773
  %144 = load i32, i32* %copy, align 4, !dbg !1774
  %145 = load i32, i32* %size_temp, align 4, !dbg !1775
  %sub74 = sub nsw i32 %145, %144, !dbg !1775
  store i32 %sub74, i32* %size_temp, align 4, !dbg !1775
  %146 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1776
  %flv_off75 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %146, i32 0, i32 15, !dbg !1777
  %147 = load i32, i32* %flv_off75, align 4, !dbg !1777
  %148 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1778
  %flv_size76 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %148, i32 0, i32 14, !dbg !1779
  %149 = load i32, i32* %flv_size76, align 8, !dbg !1779
  %cmp77 = icmp eq i32 %147, %149, !dbg !1780
  br i1 %cmp77, label %if.then78, label %if.end135, !dbg !1781

if.then78:                                        ; preds = %cond.end65
  %150 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1782
  %skip_bytes79 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %150, i32 0, i32 22, !dbg !1783
  store i32 4, i32* %skip_bytes79, align 4, !dbg !1784
  %151 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1785
  %out_pkt80 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %151, i32 0, i32 17, !dbg !1786
  %type = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %out_pkt80, i32 0, i32 1, !dbg !1787
  %152 = load i32, i32* %type, align 4, !dbg !1787
  %cmp81 = icmp eq i32 %152, 18, !dbg !1788
  br i1 %cmp81, label %if.then82, label %if.end125, !dbg !1789

if.then82:                                        ; preds = %if.then78
  call void @llvm.dbg.declare(metadata [64 x i8]* %commandbuffer, metadata !1790, metadata !376), !dbg !1794
  call void @llvm.dbg.declare(metadata i32* %stringlen, metadata !1795, metadata !376), !dbg !1796
  store i32 0, i32* %stringlen, align 4, !dbg !1796
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gbc, metadata !1797, metadata !376), !dbg !1798
  %153 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1799
  %flv_data83 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %153, i32 0, i32 13, !dbg !1800
  %154 = load i8*, i8** %flv_data83, align 8, !dbg !1800
  %155 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1801
  %flv_size84 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %155, i32 0, i32 14, !dbg !1802
  %156 = load i32, i32* %flv_size84, align 8, !dbg !1802
  store %struct.GetByteContext* %gbc, %struct.GetByteContext** %g.addr.i, align 8, !dbg !1803
  store i8* %154, i8** %buf.addr.i, align 8, !dbg !1803
  store i32 %156, i32* %buf_size.addr.i, align 4, !dbg !1803
  %157 = load i32, i32* %buf_size.addr.i, align 4, !dbg !1804
  %cmp.i = icmp sge i32 %157, 0, !dbg !1808
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !1809

if.then.i:                                        ; preds = %if.then82
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.72, i32 0, i32 0), i32 137) #10, !dbg !1810
  call void @abort() #11, !dbg !1813
  unreachable, !dbg !1815

bytestream2_init.exit:                            ; preds = %if.then82
  %158 = load i8*, i8** %buf.addr.i, align 8, !dbg !1816
  %159 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !1817
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %159, i32 0, i32 0, !dbg !1818
  store i8* %158, i8** %buffer.i, align 8, !dbg !1819
  %160 = load i8*, i8** %buf.addr.i, align 8, !dbg !1820
  %161 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !1821
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %161, i32 0, i32 2, !dbg !1822
  store i8* %160, i8** %buffer_start.i, align 8, !dbg !1823
  %162 = load i8*, i8** %buf.addr.i, align 8, !dbg !1824
  %163 = load i32, i32* %buf_size.addr.i, align 4, !dbg !1825
  %idx.ext.i185 = sext i32 %163 to i64, !dbg !1826
  %add.ptr.i186 = getelementptr inbounds i8, i8* %162, i64 %idx.ext.i185, !dbg !1826
  %164 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !1827
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %164, i32 0, i32 1, !dbg !1828
  store i8* %add.ptr.i186, i8** %buffer_end.i, align 8, !dbg !1829
  %arraydecay85 = getelementptr inbounds [64 x i8], [64 x i8]* %commandbuffer, i32 0, i32 0, !dbg !1830
  %call86 = call i32 @ff_amf_read_string(%struct.GetByteContext* %gbc, i8* %arraydecay85, i32 64, i32* %stringlen), !dbg !1832
  %tobool87 = icmp ne i32 %call86, 0, !dbg !1832
  br i1 %tobool87, label %if.end124, label %if.then88, !dbg !1833

if.then88:                                        ; preds = %bytestream2_init.exit
  %arraydecay89 = getelementptr inbounds [64 x i8], [64 x i8]* %commandbuffer, i32 0, i32 0, !dbg !1834
  %call90 = call i32 @strcmp(i8* %arraydecay89, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.174, i32 0, i32 0)) #9, !dbg !1837
  %tobool91 = icmp ne i32 %call90, 0, !dbg !1837
  br i1 %tobool91, label %lor.lhs.false92, label %if.then96, !dbg !1838

lor.lhs.false92:                                  ; preds = %if.then88
  %arraydecay93 = getelementptr inbounds [64 x i8], [64 x i8]* %commandbuffer, i32 0, i32 0, !dbg !1839
  %call94 = call i32 @strcmp(i8* %arraydecay93, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.180, i32 0, i32 0)) #9, !dbg !1840
  %tobool95 = icmp ne i32 %call94, 0, !dbg !1840
  br i1 %tobool95, label %if.end123, label %if.then96, !dbg !1841

if.then96:                                        ; preds = %lor.lhs.false92, %if.then88
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !1843, metadata !376), !dbg !1845
  %165 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1846
  %out_pkt97 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %165, i32 0, i32 17, !dbg !1848
  %data98 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %out_pkt97, i32 0, i32 5, !dbg !1849
  %166 = bitcast i8** %data98 to i8*, !dbg !1850
  %167 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1851
  %out_pkt99 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %167, i32 0, i32 17, !dbg !1852
  %size100 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %out_pkt99, i32 0, i32 6, !dbg !1853
  %168 = load i32, i32* %size100, align 8, !dbg !1853
  %add101 = add nsw i32 %168, 16, !dbg !1854
  %conv = sext i32 %add101 to i64, !dbg !1851
  %call102 = call i32 @av_reallocp(i8* %166, i64 %conv), !dbg !1855
  store i32 %call102, i32* %ret, align 4, !dbg !1856
  %cmp103 = icmp slt i32 %call102, 0, !dbg !1857
  br i1 %cmp103, label %if.then105, label %if.end109, !dbg !1858

if.then105:                                       ; preds = %if.then96
  %169 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1859
  %flv_header_bytes106 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %169, i32 0, i32 27, !dbg !1861
  store i32 0, i32* %flv_header_bytes106, align 8, !dbg !1862
  %170 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1863
  %flv_off107 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %170, i32 0, i32 15, !dbg !1864
  store i32 0, i32* %flv_off107, align 4, !dbg !1865
  %171 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1866
  %flv_size108 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %171, i32 0, i32 14, !dbg !1867
  store i32 0, i32* %flv_size108, align 8, !dbg !1868
  %172 = load i32, i32* %ret, align 4, !dbg !1869
  store i32 %172, i32* %retval, align 4, !dbg !1870
  br label %return, !dbg !1870

if.end109:                                        ; preds = %if.then96
  %173 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1871
  %out_pkt110 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %173, i32 0, i32 17, !dbg !1872
  %data111 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %out_pkt110, i32 0, i32 5, !dbg !1873
  %174 = load i8*, i8** %data111, align 8, !dbg !1873
  %add.ptr112 = getelementptr inbounds i8, i8* %174, i64 16, !dbg !1874
  %175 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1875
  %out_pkt113 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %175, i32 0, i32 17, !dbg !1876
  %data114 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %out_pkt113, i32 0, i32 5, !dbg !1877
  %176 = load i8*, i8** %data114, align 8, !dbg !1877
  %177 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1878
  %out_pkt115 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %177, i32 0, i32 17, !dbg !1879
  %size116 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %out_pkt115, i32 0, i32 6, !dbg !1880
  %178 = load i32, i32* %size116, align 8, !dbg !1880
  %conv117 = sext i32 %178 to i64, !dbg !1878
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %add.ptr112, i8* %176, i64 %conv117, i32 1, i1 false), !dbg !1881
  %179 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1882
  %out_pkt118 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %179, i32 0, i32 17, !dbg !1883
  %size119 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %out_pkt118, i32 0, i32 6, !dbg !1884
  %180 = load i32, i32* %size119, align 8, !dbg !1885
  %add120 = add nsw i32 %180, 16, !dbg !1885
  store i32 %add120, i32* %size119, align 8, !dbg !1885
  %181 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1886
  %out_pkt121 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %181, i32 0, i32 17, !dbg !1887
  %data122 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %out_pkt121, i32 0, i32 5, !dbg !1888
  %182 = load i8*, i8** %data122, align 8, !dbg !1888
  store i8* %182, i8** %ptr, align 8, !dbg !1889
  call void @ff_amf_write_string(i8** %ptr, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.177, i32 0, i32 0)), !dbg !1890
  br label %if.end123, !dbg !1891

if.end123:                                        ; preds = %if.end109, %lor.lhs.false92
  br label %if.end124, !dbg !1892

if.end124:                                        ; preds = %if.end123, %bytestream2_init.exit
  br label %if.end125, !dbg !1893

if.end125:                                        ; preds = %if.end124, %if.then78
  %183 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1894
  %184 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1896
  %out_pkt126 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %184, i32 0, i32 17, !dbg !1897
  %call127 = call i32 @rtmp_send_packet(%struct.RTMPContext* %183, %struct.RTMPPacket* %out_pkt126, i32 0), !dbg !1898
  store i32 %call127, i32* %ret, align 4, !dbg !1899
  %cmp128 = icmp slt i32 %call127, 0, !dbg !1900
  br i1 %cmp128, label %if.then130, label %if.end131, !dbg !1901

if.then130:                                       ; preds = %if.end125
  %185 = load i32, i32* %ret, align 4, !dbg !1902
  store i32 %185, i32* %retval, align 4, !dbg !1903
  br label %return, !dbg !1903

if.end131:                                        ; preds = %if.end125
  %186 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1904
  %flv_size132 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %186, i32 0, i32 14, !dbg !1905
  store i32 0, i32* %flv_size132, align 8, !dbg !1906
  %187 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1907
  %flv_off133 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %187, i32 0, i32 15, !dbg !1908
  store i32 0, i32* %flv_off133, align 4, !dbg !1909
  %188 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1910
  %flv_header_bytes134 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %188, i32 0, i32 27, !dbg !1911
  store i32 0, i32* %flv_header_bytes134, align 8, !dbg !1912
  %189 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1913
  %flv_nb_packets = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %189, i32 0, i32 16, !dbg !1914
  %190 = load i32, i32* %flv_nb_packets, align 8, !dbg !1915
  %inc = add nsw i32 %190, 1, !dbg !1915
  store i32 %inc, i32* %flv_nb_packets, align 8, !dbg !1915
  br label %if.end135, !dbg !1916

if.end135:                                        ; preds = %if.end131, %cond.end65
  br label %do.cond, !dbg !1917

do.cond:                                          ; preds = %if.end135, %cond.end
  %191 = load i8*, i8** %buf_temp, align 8, !dbg !1918
  %192 = load i8*, i8** %buf.addr, align 8, !dbg !1920
  %sub.ptr.lhs.cast = ptrtoint i8* %191 to i64, !dbg !1921
  %sub.ptr.rhs.cast = ptrtoint i8* %192 to i64, !dbg !1921
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1921
  %193 = load i32, i32* %size.addr, align 4, !dbg !1922
  %conv136 = sext i32 %193 to i64, !dbg !1922
  %cmp137 = icmp slt i64 %sub.ptr.sub, %conv136, !dbg !1923
  br i1 %cmp137, label %do.body, label %do.end, !dbg !1924, !llvm.loop !1498

do.end:                                           ; preds = %do.cond, %if.then25
  %194 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1925
  %flv_nb_packets139 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %194, i32 0, i32 16, !dbg !1927
  %195 = load i32, i32* %flv_nb_packets139, align 8, !dbg !1927
  %196 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1928
  %flush_interval = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %196, i32 0, i32 41, !dbg !1929
  %197 = load i32, i32* %flush_interval, align 8, !dbg !1929
  %cmp140 = icmp slt i32 %195, %197, !dbg !1930
  br i1 %cmp140, label %if.then142, label %if.end143, !dbg !1931

if.then142:                                       ; preds = %do.end
  %198 = load i32, i32* %size.addr, align 4, !dbg !1932
  store i32 %198, i32* %retval, align 4, !dbg !1933
  br label %return, !dbg !1933

if.end143:                                        ; preds = %do.end
  %199 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1934
  %flv_nb_packets144 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %199, i32 0, i32 16, !dbg !1935
  store i32 0, i32* %flv_nb_packets144, align 8, !dbg !1936
  %200 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1937
  %stream = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %200, i32 0, i32 1, !dbg !1938
  %201 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !1938
  %flags = getelementptr inbounds %struct.URLContext, %struct.URLContext* %201, i32 0, i32 4, !dbg !1939
  %202 = load i32, i32* %flags, align 8, !dbg !1940
  %or145 = or i32 %202, 8, !dbg !1940
  store i32 %or145, i32* %flags, align 8, !dbg !1940
  %203 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1941
  %stream146 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %203, i32 0, i32 1, !dbg !1942
  %204 = load %struct.URLContext*, %struct.URLContext** %stream146, align 8, !dbg !1942
  %call147 = call i32 @ffurl_read(%struct.URLContext* %204, i8* %c, i32 1), !dbg !1943
  store i32 %call147, i32* %ret, align 4, !dbg !1944
  %205 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1945
  %stream148 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %205, i32 0, i32 1, !dbg !1946
  %206 = load %struct.URLContext*, %struct.URLContext** %stream148, align 8, !dbg !1946
  %flags149 = getelementptr inbounds %struct.URLContext, %struct.URLContext* %206, i32 0, i32 4, !dbg !1947
  %207 = load i32, i32* %flags149, align 8, !dbg !1948
  %and = and i32 %207, -9, !dbg !1948
  store i32 %and, i32* %flags149, align 8, !dbg !1948
  %208 = load i32, i32* %ret, align 4, !dbg !1949
  %cmp150 = icmp eq i32 %208, -11, !dbg !1951
  br i1 %cmp150, label %if.then152, label %if.else, !dbg !1952

if.then152:                                       ; preds = %if.end143
  %209 = load i32, i32* %size.addr, align 4, !dbg !1953
  store i32 %209, i32* %retval, align 4, !dbg !1955
  br label %return, !dbg !1955

if.else:                                          ; preds = %if.end143
  %210 = load i32, i32* %ret, align 4, !dbg !1956
  %cmp153 = icmp slt i32 %210, 0, !dbg !1958
  br i1 %cmp153, label %if.then155, label %if.else156, !dbg !1959

if.then155:                                       ; preds = %if.else
  %211 = load i32, i32* %ret, align 4, !dbg !1960
  store i32 %211, i32* %retval, align 4, !dbg !1962
  br label %return, !dbg !1962

if.else156:                                       ; preds = %if.else
  %212 = load i32, i32* %ret, align 4, !dbg !1963
  %cmp157 = icmp eq i32 %212, 1, !dbg !1965
  br i1 %cmp157, label %if.then159, label %if.end175, !dbg !1966

if.then159:                                       ; preds = %if.else156
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %rpkt, metadata !1967, metadata !376), !dbg !1969
  %213 = bitcast %struct.RTMPPacket* %rpkt to i8*, !dbg !1969
  call void @llvm.memset.p0i8.i64(i8* %213, i8 0, i64 48, i32 8, i1 false), !dbg !1969
  %214 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1970
  %stream160 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %214, i32 0, i32 1, !dbg !1972
  %215 = load %struct.URLContext*, %struct.URLContext** %stream160, align 8, !dbg !1972
  %216 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1973
  %in_chunk_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %216, i32 0, i32 4, !dbg !1974
  %217 = load i32, i32* %in_chunk_size, align 8, !dbg !1974
  %218 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1975
  %prev_pkt161 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %218, i32 0, i32 2, !dbg !1976
  %arrayidx162 = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt161, i64 0, i64 0, !dbg !1975
  %219 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1977
  %nb_prev_pkt163 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %219, i32 0, i32 3, !dbg !1978
  %arrayidx164 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt163, i64 0, i64 0, !dbg !1977
  %220 = load i8, i8* %c, align 1, !dbg !1979
  %call165 = call i32 @ff_rtmp_packet_read_internal(%struct.URLContext* %215, %struct.RTMPPacket* %rpkt, i32 %217, %struct.RTMPPacket** %arrayidx162, i32* %arrayidx164, i8 zeroext %220), !dbg !1980
  store i32 %call165, i32* %ret, align 4, !dbg !1981
  %cmp166 = icmp sle i32 %call165, 0, !dbg !1982
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !1983

if.then168:                                       ; preds = %if.then159
  %221 = load i32, i32* %ret, align 4, !dbg !1984
  store i32 %221, i32* %retval, align 4, !dbg !1985
  br label %return, !dbg !1985

if.end169:                                        ; preds = %if.then159
  %222 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !1986
  %223 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !1988
  %call170 = call i32 @rtmp_parse_result(%struct.URLContext* %222, %struct.RTMPContext* %223, %struct.RTMPPacket* %rpkt), !dbg !1989
  store i32 %call170, i32* %ret, align 4, !dbg !1990
  %cmp171 = icmp slt i32 %call170, 0, !dbg !1991
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !1992

if.then173:                                       ; preds = %if.end169
  %224 = load i32, i32* %ret, align 4, !dbg !1993
  store i32 %224, i32* %retval, align 4, !dbg !1994
  br label %return, !dbg !1994

if.end174:                                        ; preds = %if.end169
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %rpkt), !dbg !1995
  br label %if.end175, !dbg !1996

if.end175:                                        ; preds = %if.end174, %if.else156
  br label %if.end176

if.end176:                                        ; preds = %if.end175
  br label %if.end177

if.end177:                                        ; preds = %if.end176
  %225 = load i32, i32* %size.addr, align 4, !dbg !1997
  store i32 %225, i32* %retval, align 4, !dbg !1998
  br label %return, !dbg !1998

return:                                           ; preds = %if.end177, %if.then173, %if.then168, %if.then155, %if.then152, %if.then142, %if.then130, %if.then105, %if.then52, %if.then44
  %226 = load i32, i32* %retval, align 4, !dbg !1999
  ret i32 %226, !dbg !1999
}

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_close(%struct.URLContext* %h) #0 !dbg !2000 {
entry:
  %h.addr = alloca %struct.URLContext*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.URLContext* %h, %struct.URLContext** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %h.addr, metadata !2001, metadata !376), !dbg !2002
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !2003, metadata !376), !dbg !2004
  %0 = load %struct.URLContext*, %struct.URLContext** %h.addr, align 8, !dbg !2005
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !2006
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2006
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !2005
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !2004
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2007, metadata !376), !dbg !2008
  store i32 0, i32* %ret, align 4, !dbg !2008
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2009, metadata !376), !dbg !2010
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2011, metadata !376), !dbg !2012
  %3 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2013
  %is_input = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %3, i32 0, i32 6, !dbg !2015
  %4 = load i32, i32* %is_input, align 8, !dbg !2015
  %tobool = icmp ne i32 %4, 0, !dbg !2013
  br i1 %tobool, label %if.end6, label %if.then, !dbg !2016

if.then:                                          ; preds = %entry
  %5 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2017
  %flv_data = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %5, i32 0, i32 13, !dbg !2019
  store i8* null, i8** %flv_data, align 8, !dbg !2020
  %6 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2021
  %out_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %6, i32 0, i32 17, !dbg !2023
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %out_pkt, i32 0, i32 6, !dbg !2024
  %7 = load i32, i32* %size, align 8, !dbg !2024
  %tobool1 = icmp ne i32 %7, 0, !dbg !2021
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2025

if.then2:                                         ; preds = %if.then
  %8 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2026
  %out_pkt3 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %8, i32 0, i32 17, !dbg !2027
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %out_pkt3), !dbg !2028
  br label %if.end, !dbg !2028

if.end:                                           ; preds = %if.then2, %if.then
  %9 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2029
  %state = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %9, i32 0, i32 11, !dbg !2031
  %10 = load i32, i32* %state, align 8, !dbg !2031
  %cmp = icmp ugt i32 %10, 2, !dbg !2032
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !2033

if.then4:                                         ; preds = %if.end
  %11 = load %struct.URLContext*, %struct.URLContext** %h.addr, align 8, !dbg !2034
  %12 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2035
  %call = call i32 @gen_fcunpublish_stream(%struct.URLContext* %11, %struct.RTMPContext* %12), !dbg !2036
  store i32 %call, i32* %ret, align 4, !dbg !2037
  br label %if.end5, !dbg !2038

if.end5:                                          ; preds = %if.then4, %if.end
  br label %if.end6, !dbg !2039

if.end6:                                          ; preds = %if.end5, %entry
  %13 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2040
  %state7 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %13, i32 0, i32 11, !dbg !2042
  %14 = load i32, i32* %state7, align 8, !dbg !2042
  %cmp8 = icmp ugt i32 %14, 1, !dbg !2043
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !2044

if.then9:                                         ; preds = %if.end6
  %15 = load %struct.URLContext*, %struct.URLContext** %h.addr, align 8, !dbg !2045
  %16 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2046
  %call10 = call i32 @gen_delete_stream(%struct.URLContext* %15, %struct.RTMPContext* %16), !dbg !2047
  store i32 %call10, i32* %ret, align 4, !dbg !2048
  br label %if.end11, !dbg !2049

if.end11:                                         ; preds = %if.then9, %if.end6
  store i32 0, i32* %i, align 4, !dbg !2050
  br label %for.cond, !dbg !2052

for.cond:                                         ; preds = %for.inc23, %if.end11
  %17 = load i32, i32* %i, align 4, !dbg !2053
  %cmp12 = icmp slt i32 %17, 2, !dbg !2056
  br i1 %cmp12, label %for.body, label %for.end25, !dbg !2057

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !2058
  br label %for.cond13, !dbg !2061

for.cond13:                                       ; preds = %for.inc, %for.body
  %18 = load i32, i32* %j, align 4, !dbg !2062
  %19 = load i32, i32* %i, align 4, !dbg !2065
  %idxprom = sext i32 %19 to i64, !dbg !2066
  %20 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2066
  %nb_prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %20, i32 0, i32 3, !dbg !2067
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt, i64 0, i64 %idxprom, !dbg !2066
  %21 = load i32, i32* %arrayidx, align 4, !dbg !2066
  %cmp14 = icmp slt i32 %18, %21, !dbg !2068
  br i1 %cmp14, label %for.body15, label %for.end, !dbg !2069

for.body15:                                       ; preds = %for.cond13
  %22 = load i32, i32* %j, align 4, !dbg !2070
  %idxprom16 = sext i32 %22 to i64, !dbg !2071
  %23 = load i32, i32* %i, align 4, !dbg !2072
  %idxprom17 = sext i32 %23 to i64, !dbg !2071
  %24 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2071
  %prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %24, i32 0, i32 2, !dbg !2073
  %arrayidx18 = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt, i64 0, i64 %idxprom17, !dbg !2071
  %25 = load %struct.RTMPPacket*, %struct.RTMPPacket** %arrayidx18, align 8, !dbg !2071
  %arrayidx19 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %25, i64 %idxprom16, !dbg !2071
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %arrayidx19), !dbg !2074
  br label %for.inc, !dbg !2074

for.inc:                                          ; preds = %for.body15
  %26 = load i32, i32* %j, align 4, !dbg !2075
  %inc = add nsw i32 %26, 1, !dbg !2075
  store i32 %inc, i32* %j, align 4, !dbg !2075
  br label %for.cond13, !dbg !2077, !llvm.loop !2078

for.end:                                          ; preds = %for.cond13
  %27 = load i32, i32* %i, align 4, !dbg !2080
  %idxprom20 = sext i32 %27 to i64, !dbg !2081
  %28 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2081
  %prev_pkt21 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %28, i32 0, i32 2, !dbg !2082
  %arrayidx22 = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt21, i64 0, i64 %idxprom20, !dbg !2081
  %29 = bitcast %struct.RTMPPacket** %arrayidx22 to i8*, !dbg !2083
  call void @av_freep(i8* %29), !dbg !2084
  br label %for.inc23, !dbg !2085

for.inc23:                                        ; preds = %for.end
  %30 = load i32, i32* %i, align 4, !dbg !2086
  %inc24 = add nsw i32 %30, 1, !dbg !2086
  store i32 %inc24, i32* %i, align 4, !dbg !2086
  br label %for.cond, !dbg !2088, !llvm.loop !2089

for.end25:                                        ; preds = %for.cond
  %31 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2091
  call void @free_tracked_methods(%struct.RTMPContext* %31), !dbg !2092
  %32 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2093
  %flv_data26 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %32, i32 0, i32 13, !dbg !2094
  %33 = bitcast i8** %flv_data26 to i8*, !dbg !2095
  call void @av_freep(i8* %33), !dbg !2096
  %34 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2097
  %stream = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %34, i32 0, i32 1, !dbg !2098
  %35 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !2098
  %call27 = call i32 @ffurl_close(%struct.URLContext* %35), !dbg !2099
  %36 = load i32, i32* %ret, align 4, !dbg !2100
  ret i32 %36, !dbg !2101
}

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_pause(%struct.URLContext* %s, i32 %pause) #0 !dbg !2102 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %pause.addr = alloca i32, align 4
  %rt = alloca %struct.RTMPContext*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !2103, metadata !376), !dbg !2104
  store i32 %pause, i32* %pause.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pause.addr, metadata !2105, metadata !376), !dbg !2106
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !2107, metadata !376), !dbg !2108
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2109
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !2110
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2110
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !2109
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !2108
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2111, metadata !376), !dbg !2112
  %3 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2113
  %4 = bitcast %struct.URLContext* %3 to i8*, !dbg !2113
  %5 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2114
  %last_timestamp = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %5, i32 0, i32 21, !dbg !2115
  %6 = load i32, i32* %last_timestamp, align 8, !dbg !2115
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 48, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.185, i32 0, i32 0), i32 %6), !dbg !2116
  %7 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2117
  %8 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2119
  %9 = load i32, i32* %pause.addr, align 4, !dbg !2120
  %10 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2121
  %last_timestamp1 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %10, i32 0, i32 21, !dbg !2122
  %11 = load i32, i32* %last_timestamp1, align 8, !dbg !2122
  %call = call i32 @gen_pause(%struct.URLContext* %7, %struct.RTMPContext* %8, i32 %9, i32 %11), !dbg !2123
  store i32 %call, i32* %ret, align 4, !dbg !2124
  %cmp = icmp slt i32 %call, 0, !dbg !2125
  br i1 %cmp, label %if.then, label %if.end, !dbg !2126

if.then:                                          ; preds = %entry
  %12 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2127
  %13 = bitcast %struct.URLContext* %12 to i8*, !dbg !2127
  %14 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2129
  %last_timestamp2 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %14, i32 0, i32 21, !dbg !2130
  %15 = load i32, i32* %last_timestamp2, align 8, !dbg !2130
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.186, i32 0, i32 0), i32 %15), !dbg !2131
  %16 = load i32, i32* %ret, align 4, !dbg !2132
  store i32 %16, i32* %retval, align 4, !dbg !2133
  br label %return, !dbg !2133

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2134
  br label %return, !dbg !2134

return:                                           ; preds = %if.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !2135
  ret i32 %17, !dbg !2135
}

; Function Attrs: nounwind uwtable
define internal i64 @rtmp_seek(%struct.URLContext* %s, i32 %stream_index, i64 %timestamp, i32 %flags) #0 !dbg !2136 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca %struct.URLContext*, align 8
  %stream_index.addr = alloca i32, align 4
  %timestamp.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %rt = alloca %struct.RTMPContext*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !2137, metadata !376), !dbg !2138
  store i32 %stream_index, i32* %stream_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stream_index.addr, metadata !2139, metadata !376), !dbg !2140
  store i64 %timestamp, i64* %timestamp.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timestamp.addr, metadata !2141, metadata !376), !dbg !2142
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !2143, metadata !376), !dbg !2144
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !2145, metadata !376), !dbg !2146
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2147
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !2148
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2148
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !2147
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !2146
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2149, metadata !376), !dbg !2150
  %3 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2151
  %4 = bitcast %struct.URLContext* %3 to i8*, !dbg !2151
  %5 = load i32, i32* %stream_index.addr, align 4, !dbg !2152
  %6 = load i64, i64* %timestamp.addr, align 8, !dbg !2153
  %7 = load i32, i32* %flags.addr, align 4, !dbg !2154
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 48, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.189, i32 0, i32 0), i32 %5, i64 %6, i32 %7), !dbg !2155
  %8 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2156
  %9 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2158
  %10 = load i64, i64* %timestamp.addr, align 8, !dbg !2159
  %call = call i32 @gen_seek(%struct.URLContext* %8, %struct.RTMPContext* %9, i64 %10), !dbg !2160
  store i32 %call, i32* %ret, align 4, !dbg !2161
  %cmp = icmp slt i32 %call, 0, !dbg !2162
  br i1 %cmp, label %if.then, label %if.end, !dbg !2163

if.then:                                          ; preds = %entry
  %11 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2164
  %12 = bitcast %struct.URLContext* %11 to i8*, !dbg !2164
  %13 = load i32, i32* %stream_index.addr, align 4, !dbg !2166
  %14 = load i64, i64* %timestamp.addr, align 8, !dbg !2167
  %15 = load i32, i32* %flags.addr, align 4, !dbg !2168
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.190, i32 0, i32 0), i32 %13, i64 %14, i32 %15), !dbg !2169
  %16 = load i32, i32* %ret, align 4, !dbg !2170
  %conv = sext i32 %16 to i64, !dbg !2170
  store i64 %conv, i64* %retval, align 8, !dbg !2171
  br label %return, !dbg !2171

if.end:                                           ; preds = %entry
  %17 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2172
  %flv_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %17, i32 0, i32 14, !dbg !2173
  %18 = load i32, i32* %flv_size, align 8, !dbg !2173
  %19 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2174
  %flv_off = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %19, i32 0, i32 15, !dbg !2175
  store i32 %18, i32* %flv_off, align 4, !dbg !2176
  %20 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2177
  %state = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %20, i32 0, i32 11, !dbg !2178
  store i32 4, i32* %state, align 8, !dbg !2179
  %21 = load i64, i64* %timestamp.addr, align 8, !dbg !2180
  store i64 %21, i64* %retval, align 8, !dbg !2181
  br label %return, !dbg !2181

return:                                           ; preds = %if.end, %if.then
  %22 = load i64, i64* %retval, align 8, !dbg !2182
  ret i64 %22, !dbg !2182
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @av_url_split(i8*, i32, i8*, i32, i8*, i32, i32*, i8*, i32, i8*) #2

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #3

declare void @av_log(i8*, i32, i8*, ...) #2

declare i64 @av_strlcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #3

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) #2

declare i32 @ff_url_join(i8*, i32, i8*, i8*, i8*, i32, i8*, ...) #2

declare i32 @ffurl_open_whitelist(%struct.URLContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**, i8*, i8*, %struct.URLContext*) #2

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_calc_swfhash(%struct.URLContext* %s) #0 !dbg !2183 {
entry:
  %s.addr = alloca %struct.URLContext*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %in_data = alloca i8*, align 8
  %out_data = alloca i8*, align 8
  %swfdata = alloca i8*, align 8
  %in_size = alloca i64, align 8
  %stream = alloca %struct.URLContext*, align 8
  %swfhash = alloca [32 x i8], align 16
  %swfsize = alloca i32, align 4
  %ret = alloca i32, align 4
  %out_size = alloca i64, align 8
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !2184, metadata !376), !dbg !2185
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !2186, metadata !376), !dbg !2187
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2188
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !2189
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2189
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !2188
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !2187
  call void @llvm.dbg.declare(metadata i8** %in_data, metadata !2190, metadata !376), !dbg !2191
  store i8* null, i8** %in_data, align 8, !dbg !2191
  call void @llvm.dbg.declare(metadata i8** %out_data, metadata !2192, metadata !376), !dbg !2193
  store i8* null, i8** %out_data, align 8, !dbg !2193
  call void @llvm.dbg.declare(metadata i8** %swfdata, metadata !2194, metadata !376), !dbg !2195
  call void @llvm.dbg.declare(metadata i64* %in_size, metadata !2196, metadata !376), !dbg !2197
  call void @llvm.dbg.declare(metadata %struct.URLContext** %stream, metadata !2198, metadata !376), !dbg !2199
  call void @llvm.dbg.declare(metadata [32 x i8]* %swfhash, metadata !2200, metadata !376), !dbg !2204
  call void @llvm.dbg.declare(metadata i32* %swfsize, metadata !2205, metadata !376), !dbg !2206
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2207, metadata !376), !dbg !2208
  store i32 0, i32* %ret, align 4, !dbg !2208
  %3 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2209
  %swfverify = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %3, i32 0, i32 35, !dbg !2211
  %4 = load i8*, i8** %swfverify, align 8, !dbg !2211
  %5 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2212
  %interrupt_callback = getelementptr inbounds %struct.URLContext, %struct.URLContext* %5, i32 0, i32 8, !dbg !2213
  %6 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2214
  %protocol_whitelist = getelementptr inbounds %struct.URLContext, %struct.URLContext* %6, i32 0, i32 10, !dbg !2215
  %7 = load i8*, i8** %protocol_whitelist, align 8, !dbg !2215
  %8 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2216
  %protocol_blacklist = getelementptr inbounds %struct.URLContext, %struct.URLContext* %8, i32 0, i32 11, !dbg !2217
  %9 = load i8*, i8** %protocol_blacklist, align 8, !dbg !2217
  %10 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2218
  %call = call i32 @ffurl_open_whitelist(%struct.URLContext** %stream, i8* %4, i32 1, %struct.AVIOInterruptCB* %interrupt_callback, %struct.AVDictionary** null, i8* %7, i8* %9, %struct.URLContext* %10), !dbg !2219
  store i32 %call, i32* %ret, align 4, !dbg !2220
  %cmp = icmp slt i32 %call, 0, !dbg !2221
  br i1 %cmp, label %if.then, label %if.end, !dbg !2222

if.then:                                          ; preds = %entry
  %11 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2223
  %12 = bitcast %struct.URLContext* %11 to i8*, !dbg !2223
  %13 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2225
  %swfverify1 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %13, i32 0, i32 35, !dbg !2226
  %14 = load i8*, i8** %swfverify1, align 8, !dbg !2226
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i32 0, i32 0), i8* %14), !dbg !2227
  br label %fail, !dbg !2228

if.end:                                           ; preds = %entry
  %15 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !2229
  %call2 = call i64 @ffurl_seek(%struct.URLContext* %15, i64 0, i32 65536), !dbg !2231
  store i64 %call2, i64* %in_size, align 8, !dbg !2232
  %cmp3 = icmp slt i64 %call2, 0, !dbg !2233
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !2234

if.then4:                                         ; preds = %if.end
  store i32 -5, i32* %ret, align 4, !dbg !2235
  br label %fail, !dbg !2237

if.end5:                                          ; preds = %if.end
  %16 = load i64, i64* %in_size, align 8, !dbg !2238
  %call6 = call noalias i8* @av_malloc(i64 %16), !dbg !2240
  store i8* %call6, i8** %in_data, align 8, !dbg !2241
  %tobool = icmp ne i8* %call6, null, !dbg !2241
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !2242

if.then7:                                         ; preds = %if.end5
  store i32 -12, i32* %ret, align 4, !dbg !2243
  br label %fail, !dbg !2245

if.end8:                                          ; preds = %if.end5
  %17 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !2246
  %18 = load i8*, i8** %in_data, align 8, !dbg !2248
  %19 = load i64, i64* %in_size, align 8, !dbg !2249
  %conv = trunc i64 %19 to i32, !dbg !2249
  %call9 = call i32 @ffurl_read_complete(%struct.URLContext* %17, i8* %18, i32 %conv), !dbg !2250
  store i32 %call9, i32* %ret, align 4, !dbg !2251
  %cmp10 = icmp slt i32 %call9, 0, !dbg !2252
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !2253

if.then12:                                        ; preds = %if.end8
  br label %fail, !dbg !2254

if.end13:                                         ; preds = %if.end8
  %20 = load i64, i64* %in_size, align 8, !dbg !2255
  %cmp14 = icmp slt i64 %20, 3, !dbg !2257
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !2258

if.then16:                                        ; preds = %if.end13
  store i32 -1094995529, i32* %ret, align 4, !dbg !2259
  br label %fail, !dbg !2261

if.end17:                                         ; preds = %if.end13
  %21 = load i8*, i8** %in_data, align 8, !dbg !2262
  %call18 = call i32 @memcmp(i8* %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i32 0, i32 0), i64 3) #9, !dbg !2264
  %tobool19 = icmp ne i32 %call18, 0, !dbg !2264
  br i1 %tobool19, label %if.else, label %if.then20, !dbg !2265

if.then20:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata i64* %out_size, metadata !2266, metadata !376), !dbg !2268
  %call21 = call noalias i8* @av_malloc(i64 8), !dbg !2269
  store i8* %call21, i8** %out_data, align 8, !dbg !2271
  %tobool22 = icmp ne i8* %call21, null, !dbg !2271
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !2272

if.then23:                                        ; preds = %if.then20
  store i32 -12, i32* %ret, align 4, !dbg !2273
  br label %fail, !dbg !2275

if.end24:                                         ; preds = %if.then20
  %22 = load i8*, i8** %in_data, align 8, !dbg !2276
  store i8 70, i8* %22, align 1, !dbg !2277
  %23 = load i8*, i8** %out_data, align 8, !dbg !2278
  %24 = load i8*, i8** %in_data, align 8, !dbg !2279
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 1, i1 false), !dbg !2280
  store i64 8, i64* %out_size, align 8, !dbg !2281
  %25 = load i8*, i8** %in_data, align 8, !dbg !2282
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 8, !dbg !2284
  %26 = load i64, i64* %in_size, align 8, !dbg !2285
  %sub = sub nsw i64 %26, 8, !dbg !2286
  %call25 = call i32 @rtmp_uncompress_swfplayer(i8* %add.ptr, i64 %sub, i8** %out_data, i64* %out_size), !dbg !2287
  store i32 %call25, i32* %ret, align 4, !dbg !2288
  %cmp26 = icmp slt i32 %call25, 0, !dbg !2289
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !2290

if.then28:                                        ; preds = %if.end24
  br label %fail, !dbg !2291

if.end29:                                         ; preds = %if.end24
  %27 = load i64, i64* %out_size, align 8, !dbg !2292
  %conv30 = trunc i64 %27 to i32, !dbg !2292
  store i32 %conv30, i32* %swfsize, align 4, !dbg !2293
  %28 = load i8*, i8** %out_data, align 8, !dbg !2294
  store i8* %28, i8** %swfdata, align 8, !dbg !2295
  br label %if.end32, !dbg !2296

if.else:                                          ; preds = %if.end17
  %29 = load i64, i64* %in_size, align 8, !dbg !2297
  %conv31 = trunc i64 %29 to i32, !dbg !2297
  store i32 %conv31, i32* %swfsize, align 4, !dbg !2299
  %30 = load i8*, i8** %in_data, align 8, !dbg !2300
  store i8* %30, i8** %swfdata, align 8, !dbg !2301
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.end29
  %31 = load i8*, i8** %swfdata, align 8, !dbg !2302
  %32 = load i32, i32* %swfsize, align 4, !dbg !2304
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %swfhash, i32 0, i32 0, !dbg !2305
  %call33 = call i32 @ff_rtmp_calc_digest(i8* %31, i32 %32, i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 30, i8* %arraydecay), !dbg !2306
  store i32 %call33, i32* %ret, align 4, !dbg !2307
  %cmp34 = icmp slt i32 %call33, 0, !dbg !2308
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !2309

if.then36:                                        ; preds = %if.end32
  br label %fail, !dbg !2310

if.end37:                                         ; preds = %if.end32
  %33 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2311
  %34 = bitcast %struct.RTMPContext* %33 to i8*, !dbg !2311
  %arraydecay38 = getelementptr inbounds [32 x i8], [32 x i8]* %swfhash, i32 0, i32 0, !dbg !2312
  %call39 = call i32 @av_opt_set_bin(i8* %34, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i32 0, i32 0), i8* %arraydecay38, i32 32, i32 0), !dbg !2313
  %35 = load i32, i32* %swfsize, align 4, !dbg !2314
  %36 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !2315
  %swfsize40 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %36, i32 0, i32 33, !dbg !2316
  store i32 %35, i32* %swfsize40, align 4, !dbg !2317
  br label %fail, !dbg !2315

fail:                                             ; preds = %if.end37, %if.then36, %if.then28, %if.then23, %if.then16, %if.then12, %if.then7, %if.then4, %if.then
  %37 = bitcast i8** %in_data to i8*, !dbg !2318
  call void @av_freep(i8* %37), !dbg !2319
  %38 = bitcast i8** %out_data to i8*, !dbg !2320
  call void @av_freep(i8* %38), !dbg !2321
  %39 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !2322
  %call41 = call i32 @ffurl_close(%struct.URLContext* %39), !dbg !2323
  %40 = load i32, i32* %ret, align 4, !dbg !2324
  ret i32 %40, !dbg !2325
}

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_handshake(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !2326 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %rnd = alloca %struct.AVLFG, align 4
  %tosend = alloca [1537 x i8], align 16
  %clientdata = alloca [1536 x i8], align 16
  %serverdata = alloca [1537 x i8], align 16
  %i = alloca i32, align 4
  %server_pos = alloca i32, align 4
  %client_pos = alloca i32, align 4
  %digest = alloca [32 x i8], align 16
  %signature = alloca [32 x i8], align 16
  %ret = alloca i32, align 4
  %type = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !2329, metadata !376), !dbg !2330
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !2331, metadata !376), !dbg !2332
  call void @llvm.dbg.declare(metadata %struct.AVLFG* %rnd, metadata !2333, metadata !376), !dbg !2341
  call void @llvm.dbg.declare(metadata [1537 x i8]* %tosend, metadata !2342, metadata !376), !dbg !2346
  %0 = bitcast [1537 x i8]* %tosend to i8*, !dbg !2346
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 1537, i32 16, i1 false), !dbg !2346
  %1 = bitcast i8* %0 to [1537 x i8]*, !dbg !2346
  %2 = getelementptr [1537 x i8], [1537 x i8]* %1, i32 0, i32 0, !dbg !2346
  store i8 3, i8* %2, !dbg !2346
  %3 = getelementptr [1537 x i8], [1537 x i8]* %1, i32 0, i32 5, !dbg !2346
  store i8 9, i8* %3, !dbg !2346
  %4 = getelementptr [1537 x i8], [1537 x i8]* %1, i32 0, i32 7, !dbg !2346
  store i8 124, i8* %4, !dbg !2346
  %5 = getelementptr [1537 x i8], [1537 x i8]* %1, i32 0, i32 8, !dbg !2346
  store i8 2, i8* %5, !dbg !2346
  call void @llvm.dbg.declare(metadata [1536 x i8]* %clientdata, metadata !2347, metadata !376), !dbg !2351
  call void @llvm.dbg.declare(metadata [1537 x i8]* %serverdata, metadata !2352, metadata !376), !dbg !2353
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2354, metadata !376), !dbg !2355
  call void @llvm.dbg.declare(metadata i32* %server_pos, metadata !2356, metadata !376), !dbg !2357
  call void @llvm.dbg.declare(metadata i32* %client_pos, metadata !2358, metadata !376), !dbg !2359
  call void @llvm.dbg.declare(metadata [32 x i8]* %digest, metadata !2360, metadata !376), !dbg !2362
  call void @llvm.dbg.declare(metadata [32 x i8]* %signature, metadata !2363, metadata !376), !dbg !2364
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2365, metadata !376), !dbg !2366
  call void @llvm.dbg.declare(metadata i32* %type, metadata !2367, metadata !376), !dbg !2368
  store i32 0, i32* %type, align 4, !dbg !2368
  %6 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2369
  %7 = bitcast %struct.URLContext* %6 to i8*, !dbg !2369
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 48, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i32 0, i32 0)), !dbg !2370
  call void @av_lfg_init(%struct.AVLFG* %rnd, i32 -559038242), !dbg !2371
  store i32 9, i32* %i, align 4, !dbg !2372
  br label %for.cond, !dbg !2374

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !2375
  %cmp = icmp sle i32 %8, 1536, !dbg !2378
  br i1 %cmp, label %for.body, label %for.end, !dbg !2379

for.body:                                         ; preds = %for.cond
  %call = call i32 @av_lfg_get(%struct.AVLFG* %rnd), !dbg !2380
  %shr = lshr i32 %call, 24, !dbg !2381
  %conv = trunc i32 %shr to i8, !dbg !2380
  %9 = load i32, i32* %i, align 4, !dbg !2382
  %idxprom = sext i32 %9 to i64, !dbg !2383
  %arrayidx = getelementptr inbounds [1537 x i8], [1537 x i8]* %tosend, i64 0, i64 %idxprom, !dbg !2383
  store i8 %conv, i8* %arrayidx, align 1, !dbg !2384
  br label %for.inc, !dbg !2383

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !2385
  %inc = add nsw i32 %10, 1, !dbg !2385
  store i32 %inc, i32* %i, align 4, !dbg !2385
  br label %for.cond, !dbg !2387, !llvm.loop !2388

for.end:                                          ; preds = %for.cond
  %arraydecay = getelementptr inbounds [1537 x i8], [1537 x i8]* %tosend, i32 0, i32 0, !dbg !2390
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 1, !dbg !2391
  %11 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2392
  %encrypted = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %11, i32 0, i32 42, !dbg !2393
  %12 = load i32, i32* %encrypted, align 4, !dbg !2393
  %call1 = call i32 @rtmp_handshake_imprint_with_digest(i8* %add.ptr, i32 %12), !dbg !2394
  store i32 %call1, i32* %client_pos, align 4, !dbg !2395
  %13 = load i32, i32* %client_pos, align 4, !dbg !2396
  %cmp2 = icmp slt i32 %13, 0, !dbg !2398
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2399

if.then:                                          ; preds = %for.end
  %14 = load i32, i32* %client_pos, align 4, !dbg !2400
  store i32 %14, i32* %retval, align 4, !dbg !2401
  br label %return, !dbg !2401

if.end:                                           ; preds = %for.end
  %15 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2402
  %stream = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %15, i32 0, i32 1, !dbg !2404
  %16 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !2404
  %arraydecay4 = getelementptr inbounds [1537 x i8], [1537 x i8]* %tosend, i32 0, i32 0, !dbg !2405
  %call5 = call i32 @ffurl_write(%struct.URLContext* %16, i8* %arraydecay4, i32 1537), !dbg !2406
  store i32 %call5, i32* %ret, align 4, !dbg !2407
  %cmp6 = icmp slt i32 %call5, 0, !dbg !2408
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !2409

if.then8:                                         ; preds = %if.end
  %17 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2410
  %18 = bitcast %struct.URLContext* %17 to i8*, !dbg !2410
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.37, i32 0, i32 0)), !dbg !2412
  %19 = load i32, i32* %ret, align 4, !dbg !2413
  store i32 %19, i32* %retval, align 4, !dbg !2414
  br label %return, !dbg !2414

if.end9:                                          ; preds = %if.end
  %20 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2415
  %stream10 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %20, i32 0, i32 1, !dbg !2417
  %21 = load %struct.URLContext*, %struct.URLContext** %stream10, align 8, !dbg !2417
  %arraydecay11 = getelementptr inbounds [1537 x i8], [1537 x i8]* %serverdata, i32 0, i32 0, !dbg !2418
  %call12 = call i32 @ffurl_read_complete(%struct.URLContext* %21, i8* %arraydecay11, i32 1537), !dbg !2419
  store i32 %call12, i32* %ret, align 4, !dbg !2420
  %cmp13 = icmp slt i32 %call12, 0, !dbg !2421
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !2422

if.then15:                                        ; preds = %if.end9
  %22 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2423
  %23 = bitcast %struct.URLContext* %22 to i8*, !dbg !2423
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.38, i32 0, i32 0)), !dbg !2425
  %24 = load i32, i32* %ret, align 4, !dbg !2426
  store i32 %24, i32* %retval, align 4, !dbg !2427
  br label %return, !dbg !2427

if.end16:                                         ; preds = %if.end9
  %25 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2428
  %stream17 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %25, i32 0, i32 1, !dbg !2430
  %26 = load %struct.URLContext*, %struct.URLContext** %stream17, align 8, !dbg !2430
  %arraydecay18 = getelementptr inbounds [1536 x i8], [1536 x i8]* %clientdata, i32 0, i32 0, !dbg !2431
  %call19 = call i32 @ffurl_read_complete(%struct.URLContext* %26, i8* %arraydecay18, i32 1536), !dbg !2432
  store i32 %call19, i32* %ret, align 4, !dbg !2433
  %cmp20 = icmp slt i32 %call19, 0, !dbg !2434
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !2435

if.then22:                                        ; preds = %if.end16
  %27 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2436
  %28 = bitcast %struct.URLContext* %27 to i8*, !dbg !2436
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.38, i32 0, i32 0)), !dbg !2438
  %29 = load i32, i32* %ret, align 4, !dbg !2439
  store i32 %29, i32* %retval, align 4, !dbg !2440
  br label %return, !dbg !2440

if.end23:                                         ; preds = %if.end16
  %30 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2441
  %31 = bitcast %struct.URLContext* %30 to i8*, !dbg !2441
  %arrayidx24 = getelementptr inbounds [1537 x i8], [1537 x i8]* %serverdata, i64 0, i64 0, !dbg !2442
  %32 = load i8, i8* %arrayidx24, align 16, !dbg !2442
  %conv25 = zext i8 %32 to i32, !dbg !2442
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 48, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.39, i32 0, i32 0), i32 %conv25), !dbg !2443
  %33 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2444
  %34 = bitcast %struct.URLContext* %33 to i8*, !dbg !2444
  %arrayidx26 = getelementptr inbounds [1537 x i8], [1537 x i8]* %serverdata, i64 0, i64 5, !dbg !2445
  %35 = load i8, i8* %arrayidx26, align 1, !dbg !2445
  %conv27 = zext i8 %35 to i32, !dbg !2445
  %arrayidx28 = getelementptr inbounds [1537 x i8], [1537 x i8]* %serverdata, i64 0, i64 6, !dbg !2446
  %36 = load i8, i8* %arrayidx28, align 2, !dbg !2446
  %conv29 = zext i8 %36 to i32, !dbg !2446
  %arrayidx30 = getelementptr inbounds [1537 x i8], [1537 x i8]* %serverdata, i64 0, i64 7, !dbg !2447
  %37 = load i8, i8* %arrayidx30, align 1, !dbg !2447
  %conv31 = zext i8 %37 to i32, !dbg !2447
  %arrayidx32 = getelementptr inbounds [1537 x i8], [1537 x i8]* %serverdata, i64 0, i64 8, !dbg !2448
  %38 = load i8, i8* %arrayidx32, align 8, !dbg !2448
  %conv33 = zext i8 %38 to i32, !dbg !2448
  call void (i8*, i32, i8*, ...) @av_log(i8* %34, i32 48, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i32 0, i32 0), i32 %conv27, i32 %conv29, i32 %conv31, i32 %conv33), !dbg !2449
  %39 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2450
  %is_input = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %39, i32 0, i32 6, !dbg !2452
  %40 = load i32, i32* %is_input, align 8, !dbg !2452
  %tobool = icmp ne i32 %40, 0, !dbg !2450
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !2453

land.lhs.true:                                    ; preds = %if.end23
  %arrayidx34 = getelementptr inbounds [1537 x i8], [1537 x i8]* %serverdata, i64 0, i64 5, !dbg !2454
  %41 = load i8, i8* %arrayidx34, align 1, !dbg !2454
  %conv35 = zext i8 %41 to i32, !dbg !2454
  %cmp36 = icmp sge i32 %conv35, 3, !dbg !2456
  br i1 %cmp36, label %if.then38, label %if.else, !dbg !2457

if.then38:                                        ; preds = %land.lhs.true
  %arraydecay39 = getelementptr inbounds [1537 x i8], [1537 x i8]* %serverdata, i32 0, i32 0, !dbg !2458
  %add.ptr40 = getelementptr inbounds i8, i8* %arraydecay39, i64 1, !dbg !2460
  %call41 = call i32 @rtmp_validate_digest(i8* %add.ptr40, i32 772), !dbg !2461
  store i32 %call41, i32* %server_pos, align 4, !dbg !2462
  %42 = load i32, i32* %server_pos, align 4, !dbg !2463
  %cmp42 = icmp slt i32 %42, 0, !dbg !2465
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !2466

if.then44:                                        ; preds = %if.then38
  %43 = load i32, i32* %server_pos, align 4, !dbg !2467
  store i32 %43, i32* %retval, align 4, !dbg !2468
  br label %return, !dbg !2468

if.end45:                                         ; preds = %if.then38
  %44 = load i32, i32* %server_pos, align 4, !dbg !2469
  %tobool46 = icmp ne i32 %44, 0, !dbg !2469
  br i1 %tobool46, label %if.end58, label %if.then47, !dbg !2471

if.then47:                                        ; preds = %if.end45
  store i32 1, i32* %type, align 4, !dbg !2472
  %arraydecay48 = getelementptr inbounds [1537 x i8], [1537 x i8]* %serverdata, i32 0, i32 0, !dbg !2474
  %add.ptr49 = getelementptr inbounds i8, i8* %arraydecay48, i64 1, !dbg !2475
  %call50 = call i32 @rtmp_validate_digest(i8* %add.ptr49, i32 8), !dbg !2476
  store i32 %call50, i32* %server_pos, align 4, !dbg !2477
  %45 = load i32, i32* %server_pos, align 4, !dbg !2478
  %cmp51 = icmp slt i32 %45, 0, !dbg !2480
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !2481

if.then53:                                        ; preds = %if.then47
  %46 = load i32, i32* %server_pos, align 4, !dbg !2482
  store i32 %46, i32* %retval, align 4, !dbg !2483
  br label %return, !dbg !2483

if.end54:                                         ; preds = %if.then47
  %47 = load i32, i32* %server_pos, align 4, !dbg !2484
  %tobool55 = icmp ne i32 %47, 0, !dbg !2484
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !2486

if.then56:                                        ; preds = %if.end54
  %48 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2487
  %49 = bitcast %struct.URLContext* %48 to i8*, !dbg !2487
  call void (i8*, i32, i8*, ...) @av_log(i8* %49, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.41, i32 0, i32 0)), !dbg !2489
  store i32 -5, i32* %retval, align 4, !dbg !2490
  br label %return, !dbg !2490

if.end57:                                         ; preds = %if.end54
  br label %if.end58, !dbg !2491

if.end58:                                         ; preds = %if.end57, %if.end45
  %50 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2492
  %swfsize = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %50, i32 0, i32 33, !dbg !2494
  %51 = load i32, i32* %swfsize, align 4, !dbg !2494
  %tobool59 = icmp ne i32 %51, 0, !dbg !2492
  br i1 %tobool59, label %if.then60, label %if.end70, !dbg !2495

if.then60:                                        ; preds = %if.end58
  %52 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2496
  %53 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2499
  %arraydecay61 = getelementptr inbounds [1537 x i8], [1537 x i8]* %serverdata, i32 0, i32 0, !dbg !2500
  %add.ptr62 = getelementptr inbounds i8, i8* %arraydecay61, i64 1, !dbg !2501
  %add.ptr63 = getelementptr inbounds i8, i8* %add.ptr62, i64 1536, !dbg !2502
  %add.ptr64 = getelementptr inbounds i8, i8* %add.ptr63, i64 -32, !dbg !2503
  %call65 = call i32 @rtmp_calc_swf_verification(%struct.URLContext* %52, %struct.RTMPContext* %53, i8* %add.ptr64), !dbg !2504
  store i32 %call65, i32* %ret, align 4, !dbg !2505
  %cmp66 = icmp slt i32 %call65, 0, !dbg !2506
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !2507

if.then68:                                        ; preds = %if.then60
  %54 = load i32, i32* %ret, align 4, !dbg !2508
  store i32 %54, i32* %retval, align 4, !dbg !2509
  br label %return, !dbg !2509

if.end69:                                         ; preds = %if.then60
  br label %if.end70, !dbg !2510

if.end70:                                         ; preds = %if.end69, %if.end58
  %arraydecay71 = getelementptr inbounds [1537 x i8], [1537 x i8]* %tosend, i32 0, i32 0, !dbg !2511
  %add.ptr72 = getelementptr inbounds i8, i8* %arraydecay71, i64 1, !dbg !2512
  %55 = load i32, i32* %client_pos, align 4, !dbg !2513
  %idx.ext = sext i32 %55 to i64, !dbg !2514
  %add.ptr73 = getelementptr inbounds i8, i8* %add.ptr72, i64 %idx.ext, !dbg !2514
  %arraydecay74 = getelementptr inbounds [32 x i8], [32 x i8]* %digest, i32 0, i32 0, !dbg !2515
  %call75 = call i32 @ff_rtmp_calc_digest(i8* %add.ptr73, i32 32, i32 0, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @rtmp_server_key, i32 0, i32 0), i32 68, i8* %arraydecay74), !dbg !2516
  store i32 %call75, i32* %ret, align 4, !dbg !2517
  %56 = load i32, i32* %ret, align 4, !dbg !2518
  %cmp76 = icmp slt i32 %56, 0, !dbg !2520
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !2521

if.then78:                                        ; preds = %if.end70
  %57 = load i32, i32* %ret, align 4, !dbg !2522
  store i32 %57, i32* %retval, align 4, !dbg !2523
  br label %return, !dbg !2523

if.end79:                                         ; preds = %if.end70
  %arraydecay80 = getelementptr inbounds [1536 x i8], [1536 x i8]* %clientdata, i32 0, i32 0, !dbg !2524
  %arraydecay81 = getelementptr inbounds [32 x i8], [32 x i8]* %digest, i32 0, i32 0, !dbg !2525
  %arraydecay82 = getelementptr inbounds [32 x i8], [32 x i8]* %signature, i32 0, i32 0, !dbg !2526
  %call83 = call i32 @ff_rtmp_calc_digest(i8* %arraydecay80, i32 1504, i32 0, i8* %arraydecay81, i32 32, i8* %arraydecay82), !dbg !2527
  store i32 %call83, i32* %ret, align 4, !dbg !2528
  %58 = load i32, i32* %ret, align 4, !dbg !2529
  %cmp84 = icmp slt i32 %58, 0, !dbg !2531
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !2532

if.then86:                                        ; preds = %if.end79
  %59 = load i32, i32* %ret, align 4, !dbg !2533
  store i32 %59, i32* %retval, align 4, !dbg !2534
  br label %return, !dbg !2534

if.end87:                                         ; preds = %if.end79
  %arraydecay88 = getelementptr inbounds [32 x i8], [32 x i8]* %signature, i32 0, i32 0, !dbg !2535
  %arraydecay89 = getelementptr inbounds [1536 x i8], [1536 x i8]* %clientdata, i32 0, i32 0, !dbg !2537
  %add.ptr90 = getelementptr inbounds i8, i8* %arraydecay89, i64 1536, !dbg !2538
  %add.ptr91 = getelementptr inbounds i8, i8* %add.ptr90, i64 -32, !dbg !2539
  %call92 = call i32 @memcmp(i8* %arraydecay88, i8* %add.ptr91, i64 32) #9, !dbg !2540
  %tobool93 = icmp ne i32 %call92, 0, !dbg !2540
  br i1 %tobool93, label %if.then94, label %if.end95, !dbg !2541

if.then94:                                        ; preds = %if.end87
  %60 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2542
  %61 = bitcast %struct.URLContext* %60 to i8*, !dbg !2542
  call void (i8*, i32, i8*, ...) @av_log(i8* %61, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i32 0, i32 0)), !dbg !2544
  store i32 -5, i32* %retval, align 4, !dbg !2545
  br label %return, !dbg !2545

if.end95:                                         ; preds = %if.end87
  store i32 0, i32* %i, align 4, !dbg !2546
  br label %for.cond96, !dbg !2548

for.cond96:                                       ; preds = %for.inc105, %if.end95
  %62 = load i32, i32* %i, align 4, !dbg !2549
  %cmp97 = icmp slt i32 %62, 1536, !dbg !2552
  br i1 %cmp97, label %for.body99, label %for.end107, !dbg !2553

for.body99:                                       ; preds = %for.cond96
  %call100 = call i32 @av_lfg_get(%struct.AVLFG* %rnd), !dbg !2554
  %shr101 = lshr i32 %call100, 24, !dbg !2555
  %conv102 = trunc i32 %shr101 to i8, !dbg !2554
  %63 = load i32, i32* %i, align 4, !dbg !2556
  %idxprom103 = sext i32 %63 to i64, !dbg !2557
  %arrayidx104 = getelementptr inbounds [1537 x i8], [1537 x i8]* %tosend, i64 0, i64 %idxprom103, !dbg !2557
  store i8 %conv102, i8* %arrayidx104, align 1, !dbg !2558
  br label %for.inc105, !dbg !2557

for.inc105:                                       ; preds = %for.body99
  %64 = load i32, i32* %i, align 4, !dbg !2559
  %inc106 = add nsw i32 %64, 1, !dbg !2559
  store i32 %inc106, i32* %i, align 4, !dbg !2559
  br label %for.cond96, !dbg !2561, !llvm.loop !2562

for.end107:                                       ; preds = %for.cond96
  %arraydecay108 = getelementptr inbounds [1537 x i8], [1537 x i8]* %serverdata, i32 0, i32 0, !dbg !2564
  %add.ptr109 = getelementptr inbounds i8, i8* %arraydecay108, i64 1, !dbg !2565
  %65 = load i32, i32* %server_pos, align 4, !dbg !2566
  %idx.ext110 = sext i32 %65 to i64, !dbg !2567
  %add.ptr111 = getelementptr inbounds i8, i8* %add.ptr109, i64 %idx.ext110, !dbg !2567
  %arraydecay112 = getelementptr inbounds [32 x i8], [32 x i8]* %digest, i32 0, i32 0, !dbg !2568
  %call113 = call i32 @ff_rtmp_calc_digest(i8* %add.ptr111, i32 32, i32 0, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @rtmp_player_key, i32 0, i32 0), i32 62, i8* %arraydecay112), !dbg !2569
  store i32 %call113, i32* %ret, align 4, !dbg !2570
  %66 = load i32, i32* %ret, align 4, !dbg !2571
  %cmp114 = icmp slt i32 %66, 0, !dbg !2573
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !2574

if.then116:                                       ; preds = %for.end107
  %67 = load i32, i32* %ret, align 4, !dbg !2575
  store i32 %67, i32* %retval, align 4, !dbg !2576
  br label %return, !dbg !2576

if.end117:                                        ; preds = %for.end107
  %arraydecay118 = getelementptr inbounds [1537 x i8], [1537 x i8]* %tosend, i32 0, i32 0, !dbg !2577
  %arraydecay119 = getelementptr inbounds [32 x i8], [32 x i8]* %digest, i32 0, i32 0, !dbg !2578
  %arraydecay120 = getelementptr inbounds [1537 x i8], [1537 x i8]* %tosend, i32 0, i32 0, !dbg !2579
  %add.ptr121 = getelementptr inbounds i8, i8* %arraydecay120, i64 1536, !dbg !2580
  %add.ptr122 = getelementptr inbounds i8, i8* %add.ptr121, i64 -32, !dbg !2581
  %call123 = call i32 @ff_rtmp_calc_digest(i8* %arraydecay118, i32 1504, i32 0, i8* %arraydecay119, i32 32, i8* %add.ptr122), !dbg !2582
  store i32 %call123, i32* %ret, align 4, !dbg !2583
  %68 = load i32, i32* %ret, align 4, !dbg !2584
  %cmp124 = icmp slt i32 %68, 0, !dbg !2586
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !2587

if.then126:                                       ; preds = %if.end117
  %69 = load i32, i32* %ret, align 4, !dbg !2588
  store i32 %69, i32* %retval, align 4, !dbg !2589
  br label %return, !dbg !2589

if.end127:                                        ; preds = %if.end117
  %70 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2590
  %stream128 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %70, i32 0, i32 1, !dbg !2592
  %71 = load %struct.URLContext*, %struct.URLContext** %stream128, align 8, !dbg !2592
  %arraydecay129 = getelementptr inbounds [1537 x i8], [1537 x i8]* %tosend, i32 0, i32 0, !dbg !2593
  %call130 = call i32 @ffurl_write(%struct.URLContext* %71, i8* %arraydecay129, i32 1536), !dbg !2594
  store i32 %call130, i32* %ret, align 4, !dbg !2595
  %cmp131 = icmp slt i32 %call130, 0, !dbg !2596
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !2597

if.then133:                                       ; preds = %if.end127
  %72 = load i32, i32* %ret, align 4, !dbg !2598
  store i32 %72, i32* %retval, align 4, !dbg !2599
  br label %return, !dbg !2599

if.end134:                                        ; preds = %if.end127
  br label %if.end143, !dbg !2600

if.else:                                          ; preds = %land.lhs.true, %if.end23
  %73 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2601
  %stream135 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %73, i32 0, i32 1, !dbg !2604
  %74 = load %struct.URLContext*, %struct.URLContext** %stream135, align 8, !dbg !2604
  %arraydecay136 = getelementptr inbounds [1537 x i8], [1537 x i8]* %serverdata, i32 0, i32 0, !dbg !2605
  %add.ptr137 = getelementptr inbounds i8, i8* %arraydecay136, i64 1, !dbg !2606
  %call138 = call i32 @ffurl_write(%struct.URLContext* %74, i8* %add.ptr137, i32 1536), !dbg !2607
  store i32 %call138, i32* %ret, align 4, !dbg !2608
  %cmp139 = icmp slt i32 %call138, 0, !dbg !2609
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !2610

if.then141:                                       ; preds = %if.else
  %75 = load i32, i32* %ret, align 4, !dbg !2611
  store i32 %75, i32* %retval, align 4, !dbg !2612
  br label %return, !dbg !2612

if.end142:                                        ; preds = %if.else
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.end134
  store i32 0, i32* %retval, align 4, !dbg !2613
  br label %return, !dbg !2613

return:                                           ; preds = %if.end143, %if.then141, %if.then133, %if.then126, %if.then116, %if.then94, %if.then86, %if.then78, %if.then68, %if.then56, %if.then53, %if.then44, %if.then22, %if.then15, %if.then8, %if.then
  %76 = load i32, i32* %retval, align 4, !dbg !2614
  ret i32 %76, !dbg !2614
}

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_server_handshake(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !2615 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2616, metadata !376), !dbg !2621
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %buffer = alloca [1536 x i8], align 16
  %hs_epoch = alloca i32, align 4
  %hs_my_epoch = alloca i32, align 4
  %hs_c1 = alloca [1536 x i8], align 16
  %hs_s1 = alloca [1536 x i8], align 16
  %zeroes = alloca i32, align 4
  %temp = alloca i32, align 4
  %randomidx = alloca i32, align 4
  %inoutsize = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !2626, metadata !376), !dbg !2627
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !2628, metadata !376), !dbg !2629
  call void @llvm.dbg.declare(metadata [1536 x i8]* %buffer, metadata !2630, metadata !376), !dbg !2631
  call void @llvm.dbg.declare(metadata i32* %hs_epoch, metadata !2632, metadata !376), !dbg !2633
  call void @llvm.dbg.declare(metadata i32* %hs_my_epoch, metadata !2634, metadata !376), !dbg !2635
  call void @llvm.dbg.declare(metadata [1536 x i8]* %hs_c1, metadata !2636, metadata !376), !dbg !2637
  call void @llvm.dbg.declare(metadata [1536 x i8]* %hs_s1, metadata !2638, metadata !376), !dbg !2639
  call void @llvm.dbg.declare(metadata i32* %zeroes, metadata !2640, metadata !376), !dbg !2641
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !2642, metadata !376), !dbg !2643
  store i32 0, i32* %temp, align 4, !dbg !2643
  call void @llvm.dbg.declare(metadata i32* %randomidx, metadata !2644, metadata !376), !dbg !2645
  store i32 0, i32* %randomidx, align 4, !dbg !2645
  call void @llvm.dbg.declare(metadata i32* %inoutsize, metadata !2646, metadata !376), !dbg !2647
  store i32 0, i32* %inoutsize, align 4, !dbg !2647
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2648, metadata !376), !dbg !2649
  %0 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2650
  %stream = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %0, i32 0, i32 1, !dbg !2651
  %1 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !2651
  %arraydecay = getelementptr inbounds [1536 x i8], [1536 x i8]* %buffer, i32 0, i32 0, !dbg !2652
  %call = call i32 @ffurl_read_complete(%struct.URLContext* %1, i8* %arraydecay, i32 1), !dbg !2653
  store i32 %call, i32* %inoutsize, align 4, !dbg !2654
  %2 = load i32, i32* %inoutsize, align 4, !dbg !2655
  %cmp = icmp sle i32 %2, 0, !dbg !2657
  br i1 %cmp, label %if.then, label %if.end, !dbg !2658

if.then:                                          ; preds = %entry
  %3 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2659
  %4 = bitcast %struct.URLContext* %3 to i8*, !dbg !2659
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.44, i32 0, i32 0)), !dbg !2661
  store i32 -5, i32* %retval, align 4, !dbg !2662
  br label %return, !dbg !2662

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds [1536 x i8], [1536 x i8]* %buffer, i64 0, i64 0, !dbg !2663
  %5 = load i8, i8* %arrayidx, align 16, !dbg !2663
  %conv = zext i8 %5 to i32, !dbg !2663
  %cmp1 = icmp ne i32 %conv, 3, !dbg !2665
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !2666

if.then3:                                         ; preds = %if.end
  %6 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2667
  %7 = bitcast %struct.URLContext* %6 to i8*, !dbg !2667
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.45, i32 0, i32 0)), !dbg !2669
  store i32 -5, i32* %retval, align 4, !dbg !2670
  br label %return, !dbg !2670

if.end4:                                          ; preds = %if.end
  %8 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2671
  %stream5 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %8, i32 0, i32 1, !dbg !2673
  %9 = load %struct.URLContext*, %struct.URLContext** %stream5, align 8, !dbg !2673
  %arraydecay6 = getelementptr inbounds [1536 x i8], [1536 x i8]* %buffer, i32 0, i32 0, !dbg !2674
  %call7 = call i32 @ffurl_write(%struct.URLContext* %9, i8* %arraydecay6, i32 1), !dbg !2675
  %cmp8 = icmp sle i32 %call7, 0, !dbg !2676
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !2677

if.then10:                                        ; preds = %if.end4
  %10 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2678
  %11 = bitcast %struct.URLContext* %10 to i8*, !dbg !2678
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.46, i32 0, i32 0)), !dbg !2680
  store i32 -5, i32* %retval, align 4, !dbg !2681
  br label %return, !dbg !2681

if.end11:                                         ; preds = %if.end4
  %12 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2682
  %arraydecay12 = getelementptr inbounds [1536 x i8], [1536 x i8]* %hs_c1, i32 0, i32 0, !dbg !2683
  %call13 = call i32 @rtmp_receive_hs_packet(%struct.RTMPContext* %12, i32* %hs_epoch, i32* %zeroes, i8* %arraydecay12, i32 1536), !dbg !2684
  store i32 %call13, i32* %ret, align 4, !dbg !2685
  %13 = load i32, i32* %ret, align 4, !dbg !2686
  %tobool = icmp ne i32 %13, 0, !dbg !2686
  br i1 %tobool, label %if.then14, label %if.end15, !dbg !2688

if.then14:                                        ; preds = %if.end11
  %14 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2689
  %15 = bitcast %struct.URLContext* %14 to i8*, !dbg !2689
  call void (i8*, i32, i8*, ...) @av_log(i8* %15, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47, i32 0, i32 0)), !dbg !2691
  %16 = load i32, i32* %ret, align 4, !dbg !2692
  store i32 %16, i32* %retval, align 4, !dbg !2693
  br label %return, !dbg !2693

if.end15:                                         ; preds = %if.end11
  %17 = load i32, i32* %hs_epoch, align 4, !dbg !2694
  store i32 %17, i32* %hs_my_epoch, align 4, !dbg !2695
  store i32 8, i32* %randomidx, align 4, !dbg !2696
  br label %for.cond, !dbg !2697

for.cond:                                         ; preds = %for.inc, %if.end15
  %18 = load i32, i32* %randomidx, align 4, !dbg !2698
  %cmp16 = icmp slt i32 %18, 1536, !dbg !2699
  br i1 %cmp16, label %for.body, label %for.end, !dbg !2700

for.body:                                         ; preds = %for.cond
  %call18 = call i32 @av_get_random_seed(), !dbg !2701
  store i32 %call18, i32* %x.addr.i, align 4, !dbg !2702
  %19 = load i32, i32* %x.addr.i, align 4, !dbg !2703
  %shl.i = shl i32 %19, 8, !dbg !2704
  %and.i = and i32 %shl.i, 65280, !dbg !2705
  %20 = load i32, i32* %x.addr.i, align 4, !dbg !2706
  %shr.i = lshr i32 %20, 8, !dbg !2707
  %and1.i = and i32 %shr.i, 255, !dbg !2708
  %or.i = or i32 %and.i, %and1.i, !dbg !2709
  %shl2.i = shl i32 %or.i, 16, !dbg !2710
  %21 = load i32, i32* %x.addr.i, align 4, !dbg !2711
  %shr3.i = lshr i32 %21, 16, !dbg !2712
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2713
  %and5.i = and i32 %shl4.i, 65280, !dbg !2714
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !2715
  %shr6.i = lshr i32 %22, 16, !dbg !2716
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2717
  %and8.i = and i32 %shr7.i, 255, !dbg !2718
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2719
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2720
  %arraydecay20 = getelementptr inbounds [1536 x i8], [1536 x i8]* %hs_s1, i32 0, i32 0, !dbg !2721
  %23 = load i32, i32* %randomidx, align 4, !dbg !2722
  %idx.ext = sext i32 %23 to i64, !dbg !2723
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay20, i64 %idx.ext, !dbg !2723
  %24 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !2724
  %l = bitcast %union.unaligned_32* %24 to i32*, !dbg !2724
  store i32 %or10.i, i32* %l, align 1, !dbg !2725
  br label %for.inc, !dbg !2726

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %randomidx, align 4, !dbg !2727
  %add = add nsw i32 %25, 4, !dbg !2727
  store i32 %add, i32* %randomidx, align 4, !dbg !2727
  br label %for.cond, !dbg !2728, !llvm.loop !2730

for.end:                                          ; preds = %for.cond
  %26 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2732
  %27 = load i32, i32* %hs_my_epoch, align 4, !dbg !2733
  %arraydecay21 = getelementptr inbounds [1536 x i8], [1536 x i8]* %hs_s1, i32 0, i32 0, !dbg !2734
  %call22 = call i32 @rtmp_send_hs_packet(%struct.RTMPContext* %26, i32 %27, i32 0, i8* %arraydecay21, i32 1536), !dbg !2735
  store i32 %call22, i32* %ret, align 4, !dbg !2736
  %28 = load i32, i32* %ret, align 4, !dbg !2737
  %tobool23 = icmp ne i32 %28, 0, !dbg !2737
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !2739

if.then24:                                        ; preds = %for.end
  %29 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2740
  %30 = bitcast %struct.URLContext* %29 to i8*, !dbg !2740
  call void (i8*, i32, i8*, ...) @av_log(i8* %30, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.48, i32 0, i32 0)), !dbg !2742
  %31 = load i32, i32* %ret, align 4, !dbg !2743
  store i32 %31, i32* %retval, align 4, !dbg !2744
  br label %return, !dbg !2744

if.end25:                                         ; preds = %for.end
  %32 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2745
  %33 = load i32, i32* %hs_epoch, align 4, !dbg !2746
  %arraydecay26 = getelementptr inbounds [1536 x i8], [1536 x i8]* %hs_c1, i32 0, i32 0, !dbg !2747
  %call27 = call i32 @rtmp_send_hs_packet(%struct.RTMPContext* %32, i32 %33, i32 0, i8* %arraydecay26, i32 1536), !dbg !2748
  store i32 %call27, i32* %ret, align 4, !dbg !2749
  %34 = load i32, i32* %ret, align 4, !dbg !2750
  %tobool28 = icmp ne i32 %34, 0, !dbg !2750
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !2752

if.then29:                                        ; preds = %if.end25
  %35 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2753
  %36 = bitcast %struct.URLContext* %35 to i8*, !dbg !2753
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.49, i32 0, i32 0)), !dbg !2755
  %37 = load i32, i32* %ret, align 4, !dbg !2756
  store i32 %37, i32* %retval, align 4, !dbg !2757
  br label %return, !dbg !2757

if.end30:                                         ; preds = %if.end25
  %38 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2758
  %arraydecay31 = getelementptr inbounds [1536 x i8], [1536 x i8]* %buffer, i32 0, i32 0, !dbg !2759
  %call32 = call i32 @rtmp_receive_hs_packet(%struct.RTMPContext* %38, i32* %temp, i32* %zeroes, i8* %arraydecay31, i32 1536), !dbg !2760
  store i32 %call32, i32* %ret, align 4, !dbg !2761
  %39 = load i32, i32* %ret, align 4, !dbg !2762
  %tobool33 = icmp ne i32 %39, 0, !dbg !2762
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !2764

if.then34:                                        ; preds = %if.end30
  %40 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2765
  %41 = bitcast %struct.URLContext* %40 to i8*, !dbg !2765
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.50, i32 0, i32 0)), !dbg !2767
  %42 = load i32, i32* %ret, align 4, !dbg !2768
  store i32 %42, i32* %retval, align 4, !dbg !2769
  br label %return, !dbg !2769

if.end35:                                         ; preds = %if.end30
  %43 = load i32, i32* %temp, align 4, !dbg !2770
  %44 = load i32, i32* %hs_my_epoch, align 4, !dbg !2772
  %cmp36 = icmp ne i32 %43, %44, !dbg !2773
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !2774

if.then38:                                        ; preds = %if.end35
  %45 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2775
  %46 = bitcast %struct.URLContext* %45 to i8*, !dbg !2775
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 24, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.51, i32 0, i32 0)), !dbg !2776
  br label %if.end39, !dbg !2776

if.end39:                                         ; preds = %if.then38, %if.end35
  %arraydecay40 = getelementptr inbounds [1536 x i8], [1536 x i8]* %buffer, i32 0, i32 0, !dbg !2777
  %add.ptr41 = getelementptr inbounds i8, i8* %arraydecay40, i64 8, !dbg !2779
  %arraydecay42 = getelementptr inbounds [1536 x i8], [1536 x i8]* %hs_s1, i32 0, i32 0, !dbg !2780
  %add.ptr43 = getelementptr inbounds i8, i8* %arraydecay42, i64 8, !dbg !2781
  %call44 = call i32 @memcmp(i8* %add.ptr41, i8* %add.ptr43, i64 1528) #9, !dbg !2782
  %tobool45 = icmp ne i32 %call44, 0, !dbg !2782
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !2783

if.then46:                                        ; preds = %if.end39
  %47 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2784
  %48 = bitcast %struct.URLContext* %47 to i8*, !dbg !2784
  call void (i8*, i32, i8*, ...) @av_log(i8* %48, i32 24, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.52, i32 0, i32 0)), !dbg !2785
  br label %if.end47, !dbg !2785

if.end47:                                         ; preds = %if.then46, %if.end39
  store i32 0, i32* %retval, align 4, !dbg !2786
  br label %return, !dbg !2786

return:                                           ; preds = %if.end47, %if.then34, %if.then29, %if.then24, %if.then14, %if.then10, %if.then3, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !2787
  ret i32 %49, !dbg !2787
}

declare noalias i8* @av_malloc(i64) #2

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #3

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #3

declare void @av_free(i8*) #2

declare i64 @av_strlcat(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #5

; Function Attrs: nounwind uwtable
define internal i32 @gen_connect(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !2788 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  %param = alloca i8*, align 8
  %sep = alloca i8*, align 8
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !2789, metadata !376), !dbg !2790
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !2791, metadata !376), !dbg !2792
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !2793, metadata !376), !dbg !2794
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2795, metadata !376), !dbg !2796
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2797, metadata !376), !dbg !2798
  %call = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 3, i32 20, i32 0, i32 5120), !dbg !2799
  store i32 %call, i32* %ret, align 4, !dbg !2801
  %cmp = icmp slt i32 %call, 0, !dbg !2802
  br i1 %cmp, label %if.then, label %if.end, !dbg !2803

if.then:                                          ; preds = %entry
  %0 = load i32, i32* %ret, align 4, !dbg !2804
  store i32 %0, i32* %retval, align 4, !dbg !2805
  br label %return, !dbg !2805

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !2806
  %1 = load i8*, i8** %data, align 8, !dbg !2806
  store i8* %1, i8** %p, align 8, !dbg !2807
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0)), !dbg !2808
  %2 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2809
  %nb_invokes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %2, i32 0, i32 28, !dbg !2810
  %3 = load i32, i32* %nb_invokes, align 4, !dbg !2811
  %inc = add nsw i32 %3, 1, !dbg !2811
  store i32 %inc, i32* %nb_invokes, align 4, !dbg !2811
  %conv = sitofp i32 %inc to double, !dbg !2811
  call void @ff_amf_write_number(i8** %p, double %conv), !dbg !2812
  call void @ff_amf_write_object_start(i8** %p), !dbg !2813
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0)), !dbg !2814
  %4 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2815
  %app = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %4, i32 0, i32 9, !dbg !2816
  %5 = load i8*, i8** %app, align 8, !dbg !2816
  %6 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2817
  %auth_params = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %6, i32 0, i32 52, !dbg !2818
  %arraydecay = getelementptr inbounds [500 x i8], [500 x i8]* %auth_params, i32 0, i32 0, !dbg !2817
  call void @ff_amf_write_string2(i8** %p, i8* %5, i8* %arraydecay), !dbg !2819
  %7 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2820
  %is_input = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %7, i32 0, i32 6, !dbg !2822
  %8 = load i32, i32* %is_input, align 8, !dbg !2822
  %tobool = icmp ne i32 %8, 0, !dbg !2820
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !2823

if.then1:                                         ; preds = %if.end
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0)), !dbg !2824
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i32 0, i32 0)), !dbg !2826
  br label %if.end2, !dbg !2827

if.end2:                                          ; preds = %if.then1, %if.end
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i32 0, i32 0)), !dbg !2828
  %9 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2829
  %flashver = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %9, i32 0, i32 30, !dbg !2830
  %10 = load i8*, i8** %flashver, align 8, !dbg !2830
  call void @ff_amf_write_string(i8** %p, i8* %10), !dbg !2831
  %11 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2832
  %swfurl = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %11, i32 0, i32 34, !dbg !2834
  %12 = load i8*, i8** %swfurl, align 8, !dbg !2834
  %tobool3 = icmp ne i8* %12, null, !dbg !2832
  br i1 %tobool3, label %if.then5, label %lor.lhs.false, !dbg !2835

lor.lhs.false:                                    ; preds = %if.end2
  %13 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2836
  %swfverify = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %13, i32 0, i32 35, !dbg !2838
  %14 = load i8*, i8** %swfverify, align 8, !dbg !2838
  %tobool4 = icmp ne i8* %14, null, !dbg !2836
  br i1 %tobool4, label %if.then5, label %if.end12, !dbg !2839

if.then5:                                         ; preds = %lor.lhs.false, %if.end2
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i32 0, i32 0)), !dbg !2840
  %15 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2842
  %swfurl6 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %15, i32 0, i32 34, !dbg !2844
  %16 = load i8*, i8** %swfurl6, align 8, !dbg !2844
  %tobool7 = icmp ne i8* %16, null, !dbg !2842
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !2845

if.then8:                                         ; preds = %if.then5
  %17 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2846
  %swfurl9 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %17, i32 0, i32 34, !dbg !2847
  %18 = load i8*, i8** %swfurl9, align 8, !dbg !2847
  call void @ff_amf_write_string(i8** %p, i8* %18), !dbg !2848
  br label %if.end11, !dbg !2848

if.else:                                          ; preds = %if.then5
  %19 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2849
  %swfverify10 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %19, i32 0, i32 35, !dbg !2850
  %20 = load i8*, i8** %swfverify10, align 8, !dbg !2850
  call void @ff_amf_write_string(i8** %p, i8* %20), !dbg !2851
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then8
  br label %if.end12, !dbg !2852

if.end12:                                         ; preds = %if.end11, %lor.lhs.false
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i32 0, i32 0)), !dbg !2853
  %21 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2854
  %tcurl = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %21, i32 0, i32 29, !dbg !2855
  %22 = load i8*, i8** %tcurl, align 8, !dbg !2855
  %23 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2856
  %auth_params13 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %23, i32 0, i32 52, !dbg !2857
  %arraydecay14 = getelementptr inbounds [500 x i8], [500 x i8]* %auth_params13, i32 0, i32 0, !dbg !2856
  call void @ff_amf_write_string2(i8** %p, i8* %22, i8* %arraydecay14), !dbg !2858
  %24 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2859
  %is_input15 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %24, i32 0, i32 6, !dbg !2861
  %25 = load i32, i32* %is_input15, align 8, !dbg !2861
  %tobool16 = icmp ne i32 %25, 0, !dbg !2859
  br i1 %tobool16, label %if.then17, label %if.end22, !dbg !2862

if.then17:                                        ; preds = %if.end12
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i32 0, i32 0)), !dbg !2863
  call void @ff_amf_write_bool(i8** %p, i32 0), !dbg !2865
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i32 0, i32 0)), !dbg !2866
  call void @ff_amf_write_number(i8** %p, double 1.500000e+01), !dbg !2867
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i32 0, i32 0)), !dbg !2868
  call void @ff_amf_write_number(i8** %p, double 4.071000e+03), !dbg !2869
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.65, i32 0, i32 0)), !dbg !2870
  call void @ff_amf_write_number(i8** %p, double 2.520000e+02), !dbg !2871
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.66, i32 0, i32 0)), !dbg !2872
  call void @ff_amf_write_number(i8** %p, double 1.000000e+00), !dbg !2873
  %26 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2874
  %pageurl = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %26, i32 0, i32 37, !dbg !2876
  %27 = load i8*, i8** %pageurl, align 8, !dbg !2876
  %tobool18 = icmp ne i8* %27, null, !dbg !2874
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !2877

if.then19:                                        ; preds = %if.then17
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0)), !dbg !2878
  %28 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2880
  %pageurl20 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %28, i32 0, i32 37, !dbg !2881
  %29 = load i8*, i8** %pageurl20, align 8, !dbg !2881
  call void @ff_amf_write_string(i8** %p, i8* %29), !dbg !2882
  br label %if.end21, !dbg !2883

if.end21:                                         ; preds = %if.then19, %if.then17
  br label %if.end22, !dbg !2884

if.end22:                                         ; preds = %if.end21, %if.end12
  call void @ff_amf_write_object_end(i8** %p), !dbg !2885
  %30 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2886
  %conn = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %30, i32 0, i32 10, !dbg !2888
  %31 = load i8*, i8** %conn, align 8, !dbg !2888
  %tobool23 = icmp ne i8* %31, null, !dbg !2886
  br i1 %tobool23, label %if.then24, label %if.end45, !dbg !2889

if.then24:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i8** %param, metadata !2890, metadata !376), !dbg !2892
  %32 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2893
  %conn25 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %32, i32 0, i32 10, !dbg !2894
  %33 = load i8*, i8** %conn25, align 8, !dbg !2894
  store i8* %33, i8** %param, align 8, !dbg !2892
  br label %while.cond, !dbg !2895

while.cond:                                       ; preds = %if.end44, %if.then24
  %34 = load i8*, i8** %param, align 8, !dbg !2896
  %tobool26 = icmp ne i8* %34, null, !dbg !2898
  br i1 %tobool26, label %while.body, label %while.end, !dbg !2898

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %sep, metadata !2899, metadata !376), !dbg !2901
  %35 = load i8*, i8** %param, align 8, !dbg !2902
  %call27 = call i64 @strspn(i8* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.68, i32 0, i32 0)) #9, !dbg !2903
  %36 = load i8*, i8** %param, align 8, !dbg !2904
  %add.ptr = getelementptr inbounds i8, i8* %36, i64 %call27, !dbg !2904
  store i8* %add.ptr, i8** %param, align 8, !dbg !2904
  %37 = load i8*, i8** %param, align 8, !dbg !2905
  %38 = load i8, i8* %37, align 1, !dbg !2907
  %tobool28 = icmp ne i8 %38, 0, !dbg !2907
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !2908

if.then29:                                        ; preds = %while.body
  br label %while.end, !dbg !2909

if.end30:                                         ; preds = %while.body
  %39 = load i8*, i8** %param, align 8, !dbg !2910
  %call31 = call i8* @strchr(i8* %39, i32 32) #9, !dbg !2911
  store i8* %call31, i8** %sep, align 8, !dbg !2912
  %40 = load i8*, i8** %sep, align 8, !dbg !2913
  %tobool32 = icmp ne i8* %40, null, !dbg !2913
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !2915

if.then33:                                        ; preds = %if.end30
  %41 = load i8*, i8** %sep, align 8, !dbg !2916
  store i8 0, i8* %41, align 1, !dbg !2917
  br label %if.end34, !dbg !2918

if.end34:                                         ; preds = %if.then33, %if.end30
  %42 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !2919
  %43 = load i8*, i8** %param, align 8, !dbg !2921
  %call35 = call i32 @rtmp_write_amf_data(%struct.URLContext* %42, i8* %43, i8** %p), !dbg !2922
  store i32 %call35, i32* %ret, align 4, !dbg !2923
  %cmp36 = icmp slt i32 %call35, 0, !dbg !2924
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !2925

if.then38:                                        ; preds = %if.end34
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !2926
  %44 = load i32, i32* %ret, align 4, !dbg !2928
  store i32 %44, i32* %retval, align 4, !dbg !2929
  br label %return, !dbg !2929

if.end39:                                         ; preds = %if.end34
  %45 = load i8*, i8** %sep, align 8, !dbg !2930
  %tobool40 = icmp ne i8* %45, null, !dbg !2930
  br i1 %tobool40, label %if.then41, label %if.else43, !dbg !2932

if.then41:                                        ; preds = %if.end39
  %46 = load i8*, i8** %sep, align 8, !dbg !2933
  %add.ptr42 = getelementptr inbounds i8, i8* %46, i64 1, !dbg !2934
  store i8* %add.ptr42, i8** %param, align 8, !dbg !2935
  br label %if.end44, !dbg !2936

if.else43:                                        ; preds = %if.end39
  br label %while.end, !dbg !2937

if.end44:                                         ; preds = %if.then41
  br label %while.cond, !dbg !2938, !llvm.loop !2940

while.end:                                        ; preds = %if.else43, %if.then29, %while.cond
  br label %if.end45, !dbg !2941

if.end45:                                         ; preds = %while.end, %if.end22
  %47 = load i8*, i8** %p, align 8, !dbg !2942
  %data46 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !2943
  %48 = load i8*, i8** %data46, align 8, !dbg !2943
  %sub.ptr.lhs.cast = ptrtoint i8* %47 to i64, !dbg !2944
  %sub.ptr.rhs.cast = ptrtoint i8* %48 to i64, !dbg !2944
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2944
  %conv47 = trunc i64 %sub.ptr.sub to i32, !dbg !2942
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 6, !dbg !2945
  store i32 %conv47, i32* %size, align 8, !dbg !2946
  %49 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !2947
  %call48 = call i32 @rtmp_send_packet(%struct.RTMPContext* %49, %struct.RTMPPacket* %pkt, i32 1), !dbg !2948
  store i32 %call48, i32* %retval, align 4, !dbg !2949
  br label %return, !dbg !2949

return:                                           ; preds = %if.end45, %if.then38, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !2950
  ret i32 %50, !dbg !2950
}

; Function Attrs: nounwind uwtable
define internal i32 @read_connect(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !2951 {
entry:
  %x.addr.i.i244 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i244, metadata !2616, metadata !376), !dbg !2952
  %b.addr.i245 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i245, metadata !2960, metadata !376), !dbg !2961
  %value.addr.i246 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i246, metadata !2962, metadata !376), !dbg !2963
  %b.addr.i240 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i240, metadata !2964, metadata !376), !dbg !2966
  %value.addr.i241 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i241, metadata !2968, metadata !376), !dbg !2969
  %x.addr.i.i231 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i.i231, metadata !2970, metadata !376), !dbg !2974
  %b.addr.i232 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i232, metadata !2978, metadata !376), !dbg !2979
  %value.addr.i233 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i233, metadata !2980, metadata !376), !dbg !2981
  %x.addr.i.i212 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i212, metadata !2616, metadata !376), !dbg !2982
  %b.addr.i213 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i213, metadata !2960, metadata !376), !dbg !2985
  %value.addr.i214 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i214, metadata !2962, metadata !376), !dbg !2986
  %x.addr.i.i193 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i193, metadata !2616, metadata !376), !dbg !2987
  %b.addr.i194 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i194, metadata !2960, metadata !376), !dbg !2990
  %value.addr.i195 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i195, metadata !2962, metadata !376), !dbg !2991
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2616, metadata !376), !dbg !2992
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !2960, metadata !376), !dbg !2995
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !2962, metadata !376), !dbg !2996
  %g.addr.i189 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i189, metadata !2997, metadata !376), !dbg !3001
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !1440, metadata !376), !dbg !3003
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !1457, metadata !376), !dbg !3005
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !1459, metadata !376), !dbg !3006
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %ret = alloca i32, align 4
  %command = alloca [64 x i8], align 16
  %stringlen = alloca i32, align 4
  %seqnum = alloca double, align 8
  %tmpstr = alloca [256 x i8], align 16
  %gbc = alloca %struct.GetByteContext, align 8
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !3007, metadata !376), !dbg !3008
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !3009, metadata !376), !dbg !3010
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !3011, metadata !376), !dbg !3012
  %0 = bitcast %struct.RTMPPacket* %pkt to i8*, !dbg !3012
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 48, i32 8, i1 false), !dbg !3012
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3013, metadata !376), !dbg !3014
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !3015, metadata !376), !dbg !3016
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3017, metadata !376), !dbg !3018
  call void @llvm.dbg.declare(metadata [64 x i8]* %command, metadata !3019, metadata !376), !dbg !3021
  call void @llvm.dbg.declare(metadata i32* %stringlen, metadata !3022, metadata !376), !dbg !3023
  call void @llvm.dbg.declare(metadata double* %seqnum, metadata !3024, metadata !376), !dbg !3025
  call void @llvm.dbg.declare(metadata [256 x i8]* %tmpstr, metadata !3026, metadata !376), !dbg !3028
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gbc, metadata !3029, metadata !376), !dbg !3030
  br label %for.cond, !dbg !3031

for.cond:                                         ; preds = %if.end42, %entry
  %1 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3032
  %stream = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %1, i32 0, i32 1, !dbg !3037
  %2 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !3037
  %3 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3038
  %in_chunk_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %3, i32 0, i32 4, !dbg !3039
  %4 = load i32, i32* %in_chunk_size, align 8, !dbg !3039
  %5 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3040
  %prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %5, i32 0, i32 2, !dbg !3041
  %arrayidx = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt, i64 0, i64 0, !dbg !3040
  %6 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3042
  %nb_prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %6, i32 0, i32 3, !dbg !3043
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt, i64 0, i64 0, !dbg !3042
  %call = call i32 @ff_rtmp_packet_read(%struct.URLContext* %2, %struct.RTMPPacket* %pkt, i32 %4, %struct.RTMPPacket** %arrayidx, i32* %arrayidx1), !dbg !3044
  store i32 %call, i32* %ret, align 4, !dbg !3045
  %cmp = icmp slt i32 %call, 0, !dbg !3046
  br i1 %cmp, label %if.then, label %if.end, !dbg !3047

if.then:                                          ; preds = %for.cond
  %7 = load i32, i32* %ret, align 4, !dbg !3048
  store i32 %7, i32* %retval, align 4, !dbg !3049
  br label %return, !dbg !3049

if.end:                                           ; preds = %for.cond
  %type = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 1, !dbg !3050
  %8 = load i32, i32* %type, align 4, !dbg !3050
  %cmp2 = icmp eq i32 %8, 1, !dbg !3052
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !3053

if.then3:                                         ; preds = %if.end
  %9 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3054
  %call4 = call i32 @handle_chunk_size(%struct.URLContext* %9, %struct.RTMPPacket* %pkt), !dbg !3057
  store i32 %call4, i32* %ret, align 4, !dbg !3058
  %cmp5 = icmp slt i32 %call4, 0, !dbg !3059
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !3060

if.then6:                                         ; preds = %if.then3
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !3061
  %10 = load i32, i32* %ret, align 4, !dbg !3063
  store i32 %10, i32* %retval, align 4, !dbg !3064
  br label %return, !dbg !3064

if.end7:                                          ; preds = %if.then3
  br label %if.end42, !dbg !3065

if.else:                                          ; preds = %if.end
  %type8 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 1, !dbg !3066
  %11 = load i32, i32* %type8, align 4, !dbg !3066
  %cmp9 = icmp eq i32 %11, 2, !dbg !3069
  br i1 %cmp9, label %if.then10, label %if.else11, !dbg !3070

if.then10:                                        ; preds = %if.else
  %12 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3071
  %13 = bitcast %struct.URLContext* %12 to i8*, !dbg !3071
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.73, i32 0, i32 0)), !dbg !3073
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !3074
  store i32 -1313558101, i32* %retval, align 4, !dbg !3075
  br label %return, !dbg !3075

if.else11:                                        ; preds = %if.else
  %type12 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 1, !dbg !3076
  %14 = load i32, i32* %type12, align 4, !dbg !3076
  %cmp13 = icmp eq i32 %14, 3, !dbg !3078
  br i1 %cmp13, label %if.then14, label %if.else15, !dbg !3079

if.then14:                                        ; preds = %if.else11
  %15 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3080
  %16 = bitcast %struct.URLContext* %15 to i8*, !dbg !3080
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 56, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.74, i32 0, i32 0)), !dbg !3082
  br label %if.end40, !dbg !3083

if.else15:                                        ; preds = %if.else11
  %type16 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 1, !dbg !3084
  %17 = load i32, i32* %type16, align 4, !dbg !3084
  %cmp17 = icmp eq i32 %17, 5, !dbg !3087
  br i1 %cmp17, label %if.then18, label %if.else23, !dbg !3088

if.then18:                                        ; preds = %if.else15
  %18 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3089
  %call19 = call i32 @handle_window_ack_size(%struct.URLContext* %18, %struct.RTMPPacket* %pkt), !dbg !3092
  store i32 %call19, i32* %ret, align 4, !dbg !3093
  %cmp20 = icmp slt i32 %call19, 0, !dbg !3094
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !3095

if.then21:                                        ; preds = %if.then18
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !3096
  %19 = load i32, i32* %ret, align 4, !dbg !3098
  store i32 %19, i32* %retval, align 4, !dbg !3099
  br label %return, !dbg !3099

if.end22:                                         ; preds = %if.then18
  br label %if.end39, !dbg !3100

if.else23:                                        ; preds = %if.else15
  %type24 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 1, !dbg !3101
  %20 = load i32, i32* %type24, align 4, !dbg !3101
  %cmp25 = icmp eq i32 %20, 6, !dbg !3104
  br i1 %cmp25, label %if.then26, label %if.else31, !dbg !3105

if.then26:                                        ; preds = %if.else23
  %21 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3106
  %call27 = call i32 @handle_set_peer_bw(%struct.URLContext* %21, %struct.RTMPPacket* %pkt), !dbg !3109
  store i32 %call27, i32* %ret, align 4, !dbg !3110
  %cmp28 = icmp slt i32 %call27, 0, !dbg !3111
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !3112

if.then29:                                        ; preds = %if.then26
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !3113
  %22 = load i32, i32* %ret, align 4, !dbg !3115
  store i32 %22, i32* %retval, align 4, !dbg !3116
  br label %return, !dbg !3116

if.end30:                                         ; preds = %if.then26
  br label %if.end38, !dbg !3117

if.else31:                                        ; preds = %if.else23
  %type32 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 1, !dbg !3118
  %23 = load i32, i32* %type32, align 4, !dbg !3118
  %cmp33 = icmp eq i32 %23, 20, !dbg !3121
  br i1 %cmp33, label %if.then34, label %if.else35, !dbg !3122

if.then34:                                        ; preds = %if.else31
  br label %for.end, !dbg !3123

if.else35:                                        ; preds = %if.else31
  %24 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3125
  %25 = bitcast %struct.URLContext* %24 to i8*, !dbg !3125
  %type36 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 1, !dbg !3127
  %26 = load i32, i32* %type36, align 4, !dbg !3127
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.75, i32 0, i32 0), i32 %26), !dbg !3128
  br label %if.end37

if.end37:                                         ; preds = %if.else35
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end30
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end22
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then14
  br label %if.end41

if.end41:                                         ; preds = %if.end40
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end7
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !3129
  br label %for.cond, !dbg !3130, !llvm.loop !3132

for.end:                                          ; preds = %if.then34
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !3133
  %27 = load i8*, i8** %data, align 8, !dbg !3133
  store i8* %27, i8** %cp, align 8, !dbg !3134
  %28 = load i8*, i8** %cp, align 8, !dbg !3135
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 6, !dbg !3136
  %29 = load i32, i32* %size, align 8, !dbg !3136
  store %struct.GetByteContext* %gbc, %struct.GetByteContext** %g.addr.i, align 8, !dbg !3137
  store i8* %28, i8** %buf.addr.i, align 8, !dbg !3137
  store i32 %29, i32* %buf_size.addr.i, align 4, !dbg !3137
  %30 = load i32, i32* %buf_size.addr.i, align 4, !dbg !3138
  %cmp.i = icmp sge i32 %30, 0, !dbg !3139
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !3140

if.then.i:                                        ; preds = %for.end
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.72, i32 0, i32 0), i32 137) #10, !dbg !3141
  call void @abort() #11, !dbg !3142
  unreachable, !dbg !3143

bytestream2_init.exit:                            ; preds = %for.end
  %31 = load i8*, i8** %buf.addr.i, align 8, !dbg !3144
  %32 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !3145
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %32, i32 0, i32 0, !dbg !3146
  store i8* %31, i8** %buffer.i, align 8, !dbg !3147
  %33 = load i8*, i8** %buf.addr.i, align 8, !dbg !3148
  %34 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !3149
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %34, i32 0, i32 2, !dbg !3150
  store i8* %33, i8** %buffer_start.i, align 8, !dbg !3151
  %35 = load i8*, i8** %buf.addr.i, align 8, !dbg !3152
  %36 = load i32, i32* %buf_size.addr.i, align 4, !dbg !3153
  %idx.ext.i = sext i32 %36 to i64, !dbg !3154
  %add.ptr.i = getelementptr inbounds i8, i8* %35, i64 %idx.ext.i, !dbg !3154
  %37 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !3155
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %37, i32 0, i32 1, !dbg !3156
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !3157
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %command, i32 0, i32 0, !dbg !3158
  %call43 = call i32 @ff_amf_read_string(%struct.GetByteContext* %gbc, i8* %arraydecay, i32 64, i32* %stringlen), !dbg !3160
  %tobool = icmp ne i32 %call43, 0, !dbg !3160
  br i1 %tobool, label %if.then44, label %if.end45, !dbg !3161

if.then44:                                        ; preds = %bytestream2_init.exit
  %38 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3162
  %39 = bitcast %struct.URLContext* %38 to i8*, !dbg !3162
  call void (i8*, i32, i8*, ...) @av_log(i8* %39, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.76, i32 0, i32 0)), !dbg !3164
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !3165
  store i32 -1094995529, i32* %retval, align 4, !dbg !3166
  br label %return, !dbg !3166

if.end45:                                         ; preds = %bytestream2_init.exit
  %arraydecay46 = getelementptr inbounds [64 x i8], [64 x i8]* %command, i32 0, i32 0, !dbg !3167
  %call47 = call i32 @strcmp(i8* %arraydecay46, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0)) #9, !dbg !3169
  %tobool48 = icmp ne i32 %call47, 0, !dbg !3169
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !3170

if.then49:                                        ; preds = %if.end45
  %40 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3171
  %41 = bitcast %struct.URLContext* %40 to i8*, !dbg !3171
  %arraydecay50 = getelementptr inbounds [64 x i8], [64 x i8]* %command, i32 0, i32 0, !dbg !3173
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.77, i32 0, i32 0), i8* %arraydecay50), !dbg !3174
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !3175
  store i32 -1094995529, i32* %retval, align 4, !dbg !3176
  br label %return, !dbg !3176

if.end51:                                         ; preds = %if.end45
  %call52 = call i32 @ff_amf_read_number(%struct.GetByteContext* %gbc, double* %seqnum), !dbg !3177
  store i32 %call52, i32* %ret, align 4, !dbg !3178
  %42 = load i32, i32* %ret, align 4, !dbg !3179
  %tobool53 = icmp ne i32 %42, 0, !dbg !3179
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !3181

if.then54:                                        ; preds = %if.end51
  %43 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3182
  %44 = bitcast %struct.URLContext* %43 to i8*, !dbg !3182
  call void (i8*, i32, i8*, ...) @av_log(i8* %44, i32 24, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.78, i32 0, i32 0)), !dbg !3183
  br label %if.end55, !dbg !3183

if.end55:                                         ; preds = %if.then54, %if.end51
  %buffer = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gbc, i32 0, i32 0, !dbg !3184
  %45 = load i8*, i8** %buffer, align 8, !dbg !3184
  %buffer56 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gbc, i32 0, i32 0, !dbg !3185
  %46 = load i8*, i8** %buffer56, align 8, !dbg !3185
  store %struct.GetByteContext* %gbc, %struct.GetByteContext** %g.addr.i189, align 8, !dbg !3186
  %47 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i189, align 8, !dbg !3187
  %buffer_end.i190 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %47, i32 0, i32 1, !dbg !3188
  %48 = load i8*, i8** %buffer_end.i190, align 8, !dbg !3188
  %49 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i189, align 8, !dbg !3189
  %buffer.i191 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %49, i32 0, i32 0, !dbg !3190
  %50 = load i8*, i8** %buffer.i191, align 8, !dbg !3190
  %sub.ptr.lhs.cast.i = ptrtoint i8* %48 to i64, !dbg !3191
  %sub.ptr.rhs.cast.i = ptrtoint i8* %50 to i64, !dbg !3191
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !3191
  %conv.i = trunc i64 %sub.ptr.sub.i to i32, !dbg !3187
  %idx.ext = zext i32 %conv.i to i64, !dbg !3192
  %add.ptr = getelementptr inbounds i8, i8* %46, i64 %idx.ext, !dbg !3192
  %arraydecay58 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !3193
  %call59 = call i32 @ff_amf_get_field_value(i8* %45, i8* %add.ptr, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), i8* %arraydecay58, i32 256), !dbg !3194
  store i32 %call59, i32* %ret, align 4, !dbg !3195
  %51 = load i32, i32* %ret, align 4, !dbg !3196
  %tobool60 = icmp ne i32 %51, 0, !dbg !3196
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !3198

if.then61:                                        ; preds = %if.end55
  %52 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3199
  %53 = bitcast %struct.URLContext* %52 to i8*, !dbg !3199
  call void (i8*, i32, i8*, ...) @av_log(i8* %53, i32 24, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.79, i32 0, i32 0)), !dbg !3200
  br label %if.end62, !dbg !3200

if.end62:                                         ; preds = %if.then61, %if.end55
  %54 = load i32, i32* %ret, align 4, !dbg !3201
  %tobool63 = icmp ne i32 %54, 0, !dbg !3201
  br i1 %tobool63, label %if.end70, label %land.lhs.true, !dbg !3203

land.lhs.true:                                    ; preds = %if.end62
  %arraydecay64 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !3204
  %55 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3206
  %app = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %55, i32 0, i32 9, !dbg !3207
  %56 = load i8*, i8** %app, align 8, !dbg !3207
  %call65 = call i32 @strcmp(i8* %arraydecay64, i8* %56) #9, !dbg !3208
  %tobool66 = icmp ne i32 %call65, 0, !dbg !3208
  br i1 %tobool66, label %if.then67, label %if.end70, !dbg !3209

if.then67:                                        ; preds = %land.lhs.true
  %57 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3210
  %58 = bitcast %struct.URLContext* %57 to i8*, !dbg !3210
  %arraydecay68 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !3211
  %59 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3212
  %app69 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %59, i32 0, i32 9, !dbg !3213
  %60 = load i8*, i8** %app69, align 8, !dbg !3213
  call void (i8*, i32, i8*, ...) @av_log(i8* %58, i32 24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.80, i32 0, i32 0), i8* %arraydecay68, i8* %60), !dbg !3214
  br label %if.end70, !dbg !3214

if.end70:                                         ; preds = %if.then67, %land.lhs.true, %if.end62
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !3215
  %call71 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 2, i32 5, i32 0, i32 4), !dbg !3216
  store i32 %call71, i32* %ret, align 4, !dbg !3218
  %cmp72 = icmp slt i32 %call71, 0, !dbg !3219
  br i1 %cmp72, label %if.then73, label %if.end74, !dbg !3220

if.then73:                                        ; preds = %if.end70
  %61 = load i32, i32* %ret, align 4, !dbg !3221
  store i32 %61, i32* %retval, align 4, !dbg !3222
  br label %return, !dbg !3222

if.end74:                                         ; preds = %if.end70
  %data75 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !3223
  %62 = load i8*, i8** %data75, align 8, !dbg !3223
  store i8* %62, i8** %p, align 8, !dbg !3224
  %63 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3225
  %max_sent_unacked = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %63, i32 0, i32 39, !dbg !3226
  %64 = load i32, i32* %max_sent_unacked, align 8, !dbg !3226
  store i8** %p, i8*** %b.addr.i, align 8, !dbg !3227
  store i32 %64, i32* %value.addr.i, align 4, !dbg !3227
  %65 = load i32, i32* %value.addr.i, align 4, !dbg !3228
  store i32 %65, i32* %x.addr.i.i, align 4, !dbg !3229
  %66 = load i32, i32* %x.addr.i.i, align 4, !dbg !3230
  %shl.i.i = shl i32 %66, 8, !dbg !3231
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !3232
  %67 = load i32, i32* %x.addr.i.i, align 4, !dbg !3233
  %shr.i.i = lshr i32 %67, 8, !dbg !3234
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !3235
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !3236
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !3237
  %68 = load i32, i32* %x.addr.i.i, align 4, !dbg !3238
  %shr3.i.i = lshr i32 %68, 16, !dbg !3239
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !3240
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !3241
  %69 = load i32, i32* %x.addr.i.i, align 4, !dbg !3242
  %shr6.i.i = lshr i32 %69, 16, !dbg !3243
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !3244
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !3245
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !3246
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !3247
  %70 = load i8**, i8*** %b.addr.i, align 8, !dbg !3248
  %71 = load i8*, i8** %70, align 8, !dbg !3249
  %72 = bitcast i8* %71 to %union.unaligned_32*, !dbg !3250
  %l.i = bitcast %union.unaligned_32* %72 to i32*, !dbg !3250
  store i32 %or10.i.i, i32* %l.i, align 1, !dbg !3251
  %73 = load i8**, i8*** %b.addr.i, align 8, !dbg !3252
  %74 = load i8*, i8** %73, align 8, !dbg !3253
  %add.ptr.i192 = getelementptr inbounds i8, i8* %74, i64 4, !dbg !3253
  store i8* %add.ptr.i192, i8** %73, align 8, !dbg !3253
  %75 = load i8*, i8** %p, align 8, !dbg !3254
  %data76 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !3255
  %76 = load i8*, i8** %data76, align 8, !dbg !3255
  %sub.ptr.lhs.cast = ptrtoint i8* %75 to i64, !dbg !3256
  %sub.ptr.rhs.cast = ptrtoint i8* %76 to i64, !dbg !3256
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3256
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !3254
  %size77 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 6, !dbg !3257
  store i32 %conv, i32* %size77, align 8, !dbg !3258
  %77 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3259
  %stream78 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %77, i32 0, i32 1, !dbg !3260
  %78 = load %struct.URLContext*, %struct.URLContext** %stream78, align 8, !dbg !3260
  %79 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3261
  %out_chunk_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %79, i32 0, i32 5, !dbg !3262
  %80 = load i32, i32* %out_chunk_size, align 4, !dbg !3262
  %81 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3263
  %prev_pkt79 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %81, i32 0, i32 2, !dbg !3264
  %arrayidx80 = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt79, i64 0, i64 1, !dbg !3263
  %82 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3265
  %nb_prev_pkt81 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %82, i32 0, i32 3, !dbg !3266
  %arrayidx82 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt81, i64 0, i64 1, !dbg !3265
  %call83 = call i32 @ff_rtmp_packet_write(%struct.URLContext* %78, %struct.RTMPPacket* %pkt, i32 %80, %struct.RTMPPacket** %arrayidx80, i32* %arrayidx82), !dbg !3267
  store i32 %call83, i32* %ret, align 4, !dbg !3268
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !3269
  %83 = load i32, i32* %ret, align 4, !dbg !3270
  %cmp84 = icmp slt i32 %83, 0, !dbg !3272
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !3273

if.then86:                                        ; preds = %if.end74
  %84 = load i32, i32* %ret, align 4, !dbg !3274
  store i32 %84, i32* %retval, align 4, !dbg !3275
  br label %return, !dbg !3275

if.end87:                                         ; preds = %if.end74
  %call88 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 2, i32 6, i32 0, i32 5), !dbg !3276
  store i32 %call88, i32* %ret, align 4, !dbg !3278
  %cmp89 = icmp slt i32 %call88, 0, !dbg !3279
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !3280

if.then91:                                        ; preds = %if.end87
  %85 = load i32, i32* %ret, align 4, !dbg !3281
  store i32 %85, i32* %retval, align 4, !dbg !3282
  br label %return, !dbg !3282

if.end92:                                         ; preds = %if.end87
  %data93 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !3283
  %86 = load i8*, i8** %data93, align 8, !dbg !3283
  store i8* %86, i8** %p, align 8, !dbg !3284
  %87 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3285
  %max_sent_unacked94 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %87, i32 0, i32 39, !dbg !3286
  %88 = load i32, i32* %max_sent_unacked94, align 8, !dbg !3286
  store i8** %p, i8*** %b.addr.i245, align 8, !dbg !3287
  store i32 %88, i32* %value.addr.i246, align 4, !dbg !3287
  %89 = load i32, i32* %value.addr.i246, align 4, !dbg !3288
  store i32 %89, i32* %x.addr.i.i244, align 4, !dbg !3289
  %90 = load i32, i32* %x.addr.i.i244, align 4, !dbg !3290
  %shl.i.i247 = shl i32 %90, 8, !dbg !3291
  %and.i.i248 = and i32 %shl.i.i247, 65280, !dbg !3292
  %91 = load i32, i32* %x.addr.i.i244, align 4, !dbg !3293
  %shr.i.i249 = lshr i32 %91, 8, !dbg !3294
  %and1.i.i250 = and i32 %shr.i.i249, 255, !dbg !3295
  %or.i.i251 = or i32 %and.i.i248, %and1.i.i250, !dbg !3296
  %shl2.i.i252 = shl i32 %or.i.i251, 16, !dbg !3297
  %92 = load i32, i32* %x.addr.i.i244, align 4, !dbg !3298
  %shr3.i.i253 = lshr i32 %92, 16, !dbg !3299
  %shl4.i.i254 = shl i32 %shr3.i.i253, 8, !dbg !3300
  %and5.i.i255 = and i32 %shl4.i.i254, 65280, !dbg !3301
  %93 = load i32, i32* %x.addr.i.i244, align 4, !dbg !3302
  %shr6.i.i256 = lshr i32 %93, 16, !dbg !3303
  %shr7.i.i257 = lshr i32 %shr6.i.i256, 8, !dbg !3304
  %and8.i.i258 = and i32 %shr7.i.i257, 255, !dbg !3305
  %or9.i.i259 = or i32 %and5.i.i255, %and8.i.i258, !dbg !3306
  %or10.i.i260 = or i32 %shl2.i.i252, %or9.i.i259, !dbg !3307
  %94 = load i8**, i8*** %b.addr.i245, align 8, !dbg !3308
  %95 = load i8*, i8** %94, align 8, !dbg !3309
  %96 = bitcast i8* %95 to %union.unaligned_32*, !dbg !3310
  %l.i261 = bitcast %union.unaligned_32* %96 to i32*, !dbg !3310
  store i32 %or10.i.i260, i32* %l.i261, align 1, !dbg !3311
  %97 = load i8**, i8*** %b.addr.i245, align 8, !dbg !3312
  %98 = load i8*, i8** %97, align 8, !dbg !3313
  %add.ptr.i262 = getelementptr inbounds i8, i8* %98, i64 4, !dbg !3313
  store i8* %add.ptr.i262, i8** %97, align 8, !dbg !3313
  store i8** %p, i8*** %b.addr.i240, align 8, !dbg !3314
  store i32 2, i32* %value.addr.i241, align 4, !dbg !3314
  %99 = load i32, i32* %value.addr.i241, align 4, !dbg !3315
  %conv.i242 = trunc i32 %99 to i8, !dbg !3318
  %100 = load i8**, i8*** %b.addr.i240, align 8, !dbg !3319
  %101 = load i8*, i8** %100, align 8, !dbg !3320
  store i8 %conv.i242, i8* %101, align 1, !dbg !3321
  %102 = load i8**, i8*** %b.addr.i240, align 8, !dbg !3322
  %103 = load i8*, i8** %102, align 8, !dbg !3324
  %add.ptr.i243 = getelementptr inbounds i8, i8* %103, i64 1, !dbg !3324
  store i8* %add.ptr.i243, i8** %102, align 8, !dbg !3324
  %104 = load i8*, i8** %p, align 8, !dbg !3325
  %data95 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !3326
  %105 = load i8*, i8** %data95, align 8, !dbg !3326
  %sub.ptr.lhs.cast96 = ptrtoint i8* %104 to i64, !dbg !3327
  %sub.ptr.rhs.cast97 = ptrtoint i8* %105 to i64, !dbg !3327
  %sub.ptr.sub98 = sub i64 %sub.ptr.lhs.cast96, %sub.ptr.rhs.cast97, !dbg !3327
  %conv99 = trunc i64 %sub.ptr.sub98 to i32, !dbg !3325
  %size100 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 6, !dbg !3328
  store i32 %conv99, i32* %size100, align 8, !dbg !3329
  %106 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3330
  %stream101 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %106, i32 0, i32 1, !dbg !3331
  %107 = load %struct.URLContext*, %struct.URLContext** %stream101, align 8, !dbg !3331
  %108 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3332
  %out_chunk_size102 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %108, i32 0, i32 5, !dbg !3333
  %109 = load i32, i32* %out_chunk_size102, align 4, !dbg !3333
  %110 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3334
  %prev_pkt103 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %110, i32 0, i32 2, !dbg !3335
  %arrayidx104 = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt103, i64 0, i64 1, !dbg !3334
  %111 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3336
  %nb_prev_pkt105 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %111, i32 0, i32 3, !dbg !3337
  %arrayidx106 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt105, i64 0, i64 1, !dbg !3336
  %call107 = call i32 @ff_rtmp_packet_write(%struct.URLContext* %107, %struct.RTMPPacket* %pkt, i32 %109, %struct.RTMPPacket** %arrayidx104, i32* %arrayidx106), !dbg !3338
  store i32 %call107, i32* %ret, align 4, !dbg !3339
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !3340
  %112 = load i32, i32* %ret, align 4, !dbg !3341
  %cmp108 = icmp slt i32 %112, 0, !dbg !3343
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !3344

if.then110:                                       ; preds = %if.end92
  %113 = load i32, i32* %ret, align 4, !dbg !3345
  store i32 %113, i32* %retval, align 4, !dbg !3346
  br label %return, !dbg !3346

if.end111:                                        ; preds = %if.end92
  %call112 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 2, i32 4, i32 0, i32 6), !dbg !3347
  store i32 %call112, i32* %ret, align 4, !dbg !3349
  %cmp113 = icmp slt i32 %call112, 0, !dbg !3350
  br i1 %cmp113, label %if.then115, label %if.end116, !dbg !3351

if.then115:                                       ; preds = %if.end111
  %114 = load i32, i32* %ret, align 4, !dbg !3352
  store i32 %114, i32* %retval, align 4, !dbg !3353
  br label %return, !dbg !3353

if.end116:                                        ; preds = %if.end111
  %data117 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !3354
  %115 = load i8*, i8** %data117, align 8, !dbg !3354
  store i8* %115, i8** %p, align 8, !dbg !3355
  store i8** %p, i8*** %b.addr.i232, align 8, !dbg !3356
  store i32 0, i32* %value.addr.i233, align 4, !dbg !3356
  %116 = load i32, i32* %value.addr.i233, align 4, !dbg !3357
  %conv.i234 = trunc i32 %116 to i16, !dbg !3357
  store i16 %conv.i234, i16* %x.addr.i.i231, align 2, !dbg !3358
  %117 = load i16, i16* %x.addr.i.i231, align 2, !dbg !3359
  %conv.i.i = zext i16 %117 to i32, !dbg !3359
  %shr.i.i235 = ashr i32 %conv.i.i, 8, !dbg !3360
  %118 = load i16, i16* %x.addr.i.i231, align 2, !dbg !3361
  %conv1.i.i = zext i16 %118 to i32, !dbg !3361
  %shl.i.i236 = shl i32 %conv1.i.i, 8, !dbg !3362
  %or.i.i237 = or i32 %shr.i.i235, %shl.i.i236, !dbg !3363
  %conv2.i.i = trunc i32 %or.i.i237 to i16, !dbg !3364
  store i16 %conv2.i.i, i16* %x.addr.i.i231, align 2, !dbg !3365
  %119 = load i16, i16* %x.addr.i.i231, align 2, !dbg !3366
  %120 = load i8**, i8*** %b.addr.i232, align 8, !dbg !3367
  %121 = load i8*, i8** %120, align 8, !dbg !3368
  %122 = bitcast i8* %121 to %union.unaligned_16*, !dbg !3369
  %l.i238 = bitcast %union.unaligned_16* %122 to i16*, !dbg !3369
  store i16 %119, i16* %l.i238, align 1, !dbg !3370
  %123 = load i8**, i8*** %b.addr.i232, align 8, !dbg !3371
  %124 = load i8*, i8** %123, align 8, !dbg !3372
  %add.ptr.i239 = getelementptr inbounds i8, i8* %124, i64 2, !dbg !3372
  store i8* %add.ptr.i239, i8** %123, align 8, !dbg !3372
  store i8** %p, i8*** %b.addr.i213, align 8, !dbg !3373
  store i32 0, i32* %value.addr.i214, align 4, !dbg !3373
  %125 = load i32, i32* %value.addr.i214, align 4, !dbg !3374
  store i32 %125, i32* %x.addr.i.i212, align 4, !dbg !3375
  %126 = load i32, i32* %x.addr.i.i212, align 4, !dbg !3376
  %shl.i.i215 = shl i32 %126, 8, !dbg !3377
  %and.i.i216 = and i32 %shl.i.i215, 65280, !dbg !3378
  %127 = load i32, i32* %x.addr.i.i212, align 4, !dbg !3379
  %shr.i.i217 = lshr i32 %127, 8, !dbg !3380
  %and1.i.i218 = and i32 %shr.i.i217, 255, !dbg !3381
  %or.i.i219 = or i32 %and.i.i216, %and1.i.i218, !dbg !3382
  %shl2.i.i220 = shl i32 %or.i.i219, 16, !dbg !3383
  %128 = load i32, i32* %x.addr.i.i212, align 4, !dbg !3384
  %shr3.i.i221 = lshr i32 %128, 16, !dbg !3385
  %shl4.i.i222 = shl i32 %shr3.i.i221, 8, !dbg !3386
  %and5.i.i223 = and i32 %shl4.i.i222, 65280, !dbg !3387
  %129 = load i32, i32* %x.addr.i.i212, align 4, !dbg !3388
  %shr6.i.i224 = lshr i32 %129, 16, !dbg !3389
  %shr7.i.i225 = lshr i32 %shr6.i.i224, 8, !dbg !3390
  %and8.i.i226 = and i32 %shr7.i.i225, 255, !dbg !3391
  %or9.i.i227 = or i32 %and5.i.i223, %and8.i.i226, !dbg !3392
  %or10.i.i228 = or i32 %shl2.i.i220, %or9.i.i227, !dbg !3393
  %130 = load i8**, i8*** %b.addr.i213, align 8, !dbg !3394
  %131 = load i8*, i8** %130, align 8, !dbg !3395
  %132 = bitcast i8* %131 to %union.unaligned_32*, !dbg !3396
  %l.i229 = bitcast %union.unaligned_32* %132 to i32*, !dbg !3396
  store i32 %or10.i.i228, i32* %l.i229, align 1, !dbg !3397
  %133 = load i8**, i8*** %b.addr.i213, align 8, !dbg !3398
  %134 = load i8*, i8** %133, align 8, !dbg !3399
  %add.ptr.i230 = getelementptr inbounds i8, i8* %134, i64 4, !dbg !3399
  store i8* %add.ptr.i230, i8** %133, align 8, !dbg !3399
  %135 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3400
  %stream118 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %135, i32 0, i32 1, !dbg !3401
  %136 = load %struct.URLContext*, %struct.URLContext** %stream118, align 8, !dbg !3401
  %137 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3402
  %out_chunk_size119 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %137, i32 0, i32 5, !dbg !3403
  %138 = load i32, i32* %out_chunk_size119, align 4, !dbg !3403
  %139 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3404
  %prev_pkt120 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %139, i32 0, i32 2, !dbg !3405
  %arrayidx121 = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt120, i64 0, i64 1, !dbg !3404
  %140 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3406
  %nb_prev_pkt122 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %140, i32 0, i32 3, !dbg !3407
  %arrayidx123 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt122, i64 0, i64 1, !dbg !3406
  %call124 = call i32 @ff_rtmp_packet_write(%struct.URLContext* %136, %struct.RTMPPacket* %pkt, i32 %138, %struct.RTMPPacket** %arrayidx121, i32* %arrayidx123), !dbg !3408
  store i32 %call124, i32* %ret, align 4, !dbg !3409
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !3410
  %141 = load i32, i32* %ret, align 4, !dbg !3411
  %cmp125 = icmp slt i32 %141, 0, !dbg !3413
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !3414

if.then127:                                       ; preds = %if.end116
  %142 = load i32, i32* %ret, align 4, !dbg !3415
  store i32 %142, i32* %retval, align 4, !dbg !3416
  br label %return, !dbg !3416

if.end128:                                        ; preds = %if.end116
  %call129 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 2, i32 1, i32 0, i32 4), !dbg !3417
  store i32 %call129, i32* %ret, align 4, !dbg !3419
  %cmp130 = icmp slt i32 %call129, 0, !dbg !3420
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !3421

if.then132:                                       ; preds = %if.end128
  %143 = load i32, i32* %ret, align 4, !dbg !3422
  store i32 %143, i32* %retval, align 4, !dbg !3423
  br label %return, !dbg !3423

if.end133:                                        ; preds = %if.end128
  %data134 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !3424
  %144 = load i8*, i8** %data134, align 8, !dbg !3424
  store i8* %144, i8** %p, align 8, !dbg !3425
  %145 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3426
  %out_chunk_size135 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %145, i32 0, i32 5, !dbg !3427
  %146 = load i32, i32* %out_chunk_size135, align 4, !dbg !3427
  store i8** %p, i8*** %b.addr.i194, align 8, !dbg !3428
  store i32 %146, i32* %value.addr.i195, align 4, !dbg !3428
  %147 = load i32, i32* %value.addr.i195, align 4, !dbg !3429
  store i32 %147, i32* %x.addr.i.i193, align 4, !dbg !3430
  %148 = load i32, i32* %x.addr.i.i193, align 4, !dbg !3431
  %shl.i.i196 = shl i32 %148, 8, !dbg !3432
  %and.i.i197 = and i32 %shl.i.i196, 65280, !dbg !3433
  %149 = load i32, i32* %x.addr.i.i193, align 4, !dbg !3434
  %shr.i.i198 = lshr i32 %149, 8, !dbg !3435
  %and1.i.i199 = and i32 %shr.i.i198, 255, !dbg !3436
  %or.i.i200 = or i32 %and.i.i197, %and1.i.i199, !dbg !3437
  %shl2.i.i201 = shl i32 %or.i.i200, 16, !dbg !3438
  %150 = load i32, i32* %x.addr.i.i193, align 4, !dbg !3439
  %shr3.i.i202 = lshr i32 %150, 16, !dbg !3440
  %shl4.i.i203 = shl i32 %shr3.i.i202, 8, !dbg !3441
  %and5.i.i204 = and i32 %shl4.i.i203, 65280, !dbg !3442
  %151 = load i32, i32* %x.addr.i.i193, align 4, !dbg !3443
  %shr6.i.i205 = lshr i32 %151, 16, !dbg !3444
  %shr7.i.i206 = lshr i32 %shr6.i.i205, 8, !dbg !3445
  %and8.i.i207 = and i32 %shr7.i.i206, 255, !dbg !3446
  %or9.i.i208 = or i32 %and5.i.i204, %and8.i.i207, !dbg !3447
  %or10.i.i209 = or i32 %shl2.i.i201, %or9.i.i208, !dbg !3448
  %152 = load i8**, i8*** %b.addr.i194, align 8, !dbg !3449
  %153 = load i8*, i8** %152, align 8, !dbg !3450
  %154 = bitcast i8* %153 to %union.unaligned_32*, !dbg !3451
  %l.i210 = bitcast %union.unaligned_32* %154 to i32*, !dbg !3451
  store i32 %or10.i.i209, i32* %l.i210, align 1, !dbg !3452
  %155 = load i8**, i8*** %b.addr.i194, align 8, !dbg !3453
  %156 = load i8*, i8** %155, align 8, !dbg !3454
  %add.ptr.i211 = getelementptr inbounds i8, i8* %156, i64 4, !dbg !3454
  store i8* %add.ptr.i211, i8** %155, align 8, !dbg !3454
  %157 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3455
  %stream136 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %157, i32 0, i32 1, !dbg !3456
  %158 = load %struct.URLContext*, %struct.URLContext** %stream136, align 8, !dbg !3456
  %159 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3457
  %out_chunk_size137 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %159, i32 0, i32 5, !dbg !3458
  %160 = load i32, i32* %out_chunk_size137, align 4, !dbg !3458
  %161 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3459
  %prev_pkt138 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %161, i32 0, i32 2, !dbg !3460
  %arrayidx139 = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt138, i64 0, i64 1, !dbg !3459
  %162 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3461
  %nb_prev_pkt140 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %162, i32 0, i32 3, !dbg !3462
  %arrayidx141 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt140, i64 0, i64 1, !dbg !3461
  %call142 = call i32 @ff_rtmp_packet_write(%struct.URLContext* %158, %struct.RTMPPacket* %pkt, i32 %160, %struct.RTMPPacket** %arrayidx139, i32* %arrayidx141), !dbg !3463
  store i32 %call142, i32* %ret, align 4, !dbg !3464
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !3465
  %163 = load i32, i32* %ret, align 4, !dbg !3466
  %cmp143 = icmp slt i32 %163, 0, !dbg !3468
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !3469

if.then145:                                       ; preds = %if.end133
  %164 = load i32, i32* %ret, align 4, !dbg !3470
  store i32 %164, i32* %retval, align 4, !dbg !3471
  br label %return, !dbg !3471

if.end146:                                        ; preds = %if.end133
  %call147 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 3, i32 20, i32 0, i32 4096), !dbg !3472
  store i32 %call147, i32* %ret, align 4, !dbg !3474
  %cmp148 = icmp slt i32 %call147, 0, !dbg !3475
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !3476

if.then150:                                       ; preds = %if.end146
  %165 = load i32, i32* %ret, align 4, !dbg !3477
  store i32 %165, i32* %retval, align 4, !dbg !3478
  br label %return, !dbg !3478

if.end151:                                        ; preds = %if.end146
  %data152 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !3479
  %166 = load i8*, i8** %data152, align 8, !dbg !3479
  store i8* %166, i8** %p, align 8, !dbg !3480
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.81, i32 0, i32 0)), !dbg !3481
  %167 = load double, double* %seqnum, align 8, !dbg !3482
  call void @ff_amf_write_number(i8** %p, double %167), !dbg !3483
  call void @ff_amf_write_object_start(i8** %p), !dbg !3484
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.82, i32 0, i32 0)), !dbg !3485
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.83, i32 0, i32 0)), !dbg !3486
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i32 0, i32 0)), !dbg !3487
  call void @ff_amf_write_number(i8** %p, double 3.100000e+01), !dbg !3488
  call void @ff_amf_write_object_end(i8** %p), !dbg !3489
  call void @ff_amf_write_object_start(i8** %p), !dbg !3490
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0)), !dbg !3491
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i32 0, i32 0)), !dbg !3492
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i32 0, i32 0)), !dbg !3493
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.87, i32 0, i32 0)), !dbg !3494
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i32 0, i32 0)), !dbg !3495
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.89, i32 0, i32 0)), !dbg !3496
  call void @ff_amf_write_field_name(i8** %p, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.90, i32 0, i32 0)), !dbg !3497
  call void @ff_amf_write_number(i8** %p, double 0.000000e+00), !dbg !3498
  call void @ff_amf_write_object_end(i8** %p), !dbg !3499
  %168 = load i8*, i8** %p, align 8, !dbg !3500
  %data153 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !3501
  %169 = load i8*, i8** %data153, align 8, !dbg !3501
  %sub.ptr.lhs.cast154 = ptrtoint i8* %168 to i64, !dbg !3502
  %sub.ptr.rhs.cast155 = ptrtoint i8* %169 to i64, !dbg !3502
  %sub.ptr.sub156 = sub i64 %sub.ptr.lhs.cast154, %sub.ptr.rhs.cast155, !dbg !3502
  %conv157 = trunc i64 %sub.ptr.sub156 to i32, !dbg !3500
  %size158 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 6, !dbg !3503
  store i32 %conv157, i32* %size158, align 8, !dbg !3504
  %170 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3505
  %stream159 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %170, i32 0, i32 1, !dbg !3506
  %171 = load %struct.URLContext*, %struct.URLContext** %stream159, align 8, !dbg !3506
  %172 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3507
  %out_chunk_size160 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %172, i32 0, i32 5, !dbg !3508
  %173 = load i32, i32* %out_chunk_size160, align 4, !dbg !3508
  %174 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3509
  %prev_pkt161 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %174, i32 0, i32 2, !dbg !3510
  %arrayidx162 = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt161, i64 0, i64 1, !dbg !3509
  %175 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3511
  %nb_prev_pkt163 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %175, i32 0, i32 3, !dbg !3512
  %arrayidx164 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt163, i64 0, i64 1, !dbg !3511
  %call165 = call i32 @ff_rtmp_packet_write(%struct.URLContext* %171, %struct.RTMPPacket* %pkt, i32 %173, %struct.RTMPPacket** %arrayidx162, i32* %arrayidx164), !dbg !3513
  store i32 %call165, i32* %ret, align 4, !dbg !3514
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !3515
  %176 = load i32, i32* %ret, align 4, !dbg !3516
  %cmp166 = icmp slt i32 %176, 0, !dbg !3518
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !3519

if.then168:                                       ; preds = %if.end151
  %177 = load i32, i32* %ret, align 4, !dbg !3520
  store i32 %177, i32* %retval, align 4, !dbg !3521
  br label %return, !dbg !3521

if.end169:                                        ; preds = %if.end151
  %call170 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 3, i32 20, i32 0, i32 30), !dbg !3522
  store i32 %call170, i32* %ret, align 4, !dbg !3524
  %cmp171 = icmp slt i32 %call170, 0, !dbg !3525
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !3526

if.then173:                                       ; preds = %if.end169
  %178 = load i32, i32* %ret, align 4, !dbg !3527
  store i32 %178, i32* %retval, align 4, !dbg !3528
  br label %return, !dbg !3528

if.end174:                                        ; preds = %if.end169
  %data175 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !3529
  %179 = load i8*, i8** %data175, align 8, !dbg !3529
  store i8* %179, i8** %p, align 8, !dbg !3530
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i32 0, i32 0)), !dbg !3531
  call void @ff_amf_write_number(i8** %p, double 0.000000e+00), !dbg !3532
  call void @ff_amf_write_null(i8** %p), !dbg !3533
  call void @ff_amf_write_number(i8** %p, double 8.192000e+03), !dbg !3534
  %180 = load i8*, i8** %p, align 8, !dbg !3535
  %data176 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !3536
  %181 = load i8*, i8** %data176, align 8, !dbg !3536
  %sub.ptr.lhs.cast177 = ptrtoint i8* %180 to i64, !dbg !3537
  %sub.ptr.rhs.cast178 = ptrtoint i8* %181 to i64, !dbg !3537
  %sub.ptr.sub179 = sub i64 %sub.ptr.lhs.cast177, %sub.ptr.rhs.cast178, !dbg !3537
  %conv180 = trunc i64 %sub.ptr.sub179 to i32, !dbg !3535
  %size181 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 6, !dbg !3538
  store i32 %conv180, i32* %size181, align 8, !dbg !3539
  %182 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3540
  %stream182 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %182, i32 0, i32 1, !dbg !3541
  %183 = load %struct.URLContext*, %struct.URLContext** %stream182, align 8, !dbg !3541
  %184 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3542
  %out_chunk_size183 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %184, i32 0, i32 5, !dbg !3543
  %185 = load i32, i32* %out_chunk_size183, align 4, !dbg !3543
  %186 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3544
  %prev_pkt184 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %186, i32 0, i32 2, !dbg !3545
  %arrayidx185 = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt184, i64 0, i64 1, !dbg !3544
  %187 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3546
  %nb_prev_pkt186 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %187, i32 0, i32 3, !dbg !3547
  %arrayidx187 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt186, i64 0, i64 1, !dbg !3546
  %call188 = call i32 @ff_rtmp_packet_write(%struct.URLContext* %183, %struct.RTMPPacket* %pkt, i32 %185, %struct.RTMPPacket** %arrayidx185, i32* %arrayidx187), !dbg !3548
  store i32 %call188, i32* %ret, align 4, !dbg !3549
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %pkt), !dbg !3550
  %188 = load i32, i32* %ret, align 4, !dbg !3551
  store i32 %188, i32* %retval, align 4, !dbg !3552
  br label %return, !dbg !3552

return:                                           ; preds = %if.end174, %if.then173, %if.then168, %if.then150, %if.then145, %if.then132, %if.then127, %if.then115, %if.then110, %if.then91, %if.then86, %if.then73, %if.then49, %if.then44, %if.then29, %if.then21, %if.then10, %if.then6, %if.then
  %189 = load i32, i32* %retval, align 4, !dbg !3553
  ret i32 %189, !dbg !3553
}

; Function Attrs: nounwind uwtable
define internal i32 @get_packet(%struct.URLContext* %s, i32 %for_header) #0 !dbg !3554 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %for_header.addr = alloca i32, align 4
  %rt = alloca %struct.RTMPContext*, align 8
  %ret = alloca i32, align 4
  %rpkt = alloca %struct.RTMPPacket, align 8
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !3555, metadata !376), !dbg !3556
  store i32 %for_header, i32* %for_header.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %for_header.addr, metadata !3557, metadata !376), !dbg !3558
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !3559, metadata !376), !dbg !3560
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3561
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !3562
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3562
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !3561
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !3560
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3563, metadata !376), !dbg !3564
  %3 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3565
  %state = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %3, i32 0, i32 11, !dbg !3567
  %4 = load i32, i32* %state, align 8, !dbg !3567
  %cmp = icmp eq i32 %4, 8, !dbg !3568
  br i1 %cmp, label %if.then, label %if.end, !dbg !3569

if.then:                                          ; preds = %entry
  store i32 -541478725, i32* %retval, align 4, !dbg !3570
  br label %return, !dbg !3570

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !3571

for.cond:                                         ; preds = %if.end85, %if.then61, %if.then26, %if.end
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %rpkt, metadata !3572, metadata !376), !dbg !3576
  %5 = bitcast %struct.RTMPPacket* %rpkt to i8*, !dbg !3576
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 48, i32 8, i1 false), !dbg !3576
  %6 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3577
  %stream = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %6, i32 0, i32 1, !dbg !3579
  %7 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !3579
  %8 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3580
  %in_chunk_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %8, i32 0, i32 4, !dbg !3581
  %9 = load i32, i32* %in_chunk_size, align 8, !dbg !3581
  %10 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3582
  %prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %10, i32 0, i32 2, !dbg !3583
  %arrayidx = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt, i64 0, i64 0, !dbg !3582
  %11 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3584
  %nb_prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %11, i32 0, i32 3, !dbg !3585
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt, i64 0, i64 0, !dbg !3584
  %call = call i32 @ff_rtmp_packet_read(%struct.URLContext* %7, %struct.RTMPPacket* %rpkt, i32 %9, %struct.RTMPPacket** %arrayidx, i32* %arrayidx1), !dbg !3586
  store i32 %call, i32* %ret, align 4, !dbg !3587
  %cmp2 = icmp sle i32 %call, 0, !dbg !3588
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !3589

if.then3:                                         ; preds = %for.cond
  %12 = load i32, i32* %ret, align 4, !dbg !3590
  %cmp4 = icmp eq i32 %12, 0, !dbg !3593
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !3594

if.then5:                                         ; preds = %if.then3
  store i32 -11, i32* %retval, align 4, !dbg !3595
  br label %return, !dbg !3595

if.else:                                          ; preds = %if.then3
  store i32 -5, i32* %retval, align 4, !dbg !3597
  br label %return, !dbg !3597

if.end6:                                          ; preds = %for.cond
  %timestamp = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %rpkt, i32 0, i32 2, !dbg !3599
  %13 = load i32, i32* %timestamp, align 8, !dbg !3599
  %14 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3600
  %last_timestamp = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %14, i32 0, i32 21, !dbg !3601
  store i32 %13, i32* %last_timestamp, align 8, !dbg !3602
  %15 = load i32, i32* %ret, align 4, !dbg !3603
  %conv = sext i32 %15 to i64, !dbg !3603
  %16 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3604
  %bytes_read = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %16, i32 0, i32 19, !dbg !3605
  %17 = load i64, i64* %bytes_read, align 8, !dbg !3606
  %add = add i64 %17, %conv, !dbg !3606
  store i64 %add, i64* %bytes_read, align 8, !dbg !3606
  %18 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3607
  %bytes_read7 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %18, i32 0, i32 19, !dbg !3609
  %19 = load i64, i64* %bytes_read7, align 8, !dbg !3609
  %20 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3610
  %last_bytes_read = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %20, i32 0, i32 20, !dbg !3611
  %21 = load i64, i64* %last_bytes_read, align 8, !dbg !3611
  %sub = sub i64 %19, %21, !dbg !3612
  %22 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3613
  %receive_report_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %22, i32 0, i32 18, !dbg !3614
  %23 = load i32, i32* %receive_report_size, align 8, !dbg !3614
  %conv8 = zext i32 %23 to i64, !dbg !3613
  %cmp9 = icmp ugt i64 %sub, %conv8, !dbg !3615
  br i1 %cmp9, label %if.then11, label %if.end21, !dbg !3616

if.then11:                                        ; preds = %if.end6
  %24 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3617
  %25 = bitcast %struct.URLContext* %24 to i8*, !dbg !3617
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 48, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.101, i32 0, i32 0)), !dbg !3619
  %26 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3620
  %27 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3622
  %timestamp12 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %rpkt, i32 0, i32 2, !dbg !3623
  %28 = load i32, i32* %timestamp12, align 8, !dbg !3623
  %add13 = add i32 %28, 1, !dbg !3624
  %call14 = call i32 @gen_bytes_read(%struct.URLContext* %26, %struct.RTMPContext* %27, i32 %add13), !dbg !3625
  store i32 %call14, i32* %ret, align 4, !dbg !3626
  %cmp15 = icmp slt i32 %call14, 0, !dbg !3627
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !3628

if.then17:                                        ; preds = %if.then11
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %rpkt), !dbg !3629
  %29 = load i32, i32* %ret, align 4, !dbg !3631
  store i32 %29, i32* %retval, align 4, !dbg !3632
  br label %return, !dbg !3632

if.end18:                                         ; preds = %if.then11
  %30 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3633
  %bytes_read19 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %30, i32 0, i32 19, !dbg !3634
  %31 = load i64, i64* %bytes_read19, align 8, !dbg !3634
  %32 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3635
  %last_bytes_read20 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %32, i32 0, i32 20, !dbg !3636
  store i64 %31, i64* %last_bytes_read20, align 8, !dbg !3637
  br label %if.end21, !dbg !3638

if.end21:                                         ; preds = %if.end18, %if.end6
  %33 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3639
  %34 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3640
  %call22 = call i32 @rtmp_parse_result(%struct.URLContext* %33, %struct.RTMPContext* %34, %struct.RTMPPacket* %rpkt), !dbg !3641
  store i32 %call22, i32* %ret, align 4, !dbg !3642
  %35 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3643
  %state23 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %35, i32 0, i32 11, !dbg !3645
  %36 = load i32, i32* %state23, align 8, !dbg !3645
  %cmp24 = icmp eq i32 %36, 4, !dbg !3646
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !3647

if.then26:                                        ; preds = %if.end21
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %rpkt), !dbg !3648
  br label %for.cond, !dbg !3650, !llvm.loop !3651

if.end27:                                         ; preds = %if.end21
  %37 = load i32, i32* %ret, align 4, !dbg !3652
  %cmp28 = icmp slt i32 %37, 0, !dbg !3654
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !3655

if.then30:                                        ; preds = %if.end27
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %rpkt), !dbg !3656
  %38 = load i32, i32* %ret, align 4, !dbg !3658
  store i32 %38, i32* %retval, align 4, !dbg !3659
  br label %return, !dbg !3659

if.end31:                                         ; preds = %if.end27
  %39 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3660
  %do_reconnect = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %39, i32 0, i32 53, !dbg !3662
  %40 = load i32, i32* %do_reconnect, align 8, !dbg !3662
  %tobool = icmp ne i32 %40, 0, !dbg !3660
  br i1 %tobool, label %land.lhs.true, label %if.end34, !dbg !3663

land.lhs.true:                                    ; preds = %if.end31
  %41 = load i32, i32* %for_header.addr, align 4, !dbg !3664
  %tobool32 = icmp ne i32 %41, 0, !dbg !3664
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !3666

if.then33:                                        ; preds = %land.lhs.true
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %rpkt), !dbg !3667
  store i32 0, i32* %retval, align 4, !dbg !3669
  br label %return, !dbg !3669

if.end34:                                         ; preds = %land.lhs.true, %if.end31
  %42 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3670
  %state35 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %42, i32 0, i32 11, !dbg !3672
  %43 = load i32, i32* %state35, align 8, !dbg !3672
  %cmp36 = icmp eq i32 %43, 8, !dbg !3673
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !3674

if.then38:                                        ; preds = %if.end34
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %rpkt), !dbg !3675
  store i32 -541478725, i32* %retval, align 4, !dbg !3677
  br label %return, !dbg !3677

if.end39:                                         ; preds = %if.end34
  %44 = load i32, i32* %for_header.addr, align 4, !dbg !3678
  %tobool40 = icmp ne i32 %44, 0, !dbg !3678
  br i1 %tobool40, label %land.lhs.true41, label %if.end57, !dbg !3680

land.lhs.true41:                                  ; preds = %if.end39
  %45 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3681
  %state42 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %45, i32 0, i32 11, !dbg !3683
  %46 = load i32, i32* %state42, align 8, !dbg !3683
  %cmp43 = icmp eq i32 %46, 3, !dbg !3684
  br i1 %cmp43, label %if.then56, label %lor.lhs.false, !dbg !3685

lor.lhs.false:                                    ; preds = %land.lhs.true41
  %47 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3686
  %state45 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %47, i32 0, i32 11, !dbg !3687
  %48 = load i32, i32* %state45, align 8, !dbg !3687
  %cmp46 = icmp eq i32 %48, 5, !dbg !3688
  br i1 %cmp46, label %if.then56, label %lor.lhs.false48, !dbg !3689

lor.lhs.false48:                                  ; preds = %lor.lhs.false
  %49 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3690
  %state49 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %49, i32 0, i32 11, !dbg !3691
  %50 = load i32, i32* %state49, align 8, !dbg !3691
  %cmp50 = icmp eq i32 %50, 7, !dbg !3692
  br i1 %cmp50, label %if.then56, label %lor.lhs.false52, !dbg !3693

lor.lhs.false52:                                  ; preds = %lor.lhs.false48
  %51 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3694
  %state53 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %51, i32 0, i32 11, !dbg !3695
  %52 = load i32, i32* %state53, align 8, !dbg !3695
  %cmp54 = icmp eq i32 %52, 6, !dbg !3696
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !3697

if.then56:                                        ; preds = %lor.lhs.false52, %lor.lhs.false48, %lor.lhs.false, %land.lhs.true41
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %rpkt), !dbg !3699
  store i32 0, i32* %retval, align 4, !dbg !3701
  br label %return, !dbg !3701

if.end57:                                         ; preds = %lor.lhs.false52, %if.end39
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %rpkt, i32 0, i32 6, !dbg !3702
  %53 = load i32, i32* %size, align 8, !dbg !3702
  %tobool58 = icmp ne i32 %53, 0, !dbg !3704
  br i1 %tobool58, label %lor.lhs.false59, label %if.then61, !dbg !3705

lor.lhs.false59:                                  ; preds = %if.end57
  %54 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3706
  %is_input = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %54, i32 0, i32 6, !dbg !3708
  %55 = load i32, i32* %is_input, align 8, !dbg !3708
  %tobool60 = icmp ne i32 %55, 0, !dbg !3706
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !3709

if.then61:                                        ; preds = %lor.lhs.false59, %if.end57
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %rpkt), !dbg !3710
  br label %for.cond, !dbg !3712, !llvm.loop !3651

if.end62:                                         ; preds = %lor.lhs.false59
  %type = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %rpkt, i32 0, i32 1, !dbg !3713
  %56 = load i32, i32* %type, align 4, !dbg !3713
  %cmp63 = icmp eq i32 %56, 9, !dbg !3715
  br i1 %cmp63, label %if.then69, label %lor.lhs.false65, !dbg !3716

lor.lhs.false65:                                  ; preds = %if.end62
  %type66 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %rpkt, i32 0, i32 1, !dbg !3717
  %57 = load i32, i32* %type66, align 4, !dbg !3717
  %cmp67 = icmp eq i32 %57, 8, !dbg !3719
  br i1 %cmp67, label %if.then69, label %if.else71, !dbg !3720

if.then69:                                        ; preds = %lor.lhs.false65, %if.end62
  %58 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3721
  %call70 = call i32 @append_flv_data(%struct.RTMPContext* %58, %struct.RTMPPacket* %rpkt, i32 0), !dbg !3723
  store i32 %call70, i32* %ret, align 4, !dbg !3724
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %rpkt), !dbg !3725
  %59 = load i32, i32* %ret, align 4, !dbg !3726
  store i32 %59, i32* %retval, align 4, !dbg !3727
  br label %return, !dbg !3727

if.else71:                                        ; preds = %lor.lhs.false65
  %type72 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %rpkt, i32 0, i32 1, !dbg !3728
  %60 = load i32, i32* %type72, align 4, !dbg !3728
  %cmp73 = icmp eq i32 %60, 18, !dbg !3730
  br i1 %cmp73, label %if.then75, label %if.else77, !dbg !3731

if.then75:                                        ; preds = %if.else71
  %61 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !3732
  %call76 = call i32 @handle_notify(%struct.URLContext* %61, %struct.RTMPPacket* %rpkt), !dbg !3734
  store i32 %call76, i32* %ret, align 4, !dbg !3735
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %rpkt), !dbg !3736
  %62 = load i32, i32* %ret, align 4, !dbg !3737
  store i32 %62, i32* %retval, align 4, !dbg !3738
  br label %return, !dbg !3738

if.else77:                                        ; preds = %if.else71
  %type78 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %rpkt, i32 0, i32 1, !dbg !3739
  %63 = load i32, i32* %type78, align 4, !dbg !3739
  %cmp79 = icmp eq i32 %63, 22, !dbg !3741
  br i1 %cmp79, label %if.then81, label %if.end83, !dbg !3742

if.then81:                                        ; preds = %if.else77
  %64 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !3743
  %call82 = call i32 @handle_metadata(%struct.RTMPContext* %64, %struct.RTMPPacket* %rpkt), !dbg !3745
  store i32 %call82, i32* %ret, align 4, !dbg !3746
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %rpkt), !dbg !3747
  %65 = load i32, i32* %ret, align 4, !dbg !3748
  store i32 %65, i32* %retval, align 4, !dbg !3749
  br label %return, !dbg !3749

if.end83:                                         ; preds = %if.else77
  br label %if.end84

if.end84:                                         ; preds = %if.end83
  br label %if.end85

if.end85:                                         ; preds = %if.end84
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %rpkt), !dbg !3750
  br label %for.cond, !dbg !3751, !llvm.loop !3651

return:                                           ; preds = %if.then81, %if.then75, %if.then69, %if.then56, %if.then38, %if.then33, %if.then30, %if.then17, %if.else, %if.then5, %if.then
  %66 = load i32, i32* %retval, align 4, !dbg !3753
  ret i32 %66, !dbg !3753
}

declare i32 @ffurl_close(%struct.URLContext*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal void @free_tracked_methods(%struct.RTMPContext* %rt) #0 !dbg !3754 {
entry:
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %i = alloca i32, align 4
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !3757, metadata !376), !dbg !3758
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3759, metadata !376), !dbg !3760
  store i32 0, i32* %i, align 4, !dbg !3761
  br label %for.cond, !dbg !3763

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3764
  %1 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3767
  %nb_tracked_methods = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %1, i32 0, i32 44, !dbg !3768
  %2 = load i32, i32* %nb_tracked_methods, align 8, !dbg !3768
  %cmp = icmp slt i32 %0, %2, !dbg !3769
  br i1 %cmp, label %for.body, label %for.end, !dbg !3770

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !3771
  %idxprom = sext i32 %3 to i64, !dbg !3772
  %4 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3772
  %tracked_methods = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %4, i32 0, i32 43, !dbg !3773
  %5 = load %struct.TrackedMethod*, %struct.TrackedMethod** %tracked_methods, align 8, !dbg !3773
  %arrayidx = getelementptr inbounds %struct.TrackedMethod, %struct.TrackedMethod* %5, i64 %idxprom, !dbg !3772
  %name = getelementptr inbounds %struct.TrackedMethod, %struct.TrackedMethod* %arrayidx, i32 0, i32 0, !dbg !3774
  %6 = bitcast i8** %name to i8*, !dbg !3775
  call void @av_freep(i8* %6), !dbg !3776
  br label %for.inc, !dbg !3776

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !3777
  %inc = add nsw i32 %7, 1, !dbg !3777
  store i32 %inc, i32* %i, align 4, !dbg !3777
  br label %for.cond, !dbg !3779, !llvm.loop !3780

for.end:                                          ; preds = %for.cond
  %8 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3782
  %tracked_methods1 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %8, i32 0, i32 43, !dbg !3783
  %9 = bitcast %struct.TrackedMethod** %tracked_methods1 to i8*, !dbg !3784
  call void @av_freep(i8* %9), !dbg !3785
  %10 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3786
  %tracked_methods_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %10, i32 0, i32 45, !dbg !3787
  store i32 0, i32* %tracked_methods_size, align 4, !dbg !3788
  %11 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3789
  %nb_tracked_methods2 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %11, i32 0, i32 44, !dbg !3790
  store i32 0, i32* %nb_tracked_methods2, align 8, !dbg !3791
  ret void, !dbg !3792
}

declare i32 @av_reallocp(i8*, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @inject_fake_duration_metadata(%struct.RTMPContext* %rt) #0 !dbg !3793 {
entry:
  %b.addr.i121 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i121, metadata !3796, metadata !376), !dbg !3798
  %value.addr.i122 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i122, metadata !3800, metadata !376), !dbg !3801
  %x.addr.i.i102 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i102, metadata !2616, metadata !376), !dbg !3802
  %b.addr.i103 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i103, metadata !2960, metadata !376), !dbg !3805
  %value.addr.i104 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i104, metadata !2962, metadata !376), !dbg !3806
  %b.addr.i98 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i98, metadata !2964, metadata !376), !dbg !3807
  %value.addr.i99 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i99, metadata !2968, metadata !376), !dbg !3809
  %x.addr.i.i86 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i.i86, metadata !2970, metadata !376), !dbg !3810
  %b.addr.i87 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i87, metadata !2978, metadata !376), !dbg !3813
  %value.addr.i88 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i88, metadata !2980, metadata !376), !dbg !3814
  %b.addr.i80 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i80, metadata !3815, metadata !376), !dbg !3819
  %src.addr.i81 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i81, metadata !3821, metadata !376), !dbg !3822
  %size.addr.i82 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i82, metadata !3823, metadata !376), !dbg !3824
  %b.addr.i76 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i76, metadata !2964, metadata !376), !dbg !3825
  %value.addr.i77 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i77, metadata !2968, metadata !376), !dbg !3827
  %x.addr.i.i57 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i57, metadata !2616, metadata !376), !dbg !3828
  %b.addr.i58 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i58, metadata !2960, metadata !376), !dbg !3831
  %value.addr.i59 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i59, metadata !2962, metadata !376), !dbg !3832
  %x.addr.i.i45 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i.i45, metadata !2970, metadata !376), !dbg !3833
  %b.addr.i46 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i46, metadata !2978, metadata !376), !dbg !3836
  %value.addr.i47 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i47, metadata !2980, metadata !376), !dbg !3837
  %b.addr.i42 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i42, metadata !3815, metadata !376), !dbg !3838
  %src.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i, metadata !3821, metadata !376), !dbg !3840
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3823, metadata !376), !dbg !3841
  %b.addr.i38 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i38, metadata !2964, metadata !376), !dbg !3842
  %value.addr.i39 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i39, metadata !2968, metadata !376), !dbg !3844
  %f.addr.i = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %f.addr.i, metadata !3845, metadata !376), !dbg !3850
  %v.i = alloca %union.av_intfloat64, align 8
  call void @llvm.dbg.declare(metadata %union.av_intfloat64* %v.i, metadata !3852, metadata !376), !dbg !3857
  %b.addr.i34 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i34, metadata !3796, metadata !376), !dbg !3858
  %value.addr.i35 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i35, metadata !3800, metadata !376), !dbg !3860
  %b.addr.i30 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i30, metadata !3861, metadata !376), !dbg !3866
  %value.addr.i31 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr.i31, metadata !3869, metadata !376), !dbg !3870
  %x.addr.i.i21 = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i.i21, metadata !2970, metadata !376), !dbg !3871
  %b.addr.i22 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i22, metadata !2978, metadata !376), !dbg !3874
  %value.addr.i23 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i23, metadata !2980, metadata !376), !dbg !3875
  %b.addr.i17 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i17, metadata !2964, metadata !376), !dbg !3876
  %value.addr.i18 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i18, metadata !2968, metadata !376), !dbg !3878
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2616, metadata !376), !dbg !3879
  %b.addr.i14 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i14, metadata !2960, metadata !376), !dbg !3882
  %value.addr.i15 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i15, metadata !2962, metadata !376), !dbg !3883
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !2964, metadata !376), !dbg !3884
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !2968, metadata !376), !dbg !3886
  %retval = alloca i32, align 4
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %p = alloca i8*, align 8
  %old_flv_data = alloca i8*, align 8
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !3887, metadata !376), !dbg !3888
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3889, metadata !376), !dbg !3890
  call void @llvm.dbg.declare(metadata i8** %old_flv_data, metadata !3891, metadata !376), !dbg !3892
  %0 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3893
  %flv_data = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %0, i32 0, i32 13, !dbg !3894
  %1 = load i8*, i8** %flv_data, align 8, !dbg !3894
  store i8* %1, i8** %old_flv_data, align 8, !dbg !3892
  %2 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3895
  %flv_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %2, i32 0, i32 14, !dbg !3897
  %3 = load i32, i32* %flv_size, align 8, !dbg !3897
  %add = add nsw i32 %3, 55, !dbg !3898
  %conv = sext i32 %add to i64, !dbg !3895
  %call = call noalias i8* @av_malloc(i64 %conv), !dbg !3899
  %4 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3900
  %flv_data1 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %4, i32 0, i32 13, !dbg !3901
  store i8* %call, i8** %flv_data1, align 8, !dbg !3902
  %tobool = icmp ne i8* %call, null, !dbg !3902
  br i1 %tobool, label %if.end, label %if.then, !dbg !3903

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %old_flv_data, align 8, !dbg !3904
  %6 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3906
  %flv_data2 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %6, i32 0, i32 13, !dbg !3907
  store i8* %5, i8** %flv_data2, align 8, !dbg !3908
  store i32 -12, i32* %retval, align 4, !dbg !3909
  br label %return, !dbg !3909

if.end:                                           ; preds = %entry
  %7 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3910
  %flv_data3 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %7, i32 0, i32 13, !dbg !3911
  %8 = load i8*, i8** %flv_data3, align 8, !dbg !3911
  %9 = load i8*, i8** %old_flv_data, align 8, !dbg !3912
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 13, i32 1, i1 false), !dbg !3913
  %10 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3914
  %flv_data4 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %10, i32 0, i32 13, !dbg !3915
  %11 = load i8*, i8** %flv_data4, align 8, !dbg !3915
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 13, !dbg !3916
  %add.ptr5 = getelementptr inbounds i8, i8* %add.ptr, i64 55, !dbg !3917
  %12 = load i8*, i8** %old_flv_data, align 8, !dbg !3918
  %add.ptr6 = getelementptr inbounds i8, i8* %12, i64 13, !dbg !3919
  %13 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3920
  %flv_size7 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %13, i32 0, i32 14, !dbg !3921
  %14 = load i32, i32* %flv_size7, align 8, !dbg !3921
  %sub = sub nsw i32 %14, 13, !dbg !3922
  %conv8 = sext i32 %sub to i64, !dbg !3920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr5, i8* %add.ptr6, i64 %conv8, i32 1, i1 false), !dbg !3923
  %15 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3924
  %flv_size9 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %15, i32 0, i32 14, !dbg !3925
  %16 = load i32, i32* %flv_size9, align 8, !dbg !3926
  %add10 = add nsw i32 %16, 55, !dbg !3926
  store i32 %add10, i32* %flv_size9, align 8, !dbg !3926
  %17 = bitcast i8** %old_flv_data to i8*, !dbg !3927
  call void @av_freep(i8* %17), !dbg !3928
  %18 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !3929
  %flv_data11 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %18, i32 0, i32 13, !dbg !3930
  %19 = load i8*, i8** %flv_data11, align 8, !dbg !3930
  %add.ptr12 = getelementptr inbounds i8, i8* %19, i64 13, !dbg !3931
  store i8* %add.ptr12, i8** %p, align 8, !dbg !3932
  store i8** %p, i8*** %b.addr.i, align 8, !dbg !3933
  store i32 18, i32* %value.addr.i, align 4, !dbg !3933
  %20 = load i32, i32* %value.addr.i, align 4, !dbg !3934
  %conv.i = trunc i32 %20 to i8, !dbg !3935
  %21 = load i8**, i8*** %b.addr.i, align 8, !dbg !3936
  %22 = load i8*, i8** %21, align 8, !dbg !3937
  store i8 %conv.i, i8* %22, align 1, !dbg !3938
  %23 = load i8**, i8*** %b.addr.i, align 8, !dbg !3939
  %24 = load i8*, i8** %23, align 8, !dbg !3940
  %add.ptr.i = getelementptr inbounds i8, i8* %24, i64 1, !dbg !3940
  store i8* %add.ptr.i, i8** %23, align 8, !dbg !3940
  store i8** %p, i8*** %b.addr.i34, align 8, !dbg !3941
  store i32 40, i32* %value.addr.i35, align 4, !dbg !3941
  %25 = load i32, i32* %value.addr.i35, align 4, !dbg !3942
  %conv.i36 = trunc i32 %25 to i8, !dbg !3945
  %26 = load i8**, i8*** %b.addr.i34, align 8, !dbg !3946
  %27 = load i8*, i8** %26, align 8, !dbg !3947
  %arrayidx.i = getelementptr inbounds i8, i8* %27, i64 2, !dbg !3948
  store i8 %conv.i36, i8* %arrayidx.i, align 1, !dbg !3949
  %28 = load i32, i32* %value.addr.i35, align 4, !dbg !3950
  %shr.i = lshr i32 %28, 8, !dbg !3951
  %conv1.i = trunc i32 %shr.i to i8, !dbg !3952
  %29 = load i8**, i8*** %b.addr.i34, align 8, !dbg !3953
  %30 = load i8*, i8** %29, align 8, !dbg !3954
  %arrayidx2.i = getelementptr inbounds i8, i8* %30, i64 1, !dbg !3955
  store i8 %conv1.i, i8* %arrayidx2.i, align 1, !dbg !3956
  %31 = load i32, i32* %value.addr.i35, align 4, !dbg !3957
  %shr3.i = lshr i32 %31, 16, !dbg !3958
  %conv4.i = trunc i32 %shr3.i to i8, !dbg !3959
  %32 = load i8**, i8*** %b.addr.i34, align 8, !dbg !3960
  %33 = load i8*, i8** %32, align 8, !dbg !3961
  store i8 %conv4.i, i8* %33, align 1, !dbg !3962
  %34 = load i8**, i8*** %b.addr.i34, align 8, !dbg !3963
  %35 = load i8*, i8** %34, align 8, !dbg !3965
  %add.ptr.i37 = getelementptr inbounds i8, i8* %35, i64 3, !dbg !3965
  store i8* %add.ptr.i37, i8** %34, align 8, !dbg !3965
  store i8** %p, i8*** %b.addr.i121, align 8, !dbg !3966
  store i32 0, i32* %value.addr.i122, align 4, !dbg !3966
  %36 = load i32, i32* %value.addr.i122, align 4, !dbg !3967
  %conv.i123 = trunc i32 %36 to i8, !dbg !3968
  %37 = load i8**, i8*** %b.addr.i121, align 8, !dbg !3969
  %38 = load i8*, i8** %37, align 8, !dbg !3970
  %arrayidx.i124 = getelementptr inbounds i8, i8* %38, i64 2, !dbg !3971
  store i8 %conv.i123, i8* %arrayidx.i124, align 1, !dbg !3972
  %39 = load i32, i32* %value.addr.i122, align 4, !dbg !3973
  %shr.i125 = lshr i32 %39, 8, !dbg !3974
  %conv1.i126 = trunc i32 %shr.i125 to i8, !dbg !3975
  %40 = load i8**, i8*** %b.addr.i121, align 8, !dbg !3976
  %41 = load i8*, i8** %40, align 8, !dbg !3977
  %arrayidx2.i127 = getelementptr inbounds i8, i8* %41, i64 1, !dbg !3978
  store i8 %conv1.i126, i8* %arrayidx2.i127, align 1, !dbg !3979
  %42 = load i32, i32* %value.addr.i122, align 4, !dbg !3980
  %shr3.i128 = lshr i32 %42, 16, !dbg !3981
  %conv4.i129 = trunc i32 %shr3.i128 to i8, !dbg !3982
  %43 = load i8**, i8*** %b.addr.i121, align 8, !dbg !3983
  %44 = load i8*, i8** %43, align 8, !dbg !3984
  store i8 %conv4.i129, i8* %44, align 1, !dbg !3985
  %45 = load i8**, i8*** %b.addr.i121, align 8, !dbg !3986
  %46 = load i8*, i8** %45, align 8, !dbg !3987
  %add.ptr.i130 = getelementptr inbounds i8, i8* %46, i64 3, !dbg !3987
  store i8* %add.ptr.i130, i8** %45, align 8, !dbg !3987
  store i8** %p, i8*** %b.addr.i103, align 8, !dbg !3988
  store i32 0, i32* %value.addr.i104, align 4, !dbg !3988
  %47 = load i32, i32* %value.addr.i104, align 4, !dbg !3989
  store i32 %47, i32* %x.addr.i.i102, align 4, !dbg !3990
  %48 = load i32, i32* %x.addr.i.i102, align 4, !dbg !3991
  %shl.i.i105 = shl i32 %48, 8, !dbg !3992
  %and.i.i106 = and i32 %shl.i.i105, 65280, !dbg !3993
  %49 = load i32, i32* %x.addr.i.i102, align 4, !dbg !3994
  %shr.i.i107 = lshr i32 %49, 8, !dbg !3995
  %and1.i.i108 = and i32 %shr.i.i107, 255, !dbg !3996
  %or.i.i109 = or i32 %and.i.i106, %and1.i.i108, !dbg !3997
  %shl2.i.i110 = shl i32 %or.i.i109, 16, !dbg !3998
  %50 = load i32, i32* %x.addr.i.i102, align 4, !dbg !3999
  %shr3.i.i111 = lshr i32 %50, 16, !dbg !4000
  %shl4.i.i112 = shl i32 %shr3.i.i111, 8, !dbg !4001
  %and5.i.i113 = and i32 %shl4.i.i112, 65280, !dbg !4002
  %51 = load i32, i32* %x.addr.i.i102, align 4, !dbg !4003
  %shr6.i.i114 = lshr i32 %51, 16, !dbg !4004
  %shr7.i.i115 = lshr i32 %shr6.i.i114, 8, !dbg !4005
  %and8.i.i116 = and i32 %shr7.i.i115, 255, !dbg !4006
  %or9.i.i117 = or i32 %and5.i.i113, %and8.i.i116, !dbg !4007
  %or10.i.i118 = or i32 %shl2.i.i110, %or9.i.i117, !dbg !4008
  %52 = load i8**, i8*** %b.addr.i103, align 8, !dbg !4009
  %53 = load i8*, i8** %52, align 8, !dbg !4010
  %54 = bitcast i8* %53 to %union.unaligned_32*, !dbg !4011
  %l.i119 = bitcast %union.unaligned_32* %54 to i32*, !dbg !4011
  store i32 %or10.i.i118, i32* %l.i119, align 1, !dbg !4012
  %55 = load i8**, i8*** %b.addr.i103, align 8, !dbg !4013
  %56 = load i8*, i8** %55, align 8, !dbg !4014
  %add.ptr.i120 = getelementptr inbounds i8, i8* %56, i64 4, !dbg !4014
  store i8* %add.ptr.i120, i8** %55, align 8, !dbg !4014
  store i8** %p, i8*** %b.addr.i98, align 8, !dbg !4015
  store i32 2, i32* %value.addr.i99, align 4, !dbg !4015
  %57 = load i32, i32* %value.addr.i99, align 4, !dbg !4016
  %conv.i100 = trunc i32 %57 to i8, !dbg !4017
  %58 = load i8**, i8*** %b.addr.i98, align 8, !dbg !4018
  %59 = load i8*, i8** %58, align 8, !dbg !4019
  store i8 %conv.i100, i8* %59, align 1, !dbg !4020
  %60 = load i8**, i8*** %b.addr.i98, align 8, !dbg !4021
  %61 = load i8*, i8** %60, align 8, !dbg !4022
  %add.ptr.i101 = getelementptr inbounds i8, i8* %61, i64 1, !dbg !4022
  store i8* %add.ptr.i101, i8** %60, align 8, !dbg !4022
  store i8** %p, i8*** %b.addr.i87, align 8, !dbg !4023
  store i32 10, i32* %value.addr.i88, align 4, !dbg !4023
  %62 = load i32, i32* %value.addr.i88, align 4, !dbg !4024
  %conv.i89 = trunc i32 %62 to i16, !dbg !4024
  store i16 %conv.i89, i16* %x.addr.i.i86, align 2, !dbg !4025
  %63 = load i16, i16* %x.addr.i.i86, align 2, !dbg !4026
  %conv.i.i90 = zext i16 %63 to i32, !dbg !4026
  %shr.i.i91 = ashr i32 %conv.i.i90, 8, !dbg !4027
  %64 = load i16, i16* %x.addr.i.i86, align 2, !dbg !4028
  %conv1.i.i92 = zext i16 %64 to i32, !dbg !4028
  %shl.i.i93 = shl i32 %conv1.i.i92, 8, !dbg !4029
  %or.i.i94 = or i32 %shr.i.i91, %shl.i.i93, !dbg !4030
  %conv2.i.i95 = trunc i32 %or.i.i94 to i16, !dbg !4031
  store i16 %conv2.i.i95, i16* %x.addr.i.i86, align 2, !dbg !4032
  %65 = load i16, i16* %x.addr.i.i86, align 2, !dbg !4033
  %66 = load i8**, i8*** %b.addr.i87, align 8, !dbg !4034
  %67 = load i8*, i8** %66, align 8, !dbg !4035
  %68 = bitcast i8* %67 to %union.unaligned_16*, !dbg !4036
  %l.i96 = bitcast %union.unaligned_16* %68 to i16*, !dbg !4036
  store i16 %65, i16* %l.i96, align 1, !dbg !4037
  %69 = load i8**, i8*** %b.addr.i87, align 8, !dbg !4038
  %70 = load i8*, i8** %69, align 8, !dbg !4039
  %add.ptr.i97 = getelementptr inbounds i8, i8* %70, i64 2, !dbg !4039
  store i8* %add.ptr.i97, i8** %69, align 8, !dbg !4039
  store i8** %p, i8*** %b.addr.i80, align 8, !dbg !4040
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.174, i32 0, i32 0), i8** %src.addr.i81, align 8, !dbg !4040
  store i32 10, i32* %size.addr.i82, align 4, !dbg !4040
  %71 = load i8**, i8*** %b.addr.i80, align 8, !dbg !4041
  %72 = load i8*, i8** %71, align 8, !dbg !4042
  %73 = load i8*, i8** %src.addr.i81, align 8, !dbg !4043
  %74 = load i32, i32* %size.addr.i82, align 4, !dbg !4044
  %conv.i83 = zext i32 %74 to i64, !dbg !4044
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 %conv.i83, i32 1, i1 false) #10, !dbg !4045
  %75 = load i32, i32* %size.addr.i82, align 4, !dbg !4046
  %76 = load i8**, i8*** %b.addr.i80, align 8, !dbg !4047
  %77 = load i8*, i8** %76, align 8, !dbg !4048
  %idx.ext.i84 = zext i32 %75 to i64, !dbg !4048
  %add.ptr.i85 = getelementptr inbounds i8, i8* %77, i64 %idx.ext.i84, !dbg !4048
  store i8* %add.ptr.i85, i8** %76, align 8, !dbg !4048
  store i8** %p, i8*** %b.addr.i76, align 8, !dbg !4049
  store i32 8, i32* %value.addr.i77, align 4, !dbg !4049
  %78 = load i32, i32* %value.addr.i77, align 4, !dbg !4050
  %conv.i78 = trunc i32 %78 to i8, !dbg !4051
  %79 = load i8**, i8*** %b.addr.i76, align 8, !dbg !4052
  %80 = load i8*, i8** %79, align 8, !dbg !4053
  store i8 %conv.i78, i8* %80, align 1, !dbg !4054
  %81 = load i8**, i8*** %b.addr.i76, align 8, !dbg !4055
  %82 = load i8*, i8** %81, align 8, !dbg !4056
  %add.ptr.i79 = getelementptr inbounds i8, i8* %82, i64 1, !dbg !4056
  store i8* %add.ptr.i79, i8** %81, align 8, !dbg !4056
  store i8** %p, i8*** %b.addr.i58, align 8, !dbg !4057
  store i32 1, i32* %value.addr.i59, align 4, !dbg !4057
  %83 = load i32, i32* %value.addr.i59, align 4, !dbg !4058
  store i32 %83, i32* %x.addr.i.i57, align 4, !dbg !4059
  %84 = load i32, i32* %x.addr.i.i57, align 4, !dbg !4060
  %shl.i.i60 = shl i32 %84, 8, !dbg !4061
  %and.i.i61 = and i32 %shl.i.i60, 65280, !dbg !4062
  %85 = load i32, i32* %x.addr.i.i57, align 4, !dbg !4063
  %shr.i.i62 = lshr i32 %85, 8, !dbg !4064
  %and1.i.i63 = and i32 %shr.i.i62, 255, !dbg !4065
  %or.i.i64 = or i32 %and.i.i61, %and1.i.i63, !dbg !4066
  %shl2.i.i65 = shl i32 %or.i.i64, 16, !dbg !4067
  %86 = load i32, i32* %x.addr.i.i57, align 4, !dbg !4068
  %shr3.i.i66 = lshr i32 %86, 16, !dbg !4069
  %shl4.i.i67 = shl i32 %shr3.i.i66, 8, !dbg !4070
  %and5.i.i68 = and i32 %shl4.i.i67, 65280, !dbg !4071
  %87 = load i32, i32* %x.addr.i.i57, align 4, !dbg !4072
  %shr6.i.i69 = lshr i32 %87, 16, !dbg !4073
  %shr7.i.i70 = lshr i32 %shr6.i.i69, 8, !dbg !4074
  %and8.i.i71 = and i32 %shr7.i.i70, 255, !dbg !4075
  %or9.i.i72 = or i32 %and5.i.i68, %and8.i.i71, !dbg !4076
  %or10.i.i73 = or i32 %shl2.i.i65, %or9.i.i72, !dbg !4077
  %88 = load i8**, i8*** %b.addr.i58, align 8, !dbg !4078
  %89 = load i8*, i8** %88, align 8, !dbg !4079
  %90 = bitcast i8* %89 to %union.unaligned_32*, !dbg !4080
  %l.i74 = bitcast %union.unaligned_32* %90 to i32*, !dbg !4080
  store i32 %or10.i.i73, i32* %l.i74, align 1, !dbg !4081
  %91 = load i8**, i8*** %b.addr.i58, align 8, !dbg !4082
  %92 = load i8*, i8** %91, align 8, !dbg !4083
  %add.ptr.i75 = getelementptr inbounds i8, i8* %92, i64 4, !dbg !4083
  store i8* %add.ptr.i75, i8** %91, align 8, !dbg !4083
  store i8** %p, i8*** %b.addr.i46, align 8, !dbg !4084
  store i32 8, i32* %value.addr.i47, align 4, !dbg !4084
  %93 = load i32, i32* %value.addr.i47, align 4, !dbg !4085
  %conv.i48 = trunc i32 %93 to i16, !dbg !4085
  store i16 %conv.i48, i16* %x.addr.i.i45, align 2, !dbg !4086
  %94 = load i16, i16* %x.addr.i.i45, align 2, !dbg !4087
  %conv.i.i49 = zext i16 %94 to i32, !dbg !4087
  %shr.i.i50 = ashr i32 %conv.i.i49, 8, !dbg !4088
  %95 = load i16, i16* %x.addr.i.i45, align 2, !dbg !4089
  %conv1.i.i51 = zext i16 %95 to i32, !dbg !4089
  %shl.i.i52 = shl i32 %conv1.i.i51, 8, !dbg !4090
  %or.i.i53 = or i32 %shr.i.i50, %shl.i.i52, !dbg !4091
  %conv2.i.i54 = trunc i32 %or.i.i53 to i16, !dbg !4092
  store i16 %conv2.i.i54, i16* %x.addr.i.i45, align 2, !dbg !4093
  %96 = load i16, i16* %x.addr.i.i45, align 2, !dbg !4094
  %97 = load i8**, i8*** %b.addr.i46, align 8, !dbg !4095
  %98 = load i8*, i8** %97, align 8, !dbg !4096
  %99 = bitcast i8* %98 to %union.unaligned_16*, !dbg !4097
  %l.i55 = bitcast %union.unaligned_16* %99 to i16*, !dbg !4097
  store i16 %96, i16* %l.i55, align 1, !dbg !4098
  %100 = load i8**, i8*** %b.addr.i46, align 8, !dbg !4099
  %101 = load i8*, i8** %100, align 8, !dbg !4100
  %add.ptr.i56 = getelementptr inbounds i8, i8* %101, i64 2, !dbg !4100
  store i8* %add.ptr.i56, i8** %100, align 8, !dbg !4100
  store i8** %p, i8*** %b.addr.i42, align 8, !dbg !4101
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.179, i32 0, i32 0), i8** %src.addr.i, align 8, !dbg !4101
  store i32 8, i32* %size.addr.i, align 4, !dbg !4101
  %102 = load i8**, i8*** %b.addr.i42, align 8, !dbg !4102
  %103 = load i8*, i8** %102, align 8, !dbg !4103
  %104 = load i8*, i8** %src.addr.i, align 8, !dbg !4104
  %105 = load i32, i32* %size.addr.i, align 4, !dbg !4105
  %conv.i43 = zext i32 %105 to i64, !dbg !4105
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 %conv.i43, i32 1, i1 false) #10, !dbg !4106
  %106 = load i32, i32* %size.addr.i, align 4, !dbg !4107
  %107 = load i8**, i8*** %b.addr.i42, align 8, !dbg !4108
  %108 = load i8*, i8** %107, align 8, !dbg !4109
  %idx.ext.i = zext i32 %106 to i64, !dbg !4109
  %add.ptr.i44 = getelementptr inbounds i8, i8* %108, i64 %idx.ext.i, !dbg !4109
  store i8* %add.ptr.i44, i8** %107, align 8, !dbg !4109
  store i8** %p, i8*** %b.addr.i38, align 8, !dbg !4110
  store i32 0, i32* %value.addr.i39, align 4, !dbg !4110
  %109 = load i32, i32* %value.addr.i39, align 4, !dbg !4111
  %conv.i40 = trunc i32 %109 to i8, !dbg !4112
  %110 = load i8**, i8*** %b.addr.i38, align 8, !dbg !4113
  %111 = load i8*, i8** %110, align 8, !dbg !4114
  store i8 %conv.i40, i8* %111, align 1, !dbg !4115
  %112 = load i8**, i8*** %b.addr.i38, align 8, !dbg !4116
  %113 = load i8*, i8** %112, align 8, !dbg !4117
  %add.ptr.i41 = getelementptr inbounds i8, i8* %113, i64 1, !dbg !4117
  store i8* %add.ptr.i41, i8** %112, align 8, !dbg !4117
  %114 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4118
  %duration = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %114, i32 0, i32 49, !dbg !4119
  %115 = load double, double* %duration, align 8, !dbg !4119
  store double %115, double* %f.addr.i, align 8, !dbg !4120
  %116 = load double, double* %f.addr.i, align 8, !dbg !4121
  %f1.i = bitcast %union.av_intfloat64* %v.i to double*, !dbg !4122
  store double %116, double* %f1.i, align 8, !dbg !4123
  %i.i = bitcast %union.av_intfloat64* %v.i to i64*, !dbg !4124
  %117 = load i64, i64* %i.i, align 8, !dbg !4124
  store i8** %p, i8*** %b.addr.i30, align 8, !dbg !4125
  store i64 %117, i64* %value.addr.i31, align 8, !dbg !4125
  %118 = load i64, i64* %value.addr.i31, align 8, !dbg !4126
  %call.i = call i64 @av_bswap64(i64 %118) #1, !dbg !4127
  %119 = load i8**, i8*** %b.addr.i30, align 8, !dbg !4128
  %120 = load i8*, i8** %119, align 8, !dbg !4129
  %121 = bitcast i8* %120 to %union.unaligned_64*, !dbg !4130
  %l.i32 = bitcast %union.unaligned_64* %121 to i64*, !dbg !4130
  store i64 %call.i, i64* %l.i32, align 1, !dbg !4131
  %122 = load i8**, i8*** %b.addr.i30, align 8, !dbg !4132
  %123 = load i8*, i8** %122, align 8, !dbg !4133
  %add.ptr.i33 = getelementptr inbounds i8, i8* %123, i64 8, !dbg !4133
  store i8* %add.ptr.i33, i8** %122, align 8, !dbg !4133
  store i8** %p, i8*** %b.addr.i22, align 8, !dbg !4134
  store i32 0, i32* %value.addr.i23, align 4, !dbg !4134
  %124 = load i32, i32* %value.addr.i23, align 4, !dbg !4135
  %conv.i24 = trunc i32 %124 to i16, !dbg !4135
  store i16 %conv.i24, i16* %x.addr.i.i21, align 2, !dbg !4136
  %125 = load i16, i16* %x.addr.i.i21, align 2, !dbg !4137
  %conv.i.i = zext i16 %125 to i32, !dbg !4137
  %shr.i.i25 = ashr i32 %conv.i.i, 8, !dbg !4138
  %126 = load i16, i16* %x.addr.i.i21, align 2, !dbg !4139
  %conv1.i.i = zext i16 %126 to i32, !dbg !4139
  %shl.i.i26 = shl i32 %conv1.i.i, 8, !dbg !4140
  %or.i.i27 = or i32 %shr.i.i25, %shl.i.i26, !dbg !4141
  %conv2.i.i = trunc i32 %or.i.i27 to i16, !dbg !4142
  store i16 %conv2.i.i, i16* %x.addr.i.i21, align 2, !dbg !4143
  %127 = load i16, i16* %x.addr.i.i21, align 2, !dbg !4144
  %128 = load i8**, i8*** %b.addr.i22, align 8, !dbg !4145
  %129 = load i8*, i8** %128, align 8, !dbg !4146
  %130 = bitcast i8* %129 to %union.unaligned_16*, !dbg !4147
  %l.i28 = bitcast %union.unaligned_16* %130 to i16*, !dbg !4147
  store i16 %127, i16* %l.i28, align 1, !dbg !4148
  %131 = load i8**, i8*** %b.addr.i22, align 8, !dbg !4149
  %132 = load i8*, i8** %131, align 8, !dbg !4150
  %add.ptr.i29 = getelementptr inbounds i8, i8* %132, i64 2, !dbg !4150
  store i8* %add.ptr.i29, i8** %131, align 8, !dbg !4150
  store i8** %p, i8*** %b.addr.i17, align 8, !dbg !4151
  store i32 9, i32* %value.addr.i18, align 4, !dbg !4151
  %133 = load i32, i32* %value.addr.i18, align 4, !dbg !4152
  %conv.i19 = trunc i32 %133 to i8, !dbg !4153
  %134 = load i8**, i8*** %b.addr.i17, align 8, !dbg !4154
  %135 = load i8*, i8** %134, align 8, !dbg !4155
  store i8 %conv.i19, i8* %135, align 1, !dbg !4156
  %136 = load i8**, i8*** %b.addr.i17, align 8, !dbg !4157
  %137 = load i8*, i8** %136, align 8, !dbg !4158
  %add.ptr.i20 = getelementptr inbounds i8, i8* %137, i64 1, !dbg !4158
  store i8* %add.ptr.i20, i8** %136, align 8, !dbg !4158
  store i8** %p, i8*** %b.addr.i14, align 8, !dbg !4159
  store i32 51, i32* %value.addr.i15, align 4, !dbg !4159
  %138 = load i32, i32* %value.addr.i15, align 4, !dbg !4160
  store i32 %138, i32* %x.addr.i.i, align 4, !dbg !4161
  %139 = load i32, i32* %x.addr.i.i, align 4, !dbg !4162
  %shl.i.i = shl i32 %139, 8, !dbg !4163
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !4164
  %140 = load i32, i32* %x.addr.i.i, align 4, !dbg !4165
  %shr.i.i = lshr i32 %140, 8, !dbg !4166
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !4167
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !4168
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !4169
  %141 = load i32, i32* %x.addr.i.i, align 4, !dbg !4170
  %shr3.i.i = lshr i32 %141, 16, !dbg !4171
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !4172
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !4173
  %142 = load i32, i32* %x.addr.i.i, align 4, !dbg !4174
  %shr6.i.i = lshr i32 %142, 16, !dbg !4175
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !4176
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !4177
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !4178
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !4179
  %143 = load i8**, i8*** %b.addr.i14, align 8, !dbg !4180
  %144 = load i8*, i8** %143, align 8, !dbg !4181
  %145 = bitcast i8* %144 to %union.unaligned_32*, !dbg !4182
  %l.i = bitcast %union.unaligned_32* %145 to i32*, !dbg !4182
  store i32 %or10.i.i, i32* %l.i, align 1, !dbg !4183
  %146 = load i8**, i8*** %b.addr.i14, align 8, !dbg !4184
  %147 = load i8*, i8** %146, align 8, !dbg !4185
  %add.ptr.i16 = getelementptr inbounds i8, i8* %147, i64 4, !dbg !4185
  store i8* %add.ptr.i16, i8** %146, align 8, !dbg !4185
  store i32 0, i32* %retval, align 4, !dbg !4186
  br label %return, !dbg !4186

return:                                           ; preds = %if.end, %if.then
  %148 = load i32, i32* %retval, align 4, !dbg !4187
  ret i32 %148, !dbg !4187
}

declare void @av_dict_free(%struct.AVDictionary**) #2

declare i64 @ffurl_seek(%struct.URLContext*, i64, i32) #2

declare i32 @ffurl_read_complete(%struct.URLContext*, i8*, i32) #2

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_uncompress_swfplayer(i8* %in_data, i64 %in_size, i8** %out_data, i64* %out_size) #0 !dbg !4188 {
entry:
  %retval = alloca i32, align 4
  %in_data.addr = alloca i8*, align 8
  %in_size.addr = alloca i64, align 8
  %out_data.addr = alloca i8**, align 8
  %out_size.addr = alloca i64*, align 8
  %zs = alloca %struct.z_stream_s, align 8
  %ptr = alloca i8*, align 8
  %size = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp_buf = alloca [16384 x i8], align 16
  store i8* %in_data, i8** %in_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in_data.addr, metadata !4192, metadata !376), !dbg !4193
  store i64 %in_size, i64* %in_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %in_size.addr, metadata !4194, metadata !376), !dbg !4195
  store i8** %out_data, i8*** %out_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %out_data.addr, metadata !4196, metadata !376), !dbg !4197
  store i64* %out_size, i64** %out_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %out_size.addr, metadata !4198, metadata !376), !dbg !4199
  call void @llvm.dbg.declare(metadata %struct.z_stream_s* %zs, metadata !4200, metadata !376), !dbg !4238
  %0 = bitcast %struct.z_stream_s* %zs to i8*, !dbg !4238
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 112, i32 8, i1 false), !dbg !4238
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !4239, metadata !376), !dbg !4240
  call void @llvm.dbg.declare(metadata i32* %size, metadata !4241, metadata !376), !dbg !4242
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4243, metadata !376), !dbg !4244
  store i32 0, i32* %ret, align 4, !dbg !4244
  %1 = load i64, i64* %in_size.addr, align 8, !dbg !4245
  %conv = trunc i64 %1 to i32, !dbg !4245
  %avail_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zs, i32 0, i32 1, !dbg !4246
  store i32 %conv, i32* %avail_in, align 8, !dbg !4247
  %2 = load i8*, i8** %in_data.addr, align 8, !dbg !4248
  %next_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zs, i32 0, i32 0, !dbg !4249
  store i8* %2, i8** %next_in, align 8, !dbg !4250
  %call = call i32 @inflateInit_(%struct.z_stream_s* %zs, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0), i32 112), !dbg !4251
  store i32 %call, i32* %ret, align 4, !dbg !4252
  %3 = load i32, i32* %ret, align 4, !dbg !4253
  %cmp = icmp ne i32 %3, 0, !dbg !4255
  br i1 %cmp, label %if.then, label %if.end, !dbg !4256

if.then:                                          ; preds = %entry
  store i32 -1313558101, i32* %retval, align 4, !dbg !4257
  br label %return, !dbg !4257

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !4258, !llvm.loop !4259

do.body:                                          ; preds = %do.cond, %if.end
  call void @llvm.dbg.declare(metadata [16384 x i8]* %tmp_buf, metadata !4260, metadata !376), !dbg !4265
  %avail_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zs, i32 0, i32 4, !dbg !4266
  store i32 16384, i32* %avail_out, align 8, !dbg !4267
  %arraydecay = getelementptr inbounds [16384 x i8], [16384 x i8]* %tmp_buf, i32 0, i32 0, !dbg !4268
  %next_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zs, i32 0, i32 3, !dbg !4269
  store i8* %arraydecay, i8** %next_out, align 8, !dbg !4270
  %call2 = call i32 @inflate(%struct.z_stream_s* %zs, i32 0), !dbg !4271
  store i32 %call2, i32* %ret, align 4, !dbg !4272
  %4 = load i32, i32* %ret, align 4, !dbg !4273
  %cmp3 = icmp ne i32 %4, 0, !dbg !4275
  br i1 %cmp3, label %land.lhs.true, label %if.end8, !dbg !4276

land.lhs.true:                                    ; preds = %do.body
  %5 = load i32, i32* %ret, align 4, !dbg !4277
  %cmp5 = icmp ne i32 %5, 1, !dbg !4279
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4280

if.then7:                                         ; preds = %land.lhs.true
  store i32 -1313558101, i32* %ret, align 4, !dbg !4281
  br label %fail, !dbg !4283

if.end8:                                          ; preds = %land.lhs.true, %do.body
  %avail_out9 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zs, i32 0, i32 4, !dbg !4284
  %6 = load i32, i32* %avail_out9, align 8, !dbg !4284
  %conv10 = zext i32 %6 to i64, !dbg !4285
  %sub = sub i64 16384, %conv10, !dbg !4286
  %conv11 = trunc i64 %sub to i32, !dbg !4287
  store i32 %conv11, i32* %size, align 4, !dbg !4288
  %7 = load i8**, i8*** %out_data.addr, align 8, !dbg !4289
  %8 = load i8*, i8** %7, align 8, !dbg !4291
  %9 = load i64*, i64** %out_size.addr, align 8, !dbg !4292
  %10 = load i64, i64* %9, align 8, !dbg !4293
  %11 = load i32, i32* %size, align 4, !dbg !4294
  %conv12 = sext i32 %11 to i64, !dbg !4294
  %add = add nsw i64 %10, %conv12, !dbg !4295
  %call13 = call i8* @av_realloc(i8* %8, i64 %add), !dbg !4296
  store i8* %call13, i8** %ptr, align 8, !dbg !4297
  %tobool = icmp ne i8* %call13, null, !dbg !4297
  br i1 %tobool, label %if.end15, label %if.then14, !dbg !4298

if.then14:                                        ; preds = %if.end8
  store i32 -12, i32* %ret, align 4, !dbg !4299
  br label %fail, !dbg !4301

if.end15:                                         ; preds = %if.end8
  %12 = load i8*, i8** %ptr, align 8, !dbg !4302
  %13 = load i8**, i8*** %out_data.addr, align 8, !dbg !4303
  store i8* %12, i8** %13, align 8, !dbg !4304
  %14 = load i8**, i8*** %out_data.addr, align 8, !dbg !4305
  %15 = load i8*, i8** %14, align 8, !dbg !4306
  %16 = load i64*, i64** %out_size.addr, align 8, !dbg !4307
  %17 = load i64, i64* %16, align 8, !dbg !4308
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %17, !dbg !4309
  %arraydecay16 = getelementptr inbounds [16384 x i8], [16384 x i8]* %tmp_buf, i32 0, i32 0, !dbg !4310
  %18 = load i32, i32* %size, align 4, !dbg !4311
  %conv17 = sext i32 %18 to i64, !dbg !4311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %arraydecay16, i64 %conv17, i32 1, i1 false), !dbg !4310
  %19 = load i32, i32* %size, align 4, !dbg !4312
  %conv18 = sext i32 %19 to i64, !dbg !4312
  %20 = load i64*, i64** %out_size.addr, align 8, !dbg !4313
  %21 = load i64, i64* %20, align 8, !dbg !4314
  %add19 = add nsw i64 %21, %conv18, !dbg !4314
  store i64 %add19, i64* %20, align 8, !dbg !4314
  br label %do.cond, !dbg !4315

do.cond:                                          ; preds = %if.end15
  %avail_out20 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zs, i32 0, i32 4, !dbg !4316
  %22 = load i32, i32* %avail_out20, align 8, !dbg !4316
  %cmp21 = icmp eq i32 %22, 0, !dbg !4318
  br i1 %cmp21, label %do.body, label %do.end, !dbg !4319, !llvm.loop !4259

do.end:                                           ; preds = %do.cond
  br label %fail, !dbg !4320

fail:                                             ; preds = %do.end, %if.then14, %if.then7
  %call23 = call i32 @inflateEnd(%struct.z_stream_s* %zs), !dbg !4322
  %23 = load i32, i32* %ret, align 4, !dbg !4323
  store i32 %23, i32* %retval, align 4, !dbg !4324
  br label %return, !dbg !4324

return:                                           ; preds = %fail, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !4325
  ret i32 %24, !dbg !4325
}

declare i32 @ff_rtmp_calc_digest(i8*, i32, i32, i8*, i32, i8*) #2

declare i32 @av_opt_set_bin(i8*, i8*, i8*, i32, i32) #2

declare void @av_freep(i8*) #2

declare i32 @inflateInit_(%struct.z_stream_s*, i8*, i32) #2

declare i32 @inflate(%struct.z_stream_s*, i32) #2

declare i8* @av_realloc(i8*, i64) #2

declare i32 @inflateEnd(%struct.z_stream_s*) #2

declare void @av_lfg_init(%struct.AVLFG*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @av_lfg_get(%struct.AVLFG* %c) #6 !dbg !4326 {
entry:
  %c.addr = alloca %struct.AVLFG*, align 8
  store %struct.AVLFG* %c, %struct.AVLFG** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVLFG** %c.addr, metadata !4330, metadata !376), !dbg !4331
  %0 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4332
  %index = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i32 0, i32 1, !dbg !4333
  %1 = load i32, i32* %index, align 4, !dbg !4333
  %sub = sub nsw i32 %1, 24, !dbg !4334
  %and = and i32 %sub, 63, !dbg !4335
  %idxprom = sext i32 %and to i64, !dbg !4336
  %2 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4336
  %state = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %2, i32 0, i32 0, !dbg !4337
  %arrayidx = getelementptr inbounds [64 x i32], [64 x i32]* %state, i64 0, i64 %idxprom, !dbg !4336
  %3 = load i32, i32* %arrayidx, align 4, !dbg !4336
  %4 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4338
  %index1 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %4, i32 0, i32 1, !dbg !4339
  %5 = load i32, i32* %index1, align 4, !dbg !4339
  %sub2 = sub nsw i32 %5, 55, !dbg !4340
  %and3 = and i32 %sub2, 63, !dbg !4341
  %idxprom4 = sext i32 %and3 to i64, !dbg !4342
  %6 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4342
  %state5 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %6, i32 0, i32 0, !dbg !4343
  %arrayidx6 = getelementptr inbounds [64 x i32], [64 x i32]* %state5, i64 0, i64 %idxprom4, !dbg !4342
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !4342
  %add = add i32 %3, %7, !dbg !4344
  %8 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4345
  %index7 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %8, i32 0, i32 1, !dbg !4346
  %9 = load i32, i32* %index7, align 4, !dbg !4346
  %and8 = and i32 %9, 63, !dbg !4347
  %idxprom9 = sext i32 %and8 to i64, !dbg !4348
  %10 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4348
  %state10 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %10, i32 0, i32 0, !dbg !4349
  %arrayidx11 = getelementptr inbounds [64 x i32], [64 x i32]* %state10, i64 0, i64 %idxprom9, !dbg !4348
  store i32 %add, i32* %arrayidx11, align 4, !dbg !4350
  %11 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4351
  %index12 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %11, i32 0, i32 1, !dbg !4352
  %12 = load i32, i32* %index12, align 4, !dbg !4353
  %inc = add nsw i32 %12, 1, !dbg !4353
  store i32 %inc, i32* %index12, align 4, !dbg !4353
  %and13 = and i32 %12, 63, !dbg !4354
  %idxprom14 = sext i32 %and13 to i64, !dbg !4355
  %13 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !4355
  %state15 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %13, i32 0, i32 0, !dbg !4356
  %arrayidx16 = getelementptr inbounds [64 x i32], [64 x i32]* %state15, i64 0, i64 %idxprom14, !dbg !4355
  %14 = load i32, i32* %arrayidx16, align 4, !dbg !4355
  ret i32 %14, !dbg !4357
}

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_handshake_imprint_with_digest(i8* %buf, i32 %encrypted) #0 !dbg !4358 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %encrypted.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %digest_pos = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4361, metadata !376), !dbg !4362
  store i32 %encrypted, i32* %encrypted.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %encrypted.addr, metadata !4363, metadata !376), !dbg !4364
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4365, metadata !376), !dbg !4366
  call void @llvm.dbg.declare(metadata i32* %digest_pos, metadata !4367, metadata !376), !dbg !4368
  %0 = load i32, i32* %encrypted.addr, align 4, !dbg !4369
  %tobool = icmp ne i32 %0, 0, !dbg !4369
  br i1 %tobool, label %if.then, label %if.else, !dbg !4371

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !4372
  %call = call i32 @ff_rtmp_calc_digest_pos(i8* %1, i32 772, i32 728, i32 776), !dbg !4373
  store i32 %call, i32* %digest_pos, align 4, !dbg !4374
  br label %if.end, !dbg !4375

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !4376
  %call1 = call i32 @ff_rtmp_calc_digest_pos(i8* %2, i32 8, i32 728, i32 12), !dbg !4377
  store i32 %call1, i32* %digest_pos, align 4, !dbg !4378
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !4379
  %4 = load i32, i32* %digest_pos, align 4, !dbg !4380
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !4381
  %6 = load i32, i32* %digest_pos, align 4, !dbg !4382
  %idx.ext = sext i32 %6 to i64, !dbg !4383
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !4383
  %call2 = call i32 @ff_rtmp_calc_digest(i8* %3, i32 1536, i32 %4, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @rtmp_player_key, i32 0, i32 0), i32 30, i8* %add.ptr), !dbg !4384
  store i32 %call2, i32* %ret, align 4, !dbg !4385
  %7 = load i32, i32* %ret, align 4, !dbg !4386
  %cmp = icmp slt i32 %7, 0, !dbg !4388
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !4389

if.then3:                                         ; preds = %if.end
  %8 = load i32, i32* %ret, align 4, !dbg !4390
  store i32 %8, i32* %retval, align 4, !dbg !4391
  br label %return, !dbg !4391

if.end4:                                          ; preds = %if.end
  %9 = load i32, i32* %digest_pos, align 4, !dbg !4392
  store i32 %9, i32* %retval, align 4, !dbg !4393
  br label %return, !dbg !4393

return:                                           ; preds = %if.end4, %if.then3
  %10 = load i32, i32* %retval, align 4, !dbg !4394
  ret i32 %10, !dbg !4394
}

declare i32 @ffurl_write(%struct.URLContext*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_validate_digest(i8* %buf, i32 %off) #0 !dbg !4395 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %off.addr = alloca i32, align 4
  %digest = alloca [32 x i8], align 16
  %ret = alloca i32, align 4
  %digest_pos = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4396, metadata !376), !dbg !4397
  store i32 %off, i32* %off.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %off.addr, metadata !4398, metadata !376), !dbg !4399
  call void @llvm.dbg.declare(metadata [32 x i8]* %digest, metadata !4400, metadata !376), !dbg !4401
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4402, metadata !376), !dbg !4403
  call void @llvm.dbg.declare(metadata i32* %digest_pos, metadata !4404, metadata !376), !dbg !4405
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !4406
  %1 = load i32, i32* %off.addr, align 4, !dbg !4407
  %2 = load i32, i32* %off.addr, align 4, !dbg !4408
  %add = add nsw i32 %2, 4, !dbg !4409
  %call = call i32 @ff_rtmp_calc_digest_pos(i8* %0, i32 %1, i32 728, i32 %add), !dbg !4410
  store i32 %call, i32* %digest_pos, align 4, !dbg !4411
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !4412
  %4 = load i32, i32* %digest_pos, align 4, !dbg !4413
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %digest, i32 0, i32 0, !dbg !4414
  %call1 = call i32 @ff_rtmp_calc_digest(i8* %3, i32 1536, i32 %4, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @rtmp_server_key, i32 0, i32 0), i32 36, i8* %arraydecay), !dbg !4415
  store i32 %call1, i32* %ret, align 4, !dbg !4416
  %5 = load i32, i32* %ret, align 4, !dbg !4417
  %cmp = icmp slt i32 %5, 0, !dbg !4419
  br i1 %cmp, label %if.then, label %if.end, !dbg !4420

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %ret, align 4, !dbg !4421
  store i32 %6, i32* %retval, align 4, !dbg !4422
  br label %return, !dbg !4422

if.end:                                           ; preds = %entry
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %digest, i32 0, i32 0, !dbg !4423
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !4425
  %8 = load i32, i32* %digest_pos, align 4, !dbg !4426
  %idx.ext = sext i32 %8 to i64, !dbg !4427
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %idx.ext, !dbg !4427
  %call3 = call i32 @memcmp(i8* %arraydecay2, i8* %add.ptr, i64 32) #9, !dbg !4428
  %tobool = icmp ne i32 %call3, 0, !dbg !4428
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !4429

if.then4:                                         ; preds = %if.end
  %9 = load i32, i32* %digest_pos, align 4, !dbg !4430
  store i32 %9, i32* %retval, align 4, !dbg !4431
  br label %return, !dbg !4431

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4432
  br label %return, !dbg !4432

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4433
  ret i32 %10, !dbg !4433
}

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_calc_swf_verification(%struct.URLContext* %s, %struct.RTMPContext* %rt, i8* %buf) #0 !dbg !4434 {
entry:
  %b.addr.i27 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i27, metadata !2964, metadata !376), !dbg !4437
  %value.addr.i28 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i28, metadata !2968, metadata !376), !dbg !4439
  %x.addr.i.i8 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i8, metadata !2616, metadata !376), !dbg !4440
  %b.addr.i9 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i9, metadata !2960, metadata !376), !dbg !4443
  %value.addr.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i10, metadata !2962, metadata !376), !dbg !4444
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2616, metadata !376), !dbg !4445
  %b.addr.i5 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i5, metadata !2960, metadata !376), !dbg !4448
  %value.addr.i6 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i6, metadata !2962, metadata !376), !dbg !4449
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !2964, metadata !376), !dbg !4450
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !2968, metadata !376), !dbg !4452
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %buf.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !4453, metadata !376), !dbg !4454
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !4455, metadata !376), !dbg !4456
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4457, metadata !376), !dbg !4458
  call void @llvm.dbg.declare(metadata i8** %p, metadata !4459, metadata !376), !dbg !4460
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4461, metadata !376), !dbg !4462
  %0 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4463
  %swfhash_len = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %0, i32 0, i32 32, !dbg !4465
  %1 = load i32, i32* %swfhash_len, align 8, !dbg !4465
  %cmp = icmp ne i32 %1, 32, !dbg !4466
  br i1 %cmp, label %if.then, label %if.end, !dbg !4467

if.then:                                          ; preds = %entry
  %2 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !4468
  %3 = bitcast %struct.URLContext* %2 to i8*, !dbg !4468
  call void (i8*, i32, i8*, ...) @av_log(i8* %3, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.43, i32 0, i32 0)), !dbg !4470
  store i32 -22, i32* %retval, align 4, !dbg !4471
  br label %return, !dbg !4471

if.end:                                           ; preds = %entry
  %4 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4472
  %swfverification = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %4, i32 0, i32 36, !dbg !4473
  %arrayidx = getelementptr inbounds [42 x i8], [42 x i8]* %swfverification, i64 0, i64 0, !dbg !4472
  store i8* %arrayidx, i8** %p, align 8, !dbg !4474
  store i8** %p, i8*** %b.addr.i, align 8, !dbg !4475
  store i32 1, i32* %value.addr.i, align 4, !dbg !4475
  %5 = load i32, i32* %value.addr.i, align 4, !dbg !4476
  %conv.i = trunc i32 %5 to i8, !dbg !4477
  %6 = load i8**, i8*** %b.addr.i, align 8, !dbg !4478
  %7 = load i8*, i8** %6, align 8, !dbg !4479
  store i8 %conv.i, i8* %7, align 1, !dbg !4480
  %8 = load i8**, i8*** %b.addr.i, align 8, !dbg !4481
  %9 = load i8*, i8** %8, align 8, !dbg !4482
  %add.ptr.i = getelementptr inbounds i8, i8* %9, i64 1, !dbg !4482
  store i8* %add.ptr.i, i8** %8, align 8, !dbg !4482
  store i8** %p, i8*** %b.addr.i27, align 8, !dbg !4483
  store i32 1, i32* %value.addr.i28, align 4, !dbg !4483
  %10 = load i32, i32* %value.addr.i28, align 4, !dbg !4484
  %conv.i29 = trunc i32 %10 to i8, !dbg !4485
  %11 = load i8**, i8*** %b.addr.i27, align 8, !dbg !4486
  %12 = load i8*, i8** %11, align 8, !dbg !4487
  store i8 %conv.i29, i8* %12, align 1, !dbg !4488
  %13 = load i8**, i8*** %b.addr.i27, align 8, !dbg !4489
  %14 = load i8*, i8** %13, align 8, !dbg !4490
  %add.ptr.i30 = getelementptr inbounds i8, i8* %14, i64 1, !dbg !4490
  store i8* %add.ptr.i30, i8** %13, align 8, !dbg !4490
  %15 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4491
  %swfsize = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %15, i32 0, i32 33, !dbg !4492
  %16 = load i32, i32* %swfsize, align 4, !dbg !4492
  store i8** %p, i8*** %b.addr.i9, align 8, !dbg !4493
  store i32 %16, i32* %value.addr.i10, align 4, !dbg !4493
  %17 = load i32, i32* %value.addr.i10, align 4, !dbg !4494
  store i32 %17, i32* %x.addr.i.i8, align 4, !dbg !4495
  %18 = load i32, i32* %x.addr.i.i8, align 4, !dbg !4496
  %shl.i.i11 = shl i32 %18, 8, !dbg !4497
  %and.i.i12 = and i32 %shl.i.i11, 65280, !dbg !4498
  %19 = load i32, i32* %x.addr.i.i8, align 4, !dbg !4499
  %shr.i.i13 = lshr i32 %19, 8, !dbg !4500
  %and1.i.i14 = and i32 %shr.i.i13, 255, !dbg !4501
  %or.i.i15 = or i32 %and.i.i12, %and1.i.i14, !dbg !4502
  %shl2.i.i16 = shl i32 %or.i.i15, 16, !dbg !4503
  %20 = load i32, i32* %x.addr.i.i8, align 4, !dbg !4504
  %shr3.i.i17 = lshr i32 %20, 16, !dbg !4505
  %shl4.i.i18 = shl i32 %shr3.i.i17, 8, !dbg !4506
  %and5.i.i19 = and i32 %shl4.i.i18, 65280, !dbg !4507
  %21 = load i32, i32* %x.addr.i.i8, align 4, !dbg !4508
  %shr6.i.i20 = lshr i32 %21, 16, !dbg !4509
  %shr7.i.i21 = lshr i32 %shr6.i.i20, 8, !dbg !4510
  %and8.i.i22 = and i32 %shr7.i.i21, 255, !dbg !4511
  %or9.i.i23 = or i32 %and5.i.i19, %and8.i.i22, !dbg !4512
  %or10.i.i24 = or i32 %shl2.i.i16, %or9.i.i23, !dbg !4513
  %22 = load i8**, i8*** %b.addr.i9, align 8, !dbg !4514
  %23 = load i8*, i8** %22, align 8, !dbg !4515
  %24 = bitcast i8* %23 to %union.unaligned_32*, !dbg !4516
  %l.i25 = bitcast %union.unaligned_32* %24 to i32*, !dbg !4516
  store i32 %or10.i.i24, i32* %l.i25, align 1, !dbg !4517
  %25 = load i8**, i8*** %b.addr.i9, align 8, !dbg !4518
  %26 = load i8*, i8** %25, align 8, !dbg !4519
  %add.ptr.i26 = getelementptr inbounds i8, i8* %26, i64 4, !dbg !4519
  store i8* %add.ptr.i26, i8** %25, align 8, !dbg !4519
  %27 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4520
  %swfsize1 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %27, i32 0, i32 33, !dbg !4521
  %28 = load i32, i32* %swfsize1, align 4, !dbg !4521
  store i8** %p, i8*** %b.addr.i5, align 8, !dbg !4522
  store i32 %28, i32* %value.addr.i6, align 4, !dbg !4522
  %29 = load i32, i32* %value.addr.i6, align 4, !dbg !4523
  store i32 %29, i32* %x.addr.i.i, align 4, !dbg !4524
  %30 = load i32, i32* %x.addr.i.i, align 4, !dbg !4525
  %shl.i.i = shl i32 %30, 8, !dbg !4526
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !4527
  %31 = load i32, i32* %x.addr.i.i, align 4, !dbg !4528
  %shr.i.i = lshr i32 %31, 8, !dbg !4529
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !4530
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !4531
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !4532
  %32 = load i32, i32* %x.addr.i.i, align 4, !dbg !4533
  %shr3.i.i = lshr i32 %32, 16, !dbg !4534
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !4535
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !4536
  %33 = load i32, i32* %x.addr.i.i, align 4, !dbg !4537
  %shr6.i.i = lshr i32 %33, 16, !dbg !4538
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !4539
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !4540
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !4541
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !4542
  %34 = load i8**, i8*** %b.addr.i5, align 8, !dbg !4543
  %35 = load i8*, i8** %34, align 8, !dbg !4544
  %36 = bitcast i8* %35 to %union.unaligned_32*, !dbg !4545
  %l.i = bitcast %union.unaligned_32* %36 to i32*, !dbg !4545
  store i32 %or10.i.i, i32* %l.i, align 1, !dbg !4546
  %37 = load i8**, i8*** %b.addr.i5, align 8, !dbg !4547
  %38 = load i8*, i8** %37, align 8, !dbg !4548
  %add.ptr.i7 = getelementptr inbounds i8, i8* %38, i64 4, !dbg !4548
  store i8* %add.ptr.i7, i8** %37, align 8, !dbg !4548
  %39 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4549
  %swfhash = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %39, i32 0, i32 31, !dbg !4551
  %40 = load i8*, i8** %swfhash, align 8, !dbg !4551
  %41 = load i8*, i8** %buf.addr, align 8, !dbg !4552
  %42 = load i8*, i8** %p, align 8, !dbg !4553
  %call = call i32 @ff_rtmp_calc_digest(i8* %40, i32 32, i32 0, i8* %41, i32 32, i8* %42), !dbg !4554
  store i32 %call, i32* %ret, align 4, !dbg !4555
  %cmp2 = icmp slt i32 %call, 0, !dbg !4556
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !4557

if.then3:                                         ; preds = %if.end
  %43 = load i32, i32* %ret, align 4, !dbg !4558
  store i32 %43, i32* %retval, align 4, !dbg !4559
  br label %return, !dbg !4559

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4560
  br label %return, !dbg !4560

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !4561
  ret i32 %44, !dbg !4561
}

declare i32 @ff_rtmp_calc_digest_pos(i8*, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_receive_hs_packet(%struct.RTMPContext* %rt, i32* %first_int, i32* %second_int, i8* %arraydata, i32 %size) #0 !dbg !4562 {
entry:
  %x.addr.i7 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i7, metadata !2616, metadata !376), !dbg !4566
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2616, metadata !376), !dbg !4568
  %retval = alloca i32, align 4
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %first_int.addr = alloca i32*, align 8
  %second_int.addr = alloca i32*, align 8
  %arraydata.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %inoutsize = alloca i32, align 4
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !4570, metadata !376), !dbg !4571
  store i32* %first_int, i32** %first_int.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %first_int.addr, metadata !4572, metadata !376), !dbg !4573
  store i32* %second_int, i32** %second_int.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %second_int.addr, metadata !4574, metadata !376), !dbg !4575
  store i8* %arraydata, i8** %arraydata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arraydata.addr, metadata !4576, metadata !376), !dbg !4577
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !4578, metadata !376), !dbg !4579
  call void @llvm.dbg.declare(metadata i32* %inoutsize, metadata !4580, metadata !376), !dbg !4581
  %0 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4582
  %stream = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %0, i32 0, i32 1, !dbg !4583
  %1 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !4583
  %2 = load i8*, i8** %arraydata.addr, align 8, !dbg !4584
  %call = call i32 @ffurl_read_complete(%struct.URLContext* %1, i8* %2, i32 1536), !dbg !4585
  store i32 %call, i32* %inoutsize, align 4, !dbg !4586
  %3 = load i32, i32* %inoutsize, align 4, !dbg !4587
  %cmp = icmp sle i32 %3, 0, !dbg !4589
  br i1 %cmp, label %if.then, label %if.end, !dbg !4590

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !4591
  br label %return, !dbg !4591

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %inoutsize, align 4, !dbg !4592
  %cmp1 = icmp ne i32 %4, 1536, !dbg !4594
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4595

if.then2:                                         ; preds = %if.end
  %5 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4596
  %6 = bitcast %struct.RTMPContext* %5 to i8*, !dbg !4596
  %7 = load i32, i32* %inoutsize, align 4, !dbg !4598
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.53, i32 0, i32 0), i32 %7), !dbg !4599
  store i32 -22, i32* %retval, align 4, !dbg !4600
  br label %return, !dbg !4600

if.end3:                                          ; preds = %if.end
  %8 = load i8*, i8** %arraydata.addr, align 8, !dbg !4601
  %9 = bitcast i8* %8 to %union.unaligned_32*, !dbg !4602
  %l = bitcast %union.unaligned_32* %9 to i32*, !dbg !4602
  %10 = load i32, i32* %l, align 1, !dbg !4602
  store i32 %10, i32* %x.addr.i, align 4, !dbg !4603
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !4604
  %shl.i = shl i32 %11, 8, !dbg !4605
  %and.i = and i32 %shl.i, 65280, !dbg !4606
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !4607
  %shr.i = lshr i32 %12, 8, !dbg !4608
  %and1.i = and i32 %shr.i, 255, !dbg !4609
  %or.i = or i32 %and.i, %and1.i, !dbg !4610
  %shl2.i = shl i32 %or.i, 16, !dbg !4611
  %13 = load i32, i32* %x.addr.i, align 4, !dbg !4612
  %shr3.i = lshr i32 %13, 16, !dbg !4613
  %shl4.i = shl i32 %shr3.i, 8, !dbg !4614
  %and5.i = and i32 %shl4.i, 65280, !dbg !4615
  %14 = load i32, i32* %x.addr.i, align 4, !dbg !4616
  %shr6.i = lshr i32 %14, 16, !dbg !4617
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !4618
  %and8.i = and i32 %shr7.i, 255, !dbg !4619
  %or9.i = or i32 %and5.i, %and8.i, !dbg !4620
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !4621
  %15 = load i32*, i32** %first_int.addr, align 8, !dbg !4622
  store i32 %or10.i, i32* %15, align 4, !dbg !4623
  %16 = load i8*, i8** %arraydata.addr, align 8, !dbg !4624
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 4, !dbg !4625
  %17 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !4626
  %l5 = bitcast %union.unaligned_32* %17 to i32*, !dbg !4626
  %18 = load i32, i32* %l5, align 1, !dbg !4626
  store i32 %18, i32* %x.addr.i7, align 4, !dbg !4627
  %19 = load i32, i32* %x.addr.i7, align 4, !dbg !4628
  %shl.i8 = shl i32 %19, 8, !dbg !4629
  %and.i9 = and i32 %shl.i8, 65280, !dbg !4630
  %20 = load i32, i32* %x.addr.i7, align 4, !dbg !4631
  %shr.i10 = lshr i32 %20, 8, !dbg !4632
  %and1.i11 = and i32 %shr.i10, 255, !dbg !4633
  %or.i12 = or i32 %and.i9, %and1.i11, !dbg !4634
  %shl2.i13 = shl i32 %or.i12, 16, !dbg !4635
  %21 = load i32, i32* %x.addr.i7, align 4, !dbg !4636
  %shr3.i14 = lshr i32 %21, 16, !dbg !4637
  %shl4.i15 = shl i32 %shr3.i14, 8, !dbg !4638
  %and5.i16 = and i32 %shl4.i15, 65280, !dbg !4639
  %22 = load i32, i32* %x.addr.i7, align 4, !dbg !4640
  %shr6.i17 = lshr i32 %22, 16, !dbg !4641
  %shr7.i18 = lshr i32 %shr6.i17, 8, !dbg !4642
  %and8.i19 = and i32 %shr7.i18, 255, !dbg !4643
  %or9.i20 = or i32 %and5.i16, %and8.i19, !dbg !4644
  %or10.i21 = or i32 %shl2.i13, %or9.i20, !dbg !4645
  %23 = load i32*, i32** %second_int.addr, align 8, !dbg !4646
  store i32 %or10.i21, i32* %23, align 4, !dbg !4647
  store i32 0, i32* %retval, align 4, !dbg !4648
  br label %return, !dbg !4648

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !4649
  ret i32 %24, !dbg !4649
}

declare i32 @av_get_random_seed() #2

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_send_hs_packet(%struct.RTMPContext* %rt, i32 %first_int, i32 %second_int, i8* %arraydata, i32 %size) #0 !dbg !4650 {
entry:
  %x.addr.i4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i4, metadata !2616, metadata !376), !dbg !4653
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2616, metadata !376), !dbg !4655
  %retval = alloca i32, align 4
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %first_int.addr = alloca i32, align 4
  %second_int.addr = alloca i32, align 4
  %arraydata.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %inoutsize = alloca i32, align 4
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !4657, metadata !376), !dbg !4658
  store i32 %first_int, i32* %first_int.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first_int.addr, metadata !4659, metadata !376), !dbg !4660
  store i32 %second_int, i32* %second_int.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %second_int.addr, metadata !4661, metadata !376), !dbg !4662
  store i8* %arraydata, i8** %arraydata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arraydata.addr, metadata !4663, metadata !376), !dbg !4664
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !4665, metadata !376), !dbg !4666
  call void @llvm.dbg.declare(metadata i32* %inoutsize, metadata !4667, metadata !376), !dbg !4668
  %0 = load i32, i32* %first_int.addr, align 4, !dbg !4669
  store i32 %0, i32* %x.addr.i, align 4, !dbg !4670
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !4671
  %shl.i = shl i32 %1, 8, !dbg !4672
  %and.i = and i32 %shl.i, 65280, !dbg !4673
  %2 = load i32, i32* %x.addr.i, align 4, !dbg !4674
  %shr.i = lshr i32 %2, 8, !dbg !4675
  %and1.i = and i32 %shr.i, 255, !dbg !4676
  %or.i = or i32 %and.i, %and1.i, !dbg !4677
  %shl2.i = shl i32 %or.i, 16, !dbg !4678
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !4679
  %shr3.i = lshr i32 %3, 16, !dbg !4680
  %shl4.i = shl i32 %shr3.i, 8, !dbg !4681
  %and5.i = and i32 %shl4.i, 65280, !dbg !4682
  %4 = load i32, i32* %x.addr.i, align 4, !dbg !4683
  %shr6.i = lshr i32 %4, 16, !dbg !4684
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !4685
  %and8.i = and i32 %shr7.i, 255, !dbg !4686
  %or9.i = or i32 %and5.i, %and8.i, !dbg !4687
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !4688
  %5 = load i8*, i8** %arraydata.addr, align 8, !dbg !4689
  %6 = bitcast i8* %5 to %union.unaligned_32*, !dbg !4690
  %l = bitcast %union.unaligned_32* %6 to i32*, !dbg !4690
  store i32 %or10.i, i32* %l, align 1, !dbg !4691
  %7 = load i32, i32* %second_int.addr, align 4, !dbg !4692
  store i32 %7, i32* %x.addr.i4, align 4, !dbg !4693
  %8 = load i32, i32* %x.addr.i4, align 4, !dbg !4694
  %shl.i5 = shl i32 %8, 8, !dbg !4695
  %and.i6 = and i32 %shl.i5, 65280, !dbg !4696
  %9 = load i32, i32* %x.addr.i4, align 4, !dbg !4697
  %shr.i7 = lshr i32 %9, 8, !dbg !4698
  %and1.i8 = and i32 %shr.i7, 255, !dbg !4699
  %or.i9 = or i32 %and.i6, %and1.i8, !dbg !4700
  %shl2.i10 = shl i32 %or.i9, 16, !dbg !4701
  %10 = load i32, i32* %x.addr.i4, align 4, !dbg !4702
  %shr3.i11 = lshr i32 %10, 16, !dbg !4703
  %shl4.i12 = shl i32 %shr3.i11, 8, !dbg !4704
  %and5.i13 = and i32 %shl4.i12, 65280, !dbg !4705
  %11 = load i32, i32* %x.addr.i4, align 4, !dbg !4706
  %shr6.i14 = lshr i32 %11, 16, !dbg !4707
  %shr7.i15 = lshr i32 %shr6.i14, 8, !dbg !4708
  %and8.i16 = and i32 %shr7.i15, 255, !dbg !4709
  %or9.i17 = or i32 %and5.i13, %and8.i16, !dbg !4710
  %or10.i18 = or i32 %shl2.i10, %or9.i17, !dbg !4711
  %12 = load i8*, i8** %arraydata.addr, align 8, !dbg !4712
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 4, !dbg !4713
  %13 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !4714
  %l2 = bitcast %union.unaligned_32* %13 to i32*, !dbg !4714
  store i32 %or10.i18, i32* %l2, align 1, !dbg !4715
  %14 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4716
  %stream = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %14, i32 0, i32 1, !dbg !4717
  %15 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !4717
  %16 = load i8*, i8** %arraydata.addr, align 8, !dbg !4718
  %call3 = call i32 @ffurl_write(%struct.URLContext* %15, i8* %16, i32 1536), !dbg !4719
  store i32 %call3, i32* %inoutsize, align 4, !dbg !4720
  %17 = load i32, i32* %inoutsize, align 4, !dbg !4721
  %cmp = icmp ne i32 %17, 1536, !dbg !4723
  br i1 %cmp, label %if.then, label %if.end, !dbg !4724

if.then:                                          ; preds = %entry
  %18 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4725
  %19 = bitcast %struct.RTMPContext* %18 to i8*, !dbg !4725
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.54, i32 0, i32 0)), !dbg !4727
  store i32 -5, i32* %retval, align 4, !dbg !4728
  br label %return, !dbg !4728

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4729
  br label %return, !dbg !4729

return:                                           ; preds = %if.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !4730
  ret i32 %20, !dbg !4730
}

declare i32 @ff_rtmp_packet_create(%struct.RTMPPacket*, i32, i32, i32, i32) #2

declare void @ff_amf_write_string(i8**, i8*) #2

declare void @ff_amf_write_number(i8**, double) #2

declare void @ff_amf_write_object_start(i8**) #2

declare void @ff_amf_write_field_name(i8**, i8*) #2

declare void @ff_amf_write_string2(i8**, i8*, i8*) #2

declare void @ff_amf_write_bool(i8**, i32) #2

declare void @ff_amf_write_object_end(i8**) #2

; Function Attrs: nounwind readonly
declare i64 @strspn(i8*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_write_amf_data(%struct.URLContext* %s, i8* %param, i8** %p) #0 !dbg !4731 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %param.addr = alloca i8*, align 8
  %p.addr = alloca i8**, align 8
  %field = alloca i8*, align 8
  %value = alloca i8*, align 8
  %type = alloca i8, align 1
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !4734, metadata !376), !dbg !4735
  store i8* %param, i8** %param.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %param.addr, metadata !4736, metadata !376), !dbg !4737
  store i8** %p, i8*** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %p.addr, metadata !4738, metadata !376), !dbg !4739
  call void @llvm.dbg.declare(metadata i8** %field, metadata !4740, metadata !376), !dbg !4741
  call void @llvm.dbg.declare(metadata i8** %value, metadata !4742, metadata !376), !dbg !4743
  call void @llvm.dbg.declare(metadata i8* %type, metadata !4744, metadata !376), !dbg !4745
  %0 = load i8*, i8** %param.addr, align 8, !dbg !4746
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !4746
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4746
  %conv = sext i8 %1 to i32, !dbg !4746
  %tobool = icmp ne i32 %conv, 0, !dbg !4746
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4748

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %param.addr, align 8, !dbg !4749
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !4749
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !4749
  %conv2 = sext i8 %3 to i32, !dbg !4749
  %cmp = icmp eq i32 %conv2, 58, !dbg !4751
  br i1 %cmp, label %if.then, label %if.else, !dbg !4752

if.then:                                          ; preds = %land.lhs.true
  %4 = load i8*, i8** %param.addr, align 8, !dbg !4753
  %arrayidx4 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !4753
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !4753
  store i8 %5, i8* %type, align 1, !dbg !4755
  %6 = load i8*, i8** %param.addr, align 8, !dbg !4756
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 2, !dbg !4757
  store i8* %add.ptr, i8** %value, align 8, !dbg !4758
  br label %if.end25, !dbg !4759

if.else:                                          ; preds = %land.lhs.true, %entry
  %7 = load i8*, i8** %param.addr, align 8, !dbg !4760
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !4760
  %8 = load i8, i8* %arrayidx5, align 1, !dbg !4760
  %conv6 = sext i8 %8 to i32, !dbg !4760
  %cmp7 = icmp eq i32 %conv6, 78, !dbg !4763
  br i1 %cmp7, label %land.lhs.true9, label %if.else23, !dbg !4764

land.lhs.true9:                                   ; preds = %if.else
  %9 = load i8*, i8** %param.addr, align 8, !dbg !4765
  %arrayidx10 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !4765
  %10 = load i8, i8* %arrayidx10, align 1, !dbg !4765
  %conv11 = sext i8 %10 to i32, !dbg !4765
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !4765
  br i1 %tobool12, label %land.lhs.true13, label %if.else23, !dbg !4767

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %11 = load i8*, i8** %param.addr, align 8, !dbg !4768
  %arrayidx14 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !4768
  %12 = load i8, i8* %arrayidx14, align 1, !dbg !4768
  %conv15 = sext i8 %12 to i32, !dbg !4768
  %cmp16 = icmp eq i32 %conv15, 58, !dbg !4770
  br i1 %cmp16, label %if.then18, label %if.else23, !dbg !4771

if.then18:                                        ; preds = %land.lhs.true13
  %13 = load i8*, i8** %param.addr, align 8, !dbg !4772
  %arrayidx19 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !4772
  %14 = load i8, i8* %arrayidx19, align 1, !dbg !4772
  store i8 %14, i8* %type, align 1, !dbg !4774
  %15 = load i8*, i8** %param.addr, align 8, !dbg !4775
  %add.ptr20 = getelementptr inbounds i8, i8* %15, i64 3, !dbg !4776
  store i8* %add.ptr20, i8** %field, align 8, !dbg !4777
  %16 = load i8*, i8** %field, align 8, !dbg !4778
  %call = call i8* @strchr(i8* %16, i32 58) #9, !dbg !4779
  store i8* %call, i8** %value, align 8, !dbg !4780
  %17 = load i8*, i8** %value, align 8, !dbg !4781
  %tobool21 = icmp ne i8* %17, null, !dbg !4781
  br i1 %tobool21, label %if.end, label %if.then22, !dbg !4783

if.then22:                                        ; preds = %if.then18
  br label %fail, !dbg !4784

if.end:                                           ; preds = %if.then18
  %18 = load i8*, i8** %value, align 8, !dbg !4785
  store i8 0, i8* %18, align 1, !dbg !4786
  %19 = load i8*, i8** %value, align 8, !dbg !4787
  %incdec.ptr = getelementptr inbounds i8, i8* %19, i32 1, !dbg !4787
  store i8* %incdec.ptr, i8** %value, align 8, !dbg !4787
  %20 = load i8**, i8*** %p.addr, align 8, !dbg !4788
  %21 = load i8*, i8** %field, align 8, !dbg !4789
  call void @ff_amf_write_field_name(i8** %20, i8* %21), !dbg !4790
  br label %if.end24, !dbg !4791

if.else23:                                        ; preds = %land.lhs.true13, %land.lhs.true9, %if.else
  br label %fail, !dbg !4792

if.end24:                                         ; preds = %if.end
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then
  %22 = load i8, i8* %type, align 1, !dbg !4794
  %conv26 = sext i8 %22 to i32, !dbg !4794
  switch i32 %conv26, label %sw.default [
    i32 66, label %sw.bb
    i32 83, label %sw.bb31
    i32 78, label %sw.bb32
    i32 90, label %sw.bb34
    i32 79, label %sw.bb35
  ], !dbg !4795

sw.bb:                                            ; preds = %if.end25
  %23 = load i8**, i8*** %p.addr, align 8, !dbg !4796
  %24 = load i8*, i8** %value, align 8, !dbg !4798
  %arrayidx27 = getelementptr inbounds i8, i8* %24, i64 0, !dbg !4798
  %25 = load i8, i8* %arrayidx27, align 1, !dbg !4798
  %conv28 = sext i8 %25 to i32, !dbg !4798
  %cmp29 = icmp ne i32 %conv28, 48, !dbg !4799
  %conv30 = zext i1 %cmp29 to i32, !dbg !4799
  call void @ff_amf_write_bool(i8** %23, i32 %conv30), !dbg !4800
  br label %sw.epilog, !dbg !4801

sw.bb31:                                          ; preds = %if.end25
  %26 = load i8**, i8*** %p.addr, align 8, !dbg !4802
  %27 = load i8*, i8** %value, align 8, !dbg !4803
  call void @ff_amf_write_string(i8** %26, i8* %27), !dbg !4804
  br label %sw.epilog, !dbg !4805

sw.bb32:                                          ; preds = %if.end25
  %28 = load i8**, i8*** %p.addr, align 8, !dbg !4806
  %29 = load i8*, i8** %value, align 8, !dbg !4807
  %call33 = call double @strtod(i8* %29, i8** null) #10, !dbg !4808
  call void @ff_amf_write_number(i8** %28, double %call33), !dbg !4809
  br label %sw.epilog, !dbg !4811

sw.bb34:                                          ; preds = %if.end25
  %30 = load i8**, i8*** %p.addr, align 8, !dbg !4812
  call void @ff_amf_write_null(i8** %30), !dbg !4813
  br label %sw.epilog, !dbg !4814

sw.bb35:                                          ; preds = %if.end25
  %31 = load i8*, i8** %value, align 8, !dbg !4815
  %arrayidx36 = getelementptr inbounds i8, i8* %31, i64 0, !dbg !4815
  %32 = load i8, i8* %arrayidx36, align 1, !dbg !4815
  %conv37 = sext i8 %32 to i32, !dbg !4815
  %cmp38 = icmp ne i32 %conv37, 48, !dbg !4817
  br i1 %cmp38, label %if.then40, label %if.else41, !dbg !4818

if.then40:                                        ; preds = %sw.bb35
  %33 = load i8**, i8*** %p.addr, align 8, !dbg !4819
  call void @ff_amf_write_object_start(i8** %33), !dbg !4820
  br label %if.end42, !dbg !4820

if.else41:                                        ; preds = %sw.bb35
  %34 = load i8**, i8*** %p.addr, align 8, !dbg !4821
  call void @ff_amf_write_object_end(i8** %34), !dbg !4822
  br label %if.end42

if.end42:                                         ; preds = %if.else41, %if.then40
  br label %sw.epilog, !dbg !4823

sw.default:                                       ; preds = %if.end25
  br label %fail, !dbg !4824

sw.epilog:                                        ; preds = %if.end42, %sw.bb34, %sw.bb32, %sw.bb31, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !4825
  br label %return, !dbg !4825

fail:                                             ; preds = %sw.default, %if.else23, %if.then22
  %35 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !4826
  %36 = bitcast %struct.URLContext* %35 to i8*, !dbg !4826
  %37 = load i8*, i8** %param.addr, align 8, !dbg !4827
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i32 0, i32 0), i8* %37), !dbg !4828
  store i32 -22, i32* %retval, align 4, !dbg !4829
  br label %return, !dbg !4829

return:                                           ; preds = %fail, %sw.epilog
  %38 = load i32, i32* %retval, align 4, !dbg !4830
  ret i32 %38, !dbg !4830
}

declare void @ff_rtmp_packet_destroy(%struct.RTMPPacket*) #2

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_send_packet(%struct.RTMPContext* %rt, %struct.RTMPPacket* %pkt, i32 %track) #0 !dbg !4831 {
entry:
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !1440, metadata !376), !dbg !4834
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !1457, metadata !376), !dbg !4838
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !1459, metadata !376), !dbg !4839
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %track.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %gbc = alloca %struct.GetByteContext, align 8
  %name = alloca [128 x i8], align 16
  %pkt_id = alloca double, align 8
  %len = alloca i32, align 4
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !4840, metadata !376), !dbg !4841
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !4842, metadata !376), !dbg !4843
  store i32 %track, i32* %track.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %track.addr, metadata !4844, metadata !376), !dbg !4845
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4846, metadata !376), !dbg !4847
  %0 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !4848
  %type = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %0, i32 0, i32 1, !dbg !4849
  %1 = load i32, i32* %type, align 4, !dbg !4849
  %cmp = icmp eq i32 %1, 20, !dbg !4850
  br i1 %cmp, label %land.lhs.true, label %if.end13, !dbg !4851

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %track.addr, align 4, !dbg !4852
  %tobool = icmp ne i32 %2, 0, !dbg !4852
  br i1 %tobool, label %if.then, label %if.end13, !dbg !4854

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gbc, metadata !4855, metadata !376), !dbg !4856
  call void @llvm.dbg.declare(metadata [128 x i8]* %name, metadata !4857, metadata !376), !dbg !4861
  call void @llvm.dbg.declare(metadata double* %pkt_id, metadata !4862, metadata !376), !dbg !4863
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4864, metadata !376), !dbg !4865
  %3 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !4866
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %3, i32 0, i32 5, !dbg !4867
  %4 = load i8*, i8** %data, align 8, !dbg !4867
  %5 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !4868
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %5, i32 0, i32 6, !dbg !4869
  %6 = load i32, i32* %size, align 8, !dbg !4869
  store %struct.GetByteContext* %gbc, %struct.GetByteContext** %g.addr.i, align 8, !dbg !4870
  store i8* %4, i8** %buf.addr.i, align 8, !dbg !4870
  store i32 %6, i32* %buf_size.addr.i, align 4, !dbg !4870
  %7 = load i32, i32* %buf_size.addr.i, align 4, !dbg !4871
  %cmp.i = icmp sge i32 %7, 0, !dbg !4872
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !4873

if.then.i:                                        ; preds = %if.then
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.72, i32 0, i32 0), i32 137) #10, !dbg !4874
  call void @abort() #11, !dbg !4875
  unreachable, !dbg !4876

bytestream2_init.exit:                            ; preds = %if.then
  %8 = load i8*, i8** %buf.addr.i, align 8, !dbg !4877
  %9 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !4878
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %9, i32 0, i32 0, !dbg !4879
  store i8* %8, i8** %buffer.i, align 8, !dbg !4880
  %10 = load i8*, i8** %buf.addr.i, align 8, !dbg !4881
  %11 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !4882
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %11, i32 0, i32 2, !dbg !4883
  store i8* %10, i8** %buffer_start.i, align 8, !dbg !4884
  %12 = load i8*, i8** %buf.addr.i, align 8, !dbg !4885
  %13 = load i32, i32* %buf_size.addr.i, align 4, !dbg !4886
  %idx.ext.i = sext i32 %13 to i64, !dbg !4887
  %add.ptr.i = getelementptr inbounds i8, i8* %12, i64 %idx.ext.i, !dbg !4887
  %14 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !4888
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %14, i32 0, i32 1, !dbg !4889
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !4890
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %name, i32 0, i32 0, !dbg !4891
  %call = call i32 @ff_amf_read_string(%struct.GetByteContext* %gbc, i8* %arraydecay, i32 128, i32* %len), !dbg !4893
  store i32 %call, i32* %ret, align 4, !dbg !4894
  %cmp1 = icmp slt i32 %call, 0, !dbg !4895
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !4896

if.then2:                                         ; preds = %bytestream2_init.exit
  br label %fail, !dbg !4897

if.end:                                           ; preds = %bytestream2_init.exit
  %call3 = call i32 @ff_amf_read_number(%struct.GetByteContext* %gbc, double* %pkt_id), !dbg !4898
  store i32 %call3, i32* %ret, align 4, !dbg !4900
  %cmp4 = icmp slt i32 %call3, 0, !dbg !4901
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4902

if.then5:                                         ; preds = %if.end
  br label %fail, !dbg !4903

if.end6:                                          ; preds = %if.end
  %15 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4904
  %arraydecay7 = getelementptr inbounds [128 x i8], [128 x i8]* %name, i32 0, i32 0, !dbg !4906
  %16 = load double, double* %pkt_id, align 8, !dbg !4907
  %conv = fptosi double %16 to i32, !dbg !4907
  %call8 = call i32 @add_tracked_method(%struct.RTMPContext* %15, i8* %arraydecay7, i32 %conv), !dbg !4908
  store i32 %call8, i32* %ret, align 4, !dbg !4909
  %cmp9 = icmp slt i32 %call8, 0, !dbg !4910
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !4911

if.then11:                                        ; preds = %if.end6
  br label %fail, !dbg !4912

if.end12:                                         ; preds = %if.end6
  br label %if.end13, !dbg !4913

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %entry
  %17 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4914
  %stream = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %17, i32 0, i32 1, !dbg !4915
  %18 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !4915
  %19 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !4916
  %20 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4917
  %out_chunk_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %20, i32 0, i32 5, !dbg !4918
  %21 = load i32, i32* %out_chunk_size, align 4, !dbg !4918
  %22 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4919
  %prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %22, i32 0, i32 2, !dbg !4920
  %arrayidx = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt, i64 0, i64 1, !dbg !4919
  %23 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4921
  %nb_prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %23, i32 0, i32 3, !dbg !4922
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt, i64 0, i64 1, !dbg !4921
  %call15 = call i32 @ff_rtmp_packet_write(%struct.URLContext* %18, %struct.RTMPPacket* %19, i32 %21, %struct.RTMPPacket** %arrayidx, i32* %arrayidx14), !dbg !4923
  store i32 %call15, i32* %ret, align 4, !dbg !4924
  br label %fail, !dbg !4925

fail:                                             ; preds = %if.end13, %if.then11, %if.then5, %if.then2
  %24 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !4926
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %24), !dbg !4927
  %25 = load i32, i32* %ret, align 4, !dbg !4928
  ret i32 %25, !dbg !4929
}

; Function Attrs: nounwind
declare double @strtod(i8*, i8**) #5

declare void @ff_amf_write_null(i8**) #2

declare i32 @ff_amf_read_string(%struct.GetByteContext*, i8*, i32, i32*) #2

declare i32 @ff_amf_read_number(%struct.GetByteContext*, double*) #2

; Function Attrs: nounwind uwtable
define internal i32 @add_tracked_method(%struct.RTMPContext* %rt, i8* %name, i32 %id) #0 !dbg !4930 {
entry:
  %retval = alloca i32, align 4
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %name.addr = alloca i8*, align 8
  %id.addr = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !4933, metadata !376), !dbg !4934
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4935, metadata !376), !dbg !4936
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4937, metadata !376), !dbg !4938
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4939, metadata !376), !dbg !4940
  %0 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4941
  %nb_tracked_methods = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %0, i32 0, i32 44, !dbg !4943
  %1 = load i32, i32* %nb_tracked_methods, align 8, !dbg !4943
  %add = add nsw i32 %1, 1, !dbg !4944
  %2 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4945
  %tracked_methods_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %2, i32 0, i32 45, !dbg !4946
  %3 = load i32, i32* %tracked_methods_size, align 4, !dbg !4946
  %cmp = icmp sgt i32 %add, %3, !dbg !4947
  br i1 %cmp, label %if.then, label %if.end11, !dbg !4948

if.then:                                          ; preds = %entry
  %4 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4949
  %nb_tracked_methods1 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %4, i32 0, i32 44, !dbg !4951
  %5 = load i32, i32* %nb_tracked_methods1, align 8, !dbg !4951
  %add2 = add nsw i32 %5, 1, !dbg !4952
  %mul = mul nsw i32 %add2, 2, !dbg !4953
  %6 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4954
  %tracked_methods_size3 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %6, i32 0, i32 45, !dbg !4955
  store i32 %mul, i32* %tracked_methods_size3, align 4, !dbg !4956
  %7 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4957
  %tracked_methods = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %7, i32 0, i32 43, !dbg !4959
  %8 = bitcast %struct.TrackedMethod** %tracked_methods to i8*, !dbg !4960
  %9 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4961
  %tracked_methods_size4 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %9, i32 0, i32 45, !dbg !4962
  %10 = load i32, i32* %tracked_methods_size4, align 4, !dbg !4962
  %conv = sext i32 %10 to i64, !dbg !4961
  %mul5 = mul i64 %conv, 16, !dbg !4963
  %call = call i32 @av_reallocp(i8* %8, i64 %mul5), !dbg !4964
  store i32 %call, i32* %err, align 4, !dbg !4965
  %cmp6 = icmp slt i32 %call, 0, !dbg !4966
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !4967

if.then8:                                         ; preds = %if.then
  %11 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4968
  %nb_tracked_methods9 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %11, i32 0, i32 44, !dbg !4970
  store i32 0, i32* %nb_tracked_methods9, align 8, !dbg !4971
  %12 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4972
  %tracked_methods_size10 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %12, i32 0, i32 45, !dbg !4973
  store i32 0, i32* %tracked_methods_size10, align 4, !dbg !4974
  %13 = load i32, i32* %err, align 4, !dbg !4975
  store i32 %13, i32* %retval, align 4, !dbg !4976
  br label %return, !dbg !4976

if.end:                                           ; preds = %if.then
  br label %if.end11, !dbg !4977

if.end11:                                         ; preds = %if.end, %entry
  %14 = load i8*, i8** %name.addr, align 8, !dbg !4978
  %call12 = call noalias i8* @av_strdup(i8* %14), !dbg !4979
  %15 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4980
  %nb_tracked_methods13 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %15, i32 0, i32 44, !dbg !4981
  %16 = load i32, i32* %nb_tracked_methods13, align 8, !dbg !4981
  %idxprom = sext i32 %16 to i64, !dbg !4982
  %17 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4982
  %tracked_methods14 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %17, i32 0, i32 43, !dbg !4983
  %18 = load %struct.TrackedMethod*, %struct.TrackedMethod** %tracked_methods14, align 8, !dbg !4983
  %arrayidx = getelementptr inbounds %struct.TrackedMethod, %struct.TrackedMethod* %18, i64 %idxprom, !dbg !4982
  %name15 = getelementptr inbounds %struct.TrackedMethod, %struct.TrackedMethod* %arrayidx, i32 0, i32 0, !dbg !4984
  store i8* %call12, i8** %name15, align 8, !dbg !4985
  %19 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4986
  %nb_tracked_methods16 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %19, i32 0, i32 44, !dbg !4988
  %20 = load i32, i32* %nb_tracked_methods16, align 8, !dbg !4988
  %idxprom17 = sext i32 %20 to i64, !dbg !4989
  %21 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4989
  %tracked_methods18 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %21, i32 0, i32 43, !dbg !4990
  %22 = load %struct.TrackedMethod*, %struct.TrackedMethod** %tracked_methods18, align 8, !dbg !4990
  %arrayidx19 = getelementptr inbounds %struct.TrackedMethod, %struct.TrackedMethod* %22, i64 %idxprom17, !dbg !4989
  %name20 = getelementptr inbounds %struct.TrackedMethod, %struct.TrackedMethod* %arrayidx19, i32 0, i32 0, !dbg !4991
  %23 = load i8*, i8** %name20, align 8, !dbg !4991
  %tobool = icmp ne i8* %23, null, !dbg !4989
  br i1 %tobool, label %if.end22, label %if.then21, !dbg !4992

if.then21:                                        ; preds = %if.end11
  store i32 -12, i32* %retval, align 4, !dbg !4993
  br label %return, !dbg !4993

if.end22:                                         ; preds = %if.end11
  %24 = load i32, i32* %id.addr, align 4, !dbg !4994
  %25 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4995
  %nb_tracked_methods23 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %25, i32 0, i32 44, !dbg !4996
  %26 = load i32, i32* %nb_tracked_methods23, align 8, !dbg !4996
  %idxprom24 = sext i32 %26 to i64, !dbg !4997
  %27 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !4997
  %tracked_methods25 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %27, i32 0, i32 43, !dbg !4998
  %28 = load %struct.TrackedMethod*, %struct.TrackedMethod** %tracked_methods25, align 8, !dbg !4998
  %arrayidx26 = getelementptr inbounds %struct.TrackedMethod, %struct.TrackedMethod* %28, i64 %idxprom24, !dbg !4997
  %id27 = getelementptr inbounds %struct.TrackedMethod, %struct.TrackedMethod* %arrayidx26, i32 0, i32 1, !dbg !4999
  store i32 %24, i32* %id27, align 8, !dbg !5000
  %29 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !5001
  %nb_tracked_methods28 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %29, i32 0, i32 44, !dbg !5002
  %30 = load i32, i32* %nb_tracked_methods28, align 8, !dbg !5003
  %inc = add nsw i32 %30, 1, !dbg !5003
  store i32 %inc, i32* %nb_tracked_methods28, align 8, !dbg !5003
  store i32 0, i32* %retval, align 4, !dbg !5004
  br label %return, !dbg !5004

return:                                           ; preds = %if.end22, %if.then21, %if.then8
  %31 = load i32, i32* %retval, align 4, !dbg !5005
  ret i32 %31, !dbg !5005
}

declare i32 @ff_rtmp_packet_write(%struct.URLContext*, %struct.RTMPPacket*, i32, %struct.RTMPPacket**, i32*) #2

; Function Attrs: noreturn nounwind
declare void @abort() #7

declare noalias i8* @av_strdup(i8*) #2

declare i32 @ff_rtmp_packet_read(%struct.URLContext*, %struct.RTMPPacket*, i32, %struct.RTMPPacket**, i32*) #2

; Function Attrs: nounwind uwtable
define internal i32 @handle_chunk_size(%struct.URLContext* %s, %struct.RTMPPacket* %pkt) #0 !dbg !5006 {
entry:
  %x.addr.i19 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i19, metadata !2616, metadata !376), !dbg !5009
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2616, metadata !376), !dbg !5011
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !5015, metadata !376), !dbg !5016
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !5017, metadata !376), !dbg !5018
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !5019, metadata !376), !dbg !5020
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5021
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !5022
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5022
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !5021
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !5020
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5023, metadata !376), !dbg !5024
  %3 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5025
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %3, i32 0, i32 6, !dbg !5027
  %4 = load i32, i32* %size, align 8, !dbg !5027
  %cmp = icmp slt i32 %4, 4, !dbg !5028
  br i1 %cmp, label %if.then, label %if.end, !dbg !5029

if.then:                                          ; preds = %entry
  %5 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5030
  %6 = bitcast %struct.URLContext* %5 to i8*, !dbg !5030
  %7 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5032
  %size1 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %7, i32 0, i32 6, !dbg !5033
  %8 = load i32, i32* %size1, align 8, !dbg !5033
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.92, i32 0, i32 0), i32 %8), !dbg !5034
  store i32 -1094995529, i32* %retval, align 4, !dbg !5035
  br label %return, !dbg !5035

if.end:                                           ; preds = %entry
  %9 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5036
  %is_input = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %9, i32 0, i32 6, !dbg !5037
  %10 = load i32, i32* %is_input, align 8, !dbg !5037
  %tobool = icmp ne i32 %10, 0, !dbg !5036
  br i1 %tobool, label %if.end9, label %if.then2, !dbg !5038

if.then2:                                         ; preds = %if.end
  %11 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5039
  %stream = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %11, i32 0, i32 1, !dbg !5041
  %12 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !5041
  %13 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5042
  %14 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5043
  %out_chunk_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %14, i32 0, i32 5, !dbg !5044
  %15 = load i32, i32* %out_chunk_size, align 4, !dbg !5044
  %16 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5045
  %prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %16, i32 0, i32 2, !dbg !5046
  %arrayidx = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt, i64 0, i64 1, !dbg !5045
  %17 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5047
  %nb_prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %17, i32 0, i32 3, !dbg !5048
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt, i64 0, i64 1, !dbg !5047
  %call = call i32 @ff_rtmp_packet_write(%struct.URLContext* %12, %struct.RTMPPacket* %13, i32 %15, %struct.RTMPPacket** %arrayidx, i32* %arrayidx3), !dbg !5049
  store i32 %call, i32* %ret, align 4, !dbg !5050
  %cmp4 = icmp slt i32 %call, 0, !dbg !5051
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5052

if.then5:                                         ; preds = %if.then2
  %18 = load i32, i32* %ret, align 4, !dbg !5053
  store i32 %18, i32* %retval, align 4, !dbg !5054
  br label %return, !dbg !5054

if.end6:                                          ; preds = %if.then2
  %19 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5055
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %19, i32 0, i32 5, !dbg !5056
  %20 = load i8*, i8** %data, align 8, !dbg !5056
  %21 = bitcast i8* %20 to %union.unaligned_32*, !dbg !5057
  %l = bitcast %union.unaligned_32* %21 to i32*, !dbg !5057
  %22 = load i32, i32* %l, align 1, !dbg !5057
  store i32 %22, i32* %x.addr.i, align 4, !dbg !5058
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !5059
  %shl.i = shl i32 %23, 8, !dbg !5060
  %and.i = and i32 %shl.i, 65280, !dbg !5061
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !5062
  %shr.i = lshr i32 %24, 8, !dbg !5063
  %and1.i = and i32 %shr.i, 255, !dbg !5064
  %or.i = or i32 %and.i, %and1.i, !dbg !5065
  %shl2.i = shl i32 %or.i, 16, !dbg !5066
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !5067
  %shr3.i = lshr i32 %25, 16, !dbg !5068
  %shl4.i = shl i32 %shr3.i, 8, !dbg !5069
  %and5.i = and i32 %shl4.i, 65280, !dbg !5070
  %26 = load i32, i32* %x.addr.i, align 4, !dbg !5071
  %shr6.i = lshr i32 %26, 16, !dbg !5072
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !5073
  %and8.i = and i32 %shr7.i, 255, !dbg !5074
  %or9.i = or i32 %and5.i, %and8.i, !dbg !5075
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !5076
  %27 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5077
  %out_chunk_size8 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %27, i32 0, i32 5, !dbg !5078
  store i32 %or10.i, i32* %out_chunk_size8, align 4, !dbg !5079
  br label %if.end9, !dbg !5080

if.end9:                                          ; preds = %if.end6, %if.end
  %28 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5081
  %data10 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %28, i32 0, i32 5, !dbg !5082
  %29 = load i8*, i8** %data10, align 8, !dbg !5082
  %30 = bitcast i8* %29 to %union.unaligned_32*, !dbg !5083
  %l11 = bitcast %union.unaligned_32* %30 to i32*, !dbg !5083
  %31 = load i32, i32* %l11, align 1, !dbg !5083
  store i32 %31, i32* %x.addr.i19, align 4, !dbg !5084
  %32 = load i32, i32* %x.addr.i19, align 4, !dbg !5085
  %shl.i20 = shl i32 %32, 8, !dbg !5086
  %and.i21 = and i32 %shl.i20, 65280, !dbg !5087
  %33 = load i32, i32* %x.addr.i19, align 4, !dbg !5088
  %shr.i22 = lshr i32 %33, 8, !dbg !5089
  %and1.i23 = and i32 %shr.i22, 255, !dbg !5090
  %or.i24 = or i32 %and.i21, %and1.i23, !dbg !5091
  %shl2.i25 = shl i32 %or.i24, 16, !dbg !5092
  %34 = load i32, i32* %x.addr.i19, align 4, !dbg !5093
  %shr3.i26 = lshr i32 %34, 16, !dbg !5094
  %shl4.i27 = shl i32 %shr3.i26, 8, !dbg !5095
  %and5.i28 = and i32 %shl4.i27, 65280, !dbg !5096
  %35 = load i32, i32* %x.addr.i19, align 4, !dbg !5097
  %shr6.i29 = lshr i32 %35, 16, !dbg !5098
  %shr7.i30 = lshr i32 %shr6.i29, 8, !dbg !5099
  %and8.i31 = and i32 %shr7.i30, 255, !dbg !5100
  %or9.i32 = or i32 %and5.i28, %and8.i31, !dbg !5101
  %or10.i33 = or i32 %shl2.i25, %or9.i32, !dbg !5102
  %36 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5103
  %in_chunk_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %36, i32 0, i32 4, !dbg !5104
  store i32 %or10.i33, i32* %in_chunk_size, align 8, !dbg !5105
  %37 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5106
  %in_chunk_size13 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %37, i32 0, i32 4, !dbg !5108
  %38 = load i32, i32* %in_chunk_size13, align 8, !dbg !5108
  %cmp14 = icmp sle i32 %38, 0, !dbg !5109
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !5110

if.then15:                                        ; preds = %if.end9
  %39 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5111
  %40 = bitcast %struct.URLContext* %39 to i8*, !dbg !5111
  %41 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5113
  %in_chunk_size16 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %41, i32 0, i32 4, !dbg !5114
  %42 = load i32, i32* %in_chunk_size16, align 8, !dbg !5114
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.93, i32 0, i32 0), i32 %42), !dbg !5115
  store i32 -1094995529, i32* %retval, align 4, !dbg !5116
  br label %return, !dbg !5116

if.end17:                                         ; preds = %if.end9
  %43 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5117
  %44 = bitcast %struct.URLContext* %43 to i8*, !dbg !5117
  %45 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5118
  %in_chunk_size18 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %45, i32 0, i32 4, !dbg !5119
  %46 = load i32, i32* %in_chunk_size18, align 8, !dbg !5119
  call void (i8*, i32, i8*, ...) @av_log(i8* %44, i32 48, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.94, i32 0, i32 0), i32 %46), !dbg !5120
  store i32 0, i32* %retval, align 4, !dbg !5121
  br label %return, !dbg !5121

return:                                           ; preds = %if.end17, %if.then15, %if.then5, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !5122
  ret i32 %47, !dbg !5122
}

; Function Attrs: nounwind uwtable
define internal i32 @handle_window_ack_size(%struct.URLContext* %s, %struct.RTMPPacket* %pkt) #0 !dbg !5123 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2616, metadata !376), !dbg !5124
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !5126, metadata !376), !dbg !5127
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !5128, metadata !376), !dbg !5129
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !5130, metadata !376), !dbg !5131
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5132
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !5133
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5133
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !5132
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !5131
  %3 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5134
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %3, i32 0, i32 6, !dbg !5136
  %4 = load i32, i32* %size, align 8, !dbg !5136
  %cmp = icmp slt i32 %4, 4, !dbg !5137
  br i1 %cmp, label %if.then, label %if.end, !dbg !5138

if.then:                                          ; preds = %entry
  %5 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5139
  %6 = bitcast %struct.URLContext* %5 to i8*, !dbg !5139
  %7 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5141
  %size1 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %7, i32 0, i32 6, !dbg !5142
  %8 = load i32, i32* %size1, align 8, !dbg !5142
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.95, i32 0, i32 0), i32 %8), !dbg !5143
  store i32 -1094995529, i32* %retval, align 4, !dbg !5144
  br label %return, !dbg !5144

if.end:                                           ; preds = %entry
  %9 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5145
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %9, i32 0, i32 5, !dbg !5146
  %10 = load i8*, i8** %data, align 8, !dbg !5146
  %11 = bitcast i8* %10 to %union.unaligned_32*, !dbg !5147
  %l = bitcast %union.unaligned_32* %11 to i32*, !dbg !5147
  %12 = load i32, i32* %l, align 1, !dbg !5147
  store i32 %12, i32* %x.addr.i, align 4, !dbg !5148
  %13 = load i32, i32* %x.addr.i, align 4, !dbg !5149
  %shl.i = shl i32 %13, 8, !dbg !5150
  %and.i = and i32 %shl.i, 65280, !dbg !5151
  %14 = load i32, i32* %x.addr.i, align 4, !dbg !5152
  %shr.i = lshr i32 %14, 8, !dbg !5153
  %and1.i = and i32 %shr.i, 255, !dbg !5154
  %or.i = or i32 %and.i, %and1.i, !dbg !5155
  %shl2.i = shl i32 %or.i, 16, !dbg !5156
  %15 = load i32, i32* %x.addr.i, align 4, !dbg !5157
  %shr3.i = lshr i32 %15, 16, !dbg !5158
  %shl4.i = shl i32 %shr3.i, 8, !dbg !5159
  %and5.i = and i32 %shl4.i, 65280, !dbg !5160
  %16 = load i32, i32* %x.addr.i, align 4, !dbg !5161
  %shr6.i = lshr i32 %16, 16, !dbg !5162
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !5163
  %and8.i = and i32 %shr7.i, 255, !dbg !5164
  %or9.i = or i32 %and5.i, %and8.i, !dbg !5165
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !5166
  %17 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5167
  %receive_report_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %17, i32 0, i32 18, !dbg !5168
  store i32 %or10.i, i32* %receive_report_size, align 8, !dbg !5169
  %18 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5170
  %receive_report_size2 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %18, i32 0, i32 18, !dbg !5172
  %19 = load i32, i32* %receive_report_size2, align 8, !dbg !5172
  %cmp3 = icmp ule i32 %19, 0, !dbg !5173
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !5174

if.then4:                                         ; preds = %if.end
  %20 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5175
  %21 = bitcast %struct.URLContext* %20 to i8*, !dbg !5175
  %22 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5177
  %receive_report_size5 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %22, i32 0, i32 18, !dbg !5178
  %23 = load i32, i32* %receive_report_size5, align 8, !dbg !5178
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.96, i32 0, i32 0), i32 %23), !dbg !5179
  store i32 -1094995529, i32* %retval, align 4, !dbg !5180
  br label %return, !dbg !5180

if.end6:                                          ; preds = %if.end
  %24 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5181
  %25 = bitcast %struct.URLContext* %24 to i8*, !dbg !5181
  %26 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5182
  %receive_report_size7 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %26, i32 0, i32 18, !dbg !5183
  %27 = load i32, i32* %receive_report_size7, align 8, !dbg !5183
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 48, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.97, i32 0, i32 0), i32 %27), !dbg !5184
  %28 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5185
  %receive_report_size8 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %28, i32 0, i32 18, !dbg !5186
  %29 = load i32, i32* %receive_report_size8, align 8, !dbg !5187
  %shr = lshr i32 %29, 1, !dbg !5187
  store i32 %shr, i32* %receive_report_size8, align 8, !dbg !5187
  store i32 0, i32* %retval, align 4, !dbg !5188
  br label %return, !dbg !5188

return:                                           ; preds = %if.end6, %if.then4, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !5189
  ret i32 %30, !dbg !5189
}

; Function Attrs: nounwind uwtable
define internal i32 @handle_set_peer_bw(%struct.URLContext* %s, %struct.RTMPPacket* %pkt) #0 !dbg !5190 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2616, metadata !376), !dbg !5191
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !5193, metadata !376), !dbg !5194
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !5195, metadata !376), !dbg !5196
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !5197, metadata !376), !dbg !5198
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5199
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !5200
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5200
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !5199
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !5198
  %3 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5201
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %3, i32 0, i32 6, !dbg !5203
  %4 = load i32, i32* %size, align 8, !dbg !5203
  %cmp = icmp slt i32 %4, 4, !dbg !5204
  br i1 %cmp, label %if.then, label %if.end, !dbg !5205

if.then:                                          ; preds = %entry
  %5 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5206
  %6 = bitcast %struct.URLContext* %5 to i8*, !dbg !5206
  %7 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5208
  %size1 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %7, i32 0, i32 6, !dbg !5209
  %8 = load i32, i32* %size1, align 8, !dbg !5209
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.98, i32 0, i32 0), i32 %8), !dbg !5210
  store i32 -1094995529, i32* %retval, align 4, !dbg !5211
  br label %return, !dbg !5211

if.end:                                           ; preds = %entry
  %9 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5212
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %9, i32 0, i32 5, !dbg !5213
  %10 = load i8*, i8** %data, align 8, !dbg !5213
  %11 = bitcast i8* %10 to %union.unaligned_32*, !dbg !5214
  %l = bitcast %union.unaligned_32* %11 to i32*, !dbg !5214
  %12 = load i32, i32* %l, align 1, !dbg !5214
  store i32 %12, i32* %x.addr.i, align 4, !dbg !5215
  %13 = load i32, i32* %x.addr.i, align 4, !dbg !5216
  %shl.i = shl i32 %13, 8, !dbg !5217
  %and.i = and i32 %shl.i, 65280, !dbg !5218
  %14 = load i32, i32* %x.addr.i, align 4, !dbg !5219
  %shr.i = lshr i32 %14, 8, !dbg !5220
  %and1.i = and i32 %shr.i, 255, !dbg !5221
  %or.i = or i32 %and.i, %and1.i, !dbg !5222
  %shl2.i = shl i32 %or.i, 16, !dbg !5223
  %15 = load i32, i32* %x.addr.i, align 4, !dbg !5224
  %shr3.i = lshr i32 %15, 16, !dbg !5225
  %shl4.i = shl i32 %shr3.i, 8, !dbg !5226
  %and5.i = and i32 %shl4.i, 65280, !dbg !5227
  %16 = load i32, i32* %x.addr.i, align 4, !dbg !5228
  %shr6.i = lshr i32 %16, 16, !dbg !5229
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !5230
  %and8.i = and i32 %shr7.i, 255, !dbg !5231
  %or9.i = or i32 %and5.i, %and8.i, !dbg !5232
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !5233
  %17 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5234
  %max_sent_unacked = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %17, i32 0, i32 39, !dbg !5235
  store i32 %or10.i, i32* %max_sent_unacked, align 8, !dbg !5236
  %18 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5237
  %max_sent_unacked2 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %18, i32 0, i32 39, !dbg !5239
  %19 = load i32, i32* %max_sent_unacked2, align 8, !dbg !5239
  %cmp3 = icmp sle i32 %19, 0, !dbg !5240
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !5241

if.then4:                                         ; preds = %if.end
  %20 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5242
  %21 = bitcast %struct.URLContext* %20 to i8*, !dbg !5242
  %22 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5244
  %max_sent_unacked5 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %22, i32 0, i32 39, !dbg !5245
  %23 = load i32, i32* %max_sent_unacked5, align 8, !dbg !5245
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.99, i32 0, i32 0), i32 %23), !dbg !5246
  store i32 -1094995529, i32* %retval, align 4, !dbg !5247
  br label %return, !dbg !5247

if.end6:                                          ; preds = %if.end
  %24 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5248
  %25 = bitcast %struct.URLContext* %24 to i8*, !dbg !5248
  %26 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !5249
  %max_sent_unacked7 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %26, i32 0, i32 39, !dbg !5250
  %27 = load i32, i32* %max_sent_unacked7, align 8, !dbg !5250
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 48, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.100, i32 0, i32 0), i32 %27), !dbg !5251
  store i32 0, i32* %retval, align 4, !dbg !5252
  br label %return, !dbg !5252

return:                                           ; preds = %if.end6, %if.then4, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !5253
  ret i32 %28, !dbg !5253
}

declare i32 @ff_amf_get_field_value(i8*, i8*, i8*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @gen_bytes_read(%struct.URLContext* %s, %struct.RTMPContext* %rt, i32 %ts) #0 !dbg !5254 {
entry:
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2616, metadata !376), !dbg !5257
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !2960, metadata !376), !dbg !5260
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !2962, metadata !376), !dbg !5261
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %ts.addr = alloca i32, align 4
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !5262, metadata !376), !dbg !5263
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !5264, metadata !376), !dbg !5265
  store i32 %ts, i32* %ts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ts.addr, metadata !5266, metadata !376), !dbg !5267
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !5268, metadata !376), !dbg !5269
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5270, metadata !376), !dbg !5271
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5272, metadata !376), !dbg !5273
  %0 = load i32, i32* %ts.addr, align 4, !dbg !5274
  %call = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 2, i32 3, i32 %0, i32 4), !dbg !5276
  store i32 %call, i32* %ret, align 4, !dbg !5277
  %cmp = icmp slt i32 %call, 0, !dbg !5278
  br i1 %cmp, label %if.then, label %if.end, !dbg !5279

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ret, align 4, !dbg !5280
  store i32 %1, i32* %retval, align 4, !dbg !5281
  br label %return, !dbg !5281

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !5282
  %2 = load i8*, i8** %data, align 8, !dbg !5282
  store i8* %2, i8** %p, align 8, !dbg !5283
  %3 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !5284
  %bytes_read = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %3, i32 0, i32 19, !dbg !5285
  %4 = load i64, i64* %bytes_read, align 8, !dbg !5285
  %conv = trunc i64 %4 to i32, !dbg !5284
  store i8** %p, i8*** %b.addr.i, align 8, !dbg !5286
  store i32 %conv, i32* %value.addr.i, align 4, !dbg !5286
  %5 = load i32, i32* %value.addr.i, align 4, !dbg !5287
  store i32 %5, i32* %x.addr.i.i, align 4, !dbg !5288
  %6 = load i32, i32* %x.addr.i.i, align 4, !dbg !5289
  %shl.i.i = shl i32 %6, 8, !dbg !5290
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !5291
  %7 = load i32, i32* %x.addr.i.i, align 4, !dbg !5292
  %shr.i.i = lshr i32 %7, 8, !dbg !5293
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !5294
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !5295
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !5296
  %8 = load i32, i32* %x.addr.i.i, align 4, !dbg !5297
  %shr3.i.i = lshr i32 %8, 16, !dbg !5298
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !5299
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !5300
  %9 = load i32, i32* %x.addr.i.i, align 4, !dbg !5301
  %shr6.i.i = lshr i32 %9, 16, !dbg !5302
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !5303
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !5304
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !5305
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !5306
  %10 = load i8**, i8*** %b.addr.i, align 8, !dbg !5307
  %11 = load i8*, i8** %10, align 8, !dbg !5308
  %12 = bitcast i8* %11 to %union.unaligned_32*, !dbg !5309
  %l.i = bitcast %union.unaligned_32* %12 to i32*, !dbg !5309
  store i32 %or10.i.i, i32* %l.i, align 1, !dbg !5310
  %13 = load i8**, i8*** %b.addr.i, align 8, !dbg !5311
  %14 = load i8*, i8** %13, align 8, !dbg !5312
  %add.ptr.i = getelementptr inbounds i8, i8* %14, i64 4, !dbg !5312
  store i8* %add.ptr.i, i8** %13, align 8, !dbg !5312
  %15 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !5313
  %call1 = call i32 @rtmp_send_packet(%struct.RTMPContext* %15, %struct.RTMPPacket* %pkt, i32 0), !dbg !5314
  store i32 %call1, i32* %retval, align 4, !dbg !5315
  br label %return, !dbg !5315

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !5316
  ret i32 %16, !dbg !5316
}

; Function Attrs: nounwind uwtable
define internal i32 @rtmp_parse_result(%struct.URLContext* %s, %struct.RTMPContext* %rt, %struct.RTMPPacket* %pkt) #0 !dbg !5317 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !5320, metadata !376), !dbg !5321
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !5322, metadata !376), !dbg !5323
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !5324, metadata !376), !dbg !5325
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5326, metadata !376), !dbg !5327
  %0 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5328
  %type = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %0, i32 0, i32 1, !dbg !5329
  %1 = load i32, i32* %type, align 4, !dbg !5329
  switch i32 %1, label %sw.default [
    i32 3, label %sw.bb
    i32 1, label %sw.bb1
    i32 4, label %sw.bb2
    i32 6, label %sw.bb7
    i32 5, label %sw.bb12
    i32 20, label %sw.bb17
    i32 9, label %sw.bb22
    i32 8, label %sw.bb22
    i32 22, label %sw.bb22
    i32 18, label %sw.bb22
  ], !dbg !5330

sw.bb:                                            ; preds = %entry
  %2 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5331
  %3 = bitcast %struct.URLContext* %2 to i8*, !dbg !5331
  call void (i8*, i32, i8*, ...) @av_log(i8* %3, i32 56, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.102, i32 0, i32 0)), !dbg !5333
  br label %sw.epilog, !dbg !5334

sw.bb1:                                           ; preds = %entry
  %4 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5335
  %5 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5337
  %call = call i32 @handle_chunk_size(%struct.URLContext* %4, %struct.RTMPPacket* %5), !dbg !5338
  store i32 %call, i32* %ret, align 4, !dbg !5339
  %cmp = icmp slt i32 %call, 0, !dbg !5340
  br i1 %cmp, label %if.then, label %if.end, !dbg !5341

if.then:                                          ; preds = %sw.bb1
  %6 = load i32, i32* %ret, align 4, !dbg !5342
  store i32 %6, i32* %retval, align 4, !dbg !5343
  br label %return, !dbg !5343

if.end:                                           ; preds = %sw.bb1
  br label %sw.epilog, !dbg !5344

sw.bb2:                                           ; preds = %entry
  %7 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5345
  %8 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5347
  %call3 = call i32 @handle_user_control(%struct.URLContext* %7, %struct.RTMPPacket* %8), !dbg !5348
  store i32 %call3, i32* %ret, align 4, !dbg !5349
  %cmp4 = icmp slt i32 %call3, 0, !dbg !5350
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5351

if.then5:                                         ; preds = %sw.bb2
  %9 = load i32, i32* %ret, align 4, !dbg !5352
  store i32 %9, i32* %retval, align 4, !dbg !5353
  br label %return, !dbg !5353

if.end6:                                          ; preds = %sw.bb2
  br label %sw.epilog, !dbg !5354

sw.bb7:                                           ; preds = %entry
  %10 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5355
  %11 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5357
  %call8 = call i32 @handle_set_peer_bw(%struct.URLContext* %10, %struct.RTMPPacket* %11), !dbg !5358
  store i32 %call8, i32* %ret, align 4, !dbg !5359
  %cmp9 = icmp slt i32 %call8, 0, !dbg !5360
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !5361

if.then10:                                        ; preds = %sw.bb7
  %12 = load i32, i32* %ret, align 4, !dbg !5362
  store i32 %12, i32* %retval, align 4, !dbg !5363
  br label %return, !dbg !5363

if.end11:                                         ; preds = %sw.bb7
  br label %sw.epilog, !dbg !5364

sw.bb12:                                          ; preds = %entry
  %13 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5365
  %14 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5367
  %call13 = call i32 @handle_window_ack_size(%struct.URLContext* %13, %struct.RTMPPacket* %14), !dbg !5368
  store i32 %call13, i32* %ret, align 4, !dbg !5369
  %cmp14 = icmp slt i32 %call13, 0, !dbg !5370
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !5371

if.then15:                                        ; preds = %sw.bb12
  %15 = load i32, i32* %ret, align 4, !dbg !5372
  store i32 %15, i32* %retval, align 4, !dbg !5373
  br label %return, !dbg !5373

if.end16:                                         ; preds = %sw.bb12
  br label %sw.epilog, !dbg !5374

sw.bb17:                                          ; preds = %entry
  %16 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5375
  %17 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5377
  %call18 = call i32 @handle_invoke(%struct.URLContext* %16, %struct.RTMPPacket* %17), !dbg !5378
  store i32 %call18, i32* %ret, align 4, !dbg !5379
  %cmp19 = icmp slt i32 %call18, 0, !dbg !5380
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !5381

if.then20:                                        ; preds = %sw.bb17
  %18 = load i32, i32* %ret, align 4, !dbg !5382
  store i32 %18, i32* %retval, align 4, !dbg !5383
  br label %return, !dbg !5383

if.end21:                                         ; preds = %sw.bb17
  br label %sw.epilog, !dbg !5384

sw.bb22:                                          ; preds = %entry, %entry, %entry, %entry
  br label %sw.epilog, !dbg !5385

sw.default:                                       ; preds = %entry
  %19 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5386
  %20 = bitcast %struct.URLContext* %19 to i8*, !dbg !5386
  %21 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5387
  %type23 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %21, i32 0, i32 1, !dbg !5388
  %22 = load i32, i32* %type23, align 4, !dbg !5388
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 40, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.103, i32 0, i32 0), i32 %22), !dbg !5389
  br label %sw.epilog, !dbg !5390

sw.epilog:                                        ; preds = %sw.default, %sw.bb22, %if.end21, %if.end16, %if.end11, %if.end6, %if.end, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !5391
  br label %return, !dbg !5391

return:                                           ; preds = %sw.epilog, %if.then20, %if.then15, %if.then10, %if.then5, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !5392
  ret i32 %23, !dbg !5392
}

; Function Attrs: nounwind uwtable
define internal i32 @append_flv_data(%struct.RTMPContext* %rt, %struct.RTMPPacket* %pkt, i32 %skip) #0 !dbg !5393 {
entry:
  %p.addr.i155 = alloca %struct.PutByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutByteContext** %p.addr.i155, metadata !5394, metadata !376), !dbg !5406
  %value.addr.i156 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i156, metadata !5408, metadata !376), !dbg !5409
  %p.addr.i127 = alloca %struct.PutByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutByteContext** %p.addr.i127, metadata !5394, metadata !376), !dbg !5410
  %value.addr.i128 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i128, metadata !5408, metadata !376), !dbg !5412
  %p.addr.i107 = alloca %struct.PutByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutByteContext** %p.addr.i107, metadata !5413, metadata !376), !dbg !5415
  %value.addr.i108 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i108, metadata !5417, metadata !376), !dbg !5418
  %p.addr.i89 = alloca %struct.PutByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutByteContext** %p.addr.i89, metadata !5394, metadata !376), !dbg !5419
  %value.addr.i90 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i90, metadata !5408, metadata !376), !dbg !5421
  %retval.i = alloca i32, align 4
  %p.addr.i57 = alloca %struct.PutByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutByteContext** %p.addr.i57, metadata !5422, metadata !376), !dbg !5426
  %src.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i, metadata !5428, metadata !376), !dbg !5429
  %size.addr.i58 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i58, metadata !5430, metadata !376), !dbg !5431
  %size2.i59 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size2.i59, metadata !5432, metadata !376), !dbg !5433
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2616, metadata !376), !dbg !5434
  %p.addr.i39 = alloca %struct.PutByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutByteContext** %p.addr.i39, metadata !5441, metadata !376), !dbg !5442
  %value.addr.i40 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i40, metadata !5443, metadata !376), !dbg !5444
  %p.addr.i26 = alloca %struct.PutByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutByteContext** %p.addr.i26, metadata !5413, metadata !376), !dbg !5445
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !5417, metadata !376), !dbg !5447
  %p.addr.i18 = alloca %struct.PutByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutByteContext** %p.addr.i18, metadata !5448, metadata !376), !dbg !5452
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !5454, metadata !376), !dbg !5455
  %size2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size2.i, metadata !5456, metadata !376), !dbg !5457
  %p.addr.i = alloca %struct.PutByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutByteContext** %p.addr.i, metadata !5458, metadata !376), !dbg !5462
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !5464, metadata !376), !dbg !5465
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !5466, metadata !376), !dbg !5467
  %retval = alloca i32, align 4
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %skip.addr = alloca i32, align 4
  %old_flv_size = alloca i32, align 4
  %ret = alloca i32, align 4
  %pbc = alloca %struct.PutByteContext, align 8
  %data = alloca i8*, align 8
  %size = alloca i32, align 4
  %ts = alloca i32, align 4
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !5468, metadata !376), !dbg !5469
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !5470, metadata !376), !dbg !5471
  store i32 %skip, i32* %skip.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %skip.addr, metadata !5472, metadata !376), !dbg !5473
  call void @llvm.dbg.declare(metadata i32* %old_flv_size, metadata !5474, metadata !376), !dbg !5475
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5476, metadata !376), !dbg !5477
  call void @llvm.dbg.declare(metadata %struct.PutByteContext* %pbc, metadata !5478, metadata !376), !dbg !5479
  call void @llvm.dbg.declare(metadata i8** %data, metadata !5480, metadata !376), !dbg !5481
  %0 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5482
  %data1 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %0, i32 0, i32 5, !dbg !5483
  %1 = load i8*, i8** %data1, align 8, !dbg !5483
  %2 = load i32, i32* %skip.addr, align 4, !dbg !5484
  %idx.ext = sext i32 %2 to i64, !dbg !5485
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !5485
  store i8* %add.ptr, i8** %data, align 8, !dbg !5481
  call void @llvm.dbg.declare(metadata i32* %size, metadata !5486, metadata !376), !dbg !5488
  %3 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5489
  %size2 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %3, i32 0, i32 6, !dbg !5490
  %4 = load i32, i32* %size2, align 8, !dbg !5490
  %5 = load i32, i32* %skip.addr, align 4, !dbg !5491
  %sub = sub nsw i32 %4, %5, !dbg !5492
  store i32 %sub, i32* %size, align 4, !dbg !5488
  call void @llvm.dbg.declare(metadata i32* %ts, metadata !5493, metadata !376), !dbg !5494
  %6 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5495
  %timestamp = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %6, i32 0, i32 2, !dbg !5496
  %7 = load i32, i32* %timestamp, align 8, !dbg !5496
  store i32 %7, i32* %ts, align 4, !dbg !5494
  %8 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5497
  %type = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %8, i32 0, i32 1, !dbg !5499
  %9 = load i32, i32* %type, align 4, !dbg !5499
  %cmp = icmp eq i32 %9, 8, !dbg !5500
  br i1 %cmp, label %if.then, label %if.else, !dbg !5501

if.then:                                          ; preds = %entry
  %10 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !5502
  %has_audio = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %10, i32 0, i32 23, !dbg !5504
  store i32 1, i32* %has_audio, align 8, !dbg !5505
  br label %if.end6, !dbg !5506

if.else:                                          ; preds = %entry
  %11 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5507
  %type3 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %11, i32 0, i32 1, !dbg !5510
  %12 = load i32, i32* %type3, align 4, !dbg !5510
  %cmp4 = icmp eq i32 %12, 9, !dbg !5511
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !5507

if.then5:                                         ; preds = %if.else
  %13 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !5512
  %has_video = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %13, i32 0, i32 24, !dbg !5514
  store i32 1, i32* %has_video, align 4, !dbg !5515
  br label %if.end, !dbg !5516

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %14 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !5517
  %15 = load i32, i32* %size, align 4, !dbg !5518
  %add = add nsw i32 %15, 15, !dbg !5519
  %call = call i32 @update_offset(%struct.RTMPContext* %14, i32 %add), !dbg !5520
  store i32 %call, i32* %old_flv_size, align 4, !dbg !5521
  %16 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !5522
  %flv_data = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %16, i32 0, i32 13, !dbg !5524
  %17 = bitcast i8** %flv_data to i8*, !dbg !5525
  %18 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !5526
  %flv_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %18, i32 0, i32 14, !dbg !5527
  %19 = load i32, i32* %flv_size, align 8, !dbg !5527
  %conv = sext i32 %19 to i64, !dbg !5526
  %call7 = call i32 @av_reallocp(i8* %17, i64 %conv), !dbg !5528
  store i32 %call7, i32* %ret, align 4, !dbg !5529
  %cmp8 = icmp slt i32 %call7, 0, !dbg !5530
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !5531

if.then10:                                        ; preds = %if.end6
  %20 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !5532
  %flv_off = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %20, i32 0, i32 15, !dbg !5534
  store i32 0, i32* %flv_off, align 4, !dbg !5535
  %21 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !5536
  %flv_size11 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %21, i32 0, i32 14, !dbg !5537
  store i32 0, i32* %flv_size11, align 8, !dbg !5538
  %22 = load i32, i32* %ret, align 4, !dbg !5539
  store i32 %22, i32* %retval, align 4, !dbg !5540
  br label %return, !dbg !5540

if.end12:                                         ; preds = %if.end6
  %23 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !5541
  %flv_data13 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %23, i32 0, i32 13, !dbg !5542
  %24 = load i8*, i8** %flv_data13, align 8, !dbg !5542
  %25 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !5543
  %flv_size14 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %25, i32 0, i32 14, !dbg !5544
  %26 = load i32, i32* %flv_size14, align 8, !dbg !5544
  store %struct.PutByteContext* %pbc, %struct.PutByteContext** %p.addr.i, align 8, !dbg !5545
  store i8* %24, i8** %buf.addr.i, align 8, !dbg !5545
  store i32 %26, i32* %buf_size.addr.i, align 4, !dbg !5545
  %27 = load i32, i32* %buf_size.addr.i, align 4, !dbg !5546
  %cmp.i = icmp sge i32 %27, 0, !dbg !5550
  br i1 %cmp.i, label %bytestream2_init_writer.exit, label %if.then.i, !dbg !5551

if.then.i:                                        ; preds = %if.end12
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.72, i32 0, i32 0), i32 147) #10, !dbg !5552
  call void @abort() #11, !dbg !5555
  unreachable, !dbg !5557

bytestream2_init_writer.exit:                     ; preds = %if.end12
  %28 = load i8*, i8** %buf.addr.i, align 8, !dbg !5558
  %29 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i, align 8, !dbg !5559
  %buffer.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %29, i32 0, i32 0, !dbg !5560
  store i8* %28, i8** %buffer.i, align 8, !dbg !5561
  %30 = load i8*, i8** %buf.addr.i, align 8, !dbg !5562
  %31 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i, align 8, !dbg !5563
  %buffer_start.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %31, i32 0, i32 2, !dbg !5564
  store i8* %30, i8** %buffer_start.i, align 8, !dbg !5565
  %32 = load i8*, i8** %buf.addr.i, align 8, !dbg !5566
  %33 = load i32, i32* %buf_size.addr.i, align 4, !dbg !5567
  %idx.ext.i = sext i32 %33 to i64, !dbg !5568
  %add.ptr.i = getelementptr inbounds i8, i8* %32, i64 %idx.ext.i, !dbg !5568
  %34 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i, align 8, !dbg !5569
  %buffer_end.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %34, i32 0, i32 1, !dbg !5570
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !5571
  %35 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i, align 8, !dbg !5572
  %eof.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %35, i32 0, i32 3, !dbg !5573
  store i32 0, i32* %eof.i, align 8, !dbg !5574
  %36 = load i32, i32* %old_flv_size, align 4, !dbg !5575
  store %struct.PutByteContext* %pbc, %struct.PutByteContext** %p.addr.i18, align 8, !dbg !5576
  store i32 %36, i32* %size.addr.i, align 4, !dbg !5576
  %37 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i18, align 8, !dbg !5577
  %eof.i19 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %37, i32 0, i32 3, !dbg !5579
  %38 = load i32, i32* %eof.i19, align 8, !dbg !5579
  %tobool.i = icmp ne i32 %38, 0, !dbg !5577
  br i1 %tobool.i, label %if.then.i20, label %if.end.i, !dbg !5580

if.then.i20:                                      ; preds = %bytestream2_init_writer.exit
  br label %bytestream2_skip_p.exit, !dbg !5581

if.end.i:                                         ; preds = %bytestream2_init_writer.exit
  %39 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i18, align 8, !dbg !5582
  %buffer_end.i21 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %39, i32 0, i32 1, !dbg !5583
  %40 = load i8*, i8** %buffer_end.i21, align 8, !dbg !5583
  %41 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i18, align 8, !dbg !5584
  %buffer.i22 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %41, i32 0, i32 0, !dbg !5585
  %42 = load i8*, i8** %buffer.i22, align 8, !dbg !5585
  %sub.ptr.lhs.cast.i = ptrtoint i8* %40 to i64, !dbg !5586
  %sub.ptr.rhs.cast.i = ptrtoint i8* %42 to i64, !dbg !5586
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !5586
  %43 = load i32, i32* %size.addr.i, align 4, !dbg !5587
  %conv.i = zext i32 %43 to i64, !dbg !5588
  %cmp.i23 = icmp sgt i64 %sub.ptr.sub.i, %conv.i, !dbg !5589
  br i1 %cmp.i23, label %cond.true.i, label %cond.false.i, !dbg !5590

cond.true.i:                                      ; preds = %if.end.i
  %44 = load i32, i32* %size.addr.i, align 4, !dbg !5591
  %conv2.i = zext i32 %44 to i64, !dbg !5593
  br label %cond.end.i, !dbg !5594

cond.false.i:                                     ; preds = %if.end.i
  %45 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i18, align 8, !dbg !5595
  %buffer_end3.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %45, i32 0, i32 1, !dbg !5597
  %46 = load i8*, i8** %buffer_end3.i, align 8, !dbg !5597
  %47 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i18, align 8, !dbg !5598
  %buffer4.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %47, i32 0, i32 0, !dbg !5599
  %48 = load i8*, i8** %buffer4.i, align 8, !dbg !5599
  %sub.ptr.lhs.cast5.i = ptrtoint i8* %46 to i64, !dbg !5600
  %sub.ptr.rhs.cast6.i = ptrtoint i8* %48 to i64, !dbg !5600
  %sub.ptr.sub7.i = sub i64 %sub.ptr.lhs.cast5.i, %sub.ptr.rhs.cast6.i, !dbg !5600
  br label %cond.end.i, !dbg !5601

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i64 [ %conv2.i, %cond.true.i ], [ %sub.ptr.sub7.i, %cond.false.i ], !dbg !5602
  %conv8.i = trunc i64 %cond.i to i32, !dbg !5604
  store i32 %conv8.i, i32* %size2.i, align 4, !dbg !5605
  %49 = load i32, i32* %size2.i, align 4, !dbg !5606
  %50 = load i32, i32* %size.addr.i, align 4, !dbg !5608
  %cmp9.i = icmp ne i32 %49, %50, !dbg !5609
  br i1 %cmp9.i, label %if.then11.i, label %if.end13.i, !dbg !5610

if.then11.i:                                      ; preds = %cond.end.i
  %51 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i18, align 8, !dbg !5611
  %eof12.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %51, i32 0, i32 3, !dbg !5612
  store i32 1, i32* %eof12.i, align 8, !dbg !5613
  br label %if.end13.i, !dbg !5611

if.end13.i:                                       ; preds = %if.then11.i, %cond.end.i
  %52 = load i32, i32* %size2.i, align 4, !dbg !5614
  %53 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i18, align 8, !dbg !5615
  %buffer14.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %53, i32 0, i32 0, !dbg !5616
  %54 = load i8*, i8** %buffer14.i, align 8, !dbg !5617
  %idx.ext.i24 = sext i32 %52 to i64, !dbg !5617
  %add.ptr.i25 = getelementptr inbounds i8, i8* %54, i64 %idx.ext.i24, !dbg !5617
  store i8* %add.ptr.i25, i8** %buffer14.i, align 8, !dbg !5617
  br label %bytestream2_skip_p.exit, !dbg !5618

bytestream2_skip_p.exit:                          ; preds = %if.then.i20, %if.end13.i
  %55 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5619
  %type15 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %55, i32 0, i32 1, !dbg !5620
  %56 = load i32, i32* %type15, align 4, !dbg !5620
  store %struct.PutByteContext* %pbc, %struct.PutByteContext** %p.addr.i26, align 8, !dbg !5621
  store i32 %56, i32* %value.addr.i, align 4, !dbg !5621
  %57 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i26, align 8, !dbg !5622
  %eof.i27 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %57, i32 0, i32 3, !dbg !5624
  %58 = load i32, i32* %eof.i27, align 8, !dbg !5624
  %tobool.i28 = icmp ne i32 %58, 0, !dbg !5622
  br i1 %tobool.i28, label %if.else.i, label %land.lhs.true.i, !dbg !5625

land.lhs.true.i:                                  ; preds = %bytestream2_skip_p.exit
  %59 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i26, align 8, !dbg !5626
  %buffer_end.i29 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %59, i32 0, i32 1, !dbg !5628
  %60 = load i8*, i8** %buffer_end.i29, align 8, !dbg !5628
  %61 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i26, align 8, !dbg !5629
  %buffer.i30 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %61, i32 0, i32 0, !dbg !5630
  %62 = load i8*, i8** %buffer.i30, align 8, !dbg !5630
  %sub.ptr.lhs.cast.i31 = ptrtoint i8* %60 to i64, !dbg !5631
  %sub.ptr.rhs.cast.i32 = ptrtoint i8* %62 to i64, !dbg !5631
  %sub.ptr.sub.i33 = sub i64 %sub.ptr.lhs.cast.i31, %sub.ptr.rhs.cast.i32, !dbg !5631
  %cmp.i34 = icmp sge i64 %sub.ptr.sub.i33, 1, !dbg !5632
  br i1 %cmp.i34, label %if.then.i35, label %if.else.i, !dbg !5633

if.then.i35:                                      ; preds = %land.lhs.true.i
  %63 = load i32, i32* %value.addr.i, align 4, !dbg !5634
  %conv.i36 = trunc i32 %63 to i8, !dbg !5638
  %64 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i26, align 8, !dbg !5639
  %buffer1.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %64, i32 0, i32 0, !dbg !5640
  %65 = load i8*, i8** %buffer1.i, align 8, !dbg !5640
  store i8 %conv.i36, i8* %65, align 1, !dbg !5641
  %66 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i26, align 8, !dbg !5642
  %buffer2.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %66, i32 0, i32 0, !dbg !5644
  %67 = load i8*, i8** %buffer2.i, align 8, !dbg !5645
  %add.ptr.i37 = getelementptr inbounds i8, i8* %67, i64 1, !dbg !5645
  store i8* %add.ptr.i37, i8** %buffer2.i, align 8, !dbg !5645
  br label %bytestream2_put_byte.exit, !dbg !5646

if.else.i:                                        ; preds = %land.lhs.true.i, %bytestream2_skip_p.exit
  %68 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i26, align 8, !dbg !5647
  %eof3.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %68, i32 0, i32 3, !dbg !5649
  store i32 1, i32* %eof3.i, align 8, !dbg !5650
  br label %bytestream2_put_byte.exit, !dbg !5621

bytestream2_put_byte.exit:                        ; preds = %if.then.i35, %if.else.i
  %69 = load i32, i32* %size, align 4, !dbg !5651
  store %struct.PutByteContext* %pbc, %struct.PutByteContext** %p.addr.i155, align 8, !dbg !5652
  store i32 %69, i32* %value.addr.i156, align 4, !dbg !5652
  %70 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i155, align 8, !dbg !5653
  %eof.i157 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %70, i32 0, i32 3, !dbg !5655
  %71 = load i32, i32* %eof.i157, align 8, !dbg !5655
  %tobool.i158 = icmp ne i32 %71, 0, !dbg !5653
  br i1 %tobool.i158, label %if.else.i180, label %land.lhs.true.i165, !dbg !5656

land.lhs.true.i165:                               ; preds = %bytestream2_put_byte.exit
  %72 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i155, align 8, !dbg !5657
  %buffer_end.i159 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %72, i32 0, i32 1, !dbg !5659
  %73 = load i8*, i8** %buffer_end.i159, align 8, !dbg !5659
  %74 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i155, align 8, !dbg !5660
  %buffer.i160 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %74, i32 0, i32 0, !dbg !5661
  %75 = load i8*, i8** %buffer.i160, align 8, !dbg !5661
  %sub.ptr.lhs.cast.i161 = ptrtoint i8* %73 to i64, !dbg !5662
  %sub.ptr.rhs.cast.i162 = ptrtoint i8* %75 to i64, !dbg !5662
  %sub.ptr.sub.i163 = sub i64 %sub.ptr.lhs.cast.i161, %sub.ptr.rhs.cast.i162, !dbg !5662
  %cmp.i164 = icmp sge i64 %sub.ptr.sub.i163, 3, !dbg !5663
  br i1 %cmp.i164, label %if.then.i166, label %if.else.i180, !dbg !5664

if.then.i166:                                     ; preds = %land.lhs.true.i165
  %76 = load i32, i32* %value.addr.i156, align 4, !dbg !5665
  %conv.i167 = trunc i32 %76 to i8, !dbg !5669
  %77 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i155, align 8, !dbg !5670
  %buffer1.i168 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %77, i32 0, i32 0, !dbg !5671
  %78 = load i8*, i8** %buffer1.i168, align 8, !dbg !5671
  %arrayidx.i169 = getelementptr inbounds i8, i8* %78, i64 2, !dbg !5672
  store i8 %conv.i167, i8* %arrayidx.i169, align 1, !dbg !5673
  %79 = load i32, i32* %value.addr.i156, align 4, !dbg !5674
  %shr.i170 = lshr i32 %79, 8, !dbg !5675
  %conv2.i171 = trunc i32 %shr.i170 to i8, !dbg !5676
  %80 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i155, align 8, !dbg !5677
  %buffer3.i172 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %80, i32 0, i32 0, !dbg !5678
  %81 = load i8*, i8** %buffer3.i172, align 8, !dbg !5678
  %arrayidx4.i173 = getelementptr inbounds i8, i8* %81, i64 1, !dbg !5679
  store i8 %conv2.i171, i8* %arrayidx4.i173, align 1, !dbg !5680
  %82 = load i32, i32* %value.addr.i156, align 4, !dbg !5681
  %shr5.i174 = lshr i32 %82, 16, !dbg !5682
  %conv6.i175 = trunc i32 %shr5.i174 to i8, !dbg !5683
  %83 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i155, align 8, !dbg !5684
  %buffer7.i176 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %83, i32 0, i32 0, !dbg !5685
  %84 = load i8*, i8** %buffer7.i176, align 8, !dbg !5685
  store i8 %conv6.i175, i8* %84, align 1, !dbg !5686
  %85 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i155, align 8, !dbg !5687
  %buffer9.i177 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %85, i32 0, i32 0, !dbg !5689
  %86 = load i8*, i8** %buffer9.i177, align 8, !dbg !5690
  %add.ptr.i178 = getelementptr inbounds i8, i8* %86, i64 3, !dbg !5690
  store i8* %add.ptr.i178, i8** %buffer9.i177, align 8, !dbg !5690
  br label %bytestream2_put_be24.exit182, !dbg !5691

if.else.i180:                                     ; preds = %land.lhs.true.i165, %bytestream2_put_byte.exit
  %87 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i155, align 8, !dbg !5692
  %eof10.i179 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %87, i32 0, i32 3, !dbg !5694
  store i32 1, i32* %eof10.i179, align 8, !dbg !5695
  br label %bytestream2_put_be24.exit182, !dbg !5652

bytestream2_put_be24.exit182:                     ; preds = %if.then.i166, %if.else.i180
  %88 = load i32, i32* %ts, align 4, !dbg !5696
  store %struct.PutByteContext* %pbc, %struct.PutByteContext** %p.addr.i127, align 8, !dbg !5697
  store i32 %88, i32* %value.addr.i128, align 4, !dbg !5697
  %89 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i127, align 8, !dbg !5698
  %eof.i129 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %89, i32 0, i32 3, !dbg !5699
  %90 = load i32, i32* %eof.i129, align 8, !dbg !5699
  %tobool.i130 = icmp ne i32 %90, 0, !dbg !5698
  br i1 %tobool.i130, label %if.else.i152, label %land.lhs.true.i137, !dbg !5700

land.lhs.true.i137:                               ; preds = %bytestream2_put_be24.exit182
  %91 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i127, align 8, !dbg !5701
  %buffer_end.i131 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %91, i32 0, i32 1, !dbg !5702
  %92 = load i8*, i8** %buffer_end.i131, align 8, !dbg !5702
  %93 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i127, align 8, !dbg !5703
  %buffer.i132 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %93, i32 0, i32 0, !dbg !5704
  %94 = load i8*, i8** %buffer.i132, align 8, !dbg !5704
  %sub.ptr.lhs.cast.i133 = ptrtoint i8* %92 to i64, !dbg !5705
  %sub.ptr.rhs.cast.i134 = ptrtoint i8* %94 to i64, !dbg !5705
  %sub.ptr.sub.i135 = sub i64 %sub.ptr.lhs.cast.i133, %sub.ptr.rhs.cast.i134, !dbg !5705
  %cmp.i136 = icmp sge i64 %sub.ptr.sub.i135, 3, !dbg !5706
  br i1 %cmp.i136, label %if.then.i138, label %if.else.i152, !dbg !5707

if.then.i138:                                     ; preds = %land.lhs.true.i137
  %95 = load i32, i32* %value.addr.i128, align 4, !dbg !5708
  %conv.i139 = trunc i32 %95 to i8, !dbg !5709
  %96 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i127, align 8, !dbg !5710
  %buffer1.i140 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %96, i32 0, i32 0, !dbg !5711
  %97 = load i8*, i8** %buffer1.i140, align 8, !dbg !5711
  %arrayidx.i141 = getelementptr inbounds i8, i8* %97, i64 2, !dbg !5712
  store i8 %conv.i139, i8* %arrayidx.i141, align 1, !dbg !5713
  %98 = load i32, i32* %value.addr.i128, align 4, !dbg !5714
  %shr.i142 = lshr i32 %98, 8, !dbg !5715
  %conv2.i143 = trunc i32 %shr.i142 to i8, !dbg !5716
  %99 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i127, align 8, !dbg !5717
  %buffer3.i144 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %99, i32 0, i32 0, !dbg !5718
  %100 = load i8*, i8** %buffer3.i144, align 8, !dbg !5718
  %arrayidx4.i145 = getelementptr inbounds i8, i8* %100, i64 1, !dbg !5719
  store i8 %conv2.i143, i8* %arrayidx4.i145, align 1, !dbg !5720
  %101 = load i32, i32* %value.addr.i128, align 4, !dbg !5721
  %shr5.i146 = lshr i32 %101, 16, !dbg !5722
  %conv6.i147 = trunc i32 %shr5.i146 to i8, !dbg !5723
  %102 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i127, align 8, !dbg !5724
  %buffer7.i148 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %102, i32 0, i32 0, !dbg !5725
  %103 = load i8*, i8** %buffer7.i148, align 8, !dbg !5725
  store i8 %conv6.i147, i8* %103, align 1, !dbg !5726
  %104 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i127, align 8, !dbg !5727
  %buffer9.i149 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %104, i32 0, i32 0, !dbg !5728
  %105 = load i8*, i8** %buffer9.i149, align 8, !dbg !5729
  %add.ptr.i150 = getelementptr inbounds i8, i8* %105, i64 3, !dbg !5729
  store i8* %add.ptr.i150, i8** %buffer9.i149, align 8, !dbg !5729
  br label %bytestream2_put_be24.exit154, !dbg !5730

if.else.i152:                                     ; preds = %land.lhs.true.i137, %bytestream2_put_be24.exit182
  %106 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i127, align 8, !dbg !5731
  %eof10.i151 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %106, i32 0, i32 3, !dbg !5732
  store i32 1, i32* %eof10.i151, align 8, !dbg !5733
  br label %bytestream2_put_be24.exit154, !dbg !5697

bytestream2_put_be24.exit154:                     ; preds = %if.then.i138, %if.else.i152
  %107 = load i32, i32* %ts, align 4, !dbg !5734
  %shr = lshr i32 %107, 24, !dbg !5735
  store %struct.PutByteContext* %pbc, %struct.PutByteContext** %p.addr.i107, align 8, !dbg !5736
  store i32 %shr, i32* %value.addr.i108, align 4, !dbg !5736
  %108 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i107, align 8, !dbg !5737
  %eof.i109 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %108, i32 0, i32 3, !dbg !5738
  %109 = load i32, i32* %eof.i109, align 8, !dbg !5738
  %tobool.i110 = icmp ne i32 %109, 0, !dbg !5737
  br i1 %tobool.i110, label %if.else.i124, label %land.lhs.true.i117, !dbg !5739

land.lhs.true.i117:                               ; preds = %bytestream2_put_be24.exit154
  %110 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i107, align 8, !dbg !5740
  %buffer_end.i111 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %110, i32 0, i32 1, !dbg !5741
  %111 = load i8*, i8** %buffer_end.i111, align 8, !dbg !5741
  %112 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i107, align 8, !dbg !5742
  %buffer.i112 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %112, i32 0, i32 0, !dbg !5743
  %113 = load i8*, i8** %buffer.i112, align 8, !dbg !5743
  %sub.ptr.lhs.cast.i113 = ptrtoint i8* %111 to i64, !dbg !5744
  %sub.ptr.rhs.cast.i114 = ptrtoint i8* %113 to i64, !dbg !5744
  %sub.ptr.sub.i115 = sub i64 %sub.ptr.lhs.cast.i113, %sub.ptr.rhs.cast.i114, !dbg !5744
  %cmp.i116 = icmp sge i64 %sub.ptr.sub.i115, 1, !dbg !5745
  br i1 %cmp.i116, label %if.then.i118, label %if.else.i124, !dbg !5746

if.then.i118:                                     ; preds = %land.lhs.true.i117
  %114 = load i32, i32* %value.addr.i108, align 4, !dbg !5747
  %conv.i119 = trunc i32 %114 to i8, !dbg !5748
  %115 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i107, align 8, !dbg !5749
  %buffer1.i120 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %115, i32 0, i32 0, !dbg !5750
  %116 = load i8*, i8** %buffer1.i120, align 8, !dbg !5750
  store i8 %conv.i119, i8* %116, align 1, !dbg !5751
  %117 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i107, align 8, !dbg !5752
  %buffer2.i121 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %117, i32 0, i32 0, !dbg !5753
  %118 = load i8*, i8** %buffer2.i121, align 8, !dbg !5754
  %add.ptr.i122 = getelementptr inbounds i8, i8* %118, i64 1, !dbg !5754
  store i8* %add.ptr.i122, i8** %buffer2.i121, align 8, !dbg !5754
  br label %bytestream2_put_byte.exit126, !dbg !5755

if.else.i124:                                     ; preds = %land.lhs.true.i117, %bytestream2_put_be24.exit154
  %119 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i107, align 8, !dbg !5756
  %eof3.i123 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %119, i32 0, i32 3, !dbg !5757
  store i32 1, i32* %eof3.i123, align 8, !dbg !5758
  br label %bytestream2_put_byte.exit126, !dbg !5736

bytestream2_put_byte.exit126:                     ; preds = %if.then.i118, %if.else.i124
  store %struct.PutByteContext* %pbc, %struct.PutByteContext** %p.addr.i89, align 8, !dbg !5759
  store i32 0, i32* %value.addr.i90, align 4, !dbg !5759
  %120 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i89, align 8, !dbg !5760
  %eof.i91 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %120, i32 0, i32 3, !dbg !5761
  %121 = load i32, i32* %eof.i91, align 8, !dbg !5761
  %tobool.i92 = icmp ne i32 %121, 0, !dbg !5760
  br i1 %tobool.i92, label %if.else.i105, label %land.lhs.true.i99, !dbg !5762

land.lhs.true.i99:                                ; preds = %bytestream2_put_byte.exit126
  %122 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i89, align 8, !dbg !5763
  %buffer_end.i93 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %122, i32 0, i32 1, !dbg !5764
  %123 = load i8*, i8** %buffer_end.i93, align 8, !dbg !5764
  %124 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i89, align 8, !dbg !5765
  %buffer.i94 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %124, i32 0, i32 0, !dbg !5766
  %125 = load i8*, i8** %buffer.i94, align 8, !dbg !5766
  %sub.ptr.lhs.cast.i95 = ptrtoint i8* %123 to i64, !dbg !5767
  %sub.ptr.rhs.cast.i96 = ptrtoint i8* %125 to i64, !dbg !5767
  %sub.ptr.sub.i97 = sub i64 %sub.ptr.lhs.cast.i95, %sub.ptr.rhs.cast.i96, !dbg !5767
  %cmp.i98 = icmp sge i64 %sub.ptr.sub.i97, 3, !dbg !5768
  br i1 %cmp.i98, label %if.then.i100, label %if.else.i105, !dbg !5769

if.then.i100:                                     ; preds = %land.lhs.true.i99
  %126 = load i32, i32* %value.addr.i90, align 4, !dbg !5770
  %conv.i101 = trunc i32 %126 to i8, !dbg !5771
  %127 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i89, align 8, !dbg !5772
  %buffer1.i102 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %127, i32 0, i32 0, !dbg !5773
  %128 = load i8*, i8** %buffer1.i102, align 8, !dbg !5773
  %arrayidx.i = getelementptr inbounds i8, i8* %128, i64 2, !dbg !5774
  store i8 %conv.i101, i8* %arrayidx.i, align 1, !dbg !5775
  %129 = load i32, i32* %value.addr.i90, align 4, !dbg !5776
  %shr.i = lshr i32 %129, 8, !dbg !5777
  %conv2.i103 = trunc i32 %shr.i to i8, !dbg !5778
  %130 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i89, align 8, !dbg !5779
  %buffer3.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %130, i32 0, i32 0, !dbg !5780
  %131 = load i8*, i8** %buffer3.i, align 8, !dbg !5780
  %arrayidx4.i = getelementptr inbounds i8, i8* %131, i64 1, !dbg !5781
  store i8 %conv2.i103, i8* %arrayidx4.i, align 1, !dbg !5782
  %132 = load i32, i32* %value.addr.i90, align 4, !dbg !5783
  %shr5.i = lshr i32 %132, 16, !dbg !5784
  %conv6.i = trunc i32 %shr5.i to i8, !dbg !5785
  %133 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i89, align 8, !dbg !5786
  %buffer7.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %133, i32 0, i32 0, !dbg !5787
  %134 = load i8*, i8** %buffer7.i, align 8, !dbg !5787
  store i8 %conv6.i, i8* %134, align 1, !dbg !5788
  %135 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i89, align 8, !dbg !5789
  %buffer9.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %135, i32 0, i32 0, !dbg !5790
  %136 = load i8*, i8** %buffer9.i, align 8, !dbg !5791
  %add.ptr.i104 = getelementptr inbounds i8, i8* %136, i64 3, !dbg !5791
  store i8* %add.ptr.i104, i8** %buffer9.i, align 8, !dbg !5791
  br label %bytestream2_put_be24.exit, !dbg !5792

if.else.i105:                                     ; preds = %land.lhs.true.i99, %bytestream2_put_byte.exit126
  %137 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i89, align 8, !dbg !5793
  %eof10.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %137, i32 0, i32 3, !dbg !5794
  store i32 1, i32* %eof10.i, align 8, !dbg !5795
  br label %bytestream2_put_be24.exit, !dbg !5759

bytestream2_put_be24.exit:                        ; preds = %if.then.i100, %if.else.i105
  %138 = load i8*, i8** %data, align 8, !dbg !5796
  %139 = load i32, i32* %size, align 4, !dbg !5797
  store %struct.PutByteContext* %pbc, %struct.PutByteContext** %p.addr.i57, align 8, !dbg !5798
  store i8* %138, i8** %src.addr.i, align 8, !dbg !5798
  store i32 %139, i32* %size.addr.i58, align 4, !dbg !5798
  %140 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i57, align 8, !dbg !5799
  %eof.i60 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %140, i32 0, i32 3, !dbg !5801
  %141 = load i32, i32* %eof.i60, align 8, !dbg !5801
  %tobool.i61 = icmp ne i32 %141, 0, !dbg !5799
  br i1 %tobool.i61, label %if.then.i62, label %if.end.i70, !dbg !5802

if.then.i62:                                      ; preds = %bytestream2_put_be24.exit
  store i32 0, i32* %retval.i, align 4, !dbg !5803
  br label %bytestream2_put_buffer.exit, !dbg !5803

if.end.i70:                                       ; preds = %bytestream2_put_be24.exit
  %142 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i57, align 8, !dbg !5804
  %buffer_end.i63 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %142, i32 0, i32 1, !dbg !5805
  %143 = load i8*, i8** %buffer_end.i63, align 8, !dbg !5805
  %144 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i57, align 8, !dbg !5806
  %buffer.i64 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %144, i32 0, i32 0, !dbg !5807
  %145 = load i8*, i8** %buffer.i64, align 8, !dbg !5807
  %sub.ptr.lhs.cast.i65 = ptrtoint i8* %143 to i64, !dbg !5808
  %sub.ptr.rhs.cast.i66 = ptrtoint i8* %145 to i64, !dbg !5808
  %sub.ptr.sub.i67 = sub i64 %sub.ptr.lhs.cast.i65, %sub.ptr.rhs.cast.i66, !dbg !5808
  %146 = load i32, i32* %size.addr.i58, align 4, !dbg !5809
  %conv.i68 = zext i32 %146 to i64, !dbg !5810
  %cmp.i69 = icmp sgt i64 %sub.ptr.sub.i67, %conv.i68, !dbg !5811
  br i1 %cmp.i69, label %cond.true.i72, label %cond.false.i78, !dbg !5812

cond.true.i72:                                    ; preds = %if.end.i70
  %147 = load i32, i32* %size.addr.i58, align 4, !dbg !5813
  %conv2.i71 = zext i32 %147 to i64, !dbg !5815
  br label %cond.end.i82, !dbg !5816

cond.false.i78:                                   ; preds = %if.end.i70
  %148 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i57, align 8, !dbg !5817
  %buffer_end3.i73 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %148, i32 0, i32 1, !dbg !5819
  %149 = load i8*, i8** %buffer_end3.i73, align 8, !dbg !5819
  %150 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i57, align 8, !dbg !5820
  %buffer4.i74 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %150, i32 0, i32 0, !dbg !5821
  %151 = load i8*, i8** %buffer4.i74, align 8, !dbg !5821
  %sub.ptr.lhs.cast5.i75 = ptrtoint i8* %149 to i64, !dbg !5822
  %sub.ptr.rhs.cast6.i76 = ptrtoint i8* %151 to i64, !dbg !5822
  %sub.ptr.sub7.i77 = sub i64 %sub.ptr.lhs.cast5.i75, %sub.ptr.rhs.cast6.i76, !dbg !5822
  br label %cond.end.i82, !dbg !5823

cond.end.i82:                                     ; preds = %cond.false.i78, %cond.true.i72
  %cond.i79 = phi i64 [ %conv2.i71, %cond.true.i72 ], [ %sub.ptr.sub7.i77, %cond.false.i78 ], !dbg !5824
  %conv8.i80 = trunc i64 %cond.i79 to i32, !dbg !5826
  store i32 %conv8.i80, i32* %size2.i59, align 4, !dbg !5827
  %152 = load i32, i32* %size2.i59, align 4, !dbg !5828
  %153 = load i32, i32* %size.addr.i58, align 4, !dbg !5830
  %cmp9.i81 = icmp ne i32 %152, %153, !dbg !5831
  br i1 %cmp9.i81, label %if.then11.i84, label %if.end13.i88, !dbg !5832

if.then11.i84:                                    ; preds = %cond.end.i82
  %154 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i57, align 8, !dbg !5833
  %eof12.i83 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %154, i32 0, i32 3, !dbg !5834
  store i32 1, i32* %eof12.i83, align 8, !dbg !5835
  br label %if.end13.i88, !dbg !5833

if.end13.i88:                                     ; preds = %if.then11.i84, %cond.end.i82
  %155 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i57, align 8, !dbg !5836
  %buffer14.i85 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %155, i32 0, i32 0, !dbg !5837
  %156 = load i8*, i8** %buffer14.i85, align 8, !dbg !5837
  %157 = load i8*, i8** %src.addr.i, align 8, !dbg !5838
  %158 = load i32, i32* %size2.i59, align 4, !dbg !5839
  %conv15.i = sext i32 %158 to i64, !dbg !5839
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %156, i8* %157, i64 %conv15.i, i32 1, i1 false) #10, !dbg !5840
  %159 = load i32, i32* %size2.i59, align 4, !dbg !5841
  %160 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i57, align 8, !dbg !5842
  %buffer16.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %160, i32 0, i32 0, !dbg !5843
  %161 = load i8*, i8** %buffer16.i, align 8, !dbg !5844
  %idx.ext.i86 = sext i32 %159 to i64, !dbg !5844
  %add.ptr.i87 = getelementptr inbounds i8, i8* %161, i64 %idx.ext.i86, !dbg !5844
  store i8* %add.ptr.i87, i8** %buffer16.i, align 8, !dbg !5844
  %162 = load i32, i32* %size2.i59, align 4, !dbg !5845
  store i32 %162, i32* %retval.i, align 4, !dbg !5846
  br label %bytestream2_put_buffer.exit, !dbg !5846

bytestream2_put_buffer.exit:                      ; preds = %if.then.i62, %if.end13.i88
  %163 = load i32, i32* %retval.i, align 4, !dbg !5847
  %164 = load i32, i32* %size, align 4, !dbg !5848
  %add17 = add nsw i32 %164, 11, !dbg !5849
  store %struct.PutByteContext* %pbc, %struct.PutByteContext** %p.addr.i39, align 8, !dbg !5850
  store i32 %add17, i32* %value.addr.i40, align 4, !dbg !5850
  %165 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i39, align 8, !dbg !5851
  %eof.i41 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %165, i32 0, i32 3, !dbg !5852
  %166 = load i32, i32* %eof.i41, align 8, !dbg !5852
  %tobool.i42 = icmp ne i32 %166, 0, !dbg !5851
  br i1 %tobool.i42, label %if.else.i55, label %land.lhs.true.i49, !dbg !5853

land.lhs.true.i49:                                ; preds = %bytestream2_put_buffer.exit
  %167 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i39, align 8, !dbg !5854
  %buffer_end.i43 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %167, i32 0, i32 1, !dbg !5856
  %168 = load i8*, i8** %buffer_end.i43, align 8, !dbg !5856
  %169 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i39, align 8, !dbg !5857
  %buffer.i44 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %169, i32 0, i32 0, !dbg !5858
  %170 = load i8*, i8** %buffer.i44, align 8, !dbg !5858
  %sub.ptr.lhs.cast.i45 = ptrtoint i8* %168 to i64, !dbg !5859
  %sub.ptr.rhs.cast.i46 = ptrtoint i8* %170 to i64, !dbg !5859
  %sub.ptr.sub.i47 = sub i64 %sub.ptr.lhs.cast.i45, %sub.ptr.rhs.cast.i46, !dbg !5859
  %cmp.i48 = icmp sge i64 %sub.ptr.sub.i47, 4, !dbg !5860
  br i1 %cmp.i48, label %if.then.i53, label %if.else.i55, !dbg !5861

if.then.i53:                                      ; preds = %land.lhs.true.i49
  %171 = load i32, i32* %value.addr.i40, align 4, !dbg !5862
  store i32 %171, i32* %x.addr.i.i, align 4, !dbg !5863
  %172 = load i32, i32* %x.addr.i.i, align 4, !dbg !5864
  %shl.i.i = shl i32 %172, 8, !dbg !5865
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !5866
  %173 = load i32, i32* %x.addr.i.i, align 4, !dbg !5867
  %shr.i.i = lshr i32 %173, 8, !dbg !5868
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !5869
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !5870
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !5871
  %174 = load i32, i32* %x.addr.i.i, align 4, !dbg !5872
  %shr3.i.i = lshr i32 %174, 16, !dbg !5873
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !5874
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !5875
  %175 = load i32, i32* %x.addr.i.i, align 4, !dbg !5876
  %shr6.i.i = lshr i32 %175, 16, !dbg !5877
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !5878
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !5879
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !5880
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !5881
  %176 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i39, align 8, !dbg !5882
  %buffer1.i50 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %176, i32 0, i32 0, !dbg !5883
  %177 = load i8*, i8** %buffer1.i50, align 8, !dbg !5883
  %178 = bitcast i8* %177 to %union.unaligned_32*, !dbg !5884
  %l.i = bitcast %union.unaligned_32* %178 to i32*, !dbg !5884
  store i32 %or10.i.i, i32* %l.i, align 1, !dbg !5885
  %179 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i39, align 8, !dbg !5886
  %buffer2.i51 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %179, i32 0, i32 0, !dbg !5887
  %180 = load i8*, i8** %buffer2.i51, align 8, !dbg !5888
  %add.ptr.i52 = getelementptr inbounds i8, i8* %180, i64 4, !dbg !5888
  store i8* %add.ptr.i52, i8** %buffer2.i51, align 8, !dbg !5888
  br label %bytestream2_put_be32.exit, !dbg !5889

if.else.i55:                                      ; preds = %land.lhs.true.i49, %bytestream2_put_buffer.exit
  %181 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i39, align 8, !dbg !5890
  %eof3.i54 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %181, i32 0, i32 3, !dbg !5892
  store i32 1, i32* %eof3.i54, align 8, !dbg !5893
  br label %bytestream2_put_be32.exit, !dbg !5850

bytestream2_put_be32.exit:                        ; preds = %if.then.i53, %if.else.i55
  store i32 0, i32* %retval, align 4, !dbg !5894
  br label %return, !dbg !5894

return:                                           ; preds = %bytestream2_put_be32.exit, %if.then10
  %182 = load i32, i32* %retval, align 4, !dbg !5895
  ret i32 %182, !dbg !5895
}

; Function Attrs: nounwind uwtable
define internal i32 @handle_notify(%struct.URLContext* %s, %struct.RTMPPacket* %pkt) #0 !dbg !5896 {
entry:
  %g.addr.i86 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i86, metadata !5897, metadata !376), !dbg !5901
  %size.addr.i87 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i87, metadata !5908, metadata !376), !dbg !5909
  %b.addr.i.i.i68 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i68, metadata !1413, metadata !376), !dbg !5910
  %g.addr.i.i69 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i69, metadata !5918, metadata !376), !dbg !5919
  %retval.i70 = alloca i32, align 4
  %g.addr.i71 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i71, metadata !5920, metadata !376), !dbg !5921
  %g.addr.i61 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i61, metadata !2997, metadata !376), !dbg !5922
  %g.addr.i53 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i53, metadata !5897, metadata !376), !dbg !5925
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !5908, metadata !376), !dbg !5927
  %b.addr.i.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i, metadata !1434, metadata !376), !dbg !5928
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !5935, metadata !376), !dbg !5936
  %retval.i = alloca i32, align 4
  %g.addr.i48 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i48, metadata !5937, metadata !376), !dbg !5938
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !1440, metadata !376), !dbg !5939
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !1457, metadata !376), !dbg !5941
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !1459, metadata !376), !dbg !5942
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %commandbuffer = alloca [64 x i8], align 16
  %statusmsg = alloca [128 x i8], align 16
  %stringlen = alloca i32, align 4
  %ret = alloca i32, align 4
  %skip = alloca i32, align 4
  %gbc = alloca %struct.GetByteContext, align 8
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !5943, metadata !376), !dbg !5944
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !5945, metadata !376), !dbg !5946
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !5947, metadata !376), !dbg !5948
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !5949
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !5950
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5950
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !5949
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !5948
  call void @llvm.dbg.declare(metadata [64 x i8]* %commandbuffer, metadata !5951, metadata !376), !dbg !5952
  call void @llvm.dbg.declare(metadata [128 x i8]* %statusmsg, metadata !5953, metadata !376), !dbg !5954
  call void @llvm.dbg.declare(metadata i32* %stringlen, metadata !5955, metadata !376), !dbg !5956
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5957, metadata !376), !dbg !5958
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !5959, metadata !376), !dbg !5960
  store i32 0, i32* %skip, align 4, !dbg !5960
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gbc, metadata !5961, metadata !376), !dbg !5962
  %3 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5963
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %3, i32 0, i32 5, !dbg !5964
  %4 = load i8*, i8** %data, align 8, !dbg !5964
  %5 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !5965
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %5, i32 0, i32 6, !dbg !5966
  %6 = load i32, i32* %size, align 8, !dbg !5966
  store %struct.GetByteContext* %gbc, %struct.GetByteContext** %g.addr.i, align 8, !dbg !5967
  store i8* %4, i8** %buf.addr.i, align 8, !dbg !5967
  store i32 %6, i32* %buf_size.addr.i, align 4, !dbg !5967
  %7 = load i32, i32* %buf_size.addr.i, align 4, !dbg !5968
  %cmp.i = icmp sge i32 %7, 0, !dbg !5969
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !5970

if.then.i:                                        ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.72, i32 0, i32 0), i32 137) #10, !dbg !5971
  call void @abort() #11, !dbg !5972
  unreachable, !dbg !5973

bytestream2_init.exit:                            ; preds = %entry
  %8 = load i8*, i8** %buf.addr.i, align 8, !dbg !5974
  %9 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !5975
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %9, i32 0, i32 0, !dbg !5976
  store i8* %8, i8** %buffer.i, align 8, !dbg !5977
  %10 = load i8*, i8** %buf.addr.i, align 8, !dbg !5978
  %11 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !5979
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %11, i32 0, i32 2, !dbg !5980
  store i8* %10, i8** %buffer_start.i, align 8, !dbg !5981
  %12 = load i8*, i8** %buf.addr.i, align 8, !dbg !5982
  %13 = load i32, i32* %buf_size.addr.i, align 4, !dbg !5983
  %idx.ext.i = sext i32 %13 to i64, !dbg !5984
  %add.ptr.i = getelementptr inbounds i8, i8* %12, i64 %idx.ext.i, !dbg !5984
  %14 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !5985
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %14, i32 0, i32 1, !dbg !5986
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !5987
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %commandbuffer, i32 0, i32 0, !dbg !5988
  %call = call i32 @ff_amf_read_string(%struct.GetByteContext* %gbc, i8* %arraydecay, i32 64, i32* %stringlen), !dbg !5990
  %tobool = icmp ne i32 %call, 0, !dbg !5990
  br i1 %tobool, label %if.then, label %if.end, !dbg !5991

if.then:                                          ; preds = %bytestream2_init.exit
  store i32 -1094995529, i32* %retval, align 4, !dbg !5992
  br label %return, !dbg !5992

if.end:                                           ; preds = %bytestream2_init.exit
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %commandbuffer, i32 0, i32 0, !dbg !5993
  %call2 = call i32 @strcmp(i8* %arraydecay1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.174, i32 0, i32 0)) #9, !dbg !5994
  %tobool3 = icmp ne i32 %call2, 0, !dbg !5994
  br i1 %tobool3, label %if.end33, label %if.then4, !dbg !5995

if.then4:                                         ; preds = %if.end
  store %struct.GetByteContext* %gbc, %struct.GetByteContext** %g.addr.i48, align 8, !dbg !5996
  %15 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i48, align 8, !dbg !5997
  %buffer_end.i49 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %15, i32 0, i32 1, !dbg !5999
  %16 = load i8*, i8** %buffer_end.i49, align 8, !dbg !5999
  %17 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i48, align 8, !dbg !6000
  %buffer.i50 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %17, i32 0, i32 0, !dbg !6001
  %18 = load i8*, i8** %buffer.i50, align 8, !dbg !6001
  %sub.ptr.lhs.cast.i = ptrtoint i8* %16 to i64, !dbg !6002
  %sub.ptr.rhs.cast.i = ptrtoint i8* %18 to i64, !dbg !6002
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !6002
  %cmp.i51 = icmp slt i64 %sub.ptr.sub.i, 1, !dbg !6003
  br i1 %cmp.i51, label %if.then.i52, label %if.end.i, !dbg !6004

if.then.i52:                                      ; preds = %if.then4
  %19 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i48, align 8, !dbg !6005
  %buffer_end1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %19, i32 0, i32 1, !dbg !6008
  %20 = load i8*, i8** %buffer_end1.i, align 8, !dbg !6008
  %21 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i48, align 8, !dbg !6009
  %buffer2.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %21, i32 0, i32 0, !dbg !6010
  store i8* %20, i8** %buffer2.i, align 8, !dbg !6011
  store i32 0, i32* %retval.i, align 4, !dbg !6012
  br label %bytestream2_get_byte.exit, !dbg !6012

if.end.i:                                         ; preds = %if.then4
  %22 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i48, align 8, !dbg !6013
  store %struct.GetByteContext* %22, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !6014
  %23 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !6015
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %23, i32 0, i32 0, !dbg !6016
  store i8** %buffer.i.i, i8*** %b.addr.i.i.i, align 8, !dbg !6017
  %24 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !6018
  %25 = load i8*, i8** %24, align 8, !dbg !6019
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %25, i64 1, !dbg !6019
  store i8* %add.ptr.i.i.i, i8** %24, align 8, !dbg !6019
  %26 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !6020
  %27 = load i8*, i8** %26, align 8, !dbg !6021
  %add.ptr1.i.i.i = getelementptr inbounds i8, i8* %27, i64 -1, !dbg !6022
  %28 = load i8, i8* %add.ptr1.i.i.i, align 1, !dbg !6023
  %conv.i.i.i = zext i8 %28 to i32, !dbg !6024
  store i32 %conv.i.i.i, i32* %retval.i, align 4, !dbg !6025
  br label %bytestream2_get_byte.exit, !dbg !6025

bytestream2_get_byte.exit:                        ; preds = %if.then.i52, %if.end.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !6026
  %cmp = icmp eq i32 %29, 8, !dbg !6028
  br i1 %cmp, label %if.then6, label %if.end32, !dbg !6029

if.then6:                                         ; preds = %bytestream2_get_byte.exit
  %30 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !6030
  %received_metadata = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %30, i32 0, i32 25, !dbg !6031
  store i32 1, i32* %received_metadata, align 8, !dbg !6032
  store %struct.GetByteContext* %gbc, %struct.GetByteContext** %g.addr.i53, align 8, !dbg !6033
  store i32 4, i32* %size.addr.i, align 4, !dbg !6033
  %31 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i53, align 8, !dbg !6034
  %buffer_end.i54 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %31, i32 0, i32 1, !dbg !6035
  %32 = load i8*, i8** %buffer_end.i54, align 8, !dbg !6035
  %33 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i53, align 8, !dbg !6036
  %buffer.i55 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %33, i32 0, i32 0, !dbg !6037
  %34 = load i8*, i8** %buffer.i55, align 8, !dbg !6037
  %sub.ptr.lhs.cast.i56 = ptrtoint i8* %32 to i64, !dbg !6038
  %sub.ptr.rhs.cast.i57 = ptrtoint i8* %34 to i64, !dbg !6038
  %sub.ptr.sub.i58 = sub i64 %sub.ptr.lhs.cast.i56, %sub.ptr.rhs.cast.i57, !dbg !6038
  %35 = load i32, i32* %size.addr.i, align 4, !dbg !6039
  %conv.i = zext i32 %35 to i64, !dbg !6040
  %cmp.i59 = icmp sgt i64 %sub.ptr.sub.i58, %conv.i, !dbg !6041
  br i1 %cmp.i59, label %cond.true.i, label %cond.false.i, !dbg !6042

cond.true.i:                                      ; preds = %if.then6
  %36 = load i32, i32* %size.addr.i, align 4, !dbg !6043
  %conv2.i = zext i32 %36 to i64, !dbg !6045
  br label %bytestream2_skip.exit, !dbg !6046

cond.false.i:                                     ; preds = %if.then6
  %37 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i53, align 8, !dbg !6047
  %buffer_end3.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %37, i32 0, i32 1, !dbg !6049
  %38 = load i8*, i8** %buffer_end3.i, align 8, !dbg !6049
  %39 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i53, align 8, !dbg !6050
  %buffer4.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %39, i32 0, i32 0, !dbg !6051
  %40 = load i8*, i8** %buffer4.i, align 8, !dbg !6051
  %sub.ptr.lhs.cast5.i = ptrtoint i8* %38 to i64, !dbg !6052
  %sub.ptr.rhs.cast6.i = ptrtoint i8* %40 to i64, !dbg !6052
  %sub.ptr.sub7.i = sub i64 %sub.ptr.lhs.cast5.i, %sub.ptr.rhs.cast6.i, !dbg !6052
  br label %bytestream2_skip.exit, !dbg !6053

bytestream2_skip.exit:                            ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i64 [ %conv2.i, %cond.true.i ], [ %sub.ptr.sub7.i, %cond.false.i ], !dbg !6054
  %41 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i53, align 8, !dbg !6056
  %buffer8.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %41, i32 0, i32 0, !dbg !6057
  %42 = load i8*, i8** %buffer8.i, align 8, !dbg !6058
  %add.ptr.i60 = getelementptr inbounds i8, i8* %42, i64 %cond.i, !dbg !6058
  store i8* %add.ptr.i60, i8** %buffer8.i, align 8, !dbg !6058
  br label %while.cond, !dbg !6059

while.cond:                                       ; preds = %if.end27, %bytestream2_skip.exit
  store %struct.GetByteContext* %gbc, %struct.GetByteContext** %g.addr.i61, align 8, !dbg !6060
  %43 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i61, align 8, !dbg !6061
  %buffer_end.i62 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %43, i32 0, i32 1, !dbg !6062
  %44 = load i8*, i8** %buffer_end.i62, align 8, !dbg !6062
  %45 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i61, align 8, !dbg !6063
  %buffer.i63 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %45, i32 0, i32 0, !dbg !6064
  %46 = load i8*, i8** %buffer.i63, align 8, !dbg !6064
  %sub.ptr.lhs.cast.i64 = ptrtoint i8* %44 to i64, !dbg !6065
  %sub.ptr.rhs.cast.i65 = ptrtoint i8* %46 to i64, !dbg !6065
  %sub.ptr.sub.i66 = sub i64 %sub.ptr.lhs.cast.i64, %sub.ptr.rhs.cast.i65, !dbg !6065
  %conv.i67 = trunc i64 %sub.ptr.sub.i66 to i32, !dbg !6061
  %cmp8 = icmp ugt i32 %conv.i67, 3, !dbg !6066
  br i1 %cmp8, label %while.body, label %while.end, !dbg !6067

while.body:                                       ; preds = %while.cond
  %arraydecay9 = getelementptr inbounds [128 x i8], [128 x i8]* %statusmsg, i32 0, i32 0, !dbg !6068
  %call10 = call i32 @ff_amf_get_string(%struct.GetByteContext* %gbc, i8* %arraydecay9, i32 128, i32* %stringlen), !dbg !6070
  %tobool11 = icmp ne i32 %call10, 0, !dbg !6070
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !6071

if.then12:                                        ; preds = %while.body
  store i32 -1094995529, i32* %retval, align 4, !dbg !6072
  br label %return, !dbg !6072

if.end13:                                         ; preds = %while.body
  %buffer = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gbc, i32 0, i32 0, !dbg !6073
  %47 = load i8*, i8** %buffer, align 8, !dbg !6073
  %buffer_end = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gbc, i32 0, i32 1, !dbg !6074
  %48 = load i8*, i8** %buffer_end, align 8, !dbg !6074
  %call14 = call i32 @ff_amf_tag_size(i8* %47, i8* %48), !dbg !6075
  store i32 %call14, i32* %stringlen, align 4, !dbg !6076
  %49 = load i32, i32* %stringlen, align 4, !dbg !6077
  %cmp15 = icmp slt i32 %49, 0, !dbg !6079
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !6080

if.then16:                                        ; preds = %if.end13
  store i32 -1094995529, i32* %retval, align 4, !dbg !6081
  br label %return, !dbg !6081

if.end17:                                         ; preds = %if.end13
  %50 = load i32, i32* %stringlen, align 4, !dbg !6082
  store %struct.GetByteContext* %gbc, %struct.GetByteContext** %g.addr.i86, align 8, !dbg !6083
  store i32 %50, i32* %size.addr.i87, align 4, !dbg !6083
  %51 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i86, align 8, !dbg !6084
  %buffer_end.i88 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %51, i32 0, i32 1, !dbg !6085
  %52 = load i8*, i8** %buffer_end.i88, align 8, !dbg !6085
  %53 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i86, align 8, !dbg !6086
  %buffer.i89 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %53, i32 0, i32 0, !dbg !6087
  %54 = load i8*, i8** %buffer.i89, align 8, !dbg !6087
  %sub.ptr.lhs.cast.i90 = ptrtoint i8* %52 to i64, !dbg !6088
  %sub.ptr.rhs.cast.i91 = ptrtoint i8* %54 to i64, !dbg !6088
  %sub.ptr.sub.i92 = sub i64 %sub.ptr.lhs.cast.i90, %sub.ptr.rhs.cast.i91, !dbg !6088
  %55 = load i32, i32* %size.addr.i87, align 4, !dbg !6089
  %conv.i93 = zext i32 %55 to i64, !dbg !6090
  %cmp.i94 = icmp sgt i64 %sub.ptr.sub.i92, %conv.i93, !dbg !6091
  br i1 %cmp.i94, label %cond.true.i96, label %cond.false.i102, !dbg !6092

cond.true.i96:                                    ; preds = %if.end17
  %56 = load i32, i32* %size.addr.i87, align 4, !dbg !6093
  %conv2.i95 = zext i32 %56 to i64, !dbg !6094
  br label %bytestream2_skip.exit106, !dbg !6095

cond.false.i102:                                  ; preds = %if.end17
  %57 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i86, align 8, !dbg !6096
  %buffer_end3.i97 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %57, i32 0, i32 1, !dbg !6097
  %58 = load i8*, i8** %buffer_end3.i97, align 8, !dbg !6097
  %59 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i86, align 8, !dbg !6098
  %buffer4.i98 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %59, i32 0, i32 0, !dbg !6099
  %60 = load i8*, i8** %buffer4.i98, align 8, !dbg !6099
  %sub.ptr.lhs.cast5.i99 = ptrtoint i8* %58 to i64, !dbg !6100
  %sub.ptr.rhs.cast6.i100 = ptrtoint i8* %60 to i64, !dbg !6100
  %sub.ptr.sub7.i101 = sub i64 %sub.ptr.lhs.cast5.i99, %sub.ptr.rhs.cast6.i100, !dbg !6100
  br label %bytestream2_skip.exit106, !dbg !6101

bytestream2_skip.exit106:                         ; preds = %cond.true.i96, %cond.false.i102
  %cond.i103 = phi i64 [ %conv2.i95, %cond.true.i96 ], [ %sub.ptr.sub7.i101, %cond.false.i102 ], !dbg !6102
  %61 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i86, align 8, !dbg !6103
  %buffer8.i104 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %61, i32 0, i32 0, !dbg !6104
  %62 = load i8*, i8** %buffer8.i104, align 8, !dbg !6105
  %add.ptr.i105 = getelementptr inbounds i8, i8* %62, i64 %cond.i103, !dbg !6105
  store i8* %add.ptr.i105, i8** %buffer8.i104, align 8, !dbg !6105
  %arraydecay18 = getelementptr inbounds [128 x i8], [128 x i8]* %statusmsg, i32 0, i32 0, !dbg !6106
  %call19 = call i32 @strcmp(i8* %arraydecay18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.175, i32 0, i32 0)) #9, !dbg !6108
  %tobool20 = icmp ne i32 %call19, 0, !dbg !6108
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !6109

if.then21:                                        ; preds = %bytestream2_skip.exit106
  %63 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !6110
  %has_video = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %63, i32 0, i32 24, !dbg !6112
  store i32 1, i32* %has_video, align 4, !dbg !6113
  br label %if.end22, !dbg !6114

if.end22:                                         ; preds = %if.then21, %bytestream2_skip.exit106
  %arraydecay23 = getelementptr inbounds [128 x i8], [128 x i8]* %statusmsg, i32 0, i32 0, !dbg !6115
  %call24 = call i32 @strcmp(i8* %arraydecay23, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.176, i32 0, i32 0)) #9, !dbg !6117
  %tobool25 = icmp ne i32 %call24, 0, !dbg !6117
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !6118

if.then26:                                        ; preds = %if.end22
  %64 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !6119
  %has_audio = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %64, i32 0, i32 23, !dbg !6121
  store i32 1, i32* %has_audio, align 8, !dbg !6122
  br label %if.end27, !dbg !6123

if.end27:                                         ; preds = %if.then26, %if.end22
  br label %while.cond, !dbg !6124, !llvm.loop !6126

while.end:                                        ; preds = %while.cond
  store %struct.GetByteContext* %gbc, %struct.GetByteContext** %g.addr.i71, align 8, !dbg !6127
  %65 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i71, align 8, !dbg !6128
  %buffer_end.i72 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %65, i32 0, i32 1, !dbg !6130
  %66 = load i8*, i8** %buffer_end.i72, align 8, !dbg !6130
  %67 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i71, align 8, !dbg !6131
  %buffer.i73 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %67, i32 0, i32 0, !dbg !6132
  %68 = load i8*, i8** %buffer.i73, align 8, !dbg !6132
  %sub.ptr.lhs.cast.i74 = ptrtoint i8* %66 to i64, !dbg !6133
  %sub.ptr.rhs.cast.i75 = ptrtoint i8* %68 to i64, !dbg !6133
  %sub.ptr.sub.i76 = sub i64 %sub.ptr.lhs.cast.i74, %sub.ptr.rhs.cast.i75, !dbg !6133
  %cmp.i77 = icmp slt i64 %sub.ptr.sub.i76, 3, !dbg !6134
  br i1 %cmp.i77, label %if.then.i80, label %if.end.i85, !dbg !6135

if.then.i80:                                      ; preds = %while.end
  %69 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i71, align 8, !dbg !6136
  %buffer_end1.i78 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %69, i32 0, i32 1, !dbg !6139
  %70 = load i8*, i8** %buffer_end1.i78, align 8, !dbg !6139
  %71 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i71, align 8, !dbg !6140
  %buffer2.i79 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %71, i32 0, i32 0, !dbg !6141
  store i8* %70, i8** %buffer2.i79, align 8, !dbg !6142
  store i32 0, i32* %retval.i70, align 4, !dbg !6143
  br label %bytestream2_get_be24.exit, !dbg !6143

if.end.i85:                                       ; preds = %while.end
  %72 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i71, align 8, !dbg !6144
  store %struct.GetByteContext* %72, %struct.GetByteContext** %g.addr.i.i69, align 8, !dbg !6145
  %73 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i69, align 8, !dbg !6146
  %buffer.i.i81 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %73, i32 0, i32 0, !dbg !6147
  store i8** %buffer.i.i81, i8*** %b.addr.i.i.i68, align 8, !dbg !6148
  %74 = load i8**, i8*** %b.addr.i.i.i68, align 8, !dbg !6149
  %75 = load i8*, i8** %74, align 8, !dbg !6150
  %add.ptr.i.i.i82 = getelementptr inbounds i8, i8* %75, i64 3, !dbg !6150
  store i8* %add.ptr.i.i.i82, i8** %74, align 8, !dbg !6150
  %76 = load i8**, i8*** %b.addr.i.i.i68, align 8, !dbg !6151
  %77 = load i8*, i8** %76, align 8, !dbg !6152
  %add.ptr1.i.i.i83 = getelementptr inbounds i8, i8* %77, i64 -3, !dbg !6153
  %78 = load i8, i8* %add.ptr1.i.i.i83, align 1, !dbg !6154
  %conv.i.i.i84 = zext i8 %78 to i32, !dbg !6154
  %shl.i.i.i = shl i32 %conv.i.i.i84, 16, !dbg !6155
  %79 = load i8**, i8*** %b.addr.i.i.i68, align 8, !dbg !6156
  %80 = load i8*, i8** %79, align 8, !dbg !6157
  %add.ptr2.i.i.i = getelementptr inbounds i8, i8* %80, i64 -3, !dbg !6158
  %arrayidx3.i.i.i = getelementptr inbounds i8, i8* %add.ptr2.i.i.i, i64 1, !dbg !6159
  %81 = load i8, i8* %arrayidx3.i.i.i, align 1, !dbg !6159
  %conv4.i.i.i = zext i8 %81 to i32, !dbg !6159
  %shl5.i.i.i = shl i32 %conv4.i.i.i, 8, !dbg !6160
  %or.i.i.i = or i32 %shl.i.i.i, %shl5.i.i.i, !dbg !6161
  %82 = load i8**, i8*** %b.addr.i.i.i68, align 8, !dbg !6162
  %83 = load i8*, i8** %82, align 8, !dbg !6163
  %add.ptr6.i.i.i = getelementptr inbounds i8, i8* %83, i64 -3, !dbg !6164
  %arrayidx7.i.i.i = getelementptr inbounds i8, i8* %add.ptr6.i.i.i, i64 2, !dbg !6165
  %84 = load i8, i8* %arrayidx7.i.i.i, align 1, !dbg !6165
  %conv8.i.i.i = zext i8 %84 to i32, !dbg !6165
  %or9.i.i.i = or i32 %or.i.i.i, %conv8.i.i.i, !dbg !6166
  store i32 %or9.i.i.i, i32* %retval.i70, align 4, !dbg !6167
  br label %bytestream2_get_be24.exit, !dbg !6167

bytestream2_get_be24.exit:                        ; preds = %if.then.i80, %if.end.i85
  %85 = load i32, i32* %retval.i70, align 4, !dbg !6168
  %cmp29 = icmp ne i32 %85, 9, !dbg !6170
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !6171

if.then30:                                        ; preds = %bytestream2_get_be24.exit
  store i32 -1094995529, i32* %retval, align 4, !dbg !6172
  br label %return, !dbg !6172

if.end31:                                         ; preds = %bytestream2_get_be24.exit
  br label %if.end32, !dbg !6173

if.end32:                                         ; preds = %if.end31, %bytestream2_get_byte.exit
  br label %if.end33, !dbg !6174

if.end33:                                         ; preds = %if.end32, %if.end
  %arraydecay34 = getelementptr inbounds [64 x i8], [64 x i8]* %commandbuffer, i32 0, i32 0, !dbg !6175
  %call35 = call i32 @strcmp(i8* %arraydecay34, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.177, i32 0, i32 0)) #9, !dbg !6177
  %tobool36 = icmp ne i32 %call35, 0, !dbg !6177
  br i1 %tobool36, label %if.end46, label %if.then37, !dbg !6178

if.then37:                                        ; preds = %if.end33
  %buffer38 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gbc, i32 0, i32 0, !dbg !6179
  %86 = load i8*, i8** %buffer38, align 8, !dbg !6179
  %87 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6181
  %data39 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %87, i32 0, i32 5, !dbg !6182
  %88 = load i8*, i8** %data39, align 8, !dbg !6182
  %sub.ptr.lhs.cast = ptrtoint i8* %86 to i64, !dbg !6183
  %sub.ptr.rhs.cast = ptrtoint i8* %88 to i64, !dbg !6183
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6183
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !6184
  store i32 %conv, i32* %skip, align 4, !dbg !6185
  %arraydecay40 = getelementptr inbounds [128 x i8], [128 x i8]* %statusmsg, i32 0, i32 0, !dbg !6186
  %call41 = call i32 @ff_amf_read_string(%struct.GetByteContext* %gbc, i8* %arraydecay40, i32 128, i32* %stringlen), !dbg !6187
  store i32 %call41, i32* %ret, align 4, !dbg !6188
  %89 = load i32, i32* %ret, align 4, !dbg !6189
  %cmp42 = icmp slt i32 %89, 0, !dbg !6191
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !6192

if.then44:                                        ; preds = %if.then37
  store i32 -1094995529, i32* %retval, align 4, !dbg !6193
  br label %return, !dbg !6193

if.end45:                                         ; preds = %if.then37
  br label %if.end46, !dbg !6194

if.end46:                                         ; preds = %if.end45, %if.end33
  %90 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !6195
  %91 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6196
  %92 = load i32, i32* %skip, align 4, !dbg !6197
  %call47 = call i32 @append_flv_data(%struct.RTMPContext* %90, %struct.RTMPPacket* %91, i32 %92), !dbg !6198
  store i32 %call47, i32* %retval, align 4, !dbg !6199
  br label %return, !dbg !6199

return:                                           ; preds = %if.end46, %if.then44, %if.then30, %if.then16, %if.then12, %if.then
  %93 = load i32, i32* %retval, align 4, !dbg !6200
  ret i32 %93, !dbg !6200
}

; Function Attrs: nounwind uwtable
define internal i32 @handle_metadata(%struct.RTMPContext* %rt, %struct.RTMPPacket* %pkt) #0 !dbg !6201 {
entry:
  %b.addr.i90 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i90, metadata !1413, metadata !376), !dbg !6204
  %b.addr.i85 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i85, metadata !1413, metadata !376), !dbg !6207
  %b.addr.i81 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i81, metadata !1434, metadata !376), !dbg !6209
  %b.addr.i77 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i77, metadata !2964, metadata !376), !dbg !6211
  %value.addr.i78 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i78, metadata !2968, metadata !376), !dbg !6213
  %b.addr.i67 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i67, metadata !3796, metadata !376), !dbg !6214
  %value.addr.i68 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i68, metadata !3800, metadata !376), !dbg !6216
  %b.addr.i63 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i63, metadata !3796, metadata !376), !dbg !6217
  %value.addr.i64 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i64, metadata !3800, metadata !376), !dbg !6219
  %b.addr.i59 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i59, metadata !2964, metadata !376), !dbg !6220
  %value.addr.i60 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i60, metadata !2968, metadata !376), !dbg !6222
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2616, metadata !376), !dbg !6223
  %b.addr.i57 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i57, metadata !2960, metadata !376), !dbg !6226
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !2962, metadata !376), !dbg !6227
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !1434, metadata !376), !dbg !6228
  %retval = alloca i32, align 4
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %ret = alloca i32, align 4
  %old_flv_size = alloca i32, align 4
  %type = alloca i32, align 4
  %next = alloca i8*, align 8
  %p = alloca i8*, align 8
  %size = alloca i32, align 4
  %ts = alloca i32, align 4
  %cts = alloca i32, align 4
  %pts = alloca i32, align 4
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !6230, metadata !376), !dbg !6231
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !6232, metadata !376), !dbg !6233
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6234, metadata !376), !dbg !6235
  call void @llvm.dbg.declare(metadata i32* %old_flv_size, metadata !6236, metadata !376), !dbg !6237
  call void @llvm.dbg.declare(metadata i32* %type, metadata !6238, metadata !376), !dbg !6239
  call void @llvm.dbg.declare(metadata i8** %next, metadata !6240, metadata !376), !dbg !6241
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6242, metadata !376), !dbg !6243
  call void @llvm.dbg.declare(metadata i32* %size, metadata !6244, metadata !376), !dbg !6245
  call void @llvm.dbg.declare(metadata i32* %ts, metadata !6246, metadata !376), !dbg !6247
  call void @llvm.dbg.declare(metadata i32* %cts, metadata !6248, metadata !376), !dbg !6249
  call void @llvm.dbg.declare(metadata i32* %pts, metadata !6250, metadata !376), !dbg !6251
  store i32 0, i32* %pts, align 4, !dbg !6251
  %0 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !6252
  %1 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6253
  %size1 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %1, i32 0, i32 6, !dbg !6254
  %2 = load i32, i32* %size1, align 8, !dbg !6254
  %call = call i32 @update_offset(%struct.RTMPContext* %0, i32 %2), !dbg !6255
  store i32 %call, i32* %old_flv_size, align 4, !dbg !6256
  %3 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !6257
  %flv_data = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %3, i32 0, i32 13, !dbg !6259
  %4 = bitcast i8** %flv_data to i8*, !dbg !6260
  %5 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !6261
  %flv_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %5, i32 0, i32 14, !dbg !6262
  %6 = load i32, i32* %flv_size, align 8, !dbg !6262
  %conv = sext i32 %6 to i64, !dbg !6261
  %call2 = call i32 @av_reallocp(i8* %4, i64 %conv), !dbg !6263
  store i32 %call2, i32* %ret, align 4, !dbg !6264
  %cmp = icmp slt i32 %call2, 0, !dbg !6265
  br i1 %cmp, label %if.then, label %if.end, !dbg !6266

if.then:                                          ; preds = %entry
  %7 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !6267
  %flv_off = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %7, i32 0, i32 15, !dbg !6269
  store i32 0, i32* %flv_off, align 4, !dbg !6270
  %8 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !6271
  %flv_size4 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %8, i32 0, i32 14, !dbg !6272
  store i32 0, i32* %flv_size4, align 8, !dbg !6273
  %9 = load i32, i32* %ret, align 4, !dbg !6274
  store i32 %9, i32* %retval, align 4, !dbg !6275
  br label %return, !dbg !6275

if.end:                                           ; preds = %entry
  %10 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6276
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %10, i32 0, i32 5, !dbg !6277
  %11 = load i8*, i8** %data, align 8, !dbg !6277
  store i8* %11, i8** %next, align 8, !dbg !6278
  %12 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !6279
  %flv_data5 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %12, i32 0, i32 13, !dbg !6280
  %13 = load i8*, i8** %flv_data5, align 8, !dbg !6280
  %14 = load i32, i32* %old_flv_size, align 4, !dbg !6281
  %idx.ext = sext i32 %14 to i64, !dbg !6282
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !6282
  store i8* %add.ptr, i8** %p, align 8, !dbg !6283
  %15 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6284
  %timestamp = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %15, i32 0, i32 2, !dbg !6285
  %16 = load i32, i32* %timestamp, align 8, !dbg !6285
  store i32 %16, i32* %ts, align 4, !dbg !6286
  br label %while.cond, !dbg !6287

while.cond:                                       ; preds = %if.end31, %if.end
  %17 = load i8*, i8** %next, align 8, !dbg !6288
  %18 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6290
  %data6 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %18, i32 0, i32 5, !dbg !6291
  %19 = load i8*, i8** %data6, align 8, !dbg !6291
  %sub.ptr.lhs.cast = ptrtoint i8* %17 to i64, !dbg !6292
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !6292
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6292
  %20 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6293
  %size7 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %20, i32 0, i32 6, !dbg !6294
  %21 = load i32, i32* %size7, align 8, !dbg !6294
  %sub = sub nsw i32 %21, 11, !dbg !6295
  %conv8 = sext i32 %sub to i64, !dbg !6293
  %cmp9 = icmp slt i64 %sub.ptr.sub, %conv8, !dbg !6296
  br i1 %cmp9, label %while.body, label %while.end, !dbg !6297

while.body:                                       ; preds = %while.cond
  store i8** %next, i8*** %b.addr.i, align 8, !dbg !6298
  %22 = load i8**, i8*** %b.addr.i, align 8, !dbg !6299
  %23 = load i8*, i8** %22, align 8, !dbg !6300
  %add.ptr.i = getelementptr inbounds i8, i8* %23, i64 1, !dbg !6300
  store i8* %add.ptr.i, i8** %22, align 8, !dbg !6300
  %24 = load i8**, i8*** %b.addr.i, align 8, !dbg !6301
  %25 = load i8*, i8** %24, align 8, !dbg !6302
  %add.ptr1.i = getelementptr inbounds i8, i8* %25, i64 -1, !dbg !6303
  %26 = load i8, i8* %add.ptr1.i, align 1, !dbg !6304
  %conv.i = zext i8 %26 to i32, !dbg !6305
  store i32 %conv.i, i32* %type, align 4, !dbg !6306
  store i8** %next, i8*** %b.addr.i90, align 8, !dbg !6307
  %27 = load i8**, i8*** %b.addr.i90, align 8, !dbg !6308
  %28 = load i8*, i8** %27, align 8, !dbg !6309
  %add.ptr.i91 = getelementptr inbounds i8, i8* %28, i64 3, !dbg !6309
  store i8* %add.ptr.i91, i8** %27, align 8, !dbg !6309
  %29 = load i8**, i8*** %b.addr.i90, align 8, !dbg !6310
  %30 = load i8*, i8** %29, align 8, !dbg !6311
  %add.ptr1.i92 = getelementptr inbounds i8, i8* %30, i64 -3, !dbg !6312
  %31 = load i8, i8* %add.ptr1.i92, align 1, !dbg !6313
  %conv.i93 = zext i8 %31 to i32, !dbg !6313
  %shl.i94 = shl i32 %conv.i93, 16, !dbg !6314
  %32 = load i8**, i8*** %b.addr.i90, align 8, !dbg !6315
  %33 = load i8*, i8** %32, align 8, !dbg !6316
  %add.ptr2.i95 = getelementptr inbounds i8, i8* %33, i64 -3, !dbg !6317
  %arrayidx3.i96 = getelementptr inbounds i8, i8* %add.ptr2.i95, i64 1, !dbg !6318
  %34 = load i8, i8* %arrayidx3.i96, align 1, !dbg !6318
  %conv4.i97 = zext i8 %34 to i32, !dbg !6318
  %shl5.i98 = shl i32 %conv4.i97, 8, !dbg !6319
  %or.i99 = or i32 %shl.i94, %shl5.i98, !dbg !6320
  %35 = load i8**, i8*** %b.addr.i90, align 8, !dbg !6321
  %36 = load i8*, i8** %35, align 8, !dbg !6322
  %add.ptr6.i100 = getelementptr inbounds i8, i8* %36, i64 -3, !dbg !6323
  %arrayidx7.i101 = getelementptr inbounds i8, i8* %add.ptr6.i100, i64 2, !dbg !6324
  %37 = load i8, i8* %arrayidx7.i101, align 1, !dbg !6324
  %conv8.i102 = zext i8 %37 to i32, !dbg !6324
  %or9.i103 = or i32 %or.i99, %conv8.i102, !dbg !6325
  store i32 %or9.i103, i32* %size, align 4, !dbg !6326
  store i8** %next, i8*** %b.addr.i85, align 8, !dbg !6327
  %38 = load i8**, i8*** %b.addr.i85, align 8, !dbg !6328
  %39 = load i8*, i8** %38, align 8, !dbg !6329
  %add.ptr.i86 = getelementptr inbounds i8, i8* %39, i64 3, !dbg !6329
  store i8* %add.ptr.i86, i8** %38, align 8, !dbg !6329
  %40 = load i8**, i8*** %b.addr.i85, align 8, !dbg !6330
  %41 = load i8*, i8** %40, align 8, !dbg !6331
  %add.ptr1.i87 = getelementptr inbounds i8, i8* %41, i64 -3, !dbg !6332
  %42 = load i8, i8* %add.ptr1.i87, align 1, !dbg !6333
  %conv.i88 = zext i8 %42 to i32, !dbg !6333
  %shl.i = shl i32 %conv.i88, 16, !dbg !6334
  %43 = load i8**, i8*** %b.addr.i85, align 8, !dbg !6335
  %44 = load i8*, i8** %43, align 8, !dbg !6336
  %add.ptr2.i = getelementptr inbounds i8, i8* %44, i64 -3, !dbg !6337
  %arrayidx3.i = getelementptr inbounds i8, i8* %add.ptr2.i, i64 1, !dbg !6338
  %45 = load i8, i8* %arrayidx3.i, align 1, !dbg !6338
  %conv4.i89 = zext i8 %45 to i32, !dbg !6338
  %shl5.i = shl i32 %conv4.i89, 8, !dbg !6339
  %or.i = or i32 %shl.i, %shl5.i, !dbg !6340
  %46 = load i8**, i8*** %b.addr.i85, align 8, !dbg !6341
  %47 = load i8*, i8** %46, align 8, !dbg !6342
  %add.ptr6.i = getelementptr inbounds i8, i8* %47, i64 -3, !dbg !6343
  %arrayidx7.i = getelementptr inbounds i8, i8* %add.ptr6.i, i64 2, !dbg !6344
  %48 = load i8, i8* %arrayidx7.i, align 1, !dbg !6344
  %conv8.i = zext i8 %48 to i32, !dbg !6344
  %or9.i = or i32 %or.i, %conv8.i, !dbg !6345
  store i32 %or9.i, i32* %cts, align 4, !dbg !6346
  store i8** %next, i8*** %b.addr.i81, align 8, !dbg !6347
  %49 = load i8**, i8*** %b.addr.i81, align 8, !dbg !6348
  %50 = load i8*, i8** %49, align 8, !dbg !6349
  %add.ptr.i82 = getelementptr inbounds i8, i8* %50, i64 1, !dbg !6349
  store i8* %add.ptr.i82, i8** %49, align 8, !dbg !6349
  %51 = load i8**, i8*** %b.addr.i81, align 8, !dbg !6350
  %52 = load i8*, i8** %51, align 8, !dbg !6351
  %add.ptr1.i83 = getelementptr inbounds i8, i8* %52, i64 -1, !dbg !6352
  %53 = load i8, i8* %add.ptr1.i83, align 1, !dbg !6353
  %conv.i84 = zext i8 %53 to i32, !dbg !6354
  %shl = shl i32 %conv.i84, 24, !dbg !6355
  %54 = load i32, i32* %cts, align 4, !dbg !6356
  %or = or i32 %54, %shl, !dbg !6356
  store i32 %or, i32* %cts, align 4, !dbg !6356
  %55 = load i32, i32* %pts, align 4, !dbg !6357
  %tobool = icmp ne i32 %55, 0, !dbg !6357
  br i1 %tobool, label %if.end16, label %if.then15, !dbg !6359

if.then15:                                        ; preds = %while.body
  %56 = load i32, i32* %cts, align 4, !dbg !6360
  store i32 %56, i32* %pts, align 4, !dbg !6361
  br label %if.end16, !dbg !6362

if.end16:                                         ; preds = %if.then15, %while.body
  %57 = load i32, i32* %cts, align 4, !dbg !6363
  %58 = load i32, i32* %pts, align 4, !dbg !6364
  %sub17 = sub i32 %57, %58, !dbg !6365
  %59 = load i32, i32* %ts, align 4, !dbg !6366
  %add = add i32 %59, %sub17, !dbg !6366
  store i32 %add, i32* %ts, align 4, !dbg !6366
  %60 = load i32, i32* %cts, align 4, !dbg !6367
  store i32 %60, i32* %pts, align 4, !dbg !6368
  %61 = load i32, i32* %size, align 4, !dbg !6369
  %add18 = add i32 %61, 3, !dbg !6371
  %add19 = add i32 %add18, 4, !dbg !6372
  %conv20 = zext i32 %add19 to i64, !dbg !6369
  %62 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6373
  %data21 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %62, i32 0, i32 5, !dbg !6374
  %63 = load i8*, i8** %data21, align 8, !dbg !6374
  %64 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6375
  %size22 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %64, i32 0, i32 6, !dbg !6376
  %65 = load i32, i32* %size22, align 8, !dbg !6376
  %idx.ext23 = sext i32 %65 to i64, !dbg !6377
  %add.ptr24 = getelementptr inbounds i8, i8* %63, i64 %idx.ext23, !dbg !6377
  %66 = load i8*, i8** %next, align 8, !dbg !6378
  %sub.ptr.lhs.cast25 = ptrtoint i8* %add.ptr24 to i64, !dbg !6379
  %sub.ptr.rhs.cast26 = ptrtoint i8* %66 to i64, !dbg !6379
  %sub.ptr.sub27 = sub i64 %sub.ptr.lhs.cast25, %sub.ptr.rhs.cast26, !dbg !6379
  %cmp28 = icmp sgt i64 %conv20, %sub.ptr.sub27, !dbg !6380
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !6381

if.then30:                                        ; preds = %if.end16
  br label %while.end, !dbg !6382

if.end31:                                         ; preds = %if.end16
  %67 = load i32, i32* %type, align 4, !dbg !6383
  store i8** %p, i8*** %b.addr.i77, align 8, !dbg !6384
  store i32 %67, i32* %value.addr.i78, align 4, !dbg !6384
  %68 = load i32, i32* %value.addr.i78, align 4, !dbg !6385
  %conv.i79 = trunc i32 %68 to i8, !dbg !6386
  %69 = load i8**, i8*** %b.addr.i77, align 8, !dbg !6387
  %70 = load i8*, i8** %69, align 8, !dbg !6388
  store i8 %conv.i79, i8* %70, align 1, !dbg !6389
  %71 = load i8**, i8*** %b.addr.i77, align 8, !dbg !6390
  %72 = load i8*, i8** %71, align 8, !dbg !6391
  %add.ptr.i80 = getelementptr inbounds i8, i8* %72, i64 1, !dbg !6391
  store i8* %add.ptr.i80, i8** %71, align 8, !dbg !6391
  %73 = load i32, i32* %size, align 4, !dbg !6392
  store i8** %p, i8*** %b.addr.i67, align 8, !dbg !6393
  store i32 %73, i32* %value.addr.i68, align 4, !dbg !6393
  %74 = load i32, i32* %value.addr.i68, align 4, !dbg !6394
  %conv.i69 = trunc i32 %74 to i8, !dbg !6395
  %75 = load i8**, i8*** %b.addr.i67, align 8, !dbg !6396
  %76 = load i8*, i8** %75, align 8, !dbg !6397
  %arrayidx.i70 = getelementptr inbounds i8, i8* %76, i64 2, !dbg !6398
  store i8 %conv.i69, i8* %arrayidx.i70, align 1, !dbg !6399
  %77 = load i32, i32* %value.addr.i68, align 4, !dbg !6400
  %shr.i71 = lshr i32 %77, 8, !dbg !6401
  %conv1.i72 = trunc i32 %shr.i71 to i8, !dbg !6402
  %78 = load i8**, i8*** %b.addr.i67, align 8, !dbg !6403
  %79 = load i8*, i8** %78, align 8, !dbg !6404
  %arrayidx2.i73 = getelementptr inbounds i8, i8* %79, i64 1, !dbg !6405
  store i8 %conv1.i72, i8* %arrayidx2.i73, align 1, !dbg !6406
  %80 = load i32, i32* %value.addr.i68, align 4, !dbg !6407
  %shr3.i74 = lshr i32 %80, 16, !dbg !6408
  %conv4.i75 = trunc i32 %shr3.i74 to i8, !dbg !6409
  %81 = load i8**, i8*** %b.addr.i67, align 8, !dbg !6410
  %82 = load i8*, i8** %81, align 8, !dbg !6411
  store i8 %conv4.i75, i8* %82, align 1, !dbg !6412
  %83 = load i8**, i8*** %b.addr.i67, align 8, !dbg !6413
  %84 = load i8*, i8** %83, align 8, !dbg !6414
  %add.ptr.i76 = getelementptr inbounds i8, i8* %84, i64 3, !dbg !6414
  store i8* %add.ptr.i76, i8** %83, align 8, !dbg !6414
  %85 = load i32, i32* %ts, align 4, !dbg !6415
  store i8** %p, i8*** %b.addr.i63, align 8, !dbg !6416
  store i32 %85, i32* %value.addr.i64, align 4, !dbg !6416
  %86 = load i32, i32* %value.addr.i64, align 4, !dbg !6417
  %conv.i65 = trunc i32 %86 to i8, !dbg !6418
  %87 = load i8**, i8*** %b.addr.i63, align 8, !dbg !6419
  %88 = load i8*, i8** %87, align 8, !dbg !6420
  %arrayidx.i = getelementptr inbounds i8, i8* %88, i64 2, !dbg !6421
  store i8 %conv.i65, i8* %arrayidx.i, align 1, !dbg !6422
  %89 = load i32, i32* %value.addr.i64, align 4, !dbg !6423
  %shr.i = lshr i32 %89, 8, !dbg !6424
  %conv1.i = trunc i32 %shr.i to i8, !dbg !6425
  %90 = load i8**, i8*** %b.addr.i63, align 8, !dbg !6426
  %91 = load i8*, i8** %90, align 8, !dbg !6427
  %arrayidx2.i = getelementptr inbounds i8, i8* %91, i64 1, !dbg !6428
  store i8 %conv1.i, i8* %arrayidx2.i, align 1, !dbg !6429
  %92 = load i32, i32* %value.addr.i64, align 4, !dbg !6430
  %shr3.i = lshr i32 %92, 16, !dbg !6431
  %conv4.i = trunc i32 %shr3.i to i8, !dbg !6432
  %93 = load i8**, i8*** %b.addr.i63, align 8, !dbg !6433
  %94 = load i8*, i8** %93, align 8, !dbg !6434
  store i8 %conv4.i, i8* %94, align 1, !dbg !6435
  %95 = load i8**, i8*** %b.addr.i63, align 8, !dbg !6436
  %96 = load i8*, i8** %95, align 8, !dbg !6437
  %add.ptr.i66 = getelementptr inbounds i8, i8* %96, i64 3, !dbg !6437
  store i8* %add.ptr.i66, i8** %95, align 8, !dbg !6437
  %97 = load i32, i32* %ts, align 4, !dbg !6438
  %shr = lshr i32 %97, 24, !dbg !6439
  store i8** %p, i8*** %b.addr.i59, align 8, !dbg !6440
  store i32 %shr, i32* %value.addr.i60, align 4, !dbg !6440
  %98 = load i32, i32* %value.addr.i60, align 4, !dbg !6441
  %conv.i61 = trunc i32 %98 to i8, !dbg !6442
  %99 = load i8**, i8*** %b.addr.i59, align 8, !dbg !6443
  %100 = load i8*, i8** %99, align 8, !dbg !6444
  store i8 %conv.i61, i8* %100, align 1, !dbg !6445
  %101 = load i8**, i8*** %b.addr.i59, align 8, !dbg !6446
  %102 = load i8*, i8** %101, align 8, !dbg !6447
  %add.ptr.i62 = getelementptr inbounds i8, i8* %102, i64 1, !dbg !6447
  store i8* %add.ptr.i62, i8** %101, align 8, !dbg !6447
  %103 = load i8*, i8** %p, align 8, !dbg !6448
  %104 = load i8*, i8** %next, align 8, !dbg !6449
  %105 = load i32, i32* %size, align 4, !dbg !6450
  %add32 = add i32 %105, 3, !dbg !6451
  %add33 = add i32 %add32, 4, !dbg !6452
  %conv34 = zext i32 %add33 to i64, !dbg !6450
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 %conv34, i32 1, i1 false), !dbg !6453
  %106 = load i32, i32* %size, align 4, !dbg !6454
  %add35 = add i32 %106, 3, !dbg !6455
  %107 = load i8*, i8** %p, align 8, !dbg !6456
  %idx.ext36 = zext i32 %add35 to i64, !dbg !6456
  %add.ptr37 = getelementptr inbounds i8, i8* %107, i64 %idx.ext36, !dbg !6456
  store i8* %add.ptr37, i8** %p, align 8, !dbg !6456
  %108 = load i32, i32* %size, align 4, !dbg !6457
  %add38 = add i32 %108, 11, !dbg !6458
  store i8** %p, i8*** %b.addr.i57, align 8, !dbg !6459
  store i32 %add38, i32* %value.addr.i, align 4, !dbg !6459
  %109 = load i32, i32* %value.addr.i, align 4, !dbg !6460
  store i32 %109, i32* %x.addr.i.i, align 4, !dbg !6461
  %110 = load i32, i32* %x.addr.i.i, align 4, !dbg !6462
  %shl.i.i = shl i32 %110, 8, !dbg !6463
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !6464
  %111 = load i32, i32* %x.addr.i.i, align 4, !dbg !6465
  %shr.i.i = lshr i32 %111, 8, !dbg !6466
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !6467
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !6468
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !6469
  %112 = load i32, i32* %x.addr.i.i, align 4, !dbg !6470
  %shr3.i.i = lshr i32 %112, 16, !dbg !6471
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !6472
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !6473
  %113 = load i32, i32* %x.addr.i.i, align 4, !dbg !6474
  %shr6.i.i = lshr i32 %113, 16, !dbg !6475
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !6476
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !6477
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !6478
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !6479
  %114 = load i8**, i8*** %b.addr.i57, align 8, !dbg !6480
  %115 = load i8*, i8** %114, align 8, !dbg !6481
  %116 = bitcast i8* %115 to %union.unaligned_32*, !dbg !6482
  %l.i = bitcast %union.unaligned_32* %116 to i32*, !dbg !6482
  store i32 %or10.i.i, i32* %l.i, align 1, !dbg !6483
  %117 = load i8**, i8*** %b.addr.i57, align 8, !dbg !6484
  %118 = load i8*, i8** %117, align 8, !dbg !6485
  %add.ptr.i58 = getelementptr inbounds i8, i8* %118, i64 4, !dbg !6485
  store i8* %add.ptr.i58, i8** %117, align 8, !dbg !6485
  %119 = load i32, i32* %size, align 4, !dbg !6486
  %add39 = add i32 %119, 3, !dbg !6487
  %add40 = add i32 %add39, 4, !dbg !6488
  %120 = load i8*, i8** %next, align 8, !dbg !6489
  %idx.ext41 = zext i32 %add40 to i64, !dbg !6489
  %add.ptr42 = getelementptr inbounds i8, i8* %120, i64 %idx.ext41, !dbg !6489
  store i8* %add.ptr42, i8** %next, align 8, !dbg !6489
  br label %while.cond, !dbg !6490, !llvm.loop !6492

while.end:                                        ; preds = %if.then30, %while.cond
  %121 = load i8*, i8** %p, align 8, !dbg !6493
  %122 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !6495
  %flv_data43 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %122, i32 0, i32 13, !dbg !6496
  %123 = load i8*, i8** %flv_data43, align 8, !dbg !6496
  %124 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !6497
  %flv_size44 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %124, i32 0, i32 14, !dbg !6498
  %125 = load i32, i32* %flv_size44, align 8, !dbg !6498
  %idx.ext45 = sext i32 %125 to i64, !dbg !6499
  %add.ptr46 = getelementptr inbounds i8, i8* %123, i64 %idx.ext45, !dbg !6499
  %cmp47 = icmp ne i8* %121, %add.ptr46, !dbg !6500
  br i1 %cmp47, label %if.then49, label %if.end56, !dbg !6501

if.then49:                                        ; preds = %while.end
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.178, i32 0, i32 0)), !dbg !6502
  %126 = load i8*, i8** %p, align 8, !dbg !6504
  %127 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !6505
  %flv_data50 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %127, i32 0, i32 13, !dbg !6506
  %128 = load i8*, i8** %flv_data50, align 8, !dbg !6506
  %sub.ptr.lhs.cast51 = ptrtoint i8* %126 to i64, !dbg !6507
  %sub.ptr.rhs.cast52 = ptrtoint i8* %128 to i64, !dbg !6507
  %sub.ptr.sub53 = sub i64 %sub.ptr.lhs.cast51, %sub.ptr.rhs.cast52, !dbg !6507
  %conv54 = trunc i64 %sub.ptr.sub53 to i32, !dbg !6504
  %129 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !6508
  %flv_size55 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %129, i32 0, i32 14, !dbg !6509
  store i32 %conv54, i32* %flv_size55, align 8, !dbg !6510
  br label %if.end56, !dbg !6511

if.end56:                                         ; preds = %if.then49, %while.end
  store i32 0, i32* %retval, align 4, !dbg !6512
  br label %return, !dbg !6512

return:                                           ; preds = %if.end56, %if.then
  %130 = load i32, i32* %retval, align 4, !dbg !6513
  ret i32 %130, !dbg !6513
}

; Function Attrs: nounwind uwtable
define internal i32 @handle_user_control(%struct.URLContext* %s, %struct.RTMPPacket* %pkt) #0 !dbg !6514 {
entry:
  %x.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i, metadata !2970, metadata !376), !dbg !6515
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %t = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !6517, metadata !376), !dbg !6518
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !6519, metadata !376), !dbg !6520
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !6521, metadata !376), !dbg !6522
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6523
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !6524
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6524
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !6523
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !6522
  call void @llvm.dbg.declare(metadata i32* %t, metadata !6525, metadata !376), !dbg !6526
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6527, metadata !376), !dbg !6528
  %3 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6529
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %3, i32 0, i32 6, !dbg !6531
  %4 = load i32, i32* %size, align 8, !dbg !6531
  %cmp = icmp slt i32 %4, 2, !dbg !6532
  br i1 %cmp, label %if.then, label %if.end, !dbg !6533

if.then:                                          ; preds = %entry
  %5 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6534
  %6 = bitcast %struct.URLContext* %5 to i8*, !dbg !6534
  %7 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6536
  %size1 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %7, i32 0, i32 6, !dbg !6537
  %8 = load i32, i32* %size1, align 8, !dbg !6537
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.104, i32 0, i32 0), i32 %8), !dbg !6538
  store i32 -1094995529, i32* %retval, align 4, !dbg !6539
  br label %return, !dbg !6539

if.end:                                           ; preds = %entry
  %9 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6540
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %9, i32 0, i32 5, !dbg !6541
  %10 = load i8*, i8** %data, align 8, !dbg !6541
  %11 = bitcast i8* %10 to %union.unaligned_16*, !dbg !6542
  %l = bitcast %union.unaligned_16* %11 to i16*, !dbg !6542
  %12 = load i16, i16* %l, align 1, !dbg !6542
  store i16 %12, i16* %x.addr.i, align 2, !dbg !6543
  %13 = load i16, i16* %x.addr.i, align 2, !dbg !6544
  %conv.i = zext i16 %13 to i32, !dbg !6544
  %shr.i = ashr i32 %conv.i, 8, !dbg !6545
  %14 = load i16, i16* %x.addr.i, align 2, !dbg !6546
  %conv1.i = zext i16 %14 to i32, !dbg !6546
  %shl.i = shl i32 %conv1.i, 8, !dbg !6547
  %or.i = or i32 %shr.i, %shl.i, !dbg !6548
  %conv2.i = trunc i32 %or.i to i16, !dbg !6549
  store i16 %conv2.i, i16* %x.addr.i, align 2, !dbg !6550
  %15 = load i16, i16* %x.addr.i, align 2, !dbg !6551
  %conv = zext i16 %15 to i32, !dbg !6543
  store i32 %conv, i32* %t, align 4, !dbg !6552
  %16 = load i32, i32* %t, align 4, !dbg !6553
  %cmp2 = icmp eq i32 %16, 6, !dbg !6555
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !6556

if.then4:                                         ; preds = %if.end
  %17 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6557
  %18 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !6560
  %19 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6561
  %call5 = call i32 @gen_pong(%struct.URLContext* %17, %struct.RTMPContext* %18, %struct.RTMPPacket* %19), !dbg !6562
  store i32 %call5, i32* %ret, align 4, !dbg !6563
  %cmp6 = icmp slt i32 %call5, 0, !dbg !6564
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !6565

if.then8:                                         ; preds = %if.then4
  %20 = load i32, i32* %ret, align 4, !dbg !6566
  store i32 %20, i32* %retval, align 4, !dbg !6567
  br label %return, !dbg !6567

if.end9:                                          ; preds = %if.then4
  br label %if.end22, !dbg !6568

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %t, align 4, !dbg !6569
  %cmp10 = icmp eq i32 %21, 26, !dbg !6572
  br i1 %cmp10, label %if.then12, label %if.end21, !dbg !6569

if.then12:                                        ; preds = %if.else
  %22 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !6573
  %swfsize = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %22, i32 0, i32 33, !dbg !6576
  %23 = load i32, i32* %swfsize, align 4, !dbg !6576
  %tobool = icmp ne i32 %23, 0, !dbg !6573
  br i1 %tobool, label %if.then13, label %if.else19, !dbg !6577

if.then13:                                        ; preds = %if.then12
  %24 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6578
  %25 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !6581
  %call14 = call i32 @gen_swf_verification(%struct.URLContext* %24, %struct.RTMPContext* %25), !dbg !6582
  store i32 %call14, i32* %ret, align 4, !dbg !6583
  %cmp15 = icmp slt i32 %call14, 0, !dbg !6584
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !6585

if.then17:                                        ; preds = %if.then13
  %26 = load i32, i32* %ret, align 4, !dbg !6586
  store i32 %26, i32* %retval, align 4, !dbg !6587
  br label %return, !dbg !6587

if.end18:                                         ; preds = %if.then13
  br label %if.end20, !dbg !6588

if.else19:                                        ; preds = %if.then12
  %27 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6589
  %28 = bitcast %struct.URLContext* %27 to i8*, !dbg !6589
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.105, i32 0, i32 0)), !dbg !6591
  br label %if.end20

if.end20:                                         ; preds = %if.else19, %if.end18
  br label %if.end21, !dbg !6592

if.end21:                                         ; preds = %if.end20, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end9
  store i32 0, i32* %retval, align 4, !dbg !6593
  br label %return, !dbg !6593

return:                                           ; preds = %if.end22, %if.then17, %if.then8, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !6594
  ret i32 %29, !dbg !6594
}

; Function Attrs: nounwind uwtable
define internal i32 @handle_invoke(%struct.URLContext* %s, %struct.RTMPPacket* %pkt) #0 !dbg !6595 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !6596, metadata !376), !dbg !6597
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !6598, metadata !376), !dbg !6599
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !6600, metadata !376), !dbg !6601
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6602
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !6603
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6603
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !6602
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !6601
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6604, metadata !376), !dbg !6605
  store i32 0, i32* %ret, align 4, !dbg !6605
  %3 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6606
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %3, i32 0, i32 5, !dbg !6608
  %4 = load i8*, i8** %data, align 8, !dbg !6608
  %5 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6609
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %5, i32 0, i32 6, !dbg !6610
  %6 = load i32, i32* %size, align 8, !dbg !6610
  %call = call i32 @ff_amf_match_string(i8* %4, i32 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0)), !dbg !6611
  %tobool = icmp ne i32 %call, 0, !dbg !6611
  br i1 %tobool, label %if.then, label %if.else, !dbg !6612

if.then:                                          ; preds = %entry
  %7 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6613
  %8 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6616
  %call1 = call i32 @handle_invoke_error(%struct.URLContext* %7, %struct.RTMPPacket* %8), !dbg !6617
  store i32 %call1, i32* %ret, align 4, !dbg !6618
  %cmp = icmp slt i32 %call1, 0, !dbg !6619
  br i1 %cmp, label %if.then2, label %if.end, !dbg !6620

if.then2:                                         ; preds = %if.then
  %9 = load i32, i32* %ret, align 4, !dbg !6621
  store i32 %9, i32* %retval, align 4, !dbg !6622
  br label %return, !dbg !6622

if.end:                                           ; preds = %if.then
  br label %if.end70, !dbg !6623

if.else:                                          ; preds = %entry
  %10 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6624
  %data3 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %10, i32 0, i32 5, !dbg !6627
  %11 = load i8*, i8** %data3, align 8, !dbg !6627
  %12 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6628
  %size4 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %12, i32 0, i32 6, !dbg !6629
  %13 = load i32, i32* %size4, align 8, !dbg !6629
  %call5 = call i32 @ff_amf_match_string(i8* %11, i32 %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.81, i32 0, i32 0)), !dbg !6630
  %tobool6 = icmp ne i32 %call5, 0, !dbg !6630
  br i1 %tobool6, label %if.then7, label %if.else12, !dbg !6630

if.then7:                                         ; preds = %if.else
  %14 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6631
  %15 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6634
  %call8 = call i32 @handle_invoke_result(%struct.URLContext* %14, %struct.RTMPPacket* %15), !dbg !6635
  store i32 %call8, i32* %ret, align 4, !dbg !6636
  %cmp9 = icmp slt i32 %call8, 0, !dbg !6637
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !6638

if.then10:                                        ; preds = %if.then7
  %16 = load i32, i32* %ret, align 4, !dbg !6639
  store i32 %16, i32* %retval, align 4, !dbg !6640
  br label %return, !dbg !6640

if.end11:                                         ; preds = %if.then7
  br label %if.end69, !dbg !6641

if.else12:                                        ; preds = %if.else
  %17 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6642
  %data13 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %17, i32 0, i32 5, !dbg !6645
  %18 = load i8*, i8** %data13, align 8, !dbg !6645
  %19 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6646
  %size14 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %19, i32 0, i32 6, !dbg !6647
  %20 = load i32, i32* %size14, align 8, !dbg !6647
  %call15 = call i32 @ff_amf_match_string(i8* %18, i32 %20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i32 0, i32 0)), !dbg !6648
  %tobool16 = icmp ne i32 %call15, 0, !dbg !6648
  br i1 %tobool16, label %if.then17, label %if.else22, !dbg !6648

if.then17:                                        ; preds = %if.else12
  %21 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6649
  %22 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6652
  %call18 = call i32 @handle_invoke_status(%struct.URLContext* %21, %struct.RTMPPacket* %22), !dbg !6653
  store i32 %call18, i32* %ret, align 4, !dbg !6654
  %cmp19 = icmp slt i32 %call18, 0, !dbg !6655
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !6656

if.then20:                                        ; preds = %if.then17
  %23 = load i32, i32* %ret, align 4, !dbg !6657
  store i32 %23, i32* %retval, align 4, !dbg !6658
  br label %return, !dbg !6658

if.end21:                                         ; preds = %if.then17
  br label %if.end68, !dbg !6659

if.else22:                                        ; preds = %if.else12
  %24 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6660
  %data23 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %24, i32 0, i32 5, !dbg !6663
  %25 = load i8*, i8** %data23, align 8, !dbg !6663
  %26 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6664
  %size24 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %26, i32 0, i32 6, !dbg !6665
  %27 = load i32, i32* %size24, align 8, !dbg !6665
  %call25 = call i32 @ff_amf_match_string(i8* %25, i32 %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i32 0, i32 0)), !dbg !6666
  %tobool26 = icmp ne i32 %call25, 0, !dbg !6666
  br i1 %tobool26, label %if.then27, label %if.else32, !dbg !6666

if.then27:                                        ; preds = %if.else22
  %28 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6667
  %29 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !6670
  %call28 = call i32 @gen_check_bw(%struct.URLContext* %28, %struct.RTMPContext* %29), !dbg !6671
  store i32 %call28, i32* %ret, align 4, !dbg !6672
  %cmp29 = icmp slt i32 %call28, 0, !dbg !6673
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !6674

if.then30:                                        ; preds = %if.then27
  %30 = load i32, i32* %ret, align 4, !dbg !6675
  store i32 %30, i32* %retval, align 4, !dbg !6676
  br label %return, !dbg !6676

if.end31:                                         ; preds = %if.then27
  br label %if.end67, !dbg !6677

if.else32:                                        ; preds = %if.else22
  %31 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6678
  %data33 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %31, i32 0, i32 5, !dbg !6681
  %32 = load i8*, i8** %data33, align 8, !dbg !6681
  %33 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6682
  %size34 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %33, i32 0, i32 6, !dbg !6683
  %34 = load i32, i32* %size34, align 8, !dbg !6683
  %call35 = call i32 @ff_amf_match_string(i8* %32, i32 %34, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.110, i32 0, i32 0)), !dbg !6684
  %tobool36 = icmp ne i32 %call35, 0, !dbg !6684
  br i1 %tobool36, label %if.then61, label %lor.lhs.false, !dbg !6685

lor.lhs.false:                                    ; preds = %if.else32
  %35 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6686
  %data37 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %35, i32 0, i32 5, !dbg !6687
  %36 = load i8*, i8** %data37, align 8, !dbg !6687
  %37 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6688
  %size38 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %37, i32 0, i32 6, !dbg !6689
  %38 = load i32, i32* %size38, align 8, !dbg !6689
  %call39 = call i32 @ff_amf_match_string(i8* %36, i32 %38, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i32 0, i32 0)), !dbg !6690
  %tobool40 = icmp ne i32 %call39, 0, !dbg !6690
  br i1 %tobool40, label %if.then61, label %lor.lhs.false41, !dbg !6691

lor.lhs.false41:                                  ; preds = %lor.lhs.false
  %39 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6692
  %data42 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %39, i32 0, i32 5, !dbg !6693
  %40 = load i8*, i8** %data42, align 8, !dbg !6693
  %41 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6694
  %size43 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %41, i32 0, i32 6, !dbg !6695
  %42 = load i32, i32* %size43, align 8, !dbg !6695
  %call44 = call i32 @ff_amf_match_string(i8* %40, i32 %42, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0)), !dbg !6696
  %tobool45 = icmp ne i32 %call44, 0, !dbg !6696
  br i1 %tobool45, label %if.then61, label %lor.lhs.false46, !dbg !6697

lor.lhs.false46:                                  ; preds = %lor.lhs.false41
  %43 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6698
  %data47 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %43, i32 0, i32 5, !dbg !6699
  %44 = load i8*, i8** %data47, align 8, !dbg !6699
  %45 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6700
  %size48 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %45, i32 0, i32 6, !dbg !6701
  %46 = load i32, i32* %size48, align 8, !dbg !6701
  %call49 = call i32 @ff_amf_match_string(i8* %44, i32 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0)), !dbg !6702
  %tobool50 = icmp ne i32 %call49, 0, !dbg !6702
  br i1 %tobool50, label %if.then61, label %lor.lhs.false51, !dbg !6703

lor.lhs.false51:                                  ; preds = %lor.lhs.false46
  %47 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6704
  %data52 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %47, i32 0, i32 5, !dbg !6705
  %48 = load i8*, i8** %data52, align 8, !dbg !6705
  %49 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6706
  %size53 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %49, i32 0, i32 6, !dbg !6707
  %50 = load i32, i32* %size53, align 8, !dbg !6707
  %call54 = call i32 @ff_amf_match_string(i8* %48, i32 %50, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.114, i32 0, i32 0)), !dbg !6708
  %tobool55 = icmp ne i32 %call54, 0, !dbg !6708
  br i1 %tobool55, label %if.then61, label %lor.lhs.false56, !dbg !6709

lor.lhs.false56:                                  ; preds = %lor.lhs.false51
  %51 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6710
  %data57 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %51, i32 0, i32 5, !dbg !6711
  %52 = load i8*, i8** %data57, align 8, !dbg !6711
  %53 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6712
  %size58 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %53, i32 0, i32 6, !dbg !6713
  %54 = load i32, i32* %size58, align 8, !dbg !6713
  %call59 = call i32 @ff_amf_match_string(i8* %52, i32 %54, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.115, i32 0, i32 0)), !dbg !6714
  %tobool60 = icmp ne i32 %call59, 0, !dbg !6714
  br i1 %tobool60, label %if.then61, label %if.end66, !dbg !6715

if.then61:                                        ; preds = %lor.lhs.false56, %lor.lhs.false51, %lor.lhs.false46, %lor.lhs.false41, %lor.lhs.false, %if.else32
  %55 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6717
  %56 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6720
  %call62 = call i32 @send_invoke_response(%struct.URLContext* %55, %struct.RTMPPacket* %56), !dbg !6721
  store i32 %call62, i32* %ret, align 4, !dbg !6722
  %cmp63 = icmp slt i32 %call62, 0, !dbg !6723
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !6724

if.then64:                                        ; preds = %if.then61
  %57 = load i32, i32* %ret, align 4, !dbg !6725
  store i32 %57, i32* %retval, align 4, !dbg !6726
  br label %return, !dbg !6726

if.end65:                                         ; preds = %if.then61
  br label %if.end66, !dbg !6727

if.end66:                                         ; preds = %if.end65, %lor.lhs.false56
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.end31
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.end21
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end11
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.end
  %58 = load i32, i32* %ret, align 4, !dbg !6728
  store i32 %58, i32* %retval, align 4, !dbg !6729
  br label %return, !dbg !6729

return:                                           ; preds = %if.end70, %if.then64, %if.then30, %if.then20, %if.then10, %if.then2
  %59 = load i32, i32* %retval, align 4, !dbg !6730
  ret i32 %59, !dbg !6730
}

; Function Attrs: nounwind uwtable
define internal i32 @gen_pong(%struct.URLContext* %s, %struct.RTMPContext* %rt, %struct.RTMPPacket* %ppkt) #0 !dbg !6731 {
entry:
  %x.addr.i.i8 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i8, metadata !2616, metadata !376), !dbg !6732
  %b.addr.i9 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i9, metadata !2960, metadata !376), !dbg !6736
  %value.addr.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i10, metadata !2962, metadata !376), !dbg !6737
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2616, metadata !376), !dbg !6738
  %x.addr.i.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i.i, metadata !2970, metadata !376), !dbg !6740
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !2978, metadata !376), !dbg !6743
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !2980, metadata !376), !dbg !6744
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %ppkt.addr = alloca %struct.RTMPPacket*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !6745, metadata !376), !dbg !6746
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !6747, metadata !376), !dbg !6748
  store %struct.RTMPPacket* %ppkt, %struct.RTMPPacket** %ppkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %ppkt.addr, metadata !6749, metadata !376), !dbg !6750
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !6751, metadata !376), !dbg !6752
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6753, metadata !376), !dbg !6754
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6755, metadata !376), !dbg !6756
  %0 = load %struct.RTMPPacket*, %struct.RTMPPacket** %ppkt.addr, align 8, !dbg !6757
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %0, i32 0, i32 6, !dbg !6759
  %1 = load i32, i32* %size, align 8, !dbg !6759
  %cmp = icmp slt i32 %1, 6, !dbg !6760
  br i1 %cmp, label %if.then, label %if.end, !dbg !6761

if.then:                                          ; preds = %entry
  %2 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6762
  %3 = bitcast %struct.URLContext* %2 to i8*, !dbg !6762
  %4 = load %struct.RTMPPacket*, %struct.RTMPPacket** %ppkt.addr, align 8, !dbg !6764
  %size1 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %4, i32 0, i32 6, !dbg !6765
  %5 = load i32, i32* %size1, align 8, !dbg !6765
  call void (i8*, i32, i8*, ...) @av_log(i8* %3, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.106, i32 0, i32 0), i32 %5), !dbg !6766
  store i32 -1094995529, i32* %retval, align 4, !dbg !6767
  br label %return, !dbg !6767

if.end:                                           ; preds = %entry
  %6 = load %struct.RTMPPacket*, %struct.RTMPPacket** %ppkt.addr, align 8, !dbg !6768
  %timestamp = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %6, i32 0, i32 2, !dbg !6770
  %7 = load i32, i32* %timestamp, align 8, !dbg !6770
  %add = add i32 %7, 1, !dbg !6771
  %call = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 2, i32 4, i32 %add, i32 6), !dbg !6772
  store i32 %call, i32* %ret, align 4, !dbg !6773
  %cmp2 = icmp slt i32 %call, 0, !dbg !6774
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6775

if.then3:                                         ; preds = %if.end
  %8 = load i32, i32* %ret, align 4, !dbg !6776
  store i32 %8, i32* %retval, align 4, !dbg !6777
  br label %return, !dbg !6777

if.end4:                                          ; preds = %if.end
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !6778
  %9 = load i8*, i8** %data, align 8, !dbg !6778
  store i8* %9, i8** %p, align 8, !dbg !6779
  store i8** %p, i8*** %b.addr.i, align 8, !dbg !6780
  store i32 7, i32* %value.addr.i, align 4, !dbg !6780
  %10 = load i32, i32* %value.addr.i, align 4, !dbg !6781
  %conv.i = trunc i32 %10 to i16, !dbg !6781
  store i16 %conv.i, i16* %x.addr.i.i, align 2, !dbg !6782
  %11 = load i16, i16* %x.addr.i.i, align 2, !dbg !6783
  %conv.i.i = zext i16 %11 to i32, !dbg !6783
  %shr.i.i = ashr i32 %conv.i.i, 8, !dbg !6784
  %12 = load i16, i16* %x.addr.i.i, align 2, !dbg !6785
  %conv1.i.i = zext i16 %12 to i32, !dbg !6785
  %shl.i.i = shl i32 %conv1.i.i, 8, !dbg !6786
  %or.i.i = or i32 %shr.i.i, %shl.i.i, !dbg !6787
  %conv2.i.i = trunc i32 %or.i.i to i16, !dbg !6788
  store i16 %conv2.i.i, i16* %x.addr.i.i, align 2, !dbg !6789
  %13 = load i16, i16* %x.addr.i.i, align 2, !dbg !6790
  %14 = load i8**, i8*** %b.addr.i, align 8, !dbg !6791
  %15 = load i8*, i8** %14, align 8, !dbg !6792
  %16 = bitcast i8* %15 to %union.unaligned_16*, !dbg !6793
  %l.i = bitcast %union.unaligned_16* %16 to i16*, !dbg !6793
  store i16 %13, i16* %l.i, align 1, !dbg !6794
  %17 = load i8**, i8*** %b.addr.i, align 8, !dbg !6795
  %18 = load i8*, i8** %17, align 8, !dbg !6796
  %add.ptr.i = getelementptr inbounds i8, i8* %18, i64 2, !dbg !6796
  store i8* %add.ptr.i, i8** %17, align 8, !dbg !6796
  %19 = load %struct.RTMPPacket*, %struct.RTMPPacket** %ppkt.addr, align 8, !dbg !6797
  %data5 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %19, i32 0, i32 5, !dbg !6798
  %20 = load i8*, i8** %data5, align 8, !dbg !6798
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 2, !dbg !6799
  %21 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !6800
  %l = bitcast %union.unaligned_32* %21 to i32*, !dbg !6800
  %22 = load i32, i32* %l, align 1, !dbg !6800
  store i32 %22, i32* %x.addr.i, align 4, !dbg !6801
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !6802
  %shl.i = shl i32 %23, 8, !dbg !6803
  %and.i = and i32 %shl.i, 65280, !dbg !6804
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !6805
  %shr.i = lshr i32 %24, 8, !dbg !6806
  %and1.i = and i32 %shr.i, 255, !dbg !6807
  %or.i = or i32 %and.i, %and1.i, !dbg !6808
  %shl2.i = shl i32 %or.i, 16, !dbg !6809
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !6810
  %shr3.i = lshr i32 %25, 16, !dbg !6811
  %shl4.i = shl i32 %shr3.i, 8, !dbg !6812
  %and5.i = and i32 %shl4.i, 65280, !dbg !6813
  %26 = load i32, i32* %x.addr.i, align 4, !dbg !6814
  %shr6.i = lshr i32 %26, 16, !dbg !6815
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !6816
  %and8.i = and i32 %shr7.i, 255, !dbg !6817
  %or9.i = or i32 %and5.i, %and8.i, !dbg !6818
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !6819
  store i8** %p, i8*** %b.addr.i9, align 8, !dbg !6820
  store i32 %or10.i, i32* %value.addr.i10, align 4, !dbg !6820
  %27 = load i32, i32* %value.addr.i10, align 4, !dbg !6821
  store i32 %27, i32* %x.addr.i.i8, align 4, !dbg !6822
  %28 = load i32, i32* %x.addr.i.i8, align 4, !dbg !6823
  %shl.i.i11 = shl i32 %28, 8, !dbg !6824
  %and.i.i = and i32 %shl.i.i11, 65280, !dbg !6825
  %29 = load i32, i32* %x.addr.i.i8, align 4, !dbg !6826
  %shr.i.i12 = lshr i32 %29, 8, !dbg !6827
  %and1.i.i = and i32 %shr.i.i12, 255, !dbg !6828
  %or.i.i13 = or i32 %and.i.i, %and1.i.i, !dbg !6829
  %shl2.i.i = shl i32 %or.i.i13, 16, !dbg !6830
  %30 = load i32, i32* %x.addr.i.i8, align 4, !dbg !6831
  %shr3.i.i = lshr i32 %30, 16, !dbg !6832
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !6833
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !6834
  %31 = load i32, i32* %x.addr.i.i8, align 4, !dbg !6835
  %shr6.i.i = lshr i32 %31, 16, !dbg !6836
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !6837
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !6838
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !6839
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !6840
  %32 = load i8**, i8*** %b.addr.i9, align 8, !dbg !6841
  %33 = load i8*, i8** %32, align 8, !dbg !6842
  %34 = bitcast i8* %33 to %union.unaligned_32*, !dbg !6843
  %l.i14 = bitcast %union.unaligned_32* %34 to i32*, !dbg !6843
  store i32 %or10.i.i, i32* %l.i14, align 1, !dbg !6844
  %35 = load i8**, i8*** %b.addr.i9, align 8, !dbg !6845
  %36 = load i8*, i8** %35, align 8, !dbg !6846
  %add.ptr.i15 = getelementptr inbounds i8, i8* %36, i64 4, !dbg !6846
  store i8* %add.ptr.i15, i8** %35, align 8, !dbg !6846
  %37 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !6847
  %call7 = call i32 @rtmp_send_packet(%struct.RTMPContext* %37, %struct.RTMPPacket* %pkt, i32 0), !dbg !6848
  store i32 %call7, i32* %retval, align 4, !dbg !6849
  br label %return, !dbg !6849

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !6850
  ret i32 %38, !dbg !6850
}

; Function Attrs: nounwind uwtable
define internal i32 @gen_swf_verification(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !6851 {
entry:
  %x.addr.i.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i.i, metadata !2970, metadata !376), !dbg !6852
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !2978, metadata !376), !dbg !6855
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !2980, metadata !376), !dbg !6856
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !6857, metadata !376), !dbg !6858
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !6859, metadata !376), !dbg !6860
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !6861, metadata !376), !dbg !6862
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6863, metadata !376), !dbg !6864
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6865, metadata !376), !dbg !6866
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6867
  %1 = bitcast %struct.URLContext* %0 to i8*, !dbg !6867
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 48, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.107, i32 0, i32 0)), !dbg !6868
  %call = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 2, i32 4, i32 0, i32 44), !dbg !6869
  store i32 %call, i32* %ret, align 4, !dbg !6871
  %cmp = icmp slt i32 %call, 0, !dbg !6872
  br i1 %cmp, label %if.then, label %if.end, !dbg !6873

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !6874
  store i32 %2, i32* %retval, align 4, !dbg !6875
  br label %return, !dbg !6875

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !6876
  %3 = load i8*, i8** %data, align 8, !dbg !6876
  store i8* %3, i8** %p, align 8, !dbg !6877
  store i8** %p, i8*** %b.addr.i, align 8, !dbg !6878
  store i32 27, i32* %value.addr.i, align 4, !dbg !6878
  %4 = load i32, i32* %value.addr.i, align 4, !dbg !6879
  %conv.i = trunc i32 %4 to i16, !dbg !6879
  store i16 %conv.i, i16* %x.addr.i.i, align 2, !dbg !6880
  %5 = load i16, i16* %x.addr.i.i, align 2, !dbg !6881
  %conv.i.i = zext i16 %5 to i32, !dbg !6881
  %shr.i.i = ashr i32 %conv.i.i, 8, !dbg !6882
  %6 = load i16, i16* %x.addr.i.i, align 2, !dbg !6883
  %conv1.i.i = zext i16 %6 to i32, !dbg !6883
  %shl.i.i = shl i32 %conv1.i.i, 8, !dbg !6884
  %or.i.i = or i32 %shr.i.i, %shl.i.i, !dbg !6885
  %conv2.i.i = trunc i32 %or.i.i to i16, !dbg !6886
  store i16 %conv2.i.i, i16* %x.addr.i.i, align 2, !dbg !6887
  %7 = load i16, i16* %x.addr.i.i, align 2, !dbg !6888
  %8 = load i8**, i8*** %b.addr.i, align 8, !dbg !6889
  %9 = load i8*, i8** %8, align 8, !dbg !6890
  %10 = bitcast i8* %9 to %union.unaligned_16*, !dbg !6891
  %l.i = bitcast %union.unaligned_16* %10 to i16*, !dbg !6891
  store i16 %7, i16* %l.i, align 1, !dbg !6892
  %11 = load i8**, i8*** %b.addr.i, align 8, !dbg !6893
  %12 = load i8*, i8** %11, align 8, !dbg !6894
  %add.ptr.i = getelementptr inbounds i8, i8* %12, i64 2, !dbg !6894
  store i8* %add.ptr.i, i8** %11, align 8, !dbg !6894
  %13 = load i8*, i8** %p, align 8, !dbg !6895
  %14 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !6896
  %swfverification = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %14, i32 0, i32 36, !dbg !6897
  %arraydecay = getelementptr inbounds [42 x i8], [42 x i8]* %swfverification, i32 0, i32 0, !dbg !6898
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %arraydecay, i64 42, i32 1, i1 false), !dbg !6898
  %15 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !6899
  %call1 = call i32 @rtmp_send_packet(%struct.RTMPContext* %15, %struct.RTMPPacket* %pkt, i32 0), !dbg !6900
  store i32 %call1, i32* %retval, align 4, !dbg !6901
  br label %return, !dbg !6901

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !6902
  ret i32 %16, !dbg !6902
}

declare i32 @ff_amf_match_string(i8*, i32, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @handle_invoke_error(%struct.URLContext* %s, %struct.RTMPPacket* %pkt) #0 !dbg !6903 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %data_end = alloca i8*, align 8
  %tracked_method = alloca i8*, align 8
  %level = alloca i32, align 4
  %tmpstr = alloca [256 x i8], align 16
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !6904, metadata !376), !dbg !6905
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !6906, metadata !376), !dbg !6907
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !6908, metadata !376), !dbg !6909
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6910
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !6911
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6911
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !6910
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !6909
  call void @llvm.dbg.declare(metadata i8** %data_end, metadata !6912, metadata !376), !dbg !6913
  %3 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6914
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %3, i32 0, i32 5, !dbg !6915
  %4 = load i8*, i8** %data, align 8, !dbg !6915
  %5 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6916
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %5, i32 0, i32 6, !dbg !6917
  %6 = load i32, i32* %size, align 8, !dbg !6917
  %idx.ext = sext i32 %6 to i64, !dbg !6918
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext, !dbg !6918
  store i8* %add.ptr, i8** %data_end, align 8, !dbg !6913
  call void @llvm.dbg.declare(metadata i8** %tracked_method, metadata !6919, metadata !376), !dbg !6920
  store i8* null, i8** %tracked_method, align 8, !dbg !6920
  call void @llvm.dbg.declare(metadata i32* %level, metadata !6921, metadata !376), !dbg !6922
  store i32 16, i32* %level, align 4, !dbg !6922
  call void @llvm.dbg.declare(metadata [256 x i8]* %tmpstr, metadata !6923, metadata !376), !dbg !6924
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6925, metadata !376), !dbg !6926
  %7 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6927
  %8 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6929
  %call = call i32 @find_tracked_method(%struct.URLContext* %7, %struct.RTMPPacket* %8, i32 9, i8** %tracked_method), !dbg !6930
  store i32 %call, i32* %ret, align 4, !dbg !6931
  %cmp = icmp slt i32 %call, 0, !dbg !6932
  br i1 %cmp, label %if.then, label %if.end, !dbg !6933

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %ret, align 4, !dbg !6934
  store i32 %9, i32* %retval, align 4, !dbg !6935
  br label %return, !dbg !6935

if.end:                                           ; preds = %entry
  %10 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !6936
  %data1 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %10, i32 0, i32 5, !dbg !6938
  %11 = load i8*, i8** %data1, align 8, !dbg !6938
  %add.ptr2 = getelementptr inbounds i8, i8* %11, i64 9, !dbg !6939
  %12 = load i8*, i8** %data_end, align 8, !dbg !6940
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !6941
  %call3 = call i32 @ff_amf_get_field_value(i8* %add.ptr2, i8* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i32 0, i32 0), i8* %arraydecay, i32 256), !dbg !6942
  %tobool = icmp ne i32 %call3, 0, !dbg !6942
  br i1 %tobool, label %if.end39, label %if.then4, !dbg !6943

if.then4:                                         ; preds = %if.end
  %13 = load i8*, i8** %tracked_method, align 8, !dbg !6944
  %tobool5 = icmp ne i8* %13, null, !dbg !6944
  br i1 %tobool5, label %land.lhs.true, label %if.else, !dbg !6947

land.lhs.true:                                    ; preds = %if.then4
  %14 = load i8*, i8** %tracked_method, align 8, !dbg !6948
  %call6 = call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.114, i32 0, i32 0)) #9, !dbg !6950
  %tobool7 = icmp ne i32 %call6, 0, !dbg !6950
  br i1 %tobool7, label %lor.lhs.false, label %if.then16, !dbg !6951

lor.lhs.false:                                    ; preds = %land.lhs.true
  %15 = load i8*, i8** %tracked_method, align 8, !dbg !6952
  %call8 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.110, i32 0, i32 0)) #9, !dbg !6953
  %tobool9 = icmp ne i32 %call8, 0, !dbg !6953
  br i1 %tobool9, label %lor.lhs.false10, label %if.then16, !dbg !6954

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %16 = load i8*, i8** %tracked_method, align 8, !dbg !6955
  %call11 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.116, i32 0, i32 0)) #9, !dbg !6956
  %tobool12 = icmp ne i32 %call11, 0, !dbg !6956
  br i1 %tobool12, label %lor.lhs.false13, label %if.then16, !dbg !6957

lor.lhs.false13:                                  ; preds = %lor.lhs.false10
  %17 = load i8*, i8** %tracked_method, align 8, !dbg !6958
  %call14 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i32 0, i32 0)) #9, !dbg !6959
  %tobool15 = icmp ne i32 %call14, 0, !dbg !6959
  br i1 %tobool15, label %if.else, label %if.then16, !dbg !6960

if.then16:                                        ; preds = %lor.lhs.false13, %lor.lhs.false10, %lor.lhs.false, %land.lhs.true
  store i32 24, i32* %level, align 4, !dbg !6962
  store i32 0, i32* %ret, align 4, !dbg !6964
  br label %if.end37, !dbg !6965

if.else:                                          ; preds = %lor.lhs.false13, %if.then4
  %18 = load i8*, i8** %tracked_method, align 8, !dbg !6966
  %tobool17 = icmp ne i8* %18, null, !dbg !6966
  br i1 %tobool17, label %land.lhs.true18, label %if.else23, !dbg !6969

land.lhs.true18:                                  ; preds = %if.else
  %19 = load i8*, i8** %tracked_method, align 8, !dbg !6970
  %call19 = call i32 @strcmp(i8* %19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.117, i32 0, i32 0)) #9, !dbg !6972
  %tobool20 = icmp ne i32 %call19, 0, !dbg !6972
  br i1 %tobool20, label %if.else23, label %if.then21, !dbg !6973

if.then21:                                        ; preds = %land.lhs.true18
  %20 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !6974
  %live = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %20, i32 0, i32 8, !dbg !6976
  %21 = load i32, i32* %live, align 8, !dbg !6976
  %tobool22 = icmp ne i32 %21, 0, !dbg !6974
  %cond = select i1 %tobool22, i32 48, i32 24, !dbg !6974
  store i32 %cond, i32* %level, align 4, !dbg !6977
  store i32 0, i32* %ret, align 4, !dbg !6978
  br label %if.end36, !dbg !6979

if.else23:                                        ; preds = %land.lhs.true18, %if.else
  %22 = load i8*, i8** %tracked_method, align 8, !dbg !6980
  %tobool24 = icmp ne i8* %22, null, !dbg !6980
  br i1 %tobool24, label %land.lhs.true25, label %if.else34, !dbg !6983

land.lhs.true25:                                  ; preds = %if.else23
  %23 = load i8*, i8** %tracked_method, align 8, !dbg !6984
  %call26 = call i32 @strcmp(i8* %23, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0)) #9, !dbg !6986
  %tobool27 = icmp ne i32 %call26, 0, !dbg !6986
  br i1 %tobool27, label %if.else34, label %if.then28, !dbg !6987

if.then28:                                        ; preds = %land.lhs.true25
  %24 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !6988
  %arraydecay29 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !6990
  %call30 = call i32 @handle_connect_error(%struct.URLContext* %24, i8* %arraydecay29), !dbg !6991
  store i32 %call30, i32* %ret, align 4, !dbg !6992
  %25 = load i32, i32* %ret, align 4, !dbg !6993
  %tobool31 = icmp ne i32 %25, 0, !dbg !6993
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !6995

if.then32:                                        ; preds = %if.then28
  %26 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !6996
  %do_reconnect = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %26, i32 0, i32 53, !dbg !6998
  store i32 1, i32* %do_reconnect, align 8, !dbg !6999
  store i32 40, i32* %level, align 4, !dbg !7000
  br label %if.end33, !dbg !7001

if.end33:                                         ; preds = %if.then32, %if.then28
  br label %if.end35, !dbg !7002

if.else34:                                        ; preds = %land.lhs.true25, %if.else23
  store i32 -1313558101, i32* %ret, align 4, !dbg !7003
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %if.end33
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then21
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then16
  %27 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7004
  %28 = bitcast %struct.URLContext* %27 to i8*, !dbg !7004
  %29 = load i32, i32* %level, align 4, !dbg !7005
  %arraydecay38 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !7006
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 %29, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.118, i32 0, i32 0), i8* %arraydecay38), !dbg !7007
  br label %if.end39, !dbg !7008

if.end39:                                         ; preds = %if.end37, %if.end
  %30 = load i8*, i8** %tracked_method, align 8, !dbg !7009
  call void @av_free(i8* %30), !dbg !7010
  %31 = load i32, i32* %ret, align 4, !dbg !7011
  store i32 %31, i32* %retval, align 4, !dbg !7012
  br label %return, !dbg !7012

return:                                           ; preds = %if.end39, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !7013
  ret i32 %32, !dbg !7013
}

; Function Attrs: nounwind uwtable
define internal i32 @handle_invoke_result(%struct.URLContext* %s, %struct.RTMPPacket* %pkt) #0 !dbg !7014 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %tracked_method = alloca i8*, align 8
  %ret = alloca i32, align 4
  %stream_id = alloca double, align 8
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !7015, metadata !376), !dbg !7016
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !7017, metadata !376), !dbg !7018
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !7019, metadata !376), !dbg !7020
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7021
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !7022
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7022
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !7021
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !7020
  call void @llvm.dbg.declare(metadata i8** %tracked_method, metadata !7023, metadata !376), !dbg !7024
  store i8* null, i8** %tracked_method, align 8, !dbg !7024
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7025, metadata !376), !dbg !7026
  store i32 0, i32* %ret, align 4, !dbg !7026
  %3 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7027
  %4 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !7029
  %call = call i32 @find_tracked_method(%struct.URLContext* %3, %struct.RTMPPacket* %4, i32 10, i8** %tracked_method), !dbg !7030
  store i32 %call, i32* %ret, align 4, !dbg !7031
  %cmp = icmp slt i32 %call, 0, !dbg !7032
  br i1 %cmp, label %if.then, label %if.end, !dbg !7033

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !7034
  store i32 %5, i32* %retval, align 4, !dbg !7035
  br label %return, !dbg !7035

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %tracked_method, align 8, !dbg !7036
  %tobool = icmp ne i8* %6, null, !dbg !7036
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !7038

if.then1:                                         ; preds = %if.end
  %7 = load i32, i32* %ret, align 4, !dbg !7039
  store i32 %7, i32* %retval, align 4, !dbg !7041
  br label %return, !dbg !7041

if.end2:                                          ; preds = %if.end
  %8 = load i8*, i8** %tracked_method, align 8, !dbg !7042
  %call3 = call i32 @strcmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0)) #9, !dbg !7044
  %tobool4 = icmp ne i32 %call3, 0, !dbg !7044
  br i1 %tobool4, label %if.else45, label %if.then5, !dbg !7045

if.then5:                                         ; preds = %if.end2
  %9 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7046
  %is_input = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %9, i32 0, i32 6, !dbg !7049
  %10 = load i32, i32* %is_input, align 8, !dbg !7049
  %tobool6 = icmp ne i32 %10, 0, !dbg !7046
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !7050

if.then7:                                         ; preds = %if.then5
  %11 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7051
  %12 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7054
  %call8 = call i32 @gen_release_stream(%struct.URLContext* %11, %struct.RTMPContext* %12), !dbg !7055
  store i32 %call8, i32* %ret, align 4, !dbg !7056
  %cmp9 = icmp slt i32 %call8, 0, !dbg !7057
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7058

if.then10:                                        ; preds = %if.then7
  br label %fail, !dbg !7059

if.end11:                                         ; preds = %if.then7
  %13 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7060
  %14 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7062
  %call12 = call i32 @gen_fcpublish_stream(%struct.URLContext* %13, %struct.RTMPContext* %14), !dbg !7063
  store i32 %call12, i32* %ret, align 4, !dbg !7064
  %cmp13 = icmp slt i32 %call12, 0, !dbg !7065
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !7066

if.then14:                                        ; preds = %if.end11
  br label %fail, !dbg !7067

if.end15:                                         ; preds = %if.end11
  br label %if.end20, !dbg !7068

if.else:                                          ; preds = %if.then5
  %15 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7069
  %16 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7072
  %call16 = call i32 @gen_window_ack_size(%struct.URLContext* %15, %struct.RTMPContext* %16), !dbg !7073
  store i32 %call16, i32* %ret, align 4, !dbg !7074
  %cmp17 = icmp slt i32 %call16, 0, !dbg !7075
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !7076

if.then18:                                        ; preds = %if.else
  br label %fail, !dbg !7077

if.end19:                                         ; preds = %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end15
  %17 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7078
  %18 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7080
  %call21 = call i32 @gen_create_stream(%struct.URLContext* %17, %struct.RTMPContext* %18), !dbg !7081
  store i32 %call21, i32* %ret, align 4, !dbg !7082
  %cmp22 = icmp slt i32 %call21, 0, !dbg !7083
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !7084

if.then23:                                        ; preds = %if.end20
  br label %fail, !dbg !7085

if.end24:                                         ; preds = %if.end20
  %19 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7086
  %is_input25 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %19, i32 0, i32 6, !dbg !7088
  %20 = load i32, i32* %is_input25, align 8, !dbg !7088
  %tobool26 = icmp ne i32 %20, 0, !dbg !7086
  br i1 %tobool26, label %if.then27, label %if.end44, !dbg !7089

if.then27:                                        ; preds = %if.end24
  %21 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7090
  %subscribe = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %21, i32 0, i32 38, !dbg !7093
  %22 = load i8*, i8** %subscribe, align 8, !dbg !7093
  %tobool28 = icmp ne i8* %22, null, !dbg !7090
  br i1 %tobool28, label %if.then29, label %if.else35, !dbg !7094

if.then29:                                        ; preds = %if.then27
  %23 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7095
  %24 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7098
  %25 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7099
  %subscribe30 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %25, i32 0, i32 38, !dbg !7100
  %26 = load i8*, i8** %subscribe30, align 8, !dbg !7100
  %call31 = call i32 @gen_fcsubscribe_stream(%struct.URLContext* %23, %struct.RTMPContext* %24, i8* %26), !dbg !7101
  store i32 %call31, i32* %ret, align 4, !dbg !7102
  %cmp32 = icmp slt i32 %call31, 0, !dbg !7103
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !7104

if.then33:                                        ; preds = %if.then29
  br label %fail, !dbg !7105

if.end34:                                         ; preds = %if.then29
  br label %if.end43, !dbg !7106

if.else35:                                        ; preds = %if.then27
  %27 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7107
  %live = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %27, i32 0, i32 8, !dbg !7110
  %28 = load i32, i32* %live, align 8, !dbg !7110
  %cmp36 = icmp eq i32 %28, -1, !dbg !7111
  br i1 %cmp36, label %if.then37, label %if.end42, !dbg !7107

if.then37:                                        ; preds = %if.else35
  %29 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7112
  %30 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7115
  %31 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7116
  %playpath = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %31, i32 0, i32 7, !dbg !7117
  %32 = load i8*, i8** %playpath, align 8, !dbg !7117
  %call38 = call i32 @gen_fcsubscribe_stream(%struct.URLContext* %29, %struct.RTMPContext* %30, i8* %32), !dbg !7118
  store i32 %call38, i32* %ret, align 4, !dbg !7119
  %cmp39 = icmp slt i32 %call38, 0, !dbg !7120
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !7121

if.then40:                                        ; preds = %if.then37
  br label %fail, !dbg !7122

if.end41:                                         ; preds = %if.then37
  br label %if.end42, !dbg !7123

if.end42:                                         ; preds = %if.end41, %if.else35
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.end34
  br label %if.end44, !dbg !7124

if.end44:                                         ; preds = %if.end43, %if.end24
  br label %if.end95, !dbg !7125

if.else45:                                        ; preds = %if.end2
  %33 = load i8*, i8** %tracked_method, align 8, !dbg !7126
  %call46 = call i32 @strcmp(i8* %33, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.115, i32 0, i32 0)) #9, !dbg !7129
  %tobool47 = icmp ne i32 %call46, 0, !dbg !7129
  br i1 %tobool47, label %if.else85, label %if.then48, !dbg !7130

if.then48:                                        ; preds = %if.else45
  call void @llvm.dbg.declare(metadata double* %stream_id, metadata !7131, metadata !376), !dbg !7133
  %34 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !7134
  %call49 = call i32 @read_number_result(%struct.RTMPPacket* %34, double* %stream_id), !dbg !7136
  %tobool50 = icmp ne i32 %call49, 0, !dbg !7136
  br i1 %tobool50, label %if.then51, label %if.else52, !dbg !7137

if.then51:                                        ; preds = %if.then48
  %35 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7138
  %36 = bitcast %struct.URLContext* %35 to i8*, !dbg !7138
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.152, i32 0, i32 0)), !dbg !7140
  br label %if.end54, !dbg !7141

if.else52:                                        ; preds = %if.then48
  %37 = load double, double* %stream_id, align 8, !dbg !7142
  %conv = fptosi double %37 to i32, !dbg !7142
  %38 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7144
  %stream_id53 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %38, i32 0, i32 12, !dbg !7145
  store i32 %conv, i32* %stream_id53, align 4, !dbg !7146
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then51
  %39 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7147
  %is_input55 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %39, i32 0, i32 6, !dbg !7149
  %40 = load i32, i32* %is_input55, align 8, !dbg !7149
  %tobool56 = icmp ne i32 %40, 0, !dbg !7147
  br i1 %tobool56, label %if.else63, label %if.then57, !dbg !7150

if.then57:                                        ; preds = %if.end54
  %41 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7151
  %42 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7154
  %call58 = call i32 @gen_publish(%struct.URLContext* %41, %struct.RTMPContext* %42), !dbg !7155
  store i32 %call58, i32* %ret, align 4, !dbg !7156
  %cmp59 = icmp slt i32 %call58, 0, !dbg !7157
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !7158

if.then61:                                        ; preds = %if.then57
  br label %fail, !dbg !7159

if.end62:                                         ; preds = %if.then57
  br label %if.end84, !dbg !7160

if.else63:                                        ; preds = %if.end54
  %43 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7161
  %live64 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %43, i32 0, i32 8, !dbg !7164
  %44 = load i32, i32* %live64, align 8, !dbg !7164
  %cmp65 = icmp ne i32 %44, -1, !dbg !7165
  br i1 %cmp65, label %if.then67, label %if.end73, !dbg !7166

if.then67:                                        ; preds = %if.else63
  %45 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7167
  %46 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7170
  %call68 = call i32 @gen_get_stream_length(%struct.URLContext* %45, %struct.RTMPContext* %46), !dbg !7171
  store i32 %call68, i32* %ret, align 4, !dbg !7172
  %cmp69 = icmp slt i32 %call68, 0, !dbg !7173
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !7174

if.then71:                                        ; preds = %if.then67
  br label %fail, !dbg !7175

if.end72:                                         ; preds = %if.then67
  br label %if.end73, !dbg !7176

if.end73:                                         ; preds = %if.end72, %if.else63
  %47 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7177
  %48 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7179
  %call74 = call i32 @gen_play(%struct.URLContext* %47, %struct.RTMPContext* %48), !dbg !7180
  store i32 %call74, i32* %ret, align 4, !dbg !7181
  %cmp75 = icmp slt i32 %call74, 0, !dbg !7182
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !7183

if.then77:                                        ; preds = %if.end73
  br label %fail, !dbg !7184

if.end78:                                         ; preds = %if.end73
  %49 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7185
  %50 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7187
  %call79 = call i32 @gen_buffer_time(%struct.URLContext* %49, %struct.RTMPContext* %50), !dbg !7188
  store i32 %call79, i32* %ret, align 4, !dbg !7189
  %cmp80 = icmp slt i32 %call79, 0, !dbg !7190
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !7191

if.then82:                                        ; preds = %if.end78
  br label %fail, !dbg !7192

if.end83:                                         ; preds = %if.end78
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.end62
  br label %if.end94, !dbg !7193

if.else85:                                        ; preds = %if.else45
  %51 = load i8*, i8** %tracked_method, align 8, !dbg !7194
  %call86 = call i32 @strcmp(i8* %51, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.117, i32 0, i32 0)) #9, !dbg !7197
  %tobool87 = icmp ne i32 %call86, 0, !dbg !7197
  br i1 %tobool87, label %if.end93, label %if.then88, !dbg !7198

if.then88:                                        ; preds = %if.else85
  %52 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !7199
  %53 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7202
  %duration = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %53, i32 0, i32 49, !dbg !7203
  %call89 = call i32 @read_number_result(%struct.RTMPPacket* %52, double* %duration), !dbg !7204
  %tobool90 = icmp ne i32 %call89, 0, !dbg !7204
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !7205

if.then91:                                        ; preds = %if.then88
  %54 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7206
  %55 = bitcast %struct.URLContext* %54 to i8*, !dbg !7206
  call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 24, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.153, i32 0, i32 0)), !dbg !7208
  br label %if.end92, !dbg !7209

if.end92:                                         ; preds = %if.then91, %if.then88
  br label %if.end93, !dbg !7210

if.end93:                                         ; preds = %if.end92, %if.else85
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.end84
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.end44
  br label %fail, !dbg !7211

fail:                                             ; preds = %if.end95, %if.then82, %if.then77, %if.then71, %if.then61, %if.then40, %if.then33, %if.then23, %if.then18, %if.then14, %if.then10
  %56 = load i8*, i8** %tracked_method, align 8, !dbg !7213
  call void @av_free(i8* %56), !dbg !7214
  %57 = load i32, i32* %ret, align 4, !dbg !7215
  store i32 %57, i32* %retval, align 4, !dbg !7216
  br label %return, !dbg !7216

return:                                           ; preds = %fail, %if.then1, %if.then
  %58 = load i32, i32* %retval, align 4, !dbg !7217
  ret i32 %58, !dbg !7217
}

; Function Attrs: nounwind uwtable
define internal i32 @handle_invoke_status(%struct.URLContext* %s, %struct.RTMPPacket* %pkt) #0 !dbg !7218 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %data_end = alloca i8*, align 8
  %ptr = alloca i8*, align 8
  %tmpstr = alloca [256 x i8], align 16
  %i = alloca i32, align 4
  %t = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !7219, metadata !376), !dbg !7220
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !7221, metadata !376), !dbg !7222
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !7223, metadata !376), !dbg !7224
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7225
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !7226
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7226
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !7225
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !7224
  call void @llvm.dbg.declare(metadata i8** %data_end, metadata !7227, metadata !376), !dbg !7228
  %3 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !7229
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %3, i32 0, i32 5, !dbg !7230
  %4 = load i8*, i8** %data, align 8, !dbg !7230
  %5 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !7231
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %5, i32 0, i32 6, !dbg !7232
  %6 = load i32, i32* %size, align 8, !dbg !7232
  %idx.ext = sext i32 %6 to i64, !dbg !7233
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext, !dbg !7233
  store i8* %add.ptr, i8** %data_end, align 8, !dbg !7228
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !7234, metadata !376), !dbg !7235
  %7 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !7236
  %data1 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %7, i32 0, i32 5, !dbg !7237
  %8 = load i8*, i8** %data1, align 8, !dbg !7237
  %add.ptr2 = getelementptr inbounds i8, i8* %8, i64 11, !dbg !7238
  store i8* %add.ptr2, i8** %ptr, align 8, !dbg !7235
  call void @llvm.dbg.declare(metadata [256 x i8]* %tmpstr, metadata !7239, metadata !376), !dbg !7240
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7241, metadata !376), !dbg !7242
  call void @llvm.dbg.declare(metadata i32* %t, metadata !7243, metadata !376), !dbg !7244
  store i32 0, i32* %i, align 4, !dbg !7245
  br label %for.cond, !dbg !7247

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !7248
  %cmp = icmp slt i32 %9, 2, !dbg !7251
  br i1 %cmp, label %for.body, label %for.end, !dbg !7252

for.body:                                         ; preds = %for.cond
  %10 = load i8*, i8** %ptr, align 8, !dbg !7253
  %11 = load i8*, i8** %data_end, align 8, !dbg !7255
  %call = call i32 @ff_amf_tag_size(i8* %10, i8* %11), !dbg !7256
  store i32 %call, i32* %t, align 4, !dbg !7257
  %12 = load i32, i32* %t, align 4, !dbg !7258
  %cmp3 = icmp slt i32 %12, 0, !dbg !7260
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7261

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !7262
  br label %return, !dbg !7262

if.end:                                           ; preds = %for.body
  %13 = load i32, i32* %t, align 4, !dbg !7263
  %14 = load i8*, i8** %ptr, align 8, !dbg !7264
  %idx.ext4 = sext i32 %13 to i64, !dbg !7264
  %add.ptr5 = getelementptr inbounds i8, i8* %14, i64 %idx.ext4, !dbg !7264
  store i8* %add.ptr5, i8** %ptr, align 8, !dbg !7264
  br label %for.inc, !dbg !7265

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %i, align 4, !dbg !7266
  %inc = add nsw i32 %15, 1, !dbg !7266
  store i32 %inc, i32* %i, align 4, !dbg !7266
  br label %for.cond, !dbg !7268, !llvm.loop !7269

for.end:                                          ; preds = %for.cond
  %16 = load i8*, i8** %ptr, align 8, !dbg !7271
  %17 = load i8*, i8** %data_end, align 8, !dbg !7272
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !7273
  %call6 = call i32 @ff_amf_get_field_value(i8* %16, i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), i8* %arraydecay, i32 256), !dbg !7274
  store i32 %call6, i32* %t, align 4, !dbg !7275
  %18 = load i32, i32* %t, align 4, !dbg !7276
  %tobool = icmp ne i32 %18, 0, !dbg !7276
  br i1 %tobool, label %if.end23, label %land.lhs.true, !dbg !7278

land.lhs.true:                                    ; preds = %for.end
  %arraydecay7 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !7279
  %call8 = call i32 @strcmp(i8* %arraydecay7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0)) #9, !dbg !7281
  %tobool9 = icmp ne i32 %call8, 0, !dbg !7281
  br i1 %tobool9, label %if.end23, label %if.then10, !dbg !7282

if.then10:                                        ; preds = %land.lhs.true
  %19 = load i8*, i8** %ptr, align 8, !dbg !7283
  %20 = load i8*, i8** %data_end, align 8, !dbg !7285
  %arraydecay11 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !7286
  %call12 = call i32 @ff_amf_get_field_value(i8* %19, i8* %20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i32 0, i32 0), i8* %arraydecay11, i32 256), !dbg !7287
  store i32 %call12, i32* %t, align 4, !dbg !7288
  %21 = load i32, i32* %t, align 4, !dbg !7289
  %tobool13 = icmp ne i32 %21, 0, !dbg !7289
  br i1 %tobool13, label %if.then15, label %lor.lhs.false, !dbg !7291

lor.lhs.false:                                    ; preds = %if.then10
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i64 0, i64 0, !dbg !7292
  %22 = load i8, i8* %arrayidx, align 16, !dbg !7292
  %tobool14 = icmp ne i8 %22, 0, !dbg !7292
  br i1 %tobool14, label %if.end18, label %if.then15, !dbg !7294

if.then15:                                        ; preds = %lor.lhs.false, %if.then10
  %23 = load i8*, i8** %ptr, align 8, !dbg !7295
  %24 = load i8*, i8** %data_end, align 8, !dbg !7296
  %arraydecay16 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !7297
  %call17 = call i32 @ff_amf_get_field_value(i8* %23, i8* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i32 0, i32 0), i8* %arraydecay16, i32 256), !dbg !7298
  store i32 %call17, i32* %t, align 4, !dbg !7299
  br label %if.end18, !dbg !7300

if.end18:                                         ; preds = %if.then15, %lor.lhs.false
  %25 = load i32, i32* %t, align 4, !dbg !7301
  %tobool19 = icmp ne i32 %25, 0, !dbg !7301
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !7303

if.then20:                                        ; preds = %if.end18
  %26 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7304
  %27 = bitcast %struct.URLContext* %26 to i8*, !dbg !7304
  %arraydecay21 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !7305
  call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.118, i32 0, i32 0), i8* %arraydecay21), !dbg !7306
  br label %if.end22, !dbg !7306

if.end22:                                         ; preds = %if.then20, %if.end18
  store i32 -1, i32* %retval, align 4, !dbg !7307
  br label %return, !dbg !7307

if.end23:                                         ; preds = %land.lhs.true, %for.end
  %28 = load i8*, i8** %ptr, align 8, !dbg !7308
  %29 = load i8*, i8** %data_end, align 8, !dbg !7309
  %arraydecay24 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !7310
  %call25 = call i32 @ff_amf_get_field_value(i8* %28, i8* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i32 0, i32 0), i8* %arraydecay24, i32 256), !dbg !7311
  store i32 %call25, i32* %t, align 4, !dbg !7312
  %30 = load i32, i32* %t, align 4, !dbg !7313
  %tobool26 = icmp ne i32 %30, 0, !dbg !7313
  br i1 %tobool26, label %if.end32, label %land.lhs.true27, !dbg !7315

land.lhs.true27:                                  ; preds = %if.end23
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !7316
  %call29 = call i32 @strcmp(i8* %arraydecay28, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.160, i32 0, i32 0)) #9, !dbg !7318
  %tobool30 = icmp ne i32 %call29, 0, !dbg !7318
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !7319

if.then31:                                        ; preds = %land.lhs.true27
  %31 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7320
  %state = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %31, i32 0, i32 11, !dbg !7322
  store i32 3, i32* %state, align 8, !dbg !7323
  br label %if.end32, !dbg !7320

if.end32:                                         ; preds = %if.then31, %land.lhs.true27, %if.end23
  %32 = load i32, i32* %t, align 4, !dbg !7324
  %tobool33 = icmp ne i32 %32, 0, !dbg !7324
  br i1 %tobool33, label %if.end40, label %land.lhs.true34, !dbg !7326

land.lhs.true34:                                  ; preds = %if.end32
  %arraydecay35 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !7327
  %call36 = call i32 @strcmp(i8* %arraydecay35, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.161, i32 0, i32 0)) #9, !dbg !7329
  %tobool37 = icmp ne i32 %call36, 0, !dbg !7329
  br i1 %tobool37, label %if.end40, label %if.then38, !dbg !7330

if.then38:                                        ; preds = %land.lhs.true34
  %33 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7331
  %state39 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %33, i32 0, i32 11, !dbg !7333
  store i32 8, i32* %state39, align 8, !dbg !7334
  br label %if.end40, !dbg !7331

if.end40:                                         ; preds = %if.then38, %land.lhs.true34, %if.end32
  %34 = load i32, i32* %t, align 4, !dbg !7335
  %tobool41 = icmp ne i32 %34, 0, !dbg !7335
  br i1 %tobool41, label %if.end48, label %land.lhs.true42, !dbg !7337

land.lhs.true42:                                  ; preds = %if.end40
  %arraydecay43 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !7338
  %call44 = call i32 @strcmp(i8* %arraydecay43, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.162, i32 0, i32 0)) #9, !dbg !7340
  %tobool45 = icmp ne i32 %call44, 0, !dbg !7340
  br i1 %tobool45, label %if.end48, label %if.then46, !dbg !7341

if.then46:                                        ; preds = %land.lhs.true42
  %35 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7342
  %state47 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %35, i32 0, i32 11, !dbg !7344
  store i32 8, i32* %state47, align 8, !dbg !7345
  br label %if.end48, !dbg !7342

if.end48:                                         ; preds = %if.then46, %land.lhs.true42, %if.end40
  %36 = load i32, i32* %t, align 4, !dbg !7346
  %tobool49 = icmp ne i32 %36, 0, !dbg !7346
  br i1 %tobool49, label %if.end56, label %land.lhs.true50, !dbg !7348

land.lhs.true50:                                  ; preds = %if.end48
  %arraydecay51 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !7349
  %call52 = call i32 @strcmp(i8* %arraydecay51, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.163, i32 0, i32 0)) #9, !dbg !7351
  %tobool53 = icmp ne i32 %call52, 0, !dbg !7351
  br i1 %tobool53, label %if.end56, label %if.then54, !dbg !7352

if.then54:                                        ; preds = %land.lhs.true50
  %37 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7353
  %state55 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %37, i32 0, i32 11, !dbg !7355
  store i32 5, i32* %state55, align 8, !dbg !7356
  br label %if.end56, !dbg !7353

if.end56:                                         ; preds = %if.then54, %land.lhs.true50, %if.end48
  %38 = load i32, i32* %t, align 4, !dbg !7357
  %tobool57 = icmp ne i32 %38, 0, !dbg !7357
  br i1 %tobool57, label %if.end64, label %land.lhs.true58, !dbg !7359

land.lhs.true58:                                  ; preds = %if.end56
  %arraydecay59 = getelementptr inbounds [256 x i8], [256 x i8]* %tmpstr, i32 0, i32 0, !dbg !7360
  %call60 = call i32 @strcmp(i8* %arraydecay59, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.164, i32 0, i32 0)) #9, !dbg !7362
  %tobool61 = icmp ne i32 %call60, 0, !dbg !7362
  br i1 %tobool61, label %if.end64, label %if.then62, !dbg !7363

if.then62:                                        ; preds = %land.lhs.true58
  %39 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7364
  %state63 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %39, i32 0, i32 11, !dbg !7366
  store i32 3, i32* %state63, align 8, !dbg !7367
  br label %if.end64, !dbg !7364

if.end64:                                         ; preds = %if.then62, %land.lhs.true58, %if.end56
  store i32 0, i32* %retval, align 4, !dbg !7368
  br label %return, !dbg !7368

return:                                           ; preds = %if.end64, %if.end22, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !7369
  ret i32 %40, !dbg !7369
}

; Function Attrs: nounwind uwtable
define internal i32 @gen_check_bw(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !7370 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !7371, metadata !376), !dbg !7372
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !7373, metadata !376), !dbg !7374
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !7375, metadata !376), !dbg !7376
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7377, metadata !376), !dbg !7378
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7379, metadata !376), !dbg !7380
  %call = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 3, i32 20, i32 0, i32 21), !dbg !7381
  store i32 %call, i32* %ret, align 4, !dbg !7383
  %cmp = icmp slt i32 %call, 0, !dbg !7384
  br i1 %cmp, label %if.then, label %if.end, !dbg !7385

if.then:                                          ; preds = %entry
  %0 = load i32, i32* %ret, align 4, !dbg !7386
  store i32 %0, i32* %retval, align 4, !dbg !7387
  br label %return, !dbg !7387

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !7388
  %1 = load i8*, i8** %data, align 8, !dbg !7388
  store i8* %1, i8** %p, align 8, !dbg !7389
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.114, i32 0, i32 0)), !dbg !7390
  %2 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !7391
  %nb_invokes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %2, i32 0, i32 28, !dbg !7392
  %3 = load i32, i32* %nb_invokes, align 4, !dbg !7393
  %inc = add nsw i32 %3, 1, !dbg !7393
  store i32 %inc, i32* %nb_invokes, align 4, !dbg !7393
  %conv = sitofp i32 %inc to double, !dbg !7393
  call void @ff_amf_write_number(i8** %p, double %conv), !dbg !7394
  call void @ff_amf_write_null(i8** %p), !dbg !7395
  %4 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !7396
  %call1 = call i32 @rtmp_send_packet(%struct.RTMPContext* %4, %struct.RTMPPacket* %pkt, i32 1), !dbg !7397
  store i32 %call1, i32* %retval, align 4, !dbg !7398
  br label %return, !dbg !7398

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !7399
  ret i32 %5, !dbg !7399
}

; Function Attrs: nounwind uwtable
define internal i32 @send_invoke_response(%struct.URLContext* %s, %struct.RTMPPacket* %pkt) #0 !dbg !7400 {
entry:
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !1440, metadata !376), !dbg !7401
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !1457, metadata !376), !dbg !7403
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !1459, metadata !376), !dbg !7404
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %seqnum = alloca double, align 8
  %filename = alloca [128 x i8], align 16
  %command = alloca [64 x i8], align 16
  %stringlen = alloca i32, align 4
  %pchar = alloca i8*, align 8
  %p = alloca i8*, align 8
  %pp = alloca i8*, align 8
  %spkt = alloca %struct.RTMPPacket, align 8
  %gbc = alloca %struct.GetByteContext, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !7405, metadata !376), !dbg !7406
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !7407, metadata !376), !dbg !7408
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !7409, metadata !376), !dbg !7410
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7411
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !7412
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7412
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !7411
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !7410
  call void @llvm.dbg.declare(metadata double* %seqnum, metadata !7413, metadata !376), !dbg !7414
  call void @llvm.dbg.declare(metadata [128 x i8]* %filename, metadata !7415, metadata !376), !dbg !7416
  call void @llvm.dbg.declare(metadata [64 x i8]* %command, metadata !7417, metadata !376), !dbg !7418
  call void @llvm.dbg.declare(metadata i32* %stringlen, metadata !7419, metadata !376), !dbg !7420
  call void @llvm.dbg.declare(metadata i8** %pchar, metadata !7421, metadata !376), !dbg !7422
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7423, metadata !376), !dbg !7424
  %3 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !7425
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %3, i32 0, i32 5, !dbg !7426
  %4 = load i8*, i8** %data, align 8, !dbg !7426
  store i8* %4, i8** %p, align 8, !dbg !7424
  call void @llvm.dbg.declare(metadata i8** %pp, metadata !7427, metadata !376), !dbg !7428
  store i8* null, i8** %pp, align 8, !dbg !7428
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %spkt, metadata !7429, metadata !376), !dbg !7430
  %5 = bitcast %struct.RTMPPacket* %spkt to i8*, !dbg !7430
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 48, i32 8, i1 false), !dbg !7430
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gbc, metadata !7431, metadata !376), !dbg !7432
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7433, metadata !376), !dbg !7434
  %6 = load i8*, i8** %p, align 8, !dbg !7435
  %7 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !7436
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %7, i32 0, i32 6, !dbg !7437
  %8 = load i32, i32* %size, align 8, !dbg !7437
  store %struct.GetByteContext* %gbc, %struct.GetByteContext** %g.addr.i, align 8, !dbg !7438
  store i8* %6, i8** %buf.addr.i, align 8, !dbg !7438
  store i32 %8, i32* %buf_size.addr.i, align 4, !dbg !7438
  %9 = load i32, i32* %buf_size.addr.i, align 4, !dbg !7439
  %cmp.i = icmp sge i32 %9, 0, !dbg !7440
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !7441

if.then.i:                                        ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.72, i32 0, i32 0), i32 137) #10, !dbg !7442
  call void @abort() #11, !dbg !7443
  unreachable, !dbg !7444

bytestream2_init.exit:                            ; preds = %entry
  %10 = load i8*, i8** %buf.addr.i, align 8, !dbg !7445
  %11 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !7446
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %11, i32 0, i32 0, !dbg !7447
  store i8* %10, i8** %buffer.i, align 8, !dbg !7448
  %12 = load i8*, i8** %buf.addr.i, align 8, !dbg !7449
  %13 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !7450
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %13, i32 0, i32 2, !dbg !7451
  store i8* %12, i8** %buffer_start.i, align 8, !dbg !7452
  %14 = load i8*, i8** %buf.addr.i, align 8, !dbg !7453
  %15 = load i32, i32* %buf_size.addr.i, align 4, !dbg !7454
  %idx.ext.i = sext i32 %15 to i64, !dbg !7455
  %add.ptr.i = getelementptr inbounds i8, i8* %14, i64 %idx.ext.i, !dbg !7455
  %16 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !7456
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %16, i32 0, i32 1, !dbg !7457
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !7458
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %command, i32 0, i32 0, !dbg !7459
  %call = call i32 @ff_amf_read_string(%struct.GetByteContext* %gbc, i8* %arraydecay, i32 64, i32* %stringlen), !dbg !7461
  %tobool = icmp ne i32 %call, 0, !dbg !7461
  br i1 %tobool, label %if.then, label %if.end, !dbg !7462

if.then:                                          ; preds = %bytestream2_init.exit
  %17 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7463
  %18 = bitcast %struct.URLContext* %17 to i8*, !dbg !7463
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.165, i32 0, i32 0)), !dbg !7465
  store i32 -1094995529, i32* %retval, align 4, !dbg !7466
  br label %return, !dbg !7466

if.end:                                           ; preds = %bytestream2_init.exit
  %call1 = call i32 @ff_amf_read_number(%struct.GetByteContext* %gbc, double* %seqnum), !dbg !7467
  store i32 %call1, i32* %ret, align 4, !dbg !7468
  %19 = load i32, i32* %ret, align 4, !dbg !7469
  %tobool2 = icmp ne i32 %19, 0, !dbg !7469
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7471

if.then3:                                         ; preds = %if.end
  %20 = load i32, i32* %ret, align 4, !dbg !7472
  store i32 %20, i32* %retval, align 4, !dbg !7473
  br label %return, !dbg !7473

if.end4:                                          ; preds = %if.end
  %call5 = call i32 @ff_amf_read_null(%struct.GetByteContext* %gbc), !dbg !7474
  store i32 %call5, i32* %ret, align 4, !dbg !7475
  %21 = load i32, i32* %ret, align 4, !dbg !7476
  %tobool6 = icmp ne i32 %21, 0, !dbg !7476
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7478

if.then7:                                         ; preds = %if.end4
  %22 = load i32, i32* %ret, align 4, !dbg !7479
  store i32 %22, i32* %retval, align 4, !dbg !7480
  br label %return, !dbg !7480

if.end8:                                          ; preds = %if.end4
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %command, i32 0, i32 0, !dbg !7481
  %call10 = call i32 @strcmp(i8* %arraydecay9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i32 0, i32 0)) #9, !dbg !7483
  %tobool11 = icmp ne i32 %call10, 0, !dbg !7483
  br i1 %tobool11, label %lor.lhs.false, label %if.then15, !dbg !7484

lor.lhs.false:                                    ; preds = %if.end8
  %arraydecay12 = getelementptr inbounds [64 x i8], [64 x i8]* %command, i32 0, i32 0, !dbg !7485
  %call13 = call i32 @strcmp(i8* %arraydecay12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0)) #9, !dbg !7486
  %tobool14 = icmp ne i32 %call13, 0, !dbg !7486
  br i1 %tobool14, label %if.end40, label %if.then15, !dbg !7487

if.then15:                                        ; preds = %lor.lhs.false, %if.end8
  %arraydecay16 = getelementptr inbounds [128 x i8], [128 x i8]* %filename, i32 0, i32 0, !dbg !7489
  %call17 = call i32 @ff_amf_read_string(%struct.GetByteContext* %gbc, i8* %arraydecay16, i32 128, i32* %stringlen), !dbg !7491
  store i32 %call17, i32* %ret, align 4, !dbg !7492
  %23 = load i32, i32* %ret, align 4, !dbg !7493
  %tobool18 = icmp ne i32 %23, 0, !dbg !7493
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !7495

if.then19:                                        ; preds = %if.then15
  %24 = load i32, i32* %ret, align 4, !dbg !7496
  %cmp = icmp eq i32 %24, -22, !dbg !7499
  br i1 %cmp, label %if.then20, label %if.else, !dbg !7500

if.then20:                                        ; preds = %if.then19
  %25 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7501
  %26 = bitcast %struct.URLContext* %25 to i8*, !dbg !7501
  call void (i8*, i32, i8*, ...) @av_log(i8* %26, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.166, i32 0, i32 0)), !dbg !7502
  br label %if.end21, !dbg !7502

if.else:                                          ; preds = %if.then19
  %27 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7503
  %28 = bitcast %struct.URLContext* %27 to i8*, !dbg !7503
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0)), !dbg !7504
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then20
  %29 = load i32, i32* %ret, align 4, !dbg !7505
  store i32 %29, i32* %retval, align 4, !dbg !7506
  br label %return, !dbg !7506

if.end22:                                         ; preds = %if.then15
  %30 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7507
  %filename23 = getelementptr inbounds %struct.URLContext, %struct.URLContext* %30, i32 0, i32 3, !dbg !7509
  %31 = load i8*, i8** %filename23, align 8, !dbg !7509
  %tobool24 = icmp ne i8* %31, null, !dbg !7507
  br i1 %tobool24, label %if.then25, label %if.end39, !dbg !7510

if.then25:                                        ; preds = %if.end22
  %32 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7511
  %filename26 = getelementptr inbounds %struct.URLContext, %struct.URLContext* %32, i32 0, i32 3, !dbg !7513
  %33 = load i8*, i8** %filename26, align 8, !dbg !7513
  %call27 = call i8* @strrchr(i8* %33, i32 47) #9, !dbg !7514
  store i8* %call27, i8** %pchar, align 8, !dbg !7515
  %34 = load i8*, i8** %pchar, align 8, !dbg !7516
  %tobool28 = icmp ne i8* %34, null, !dbg !7516
  br i1 %tobool28, label %if.end32, label %if.then29, !dbg !7518

if.then29:                                        ; preds = %if.then25
  %35 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7519
  %36 = bitcast %struct.URLContext* %35 to i8*, !dbg !7519
  %37 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7521
  %filename30 = getelementptr inbounds %struct.URLContext, %struct.URLContext* %37, i32 0, i32 3, !dbg !7522
  %38 = load i8*, i8** %filename30, align 8, !dbg !7522
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 24, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.168, i32 0, i32 0), i8* %38), !dbg !7523
  %39 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7524
  %filename31 = getelementptr inbounds %struct.URLContext, %struct.URLContext* %39, i32 0, i32 3, !dbg !7525
  %40 = load i8*, i8** %filename31, align 8, !dbg !7525
  store i8* %40, i8** %pchar, align 8, !dbg !7526
  br label %if.end32, !dbg !7527

if.end32:                                         ; preds = %if.then29, %if.then25
  %41 = load i8*, i8** %pchar, align 8, !dbg !7528
  %incdec.ptr = getelementptr inbounds i8, i8* %41, i32 1, !dbg !7528
  store i8* %incdec.ptr, i8** %pchar, align 8, !dbg !7528
  %42 = load i8*, i8** %pchar, align 8, !dbg !7529
  %arraydecay33 = getelementptr inbounds [128 x i8], [128 x i8]* %filename, i32 0, i32 0, !dbg !7531
  %call34 = call i32 @strcmp(i8* %42, i8* %arraydecay33) #9, !dbg !7532
  %tobool35 = icmp ne i32 %call34, 0, !dbg !7532
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !7533

if.then36:                                        ; preds = %if.end32
  %43 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7534
  %44 = bitcast %struct.URLContext* %43 to i8*, !dbg !7534
  %arraydecay37 = getelementptr inbounds [128 x i8], [128 x i8]* %filename, i32 0, i32 0, !dbg !7535
  %45 = load i8*, i8** %pchar, align 8, !dbg !7536
  call void (i8*, i32, i8*, ...) @av_log(i8* %44, i32 24, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.169, i32 0, i32 0), i8* %arraydecay37, i8* %45), !dbg !7537
  br label %if.end38, !dbg !7537

if.end38:                                         ; preds = %if.then36, %if.end32
  br label %if.end39, !dbg !7538

if.end39:                                         ; preds = %if.end38, %if.end22
  %46 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7539
  %state = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %46, i32 0, i32 11, !dbg !7540
  store i32 6, i32* %state, align 8, !dbg !7541
  br label %if.end40, !dbg !7542

if.end40:                                         ; preds = %if.end39, %lor.lhs.false
  %arraydecay41 = getelementptr inbounds [64 x i8], [64 x i8]* %command, i32 0, i32 0, !dbg !7543
  %call42 = call i32 @strcmp(i8* %arraydecay41, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i32 0, i32 0)) #9, !dbg !7545
  %tobool43 = icmp ne i32 %call42, 0, !dbg !7545
  br i1 %tobool43, label %if.else50, label %if.then44, !dbg !7546

if.then44:                                        ; preds = %if.end40
  %call45 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %spkt, i32 3, i32 20, i32 0, i32 4096), !dbg !7547
  store i32 %call45, i32* %ret, align 4, !dbg !7550
  %cmp46 = icmp slt i32 %call45, 0, !dbg !7551
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !7552

if.then47:                                        ; preds = %if.then44
  %47 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7553
  %48 = bitcast %struct.URLContext* %47 to i8*, !dbg !7553
  call void (i8*, i32, i8*, ...) @av_log(i8* %48, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.170, i32 0, i32 0)), !dbg !7555
  %49 = load i32, i32* %ret, align 4, !dbg !7556
  store i32 %49, i32* %retval, align 4, !dbg !7557
  br label %return, !dbg !7557

if.end48:                                         ; preds = %if.then44
  %data49 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %spkt, i32 0, i32 5, !dbg !7558
  %50 = load i8*, i8** %data49, align 8, !dbg !7558
  store i8* %50, i8** %pp, align 8, !dbg !7559
  call void @ff_amf_write_string(i8** %pp, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.171, i32 0, i32 0)), !dbg !7560
  br label %if.end96, !dbg !7561

if.else50:                                        ; preds = %if.end40
  %arraydecay51 = getelementptr inbounds [64 x i8], [64 x i8]* %command, i32 0, i32 0, !dbg !7562
  %call52 = call i32 @strcmp(i8* %arraydecay51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0)) #9, !dbg !7565
  %tobool53 = icmp ne i32 %call52, 0, !dbg !7565
  br i1 %tobool53, label %if.else61, label %if.then54, !dbg !7566

if.then54:                                        ; preds = %if.else50
  %51 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7567
  %call55 = call i32 @write_begin(%struct.URLContext* %51), !dbg !7569
  store i32 %call55, i32* %ret, align 4, !dbg !7570
  %52 = load i32, i32* %ret, align 4, !dbg !7571
  %cmp56 = icmp slt i32 %52, 0, !dbg !7573
  br i1 %cmp56, label %if.then57, label %if.end58, !dbg !7574

if.then57:                                        ; preds = %if.then54
  %53 = load i32, i32* %ret, align 4, !dbg !7575
  store i32 %53, i32* %retval, align 4, !dbg !7576
  br label %return, !dbg !7576

if.end58:                                         ; preds = %if.then54
  %54 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7577
  %55 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !7578
  %arraydecay59 = getelementptr inbounds [128 x i8], [128 x i8]* %filename, i32 0, i32 0, !dbg !7579
  %call60 = call i32 @write_status(%struct.URLContext* %54, %struct.RTMPPacket* %55, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.163, i32 0, i32 0), i8* %arraydecay59), !dbg !7580
  store i32 %call60, i32* %retval, align 4, !dbg !7581
  br label %return, !dbg !7581

if.else61:                                        ; preds = %if.else50
  %arraydecay62 = getelementptr inbounds [64 x i8], [64 x i8]* %command, i32 0, i32 0, !dbg !7582
  %call63 = call i32 @strcmp(i8* %arraydecay62, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0)) #9, !dbg !7584
  %tobool64 = icmp ne i32 %call63, 0, !dbg !7584
  br i1 %tobool64, label %if.else73, label %if.then65, !dbg !7585

if.then65:                                        ; preds = %if.else61
  %56 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7586
  %call66 = call i32 @write_begin(%struct.URLContext* %56), !dbg !7588
  store i32 %call66, i32* %ret, align 4, !dbg !7589
  %57 = load i32, i32* %ret, align 4, !dbg !7590
  %cmp67 = icmp slt i32 %57, 0, !dbg !7592
  br i1 %cmp67, label %if.then68, label %if.end69, !dbg !7593

if.then68:                                        ; preds = %if.then65
  %58 = load i32, i32* %ret, align 4, !dbg !7594
  store i32 %58, i32* %retval, align 4, !dbg !7595
  br label %return, !dbg !7595

if.end69:                                         ; preds = %if.then65
  %59 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7596
  %state70 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %59, i32 0, i32 11, !dbg !7597
  store i32 7, i32* %state70, align 8, !dbg !7598
  %60 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7599
  %61 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !7600
  %arraydecay71 = getelementptr inbounds [128 x i8], [128 x i8]* %filename, i32 0, i32 0, !dbg !7601
  %call72 = call i32 @write_status(%struct.URLContext* %60, %struct.RTMPPacket* %61, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.160, i32 0, i32 0), i8* %arraydecay71), !dbg !7602
  store i32 %call72, i32* %retval, align 4, !dbg !7603
  br label %return, !dbg !7603

if.else73:                                        ; preds = %if.else61
  %call74 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %spkt, i32 3, i32 20, i32 0, i32 4096), !dbg !7604
  store i32 %call74, i32* %ret, align 4, !dbg !7607
  %cmp75 = icmp slt i32 %call74, 0, !dbg !7608
  br i1 %cmp75, label %if.then76, label %if.end77, !dbg !7609

if.then76:                                        ; preds = %if.else73
  %62 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7610
  %63 = bitcast %struct.URLContext* %62 to i8*, !dbg !7610
  call void (i8*, i32, i8*, ...) @av_log(i8* %63, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.170, i32 0, i32 0)), !dbg !7612
  %64 = load i32, i32* %ret, align 4, !dbg !7613
  store i32 %64, i32* %retval, align 4, !dbg !7614
  br label %return, !dbg !7614

if.end77:                                         ; preds = %if.else73
  %data78 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %spkt, i32 0, i32 5, !dbg !7615
  %65 = load i8*, i8** %data78, align 8, !dbg !7615
  store i8* %65, i8** %pp, align 8, !dbg !7616
  call void @ff_amf_write_string(i8** %pp, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.81, i32 0, i32 0)), !dbg !7617
  %66 = load double, double* %seqnum, align 8, !dbg !7618
  call void @ff_amf_write_number(i8** %pp, double %66), !dbg !7619
  call void @ff_amf_write_null(i8** %pp), !dbg !7620
  %arraydecay79 = getelementptr inbounds [64 x i8], [64 x i8]* %command, i32 0, i32 0, !dbg !7621
  %call80 = call i32 @strcmp(i8* %arraydecay79, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.115, i32 0, i32 0)) #9, !dbg !7623
  %tobool81 = icmp ne i32 %call80, 0, !dbg !7623
  br i1 %tobool81, label %if.end93, label %if.then82, !dbg !7624

if.then82:                                        ; preds = %if.end77
  %67 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7625
  %nb_streamid = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %67, i32 0, i32 48, !dbg !7627
  %68 = load i32, i32* %nb_streamid, align 8, !dbg !7628
  %inc = add nsw i32 %68, 1, !dbg !7628
  store i32 %inc, i32* %nb_streamid, align 8, !dbg !7628
  %69 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7629
  %nb_streamid83 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %69, i32 0, i32 48, !dbg !7631
  %70 = load i32, i32* %nb_streamid83, align 8, !dbg !7631
  %cmp84 = icmp eq i32 %70, 0, !dbg !7632
  br i1 %cmp84, label %if.then88, label %lor.lhs.false85, !dbg !7633

lor.lhs.false85:                                  ; preds = %if.then82
  %71 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7634
  %nb_streamid86 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %71, i32 0, i32 48, !dbg !7636
  %72 = load i32, i32* %nb_streamid86, align 8, !dbg !7636
  %cmp87 = icmp eq i32 %72, 2, !dbg !7637
  br i1 %cmp87, label %if.then88, label %if.end91, !dbg !7638

if.then88:                                        ; preds = %lor.lhs.false85, %if.then82
  %73 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7639
  %nb_streamid89 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %73, i32 0, i32 48, !dbg !7640
  %74 = load i32, i32* %nb_streamid89, align 8, !dbg !7641
  %inc90 = add nsw i32 %74, 1, !dbg !7641
  store i32 %inc90, i32* %nb_streamid89, align 8, !dbg !7641
  br label %if.end91, !dbg !7639

if.end91:                                         ; preds = %if.then88, %lor.lhs.false85
  %75 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7642
  %nb_streamid92 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %75, i32 0, i32 48, !dbg !7643
  %76 = load i32, i32* %nb_streamid92, align 8, !dbg !7643
  %conv = sitofp i32 %76 to double, !dbg !7642
  call void @ff_amf_write_number(i8** %pp, double %conv), !dbg !7644
  br label %if.end93, !dbg !7645

if.end93:                                         ; preds = %if.end91, %if.end77
  br label %if.end94

if.end94:                                         ; preds = %if.end93
  br label %if.end95

if.end95:                                         ; preds = %if.end94
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.end48
  %77 = load i8*, i8** %pp, align 8, !dbg !7646
  %data97 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %spkt, i32 0, i32 5, !dbg !7647
  %78 = load i8*, i8** %data97, align 8, !dbg !7647
  %sub.ptr.lhs.cast = ptrtoint i8* %77 to i64, !dbg !7648
  %sub.ptr.rhs.cast = ptrtoint i8* %78 to i64, !dbg !7648
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7648
  %conv98 = trunc i64 %sub.ptr.sub to i32, !dbg !7646
  %size99 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %spkt, i32 0, i32 6, !dbg !7649
  store i32 %conv98, i32* %size99, align 8, !dbg !7650
  %79 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7651
  %stream = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %79, i32 0, i32 1, !dbg !7652
  %80 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !7652
  %81 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7653
  %out_chunk_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %81, i32 0, i32 5, !dbg !7654
  %82 = load i32, i32* %out_chunk_size, align 4, !dbg !7654
  %83 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7655
  %prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %83, i32 0, i32 2, !dbg !7656
  %arrayidx = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt, i64 0, i64 1, !dbg !7655
  %84 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7657
  %nb_prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %84, i32 0, i32 3, !dbg !7658
  %arrayidx100 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt, i64 0, i64 1, !dbg !7657
  %call101 = call i32 @ff_rtmp_packet_write(%struct.URLContext* %80, %struct.RTMPPacket* %spkt, i32 %82, %struct.RTMPPacket** %arrayidx, i32* %arrayidx100), !dbg !7659
  store i32 %call101, i32* %ret, align 4, !dbg !7660
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %spkt), !dbg !7661
  %85 = load i32, i32* %ret, align 4, !dbg !7662
  store i32 %85, i32* %retval, align 4, !dbg !7663
  br label %return, !dbg !7663

return:                                           ; preds = %if.end96, %if.then76, %if.end69, %if.then68, %if.end58, %if.then57, %if.then47, %if.end21, %if.then7, %if.then3, %if.then
  %86 = load i32, i32* %retval, align 4, !dbg !7664
  ret i32 %86, !dbg !7664
}

; Function Attrs: nounwind uwtable
define internal i32 @find_tracked_method(%struct.URLContext* %s, %struct.RTMPPacket* %pkt, i32 %offset, i8** %tracked_method) #0 !dbg !7665 {
entry:
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !1440, metadata !376), !dbg !7669
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !1457, metadata !376), !dbg !7671
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !1459, metadata !376), !dbg !7672
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %offset.addr = alloca i32, align 4
  %tracked_method.addr = alloca i8**, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %gbc = alloca %struct.GetByteContext, align 8
  %pkt_id = alloca double, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !7673, metadata !376), !dbg !7674
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !7675, metadata !376), !dbg !7676
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7677, metadata !376), !dbg !7678
  store i8** %tracked_method, i8*** %tracked_method.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %tracked_method.addr, metadata !7679, metadata !376), !dbg !7680
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !7681, metadata !376), !dbg !7682
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7683
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !7684
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7684
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !7683
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !7682
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gbc, metadata !7685, metadata !376), !dbg !7686
  call void @llvm.dbg.declare(metadata double* %pkt_id, metadata !7687, metadata !376), !dbg !7688
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7689, metadata !376), !dbg !7690
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7691, metadata !376), !dbg !7692
  %3 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !7693
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %3, i32 0, i32 5, !dbg !7694
  %4 = load i8*, i8** %data, align 8, !dbg !7694
  %5 = load i32, i32* %offset.addr, align 4, !dbg !7695
  %idx.ext = sext i32 %5 to i64, !dbg !7696
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext, !dbg !7696
  %6 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !7697
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %6, i32 0, i32 6, !dbg !7698
  %7 = load i32, i32* %size, align 8, !dbg !7698
  %8 = load i32, i32* %offset.addr, align 4, !dbg !7699
  %sub = sub nsw i32 %7, %8, !dbg !7700
  store %struct.GetByteContext* %gbc, %struct.GetByteContext** %g.addr.i, align 8, !dbg !7701
  store i8* %add.ptr, i8** %buf.addr.i, align 8, !dbg !7701
  store i32 %sub, i32* %buf_size.addr.i, align 4, !dbg !7701
  %9 = load i32, i32* %buf_size.addr.i, align 4, !dbg !7702
  %cmp.i = icmp sge i32 %9, 0, !dbg !7703
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !7704

if.then.i:                                        ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.72, i32 0, i32 0), i32 137) #10, !dbg !7705
  call void @abort() #11, !dbg !7706
  unreachable, !dbg !7707

bytestream2_init.exit:                            ; preds = %entry
  %10 = load i8*, i8** %buf.addr.i, align 8, !dbg !7708
  %11 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !7709
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %11, i32 0, i32 0, !dbg !7710
  store i8* %10, i8** %buffer.i, align 8, !dbg !7711
  %12 = load i8*, i8** %buf.addr.i, align 8, !dbg !7712
  %13 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !7713
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %13, i32 0, i32 2, !dbg !7714
  store i8* %12, i8** %buffer_start.i, align 8, !dbg !7715
  %14 = load i8*, i8** %buf.addr.i, align 8, !dbg !7716
  %15 = load i32, i32* %buf_size.addr.i, align 4, !dbg !7717
  %idx.ext.i = sext i32 %15 to i64, !dbg !7718
  %add.ptr.i = getelementptr inbounds i8, i8* %14, i64 %idx.ext.i, !dbg !7718
  %16 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !7719
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %16, i32 0, i32 1, !dbg !7720
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !7721
  %call = call i32 @ff_amf_read_number(%struct.GetByteContext* %gbc, double* %pkt_id), !dbg !7722
  store i32 %call, i32* %ret, align 4, !dbg !7724
  %cmp = icmp slt i32 %call, 0, !dbg !7725
  br i1 %cmp, label %if.then, label %if.end, !dbg !7726

if.then:                                          ; preds = %bytestream2_init.exit
  %17 = load i32, i32* %ret, align 4, !dbg !7727
  store i32 %17, i32* %retval, align 4, !dbg !7728
  br label %return, !dbg !7728

if.end:                                           ; preds = %bytestream2_init.exit
  store i32 0, i32* %i, align 4, !dbg !7729
  br label %for.cond, !dbg !7731

for.cond:                                         ; preds = %for.inc, %if.end
  %18 = load i32, i32* %i, align 4, !dbg !7732
  %19 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7735
  %nb_tracked_methods = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %19, i32 0, i32 44, !dbg !7736
  %20 = load i32, i32* %nb_tracked_methods, align 8, !dbg !7736
  %cmp1 = icmp slt i32 %18, %20, !dbg !7737
  br i1 %cmp1, label %for.body, label %for.end, !dbg !7738

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %i, align 4, !dbg !7739
  %idxprom = sext i32 %21 to i64, !dbg !7742
  %22 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7742
  %tracked_methods = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %22, i32 0, i32 43, !dbg !7743
  %23 = load %struct.TrackedMethod*, %struct.TrackedMethod** %tracked_methods, align 8, !dbg !7743
  %arrayidx = getelementptr inbounds %struct.TrackedMethod, %struct.TrackedMethod* %23, i64 %idxprom, !dbg !7742
  %id = getelementptr inbounds %struct.TrackedMethod, %struct.TrackedMethod* %arrayidx, i32 0, i32 1, !dbg !7744
  %24 = load i32, i32* %id, align 8, !dbg !7744
  %conv = sitofp i32 %24 to double, !dbg !7742
  %25 = load double, double* %pkt_id, align 8, !dbg !7745
  %cmp2 = fcmp une double %conv, %25, !dbg !7746
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !7747

if.then4:                                         ; preds = %for.body
  br label %for.inc, !dbg !7748

if.end5:                                          ; preds = %for.body
  %26 = load i32, i32* %i, align 4, !dbg !7749
  %idxprom6 = sext i32 %26 to i64, !dbg !7750
  %27 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7750
  %tracked_methods7 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %27, i32 0, i32 43, !dbg !7751
  %28 = load %struct.TrackedMethod*, %struct.TrackedMethod** %tracked_methods7, align 8, !dbg !7751
  %arrayidx8 = getelementptr inbounds %struct.TrackedMethod, %struct.TrackedMethod* %28, i64 %idxprom6, !dbg !7750
  %name = getelementptr inbounds %struct.TrackedMethod, %struct.TrackedMethod* %arrayidx8, i32 0, i32 0, !dbg !7752
  %29 = load i8*, i8** %name, align 8, !dbg !7752
  %30 = load i8**, i8*** %tracked_method.addr, align 8, !dbg !7753
  store i8* %29, i8** %30, align 8, !dbg !7754
  %31 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7755
  %32 = load i32, i32* %i, align 4, !dbg !7756
  call void @del_tracked_method(%struct.RTMPContext* %31, i32 %32), !dbg !7757
  br label %for.end, !dbg !7758

for.inc:                                          ; preds = %if.then4
  %33 = load i32, i32* %i, align 4, !dbg !7759
  %inc = add nsw i32 %33, 1, !dbg !7759
  store i32 %inc, i32* %i, align 4, !dbg !7759
  br label %for.cond, !dbg !7761, !llvm.loop !7762

for.end:                                          ; preds = %if.end5, %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7764
  br label %return, !dbg !7764

return:                                           ; preds = %for.end, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !7765
  ret i32 %34, !dbg !7765
}

; Function Attrs: nounwind uwtable
define internal i32 @handle_connect_error(%struct.URLContext* %s, i8* %desc) #0 !dbg !7766 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %desc.addr = alloca i8*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %buf = alloca [300 x i8], align 16
  %ptr = alloca i8*, align 8
  %authmod = alloca [15 x i8], align 1
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %user = alloca i8*, align 8
  %salt = alloca i8*, align 8
  %opaque = alloca i8*, align 8
  %challenge = alloca i8*, align 8
  %cptr = alloca i8*, align 8
  %nonce = alloca i8*, align 8
  %next = alloca i8*, align 8
  %value = alloca i8*, align 8
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !7769, metadata !376), !dbg !7770
  store i8* %desc, i8** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %desc.addr, metadata !7771, metadata !376), !dbg !7772
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !7773, metadata !376), !dbg !7774
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7775
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !7776
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7776
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !7775
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !7774
  call void @llvm.dbg.declare(metadata [300 x i8]* %buf, metadata !7777, metadata !376), !dbg !7781
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !7782, metadata !376), !dbg !7783
  call void @llvm.dbg.declare(metadata [15 x i8]* %authmod, metadata !7784, metadata !376), !dbg !7788
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7789, metadata !376), !dbg !7790
  store i32 0, i32* %i, align 4, !dbg !7790
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7791, metadata !376), !dbg !7792
  store i32 0, i32* %ret, align 4, !dbg !7792
  call void @llvm.dbg.declare(metadata i8** %user, metadata !7793, metadata !376), !dbg !7794
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.119, i32 0, i32 0), i8** %user, align 8, !dbg !7794
  call void @llvm.dbg.declare(metadata i8** %salt, metadata !7795, metadata !376), !dbg !7796
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.119, i32 0, i32 0), i8** %salt, align 8, !dbg !7796
  call void @llvm.dbg.declare(metadata i8** %opaque, metadata !7797, metadata !376), !dbg !7798
  store i8* null, i8** %opaque, align 8, !dbg !7798
  call void @llvm.dbg.declare(metadata i8** %challenge, metadata !7799, metadata !376), !dbg !7800
  store i8* null, i8** %challenge, align 8, !dbg !7800
  call void @llvm.dbg.declare(metadata i8** %cptr, metadata !7801, metadata !376), !dbg !7802
  store i8* null, i8** %cptr, align 8, !dbg !7802
  call void @llvm.dbg.declare(metadata i8** %nonce, metadata !7803, metadata !376), !dbg !7804
  store i8* null, i8** %nonce, align 8, !dbg !7804
  %3 = load i8*, i8** %desc.addr, align 8, !dbg !7805
  %call = call i8* @strstr(i8* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.120, i32 0, i32 0)) #9, !dbg !7807
  store i8* %call, i8** %cptr, align 8, !dbg !7808
  %tobool = icmp ne i8* %call, null, !dbg !7808
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7809

land.lhs.true:                                    ; preds = %entry
  %4 = load i8*, i8** %desc.addr, align 8, !dbg !7810
  %call1 = call i8* @strstr(i8* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.121, i32 0, i32 0)) #9, !dbg !7811
  store i8* %call1, i8** %cptr, align 8, !dbg !7812
  %tobool2 = icmp ne i8* %call1, null, !dbg !7812
  br i1 %tobool2, label %if.end, label %if.then, !dbg !7813

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7815
  %6 = bitcast %struct.URLContext* %5 to i8*, !dbg !7815
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.122, i32 0, i32 0)), !dbg !7817
  store i32 -1313558101, i32* %retval, align 4, !dbg !7818
  br label %return, !dbg !7818

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load i8*, i8** %cptr, align 8, !dbg !7819
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 8, !dbg !7819
  store i8* %add.ptr, i8** %cptr, align 8, !dbg !7819
  br label %while.cond, !dbg !7820

while.cond:                                       ; preds = %while.body, %if.end
  %8 = load i8*, i8** %cptr, align 8, !dbg !7821
  %9 = load i8, i8* %8, align 1, !dbg !7822
  %conv = sext i8 %9 to i32, !dbg !7822
  %tobool3 = icmp ne i32 %conv, 0, !dbg !7822
  br i1 %tobool3, label %land.lhs.true4, label %land.end, !dbg !7823

land.lhs.true4:                                   ; preds = %while.cond
  %10 = load i8*, i8** %cptr, align 8, !dbg !7824
  %11 = load i8, i8* %10, align 1, !dbg !7826
  %conv5 = sext i8 %11 to i32, !dbg !7826
  %cmp = icmp ne i32 %conv5, 32, !dbg !7827
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7828

land.rhs:                                         ; preds = %land.lhs.true4
  %12 = load i32, i32* %i, align 4, !dbg !7829
  %conv7 = sext i32 %12 to i64, !dbg !7829
  %cmp8 = icmp ult i64 %conv7, 14, !dbg !7831
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true4, %while.cond
  %13 = phi i1 [ false, %land.lhs.true4 ], [ false, %while.cond ], [ %cmp8, %land.rhs ]
  br i1 %13, label %while.body, label %while.end, !dbg !7832

while.body:                                       ; preds = %land.end
  %14 = load i8*, i8** %cptr, align 8, !dbg !7834
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7834
  store i8* %incdec.ptr, i8** %cptr, align 8, !dbg !7834
  %15 = load i8, i8* %14, align 1, !dbg !7835
  %16 = load i32, i32* %i, align 4, !dbg !7836
  %inc = add nsw i32 %16, 1, !dbg !7836
  store i32 %inc, i32* %i, align 4, !dbg !7836
  %idxprom = sext i32 %16 to i64, !dbg !7837
  %arrayidx = getelementptr inbounds [15 x i8], [15 x i8]* %authmod, i64 0, i64 %idxprom, !dbg !7837
  store i8 %15, i8* %arrayidx, align 1, !dbg !7838
  br label %while.cond, !dbg !7839, !llvm.loop !7841

while.end:                                        ; preds = %land.end
  %17 = load i32, i32* %i, align 4, !dbg !7842
  %idxprom10 = sext i32 %17 to i64, !dbg !7843
  %arrayidx11 = getelementptr inbounds [15 x i8], [15 x i8]* %authmod, i64 0, i64 %idxprom10, !dbg !7843
  store i8 0, i8* %arrayidx11, align 1, !dbg !7844
  %18 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7845
  %username = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %18, i32 0, i32 50, !dbg !7847
  %arrayidx12 = getelementptr inbounds [50 x i8], [50 x i8]* %username, i64 0, i64 0, !dbg !7845
  %19 = load i8, i8* %arrayidx12, align 8, !dbg !7845
  %tobool13 = icmp ne i8 %19, 0, !dbg !7845
  br i1 %tobool13, label %lor.lhs.false, label %if.then16, !dbg !7848

lor.lhs.false:                                    ; preds = %while.end
  %20 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7849
  %password = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %20, i32 0, i32 51, !dbg !7851
  %arrayidx14 = getelementptr inbounds [50 x i8], [50 x i8]* %password, i64 0, i64 0, !dbg !7849
  %21 = load i8, i8* %arrayidx14, align 2, !dbg !7849
  %tobool15 = icmp ne i8 %21, 0, !dbg !7849
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !7852

if.then16:                                        ; preds = %lor.lhs.false, %while.end
  %22 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7853
  %23 = bitcast %struct.URLContext* %22 to i8*, !dbg !7853
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.123, i32 0, i32 0)), !dbg !7855
  store i32 -1313558101, i32* %retval, align 4, !dbg !7856
  br label %return, !dbg !7856

if.end17:                                         ; preds = %lor.lhs.false
  %24 = load i8*, i8** %desc.addr, align 8, !dbg !7857
  %call18 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.124, i32 0, i32 0)) #9, !dbg !7859
  %tobool19 = icmp ne i8* %call18, null, !dbg !7859
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !7860

if.then20:                                        ; preds = %if.end17
  %25 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7861
  %26 = bitcast %struct.URLContext* %25 to i8*, !dbg !7861
  call void (i8*, i32, i8*, ...) @av_log(i8* %26, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.125, i32 0, i32 0)), !dbg !7863
  store i32 -1313558101, i32* %retval, align 4, !dbg !7864
  br label %return, !dbg !7864

if.else:                                          ; preds = %if.end17
  %27 = load i8*, i8** %desc.addr, align 8, !dbg !7865
  %call21 = call i8* @strstr(i8* %27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.126, i32 0, i32 0)) #9, !dbg !7867
  %tobool22 = icmp ne i8* %call21, null, !dbg !7867
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !7868

if.then23:                                        ; preds = %if.else
  %28 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7869
  %29 = bitcast %struct.URLContext* %28 to i8*, !dbg !7869
  call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.127, i32 0, i32 0)), !dbg !7871
  store i32 -1313558101, i32* %retval, align 4, !dbg !7872
  br label %return, !dbg !7872

if.end24:                                         ; preds = %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end24
  %30 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7873
  %auth_tried = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %30, i32 0, i32 54, !dbg !7875
  %31 = load i32, i32* %auth_tried, align 4, !dbg !7875
  %tobool26 = icmp ne i32 %31, 0, !dbg !7873
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !7876

if.then27:                                        ; preds = %if.end25
  %32 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7877
  %33 = bitcast %struct.URLContext* %32 to i8*, !dbg !7877
  call void (i8*, i32, i8*, ...) @av_log(i8* %33, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.128, i32 0, i32 0)), !dbg !7879
  store i32 -1313558101, i32* %retval, align 4, !dbg !7880
  br label %return, !dbg !7880

if.end28:                                         ; preds = %if.end25
  %34 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7881
  %auth_params = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %34, i32 0, i32 52, !dbg !7882
  %arrayidx29 = getelementptr inbounds [500 x i8], [500 x i8]* %auth_params, i64 0, i64 0, !dbg !7881
  store i8 0, i8* %arrayidx29, align 4, !dbg !7883
  %35 = load i8*, i8** %desc.addr, align 8, !dbg !7884
  %call30 = call i8* @strstr(i8* %35, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.129, i32 0, i32 0)) #9, !dbg !7886
  %tobool31 = icmp ne i8* %call30, null, !dbg !7886
  br i1 %tobool31, label %if.then32, label %if.end38, !dbg !7887

if.then32:                                        ; preds = %if.end28
  %36 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7888
  %auth_params33 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %36, i32 0, i32 52, !dbg !7890
  %arraydecay = getelementptr inbounds [500 x i8], [500 x i8]* %auth_params33, i32 0, i32 0, !dbg !7888
  %arraydecay34 = getelementptr inbounds [15 x i8], [15 x i8]* %authmod, i32 0, i32 0, !dbg !7891
  %37 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7892
  %username35 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %37, i32 0, i32 50, !dbg !7893
  %arraydecay36 = getelementptr inbounds [50 x i8], [50 x i8]* %username35, i32 0, i32 0, !dbg !7892
  %call37 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 500, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.130, i32 0, i32 0), i8* %arraydecay34, i8* %arraydecay36) #10, !dbg !7894
  store i32 0, i32* %retval, align 4, !dbg !7895
  br label %return, !dbg !7895

if.end38:                                         ; preds = %if.end28
  %38 = load i8*, i8** %desc.addr, align 8, !dbg !7896
  %call39 = call i8* @strstr(i8* %38, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.131, i32 0, i32 0)) #9, !dbg !7898
  store i8* %call39, i8** %cptr, align 8, !dbg !7899
  %tobool40 = icmp ne i8* %call39, null, !dbg !7899
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !7900

if.then41:                                        ; preds = %if.end38
  %39 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7901
  %40 = bitcast %struct.URLContext* %39 to i8*, !dbg !7901
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.132, i32 0, i32 0)), !dbg !7903
  store i32 -1313558101, i32* %retval, align 4, !dbg !7904
  br label %return, !dbg !7904

if.end42:                                         ; preds = %if.end38
  %arraydecay43 = getelementptr inbounds [300 x i8], [300 x i8]* %buf, i32 0, i32 0, !dbg !7905
  %41 = load i8*, i8** %cptr, align 8, !dbg !7906
  %add.ptr44 = getelementptr inbounds i8, i8* %41, i64 1, !dbg !7907
  %call45 = call i64 @av_strlcpy(i8* %arraydecay43, i8* %add.ptr44, i64 300), !dbg !7908
  %arraydecay46 = getelementptr inbounds [300 x i8], [300 x i8]* %buf, i32 0, i32 0, !dbg !7909
  store i8* %arraydecay46, i8** %ptr, align 8, !dbg !7910
  br label %while.cond47, !dbg !7911

while.cond47:                                     ; preds = %if.end85, %if.end42
  %42 = load i8*, i8** %ptr, align 8, !dbg !7912
  %tobool48 = icmp ne i8* %42, null, !dbg !7913
  br i1 %tobool48, label %while.body49, label %while.end86, !dbg !7913

while.body49:                                     ; preds = %while.cond47
  call void @llvm.dbg.declare(metadata i8** %next, metadata !7914, metadata !376), !dbg !7916
  %43 = load i8*, i8** %ptr, align 8, !dbg !7917
  %call50 = call i8* @strchr(i8* %43, i32 38) #9, !dbg !7918
  store i8* %call50, i8** %next, align 8, !dbg !7916
  call void @llvm.dbg.declare(metadata i8** %value, metadata !7919, metadata !376), !dbg !7920
  %44 = load i8*, i8** %ptr, align 8, !dbg !7921
  %call51 = call i8* @strchr(i8* %44, i32 61) #9, !dbg !7922
  store i8* %call51, i8** %value, align 8, !dbg !7920
  %45 = load i8*, i8** %next, align 8, !dbg !7923
  %tobool52 = icmp ne i8* %45, null, !dbg !7923
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !7925

if.then53:                                        ; preds = %while.body49
  %46 = load i8*, i8** %next, align 8, !dbg !7926
  %incdec.ptr54 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !7926
  store i8* %incdec.ptr54, i8** %next, align 8, !dbg !7926
  store i8 0, i8* %46, align 1, !dbg !7927
  br label %if.end55, !dbg !7928

if.end55:                                         ; preds = %if.then53, %while.body49
  %47 = load i8*, i8** %value, align 8, !dbg !7929
  %tobool56 = icmp ne i8* %47, null, !dbg !7929
  br i1 %tobool56, label %if.then57, label %if.else84, !dbg !7931

if.then57:                                        ; preds = %if.end55
  %48 = load i8*, i8** %value, align 8, !dbg !7932
  %incdec.ptr58 = getelementptr inbounds i8, i8* %48, i32 1, !dbg !7932
  store i8* %incdec.ptr58, i8** %value, align 8, !dbg !7932
  store i8 0, i8* %48, align 1, !dbg !7934
  %49 = load i8*, i8** %ptr, align 8, !dbg !7935
  %call59 = call i32 @strcmp(i8* %49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i32 0, i32 0)) #9, !dbg !7937
  %tobool60 = icmp ne i32 %call59, 0, !dbg !7937
  br i1 %tobool60, label %if.else62, label %if.then61, !dbg !7938

if.then61:                                        ; preds = %if.then57
  %50 = load i8*, i8** %value, align 8, !dbg !7939
  store i8* %50, i8** %user, align 8, !dbg !7941
  br label %if.end83, !dbg !7942

if.else62:                                        ; preds = %if.then57
  %51 = load i8*, i8** %ptr, align 8, !dbg !7943
  %call63 = call i32 @strcmp(i8* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i32 0, i32 0)) #9, !dbg !7946
  %tobool64 = icmp ne i32 %call63, 0, !dbg !7946
  br i1 %tobool64, label %if.else66, label %if.then65, !dbg !7947

if.then65:                                        ; preds = %if.else62
  %52 = load i8*, i8** %value, align 8, !dbg !7948
  store i8* %52, i8** %salt, align 8, !dbg !7950
  br label %if.end82, !dbg !7951

if.else66:                                        ; preds = %if.else62
  %53 = load i8*, i8** %ptr, align 8, !dbg !7952
  %call67 = call i32 @strcmp(i8* %53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.135, i32 0, i32 0)) #9, !dbg !7955
  %tobool68 = icmp ne i32 %call67, 0, !dbg !7955
  br i1 %tobool68, label %if.else70, label %if.then69, !dbg !7956

if.then69:                                        ; preds = %if.else66
  %54 = load i8*, i8** %value, align 8, !dbg !7957
  store i8* %54, i8** %opaque, align 8, !dbg !7959
  br label %if.end81, !dbg !7960

if.else70:                                        ; preds = %if.else66
  %55 = load i8*, i8** %ptr, align 8, !dbg !7961
  %call71 = call i32 @strcmp(i8* %55, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.136, i32 0, i32 0)) #9, !dbg !7964
  %tobool72 = icmp ne i32 %call71, 0, !dbg !7964
  br i1 %tobool72, label %if.else74, label %if.then73, !dbg !7965

if.then73:                                        ; preds = %if.else70
  %56 = load i8*, i8** %value, align 8, !dbg !7966
  store i8* %56, i8** %challenge, align 8, !dbg !7968
  br label %if.end80, !dbg !7969

if.else74:                                        ; preds = %if.else70
  %57 = load i8*, i8** %ptr, align 8, !dbg !7970
  %call75 = call i32 @strcmp(i8* %57, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.137, i32 0, i32 0)) #9, !dbg !7973
  %tobool76 = icmp ne i32 %call75, 0, !dbg !7973
  br i1 %tobool76, label %if.else78, label %if.then77, !dbg !7974

if.then77:                                        ; preds = %if.else74
  %58 = load i8*, i8** %value, align 8, !dbg !7975
  store i8* %58, i8** %nonce, align 8, !dbg !7977
  br label %if.end79, !dbg !7978

if.else78:                                        ; preds = %if.else74
  %59 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7979
  %60 = bitcast %struct.URLContext* %59 to i8*, !dbg !7979
  %61 = load i8*, i8** %ptr, align 8, !dbg !7981
  call void (i8*, i32, i8*, ...) @av_log(i8* %60, i32 32, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.138, i32 0, i32 0), i8* %61), !dbg !7982
  br label %if.end79

if.end79:                                         ; preds = %if.else78, %if.then77
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then73
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then69
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.then65
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then61
  br label %if.end85, !dbg !7983

if.else84:                                        ; preds = %if.end55
  %62 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !7984
  %63 = bitcast %struct.URLContext* %62 to i8*, !dbg !7984
  %64 = load i8*, i8** %ptr, align 8, !dbg !7986
  call void (i8*, i32, i8*, ...) @av_log(i8* %63, i32 24, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.139, i32 0, i32 0), i8* %64), !dbg !7987
  br label %if.end85

if.end85:                                         ; preds = %if.else84, %if.end83
  %65 = load i8*, i8** %next, align 8, !dbg !7988
  store i8* %65, i8** %ptr, align 8, !dbg !7989
  br label %while.cond47, !dbg !7990, !llvm.loop !7991

while.end86:                                      ; preds = %while.cond47
  %arraydecay87 = getelementptr inbounds [15 x i8], [15 x i8]* %authmod, i32 0, i32 0, !dbg !7992
  %call88 = call i32 @strcmp(i8* %arraydecay87, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.140, i32 0, i32 0)) #9, !dbg !7994
  %tobool89 = icmp ne i32 %call88, 0, !dbg !7994
  br i1 %tobool89, label %if.else96, label %if.then90, !dbg !7995

if.then90:                                        ; preds = %while.end86
  %66 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !7996
  %67 = load i8*, i8** %user, align 8, !dbg !7999
  %68 = load i8*, i8** %salt, align 8, !dbg !8000
  %69 = load i8*, i8** %opaque, align 8, !dbg !8001
  %70 = load i8*, i8** %challenge, align 8, !dbg !8002
  %call91 = call i32 @do_adobe_auth(%struct.RTMPContext* %66, i8* %67, i8* %68, i8* %69, i8* %70), !dbg !8003
  store i32 %call91, i32* %ret, align 4, !dbg !8004
  %cmp92 = icmp slt i32 %call91, 0, !dbg !8005
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !8006

if.then94:                                        ; preds = %if.then90
  %71 = load i32, i32* %ret, align 4, !dbg !8007
  store i32 %71, i32* %retval, align 4, !dbg !8008
  br label %return, !dbg !8008

if.end95:                                         ; preds = %if.then90
  br label %if.end102, !dbg !8009

if.else96:                                        ; preds = %while.end86
  %72 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !8010
  %73 = load i8*, i8** %user, align 8, !dbg !8013
  %74 = load i8*, i8** %nonce, align 8, !dbg !8014
  %call97 = call i32 @do_llnw_auth(%struct.RTMPContext* %72, i8* %73, i8* %74), !dbg !8015
  store i32 %call97, i32* %ret, align 4, !dbg !8016
  %cmp98 = icmp slt i32 %call97, 0, !dbg !8017
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !8018

if.then100:                                       ; preds = %if.else96
  %75 = load i32, i32* %ret, align 4, !dbg !8019
  store i32 %75, i32* %retval, align 4, !dbg !8020
  br label %return, !dbg !8020

if.end101:                                        ; preds = %if.else96
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end95
  %76 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !8021
  %auth_tried103 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %76, i32 0, i32 54, !dbg !8022
  store i32 1, i32* %auth_tried103, align 4, !dbg !8023
  store i32 0, i32* %retval, align 4, !dbg !8024
  br label %return, !dbg !8024

return:                                           ; preds = %if.end102, %if.then100, %if.then94, %if.then41, %if.then32, %if.then27, %if.then23, %if.then20, %if.then16, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !8025
  ret i32 %77, !dbg !8025
}

; Function Attrs: nounwind uwtable
define internal void @del_tracked_method(%struct.RTMPContext* %rt, i32 %index) #0 !dbg !8026 {
entry:
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %index.addr = alloca i32, align 4
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !8029, metadata !376), !dbg !8030
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8031, metadata !376), !dbg !8032
  %0 = load i32, i32* %index.addr, align 4, !dbg !8033
  %idxprom = sext i32 %0 to i64, !dbg !8034
  %1 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8034
  %tracked_methods = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %1, i32 0, i32 43, !dbg !8035
  %2 = load %struct.TrackedMethod*, %struct.TrackedMethod** %tracked_methods, align 8, !dbg !8035
  %arrayidx = getelementptr inbounds %struct.TrackedMethod, %struct.TrackedMethod* %2, i64 %idxprom, !dbg !8034
  %3 = bitcast %struct.TrackedMethod* %arrayidx to i8*, !dbg !8036
  %4 = load i32, i32* %index.addr, align 4, !dbg !8037
  %add = add nsw i32 %4, 1, !dbg !8038
  %idxprom1 = sext i32 %add to i64, !dbg !8039
  %5 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8039
  %tracked_methods2 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %5, i32 0, i32 43, !dbg !8040
  %6 = load %struct.TrackedMethod*, %struct.TrackedMethod** %tracked_methods2, align 8, !dbg !8040
  %arrayidx3 = getelementptr inbounds %struct.TrackedMethod, %struct.TrackedMethod* %6, i64 %idxprom1, !dbg !8039
  %7 = bitcast %struct.TrackedMethod* %arrayidx3 to i8*, !dbg !8036
  %8 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8041
  %nb_tracked_methods = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %8, i32 0, i32 44, !dbg !8042
  %9 = load i32, i32* %nb_tracked_methods, align 8, !dbg !8042
  %10 = load i32, i32* %index.addr, align 4, !dbg !8043
  %sub = sub nsw i32 %9, %10, !dbg !8044
  %sub4 = sub nsw i32 %sub, 1, !dbg !8045
  %conv = sext i32 %sub4 to i64, !dbg !8046
  %mul = mul i64 16, %conv, !dbg !8047
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %3, i8* %7, i64 %mul, i32 8, i1 false), !dbg !8036
  %11 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8048
  %nb_tracked_methods5 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %11, i32 0, i32 44, !dbg !8049
  %12 = load i32, i32* %nb_tracked_methods5, align 8, !dbg !8050
  %dec = add nsw i32 %12, -1, !dbg !8050
  store i32 %dec, i32* %nb_tracked_methods5, align 8, !dbg !8050
  ret void, !dbg !8051
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @do_adobe_auth(%struct.RTMPContext* %rt, i8* %user, i8* %salt, i8* %opaque, i8* %challenge) #0 !dbg !8052 {
entry:
  %retval = alloca i32, align 4
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %user.addr = alloca i8*, align 8
  %salt.addr = alloca i8*, align 8
  %opaque.addr = alloca i8*, align 8
  %challenge.addr = alloca i8*, align 8
  %hash = alloca [16 x i8], align 16
  %hashstr = alloca [25 x i8], align 16
  %challenge2 = alloca [10 x i8], align 1
  %md5 = alloca %struct.AVMD5*, align 8
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !8055, metadata !376), !dbg !8056
  store i8* %user, i8** %user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user.addr, metadata !8057, metadata !376), !dbg !8058
  store i8* %salt, i8** %salt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %salt.addr, metadata !8059, metadata !376), !dbg !8060
  store i8* %opaque, i8** %opaque.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opaque.addr, metadata !8061, metadata !376), !dbg !8062
  store i8* %challenge, i8** %challenge.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %challenge.addr, metadata !8063, metadata !376), !dbg !8064
  call void @llvm.dbg.declare(metadata [16 x i8]* %hash, metadata !8065, metadata !376), !dbg !8069
  call void @llvm.dbg.declare(metadata [25 x i8]* %hashstr, metadata !8070, metadata !376), !dbg !8074
  call void @llvm.dbg.declare(metadata [10 x i8]* %challenge2, metadata !8075, metadata !376), !dbg !8079
  call void @llvm.dbg.declare(metadata %struct.AVMD5** %md5, metadata !8080, metadata !376), !dbg !8084
  %call = call %struct.AVMD5* @av_md5_alloc(), !dbg !8085
  store %struct.AVMD5* %call, %struct.AVMD5** %md5, align 8, !dbg !8084
  %0 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8086
  %tobool = icmp ne %struct.AVMD5* %0, null, !dbg !8086
  br i1 %tobool, label %if.end, label %if.then, !dbg !8088

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8089
  br label %return, !dbg !8089

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %challenge2, i32 0, i32 0, !dbg !8090
  %call1 = call i32 @av_get_random_seed(), !dbg !8091
  %call2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i32 %call1) #10, !dbg !8092
  %1 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8094
  call void @av_md5_init(%struct.AVMD5* %1), !dbg !8095
  %2 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8096
  %3 = load i8*, i8** %user.addr, align 8, !dbg !8097
  %4 = load i8*, i8** %user.addr, align 8, !dbg !8098
  %call3 = call i64 @strlen(i8* %4) #9, !dbg !8099
  %conv = trunc i64 %call3 to i32, !dbg !8099
  call void @av_md5_update(%struct.AVMD5* %2, i8* %3, i32 %conv), !dbg !8100
  %5 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8101
  %6 = load i8*, i8** %salt.addr, align 8, !dbg !8102
  %7 = load i8*, i8** %salt.addr, align 8, !dbg !8103
  %call4 = call i64 @strlen(i8* %7) #9, !dbg !8104
  %conv5 = trunc i64 %call4 to i32, !dbg !8104
  call void @av_md5_update(%struct.AVMD5* %5, i8* %6, i32 %conv5), !dbg !8105
  %8 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8106
  %9 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8107
  %password = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %9, i32 0, i32 51, !dbg !8108
  %arraydecay6 = getelementptr inbounds [50 x i8], [50 x i8]* %password, i32 0, i32 0, !dbg !8107
  %10 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8109
  %password7 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %10, i32 0, i32 51, !dbg !8110
  %arraydecay8 = getelementptr inbounds [50 x i8], [50 x i8]* %password7, i32 0, i32 0, !dbg !8109
  %call9 = call i64 @strlen(i8* %arraydecay8) #9, !dbg !8111
  %conv10 = trunc i64 %call9 to i32, !dbg !8111
  call void @av_md5_update(%struct.AVMD5* %8, i8* %arraydecay6, i32 %conv10), !dbg !8112
  %11 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8113
  %arraydecay11 = getelementptr inbounds [16 x i8], [16 x i8]* %hash, i32 0, i32 0, !dbg !8114
  call void @av_md5_final(%struct.AVMD5* %11, i8* %arraydecay11), !dbg !8115
  %arraydecay12 = getelementptr inbounds [25 x i8], [25 x i8]* %hashstr, i32 0, i32 0, !dbg !8116
  %arraydecay13 = getelementptr inbounds [16 x i8], [16 x i8]* %hash, i32 0, i32 0, !dbg !8117
  %call14 = call i8* @av_base64_encode(i8* %arraydecay12, i32 25, i8* %arraydecay13, i32 16), !dbg !8118
  %12 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8119
  call void @av_md5_init(%struct.AVMD5* %12), !dbg !8120
  %13 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8121
  %arraydecay15 = getelementptr inbounds [25 x i8], [25 x i8]* %hashstr, i32 0, i32 0, !dbg !8122
  %arraydecay16 = getelementptr inbounds [25 x i8], [25 x i8]* %hashstr, i32 0, i32 0, !dbg !8123
  %call17 = call i64 @strlen(i8* %arraydecay16) #9, !dbg !8124
  %conv18 = trunc i64 %call17 to i32, !dbg !8124
  call void @av_md5_update(%struct.AVMD5* %13, i8* %arraydecay15, i32 %conv18), !dbg !8125
  %14 = load i8*, i8** %opaque.addr, align 8, !dbg !8126
  %tobool19 = icmp ne i8* %14, null, !dbg !8126
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !8128

if.then20:                                        ; preds = %if.end
  %15 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8129
  %16 = load i8*, i8** %opaque.addr, align 8, !dbg !8130
  %17 = load i8*, i8** %opaque.addr, align 8, !dbg !8131
  %call21 = call i64 @strlen(i8* %17) #9, !dbg !8132
  %conv22 = trunc i64 %call21 to i32, !dbg !8132
  call void @av_md5_update(%struct.AVMD5* %15, i8* %16, i32 %conv22), !dbg !8133
  br label %if.end28, !dbg !8135

if.else:                                          ; preds = %if.end
  %18 = load i8*, i8** %challenge.addr, align 8, !dbg !8136
  %tobool23 = icmp ne i8* %18, null, !dbg !8136
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !8138

if.then24:                                        ; preds = %if.else
  %19 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8139
  %20 = load i8*, i8** %challenge.addr, align 8, !dbg !8140
  %21 = load i8*, i8** %challenge.addr, align 8, !dbg !8141
  %call25 = call i64 @strlen(i8* %21) #9, !dbg !8142
  %conv26 = trunc i64 %call25 to i32, !dbg !8142
  call void @av_md5_update(%struct.AVMD5* %19, i8* %20, i32 %conv26), !dbg !8143
  br label %if.end27, !dbg !8145

if.end27:                                         ; preds = %if.then24, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then20
  %22 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8146
  %arraydecay29 = getelementptr inbounds [10 x i8], [10 x i8]* %challenge2, i32 0, i32 0, !dbg !8147
  %arraydecay30 = getelementptr inbounds [10 x i8], [10 x i8]* %challenge2, i32 0, i32 0, !dbg !8148
  %call31 = call i64 @strlen(i8* %arraydecay30) #9, !dbg !8149
  %conv32 = trunc i64 %call31 to i32, !dbg !8149
  call void @av_md5_update(%struct.AVMD5* %22, i8* %arraydecay29, i32 %conv32), !dbg !8150
  %23 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8151
  %arraydecay33 = getelementptr inbounds [16 x i8], [16 x i8]* %hash, i32 0, i32 0, !dbg !8152
  call void @av_md5_final(%struct.AVMD5* %23, i8* %arraydecay33), !dbg !8153
  %arraydecay34 = getelementptr inbounds [25 x i8], [25 x i8]* %hashstr, i32 0, i32 0, !dbg !8154
  %arraydecay35 = getelementptr inbounds [16 x i8], [16 x i8]* %hash, i32 0, i32 0, !dbg !8155
  %call36 = call i8* @av_base64_encode(i8* %arraydecay34, i32 25, i8* %arraydecay35, i32 16), !dbg !8156
  %24 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8157
  %auth_params = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %24, i32 0, i32 52, !dbg !8158
  %arraydecay37 = getelementptr inbounds [500 x i8], [500 x i8]* %auth_params, i32 0, i32 0, !dbg !8157
  %25 = load i8*, i8** %user.addr, align 8, !dbg !8159
  %arraydecay38 = getelementptr inbounds [10 x i8], [10 x i8]* %challenge2, i32 0, i32 0, !dbg !8160
  %arraydecay39 = getelementptr inbounds [25 x i8], [25 x i8]* %hashstr, i32 0, i32 0, !dbg !8161
  %call40 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay37, i64 500, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.140, i32 0, i32 0), i8* %25, i8* %arraydecay38, i8* %arraydecay39) #10, !dbg !8162
  %26 = load i8*, i8** %opaque.addr, align 8, !dbg !8163
  %tobool41 = icmp ne i8* %26, null, !dbg !8163
  br i1 %tobool41, label %if.then42, label %if.end46, !dbg !8165

if.then42:                                        ; preds = %if.end28
  %27 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8166
  %auth_params43 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %27, i32 0, i32 52, !dbg !8167
  %arraydecay44 = getelementptr inbounds [500 x i8], [500 x i8]* %auth_params43, i32 0, i32 0, !dbg !8166
  %28 = load i8*, i8** %opaque.addr, align 8, !dbg !8168
  %call45 = call i64 (i8*, i64, i8*, ...) @av_strlcatf(i8* %arraydecay44, i64 500, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.143, i32 0, i32 0), i8* %28), !dbg !8169
  br label %if.end46, !dbg !8169

if.end46:                                         ; preds = %if.then42, %if.end28
  %29 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8170
  %30 = bitcast %struct.AVMD5* %29 to i8*, !dbg !8170
  call void @av_free(i8* %30), !dbg !8171
  store i32 0, i32* %retval, align 4, !dbg !8172
  br label %return, !dbg !8172

return:                                           ; preds = %if.end46, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !8173
  ret i32 %31, !dbg !8173
}

; Function Attrs: nounwind uwtable
define internal i32 @do_llnw_auth(%struct.RTMPContext* %rt, i8* %user, i8* %nonce) #0 !dbg !8174 {
entry:
  %retval = alloca i32, align 4
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %user.addr = alloca i8*, align 8
  %nonce.addr = alloca i8*, align 8
  %hash = alloca [16 x i8], align 16
  %hashstr1 = alloca [33 x i8], align 16
  %hashstr2 = alloca [33 x i8], align 16
  %realm = alloca i8*, align 8
  %method = alloca i8*, align 8
  %qop = alloca i8*, align 8
  %nc = alloca i8*, align 8
  %cnonce = alloca [10 x i8], align 1
  %md5 = alloca %struct.AVMD5*, align 8
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !8177, metadata !376), !dbg !8178
  store i8* %user, i8** %user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user.addr, metadata !8179, metadata !376), !dbg !8180
  store i8* %nonce, i8** %nonce.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nonce.addr, metadata !8181, metadata !376), !dbg !8182
  call void @llvm.dbg.declare(metadata [16 x i8]* %hash, metadata !8183, metadata !376), !dbg !8184
  call void @llvm.dbg.declare(metadata [33 x i8]* %hashstr1, metadata !8185, metadata !376), !dbg !8189
  call void @llvm.dbg.declare(metadata [33 x i8]* %hashstr2, metadata !8190, metadata !376), !dbg !8191
  call void @llvm.dbg.declare(metadata i8** %realm, metadata !8192, metadata !376), !dbg !8193
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.144, i32 0, i32 0), i8** %realm, align 8, !dbg !8193
  call void @llvm.dbg.declare(metadata i8** %method, metadata !8194, metadata !376), !dbg !8195
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0), i8** %method, align 8, !dbg !8195
  call void @llvm.dbg.declare(metadata i8** %qop, metadata !8196, metadata !376), !dbg !8197
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.145, i32 0, i32 0), i8** %qop, align 8, !dbg !8197
  call void @llvm.dbg.declare(metadata i8** %nc, metadata !8198, metadata !376), !dbg !8199
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.146, i32 0, i32 0), i8** %nc, align 8, !dbg !8199
  call void @llvm.dbg.declare(metadata [10 x i8]* %cnonce, metadata !8200, metadata !376), !dbg !8201
  call void @llvm.dbg.declare(metadata %struct.AVMD5** %md5, metadata !8202, metadata !376), !dbg !8203
  %call = call %struct.AVMD5* @av_md5_alloc(), !dbg !8204
  store %struct.AVMD5* %call, %struct.AVMD5** %md5, align 8, !dbg !8203
  %0 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8205
  %tobool = icmp ne %struct.AVMD5* %0, null, !dbg !8205
  br i1 %tobool, label %if.end, label %if.then, !dbg !8207

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8208
  br label %return, !dbg !8208

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %cnonce, i32 0, i32 0, !dbg !8209
  %call1 = call i32 @av_get_random_seed(), !dbg !8210
  %call2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i32 %call1) #10, !dbg !8211
  %1 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8213
  call void @av_md5_init(%struct.AVMD5* %1), !dbg !8214
  %2 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8215
  %3 = load i8*, i8** %user.addr, align 8, !dbg !8216
  %4 = load i8*, i8** %user.addr, align 8, !dbg !8217
  %call3 = call i64 @strlen(i8* %4) #9, !dbg !8218
  %conv = trunc i64 %call3 to i32, !dbg !8218
  call void @av_md5_update(%struct.AVMD5* %2, i8* %3, i32 %conv), !dbg !8219
  %5 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8220
  call void @av_md5_update(%struct.AVMD5* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.147, i32 0, i32 0), i32 1), !dbg !8221
  %6 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8222
  %7 = load i8*, i8** %realm, align 8, !dbg !8223
  %8 = load i8*, i8** %realm, align 8, !dbg !8224
  %call4 = call i64 @strlen(i8* %8) #9, !dbg !8225
  %conv5 = trunc i64 %call4 to i32, !dbg !8225
  call void @av_md5_update(%struct.AVMD5* %6, i8* %7, i32 %conv5), !dbg !8226
  %9 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8227
  call void @av_md5_update(%struct.AVMD5* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.147, i32 0, i32 0), i32 1), !dbg !8228
  %10 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8229
  %11 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8230
  %password = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %11, i32 0, i32 51, !dbg !8231
  %arraydecay6 = getelementptr inbounds [50 x i8], [50 x i8]* %password, i32 0, i32 0, !dbg !8230
  %12 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8232
  %password7 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %12, i32 0, i32 51, !dbg !8233
  %arraydecay8 = getelementptr inbounds [50 x i8], [50 x i8]* %password7, i32 0, i32 0, !dbg !8232
  %call9 = call i64 @strlen(i8* %arraydecay8) #9, !dbg !8234
  %conv10 = trunc i64 %call9 to i32, !dbg !8234
  call void @av_md5_update(%struct.AVMD5* %10, i8* %arraydecay6, i32 %conv10), !dbg !8235
  %13 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8236
  %arraydecay11 = getelementptr inbounds [16 x i8], [16 x i8]* %hash, i32 0, i32 0, !dbg !8237
  call void @av_md5_final(%struct.AVMD5* %13, i8* %arraydecay11), !dbg !8238
  %arraydecay12 = getelementptr inbounds [33 x i8], [33 x i8]* %hashstr1, i32 0, i32 0, !dbg !8239
  %arraydecay13 = getelementptr inbounds [16 x i8], [16 x i8]* %hash, i32 0, i32 0, !dbg !8240
  %call14 = call i8* @ff_data_to_hex(i8* %arraydecay12, i8* %arraydecay13, i32 16, i32 1), !dbg !8241
  %arrayidx = getelementptr inbounds [33 x i8], [33 x i8]* %hashstr1, i64 0, i64 32, !dbg !8242
  store i8 0, i8* %arrayidx, align 16, !dbg !8243
  %14 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8244
  call void @av_md5_init(%struct.AVMD5* %14), !dbg !8245
  %15 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8246
  %16 = load i8*, i8** %method, align 8, !dbg !8247
  %17 = load i8*, i8** %method, align 8, !dbg !8248
  %call15 = call i64 @strlen(i8* %17) #9, !dbg !8249
  %conv16 = trunc i64 %call15 to i32, !dbg !8249
  call void @av_md5_update(%struct.AVMD5* %15, i8* %16, i32 %conv16), !dbg !8250
  %18 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8251
  call void @av_md5_update(%struct.AVMD5* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.148, i32 0, i32 0), i32 2), !dbg !8252
  %19 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8253
  %20 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8254
  %app = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %20, i32 0, i32 9, !dbg !8255
  %21 = load i8*, i8** %app, align 8, !dbg !8255
  %22 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8256
  %app17 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %22, i32 0, i32 9, !dbg !8257
  %23 = load i8*, i8** %app17, align 8, !dbg !8257
  %call18 = call i64 @strlen(i8* %23) #9, !dbg !8258
  %conv19 = trunc i64 %call18 to i32, !dbg !8258
  call void @av_md5_update(%struct.AVMD5* %19, i8* %21, i32 %conv19), !dbg !8259
  %24 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8260
  %app20 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %24, i32 0, i32 9, !dbg !8262
  %25 = load i8*, i8** %app20, align 8, !dbg !8262
  %call21 = call i8* @strchr(i8* %25, i32 47) #9, !dbg !8263
  %tobool22 = icmp ne i8* %call21, null, !dbg !8263
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !8264

if.then23:                                        ; preds = %if.end
  %26 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8265
  call void @av_md5_update(%struct.AVMD5* %26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.149, i32 0, i32 0), i32 10), !dbg !8266
  br label %if.end24, !dbg !8266

if.end24:                                         ; preds = %if.then23, %if.end
  %27 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8267
  %arraydecay25 = getelementptr inbounds [16 x i8], [16 x i8]* %hash, i32 0, i32 0, !dbg !8268
  call void @av_md5_final(%struct.AVMD5* %27, i8* %arraydecay25), !dbg !8269
  %arraydecay26 = getelementptr inbounds [33 x i8], [33 x i8]* %hashstr2, i32 0, i32 0, !dbg !8270
  %arraydecay27 = getelementptr inbounds [16 x i8], [16 x i8]* %hash, i32 0, i32 0, !dbg !8271
  %call28 = call i8* @ff_data_to_hex(i8* %arraydecay26, i8* %arraydecay27, i32 16, i32 1), !dbg !8272
  %arrayidx29 = getelementptr inbounds [33 x i8], [33 x i8]* %hashstr2, i64 0, i64 32, !dbg !8273
  store i8 0, i8* %arrayidx29, align 16, !dbg !8274
  %28 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8275
  call void @av_md5_init(%struct.AVMD5* %28), !dbg !8276
  %29 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8277
  %arraydecay30 = getelementptr inbounds [33 x i8], [33 x i8]* %hashstr1, i32 0, i32 0, !dbg !8278
  %arraydecay31 = getelementptr inbounds [33 x i8], [33 x i8]* %hashstr1, i32 0, i32 0, !dbg !8279
  %call32 = call i64 @strlen(i8* %arraydecay31) #9, !dbg !8280
  %conv33 = trunc i64 %call32 to i32, !dbg !8280
  call void @av_md5_update(%struct.AVMD5* %29, i8* %arraydecay30, i32 %conv33), !dbg !8281
  %30 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8282
  call void @av_md5_update(%struct.AVMD5* %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.147, i32 0, i32 0), i32 1), !dbg !8283
  %31 = load i8*, i8** %nonce.addr, align 8, !dbg !8284
  %tobool34 = icmp ne i8* %31, null, !dbg !8284
  br i1 %tobool34, label %if.then35, label %if.end38, !dbg !8286

if.then35:                                        ; preds = %if.end24
  %32 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8287
  %33 = load i8*, i8** %nonce.addr, align 8, !dbg !8288
  %34 = load i8*, i8** %nonce.addr, align 8, !dbg !8289
  %call36 = call i64 @strlen(i8* %34) #9, !dbg !8290
  %conv37 = trunc i64 %call36 to i32, !dbg !8290
  call void @av_md5_update(%struct.AVMD5* %32, i8* %33, i32 %conv37), !dbg !8291
  br label %if.end38, !dbg !8293

if.end38:                                         ; preds = %if.then35, %if.end24
  %35 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8294
  call void @av_md5_update(%struct.AVMD5* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.147, i32 0, i32 0), i32 1), !dbg !8295
  %36 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8296
  %37 = load i8*, i8** %nc, align 8, !dbg !8297
  %38 = load i8*, i8** %nc, align 8, !dbg !8298
  %call39 = call i64 @strlen(i8* %38) #9, !dbg !8299
  %conv40 = trunc i64 %call39 to i32, !dbg !8299
  call void @av_md5_update(%struct.AVMD5* %36, i8* %37, i32 %conv40), !dbg !8300
  %39 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8301
  call void @av_md5_update(%struct.AVMD5* %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.147, i32 0, i32 0), i32 1), !dbg !8302
  %40 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8303
  %arraydecay41 = getelementptr inbounds [10 x i8], [10 x i8]* %cnonce, i32 0, i32 0, !dbg !8304
  %arraydecay42 = getelementptr inbounds [10 x i8], [10 x i8]* %cnonce, i32 0, i32 0, !dbg !8305
  %call43 = call i64 @strlen(i8* %arraydecay42) #9, !dbg !8306
  %conv44 = trunc i64 %call43 to i32, !dbg !8306
  call void @av_md5_update(%struct.AVMD5* %40, i8* %arraydecay41, i32 %conv44), !dbg !8307
  %41 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8308
  call void @av_md5_update(%struct.AVMD5* %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.147, i32 0, i32 0), i32 1), !dbg !8309
  %42 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8310
  %43 = load i8*, i8** %qop, align 8, !dbg !8311
  %44 = load i8*, i8** %qop, align 8, !dbg !8312
  %call45 = call i64 @strlen(i8* %44) #9, !dbg !8313
  %conv46 = trunc i64 %call45 to i32, !dbg !8313
  call void @av_md5_update(%struct.AVMD5* %42, i8* %43, i32 %conv46), !dbg !8314
  %45 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8315
  call void @av_md5_update(%struct.AVMD5* %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.147, i32 0, i32 0), i32 1), !dbg !8316
  %46 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8317
  %arraydecay47 = getelementptr inbounds [33 x i8], [33 x i8]* %hashstr2, i32 0, i32 0, !dbg !8318
  %arraydecay48 = getelementptr inbounds [33 x i8], [33 x i8]* %hashstr2, i32 0, i32 0, !dbg !8319
  %call49 = call i64 @strlen(i8* %arraydecay48) #9, !dbg !8320
  %conv50 = trunc i64 %call49 to i32, !dbg !8320
  call void @av_md5_update(%struct.AVMD5* %46, i8* %arraydecay47, i32 %conv50), !dbg !8321
  %47 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8322
  %arraydecay51 = getelementptr inbounds [16 x i8], [16 x i8]* %hash, i32 0, i32 0, !dbg !8323
  call void @av_md5_final(%struct.AVMD5* %47, i8* %arraydecay51), !dbg !8324
  %arraydecay52 = getelementptr inbounds [33 x i8], [33 x i8]* %hashstr1, i32 0, i32 0, !dbg !8325
  %arraydecay53 = getelementptr inbounds [16 x i8], [16 x i8]* %hash, i32 0, i32 0, !dbg !8326
  %call54 = call i8* @ff_data_to_hex(i8* %arraydecay52, i8* %arraydecay53, i32 16, i32 1), !dbg !8327
  %48 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8328
  %auth_params = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %48, i32 0, i32 52, !dbg !8329
  %arraydecay55 = getelementptr inbounds [500 x i8], [500 x i8]* %auth_params, i32 0, i32 0, !dbg !8328
  %49 = load i8*, i8** %user.addr, align 8, !dbg !8330
  %50 = load i8*, i8** %nonce.addr, align 8, !dbg !8331
  %arraydecay56 = getelementptr inbounds [10 x i8], [10 x i8]* %cnonce, i32 0, i32 0, !dbg !8332
  %51 = load i8*, i8** %nc, align 8, !dbg !8333
  %arraydecay57 = getelementptr inbounds [33 x i8], [33 x i8]* %hashstr1, i32 0, i32 0, !dbg !8334
  %call58 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay55, i64 500, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i32 0, i32 0), i8* %49, i8* %50, i8* %arraydecay56, i8* %51, i8* %arraydecay57) #10, !dbg !8335
  %52 = load %struct.AVMD5*, %struct.AVMD5** %md5, align 8, !dbg !8336
  %53 = bitcast %struct.AVMD5* %52 to i8*, !dbg !8336
  call void @av_free(i8* %53), !dbg !8337
  store i32 0, i32* %retval, align 4, !dbg !8338
  br label %return, !dbg !8338

return:                                           ; preds = %if.end38, %if.then
  %54 = load i32, i32* %retval, align 4, !dbg !8339
  ret i32 %54, !dbg !8339
}

declare %struct.AVMD5* @av_md5_alloc() #2

declare void @av_md5_init(%struct.AVMD5*) #2

declare void @av_md5_update(%struct.AVMD5*, i8*, i32) #2

declare void @av_md5_final(%struct.AVMD5*, i8*) #2

declare i8* @av_base64_encode(i8*, i32, i8*, i32) #2

declare i64 @av_strlcatf(i8*, i64, i8*, ...) #2

declare i8* @ff_data_to_hex(i8*, i8*, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @gen_release_stream(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !8340 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !8341, metadata !376), !dbg !8342
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !8343, metadata !376), !dbg !8344
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !8345, metadata !376), !dbg !8346
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8347, metadata !376), !dbg !8348
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8349, metadata !376), !dbg !8350
  %0 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8351
  %playpath = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %0, i32 0, i32 7, !dbg !8353
  %1 = load i8*, i8** %playpath, align 8, !dbg !8353
  %call = call i64 @strlen(i8* %1) #9, !dbg !8354
  %add = add i64 29, %call, !dbg !8355
  %conv = trunc i64 %add to i32, !dbg !8356
  %call1 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 3, i32 20, i32 0, i32 %conv), !dbg !8357
  store i32 %call1, i32* %ret, align 4, !dbg !8358
  %cmp = icmp slt i32 %call1, 0, !dbg !8359
  br i1 %cmp, label %if.then, label %if.end, !dbg !8360

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !8361
  store i32 %2, i32* %retval, align 4, !dbg !8362
  br label %return, !dbg !8362

if.end:                                           ; preds = %entry
  %3 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !8363
  %4 = bitcast %struct.URLContext* %3 to i8*, !dbg !8363
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 48, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.154, i32 0, i32 0)), !dbg !8364
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !8365
  %5 = load i8*, i8** %data, align 8, !dbg !8365
  store i8* %5, i8** %p, align 8, !dbg !8366
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.110, i32 0, i32 0)), !dbg !8367
  %6 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8368
  %nb_invokes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %6, i32 0, i32 28, !dbg !8369
  %7 = load i32, i32* %nb_invokes, align 4, !dbg !8370
  %inc = add nsw i32 %7, 1, !dbg !8370
  store i32 %inc, i32* %nb_invokes, align 4, !dbg !8370
  %conv3 = sitofp i32 %inc to double, !dbg !8370
  call void @ff_amf_write_number(i8** %p, double %conv3), !dbg !8371
  call void @ff_amf_write_null(i8** %p), !dbg !8372
  %8 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8373
  %playpath4 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %8, i32 0, i32 7, !dbg !8374
  %9 = load i8*, i8** %playpath4, align 8, !dbg !8374
  call void @ff_amf_write_string(i8** %p, i8* %9), !dbg !8375
  %10 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8376
  %call5 = call i32 @rtmp_send_packet(%struct.RTMPContext* %10, %struct.RTMPPacket* %pkt, i32 1), !dbg !8377
  store i32 %call5, i32* %retval, align 4, !dbg !8378
  br label %return, !dbg !8378

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !8379
  ret i32 %11, !dbg !8379
}

; Function Attrs: nounwind uwtable
define internal i32 @gen_fcpublish_stream(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !8380 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !8381, metadata !376), !dbg !8382
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !8383, metadata !376), !dbg !8384
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !8385, metadata !376), !dbg !8386
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8387, metadata !376), !dbg !8388
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8389, metadata !376), !dbg !8390
  %0 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8391
  %playpath = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %0, i32 0, i32 7, !dbg !8393
  %1 = load i8*, i8** %playpath, align 8, !dbg !8393
  %call = call i64 @strlen(i8* %1) #9, !dbg !8394
  %add = add i64 25, %call, !dbg !8395
  %conv = trunc i64 %add to i32, !dbg !8396
  %call1 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 3, i32 20, i32 0, i32 %conv), !dbg !8397
  store i32 %call1, i32* %ret, align 4, !dbg !8398
  %cmp = icmp slt i32 %call1, 0, !dbg !8399
  br i1 %cmp, label %if.then, label %if.end, !dbg !8400

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !8401
  store i32 %2, i32* %retval, align 4, !dbg !8402
  br label %return, !dbg !8402

if.end:                                           ; preds = %entry
  %3 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !8403
  %4 = bitcast %struct.URLContext* %3 to i8*, !dbg !8403
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 48, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.155, i32 0, i32 0)), !dbg !8404
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !8405
  %5 = load i8*, i8** %data, align 8, !dbg !8405
  store i8* %5, i8** %p, align 8, !dbg !8406
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i32 0, i32 0)), !dbg !8407
  %6 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8408
  %nb_invokes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %6, i32 0, i32 28, !dbg !8409
  %7 = load i32, i32* %nb_invokes, align 4, !dbg !8410
  %inc = add nsw i32 %7, 1, !dbg !8410
  store i32 %inc, i32* %nb_invokes, align 4, !dbg !8410
  %conv3 = sitofp i32 %inc to double, !dbg !8410
  call void @ff_amf_write_number(i8** %p, double %conv3), !dbg !8411
  call void @ff_amf_write_null(i8** %p), !dbg !8412
  %8 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8413
  %playpath4 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %8, i32 0, i32 7, !dbg !8414
  %9 = load i8*, i8** %playpath4, align 8, !dbg !8414
  call void @ff_amf_write_string(i8** %p, i8* %9), !dbg !8415
  %10 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8416
  %call5 = call i32 @rtmp_send_packet(%struct.RTMPContext* %10, %struct.RTMPPacket* %pkt, i32 1), !dbg !8417
  store i32 %call5, i32* %retval, align 4, !dbg !8418
  br label %return, !dbg !8418

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !8419
  ret i32 %11, !dbg !8419
}

; Function Attrs: nounwind uwtable
define internal i32 @gen_window_ack_size(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !8420 {
entry:
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !2616, metadata !376), !dbg !8421
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !2960, metadata !376), !dbg !8424
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !2962, metadata !376), !dbg !8425
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !8426, metadata !376), !dbg !8427
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !8428, metadata !376), !dbg !8429
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !8430, metadata !376), !dbg !8431
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8432, metadata !376), !dbg !8433
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8434, metadata !376), !dbg !8435
  %call = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 2, i32 5, i32 0, i32 4), !dbg !8436
  store i32 %call, i32* %ret, align 4, !dbg !8438
  %cmp = icmp slt i32 %call, 0, !dbg !8439
  br i1 %cmp, label %if.then, label %if.end, !dbg !8440

if.then:                                          ; preds = %entry
  %0 = load i32, i32* %ret, align 4, !dbg !8441
  store i32 %0, i32* %retval, align 4, !dbg !8442
  br label %return, !dbg !8442

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !8443
  %1 = load i8*, i8** %data, align 8, !dbg !8443
  store i8* %1, i8** %p, align 8, !dbg !8444
  %2 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8445
  %max_sent_unacked = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %2, i32 0, i32 39, !dbg !8446
  %3 = load i32, i32* %max_sent_unacked, align 8, !dbg !8446
  store i8** %p, i8*** %b.addr.i, align 8, !dbg !8447
  store i32 %3, i32* %value.addr.i, align 4, !dbg !8447
  %4 = load i32, i32* %value.addr.i, align 4, !dbg !8448
  store i32 %4, i32* %x.addr.i.i, align 4, !dbg !8449
  %5 = load i32, i32* %x.addr.i.i, align 4, !dbg !8450
  %shl.i.i = shl i32 %5, 8, !dbg !8451
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !8452
  %6 = load i32, i32* %x.addr.i.i, align 4, !dbg !8453
  %shr.i.i = lshr i32 %6, 8, !dbg !8454
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !8455
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !8456
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !8457
  %7 = load i32, i32* %x.addr.i.i, align 4, !dbg !8458
  %shr3.i.i = lshr i32 %7, 16, !dbg !8459
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !8460
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !8461
  %8 = load i32, i32* %x.addr.i.i, align 4, !dbg !8462
  %shr6.i.i = lshr i32 %8, 16, !dbg !8463
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !8464
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !8465
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !8466
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !8467
  %9 = load i8**, i8*** %b.addr.i, align 8, !dbg !8468
  %10 = load i8*, i8** %9, align 8, !dbg !8469
  %11 = bitcast i8* %10 to %union.unaligned_32*, !dbg !8470
  %l.i = bitcast %union.unaligned_32* %11 to i32*, !dbg !8470
  store i32 %or10.i.i, i32* %l.i, align 1, !dbg !8471
  %12 = load i8**, i8*** %b.addr.i, align 8, !dbg !8472
  %13 = load i8*, i8** %12, align 8, !dbg !8473
  %add.ptr.i = getelementptr inbounds i8, i8* %13, i64 4, !dbg !8473
  store i8* %add.ptr.i, i8** %12, align 8, !dbg !8473
  %14 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8474
  %call1 = call i32 @rtmp_send_packet(%struct.RTMPContext* %14, %struct.RTMPPacket* %pkt, i32 0), !dbg !8475
  store i32 %call1, i32* %retval, align 4, !dbg !8476
  br label %return, !dbg !8476

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !8477
  ret i32 %15, !dbg !8477
}

; Function Attrs: nounwind uwtable
define internal i32 @gen_create_stream(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !8478 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !8479, metadata !376), !dbg !8480
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !8481, metadata !376), !dbg !8482
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !8483, metadata !376), !dbg !8484
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8485, metadata !376), !dbg !8486
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8487, metadata !376), !dbg !8488
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !8489
  %1 = bitcast %struct.URLContext* %0 to i8*, !dbg !8489
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.156, i32 0, i32 0)), !dbg !8490
  %call = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 3, i32 20, i32 0, i32 25), !dbg !8491
  store i32 %call, i32* %ret, align 4, !dbg !8493
  %cmp = icmp slt i32 %call, 0, !dbg !8494
  br i1 %cmp, label %if.then, label %if.end, !dbg !8495

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !8496
  store i32 %2, i32* %retval, align 4, !dbg !8497
  br label %return, !dbg !8497

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !8498
  %3 = load i8*, i8** %data, align 8, !dbg !8498
  store i8* %3, i8** %p, align 8, !dbg !8499
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.115, i32 0, i32 0)), !dbg !8500
  %4 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8501
  %nb_invokes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %4, i32 0, i32 28, !dbg !8502
  %5 = load i32, i32* %nb_invokes, align 4, !dbg !8503
  %inc = add nsw i32 %5, 1, !dbg !8503
  store i32 %inc, i32* %nb_invokes, align 4, !dbg !8503
  %conv = sitofp i32 %inc to double, !dbg !8503
  call void @ff_amf_write_number(i8** %p, double %conv), !dbg !8504
  call void @ff_amf_write_null(i8** %p), !dbg !8505
  %6 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8506
  %call1 = call i32 @rtmp_send_packet(%struct.RTMPContext* %6, %struct.RTMPPacket* %pkt, i32 1), !dbg !8507
  store i32 %call1, i32* %retval, align 4, !dbg !8508
  br label %return, !dbg !8508

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !8509
  ret i32 %7, !dbg !8509
}

; Function Attrs: nounwind uwtable
define internal i32 @gen_fcsubscribe_stream(%struct.URLContext* %s, %struct.RTMPContext* %rt, i8* %subscribe) #0 !dbg !8510 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %subscribe.addr = alloca i8*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !8513, metadata !376), !dbg !8514
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !8515, metadata !376), !dbg !8516
  store i8* %subscribe, i8** %subscribe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %subscribe.addr, metadata !8517, metadata !376), !dbg !8518
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !8519, metadata !376), !dbg !8520
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8521, metadata !376), !dbg !8522
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8523, metadata !376), !dbg !8524
  %0 = load i8*, i8** %subscribe.addr, align 8, !dbg !8525
  %call = call i64 @strlen(i8* %0) #9, !dbg !8527
  %add = add i64 27, %call, !dbg !8528
  %conv = trunc i64 %add to i32, !dbg !8529
  %call1 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 3, i32 20, i32 0, i32 %conv), !dbg !8530
  store i32 %call1, i32* %ret, align 4, !dbg !8531
  %cmp = icmp slt i32 %call1, 0, !dbg !8532
  br i1 %cmp, label %if.then, label %if.end, !dbg !8533

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ret, align 4, !dbg !8534
  store i32 %1, i32* %retval, align 4, !dbg !8535
  br label %return, !dbg !8535

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !8536
  %2 = load i8*, i8** %data, align 8, !dbg !8536
  store i8* %2, i8** %p, align 8, !dbg !8537
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.116, i32 0, i32 0)), !dbg !8538
  %3 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8539
  %nb_invokes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %3, i32 0, i32 28, !dbg !8540
  %4 = load i32, i32* %nb_invokes, align 4, !dbg !8541
  %inc = add nsw i32 %4, 1, !dbg !8541
  store i32 %inc, i32* %nb_invokes, align 4, !dbg !8541
  %conv3 = sitofp i32 %inc to double, !dbg !8541
  call void @ff_amf_write_number(i8** %p, double %conv3), !dbg !8542
  call void @ff_amf_write_null(i8** %p), !dbg !8543
  %5 = load i8*, i8** %subscribe.addr, align 8, !dbg !8544
  call void @ff_amf_write_string(i8** %p, i8* %5), !dbg !8545
  %6 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8546
  %call4 = call i32 @rtmp_send_packet(%struct.RTMPContext* %6, %struct.RTMPPacket* %pkt, i32 1), !dbg !8547
  store i32 %call4, i32* %retval, align 4, !dbg !8548
  br label %return, !dbg !8548

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !8549
  ret i32 %7, !dbg !8549
}

; Function Attrs: nounwind uwtable
define internal i32 @read_number_result(%struct.RTMPPacket* %pkt, double* %number) #0 !dbg !8550 {
entry:
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !1440, metadata !376), !dbg !8554
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !1457, metadata !376), !dbg !8556
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !1459, metadata !376), !dbg !8557
  %retval = alloca i32, align 4
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %number.addr = alloca double*, align 8
  %strbuffer = alloca [8 x i8], align 1
  %stringlen = alloca i32, align 4
  %numbuffer = alloca double, align 8
  %gbc = alloca %struct.GetByteContext, align 8
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !8558, metadata !376), !dbg !8559
  store double* %number, double** %number.addr, align 8
  call void @llvm.dbg.declare(metadata double** %number.addr, metadata !8560, metadata !376), !dbg !8561
  call void @llvm.dbg.declare(metadata [8 x i8]* %strbuffer, metadata !8562, metadata !376), !dbg !8564
  call void @llvm.dbg.declare(metadata i32* %stringlen, metadata !8565, metadata !376), !dbg !8566
  call void @llvm.dbg.declare(metadata double* %numbuffer, metadata !8567, metadata !376), !dbg !8568
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gbc, metadata !8569, metadata !376), !dbg !8570
  %0 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !8571
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %0, i32 0, i32 5, !dbg !8572
  %1 = load i8*, i8** %data, align 8, !dbg !8572
  %2 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !8573
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %2, i32 0, i32 6, !dbg !8574
  %3 = load i32, i32* %size, align 8, !dbg !8574
  store %struct.GetByteContext* %gbc, %struct.GetByteContext** %g.addr.i, align 8, !dbg !8575
  store i8* %1, i8** %buf.addr.i, align 8, !dbg !8575
  store i32 %3, i32* %buf_size.addr.i, align 4, !dbg !8575
  %4 = load i32, i32* %buf_size.addr.i, align 4, !dbg !8576
  %cmp.i = icmp sge i32 %4, 0, !dbg !8577
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !8578

if.then.i:                                        ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.72, i32 0, i32 0), i32 137) #10, !dbg !8579
  call void @abort() #11, !dbg !8580
  unreachable, !dbg !8581

bytestream2_init.exit:                            ; preds = %entry
  %5 = load i8*, i8** %buf.addr.i, align 8, !dbg !8582
  %6 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !8583
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %6, i32 0, i32 0, !dbg !8584
  store i8* %5, i8** %buffer.i, align 8, !dbg !8585
  %7 = load i8*, i8** %buf.addr.i, align 8, !dbg !8586
  %8 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !8587
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %8, i32 0, i32 2, !dbg !8588
  store i8* %7, i8** %buffer_start.i, align 8, !dbg !8589
  %9 = load i8*, i8** %buf.addr.i, align 8, !dbg !8590
  %10 = load i32, i32* %buf_size.addr.i, align 4, !dbg !8591
  %idx.ext.i = sext i32 %10 to i64, !dbg !8592
  %add.ptr.i = getelementptr inbounds i8, i8* %9, i64 %idx.ext.i, !dbg !8592
  %11 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !8593
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %11, i32 0, i32 1, !dbg !8594
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !8595
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %strbuffer, i32 0, i32 0, !dbg !8596
  %call = call i32 @ff_amf_read_string(%struct.GetByteContext* %gbc, i8* %arraydecay, i32 8, i32* %stringlen), !dbg !8598
  %tobool = icmp ne i32 %call, 0, !dbg !8598
  br i1 %tobool, label %if.then, label %if.end, !dbg !8599

if.then:                                          ; preds = %bytestream2_init.exit
  store i32 -1094995529, i32* %retval, align 4, !dbg !8600
  br label %return, !dbg !8600

if.end:                                           ; preds = %bytestream2_init.exit
  %arraydecay1 = getelementptr inbounds [8 x i8], [8 x i8]* %strbuffer, i32 0, i32 0, !dbg !8601
  %call2 = call i32 @strcmp(i8* %arraydecay1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.81, i32 0, i32 0)) #9, !dbg !8603
  %tobool3 = icmp ne i32 %call2, 0, !dbg !8603
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8604

if.then4:                                         ; preds = %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !8605
  br label %return, !dbg !8605

if.end5:                                          ; preds = %if.end
  %call6 = call i32 @ff_amf_read_number(%struct.GetByteContext* %gbc, double* %numbuffer), !dbg !8606
  %tobool7 = icmp ne i32 %call6, 0, !dbg !8606
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !8608

if.then8:                                         ; preds = %if.end5
  store i32 -1094995529, i32* %retval, align 4, !dbg !8609
  br label %return, !dbg !8609

if.end9:                                          ; preds = %if.end5
  %call10 = call i32 @ff_amf_read_null(%struct.GetByteContext* %gbc), !dbg !8610
  %tobool11 = icmp ne i32 %call10, 0, !dbg !8610
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !8612

if.then12:                                        ; preds = %if.end9
  store i32 -1094995529, i32* %retval, align 4, !dbg !8613
  br label %return, !dbg !8613

if.end13:                                         ; preds = %if.end9
  %call14 = call i32 @ff_amf_read_number(%struct.GetByteContext* %gbc, double* %numbuffer), !dbg !8614
  %tobool15 = icmp ne i32 %call14, 0, !dbg !8614
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !8616

if.then16:                                        ; preds = %if.end13
  store i32 -1094995529, i32* %retval, align 4, !dbg !8617
  br label %return, !dbg !8617

if.else:                                          ; preds = %if.end13
  %12 = load double, double* %numbuffer, align 8, !dbg !8618
  %13 = load double*, double** %number.addr, align 8, !dbg !8619
  store double %12, double* %13, align 8, !dbg !8620
  br label %if.end17

if.end17:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !8621
  br label %return, !dbg !8621

return:                                           ; preds = %if.end17, %if.then16, %if.then12, %if.then8, %if.then4, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !8622
  ret i32 %14, !dbg !8622
}

; Function Attrs: nounwind uwtable
define internal i32 @gen_publish(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !8623 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !8624, metadata !376), !dbg !8625
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !8626, metadata !376), !dbg !8627
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !8628, metadata !376), !dbg !8629
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8630, metadata !376), !dbg !8631
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8632, metadata !376), !dbg !8633
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !8634
  %1 = bitcast %struct.URLContext* %0 to i8*, !dbg !8634
  %2 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8635
  %playpath = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %2, i32 0, i32 7, !dbg !8636
  %3 = load i8*, i8** %playpath, align 8, !dbg !8636
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 48, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.157, i32 0, i32 0), i8* %3), !dbg !8637
  %4 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8638
  %playpath1 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %4, i32 0, i32 7, !dbg !8640
  %5 = load i8*, i8** %playpath1, align 8, !dbg !8640
  %call = call i64 @strlen(i8* %5) #9, !dbg !8641
  %add = add i64 30, %call, !dbg !8642
  %conv = trunc i64 %add to i32, !dbg !8643
  %call2 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 8, i32 20, i32 0, i32 %conv), !dbg !8644
  store i32 %call2, i32* %ret, align 4, !dbg !8645
  %cmp = icmp slt i32 %call2, 0, !dbg !8646
  br i1 %cmp, label %if.then, label %if.end, !dbg !8647

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %ret, align 4, !dbg !8648
  store i32 %6, i32* %retval, align 4, !dbg !8649
  br label %return, !dbg !8649

if.end:                                           ; preds = %entry
  %7 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8650
  %stream_id = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %7, i32 0, i32 12, !dbg !8651
  %8 = load i32, i32* %stream_id, align 4, !dbg !8651
  %extra = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 4, !dbg !8652
  store i32 %8, i32* %extra, align 8, !dbg !8653
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !8654
  %9 = load i8*, i8** %data, align 8, !dbg !8654
  store i8* %9, i8** %p, align 8, !dbg !8655
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i32 0, i32 0)), !dbg !8656
  %10 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8657
  %nb_invokes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %10, i32 0, i32 28, !dbg !8658
  %11 = load i32, i32* %nb_invokes, align 4, !dbg !8659
  %inc = add nsw i32 %11, 1, !dbg !8659
  store i32 %inc, i32* %nb_invokes, align 4, !dbg !8659
  %conv4 = sitofp i32 %inc to double, !dbg !8659
  call void @ff_amf_write_number(i8** %p, double %conv4), !dbg !8660
  call void @ff_amf_write_null(i8** %p), !dbg !8661
  %12 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8662
  %playpath5 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %12, i32 0, i32 7, !dbg !8663
  %13 = load i8*, i8** %playpath5, align 8, !dbg !8663
  call void @ff_amf_write_string(i8** %p, i8* %13), !dbg !8664
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.144, i32 0, i32 0)), !dbg !8665
  %14 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8666
  %call6 = call i32 @rtmp_send_packet(%struct.RTMPContext* %14, %struct.RTMPPacket* %pkt, i32 1), !dbg !8667
  store i32 %call6, i32* %retval, align 4, !dbg !8668
  br label %return, !dbg !8668

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !8669
  ret i32 %15, !dbg !8669
}

; Function Attrs: nounwind uwtable
define internal i32 @gen_get_stream_length(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !8670 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !8671, metadata !376), !dbg !8672
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !8673, metadata !376), !dbg !8674
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !8675, metadata !376), !dbg !8676
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8677, metadata !376), !dbg !8678
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8679, metadata !376), !dbg !8680
  %0 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8681
  %playpath = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %0, i32 0, i32 7, !dbg !8683
  %1 = load i8*, i8** %playpath, align 8, !dbg !8683
  %call = call i64 @strlen(i8* %1) #9, !dbg !8684
  %add = add i64 31, %call, !dbg !8685
  %conv = trunc i64 %add to i32, !dbg !8686
  %call1 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 8, i32 20, i32 0, i32 %conv), !dbg !8687
  store i32 %call1, i32* %ret, align 4, !dbg !8688
  %cmp = icmp slt i32 %call1, 0, !dbg !8689
  br i1 %cmp, label %if.then, label %if.end, !dbg !8690

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !8691
  store i32 %2, i32* %retval, align 4, !dbg !8692
  br label %return, !dbg !8692

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !8693
  %3 = load i8*, i8** %data, align 8, !dbg !8693
  store i8* %3, i8** %p, align 8, !dbg !8694
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.117, i32 0, i32 0)), !dbg !8695
  %4 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8696
  %nb_invokes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %4, i32 0, i32 28, !dbg !8697
  %5 = load i32, i32* %nb_invokes, align 4, !dbg !8698
  %inc = add nsw i32 %5, 1, !dbg !8698
  store i32 %inc, i32* %nb_invokes, align 4, !dbg !8698
  %conv3 = sitofp i32 %inc to double, !dbg !8698
  call void @ff_amf_write_number(i8** %p, double %conv3), !dbg !8699
  call void @ff_amf_write_null(i8** %p), !dbg !8700
  %6 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8701
  %playpath4 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %6, i32 0, i32 7, !dbg !8702
  %7 = load i8*, i8** %playpath4, align 8, !dbg !8702
  call void @ff_amf_write_string(i8** %p, i8* %7), !dbg !8703
  %8 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8704
  %call5 = call i32 @rtmp_send_packet(%struct.RTMPContext* %8, %struct.RTMPPacket* %pkt, i32 1), !dbg !8705
  store i32 %call5, i32* %retval, align 4, !dbg !8706
  br label %return, !dbg !8706

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !8707
  ret i32 %9, !dbg !8707
}

; Function Attrs: nounwind uwtable
define internal i32 @gen_play(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !8708 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !8709, metadata !376), !dbg !8710
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !8711, metadata !376), !dbg !8712
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !8713, metadata !376), !dbg !8714
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8715, metadata !376), !dbg !8716
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8717, metadata !376), !dbg !8718
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !8719
  %1 = bitcast %struct.URLContext* %0 to i8*, !dbg !8719
  %2 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8720
  %playpath = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %2, i32 0, i32 7, !dbg !8721
  %3 = load i8*, i8** %playpath, align 8, !dbg !8721
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 48, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.158, i32 0, i32 0), i8* %3), !dbg !8722
  %4 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8723
  %playpath1 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %4, i32 0, i32 7, !dbg !8725
  %5 = load i8*, i8** %playpath1, align 8, !dbg !8725
  %call = call i64 @strlen(i8* %5) #9, !dbg !8726
  %add = add i64 29, %call, !dbg !8727
  %conv = trunc i64 %add to i32, !dbg !8728
  %call2 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 8, i32 20, i32 0, i32 %conv), !dbg !8729
  store i32 %call2, i32* %ret, align 4, !dbg !8730
  %cmp = icmp slt i32 %call2, 0, !dbg !8731
  br i1 %cmp, label %if.then, label %if.end, !dbg !8732

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %ret, align 4, !dbg !8733
  store i32 %6, i32* %retval, align 4, !dbg !8734
  br label %return, !dbg !8734

if.end:                                           ; preds = %entry
  %7 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8735
  %stream_id = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %7, i32 0, i32 12, !dbg !8736
  %8 = load i32, i32* %stream_id, align 4, !dbg !8736
  %extra = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 4, !dbg !8737
  store i32 %8, i32* %extra, align 8, !dbg !8738
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !8739
  %9 = load i8*, i8** %data, align 8, !dbg !8739
  store i8* %9, i8** %p, align 8, !dbg !8740
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0)), !dbg !8741
  %10 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8742
  %nb_invokes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %10, i32 0, i32 28, !dbg !8743
  %11 = load i32, i32* %nb_invokes, align 4, !dbg !8744
  %inc = add nsw i32 %11, 1, !dbg !8744
  store i32 %inc, i32* %nb_invokes, align 4, !dbg !8744
  %conv4 = sitofp i32 %inc to double, !dbg !8744
  call void @ff_amf_write_number(i8** %p, double %conv4), !dbg !8745
  call void @ff_amf_write_null(i8** %p), !dbg !8746
  %12 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8747
  %playpath5 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %12, i32 0, i32 7, !dbg !8748
  %13 = load i8*, i8** %playpath5, align 8, !dbg !8748
  call void @ff_amf_write_string(i8** %p, i8* %13), !dbg !8749
  %14 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8750
  %live = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %14, i32 0, i32 8, !dbg !8751
  %15 = load i32, i32* %live, align 8, !dbg !8751
  %mul = mul nsw i32 %15, 1000, !dbg !8752
  %conv6 = sitofp i32 %mul to double, !dbg !8750
  call void @ff_amf_write_number(i8** %p, double %conv6), !dbg !8753
  %16 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8754
  %call7 = call i32 @rtmp_send_packet(%struct.RTMPContext* %16, %struct.RTMPPacket* %pkt, i32 1), !dbg !8755
  store i32 %call7, i32* %retval, align 4, !dbg !8756
  br label %return, !dbg !8756

return:                                           ; preds = %if.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !8757
  ret i32 %17, !dbg !8757
}

; Function Attrs: nounwind uwtable
define internal i32 @gen_buffer_time(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !8758 {
entry:
  %x.addr.i.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i10, metadata !2616, metadata !376), !dbg !8759
  %b.addr.i11 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i11, metadata !2960, metadata !376), !dbg !8762
  %value.addr.i12 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i12, metadata !2962, metadata !376), !dbg !8763
  %x.addr.i.i2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i2, metadata !2616, metadata !376), !dbg !8764
  %b.addr.i3 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i3, metadata !2960, metadata !376), !dbg !8767
  %value.addr.i4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i4, metadata !2962, metadata !376), !dbg !8768
  %x.addr.i.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i.i, metadata !2970, metadata !376), !dbg !8769
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !2978, metadata !376), !dbg !8772
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !2980, metadata !376), !dbg !8773
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !8774, metadata !376), !dbg !8775
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !8776, metadata !376), !dbg !8777
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !8778, metadata !376), !dbg !8779
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8780, metadata !376), !dbg !8781
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8782, metadata !376), !dbg !8783
  %call = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 2, i32 4, i32 1, i32 10), !dbg !8784
  store i32 %call, i32* %ret, align 4, !dbg !8786
  %cmp = icmp slt i32 %call, 0, !dbg !8787
  br i1 %cmp, label %if.then, label %if.end, !dbg !8788

if.then:                                          ; preds = %entry
  %0 = load i32, i32* %ret, align 4, !dbg !8789
  store i32 %0, i32* %retval, align 4, !dbg !8790
  br label %return, !dbg !8790

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !8791
  %1 = load i8*, i8** %data, align 8, !dbg !8791
  store i8* %1, i8** %p, align 8, !dbg !8792
  store i8** %p, i8*** %b.addr.i, align 8, !dbg !8793
  store i32 3, i32* %value.addr.i, align 4, !dbg !8793
  %2 = load i32, i32* %value.addr.i, align 4, !dbg !8794
  %conv.i = trunc i32 %2 to i16, !dbg !8794
  store i16 %conv.i, i16* %x.addr.i.i, align 2, !dbg !8795
  %3 = load i16, i16* %x.addr.i.i, align 2, !dbg !8796
  %conv.i.i = zext i16 %3 to i32, !dbg !8796
  %shr.i.i = ashr i32 %conv.i.i, 8, !dbg !8797
  %4 = load i16, i16* %x.addr.i.i, align 2, !dbg !8798
  %conv1.i.i = zext i16 %4 to i32, !dbg !8798
  %shl.i.i = shl i32 %conv1.i.i, 8, !dbg !8799
  %or.i.i = or i32 %shr.i.i, %shl.i.i, !dbg !8800
  %conv2.i.i = trunc i32 %or.i.i to i16, !dbg !8801
  store i16 %conv2.i.i, i16* %x.addr.i.i, align 2, !dbg !8802
  %5 = load i16, i16* %x.addr.i.i, align 2, !dbg !8803
  %6 = load i8**, i8*** %b.addr.i, align 8, !dbg !8804
  %7 = load i8*, i8** %6, align 8, !dbg !8805
  %8 = bitcast i8* %7 to %union.unaligned_16*, !dbg !8806
  %l.i = bitcast %union.unaligned_16* %8 to i16*, !dbg !8806
  store i16 %5, i16* %l.i, align 1, !dbg !8807
  %9 = load i8**, i8*** %b.addr.i, align 8, !dbg !8808
  %10 = load i8*, i8** %9, align 8, !dbg !8809
  %add.ptr.i = getelementptr inbounds i8, i8* %10, i64 2, !dbg !8809
  store i8* %add.ptr.i, i8** %9, align 8, !dbg !8809
  %11 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8810
  %stream_id = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %11, i32 0, i32 12, !dbg !8811
  %12 = load i32, i32* %stream_id, align 4, !dbg !8811
  store i8** %p, i8*** %b.addr.i3, align 8, !dbg !8812
  store i32 %12, i32* %value.addr.i4, align 4, !dbg !8812
  %13 = load i32, i32* %value.addr.i4, align 4, !dbg !8813
  store i32 %13, i32* %x.addr.i.i2, align 4, !dbg !8814
  %14 = load i32, i32* %x.addr.i.i2, align 4, !dbg !8815
  %shl.i.i5 = shl i32 %14, 8, !dbg !8816
  %and.i.i = and i32 %shl.i.i5, 65280, !dbg !8817
  %15 = load i32, i32* %x.addr.i.i2, align 4, !dbg !8818
  %shr.i.i6 = lshr i32 %15, 8, !dbg !8819
  %and1.i.i = and i32 %shr.i.i6, 255, !dbg !8820
  %or.i.i7 = or i32 %and.i.i, %and1.i.i, !dbg !8821
  %shl2.i.i = shl i32 %or.i.i7, 16, !dbg !8822
  %16 = load i32, i32* %x.addr.i.i2, align 4, !dbg !8823
  %shr3.i.i = lshr i32 %16, 16, !dbg !8824
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !8825
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !8826
  %17 = load i32, i32* %x.addr.i.i2, align 4, !dbg !8827
  %shr6.i.i = lshr i32 %17, 16, !dbg !8828
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !8829
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !8830
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !8831
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !8832
  %18 = load i8**, i8*** %b.addr.i3, align 8, !dbg !8833
  %19 = load i8*, i8** %18, align 8, !dbg !8834
  %20 = bitcast i8* %19 to %union.unaligned_32*, !dbg !8835
  %l.i8 = bitcast %union.unaligned_32* %20 to i32*, !dbg !8835
  store i32 %or10.i.i, i32* %l.i8, align 1, !dbg !8836
  %21 = load i8**, i8*** %b.addr.i3, align 8, !dbg !8837
  %22 = load i8*, i8** %21, align 8, !dbg !8838
  %add.ptr.i9 = getelementptr inbounds i8, i8* %22, i64 4, !dbg !8838
  store i8* %add.ptr.i9, i8** %21, align 8, !dbg !8838
  %23 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8839
  %client_buffer_time = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %23, i32 0, i32 40, !dbg !8840
  %24 = load i32, i32* %client_buffer_time, align 4, !dbg !8840
  store i8** %p, i8*** %b.addr.i11, align 8, !dbg !8841
  store i32 %24, i32* %value.addr.i12, align 4, !dbg !8841
  %25 = load i32, i32* %value.addr.i12, align 4, !dbg !8842
  store i32 %25, i32* %x.addr.i.i10, align 4, !dbg !8843
  %26 = load i32, i32* %x.addr.i.i10, align 4, !dbg !8844
  %shl.i.i13 = shl i32 %26, 8, !dbg !8845
  %and.i.i14 = and i32 %shl.i.i13, 65280, !dbg !8846
  %27 = load i32, i32* %x.addr.i.i10, align 4, !dbg !8847
  %shr.i.i15 = lshr i32 %27, 8, !dbg !8848
  %and1.i.i16 = and i32 %shr.i.i15, 255, !dbg !8849
  %or.i.i17 = or i32 %and.i.i14, %and1.i.i16, !dbg !8850
  %shl2.i.i18 = shl i32 %or.i.i17, 16, !dbg !8851
  %28 = load i32, i32* %x.addr.i.i10, align 4, !dbg !8852
  %shr3.i.i19 = lshr i32 %28, 16, !dbg !8853
  %shl4.i.i20 = shl i32 %shr3.i.i19, 8, !dbg !8854
  %and5.i.i21 = and i32 %shl4.i.i20, 65280, !dbg !8855
  %29 = load i32, i32* %x.addr.i.i10, align 4, !dbg !8856
  %shr6.i.i22 = lshr i32 %29, 16, !dbg !8857
  %shr7.i.i23 = lshr i32 %shr6.i.i22, 8, !dbg !8858
  %and8.i.i24 = and i32 %shr7.i.i23, 255, !dbg !8859
  %or9.i.i25 = or i32 %and5.i.i21, %and8.i.i24, !dbg !8860
  %or10.i.i26 = or i32 %shl2.i.i18, %or9.i.i25, !dbg !8861
  %30 = load i8**, i8*** %b.addr.i11, align 8, !dbg !8862
  %31 = load i8*, i8** %30, align 8, !dbg !8863
  %32 = bitcast i8* %31 to %union.unaligned_32*, !dbg !8864
  %l.i27 = bitcast %union.unaligned_32* %32 to i32*, !dbg !8864
  store i32 %or10.i.i26, i32* %l.i27, align 1, !dbg !8865
  %33 = load i8**, i8*** %b.addr.i11, align 8, !dbg !8866
  %34 = load i8*, i8** %33, align 8, !dbg !8867
  %add.ptr.i28 = getelementptr inbounds i8, i8* %34, i64 4, !dbg !8867
  store i8* %add.ptr.i28, i8** %33, align 8, !dbg !8867
  %35 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !8868
  %call1 = call i32 @rtmp_send_packet(%struct.RTMPContext* %35, %struct.RTMPPacket* %pkt, i32 0), !dbg !8869
  store i32 %call1, i32* %retval, align 4, !dbg !8870
  br label %return, !dbg !8870

return:                                           ; preds = %if.end, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !8871
  ret i32 %36, !dbg !8871
}

declare i32 @ff_amf_read_null(%struct.GetByteContext*) #2

declare i32 @ff_amf_tag_size(i8*, i8*) #2

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @write_begin(%struct.URLContext* %s) #0 !dbg !8872 {
entry:
  %x.addr.i.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i10, metadata !2616, metadata !376), !dbg !8873
  %p.addr.i11 = alloca %struct.PutByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutByteContext** %p.addr.i11, metadata !5441, metadata !376), !dbg !8876
  %value.addr.i12 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i12, metadata !5443, metadata !376), !dbg !8877
  %x.addr.i.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i.i, metadata !2970, metadata !376), !dbg !8878
  %p.addr.i3 = alloca %struct.PutByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutByteContext** %p.addr.i3, metadata !8885, metadata !376), !dbg !8886
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !8887, metadata !376), !dbg !8888
  %p.addr.i = alloca %struct.PutByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutByteContext** %p.addr.i, metadata !5458, metadata !376), !dbg !8889
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !5464, metadata !376), !dbg !8891
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !5466, metadata !376), !dbg !8892
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %pbc = alloca %struct.PutByteContext, align 8
  %spkt = alloca %struct.RTMPPacket, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !8893, metadata !376), !dbg !8894
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !8895, metadata !376), !dbg !8896
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !8897
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !8898
  %1 = load i8*, i8** %priv_data, align 8, !dbg !8898
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !8897
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !8896
  call void @llvm.dbg.declare(metadata %struct.PutByteContext* %pbc, metadata !8899, metadata !376), !dbg !8900
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %spkt, metadata !8901, metadata !376), !dbg !8902
  %3 = bitcast %struct.RTMPPacket* %spkt to i8*, !dbg !8902
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 48, i32 8, i1 false), !dbg !8902
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8903, metadata !376), !dbg !8904
  %call = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %spkt, i32 2, i32 4, i32 0, i32 6), !dbg !8905
  store i32 %call, i32* %ret, align 4, !dbg !8907
  %cmp = icmp slt i32 %call, 0, !dbg !8908
  br i1 %cmp, label %if.then, label %if.end, !dbg !8909

if.then:                                          ; preds = %entry
  %4 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !8910
  %5 = bitcast %struct.URLContext* %4 to i8*, !dbg !8910
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.170, i32 0, i32 0)), !dbg !8912
  %6 = load i32, i32* %ret, align 4, !dbg !8913
  store i32 %6, i32* %retval, align 4, !dbg !8914
  br label %return, !dbg !8914

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %spkt, i32 0, i32 5, !dbg !8915
  %7 = load i8*, i8** %data, align 8, !dbg !8915
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %spkt, i32 0, i32 6, !dbg !8916
  %8 = load i32, i32* %size, align 8, !dbg !8916
  store %struct.PutByteContext* %pbc, %struct.PutByteContext** %p.addr.i, align 8, !dbg !8917
  store i8* %7, i8** %buf.addr.i, align 8, !dbg !8917
  store i32 %8, i32* %buf_size.addr.i, align 4, !dbg !8917
  %9 = load i32, i32* %buf_size.addr.i, align 4, !dbg !8918
  %cmp.i = icmp sge i32 %9, 0, !dbg !8919
  br i1 %cmp.i, label %bytestream2_init_writer.exit, label %if.then.i, !dbg !8920

if.then.i:                                        ; preds = %if.end
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.72, i32 0, i32 0), i32 147) #10, !dbg !8921
  call void @abort() #11, !dbg !8922
  unreachable, !dbg !8923

bytestream2_init_writer.exit:                     ; preds = %if.end
  %10 = load i8*, i8** %buf.addr.i, align 8, !dbg !8924
  %11 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i, align 8, !dbg !8925
  %buffer.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %11, i32 0, i32 0, !dbg !8926
  store i8* %10, i8** %buffer.i, align 8, !dbg !8927
  %12 = load i8*, i8** %buf.addr.i, align 8, !dbg !8928
  %13 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i, align 8, !dbg !8929
  %buffer_start.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %13, i32 0, i32 2, !dbg !8930
  store i8* %12, i8** %buffer_start.i, align 8, !dbg !8931
  %14 = load i8*, i8** %buf.addr.i, align 8, !dbg !8932
  %15 = load i32, i32* %buf_size.addr.i, align 4, !dbg !8933
  %idx.ext.i = sext i32 %15 to i64, !dbg !8934
  %add.ptr.i = getelementptr inbounds i8, i8* %14, i64 %idx.ext.i, !dbg !8934
  %16 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i, align 8, !dbg !8935
  %buffer_end.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %16, i32 0, i32 1, !dbg !8936
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !8937
  %17 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i, align 8, !dbg !8938
  %eof.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %17, i32 0, i32 3, !dbg !8939
  store i32 0, i32* %eof.i, align 8, !dbg !8940
  store %struct.PutByteContext* %pbc, %struct.PutByteContext** %p.addr.i3, align 8, !dbg !8941
  store i32 0, i32* %value.addr.i, align 4, !dbg !8941
  %18 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i3, align 8, !dbg !8942
  %eof.i4 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %18, i32 0, i32 3, !dbg !8943
  %19 = load i32, i32* %eof.i4, align 8, !dbg !8943
  %tobool.i = icmp ne i32 %19, 0, !dbg !8942
  br i1 %tobool.i, label %if.else.i, label %land.lhs.true.i, !dbg !8944

land.lhs.true.i:                                  ; preds = %bytestream2_init_writer.exit
  %20 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i3, align 8, !dbg !8945
  %buffer_end.i5 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %20, i32 0, i32 1, !dbg !8947
  %21 = load i8*, i8** %buffer_end.i5, align 8, !dbg !8947
  %22 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i3, align 8, !dbg !8948
  %buffer.i6 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %22, i32 0, i32 0, !dbg !8949
  %23 = load i8*, i8** %buffer.i6, align 8, !dbg !8949
  %sub.ptr.lhs.cast.i = ptrtoint i8* %21 to i64, !dbg !8950
  %sub.ptr.rhs.cast.i = ptrtoint i8* %23 to i64, !dbg !8950
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !8950
  %cmp.i7 = icmp sge i64 %sub.ptr.sub.i, 2, !dbg !8951
  br i1 %cmp.i7, label %if.then.i9, label %if.else.i, !dbg !8952

if.then.i9:                                       ; preds = %land.lhs.true.i
  %24 = load i32, i32* %value.addr.i, align 4, !dbg !8953
  %conv.i = trunc i32 %24 to i16, !dbg !8953
  store i16 %conv.i, i16* %x.addr.i.i, align 2, !dbg !8954
  %25 = load i16, i16* %x.addr.i.i, align 2, !dbg !8955
  %conv.i.i = zext i16 %25 to i32, !dbg !8955
  %shr.i.i = ashr i32 %conv.i.i, 8, !dbg !8956
  %26 = load i16, i16* %x.addr.i.i, align 2, !dbg !8957
  %conv1.i.i = zext i16 %26 to i32, !dbg !8957
  %shl.i.i = shl i32 %conv1.i.i, 8, !dbg !8958
  %or.i.i = or i32 %shr.i.i, %shl.i.i, !dbg !8959
  %conv2.i.i = trunc i32 %or.i.i to i16, !dbg !8960
  store i16 %conv2.i.i, i16* %x.addr.i.i, align 2, !dbg !8961
  %27 = load i16, i16* %x.addr.i.i, align 2, !dbg !8962
  %28 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i3, align 8, !dbg !8963
  %buffer1.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %28, i32 0, i32 0, !dbg !8964
  %29 = load i8*, i8** %buffer1.i, align 8, !dbg !8964
  %30 = bitcast i8* %29 to %union.unaligned_16*, !dbg !8965
  %l.i = bitcast %union.unaligned_16* %30 to i16*, !dbg !8965
  store i16 %27, i16* %l.i, align 1, !dbg !8966
  %31 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i3, align 8, !dbg !8967
  %buffer2.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %31, i32 0, i32 0, !dbg !8968
  %32 = load i8*, i8** %buffer2.i, align 8, !dbg !8969
  %add.ptr.i8 = getelementptr inbounds i8, i8* %32, i64 2, !dbg !8969
  store i8* %add.ptr.i8, i8** %buffer2.i, align 8, !dbg !8969
  br label %bytestream2_put_be16.exit, !dbg !8970

if.else.i:                                        ; preds = %land.lhs.true.i, %bytestream2_init_writer.exit
  %33 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i3, align 8, !dbg !8971
  %eof3.i = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %33, i32 0, i32 3, !dbg !8973
  store i32 1, i32* %eof3.i, align 8, !dbg !8974
  br label %bytestream2_put_be16.exit, !dbg !8941

bytestream2_put_be16.exit:                        ; preds = %if.then.i9, %if.else.i
  %34 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !8975
  %nb_streamid = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %34, i32 0, i32 48, !dbg !8976
  %35 = load i32, i32* %nb_streamid, align 8, !dbg !8976
  store %struct.PutByteContext* %pbc, %struct.PutByteContext** %p.addr.i11, align 8, !dbg !8977
  store i32 %35, i32* %value.addr.i12, align 4, !dbg !8977
  %36 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i11, align 8, !dbg !8978
  %eof.i13 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %36, i32 0, i32 3, !dbg !8979
  %37 = load i32, i32* %eof.i13, align 8, !dbg !8979
  %tobool.i14 = icmp ne i32 %37, 0, !dbg !8978
  br i1 %tobool.i14, label %if.else.i31, label %land.lhs.true.i21, !dbg !8980

land.lhs.true.i21:                                ; preds = %bytestream2_put_be16.exit
  %38 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i11, align 8, !dbg !8981
  %buffer_end.i15 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %38, i32 0, i32 1, !dbg !8982
  %39 = load i8*, i8** %buffer_end.i15, align 8, !dbg !8982
  %40 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i11, align 8, !dbg !8983
  %buffer.i16 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %40, i32 0, i32 0, !dbg !8984
  %41 = load i8*, i8** %buffer.i16, align 8, !dbg !8984
  %sub.ptr.lhs.cast.i17 = ptrtoint i8* %39 to i64, !dbg !8985
  %sub.ptr.rhs.cast.i18 = ptrtoint i8* %41 to i64, !dbg !8985
  %sub.ptr.sub.i19 = sub i64 %sub.ptr.lhs.cast.i17, %sub.ptr.rhs.cast.i18, !dbg !8985
  %cmp.i20 = icmp sge i64 %sub.ptr.sub.i19, 4, !dbg !8986
  br i1 %cmp.i20, label %if.then.i29, label %if.else.i31, !dbg !8987

if.then.i29:                                      ; preds = %land.lhs.true.i21
  %42 = load i32, i32* %value.addr.i12, align 4, !dbg !8988
  store i32 %42, i32* %x.addr.i.i10, align 4, !dbg !8989
  %43 = load i32, i32* %x.addr.i.i10, align 4, !dbg !8990
  %shl.i.i22 = shl i32 %43, 8, !dbg !8991
  %and.i.i = and i32 %shl.i.i22, 65280, !dbg !8992
  %44 = load i32, i32* %x.addr.i.i10, align 4, !dbg !8993
  %shr.i.i23 = lshr i32 %44, 8, !dbg !8994
  %and1.i.i = and i32 %shr.i.i23, 255, !dbg !8995
  %or.i.i24 = or i32 %and.i.i, %and1.i.i, !dbg !8996
  %shl2.i.i = shl i32 %or.i.i24, 16, !dbg !8997
  %45 = load i32, i32* %x.addr.i.i10, align 4, !dbg !8998
  %shr3.i.i = lshr i32 %45, 16, !dbg !8999
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !9000
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !9001
  %46 = load i32, i32* %x.addr.i.i10, align 4, !dbg !9002
  %shr6.i.i = lshr i32 %46, 16, !dbg !9003
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !9004
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !9005
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !9006
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !9007
  %47 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i11, align 8, !dbg !9008
  %buffer1.i25 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %47, i32 0, i32 0, !dbg !9009
  %48 = load i8*, i8** %buffer1.i25, align 8, !dbg !9009
  %49 = bitcast i8* %48 to %union.unaligned_32*, !dbg !9010
  %l.i26 = bitcast %union.unaligned_32* %49 to i32*, !dbg !9010
  store i32 %or10.i.i, i32* %l.i26, align 1, !dbg !9011
  %50 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i11, align 8, !dbg !9012
  %buffer2.i27 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %50, i32 0, i32 0, !dbg !9013
  %51 = load i8*, i8** %buffer2.i27, align 8, !dbg !9014
  %add.ptr.i28 = getelementptr inbounds i8, i8* %51, i64 4, !dbg !9014
  store i8* %add.ptr.i28, i8** %buffer2.i27, align 8, !dbg !9014
  br label %bytestream2_put_be32.exit, !dbg !9015

if.else.i31:                                      ; preds = %land.lhs.true.i21, %bytestream2_put_be16.exit
  %52 = load %struct.PutByteContext*, %struct.PutByteContext** %p.addr.i11, align 8, !dbg !9016
  %eof3.i30 = getelementptr inbounds %struct.PutByteContext, %struct.PutByteContext* %52, i32 0, i32 3, !dbg !9017
  store i32 1, i32* %eof3.i30, align 8, !dbg !9018
  br label %bytestream2_put_be32.exit, !dbg !8977

bytestream2_put_be32.exit:                        ; preds = %if.then.i29, %if.else.i31
  %53 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !9019
  %stream = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %53, i32 0, i32 1, !dbg !9020
  %54 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !9020
  %55 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !9021
  %out_chunk_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %55, i32 0, i32 5, !dbg !9022
  %56 = load i32, i32* %out_chunk_size, align 4, !dbg !9022
  %57 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !9023
  %prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %57, i32 0, i32 2, !dbg !9024
  %arrayidx = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt, i64 0, i64 1, !dbg !9023
  %58 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !9025
  %nb_prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %58, i32 0, i32 3, !dbg !9026
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt, i64 0, i64 1, !dbg !9025
  %call2 = call i32 @ff_rtmp_packet_write(%struct.URLContext* %54, %struct.RTMPPacket* %spkt, i32 %56, %struct.RTMPPacket** %arrayidx, i32* %arrayidx1), !dbg !9027
  store i32 %call2, i32* %ret, align 4, !dbg !9028
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %spkt), !dbg !9029
  %59 = load i32, i32* %ret, align 4, !dbg !9030
  store i32 %59, i32* %retval, align 4, !dbg !9031
  br label %return, !dbg !9031

return:                                           ; preds = %bytestream2_put_be32.exit, %if.then
  %60 = load i32, i32* %retval, align 4, !dbg !9032
  ret i32 %60, !dbg !9032
}

; Function Attrs: nounwind uwtable
define internal i32 @write_status(%struct.URLContext* %s, %struct.RTMPPacket* %pkt, i8* %status, i8* %filename) #0 !dbg !9033 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %pkt.addr = alloca %struct.RTMPPacket*, align 8
  %status.addr = alloca i8*, align 8
  %filename.addr = alloca i8*, align 8
  %rt = alloca %struct.RTMPContext*, align 8
  %spkt = alloca %struct.RTMPPacket, align 8
  %statusmsg = alloca [128 x i8], align 16
  %pp = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !9036, metadata !376), !dbg !9037
  store %struct.RTMPPacket* %pkt, %struct.RTMPPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket** %pkt.addr, metadata !9038, metadata !376), !dbg !9039
  store i8* %status, i8** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %status.addr, metadata !9040, metadata !376), !dbg !9041
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !9042, metadata !376), !dbg !9043
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt, metadata !9044, metadata !376), !dbg !9045
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !9046
  %priv_data = getelementptr inbounds %struct.URLContext, %struct.URLContext* %0, i32 0, i32 2, !dbg !9047
  %1 = load i8*, i8** %priv_data, align 8, !dbg !9047
  %2 = bitcast i8* %1 to %struct.RTMPContext*, !dbg !9046
  store %struct.RTMPContext* %2, %struct.RTMPContext** %rt, align 8, !dbg !9045
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %spkt, metadata !9048, metadata !376), !dbg !9049
  %3 = bitcast %struct.RTMPPacket* %spkt to i8*, !dbg !9049
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 48, i32 8, i1 false), !dbg !9049
  call void @llvm.dbg.declare(metadata [128 x i8]* %statusmsg, metadata !9050, metadata !376), !dbg !9051
  call void @llvm.dbg.declare(metadata i8** %pp, metadata !9052, metadata !376), !dbg !9053
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9054, metadata !376), !dbg !9055
  %call = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %spkt, i32 3, i32 20, i32 0, i32 4096), !dbg !9056
  store i32 %call, i32* %ret, align 4, !dbg !9058
  %cmp = icmp slt i32 %call, 0, !dbg !9059
  br i1 %cmp, label %if.then, label %if.end, !dbg !9060

if.then:                                          ; preds = %entry
  %4 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !9061
  %5 = bitcast %struct.URLContext* %4 to i8*, !dbg !9061
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.170, i32 0, i32 0)), !dbg !9063
  %6 = load i32, i32* %ret, align 4, !dbg !9064
  store i32 %6, i32* %retval, align 4, !dbg !9065
  br label %return, !dbg !9065

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %spkt, i32 0, i32 5, !dbg !9066
  %7 = load i8*, i8** %data, align 8, !dbg !9066
  store i8* %7, i8** %pp, align 8, !dbg !9067
  %8 = load %struct.RTMPPacket*, %struct.RTMPPacket** %pkt.addr, align 8, !dbg !9068
  %extra = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %8, i32 0, i32 4, !dbg !9069
  %9 = load i32, i32* %extra, align 8, !dbg !9069
  %extra1 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %spkt, i32 0, i32 4, !dbg !9070
  store i32 %9, i32* %extra1, align 8, !dbg !9071
  call void @ff_amf_write_string(i8** %pp, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i32 0, i32 0)), !dbg !9072
  call void @ff_amf_write_number(i8** %pp, double 0.000000e+00), !dbg !9073
  call void @ff_amf_write_null(i8** %pp), !dbg !9074
  call void @ff_amf_write_object_start(i8** %pp), !dbg !9075
  call void @ff_amf_write_field_name(i8** %pp, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0)), !dbg !9076
  call void @ff_amf_write_string(i8** %pp, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i32 0, i32 0)), !dbg !9077
  call void @ff_amf_write_field_name(i8** %pp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i32 0, i32 0)), !dbg !9078
  %10 = load i8*, i8** %status.addr, align 8, !dbg !9079
  call void @ff_amf_write_string(i8** %pp, i8* %10), !dbg !9080
  call void @ff_amf_write_field_name(i8** %pp, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i32 0, i32 0)), !dbg !9081
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %statusmsg, i32 0, i32 0, !dbg !9082
  %11 = load i8*, i8** %filename.addr, align 8, !dbg !9083
  %call2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 128, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.172, i32 0, i32 0), i8* %11) #10, !dbg !9084
  %arraydecay3 = getelementptr inbounds [128 x i8], [128 x i8]* %statusmsg, i32 0, i32 0, !dbg !9085
  call void @ff_amf_write_string(i8** %pp, i8* %arraydecay3), !dbg !9086
  call void @ff_amf_write_field_name(i8** %pp, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.173, i32 0, i32 0)), !dbg !9087
  %12 = load i8*, i8** %filename.addr, align 8, !dbg !9088
  call void @ff_amf_write_string(i8** %pp, i8* %12), !dbg !9089
  call void @ff_amf_write_object_end(i8** %pp), !dbg !9090
  %13 = load i8*, i8** %pp, align 8, !dbg !9091
  %data4 = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %spkt, i32 0, i32 5, !dbg !9092
  %14 = load i8*, i8** %data4, align 8, !dbg !9092
  %sub.ptr.lhs.cast = ptrtoint i8* %13 to i64, !dbg !9093
  %sub.ptr.rhs.cast = ptrtoint i8* %14 to i64, !dbg !9093
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9093
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !9091
  %size = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %spkt, i32 0, i32 6, !dbg !9094
  store i32 %conv, i32* %size, align 8, !dbg !9095
  %15 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !9096
  %stream = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %15, i32 0, i32 1, !dbg !9097
  %16 = load %struct.URLContext*, %struct.URLContext** %stream, align 8, !dbg !9097
  %17 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !9098
  %out_chunk_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %17, i32 0, i32 5, !dbg !9099
  %18 = load i32, i32* %out_chunk_size, align 4, !dbg !9099
  %19 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !9100
  %prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %19, i32 0, i32 2, !dbg !9101
  %arrayidx = getelementptr inbounds [2 x %struct.RTMPPacket*], [2 x %struct.RTMPPacket*]* %prev_pkt, i64 0, i64 1, !dbg !9100
  %20 = load %struct.RTMPContext*, %struct.RTMPContext** %rt, align 8, !dbg !9102
  %nb_prev_pkt = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %20, i32 0, i32 3, !dbg !9103
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %nb_prev_pkt, i64 0, i64 1, !dbg !9102
  %call6 = call i32 @ff_rtmp_packet_write(%struct.URLContext* %16, %struct.RTMPPacket* %spkt, i32 %18, %struct.RTMPPacket** %arrayidx, i32* %arrayidx5), !dbg !9104
  store i32 %call6, i32* %ret, align 4, !dbg !9105
  call void @ff_rtmp_packet_destroy(%struct.RTMPPacket* %spkt), !dbg !9106
  %21 = load i32, i32* %ret, align 4, !dbg !9107
  store i32 %21, i32* %retval, align 4, !dbg !9108
  br label %return, !dbg !9108

return:                                           ; preds = %if.end, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !9109
  ret i32 %22, !dbg !9109
}

; Function Attrs: nounwind uwtable
define internal i32 @update_offset(%struct.RTMPContext* %rt, i32 %size) #0 !dbg !9110 {
entry:
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %size.addr = alloca i32, align 4
  %old_flv_size = alloca i32, align 4
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !9113, metadata !376), !dbg !9114
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9115, metadata !376), !dbg !9116
  call void @llvm.dbg.declare(metadata i32* %old_flv_size, metadata !9117, metadata !376), !dbg !9118
  %0 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9119
  %flv_off = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %0, i32 0, i32 15, !dbg !9121
  %1 = load i32, i32* %flv_off, align 4, !dbg !9121
  %2 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9122
  %flv_size = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %2, i32 0, i32 14, !dbg !9123
  %3 = load i32, i32* %flv_size, align 8, !dbg !9123
  %cmp = icmp slt i32 %1, %3, !dbg !9124
  br i1 %cmp, label %if.then, label %if.else, !dbg !9125

if.then:                                          ; preds = %entry
  %4 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9126
  %flv_size1 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %4, i32 0, i32 14, !dbg !9128
  %5 = load i32, i32* %flv_size1, align 8, !dbg !9128
  store i32 %5, i32* %old_flv_size, align 4, !dbg !9129
  %6 = load i32, i32* %size.addr, align 4, !dbg !9130
  %7 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9131
  %flv_size2 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %7, i32 0, i32 14, !dbg !9132
  %8 = load i32, i32* %flv_size2, align 8, !dbg !9133
  %add = add nsw i32 %8, %6, !dbg !9133
  store i32 %add, i32* %flv_size2, align 8, !dbg !9133
  br label %if.end, !dbg !9134

if.else:                                          ; preds = %entry
  store i32 0, i32* %old_flv_size, align 4, !dbg !9135
  %9 = load i32, i32* %size.addr, align 4, !dbg !9137
  %10 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9138
  %flv_size3 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %10, i32 0, i32 14, !dbg !9139
  store i32 %9, i32* %flv_size3, align 8, !dbg !9140
  %11 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9141
  %flv_off4 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %11, i32 0, i32 15, !dbg !9142
  store i32 0, i32* %flv_off4, align 4, !dbg !9143
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load i32, i32* %old_flv_size, align 4, !dbg !9144
  ret i32 %12, !dbg !9145
}

declare i32 @ff_amf_get_string(%struct.GetByteContext*, i8*, i32, i32*) #2

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_bswap64(i64 %x) #8 !dbg !9146 {
entry:
  %x.addr.i5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i5, metadata !2616, metadata !376), !dbg !9149
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2616, metadata !376), !dbg !9152
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !9154, metadata !376), !dbg !9155
  %0 = load i64, i64* %x.addr, align 8, !dbg !9156
  %conv = trunc i64 %0 to i32, !dbg !9156
  store i32 %conv, i32* %x.addr.i, align 4, !dbg !9157
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !9158
  %shl.i = shl i32 %1, 8, !dbg !9159
  %and.i = and i32 %shl.i, 65280, !dbg !9160
  %2 = load i32, i32* %x.addr.i, align 4, !dbg !9161
  %shr.i = lshr i32 %2, 8, !dbg !9162
  %and1.i = and i32 %shr.i, 255, !dbg !9163
  %or.i = or i32 %and.i, %and1.i, !dbg !9164
  %shl2.i = shl i32 %or.i, 16, !dbg !9165
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !9166
  %shr3.i = lshr i32 %3, 16, !dbg !9167
  %shl4.i = shl i32 %shr3.i, 8, !dbg !9168
  %and5.i = and i32 %shl4.i, 65280, !dbg !9169
  %4 = load i32, i32* %x.addr.i, align 4, !dbg !9170
  %shr6.i = lshr i32 %4, 16, !dbg !9171
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !9172
  %and8.i = and i32 %shr7.i, 255, !dbg !9173
  %or9.i = or i32 %and5.i, %and8.i, !dbg !9174
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !9175
  %conv1 = zext i32 %or10.i to i64, !dbg !9176
  %shl = shl i64 %conv1, 32, !dbg !9177
  %5 = load i64, i64* %x.addr, align 8, !dbg !9178
  %shr = lshr i64 %5, 32, !dbg !9179
  %conv2 = trunc i64 %shr to i32, !dbg !9178
  store i32 %conv2, i32* %x.addr.i5, align 4, !dbg !9180
  %6 = load i32, i32* %x.addr.i5, align 4, !dbg !9181
  %shl.i6 = shl i32 %6, 8, !dbg !9182
  %and.i7 = and i32 %shl.i6, 65280, !dbg !9183
  %7 = load i32, i32* %x.addr.i5, align 4, !dbg !9184
  %shr.i8 = lshr i32 %7, 8, !dbg !9185
  %and1.i9 = and i32 %shr.i8, 255, !dbg !9186
  %or.i10 = or i32 %and.i7, %and1.i9, !dbg !9187
  %shl2.i11 = shl i32 %or.i10, 16, !dbg !9188
  %8 = load i32, i32* %x.addr.i5, align 4, !dbg !9189
  %shr3.i12 = lshr i32 %8, 16, !dbg !9190
  %shl4.i13 = shl i32 %shr3.i12, 8, !dbg !9191
  %and5.i14 = and i32 %shl4.i13, 65280, !dbg !9192
  %9 = load i32, i32* %x.addr.i5, align 4, !dbg !9193
  %shr6.i15 = lshr i32 %9, 16, !dbg !9194
  %shr7.i16 = lshr i32 %shr6.i15, 8, !dbg !9195
  %and8.i17 = and i32 %shr7.i16, 255, !dbg !9196
  %or9.i18 = or i32 %and5.i14, %and8.i17, !dbg !9197
  %or10.i19 = or i32 %shl2.i11, %or9.i18, !dbg !9198
  %conv4 = zext i32 %or10.i19 to i64, !dbg !9199
  %or = or i64 %shl, %conv4, !dbg !9200
  ret i64 %or, !dbg !9201
}

declare i32 @ff_rtmp_check_alloc_array(%struct.RTMPPacket**, i32*, i32) #2

declare i32 @ffurl_read(%struct.URLContext*, i8*, i32) #2

declare i32 @ff_rtmp_packet_read_internal(%struct.URLContext*, %struct.RTMPPacket*, i32, %struct.RTMPPacket**, i32*, i8 zeroext) #2

; Function Attrs: nounwind uwtable
define internal i32 @gen_fcunpublish_stream(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !9202 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !9203, metadata !376), !dbg !9204
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !9205, metadata !376), !dbg !9206
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !9207, metadata !376), !dbg !9208
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9209, metadata !376), !dbg !9210
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9211, metadata !376), !dbg !9212
  %0 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9213
  %playpath = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %0, i32 0, i32 7, !dbg !9215
  %1 = load i8*, i8** %playpath, align 8, !dbg !9215
  %call = call i64 @strlen(i8* %1) #9, !dbg !9216
  %add = add i64 27, %call, !dbg !9217
  %conv = trunc i64 %add to i32, !dbg !9218
  %call1 = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 3, i32 20, i32 0, i32 %conv), !dbg !9219
  store i32 %call1, i32* %ret, align 4, !dbg !9220
  %cmp = icmp slt i32 %call1, 0, !dbg !9221
  br i1 %cmp, label %if.then, label %if.end, !dbg !9222

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !9223
  store i32 %2, i32* %retval, align 4, !dbg !9224
  br label %return, !dbg !9224

if.end:                                           ; preds = %entry
  %3 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !9225
  %4 = bitcast %struct.URLContext* %3 to i8*, !dbg !9225
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 48, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.181, i32 0, i32 0)), !dbg !9226
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !9227
  %5 = load i8*, i8** %data, align 8, !dbg !9227
  store i8* %5, i8** %p, align 8, !dbg !9228
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.182, i32 0, i32 0)), !dbg !9229
  %6 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9230
  %nb_invokes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %6, i32 0, i32 28, !dbg !9231
  %7 = load i32, i32* %nb_invokes, align 4, !dbg !9232
  %inc = add nsw i32 %7, 1, !dbg !9232
  store i32 %inc, i32* %nb_invokes, align 4, !dbg !9232
  %conv3 = sitofp i32 %inc to double, !dbg !9232
  call void @ff_amf_write_number(i8** %p, double %conv3), !dbg !9233
  call void @ff_amf_write_null(i8** %p), !dbg !9234
  %8 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9235
  %playpath4 = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %8, i32 0, i32 7, !dbg !9236
  %9 = load i8*, i8** %playpath4, align 8, !dbg !9236
  call void @ff_amf_write_string(i8** %p, i8* %9), !dbg !9237
  %10 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9238
  %call5 = call i32 @rtmp_send_packet(%struct.RTMPContext* %10, %struct.RTMPPacket* %pkt, i32 0), !dbg !9239
  store i32 %call5, i32* %retval, align 4, !dbg !9240
  br label %return, !dbg !9240

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !9241
  ret i32 %11, !dbg !9241
}

; Function Attrs: nounwind uwtable
define internal i32 @gen_delete_stream(%struct.URLContext* %s, %struct.RTMPContext* %rt) #0 !dbg !9242 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !9243, metadata !376), !dbg !9244
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !9245, metadata !376), !dbg !9246
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !9247, metadata !376), !dbg !9248
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9249, metadata !376), !dbg !9250
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9251, metadata !376), !dbg !9252
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !9253
  %1 = bitcast %struct.URLContext* %0 to i8*, !dbg !9253
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.183, i32 0, i32 0)), !dbg !9254
  %call = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 3, i32 20, i32 0, i32 34), !dbg !9255
  store i32 %call, i32* %ret, align 4, !dbg !9257
  %cmp = icmp slt i32 %call, 0, !dbg !9258
  br i1 %cmp, label %if.then, label %if.end, !dbg !9259

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !9260
  store i32 %2, i32* %retval, align 4, !dbg !9261
  br label %return, !dbg !9261

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !9262
  %3 = load i8*, i8** %data, align 8, !dbg !9262
  store i8* %3, i8** %p, align 8, !dbg !9263
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.184, i32 0, i32 0)), !dbg !9264
  %4 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9265
  %nb_invokes = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %4, i32 0, i32 28, !dbg !9266
  %5 = load i32, i32* %nb_invokes, align 4, !dbg !9267
  %inc = add nsw i32 %5, 1, !dbg !9267
  store i32 %inc, i32* %nb_invokes, align 4, !dbg !9267
  %conv = sitofp i32 %inc to double, !dbg !9267
  call void @ff_amf_write_number(i8** %p, double %conv), !dbg !9268
  call void @ff_amf_write_null(i8** %p), !dbg !9269
  %6 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9270
  %stream_id = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %6, i32 0, i32 12, !dbg !9271
  %7 = load i32, i32* %stream_id, align 4, !dbg !9271
  %conv1 = sitofp i32 %7 to double, !dbg !9270
  call void @ff_amf_write_number(i8** %p, double %conv1), !dbg !9272
  %8 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9273
  %call2 = call i32 @rtmp_send_packet(%struct.RTMPContext* %8, %struct.RTMPPacket* %pkt, i32 0), !dbg !9274
  store i32 %call2, i32* %retval, align 4, !dbg !9275
  br label %return, !dbg !9275

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !9276
  ret i32 %9, !dbg !9276
}

; Function Attrs: nounwind uwtable
define internal i32 @gen_pause(%struct.URLContext* %s, %struct.RTMPContext* %rt, i32 %pause, i32 %timestamp) #0 !dbg !9277 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %pause.addr = alloca i32, align 4
  %timestamp.addr = alloca i32, align 4
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !9280, metadata !376), !dbg !9281
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !9282, metadata !376), !dbg !9283
  store i32 %pause, i32* %pause.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pause.addr, metadata !9284, metadata !376), !dbg !9285
  store i32 %timestamp, i32* %timestamp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timestamp.addr, metadata !9286, metadata !376), !dbg !9287
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !9288, metadata !376), !dbg !9289
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9290, metadata !376), !dbg !9291
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9292, metadata !376), !dbg !9293
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !9294
  %1 = bitcast %struct.URLContext* %0 to i8*, !dbg !9294
  %2 = load i32, i32* %timestamp.addr, align 4, !dbg !9295
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 48, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.187, i32 0, i32 0), i32 %2), !dbg !9296
  %call = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 3, i32 20, i32 0, i32 29), !dbg !9297
  store i32 %call, i32* %ret, align 4, !dbg !9299
  %cmp = icmp slt i32 %call, 0, !dbg !9300
  br i1 %cmp, label %if.then, label %if.end, !dbg !9301

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !9302
  store i32 %3, i32* %retval, align 4, !dbg !9303
  br label %return, !dbg !9303

if.end:                                           ; preds = %entry
  %4 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9304
  %stream_id = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %4, i32 0, i32 12, !dbg !9305
  %5 = load i32, i32* %stream_id, align 4, !dbg !9305
  %extra = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 4, !dbg !9306
  store i32 %5, i32* %extra, align 8, !dbg !9307
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !9308
  %6 = load i8*, i8** %data, align 8, !dbg !9308
  store i8* %6, i8** %p, align 8, !dbg !9309
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.188, i32 0, i32 0)), !dbg !9310
  call void @ff_amf_write_number(i8** %p, double 0.000000e+00), !dbg !9311
  call void @ff_amf_write_null(i8** %p), !dbg !9312
  %7 = load i32, i32* %pause.addr, align 4, !dbg !9313
  call void @ff_amf_write_bool(i8** %p, i32 %7), !dbg !9314
  %8 = load i32, i32* %timestamp.addr, align 4, !dbg !9315
  %conv = uitofp i32 %8 to double, !dbg !9315
  call void @ff_amf_write_number(i8** %p, double %conv), !dbg !9316
  %9 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9317
  %call1 = call i32 @rtmp_send_packet(%struct.RTMPContext* %9, %struct.RTMPPacket* %pkt, i32 1), !dbg !9318
  store i32 %call1, i32* %retval, align 4, !dbg !9319
  br label %return, !dbg !9319

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !9320
  ret i32 %10, !dbg !9320
}

; Function Attrs: nounwind uwtable
define internal i32 @gen_seek(%struct.URLContext* %s, %struct.RTMPContext* %rt, i64 %timestamp) #0 !dbg !9321 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.URLContext*, align 8
  %rt.addr = alloca %struct.RTMPContext*, align 8
  %timestamp.addr = alloca i64, align 8
  %pkt = alloca %struct.RTMPPacket, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.URLContext* %s, %struct.URLContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.URLContext** %s.addr, metadata !9324, metadata !376), !dbg !9325
  store %struct.RTMPContext* %rt, %struct.RTMPContext** %rt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RTMPContext** %rt.addr, metadata !9326, metadata !376), !dbg !9327
  store i64 %timestamp, i64* %timestamp.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timestamp.addr, metadata !9328, metadata !376), !dbg !9329
  call void @llvm.dbg.declare(metadata %struct.RTMPPacket* %pkt, metadata !9330, metadata !376), !dbg !9331
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9332, metadata !376), !dbg !9333
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9334, metadata !376), !dbg !9335
  %0 = load %struct.URLContext*, %struct.URLContext** %s.addr, align 8, !dbg !9336
  %1 = bitcast %struct.URLContext* %0 to i8*, !dbg !9336
  %2 = load i64, i64* %timestamp.addr, align 8, !dbg !9337
  call void (i8*, i32, i8*, ...) @av_log(i8* %1, i32 48, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.191, i32 0, i32 0), i64 %2), !dbg !9338
  %call = call i32 @ff_rtmp_packet_create(%struct.RTMPPacket* %pkt, i32 3, i32 20, i32 0, i32 26), !dbg !9339
  store i32 %call, i32* %ret, align 4, !dbg !9341
  %cmp = icmp slt i32 %call, 0, !dbg !9342
  br i1 %cmp, label %if.then, label %if.end, !dbg !9343

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !9344
  store i32 %3, i32* %retval, align 4, !dbg !9345
  br label %return, !dbg !9345

if.end:                                           ; preds = %entry
  %4 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9346
  %stream_id = getelementptr inbounds %struct.RTMPContext, %struct.RTMPContext* %4, i32 0, i32 12, !dbg !9347
  %5 = load i32, i32* %stream_id, align 4, !dbg !9347
  %extra = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 4, !dbg !9348
  store i32 %5, i32* %extra, align 8, !dbg !9349
  %data = getelementptr inbounds %struct.RTMPPacket, %struct.RTMPPacket* %pkt, i32 0, i32 5, !dbg !9350
  %6 = load i8*, i8** %data, align 8, !dbg !9350
  store i8* %6, i8** %p, align 8, !dbg !9351
  call void @ff_amf_write_string(i8** %p, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.192, i32 0, i32 0)), !dbg !9352
  call void @ff_amf_write_number(i8** %p, double 0.000000e+00), !dbg !9353
  call void @ff_amf_write_null(i8** %p), !dbg !9354
  %7 = load i64, i64* %timestamp.addr, align 8, !dbg !9355
  %conv = sitofp i64 %7 to double, !dbg !9355
  call void @ff_amf_write_number(i8** %p, double %conv), !dbg !9356
  %8 = load %struct.RTMPContext*, %struct.RTMPContext** %rt.addr, align 8, !dbg !9357
  %call1 = call i32 @rtmp_send_packet(%struct.RTMPContext* %8, %struct.RTMPPacket* %pkt, i32 1), !dbg !9358
  store i32 %call1, i32* %retval, align 4, !dbg !9359
  br label %return, !dbg !9359

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !9360
  ret i32 %9, !dbg !9360
}

declare i8* @av_default_item_name(i8*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!370, !371}
!llvm.ident = !{!372}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !107, globals: !139)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a/[inter]libavformat--rtmpproto.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!2 = !{!3, !25, !46, !63, !75, !80, !87, !102}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !4, line: 221, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24}
!6 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!7 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!8 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!9 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!10 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!11 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!12 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!13 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!14 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!15 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!16 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!17 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!18 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!19 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!20 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!21 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!22 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!23 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!24 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !26, line: 29, size: 32, align: 32, elements: !27)
!26 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!27 = !{!28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!28 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!29 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!30 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!31 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!32 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!33 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!34 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!35 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!36 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!37 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!38 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!39 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!40 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!41 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!42 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!43 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!44 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!45 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RTMPPacketType", file: !47, line: 47, size: 32, align: 32, elements: !48)
!47 = !DIFile(filename: "libavformat/rtmppkt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!48 = !{!49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62}
!49 = !DIEnumerator(name: "RTMP_PT_CHUNK_SIZE", value: 1)
!50 = !DIEnumerator(name: "RTMP_PT_BYTES_READ", value: 3)
!51 = !DIEnumerator(name: "RTMP_PT_USER_CONTROL", value: 4)
!52 = !DIEnumerator(name: "RTMP_PT_WINDOW_ACK_SIZE", value: 5)
!53 = !DIEnumerator(name: "RTMP_PT_SET_PEER_BW", value: 6)
!54 = !DIEnumerator(name: "RTMP_PT_AUDIO", value: 8)
!55 = !DIEnumerator(name: "RTMP_PT_VIDEO", value: 9)
!56 = !DIEnumerator(name: "RTMP_PT_FLEX_STREAM", value: 15)
!57 = !DIEnumerator(name: "RTMP_PT_FLEX_OBJECT", value: 16)
!58 = !DIEnumerator(name: "RTMP_PT_FLEX_MESSAGE", value: 17)
!59 = !DIEnumerator(name: "RTMP_PT_NOTIFY", value: 18)
!60 = !DIEnumerator(name: "RTMP_PT_SHARED_OBJ", value: 19)
!61 = !DIEnumerator(name: "RTMP_PT_INVOKE", value: 20)
!62 = !DIEnumerator(name: "RTMP_PT_METADATA", value: 22)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !64, line: 58, size: 32, align: 32, elements: !65)
!64 = !DIFile(filename: "libavformat/rtmpproto.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!65 = !{!66, !67, !68, !69, !70, !71, !72, !73, !74}
!66 = !DIEnumerator(name: "STATE_START", value: 0)
!67 = !DIEnumerator(name: "STATE_HANDSHAKED", value: 1)
!68 = !DIEnumerator(name: "STATE_FCPUBLISH", value: 2)
!69 = !DIEnumerator(name: "STATE_PLAYING", value: 3)
!70 = !DIEnumerator(name: "STATE_SEEKING", value: 4)
!71 = !DIEnumerator(name: "STATE_PUBLISHING", value: 5)
!72 = !DIEnumerator(name: "STATE_RECEIVING", value: 6)
!73 = !DIEnumerator(name: "STATE_SENDING", value: 7)
!74 = !DIEnumerator(name: "STATE_STOPPED", value: 8)
!75 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !76, line: 54, size: 32, align: 32, elements: !77)
!76 = !DIFile(filename: "libavformat/flv.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!77 = !{!78, !79}
!78 = !DIEnumerator(name: "FLV_HEADER_FLAG_HASVIDEO", value: 1)
!79 = !DIEnumerator(name: "FLV_HEADER_FLAG_HASAUDIO", value: 4)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RTMPChannel", file: !47, line: 36, size: 32, align: 32, elements: !81)
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RTMP_NETWORK_CHANNEL", value: 2)
!83 = !DIEnumerator(name: "RTMP_SYSTEM_CHANNEL", value: 3)
!84 = !DIEnumerator(name: "RTMP_AUDIO_CHANNEL", value: 4)
!85 = !DIEnumerator(name: "RTMP_VIDEO_CHANNEL", value: 6)
!86 = !DIEnumerator(name: "RTMP_SOURCE_CHANNEL", value: 8)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !76, line: 123, size: 32, align: 32, elements: !88)
!88 = !{!89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101}
!89 = !DIEnumerator(name: "AMF_DATA_TYPE_NUMBER", value: 0)
!90 = !DIEnumerator(name: "AMF_DATA_TYPE_BOOL", value: 1)
!91 = !DIEnumerator(name: "AMF_DATA_TYPE_STRING", value: 2)
!92 = !DIEnumerator(name: "AMF_DATA_TYPE_OBJECT", value: 3)
!93 = !DIEnumerator(name: "AMF_DATA_TYPE_NULL", value: 5)
!94 = !DIEnumerator(name: "AMF_DATA_TYPE_UNDEFINED", value: 6)
!95 = !DIEnumerator(name: "AMF_DATA_TYPE_REFERENCE", value: 7)
!96 = !DIEnumerator(name: "AMF_DATA_TYPE_MIXEDARRAY", value: 8)
!97 = !DIEnumerator(name: "AMF_DATA_TYPE_OBJECT_END", value: 9)
!98 = !DIEnumerator(name: "AMF_DATA_TYPE_ARRAY", value: 10)
!99 = !DIEnumerator(name: "AMF_DATA_TYPE_DATE", value: 11)
!100 = !DIEnumerator(name: "AMF_DATA_TYPE_LONG_STRING", value: 12)
!101 = !DIEnumerator(name: "AMF_DATA_TYPE_UNSUPPORTED", value: 13)
!102 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FlvTagType", file: !76, line: 59, size: 32, align: 32, elements: !103)
!103 = !{!104, !105, !106}
!104 = !DIEnumerator(name: "FLV_TAG_TYPE_AUDIO", value: 8)
!105 = !DIEnumerator(name: "FLV_TAG_TYPE_VIDEO", value: 9)
!106 = !DIEnumerator(name: "FLV_TAG_TYPE_META", value: 18)
!107 = !{!108, !109, !110, !114, !120, !122, !123, !129, !131, !133, !137}
!108 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!109 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64, align: 64)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !112, line: 48, baseType: !113)
!112 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!113 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64, align: 64)
!115 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !116, line: 221, size: 32, align: 8, elements: !117)
!116 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!117 = !{!118}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !115, file: !116, line: 221, baseType: !119, size: 32, align: 32)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !112, line: 51, baseType: !109)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64, align: 64)
!121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !115)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64, align: 64)
!124 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !116, line: 222, size: 16, align: 8, elements: !125)
!125 = !{!126}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !124, file: !116, line: 222, baseType: !127, size: 16, align: 16)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !112, line: 49, baseType: !128)
!128 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64, align: 64)
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !124)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64, align: 64)
!132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64, align: 64)
!134 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_64", file: !116, line: 220, size: 64, align: 8, elements: !135)
!135 = !{!136}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !134, file: !116, line: 220, baseType: !137, size: 64, align: 64)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !112, line: 55, baseType: !138)
!138 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!139 = !{!140, !345, !346, !347, !348, !349, !350, !354, !358, !359, !365, !366, !367, !368, !369}
!140 = distinct !DIGlobalVariable(name: "ff_rtmp_protocol", scope: !0, file: !64, line: 3140, type: !141, isLocal: false, isDefinition: true, variable: { i8*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* }* @ff_rtmp_protocol)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "URLProtocol", file: !143, line: 100, baseType: !144)
!143 = !DIFile(filename: "libavformat/url.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "URLProtocol", file: !143, line: 54, size: 1600, align: 64, elements: !145)
!145 = !{!146, !150, !263, !272, !277, !281, !286, !292, !296, !297, !301, !305, !306, !312, !313, !314, !315, !316, !317, !318, !319, !338, !339, !340, !344}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !144, file: !143, line: 55, baseType: !147, size: 64, align: 64)
!147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64, align: 64)
!148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !149)
!149 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "url_open", scope: !144, file: !143, line: 56, baseType: !151, size: 64, align: 64, offset: 64)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64, align: 64)
!152 = !DISubroutineType(types: !153)
!153 = !{!108, !154, !147, !108}
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 64, align: 64)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "URLContext", file: !143, line: 52, baseType: !156)
!156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "URLContext", file: !143, line: 38, size: 768, align: 64, elements: !157)
!157 = !{!158, !239, !242, !243, !245, !246, !247, !248, !249, !259, !260, !261, !262}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !156, file: !143, line: 39, baseType: !159, size: 64, align: 64)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64, align: 64)
!160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !161)
!161 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !26, line: 143, baseType: !162)
!162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !26, line: 67, size: 640, align: 64, elements: !163)
!163 = !{!164, !165, !169, !198, !199, !200, !201, !205, !211, !213, !217}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !162, file: !26, line: 72, baseType: !147, size: 64, align: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !162, file: !26, line: 78, baseType: !166, size: 64, align: 64, offset: 64)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64, align: 64)
!167 = !DISubroutineType(types: !168)
!168 = !{!147, !122}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !162, file: !26, line: 85, baseType: !170, size: 64, align: 64, offset: 128)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64, align: 64)
!171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !172)
!172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 246, size: 512, align: 64, elements: !173)
!173 = !{!174, !175, !176, !177, !178, !194, !195, !196, !197}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !172, file: !4, line: 247, baseType: !147, size: 64, align: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !172, file: !4, line: 253, baseType: !147, size: 64, align: 64, offset: 64)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !172, file: !4, line: 259, baseType: !108, size: 32, align: 32, offset: 128)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !172, file: !4, line: 260, baseType: !3, size: 32, align: 32, offset: 160)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !172, file: !4, line: 271, baseType: !179, size: 64, align: 64, offset: 192)
!179 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !172, file: !4, line: 265, size: 64, align: 64, elements: !180)
!180 = !{!181, !184, !186, !187}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !179, file: !4, line: 266, baseType: !182, size: 64, align: 64)
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !112, line: 40, baseType: !183)
!183 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !179, file: !4, line: 267, baseType: !185, size: 64, align: 64)
!185 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !179, file: !4, line: 268, baseType: !147, size: 64, align: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !179, file: !4, line: 270, baseType: !188, size: 64, align: 32)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !189, line: 61, baseType: !190)
!189 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !189, line: 58, size: 64, align: 32, elements: !191)
!191 = !{!192, !193}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !190, file: !189, line: 59, baseType: !108, size: 32, align: 32)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !190, file: !189, line: 60, baseType: !108, size: 32, align: 32, offset: 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !172, file: !4, line: 272, baseType: !185, size: 64, align: 64, offset: 256)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !172, file: !4, line: 273, baseType: !185, size: 64, align: 64, offset: 320)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !172, file: !4, line: 275, baseType: !108, size: 32, align: 32, offset: 384)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !172, file: !4, line: 300, baseType: !147, size: 64, align: 64, offset: 448)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !162, file: !26, line: 93, baseType: !108, size: 32, align: 32, offset: 192)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !162, file: !26, line: 99, baseType: !108, size: 32, align: 32, offset: 224)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !162, file: !26, line: 108, baseType: !108, size: 32, align: 32, offset: 256)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !162, file: !26, line: 113, baseType: !202, size: 64, align: 64, offset: 320)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64, align: 64)
!203 = !DISubroutineType(types: !204)
!204 = !{!122, !122, !122}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !162, file: !26, line: 123, baseType: !206, size: 64, align: 64, offset: 384)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64, align: 64)
!207 = !DISubroutineType(types: !208)
!208 = !{!209, !209}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64, align: 64)
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !162, file: !26, line: 130, baseType: !212, size: 32, align: 32, offset: 448)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !26, line: 48, baseType: !25)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !162, file: !26, line: 136, baseType: !214, size: 64, align: 64, offset: 512)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64, align: 64)
!215 = !DISubroutineType(types: !216)
!216 = !{!212, !122}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !162, file: !26, line: 142, baseType: !218, size: 64, align: 64, offset: 576)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64, align: 64)
!219 = !DISubroutineType(types: !220)
!220 = !{!108, !221, !122, !147, !108}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64, align: 64)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64, align: 64)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 329, size: 128, align: 64, elements: !224)
!224 = !{!225, !237, !238}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !223, file: !4, line: 360, baseType: !226, size: 64, align: 64)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64, align: 64)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !4, line: 324, baseType: !229)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !4, line: 306, size: 384, align: 64, elements: !230)
!230 = !{!231, !232, !233, !234, !235, !236}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !229, file: !4, line: 307, baseType: !147, size: 64, align: 64)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !229, file: !4, line: 313, baseType: !185, size: 64, align: 64, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !229, file: !4, line: 313, baseType: !185, size: 64, align: 64, offset: 128)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !229, file: !4, line: 318, baseType: !185, size: 64, align: 64, offset: 192)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !229, file: !4, line: 318, baseType: !185, size: 64, align: 64, offset: 256)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !229, file: !4, line: 323, baseType: !108, size: 32, align: 32, offset: 320)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !223, file: !4, line: 364, baseType: !108, size: 32, align: 32, offset: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !223, file: !4, line: 368, baseType: !108, size: 32, align: 32, offset: 96)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "prot", scope: !156, file: !143, line: 40, baseType: !240, size: 64, align: 64, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64, align: 64)
!241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !156, file: !143, line: 41, baseType: !122, size: 64, align: 64, offset: 128)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !156, file: !143, line: 42, baseType: !244, size: 64, align: 64, offset: 192)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64, align: 64)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !156, file: !143, line: 43, baseType: !108, size: 32, align: 32, offset: 256)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "max_packet_size", scope: !156, file: !143, line: 44, baseType: !108, size: 32, align: 32, offset: 288)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "is_streamed", scope: !156, file: !143, line: 45, baseType: !108, size: 32, align: 32, offset: 320)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "is_connected", scope: !156, file: !143, line: 46, baseType: !108, size: 32, align: 32, offset: 352)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_callback", scope: !156, file: !143, line: 47, baseType: !250, size: 128, align: 64, offset: 384)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOInterruptCB", file: !251, line: 61, baseType: !252)
!251 = !DIFile(filename: "libavformat/avio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOInterruptCB", file: !251, line: 58, size: 128, align: 64, elements: !253)
!253 = !{!254, !258}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !252, file: !251, line: 59, baseType: !255, size: 64, align: 64)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64, align: 64)
!256 = !DISubroutineType(types: !257)
!257 = !{!108, !122}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !252, file: !251, line: 60, baseType: !122, size: 64, align: 64, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "rw_timeout", scope: !156, file: !143, line: 48, baseType: !182, size: 64, align: 64, offset: 512)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !156, file: !143, line: 49, baseType: !147, size: 64, align: 64, offset: 576)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !156, file: !143, line: 50, baseType: !147, size: 64, align: 64, offset: 640)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "min_packet_size", scope: !156, file: !143, line: 51, baseType: !108, size: 32, align: 32, offset: 704)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "url_open2", scope: !144, file: !143, line: 62, baseType: !264, size: 64, align: 64, offset: 128)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64, align: 64)
!265 = !DISubroutineType(types: !266)
!266 = !{!108, !154, !147, !108, !267}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64, align: 64)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64, align: 64)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !270, line: 86, baseType: !271)
!270 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!271 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !270, line: 86, flags: DIFlagFwdDecl)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "url_accept", scope: !144, file: !143, line: 63, baseType: !273, size: 64, align: 64, offset: 192)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64, align: 64)
!274 = !DISubroutineType(types: !275)
!275 = !{!108, !154, !276}
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64, align: 64)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "url_handshake", scope: !144, file: !143, line: 64, baseType: !278, size: 64, align: 64, offset: 256)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64, align: 64)
!279 = !DISubroutineType(types: !280)
!280 = !{!108, !154}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "url_read", scope: !144, file: !143, line: 78, baseType: !282, size: 64, align: 64, offset: 320)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64, align: 64)
!283 = !DISubroutineType(types: !284)
!284 = !{!108, !154, !285, !108}
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64, align: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "url_write", scope: !144, file: !143, line: 79, baseType: !287, size: 64, align: 64, offset: 384)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64, align: 64)
!288 = !DISubroutineType(types: !289)
!289 = !{!108, !154, !290, !108}
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64, align: 64)
!291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "url_seek", scope: !144, file: !143, line: 80, baseType: !293, size: 64, align: 64, offset: 448)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64, align: 64)
!294 = !DISubroutineType(types: !295)
!295 = !{!182, !154, !182, !108}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "url_close", scope: !144, file: !143, line: 81, baseType: !278, size: 64, align: 64, offset: 512)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "url_read_pause", scope: !144, file: !143, line: 82, baseType: !298, size: 64, align: 64, offset: 576)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64, align: 64)
!299 = !DISubroutineType(types: !300)
!300 = !{!108, !154, !108}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "url_read_seek", scope: !144, file: !143, line: 83, baseType: !302, size: 64, align: 64, offset: 640)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64, align: 64)
!303 = !DISubroutineType(types: !304)
!304 = !{!182, !154, !108, !182, !108}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "url_get_file_handle", scope: !144, file: !143, line: 85, baseType: !278, size: 64, align: 64, offset: 704)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "url_get_multi_file_handle", scope: !144, file: !143, line: 86, baseType: !307, size: 64, align: 64, offset: 768)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64, align: 64)
!308 = !DISubroutineType(types: !309)
!309 = !{!108, !154, !310, !311}
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64, align: 64)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64, align: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "url_get_short_seek", scope: !144, file: !143, line: 88, baseType: !278, size: 64, align: 64, offset: 832)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "url_shutdown", scope: !144, file: !143, line: 89, baseType: !298, size: 64, align: 64, offset: 896)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !144, file: !143, line: 90, baseType: !108, size: 32, align: 32, offset: 960)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_class", scope: !144, file: !143, line: 91, baseType: !159, size: 64, align: 64, offset: 1024)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !144, file: !143, line: 92, baseType: !108, size: 32, align: 32, offset: 1088)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "url_check", scope: !144, file: !143, line: 93, baseType: !298, size: 64, align: 64, offset: 1152)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "url_open_dir", scope: !144, file: !143, line: 94, baseType: !278, size: 64, align: 64, offset: 1216)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "url_read_dir", scope: !144, file: !143, line: 95, baseType: !320, size: 64, align: 64, offset: 1280)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64, align: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{!108, !154, !323}
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64, align: 64)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64, align: 64)
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIODirEntry", file: !251, line: 101, baseType: !326)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIODirEntry", file: !251, line: 86, size: 576, align: 64, elements: !327)
!327 = !{!328, !329, !330, !331, !332, !333, !334, !335, !336, !337}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !326, file: !251, line: 87, baseType: !244, size: 64, align: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !326, file: !251, line: 88, baseType: !108, size: 32, align: 32, offset: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "utf8", scope: !326, file: !251, line: 89, baseType: !108, size: 32, align: 32, offset: 96)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !326, file: !251, line: 91, baseType: !182, size: 64, align: 64, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "modification_timestamp", scope: !326, file: !251, line: 92, baseType: !182, size: 64, align: 64, offset: 192)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "access_timestamp", scope: !326, file: !251, line: 94, baseType: !182, size: 64, align: 64, offset: 256)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "status_change_timestamp", scope: !326, file: !251, line: 96, baseType: !182, size: 64, align: 64, offset: 320)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "user_id", scope: !326, file: !251, line: 98, baseType: !182, size: 64, align: 64, offset: 384)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "group_id", scope: !326, file: !251, line: 99, baseType: !182, size: 64, align: 64, offset: 448)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "filemode", scope: !326, file: !251, line: 100, baseType: !182, size: 64, align: 64, offset: 512)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "url_close_dir", scope: !144, file: !143, line: 96, baseType: !278, size: 64, align: 64, offset: 1344)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "url_delete", scope: !144, file: !143, line: 97, baseType: !278, size: 64, align: 64, offset: 1408)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "url_move", scope: !144, file: !143, line: 98, baseType: !341, size: 64, align: 64, offset: 1472)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64, align: 64)
!342 = !DISubroutineType(types: !343)
!343 = !{!108, !154, !154}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "default_whitelist", scope: !144, file: !143, line: 99, baseType: !147, size: 64, align: 64, offset: 1536)
!345 = distinct !DIGlobalVariable(name: "ff_rtmpe_protocol", scope: !0, file: !64, line: 3141, type: !141, isLocal: false, isDefinition: true, variable: { i8*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* }* @ff_rtmpe_protocol)
!346 = distinct !DIGlobalVariable(name: "ff_rtmps_protocol", scope: !0, file: !64, line: 3142, type: !141, isLocal: false, isDefinition: true, variable: { i8*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* }* @ff_rtmps_protocol)
!347 = distinct !DIGlobalVariable(name: "ff_rtmpt_protocol", scope: !0, file: !64, line: 3143, type: !141, isLocal: false, isDefinition: true, variable: { i8*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* }* @ff_rtmpt_protocol)
!348 = distinct !DIGlobalVariable(name: "ff_rtmpte_protocol", scope: !0, file: !64, line: 3144, type: !141, isLocal: false, isDefinition: true, variable: { i8*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* }* @ff_rtmpte_protocol)
!349 = distinct !DIGlobalVariable(name: "ff_rtmpts_protocol", scope: !0, file: !64, line: 3145, type: !141, isLocal: false, isDefinition: true, variable: { i8*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32, %struct.AVDictionary**)*, i32 (%struct.URLContext*, %struct.URLContext**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i8*, i32)*, i32 (%struct.URLContext*, i8*, i32)*, i64 (%struct.URLContext*, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i64 (%struct.URLContext*, i32, i64, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32**, i32*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, i32)*, i32, %struct.AVClass*, i32, i32 (%struct.URLContext*, i32)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.AVIODirEntry**)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*)*, i32 (%struct.URLContext*, %struct.URLContext*)*, i8* }* @ff_rtmpts_protocol)
!350 = distinct !DIGlobalVariable(name: "rtmp_server_key", scope: !0, file: !64, line: 147, type: !351, isLocal: true, isDefinition: true, variable: [68 x i8]* @rtmp_server_key)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 544, align: 8, elements: !352)
!352 = !{!353}
!353 = !DISubrange(count: 68)
!354 = distinct !DIGlobalVariable(name: "rtmp_player_key", scope: !0, file: !64, line: 136, type: !355, isLocal: true, isDefinition: true, variable: [62 x i8]* @rtmp_player_key)
!355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 496, align: 8, elements: !356)
!356 = !{!357}
!357 = !DISubrange(count: 62)
!358 = distinct !DIGlobalVariable(name: "rtmp_class", scope: !0, file: !64, line: 3140, type: !160, isLocal: true, isDefinition: true, variable: %struct.AVClass* @rtmp_class)
!359 = distinct !DIGlobalVariable(name: "rtmp_options", scope: !0, file: !64, line: 3094, type: !360, isLocal: true, isDefinition: true, variable: <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @rtmp_options)
!360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !361, size: 10752, align: 64, elements: !363)
!361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !362)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !4, line: 301, baseType: !172)
!363 = !{!364}
!364 = !DISubrange(count: 21)
!365 = distinct !DIGlobalVariable(name: "rtmpe_class", scope: !0, file: !64, line: 3141, type: !160, isLocal: true, isDefinition: true, variable: %struct.AVClass* @rtmpe_class)
!366 = distinct !DIGlobalVariable(name: "rtmps_class", scope: !0, file: !64, line: 3142, type: !160, isLocal: true, isDefinition: true, variable: %struct.AVClass* @rtmps_class)
!367 = distinct !DIGlobalVariable(name: "rtmpt_class", scope: !0, file: !64, line: 3143, type: !160, isLocal: true, isDefinition: true, variable: %struct.AVClass* @rtmpt_class)
!368 = distinct !DIGlobalVariable(name: "rtmpte_class", scope: !0, file: !64, line: 3144, type: !160, isLocal: true, isDefinition: true, variable: %struct.AVClass* @rtmpte_class)
!369 = distinct !DIGlobalVariable(name: "rtmpts_class", scope: !0, file: !64, line: 3145, type: !160, isLocal: true, isDefinition: true, variable: %struct.AVClass* @rtmpts_class)
!370 = !{i32 2, !"Dwarf Version", i32 4}
!371 = !{i32 2, !"Debug Info Version", i32 3}
!372 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!373 = distinct !DISubprogram(name: "rtmp_open", scope: !64, file: !64, line: 2592, type: !265, isLocal: true, isDefinition: true, scopeLine: 2593, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!374 = !{}
!375 = !DILocalVariable(name: "s", arg: 1, scope: !373, file: !64, line: 2592, type: !154)
!376 = !DIExpression()
!377 = !DILocation(line: 2592, column: 34, scope: !373)
!378 = !DILocalVariable(name: "uri", arg: 2, scope: !373, file: !64, line: 2592, type: !147)
!379 = !DILocation(line: 2592, column: 49, scope: !373)
!380 = !DILocalVariable(name: "flags", arg: 3, scope: !373, file: !64, line: 2592, type: !108)
!381 = !DILocation(line: 2592, column: 58, scope: !373)
!382 = !DILocalVariable(name: "opts", arg: 4, scope: !373, file: !64, line: 2592, type: !267)
!383 = !DILocation(line: 2592, column: 80, scope: !373)
!384 = !DILocalVariable(name: "rt", scope: !373, file: !64, line: 2594, type: !385)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64, align: 64)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "RTMPContext", file: !64, line: 132, baseType: !387)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RTMPContext", file: !64, line: 76, size: 8064, align: 64, elements: !388)
!388 = !{!389, !390, !391, !409, !411, !412, !413, !414, !415, !416, !417, !418, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !451, !452, !453, !454, !455, !456, !457, !464, !465, !466, !467, !468, !469, !470, !474, !475, !479, !480}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !387, file: !64, line: 77, baseType: !159, size: 64, align: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !387, file: !64, line: 78, baseType: !154, size: 64, align: 64, offset: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pkt", scope: !387, file: !64, line: 79, baseType: !392, size: 128, align: 64, offset: 128)
!392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !393, size: 128, align: 64, elements: !407)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64, align: 64)
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "RTMPPacket", file: !47, line: 87, baseType: !395)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RTMPPacket", file: !47, line: 77, size: 384, align: 64, elements: !396)
!396 = !{!397, !398, !400, !401, !402, !403, !404, !405, !406}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "channel_id", scope: !395, file: !47, line: 78, baseType: !108, size: 32, align: 32)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !395, file: !47, line: 79, baseType: !399, size: 32, align: 32, offset: 32)
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "RTMPPacketType", file: !47, line: 62, baseType: !46)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !395, file: !47, line: 80, baseType: !119, size: 32, align: 32, offset: 64)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "ts_field", scope: !395, file: !47, line: 81, baseType: !119, size: 32, align: 32, offset: 96)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !395, file: !47, line: 82, baseType: !119, size: 32, align: 32, offset: 128)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !395, file: !47, line: 83, baseType: !110, size: 64, align: 64, offset: 192)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !395, file: !47, line: 84, baseType: !108, size: 32, align: 32, offset: 256)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !395, file: !47, line: 85, baseType: !108, size: 32, align: 32, offset: 288)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !395, file: !47, line: 86, baseType: !108, size: 32, align: 32, offset: 320)
!407 = !{!408}
!408 = !DISubrange(count: 2)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "nb_prev_pkt", scope: !387, file: !64, line: 80, baseType: !410, size: 64, align: 32, offset: 256)
!410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, align: 32, elements: !407)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "in_chunk_size", scope: !387, file: !64, line: 81, baseType: !108, size: 32, align: 32, offset: 320)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "out_chunk_size", scope: !387, file: !64, line: 82, baseType: !108, size: 32, align: 32, offset: 352)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "is_input", scope: !387, file: !64, line: 83, baseType: !108, size: 32, align: 32, offset: 384)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "playpath", scope: !387, file: !64, line: 84, baseType: !244, size: 64, align: 64, offset: 448)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !387, file: !64, line: 85, baseType: !108, size: 32, align: 32, offset: 512)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "app", scope: !387, file: !64, line: 86, baseType: !244, size: 64, align: 64, offset: 576)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !387, file: !64, line: 87, baseType: !244, size: 64, align: 64, offset: 640)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !387, file: !64, line: 88, baseType: !419, size: 32, align: 32, offset: 704)
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClientState", file: !64, line: 68, baseType: !63)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !387, file: !64, line: 89, baseType: !108, size: 32, align: 32, offset: 736)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "flv_data", scope: !387, file: !64, line: 90, baseType: !110, size: 64, align: 64, offset: 768)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "flv_size", scope: !387, file: !64, line: 91, baseType: !108, size: 32, align: 32, offset: 832)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "flv_off", scope: !387, file: !64, line: 92, baseType: !108, size: 32, align: 32, offset: 864)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "flv_nb_packets", scope: !387, file: !64, line: 93, baseType: !108, size: 32, align: 32, offset: 896)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "out_pkt", scope: !387, file: !64, line: 94, baseType: !394, size: 384, align: 64, offset: 960)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "receive_report_size", scope: !387, file: !64, line: 95, baseType: !119, size: 32, align: 32, offset: 1344)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_read", scope: !387, file: !64, line: 96, baseType: !137, size: 64, align: 64, offset: 1408)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "last_bytes_read", scope: !387, file: !64, line: 97, baseType: !137, size: 64, align: 64, offset: 1472)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "last_timestamp", scope: !387, file: !64, line: 98, baseType: !119, size: 32, align: 32, offset: 1536)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bytes", scope: !387, file: !64, line: 99, baseType: !108, size: 32, align: 32, offset: 1568)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "has_audio", scope: !387, file: !64, line: 100, baseType: !108, size: 32, align: 32, offset: 1600)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "has_video", scope: !387, file: !64, line: 101, baseType: !108, size: 32, align: 32, offset: 1632)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "received_metadata", scope: !387, file: !64, line: 102, baseType: !108, size: 32, align: 32, offset: 1664)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "flv_header", scope: !387, file: !64, line: 103, baseType: !435, size: 88, align: 8, offset: 1696)
!435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 88, align: 8, elements: !436)
!436 = !{!437}
!437 = !DISubrange(count: 11)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "flv_header_bytes", scope: !387, file: !64, line: 104, baseType: !108, size: 32, align: 32, offset: 1792)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invokes", scope: !387, file: !64, line: 105, baseType: !108, size: 32, align: 32, offset: 1824)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "tcurl", scope: !387, file: !64, line: 106, baseType: !244, size: 64, align: 64, offset: 1856)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "flashver", scope: !387, file: !64, line: 107, baseType: !244, size: 64, align: 64, offset: 1920)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "swfhash", scope: !387, file: !64, line: 108, baseType: !244, size: 64, align: 64, offset: 1984)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "swfhash_len", scope: !387, file: !64, line: 109, baseType: !108, size: 32, align: 32, offset: 2048)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "swfsize", scope: !387, file: !64, line: 110, baseType: !108, size: 32, align: 32, offset: 2080)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "swfurl", scope: !387, file: !64, line: 111, baseType: !244, size: 64, align: 64, offset: 2112)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "swfverify", scope: !387, file: !64, line: 112, baseType: !244, size: 64, align: 64, offset: 2176)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "swfverification", scope: !387, file: !64, line: 113, baseType: !448, size: 336, align: 8, offset: 2240)
!448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 336, align: 8, elements: !449)
!449 = !{!450}
!450 = !DISubrange(count: 42)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "pageurl", scope: !387, file: !64, line: 114, baseType: !244, size: 64, align: 64, offset: 2624)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "subscribe", scope: !387, file: !64, line: 115, baseType: !244, size: 64, align: 64, offset: 2688)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "max_sent_unacked", scope: !387, file: !64, line: 116, baseType: !108, size: 32, align: 32, offset: 2752)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "client_buffer_time", scope: !387, file: !64, line: 117, baseType: !108, size: 32, align: 32, offset: 2784)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "flush_interval", scope: !387, file: !64, line: 118, baseType: !108, size: 32, align: 32, offset: 2816)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "encrypted", scope: !387, file: !64, line: 119, baseType: !108, size: 32, align: 32, offset: 2848)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "tracked_methods", scope: !387, file: !64, line: 120, baseType: !458, size: 64, align: 64, offset: 2880)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64, align: 64)
!459 = !DIDerivedType(tag: DW_TAG_typedef, name: "TrackedMethod", file: !64, line: 73, baseType: !460)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TrackedMethod", file: !64, line: 70, size: 128, align: 64, elements: !461)
!461 = !{!462, !463}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !460, file: !64, line: 71, baseType: !244, size: 64, align: 64)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !460, file: !64, line: 72, baseType: !108, size: 32, align: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "nb_tracked_methods", scope: !387, file: !64, line: 121, baseType: !108, size: 32, align: 32, offset: 2944)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "tracked_methods_size", scope: !387, file: !64, line: 122, baseType: !108, size: 32, align: 32, offset: 2976)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !387, file: !64, line: 123, baseType: !108, size: 32, align: 32, offset: 3008)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "listen_timeout", scope: !387, file: !64, line: 124, baseType: !108, size: 32, align: 32, offset: 3040)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "nb_streamid", scope: !387, file: !64, line: 125, baseType: !108, size: 32, align: 32, offset: 3072)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !387, file: !64, line: 126, baseType: !185, size: 64, align: 64, offset: 3136)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "username", scope: !387, file: !64, line: 127, baseType: !471, size: 400, align: 8, offset: 3200)
!471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 400, align: 8, elements: !472)
!472 = !{!473}
!473 = !DISubrange(count: 50)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "password", scope: !387, file: !64, line: 128, baseType: !471, size: 400, align: 8, offset: 3600)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "auth_params", scope: !387, file: !64, line: 129, baseType: !476, size: 4000, align: 8, offset: 4000)
!476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 4000, align: 8, elements: !477)
!477 = !{!478}
!478 = !DISubrange(count: 500)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "do_reconnect", scope: !387, file: !64, line: 130, baseType: !108, size: 32, align: 32, offset: 8000)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "auth_tried", scope: !387, file: !64, line: 131, baseType: !108, size: 32, align: 32, offset: 8032)
!481 = !DILocation(line: 2594, column: 18, scope: !373)
!482 = !DILocation(line: 2594, column: 23, scope: !373)
!483 = !DILocation(line: 2594, column: 26, scope: !373)
!484 = !DILocalVariable(name: "proto", scope: !373, file: !64, line: 2595, type: !485)
!485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 64, align: 8, elements: !486)
!486 = !{!487}
!487 = !DISubrange(count: 8)
!488 = !DILocation(line: 2595, column: 10, scope: !373)
!489 = !DILocalVariable(name: "hostname", scope: !373, file: !64, line: 2595, type: !490)
!490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 2048, align: 8, elements: !491)
!491 = !{!492}
!492 = !DISubrange(count: 256)
!493 = !DILocation(line: 2595, column: 20, scope: !373)
!494 = !DILocalVariable(name: "path", scope: !373, file: !64, line: 2595, type: !495)
!495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 8192, align: 8, elements: !496)
!496 = !{!497}
!497 = !DISubrange(count: 1024)
!498 = !DILocation(line: 2595, column: 35, scope: !373)
!499 = !DILocalVariable(name: "auth", scope: !373, file: !64, line: 2595, type: !500)
!500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 800, align: 8, elements: !501)
!501 = !{!502}
!502 = !DISubrange(count: 100)
!503 = !DILocation(line: 2595, column: 47, scope: !373)
!504 = !DILocalVariable(name: "fname", scope: !373, file: !64, line: 2595, type: !244)
!505 = !DILocation(line: 2595, column: 59, scope: !373)
!506 = !DILocalVariable(name: "old_app", scope: !373, file: !64, line: 2596, type: !244)
!507 = !DILocation(line: 2596, column: 11, scope: !373)
!508 = !DILocalVariable(name: "qmark", scope: !373, file: !64, line: 2596, type: !244)
!509 = !DILocation(line: 2596, column: 21, scope: !373)
!510 = !DILocalVariable(name: "n", scope: !373, file: !64, line: 2596, type: !244)
!511 = !DILocation(line: 2596, column: 29, scope: !373)
!512 = !DILocalVariable(name: "fname_buffer", scope: !373, file: !64, line: 2596, type: !495)
!513 = !DILocation(line: 2596, column: 32, scope: !373)
!514 = !DILocalVariable(name: "buf", scope: !373, file: !64, line: 2597, type: !515)
!515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 16384, align: 8, elements: !516)
!516 = !{!517}
!517 = !DISubrange(count: 2048)
!518 = !DILocation(line: 2597, column: 13, scope: !373)
!519 = !DILocalVariable(name: "port", scope: !373, file: !64, line: 2598, type: !108)
!520 = !DILocation(line: 2598, column: 9, scope: !373)
!521 = !DILocalVariable(name: "ret", scope: !373, file: !64, line: 2599, type: !108)
!522 = !DILocation(line: 2599, column: 9, scope: !373)
!523 = !DILocation(line: 2601, column: 9, scope: !524)
!524 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2601, column: 9)
!525 = !DILocation(line: 2601, column: 13, scope: !524)
!526 = !DILocation(line: 2601, column: 28, scope: !524)
!527 = !DILocation(line: 2601, column: 9, scope: !373)
!528 = !DILocation(line: 2602, column: 9, scope: !524)
!529 = !DILocation(line: 2602, column: 13, scope: !524)
!530 = !DILocation(line: 2602, column: 20, scope: !524)
!531 = !DILocation(line: 2604, column: 22, scope: !373)
!532 = !DILocation(line: 2604, column: 28, scope: !373)
!533 = !DILocation(line: 2604, column: 20, scope: !373)
!534 = !DILocation(line: 2604, column: 5, scope: !373)
!535 = !DILocation(line: 2604, column: 9, scope: !373)
!536 = !DILocation(line: 2604, column: 18, scope: !373)
!537 = !DILocation(line: 2606, column: 18, scope: !373)
!538 = !DILocation(line: 2606, column: 40, scope: !373)
!539 = !DILocation(line: 2607, column: 18, scope: !373)
!540 = !DILocation(line: 2608, column: 18, scope: !373)
!541 = !DILocation(line: 2608, column: 38, scope: !373)
!542 = !DILocation(line: 2608, column: 41, scope: !373)
!543 = !DILocation(line: 2606, column: 5, scope: !373)
!544 = !DILocation(line: 2610, column: 16, scope: !373)
!545 = !DILocation(line: 2610, column: 9, scope: !373)
!546 = !DILocation(line: 2610, column: 7, scope: !373)
!547 = !DILocation(line: 2611, column: 9, scope: !548)
!548 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2611, column: 9)
!549 = !DILocation(line: 2611, column: 9, scope: !373)
!550 = !DILocation(line: 2612, column: 16, scope: !551)
!551 = distinct !DILexicalBlock(scope: !548, file: !64, line: 2611, column: 12)
!552 = !DILocation(line: 2612, column: 9, scope: !551)
!553 = !DILocation(line: 2616, column: 10, scope: !551)
!554 = !DILocation(line: 2616, column: 12, scope: !551)
!555 = !DILocation(line: 2617, column: 5, scope: !551)
!556 = !DILocation(line: 2619, column: 9, scope: !557)
!557 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2619, column: 9)
!558 = !DILocation(line: 2619, column: 9, scope: !373)
!559 = !DILocalVariable(name: "ptr", scope: !560, file: !64, line: 2620, type: !244)
!560 = distinct !DILexicalBlock(scope: !557, file: !64, line: 2619, column: 18)
!561 = !DILocation(line: 2620, column: 15, scope: !560)
!562 = !DILocation(line: 2620, column: 28, scope: !560)
!563 = !DILocation(line: 2620, column: 21, scope: !560)
!564 = !DILocation(line: 2621, column: 13, scope: !565)
!565 = distinct !DILexicalBlock(scope: !560, file: !64, line: 2621, column: 13)
!566 = !DILocation(line: 2621, column: 13, scope: !560)
!567 = !DILocation(line: 2622, column: 14, scope: !568)
!568 = distinct !DILexicalBlock(scope: !565, file: !64, line: 2621, column: 18)
!569 = !DILocation(line: 2622, column: 18, scope: !568)
!570 = !DILocation(line: 2623, column: 24, scope: !568)
!571 = !DILocation(line: 2623, column: 28, scope: !568)
!572 = !DILocation(line: 2623, column: 38, scope: !568)
!573 = !DILocation(line: 2623, column: 13, scope: !568)
!574 = !DILocation(line: 2624, column: 24, scope: !568)
!575 = !DILocation(line: 2624, column: 28, scope: !568)
!576 = !DILocation(line: 2624, column: 38, scope: !568)
!577 = !DILocation(line: 2624, column: 42, scope: !568)
!578 = !DILocation(line: 2624, column: 13, scope: !568)
!579 = !DILocation(line: 2625, column: 9, scope: !568)
!580 = !DILocation(line: 2626, column: 5, scope: !560)
!581 = !DILocation(line: 2628, column: 9, scope: !582)
!582 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2628, column: 9)
!583 = !DILocation(line: 2628, column: 13, scope: !582)
!584 = !DILocation(line: 2628, column: 20, scope: !582)
!585 = !DILocation(line: 2628, column: 30, scope: !586)
!586 = !DILexicalBlockFile(scope: !582, file: !64, discriminator: 1)
!587 = !DILocation(line: 2628, column: 23, scope: !586)
!588 = !DILocation(line: 2628, column: 9, scope: !586)
!589 = !DILocation(line: 2629, column: 16, scope: !590)
!590 = distinct !DILexicalBlock(scope: !582, file: !64, line: 2628, column: 46)
!591 = !DILocation(line: 2630, column: 16, scope: !590)
!592 = !DILocation(line: 2629, column: 9, scope: !590)
!593 = !DILocation(line: 2631, column: 9, scope: !590)
!594 = !DILocation(line: 2633, column: 17, scope: !595)
!595 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2633, column: 9)
!596 = !DILocation(line: 2633, column: 10, scope: !595)
!597 = !DILocation(line: 2633, column: 33, scope: !595)
!598 = !DILocation(line: 2633, column: 44, scope: !599)
!599 = !DILexicalBlockFile(scope: !595, file: !64, discriminator: 1)
!600 = !DILocation(line: 2633, column: 37, scope: !599)
!601 = !DILocation(line: 2633, column: 9, scope: !599)
!602 = !DILocation(line: 2634, column: 21, scope: !603)
!603 = distinct !DILexicalBlock(scope: !604, file: !64, line: 2634, column: 13)
!604 = distinct !DILexicalBlock(scope: !595, file: !64, line: 2633, column: 62)
!605 = !DILocation(line: 2634, column: 14, scope: !603)
!606 = !DILocation(line: 2634, column: 13, scope: !604)
!607 = !DILocation(line: 2635, column: 25, scope: !603)
!608 = !DILocation(line: 2635, column: 13, scope: !603)
!609 = !DILocation(line: 2638, column: 21, scope: !604)
!610 = !DILocation(line: 2638, column: 58, scope: !604)
!611 = !DILocation(line: 2638, column: 68, scope: !604)
!612 = !DILocation(line: 2638, column: 9, scope: !604)
!613 = !DILocation(line: 2639, column: 5, scope: !604)
!614 = !DILocation(line: 2639, column: 24, scope: !615)
!615 = !DILexicalBlockFile(scope: !616, file: !64, discriminator: 1)
!616 = distinct !DILexicalBlock(scope: !595, file: !64, line: 2639, column: 16)
!617 = !DILocation(line: 2639, column: 17, scope: !615)
!618 = !DILocation(line: 2639, column: 16, scope: !615)
!619 = !DILocation(line: 2641, column: 13, scope: !620)
!620 = distinct !DILexicalBlock(scope: !621, file: !64, line: 2641, column: 13)
!621 = distinct !DILexicalBlock(scope: !616, file: !64, line: 2639, column: 41)
!622 = !DILocation(line: 2641, column: 18, scope: !620)
!623 = !DILocation(line: 2641, column: 13, scope: !621)
!624 = !DILocation(line: 2642, column: 18, scope: !620)
!625 = !DILocation(line: 2642, column: 13, scope: !620)
!626 = !DILocation(line: 2643, column: 21, scope: !621)
!627 = !DILocation(line: 2643, column: 51, scope: !621)
!628 = !DILocation(line: 2643, column: 61, scope: !621)
!629 = !DILocation(line: 2643, column: 9, scope: !621)
!630 = !DILocation(line: 2644, column: 5, scope: !621)
!631 = !DILocation(line: 2644, column: 24, scope: !632)
!632 = !DILexicalBlockFile(scope: !633, file: !64, discriminator: 1)
!633 = distinct !DILexicalBlock(scope: !616, file: !64, line: 2644, column: 16)
!634 = !DILocation(line: 2644, column: 17, scope: !632)
!635 = !DILocation(line: 2644, column: 40, scope: !632)
!636 = !DILocation(line: 2644, column: 52, scope: !637)
!637 = !DILexicalBlockFile(scope: !633, file: !64, discriminator: 2)
!638 = !DILocation(line: 2644, column: 45, scope: !637)
!639 = !DILocation(line: 2644, column: 16, scope: !637)
!640 = !DILocation(line: 2645, column: 21, scope: !641)
!641 = distinct !DILexicalBlock(scope: !642, file: !64, line: 2645, column: 13)
!642 = distinct !DILexicalBlock(scope: !633, file: !64, line: 2644, column: 71)
!643 = !DILocation(line: 2645, column: 14, scope: !641)
!644 = !DILocation(line: 2645, column: 13, scope: !642)
!645 = !DILocation(line: 2646, column: 25, scope: !641)
!646 = !DILocation(line: 2646, column: 13, scope: !641)
!647 = !DILocation(line: 2649, column: 21, scope: !642)
!648 = !DILocation(line: 2649, column: 59, scope: !642)
!649 = !DILocation(line: 2649, column: 69, scope: !642)
!650 = !DILocation(line: 2649, column: 9, scope: !642)
!651 = !DILocation(line: 2650, column: 9, scope: !642)
!652 = !DILocation(line: 2650, column: 13, scope: !642)
!653 = !DILocation(line: 2650, column: 23, scope: !642)
!654 = !DILocation(line: 2651, column: 5, scope: !642)
!655 = !DILocation(line: 2653, column: 13, scope: !656)
!656 = distinct !DILexicalBlock(scope: !657, file: !64, line: 2653, column: 13)
!657 = distinct !DILexicalBlock(scope: !633, file: !64, line: 2651, column: 12)
!658 = !DILocation(line: 2653, column: 18, scope: !656)
!659 = !DILocation(line: 2653, column: 13, scope: !657)
!660 = !DILocation(line: 2654, column: 18, scope: !656)
!661 = !DILocation(line: 2654, column: 13, scope: !656)
!662 = !DILocation(line: 2655, column: 13, scope: !663)
!663 = distinct !DILexicalBlock(scope: !657, file: !64, line: 2655, column: 13)
!664 = !DILocation(line: 2655, column: 17, scope: !663)
!665 = !DILocation(line: 2655, column: 13, scope: !657)
!666 = !DILocation(line: 2656, column: 25, scope: !663)
!667 = !DILocation(line: 2656, column: 55, scope: !663)
!668 = !DILocation(line: 2656, column: 65, scope: !663)
!669 = !DILocation(line: 2658, column: 25, scope: !663)
!670 = !DILocation(line: 2658, column: 29, scope: !663)
!671 = !DILocation(line: 2658, column: 44, scope: !663)
!672 = !DILocation(line: 2656, column: 13, scope: !663)
!673 = !DILocation(line: 2660, column: 25, scope: !663)
!674 = !DILocation(line: 2660, column: 55, scope: !663)
!675 = !DILocation(line: 2660, column: 65, scope: !663)
!676 = !DILocation(line: 2660, column: 13, scope: !663)
!677 = !DILocation(line: 2633, column: 59, scope: !678)
!678 = !DILexicalBlockFile(scope: !595, file: !64, discriminator: 2)
!679 = !DILocation(line: 2664, column: 38, scope: !680)
!680 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2664, column: 9)
!681 = !DILocation(line: 2664, column: 42, scope: !680)
!682 = !DILocation(line: 2664, column: 50, scope: !680)
!683 = !DILocation(line: 2665, column: 38, scope: !680)
!684 = !DILocation(line: 2665, column: 41, scope: !680)
!685 = !DILocation(line: 2665, column: 61, scope: !680)
!686 = !DILocation(line: 2666, column: 37, scope: !680)
!687 = !DILocation(line: 2666, column: 40, scope: !680)
!688 = !DILocation(line: 2666, column: 60, scope: !680)
!689 = !DILocation(line: 2666, column: 63, scope: !680)
!690 = !DILocation(line: 2666, column: 83, scope: !680)
!691 = !DILocation(line: 2664, column: 16, scope: !680)
!692 = !DILocation(line: 2664, column: 14, scope: !680)
!693 = !DILocation(line: 2666, column: 87, scope: !680)
!694 = !DILocation(line: 2664, column: 9, scope: !373)
!695 = !DILocation(line: 2667, column: 16, scope: !696)
!696 = distinct !DILexicalBlock(scope: !680, file: !64, line: 2666, column: 92)
!697 = !DILocation(line: 2667, column: 55, scope: !696)
!698 = !DILocation(line: 2667, column: 9, scope: !696)
!699 = !DILocation(line: 2668, column: 9, scope: !696)
!700 = !DILocation(line: 2671, column: 9, scope: !701)
!701 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2671, column: 9)
!702 = !DILocation(line: 2671, column: 13, scope: !701)
!703 = !DILocation(line: 2671, column: 9, scope: !373)
!704 = !DILocation(line: 2672, column: 38, scope: !705)
!705 = distinct !DILexicalBlock(scope: !706, file: !64, line: 2672, column: 13)
!706 = distinct !DILexicalBlock(scope: !701, file: !64, line: 2671, column: 24)
!707 = !DILocation(line: 2672, column: 20, scope: !705)
!708 = !DILocation(line: 2672, column: 18, scope: !705)
!709 = !DILocation(line: 2672, column: 42, scope: !705)
!710 = !DILocation(line: 2672, column: 13, scope: !706)
!711 = !DILocation(line: 2673, column: 13, scope: !705)
!712 = !DILocation(line: 2674, column: 5, scope: !706)
!713 = !DILocation(line: 2676, column: 5, scope: !373)
!714 = !DILocation(line: 2676, column: 9, scope: !373)
!715 = !DILocation(line: 2676, column: 15, scope: !373)
!716 = !DILocation(line: 2677, column: 10, scope: !717)
!717 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2677, column: 9)
!718 = !DILocation(line: 2677, column: 14, scope: !717)
!719 = !DILocation(line: 2677, column: 21, scope: !717)
!720 = !DILocation(line: 2677, column: 46, scope: !721)
!721 = !DILexicalBlockFile(scope: !717, file: !64, discriminator: 1)
!722 = !DILocation(line: 2677, column: 49, scope: !721)
!723 = !DILocation(line: 2677, column: 31, scope: !721)
!724 = !DILocation(line: 2677, column: 29, scope: !721)
!725 = !DILocation(line: 2677, column: 54, scope: !721)
!726 = !DILocation(line: 2677, column: 9, scope: !721)
!727 = !DILocation(line: 2678, column: 9, scope: !717)
!728 = !DILocation(line: 2679, column: 9, scope: !729)
!729 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2679, column: 9)
!730 = !DILocation(line: 2679, column: 13, scope: !729)
!731 = !DILocation(line: 2679, column: 20, scope: !729)
!732 = !DILocation(line: 2679, column: 52, scope: !733)
!733 = !DILexicalBlockFile(scope: !729, file: !64, discriminator: 1)
!734 = !DILocation(line: 2679, column: 55, scope: !733)
!735 = !DILocation(line: 2679, column: 30, scope: !733)
!736 = !DILocation(line: 2679, column: 28, scope: !733)
!737 = !DILocation(line: 2679, column: 60, scope: !733)
!738 = !DILocation(line: 2679, column: 9, scope: !733)
!739 = !DILocation(line: 2680, column: 9, scope: !729)
!740 = !DILocation(line: 2682, column: 5, scope: !373)
!741 = !DILocation(line: 2682, column: 9, scope: !373)
!742 = !DILocation(line: 2682, column: 24, scope: !373)
!743 = !DILocation(line: 2683, column: 5, scope: !373)
!744 = !DILocation(line: 2683, column: 9, scope: !373)
!745 = !DILocation(line: 2683, column: 23, scope: !373)
!746 = !DILocation(line: 2684, column: 5, scope: !373)
!747 = !DILocation(line: 2684, column: 9, scope: !373)
!748 = !DILocation(line: 2684, column: 15, scope: !373)
!749 = !DILocation(line: 2687, column: 15, scope: !373)
!750 = !DILocation(line: 2687, column: 19, scope: !373)
!751 = !DILocation(line: 2687, column: 13, scope: !373)
!752 = !DILocation(line: 2689, column: 15, scope: !373)
!753 = !DILocation(line: 2689, column: 5, scope: !373)
!754 = !DILocation(line: 2689, column: 9, scope: !373)
!755 = !DILocation(line: 2689, column: 13, scope: !373)
!756 = !DILocation(line: 2690, column: 10, scope: !757)
!757 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2690, column: 9)
!758 = !DILocation(line: 2690, column: 14, scope: !757)
!759 = !DILocation(line: 2690, column: 9, scope: !373)
!760 = !DILocation(line: 2691, column: 13, scope: !761)
!761 = distinct !DILexicalBlock(scope: !757, file: !64, line: 2690, column: 19)
!762 = !DILocation(line: 2692, column: 9, scope: !761)
!763 = !DILocation(line: 2696, column: 20, scope: !373)
!764 = !DILocation(line: 2696, column: 13, scope: !373)
!765 = !DILocation(line: 2696, column: 11, scope: !373)
!766 = !DILocation(line: 2697, column: 9, scope: !767)
!767 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2697, column: 9)
!768 = !DILocation(line: 2697, column: 15, scope: !767)
!769 = !DILocation(line: 2697, column: 25, scope: !770)
!770 = !DILexicalBlockFile(scope: !767, file: !64, discriminator: 1)
!771 = !DILocation(line: 2697, column: 18, scope: !770)
!772 = !DILocation(line: 2697, column: 9, scope: !770)
!773 = !DILocalVariable(name: "amp", scope: !774, file: !64, line: 2698, type: !244)
!774 = distinct !DILexicalBlock(scope: !767, file: !64, line: 2697, column: 43)
!775 = !DILocation(line: 2698, column: 15, scope: !774)
!776 = !DILocation(line: 2700, column: 20, scope: !774)
!777 = !DILocation(line: 2700, column: 24, scope: !774)
!778 = !DILocation(line: 2700, column: 29, scope: !774)
!779 = !DILocation(line: 2700, column: 34, scope: !774)
!780 = !DILocation(line: 2700, column: 9, scope: !774)
!781 = !DILocation(line: 2701, column: 24, scope: !774)
!782 = !DILocation(line: 2701, column: 17, scope: !774)
!783 = !DILocation(line: 2701, column: 40, scope: !774)
!784 = !DILocation(line: 2701, column: 15, scope: !774)
!785 = !DILocation(line: 2703, column: 22, scope: !774)
!786 = !DILocation(line: 2703, column: 15, scope: !774)
!787 = !DILocation(line: 2703, column: 13, scope: !774)
!788 = !DILocation(line: 2704, column: 13, scope: !789)
!789 = distinct !DILexicalBlock(scope: !774, file: !64, line: 2704, column: 13)
!790 = !DILocation(line: 2704, column: 13, scope: !774)
!791 = !DILocation(line: 2705, column: 24, scope: !792)
!792 = distinct !DILexicalBlock(scope: !789, file: !64, line: 2704, column: 18)
!793 = !DILocation(line: 2705, column: 38, scope: !792)
!794 = !DILocation(line: 2705, column: 47, scope: !792)
!795 = !DILocation(line: 2705, column: 53, scope: !792)
!796 = !DILocation(line: 2705, column: 51, scope: !792)
!797 = !DILocation(line: 2705, column: 59, scope: !792)
!798 = !DILocation(line: 2705, column: 64, scope: !792)
!799 = !DILocation(line: 2705, column: 46, scope: !792)
!800 = !DILocation(line: 2705, column: 46, scope: !801)
!801 = !DILexicalBlockFile(scope: !792, file: !64, discriminator: 1)
!802 = !DILocation(line: 2705, column: 117, scope: !803)
!803 = !DILexicalBlockFile(scope: !792, file: !64, discriminator: 2)
!804 = !DILocation(line: 2705, column: 123, scope: !803)
!805 = !DILocation(line: 2705, column: 121, scope: !803)
!806 = !DILocation(line: 2705, column: 129, scope: !803)
!807 = !DILocation(line: 2705, column: 46, scope: !803)
!808 = !DILocation(line: 2705, column: 46, scope: !809)
!809 = !DILexicalBlockFile(scope: !792, file: !64, discriminator: 3)
!810 = !DILocation(line: 2705, column: 13, scope: !809)
!811 = !DILocation(line: 2707, column: 21, scope: !792)
!812 = !DILocation(line: 2707, column: 19, scope: !792)
!813 = !DILocation(line: 2708, column: 9, scope: !792)
!814 = !DILocation(line: 2709, column: 5, scope: !774)
!815 = !DILocation(line: 2709, column: 25, scope: !816)
!816 = !DILexicalBlockFile(scope: !817, file: !64, discriminator: 1)
!817 = distinct !DILexicalBlock(scope: !767, file: !64, line: 2709, column: 16)
!818 = !DILocation(line: 2709, column: 17, scope: !816)
!819 = !DILocation(line: 2709, column: 16, scope: !816)
!820 = !DILocation(line: 2710, column: 17, scope: !821)
!821 = distinct !DILexicalBlock(scope: !817, file: !64, line: 2709, column: 50)
!822 = !DILocation(line: 2710, column: 22, scope: !821)
!823 = !DILocation(line: 2710, column: 15, scope: !821)
!824 = !DILocation(line: 2711, column: 16, scope: !821)
!825 = !DILocation(line: 2711, column: 20, scope: !821)
!826 = !DILocation(line: 2711, column: 9, scope: !821)
!827 = !DILocation(line: 2712, column: 5, scope: !821)
!828 = !DILocalVariable(name: "next", scope: !829, file: !64, line: 2713, type: !244)
!829 = distinct !DILexicalBlock(scope: !817, file: !64, line: 2712, column: 12)
!830 = !DILocation(line: 2713, column: 15, scope: !829)
!831 = !DILocation(line: 2713, column: 22, scope: !829)
!832 = !DILocation(line: 2713, column: 30, scope: !833)
!833 = !DILexicalBlockFile(scope: !829, file: !64, discriminator: 1)
!834 = !DILocation(line: 2713, column: 35, scope: !833)
!835 = !DILocation(line: 2713, column: 22, scope: !833)
!836 = !DILocation(line: 2713, column: 41, scope: !837)
!837 = !DILexicalBlockFile(scope: !829, file: !64, discriminator: 2)
!838 = !DILocation(line: 2713, column: 22, scope: !837)
!839 = !DILocation(line: 2713, column: 22, scope: !840)
!840 = !DILexicalBlockFile(scope: !829, file: !64, discriminator: 3)
!841 = !DILocation(line: 2713, column: 15, scope: !840)
!842 = !DILocalVariable(name: "p", scope: !829, file: !64, line: 2714, type: !244)
!843 = !DILocation(line: 2714, column: 15, scope: !829)
!844 = !DILocation(line: 2714, column: 26, scope: !829)
!845 = !DILocation(line: 2714, column: 19, scope: !829)
!846 = !DILocation(line: 2715, column: 14, scope: !847)
!847 = distinct !DILexicalBlock(scope: !829, file: !64, line: 2715, column: 13)
!848 = !DILocation(line: 2715, column: 13, scope: !829)
!849 = !DILocation(line: 2716, column: 17, scope: !850)
!850 = distinct !DILexicalBlock(scope: !851, file: !64, line: 2716, column: 17)
!851 = distinct !DILexicalBlock(scope: !847, file: !64, line: 2715, column: 17)
!852 = !DILocation(line: 2716, column: 17, scope: !851)
!853 = !DILocation(line: 2719, column: 25, scope: !854)
!854 = distinct !DILexicalBlock(scope: !850, file: !64, line: 2716, column: 26)
!855 = !DILocation(line: 2719, column: 23, scope: !854)
!856 = !DILocation(line: 2720, column: 13, scope: !854)
!857 = !DILocation(line: 2721, column: 23, scope: !858)
!858 = distinct !DILexicalBlock(scope: !850, file: !64, line: 2720, column: 20)
!859 = !DILocation(line: 2722, column: 28, scope: !858)
!860 = !DILocation(line: 2722, column: 32, scope: !858)
!861 = !DILocation(line: 2722, column: 37, scope: !858)
!862 = !DILocation(line: 2722, column: 17, scope: !858)
!863 = !DILocation(line: 2724, column: 9, scope: !851)
!864 = !DILocalVariable(name: "c", scope: !865, file: !64, line: 2726, type: !244)
!865 = distinct !DILexicalBlock(scope: !847, file: !64, line: 2724, column: 16)
!866 = !DILocation(line: 2726, column: 19, scope: !865)
!867 = !DILocation(line: 2726, column: 30, scope: !865)
!868 = !DILocation(line: 2726, column: 32, scope: !865)
!869 = !DILocation(line: 2726, column: 23, scope: !865)
!870 = !DILocation(line: 2727, column: 28, scope: !865)
!871 = !DILocation(line: 2727, column: 30, scope: !865)
!872 = !DILocation(line: 2727, column: 21, scope: !865)
!873 = !DILocation(line: 2727, column: 19, scope: !865)
!874 = !DILocation(line: 2728, column: 18, scope: !875)
!875 = distinct !DILexicalBlock(scope: !865, file: !64, line: 2728, column: 17)
!876 = !DILocation(line: 2728, column: 24, scope: !875)
!877 = !DILocation(line: 2728, column: 28, scope: !878)
!878 = !DILexicalBlockFile(scope: !875, file: !64, discriminator: 1)
!879 = !DILocation(line: 2728, column: 30, scope: !878)
!880 = !DILocation(line: 2728, column: 33, scope: !881)
!881 = !DILexicalBlockFile(scope: !875, file: !64, discriminator: 2)
!882 = !DILocation(line: 2728, column: 37, scope: !881)
!883 = !DILocation(line: 2728, column: 35, scope: !881)
!884 = !DILocation(line: 2728, column: 17, scope: !881)
!885 = !DILocation(line: 2729, column: 25, scope: !886)
!886 = distinct !DILexicalBlock(scope: !875, file: !64, line: 2728, column: 45)
!887 = !DILocation(line: 2729, column: 27, scope: !886)
!888 = !DILocation(line: 2729, column: 23, scope: !886)
!889 = !DILocation(line: 2730, column: 28, scope: !886)
!890 = !DILocation(line: 2730, column: 32, scope: !886)
!891 = !DILocation(line: 2730, column: 37, scope: !886)
!892 = !DILocation(line: 2730, column: 42, scope: !886)
!893 = !DILocation(line: 2730, column: 49, scope: !886)
!894 = !DILocation(line: 2730, column: 53, scope: !886)
!895 = !DILocation(line: 2730, column: 51, scope: !886)
!896 = !DILocation(line: 2730, column: 59, scope: !886)
!897 = !DILocation(line: 2730, column: 48, scope: !886)
!898 = !DILocation(line: 2730, column: 48, scope: !899)
!899 = !DILexicalBlockFile(scope: !886, file: !64, discriminator: 1)
!900 = !DILocation(line: 2730, column: 80, scope: !901)
!901 = !DILexicalBlockFile(scope: !886, file: !64, discriminator: 2)
!902 = !DILocation(line: 2730, column: 84, scope: !901)
!903 = !DILocation(line: 2730, column: 82, scope: !901)
!904 = !DILocation(line: 2730, column: 48, scope: !901)
!905 = !DILocation(line: 2730, column: 48, scope: !906)
!906 = !DILexicalBlockFile(scope: !886, file: !64, discriminator: 3)
!907 = !DILocation(line: 2730, column: 17, scope: !906)
!908 = !DILocation(line: 2731, column: 13, scope: !886)
!909 = !DILocation(line: 2732, column: 22, scope: !910)
!910 = distinct !DILexicalBlock(scope: !875, file: !64, line: 2731, column: 20)
!911 = !DILocation(line: 2733, column: 28, scope: !910)
!912 = !DILocation(line: 2733, column: 32, scope: !910)
!913 = !DILocation(line: 2733, column: 37, scope: !910)
!914 = !DILocation(line: 2733, column: 42, scope: !910)
!915 = !DILocation(line: 2733, column: 49, scope: !910)
!916 = !DILocation(line: 2733, column: 57, scope: !910)
!917 = !DILocation(line: 2733, column: 55, scope: !910)
!918 = !DILocation(line: 2733, column: 62, scope: !910)
!919 = !DILocation(line: 2733, column: 67, scope: !910)
!920 = !DILocation(line: 2733, column: 48, scope: !910)
!921 = !DILocation(line: 2733, column: 48, scope: !922)
!922 = !DILexicalBlockFile(scope: !910, file: !64, discriminator: 1)
!923 = !DILocation(line: 2733, column: 88, scope: !924)
!924 = !DILexicalBlockFile(scope: !910, file: !64, discriminator: 2)
!925 = !DILocation(line: 2733, column: 96, scope: !924)
!926 = !DILocation(line: 2733, column: 94, scope: !924)
!927 = !DILocation(line: 2733, column: 101, scope: !924)
!928 = !DILocation(line: 2733, column: 48, scope: !924)
!929 = !DILocation(line: 2733, column: 48, scope: !930)
!930 = !DILexicalBlockFile(scope: !910, file: !64, discriminator: 3)
!931 = !DILocation(line: 2733, column: 17, scope: !930)
!932 = !DILocation(line: 2738, column: 9, scope: !933)
!933 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2738, column: 9)
!934 = !DILocation(line: 2738, column: 9, scope: !373)
!935 = !DILocation(line: 2740, column: 20, scope: !936)
!936 = distinct !DILexicalBlock(scope: !937, file: !64, line: 2740, column: 13)
!937 = distinct !DILexicalBlock(scope: !933, file: !64, line: 2738, column: 18)
!938 = !DILocation(line: 2740, column: 13, scope: !936)
!939 = !DILocation(line: 2740, column: 29, scope: !936)
!940 = !DILocation(line: 2740, column: 13, scope: !937)
!941 = !DILocation(line: 2741, column: 17, scope: !942)
!942 = distinct !DILexicalBlock(scope: !936, file: !64, line: 2740, column: 38)
!943 = !DILocation(line: 2742, column: 13, scope: !942)
!944 = !DILocation(line: 2744, column: 17, scope: !937)
!945 = !DILocation(line: 2744, column: 21, scope: !937)
!946 = !DILocation(line: 2744, column: 9, scope: !937)
!947 = !DILocation(line: 2745, column: 19, scope: !937)
!948 = !DILocation(line: 2745, column: 9, scope: !937)
!949 = !DILocation(line: 2745, column: 13, scope: !937)
!950 = !DILocation(line: 2745, column: 17, scope: !937)
!951 = !DILocation(line: 2746, column: 5, scope: !937)
!952 = !DILocation(line: 2748, column: 10, scope: !953)
!953 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2748, column: 9)
!954 = !DILocation(line: 2748, column: 14, scope: !953)
!955 = !DILocation(line: 2748, column: 9, scope: !373)
!956 = !DILocation(line: 2749, column: 24, scope: !957)
!957 = distinct !DILexicalBlock(scope: !953, file: !64, line: 2748, column: 24)
!958 = !DILocation(line: 2749, column: 9, scope: !957)
!959 = !DILocation(line: 2749, column: 13, scope: !957)
!960 = !DILocation(line: 2749, column: 22, scope: !957)
!961 = !DILocation(line: 2750, column: 14, scope: !962)
!962 = distinct !DILexicalBlock(scope: !957, file: !64, line: 2750, column: 13)
!963 = !DILocation(line: 2750, column: 18, scope: !962)
!964 = !DILocation(line: 2750, column: 13, scope: !957)
!965 = !DILocation(line: 2751, column: 17, scope: !966)
!966 = distinct !DILexicalBlock(scope: !962, file: !64, line: 2750, column: 28)
!967 = !DILocation(line: 2752, column: 13, scope: !966)
!968 = !DILocation(line: 2755, column: 13, scope: !969)
!969 = distinct !DILexicalBlock(scope: !957, file: !64, line: 2755, column: 13)
!970 = !DILocation(line: 2755, column: 13, scope: !957)
!971 = !DILocalVariable(name: "len", scope: !972, file: !64, line: 2756, type: !108)
!972 = distinct !DILexicalBlock(scope: !969, file: !64, line: 2755, column: 20)
!973 = !DILocation(line: 2756, column: 17, scope: !972)
!974 = !DILocation(line: 2756, column: 30, scope: !972)
!975 = !DILocation(line: 2756, column: 23, scope: !972)
!976 = !DILocation(line: 2757, column: 25, scope: !977)
!977 = distinct !DILexicalBlock(scope: !972, file: !64, line: 2757, column: 17)
!978 = !DILocation(line: 2757, column: 18, scope: !977)
!979 = !DILocation(line: 2757, column: 37, scope: !977)
!980 = !DILocation(line: 2757, column: 40, scope: !981)
!981 = !DILexicalBlockFile(scope: !977, file: !64, discriminator: 1)
!982 = !DILocation(line: 2757, column: 44, scope: !981)
!983 = !DILocation(line: 2757, column: 49, scope: !981)
!984 = !DILocation(line: 2758, column: 26, scope: !977)
!985 = !DILocation(line: 2758, column: 34, scope: !977)
!986 = !DILocation(line: 2758, column: 32, scope: !977)
!987 = !DILocation(line: 2758, column: 38, scope: !977)
!988 = !DILocation(line: 2758, column: 19, scope: !977)
!989 = !DILocation(line: 2758, column: 51, scope: !977)
!990 = !DILocation(line: 2759, column: 26, scope: !977)
!991 = !DILocation(line: 2759, column: 34, scope: !977)
!992 = !DILocation(line: 2759, column: 32, scope: !977)
!993 = !DILocation(line: 2759, column: 38, scope: !977)
!994 = !DILocation(line: 2759, column: 19, scope: !977)
!995 = !DILocation(line: 2757, column: 17, scope: !996)
!996 = !DILexicalBlockFile(scope: !972, file: !64, discriminator: 2)
!997 = !DILocation(line: 2760, column: 24, scope: !998)
!998 = distinct !DILexicalBlock(scope: !977, file: !64, line: 2759, column: 53)
!999 = !DILocation(line: 2760, column: 28, scope: !998)
!1000 = !DILocation(line: 2760, column: 17, scope: !998)
!1001 = !DILocation(line: 2761, column: 13, scope: !998)
!1002 = !DILocation(line: 2762, column: 21, scope: !1003)
!1003 = distinct !DILexicalBlock(scope: !1004, file: !64, line: 2762, column: 21)
!1004 = distinct !DILexicalBlock(scope: !977, file: !64, line: 2761, column: 20)
!1005 = !DILocation(line: 2762, column: 25, scope: !1003)
!1006 = !DILocation(line: 2762, column: 30, scope: !1003)
!1007 = !DILocation(line: 2762, column: 41, scope: !1008)
!1008 = !DILexicalBlockFile(scope: !1003, file: !64, discriminator: 1)
!1009 = !DILocation(line: 2762, column: 49, scope: !1008)
!1010 = !DILocation(line: 2762, column: 47, scope: !1008)
!1011 = !DILocation(line: 2762, column: 53, scope: !1008)
!1012 = !DILocation(line: 2762, column: 34, scope: !1008)
!1013 = !DILocation(line: 2762, column: 21, scope: !1008)
!1014 = !DILocation(line: 2763, column: 27, scope: !1003)
!1015 = !DILocation(line: 2763, column: 31, scope: !1003)
!1016 = !DILocation(line: 2763, column: 21, scope: !1003)
!1017 = !DILocation(line: 2763, column: 36, scope: !1003)
!1018 = !DILocation(line: 2764, column: 17, scope: !1004)
!1019 = !DILocation(line: 2764, column: 21, scope: !1004)
!1020 = !DILocation(line: 2764, column: 33, scope: !1004)
!1021 = !DILocation(line: 2766, column: 24, scope: !972)
!1022 = !DILocation(line: 2766, column: 28, scope: !972)
!1023 = !DILocation(line: 2766, column: 38, scope: !972)
!1024 = !DILocation(line: 2766, column: 13, scope: !972)
!1025 = !DILocation(line: 2767, column: 9, scope: !972)
!1026 = !DILocation(line: 2768, column: 13, scope: !1027)
!1027 = distinct !DILexicalBlock(scope: !969, file: !64, line: 2767, column: 16)
!1028 = !DILocation(line: 2768, column: 17, scope: !1027)
!1029 = !DILocation(line: 2768, column: 29, scope: !1027)
!1030 = !DILocation(line: 2770, column: 5, scope: !957)
!1031 = !DILocation(line: 2772, column: 10, scope: !1032)
!1032 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2772, column: 9)
!1033 = !DILocation(line: 2772, column: 14, scope: !1032)
!1034 = !DILocation(line: 2772, column: 9, scope: !373)
!1035 = !DILocation(line: 2773, column: 21, scope: !1036)
!1036 = distinct !DILexicalBlock(scope: !1032, file: !64, line: 2772, column: 21)
!1037 = !DILocation(line: 2773, column: 9, scope: !1036)
!1038 = !DILocation(line: 2773, column: 13, scope: !1036)
!1039 = !DILocation(line: 2773, column: 19, scope: !1036)
!1040 = !DILocation(line: 2774, column: 14, scope: !1041)
!1041 = distinct !DILexicalBlock(scope: !1036, file: !64, line: 2774, column: 13)
!1042 = !DILocation(line: 2774, column: 18, scope: !1041)
!1043 = !DILocation(line: 2774, column: 13, scope: !1036)
!1044 = !DILocation(line: 2775, column: 17, scope: !1045)
!1045 = distinct !DILexicalBlock(scope: !1041, file: !64, line: 2774, column: 25)
!1046 = !DILocation(line: 2776, column: 13, scope: !1045)
!1047 = !DILocation(line: 2778, column: 21, scope: !1036)
!1048 = !DILocation(line: 2778, column: 25, scope: !1036)
!1049 = !DILocation(line: 2778, column: 38, scope: !1036)
!1050 = !DILocation(line: 2778, column: 62, scope: !1036)
!1051 = !DILocation(line: 2779, column: 21, scope: !1036)
!1052 = !DILocation(line: 2779, column: 34, scope: !1036)
!1053 = !DILocation(line: 2779, column: 38, scope: !1036)
!1054 = !DILocation(line: 2778, column: 9, scope: !1036)
!1055 = !DILocation(line: 2780, column: 5, scope: !1036)
!1056 = !DILocation(line: 2782, column: 10, scope: !1057)
!1057 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2782, column: 9)
!1058 = !DILocation(line: 2782, column: 14, scope: !1057)
!1059 = !DILocation(line: 2782, column: 9, scope: !373)
!1060 = !DILocation(line: 2783, column: 24, scope: !1061)
!1061 = distinct !DILexicalBlock(scope: !1057, file: !64, line: 2782, column: 24)
!1062 = !DILocation(line: 2783, column: 9, scope: !1061)
!1063 = !DILocation(line: 2783, column: 13, scope: !1061)
!1064 = !DILocation(line: 2783, column: 22, scope: !1061)
!1065 = !DILocation(line: 2784, column: 14, scope: !1066)
!1066 = distinct !DILexicalBlock(scope: !1061, file: !64, line: 2784, column: 13)
!1067 = !DILocation(line: 2784, column: 18, scope: !1066)
!1068 = !DILocation(line: 2784, column: 13, scope: !1061)
!1069 = !DILocation(line: 2785, column: 17, scope: !1070)
!1070 = distinct !DILexicalBlock(scope: !1066, file: !64, line: 2784, column: 28)
!1071 = !DILocation(line: 2786, column: 13, scope: !1070)
!1072 = !DILocation(line: 2788, column: 13, scope: !1073)
!1073 = distinct !DILexicalBlock(scope: !1061, file: !64, line: 2788, column: 13)
!1074 = !DILocation(line: 2788, column: 17, scope: !1073)
!1075 = !DILocation(line: 2788, column: 13, scope: !1061)
!1076 = !DILocation(line: 2789, column: 22, scope: !1077)
!1077 = distinct !DILexicalBlock(scope: !1073, file: !64, line: 2788, column: 27)
!1078 = !DILocation(line: 2789, column: 26, scope: !1077)
!1079 = !DILocation(line: 2789, column: 13, scope: !1077)
!1080 = !DILocation(line: 2792, column: 9, scope: !1077)
!1081 = !DILocation(line: 2793, column: 22, scope: !1082)
!1082 = distinct !DILexicalBlock(scope: !1073, file: !64, line: 2792, column: 16)
!1083 = !DILocation(line: 2793, column: 26, scope: !1082)
!1084 = !DILocation(line: 2793, column: 13, scope: !1082)
!1085 = !DILocation(line: 2796, column: 5, scope: !1061)
!1086 = !DILocation(line: 2798, column: 5, scope: !373)
!1087 = !DILocation(line: 2798, column: 9, scope: !373)
!1088 = !DILocation(line: 2798, column: 29, scope: !373)
!1089 = !DILocation(line: 2799, column: 5, scope: !373)
!1090 = !DILocation(line: 2799, column: 9, scope: !373)
!1091 = !DILocation(line: 2799, column: 20, scope: !373)
!1092 = !DILocation(line: 2800, column: 5, scope: !373)
!1093 = !DILocation(line: 2800, column: 9, scope: !373)
!1094 = !DILocation(line: 2800, column: 19, scope: !373)
!1095 = !DILocation(line: 2801, column: 5, scope: !373)
!1096 = !DILocation(line: 2801, column: 9, scope: !373)
!1097 = !DILocation(line: 2801, column: 19, scope: !373)
!1098 = !DILocation(line: 2802, column: 5, scope: !373)
!1099 = !DILocation(line: 2802, column: 9, scope: !373)
!1100 = !DILocation(line: 2802, column: 27, scope: !373)
!1101 = !DILocation(line: 2803, column: 5, scope: !373)
!1102 = !DILocation(line: 2803, column: 9, scope: !373)
!1103 = !DILocation(line: 2803, column: 25, scope: !373)
!1104 = !DILocation(line: 2804, column: 5, scope: !373)
!1105 = !DILocation(line: 2804, column: 9, scope: !373)
!1106 = !DILocation(line: 2804, column: 26, scope: !373)
!1107 = !DILocation(line: 2805, column: 5, scope: !373)
!1108 = !DILocation(line: 2805, column: 9, scope: !373)
!1109 = !DILocation(line: 2805, column: 18, scope: !373)
!1110 = !DILocation(line: 2807, column: 12, scope: !373)
!1111 = !DILocation(line: 2808, column: 12, scope: !373)
!1112 = !DILocation(line: 2808, column: 19, scope: !373)
!1113 = !DILocation(line: 2808, column: 25, scope: !373)
!1114 = !DILocation(line: 2808, column: 29, scope: !373)
!1115 = !DILocation(line: 2808, column: 34, scope: !373)
!1116 = !DILocation(line: 2808, column: 38, scope: !373)
!1117 = !DILocation(line: 2807, column: 5, scope: !373)
!1118 = !DILocation(line: 2809, column: 10, scope: !1119)
!1119 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2809, column: 9)
!1120 = !DILocation(line: 2809, column: 14, scope: !1119)
!1121 = !DILocation(line: 2809, column: 9, scope: !373)
!1122 = !DILocation(line: 2810, column: 32, scope: !1123)
!1123 = distinct !DILexicalBlock(scope: !1124, file: !64, line: 2810, column: 13)
!1124 = distinct !DILexicalBlock(scope: !1119, file: !64, line: 2809, column: 22)
!1125 = !DILocation(line: 2810, column: 35, scope: !1123)
!1126 = !DILocation(line: 2810, column: 20, scope: !1123)
!1127 = !DILocation(line: 2810, column: 18, scope: !1123)
!1128 = !DILocation(line: 2810, column: 40, scope: !1123)
!1129 = !DILocation(line: 2810, column: 13, scope: !1124)
!1130 = !DILocation(line: 2811, column: 13, scope: !1123)
!1131 = !DILocation(line: 2812, column: 5, scope: !1124)
!1132 = !DILocation(line: 2813, column: 33, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1134, file: !64, line: 2813, column: 13)
!1134 = distinct !DILexicalBlock(scope: !1119, file: !64, line: 2812, column: 12)
!1135 = !DILocation(line: 2813, column: 36, scope: !1133)
!1136 = !DILocation(line: 2813, column: 39, scope: !1133)
!1137 = !DILocation(line: 2813, column: 20, scope: !1133)
!1138 = !DILocation(line: 2813, column: 18, scope: !1133)
!1139 = !DILocation(line: 2813, column: 51, scope: !1133)
!1140 = !DILocation(line: 2813, column: 13, scope: !1134)
!1141 = !DILocation(line: 2814, column: 13, scope: !1133)
!1142 = !DILocation(line: 2817, column: 5, scope: !373)
!1143 = distinct !{!1143, !1142}
!1144 = !DILocation(line: 2818, column: 26, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2817, column: 8)
!1146 = !DILocation(line: 2818, column: 15, scope: !1145)
!1147 = !DILocation(line: 2818, column: 13, scope: !1145)
!1148 = !DILocation(line: 2819, column: 5, scope: !1145)
!1149 = !DILocation(line: 2819, column: 14, scope: !1150)
!1150 = !DILexicalBlockFile(scope: !373, file: !64, discriminator: 1)
!1151 = !DILocation(line: 2819, column: 18, scope: !1150)
!1152 = !DILocation(line: 2819, column: 5, scope: !1150)
!1153 = !DILocation(line: 2820, column: 9, scope: !1154)
!1154 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2820, column: 9)
!1155 = !DILocation(line: 2820, column: 13, scope: !1154)
!1156 = !DILocation(line: 2820, column: 9, scope: !373)
!1157 = !DILocation(line: 2821, column: 9, scope: !1154)
!1158 = !DILocation(line: 2823, column: 9, scope: !1159)
!1159 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2823, column: 9)
!1160 = !DILocation(line: 2823, column: 13, scope: !1159)
!1161 = !DILocation(line: 2823, column: 9, scope: !373)
!1162 = !DILocalVariable(name: "i", scope: !1163, file: !64, line: 2824, type: !108)
!1163 = distinct !DILexicalBlock(scope: !1159, file: !64, line: 2823, column: 27)
!1164 = !DILocation(line: 2824, column: 13, scope: !1163)
!1165 = !DILocation(line: 2825, column: 21, scope: !1163)
!1166 = !DILocation(line: 2825, column: 25, scope: !1163)
!1167 = !DILocation(line: 2825, column: 9, scope: !1163)
!1168 = !DILocation(line: 2826, column: 9, scope: !1163)
!1169 = !DILocation(line: 2826, column: 13, scope: !1163)
!1170 = !DILocation(line: 2826, column: 20, scope: !1163)
!1171 = !DILocation(line: 2827, column: 9, scope: !1163)
!1172 = !DILocation(line: 2827, column: 13, scope: !1163)
!1173 = !DILocation(line: 2827, column: 26, scope: !1163)
!1174 = !DILocation(line: 2828, column: 9, scope: !1163)
!1175 = !DILocation(line: 2828, column: 13, scope: !1163)
!1176 = !DILocation(line: 2828, column: 24, scope: !1163)
!1177 = !DILocation(line: 2829, column: 16, scope: !1178)
!1178 = distinct !DILexicalBlock(scope: !1163, file: !64, line: 2829, column: 9)
!1179 = !DILocation(line: 2829, column: 14, scope: !1178)
!1180 = !DILocation(line: 2829, column: 21, scope: !1181)
!1181 = !DILexicalBlockFile(scope: !1182, file: !64, discriminator: 1)
!1182 = distinct !DILexicalBlock(scope: !1178, file: !64, line: 2829, column: 9)
!1183 = !DILocation(line: 2829, column: 23, scope: !1181)
!1184 = !DILocation(line: 2829, column: 9, scope: !1181)
!1185 = !DILocation(line: 2830, column: 33, scope: !1182)
!1186 = !DILocation(line: 2830, column: 20, scope: !1182)
!1187 = !DILocation(line: 2830, column: 24, scope: !1182)
!1188 = !DILocation(line: 2830, column: 13, scope: !1182)
!1189 = !DILocation(line: 2831, column: 61, scope: !1182)
!1190 = !DILocation(line: 2831, column: 45, scope: !1182)
!1191 = !DILocation(line: 2831, column: 49, scope: !1182)
!1192 = !DILocation(line: 2831, column: 43, scope: !1182)
!1193 = !DILocation(line: 2829, column: 29, scope: !1194)
!1194 = !DILexicalBlockFile(scope: !1182, file: !64, discriminator: 2)
!1195 = !DILocation(line: 2829, column: 9, scope: !1194)
!1196 = distinct !{!1196, !1197}
!1197 = !DILocation(line: 2829, column: 9, scope: !1163)
!1198 = !DILocation(line: 2832, column: 30, scope: !1163)
!1199 = !DILocation(line: 2832, column: 9, scope: !1163)
!1200 = !DILocation(line: 2833, column: 9, scope: !1163)
!1201 = !DILocation(line: 2836, column: 9, scope: !1202)
!1202 = distinct !DILexicalBlock(scope: !373, file: !64, line: 2836, column: 9)
!1203 = !DILocation(line: 2836, column: 13, scope: !1202)
!1204 = !DILocation(line: 2836, column: 9, scope: !373)
!1205 = !DILocation(line: 2838, column: 9, scope: !1206)
!1206 = distinct !DILexicalBlock(scope: !1202, file: !64, line: 2836, column: 23)
!1207 = !DILocation(line: 2838, column: 13, scope: !1206)
!1208 = !DILocation(line: 2838, column: 22, scope: !1206)
!1209 = !DILocation(line: 2839, column: 33, scope: !1210)
!1210 = distinct !DILexicalBlock(scope: !1206, file: !64, line: 2839, column: 13)
!1211 = !DILocation(line: 2839, column: 37, scope: !1210)
!1212 = !DILocation(line: 2839, column: 32, scope: !1210)
!1213 = !DILocation(line: 2839, column: 47, scope: !1210)
!1214 = !DILocation(line: 2839, column: 51, scope: !1210)
!1215 = !DILocation(line: 2839, column: 20, scope: !1210)
!1216 = !DILocation(line: 2839, column: 18, scope: !1210)
!1217 = !DILocation(line: 2839, column: 62, scope: !1210)
!1218 = !DILocation(line: 2839, column: 13, scope: !1206)
!1219 = !DILocation(line: 2840, column: 13, scope: !1210)
!1220 = !DILocation(line: 2841, column: 9, scope: !1206)
!1221 = !DILocation(line: 2841, column: 13, scope: !1206)
!1222 = !DILocation(line: 2841, column: 21, scope: !1206)
!1223 = !DILocation(line: 2842, column: 16, scope: !1206)
!1224 = !DILocation(line: 2842, column: 20, scope: !1206)
!1225 = !DILocation(line: 2842, column: 59, scope: !1206)
!1226 = !DILocation(line: 2842, column: 63, scope: !1206)
!1227 = !DILocation(line: 2842, column: 9, scope: !1206)
!1228 = !DILocation(line: 2849, column: 9, scope: !1206)
!1229 = !DILocation(line: 2849, column: 17, scope: !1230)
!1230 = !DILexicalBlockFile(scope: !1206, file: !64, discriminator: 1)
!1231 = !DILocation(line: 2849, column: 21, scope: !1230)
!1232 = !DILocation(line: 2849, column: 31, scope: !1230)
!1233 = !DILocation(line: 2849, column: 35, scope: !1234)
!1234 = !DILexicalBlockFile(scope: !1206, file: !64, discriminator: 2)
!1235 = !DILocation(line: 2849, column: 39, scope: !1234)
!1236 = !DILocation(line: 2849, column: 49, scope: !1234)
!1237 = !DILocation(line: 2849, column: 53, scope: !1238)
!1238 = !DILexicalBlockFile(scope: !1206, file: !64, discriminator: 3)
!1239 = !DILocation(line: 2849, column: 57, scope: !1238)
!1240 = !DILocation(line: 2849, column: 52, scope: !1238)
!1241 = !DILocation(line: 2849, column: 9, scope: !1242)
!1242 = !DILexicalBlockFile(scope: !1206, file: !64, discriminator: 4)
!1243 = !DILocation(line: 2850, column: 35, scope: !1244)
!1244 = distinct !DILexicalBlock(scope: !1245, file: !64, line: 2850, column: 17)
!1245 = distinct !DILexicalBlock(scope: !1206, file: !64, line: 2849, column: 76)
!1246 = !DILocation(line: 2850, column: 24, scope: !1244)
!1247 = !DILocation(line: 2850, column: 22, scope: !1244)
!1248 = !DILocation(line: 2850, column: 42, scope: !1244)
!1249 = !DILocation(line: 2850, column: 17, scope: !1245)
!1250 = !DILocation(line: 2851, column: 16, scope: !1244)
!1251 = !DILocation(line: 2849, column: 9, scope: !1252)
!1252 = !DILexicalBlockFile(scope: !1206, file: !64, discriminator: 5)
!1253 = distinct !{!1253, !1228}
!1254 = !DILocation(line: 2857, column: 13, scope: !1255)
!1255 = distinct !DILexicalBlock(scope: !1206, file: !64, line: 2857, column: 13)
!1256 = !DILocation(line: 2857, column: 17, scope: !1255)
!1257 = !DILocation(line: 2857, column: 13, scope: !1206)
!1258 = !DILocation(line: 2858, column: 13, scope: !1259)
!1259 = distinct !DILexicalBlock(scope: !1255, file: !64, line: 2857, column: 28)
!1260 = !DILocation(line: 2858, column: 17, scope: !1259)
!1261 = !DILocation(line: 2858, column: 29, scope: !1259)
!1262 = !DILocation(line: 2859, column: 9, scope: !1259)
!1263 = !DILocation(line: 2860, column: 13, scope: !1264)
!1264 = distinct !DILexicalBlock(scope: !1206, file: !64, line: 2860, column: 13)
!1265 = !DILocation(line: 2860, column: 17, scope: !1264)
!1266 = !DILocation(line: 2860, column: 13, scope: !1206)
!1267 = !DILocation(line: 2861, column: 13, scope: !1268)
!1268 = distinct !DILexicalBlock(scope: !1264, file: !64, line: 2860, column: 28)
!1269 = !DILocation(line: 2861, column: 17, scope: !1268)
!1270 = !DILocation(line: 2861, column: 29, scope: !1268)
!1271 = !DILocation(line: 2862, column: 9, scope: !1268)
!1272 = !DILocation(line: 2867, column: 14, scope: !1273)
!1273 = distinct !DILexicalBlock(scope: !1206, file: !64, line: 2867, column: 13)
!1274 = !DILocation(line: 2867, column: 18, scope: !1273)
!1275 = !DILocation(line: 2867, column: 36, scope: !1273)
!1276 = !DILocation(line: 2867, column: 39, scope: !1277)
!1277 = !DILexicalBlockFile(scope: !1273, file: !64, discriminator: 1)
!1278 = !DILocation(line: 2867, column: 43, scope: !1277)
!1279 = !DILocation(line: 2867, column: 52, scope: !1277)
!1280 = !DILocation(line: 2867, column: 13, scope: !1277)
!1281 = !DILocation(line: 2868, column: 54, scope: !1282)
!1282 = distinct !DILexicalBlock(scope: !1283, file: !64, line: 2868, column: 17)
!1283 = distinct !DILexicalBlock(scope: !1273, file: !64, line: 2867, column: 57)
!1284 = !DILocation(line: 2868, column: 24, scope: !1282)
!1285 = !DILocation(line: 2868, column: 22, scope: !1282)
!1286 = !DILocation(line: 2868, column: 59, scope: !1282)
!1287 = !DILocation(line: 2868, column: 17, scope: !1283)
!1288 = !DILocation(line: 2869, column: 17, scope: !1282)
!1289 = !DILocation(line: 2870, column: 9, scope: !1283)
!1290 = !DILocation(line: 2871, column: 5, scope: !1206)
!1291 = !DILocation(line: 2872, column: 9, scope: !1292)
!1292 = distinct !DILexicalBlock(scope: !1202, file: !64, line: 2871, column: 12)
!1293 = !DILocation(line: 2872, column: 13, scope: !1292)
!1294 = !DILocation(line: 2872, column: 22, scope: !1292)
!1295 = !DILocation(line: 2873, column: 9, scope: !1292)
!1296 = !DILocation(line: 2873, column: 13, scope: !1292)
!1297 = !DILocation(line: 2873, column: 22, scope: !1292)
!1298 = !DILocation(line: 2874, column: 9, scope: !1292)
!1299 = !DILocation(line: 2874, column: 13, scope: !1292)
!1300 = !DILocation(line: 2874, column: 21, scope: !1292)
!1301 = !DILocation(line: 2875, column: 9, scope: !1292)
!1302 = !DILocation(line: 2875, column: 13, scope: !1292)
!1303 = !DILocation(line: 2875, column: 24, scope: !1292)
!1304 = !DILocation(line: 2878, column: 26, scope: !373)
!1305 = !DILocation(line: 2878, column: 30, scope: !373)
!1306 = !DILocation(line: 2878, column: 38, scope: !373)
!1307 = !DILocation(line: 2878, column: 5, scope: !373)
!1308 = !DILocation(line: 2878, column: 8, scope: !373)
!1309 = !DILocation(line: 2878, column: 24, scope: !373)
!1310 = !DILocation(line: 2879, column: 5, scope: !373)
!1311 = !DILocation(line: 2879, column: 8, scope: !373)
!1312 = !DILocation(line: 2879, column: 20, scope: !373)
!1313 = !DILocation(line: 2880, column: 5, scope: !373)
!1314 = !DILocation(line: 2883, column: 18, scope: !373)
!1315 = !DILocation(line: 2883, column: 5, scope: !373)
!1316 = !DILocation(line: 2884, column: 16, scope: !373)
!1317 = !DILocation(line: 2884, column: 5, scope: !373)
!1318 = !DILocation(line: 2885, column: 12, scope: !373)
!1319 = !DILocation(line: 2885, column: 5, scope: !373)
!1320 = !DILocation(line: 2886, column: 1, scope: !373)
!1321 = distinct !DISubprogram(name: "rtmp_read", scope: !64, file: !64, line: 2888, type: !1322, isLocal: true, isDefinition: true, scopeLine: 2889, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!108, !154, !110, !108}
!1324 = !DILocalVariable(name: "s", arg: 1, scope: !1321, file: !64, line: 2888, type: !154)
!1325 = !DILocation(line: 2888, column: 34, scope: !1321)
!1326 = !DILocalVariable(name: "buf", arg: 2, scope: !1321, file: !64, line: 2888, type: !110)
!1327 = !DILocation(line: 2888, column: 46, scope: !1321)
!1328 = !DILocalVariable(name: "size", arg: 3, scope: !1321, file: !64, line: 2888, type: !108)
!1329 = !DILocation(line: 2888, column: 55, scope: !1321)
!1330 = !DILocalVariable(name: "rt", scope: !1321, file: !64, line: 2890, type: !385)
!1331 = !DILocation(line: 2890, column: 18, scope: !1321)
!1332 = !DILocation(line: 2890, column: 23, scope: !1321)
!1333 = !DILocation(line: 2890, column: 26, scope: !1321)
!1334 = !DILocalVariable(name: "orig_size", scope: !1321, file: !64, line: 2891, type: !108)
!1335 = !DILocation(line: 2891, column: 9, scope: !1321)
!1336 = !DILocation(line: 2891, column: 21, scope: !1321)
!1337 = !DILocalVariable(name: "ret", scope: !1321, file: !64, line: 2892, type: !108)
!1338 = !DILocation(line: 2892, column: 9, scope: !1321)
!1339 = !DILocation(line: 2894, column: 5, scope: !1321)
!1340 = !DILocation(line: 2894, column: 12, scope: !1341)
!1341 = !DILexicalBlockFile(scope: !1321, file: !64, discriminator: 1)
!1342 = !DILocation(line: 2894, column: 17, scope: !1341)
!1343 = !DILocation(line: 2894, column: 5, scope: !1341)
!1344 = !DILocalVariable(name: "data_left", scope: !1345, file: !64, line: 2895, type: !108)
!1345 = distinct !DILexicalBlock(scope: !1321, file: !64, line: 2894, column: 22)
!1346 = !DILocation(line: 2895, column: 13, scope: !1345)
!1347 = !DILocation(line: 2895, column: 25, scope: !1345)
!1348 = !DILocation(line: 2895, column: 29, scope: !1345)
!1349 = !DILocation(line: 2895, column: 40, scope: !1345)
!1350 = !DILocation(line: 2895, column: 44, scope: !1345)
!1351 = !DILocation(line: 2895, column: 38, scope: !1345)
!1352 = !DILocation(line: 2897, column: 13, scope: !1353)
!1353 = distinct !DILexicalBlock(scope: !1345, file: !64, line: 2897, column: 13)
!1354 = !DILocation(line: 2897, column: 26, scope: !1353)
!1355 = !DILocation(line: 2897, column: 23, scope: !1353)
!1356 = !DILocation(line: 2897, column: 13, scope: !1345)
!1357 = !DILocation(line: 2898, column: 20, scope: !1358)
!1358 = distinct !DILexicalBlock(scope: !1353, file: !64, line: 2897, column: 32)
!1359 = !DILocation(line: 2898, column: 25, scope: !1358)
!1360 = !DILocation(line: 2898, column: 29, scope: !1358)
!1361 = !DILocation(line: 2898, column: 40, scope: !1358)
!1362 = !DILocation(line: 2898, column: 44, scope: !1358)
!1363 = !DILocation(line: 2898, column: 38, scope: !1358)
!1364 = !DILocation(line: 2898, column: 53, scope: !1358)
!1365 = !DILocation(line: 2898, column: 13, scope: !1358)
!1366 = !DILocation(line: 2899, column: 28, scope: !1358)
!1367 = !DILocation(line: 2899, column: 13, scope: !1358)
!1368 = !DILocation(line: 2899, column: 17, scope: !1358)
!1369 = !DILocation(line: 2899, column: 25, scope: !1358)
!1370 = !DILocation(line: 2900, column: 20, scope: !1358)
!1371 = !DILocation(line: 2900, column: 13, scope: !1358)
!1372 = !DILocation(line: 2902, column: 13, scope: !1373)
!1373 = distinct !DILexicalBlock(scope: !1345, file: !64, line: 2902, column: 13)
!1374 = !DILocation(line: 2902, column: 23, scope: !1373)
!1375 = !DILocation(line: 2902, column: 13, scope: !1345)
!1376 = !DILocation(line: 2903, column: 20, scope: !1377)
!1377 = distinct !DILexicalBlock(scope: !1373, file: !64, line: 2902, column: 28)
!1378 = !DILocation(line: 2903, column: 25, scope: !1377)
!1379 = !DILocation(line: 2903, column: 29, scope: !1377)
!1380 = !DILocation(line: 2903, column: 40, scope: !1377)
!1381 = !DILocation(line: 2903, column: 44, scope: !1377)
!1382 = !DILocation(line: 2903, column: 38, scope: !1377)
!1383 = !DILocation(line: 2903, column: 53, scope: !1377)
!1384 = !DILocation(line: 2903, column: 13, scope: !1377)
!1385 = !DILocation(line: 2904, column: 20, scope: !1377)
!1386 = !DILocation(line: 2904, column: 17, scope: !1377)
!1387 = !DILocation(line: 2905, column: 21, scope: !1377)
!1388 = !DILocation(line: 2905, column: 18, scope: !1377)
!1389 = !DILocation(line: 2906, column: 27, scope: !1377)
!1390 = !DILocation(line: 2906, column: 31, scope: !1377)
!1391 = !DILocation(line: 2906, column: 13, scope: !1377)
!1392 = !DILocation(line: 2906, column: 17, scope: !1377)
!1393 = !DILocation(line: 2906, column: 25, scope: !1377)
!1394 = !DILocation(line: 2907, column: 20, scope: !1377)
!1395 = !DILocation(line: 2907, column: 13, scope: !1377)
!1396 = !DILocation(line: 2909, column: 31, scope: !1397)
!1397 = distinct !DILexicalBlock(scope: !1345, file: !64, line: 2909, column: 13)
!1398 = !DILocation(line: 2909, column: 20, scope: !1397)
!1399 = !DILocation(line: 2909, column: 18, scope: !1397)
!1400 = !DILocation(line: 2909, column: 38, scope: !1397)
!1401 = !DILocation(line: 2909, column: 13, scope: !1345)
!1402 = !DILocation(line: 2910, column: 19, scope: !1397)
!1403 = !DILocation(line: 2910, column: 12, scope: !1397)
!1404 = !DILocation(line: 2894, column: 5, scope: !1405)
!1405 = !DILexicalBlockFile(scope: !1321, file: !64, discriminator: 2)
!1406 = distinct !{!1406, !1339}
!1407 = !DILocation(line: 2912, column: 12, scope: !1321)
!1408 = !DILocation(line: 2912, column: 5, scope: !1321)
!1409 = !DILocation(line: 2913, column: 1, scope: !1321)
!1410 = distinct !DISubprogram(name: "rtmp_write", scope: !64, file: !64, line: 2949, type: !1411, isLocal: true, isDefinition: true, scopeLine: 2950, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{!108, !154, !131, !108}
!1413 = !DILocalVariable(name: "b", arg: 1, scope: !1414, file: !1415, line: 93, type: !1418)
!1414 = distinct !DISubprogram(name: "bytestream_get_be24", scope: !1415, file: !1415, line: 93, type: !1416, isLocal: true, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!1415 = !DIFile(filename: "./libavcodec/bytestream.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!1416 = !DISubroutineType(types: !1417)
!1417 = !{!109, !1418}
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64, align: 64)
!1419 = !DILocation(line: 93, column: 95, scope: !1414, inlinedAt: !1420)
!1420 = distinct !DILocation(line: 2983, column: 13, scope: !1421)
!1421 = distinct !DILexicalBlock(scope: !1422, file: !64, line: 2968, column: 40)
!1422 = distinct !DILexicalBlock(scope: !1423, file: !64, line: 2968, column: 13)
!1423 = distinct !DILexicalBlock(scope: !1410, file: !64, line: 2959, column: 8)
!1424 = !DILocalVariable(name: "b", arg: 1, scope: !1425, file: !1415, line: 359, type: !1418)
!1425 = distinct !DISubprogram(name: "bytestream_get_buffer", scope: !1415, file: !1415, line: 359, type: !1426, isLocal: true, isDefinition: true, scopeLine: 362, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{!109, !1418, !110, !109}
!1428 = !DILocation(line: 359, column: 97, scope: !1425, inlinedAt: !1429)
!1429 = distinct !DILocation(line: 3011, column: 9, scope: !1423)
!1430 = !DILocalVariable(name: "dst", arg: 2, scope: !1425, file: !1415, line: 360, type: !110)
!1431 = !DILocation(line: 360, column: 69, scope: !1425, inlinedAt: !1429)
!1432 = !DILocalVariable(name: "size", arg: 3, scope: !1425, file: !1415, line: 361, type: !109)
!1433 = !DILocation(line: 361, column: 73, scope: !1425, inlinedAt: !1429)
!1434 = !DILocalVariable(name: "b", arg: 1, scope: !1435, file: !1415, line: 95, type: !1418)
!1435 = distinct !DISubprogram(name: "bytestream_get_byte", scope: !1415, file: !1415, line: 95, type: !1416, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!1436 = !DILocation(line: 95, column: 95, scope: !1435, inlinedAt: !1437)
!1437 = distinct !DILocation(line: 2982, column: 19, scope: !1421)
!1438 = !DILocation(line: 93, column: 95, scope: !1414, inlinedAt: !1439)
!1439 = distinct !DILocation(line: 2981, column: 18, scope: !1421)
!1440 = !DILocalVariable(name: "g", arg: 1, scope: !1441, file: !1415, line: 133, type: !1444)
!1441 = distinct !DISubprogram(name: "bytestream2_init", scope: !1415, file: !1415, line: 133, type: !1442, isLocal: true, isDefinition: true, scopeLine: 136, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{null, !1444, !131, !108}
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64, align: 64)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetByteContext", file: !1415, line: 35, baseType: !1446)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetByteContext", file: !1415, line: 33, size: 192, align: 64, elements: !1447)
!1447 = !{!1448, !1449, !1450}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1446, file: !1415, line: 34, baseType: !131, size: 64, align: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1446, file: !1415, line: 34, baseType: !131, size: 64, align: 64, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !1446, file: !1415, line: 34, baseType: !131, size: 64, align: 64, offset: 128)
!1451 = !DILocation(line: 133, column: 84, scope: !1441, inlinedAt: !1452)
!1452 = distinct !DILocation(line: 3027, column: 17, scope: !1453)
!1453 = distinct !DILexicalBlock(scope: !1454, file: !64, line: 3018, column: 53)
!1454 = distinct !DILexicalBlock(scope: !1455, file: !64, line: 3018, column: 17)
!1455 = distinct !DILexicalBlock(scope: !1456, file: !64, line: 3015, column: 42)
!1456 = distinct !DILexicalBlock(scope: !1423, file: !64, line: 3015, column: 13)
!1457 = !DILocalVariable(name: "buf", arg: 2, scope: !1441, file: !1415, line: 134, type: !131)
!1458 = !DILocation(line: 134, column: 62, scope: !1441, inlinedAt: !1452)
!1459 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1441, file: !1415, line: 135, type: !108)
!1460 = !DILocation(line: 135, column: 51, scope: !1441, inlinedAt: !1452)
!1461 = !DILocation(line: 93, column: 95, scope: !1414, inlinedAt: !1462)
!1462 = distinct !DILocation(line: 2980, column: 23, scope: !1421)
!1463 = !DILocation(line: 95, column: 95, scope: !1435, inlinedAt: !1464)
!1464 = distinct !DILocation(line: 2979, column: 23, scope: !1421)
!1465 = !DILocation(line: 359, column: 97, scope: !1425, inlinedAt: !1466)
!1466 = distinct !DILocation(line: 2973, column: 13, scope: !1421)
!1467 = !DILocation(line: 360, column: 69, scope: !1425, inlinedAt: !1466)
!1468 = !DILocation(line: 361, column: 73, scope: !1425, inlinedAt: !1466)
!1469 = !DILocalVariable(name: "s", arg: 1, scope: !1410, file: !64, line: 2949, type: !154)
!1470 = !DILocation(line: 2949, column: 35, scope: !1410)
!1471 = !DILocalVariable(name: "buf", arg: 2, scope: !1410, file: !64, line: 2949, type: !131)
!1472 = !DILocation(line: 2949, column: 53, scope: !1410)
!1473 = !DILocalVariable(name: "size", arg: 3, scope: !1410, file: !64, line: 2949, type: !108)
!1474 = !DILocation(line: 2949, column: 62, scope: !1410)
!1475 = !DILocalVariable(name: "rt", scope: !1410, file: !64, line: 2951, type: !385)
!1476 = !DILocation(line: 2951, column: 18, scope: !1410)
!1477 = !DILocation(line: 2951, column: 23, scope: !1410)
!1478 = !DILocation(line: 2951, column: 26, scope: !1410)
!1479 = !DILocalVariable(name: "size_temp", scope: !1410, file: !64, line: 2952, type: !108)
!1480 = !DILocation(line: 2952, column: 9, scope: !1410)
!1481 = !DILocation(line: 2952, column: 21, scope: !1410)
!1482 = !DILocalVariable(name: "pktsize", scope: !1410, file: !64, line: 2953, type: !108)
!1483 = !DILocation(line: 2953, column: 9, scope: !1410)
!1484 = !DILocalVariable(name: "pkttype", scope: !1410, file: !64, line: 2953, type: !108)
!1485 = !DILocation(line: 2953, column: 18, scope: !1410)
!1486 = !DILocalVariable(name: "copy", scope: !1410, file: !64, line: 2953, type: !108)
!1487 = !DILocation(line: 2953, column: 27, scope: !1410)
!1488 = !DILocalVariable(name: "ts", scope: !1410, file: !64, line: 2954, type: !119)
!1489 = !DILocation(line: 2954, column: 14, scope: !1410)
!1490 = !DILocalVariable(name: "buf_temp", scope: !1410, file: !64, line: 2955, type: !131)
!1491 = !DILocation(line: 2955, column: 20, scope: !1410)
!1492 = !DILocation(line: 2955, column: 31, scope: !1410)
!1493 = !DILocalVariable(name: "c", scope: !1410, file: !64, line: 2956, type: !111)
!1494 = !DILocation(line: 2956, column: 13, scope: !1410)
!1495 = !DILocalVariable(name: "ret", scope: !1410, file: !64, line: 2957, type: !108)
!1496 = !DILocation(line: 2957, column: 9, scope: !1410)
!1497 = !DILocation(line: 2959, column: 5, scope: !1410)
!1498 = distinct !{!1498, !1497}
!1499 = !DILocation(line: 2960, column: 13, scope: !1500)
!1500 = distinct !DILexicalBlock(scope: !1423, file: !64, line: 2960, column: 13)
!1501 = !DILocation(line: 2960, column: 17, scope: !1500)
!1502 = !DILocation(line: 2960, column: 13, scope: !1423)
!1503 = !DILocalVariable(name: "skip", scope: !1504, file: !64, line: 2961, type: !108)
!1504 = distinct !DILexicalBlock(scope: !1500, file: !64, line: 2960, column: 29)
!1505 = !DILocation(line: 2961, column: 17, scope: !1504)
!1506 = !DILocation(line: 2961, column: 26, scope: !1504)
!1507 = !DILocation(line: 2961, column: 30, scope: !1504)
!1508 = !DILocation(line: 2961, column: 45, scope: !1504)
!1509 = !DILocation(line: 2961, column: 42, scope: !1504)
!1510 = !DILocation(line: 2961, column: 25, scope: !1504)
!1511 = !DILocation(line: 2961, column: 59, scope: !1512)
!1512 = !DILexicalBlockFile(scope: !1504, file: !64, discriminator: 1)
!1513 = !DILocation(line: 2961, column: 25, scope: !1512)
!1514 = !DILocation(line: 2961, column: 73, scope: !1515)
!1515 = !DILexicalBlockFile(scope: !1504, file: !64, discriminator: 2)
!1516 = !DILocation(line: 2961, column: 77, scope: !1515)
!1517 = !DILocation(line: 2961, column: 25, scope: !1515)
!1518 = !DILocation(line: 2961, column: 25, scope: !1519)
!1519 = !DILexicalBlockFile(scope: !1504, file: !64, discriminator: 3)
!1520 = !DILocation(line: 2961, column: 17, scope: !1519)
!1521 = !DILocation(line: 2962, column: 25, scope: !1504)
!1522 = !DILocation(line: 2962, column: 22, scope: !1504)
!1523 = !DILocation(line: 2963, column: 26, scope: !1504)
!1524 = !DILocation(line: 2963, column: 23, scope: !1504)
!1525 = !DILocation(line: 2964, column: 31, scope: !1504)
!1526 = !DILocation(line: 2964, column: 13, scope: !1504)
!1527 = !DILocation(line: 2964, column: 17, scope: !1504)
!1528 = !DILocation(line: 2964, column: 28, scope: !1504)
!1529 = !DILocation(line: 2965, column: 13, scope: !1504)
!1530 = !DILocation(line: 2968, column: 13, scope: !1422)
!1531 = !DILocation(line: 2968, column: 17, scope: !1422)
!1532 = !DILocation(line: 2968, column: 34, scope: !1422)
!1533 = !DILocation(line: 2968, column: 13, scope: !1423)
!1534 = !DILocalVariable(name: "header", scope: !1421, file: !64, line: 2969, type: !131)
!1535 = !DILocation(line: 2969, column: 28, scope: !1421)
!1536 = !DILocation(line: 2969, column: 37, scope: !1421)
!1537 = !DILocation(line: 2969, column: 41, scope: !1421)
!1538 = !DILocalVariable(name: "channel", scope: !1421, file: !64, line: 2970, type: !108)
!1539 = !DILocation(line: 2970, column: 17, scope: !1421)
!1540 = !DILocation(line: 2972, column: 27, scope: !1421)
!1541 = !DILocation(line: 2972, column: 31, scope: !1421)
!1542 = !DILocation(line: 2972, column: 25, scope: !1421)
!1543 = !DILocation(line: 2972, column: 52, scope: !1421)
!1544 = !DILocation(line: 2972, column: 49, scope: !1421)
!1545 = !DILocation(line: 2972, column: 21, scope: !1421)
!1546 = !DILocation(line: 2972, column: 66, scope: !1547)
!1547 = !DILexicalBlockFile(scope: !1421, file: !64, discriminator: 1)
!1548 = !DILocation(line: 2972, column: 21, scope: !1547)
!1549 = !DILocation(line: 2972, column: 85, scope: !1550)
!1550 = !DILexicalBlockFile(scope: !1421, file: !64, discriminator: 2)
!1551 = !DILocation(line: 2972, column: 89, scope: !1550)
!1552 = !DILocation(line: 2972, column: 83, scope: !1550)
!1553 = !DILocation(line: 2972, column: 21, scope: !1550)
!1554 = !DILocation(line: 2972, column: 21, scope: !1555)
!1555 = !DILexicalBlockFile(scope: !1421, file: !64, discriminator: 3)
!1556 = !DILocation(line: 2972, column: 18, scope: !1555)
!1557 = !DILocation(line: 2973, column: 46, scope: !1421)
!1558 = !DILocation(line: 2973, column: 50, scope: !1421)
!1559 = !DILocation(line: 2973, column: 63, scope: !1421)
!1560 = !DILocation(line: 2973, column: 67, scope: !1421)
!1561 = !DILocation(line: 2973, column: 61, scope: !1421)
!1562 = !DILocation(line: 2973, column: 85, scope: !1421)
!1563 = !DILocation(line: 2973, column: 13, scope: !1421)
!1564 = !DILocation(line: 363, column: 12, scope: !1425, inlinedAt: !1466)
!1565 = !DILocation(line: 363, column: 18, scope: !1425, inlinedAt: !1466)
!1566 = !DILocation(line: 363, column: 17, scope: !1425, inlinedAt: !1466)
!1567 = !DILocation(line: 363, column: 21, scope: !1425, inlinedAt: !1466)
!1568 = !DILocation(line: 363, column: 5, scope: !1425, inlinedAt: !1466)
!1569 = !DILocation(line: 364, column: 13, scope: !1425, inlinedAt: !1466)
!1570 = !DILocation(line: 364, column: 7, scope: !1425, inlinedAt: !1466)
!1571 = !DILocation(line: 364, column: 10, scope: !1425, inlinedAt: !1466)
!1572 = !DILocation(line: 365, column: 12, scope: !1425, inlinedAt: !1466)
!1573 = !DILocation(line: 2974, column: 37, scope: !1421)
!1574 = !DILocation(line: 2974, column: 13, scope: !1421)
!1575 = !DILocation(line: 2974, column: 17, scope: !1421)
!1576 = !DILocation(line: 2974, column: 34, scope: !1421)
!1577 = !DILocation(line: 2975, column: 26, scope: !1421)
!1578 = !DILocation(line: 2975, column: 23, scope: !1421)
!1579 = !DILocation(line: 2976, column: 17, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1421, file: !64, line: 2976, column: 17)
!1581 = !DILocation(line: 2976, column: 21, scope: !1580)
!1582 = !DILocation(line: 2976, column: 38, scope: !1580)
!1583 = !DILocation(line: 2976, column: 17, scope: !1421)
!1584 = !DILocation(line: 2977, column: 17, scope: !1580)
!1585 = !DILocation(line: 2979, column: 23, scope: !1421)
!1586 = !DILocation(line: 95, column: 102, scope: !1435, inlinedAt: !1464)
!1587 = !DILocation(line: 95, column: 105, scope: !1435, inlinedAt: !1464)
!1588 = !DILocation(line: 95, column: 138, scope: !1435, inlinedAt: !1464)
!1589 = !DILocation(line: 95, column: 137, scope: !1435, inlinedAt: !1464)
!1590 = !DILocation(line: 95, column: 140, scope: !1435, inlinedAt: !1464)
!1591 = !DILocation(line: 95, column: 119, scope: !1435, inlinedAt: !1464)
!1592 = !DILocation(line: 95, column: 118, scope: !1435, inlinedAt: !1464)
!1593 = !DILocation(line: 2979, column: 21, scope: !1421)
!1594 = !DILocation(line: 2980, column: 23, scope: !1421)
!1595 = !DILocation(line: 93, column: 102, scope: !1414, inlinedAt: !1462)
!1596 = !DILocation(line: 93, column: 105, scope: !1414, inlinedAt: !1462)
!1597 = !DILocation(line: 93, column: 139, scope: !1414, inlinedAt: !1462)
!1598 = !DILocation(line: 93, column: 138, scope: !1414, inlinedAt: !1462)
!1599 = !DILocation(line: 93, column: 141, scope: !1414, inlinedAt: !1462)
!1600 = !DILocation(line: 93, column: 120, scope: !1414, inlinedAt: !1462)
!1601 = !DILocation(line: 93, column: 150, scope: !1414, inlinedAt: !1462)
!1602 = !DILocation(line: 93, column: 179, scope: !1414, inlinedAt: !1462)
!1603 = !DILocation(line: 93, column: 178, scope: !1414, inlinedAt: !1462)
!1604 = !DILocation(line: 93, column: 181, scope: !1414, inlinedAt: !1462)
!1605 = !DILocation(line: 93, column: 160, scope: !1414, inlinedAt: !1462)
!1606 = !DILocation(line: 93, column: 190, scope: !1414, inlinedAt: !1462)
!1607 = !DILocation(line: 93, column: 157, scope: !1414, inlinedAt: !1462)
!1608 = !DILocation(line: 93, column: 217, scope: !1414, inlinedAt: !1462)
!1609 = !DILocation(line: 93, column: 216, scope: !1414, inlinedAt: !1462)
!1610 = !DILocation(line: 93, column: 219, scope: !1414, inlinedAt: !1462)
!1611 = !DILocation(line: 93, column: 198, scope: !1414, inlinedAt: !1462)
!1612 = !DILocation(line: 93, column: 196, scope: !1414, inlinedAt: !1462)
!1613 = !DILocation(line: 2980, column: 21, scope: !1421)
!1614 = !DILocation(line: 2981, column: 18, scope: !1421)
!1615 = !DILocation(line: 93, column: 102, scope: !1414, inlinedAt: !1439)
!1616 = !DILocation(line: 93, column: 105, scope: !1414, inlinedAt: !1439)
!1617 = !DILocation(line: 93, column: 139, scope: !1414, inlinedAt: !1439)
!1618 = !DILocation(line: 93, column: 138, scope: !1414, inlinedAt: !1439)
!1619 = !DILocation(line: 93, column: 141, scope: !1414, inlinedAt: !1439)
!1620 = !DILocation(line: 93, column: 120, scope: !1414, inlinedAt: !1439)
!1621 = !DILocation(line: 93, column: 150, scope: !1414, inlinedAt: !1439)
!1622 = !DILocation(line: 93, column: 179, scope: !1414, inlinedAt: !1439)
!1623 = !DILocation(line: 93, column: 178, scope: !1414, inlinedAt: !1439)
!1624 = !DILocation(line: 93, column: 181, scope: !1414, inlinedAt: !1439)
!1625 = !DILocation(line: 93, column: 160, scope: !1414, inlinedAt: !1439)
!1626 = !DILocation(line: 93, column: 190, scope: !1414, inlinedAt: !1439)
!1627 = !DILocation(line: 93, column: 157, scope: !1414, inlinedAt: !1439)
!1628 = !DILocation(line: 93, column: 217, scope: !1414, inlinedAt: !1439)
!1629 = !DILocation(line: 93, column: 216, scope: !1414, inlinedAt: !1439)
!1630 = !DILocation(line: 93, column: 219, scope: !1414, inlinedAt: !1439)
!1631 = !DILocation(line: 93, column: 198, scope: !1414, inlinedAt: !1439)
!1632 = !DILocation(line: 93, column: 196, scope: !1414, inlinedAt: !1439)
!1633 = !DILocation(line: 2981, column: 16, scope: !1421)
!1634 = !DILocation(line: 2982, column: 19, scope: !1421)
!1635 = !DILocation(line: 95, column: 102, scope: !1435, inlinedAt: !1437)
!1636 = !DILocation(line: 95, column: 105, scope: !1435, inlinedAt: !1437)
!1637 = !DILocation(line: 95, column: 138, scope: !1435, inlinedAt: !1437)
!1638 = !DILocation(line: 95, column: 137, scope: !1435, inlinedAt: !1437)
!1639 = !DILocation(line: 95, column: 140, scope: !1435, inlinedAt: !1437)
!1640 = !DILocation(line: 95, column: 119, scope: !1435, inlinedAt: !1437)
!1641 = !DILocation(line: 95, column: 118, scope: !1435, inlinedAt: !1437)
!1642 = !DILocation(line: 2982, column: 48, scope: !1421)
!1643 = !DILocation(line: 2982, column: 16, scope: !1421)
!1644 = !DILocation(line: 2983, column: 13, scope: !1421)
!1645 = !DILocation(line: 93, column: 102, scope: !1414, inlinedAt: !1420)
!1646 = !DILocation(line: 93, column: 105, scope: !1414, inlinedAt: !1420)
!1647 = !DILocation(line: 93, column: 139, scope: !1414, inlinedAt: !1420)
!1648 = !DILocation(line: 93, column: 138, scope: !1414, inlinedAt: !1420)
!1649 = !DILocation(line: 93, column: 141, scope: !1414, inlinedAt: !1420)
!1650 = !DILocation(line: 93, column: 120, scope: !1414, inlinedAt: !1420)
!1651 = !DILocation(line: 93, column: 150, scope: !1414, inlinedAt: !1420)
!1652 = !DILocation(line: 93, column: 179, scope: !1414, inlinedAt: !1420)
!1653 = !DILocation(line: 93, column: 178, scope: !1414, inlinedAt: !1420)
!1654 = !DILocation(line: 93, column: 181, scope: !1414, inlinedAt: !1420)
!1655 = !DILocation(line: 93, column: 160, scope: !1414, inlinedAt: !1420)
!1656 = !DILocation(line: 93, column: 190, scope: !1414, inlinedAt: !1420)
!1657 = !DILocation(line: 93, column: 157, scope: !1414, inlinedAt: !1420)
!1658 = !DILocation(line: 93, column: 217, scope: !1414, inlinedAt: !1420)
!1659 = !DILocation(line: 93, column: 216, scope: !1414, inlinedAt: !1420)
!1660 = !DILocation(line: 93, column: 219, scope: !1414, inlinedAt: !1420)
!1661 = !DILocation(line: 93, column: 198, scope: !1414, inlinedAt: !1420)
!1662 = !DILocation(line: 93, column: 196, scope: !1414, inlinedAt: !1420)
!1663 = !DILocation(line: 2984, column: 28, scope: !1421)
!1664 = !DILocation(line: 2984, column: 13, scope: !1421)
!1665 = !DILocation(line: 2984, column: 17, scope: !1421)
!1666 = !DILocation(line: 2984, column: 26, scope: !1421)
!1667 = !DILocation(line: 2986, column: 17, scope: !1668)
!1668 = distinct !DILexicalBlock(scope: !1421, file: !64, line: 2986, column: 17)
!1669 = !DILocation(line: 2986, column: 25, scope: !1668)
!1670 = !DILocation(line: 2986, column: 17, scope: !1421)
!1671 = !DILocation(line: 2987, column: 25, scope: !1668)
!1672 = !DILocation(line: 2987, column: 17, scope: !1668)
!1673 = !DILocation(line: 2989, column: 19, scope: !1674)
!1674 = distinct !DILexicalBlock(scope: !1421, file: !64, line: 2989, column: 17)
!1675 = !DILocation(line: 2989, column: 27, scope: !1674)
!1676 = !DILocation(line: 2989, column: 44, scope: !1674)
!1677 = !DILocation(line: 2989, column: 47, scope: !1678)
!1678 = !DILexicalBlockFile(scope: !1674, file: !64, discriminator: 1)
!1679 = !DILocation(line: 2989, column: 55, scope: !1678)
!1680 = !DILocation(line: 2989, column: 73, scope: !1678)
!1681 = !DILocation(line: 2989, column: 76, scope: !1682)
!1682 = !DILexicalBlockFile(scope: !1674, file: !64, discriminator: 2)
!1683 = !DILocation(line: 2989, column: 79, scope: !1682)
!1684 = !DILocation(line: 2989, column: 85, scope: !1682)
!1685 = !DILocation(line: 2990, column: 17, scope: !1674)
!1686 = !DILocation(line: 2990, column: 25, scope: !1674)
!1687 = !DILocation(line: 2989, column: 17, scope: !1555)
!1688 = !DILocation(line: 2991, column: 55, scope: !1689)
!1689 = distinct !DILexicalBlock(scope: !1690, file: !64, line: 2991, column: 21)
!1690 = distinct !DILexicalBlock(scope: !1674, file: !64, line: 2990, column: 44)
!1691 = !DILocation(line: 2991, column: 59, scope: !1689)
!1692 = !DILocation(line: 2992, column: 55, scope: !1689)
!1693 = !DILocation(line: 2992, column: 59, scope: !1689)
!1694 = !DILocation(line: 2993, column: 54, scope: !1689)
!1695 = !DILocation(line: 2991, column: 28, scope: !1689)
!1696 = !DILocation(line: 2991, column: 26, scope: !1689)
!1697 = !DILocation(line: 2993, column: 64, scope: !1689)
!1698 = !DILocation(line: 2991, column: 21, scope: !1690)
!1699 = !DILocation(line: 2994, column: 28, scope: !1689)
!1700 = !DILocation(line: 2994, column: 21, scope: !1689)
!1701 = !DILocation(line: 2998, column: 33, scope: !1690)
!1702 = !DILocation(line: 2998, column: 17, scope: !1690)
!1703 = !DILocation(line: 2998, column: 21, scope: !1690)
!1704 = !DILocation(line: 2998, column: 42, scope: !1690)
!1705 = !DILocation(line: 2998, column: 53, scope: !1690)
!1706 = !DILocation(line: 2999, column: 13, scope: !1690)
!1707 = !DILocation(line: 3002, column: 47, scope: !1708)
!1708 = distinct !DILexicalBlock(scope: !1421, file: !64, line: 3002, column: 17)
!1709 = !DILocation(line: 3002, column: 51, scope: !1708)
!1710 = !DILocation(line: 3002, column: 60, scope: !1708)
!1711 = !DILocation(line: 3003, column: 46, scope: !1708)
!1712 = !DILocation(line: 3003, column: 55, scope: !1708)
!1713 = !DILocation(line: 3003, column: 59, scope: !1708)
!1714 = !DILocation(line: 3002, column: 24, scope: !1708)
!1715 = !DILocation(line: 3002, column: 22, scope: !1708)
!1716 = !DILocation(line: 3003, column: 69, scope: !1708)
!1717 = !DILocation(line: 3002, column: 17, scope: !1421)
!1718 = !DILocation(line: 3004, column: 24, scope: !1708)
!1719 = !DILocation(line: 3004, column: 17, scope: !1708)
!1720 = !DILocation(line: 3006, column: 33, scope: !1421)
!1721 = !DILocation(line: 3006, column: 37, scope: !1421)
!1722 = !DILocation(line: 3006, column: 13, scope: !1421)
!1723 = !DILocation(line: 3006, column: 17, scope: !1421)
!1724 = !DILocation(line: 3006, column: 25, scope: !1421)
!1725 = !DILocation(line: 3006, column: 31, scope: !1421)
!1726 = !DILocation(line: 3007, column: 28, scope: !1421)
!1727 = !DILocation(line: 3007, column: 32, scope: !1421)
!1728 = !DILocation(line: 3007, column: 40, scope: !1421)
!1729 = !DILocation(line: 3007, column: 13, scope: !1421)
!1730 = !DILocation(line: 3007, column: 17, scope: !1421)
!1731 = !DILocation(line: 3007, column: 26, scope: !1421)
!1732 = !DILocation(line: 3008, column: 9, scope: !1421)
!1733 = !DILocation(line: 3010, column: 18, scope: !1423)
!1734 = !DILocation(line: 3010, column: 22, scope: !1423)
!1735 = !DILocation(line: 3010, column: 33, scope: !1423)
!1736 = !DILocation(line: 3010, column: 37, scope: !1423)
!1737 = !DILocation(line: 3010, column: 31, scope: !1423)
!1738 = !DILocation(line: 3010, column: 49, scope: !1423)
!1739 = !DILocation(line: 3010, column: 46, scope: !1423)
!1740 = !DILocation(line: 3010, column: 17, scope: !1423)
!1741 = !DILocation(line: 3010, column: 63, scope: !1742)
!1742 = !DILexicalBlockFile(scope: !1423, file: !64, discriminator: 1)
!1743 = !DILocation(line: 3010, column: 17, scope: !1742)
!1744 = !DILocation(line: 3010, column: 77, scope: !1745)
!1745 = !DILexicalBlockFile(scope: !1423, file: !64, discriminator: 2)
!1746 = !DILocation(line: 3010, column: 81, scope: !1745)
!1747 = !DILocation(line: 3010, column: 92, scope: !1745)
!1748 = !DILocation(line: 3010, column: 96, scope: !1745)
!1749 = !DILocation(line: 3010, column: 90, scope: !1745)
!1750 = !DILocation(line: 3010, column: 17, scope: !1745)
!1751 = !DILocation(line: 3010, column: 17, scope: !1752)
!1752 = !DILexicalBlockFile(scope: !1423, file: !64, discriminator: 3)
!1753 = !DILocation(line: 3010, column: 14, scope: !1752)
!1754 = !DILocation(line: 3011, column: 42, scope: !1423)
!1755 = !DILocation(line: 3011, column: 46, scope: !1423)
!1756 = !DILocation(line: 3011, column: 57, scope: !1423)
!1757 = !DILocation(line: 3011, column: 61, scope: !1423)
!1758 = !DILocation(line: 3011, column: 55, scope: !1423)
!1759 = !DILocation(line: 3011, column: 70, scope: !1423)
!1760 = !DILocation(line: 3011, column: 9, scope: !1423)
!1761 = !DILocation(line: 363, column: 12, scope: !1425, inlinedAt: !1429)
!1762 = !DILocation(line: 363, column: 18, scope: !1425, inlinedAt: !1429)
!1763 = !DILocation(line: 363, column: 17, scope: !1425, inlinedAt: !1429)
!1764 = !DILocation(line: 363, column: 21, scope: !1425, inlinedAt: !1429)
!1765 = !DILocation(line: 363, column: 5, scope: !1425, inlinedAt: !1429)
!1766 = !DILocation(line: 364, column: 13, scope: !1425, inlinedAt: !1429)
!1767 = !DILocation(line: 364, column: 7, scope: !1425, inlinedAt: !1429)
!1768 = !DILocation(line: 364, column: 10, scope: !1425, inlinedAt: !1429)
!1769 = !DILocation(line: 365, column: 12, scope: !1425, inlinedAt: !1429)
!1770 = !DILocation(line: 3012, column: 24, scope: !1423)
!1771 = !DILocation(line: 3012, column: 9, scope: !1423)
!1772 = !DILocation(line: 3012, column: 13, scope: !1423)
!1773 = !DILocation(line: 3012, column: 21, scope: !1423)
!1774 = !DILocation(line: 3013, column: 22, scope: !1423)
!1775 = !DILocation(line: 3013, column: 19, scope: !1423)
!1776 = !DILocation(line: 3015, column: 13, scope: !1456)
!1777 = !DILocation(line: 3015, column: 17, scope: !1456)
!1778 = !DILocation(line: 3015, column: 28, scope: !1456)
!1779 = !DILocation(line: 3015, column: 32, scope: !1456)
!1780 = !DILocation(line: 3015, column: 25, scope: !1456)
!1781 = !DILocation(line: 3015, column: 13, scope: !1423)
!1782 = !DILocation(line: 3016, column: 13, scope: !1455)
!1783 = !DILocation(line: 3016, column: 17, scope: !1455)
!1784 = !DILocation(line: 3016, column: 28, scope: !1455)
!1785 = !DILocation(line: 3018, column: 17, scope: !1454)
!1786 = !DILocation(line: 3018, column: 21, scope: !1454)
!1787 = !DILocation(line: 3018, column: 29, scope: !1454)
!1788 = !DILocation(line: 3018, column: 34, scope: !1454)
!1789 = !DILocation(line: 3018, column: 17, scope: !1455)
!1790 = !DILocalVariable(name: "commandbuffer", scope: !1453, file: !64, line: 3023, type: !1791)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 512, align: 8, elements: !1792)
!1792 = !{!1793}
!1793 = !DISubrange(count: 64)
!1794 = !DILocation(line: 3023, column: 25, scope: !1453)
!1795 = !DILocalVariable(name: "stringlen", scope: !1453, file: !64, line: 3024, type: !108)
!1796 = !DILocation(line: 3024, column: 21, scope: !1453)
!1797 = !DILocalVariable(name: "gbc", scope: !1453, file: !64, line: 3025, type: !1445)
!1798 = !DILocation(line: 3025, column: 32, scope: !1453)
!1799 = !DILocation(line: 3027, column: 40, scope: !1453)
!1800 = !DILocation(line: 3027, column: 44, scope: !1453)
!1801 = !DILocation(line: 3027, column: 54, scope: !1453)
!1802 = !DILocation(line: 3027, column: 58, scope: !1453)
!1803 = !DILocation(line: 3027, column: 17, scope: !1453)
!1804 = !DILocation(line: 137, column: 16, scope: !1805, inlinedAt: !1452)
!1805 = !DILexicalBlockFile(scope: !1806, file: !1415, discriminator: 1)
!1806 = distinct !DILexicalBlock(scope: !1807, file: !1415, line: 137, column: 14)
!1807 = distinct !DILexicalBlock(scope: !1441, file: !1415, line: 137, column: 8)
!1808 = !DILocation(line: 137, column: 25, scope: !1805, inlinedAt: !1452)
!1809 = !DILocation(line: 137, column: 14, scope: !1805, inlinedAt: !1452)
!1810 = !DILocation(line: 137, column: 34, scope: !1811, inlinedAt: !1452)
!1811 = !DILexicalBlockFile(scope: !1812, file: !1415, discriminator: 2)
!1812 = distinct !DILexicalBlock(scope: !1806, file: !1415, line: 137, column: 32)
!1813 = !DILocation(line: 137, column: 95, scope: !1814, inlinedAt: !1452)
!1814 = !DILexicalBlockFile(scope: !1811, file: !1415, discriminator: 4)
!1815 = !DILocation(line: 137, column: 95, scope: !1811, inlinedAt: !1452)
!1816 = !DILocation(line: 138, column: 17, scope: !1441, inlinedAt: !1452)
!1817 = !DILocation(line: 138, column: 5, scope: !1441, inlinedAt: !1452)
!1818 = !DILocation(line: 138, column: 8, scope: !1441, inlinedAt: !1452)
!1819 = !DILocation(line: 138, column: 15, scope: !1441, inlinedAt: !1452)
!1820 = !DILocation(line: 139, column: 23, scope: !1441, inlinedAt: !1452)
!1821 = !DILocation(line: 139, column: 5, scope: !1441, inlinedAt: !1452)
!1822 = !DILocation(line: 139, column: 8, scope: !1441, inlinedAt: !1452)
!1823 = !DILocation(line: 139, column: 21, scope: !1441, inlinedAt: !1452)
!1824 = !DILocation(line: 140, column: 21, scope: !1441, inlinedAt: !1452)
!1825 = !DILocation(line: 140, column: 27, scope: !1441, inlinedAt: !1452)
!1826 = !DILocation(line: 140, column: 25, scope: !1441, inlinedAt: !1452)
!1827 = !DILocation(line: 140, column: 5, scope: !1441, inlinedAt: !1452)
!1828 = !DILocation(line: 140, column: 8, scope: !1441, inlinedAt: !1452)
!1829 = !DILocation(line: 140, column: 19, scope: !1441, inlinedAt: !1452)
!1830 = !DILocation(line: 3028, column: 47, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1453, file: !64, line: 3028, column: 21)
!1832 = !DILocation(line: 3028, column: 22, scope: !1831)
!1833 = !DILocation(line: 3028, column: 21, scope: !1453)
!1834 = !DILocation(line: 3030, column: 33, scope: !1835)
!1835 = distinct !DILexicalBlock(scope: !1836, file: !64, line: 3030, column: 25)
!1836 = distinct !DILexicalBlock(scope: !1831, file: !64, line: 3029, column: 54)
!1837 = !DILocation(line: 3030, column: 26, scope: !1835)
!1838 = !DILocation(line: 3030, column: 62, scope: !1835)
!1839 = !DILocation(line: 3031, column: 33, scope: !1835)
!1840 = !DILocation(line: 3031, column: 26, scope: !1835)
!1841 = !DILocation(line: 3030, column: 25, scope: !1842)
!1842 = !DILexicalBlockFile(scope: !1836, file: !64, discriminator: 1)
!1843 = !DILocalVariable(name: "ptr", scope: !1844, file: !64, line: 3032, type: !110)
!1844 = distinct !DILexicalBlock(scope: !1835, file: !64, line: 3031, column: 70)
!1845 = !DILocation(line: 3032, column: 34, scope: !1844)
!1846 = !DILocation(line: 3033, column: 49, scope: !1847)
!1847 = distinct !DILexicalBlock(scope: !1844, file: !64, line: 3033, column: 29)
!1848 = !DILocation(line: 3033, column: 53, scope: !1847)
!1849 = !DILocation(line: 3033, column: 61, scope: !1847)
!1850 = !DILocation(line: 3033, column: 48, scope: !1847)
!1851 = !DILocation(line: 3033, column: 67, scope: !1847)
!1852 = !DILocation(line: 3033, column: 71, scope: !1847)
!1853 = !DILocation(line: 3033, column: 79, scope: !1847)
!1854 = !DILocation(line: 3033, column: 84, scope: !1847)
!1855 = !DILocation(line: 3033, column: 36, scope: !1847)
!1856 = !DILocation(line: 3033, column: 34, scope: !1847)
!1857 = !DILocation(line: 3033, column: 91, scope: !1847)
!1858 = !DILocation(line: 3033, column: 29, scope: !1844)
!1859 = !DILocation(line: 3034, column: 58, scope: !1860)
!1860 = distinct !DILexicalBlock(scope: !1847, file: !64, line: 3033, column: 96)
!1861 = !DILocation(line: 3034, column: 62, scope: !1860)
!1862 = !DILocation(line: 3034, column: 79, scope: !1860)
!1863 = !DILocation(line: 3034, column: 44, scope: !1860)
!1864 = !DILocation(line: 3034, column: 48, scope: !1860)
!1865 = !DILocation(line: 3034, column: 56, scope: !1860)
!1866 = !DILocation(line: 3034, column: 29, scope: !1860)
!1867 = !DILocation(line: 3034, column: 33, scope: !1860)
!1868 = !DILocation(line: 3034, column: 42, scope: !1860)
!1869 = !DILocation(line: 3035, column: 36, scope: !1860)
!1870 = !DILocation(line: 3035, column: 29, scope: !1860)
!1871 = !DILocation(line: 3037, column: 33, scope: !1844)
!1872 = !DILocation(line: 3037, column: 37, scope: !1844)
!1873 = !DILocation(line: 3037, column: 45, scope: !1844)
!1874 = !DILocation(line: 3037, column: 50, scope: !1844)
!1875 = !DILocation(line: 3037, column: 56, scope: !1844)
!1876 = !DILocation(line: 3037, column: 60, scope: !1844)
!1877 = !DILocation(line: 3037, column: 68, scope: !1844)
!1878 = !DILocation(line: 3037, column: 74, scope: !1844)
!1879 = !DILocation(line: 3037, column: 78, scope: !1844)
!1880 = !DILocation(line: 3037, column: 86, scope: !1844)
!1881 = !DILocation(line: 3037, column: 25, scope: !1844)
!1882 = !DILocation(line: 3038, column: 25, scope: !1844)
!1883 = !DILocation(line: 3038, column: 29, scope: !1844)
!1884 = !DILocation(line: 3038, column: 37, scope: !1844)
!1885 = !DILocation(line: 3038, column: 42, scope: !1844)
!1886 = !DILocation(line: 3039, column: 31, scope: !1844)
!1887 = !DILocation(line: 3039, column: 35, scope: !1844)
!1888 = !DILocation(line: 3039, column: 43, scope: !1844)
!1889 = !DILocation(line: 3039, column: 29, scope: !1844)
!1890 = !DILocation(line: 3040, column: 25, scope: !1844)
!1891 = !DILocation(line: 3041, column: 21, scope: !1844)
!1892 = !DILocation(line: 3042, column: 17, scope: !1836)
!1893 = !DILocation(line: 3043, column: 13, scope: !1453)
!1894 = !DILocation(line: 3045, column: 41, scope: !1895)
!1895 = distinct !DILexicalBlock(scope: !1455, file: !64, line: 3045, column: 17)
!1896 = !DILocation(line: 3045, column: 46, scope: !1895)
!1897 = !DILocation(line: 3045, column: 50, scope: !1895)
!1898 = !DILocation(line: 3045, column: 24, scope: !1895)
!1899 = !DILocation(line: 3045, column: 22, scope: !1895)
!1900 = !DILocation(line: 3045, column: 63, scope: !1895)
!1901 = !DILocation(line: 3045, column: 17, scope: !1455)
!1902 = !DILocation(line: 3046, column: 24, scope: !1895)
!1903 = !DILocation(line: 3046, column: 17, scope: !1895)
!1904 = !DILocation(line: 3047, column: 13, scope: !1455)
!1905 = !DILocation(line: 3047, column: 17, scope: !1455)
!1906 = !DILocation(line: 3047, column: 26, scope: !1455)
!1907 = !DILocation(line: 3048, column: 13, scope: !1455)
!1908 = !DILocation(line: 3048, column: 17, scope: !1455)
!1909 = !DILocation(line: 3048, column: 25, scope: !1455)
!1910 = !DILocation(line: 3049, column: 13, scope: !1455)
!1911 = !DILocation(line: 3049, column: 17, scope: !1455)
!1912 = !DILocation(line: 3049, column: 34, scope: !1455)
!1913 = !DILocation(line: 3050, column: 13, scope: !1455)
!1914 = !DILocation(line: 3050, column: 17, scope: !1455)
!1915 = !DILocation(line: 3050, column: 31, scope: !1455)
!1916 = !DILocation(line: 3051, column: 9, scope: !1455)
!1917 = !DILocation(line: 3052, column: 5, scope: !1423)
!1918 = !DILocation(line: 3052, column: 14, scope: !1919)
!1919 = !DILexicalBlockFile(scope: !1410, file: !64, discriminator: 1)
!1920 = !DILocation(line: 3052, column: 25, scope: !1919)
!1921 = !DILocation(line: 3052, column: 23, scope: !1919)
!1922 = !DILocation(line: 3052, column: 31, scope: !1919)
!1923 = !DILocation(line: 3052, column: 29, scope: !1919)
!1924 = !DILocation(line: 3052, column: 5, scope: !1919)
!1925 = !DILocation(line: 3054, column: 9, scope: !1926)
!1926 = distinct !DILexicalBlock(scope: !1410, file: !64, line: 3054, column: 9)
!1927 = !DILocation(line: 3054, column: 13, scope: !1926)
!1928 = !DILocation(line: 3054, column: 30, scope: !1926)
!1929 = !DILocation(line: 3054, column: 34, scope: !1926)
!1930 = !DILocation(line: 3054, column: 28, scope: !1926)
!1931 = !DILocation(line: 3054, column: 9, scope: !1410)
!1932 = !DILocation(line: 3055, column: 16, scope: !1926)
!1933 = !DILocation(line: 3055, column: 9, scope: !1926)
!1934 = !DILocation(line: 3056, column: 5, scope: !1410)
!1935 = !DILocation(line: 3056, column: 9, scope: !1410)
!1936 = !DILocation(line: 3056, column: 24, scope: !1410)
!1937 = !DILocation(line: 3059, column: 5, scope: !1410)
!1938 = !DILocation(line: 3059, column: 9, scope: !1410)
!1939 = !DILocation(line: 3059, column: 17, scope: !1410)
!1940 = !DILocation(line: 3059, column: 23, scope: !1410)
!1941 = !DILocation(line: 3062, column: 22, scope: !1410)
!1942 = !DILocation(line: 3062, column: 26, scope: !1410)
!1943 = !DILocation(line: 3062, column: 11, scope: !1410)
!1944 = !DILocation(line: 3062, column: 9, scope: !1410)
!1945 = !DILocation(line: 3065, column: 5, scope: !1410)
!1946 = !DILocation(line: 3065, column: 9, scope: !1410)
!1947 = !DILocation(line: 3065, column: 17, scope: !1410)
!1948 = !DILocation(line: 3065, column: 23, scope: !1410)
!1949 = !DILocation(line: 3067, column: 9, scope: !1950)
!1950 = distinct !DILexicalBlock(scope: !1410, file: !64, line: 3067, column: 9)
!1951 = !DILocation(line: 3067, column: 13, scope: !1950)
!1952 = !DILocation(line: 3067, column: 9, scope: !1410)
!1953 = !DILocation(line: 3069, column: 16, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1950, file: !64, line: 3067, column: 19)
!1955 = !DILocation(line: 3069, column: 9, scope: !1954)
!1956 = !DILocation(line: 3070, column: 16, scope: !1957)
!1957 = distinct !DILexicalBlock(scope: !1950, file: !64, line: 3070, column: 16)
!1958 = !DILocation(line: 3070, column: 20, scope: !1957)
!1959 = !DILocation(line: 3070, column: 16, scope: !1950)
!1960 = !DILocation(line: 3071, column: 16, scope: !1961)
!1961 = distinct !DILexicalBlock(scope: !1957, file: !64, line: 3070, column: 25)
!1962 = !DILocation(line: 3071, column: 9, scope: !1961)
!1963 = !DILocation(line: 3072, column: 16, scope: !1964)
!1964 = distinct !DILexicalBlock(scope: !1957, file: !64, line: 3072, column: 16)
!1965 = !DILocation(line: 3072, column: 20, scope: !1964)
!1966 = !DILocation(line: 3072, column: 16, scope: !1957)
!1967 = !DILocalVariable(name: "rpkt", scope: !1968, file: !64, line: 3073, type: !394)
!1968 = distinct !DILexicalBlock(scope: !1964, file: !64, line: 3072, column: 26)
!1969 = !DILocation(line: 3073, column: 20, scope: !1968)
!1970 = !DILocation(line: 3075, column: 49, scope: !1971)
!1971 = distinct !DILexicalBlock(scope: !1968, file: !64, line: 3075, column: 13)
!1972 = !DILocation(line: 3075, column: 53, scope: !1971)
!1973 = !DILocation(line: 3076, column: 49, scope: !1971)
!1974 = !DILocation(line: 3076, column: 53, scope: !1971)
!1975 = !DILocation(line: 3077, column: 50, scope: !1971)
!1976 = !DILocation(line: 3077, column: 54, scope: !1971)
!1977 = !DILocation(line: 3078, column: 50, scope: !1971)
!1978 = !DILocation(line: 3078, column: 54, scope: !1971)
!1979 = !DILocation(line: 3078, column: 70, scope: !1971)
!1980 = !DILocation(line: 3075, column: 20, scope: !1971)
!1981 = !DILocation(line: 3075, column: 18, scope: !1971)
!1982 = !DILocation(line: 3078, column: 74, scope: !1971)
!1983 = !DILocation(line: 3075, column: 13, scope: !1968)
!1984 = !DILocation(line: 3079, column: 21, scope: !1971)
!1985 = !DILocation(line: 3079, column: 14, scope: !1971)
!1986 = !DILocation(line: 3081, column: 38, scope: !1987)
!1987 = distinct !DILexicalBlock(scope: !1968, file: !64, line: 3081, column: 13)
!1988 = !DILocation(line: 3081, column: 41, scope: !1987)
!1989 = !DILocation(line: 3081, column: 20, scope: !1987)
!1990 = !DILocation(line: 3081, column: 18, scope: !1987)
!1991 = !DILocation(line: 3081, column: 53, scope: !1987)
!1992 = !DILocation(line: 3081, column: 13, scope: !1968)
!1993 = !DILocation(line: 3082, column: 20, scope: !1987)
!1994 = !DILocation(line: 3082, column: 13, scope: !1987)
!1995 = !DILocation(line: 3084, column: 9, scope: !1968)
!1996 = !DILocation(line: 3085, column: 5, scope: !1968)
!1997 = !DILocation(line: 3087, column: 12, scope: !1410)
!1998 = !DILocation(line: 3087, column: 5, scope: !1410)
!1999 = !DILocation(line: 3088, column: 1, scope: !1410)
!2000 = distinct !DISubprogram(name: "rtmp_close", scope: !64, file: !64, line: 2493, type: !279, isLocal: true, isDefinition: true, scopeLine: 2494, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!2001 = !DILocalVariable(name: "h", arg: 1, scope: !2000, file: !64, line: 2493, type: !154)
!2002 = !DILocation(line: 2493, column: 35, scope: !2000)
!2003 = !DILocalVariable(name: "rt", scope: !2000, file: !64, line: 2495, type: !385)
!2004 = !DILocation(line: 2495, column: 18, scope: !2000)
!2005 = !DILocation(line: 2495, column: 23, scope: !2000)
!2006 = !DILocation(line: 2495, column: 26, scope: !2000)
!2007 = !DILocalVariable(name: "ret", scope: !2000, file: !64, line: 2496, type: !108)
!2008 = !DILocation(line: 2496, column: 9, scope: !2000)
!2009 = !DILocalVariable(name: "i", scope: !2000, file: !64, line: 2496, type: !108)
!2010 = !DILocation(line: 2496, column: 18, scope: !2000)
!2011 = !DILocalVariable(name: "j", scope: !2000, file: !64, line: 2496, type: !108)
!2012 = !DILocation(line: 2496, column: 21, scope: !2000)
!2013 = !DILocation(line: 2498, column: 10, scope: !2014)
!2014 = distinct !DILexicalBlock(scope: !2000, file: !64, line: 2498, column: 9)
!2015 = !DILocation(line: 2498, column: 14, scope: !2014)
!2016 = !DILocation(line: 2498, column: 9, scope: !2000)
!2017 = !DILocation(line: 2499, column: 9, scope: !2018)
!2018 = distinct !DILexicalBlock(scope: !2014, file: !64, line: 2498, column: 24)
!2019 = !DILocation(line: 2499, column: 13, scope: !2018)
!2020 = !DILocation(line: 2499, column: 22, scope: !2018)
!2021 = !DILocation(line: 2500, column: 13, scope: !2022)
!2022 = distinct !DILexicalBlock(scope: !2018, file: !64, line: 2500, column: 13)
!2023 = !DILocation(line: 2500, column: 17, scope: !2022)
!2024 = !DILocation(line: 2500, column: 25, scope: !2022)
!2025 = !DILocation(line: 2500, column: 13, scope: !2018)
!2026 = !DILocation(line: 2501, column: 37, scope: !2022)
!2027 = !DILocation(line: 2501, column: 41, scope: !2022)
!2028 = !DILocation(line: 2501, column: 13, scope: !2022)
!2029 = !DILocation(line: 2502, column: 13, scope: !2030)
!2030 = distinct !DILexicalBlock(scope: !2018, file: !64, line: 2502, column: 13)
!2031 = !DILocation(line: 2502, column: 17, scope: !2030)
!2032 = !DILocation(line: 2502, column: 23, scope: !2030)
!2033 = !DILocation(line: 2502, column: 13, scope: !2018)
!2034 = !DILocation(line: 2503, column: 42, scope: !2030)
!2035 = !DILocation(line: 2503, column: 45, scope: !2030)
!2036 = !DILocation(line: 2503, column: 19, scope: !2030)
!2037 = !DILocation(line: 2503, column: 17, scope: !2030)
!2038 = !DILocation(line: 2503, column: 13, scope: !2030)
!2039 = !DILocation(line: 2504, column: 5, scope: !2018)
!2040 = !DILocation(line: 2505, column: 9, scope: !2041)
!2041 = distinct !DILexicalBlock(scope: !2000, file: !64, line: 2505, column: 9)
!2042 = !DILocation(line: 2505, column: 13, scope: !2041)
!2043 = !DILocation(line: 2505, column: 19, scope: !2041)
!2044 = !DILocation(line: 2505, column: 9, scope: !2000)
!2045 = !DILocation(line: 2506, column: 33, scope: !2041)
!2046 = !DILocation(line: 2506, column: 36, scope: !2041)
!2047 = !DILocation(line: 2506, column: 15, scope: !2041)
!2048 = !DILocation(line: 2506, column: 13, scope: !2041)
!2049 = !DILocation(line: 2506, column: 9, scope: !2041)
!2050 = !DILocation(line: 2507, column: 12, scope: !2051)
!2051 = distinct !DILexicalBlock(scope: !2000, file: !64, line: 2507, column: 5)
!2052 = !DILocation(line: 2507, column: 10, scope: !2051)
!2053 = !DILocation(line: 2507, column: 17, scope: !2054)
!2054 = !DILexicalBlockFile(scope: !2055, file: !64, discriminator: 1)
!2055 = distinct !DILexicalBlock(scope: !2051, file: !64, line: 2507, column: 5)
!2056 = !DILocation(line: 2507, column: 19, scope: !2054)
!2057 = !DILocation(line: 2507, column: 5, scope: !2054)
!2058 = !DILocation(line: 2508, column: 16, scope: !2059)
!2059 = distinct !DILexicalBlock(scope: !2060, file: !64, line: 2508, column: 9)
!2060 = distinct !DILexicalBlock(scope: !2055, file: !64, line: 2507, column: 29)
!2061 = !DILocation(line: 2508, column: 14, scope: !2059)
!2062 = !DILocation(line: 2508, column: 21, scope: !2063)
!2063 = !DILexicalBlockFile(scope: !2064, file: !64, discriminator: 1)
!2064 = distinct !DILexicalBlock(scope: !2059, file: !64, line: 2508, column: 9)
!2065 = !DILocation(line: 2508, column: 41, scope: !2063)
!2066 = !DILocation(line: 2508, column: 25, scope: !2063)
!2067 = !DILocation(line: 2508, column: 29, scope: !2063)
!2068 = !DILocation(line: 2508, column: 23, scope: !2063)
!2069 = !DILocation(line: 2508, column: 9, scope: !2063)
!2070 = !DILocation(line: 2509, column: 53, scope: !2064)
!2071 = !DILocation(line: 2509, column: 37, scope: !2064)
!2072 = !DILocation(line: 2509, column: 50, scope: !2064)
!2073 = !DILocation(line: 2509, column: 41, scope: !2064)
!2074 = !DILocation(line: 2509, column: 13, scope: !2064)
!2075 = !DILocation(line: 2508, column: 46, scope: !2076)
!2076 = !DILexicalBlockFile(scope: !2064, file: !64, discriminator: 2)
!2077 = !DILocation(line: 2508, column: 9, scope: !2076)
!2078 = distinct !{!2078, !2079}
!2079 = !DILocation(line: 2508, column: 9, scope: !2060)
!2080 = !DILocation(line: 2510, column: 32, scope: !2060)
!2081 = !DILocation(line: 2510, column: 19, scope: !2060)
!2082 = !DILocation(line: 2510, column: 23, scope: !2060)
!2083 = !DILocation(line: 2510, column: 18, scope: !2060)
!2084 = !DILocation(line: 2510, column: 9, scope: !2060)
!2085 = !DILocation(line: 2511, column: 5, scope: !2060)
!2086 = !DILocation(line: 2507, column: 25, scope: !2087)
!2087 = !DILexicalBlockFile(scope: !2055, file: !64, discriminator: 2)
!2088 = !DILocation(line: 2507, column: 5, scope: !2087)
!2089 = distinct !{!2089, !2090}
!2090 = !DILocation(line: 2507, column: 5, scope: !2000)
!2091 = !DILocation(line: 2513, column: 26, scope: !2000)
!2092 = !DILocation(line: 2513, column: 5, scope: !2000)
!2093 = !DILocation(line: 2514, column: 15, scope: !2000)
!2094 = !DILocation(line: 2514, column: 19, scope: !2000)
!2095 = !DILocation(line: 2514, column: 14, scope: !2000)
!2096 = !DILocation(line: 2514, column: 5, scope: !2000)
!2097 = !DILocation(line: 2515, column: 17, scope: !2000)
!2098 = !DILocation(line: 2515, column: 21, scope: !2000)
!2099 = !DILocation(line: 2515, column: 5, scope: !2000)
!2100 = !DILocation(line: 2516, column: 12, scope: !2000)
!2101 = !DILocation(line: 2516, column: 5, scope: !2000)
!2102 = distinct !DISubprogram(name: "rtmp_pause", scope: !64, file: !64, line: 2935, type: !299, isLocal: true, isDefinition: true, scopeLine: 2936, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!2103 = !DILocalVariable(name: "s", arg: 1, scope: !2102, file: !64, line: 2935, type: !154)
!2104 = !DILocation(line: 2935, column: 35, scope: !2102)
!2105 = !DILocalVariable(name: "pause", arg: 2, scope: !2102, file: !64, line: 2935, type: !108)
!2106 = !DILocation(line: 2935, column: 42, scope: !2102)
!2107 = !DILocalVariable(name: "rt", scope: !2102, file: !64, line: 2937, type: !385)
!2108 = !DILocation(line: 2937, column: 18, scope: !2102)
!2109 = !DILocation(line: 2937, column: 23, scope: !2102)
!2110 = !DILocation(line: 2937, column: 26, scope: !2102)
!2111 = !DILocalVariable(name: "ret", scope: !2102, file: !64, line: 2938, type: !108)
!2112 = !DILocation(line: 2938, column: 9, scope: !2102)
!2113 = !DILocation(line: 2939, column: 12, scope: !2102)
!2114 = !DILocation(line: 2940, column: 12, scope: !2102)
!2115 = !DILocation(line: 2940, column: 16, scope: !2102)
!2116 = !DILocation(line: 2939, column: 5, scope: !2102)
!2117 = !DILocation(line: 2941, column: 26, scope: !2118)
!2118 = distinct !DILexicalBlock(scope: !2102, file: !64, line: 2941, column: 9)
!2119 = !DILocation(line: 2941, column: 29, scope: !2118)
!2120 = !DILocation(line: 2941, column: 33, scope: !2118)
!2121 = !DILocation(line: 2941, column: 40, scope: !2118)
!2122 = !DILocation(line: 2941, column: 44, scope: !2118)
!2123 = !DILocation(line: 2941, column: 16, scope: !2118)
!2124 = !DILocation(line: 2941, column: 14, scope: !2118)
!2125 = !DILocation(line: 2941, column: 61, scope: !2118)
!2126 = !DILocation(line: 2941, column: 9, scope: !2102)
!2127 = !DILocation(line: 2942, column: 16, scope: !2128)
!2128 = distinct !DILexicalBlock(scope: !2118, file: !64, line: 2941, column: 66)
!2129 = !DILocation(line: 2943, column: 16, scope: !2128)
!2130 = !DILocation(line: 2943, column: 20, scope: !2128)
!2131 = !DILocation(line: 2942, column: 9, scope: !2128)
!2132 = !DILocation(line: 2944, column: 16, scope: !2128)
!2133 = !DILocation(line: 2944, column: 9, scope: !2128)
!2134 = !DILocation(line: 2946, column: 5, scope: !2102)
!2135 = !DILocation(line: 2947, column: 1, scope: !2102)
!2136 = distinct !DISubprogram(name: "rtmp_seek", scope: !64, file: !64, line: 2915, type: !303, isLocal: true, isDefinition: true, scopeLine: 2917, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!2137 = !DILocalVariable(name: "s", arg: 1, scope: !2136, file: !64, line: 2915, type: !154)
!2138 = !DILocation(line: 2915, column: 38, scope: !2136)
!2139 = !DILocalVariable(name: "stream_index", arg: 2, scope: !2136, file: !64, line: 2915, type: !108)
!2140 = !DILocation(line: 2915, column: 45, scope: !2136)
!2141 = !DILocalVariable(name: "timestamp", arg: 3, scope: !2136, file: !64, line: 2915, type: !182)
!2142 = !DILocation(line: 2915, column: 67, scope: !2136)
!2143 = !DILocalVariable(name: "flags", arg: 4, scope: !2136, file: !64, line: 2916, type: !108)
!2144 = !DILocation(line: 2916, column: 30, scope: !2136)
!2145 = !DILocalVariable(name: "rt", scope: !2136, file: !64, line: 2918, type: !385)
!2146 = !DILocation(line: 2918, column: 18, scope: !2136)
!2147 = !DILocation(line: 2918, column: 23, scope: !2136)
!2148 = !DILocation(line: 2918, column: 26, scope: !2136)
!2149 = !DILocalVariable(name: "ret", scope: !2136, file: !64, line: 2919, type: !108)
!2150 = !DILocation(line: 2919, column: 9, scope: !2136)
!2151 = !DILocation(line: 2920, column: 12, scope: !2136)
!2152 = !DILocation(line: 2922, column: 12, scope: !2136)
!2153 = !DILocation(line: 2922, column: 26, scope: !2136)
!2154 = !DILocation(line: 2922, column: 37, scope: !2136)
!2155 = !DILocation(line: 2920, column: 5, scope: !2136)
!2156 = !DILocation(line: 2923, column: 25, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2136, file: !64, line: 2923, column: 9)
!2158 = !DILocation(line: 2923, column: 28, scope: !2157)
!2159 = !DILocation(line: 2923, column: 32, scope: !2157)
!2160 = !DILocation(line: 2923, column: 16, scope: !2157)
!2161 = !DILocation(line: 2923, column: 14, scope: !2157)
!2162 = !DILocation(line: 2923, column: 44, scope: !2157)
!2163 = !DILocation(line: 2923, column: 9, scope: !2136)
!2164 = !DILocation(line: 2924, column: 16, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2157, file: !64, line: 2923, column: 49)
!2166 = !DILocation(line: 2927, column: 16, scope: !2165)
!2167 = !DILocation(line: 2927, column: 30, scope: !2165)
!2168 = !DILocation(line: 2927, column: 41, scope: !2165)
!2169 = !DILocation(line: 2924, column: 9, scope: !2165)
!2170 = !DILocation(line: 2928, column: 16, scope: !2165)
!2171 = !DILocation(line: 2928, column: 9, scope: !2165)
!2172 = !DILocation(line: 2930, column: 19, scope: !2136)
!2173 = !DILocation(line: 2930, column: 23, scope: !2136)
!2174 = !DILocation(line: 2930, column: 5, scope: !2136)
!2175 = !DILocation(line: 2930, column: 9, scope: !2136)
!2176 = !DILocation(line: 2930, column: 17, scope: !2136)
!2177 = !DILocation(line: 2931, column: 5, scope: !2136)
!2178 = !DILocation(line: 2931, column: 9, scope: !2136)
!2179 = !DILocation(line: 2931, column: 15, scope: !2136)
!2180 = !DILocation(line: 2932, column: 12, scope: !2136)
!2181 = !DILocation(line: 2932, column: 5, scope: !2136)
!2182 = !DILocation(line: 2933, column: 1, scope: !2136)
!2183 = distinct !DISubprogram(name: "rtmp_calc_swfhash", scope: !64, file: !64, line: 1110, type: !279, isLocal: true, isDefinition: true, scopeLine: 1111, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!2184 = !DILocalVariable(name: "s", arg: 1, scope: !2183, file: !64, line: 1110, type: !154)
!2185 = !DILocation(line: 1110, column: 42, scope: !2183)
!2186 = !DILocalVariable(name: "rt", scope: !2183, file: !64, line: 1112, type: !385)
!2187 = !DILocation(line: 1112, column: 18, scope: !2183)
!2188 = !DILocation(line: 1112, column: 23, scope: !2183)
!2189 = !DILocation(line: 1112, column: 26, scope: !2183)
!2190 = !DILocalVariable(name: "in_data", scope: !2183, file: !64, line: 1113, type: !110)
!2191 = !DILocation(line: 1113, column: 14, scope: !2183)
!2192 = !DILocalVariable(name: "out_data", scope: !2183, file: !64, line: 1113, type: !110)
!2193 = !DILocation(line: 1113, column: 30, scope: !2183)
!2194 = !DILocalVariable(name: "swfdata", scope: !2183, file: !64, line: 1113, type: !110)
!2195 = !DILocation(line: 1113, column: 48, scope: !2183)
!2196 = !DILocalVariable(name: "in_size", scope: !2183, file: !64, line: 1114, type: !182)
!2197 = !DILocation(line: 1114, column: 13, scope: !2183)
!2198 = !DILocalVariable(name: "stream", scope: !2183, file: !64, line: 1115, type: !154)
!2199 = !DILocation(line: 1115, column: 17, scope: !2183)
!2200 = !DILocalVariable(name: "swfhash", scope: !2183, file: !64, line: 1116, type: !2201)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 256, align: 8, elements: !2202)
!2202 = !{!2203}
!2203 = !DISubrange(count: 32)
!2204 = !DILocation(line: 1116, column: 10, scope: !2183)
!2205 = !DILocalVariable(name: "swfsize", scope: !2183, file: !64, line: 1117, type: !108)
!2206 = !DILocation(line: 1117, column: 9, scope: !2183)
!2207 = !DILocalVariable(name: "ret", scope: !2183, file: !64, line: 1118, type: !108)
!2208 = !DILocation(line: 1118, column: 9, scope: !2183)
!2209 = !DILocation(line: 1121, column: 46, scope: !2210)
!2210 = distinct !DILexicalBlock(scope: !2183, file: !64, line: 1121, column: 9)
!2211 = !DILocation(line: 1121, column: 50, scope: !2210)
!2212 = !DILocation(line: 1122, column: 38, scope: !2210)
!2213 = !DILocation(line: 1122, column: 41, scope: !2210)
!2214 = !DILocation(line: 1123, column: 37, scope: !2210)
!2215 = !DILocation(line: 1123, column: 40, scope: !2210)
!2216 = !DILocation(line: 1123, column: 60, scope: !2210)
!2217 = !DILocation(line: 1123, column: 63, scope: !2210)
!2218 = !DILocation(line: 1123, column: 83, scope: !2210)
!2219 = !DILocation(line: 1121, column: 16, scope: !2210)
!2220 = !DILocation(line: 1121, column: 14, scope: !2210)
!2221 = !DILocation(line: 1123, column: 87, scope: !2210)
!2222 = !DILocation(line: 1121, column: 9, scope: !2183)
!2223 = !DILocation(line: 1124, column: 16, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2210, file: !64, line: 1123, column: 92)
!2225 = !DILocation(line: 1124, column: 55, scope: !2224)
!2226 = !DILocation(line: 1124, column: 59, scope: !2224)
!2227 = !DILocation(line: 1124, column: 9, scope: !2224)
!2228 = !DILocation(line: 1125, column: 9, scope: !2224)
!2229 = !DILocation(line: 1128, column: 31, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !2183, file: !64, line: 1128, column: 9)
!2231 = !DILocation(line: 1128, column: 20, scope: !2230)
!2232 = !DILocation(line: 1128, column: 18, scope: !2230)
!2233 = !DILocation(line: 1128, column: 52, scope: !2230)
!2234 = !DILocation(line: 1128, column: 9, scope: !2183)
!2235 = !DILocation(line: 1129, column: 13, scope: !2236)
!2236 = distinct !DILexicalBlock(scope: !2230, file: !64, line: 1128, column: 57)
!2237 = !DILocation(line: 1130, column: 9, scope: !2236)
!2238 = !DILocation(line: 1133, column: 31, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2183, file: !64, line: 1133, column: 9)
!2240 = !DILocation(line: 1133, column: 21, scope: !2239)
!2241 = !DILocation(line: 1133, column: 19, scope: !2239)
!2242 = !DILocation(line: 1133, column: 9, scope: !2183)
!2243 = !DILocation(line: 1134, column: 13, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2239, file: !64, line: 1133, column: 42)
!2245 = !DILocation(line: 1135, column: 9, scope: !2244)
!2246 = !DILocation(line: 1138, column: 36, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2183, file: !64, line: 1138, column: 9)
!2248 = !DILocation(line: 1138, column: 44, scope: !2247)
!2249 = !DILocation(line: 1138, column: 53, scope: !2247)
!2250 = !DILocation(line: 1138, column: 16, scope: !2247)
!2251 = !DILocation(line: 1138, column: 14, scope: !2247)
!2252 = !DILocation(line: 1138, column: 63, scope: !2247)
!2253 = !DILocation(line: 1138, column: 9, scope: !2183)
!2254 = !DILocation(line: 1139, column: 9, scope: !2247)
!2255 = !DILocation(line: 1141, column: 9, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2183, file: !64, line: 1141, column: 9)
!2257 = !DILocation(line: 1141, column: 17, scope: !2256)
!2258 = !DILocation(line: 1141, column: 9, scope: !2183)
!2259 = !DILocation(line: 1142, column: 13, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2256, file: !64, line: 1141, column: 22)
!2261 = !DILocation(line: 1143, column: 9, scope: !2260)
!2262 = !DILocation(line: 1146, column: 17, scope: !2263)
!2263 = distinct !DILexicalBlock(scope: !2183, file: !64, line: 1146, column: 9)
!2264 = !DILocation(line: 1146, column: 10, scope: !2263)
!2265 = !DILocation(line: 1146, column: 9, scope: !2183)
!2266 = !DILocalVariable(name: "out_size", scope: !2267, file: !64, line: 1148, type: !182)
!2267 = distinct !DILexicalBlock(scope: !2263, file: !64, line: 1146, column: 37)
!2268 = !DILocation(line: 1148, column: 17, scope: !2267)
!2269 = !DILocation(line: 1150, column: 26, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2267, file: !64, line: 1150, column: 13)
!2271 = !DILocation(line: 1150, column: 24, scope: !2270)
!2272 = !DILocation(line: 1150, column: 13, scope: !2267)
!2273 = !DILocation(line: 1151, column: 17, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !2270, file: !64, line: 1150, column: 41)
!2275 = !DILocation(line: 1152, column: 13, scope: !2274)
!2276 = !DILocation(line: 1154, column: 10, scope: !2267)
!2277 = !DILocation(line: 1154, column: 18, scope: !2267)
!2278 = !DILocation(line: 1155, column: 16, scope: !2267)
!2279 = !DILocation(line: 1155, column: 26, scope: !2267)
!2280 = !DILocation(line: 1155, column: 9, scope: !2267)
!2281 = !DILocation(line: 1156, column: 18, scope: !2267)
!2282 = !DILocation(line: 1158, column: 46, scope: !2283)
!2283 = distinct !DILexicalBlock(scope: !2267, file: !64, line: 1158, column: 13)
!2284 = !DILocation(line: 1158, column: 54, scope: !2283)
!2285 = !DILocation(line: 1158, column: 59, scope: !2283)
!2286 = !DILocation(line: 1158, column: 67, scope: !2283)
!2287 = !DILocation(line: 1158, column: 20, scope: !2283)
!2288 = !DILocation(line: 1158, column: 18, scope: !2283)
!2289 = !DILocation(line: 1159, column: 69, scope: !2283)
!2290 = !DILocation(line: 1158, column: 13, scope: !2267)
!2291 = !DILocation(line: 1160, column: 13, scope: !2283)
!2292 = !DILocation(line: 1161, column: 19, scope: !2267)
!2293 = !DILocation(line: 1161, column: 17, scope: !2267)
!2294 = !DILocation(line: 1162, column: 19, scope: !2267)
!2295 = !DILocation(line: 1162, column: 17, scope: !2267)
!2296 = !DILocation(line: 1169, column: 5, scope: !2267)
!2297 = !DILocation(line: 1170, column: 19, scope: !2298)
!2298 = distinct !DILexicalBlock(scope: !2263, file: !64, line: 1169, column: 12)
!2299 = !DILocation(line: 1170, column: 17, scope: !2298)
!2300 = !DILocation(line: 1171, column: 19, scope: !2298)
!2301 = !DILocation(line: 1171, column: 17, scope: !2298)
!2302 = !DILocation(line: 1175, column: 36, scope: !2303)
!2303 = distinct !DILexicalBlock(scope: !2183, file: !64, line: 1175, column: 9)
!2304 = !DILocation(line: 1175, column: 45, scope: !2303)
!2305 = !DILocation(line: 1177, column: 36, scope: !2303)
!2306 = !DILocation(line: 1175, column: 16, scope: !2303)
!2307 = !DILocation(line: 1175, column: 14, scope: !2303)
!2308 = !DILocation(line: 1177, column: 46, scope: !2303)
!2309 = !DILocation(line: 1175, column: 9, scope: !2183)
!2310 = !DILocation(line: 1178, column: 9, scope: !2303)
!2311 = !DILocation(line: 1181, column: 20, scope: !2183)
!2312 = !DILocation(line: 1181, column: 40, scope: !2183)
!2313 = !DILocation(line: 1181, column: 5, scope: !2183)
!2314 = !DILocation(line: 1182, column: 19, scope: !2183)
!2315 = !DILocation(line: 1182, column: 5, scope: !2183)
!2316 = !DILocation(line: 1182, column: 9, scope: !2183)
!2317 = !DILocation(line: 1182, column: 17, scope: !2183)
!2318 = !DILocation(line: 1185, column: 14, scope: !2183)
!2319 = !DILocation(line: 1185, column: 5, scope: !2183)
!2320 = !DILocation(line: 1186, column: 14, scope: !2183)
!2321 = !DILocation(line: 1186, column: 5, scope: !2183)
!2322 = !DILocation(line: 1187, column: 17, scope: !2183)
!2323 = !DILocation(line: 1187, column: 5, scope: !2183)
!2324 = !DILocation(line: 1188, column: 12, scope: !2183)
!2325 = !DILocation(line: 1188, column: 5, scope: !2183)
!2326 = distinct !DISubprogram(name: "rtmp_handshake", scope: !64, file: !64, line: 1197, type: !2327, isLocal: true, isDefinition: true, scopeLine: 1198, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!2327 = !DISubroutineType(types: !2328)
!2328 = !{!108, !154, !385}
!2329 = !DILocalVariable(name: "s", arg: 1, scope: !2326, file: !64, line: 1197, type: !154)
!2330 = !DILocation(line: 1197, column: 39, scope: !2326)
!2331 = !DILocalVariable(name: "rt", arg: 2, scope: !2326, file: !64, line: 1197, type: !385)
!2332 = !DILocation(line: 1197, column: 55, scope: !2326)
!2333 = !DILocalVariable(name: "rnd", scope: !2326, file: !64, line: 1199, type: !2334)
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVLFG", file: !2335, line: 30, baseType: !2336)
!2335 = !DIFile(filename: "./libavutil/lfg.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVLFG", file: !2335, line: 27, size: 2080, align: 32, elements: !2337)
!2337 = !{!2338, !2340}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2336, file: !2335, line: 28, baseType: !2339, size: 2048, align: 32)
!2339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 2048, align: 32, elements: !1792)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2336, file: !2335, line: 29, baseType: !108, size: 32, align: 32, offset: 2048)
!2341 = !DILocation(line: 1199, column: 11, scope: !2326)
!2342 = !DILocalVariable(name: "tosend", scope: !2326, file: !64, line: 1200, type: !2343)
!2343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 12296, align: 8, elements: !2344)
!2344 = !{!2345}
!2345 = !DISubrange(count: 1537)
!2346 = !DILocation(line: 1200, column: 13, scope: !2326)
!2347 = !DILocalVariable(name: "clientdata", scope: !2326, file: !64, line: 1208, type: !2348)
!2348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 12288, align: 8, elements: !2349)
!2349 = !{!2350}
!2350 = !DISubrange(count: 1536)
!2351 = !DILocation(line: 1208, column: 13, scope: !2326)
!2352 = !DILocalVariable(name: "serverdata", scope: !2326, file: !64, line: 1209, type: !2343)
!2353 = !DILocation(line: 1209, column: 13, scope: !2326)
!2354 = !DILocalVariable(name: "i", scope: !2326, file: !64, line: 1210, type: !108)
!2355 = !DILocation(line: 1210, column: 9, scope: !2326)
!2356 = !DILocalVariable(name: "server_pos", scope: !2326, file: !64, line: 1211, type: !108)
!2357 = !DILocation(line: 1211, column: 9, scope: !2326)
!2358 = !DILocalVariable(name: "client_pos", scope: !2326, file: !64, line: 1211, type: !108)
!2359 = !DILocation(line: 1211, column: 21, scope: !2326)
!2360 = !DILocalVariable(name: "digest", scope: !2326, file: !64, line: 1212, type: !2361)
!2361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 256, align: 8, elements: !2202)
!2362 = !DILocation(line: 1212, column: 13, scope: !2326)
!2363 = !DILocalVariable(name: "signature", scope: !2326, file: !64, line: 1212, type: !2361)
!2364 = !DILocation(line: 1212, column: 25, scope: !2326)
!2365 = !DILocalVariable(name: "ret", scope: !2326, file: !64, line: 1213, type: !108)
!2366 = !DILocation(line: 1213, column: 9, scope: !2326)
!2367 = !DILocalVariable(name: "type", scope: !2326, file: !64, line: 1213, type: !108)
!2368 = !DILocation(line: 1213, column: 14, scope: !2326)
!2369 = !DILocation(line: 1215, column: 12, scope: !2326)
!2370 = !DILocation(line: 1215, column: 5, scope: !2326)
!2371 = !DILocation(line: 1217, column: 5, scope: !2326)
!2372 = !DILocation(line: 1219, column: 12, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2326, file: !64, line: 1219, column: 5)
!2374 = !DILocation(line: 1219, column: 10, scope: !2373)
!2375 = !DILocation(line: 1219, column: 17, scope: !2376)
!2376 = !DILexicalBlockFile(scope: !2377, file: !64, discriminator: 1)
!2377 = distinct !DILexicalBlock(scope: !2373, file: !64, line: 1219, column: 5)
!2378 = !DILocation(line: 1219, column: 19, scope: !2376)
!2379 = !DILocation(line: 1219, column: 5, scope: !2376)
!2380 = !DILocation(line: 1220, column: 21, scope: !2377)
!2381 = !DILocation(line: 1220, column: 38, scope: !2377)
!2382 = !DILocation(line: 1220, column: 16, scope: !2377)
!2383 = !DILocation(line: 1220, column: 9, scope: !2377)
!2384 = !DILocation(line: 1220, column: 19, scope: !2377)
!2385 = !DILocation(line: 1219, column: 29, scope: !2386)
!2386 = !DILexicalBlockFile(scope: !2377, file: !64, discriminator: 2)
!2387 = !DILocation(line: 1219, column: 5, scope: !2386)
!2388 = distinct !{!2388, !2389}
!2389 = !DILocation(line: 1219, column: 5, scope: !2326)
!2390 = !DILocation(line: 1238, column: 53, scope: !2326)
!2391 = !DILocation(line: 1238, column: 60, scope: !2326)
!2392 = !DILocation(line: 1238, column: 65, scope: !2326)
!2393 = !DILocation(line: 1238, column: 69, scope: !2326)
!2394 = !DILocation(line: 1238, column: 18, scope: !2326)
!2395 = !DILocation(line: 1238, column: 16, scope: !2326)
!2396 = !DILocation(line: 1239, column: 9, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2326, file: !64, line: 1239, column: 9)
!2398 = !DILocation(line: 1239, column: 20, scope: !2397)
!2399 = !DILocation(line: 1239, column: 9, scope: !2326)
!2400 = !DILocation(line: 1240, column: 16, scope: !2397)
!2401 = !DILocation(line: 1240, column: 9, scope: !2397)
!2402 = !DILocation(line: 1242, column: 28, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2326, file: !64, line: 1242, column: 9)
!2404 = !DILocation(line: 1242, column: 32, scope: !2403)
!2405 = !DILocation(line: 1242, column: 40, scope: !2403)
!2406 = !DILocation(line: 1242, column: 16, scope: !2403)
!2407 = !DILocation(line: 1242, column: 14, scope: !2403)
!2408 = !DILocation(line: 1243, column: 39, scope: !2403)
!2409 = !DILocation(line: 1242, column: 9, scope: !2326)
!2410 = !DILocation(line: 1244, column: 16, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2403, file: !64, line: 1243, column: 44)
!2412 = !DILocation(line: 1244, column: 9, scope: !2411)
!2413 = !DILocation(line: 1245, column: 16, scope: !2411)
!2414 = !DILocation(line: 1245, column: 9, scope: !2411)
!2415 = !DILocation(line: 1248, column: 36, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !2326, file: !64, line: 1248, column: 9)
!2417 = !DILocation(line: 1248, column: 40, scope: !2416)
!2418 = !DILocation(line: 1248, column: 48, scope: !2416)
!2419 = !DILocation(line: 1248, column: 16, scope: !2416)
!2420 = !DILocation(line: 1248, column: 14, scope: !2416)
!2421 = !DILocation(line: 1249, column: 47, scope: !2416)
!2422 = !DILocation(line: 1248, column: 9, scope: !2326)
!2423 = !DILocation(line: 1250, column: 16, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2416, file: !64, line: 1249, column: 52)
!2425 = !DILocation(line: 1250, column: 9, scope: !2424)
!2426 = !DILocation(line: 1251, column: 16, scope: !2424)
!2427 = !DILocation(line: 1251, column: 9, scope: !2424)
!2428 = !DILocation(line: 1254, column: 36, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2326, file: !64, line: 1254, column: 9)
!2430 = !DILocation(line: 1254, column: 40, scope: !2429)
!2431 = !DILocation(line: 1254, column: 48, scope: !2429)
!2432 = !DILocation(line: 1254, column: 16, scope: !2429)
!2433 = !DILocation(line: 1254, column: 14, scope: !2429)
!2434 = !DILocation(line: 1255, column: 43, scope: !2429)
!2435 = !DILocation(line: 1254, column: 9, scope: !2326)
!2436 = !DILocation(line: 1256, column: 16, scope: !2437)
!2437 = distinct !DILexicalBlock(scope: !2429, file: !64, line: 1255, column: 48)
!2438 = !DILocation(line: 1256, column: 9, scope: !2437)
!2439 = !DILocation(line: 1257, column: 16, scope: !2437)
!2440 = !DILocation(line: 1257, column: 9, scope: !2437)
!2441 = !DILocation(line: 1260, column: 12, scope: !2326)
!2442 = !DILocation(line: 1260, column: 39, scope: !2326)
!2443 = !DILocation(line: 1260, column: 5, scope: !2326)
!2444 = !DILocation(line: 1261, column: 12, scope: !2326)
!2445 = !DILocation(line: 1262, column: 12, scope: !2326)
!2446 = !DILocation(line: 1262, column: 27, scope: !2326)
!2447 = !DILocation(line: 1262, column: 42, scope: !2326)
!2448 = !DILocation(line: 1262, column: 57, scope: !2326)
!2449 = !DILocation(line: 1261, column: 5, scope: !2326)
!2450 = !DILocation(line: 1264, column: 9, scope: !2451)
!2451 = distinct !DILexicalBlock(scope: !2326, file: !64, line: 1264, column: 9)
!2452 = !DILocation(line: 1264, column: 13, scope: !2451)
!2453 = !DILocation(line: 1264, column: 22, scope: !2451)
!2454 = !DILocation(line: 1264, column: 25, scope: !2455)
!2455 = !DILexicalBlockFile(scope: !2451, file: !64, discriminator: 1)
!2456 = !DILocation(line: 1264, column: 39, scope: !2455)
!2457 = !DILocation(line: 1264, column: 9, scope: !2455)
!2458 = !DILocation(line: 1265, column: 43, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2451, file: !64, line: 1264, column: 45)
!2460 = !DILocation(line: 1265, column: 54, scope: !2459)
!2461 = !DILocation(line: 1265, column: 22, scope: !2459)
!2462 = !DILocation(line: 1265, column: 20, scope: !2459)
!2463 = !DILocation(line: 1266, column: 13, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2459, file: !64, line: 1266, column: 13)
!2465 = !DILocation(line: 1266, column: 24, scope: !2464)
!2466 = !DILocation(line: 1266, column: 13, scope: !2459)
!2467 = !DILocation(line: 1267, column: 20, scope: !2464)
!2468 = !DILocation(line: 1267, column: 13, scope: !2464)
!2469 = !DILocation(line: 1269, column: 14, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2459, file: !64, line: 1269, column: 13)
!2471 = !DILocation(line: 1269, column: 13, scope: !2459)
!2472 = !DILocation(line: 1270, column: 18, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2470, file: !64, line: 1269, column: 26)
!2474 = !DILocation(line: 1271, column: 47, scope: !2473)
!2475 = !DILocation(line: 1271, column: 58, scope: !2473)
!2476 = !DILocation(line: 1271, column: 26, scope: !2473)
!2477 = !DILocation(line: 1271, column: 24, scope: !2473)
!2478 = !DILocation(line: 1272, column: 17, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2473, file: !64, line: 1272, column: 17)
!2480 = !DILocation(line: 1272, column: 28, scope: !2479)
!2481 = !DILocation(line: 1272, column: 17, scope: !2473)
!2482 = !DILocation(line: 1273, column: 24, scope: !2479)
!2483 = !DILocation(line: 1273, column: 17, scope: !2479)
!2484 = !DILocation(line: 1275, column: 18, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2473, file: !64, line: 1275, column: 17)
!2486 = !DILocation(line: 1275, column: 17, scope: !2473)
!2487 = !DILocation(line: 1276, column: 24, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2485, file: !64, line: 1275, column: 30)
!2489 = !DILocation(line: 1276, column: 17, scope: !2488)
!2490 = !DILocation(line: 1277, column: 17, scope: !2488)
!2491 = !DILocation(line: 1279, column: 9, scope: !2473)
!2492 = !DILocation(line: 1283, column: 13, scope: !2493)
!2493 = distinct !DILexicalBlock(scope: !2459, file: !64, line: 1283, column: 13)
!2494 = !DILocation(line: 1283, column: 17, scope: !2493)
!2495 = !DILocation(line: 1283, column: 13, scope: !2459)
!2496 = !DILocation(line: 1284, column: 51, scope: !2497)
!2497 = distinct !DILexicalBlock(scope: !2498, file: !64, line: 1284, column: 17)
!2498 = distinct !DILexicalBlock(scope: !2493, file: !64, line: 1283, column: 26)
!2499 = !DILocation(line: 1284, column: 54, scope: !2497)
!2500 = !DILocation(line: 1284, column: 58, scope: !2497)
!2501 = !DILocation(line: 1284, column: 69, scope: !2497)
!2502 = !DILocation(line: 1284, column: 73, scope: !2497)
!2503 = !DILocation(line: 1285, column: 56, scope: !2497)
!2504 = !DILocation(line: 1284, column: 24, scope: !2497)
!2505 = !DILocation(line: 1284, column: 22, scope: !2497)
!2506 = !DILocation(line: 1285, column: 63, scope: !2497)
!2507 = !DILocation(line: 1284, column: 17, scope: !2498)
!2508 = !DILocation(line: 1286, column: 24, scope: !2497)
!2509 = !DILocation(line: 1286, column: 17, scope: !2497)
!2510 = !DILocation(line: 1287, column: 9, scope: !2498)
!2511 = !DILocation(line: 1289, column: 35, scope: !2459)
!2512 = !DILocation(line: 1289, column: 42, scope: !2459)
!2513 = !DILocation(line: 1289, column: 48, scope: !2459)
!2514 = !DILocation(line: 1289, column: 46, scope: !2459)
!2515 = !DILocation(line: 1291, column: 35, scope: !2459)
!2516 = !DILocation(line: 1289, column: 15, scope: !2459)
!2517 = !DILocation(line: 1289, column: 13, scope: !2459)
!2518 = !DILocation(line: 1292, column: 13, scope: !2519)
!2519 = distinct !DILexicalBlock(scope: !2459, file: !64, line: 1292, column: 13)
!2520 = !DILocation(line: 1292, column: 17, scope: !2519)
!2521 = !DILocation(line: 1292, column: 13, scope: !2459)
!2522 = !DILocation(line: 1293, column: 20, scope: !2519)
!2523 = !DILocation(line: 1293, column: 13, scope: !2519)
!2524 = !DILocation(line: 1295, column: 35, scope: !2459)
!2525 = !DILocation(line: 1296, column: 38, scope: !2459)
!2526 = !DILocation(line: 1296, column: 50, scope: !2459)
!2527 = !DILocation(line: 1295, column: 15, scope: !2459)
!2528 = !DILocation(line: 1295, column: 13, scope: !2459)
!2529 = !DILocation(line: 1297, column: 13, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2459, file: !64, line: 1297, column: 13)
!2531 = !DILocation(line: 1297, column: 17, scope: !2530)
!2532 = !DILocation(line: 1297, column: 13, scope: !2459)
!2533 = !DILocation(line: 1298, column: 20, scope: !2530)
!2534 = !DILocation(line: 1298, column: 13, scope: !2530)
!2535 = !DILocation(line: 1311, column: 20, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2459, file: !64, line: 1311, column: 13)
!2537 = !DILocation(line: 1311, column: 31, scope: !2536)
!2538 = !DILocation(line: 1311, column: 42, scope: !2536)
!2539 = !DILocation(line: 1311, column: 49, scope: !2536)
!2540 = !DILocation(line: 1311, column: 13, scope: !2536)
!2541 = !DILocation(line: 1311, column: 13, scope: !2459)
!2542 = !DILocation(line: 1312, column: 20, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2536, file: !64, line: 1311, column: 60)
!2544 = !DILocation(line: 1312, column: 13, scope: !2543)
!2545 = !DILocation(line: 1313, column: 13, scope: !2543)
!2546 = !DILocation(line: 1316, column: 16, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2459, file: !64, line: 1316, column: 9)
!2548 = !DILocation(line: 1316, column: 14, scope: !2547)
!2549 = !DILocation(line: 1316, column: 21, scope: !2550)
!2550 = !DILexicalBlockFile(scope: !2551, file: !64, discriminator: 1)
!2551 = distinct !DILexicalBlock(scope: !2547, file: !64, line: 1316, column: 9)
!2552 = !DILocation(line: 1316, column: 23, scope: !2550)
!2553 = !DILocation(line: 1316, column: 9, scope: !2550)
!2554 = !DILocation(line: 1317, column: 25, scope: !2551)
!2555 = !DILocation(line: 1317, column: 42, scope: !2551)
!2556 = !DILocation(line: 1317, column: 20, scope: !2551)
!2557 = !DILocation(line: 1317, column: 13, scope: !2551)
!2558 = !DILocation(line: 1317, column: 23, scope: !2551)
!2559 = !DILocation(line: 1316, column: 32, scope: !2560)
!2560 = !DILexicalBlockFile(scope: !2551, file: !64, discriminator: 2)
!2561 = !DILocation(line: 1316, column: 9, scope: !2560)
!2562 = distinct !{!2562, !2563}
!2563 = !DILocation(line: 1316, column: 9, scope: !2459)
!2564 = !DILocation(line: 1318, column: 35, scope: !2459)
!2565 = !DILocation(line: 1318, column: 46, scope: !2459)
!2566 = !DILocation(line: 1318, column: 52, scope: !2459)
!2567 = !DILocation(line: 1318, column: 50, scope: !2459)
!2568 = !DILocation(line: 1320, column: 35, scope: !2459)
!2569 = !DILocation(line: 1318, column: 15, scope: !2459)
!2570 = !DILocation(line: 1318, column: 13, scope: !2459)
!2571 = !DILocation(line: 1321, column: 13, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2459, file: !64, line: 1321, column: 13)
!2573 = !DILocation(line: 1321, column: 17, scope: !2572)
!2574 = !DILocation(line: 1321, column: 13, scope: !2459)
!2575 = !DILocation(line: 1322, column: 20, scope: !2572)
!2576 = !DILocation(line: 1322, column: 13, scope: !2572)
!2577 = !DILocation(line: 1324, column: 35, scope: !2459)
!2578 = !DILocation(line: 1325, column: 35, scope: !2459)
!2579 = !DILocation(line: 1326, column: 35, scope: !2459)
!2580 = !DILocation(line: 1326, column: 42, scope: !2459)
!2581 = !DILocation(line: 1326, column: 49, scope: !2459)
!2582 = !DILocation(line: 1324, column: 15, scope: !2459)
!2583 = !DILocation(line: 1324, column: 13, scope: !2459)
!2584 = !DILocation(line: 1327, column: 13, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2459, file: !64, line: 1327, column: 13)
!2586 = !DILocation(line: 1327, column: 17, scope: !2585)
!2587 = !DILocation(line: 1327, column: 13, scope: !2459)
!2588 = !DILocation(line: 1328, column: 20, scope: !2585)
!2589 = !DILocation(line: 1328, column: 13, scope: !2585)
!2590 = !DILocation(line: 1338, column: 32, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2459, file: !64, line: 1338, column: 13)
!2592 = !DILocation(line: 1338, column: 36, scope: !2591)
!2593 = !DILocation(line: 1338, column: 44, scope: !2591)
!2594 = !DILocation(line: 1338, column: 20, scope: !2591)
!2595 = !DILocation(line: 1338, column: 18, scope: !2591)
!2596 = !DILocation(line: 1339, column: 39, scope: !2591)
!2597 = !DILocation(line: 1338, column: 13, scope: !2459)
!2598 = !DILocation(line: 1340, column: 20, scope: !2591)
!2599 = !DILocation(line: 1340, column: 13, scope: !2591)
!2600 = !DILocation(line: 1347, column: 5, scope: !2459)
!2601 = !DILocation(line: 1362, column: 32, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2603, file: !64, line: 1362, column: 13)
!2603 = distinct !DILexicalBlock(scope: !2451, file: !64, line: 1347, column: 12)
!2604 = !DILocation(line: 1362, column: 36, scope: !2602)
!2605 = !DILocation(line: 1362, column: 44, scope: !2602)
!2606 = !DILocation(line: 1362, column: 55, scope: !2602)
!2607 = !DILocation(line: 1362, column: 20, scope: !2602)
!2608 = !DILocation(line: 1362, column: 18, scope: !2602)
!2609 = !DILocation(line: 1363, column: 39, scope: !2602)
!2610 = !DILocation(line: 1362, column: 13, scope: !2603)
!2611 = !DILocation(line: 1364, column: 20, scope: !2602)
!2612 = !DILocation(line: 1364, column: 13, scope: !2602)
!2613 = !DILocation(line: 1373, column: 5, scope: !2326)
!2614 = !DILocation(line: 1374, column: 1, scope: !2326)
!2615 = distinct !DISubprogram(name: "rtmp_server_handshake", scope: !64, file: !64, line: 1417, type: !2327, isLocal: true, isDefinition: true, scopeLine: 1418, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!2616 = !DILocalVariable(name: "x", arg: 1, scope: !2617, file: !2618, line: 66, type: !119)
!2617 = distinct !DISubprogram(name: "av_bswap32", scope: !2618, file: !2618, line: 66, type: !2619, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!2618 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!2619 = !DISubroutineType(types: !2620)
!2620 = !{!119, !119}
!2621 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !2622)
!2622 = distinct !DILocation(line: 1458, column: 63, scope: !2623)
!2623 = !DILexicalBlockFile(scope: !2624, file: !64, discriminator: 1)
!2624 = distinct !DILexicalBlock(scope: !2625, file: !64, line: 1456, column: 5)
!2625 = distinct !DILexicalBlock(scope: !2615, file: !64, line: 1456, column: 5)
!2626 = !DILocalVariable(name: "s", arg: 1, scope: !2615, file: !64, line: 1417, type: !154)
!2627 = !DILocation(line: 1417, column: 46, scope: !2615)
!2628 = !DILocalVariable(name: "rt", arg: 2, scope: !2615, file: !64, line: 1417, type: !385)
!2629 = !DILocation(line: 1417, column: 62, scope: !2615)
!2630 = !DILocalVariable(name: "buffer", scope: !2615, file: !64, line: 1419, type: !2348)
!2631 = !DILocation(line: 1419, column: 13, scope: !2615)
!2632 = !DILocalVariable(name: "hs_epoch", scope: !2615, file: !64, line: 1420, type: !119)
!2633 = !DILocation(line: 1420, column: 14, scope: !2615)
!2634 = !DILocalVariable(name: "hs_my_epoch", scope: !2615, file: !64, line: 1421, type: !119)
!2635 = !DILocation(line: 1421, column: 14, scope: !2615)
!2636 = !DILocalVariable(name: "hs_c1", scope: !2615, file: !64, line: 1422, type: !2348)
!2637 = !DILocation(line: 1422, column: 13, scope: !2615)
!2638 = !DILocalVariable(name: "hs_s1", scope: !2615, file: !64, line: 1423, type: !2348)
!2639 = !DILocation(line: 1423, column: 13, scope: !2615)
!2640 = !DILocalVariable(name: "zeroes", scope: !2615, file: !64, line: 1424, type: !119)
!2641 = !DILocation(line: 1424, column: 14, scope: !2615)
!2642 = !DILocalVariable(name: "temp", scope: !2615, file: !64, line: 1425, type: !119)
!2643 = !DILocation(line: 1425, column: 14, scope: !2615)
!2644 = !DILocalVariable(name: "randomidx", scope: !2615, file: !64, line: 1426, type: !108)
!2645 = !DILocation(line: 1426, column: 9, scope: !2615)
!2646 = !DILocalVariable(name: "inoutsize", scope: !2615, file: !64, line: 1427, type: !108)
!2647 = !DILocation(line: 1427, column: 9, scope: !2615)
!2648 = !DILocalVariable(name: "ret", scope: !2615, file: !64, line: 1428, type: !108)
!2649 = !DILocation(line: 1428, column: 9, scope: !2615)
!2650 = !DILocation(line: 1430, column: 37, scope: !2615)
!2651 = !DILocation(line: 1430, column: 41, scope: !2615)
!2652 = !DILocation(line: 1430, column: 49, scope: !2615)
!2653 = !DILocation(line: 1430, column: 17, scope: !2615)
!2654 = !DILocation(line: 1430, column: 15, scope: !2615)
!2655 = !DILocation(line: 1431, column: 9, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2615, file: !64, line: 1431, column: 9)
!2657 = !DILocation(line: 1431, column: 19, scope: !2656)
!2658 = !DILocation(line: 1431, column: 9, scope: !2615)
!2659 = !DILocation(line: 1432, column: 16, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2656, file: !64, line: 1431, column: 25)
!2661 = !DILocation(line: 1432, column: 9, scope: !2660)
!2662 = !DILocation(line: 1433, column: 9, scope: !2660)
!2663 = !DILocation(line: 1436, column: 9, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2615, file: !64, line: 1436, column: 9)
!2665 = !DILocation(line: 1436, column: 19, scope: !2664)
!2666 = !DILocation(line: 1436, column: 9, scope: !2615)
!2667 = !DILocation(line: 1437, column: 16, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2664, file: !64, line: 1436, column: 25)
!2669 = !DILocation(line: 1437, column: 9, scope: !2668)
!2670 = !DILocation(line: 1438, column: 9, scope: !2668)
!2671 = !DILocation(line: 1440, column: 21, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2615, file: !64, line: 1440, column: 9)
!2673 = !DILocation(line: 1440, column: 25, scope: !2672)
!2674 = !DILocation(line: 1440, column: 33, scope: !2672)
!2675 = !DILocation(line: 1440, column: 9, scope: !2672)
!2676 = !DILocation(line: 1440, column: 44, scope: !2672)
!2677 = !DILocation(line: 1440, column: 9, scope: !2615)
!2678 = !DILocation(line: 1441, column: 16, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2672, file: !64, line: 1440, column: 50)
!2680 = !DILocation(line: 1441, column: 9, scope: !2679)
!2681 = !DILocation(line: 1443, column: 9, scope: !2679)
!2682 = !DILocation(line: 1446, column: 34, scope: !2615)
!2683 = !DILocation(line: 1446, column: 58, scope: !2615)
!2684 = !DILocation(line: 1446, column: 11, scope: !2615)
!2685 = !DILocation(line: 1446, column: 9, scope: !2615)
!2686 = !DILocation(line: 1448, column: 9, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2615, file: !64, line: 1448, column: 9)
!2688 = !DILocation(line: 1448, column: 9, scope: !2615)
!2689 = !DILocation(line: 1449, column: 16, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2687, file: !64, line: 1448, column: 14)
!2691 = !DILocation(line: 1449, column: 9, scope: !2690)
!2692 = !DILocation(line: 1450, column: 16, scope: !2690)
!2693 = !DILocation(line: 1450, column: 9, scope: !2690)
!2694 = !DILocation(line: 1454, column: 19, scope: !2615)
!2695 = !DILocation(line: 1454, column: 17, scope: !2615)
!2696 = !DILocation(line: 1456, column: 20, scope: !2625)
!2697 = !DILocation(line: 1456, column: 10, scope: !2625)
!2698 = !DILocation(line: 1456, column: 25, scope: !2623)
!2699 = !DILocation(line: 1456, column: 35, scope: !2623)
!2700 = !DILocation(line: 1456, column: 5, scope: !2623)
!2701 = !DILocation(line: 1458, column: 74, scope: !2624)
!2702 = !DILocation(line: 1458, column: 63, scope: !2623)
!2703 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !2622)
!2704 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !2622)
!2705 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !2622)
!2706 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !2622)
!2707 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !2622)
!2708 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !2622)
!2709 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !2622)
!2710 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !2622)
!2711 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !2622)
!2712 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !2622)
!2713 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !2622)
!2714 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !2622)
!2715 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !2622)
!2716 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !2622)
!2717 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !2622)
!2718 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !2622)
!2719 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !2622)
!2720 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !2622)
!2721 = !DILocation(line: 1458, column: 36, scope: !2624)
!2722 = !DILocation(line: 1458, column: 44, scope: !2624)
!2723 = !DILocation(line: 1458, column: 42, scope: !2624)
!2724 = !DILocation(line: 1458, column: 57, scope: !2624)
!2725 = !DILocation(line: 1458, column: 60, scope: !2624)
!2726 = !DILocation(line: 1458, column: 9, scope: !2624)
!2727 = !DILocation(line: 1457, column: 20, scope: !2624)
!2728 = !DILocation(line: 1456, column: 5, scope: !2729)
!2729 = !DILexicalBlockFile(scope: !2624, file: !64, discriminator: 2)
!2730 = distinct !{!2730, !2731}
!2731 = !DILocation(line: 1456, column: 5, scope: !2615)
!2732 = !DILocation(line: 1460, column: 31, scope: !2615)
!2733 = !DILocation(line: 1460, column: 35, scope: !2615)
!2734 = !DILocation(line: 1460, column: 51, scope: !2615)
!2735 = !DILocation(line: 1460, column: 11, scope: !2615)
!2736 = !DILocation(line: 1460, column: 9, scope: !2615)
!2737 = !DILocation(line: 1462, column: 9, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2615, file: !64, line: 1462, column: 9)
!2739 = !DILocation(line: 1462, column: 9, scope: !2615)
!2740 = !DILocation(line: 1463, column: 16, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2738, file: !64, line: 1462, column: 14)
!2742 = !DILocation(line: 1463, column: 9, scope: !2741)
!2743 = !DILocation(line: 1464, column: 16, scope: !2741)
!2744 = !DILocation(line: 1464, column: 9, scope: !2741)
!2745 = !DILocation(line: 1467, column: 31, scope: !2615)
!2746 = !DILocation(line: 1467, column: 35, scope: !2615)
!2747 = !DILocation(line: 1467, column: 48, scope: !2615)
!2748 = !DILocation(line: 1467, column: 11, scope: !2615)
!2749 = !DILocation(line: 1467, column: 9, scope: !2615)
!2750 = !DILocation(line: 1469, column: 9, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2615, file: !64, line: 1469, column: 9)
!2752 = !DILocation(line: 1469, column: 9, scope: !2615)
!2753 = !DILocation(line: 1470, column: 16, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2751, file: !64, line: 1469, column: 14)
!2755 = !DILocation(line: 1470, column: 9, scope: !2754)
!2756 = !DILocation(line: 1471, column: 16, scope: !2754)
!2757 = !DILocation(line: 1471, column: 9, scope: !2754)
!2758 = !DILocation(line: 1474, column: 34, scope: !2615)
!2759 = !DILocation(line: 1474, column: 54, scope: !2615)
!2760 = !DILocation(line: 1474, column: 11, scope: !2615)
!2761 = !DILocation(line: 1474, column: 9, scope: !2615)
!2762 = !DILocation(line: 1476, column: 9, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2615, file: !64, line: 1476, column: 9)
!2764 = !DILocation(line: 1476, column: 9, scope: !2615)
!2765 = !DILocation(line: 1477, column: 16, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2763, file: !64, line: 1476, column: 14)
!2767 = !DILocation(line: 1477, column: 9, scope: !2766)
!2768 = !DILocation(line: 1478, column: 16, scope: !2766)
!2769 = !DILocation(line: 1478, column: 9, scope: !2766)
!2770 = !DILocation(line: 1480, column: 9, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2615, file: !64, line: 1480, column: 9)
!2772 = !DILocation(line: 1480, column: 17, scope: !2771)
!2773 = !DILocation(line: 1480, column: 14, scope: !2771)
!2774 = !DILocation(line: 1480, column: 9, scope: !2615)
!2775 = !DILocation(line: 1481, column: 16, scope: !2771)
!2776 = !DILocation(line: 1481, column: 9, scope: !2771)
!2777 = !DILocation(line: 1483, column: 16, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2615, file: !64, line: 1483, column: 9)
!2779 = !DILocation(line: 1483, column: 23, scope: !2778)
!2780 = !DILocation(line: 1483, column: 28, scope: !2778)
!2781 = !DILocation(line: 1483, column: 34, scope: !2778)
!2782 = !DILocation(line: 1483, column: 9, scope: !2778)
!2783 = !DILocation(line: 1483, column: 9, scope: !2615)
!2784 = !DILocation(line: 1485, column: 16, scope: !2778)
!2785 = !DILocation(line: 1485, column: 9, scope: !2778)
!2786 = !DILocation(line: 1488, column: 5, scope: !2615)
!2787 = !DILocation(line: 1489, column: 1, scope: !2615)
!2788 = distinct !DISubprogram(name: "gen_connect", scope: !64, file: !64, line: 318, type: !2327, isLocal: true, isDefinition: true, scopeLine: 319, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!2789 = !DILocalVariable(name: "s", arg: 1, scope: !2788, file: !64, line: 318, type: !154)
!2790 = !DILocation(line: 318, column: 36, scope: !2788)
!2791 = !DILocalVariable(name: "rt", arg: 2, scope: !2788, file: !64, line: 318, type: !385)
!2792 = !DILocation(line: 318, column: 52, scope: !2788)
!2793 = !DILocalVariable(name: "pkt", scope: !2788, file: !64, line: 320, type: !394)
!2794 = !DILocation(line: 320, column: 16, scope: !2788)
!2795 = !DILocalVariable(name: "p", scope: !2788, file: !64, line: 321, type: !110)
!2796 = !DILocation(line: 321, column: 14, scope: !2788)
!2797 = !DILocalVariable(name: "ret", scope: !2788, file: !64, line: 322, type: !108)
!2798 = !DILocation(line: 322, column: 9, scope: !2788)
!2799 = !DILocation(line: 324, column: 16, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2788, file: !64, line: 324, column: 9)
!2801 = !DILocation(line: 324, column: 14, scope: !2800)
!2802 = !DILocation(line: 325, column: 55, scope: !2800)
!2803 = !DILocation(line: 324, column: 9, scope: !2788)
!2804 = !DILocation(line: 326, column: 16, scope: !2800)
!2805 = !DILocation(line: 326, column: 9, scope: !2800)
!2806 = !DILocation(line: 328, column: 13, scope: !2788)
!2807 = !DILocation(line: 328, column: 7, scope: !2788)
!2808 = !DILocation(line: 330, column: 5, scope: !2788)
!2809 = !DILocation(line: 331, column: 31, scope: !2788)
!2810 = !DILocation(line: 331, column: 35, scope: !2788)
!2811 = !DILocation(line: 331, column: 29, scope: !2788)
!2812 = !DILocation(line: 331, column: 5, scope: !2788)
!2813 = !DILocation(line: 332, column: 5, scope: !2788)
!2814 = !DILocation(line: 333, column: 5, scope: !2788)
!2815 = !DILocation(line: 334, column: 30, scope: !2788)
!2816 = !DILocation(line: 334, column: 34, scope: !2788)
!2817 = !DILocation(line: 334, column: 39, scope: !2788)
!2818 = !DILocation(line: 334, column: 43, scope: !2788)
!2819 = !DILocation(line: 334, column: 5, scope: !2788)
!2820 = !DILocation(line: 336, column: 10, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2788, file: !64, line: 336, column: 9)
!2822 = !DILocation(line: 336, column: 14, scope: !2821)
!2823 = !DILocation(line: 336, column: 9, scope: !2788)
!2824 = !DILocation(line: 337, column: 9, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2821, file: !64, line: 336, column: 24)
!2826 = !DILocation(line: 338, column: 9, scope: !2825)
!2827 = !DILocation(line: 339, column: 5, scope: !2825)
!2828 = !DILocation(line: 340, column: 5, scope: !2788)
!2829 = !DILocation(line: 341, column: 29, scope: !2788)
!2830 = !DILocation(line: 341, column: 33, scope: !2788)
!2831 = !DILocation(line: 341, column: 5, scope: !2788)
!2832 = !DILocation(line: 343, column: 9, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2788, file: !64, line: 343, column: 9)
!2834 = !DILocation(line: 343, column: 13, scope: !2833)
!2835 = !DILocation(line: 343, column: 20, scope: !2833)
!2836 = !DILocation(line: 343, column: 23, scope: !2837)
!2837 = !DILexicalBlockFile(scope: !2833, file: !64, discriminator: 1)
!2838 = !DILocation(line: 343, column: 27, scope: !2837)
!2839 = !DILocation(line: 343, column: 9, scope: !2837)
!2840 = !DILocation(line: 344, column: 9, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2833, file: !64, line: 343, column: 38)
!2842 = !DILocation(line: 345, column: 13, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2841, file: !64, line: 345, column: 13)
!2844 = !DILocation(line: 345, column: 17, scope: !2843)
!2845 = !DILocation(line: 345, column: 13, scope: !2841)
!2846 = !DILocation(line: 346, column: 37, scope: !2843)
!2847 = !DILocation(line: 346, column: 41, scope: !2843)
!2848 = !DILocation(line: 346, column: 13, scope: !2843)
!2849 = !DILocation(line: 348, column: 37, scope: !2843)
!2850 = !DILocation(line: 348, column: 41, scope: !2843)
!2851 = !DILocation(line: 348, column: 13, scope: !2843)
!2852 = !DILocation(line: 349, column: 5, scope: !2841)
!2853 = !DILocation(line: 351, column: 5, scope: !2788)
!2854 = !DILocation(line: 352, column: 30, scope: !2788)
!2855 = !DILocation(line: 352, column: 34, scope: !2788)
!2856 = !DILocation(line: 352, column: 41, scope: !2788)
!2857 = !DILocation(line: 352, column: 45, scope: !2788)
!2858 = !DILocation(line: 352, column: 5, scope: !2788)
!2859 = !DILocation(line: 353, column: 9, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2788, file: !64, line: 353, column: 9)
!2861 = !DILocation(line: 353, column: 13, scope: !2860)
!2862 = !DILocation(line: 353, column: 9, scope: !2788)
!2863 = !DILocation(line: 354, column: 9, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2860, file: !64, line: 353, column: 23)
!2865 = !DILocation(line: 355, column: 9, scope: !2864)
!2866 = !DILocation(line: 356, column: 9, scope: !2864)
!2867 = !DILocation(line: 357, column: 9, scope: !2864)
!2868 = !DILocation(line: 362, column: 9, scope: !2864)
!2869 = !DILocation(line: 363, column: 9, scope: !2864)
!2870 = !DILocation(line: 364, column: 9, scope: !2864)
!2871 = !DILocation(line: 365, column: 9, scope: !2864)
!2872 = !DILocation(line: 366, column: 9, scope: !2864)
!2873 = !DILocation(line: 367, column: 9, scope: !2864)
!2874 = !DILocation(line: 369, column: 13, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2864, file: !64, line: 369, column: 13)
!2876 = !DILocation(line: 369, column: 17, scope: !2875)
!2877 = !DILocation(line: 369, column: 13, scope: !2864)
!2878 = !DILocation(line: 370, column: 13, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2875, file: !64, line: 369, column: 26)
!2880 = !DILocation(line: 371, column: 37, scope: !2879)
!2881 = !DILocation(line: 371, column: 41, scope: !2879)
!2882 = !DILocation(line: 371, column: 13, scope: !2879)
!2883 = !DILocation(line: 372, column: 9, scope: !2879)
!2884 = !DILocation(line: 373, column: 5, scope: !2864)
!2885 = !DILocation(line: 374, column: 5, scope: !2788)
!2886 = !DILocation(line: 376, column: 9, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2788, file: !64, line: 376, column: 9)
!2888 = !DILocation(line: 376, column: 13, scope: !2887)
!2889 = !DILocation(line: 376, column: 9, scope: !2788)
!2890 = !DILocalVariable(name: "param", scope: !2891, file: !64, line: 377, type: !244)
!2891 = distinct !DILexicalBlock(scope: !2887, file: !64, line: 376, column: 19)
!2892 = !DILocation(line: 377, column: 15, scope: !2891)
!2893 = !DILocation(line: 377, column: 23, scope: !2891)
!2894 = !DILocation(line: 377, column: 27, scope: !2891)
!2895 = !DILocation(line: 380, column: 9, scope: !2891)
!2896 = !DILocation(line: 380, column: 16, scope: !2897)
!2897 = !DILexicalBlockFile(scope: !2891, file: !64, discriminator: 1)
!2898 = !DILocation(line: 380, column: 9, scope: !2897)
!2899 = !DILocalVariable(name: "sep", scope: !2900, file: !64, line: 381, type: !244)
!2900 = distinct !DILexicalBlock(scope: !2891, file: !64, line: 380, column: 23)
!2901 = !DILocation(line: 381, column: 19, scope: !2900)
!2902 = !DILocation(line: 382, column: 29, scope: !2900)
!2903 = !DILocation(line: 382, column: 22, scope: !2900)
!2904 = !DILocation(line: 382, column: 19, scope: !2900)
!2905 = !DILocation(line: 383, column: 19, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2900, file: !64, line: 383, column: 17)
!2907 = !DILocation(line: 383, column: 18, scope: !2906)
!2908 = !DILocation(line: 383, column: 17, scope: !2900)
!2909 = !DILocation(line: 384, column: 17, scope: !2906)
!2910 = !DILocation(line: 385, column: 26, scope: !2900)
!2911 = !DILocation(line: 385, column: 19, scope: !2900)
!2912 = !DILocation(line: 385, column: 17, scope: !2900)
!2913 = !DILocation(line: 386, column: 17, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2900, file: !64, line: 386, column: 17)
!2915 = !DILocation(line: 386, column: 17, scope: !2900)
!2916 = !DILocation(line: 387, column: 18, scope: !2914)
!2917 = !DILocation(line: 387, column: 22, scope: !2914)
!2918 = !DILocation(line: 387, column: 17, scope: !2914)
!2919 = !DILocation(line: 388, column: 44, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2900, file: !64, line: 388, column: 17)
!2921 = !DILocation(line: 388, column: 47, scope: !2920)
!2922 = !DILocation(line: 388, column: 24, scope: !2920)
!2923 = !DILocation(line: 388, column: 22, scope: !2920)
!2924 = !DILocation(line: 388, column: 59, scope: !2920)
!2925 = !DILocation(line: 388, column: 17, scope: !2900)
!2926 = !DILocation(line: 390, column: 17, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2920, file: !64, line: 388, column: 64)
!2928 = !DILocation(line: 391, column: 24, scope: !2927)
!2929 = !DILocation(line: 391, column: 17, scope: !2927)
!2930 = !DILocation(line: 394, column: 17, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2900, file: !64, line: 394, column: 17)
!2932 = !DILocation(line: 394, column: 17, scope: !2900)
!2933 = !DILocation(line: 395, column: 25, scope: !2931)
!2934 = !DILocation(line: 395, column: 29, scope: !2931)
!2935 = !DILocation(line: 395, column: 23, scope: !2931)
!2936 = !DILocation(line: 395, column: 17, scope: !2931)
!2937 = !DILocation(line: 397, column: 17, scope: !2931)
!2938 = !DILocation(line: 380, column: 9, scope: !2939)
!2939 = !DILexicalBlockFile(scope: !2891, file: !64, discriminator: 2)
!2940 = distinct !{!2940, !2895}
!2941 = !DILocation(line: 399, column: 5, scope: !2891)
!2942 = !DILocation(line: 401, column: 16, scope: !2788)
!2943 = !DILocation(line: 401, column: 24, scope: !2788)
!2944 = !DILocation(line: 401, column: 18, scope: !2788)
!2945 = !DILocation(line: 401, column: 9, scope: !2788)
!2946 = !DILocation(line: 401, column: 14, scope: !2788)
!2947 = !DILocation(line: 403, column: 29, scope: !2788)
!2948 = !DILocation(line: 403, column: 12, scope: !2788)
!2949 = !DILocation(line: 403, column: 5, scope: !2788)
!2950 = !DILocation(line: 404, column: 1, scope: !2788)
!2951 = distinct !DISubprogram(name: "read_connect", scope: !64, file: !64, line: 409, type: !2327, isLocal: true, isDefinition: true, scopeLine: 410, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!2952 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !2953)
!2953 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !2959)
!2954 = distinct !DISubprogram(name: "bytestream_put_be32", scope: !1415, file: !1415, line: 92, type: !2955, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{null, !2957, !2958}
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64, align: 64)
!2958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!2959 = distinct !DILocation(line: 506, column: 5, scope: !2951)
!2960 = !DILocalVariable(name: "b", arg: 1, scope: !2954, file: !1415, line: 92, type: !2957)
!2961 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !2959)
!2962 = !DILocalVariable(name: "value", arg: 2, scope: !2954, file: !1415, line: 92, type: !2958)
!2963 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !2959)
!2964 = !DILocalVariable(name: "b", arg: 1, scope: !2965, file: !1415, line: 95, type: !2957)
!2965 = distinct !DISubprogram(name: "bytestream_put_byte", scope: !1415, file: !1415, line: 95, type: !2955, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!2966 = !DILocation(line: 95, column: 233, scope: !2965, inlinedAt: !2967)
!2967 = distinct !DILocation(line: 507, column: 5, scope: !2951)
!2968 = !DILocalVariable(name: "value", arg: 2, scope: !2965, file: !1415, line: 95, type: !2958)
!2969 = !DILocation(line: 95, column: 255, scope: !2965, inlinedAt: !2967)
!2970 = !DILocalVariable(name: "x", arg: 1, scope: !2971, file: !2618, line: 58, type: !127)
!2971 = distinct !DISubprogram(name: "av_bswap16", scope: !2618, file: !2618, line: 58, type: !2972, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!2972 = !DISubroutineType(types: !2973)
!2973 = !{!127, !127}
!2974 = !DILocation(line: 58, column: 98, scope: !2971, inlinedAt: !2975)
!2975 = distinct !DILocation(line: 94, column: 328, scope: !2976, inlinedAt: !2977)
!2976 = distinct !DISubprogram(name: "bytestream_put_be16", scope: !1415, file: !1415, line: 94, type: !2955, isLocal: true, isDefinition: true, scopeLine: 94, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!2977 = distinct !DILocation(line: 521, column: 5, scope: !2951)
!2978 = !DILocalVariable(name: "b", arg: 1, scope: !2976, file: !1415, line: 94, type: !2957)
!2979 = !DILocation(line: 94, column: 258, scope: !2976, inlinedAt: !2977)
!2980 = !DILocalVariable(name: "value", arg: 2, scope: !2976, file: !1415, line: 94, type: !2958)
!2981 = !DILocation(line: 94, column: 280, scope: !2976, inlinedAt: !2977)
!2982 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !2983)
!2983 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !2984)
!2984 = distinct !DILocation(line: 522, column: 5, scope: !2951)
!2985 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !2984)
!2986 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !2984)
!2987 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !2988)
!2988 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !2989)
!2989 = distinct !DILocation(line: 535, column: 5, scope: !2951)
!2990 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !2989)
!2991 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !2989)
!2992 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !2993)
!2993 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !2994)
!2994 = distinct !DILocation(line: 492, column: 5, scope: !2951)
!2995 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !2994)
!2996 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !2994)
!2997 = !DILocalVariable(name: "g", arg: 1, scope: !2998, file: !1415, line: 154, type: !1444)
!2998 = distinct !DISubprogram(name: "bytestream2_get_bytes_left", scope: !1415, file: !1415, line: 154, type: !2999, isLocal: true, isDefinition: true, scopeLine: 155, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!2999 = !DISubroutineType(types: !3000)
!3000 = !{!109, !1444}
!3001 = !DILocation(line: 154, column: 102, scope: !2998, inlinedAt: !3002)
!3002 = distinct !DILocation(line: 476, column: 47, scope: !2951)
!3003 = !DILocation(line: 133, column: 84, scope: !1441, inlinedAt: !3004)
!3004 = distinct !DILocation(line: 460, column: 5, scope: !2951)
!3005 = !DILocation(line: 134, column: 62, scope: !1441, inlinedAt: !3004)
!3006 = !DILocation(line: 135, column: 51, scope: !1441, inlinedAt: !3004)
!3007 = !DILocalVariable(name: "s", arg: 1, scope: !2951, file: !64, line: 409, type: !154)
!3008 = !DILocation(line: 409, column: 37, scope: !2951)
!3009 = !DILocalVariable(name: "rt", arg: 2, scope: !2951, file: !64, line: 409, type: !385)
!3010 = !DILocation(line: 409, column: 53, scope: !2951)
!3011 = !DILocalVariable(name: "pkt", scope: !2951, file: !64, line: 411, type: !394)
!3012 = !DILocation(line: 411, column: 16, scope: !2951)
!3013 = !DILocalVariable(name: "p", scope: !2951, file: !64, line: 412, type: !110)
!3014 = !DILocation(line: 412, column: 14, scope: !2951)
!3015 = !DILocalVariable(name: "cp", scope: !2951, file: !64, line: 413, type: !131)
!3016 = !DILocation(line: 413, column: 20, scope: !2951)
!3017 = !DILocalVariable(name: "ret", scope: !2951, file: !64, line: 414, type: !108)
!3018 = !DILocation(line: 414, column: 9, scope: !2951)
!3019 = !DILocalVariable(name: "command", scope: !2951, file: !64, line: 415, type: !3020)
!3020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 512, align: 8, elements: !1792)
!3021 = !DILocation(line: 415, column: 10, scope: !2951)
!3022 = !DILocalVariable(name: "stringlen", scope: !2951, file: !64, line: 416, type: !108)
!3023 = !DILocation(line: 416, column: 9, scope: !2951)
!3024 = !DILocalVariable(name: "seqnum", scope: !2951, file: !64, line: 417, type: !185)
!3025 = !DILocation(line: 417, column: 12, scope: !2951)
!3026 = !DILocalVariable(name: "tmpstr", scope: !2951, file: !64, line: 418, type: !3027)
!3027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 2048, align: 8, elements: !491)
!3028 = !DILocation(line: 418, column: 13, scope: !2951)
!3029 = !DILocalVariable(name: "gbc", scope: !2951, file: !64, line: 419, type: !1445)
!3030 = !DILocation(line: 419, column: 20, scope: !2951)
!3031 = !DILocation(line: 422, column: 5, scope: !2951)
!3032 = !DILocation(line: 423, column: 40, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3034, file: !64, line: 423, column: 13)
!3034 = distinct !DILexicalBlock(scope: !3035, file: !64, line: 422, column: 14)
!3035 = distinct !DILexicalBlock(scope: !3036, file: !64, line: 422, column: 5)
!3036 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 422, column: 5)
!3037 = !DILocation(line: 423, column: 44, scope: !3033)
!3038 = !DILocation(line: 423, column: 58, scope: !3033)
!3039 = !DILocation(line: 423, column: 62, scope: !3033)
!3040 = !DILocation(line: 424, column: 41, scope: !3033)
!3041 = !DILocation(line: 424, column: 45, scope: !3033)
!3042 = !DILocation(line: 424, column: 59, scope: !3033)
!3043 = !DILocation(line: 424, column: 63, scope: !3033)
!3044 = !DILocation(line: 423, column: 20, scope: !3033)
!3045 = !DILocation(line: 423, column: 18, scope: !3033)
!3046 = !DILocation(line: 424, column: 80, scope: !3033)
!3047 = !DILocation(line: 423, column: 13, scope: !3034)
!3048 = !DILocation(line: 425, column: 20, scope: !3033)
!3049 = !DILocation(line: 425, column: 13, scope: !3033)
!3050 = !DILocation(line: 429, column: 17, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3034, file: !64, line: 429, column: 13)
!3052 = !DILocation(line: 429, column: 22, scope: !3051)
!3053 = !DILocation(line: 429, column: 13, scope: !3034)
!3054 = !DILocation(line: 430, column: 42, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3056, file: !64, line: 430, column: 17)
!3056 = distinct !DILexicalBlock(scope: !3051, file: !64, line: 429, column: 45)
!3057 = !DILocation(line: 430, column: 24, scope: !3055)
!3058 = !DILocation(line: 430, column: 22, scope: !3055)
!3059 = !DILocation(line: 430, column: 52, scope: !3055)
!3060 = !DILocation(line: 430, column: 17, scope: !3056)
!3061 = !DILocation(line: 431, column: 17, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3055, file: !64, line: 430, column: 57)
!3063 = !DILocation(line: 432, column: 24, scope: !3062)
!3064 = !DILocation(line: 432, column: 17, scope: !3062)
!3065 = !DILocation(line: 434, column: 9, scope: !3056)
!3066 = !DILocation(line: 434, column: 24, scope: !3067)
!3067 = !DILexicalBlockFile(scope: !3068, file: !64, discriminator: 1)
!3068 = distinct !DILexicalBlock(scope: !3051, file: !64, line: 434, column: 20)
!3069 = !DILocation(line: 434, column: 29, scope: !3067)
!3070 = !DILocation(line: 434, column: 20, scope: !3067)
!3071 = !DILocation(line: 435, column: 20, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3068, file: !64, line: 434, column: 37)
!3073 = !DILocation(line: 435, column: 13, scope: !3072)
!3074 = !DILocation(line: 436, column: 13, scope: !3072)
!3075 = !DILocation(line: 437, column: 13, scope: !3072)
!3076 = !DILocation(line: 438, column: 24, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3068, file: !64, line: 438, column: 20)
!3078 = !DILocation(line: 438, column: 29, scope: !3077)
!3079 = !DILocation(line: 438, column: 20, scope: !3068)
!3080 = !DILocation(line: 439, column: 20, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3077, file: !64, line: 438, column: 52)
!3082 = !DILocation(line: 439, column: 13, scope: !3081)
!3083 = !DILocation(line: 440, column: 9, scope: !3081)
!3084 = !DILocation(line: 440, column: 24, scope: !3085)
!3085 = !DILexicalBlockFile(scope: !3086, file: !64, discriminator: 1)
!3086 = distinct !DILexicalBlock(scope: !3077, file: !64, line: 440, column: 20)
!3087 = !DILocation(line: 440, column: 29, scope: !3085)
!3088 = !DILocation(line: 440, column: 20, scope: !3085)
!3089 = !DILocation(line: 441, column: 47, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !64, line: 441, column: 17)
!3091 = distinct !DILexicalBlock(scope: !3086, file: !64, line: 440, column: 57)
!3092 = !DILocation(line: 441, column: 24, scope: !3090)
!3093 = !DILocation(line: 441, column: 22, scope: !3090)
!3094 = !DILocation(line: 441, column: 57, scope: !3090)
!3095 = !DILocation(line: 441, column: 17, scope: !3091)
!3096 = !DILocation(line: 442, column: 17, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3090, file: !64, line: 441, column: 62)
!3098 = !DILocation(line: 443, column: 24, scope: !3097)
!3099 = !DILocation(line: 443, column: 17, scope: !3097)
!3100 = !DILocation(line: 445, column: 9, scope: !3091)
!3101 = !DILocation(line: 445, column: 24, scope: !3102)
!3102 = !DILexicalBlockFile(scope: !3103, file: !64, discriminator: 1)
!3103 = distinct !DILexicalBlock(scope: !3086, file: !64, line: 445, column: 20)
!3104 = !DILocation(line: 445, column: 29, scope: !3102)
!3105 = !DILocation(line: 445, column: 20, scope: !3102)
!3106 = !DILocation(line: 446, column: 43, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3108, file: !64, line: 446, column: 17)
!3108 = distinct !DILexicalBlock(scope: !3103, file: !64, line: 445, column: 53)
!3109 = !DILocation(line: 446, column: 24, scope: !3107)
!3110 = !DILocation(line: 446, column: 22, scope: !3107)
!3111 = !DILocation(line: 446, column: 53, scope: !3107)
!3112 = !DILocation(line: 446, column: 17, scope: !3108)
!3113 = !DILocation(line: 447, column: 17, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3107, file: !64, line: 446, column: 58)
!3115 = !DILocation(line: 448, column: 24, scope: !3114)
!3116 = !DILocation(line: 448, column: 17, scope: !3114)
!3117 = !DILocation(line: 450, column: 9, scope: !3108)
!3118 = !DILocation(line: 450, column: 24, scope: !3119)
!3119 = !DILexicalBlockFile(scope: !3120, file: !64, discriminator: 1)
!3120 = distinct !DILexicalBlock(scope: !3103, file: !64, line: 450, column: 20)
!3121 = !DILocation(line: 450, column: 29, scope: !3119)
!3122 = !DILocation(line: 450, column: 20, scope: !3119)
!3123 = !DILocation(line: 452, column: 13, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3120, file: !64, line: 450, column: 48)
!3125 = !DILocation(line: 454, column: 20, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3120, file: !64, line: 453, column: 16)
!3127 = !DILocation(line: 454, column: 70, scope: !3126)
!3128 = !DILocation(line: 454, column: 13, scope: !3126)
!3129 = !DILocation(line: 456, column: 9, scope: !3034)
!3130 = !DILocation(line: 422, column: 5, scope: !3131)
!3131 = !DILexicalBlockFile(scope: !3035, file: !64, discriminator: 1)
!3132 = distinct !{!3132, !3031}
!3133 = !DILocation(line: 459, column: 14, scope: !2951)
!3134 = !DILocation(line: 459, column: 8, scope: !2951)
!3135 = !DILocation(line: 460, column: 28, scope: !2951)
!3136 = !DILocation(line: 460, column: 36, scope: !2951)
!3137 = !DILocation(line: 460, column: 5, scope: !2951)
!3138 = !DILocation(line: 137, column: 16, scope: !1805, inlinedAt: !3004)
!3139 = !DILocation(line: 137, column: 25, scope: !1805, inlinedAt: !3004)
!3140 = !DILocation(line: 137, column: 14, scope: !1805, inlinedAt: !3004)
!3141 = !DILocation(line: 137, column: 34, scope: !1811, inlinedAt: !3004)
!3142 = !DILocation(line: 137, column: 95, scope: !1814, inlinedAt: !3004)
!3143 = !DILocation(line: 137, column: 95, scope: !1811, inlinedAt: !3004)
!3144 = !DILocation(line: 138, column: 17, scope: !1441, inlinedAt: !3004)
!3145 = !DILocation(line: 138, column: 5, scope: !1441, inlinedAt: !3004)
!3146 = !DILocation(line: 138, column: 8, scope: !1441, inlinedAt: !3004)
!3147 = !DILocation(line: 138, column: 15, scope: !1441, inlinedAt: !3004)
!3148 = !DILocation(line: 139, column: 23, scope: !1441, inlinedAt: !3004)
!3149 = !DILocation(line: 139, column: 5, scope: !1441, inlinedAt: !3004)
!3150 = !DILocation(line: 139, column: 8, scope: !1441, inlinedAt: !3004)
!3151 = !DILocation(line: 139, column: 21, scope: !1441, inlinedAt: !3004)
!3152 = !DILocation(line: 140, column: 21, scope: !1441, inlinedAt: !3004)
!3153 = !DILocation(line: 140, column: 27, scope: !1441, inlinedAt: !3004)
!3154 = !DILocation(line: 140, column: 25, scope: !1441, inlinedAt: !3004)
!3155 = !DILocation(line: 140, column: 5, scope: !1441, inlinedAt: !3004)
!3156 = !DILocation(line: 140, column: 8, scope: !1441, inlinedAt: !3004)
!3157 = !DILocation(line: 140, column: 19, scope: !1441, inlinedAt: !3004)
!3158 = !DILocation(line: 461, column: 34, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 461, column: 9)
!3160 = !DILocation(line: 461, column: 9, scope: !3159)
!3161 = !DILocation(line: 461, column: 9, scope: !2951)
!3162 = !DILocation(line: 462, column: 16, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3159, file: !64, line: 461, column: 73)
!3164 = !DILocation(line: 462, column: 9, scope: !3163)
!3165 = !DILocation(line: 463, column: 9, scope: !3163)
!3166 = !DILocation(line: 464, column: 9, scope: !3163)
!3167 = !DILocation(line: 466, column: 16, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 466, column: 9)
!3169 = !DILocation(line: 466, column: 9, scope: !3168)
!3170 = !DILocation(line: 466, column: 9, scope: !2951)
!3171 = !DILocation(line: 467, column: 16, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3168, file: !64, line: 466, column: 37)
!3173 = !DILocation(line: 467, column: 54, scope: !3172)
!3174 = !DILocation(line: 467, column: 9, scope: !3172)
!3175 = !DILocation(line: 468, column: 9, scope: !3172)
!3176 = !DILocation(line: 469, column: 9, scope: !3172)
!3177 = !DILocation(line: 471, column: 11, scope: !2951)
!3178 = !DILocation(line: 471, column: 9, scope: !2951)
!3179 = !DILocation(line: 472, column: 9, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 472, column: 9)
!3181 = !DILocation(line: 472, column: 9, scope: !2951)
!3182 = !DILocation(line: 473, column: 16, scope: !3180)
!3183 = !DILocation(line: 473, column: 9, scope: !3180)
!3184 = !DILocation(line: 475, column: 38, scope: !2951)
!3185 = !DILocation(line: 476, column: 38, scope: !2951)
!3186 = !DILocation(line: 476, column: 47, scope: !2951)
!3187 = !DILocation(line: 156, column: 12, scope: !2998, inlinedAt: !3002)
!3188 = !DILocation(line: 156, column: 15, scope: !2998, inlinedAt: !3002)
!3189 = !DILocation(line: 156, column: 28, scope: !2998, inlinedAt: !3002)
!3190 = !DILocation(line: 156, column: 31, scope: !2998, inlinedAt: !3002)
!3191 = !DILocation(line: 156, column: 26, scope: !2998, inlinedAt: !3002)
!3192 = !DILocation(line: 476, column: 45, scope: !2951)
!3193 = !DILocation(line: 477, column: 41, scope: !2951)
!3194 = !DILocation(line: 475, column: 11, scope: !2951)
!3195 = !DILocation(line: 475, column: 9, scope: !2951)
!3196 = !DILocation(line: 478, column: 9, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 478, column: 9)
!3198 = !DILocation(line: 478, column: 9, scope: !2951)
!3199 = !DILocation(line: 479, column: 16, scope: !3197)
!3200 = !DILocation(line: 479, column: 9, scope: !3197)
!3201 = !DILocation(line: 480, column: 10, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 480, column: 9)
!3203 = !DILocation(line: 480, column: 14, scope: !3202)
!3204 = !DILocation(line: 480, column: 24, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !3202, file: !64, discriminator: 1)
!3206 = !DILocation(line: 480, column: 32, scope: !3205)
!3207 = !DILocation(line: 480, column: 36, scope: !3205)
!3208 = !DILocation(line: 480, column: 17, scope: !3205)
!3209 = !DILocation(line: 480, column: 9, scope: !3205)
!3210 = !DILocation(line: 481, column: 16, scope: !3202)
!3211 = !DILocation(line: 482, column: 16, scope: !3202)
!3212 = !DILocation(line: 482, column: 24, scope: !3202)
!3213 = !DILocation(line: 482, column: 28, scope: !3202)
!3214 = !DILocation(line: 481, column: 9, scope: !3202)
!3215 = !DILocation(line: 483, column: 5, scope: !2951)
!3216 = !DILocation(line: 486, column: 16, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 486, column: 9)
!3218 = !DILocation(line: 486, column: 14, scope: !3217)
!3219 = !DILocation(line: 487, column: 70, scope: !3217)
!3220 = !DILocation(line: 486, column: 9, scope: !2951)
!3221 = !DILocation(line: 488, column: 16, scope: !3217)
!3222 = !DILocation(line: 488, column: 9, scope: !3217)
!3223 = !DILocation(line: 489, column: 13, scope: !2951)
!3224 = !DILocation(line: 489, column: 7, scope: !2951)
!3225 = !DILocation(line: 492, column: 29, scope: !2951)
!3226 = !DILocation(line: 492, column: 33, scope: !2951)
!3227 = !DILocation(line: 492, column: 5, scope: !2951)
!3228 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !2994)
!3229 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !2994)
!3230 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !2993)
!3231 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !2993)
!3232 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !2993)
!3233 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !2993)
!3234 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !2993)
!3235 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !2993)
!3236 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !2993)
!3237 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !2993)
!3238 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !2993)
!3239 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !2993)
!3240 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !2993)
!3241 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !2993)
!3242 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !2993)
!3243 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !2993)
!3244 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !2993)
!3245 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !2993)
!3246 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !2993)
!3247 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !2993)
!3248 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !2994)
!3249 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !2994)
!3250 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !2994)
!3251 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !2994)
!3252 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !2994)
!3253 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !2994)
!3254 = !DILocation(line: 493, column: 16, scope: !2951)
!3255 = !DILocation(line: 493, column: 24, scope: !2951)
!3256 = !DILocation(line: 493, column: 18, scope: !2951)
!3257 = !DILocation(line: 493, column: 9, scope: !2951)
!3258 = !DILocation(line: 493, column: 14, scope: !2951)
!3259 = !DILocation(line: 494, column: 32, scope: !2951)
!3260 = !DILocation(line: 494, column: 36, scope: !2951)
!3261 = !DILocation(line: 494, column: 50, scope: !2951)
!3262 = !DILocation(line: 494, column: 54, scope: !2951)
!3263 = !DILocation(line: 495, column: 33, scope: !2951)
!3264 = !DILocation(line: 495, column: 37, scope: !2951)
!3265 = !DILocation(line: 495, column: 51, scope: !2951)
!3266 = !DILocation(line: 495, column: 55, scope: !2951)
!3267 = !DILocation(line: 494, column: 11, scope: !2951)
!3268 = !DILocation(line: 494, column: 9, scope: !2951)
!3269 = !DILocation(line: 496, column: 5, scope: !2951)
!3270 = !DILocation(line: 497, column: 9, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 497, column: 9)
!3272 = !DILocation(line: 497, column: 13, scope: !3271)
!3273 = !DILocation(line: 497, column: 9, scope: !2951)
!3274 = !DILocation(line: 498, column: 16, scope: !3271)
!3275 = !DILocation(line: 498, column: 9, scope: !3271)
!3276 = !DILocation(line: 500, column: 16, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 500, column: 9)
!3278 = !DILocation(line: 500, column: 14, scope: !3277)
!3279 = !DILocation(line: 501, column: 66, scope: !3277)
!3280 = !DILocation(line: 500, column: 9, scope: !2951)
!3281 = !DILocation(line: 502, column: 16, scope: !3277)
!3282 = !DILocation(line: 502, column: 9, scope: !3277)
!3283 = !DILocation(line: 503, column: 13, scope: !2951)
!3284 = !DILocation(line: 503, column: 7, scope: !2951)
!3285 = !DILocation(line: 506, column: 29, scope: !2951)
!3286 = !DILocation(line: 506, column: 33, scope: !2951)
!3287 = !DILocation(line: 506, column: 5, scope: !2951)
!3288 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !2959)
!3289 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !2959)
!3290 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !2953)
!3291 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !2953)
!3292 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !2953)
!3293 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !2953)
!3294 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !2953)
!3295 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !2953)
!3296 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !2953)
!3297 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !2953)
!3298 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !2953)
!3299 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !2953)
!3300 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !2953)
!3301 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !2953)
!3302 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !2953)
!3303 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !2953)
!3304 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !2953)
!3305 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !2953)
!3306 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !2953)
!3307 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !2953)
!3308 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !2959)
!3309 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !2959)
!3310 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !2959)
!3311 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !2959)
!3312 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !2959)
!3313 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !2959)
!3314 = !DILocation(line: 507, column: 5, scope: !2951)
!3315 = !DILocation(line: 95, column: 292, scope: !3316, inlinedAt: !2967)
!3316 = !DILexicalBlockFile(scope: !3317, file: !1415, discriminator: 1)
!3317 = distinct !DILexicalBlock(scope: !2965, file: !1415, line: 95, column: 267)
!3318 = !DILocation(line: 95, column: 291, scope: !3316, inlinedAt: !2967)
!3319 = !DILocation(line: 95, column: 282, scope: !3316, inlinedAt: !2967)
!3320 = !DILocation(line: 95, column: 281, scope: !3316, inlinedAt: !2967)
!3321 = !DILocation(line: 95, column: 289, scope: !3316, inlinedAt: !2967)
!3322 = !DILocation(line: 95, column: 314, scope: !3323, inlinedAt: !2967)
!3323 = !DILexicalBlockFile(scope: !2965, file: !1415, discriminator: 2)
!3324 = !DILocation(line: 95, column: 317, scope: !3323, inlinedAt: !2967)
!3325 = !DILocation(line: 508, column: 16, scope: !2951)
!3326 = !DILocation(line: 508, column: 24, scope: !2951)
!3327 = !DILocation(line: 508, column: 18, scope: !2951)
!3328 = !DILocation(line: 508, column: 9, scope: !2951)
!3329 = !DILocation(line: 508, column: 14, scope: !2951)
!3330 = !DILocation(line: 509, column: 32, scope: !2951)
!3331 = !DILocation(line: 509, column: 36, scope: !2951)
!3332 = !DILocation(line: 509, column: 50, scope: !2951)
!3333 = !DILocation(line: 509, column: 54, scope: !2951)
!3334 = !DILocation(line: 510, column: 33, scope: !2951)
!3335 = !DILocation(line: 510, column: 37, scope: !2951)
!3336 = !DILocation(line: 510, column: 51, scope: !2951)
!3337 = !DILocation(line: 510, column: 55, scope: !2951)
!3338 = !DILocation(line: 509, column: 11, scope: !2951)
!3339 = !DILocation(line: 509, column: 9, scope: !2951)
!3340 = !DILocation(line: 511, column: 5, scope: !2951)
!3341 = !DILocation(line: 512, column: 9, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 512, column: 9)
!3343 = !DILocation(line: 512, column: 13, scope: !3342)
!3344 = !DILocation(line: 512, column: 9, scope: !2951)
!3345 = !DILocation(line: 513, column: 16, scope: !3342)
!3346 = !DILocation(line: 513, column: 9, scope: !3342)
!3347 = !DILocation(line: 516, column: 16, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 516, column: 9)
!3349 = !DILocation(line: 516, column: 14, scope: !3348)
!3350 = !DILocation(line: 517, column: 67, scope: !3348)
!3351 = !DILocation(line: 516, column: 9, scope: !2951)
!3352 = !DILocation(line: 518, column: 16, scope: !3348)
!3353 = !DILocation(line: 518, column: 9, scope: !3348)
!3354 = !DILocation(line: 520, column: 13, scope: !2951)
!3355 = !DILocation(line: 520, column: 7, scope: !2951)
!3356 = !DILocation(line: 521, column: 5, scope: !2951)
!3357 = !DILocation(line: 94, column: 339, scope: !2976, inlinedAt: !2977)
!3358 = !DILocation(line: 94, column: 328, scope: !2976, inlinedAt: !2977)
!3359 = !DILocation(line: 60, column: 9, scope: !2971, inlinedAt: !2975)
!3360 = !DILocation(line: 60, column: 10, scope: !2971, inlinedAt: !2975)
!3361 = !DILocation(line: 60, column: 18, scope: !2971, inlinedAt: !2975)
!3362 = !DILocation(line: 60, column: 19, scope: !2971, inlinedAt: !2975)
!3363 = !DILocation(line: 60, column: 15, scope: !2971, inlinedAt: !2975)
!3364 = !DILocation(line: 60, column: 8, scope: !2971, inlinedAt: !2975)
!3365 = !DILocation(line: 60, column: 6, scope: !2971, inlinedAt: !2975)
!3366 = !DILocation(line: 61, column: 12, scope: !2971, inlinedAt: !2975)
!3367 = !DILocation(line: 94, column: 317, scope: !2976, inlinedAt: !2977)
!3368 = !DILocation(line: 94, column: 316, scope: !2976, inlinedAt: !2977)
!3369 = !DILocation(line: 94, column: 322, scope: !2976, inlinedAt: !2977)
!3370 = !DILocation(line: 94, column: 325, scope: !2976, inlinedAt: !2977)
!3371 = !DILocation(line: 94, column: 351, scope: !2976, inlinedAt: !2977)
!3372 = !DILocation(line: 94, column: 354, scope: !2976, inlinedAt: !2977)
!3373 = !DILocation(line: 522, column: 5, scope: !2951)
!3374 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !2984)
!3375 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !2984)
!3376 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !2983)
!3377 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !2983)
!3378 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !2983)
!3379 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !2983)
!3380 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !2983)
!3381 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !2983)
!3382 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !2983)
!3383 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !2983)
!3384 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !2983)
!3385 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !2983)
!3386 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !2983)
!3387 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !2983)
!3388 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !2983)
!3389 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !2983)
!3390 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !2983)
!3391 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !2983)
!3392 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !2983)
!3393 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !2983)
!3394 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !2984)
!3395 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !2984)
!3396 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !2984)
!3397 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !2984)
!3398 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !2984)
!3399 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !2984)
!3400 = !DILocation(line: 523, column: 32, scope: !2951)
!3401 = !DILocation(line: 523, column: 36, scope: !2951)
!3402 = !DILocation(line: 523, column: 50, scope: !2951)
!3403 = !DILocation(line: 523, column: 54, scope: !2951)
!3404 = !DILocation(line: 524, column: 33, scope: !2951)
!3405 = !DILocation(line: 524, column: 37, scope: !2951)
!3406 = !DILocation(line: 524, column: 51, scope: !2951)
!3407 = !DILocation(line: 524, column: 55, scope: !2951)
!3408 = !DILocation(line: 523, column: 11, scope: !2951)
!3409 = !DILocation(line: 523, column: 9, scope: !2951)
!3410 = !DILocation(line: 525, column: 5, scope: !2951)
!3411 = !DILocation(line: 526, column: 9, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 526, column: 9)
!3413 = !DILocation(line: 526, column: 13, scope: !3412)
!3414 = !DILocation(line: 526, column: 9, scope: !2951)
!3415 = !DILocation(line: 527, column: 16, scope: !3412)
!3416 = !DILocation(line: 527, column: 9, scope: !3412)
!3417 = !DILocation(line: 530, column: 16, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 530, column: 9)
!3419 = !DILocation(line: 530, column: 14, scope: !3418)
!3420 = !DILocation(line: 531, column: 65, scope: !3418)
!3421 = !DILocation(line: 530, column: 9, scope: !2951)
!3422 = !DILocation(line: 532, column: 16, scope: !3418)
!3423 = !DILocation(line: 532, column: 9, scope: !3418)
!3424 = !DILocation(line: 534, column: 13, scope: !2951)
!3425 = !DILocation(line: 534, column: 7, scope: !2951)
!3426 = !DILocation(line: 535, column: 29, scope: !2951)
!3427 = !DILocation(line: 535, column: 33, scope: !2951)
!3428 = !DILocation(line: 535, column: 5, scope: !2951)
!3429 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !2989)
!3430 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !2989)
!3431 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !2988)
!3432 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !2988)
!3433 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !2988)
!3434 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !2988)
!3435 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !2988)
!3436 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !2988)
!3437 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !2988)
!3438 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !2988)
!3439 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !2988)
!3440 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !2988)
!3441 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !2988)
!3442 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !2988)
!3443 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !2988)
!3444 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !2988)
!3445 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !2988)
!3446 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !2988)
!3447 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !2988)
!3448 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !2988)
!3449 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !2989)
!3450 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !2989)
!3451 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !2989)
!3452 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !2989)
!3453 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !2989)
!3454 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !2989)
!3455 = !DILocation(line: 536, column: 32, scope: !2951)
!3456 = !DILocation(line: 536, column: 36, scope: !2951)
!3457 = !DILocation(line: 536, column: 50, scope: !2951)
!3458 = !DILocation(line: 536, column: 54, scope: !2951)
!3459 = !DILocation(line: 537, column: 33, scope: !2951)
!3460 = !DILocation(line: 537, column: 37, scope: !2951)
!3461 = !DILocation(line: 537, column: 51, scope: !2951)
!3462 = !DILocation(line: 537, column: 55, scope: !2951)
!3463 = !DILocation(line: 536, column: 11, scope: !2951)
!3464 = !DILocation(line: 536, column: 9, scope: !2951)
!3465 = !DILocation(line: 538, column: 5, scope: !2951)
!3466 = !DILocation(line: 539, column: 9, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 539, column: 9)
!3468 = !DILocation(line: 539, column: 13, scope: !3467)
!3469 = !DILocation(line: 539, column: 9, scope: !2951)
!3470 = !DILocation(line: 540, column: 16, scope: !3467)
!3471 = !DILocation(line: 540, column: 9, scope: !3467)
!3472 = !DILocation(line: 543, column: 16, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 543, column: 9)
!3474 = !DILocation(line: 543, column: 14, scope: !3473)
!3475 = !DILocation(line: 545, column: 45, scope: !3473)
!3476 = !DILocation(line: 543, column: 9, scope: !2951)
!3477 = !DILocation(line: 546, column: 16, scope: !3473)
!3478 = !DILocation(line: 546, column: 9, scope: !3473)
!3479 = !DILocation(line: 548, column: 13, scope: !2951)
!3480 = !DILocation(line: 548, column: 7, scope: !2951)
!3481 = !DILocation(line: 549, column: 5, scope: !2951)
!3482 = !DILocation(line: 550, column: 29, scope: !2951)
!3483 = !DILocation(line: 550, column: 5, scope: !2951)
!3484 = !DILocation(line: 552, column: 5, scope: !2951)
!3485 = !DILocation(line: 553, column: 5, scope: !2951)
!3486 = !DILocation(line: 554, column: 5, scope: !2951)
!3487 = !DILocation(line: 555, column: 5, scope: !2951)
!3488 = !DILocation(line: 556, column: 5, scope: !2951)
!3489 = !DILocation(line: 557, column: 5, scope: !2951)
!3490 = !DILocation(line: 559, column: 5, scope: !2951)
!3491 = !DILocation(line: 560, column: 5, scope: !2951)
!3492 = !DILocation(line: 561, column: 5, scope: !2951)
!3493 = !DILocation(line: 562, column: 5, scope: !2951)
!3494 = !DILocation(line: 563, column: 5, scope: !2951)
!3495 = !DILocation(line: 564, column: 5, scope: !2951)
!3496 = !DILocation(line: 565, column: 5, scope: !2951)
!3497 = !DILocation(line: 566, column: 5, scope: !2951)
!3498 = !DILocation(line: 567, column: 5, scope: !2951)
!3499 = !DILocation(line: 568, column: 5, scope: !2951)
!3500 = !DILocation(line: 570, column: 16, scope: !2951)
!3501 = !DILocation(line: 570, column: 24, scope: !2951)
!3502 = !DILocation(line: 570, column: 18, scope: !2951)
!3503 = !DILocation(line: 570, column: 9, scope: !2951)
!3504 = !DILocation(line: 570, column: 14, scope: !2951)
!3505 = !DILocation(line: 571, column: 32, scope: !2951)
!3506 = !DILocation(line: 571, column: 36, scope: !2951)
!3507 = !DILocation(line: 571, column: 50, scope: !2951)
!3508 = !DILocation(line: 571, column: 54, scope: !2951)
!3509 = !DILocation(line: 572, column: 33, scope: !2951)
!3510 = !DILocation(line: 572, column: 37, scope: !2951)
!3511 = !DILocation(line: 572, column: 51, scope: !2951)
!3512 = !DILocation(line: 572, column: 55, scope: !2951)
!3513 = !DILocation(line: 571, column: 11, scope: !2951)
!3514 = !DILocation(line: 571, column: 9, scope: !2951)
!3515 = !DILocation(line: 573, column: 5, scope: !2951)
!3516 = !DILocation(line: 574, column: 9, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 574, column: 9)
!3518 = !DILocation(line: 574, column: 13, scope: !3517)
!3519 = !DILocation(line: 574, column: 9, scope: !2951)
!3520 = !DILocation(line: 575, column: 16, scope: !3517)
!3521 = !DILocation(line: 575, column: 9, scope: !3517)
!3522 = !DILocation(line: 577, column: 16, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !2951, file: !64, line: 577, column: 9)
!3524 = !DILocation(line: 577, column: 14, scope: !3523)
!3525 = !DILocation(line: 578, column: 62, scope: !3523)
!3526 = !DILocation(line: 577, column: 9, scope: !2951)
!3527 = !DILocation(line: 579, column: 16, scope: !3523)
!3528 = !DILocation(line: 579, column: 9, scope: !3523)
!3529 = !DILocation(line: 580, column: 13, scope: !2951)
!3530 = !DILocation(line: 580, column: 7, scope: !2951)
!3531 = !DILocation(line: 581, column: 5, scope: !2951)
!3532 = !DILocation(line: 582, column: 5, scope: !2951)
!3533 = !DILocation(line: 583, column: 5, scope: !2951)
!3534 = !DILocation(line: 584, column: 5, scope: !2951)
!3535 = !DILocation(line: 585, column: 16, scope: !2951)
!3536 = !DILocation(line: 585, column: 24, scope: !2951)
!3537 = !DILocation(line: 585, column: 18, scope: !2951)
!3538 = !DILocation(line: 585, column: 9, scope: !2951)
!3539 = !DILocation(line: 585, column: 14, scope: !2951)
!3540 = !DILocation(line: 586, column: 32, scope: !2951)
!3541 = !DILocation(line: 586, column: 36, scope: !2951)
!3542 = !DILocation(line: 586, column: 50, scope: !2951)
!3543 = !DILocation(line: 586, column: 54, scope: !2951)
!3544 = !DILocation(line: 587, column: 33, scope: !2951)
!3545 = !DILocation(line: 587, column: 37, scope: !2951)
!3546 = !DILocation(line: 587, column: 51, scope: !2951)
!3547 = !DILocation(line: 587, column: 55, scope: !2951)
!3548 = !DILocation(line: 586, column: 11, scope: !2951)
!3549 = !DILocation(line: 586, column: 9, scope: !2951)
!3550 = !DILocation(line: 588, column: 5, scope: !2951)
!3551 = !DILocation(line: 590, column: 12, scope: !2951)
!3552 = !DILocation(line: 590, column: 5, scope: !2951)
!3553 = !DILocation(line: 591, column: 1, scope: !2951)
!3554 = distinct !DISubprogram(name: "get_packet", scope: !64, file: !64, line: 2408, type: !299, isLocal: true, isDefinition: true, scopeLine: 2409, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!3555 = !DILocalVariable(name: "s", arg: 1, scope: !3554, file: !64, line: 2408, type: !154)
!3556 = !DILocation(line: 2408, column: 35, scope: !3554)
!3557 = !DILocalVariable(name: "for_header", arg: 2, scope: !3554, file: !64, line: 2408, type: !108)
!3558 = !DILocation(line: 2408, column: 42, scope: !3554)
!3559 = !DILocalVariable(name: "rt", scope: !3554, file: !64, line: 2410, type: !385)
!3560 = !DILocation(line: 2410, column: 18, scope: !3554)
!3561 = !DILocation(line: 2410, column: 23, scope: !3554)
!3562 = !DILocation(line: 2410, column: 26, scope: !3554)
!3563 = !DILocalVariable(name: "ret", scope: !3554, file: !64, line: 2411, type: !108)
!3564 = !DILocation(line: 2411, column: 9, scope: !3554)
!3565 = !DILocation(line: 2413, column: 9, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3554, file: !64, line: 2413, column: 9)
!3567 = !DILocation(line: 2413, column: 13, scope: !3566)
!3568 = !DILocation(line: 2413, column: 19, scope: !3566)
!3569 = !DILocation(line: 2413, column: 9, scope: !3554)
!3570 = !DILocation(line: 2414, column: 9, scope: !3566)
!3571 = !DILocation(line: 2416, column: 5, scope: !3554)
!3572 = !DILocalVariable(name: "rpkt", scope: !3573, file: !64, line: 2417, type: !394)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !64, line: 2416, column: 14)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !64, line: 2416, column: 5)
!3575 = distinct !DILexicalBlock(scope: !3554, file: !64, line: 2416, column: 5)
!3576 = !DILocation(line: 2417, column: 20, scope: !3573)
!3577 = !DILocation(line: 2418, column: 40, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3573, file: !64, line: 2418, column: 13)
!3579 = !DILocation(line: 2418, column: 44, scope: !3578)
!3580 = !DILocation(line: 2419, column: 40, scope: !3578)
!3581 = !DILocation(line: 2419, column: 44, scope: !3578)
!3582 = !DILocation(line: 2419, column: 60, scope: !3578)
!3583 = !DILocation(line: 2419, column: 64, scope: !3578)
!3584 = !DILocation(line: 2420, column: 41, scope: !3578)
!3585 = !DILocation(line: 2420, column: 45, scope: !3578)
!3586 = !DILocation(line: 2418, column: 20, scope: !3578)
!3587 = !DILocation(line: 2418, column: 18, scope: !3578)
!3588 = !DILocation(line: 2420, column: 62, scope: !3578)
!3589 = !DILocation(line: 2418, column: 13, scope: !3573)
!3590 = !DILocation(line: 2421, column: 17, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3592, file: !64, line: 2421, column: 17)
!3592 = distinct !DILexicalBlock(scope: !3578, file: !64, line: 2420, column: 68)
!3593 = !DILocation(line: 2421, column: 21, scope: !3591)
!3594 = !DILocation(line: 2421, column: 17, scope: !3592)
!3595 = !DILocation(line: 2422, column: 17, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3591, file: !64, line: 2421, column: 27)
!3597 = !DILocation(line: 2424, column: 17, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3591, file: !64, line: 2423, column: 20)
!3599 = !DILocation(line: 2429, column: 35, scope: !3573)
!3600 = !DILocation(line: 2429, column: 9, scope: !3573)
!3601 = !DILocation(line: 2429, column: 13, scope: !3573)
!3602 = !DILocation(line: 2429, column: 28, scope: !3573)
!3603 = !DILocation(line: 2431, column: 27, scope: !3573)
!3604 = !DILocation(line: 2431, column: 9, scope: !3573)
!3605 = !DILocation(line: 2431, column: 13, scope: !3573)
!3606 = !DILocation(line: 2431, column: 24, scope: !3573)
!3607 = !DILocation(line: 2432, column: 13, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3573, file: !64, line: 2432, column: 13)
!3609 = !DILocation(line: 2432, column: 17, scope: !3608)
!3610 = !DILocation(line: 2432, column: 30, scope: !3608)
!3611 = !DILocation(line: 2432, column: 34, scope: !3608)
!3612 = !DILocation(line: 2432, column: 28, scope: !3608)
!3613 = !DILocation(line: 2432, column: 52, scope: !3608)
!3614 = !DILocation(line: 2432, column: 56, scope: !3608)
!3615 = !DILocation(line: 2432, column: 50, scope: !3608)
!3616 = !DILocation(line: 2432, column: 13, scope: !3573)
!3617 = !DILocation(line: 2433, column: 20, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3608, file: !64, line: 2432, column: 77)
!3619 = !DILocation(line: 2433, column: 13, scope: !3618)
!3620 = !DILocation(line: 2434, column: 39, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3618, file: !64, line: 2434, column: 17)
!3622 = !DILocation(line: 2434, column: 42, scope: !3621)
!3623 = !DILocation(line: 2434, column: 51, scope: !3621)
!3624 = !DILocation(line: 2434, column: 61, scope: !3621)
!3625 = !DILocation(line: 2434, column: 24, scope: !3621)
!3626 = !DILocation(line: 2434, column: 22, scope: !3621)
!3627 = !DILocation(line: 2434, column: 67, scope: !3621)
!3628 = !DILocation(line: 2434, column: 17, scope: !3618)
!3629 = !DILocation(line: 2435, column: 17, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3621, file: !64, line: 2434, column: 72)
!3631 = !DILocation(line: 2436, column: 24, scope: !3630)
!3632 = !DILocation(line: 2436, column: 17, scope: !3630)
!3633 = !DILocation(line: 2438, column: 35, scope: !3618)
!3634 = !DILocation(line: 2438, column: 39, scope: !3618)
!3635 = !DILocation(line: 2438, column: 13, scope: !3618)
!3636 = !DILocation(line: 2438, column: 17, scope: !3618)
!3637 = !DILocation(line: 2438, column: 33, scope: !3618)
!3638 = !DILocation(line: 2439, column: 9, scope: !3618)
!3639 = !DILocation(line: 2441, column: 33, scope: !3573)
!3640 = !DILocation(line: 2441, column: 36, scope: !3573)
!3641 = !DILocation(line: 2441, column: 15, scope: !3573)
!3642 = !DILocation(line: 2441, column: 13, scope: !3573)
!3643 = !DILocation(line: 2446, column: 13, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3573, file: !64, line: 2446, column: 13)
!3645 = !DILocation(line: 2446, column: 17, scope: !3644)
!3646 = !DILocation(line: 2446, column: 23, scope: !3644)
!3647 = !DILocation(line: 2446, column: 13, scope: !3573)
!3648 = !DILocation(line: 2447, column: 13, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3644, file: !64, line: 2446, column: 41)
!3650 = !DILocation(line: 2450, column: 13, scope: !3649)
!3651 = distinct !{!3651, !3571}
!3652 = !DILocation(line: 2453, column: 13, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3573, file: !64, line: 2453, column: 13)
!3654 = !DILocation(line: 2453, column: 17, scope: !3653)
!3655 = !DILocation(line: 2453, column: 13, scope: !3573)
!3656 = !DILocation(line: 2454, column: 13, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3653, file: !64, line: 2453, column: 22)
!3658 = !DILocation(line: 2455, column: 20, scope: !3657)
!3659 = !DILocation(line: 2455, column: 13, scope: !3657)
!3660 = !DILocation(line: 2457, column: 13, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3573, file: !64, line: 2457, column: 13)
!3662 = !DILocation(line: 2457, column: 17, scope: !3661)
!3663 = !DILocation(line: 2457, column: 30, scope: !3661)
!3664 = !DILocation(line: 2457, column: 33, scope: !3665)
!3665 = !DILexicalBlockFile(scope: !3661, file: !64, discriminator: 1)
!3666 = !DILocation(line: 2457, column: 13, scope: !3665)
!3667 = !DILocation(line: 2458, column: 13, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3661, file: !64, line: 2457, column: 45)
!3669 = !DILocation(line: 2459, column: 13, scope: !3668)
!3670 = !DILocation(line: 2461, column: 13, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3573, file: !64, line: 2461, column: 13)
!3672 = !DILocation(line: 2461, column: 17, scope: !3671)
!3673 = !DILocation(line: 2461, column: 23, scope: !3671)
!3674 = !DILocation(line: 2461, column: 13, scope: !3573)
!3675 = !DILocation(line: 2462, column: 13, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3671, file: !64, line: 2461, column: 41)
!3677 = !DILocation(line: 2463, column: 13, scope: !3676)
!3678 = !DILocation(line: 2465, column: 13, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3573, file: !64, line: 2465, column: 13)
!3680 = !DILocation(line: 2465, column: 24, scope: !3679)
!3681 = !DILocation(line: 2465, column: 28, scope: !3682)
!3682 = !DILexicalBlockFile(scope: !3679, file: !64, discriminator: 1)
!3683 = !DILocation(line: 2465, column: 32, scope: !3682)
!3684 = !DILocation(line: 2465, column: 38, scope: !3682)
!3685 = !DILocation(line: 2465, column: 55, scope: !3682)
!3686 = !DILocation(line: 2466, column: 28, scope: !3679)
!3687 = !DILocation(line: 2466, column: 32, scope: !3679)
!3688 = !DILocation(line: 2466, column: 38, scope: !3679)
!3689 = !DILocation(line: 2466, column: 58, scope: !3679)
!3690 = !DILocation(line: 2467, column: 28, scope: !3679)
!3691 = !DILocation(line: 2467, column: 32, scope: !3679)
!3692 = !DILocation(line: 2467, column: 38, scope: !3679)
!3693 = !DILocation(line: 2467, column: 55, scope: !3679)
!3694 = !DILocation(line: 2468, column: 28, scope: !3679)
!3695 = !DILocation(line: 2468, column: 32, scope: !3679)
!3696 = !DILocation(line: 2468, column: 38, scope: !3679)
!3697 = !DILocation(line: 2465, column: 13, scope: !3698)
!3698 = !DILexicalBlockFile(scope: !3573, file: !64, discriminator: 2)
!3699 = !DILocation(line: 2469, column: 13, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3679, file: !64, line: 2468, column: 59)
!3701 = !DILocation(line: 2470, column: 13, scope: !3700)
!3702 = !DILocation(line: 2472, column: 19, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3573, file: !64, line: 2472, column: 13)
!3704 = !DILocation(line: 2472, column: 14, scope: !3703)
!3705 = !DILocation(line: 2472, column: 24, scope: !3703)
!3706 = !DILocation(line: 2472, column: 28, scope: !3707)
!3707 = !DILexicalBlockFile(scope: !3703, file: !64, discriminator: 1)
!3708 = !DILocation(line: 2472, column: 32, scope: !3707)
!3709 = !DILocation(line: 2472, column: 13, scope: !3707)
!3710 = !DILocation(line: 2473, column: 13, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3703, file: !64, line: 2472, column: 42)
!3712 = !DILocation(line: 2474, column: 13, scope: !3711)
!3713 = !DILocation(line: 2476, column: 18, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3573, file: !64, line: 2476, column: 13)
!3715 = !DILocation(line: 2476, column: 23, scope: !3714)
!3716 = !DILocation(line: 2476, column: 40, scope: !3714)
!3717 = !DILocation(line: 2476, column: 48, scope: !3718)
!3718 = !DILexicalBlockFile(scope: !3714, file: !64, discriminator: 1)
!3719 = !DILocation(line: 2476, column: 53, scope: !3718)
!3720 = !DILocation(line: 2476, column: 13, scope: !3718)
!3721 = !DILocation(line: 2477, column: 35, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3714, file: !64, line: 2476, column: 71)
!3723 = !DILocation(line: 2477, column: 19, scope: !3722)
!3724 = !DILocation(line: 2477, column: 17, scope: !3722)
!3725 = !DILocation(line: 2478, column: 13, scope: !3722)
!3726 = !DILocation(line: 2479, column: 20, scope: !3722)
!3727 = !DILocation(line: 2479, column: 13, scope: !3722)
!3728 = !DILocation(line: 2480, column: 25, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3714, file: !64, line: 2480, column: 20)
!3730 = !DILocation(line: 2480, column: 30, scope: !3729)
!3731 = !DILocation(line: 2480, column: 20, scope: !3714)
!3732 = !DILocation(line: 2481, column: 33, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3729, file: !64, line: 2480, column: 49)
!3734 = !DILocation(line: 2481, column: 19, scope: !3733)
!3735 = !DILocation(line: 2481, column: 17, scope: !3733)
!3736 = !DILocation(line: 2482, column: 13, scope: !3733)
!3737 = !DILocation(line: 2483, column: 20, scope: !3733)
!3738 = !DILocation(line: 2483, column: 13, scope: !3733)
!3739 = !DILocation(line: 2484, column: 25, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3729, file: !64, line: 2484, column: 20)
!3741 = !DILocation(line: 2484, column: 30, scope: !3740)
!3742 = !DILocation(line: 2484, column: 20, scope: !3729)
!3743 = !DILocation(line: 2485, column: 35, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3740, file: !64, line: 2484, column: 51)
!3745 = !DILocation(line: 2485, column: 19, scope: !3744)
!3746 = !DILocation(line: 2485, column: 17, scope: !3744)
!3747 = !DILocation(line: 2486, column: 13, scope: !3744)
!3748 = !DILocation(line: 2487, column: 20, scope: !3744)
!3749 = !DILocation(line: 2487, column: 13, scope: !3744)
!3750 = !DILocation(line: 2489, column: 9, scope: !3573)
!3751 = !DILocation(line: 2416, column: 5, scope: !3752)
!3752 = !DILexicalBlockFile(scope: !3574, file: !64, discriminator: 1)
!3753 = !DILocation(line: 2491, column: 1, scope: !3554)
!3754 = distinct !DISubprogram(name: "free_tracked_methods", scope: !64, file: !64, line: 216, type: !3755, isLocal: true, isDefinition: true, scopeLine: 217, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!3755 = !DISubroutineType(types: !3756)
!3756 = !{null, !385}
!3757 = !DILocalVariable(name: "rt", arg: 1, scope: !3754, file: !64, line: 216, type: !385)
!3758 = !DILocation(line: 216, column: 47, scope: !3754)
!3759 = !DILocalVariable(name: "i", scope: !3754, file: !64, line: 218, type: !108)
!3760 = !DILocation(line: 218, column: 9, scope: !3754)
!3761 = !DILocation(line: 220, column: 12, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3754, file: !64, line: 220, column: 5)
!3763 = !DILocation(line: 220, column: 10, scope: !3762)
!3764 = !DILocation(line: 220, column: 17, scope: !3765)
!3765 = !DILexicalBlockFile(scope: !3766, file: !64, discriminator: 1)
!3766 = distinct !DILexicalBlock(scope: !3762, file: !64, line: 220, column: 5)
!3767 = !DILocation(line: 220, column: 21, scope: !3765)
!3768 = !DILocation(line: 220, column: 25, scope: !3765)
!3769 = !DILocation(line: 220, column: 19, scope: !3765)
!3770 = !DILocation(line: 220, column: 5, scope: !3765)
!3771 = !DILocation(line: 221, column: 39, scope: !3766)
!3772 = !DILocation(line: 221, column: 19, scope: !3766)
!3773 = !DILocation(line: 221, column: 23, scope: !3766)
!3774 = !DILocation(line: 221, column: 42, scope: !3766)
!3775 = !DILocation(line: 221, column: 18, scope: !3766)
!3776 = !DILocation(line: 221, column: 9, scope: !3766)
!3777 = !DILocation(line: 220, column: 47, scope: !3778)
!3778 = !DILexicalBlockFile(scope: !3766, file: !64, discriminator: 2)
!3779 = !DILocation(line: 220, column: 5, scope: !3778)
!3780 = distinct !{!3780, !3781}
!3781 = !DILocation(line: 220, column: 5, scope: !3754)
!3782 = !DILocation(line: 222, column: 15, scope: !3754)
!3783 = !DILocation(line: 222, column: 19, scope: !3754)
!3784 = !DILocation(line: 222, column: 14, scope: !3754)
!3785 = !DILocation(line: 222, column: 5, scope: !3754)
!3786 = !DILocation(line: 223, column: 5, scope: !3754)
!3787 = !DILocation(line: 223, column: 9, scope: !3754)
!3788 = !DILocation(line: 223, column: 30, scope: !3754)
!3789 = !DILocation(line: 224, column: 5, scope: !3754)
!3790 = !DILocation(line: 224, column: 9, scope: !3754)
!3791 = !DILocation(line: 224, column: 28, scope: !3754)
!3792 = !DILocation(line: 225, column: 1, scope: !3754)
!3793 = distinct !DISubprogram(name: "inject_fake_duration_metadata", scope: !64, file: !64, line: 2529, type: !3794, isLocal: true, isDefinition: true, scopeLine: 2530, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!3794 = !DISubroutineType(types: !3795)
!3795 = !{!108, !385}
!3796 = !DILocalVariable(name: "b", arg: 1, scope: !3797, file: !1415, line: 93, type: !2957)
!3797 = distinct !DISubprogram(name: "bytestream_put_be24", scope: !1415, file: !1415, line: 93, type: !2955, isLocal: true, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!3798 = !DILocation(line: 93, column: 312, scope: !3797, inlinedAt: !3799)
!3799 = distinct !DILocation(line: 2556, column: 5, scope: !3793)
!3800 = !DILocalVariable(name: "value", arg: 2, scope: !3797, file: !1415, line: 93, type: !2958)
!3801 = !DILocation(line: 93, column: 334, scope: !3797, inlinedAt: !3799)
!3802 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !3803)
!3803 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !3804)
!3804 = distinct !DILocation(line: 2557, column: 5, scope: !3793)
!3805 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !3804)
!3806 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !3804)
!3807 = !DILocation(line: 95, column: 233, scope: !2965, inlinedAt: !3808)
!3808 = distinct !DILocation(line: 2560, column: 5, scope: !3793)
!3809 = !DILocation(line: 95, column: 255, scope: !2965, inlinedAt: !3808)
!3810 = !DILocation(line: 58, column: 98, scope: !2971, inlinedAt: !3811)
!3811 = distinct !DILocation(line: 94, column: 328, scope: !2976, inlinedAt: !3812)
!3812 = distinct !DILocation(line: 2562, column: 5, scope: !3793)
!3813 = !DILocation(line: 94, column: 258, scope: !2976, inlinedAt: !3812)
!3814 = !DILocation(line: 94, column: 280, scope: !2976, inlinedAt: !3812)
!3815 = !DILocalVariable(name: "b", arg: 1, scope: !3816, file: !1415, line: 368, type: !2957)
!3816 = distinct !DISubprogram(name: "bytestream_put_buffer", scope: !1415, file: !1415, line: 368, type: !3817, isLocal: true, isDefinition: true, scopeLine: 371, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{null, !2957, !131, !109}
!3819 = !DILocation(line: 368, column: 83, scope: !3816, inlinedAt: !3820)
!3820 = distinct !DILocation(line: 2563, column: 5, scope: !3793)
!3821 = !DILocalVariable(name: "src", arg: 2, scope: !3816, file: !1415, line: 369, type: !131)
!3822 = !DILocation(line: 369, column: 67, scope: !3816, inlinedAt: !3820)
!3823 = !DILocalVariable(name: "size", arg: 3, scope: !3816, file: !1415, line: 370, type: !109)
!3824 = !DILocation(line: 370, column: 65, scope: !3816, inlinedAt: !3820)
!3825 = !DILocation(line: 95, column: 233, scope: !2965, inlinedAt: !3826)
!3826 = distinct !DILocation(line: 2566, column: 5, scope: !3793)
!3827 = !DILocation(line: 95, column: 255, scope: !2965, inlinedAt: !3826)
!3828 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !3829)
!3829 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !3830)
!3830 = distinct !DILocation(line: 2567, column: 5, scope: !3793)
!3831 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !3830)
!3832 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !3830)
!3833 = !DILocation(line: 58, column: 98, scope: !2971, inlinedAt: !3834)
!3834 = distinct !DILocation(line: 94, column: 328, scope: !2976, inlinedAt: !3835)
!3835 = distinct !DILocation(line: 2570, column: 5, scope: !3793)
!3836 = !DILocation(line: 94, column: 258, scope: !2976, inlinedAt: !3835)
!3837 = !DILocation(line: 94, column: 280, scope: !2976, inlinedAt: !3835)
!3838 = !DILocation(line: 368, column: 83, scope: !3816, inlinedAt: !3839)
!3839 = distinct !DILocation(line: 2571, column: 5, scope: !3793)
!3840 = !DILocation(line: 369, column: 67, scope: !3816, inlinedAt: !3839)
!3841 = !DILocation(line: 370, column: 65, scope: !3816, inlinedAt: !3839)
!3842 = !DILocation(line: 95, column: 233, scope: !2965, inlinedAt: !3843)
!3843 = distinct !DILocation(line: 2572, column: 5, scope: !3793)
!3844 = !DILocation(line: 95, column: 255, scope: !2965, inlinedAt: !3843)
!3845 = !DILocalVariable(name: "f", arg: 1, scope: !3846, file: !3847, line: 70, type: !185)
!3846 = distinct !DISubprogram(name: "av_double2int", scope: !3847, file: !3847, line: 70, type: !3848, isLocal: true, isDefinition: true, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!3847 = !DIFile(filename: "./libavutil/intfloat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!3848 = !DISubroutineType(types: !3849)
!3849 = !{!137, !185}
!3850 = !DILocation(line: 70, column: 76, scope: !3846, inlinedAt: !3851)
!3851 = distinct !DILocation(line: 2573, column: 29, scope: !3793)
!3852 = !DILocalVariable(name: "v", scope: !3846, file: !3847, line: 72, type: !3853)
!3853 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "av_intfloat64", file: !3847, line: 32, size: 64, align: 64, elements: !3854)
!3854 = !{!3855, !3856}
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !3853, file: !3847, line: 33, baseType: !137, size: 64, align: 64)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3853, file: !3847, line: 34, baseType: !185, size: 64, align: 64)
!3857 = !DILocation(line: 72, column: 25, scope: !3846, inlinedAt: !3851)
!3858 = !DILocation(line: 93, column: 312, scope: !3797, inlinedAt: !3859)
!3859 = distinct !DILocation(line: 2555, column: 5, scope: !3793)
!3860 = !DILocation(line: 93, column: 334, scope: !3797, inlinedAt: !3859)
!3861 = !DILocalVariable(name: "b", arg: 1, scope: !3862, file: !1415, line: 91, type: !2957)
!3862 = distinct !DISubprogram(name: "bytestream_put_be64", scope: !1415, file: !1415, line: 91, type: !3863, isLocal: true, isDefinition: true, scopeLine: 91, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{null, !2957, !3865}
!3865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!3866 = !DILocation(line: 91, column: 254, scope: !3862, inlinedAt: !3867)
!3867 = distinct !DILocation(line: 2573, column: 5, scope: !3868)
!3868 = !DILexicalBlockFile(scope: !3793, file: !64, discriminator: 1)
!3869 = !DILocalVariable(name: "value", arg: 2, scope: !3862, file: !1415, line: 91, type: !3865)
!3870 = !DILocation(line: 91, column: 272, scope: !3862, inlinedAt: !3867)
!3871 = !DILocation(line: 58, column: 98, scope: !2971, inlinedAt: !3872)
!3872 = distinct !DILocation(line: 94, column: 328, scope: !2976, inlinedAt: !3873)
!3873 = distinct !DILocation(line: 2576, column: 5, scope: !3793)
!3874 = !DILocation(line: 94, column: 258, scope: !2976, inlinedAt: !3873)
!3875 = !DILocation(line: 94, column: 280, scope: !2976, inlinedAt: !3873)
!3876 = !DILocation(line: 95, column: 233, scope: !2965, inlinedAt: !3877)
!3877 = distinct !DILocation(line: 2577, column: 5, scope: !3793)
!3878 = !DILocation(line: 95, column: 255, scope: !2965, inlinedAt: !3877)
!3879 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !3880)
!3880 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !3881)
!3881 = distinct !DILocation(line: 2578, column: 5, scope: !3793)
!3882 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !3881)
!3883 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !3881)
!3884 = !DILocation(line: 95, column: 233, scope: !2965, inlinedAt: !3885)
!3885 = distinct !DILocation(line: 2554, column: 5, scope: !3793)
!3886 = !DILocation(line: 95, column: 255, scope: !2965, inlinedAt: !3885)
!3887 = !DILocalVariable(name: "rt", arg: 1, scope: !3793, file: !64, line: 2529, type: !385)
!3888 = !DILocation(line: 2529, column: 55, scope: !3793)
!3889 = !DILocalVariable(name: "p", scope: !3793, file: !64, line: 2535, type: !110)
!3890 = !DILocation(line: 2535, column: 14, scope: !3793)
!3891 = !DILocalVariable(name: "old_flv_data", scope: !3793, file: !64, line: 2537, type: !110)
!3892 = !DILocation(line: 2537, column: 14, scope: !3793)
!3893 = !DILocation(line: 2537, column: 29, scope: !3793)
!3894 = !DILocation(line: 2537, column: 33, scope: !3793)
!3895 = !DILocation(line: 2539, column: 36, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3793, file: !64, line: 2539, column: 9)
!3897 = !DILocation(line: 2539, column: 40, scope: !3896)
!3898 = !DILocation(line: 2539, column: 49, scope: !3896)
!3899 = !DILocation(line: 2539, column: 26, scope: !3896)
!3900 = !DILocation(line: 2539, column: 11, scope: !3896)
!3901 = !DILocation(line: 2539, column: 15, scope: !3896)
!3902 = !DILocation(line: 2539, column: 24, scope: !3896)
!3903 = !DILocation(line: 2539, column: 9, scope: !3793)
!3904 = !DILocation(line: 2540, column: 24, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3896, file: !64, line: 2539, column: 57)
!3906 = !DILocation(line: 2540, column: 9, scope: !3905)
!3907 = !DILocation(line: 2540, column: 13, scope: !3905)
!3908 = !DILocation(line: 2540, column: 22, scope: !3905)
!3909 = !DILocation(line: 2541, column: 9, scope: !3905)
!3910 = !DILocation(line: 2545, column: 12, scope: !3793)
!3911 = !DILocation(line: 2545, column: 16, scope: !3793)
!3912 = !DILocation(line: 2545, column: 26, scope: !3793)
!3913 = !DILocation(line: 2545, column: 5, scope: !3793)
!3914 = !DILocation(line: 2547, column: 12, scope: !3793)
!3915 = !DILocation(line: 2547, column: 16, scope: !3793)
!3916 = !DILocation(line: 2547, column: 25, scope: !3793)
!3917 = !DILocation(line: 2547, column: 30, scope: !3793)
!3918 = !DILocation(line: 2547, column: 36, scope: !3793)
!3919 = !DILocation(line: 2547, column: 49, scope: !3793)
!3920 = !DILocation(line: 2547, column: 55, scope: !3793)
!3921 = !DILocation(line: 2547, column: 59, scope: !3793)
!3922 = !DILocation(line: 2547, column: 68, scope: !3793)
!3923 = !DILocation(line: 2547, column: 5, scope: !3793)
!3924 = !DILocation(line: 2549, column: 5, scope: !3793)
!3925 = !DILocation(line: 2549, column: 9, scope: !3793)
!3926 = !DILocation(line: 2549, column: 18, scope: !3793)
!3927 = !DILocation(line: 2551, column: 14, scope: !3793)
!3928 = !DILocation(line: 2551, column: 5, scope: !3793)
!3929 = !DILocation(line: 2553, column: 9, scope: !3793)
!3930 = !DILocation(line: 2553, column: 13, scope: !3793)
!3931 = !DILocation(line: 2553, column: 22, scope: !3793)
!3932 = !DILocation(line: 2553, column: 7, scope: !3793)
!3933 = !DILocation(line: 2554, column: 5, scope: !3793)
!3934 = !DILocation(line: 95, column: 292, scope: !3316, inlinedAt: !3885)
!3935 = !DILocation(line: 95, column: 291, scope: !3316, inlinedAt: !3885)
!3936 = !DILocation(line: 95, column: 282, scope: !3316, inlinedAt: !3885)
!3937 = !DILocation(line: 95, column: 281, scope: !3316, inlinedAt: !3885)
!3938 = !DILocation(line: 95, column: 289, scope: !3316, inlinedAt: !3885)
!3939 = !DILocation(line: 95, column: 314, scope: !3323, inlinedAt: !3885)
!3940 = !DILocation(line: 95, column: 317, scope: !3323, inlinedAt: !3885)
!3941 = !DILocation(line: 2555, column: 5, scope: !3793)
!3942 = !DILocation(line: 93, column: 371, scope: !3943, inlinedAt: !3859)
!3943 = !DILexicalBlockFile(scope: !3944, file: !1415, discriminator: 1)
!3944 = distinct !DILexicalBlock(scope: !3797, file: !1415, line: 93, column: 346)
!3945 = !DILocation(line: 93, column: 370, scope: !3943, inlinedAt: !3859)
!3946 = !DILocation(line: 93, column: 361, scope: !3943, inlinedAt: !3859)
!3947 = !DILocation(line: 93, column: 360, scope: !3943, inlinedAt: !3859)
!3948 = !DILocation(line: 93, column: 348, scope: !3943, inlinedAt: !3859)
!3949 = !DILocation(line: 93, column: 368, scope: !3943, inlinedAt: !3859)
!3950 = !DILocation(line: 93, column: 402, scope: !3943, inlinedAt: !3859)
!3951 = !DILocation(line: 93, column: 408, scope: !3943, inlinedAt: !3859)
!3952 = !DILocation(line: 93, column: 401, scope: !3943, inlinedAt: !3859)
!3953 = !DILocation(line: 93, column: 392, scope: !3943, inlinedAt: !3859)
!3954 = !DILocation(line: 93, column: 391, scope: !3943, inlinedAt: !3859)
!3955 = !DILocation(line: 93, column: 379, scope: !3943, inlinedAt: !3859)
!3956 = !DILocation(line: 93, column: 399, scope: !3943, inlinedAt: !3859)
!3957 = !DILocation(line: 93, column: 436, scope: !3943, inlinedAt: !3859)
!3958 = !DILocation(line: 93, column: 442, scope: !3943, inlinedAt: !3859)
!3959 = !DILocation(line: 93, column: 435, scope: !3943, inlinedAt: !3859)
!3960 = !DILocation(line: 93, column: 426, scope: !3943, inlinedAt: !3859)
!3961 = !DILocation(line: 93, column: 425, scope: !3943, inlinedAt: !3859)
!3962 = !DILocation(line: 93, column: 433, scope: !3943, inlinedAt: !3859)
!3963 = !DILocation(line: 93, column: 462, scope: !3964, inlinedAt: !3859)
!3964 = !DILexicalBlockFile(scope: !3797, file: !1415, discriminator: 2)
!3965 = !DILocation(line: 93, column: 465, scope: !3964, inlinedAt: !3859)
!3966 = !DILocation(line: 2556, column: 5, scope: !3793)
!3967 = !DILocation(line: 93, column: 371, scope: !3943, inlinedAt: !3799)
!3968 = !DILocation(line: 93, column: 370, scope: !3943, inlinedAt: !3799)
!3969 = !DILocation(line: 93, column: 361, scope: !3943, inlinedAt: !3799)
!3970 = !DILocation(line: 93, column: 360, scope: !3943, inlinedAt: !3799)
!3971 = !DILocation(line: 93, column: 348, scope: !3943, inlinedAt: !3799)
!3972 = !DILocation(line: 93, column: 368, scope: !3943, inlinedAt: !3799)
!3973 = !DILocation(line: 93, column: 402, scope: !3943, inlinedAt: !3799)
!3974 = !DILocation(line: 93, column: 408, scope: !3943, inlinedAt: !3799)
!3975 = !DILocation(line: 93, column: 401, scope: !3943, inlinedAt: !3799)
!3976 = !DILocation(line: 93, column: 392, scope: !3943, inlinedAt: !3799)
!3977 = !DILocation(line: 93, column: 391, scope: !3943, inlinedAt: !3799)
!3978 = !DILocation(line: 93, column: 379, scope: !3943, inlinedAt: !3799)
!3979 = !DILocation(line: 93, column: 399, scope: !3943, inlinedAt: !3799)
!3980 = !DILocation(line: 93, column: 436, scope: !3943, inlinedAt: !3799)
!3981 = !DILocation(line: 93, column: 442, scope: !3943, inlinedAt: !3799)
!3982 = !DILocation(line: 93, column: 435, scope: !3943, inlinedAt: !3799)
!3983 = !DILocation(line: 93, column: 426, scope: !3943, inlinedAt: !3799)
!3984 = !DILocation(line: 93, column: 425, scope: !3943, inlinedAt: !3799)
!3985 = !DILocation(line: 93, column: 433, scope: !3943, inlinedAt: !3799)
!3986 = !DILocation(line: 93, column: 462, scope: !3964, inlinedAt: !3799)
!3987 = !DILocation(line: 93, column: 465, scope: !3964, inlinedAt: !3799)
!3988 = !DILocation(line: 2557, column: 5, scope: !3793)
!3989 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !3804)
!3990 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !3804)
!3991 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !3803)
!3992 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !3803)
!3993 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !3803)
!3994 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !3803)
!3995 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !3803)
!3996 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !3803)
!3997 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !3803)
!3998 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !3803)
!3999 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !3803)
!4000 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !3803)
!4001 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !3803)
!4002 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !3803)
!4003 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !3803)
!4004 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !3803)
!4005 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !3803)
!4006 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !3803)
!4007 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !3803)
!4008 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !3803)
!4009 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !3804)
!4010 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !3804)
!4011 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !3804)
!4012 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !3804)
!4013 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !3804)
!4014 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !3804)
!4015 = !DILocation(line: 2560, column: 5, scope: !3793)
!4016 = !DILocation(line: 95, column: 292, scope: !3316, inlinedAt: !3808)
!4017 = !DILocation(line: 95, column: 291, scope: !3316, inlinedAt: !3808)
!4018 = !DILocation(line: 95, column: 282, scope: !3316, inlinedAt: !3808)
!4019 = !DILocation(line: 95, column: 281, scope: !3316, inlinedAt: !3808)
!4020 = !DILocation(line: 95, column: 289, scope: !3316, inlinedAt: !3808)
!4021 = !DILocation(line: 95, column: 314, scope: !3323, inlinedAt: !3808)
!4022 = !DILocation(line: 95, column: 317, scope: !3323, inlinedAt: !3808)
!4023 = !DILocation(line: 2562, column: 5, scope: !3793)
!4024 = !DILocation(line: 94, column: 339, scope: !2976, inlinedAt: !3812)
!4025 = !DILocation(line: 94, column: 328, scope: !2976, inlinedAt: !3812)
!4026 = !DILocation(line: 60, column: 9, scope: !2971, inlinedAt: !3811)
!4027 = !DILocation(line: 60, column: 10, scope: !2971, inlinedAt: !3811)
!4028 = !DILocation(line: 60, column: 18, scope: !2971, inlinedAt: !3811)
!4029 = !DILocation(line: 60, column: 19, scope: !2971, inlinedAt: !3811)
!4030 = !DILocation(line: 60, column: 15, scope: !2971, inlinedAt: !3811)
!4031 = !DILocation(line: 60, column: 8, scope: !2971, inlinedAt: !3811)
!4032 = !DILocation(line: 60, column: 6, scope: !2971, inlinedAt: !3811)
!4033 = !DILocation(line: 61, column: 12, scope: !2971, inlinedAt: !3811)
!4034 = !DILocation(line: 94, column: 317, scope: !2976, inlinedAt: !3812)
!4035 = !DILocation(line: 94, column: 316, scope: !2976, inlinedAt: !3812)
!4036 = !DILocation(line: 94, column: 322, scope: !2976, inlinedAt: !3812)
!4037 = !DILocation(line: 94, column: 325, scope: !2976, inlinedAt: !3812)
!4038 = !DILocation(line: 94, column: 351, scope: !2976, inlinedAt: !3812)
!4039 = !DILocation(line: 94, column: 354, scope: !2976, inlinedAt: !3812)
!4040 = !DILocation(line: 2563, column: 5, scope: !3793)
!4041 = !DILocation(line: 372, column: 13, scope: !3816, inlinedAt: !3820)
!4042 = !DILocation(line: 372, column: 12, scope: !3816, inlinedAt: !3820)
!4043 = !DILocation(line: 372, column: 16, scope: !3816, inlinedAt: !3820)
!4044 = !DILocation(line: 372, column: 21, scope: !3816, inlinedAt: !3820)
!4045 = !DILocation(line: 372, column: 5, scope: !3816, inlinedAt: !3820)
!4046 = !DILocation(line: 373, column: 13, scope: !3816, inlinedAt: !3820)
!4047 = !DILocation(line: 373, column: 7, scope: !3816, inlinedAt: !3820)
!4048 = !DILocation(line: 373, column: 10, scope: !3816, inlinedAt: !3820)
!4049 = !DILocation(line: 2566, column: 5, scope: !3793)
!4050 = !DILocation(line: 95, column: 292, scope: !3316, inlinedAt: !3826)
!4051 = !DILocation(line: 95, column: 291, scope: !3316, inlinedAt: !3826)
!4052 = !DILocation(line: 95, column: 282, scope: !3316, inlinedAt: !3826)
!4053 = !DILocation(line: 95, column: 281, scope: !3316, inlinedAt: !3826)
!4054 = !DILocation(line: 95, column: 289, scope: !3316, inlinedAt: !3826)
!4055 = !DILocation(line: 95, column: 314, scope: !3323, inlinedAt: !3826)
!4056 = !DILocation(line: 95, column: 317, scope: !3323, inlinedAt: !3826)
!4057 = !DILocation(line: 2567, column: 5, scope: !3793)
!4058 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !3830)
!4059 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !3830)
!4060 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !3829)
!4061 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !3829)
!4062 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !3829)
!4063 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !3829)
!4064 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !3829)
!4065 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !3829)
!4066 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !3829)
!4067 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !3829)
!4068 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !3829)
!4069 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !3829)
!4070 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !3829)
!4071 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !3829)
!4072 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !3829)
!4073 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !3829)
!4074 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !3829)
!4075 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !3829)
!4076 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !3829)
!4077 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !3829)
!4078 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !3830)
!4079 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !3830)
!4080 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !3830)
!4081 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !3830)
!4082 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !3830)
!4083 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !3830)
!4084 = !DILocation(line: 2570, column: 5, scope: !3793)
!4085 = !DILocation(line: 94, column: 339, scope: !2976, inlinedAt: !3835)
!4086 = !DILocation(line: 94, column: 328, scope: !2976, inlinedAt: !3835)
!4087 = !DILocation(line: 60, column: 9, scope: !2971, inlinedAt: !3834)
!4088 = !DILocation(line: 60, column: 10, scope: !2971, inlinedAt: !3834)
!4089 = !DILocation(line: 60, column: 18, scope: !2971, inlinedAt: !3834)
!4090 = !DILocation(line: 60, column: 19, scope: !2971, inlinedAt: !3834)
!4091 = !DILocation(line: 60, column: 15, scope: !2971, inlinedAt: !3834)
!4092 = !DILocation(line: 60, column: 8, scope: !2971, inlinedAt: !3834)
!4093 = !DILocation(line: 60, column: 6, scope: !2971, inlinedAt: !3834)
!4094 = !DILocation(line: 61, column: 12, scope: !2971, inlinedAt: !3834)
!4095 = !DILocation(line: 94, column: 317, scope: !2976, inlinedAt: !3835)
!4096 = !DILocation(line: 94, column: 316, scope: !2976, inlinedAt: !3835)
!4097 = !DILocation(line: 94, column: 322, scope: !2976, inlinedAt: !3835)
!4098 = !DILocation(line: 94, column: 325, scope: !2976, inlinedAt: !3835)
!4099 = !DILocation(line: 94, column: 351, scope: !2976, inlinedAt: !3835)
!4100 = !DILocation(line: 94, column: 354, scope: !2976, inlinedAt: !3835)
!4101 = !DILocation(line: 2571, column: 5, scope: !3793)
!4102 = !DILocation(line: 372, column: 13, scope: !3816, inlinedAt: !3839)
!4103 = !DILocation(line: 372, column: 12, scope: !3816, inlinedAt: !3839)
!4104 = !DILocation(line: 372, column: 16, scope: !3816, inlinedAt: !3839)
!4105 = !DILocation(line: 372, column: 21, scope: !3816, inlinedAt: !3839)
!4106 = !DILocation(line: 372, column: 5, scope: !3816, inlinedAt: !3839)
!4107 = !DILocation(line: 373, column: 13, scope: !3816, inlinedAt: !3839)
!4108 = !DILocation(line: 373, column: 7, scope: !3816, inlinedAt: !3839)
!4109 = !DILocation(line: 373, column: 10, scope: !3816, inlinedAt: !3839)
!4110 = !DILocation(line: 2572, column: 5, scope: !3793)
!4111 = !DILocation(line: 95, column: 292, scope: !3316, inlinedAt: !3843)
!4112 = !DILocation(line: 95, column: 291, scope: !3316, inlinedAt: !3843)
!4113 = !DILocation(line: 95, column: 282, scope: !3316, inlinedAt: !3843)
!4114 = !DILocation(line: 95, column: 281, scope: !3316, inlinedAt: !3843)
!4115 = !DILocation(line: 95, column: 289, scope: !3316, inlinedAt: !3843)
!4116 = !DILocation(line: 95, column: 314, scope: !3323, inlinedAt: !3843)
!4117 = !DILocation(line: 95, column: 317, scope: !3323, inlinedAt: !3843)
!4118 = !DILocation(line: 2573, column: 43, scope: !3793)
!4119 = !DILocation(line: 2573, column: 47, scope: !3793)
!4120 = !DILocation(line: 2573, column: 29, scope: !3793)
!4121 = !DILocation(line: 73, column: 11, scope: !3846, inlinedAt: !3851)
!4122 = !DILocation(line: 73, column: 7, scope: !3846, inlinedAt: !3851)
!4123 = !DILocation(line: 73, column: 9, scope: !3846, inlinedAt: !3851)
!4124 = !DILocation(line: 74, column: 14, scope: !3846, inlinedAt: !3851)
!4125 = !DILocation(line: 2573, column: 5, scope: !3868)
!4126 = !DILocation(line: 91, column: 331, scope: !3862, inlinedAt: !3867)
!4127 = !DILocation(line: 91, column: 320, scope: !3862, inlinedAt: !3867)
!4128 = !DILocation(line: 91, column: 309, scope: !3862, inlinedAt: !3867)
!4129 = !DILocation(line: 91, column: 308, scope: !3862, inlinedAt: !3867)
!4130 = !DILocation(line: 91, column: 314, scope: !3862, inlinedAt: !3867)
!4131 = !DILocation(line: 91, column: 317, scope: !3862, inlinedAt: !3867)
!4132 = !DILocation(line: 91, column: 343, scope: !3862, inlinedAt: !3867)
!4133 = !DILocation(line: 91, column: 346, scope: !3862, inlinedAt: !3867)
!4134 = !DILocation(line: 2576, column: 5, scope: !3793)
!4135 = !DILocation(line: 94, column: 339, scope: !2976, inlinedAt: !3873)
!4136 = !DILocation(line: 94, column: 328, scope: !2976, inlinedAt: !3873)
!4137 = !DILocation(line: 60, column: 9, scope: !2971, inlinedAt: !3872)
!4138 = !DILocation(line: 60, column: 10, scope: !2971, inlinedAt: !3872)
!4139 = !DILocation(line: 60, column: 18, scope: !2971, inlinedAt: !3872)
!4140 = !DILocation(line: 60, column: 19, scope: !2971, inlinedAt: !3872)
!4141 = !DILocation(line: 60, column: 15, scope: !2971, inlinedAt: !3872)
!4142 = !DILocation(line: 60, column: 8, scope: !2971, inlinedAt: !3872)
!4143 = !DILocation(line: 60, column: 6, scope: !2971, inlinedAt: !3872)
!4144 = !DILocation(line: 61, column: 12, scope: !2971, inlinedAt: !3872)
!4145 = !DILocation(line: 94, column: 317, scope: !2976, inlinedAt: !3873)
!4146 = !DILocation(line: 94, column: 316, scope: !2976, inlinedAt: !3873)
!4147 = !DILocation(line: 94, column: 322, scope: !2976, inlinedAt: !3873)
!4148 = !DILocation(line: 94, column: 325, scope: !2976, inlinedAt: !3873)
!4149 = !DILocation(line: 94, column: 351, scope: !2976, inlinedAt: !3873)
!4150 = !DILocation(line: 94, column: 354, scope: !2976, inlinedAt: !3873)
!4151 = !DILocation(line: 2577, column: 5, scope: !3793)
!4152 = !DILocation(line: 95, column: 292, scope: !3316, inlinedAt: !3877)
!4153 = !DILocation(line: 95, column: 291, scope: !3316, inlinedAt: !3877)
!4154 = !DILocation(line: 95, column: 282, scope: !3316, inlinedAt: !3877)
!4155 = !DILocation(line: 95, column: 281, scope: !3316, inlinedAt: !3877)
!4156 = !DILocation(line: 95, column: 289, scope: !3316, inlinedAt: !3877)
!4157 = !DILocation(line: 95, column: 314, scope: !3323, inlinedAt: !3877)
!4158 = !DILocation(line: 95, column: 317, scope: !3323, inlinedAt: !3877)
!4159 = !DILocation(line: 2578, column: 5, scope: !3793)
!4160 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !3881)
!4161 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !3881)
!4162 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !3880)
!4163 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !3880)
!4164 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !3880)
!4165 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !3880)
!4166 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !3880)
!4167 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !3880)
!4168 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !3880)
!4169 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !3880)
!4170 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !3880)
!4171 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !3880)
!4172 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !3880)
!4173 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !3880)
!4174 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !3880)
!4175 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !3880)
!4176 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !3880)
!4177 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !3880)
!4178 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !3880)
!4179 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !3880)
!4180 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !3881)
!4181 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !3881)
!4182 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !3881)
!4183 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !3881)
!4184 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !3881)
!4185 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !3881)
!4186 = !DILocation(line: 2580, column: 5, scope: !3793)
!4187 = !DILocation(line: 2581, column: 1, scope: !3793)
!4188 = distinct !DISubprogram(name: "rtmp_uncompress_swfplayer", scope: !64, file: !64, line: 1067, type: !4189, isLocal: true, isDefinition: true, scopeLine: 1069, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!108, !110, !182, !2957, !4191}
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64, align: 64)
!4192 = !DILocalVariable(name: "in_data", arg: 1, scope: !4188, file: !64, line: 1067, type: !110)
!4193 = !DILocation(line: 1067, column: 47, scope: !4188)
!4194 = !DILocalVariable(name: "in_size", arg: 2, scope: !4188, file: !64, line: 1067, type: !182)
!4195 = !DILocation(line: 1067, column: 64, scope: !4188)
!4196 = !DILocalVariable(name: "out_data", arg: 3, scope: !4188, file: !64, line: 1068, type: !2957)
!4197 = !DILocation(line: 1068, column: 48, scope: !4188)
!4198 = !DILocalVariable(name: "out_size", arg: 4, scope: !4188, file: !64, line: 1068, type: !4191)
!4199 = !DILocation(line: 1068, column: 67, scope: !4188)
!4200 = !DILocalVariable(name: "zs", scope: !4188, file: !64, line: 1070, type: !4201)
!4201 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_stream", file: !4202, line: 106, baseType: !4203)
!4202 = !DIFile(filename: "/usr/local/include/zlib.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!4203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_stream_s", file: !4202, line: 86, size: 896, align: 64, elements: !4204)
!4204 = !{!4205, !4211, !4213, !4215, !4217, !4218, !4219, !4220, !4223, !4229, !4234, !4235, !4236, !4237}
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "next_in", scope: !4203, file: !4202, line: 87, baseType: !4206, size: 64, align: 64)
!4206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4207, size: 64, align: 64)
!4207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4208)
!4208 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bytef", file: !4209, line: 400, baseType: !4210)
!4209 = !DIFile(filename: "/usr/local/include/zconf.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!4210 = !DIDerivedType(tag: DW_TAG_typedef, name: "Byte", file: !4209, line: 391, baseType: !113)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "avail_in", scope: !4203, file: !4202, line: 88, baseType: !4212, size: 32, align: 32, offset: 64)
!4212 = !DIDerivedType(tag: DW_TAG_typedef, name: "uInt", file: !4209, line: 393, baseType: !109)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "total_in", scope: !4203, file: !4202, line: 89, baseType: !4214, size: 64, align: 64, offset: 128)
!4214 = !DIDerivedType(tag: DW_TAG_typedef, name: "uLong", file: !4209, line: 394, baseType: !138)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "next_out", scope: !4203, file: !4202, line: 91, baseType: !4216, size: 64, align: 64, offset: 192)
!4216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4208, size: 64, align: 64)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "avail_out", scope: !4203, file: !4202, line: 92, baseType: !4212, size: 32, align: 32, offset: 256)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "total_out", scope: !4203, file: !4202, line: 93, baseType: !4214, size: 64, align: 64, offset: 320)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !4203, file: !4202, line: 95, baseType: !147, size: 64, align: 64, offset: 384)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4203, file: !4202, line: 96, baseType: !4221, size: 64, align: 64, offset: 448)
!4221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4222, size: 64, align: 64)
!4222 = !DICompositeType(tag: DW_TAG_structure_type, name: "internal_state", file: !4202, line: 84, flags: DIFlagFwdDecl)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "zalloc", scope: !4203, file: !4202, line: 98, baseType: !4224, size: 64, align: 64, offset: 512)
!4224 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_func", file: !4202, line: 81, baseType: !4225)
!4225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4226, size: 64, align: 64)
!4226 = !DISubroutineType(types: !4227)
!4227 = !{!4228, !4228, !4212, !4212}
!4228 = !DIDerivedType(tag: DW_TAG_typedef, name: "voidpf", file: !4209, line: 409, baseType: !122)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "zfree", scope: !4203, file: !4202, line: 99, baseType: !4230, size: 64, align: 64, offset: 576)
!4230 = !DIDerivedType(tag: DW_TAG_typedef, name: "free_func", file: !4202, line: 82, baseType: !4231)
!4231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4232, size: 64, align: 64)
!4232 = !DISubroutineType(types: !4233)
!4233 = !{null, !4228, !4228}
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !4203, file: !4202, line: 100, baseType: !4228, size: 64, align: 64, offset: 640)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !4203, file: !4202, line: 102, baseType: !108, size: 32, align: 32, offset: 704)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "adler", scope: !4203, file: !4202, line: 104, baseType: !4214, size: 64, align: 64, offset: 768)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4203, file: !4202, line: 105, baseType: !4214, size: 64, align: 64, offset: 832)
!4238 = !DILocation(line: 1070, column: 14, scope: !4188)
!4239 = !DILocalVariable(name: "ptr", scope: !4188, file: !64, line: 1071, type: !122)
!4240 = !DILocation(line: 1071, column: 11, scope: !4188)
!4241 = !DILocalVariable(name: "size", scope: !4188, file: !64, line: 1072, type: !108)
!4242 = !DILocation(line: 1072, column: 9, scope: !4188)
!4243 = !DILocalVariable(name: "ret", scope: !4188, file: !64, line: 1073, type: !108)
!4244 = !DILocation(line: 1073, column: 9, scope: !4188)
!4245 = !DILocation(line: 1075, column: 19, scope: !4188)
!4246 = !DILocation(line: 1075, column: 8, scope: !4188)
!4247 = !DILocation(line: 1075, column: 17, scope: !4188)
!4248 = !DILocation(line: 1076, column: 18, scope: !4188)
!4249 = !DILocation(line: 1076, column: 8, scope: !4188)
!4250 = !DILocation(line: 1076, column: 16, scope: !4188)
!4251 = !DILocation(line: 1077, column: 10, scope: !4188)
!4252 = !DILocation(line: 1077, column: 9, scope: !4188)
!4253 = !DILocation(line: 1078, column: 9, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4188, file: !64, line: 1078, column: 9)
!4255 = !DILocation(line: 1078, column: 13, scope: !4254)
!4256 = !DILocation(line: 1078, column: 9, scope: !4188)
!4257 = !DILocation(line: 1079, column: 9, scope: !4254)
!4258 = !DILocation(line: 1081, column: 5, scope: !4188)
!4259 = distinct !{!4259, !4258}
!4260 = !DILocalVariable(name: "tmp_buf", scope: !4261, file: !64, line: 1082, type: !4262)
!4261 = distinct !DILexicalBlock(scope: !4188, file: !64, line: 1081, column: 8)
!4262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 131072, align: 8, elements: !4263)
!4263 = !{!4264}
!4264 = !DISubrange(count: 16384)
!4265 = !DILocation(line: 1082, column: 17, scope: !4261)
!4266 = !DILocation(line: 1084, column: 12, scope: !4261)
!4267 = !DILocation(line: 1084, column: 22, scope: !4261)
!4268 = !DILocation(line: 1085, column: 23, scope: !4261)
!4269 = !DILocation(line: 1085, column: 12, scope: !4261)
!4270 = !DILocation(line: 1085, column: 21, scope: !4261)
!4271 = !DILocation(line: 1087, column: 15, scope: !4261)
!4272 = !DILocation(line: 1087, column: 13, scope: !4261)
!4273 = !DILocation(line: 1088, column: 13, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4261, file: !64, line: 1088, column: 13)
!4275 = !DILocation(line: 1088, column: 17, scope: !4274)
!4276 = !DILocation(line: 1088, column: 24, scope: !4274)
!4277 = !DILocation(line: 1088, column: 27, scope: !4278)
!4278 = !DILexicalBlockFile(scope: !4274, file: !64, discriminator: 1)
!4279 = !DILocation(line: 1088, column: 31, scope: !4278)
!4280 = !DILocation(line: 1088, column: 13, scope: !4278)
!4281 = !DILocation(line: 1089, column: 17, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4274, file: !64, line: 1088, column: 48)
!4283 = !DILocation(line: 1090, column: 13, scope: !4282)
!4284 = !DILocation(line: 1093, column: 37, scope: !4261)
!4285 = !DILocation(line: 1093, column: 34, scope: !4261)
!4286 = !DILocation(line: 1093, column: 32, scope: !4261)
!4287 = !DILocation(line: 1093, column: 16, scope: !4261)
!4288 = !DILocation(line: 1093, column: 14, scope: !4261)
!4289 = !DILocation(line: 1094, column: 33, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4261, file: !64, line: 1094, column: 13)
!4291 = !DILocation(line: 1094, column: 32, scope: !4290)
!4292 = !DILocation(line: 1094, column: 44, scope: !4290)
!4293 = !DILocation(line: 1094, column: 43, scope: !4290)
!4294 = !DILocation(line: 1094, column: 55, scope: !4290)
!4295 = !DILocation(line: 1094, column: 53, scope: !4290)
!4296 = !DILocation(line: 1094, column: 21, scope: !4290)
!4297 = !DILocation(line: 1094, column: 19, scope: !4290)
!4298 = !DILocation(line: 1094, column: 13, scope: !4261)
!4299 = !DILocation(line: 1095, column: 17, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4290, file: !64, line: 1094, column: 63)
!4301 = !DILocation(line: 1096, column: 13, scope: !4300)
!4302 = !DILocation(line: 1098, column: 21, scope: !4261)
!4303 = !DILocation(line: 1098, column: 10, scope: !4261)
!4304 = !DILocation(line: 1098, column: 19, scope: !4261)
!4305 = !DILocation(line: 1100, column: 17, scope: !4261)
!4306 = !DILocation(line: 1100, column: 16, scope: !4261)
!4307 = !DILocation(line: 1100, column: 29, scope: !4261)
!4308 = !DILocation(line: 1100, column: 28, scope: !4261)
!4309 = !DILocation(line: 1100, column: 26, scope: !4261)
!4310 = !DILocation(line: 1100, column: 9, scope: !4261)
!4311 = !DILocation(line: 1100, column: 48, scope: !4261)
!4312 = !DILocation(line: 1101, column: 22, scope: !4261)
!4313 = !DILocation(line: 1101, column: 10, scope: !4261)
!4314 = !DILocation(line: 1101, column: 19, scope: !4261)
!4315 = !DILocation(line: 1102, column: 5, scope: !4261)
!4316 = !DILocation(line: 1102, column: 17, scope: !4317)
!4317 = !DILexicalBlockFile(scope: !4188, file: !64, discriminator: 1)
!4318 = !DILocation(line: 1102, column: 27, scope: !4317)
!4319 = !DILocation(line: 1102, column: 5, scope: !4317)
!4320 = !DILocation(line: 1102, column: 5, scope: !4321)
!4321 = !DILexicalBlockFile(scope: !4261, file: !64, discriminator: 2)
!4322 = !DILocation(line: 1105, column: 5, scope: !4188)
!4323 = !DILocation(line: 1106, column: 12, scope: !4188)
!4324 = !DILocation(line: 1106, column: 5, scope: !4188)
!4325 = !DILocation(line: 1107, column: 1, scope: !4188)
!4326 = distinct !DISubprogram(name: "av_lfg_get", scope: !2335, file: !2335, line: 47, type: !4327, isLocal: true, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{!109, !4329}
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64, align: 64)
!4330 = !DILocalVariable(name: "c", arg: 1, scope: !4326, file: !2335, line: 47, type: !4329)
!4331 = !DILocation(line: 47, column: 46, scope: !4326)
!4332 = !DILocation(line: 48, column: 41, scope: !4326)
!4333 = !DILocation(line: 48, column: 44, scope: !4326)
!4334 = !DILocation(line: 48, column: 49, scope: !4326)
!4335 = !DILocation(line: 48, column: 54, scope: !4326)
!4336 = !DILocation(line: 48, column: 31, scope: !4326)
!4337 = !DILocation(line: 48, column: 34, scope: !4326)
!4338 = !DILocation(line: 48, column: 72, scope: !4326)
!4339 = !DILocation(line: 48, column: 75, scope: !4326)
!4340 = !DILocation(line: 48, column: 80, scope: !4326)
!4341 = !DILocation(line: 48, column: 85, scope: !4326)
!4342 = !DILocation(line: 48, column: 62, scope: !4326)
!4343 = !DILocation(line: 48, column: 65, scope: !4326)
!4344 = !DILocation(line: 48, column: 60, scope: !4326)
!4345 = !DILocation(line: 48, column: 14, scope: !4326)
!4346 = !DILocation(line: 48, column: 17, scope: !4326)
!4347 = !DILocation(line: 48, column: 23, scope: !4326)
!4348 = !DILocation(line: 48, column: 5, scope: !4326)
!4349 = !DILocation(line: 48, column: 8, scope: !4326)
!4350 = !DILocation(line: 48, column: 29, scope: !4326)
!4351 = !DILocation(line: 49, column: 21, scope: !4326)
!4352 = !DILocation(line: 49, column: 24, scope: !4326)
!4353 = !DILocation(line: 49, column: 29, scope: !4326)
!4354 = !DILocation(line: 49, column: 32, scope: !4326)
!4355 = !DILocation(line: 49, column: 12, scope: !4326)
!4356 = !DILocation(line: 49, column: 15, scope: !4326)
!4357 = !DILocation(line: 49, column: 5, scope: !4326)
!4358 = distinct !DISubprogram(name: "rtmp_handshake_imprint_with_digest", scope: !64, file: !64, line: 999, type: !4359, isLocal: true, isDefinition: true, scopeLine: 1000, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{!108, !110, !108}
!4361 = !DILocalVariable(name: "buf", arg: 1, scope: !4358, file: !64, line: 999, type: !110)
!4362 = !DILocation(line: 999, column: 56, scope: !4358)
!4363 = !DILocalVariable(name: "encrypted", arg: 2, scope: !4358, file: !64, line: 999, type: !108)
!4364 = !DILocation(line: 999, column: 65, scope: !4358)
!4365 = !DILocalVariable(name: "ret", scope: !4358, file: !64, line: 1001, type: !108)
!4366 = !DILocation(line: 1001, column: 9, scope: !4358)
!4367 = !DILocalVariable(name: "digest_pos", scope: !4358, file: !64, line: 1001, type: !108)
!4368 = !DILocation(line: 1001, column: 14, scope: !4358)
!4369 = !DILocation(line: 1003, column: 9, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4358, file: !64, line: 1003, column: 9)
!4371 = !DILocation(line: 1003, column: 9, scope: !4358)
!4372 = !DILocation(line: 1004, column: 46, scope: !4370)
!4373 = !DILocation(line: 1004, column: 22, scope: !4370)
!4374 = !DILocation(line: 1004, column: 20, scope: !4370)
!4375 = !DILocation(line: 1004, column: 9, scope: !4370)
!4376 = !DILocation(line: 1006, column: 46, scope: !4370)
!4377 = !DILocation(line: 1006, column: 22, scope: !4370)
!4378 = !DILocation(line: 1006, column: 20, scope: !4370)
!4379 = !DILocation(line: 1008, column: 31, scope: !4358)
!4380 = !DILocation(line: 1008, column: 42, scope: !4358)
!4381 = !DILocation(line: 1010, column: 31, scope: !4358)
!4382 = !DILocation(line: 1010, column: 37, scope: !4358)
!4383 = !DILocation(line: 1010, column: 35, scope: !4358)
!4384 = !DILocation(line: 1008, column: 11, scope: !4358)
!4385 = !DILocation(line: 1008, column: 9, scope: !4358)
!4386 = !DILocation(line: 1011, column: 9, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4358, file: !64, line: 1011, column: 9)
!4388 = !DILocation(line: 1011, column: 13, scope: !4387)
!4389 = !DILocation(line: 1011, column: 9, scope: !4358)
!4390 = !DILocation(line: 1012, column: 16, scope: !4387)
!4391 = !DILocation(line: 1012, column: 9, scope: !4387)
!4392 = !DILocation(line: 1014, column: 12, scope: !4358)
!4393 = !DILocation(line: 1014, column: 5, scope: !4358)
!4394 = !DILocation(line: 1015, column: 1, scope: !4358)
!4395 = distinct !DISubprogram(name: "rtmp_validate_digest", scope: !64, file: !64, line: 1024, type: !4359, isLocal: true, isDefinition: true, scopeLine: 1025, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!4396 = !DILocalVariable(name: "buf", arg: 1, scope: !4395, file: !64, line: 1024, type: !110)
!4397 = !DILocation(line: 1024, column: 42, scope: !4395)
!4398 = !DILocalVariable(name: "off", arg: 2, scope: !4395, file: !64, line: 1024, type: !108)
!4399 = !DILocation(line: 1024, column: 51, scope: !4395)
!4400 = !DILocalVariable(name: "digest", scope: !4395, file: !64, line: 1026, type: !2361)
!4401 = !DILocation(line: 1026, column: 13, scope: !4395)
!4402 = !DILocalVariable(name: "ret", scope: !4395, file: !64, line: 1027, type: !108)
!4403 = !DILocation(line: 1027, column: 9, scope: !4395)
!4404 = !DILocalVariable(name: "digest_pos", scope: !4395, file: !64, line: 1027, type: !108)
!4405 = !DILocation(line: 1027, column: 14, scope: !4395)
!4406 = !DILocation(line: 1029, column: 42, scope: !4395)
!4407 = !DILocation(line: 1029, column: 47, scope: !4395)
!4408 = !DILocation(line: 1029, column: 57, scope: !4395)
!4409 = !DILocation(line: 1029, column: 61, scope: !4395)
!4410 = !DILocation(line: 1029, column: 18, scope: !4395)
!4411 = !DILocation(line: 1029, column: 16, scope: !4395)
!4412 = !DILocation(line: 1031, column: 31, scope: !4395)
!4413 = !DILocation(line: 1031, column: 42, scope: !4395)
!4414 = !DILocation(line: 1033, column: 31, scope: !4395)
!4415 = !DILocation(line: 1031, column: 11, scope: !4395)
!4416 = !DILocation(line: 1031, column: 9, scope: !4395)
!4417 = !DILocation(line: 1034, column: 9, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4395, file: !64, line: 1034, column: 9)
!4419 = !DILocation(line: 1034, column: 13, scope: !4418)
!4420 = !DILocation(line: 1034, column: 9, scope: !4395)
!4421 = !DILocation(line: 1035, column: 16, scope: !4418)
!4422 = !DILocation(line: 1035, column: 9, scope: !4418)
!4423 = !DILocation(line: 1037, column: 17, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4395, file: !64, line: 1037, column: 9)
!4425 = !DILocation(line: 1037, column: 25, scope: !4424)
!4426 = !DILocation(line: 1037, column: 31, scope: !4424)
!4427 = !DILocation(line: 1037, column: 29, scope: !4424)
!4428 = !DILocation(line: 1037, column: 10, scope: !4424)
!4429 = !DILocation(line: 1037, column: 9, scope: !4395)
!4430 = !DILocation(line: 1038, column: 16, scope: !4424)
!4431 = !DILocation(line: 1038, column: 9, scope: !4424)
!4432 = !DILocation(line: 1039, column: 5, scope: !4395)
!4433 = !DILocation(line: 1040, column: 1, scope: !4395)
!4434 = distinct !DISubprogram(name: "rtmp_calc_swf_verification", scope: !64, file: !64, line: 1042, type: !4435, isLocal: true, isDefinition: true, scopeLine: 1044, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!4435 = !DISubroutineType(types: !4436)
!4436 = !{!108, !154, !385, !110}
!4437 = !DILocation(line: 95, column: 233, scope: !2965, inlinedAt: !4438)
!4438 = distinct !DILocation(line: 1056, column: 5, scope: !4434)
!4439 = !DILocation(line: 95, column: 255, scope: !2965, inlinedAt: !4438)
!4440 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !4441)
!4441 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !4442)
!4442 = distinct !DILocation(line: 1057, column: 5, scope: !4434)
!4443 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !4442)
!4444 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !4442)
!4445 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !4446)
!4446 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !4447)
!4447 = distinct !DILocation(line: 1058, column: 5, scope: !4434)
!4448 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !4447)
!4449 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !4447)
!4450 = !DILocation(line: 95, column: 233, scope: !2965, inlinedAt: !4451)
!4451 = distinct !DILocation(line: 1055, column: 5, scope: !4434)
!4452 = !DILocation(line: 95, column: 255, scope: !2965, inlinedAt: !4451)
!4453 = !DILocalVariable(name: "s", arg: 1, scope: !4434, file: !64, line: 1042, type: !154)
!4454 = !DILocation(line: 1042, column: 51, scope: !4434)
!4455 = !DILocalVariable(name: "rt", arg: 2, scope: !4434, file: !64, line: 1042, type: !385)
!4456 = !DILocation(line: 1042, column: 67, scope: !4434)
!4457 = !DILocalVariable(name: "buf", arg: 3, scope: !4434, file: !64, line: 1043, type: !110)
!4458 = !DILocation(line: 1043, column: 48, scope: !4434)
!4459 = !DILocalVariable(name: "p", scope: !4434, file: !64, line: 1045, type: !110)
!4460 = !DILocation(line: 1045, column: 14, scope: !4434)
!4461 = !DILocalVariable(name: "ret", scope: !4434, file: !64, line: 1046, type: !108)
!4462 = !DILocation(line: 1046, column: 9, scope: !4434)
!4463 = !DILocation(line: 1048, column: 9, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4434, file: !64, line: 1048, column: 9)
!4465 = !DILocation(line: 1048, column: 13, scope: !4464)
!4466 = !DILocation(line: 1048, column: 25, scope: !4464)
!4467 = !DILocation(line: 1048, column: 9, scope: !4434)
!4468 = !DILocation(line: 1049, column: 16, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4464, file: !64, line: 1048, column: 32)
!4470 = !DILocation(line: 1049, column: 9, scope: !4469)
!4471 = !DILocation(line: 1051, column: 9, scope: !4469)
!4472 = !DILocation(line: 1054, column: 10, scope: !4434)
!4473 = !DILocation(line: 1054, column: 14, scope: !4434)
!4474 = !DILocation(line: 1054, column: 7, scope: !4434)
!4475 = !DILocation(line: 1055, column: 5, scope: !4434)
!4476 = !DILocation(line: 95, column: 292, scope: !3316, inlinedAt: !4451)
!4477 = !DILocation(line: 95, column: 291, scope: !3316, inlinedAt: !4451)
!4478 = !DILocation(line: 95, column: 282, scope: !3316, inlinedAt: !4451)
!4479 = !DILocation(line: 95, column: 281, scope: !3316, inlinedAt: !4451)
!4480 = !DILocation(line: 95, column: 289, scope: !3316, inlinedAt: !4451)
!4481 = !DILocation(line: 95, column: 314, scope: !3323, inlinedAt: !4451)
!4482 = !DILocation(line: 95, column: 317, scope: !3323, inlinedAt: !4451)
!4483 = !DILocation(line: 1056, column: 5, scope: !4434)
!4484 = !DILocation(line: 95, column: 292, scope: !3316, inlinedAt: !4438)
!4485 = !DILocation(line: 95, column: 291, scope: !3316, inlinedAt: !4438)
!4486 = !DILocation(line: 95, column: 282, scope: !3316, inlinedAt: !4438)
!4487 = !DILocation(line: 95, column: 281, scope: !3316, inlinedAt: !4438)
!4488 = !DILocation(line: 95, column: 289, scope: !3316, inlinedAt: !4438)
!4489 = !DILocation(line: 95, column: 314, scope: !3323, inlinedAt: !4438)
!4490 = !DILocation(line: 95, column: 317, scope: !3323, inlinedAt: !4438)
!4491 = !DILocation(line: 1057, column: 29, scope: !4434)
!4492 = !DILocation(line: 1057, column: 33, scope: !4434)
!4493 = !DILocation(line: 1057, column: 5, scope: !4434)
!4494 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !4442)
!4495 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !4442)
!4496 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !4441)
!4497 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !4441)
!4498 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !4441)
!4499 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !4441)
!4500 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !4441)
!4501 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !4441)
!4502 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !4441)
!4503 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !4441)
!4504 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !4441)
!4505 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !4441)
!4506 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !4441)
!4507 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !4441)
!4508 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !4441)
!4509 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !4441)
!4510 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !4441)
!4511 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !4441)
!4512 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !4441)
!4513 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !4441)
!4514 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !4442)
!4515 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !4442)
!4516 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !4442)
!4517 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !4442)
!4518 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !4442)
!4519 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !4442)
!4520 = !DILocation(line: 1058, column: 29, scope: !4434)
!4521 = !DILocation(line: 1058, column: 33, scope: !4434)
!4522 = !DILocation(line: 1058, column: 5, scope: !4434)
!4523 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !4447)
!4524 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !4447)
!4525 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !4446)
!4526 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !4446)
!4527 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !4446)
!4528 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !4446)
!4529 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !4446)
!4530 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !4446)
!4531 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !4446)
!4532 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !4446)
!4533 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !4446)
!4534 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !4446)
!4535 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !4446)
!4536 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !4446)
!4537 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !4446)
!4538 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !4446)
!4539 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !4446)
!4540 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !4446)
!4541 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !4446)
!4542 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !4446)
!4543 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !4447)
!4544 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !4447)
!4545 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !4447)
!4546 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !4447)
!4547 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !4447)
!4548 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !4447)
!4549 = !DILocation(line: 1060, column: 36, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4434, file: !64, line: 1060, column: 9)
!4551 = !DILocation(line: 1060, column: 40, scope: !4550)
!4552 = !DILocation(line: 1060, column: 56, scope: !4550)
!4553 = !DILocation(line: 1060, column: 65, scope: !4550)
!4554 = !DILocation(line: 1060, column: 16, scope: !4550)
!4555 = !DILocation(line: 1060, column: 14, scope: !4550)
!4556 = !DILocation(line: 1060, column: 69, scope: !4550)
!4557 = !DILocation(line: 1060, column: 9, scope: !4434)
!4558 = !DILocation(line: 1061, column: 16, scope: !4550)
!4559 = !DILocation(line: 1061, column: 9, scope: !4550)
!4560 = !DILocation(line: 1063, column: 5, scope: !4434)
!4561 = !DILocation(line: 1064, column: 1, scope: !4434)
!4562 = distinct !DISubprogram(name: "rtmp_receive_hs_packet", scope: !64, file: !64, line: 1376, type: !4563, isLocal: true, isDefinition: true, scopeLine: 1379, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!4563 = !DISubroutineType(types: !4564)
!4564 = !{!108, !385, !4565, !4565, !244, !108}
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64, align: 64)
!4566 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !4567)
!4567 = distinct !DILocation(line: 1393, column: 19, scope: !4562)
!4568 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !4569)
!4569 = distinct !DILocation(line: 1392, column: 18, scope: !4562)
!4570 = !DILocalVariable(name: "rt", arg: 1, scope: !4562, file: !64, line: 1376, type: !385)
!4571 = !DILocation(line: 1376, column: 48, scope: !4562)
!4572 = !DILocalVariable(name: "first_int", arg: 2, scope: !4562, file: !64, line: 1376, type: !4565)
!4573 = !DILocation(line: 1376, column: 62, scope: !4562)
!4574 = !DILocalVariable(name: "second_int", arg: 3, scope: !4562, file: !64, line: 1377, type: !4565)
!4575 = !DILocation(line: 1377, column: 45, scope: !4562)
!4576 = !DILocalVariable(name: "arraydata", arg: 4, scope: !4562, file: !64, line: 1377, type: !244)
!4577 = !DILocation(line: 1377, column: 63, scope: !4562)
!4578 = !DILocalVariable(name: "size", arg: 5, scope: !4562, file: !64, line: 1378, type: !108)
!4579 = !DILocation(line: 1378, column: 39, scope: !4562)
!4580 = !DILocalVariable(name: "inoutsize", scope: !4562, file: !64, line: 1380, type: !108)
!4581 = !DILocation(line: 1380, column: 9, scope: !4562)
!4582 = !DILocation(line: 1382, column: 37, scope: !4562)
!4583 = !DILocation(line: 1382, column: 41, scope: !4562)
!4584 = !DILocation(line: 1382, column: 49, scope: !4562)
!4585 = !DILocation(line: 1382, column: 17, scope: !4562)
!4586 = !DILocation(line: 1382, column: 15, scope: !4562)
!4587 = !DILocation(line: 1384, column: 9, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4562, file: !64, line: 1384, column: 9)
!4589 = !DILocation(line: 1384, column: 19, scope: !4588)
!4590 = !DILocation(line: 1384, column: 9, scope: !4562)
!4591 = !DILocation(line: 1385, column: 9, scope: !4588)
!4592 = !DILocation(line: 1386, column: 9, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4562, file: !64, line: 1386, column: 9)
!4594 = !DILocation(line: 1386, column: 19, scope: !4593)
!4595 = !DILocation(line: 1386, column: 9, scope: !4562)
!4596 = !DILocation(line: 1387, column: 16, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4593, file: !64, line: 1386, column: 28)
!4598 = !DILocation(line: 1388, column: 50, scope: !4597)
!4599 = !DILocation(line: 1387, column: 9, scope: !4597)
!4600 = !DILocation(line: 1389, column: 9, scope: !4597)
!4601 = !DILocation(line: 1392, column: 61, scope: !4562)
!4602 = !DILocation(line: 1392, column: 74, scope: !4562)
!4603 = !DILocation(line: 1392, column: 18, scope: !4562)
!4604 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !4569)
!4605 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !4569)
!4606 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !4569)
!4607 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !4569)
!4608 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !4569)
!4609 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !4569)
!4610 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !4569)
!4611 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !4569)
!4612 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !4569)
!4613 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !4569)
!4614 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !4569)
!4615 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !4569)
!4616 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !4569)
!4617 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !4569)
!4618 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !4569)
!4619 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !4569)
!4620 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !4569)
!4621 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !4569)
!4622 = !DILocation(line: 1392, column: 6, scope: !4562)
!4623 = !DILocation(line: 1392, column: 16, scope: !4562)
!4624 = !DILocation(line: 1393, column: 62, scope: !4562)
!4625 = !DILocation(line: 1393, column: 72, scope: !4562)
!4626 = !DILocation(line: 1393, column: 79, scope: !4562)
!4627 = !DILocation(line: 1393, column: 19, scope: !4562)
!4628 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !4567)
!4629 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !4567)
!4630 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !4567)
!4631 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !4567)
!4632 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !4567)
!4633 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !4567)
!4634 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !4567)
!4635 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !4567)
!4636 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !4567)
!4637 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !4567)
!4638 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !4567)
!4639 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !4567)
!4640 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !4567)
!4641 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !4567)
!4642 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !4567)
!4643 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !4567)
!4644 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !4567)
!4645 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !4567)
!4646 = !DILocation(line: 1393, column: 6, scope: !4562)
!4647 = !DILocation(line: 1393, column: 17, scope: !4562)
!4648 = !DILocation(line: 1394, column: 5, scope: !4562)
!4649 = !DILocation(line: 1395, column: 1, scope: !4562)
!4650 = distinct !DISubprogram(name: "rtmp_send_hs_packet", scope: !64, file: !64, line: 1397, type: !4651, isLocal: true, isDefinition: true, scopeLine: 1399, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!4651 = !DISubroutineType(types: !4652)
!4652 = !{!108, !385, !119, !119, !244, !108}
!4653 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !4654)
!4654 = distinct !DILocation(line: 1403, column: 55, scope: !4650)
!4655 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !4656)
!4656 = distinct !DILocation(line: 1402, column: 51, scope: !4650)
!4657 = !DILocalVariable(name: "rt", arg: 1, scope: !4650, file: !64, line: 1397, type: !385)
!4658 = !DILocation(line: 1397, column: 45, scope: !4650)
!4659 = !DILocalVariable(name: "first_int", arg: 2, scope: !4650, file: !64, line: 1397, type: !119)
!4660 = !DILocation(line: 1397, column: 58, scope: !4650)
!4661 = !DILocalVariable(name: "second_int", arg: 3, scope: !4650, file: !64, line: 1398, type: !119)
!4662 = !DILocation(line: 1398, column: 41, scope: !4650)
!4663 = !DILocalVariable(name: "arraydata", arg: 4, scope: !4650, file: !64, line: 1398, type: !244)
!4664 = !DILocation(line: 1398, column: 59, scope: !4650)
!4665 = !DILocalVariable(name: "size", arg: 5, scope: !4650, file: !64, line: 1398, type: !108)
!4666 = !DILocation(line: 1398, column: 74, scope: !4650)
!4667 = !DILocalVariable(name: "inoutsize", scope: !4650, file: !64, line: 1400, type: !108)
!4668 = !DILocation(line: 1400, column: 9, scope: !4650)
!4669 = !DILocation(line: 1402, column: 62, scope: !4650)
!4670 = !DILocation(line: 1402, column: 51, scope: !4650)
!4671 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !4656)
!4672 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !4656)
!4673 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !4656)
!4674 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !4656)
!4675 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !4656)
!4676 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !4656)
!4677 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !4656)
!4678 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !4656)
!4679 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !4656)
!4680 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !4656)
!4681 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !4656)
!4682 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !4656)
!4683 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !4656)
!4684 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !4656)
!4685 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !4656)
!4686 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !4656)
!4687 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !4656)
!4688 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !4656)
!4689 = !DILocation(line: 1402, column: 32, scope: !4650)
!4690 = !DILocation(line: 1402, column: 45, scope: !4650)
!4691 = !DILocation(line: 1402, column: 48, scope: !4650)
!4692 = !DILocation(line: 1403, column: 66, scope: !4650)
!4693 = !DILocation(line: 1403, column: 55, scope: !4650)
!4694 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !4654)
!4695 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !4654)
!4696 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !4654)
!4697 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !4654)
!4698 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !4654)
!4699 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !4654)
!4700 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !4654)
!4701 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !4654)
!4702 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !4654)
!4703 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !4654)
!4704 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !4654)
!4705 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !4654)
!4706 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !4654)
!4707 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !4654)
!4708 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !4654)
!4709 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !4654)
!4710 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !4654)
!4711 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !4654)
!4712 = !DILocation(line: 1403, column: 32, scope: !4650)
!4713 = !DILocation(line: 1403, column: 42, scope: !4650)
!4714 = !DILocation(line: 1403, column: 49, scope: !4650)
!4715 = !DILocation(line: 1403, column: 52, scope: !4650)
!4716 = !DILocation(line: 1404, column: 29, scope: !4650)
!4717 = !DILocation(line: 1404, column: 33, scope: !4650)
!4718 = !DILocation(line: 1404, column: 41, scope: !4650)
!4719 = !DILocation(line: 1404, column: 17, scope: !4650)
!4720 = !DILocation(line: 1404, column: 15, scope: !4650)
!4721 = !DILocation(line: 1406, column: 9, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4650, file: !64, line: 1406, column: 9)
!4723 = !DILocation(line: 1406, column: 19, scope: !4722)
!4724 = !DILocation(line: 1406, column: 9, scope: !4650)
!4725 = !DILocation(line: 1407, column: 16, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4722, file: !64, line: 1406, column: 28)
!4727 = !DILocation(line: 1407, column: 9, scope: !4726)
!4728 = !DILocation(line: 1408, column: 9, scope: !4726)
!4729 = !DILocation(line: 1411, column: 5, scope: !4650)
!4730 = !DILocation(line: 1412, column: 1, scope: !4650)
!4731 = distinct !DISubprogram(name: "rtmp_write_amf_data", scope: !64, file: !64, line: 255, type: !4732, isLocal: true, isDefinition: true, scopeLine: 256, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!4732 = !DISubroutineType(types: !4733)
!4733 = !{!108, !154, !244, !2957}
!4734 = !DILocalVariable(name: "s", arg: 1, scope: !4731, file: !64, line: 255, type: !154)
!4735 = !DILocation(line: 255, column: 44, scope: !4731)
!4736 = !DILocalVariable(name: "param", arg: 2, scope: !4731, file: !64, line: 255, type: !244)
!4737 = !DILocation(line: 255, column: 53, scope: !4731)
!4738 = !DILocalVariable(name: "p", arg: 3, scope: !4731, file: !64, line: 255, type: !2957)
!4739 = !DILocation(line: 255, column: 70, scope: !4731)
!4740 = !DILocalVariable(name: "field", scope: !4731, file: !64, line: 257, type: !244)
!4741 = !DILocation(line: 257, column: 11, scope: !4731)
!4742 = !DILocalVariable(name: "value", scope: !4731, file: !64, line: 257, type: !244)
!4743 = !DILocation(line: 257, column: 19, scope: !4731)
!4744 = !DILocalVariable(name: "type", scope: !4731, file: !64, line: 258, type: !149)
!4745 = !DILocation(line: 258, column: 10, scope: !4731)
!4746 = !DILocation(line: 267, column: 9, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4731, file: !64, line: 267, column: 9)
!4748 = !DILocation(line: 267, column: 18, scope: !4747)
!4749 = !DILocation(line: 267, column: 21, scope: !4750)
!4750 = !DILexicalBlockFile(scope: !4747, file: !64, discriminator: 1)
!4751 = !DILocation(line: 267, column: 30, scope: !4750)
!4752 = !DILocation(line: 267, column: 9, scope: !4750)
!4753 = !DILocation(line: 268, column: 16, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4747, file: !64, line: 267, column: 38)
!4755 = !DILocation(line: 268, column: 14, scope: !4754)
!4756 = !DILocation(line: 269, column: 17, scope: !4754)
!4757 = !DILocation(line: 269, column: 23, scope: !4754)
!4758 = !DILocation(line: 269, column: 15, scope: !4754)
!4759 = !DILocation(line: 270, column: 5, scope: !4754)
!4760 = !DILocation(line: 270, column: 16, scope: !4761)
!4761 = !DILexicalBlockFile(scope: !4762, file: !64, discriminator: 1)
!4762 = distinct !DILexicalBlock(scope: !4747, file: !64, line: 270, column: 16)
!4763 = !DILocation(line: 270, column: 25, scope: !4761)
!4764 = !DILocation(line: 270, column: 32, scope: !4761)
!4765 = !DILocation(line: 270, column: 35, scope: !4766)
!4766 = !DILexicalBlockFile(scope: !4762, file: !64, discriminator: 2)
!4767 = !DILocation(line: 270, column: 44, scope: !4766)
!4768 = !DILocation(line: 270, column: 47, scope: !4769)
!4769 = !DILexicalBlockFile(scope: !4762, file: !64, discriminator: 3)
!4770 = !DILocation(line: 270, column: 56, scope: !4769)
!4771 = !DILocation(line: 270, column: 16, scope: !4769)
!4772 = !DILocation(line: 271, column: 16, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4762, file: !64, line: 270, column: 64)
!4774 = !DILocation(line: 271, column: 14, scope: !4773)
!4775 = !DILocation(line: 272, column: 17, scope: !4773)
!4776 = !DILocation(line: 272, column: 23, scope: !4773)
!4777 = !DILocation(line: 272, column: 15, scope: !4773)
!4778 = !DILocation(line: 273, column: 24, scope: !4773)
!4779 = !DILocation(line: 273, column: 17, scope: !4773)
!4780 = !DILocation(line: 273, column: 15, scope: !4773)
!4781 = !DILocation(line: 274, column: 14, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4773, file: !64, line: 274, column: 13)
!4783 = !DILocation(line: 274, column: 13, scope: !4773)
!4784 = !DILocation(line: 275, column: 13, scope: !4782)
!4785 = !DILocation(line: 276, column: 10, scope: !4773)
!4786 = !DILocation(line: 276, column: 16, scope: !4773)
!4787 = !DILocation(line: 277, column: 14, scope: !4773)
!4788 = !DILocation(line: 279, column: 33, scope: !4773)
!4789 = !DILocation(line: 279, column: 36, scope: !4773)
!4790 = !DILocation(line: 279, column: 9, scope: !4773)
!4791 = !DILocation(line: 280, column: 5, scope: !4773)
!4792 = !DILocation(line: 281, column: 9, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4762, file: !64, line: 280, column: 12)
!4794 = !DILocation(line: 284, column: 13, scope: !4731)
!4795 = !DILocation(line: 284, column: 5, scope: !4731)
!4796 = !DILocation(line: 286, column: 27, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4731, file: !64, line: 284, column: 19)
!4798 = !DILocation(line: 286, column: 30, scope: !4797)
!4799 = !DILocation(line: 286, column: 39, scope: !4797)
!4800 = !DILocation(line: 286, column: 9, scope: !4797)
!4801 = !DILocation(line: 287, column: 9, scope: !4797)
!4802 = !DILocation(line: 289, column: 29, scope: !4797)
!4803 = !DILocation(line: 289, column: 32, scope: !4797)
!4804 = !DILocation(line: 289, column: 9, scope: !4797)
!4805 = !DILocation(line: 290, column: 9, scope: !4797)
!4806 = !DILocation(line: 292, column: 29, scope: !4797)
!4807 = !DILocation(line: 292, column: 39, scope: !4797)
!4808 = !DILocation(line: 292, column: 32, scope: !4797)
!4809 = !DILocation(line: 292, column: 9, scope: !4810)
!4810 = !DILexicalBlockFile(scope: !4797, file: !64, discriminator: 1)
!4811 = !DILocation(line: 293, column: 9, scope: !4797)
!4812 = !DILocation(line: 295, column: 27, scope: !4797)
!4813 = !DILocation(line: 295, column: 9, scope: !4797)
!4814 = !DILocation(line: 296, column: 9, scope: !4797)
!4815 = !DILocation(line: 298, column: 13, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4797, file: !64, line: 298, column: 13)
!4817 = !DILocation(line: 298, column: 22, scope: !4816)
!4818 = !DILocation(line: 298, column: 13, scope: !4797)
!4819 = !DILocation(line: 299, column: 39, scope: !4816)
!4820 = !DILocation(line: 299, column: 13, scope: !4816)
!4821 = !DILocation(line: 301, column: 37, scope: !4816)
!4822 = !DILocation(line: 301, column: 13, scope: !4816)
!4823 = !DILocation(line: 302, column: 9, scope: !4797)
!4824 = !DILocation(line: 304, column: 9, scope: !4797)
!4825 = !DILocation(line: 308, column: 5, scope: !4731)
!4826 = !DILocation(line: 311, column: 12, scope: !4731)
!4827 = !DILocation(line: 311, column: 50, scope: !4731)
!4828 = !DILocation(line: 311, column: 5, scope: !4731)
!4829 = !DILocation(line: 312, column: 5, scope: !4731)
!4830 = !DILocation(line: 313, column: 1, scope: !4731)
!4831 = distinct !DISubprogram(name: "rtmp_send_packet", scope: !64, file: !64, line: 227, type: !4832, isLocal: true, isDefinition: true, scopeLine: 228, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!4832 = !DISubroutineType(types: !4833)
!4833 = !{!108, !385, !393, !108}
!4834 = !DILocation(line: 133, column: 84, scope: !1441, inlinedAt: !4835)
!4835 = distinct !DILocation(line: 237, column: 9, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4837, file: !64, line: 231, column: 47)
!4837 = distinct !DILexicalBlock(scope: !4831, file: !64, line: 231, column: 9)
!4838 = !DILocation(line: 134, column: 62, scope: !1441, inlinedAt: !4835)
!4839 = !DILocation(line: 135, column: 51, scope: !1441, inlinedAt: !4835)
!4840 = !DILocalVariable(name: "rt", arg: 1, scope: !4831, file: !64, line: 227, type: !385)
!4841 = !DILocation(line: 227, column: 42, scope: !4831)
!4842 = !DILocalVariable(name: "pkt", arg: 2, scope: !4831, file: !64, line: 227, type: !393)
!4843 = !DILocation(line: 227, column: 58, scope: !4831)
!4844 = !DILocalVariable(name: "track", arg: 3, scope: !4831, file: !64, line: 227, type: !108)
!4845 = !DILocation(line: 227, column: 67, scope: !4831)
!4846 = !DILocalVariable(name: "ret", scope: !4831, file: !64, line: 229, type: !108)
!4847 = !DILocation(line: 229, column: 9, scope: !4831)
!4848 = !DILocation(line: 231, column: 9, scope: !4837)
!4849 = !DILocation(line: 231, column: 14, scope: !4837)
!4850 = !DILocation(line: 231, column: 19, scope: !4837)
!4851 = !DILocation(line: 231, column: 37, scope: !4837)
!4852 = !DILocation(line: 231, column: 40, scope: !4853)
!4853 = !DILexicalBlockFile(scope: !4837, file: !64, discriminator: 1)
!4854 = !DILocation(line: 231, column: 9, scope: !4853)
!4855 = !DILocalVariable(name: "gbc", scope: !4836, file: !64, line: 232, type: !1445)
!4856 = !DILocation(line: 232, column: 24, scope: !4836)
!4857 = !DILocalVariable(name: "name", scope: !4836, file: !64, line: 233, type: !4858)
!4858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 1024, align: 8, elements: !4859)
!4859 = !{!4860}
!4860 = !DISubrange(count: 128)
!4861 = !DILocation(line: 233, column: 14, scope: !4836)
!4862 = !DILocalVariable(name: "pkt_id", scope: !4836, file: !64, line: 234, type: !185)
!4863 = !DILocation(line: 234, column: 16, scope: !4836)
!4864 = !DILocalVariable(name: "len", scope: !4836, file: !64, line: 235, type: !108)
!4865 = !DILocation(line: 235, column: 13, scope: !4836)
!4866 = !DILocation(line: 237, column: 32, scope: !4836)
!4867 = !DILocation(line: 237, column: 37, scope: !4836)
!4868 = !DILocation(line: 237, column: 43, scope: !4836)
!4869 = !DILocation(line: 237, column: 48, scope: !4836)
!4870 = !DILocation(line: 237, column: 9, scope: !4836)
!4871 = !DILocation(line: 137, column: 16, scope: !1805, inlinedAt: !4835)
!4872 = !DILocation(line: 137, column: 25, scope: !1805, inlinedAt: !4835)
!4873 = !DILocation(line: 137, column: 14, scope: !1805, inlinedAt: !4835)
!4874 = !DILocation(line: 137, column: 34, scope: !1811, inlinedAt: !4835)
!4875 = !DILocation(line: 137, column: 95, scope: !1814, inlinedAt: !4835)
!4876 = !DILocation(line: 137, column: 95, scope: !1811, inlinedAt: !4835)
!4877 = !DILocation(line: 138, column: 17, scope: !1441, inlinedAt: !4835)
!4878 = !DILocation(line: 138, column: 5, scope: !1441, inlinedAt: !4835)
!4879 = !DILocation(line: 138, column: 8, scope: !1441, inlinedAt: !4835)
!4880 = !DILocation(line: 138, column: 15, scope: !1441, inlinedAt: !4835)
!4881 = !DILocation(line: 139, column: 23, scope: !1441, inlinedAt: !4835)
!4882 = !DILocation(line: 139, column: 5, scope: !1441, inlinedAt: !4835)
!4883 = !DILocation(line: 139, column: 8, scope: !1441, inlinedAt: !4835)
!4884 = !DILocation(line: 139, column: 21, scope: !1441, inlinedAt: !4835)
!4885 = !DILocation(line: 140, column: 21, scope: !1441, inlinedAt: !4835)
!4886 = !DILocation(line: 140, column: 27, scope: !1441, inlinedAt: !4835)
!4887 = !DILocation(line: 140, column: 25, scope: !1441, inlinedAt: !4835)
!4888 = !DILocation(line: 140, column: 5, scope: !1441, inlinedAt: !4835)
!4889 = !DILocation(line: 140, column: 8, scope: !1441, inlinedAt: !4835)
!4890 = !DILocation(line: 140, column: 19, scope: !1441, inlinedAt: !4835)
!4891 = !DILocation(line: 238, column: 45, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4836, file: !64, line: 238, column: 13)
!4893 = !DILocation(line: 238, column: 20, scope: !4892)
!4894 = !DILocation(line: 238, column: 18, scope: !4892)
!4895 = !DILocation(line: 238, column: 72, scope: !4892)
!4896 = !DILocation(line: 238, column: 13, scope: !4836)
!4897 = !DILocation(line: 239, column: 13, scope: !4892)
!4898 = !DILocation(line: 241, column: 20, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4836, file: !64, line: 241, column: 13)
!4900 = !DILocation(line: 241, column: 18, scope: !4899)
!4901 = !DILocation(line: 241, column: 55, scope: !4899)
!4902 = !DILocation(line: 241, column: 13, scope: !4836)
!4903 = !DILocation(line: 242, column: 13, scope: !4899)
!4904 = !DILocation(line: 244, column: 39, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4836, file: !64, line: 244, column: 13)
!4906 = !DILocation(line: 244, column: 43, scope: !4905)
!4907 = !DILocation(line: 244, column: 49, scope: !4905)
!4908 = !DILocation(line: 244, column: 20, scope: !4905)
!4909 = !DILocation(line: 244, column: 18, scope: !4905)
!4910 = !DILocation(line: 244, column: 58, scope: !4905)
!4911 = !DILocation(line: 244, column: 13, scope: !4836)
!4912 = !DILocation(line: 245, column: 13, scope: !4905)
!4913 = !DILocation(line: 246, column: 5, scope: !4836)
!4914 = !DILocation(line: 248, column: 32, scope: !4831)
!4915 = !DILocation(line: 248, column: 36, scope: !4831)
!4916 = !DILocation(line: 248, column: 44, scope: !4831)
!4917 = !DILocation(line: 248, column: 49, scope: !4831)
!4918 = !DILocation(line: 248, column: 53, scope: !4831)
!4919 = !DILocation(line: 249, column: 33, scope: !4831)
!4920 = !DILocation(line: 249, column: 37, scope: !4831)
!4921 = !DILocation(line: 249, column: 51, scope: !4831)
!4922 = !DILocation(line: 249, column: 55, scope: !4831)
!4923 = !DILocation(line: 248, column: 11, scope: !4831)
!4924 = !DILocation(line: 248, column: 9, scope: !4831)
!4925 = !DILocation(line: 248, column: 5, scope: !4831)
!4926 = !DILocation(line: 251, column: 28, scope: !4831)
!4927 = !DILocation(line: 251, column: 5, scope: !4831)
!4928 = !DILocation(line: 252, column: 12, scope: !4831)
!4929 = !DILocation(line: 252, column: 5, scope: !4831)
!4930 = distinct !DISubprogram(name: "add_tracked_method", scope: !64, file: !64, line: 161, type: !4931, isLocal: true, isDefinition: true, scopeLine: 162, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!4931 = !DISubroutineType(types: !4932)
!4932 = !{!108, !385, !147, !108}
!4933 = !DILocalVariable(name: "rt", arg: 1, scope: !4930, file: !64, line: 161, type: !385)
!4934 = !DILocation(line: 161, column: 44, scope: !4930)
!4935 = !DILocalVariable(name: "name", arg: 2, scope: !4930, file: !64, line: 161, type: !147)
!4936 = !DILocation(line: 161, column: 60, scope: !4930)
!4937 = !DILocalVariable(name: "id", arg: 3, scope: !4930, file: !64, line: 161, type: !108)
!4938 = !DILocation(line: 161, column: 70, scope: !4930)
!4939 = !DILocalVariable(name: "err", scope: !4930, file: !64, line: 163, type: !108)
!4940 = !DILocation(line: 163, column: 9, scope: !4930)
!4941 = !DILocation(line: 165, column: 9, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4930, file: !64, line: 165, column: 9)
!4943 = !DILocation(line: 165, column: 13, scope: !4942)
!4944 = !DILocation(line: 165, column: 32, scope: !4942)
!4945 = !DILocation(line: 165, column: 38, scope: !4942)
!4946 = !DILocation(line: 165, column: 42, scope: !4942)
!4947 = !DILocation(line: 165, column: 36, scope: !4942)
!4948 = !DILocation(line: 165, column: 9, scope: !4930)
!4949 = !DILocation(line: 166, column: 37, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4942, file: !64, line: 165, column: 64)
!4951 = !DILocation(line: 166, column: 41, scope: !4950)
!4952 = !DILocation(line: 166, column: 60, scope: !4950)
!4953 = !DILocation(line: 166, column: 65, scope: !4950)
!4954 = !DILocation(line: 166, column: 9, scope: !4950)
!4955 = !DILocation(line: 166, column: 13, scope: !4950)
!4956 = !DILocation(line: 166, column: 34, scope: !4950)
!4957 = !DILocation(line: 167, column: 33, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4950, file: !64, line: 167, column: 13)
!4959 = !DILocation(line: 167, column: 37, scope: !4958)
!4960 = !DILocation(line: 167, column: 32, scope: !4958)
!4961 = !DILocation(line: 167, column: 54, scope: !4958)
!4962 = !DILocation(line: 167, column: 58, scope: !4958)
!4963 = !DILocation(line: 167, column: 79, scope: !4958)
!4964 = !DILocation(line: 167, column: 20, scope: !4958)
!4965 = !DILocation(line: 167, column: 18, scope: !4958)
!4966 = !DILocation(line: 168, column: 63, scope: !4958)
!4967 = !DILocation(line: 167, column: 13, scope: !4950)
!4968 = !DILocation(line: 169, column: 13, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4958, file: !64, line: 168, column: 68)
!4970 = !DILocation(line: 169, column: 17, scope: !4969)
!4971 = !DILocation(line: 169, column: 36, scope: !4969)
!4972 = !DILocation(line: 170, column: 13, scope: !4969)
!4973 = !DILocation(line: 170, column: 17, scope: !4969)
!4974 = !DILocation(line: 170, column: 38, scope: !4969)
!4975 = !DILocation(line: 171, column: 20, scope: !4969)
!4976 = !DILocation(line: 171, column: 13, scope: !4969)
!4977 = !DILocation(line: 173, column: 5, scope: !4950)
!4978 = !DILocation(line: 175, column: 66, scope: !4930)
!4979 = !DILocation(line: 175, column: 56, scope: !4930)
!4980 = !DILocation(line: 175, column: 25, scope: !4930)
!4981 = !DILocation(line: 175, column: 29, scope: !4930)
!4982 = !DILocation(line: 175, column: 5, scope: !4930)
!4983 = !DILocation(line: 175, column: 9, scope: !4930)
!4984 = !DILocation(line: 175, column: 49, scope: !4930)
!4985 = !DILocation(line: 175, column: 54, scope: !4930)
!4986 = !DILocation(line: 176, column: 30, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4930, file: !64, line: 176, column: 9)
!4988 = !DILocation(line: 176, column: 34, scope: !4987)
!4989 = !DILocation(line: 176, column: 10, scope: !4987)
!4990 = !DILocation(line: 176, column: 14, scope: !4987)
!4991 = !DILocation(line: 176, column: 54, scope: !4987)
!4992 = !DILocation(line: 176, column: 9, scope: !4930)
!4993 = !DILocation(line: 177, column: 9, scope: !4987)
!4994 = !DILocation(line: 178, column: 54, scope: !4930)
!4995 = !DILocation(line: 178, column: 25, scope: !4930)
!4996 = !DILocation(line: 178, column: 29, scope: !4930)
!4997 = !DILocation(line: 178, column: 5, scope: !4930)
!4998 = !DILocation(line: 178, column: 9, scope: !4930)
!4999 = !DILocation(line: 178, column: 49, scope: !4930)
!5000 = !DILocation(line: 178, column: 52, scope: !4930)
!5001 = !DILocation(line: 179, column: 5, scope: !4930)
!5002 = !DILocation(line: 179, column: 9, scope: !4930)
!5003 = !DILocation(line: 179, column: 27, scope: !4930)
!5004 = !DILocation(line: 181, column: 5, scope: !4930)
!5005 = !DILocation(line: 182, column: 1, scope: !4930)
!5006 = distinct !DISubprogram(name: "handle_chunk_size", scope: !64, file: !64, line: 1491, type: !5007, isLocal: true, isDefinition: true, scopeLine: 1492, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5007 = !DISubroutineType(types: !5008)
!5008 = !{!108, !154, !393}
!5009 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !5010)
!5010 = distinct !DILocation(line: 1512, column: 25, scope: !5006)
!5011 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !5012)
!5012 = distinct !DILocation(line: 1509, column: 30, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5014, file: !64, line: 1503, column: 24)
!5014 = distinct !DILexicalBlock(scope: !5006, file: !64, line: 1503, column: 9)
!5015 = !DILocalVariable(name: "s", arg: 1, scope: !5006, file: !64, line: 1491, type: !154)
!5016 = !DILocation(line: 1491, column: 42, scope: !5006)
!5017 = !DILocalVariable(name: "pkt", arg: 2, scope: !5006, file: !64, line: 1491, type: !393)
!5018 = !DILocation(line: 1491, column: 57, scope: !5006)
!5019 = !DILocalVariable(name: "rt", scope: !5006, file: !64, line: 1493, type: !385)
!5020 = !DILocation(line: 1493, column: 18, scope: !5006)
!5021 = !DILocation(line: 1493, column: 23, scope: !5006)
!5022 = !DILocation(line: 1493, column: 26, scope: !5006)
!5023 = !DILocalVariable(name: "ret", scope: !5006, file: !64, line: 1494, type: !108)
!5024 = !DILocation(line: 1494, column: 9, scope: !5006)
!5025 = !DILocation(line: 1496, column: 9, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5006, file: !64, line: 1496, column: 9)
!5027 = !DILocation(line: 1496, column: 14, scope: !5026)
!5028 = !DILocation(line: 1496, column: 19, scope: !5026)
!5029 = !DILocation(line: 1496, column: 9, scope: !5006)
!5030 = !DILocation(line: 1497, column: 16, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5026, file: !64, line: 1496, column: 24)
!5032 = !DILocation(line: 1499, column: 16, scope: !5031)
!5033 = !DILocation(line: 1499, column: 21, scope: !5031)
!5034 = !DILocation(line: 1497, column: 9, scope: !5031)
!5035 = !DILocation(line: 1500, column: 9, scope: !5031)
!5036 = !DILocation(line: 1503, column: 10, scope: !5014)
!5037 = !DILocation(line: 1503, column: 14, scope: !5014)
!5038 = !DILocation(line: 1503, column: 9, scope: !5006)
!5039 = !DILocation(line: 1506, column: 41, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5013, file: !64, line: 1506, column: 13)
!5041 = !DILocation(line: 1506, column: 45, scope: !5040)
!5042 = !DILocation(line: 1506, column: 53, scope: !5040)
!5043 = !DILocation(line: 1506, column: 58, scope: !5040)
!5044 = !DILocation(line: 1506, column: 62, scope: !5040)
!5045 = !DILocation(line: 1507, column: 42, scope: !5040)
!5046 = !DILocation(line: 1507, column: 46, scope: !5040)
!5047 = !DILocation(line: 1507, column: 60, scope: !5040)
!5048 = !DILocation(line: 1507, column: 64, scope: !5040)
!5049 = !DILocation(line: 1506, column: 20, scope: !5040)
!5050 = !DILocation(line: 1506, column: 18, scope: !5040)
!5051 = !DILocation(line: 1507, column: 81, scope: !5040)
!5052 = !DILocation(line: 1506, column: 13, scope: !5013)
!5053 = !DILocation(line: 1508, column: 20, scope: !5040)
!5054 = !DILocation(line: 1508, column: 13, scope: !5040)
!5055 = !DILocation(line: 1509, column: 73, scope: !5013)
!5056 = !DILocation(line: 1509, column: 78, scope: !5013)
!5057 = !DILocation(line: 1509, column: 86, scope: !5013)
!5058 = !DILocation(line: 1509, column: 30, scope: !5013)
!5059 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !5012)
!5060 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !5012)
!5061 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !5012)
!5062 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !5012)
!5063 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !5012)
!5064 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !5012)
!5065 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !5012)
!5066 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !5012)
!5067 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !5012)
!5068 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !5012)
!5069 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !5012)
!5070 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !5012)
!5071 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !5012)
!5072 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !5012)
!5073 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !5012)
!5074 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !5012)
!5075 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !5012)
!5076 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !5012)
!5077 = !DILocation(line: 1509, column: 9, scope: !5013)
!5078 = !DILocation(line: 1509, column: 13, scope: !5013)
!5079 = !DILocation(line: 1509, column: 28, scope: !5013)
!5080 = !DILocation(line: 1510, column: 5, scope: !5013)
!5081 = !DILocation(line: 1512, column: 68, scope: !5006)
!5082 = !DILocation(line: 1512, column: 73, scope: !5006)
!5083 = !DILocation(line: 1512, column: 81, scope: !5006)
!5084 = !DILocation(line: 1512, column: 25, scope: !5006)
!5085 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !5010)
!5086 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !5010)
!5087 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !5010)
!5088 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !5010)
!5089 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !5010)
!5090 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !5010)
!5091 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !5010)
!5092 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !5010)
!5093 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !5010)
!5094 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !5010)
!5095 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !5010)
!5096 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !5010)
!5097 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !5010)
!5098 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !5010)
!5099 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !5010)
!5100 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !5010)
!5101 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !5010)
!5102 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !5010)
!5103 = !DILocation(line: 1512, column: 5, scope: !5006)
!5104 = !DILocation(line: 1512, column: 9, scope: !5006)
!5105 = !DILocation(line: 1512, column: 23, scope: !5006)
!5106 = !DILocation(line: 1513, column: 9, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5006, file: !64, line: 1513, column: 9)
!5108 = !DILocation(line: 1513, column: 13, scope: !5107)
!5109 = !DILocation(line: 1513, column: 27, scope: !5107)
!5110 = !DILocation(line: 1513, column: 9, scope: !5006)
!5111 = !DILocation(line: 1514, column: 16, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5107, file: !64, line: 1513, column: 33)
!5113 = !DILocation(line: 1515, column: 16, scope: !5112)
!5114 = !DILocation(line: 1515, column: 20, scope: !5112)
!5115 = !DILocation(line: 1514, column: 9, scope: !5112)
!5116 = !DILocation(line: 1516, column: 9, scope: !5112)
!5117 = !DILocation(line: 1518, column: 12, scope: !5006)
!5118 = !DILocation(line: 1519, column: 12, scope: !5006)
!5119 = !DILocation(line: 1519, column: 16, scope: !5006)
!5120 = !DILocation(line: 1518, column: 5, scope: !5006)
!5121 = !DILocation(line: 1521, column: 5, scope: !5006)
!5122 = !DILocation(line: 1522, column: 1, scope: !5006)
!5123 = distinct !DISubprogram(name: "handle_window_ack_size", scope: !64, file: !64, line: 1578, type: !5007, isLocal: true, isDefinition: true, scopeLine: 1579, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5124 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !5125)
!5125 = distinct !DILocation(line: 1589, column: 31, scope: !5123)
!5126 = !DILocalVariable(name: "s", arg: 1, scope: !5123, file: !64, line: 1578, type: !154)
!5127 = !DILocation(line: 1578, column: 47, scope: !5123)
!5128 = !DILocalVariable(name: "pkt", arg: 2, scope: !5123, file: !64, line: 1578, type: !393)
!5129 = !DILocation(line: 1578, column: 62, scope: !5123)
!5130 = !DILocalVariable(name: "rt", scope: !5123, file: !64, line: 1580, type: !385)
!5131 = !DILocation(line: 1580, column: 18, scope: !5123)
!5132 = !DILocation(line: 1580, column: 23, scope: !5123)
!5133 = !DILocation(line: 1580, column: 26, scope: !5123)
!5134 = !DILocation(line: 1582, column: 9, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5123, file: !64, line: 1582, column: 9)
!5136 = !DILocation(line: 1582, column: 14, scope: !5135)
!5137 = !DILocation(line: 1582, column: 19, scope: !5135)
!5138 = !DILocation(line: 1582, column: 9, scope: !5123)
!5139 = !DILocation(line: 1583, column: 16, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5135, file: !64, line: 1582, column: 24)
!5141 = !DILocation(line: 1585, column: 16, scope: !5140)
!5142 = !DILocation(line: 1585, column: 21, scope: !5140)
!5143 = !DILocation(line: 1583, column: 9, scope: !5140)
!5144 = !DILocation(line: 1586, column: 9, scope: !5140)
!5145 = !DILocation(line: 1589, column: 74, scope: !5123)
!5146 = !DILocation(line: 1589, column: 79, scope: !5123)
!5147 = !DILocation(line: 1589, column: 87, scope: !5123)
!5148 = !DILocation(line: 1589, column: 31, scope: !5123)
!5149 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !5125)
!5150 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !5125)
!5151 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !5125)
!5152 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !5125)
!5153 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !5125)
!5154 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !5125)
!5155 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !5125)
!5156 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !5125)
!5157 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !5125)
!5158 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !5125)
!5159 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !5125)
!5160 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !5125)
!5161 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !5125)
!5162 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !5125)
!5163 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !5125)
!5164 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !5125)
!5165 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !5125)
!5166 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !5125)
!5167 = !DILocation(line: 1589, column: 5, scope: !5123)
!5168 = !DILocation(line: 1589, column: 9, scope: !5123)
!5169 = !DILocation(line: 1589, column: 29, scope: !5123)
!5170 = !DILocation(line: 1590, column: 9, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5123, file: !64, line: 1590, column: 9)
!5172 = !DILocation(line: 1590, column: 13, scope: !5171)
!5173 = !DILocation(line: 1590, column: 33, scope: !5171)
!5174 = !DILocation(line: 1590, column: 9, scope: !5123)
!5175 = !DILocation(line: 1591, column: 16, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5171, file: !64, line: 1590, column: 39)
!5177 = !DILocation(line: 1592, column: 16, scope: !5176)
!5178 = !DILocation(line: 1592, column: 20, scope: !5176)
!5179 = !DILocation(line: 1591, column: 9, scope: !5176)
!5180 = !DILocation(line: 1593, column: 9, scope: !5176)
!5181 = !DILocation(line: 1595, column: 12, scope: !5123)
!5182 = !DILocation(line: 1595, column: 57, scope: !5123)
!5183 = !DILocation(line: 1595, column: 61, scope: !5123)
!5184 = !DILocation(line: 1595, column: 5, scope: !5123)
!5185 = !DILocation(line: 1599, column: 5, scope: !5123)
!5186 = !DILocation(line: 1599, column: 9, scope: !5123)
!5187 = !DILocation(line: 1599, column: 29, scope: !5123)
!5188 = !DILocation(line: 1601, column: 5, scope: !5123)
!5189 = !DILocation(line: 1602, column: 1, scope: !5123)
!5190 = distinct !DISubprogram(name: "handle_set_peer_bw", scope: !64, file: !64, line: 1551, type: !5007, isLocal: true, isDefinition: true, scopeLine: 1552, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5191 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !5192)
!5192 = distinct !DILocation(line: 1566, column: 28, scope: !5190)
!5193 = !DILocalVariable(name: "s", arg: 1, scope: !5190, file: !64, line: 1551, type: !154)
!5194 = !DILocation(line: 1551, column: 43, scope: !5190)
!5195 = !DILocalVariable(name: "pkt", arg: 2, scope: !5190, file: !64, line: 1551, type: !393)
!5196 = !DILocation(line: 1551, column: 58, scope: !5190)
!5197 = !DILocalVariable(name: "rt", scope: !5190, file: !64, line: 1553, type: !385)
!5198 = !DILocation(line: 1553, column: 18, scope: !5190)
!5199 = !DILocation(line: 1553, column: 23, scope: !5190)
!5200 = !DILocation(line: 1553, column: 26, scope: !5190)
!5201 = !DILocation(line: 1555, column: 9, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5190, file: !64, line: 1555, column: 9)
!5203 = !DILocation(line: 1555, column: 14, scope: !5202)
!5204 = !DILocation(line: 1555, column: 19, scope: !5202)
!5205 = !DILocation(line: 1555, column: 9, scope: !5190)
!5206 = !DILocation(line: 1556, column: 16, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5202, file: !64, line: 1555, column: 24)
!5208 = !DILocation(line: 1558, column: 16, scope: !5207)
!5209 = !DILocation(line: 1558, column: 21, scope: !5207)
!5210 = !DILocation(line: 1556, column: 9, scope: !5207)
!5211 = !DILocation(line: 1559, column: 9, scope: !5207)
!5212 = !DILocation(line: 1566, column: 71, scope: !5190)
!5213 = !DILocation(line: 1566, column: 76, scope: !5190)
!5214 = !DILocation(line: 1566, column: 84, scope: !5190)
!5215 = !DILocation(line: 1566, column: 28, scope: !5190)
!5216 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !5192)
!5217 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !5192)
!5218 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !5192)
!5219 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !5192)
!5220 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !5192)
!5221 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !5192)
!5222 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !5192)
!5223 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !5192)
!5224 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !5192)
!5225 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !5192)
!5226 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !5192)
!5227 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !5192)
!5228 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !5192)
!5229 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !5192)
!5230 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !5192)
!5231 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !5192)
!5232 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !5192)
!5233 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !5192)
!5234 = !DILocation(line: 1566, column: 5, scope: !5190)
!5235 = !DILocation(line: 1566, column: 9, scope: !5190)
!5236 = !DILocation(line: 1566, column: 26, scope: !5190)
!5237 = !DILocation(line: 1567, column: 9, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5190, file: !64, line: 1567, column: 9)
!5239 = !DILocation(line: 1567, column: 13, scope: !5238)
!5240 = !DILocation(line: 1567, column: 30, scope: !5238)
!5241 = !DILocation(line: 1567, column: 9, scope: !5190)
!5242 = !DILocation(line: 1568, column: 16, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5238, file: !64, line: 1567, column: 36)
!5244 = !DILocation(line: 1569, column: 16, scope: !5243)
!5245 = !DILocation(line: 1569, column: 20, scope: !5243)
!5246 = !DILocation(line: 1568, column: 9, scope: !5243)
!5247 = !DILocation(line: 1570, column: 9, scope: !5243)
!5248 = !DILocation(line: 1573, column: 12, scope: !5190)
!5249 = !DILocation(line: 1573, column: 47, scope: !5190)
!5250 = !DILocation(line: 1573, column: 51, scope: !5190)
!5251 = !DILocation(line: 1573, column: 5, scope: !5190)
!5252 = !DILocation(line: 1575, column: 5, scope: !5190)
!5253 = !DILocation(line: 1576, column: 1, scope: !5190)
!5254 = distinct !DISubprogram(name: "gen_bytes_read", scope: !64, file: !64, line: 955, type: !5255, isLocal: true, isDefinition: true, scopeLine: 956, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5255 = !DISubroutineType(types: !5256)
!5256 = !{!108, !154, !385, !119}
!5257 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !5258)
!5258 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !5259)
!5259 = distinct !DILocation(line: 966, column: 5, scope: !5254)
!5260 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !5259)
!5261 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !5259)
!5262 = !DILocalVariable(name: "s", arg: 1, scope: !5254, file: !64, line: 955, type: !154)
!5263 = !DILocation(line: 955, column: 39, scope: !5254)
!5264 = !DILocalVariable(name: "rt", arg: 2, scope: !5254, file: !64, line: 955, type: !385)
!5265 = !DILocation(line: 955, column: 55, scope: !5254)
!5266 = !DILocalVariable(name: "ts", arg: 3, scope: !5254, file: !64, line: 955, type: !119)
!5267 = !DILocation(line: 955, column: 68, scope: !5254)
!5268 = !DILocalVariable(name: "pkt", scope: !5254, file: !64, line: 957, type: !394)
!5269 = !DILocation(line: 957, column: 16, scope: !5254)
!5270 = !DILocalVariable(name: "p", scope: !5254, file: !64, line: 958, type: !110)
!5271 = !DILocation(line: 958, column: 14, scope: !5254)
!5272 = !DILocalVariable(name: "ret", scope: !5254, file: !64, line: 959, type: !108)
!5273 = !DILocation(line: 959, column: 9, scope: !5254)
!5274 = !DILocation(line: 962, column: 38, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5254, file: !64, line: 961, column: 9)
!5276 = !DILocation(line: 961, column: 16, scope: !5275)
!5277 = !DILocation(line: 961, column: 14, scope: !5275)
!5278 = !DILocation(line: 962, column: 46, scope: !5275)
!5279 = !DILocation(line: 961, column: 9, scope: !5254)
!5280 = !DILocation(line: 963, column: 16, scope: !5275)
!5281 = !DILocation(line: 963, column: 9, scope: !5275)
!5282 = !DILocation(line: 965, column: 13, scope: !5254)
!5283 = !DILocation(line: 965, column: 7, scope: !5254)
!5284 = !DILocation(line: 966, column: 29, scope: !5254)
!5285 = !DILocation(line: 966, column: 33, scope: !5254)
!5286 = !DILocation(line: 966, column: 5, scope: !5254)
!5287 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !5259)
!5288 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !5259)
!5289 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !5258)
!5290 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !5258)
!5291 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !5258)
!5292 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !5258)
!5293 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !5258)
!5294 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !5258)
!5295 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !5258)
!5296 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !5258)
!5297 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !5258)
!5298 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !5258)
!5299 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !5258)
!5300 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !5258)
!5301 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !5258)
!5302 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !5258)
!5303 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !5258)
!5304 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !5258)
!5305 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !5258)
!5306 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !5258)
!5307 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !5259)
!5308 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !5259)
!5309 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !5259)
!5310 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !5259)
!5311 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !5259)
!5312 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !5259)
!5313 = !DILocation(line: 968, column: 29, scope: !5254)
!5314 = !DILocation(line: 968, column: 12, scope: !5254)
!5315 = !DILocation(line: 968, column: 5, scope: !5254)
!5316 = !DILocation(line: 969, column: 1, scope: !5254)
!5317 = distinct !DISubprogram(name: "rtmp_parse_result", scope: !64, file: !64, line: 2302, type: !5318, isLocal: true, isDefinition: true, scopeLine: 2303, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5318 = !DISubroutineType(types: !5319)
!5319 = !{!108, !154, !385, !393}
!5320 = !DILocalVariable(name: "s", arg: 1, scope: !5317, file: !64, line: 2302, type: !154)
!5321 = !DILocation(line: 2302, column: 42, scope: !5317)
!5322 = !DILocalVariable(name: "rt", arg: 2, scope: !5317, file: !64, line: 2302, type: !385)
!5323 = !DILocation(line: 2302, column: 58, scope: !5317)
!5324 = !DILocalVariable(name: "pkt", arg: 3, scope: !5317, file: !64, line: 2302, type: !393)
!5325 = !DILocation(line: 2302, column: 74, scope: !5317)
!5326 = !DILocalVariable(name: "ret", scope: !5317, file: !64, line: 2304, type: !108)
!5327 = !DILocation(line: 2304, column: 9, scope: !5317)
!5328 = !DILocation(line: 2310, column: 13, scope: !5317)
!5329 = !DILocation(line: 2310, column: 18, scope: !5317)
!5330 = !DILocation(line: 2310, column: 5, scope: !5317)
!5331 = !DILocation(line: 2312, column: 16, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5317, file: !64, line: 2310, column: 24)
!5333 = !DILocation(line: 2312, column: 9, scope: !5332)
!5334 = !DILocation(line: 2313, column: 9, scope: !5332)
!5335 = !DILocation(line: 2315, column: 38, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5332, file: !64, line: 2315, column: 13)
!5337 = !DILocation(line: 2315, column: 41, scope: !5336)
!5338 = !DILocation(line: 2315, column: 20, scope: !5336)
!5339 = !DILocation(line: 2315, column: 18, scope: !5336)
!5340 = !DILocation(line: 2315, column: 47, scope: !5336)
!5341 = !DILocation(line: 2315, column: 13, scope: !5332)
!5342 = !DILocation(line: 2316, column: 20, scope: !5336)
!5343 = !DILocation(line: 2316, column: 13, scope: !5336)
!5344 = !DILocation(line: 2317, column: 9, scope: !5332)
!5345 = !DILocation(line: 2319, column: 40, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5332, file: !64, line: 2319, column: 13)
!5347 = !DILocation(line: 2319, column: 43, scope: !5346)
!5348 = !DILocation(line: 2319, column: 20, scope: !5346)
!5349 = !DILocation(line: 2319, column: 18, scope: !5346)
!5350 = !DILocation(line: 2319, column: 49, scope: !5346)
!5351 = !DILocation(line: 2319, column: 13, scope: !5332)
!5352 = !DILocation(line: 2320, column: 20, scope: !5346)
!5353 = !DILocation(line: 2320, column: 13, scope: !5346)
!5354 = !DILocation(line: 2321, column: 9, scope: !5332)
!5355 = !DILocation(line: 2323, column: 39, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5332, file: !64, line: 2323, column: 13)
!5357 = !DILocation(line: 2323, column: 42, scope: !5356)
!5358 = !DILocation(line: 2323, column: 20, scope: !5356)
!5359 = !DILocation(line: 2323, column: 18, scope: !5356)
!5360 = !DILocation(line: 2323, column: 48, scope: !5356)
!5361 = !DILocation(line: 2323, column: 13, scope: !5332)
!5362 = !DILocation(line: 2324, column: 20, scope: !5356)
!5363 = !DILocation(line: 2324, column: 13, scope: !5356)
!5364 = !DILocation(line: 2325, column: 9, scope: !5332)
!5365 = !DILocation(line: 2327, column: 43, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5332, file: !64, line: 2327, column: 13)
!5367 = !DILocation(line: 2327, column: 46, scope: !5366)
!5368 = !DILocation(line: 2327, column: 20, scope: !5366)
!5369 = !DILocation(line: 2327, column: 18, scope: !5366)
!5370 = !DILocation(line: 2327, column: 52, scope: !5366)
!5371 = !DILocation(line: 2327, column: 13, scope: !5332)
!5372 = !DILocation(line: 2328, column: 20, scope: !5366)
!5373 = !DILocation(line: 2328, column: 13, scope: !5366)
!5374 = !DILocation(line: 2329, column: 9, scope: !5332)
!5375 = !DILocation(line: 2331, column: 34, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5332, file: !64, line: 2331, column: 13)
!5377 = !DILocation(line: 2331, column: 37, scope: !5376)
!5378 = !DILocation(line: 2331, column: 20, scope: !5376)
!5379 = !DILocation(line: 2331, column: 18, scope: !5376)
!5380 = !DILocation(line: 2331, column: 43, scope: !5376)
!5381 = !DILocation(line: 2331, column: 13, scope: !5332)
!5382 = !DILocation(line: 2332, column: 20, scope: !5376)
!5383 = !DILocation(line: 2332, column: 13, scope: !5376)
!5384 = !DILocation(line: 2333, column: 9, scope: !5332)
!5385 = !DILocation(line: 2339, column: 9, scope: !5332)
!5386 = !DILocation(line: 2341, column: 16, scope: !5332)
!5387 = !DILocation(line: 2341, column: 64, scope: !5332)
!5388 = !DILocation(line: 2341, column: 69, scope: !5332)
!5389 = !DILocation(line: 2341, column: 9, scope: !5332)
!5390 = !DILocation(line: 2342, column: 9, scope: !5332)
!5391 = !DILocation(line: 2344, column: 5, scope: !5317)
!5392 = !DILocation(line: 2345, column: 1, scope: !5317)
!5393 = distinct !DISubprogram(name: "append_flv_data", scope: !64, file: !64, line: 2206, type: !4832, isLocal: true, isDefinition: true, scopeLine: 2207, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5394 = !DILocalVariable(name: "p", arg: 1, scope: !5395, file: !1415, line: 93, type: !5398)
!5395 = distinct !DISubprogram(name: "bytestream2_put_be24", scope: !1415, file: !1415, line: 93, type: !5396, isLocal: true, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5396 = !DISubroutineType(types: !5397)
!5397 = !{null, !5398, !2958}
!5398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5399, size: 64, align: 64)
!5399 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutByteContext", file: !1415, line: 40, baseType: !5400)
!5400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutByteContext", file: !1415, line: 37, size: 256, align: 64, elements: !5401)
!5401 = !{!5402, !5403, !5404, !5405}
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5400, file: !1415, line: 38, baseType: !110, size: 64, align: 64)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !5400, file: !1415, line: 38, baseType: !110, size: 64, align: 64, offset: 64)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !5400, file: !1415, line: 38, baseType: !110, size: 64, align: 64, offset: 128)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "eof", scope: !5400, file: !1415, line: 39, baseType: !108, size: 32, align: 32, offset: 192)
!5406 = !DILocation(line: 93, column: 721, scope: !5395, inlinedAt: !5407)
!5407 = distinct !DILocation(line: 2229, column: 5, scope: !5393)
!5408 = !DILocalVariable(name: "value", arg: 2, scope: !5395, file: !1415, line: 93, type: !2958)
!5409 = !DILocation(line: 93, column: 743, scope: !5395, inlinedAt: !5407)
!5410 = !DILocation(line: 93, column: 721, scope: !5395, inlinedAt: !5411)
!5411 = distinct !DILocation(line: 2230, column: 5, scope: !5393)
!5412 = !DILocation(line: 93, column: 743, scope: !5395, inlinedAt: !5411)
!5413 = !DILocalVariable(name: "p", arg: 1, scope: !5414, file: !1415, line: 95, type: !5398)
!5414 = distinct !DISubprogram(name: "bytestream2_put_byte", scope: !1415, file: !1415, line: 95, type: !5396, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5415 = !DILocation(line: 95, column: 573, scope: !5414, inlinedAt: !5416)
!5416 = distinct !DILocation(line: 2231, column: 5, scope: !5393)
!5417 = !DILocalVariable(name: "value", arg: 2, scope: !5414, file: !1415, line: 95, type: !2958)
!5418 = !DILocation(line: 95, column: 595, scope: !5414, inlinedAt: !5416)
!5419 = !DILocation(line: 93, column: 721, scope: !5395, inlinedAt: !5420)
!5420 = distinct !DILocation(line: 2232, column: 5, scope: !5393)
!5421 = !DILocation(line: 93, column: 743, scope: !5395, inlinedAt: !5420)
!5422 = !DILocalVariable(name: "p", arg: 1, scope: !5423, file: !1415, line: 282, type: !5398)
!5423 = distinct !DISubprogram(name: "bytestream2_put_buffer", scope: !1415, file: !1415, line: 282, type: !5424, isLocal: true, isDefinition: true, scopeLine: 285, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5424 = !DISubroutineType(types: !5425)
!5425 = !{!109, !5398, !131, !109}
!5426 = !DILocation(line: 282, column: 98, scope: !5423, inlinedAt: !5427)
!5427 = distinct !DILocation(line: 2233, column: 5, scope: !5393)
!5428 = !DILocalVariable(name: "src", arg: 2, scope: !5423, file: !1415, line: 283, type: !131)
!5429 = !DILocation(line: 283, column: 76, scope: !5423, inlinedAt: !5427)
!5430 = !DILocalVariable(name: "size", arg: 3, scope: !5423, file: !1415, line: 284, type: !109)
!5431 = !DILocation(line: 284, column: 74, scope: !5423, inlinedAt: !5427)
!5432 = !DILocalVariable(name: "size2", scope: !5423, file: !1415, line: 286, type: !108)
!5433 = !DILocation(line: 286, column: 9, scope: !5423, inlinedAt: !5427)
!5434 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !5435)
!5435 = distinct !DILocation(line: 92, column: 738, scope: !5436, inlinedAt: !5440)
!5436 = !DILexicalBlockFile(scope: !5437, file: !1415, discriminator: 2)
!5437 = distinct !DILexicalBlock(scope: !5438, file: !1415, line: 92, column: 690)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !1415, line: 92, column: 645)
!5439 = distinct !DISubprogram(name: "bytestream2_put_be32", scope: !1415, file: !1415, line: 92, type: !5396, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5440 = distinct !DILocation(line: 2234, column: 5, scope: !5393)
!5441 = !DILocalVariable(name: "p", arg: 1, scope: !5439, file: !1415, line: 92, type: !5398)
!5442 = !DILocation(line: 92, column: 610, scope: !5439, inlinedAt: !5440)
!5443 = !DILocalVariable(name: "value", arg: 2, scope: !5439, file: !1415, line: 92, type: !2958)
!5444 = !DILocation(line: 92, column: 632, scope: !5439, inlinedAt: !5440)
!5445 = !DILocation(line: 95, column: 573, scope: !5414, inlinedAt: !5446)
!5446 = distinct !DILocation(line: 2228, column: 5, scope: !5393)
!5447 = !DILocation(line: 95, column: 595, scope: !5414, inlinedAt: !5446)
!5448 = !DILocalVariable(name: "p", arg: 1, scope: !5449, file: !1415, line: 176, type: !5398)
!5449 = distinct !DISubprogram(name: "bytestream2_skip_p", scope: !1415, file: !1415, line: 176, type: !5450, isLocal: true, isDefinition: true, scopeLine: 178, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5450 = !DISubroutineType(types: !5451)
!5451 = !{null, !5398, !109}
!5452 = !DILocation(line: 176, column: 86, scope: !5449, inlinedAt: !5453)
!5453 = distinct !DILocation(line: 2227, column: 5, scope: !5393)
!5454 = !DILocalVariable(name: "size", arg: 2, scope: !5449, file: !1415, line: 177, type: !109)
!5455 = !DILocation(line: 177, column: 62, scope: !5449, inlinedAt: !5453)
!5456 = !DILocalVariable(name: "size2", scope: !5449, file: !1415, line: 179, type: !108)
!5457 = !DILocation(line: 179, column: 9, scope: !5449, inlinedAt: !5453)
!5458 = !DILocalVariable(name: "p", arg: 1, scope: !5459, file: !1415, line: 143, type: !5398)
!5459 = distinct !DISubprogram(name: "bytestream2_init_writer", scope: !1415, file: !1415, line: 143, type: !5460, isLocal: true, isDefinition: true, scopeLine: 146, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5460 = !DISubroutineType(types: !5461)
!5461 = !{null, !5398, !110, !108}
!5462 = !DILocation(line: 143, column: 91, scope: !5459, inlinedAt: !5463)
!5463 = distinct !DILocation(line: 2226, column: 5, scope: !5393)
!5464 = !DILocalVariable(name: "buf", arg: 2, scope: !5459, file: !1415, line: 144, type: !110)
!5465 = !DILocation(line: 144, column: 63, scope: !5459, inlinedAt: !5463)
!5466 = !DILocalVariable(name: "buf_size", arg: 3, scope: !5459, file: !1415, line: 145, type: !108)
!5467 = !DILocation(line: 145, column: 58, scope: !5459, inlinedAt: !5463)
!5468 = !DILocalVariable(name: "rt", arg: 1, scope: !5393, file: !64, line: 2206, type: !385)
!5469 = !DILocation(line: 2206, column: 41, scope: !5393)
!5470 = !DILocalVariable(name: "pkt", arg: 2, scope: !5393, file: !64, line: 2206, type: !393)
!5471 = !DILocation(line: 2206, column: 57, scope: !5393)
!5472 = !DILocalVariable(name: "skip", arg: 3, scope: !5393, file: !64, line: 2206, type: !108)
!5473 = !DILocation(line: 2206, column: 66, scope: !5393)
!5474 = !DILocalVariable(name: "old_flv_size", scope: !5393, file: !64, line: 2208, type: !108)
!5475 = !DILocation(line: 2208, column: 9, scope: !5393)
!5476 = !DILocalVariable(name: "ret", scope: !5393, file: !64, line: 2208, type: !108)
!5477 = !DILocation(line: 2208, column: 23, scope: !5393)
!5478 = !DILocalVariable(name: "pbc", scope: !5393, file: !64, line: 2209, type: !5399)
!5479 = !DILocation(line: 2209, column: 20, scope: !5393)
!5480 = !DILocalVariable(name: "data", scope: !5393, file: !64, line: 2210, type: !131)
!5481 = !DILocation(line: 2210, column: 20, scope: !5393)
!5482 = !DILocation(line: 2210, column: 27, scope: !5393)
!5483 = !DILocation(line: 2210, column: 32, scope: !5393)
!5484 = !DILocation(line: 2210, column: 39, scope: !5393)
!5485 = !DILocation(line: 2210, column: 37, scope: !5393)
!5486 = !DILocalVariable(name: "size", scope: !5393, file: !64, line: 2211, type: !5487)
!5487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!5488 = !DILocation(line: 2211, column: 15, scope: !5393)
!5489 = !DILocation(line: 2211, column: 22, scope: !5393)
!5490 = !DILocation(line: 2211, column: 27, scope: !5393)
!5491 = !DILocation(line: 2211, column: 34, scope: !5393)
!5492 = !DILocation(line: 2211, column: 32, scope: !5393)
!5493 = !DILocalVariable(name: "ts", scope: !5393, file: !64, line: 2212, type: !119)
!5494 = !DILocation(line: 2212, column: 14, scope: !5393)
!5495 = !DILocation(line: 2212, column: 19, scope: !5393)
!5496 = !DILocation(line: 2212, column: 24, scope: !5393)
!5497 = !DILocation(line: 2214, column: 9, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5393, file: !64, line: 2214, column: 9)
!5499 = !DILocation(line: 2214, column: 14, scope: !5498)
!5500 = !DILocation(line: 2214, column: 19, scope: !5498)
!5501 = !DILocation(line: 2214, column: 9, scope: !5393)
!5502 = !DILocation(line: 2215, column: 9, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5498, file: !64, line: 2214, column: 37)
!5504 = !DILocation(line: 2215, column: 13, scope: !5503)
!5505 = !DILocation(line: 2215, column: 23, scope: !5503)
!5506 = !DILocation(line: 2216, column: 5, scope: !5503)
!5507 = !DILocation(line: 2216, column: 16, scope: !5508)
!5508 = !DILexicalBlockFile(scope: !5509, file: !64, discriminator: 1)
!5509 = distinct !DILexicalBlock(scope: !5498, file: !64, line: 2216, column: 16)
!5510 = !DILocation(line: 2216, column: 21, scope: !5508)
!5511 = !DILocation(line: 2216, column: 26, scope: !5508)
!5512 = !DILocation(line: 2217, column: 9, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5509, file: !64, line: 2216, column: 44)
!5514 = !DILocation(line: 2217, column: 13, scope: !5513)
!5515 = !DILocation(line: 2217, column: 23, scope: !5513)
!5516 = !DILocation(line: 2218, column: 5, scope: !5513)
!5517 = !DILocation(line: 2220, column: 34, scope: !5393)
!5518 = !DILocation(line: 2220, column: 38, scope: !5393)
!5519 = !DILocation(line: 2220, column: 43, scope: !5393)
!5520 = !DILocation(line: 2220, column: 20, scope: !5393)
!5521 = !DILocation(line: 2220, column: 18, scope: !5393)
!5522 = !DILocation(line: 2222, column: 29, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5393, file: !64, line: 2222, column: 9)
!5524 = !DILocation(line: 2222, column: 33, scope: !5523)
!5525 = !DILocation(line: 2222, column: 28, scope: !5523)
!5526 = !DILocation(line: 2222, column: 43, scope: !5523)
!5527 = !DILocation(line: 2222, column: 47, scope: !5523)
!5528 = !DILocation(line: 2222, column: 16, scope: !5523)
!5529 = !DILocation(line: 2222, column: 14, scope: !5523)
!5530 = !DILocation(line: 2222, column: 58, scope: !5523)
!5531 = !DILocation(line: 2222, column: 9, scope: !5393)
!5532 = !DILocation(line: 2223, column: 24, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5523, file: !64, line: 2222, column: 63)
!5534 = !DILocation(line: 2223, column: 28, scope: !5533)
!5535 = !DILocation(line: 2223, column: 36, scope: !5533)
!5536 = !DILocation(line: 2223, column: 9, scope: !5533)
!5537 = !DILocation(line: 2223, column: 13, scope: !5533)
!5538 = !DILocation(line: 2223, column: 22, scope: !5533)
!5539 = !DILocation(line: 2224, column: 16, scope: !5533)
!5540 = !DILocation(line: 2224, column: 9, scope: !5533)
!5541 = !DILocation(line: 2226, column: 35, scope: !5393)
!5542 = !DILocation(line: 2226, column: 39, scope: !5393)
!5543 = !DILocation(line: 2226, column: 49, scope: !5393)
!5544 = !DILocation(line: 2226, column: 53, scope: !5393)
!5545 = !DILocation(line: 2226, column: 5, scope: !5393)
!5546 = !DILocation(line: 147, column: 16, scope: !5547, inlinedAt: !5463)
!5547 = !DILexicalBlockFile(scope: !5548, file: !1415, discriminator: 1)
!5548 = distinct !DILexicalBlock(scope: !5549, file: !1415, line: 147, column: 14)
!5549 = distinct !DILexicalBlock(scope: !5459, file: !1415, line: 147, column: 8)
!5550 = !DILocation(line: 147, column: 25, scope: !5547, inlinedAt: !5463)
!5551 = !DILocation(line: 147, column: 14, scope: !5547, inlinedAt: !5463)
!5552 = !DILocation(line: 147, column: 34, scope: !5553, inlinedAt: !5463)
!5553 = !DILexicalBlockFile(scope: !5554, file: !1415, discriminator: 2)
!5554 = distinct !DILexicalBlock(scope: !5548, file: !1415, line: 147, column: 32)
!5555 = !DILocation(line: 147, column: 95, scope: !5556, inlinedAt: !5463)
!5556 = !DILexicalBlockFile(scope: !5553, file: !1415, discriminator: 4)
!5557 = !DILocation(line: 147, column: 95, scope: !5553, inlinedAt: !5463)
!5558 = !DILocation(line: 148, column: 17, scope: !5459, inlinedAt: !5463)
!5559 = !DILocation(line: 148, column: 5, scope: !5459, inlinedAt: !5463)
!5560 = !DILocation(line: 148, column: 8, scope: !5459, inlinedAt: !5463)
!5561 = !DILocation(line: 148, column: 15, scope: !5459, inlinedAt: !5463)
!5562 = !DILocation(line: 149, column: 23, scope: !5459, inlinedAt: !5463)
!5563 = !DILocation(line: 149, column: 5, scope: !5459, inlinedAt: !5463)
!5564 = !DILocation(line: 149, column: 8, scope: !5459, inlinedAt: !5463)
!5565 = !DILocation(line: 149, column: 21, scope: !5459, inlinedAt: !5463)
!5566 = !DILocation(line: 150, column: 21, scope: !5459, inlinedAt: !5463)
!5567 = !DILocation(line: 150, column: 27, scope: !5459, inlinedAt: !5463)
!5568 = !DILocation(line: 150, column: 25, scope: !5459, inlinedAt: !5463)
!5569 = !DILocation(line: 150, column: 5, scope: !5459, inlinedAt: !5463)
!5570 = !DILocation(line: 150, column: 8, scope: !5459, inlinedAt: !5463)
!5571 = !DILocation(line: 150, column: 19, scope: !5459, inlinedAt: !5463)
!5572 = !DILocation(line: 151, column: 5, scope: !5459, inlinedAt: !5463)
!5573 = !DILocation(line: 151, column: 8, scope: !5459, inlinedAt: !5463)
!5574 = !DILocation(line: 151, column: 12, scope: !5459, inlinedAt: !5463)
!5575 = !DILocation(line: 2227, column: 30, scope: !5393)
!5576 = !DILocation(line: 2227, column: 5, scope: !5393)
!5577 = !DILocation(line: 180, column: 9, scope: !5578, inlinedAt: !5453)
!5578 = distinct !DILexicalBlock(scope: !5449, file: !1415, line: 180, column: 9)
!5579 = !DILocation(line: 180, column: 12, scope: !5578, inlinedAt: !5453)
!5580 = !DILocation(line: 180, column: 9, scope: !5449, inlinedAt: !5453)
!5581 = !DILocation(line: 181, column: 9, scope: !5578, inlinedAt: !5453)
!5582 = !DILocation(line: 182, column: 15, scope: !5449, inlinedAt: !5453)
!5583 = !DILocation(line: 182, column: 18, scope: !5449, inlinedAt: !5453)
!5584 = !DILocation(line: 182, column: 31, scope: !5449, inlinedAt: !5453)
!5585 = !DILocation(line: 182, column: 34, scope: !5449, inlinedAt: !5453)
!5586 = !DILocation(line: 182, column: 29, scope: !5449, inlinedAt: !5453)
!5587 = !DILocation(line: 182, column: 45, scope: !5449, inlinedAt: !5453)
!5588 = !DILocation(line: 182, column: 44, scope: !5449, inlinedAt: !5453)
!5589 = !DILocation(line: 182, column: 42, scope: !5449, inlinedAt: !5453)
!5590 = !DILocation(line: 182, column: 14, scope: !5449, inlinedAt: !5453)
!5591 = !DILocation(line: 182, column: 54, scope: !5592, inlinedAt: !5453)
!5592 = !DILexicalBlockFile(scope: !5449, file: !1415, discriminator: 1)
!5593 = !DILocation(line: 182, column: 53, scope: !5592, inlinedAt: !5453)
!5594 = !DILocation(line: 182, column: 14, scope: !5592, inlinedAt: !5453)
!5595 = !DILocation(line: 182, column: 63, scope: !5596, inlinedAt: !5453)
!5596 = !DILexicalBlockFile(scope: !5449, file: !1415, discriminator: 2)
!5597 = !DILocation(line: 182, column: 66, scope: !5596, inlinedAt: !5453)
!5598 = !DILocation(line: 182, column: 79, scope: !5596, inlinedAt: !5453)
!5599 = !DILocation(line: 182, column: 82, scope: !5596, inlinedAt: !5453)
!5600 = !DILocation(line: 182, column: 77, scope: !5596, inlinedAt: !5453)
!5601 = !DILocation(line: 182, column: 14, scope: !5596, inlinedAt: !5453)
!5602 = !DILocation(line: 182, column: 14, scope: !5603, inlinedAt: !5453)
!5603 = !DILexicalBlockFile(scope: !5449, file: !1415, discriminator: 3)
!5604 = !DILocation(line: 182, column: 13, scope: !5603, inlinedAt: !5453)
!5605 = !DILocation(line: 182, column: 11, scope: !5603, inlinedAt: !5453)
!5606 = !DILocation(line: 183, column: 9, scope: !5607, inlinedAt: !5453)
!5607 = distinct !DILexicalBlock(scope: !5449, file: !1415, line: 183, column: 9)
!5608 = !DILocation(line: 183, column: 18, scope: !5607, inlinedAt: !5453)
!5609 = !DILocation(line: 183, column: 15, scope: !5607, inlinedAt: !5453)
!5610 = !DILocation(line: 183, column: 9, scope: !5449, inlinedAt: !5453)
!5611 = !DILocation(line: 184, column: 9, scope: !5607, inlinedAt: !5453)
!5612 = !DILocation(line: 184, column: 12, scope: !5607, inlinedAt: !5453)
!5613 = !DILocation(line: 184, column: 16, scope: !5607, inlinedAt: !5453)
!5614 = !DILocation(line: 185, column: 18, scope: !5449, inlinedAt: !5453)
!5615 = !DILocation(line: 185, column: 5, scope: !5449, inlinedAt: !5453)
!5616 = !DILocation(line: 185, column: 8, scope: !5449, inlinedAt: !5453)
!5617 = !DILocation(line: 185, column: 15, scope: !5449, inlinedAt: !5453)
!5618 = !DILocation(line: 186, column: 1, scope: !5449, inlinedAt: !5453)
!5619 = !DILocation(line: 2228, column: 32, scope: !5393)
!5620 = !DILocation(line: 2228, column: 37, scope: !5393)
!5621 = !DILocation(line: 2228, column: 5, scope: !5393)
!5622 = !DILocation(line: 95, column: 609, scope: !5623, inlinedAt: !5446)
!5623 = distinct !DILexicalBlock(scope: !5414, file: !1415, line: 95, column: 608)
!5624 = !DILocation(line: 95, column: 612, scope: !5623, inlinedAt: !5446)
!5625 = !DILocation(line: 95, column: 616, scope: !5623, inlinedAt: !5446)
!5626 = !DILocation(line: 95, column: 620, scope: !5627, inlinedAt: !5446)
!5627 = !DILexicalBlockFile(scope: !5623, file: !1415, discriminator: 1)
!5628 = !DILocation(line: 95, column: 623, scope: !5627, inlinedAt: !5446)
!5629 = !DILocation(line: 95, column: 636, scope: !5627, inlinedAt: !5446)
!5630 = !DILocation(line: 95, column: 639, scope: !5627, inlinedAt: !5446)
!5631 = !DILocation(line: 95, column: 634, scope: !5627, inlinedAt: !5446)
!5632 = !DILocation(line: 95, column: 646, scope: !5627, inlinedAt: !5446)
!5633 = !DILocation(line: 95, column: 608, scope: !5627, inlinedAt: !5446)
!5634 = !DILocation(line: 95, column: 690, scope: !5635, inlinedAt: !5446)
!5635 = !DILexicalBlockFile(scope: !5636, file: !1415, discriminator: 3)
!5636 = distinct !DILexicalBlock(scope: !5637, file: !1415, line: 95, column: 658)
!5637 = distinct !DILexicalBlock(scope: !5623, file: !1415, line: 95, column: 653)
!5638 = !DILocation(line: 95, column: 689, scope: !5635, inlinedAt: !5446)
!5639 = !DILocation(line: 95, column: 672, scope: !5635, inlinedAt: !5446)
!5640 = !DILocation(line: 95, column: 675, scope: !5635, inlinedAt: !5446)
!5641 = !DILocation(line: 95, column: 687, scope: !5635, inlinedAt: !5446)
!5642 = !DILocation(line: 95, column: 710, scope: !5643, inlinedAt: !5446)
!5643 = !DILexicalBlockFile(scope: !5637, file: !1415, discriminator: 4)
!5644 = !DILocation(line: 95, column: 713, scope: !5643, inlinedAt: !5446)
!5645 = !DILocation(line: 95, column: 720, scope: !5643, inlinedAt: !5446)
!5646 = !DILocation(line: 95, column: 726, scope: !5643, inlinedAt: !5446)
!5647 = !DILocation(line: 95, column: 733, scope: !5648, inlinedAt: !5446)
!5648 = !DILexicalBlockFile(scope: !5623, file: !1415, discriminator: 5)
!5649 = !DILocation(line: 95, column: 736, scope: !5648, inlinedAt: !5446)
!5650 = !DILocation(line: 95, column: 740, scope: !5648, inlinedAt: !5446)
!5651 = !DILocation(line: 2229, column: 32, scope: !5393)
!5652 = !DILocation(line: 2229, column: 5, scope: !5393)
!5653 = !DILocation(line: 93, column: 757, scope: !5654, inlinedAt: !5407)
!5654 = distinct !DILexicalBlock(scope: !5395, file: !1415, line: 93, column: 756)
!5655 = !DILocation(line: 93, column: 760, scope: !5654, inlinedAt: !5407)
!5656 = !DILocation(line: 93, column: 764, scope: !5654, inlinedAt: !5407)
!5657 = !DILocation(line: 93, column: 768, scope: !5658, inlinedAt: !5407)
!5658 = !DILexicalBlockFile(scope: !5654, file: !1415, discriminator: 1)
!5659 = !DILocation(line: 93, column: 771, scope: !5658, inlinedAt: !5407)
!5660 = !DILocation(line: 93, column: 784, scope: !5658, inlinedAt: !5407)
!5661 = !DILocation(line: 93, column: 787, scope: !5658, inlinedAt: !5407)
!5662 = !DILocation(line: 93, column: 782, scope: !5658, inlinedAt: !5407)
!5663 = !DILocation(line: 93, column: 794, scope: !5658, inlinedAt: !5407)
!5664 = !DILocation(line: 93, column: 756, scope: !5658, inlinedAt: !5407)
!5665 = !DILocation(line: 93, column: 838, scope: !5666, inlinedAt: !5407)
!5666 = !DILexicalBlockFile(scope: !5667, file: !1415, discriminator: 3)
!5667 = distinct !DILexicalBlock(scope: !5668, file: !1415, line: 93, column: 806)
!5668 = distinct !DILexicalBlock(scope: !5654, file: !1415, line: 93, column: 801)
!5669 = !DILocation(line: 93, column: 837, scope: !5666, inlinedAt: !5407)
!5670 = !DILocation(line: 93, column: 820, scope: !5666, inlinedAt: !5407)
!5671 = !DILocation(line: 93, column: 823, scope: !5666, inlinedAt: !5407)
!5672 = !DILocation(line: 93, column: 808, scope: !5666, inlinedAt: !5407)
!5673 = !DILocation(line: 93, column: 835, scope: !5666, inlinedAt: !5407)
!5674 = !DILocation(line: 93, column: 876, scope: !5666, inlinedAt: !5407)
!5675 = !DILocation(line: 93, column: 882, scope: !5666, inlinedAt: !5407)
!5676 = !DILocation(line: 93, column: 875, scope: !5666, inlinedAt: !5407)
!5677 = !DILocation(line: 93, column: 858, scope: !5666, inlinedAt: !5407)
!5678 = !DILocation(line: 93, column: 861, scope: !5666, inlinedAt: !5407)
!5679 = !DILocation(line: 93, column: 846, scope: !5666, inlinedAt: !5407)
!5680 = !DILocation(line: 93, column: 873, scope: !5666, inlinedAt: !5407)
!5681 = !DILocation(line: 93, column: 917, scope: !5666, inlinedAt: !5407)
!5682 = !DILocation(line: 93, column: 923, scope: !5666, inlinedAt: !5407)
!5683 = !DILocation(line: 93, column: 916, scope: !5666, inlinedAt: !5407)
!5684 = !DILocation(line: 93, column: 899, scope: !5666, inlinedAt: !5407)
!5685 = !DILocation(line: 93, column: 902, scope: !5666, inlinedAt: !5407)
!5686 = !DILocation(line: 93, column: 914, scope: !5666, inlinedAt: !5407)
!5687 = !DILocation(line: 93, column: 941, scope: !5688, inlinedAt: !5407)
!5688 = !DILexicalBlockFile(scope: !5668, file: !1415, discriminator: 4)
!5689 = !DILocation(line: 93, column: 944, scope: !5688, inlinedAt: !5407)
!5690 = !DILocation(line: 93, column: 951, scope: !5688, inlinedAt: !5407)
!5691 = !DILocation(line: 93, column: 957, scope: !5688, inlinedAt: !5407)
!5692 = !DILocation(line: 93, column: 964, scope: !5693, inlinedAt: !5407)
!5693 = !DILexicalBlockFile(scope: !5654, file: !1415, discriminator: 5)
!5694 = !DILocation(line: 93, column: 967, scope: !5693, inlinedAt: !5407)
!5695 = !DILocation(line: 93, column: 971, scope: !5693, inlinedAt: !5407)
!5696 = !DILocation(line: 2230, column: 32, scope: !5393)
!5697 = !DILocation(line: 2230, column: 5, scope: !5393)
!5698 = !DILocation(line: 93, column: 757, scope: !5654, inlinedAt: !5411)
!5699 = !DILocation(line: 93, column: 760, scope: !5654, inlinedAt: !5411)
!5700 = !DILocation(line: 93, column: 764, scope: !5654, inlinedAt: !5411)
!5701 = !DILocation(line: 93, column: 768, scope: !5658, inlinedAt: !5411)
!5702 = !DILocation(line: 93, column: 771, scope: !5658, inlinedAt: !5411)
!5703 = !DILocation(line: 93, column: 784, scope: !5658, inlinedAt: !5411)
!5704 = !DILocation(line: 93, column: 787, scope: !5658, inlinedAt: !5411)
!5705 = !DILocation(line: 93, column: 782, scope: !5658, inlinedAt: !5411)
!5706 = !DILocation(line: 93, column: 794, scope: !5658, inlinedAt: !5411)
!5707 = !DILocation(line: 93, column: 756, scope: !5658, inlinedAt: !5411)
!5708 = !DILocation(line: 93, column: 838, scope: !5666, inlinedAt: !5411)
!5709 = !DILocation(line: 93, column: 837, scope: !5666, inlinedAt: !5411)
!5710 = !DILocation(line: 93, column: 820, scope: !5666, inlinedAt: !5411)
!5711 = !DILocation(line: 93, column: 823, scope: !5666, inlinedAt: !5411)
!5712 = !DILocation(line: 93, column: 808, scope: !5666, inlinedAt: !5411)
!5713 = !DILocation(line: 93, column: 835, scope: !5666, inlinedAt: !5411)
!5714 = !DILocation(line: 93, column: 876, scope: !5666, inlinedAt: !5411)
!5715 = !DILocation(line: 93, column: 882, scope: !5666, inlinedAt: !5411)
!5716 = !DILocation(line: 93, column: 875, scope: !5666, inlinedAt: !5411)
!5717 = !DILocation(line: 93, column: 858, scope: !5666, inlinedAt: !5411)
!5718 = !DILocation(line: 93, column: 861, scope: !5666, inlinedAt: !5411)
!5719 = !DILocation(line: 93, column: 846, scope: !5666, inlinedAt: !5411)
!5720 = !DILocation(line: 93, column: 873, scope: !5666, inlinedAt: !5411)
!5721 = !DILocation(line: 93, column: 917, scope: !5666, inlinedAt: !5411)
!5722 = !DILocation(line: 93, column: 923, scope: !5666, inlinedAt: !5411)
!5723 = !DILocation(line: 93, column: 916, scope: !5666, inlinedAt: !5411)
!5724 = !DILocation(line: 93, column: 899, scope: !5666, inlinedAt: !5411)
!5725 = !DILocation(line: 93, column: 902, scope: !5666, inlinedAt: !5411)
!5726 = !DILocation(line: 93, column: 914, scope: !5666, inlinedAt: !5411)
!5727 = !DILocation(line: 93, column: 941, scope: !5688, inlinedAt: !5411)
!5728 = !DILocation(line: 93, column: 944, scope: !5688, inlinedAt: !5411)
!5729 = !DILocation(line: 93, column: 951, scope: !5688, inlinedAt: !5411)
!5730 = !DILocation(line: 93, column: 957, scope: !5688, inlinedAt: !5411)
!5731 = !DILocation(line: 93, column: 964, scope: !5693, inlinedAt: !5411)
!5732 = !DILocation(line: 93, column: 967, scope: !5693, inlinedAt: !5411)
!5733 = !DILocation(line: 93, column: 971, scope: !5693, inlinedAt: !5411)
!5734 = !DILocation(line: 2231, column: 32, scope: !5393)
!5735 = !DILocation(line: 2231, column: 35, scope: !5393)
!5736 = !DILocation(line: 2231, column: 5, scope: !5393)
!5737 = !DILocation(line: 95, column: 609, scope: !5623, inlinedAt: !5416)
!5738 = !DILocation(line: 95, column: 612, scope: !5623, inlinedAt: !5416)
!5739 = !DILocation(line: 95, column: 616, scope: !5623, inlinedAt: !5416)
!5740 = !DILocation(line: 95, column: 620, scope: !5627, inlinedAt: !5416)
!5741 = !DILocation(line: 95, column: 623, scope: !5627, inlinedAt: !5416)
!5742 = !DILocation(line: 95, column: 636, scope: !5627, inlinedAt: !5416)
!5743 = !DILocation(line: 95, column: 639, scope: !5627, inlinedAt: !5416)
!5744 = !DILocation(line: 95, column: 634, scope: !5627, inlinedAt: !5416)
!5745 = !DILocation(line: 95, column: 646, scope: !5627, inlinedAt: !5416)
!5746 = !DILocation(line: 95, column: 608, scope: !5627, inlinedAt: !5416)
!5747 = !DILocation(line: 95, column: 690, scope: !5635, inlinedAt: !5416)
!5748 = !DILocation(line: 95, column: 689, scope: !5635, inlinedAt: !5416)
!5749 = !DILocation(line: 95, column: 672, scope: !5635, inlinedAt: !5416)
!5750 = !DILocation(line: 95, column: 675, scope: !5635, inlinedAt: !5416)
!5751 = !DILocation(line: 95, column: 687, scope: !5635, inlinedAt: !5416)
!5752 = !DILocation(line: 95, column: 710, scope: !5643, inlinedAt: !5416)
!5753 = !DILocation(line: 95, column: 713, scope: !5643, inlinedAt: !5416)
!5754 = !DILocation(line: 95, column: 720, scope: !5643, inlinedAt: !5416)
!5755 = !DILocation(line: 95, column: 726, scope: !5643, inlinedAt: !5416)
!5756 = !DILocation(line: 95, column: 733, scope: !5648, inlinedAt: !5416)
!5757 = !DILocation(line: 95, column: 736, scope: !5648, inlinedAt: !5416)
!5758 = !DILocation(line: 95, column: 740, scope: !5648, inlinedAt: !5416)
!5759 = !DILocation(line: 2232, column: 5, scope: !5393)
!5760 = !DILocation(line: 93, column: 757, scope: !5654, inlinedAt: !5420)
!5761 = !DILocation(line: 93, column: 760, scope: !5654, inlinedAt: !5420)
!5762 = !DILocation(line: 93, column: 764, scope: !5654, inlinedAt: !5420)
!5763 = !DILocation(line: 93, column: 768, scope: !5658, inlinedAt: !5420)
!5764 = !DILocation(line: 93, column: 771, scope: !5658, inlinedAt: !5420)
!5765 = !DILocation(line: 93, column: 784, scope: !5658, inlinedAt: !5420)
!5766 = !DILocation(line: 93, column: 787, scope: !5658, inlinedAt: !5420)
!5767 = !DILocation(line: 93, column: 782, scope: !5658, inlinedAt: !5420)
!5768 = !DILocation(line: 93, column: 794, scope: !5658, inlinedAt: !5420)
!5769 = !DILocation(line: 93, column: 756, scope: !5658, inlinedAt: !5420)
!5770 = !DILocation(line: 93, column: 838, scope: !5666, inlinedAt: !5420)
!5771 = !DILocation(line: 93, column: 837, scope: !5666, inlinedAt: !5420)
!5772 = !DILocation(line: 93, column: 820, scope: !5666, inlinedAt: !5420)
!5773 = !DILocation(line: 93, column: 823, scope: !5666, inlinedAt: !5420)
!5774 = !DILocation(line: 93, column: 808, scope: !5666, inlinedAt: !5420)
!5775 = !DILocation(line: 93, column: 835, scope: !5666, inlinedAt: !5420)
!5776 = !DILocation(line: 93, column: 876, scope: !5666, inlinedAt: !5420)
!5777 = !DILocation(line: 93, column: 882, scope: !5666, inlinedAt: !5420)
!5778 = !DILocation(line: 93, column: 875, scope: !5666, inlinedAt: !5420)
!5779 = !DILocation(line: 93, column: 858, scope: !5666, inlinedAt: !5420)
!5780 = !DILocation(line: 93, column: 861, scope: !5666, inlinedAt: !5420)
!5781 = !DILocation(line: 93, column: 846, scope: !5666, inlinedAt: !5420)
!5782 = !DILocation(line: 93, column: 873, scope: !5666, inlinedAt: !5420)
!5783 = !DILocation(line: 93, column: 917, scope: !5666, inlinedAt: !5420)
!5784 = !DILocation(line: 93, column: 923, scope: !5666, inlinedAt: !5420)
!5785 = !DILocation(line: 93, column: 916, scope: !5666, inlinedAt: !5420)
!5786 = !DILocation(line: 93, column: 899, scope: !5666, inlinedAt: !5420)
!5787 = !DILocation(line: 93, column: 902, scope: !5666, inlinedAt: !5420)
!5788 = !DILocation(line: 93, column: 914, scope: !5666, inlinedAt: !5420)
!5789 = !DILocation(line: 93, column: 941, scope: !5688, inlinedAt: !5420)
!5790 = !DILocation(line: 93, column: 944, scope: !5688, inlinedAt: !5420)
!5791 = !DILocation(line: 93, column: 951, scope: !5688, inlinedAt: !5420)
!5792 = !DILocation(line: 93, column: 957, scope: !5688, inlinedAt: !5420)
!5793 = !DILocation(line: 93, column: 964, scope: !5693, inlinedAt: !5420)
!5794 = !DILocation(line: 93, column: 967, scope: !5693, inlinedAt: !5420)
!5795 = !DILocation(line: 93, column: 971, scope: !5693, inlinedAt: !5420)
!5796 = !DILocation(line: 2233, column: 34, scope: !5393)
!5797 = !DILocation(line: 2233, column: 40, scope: !5393)
!5798 = !DILocation(line: 2233, column: 5, scope: !5393)
!5799 = !DILocation(line: 287, column: 9, scope: !5800, inlinedAt: !5427)
!5800 = distinct !DILexicalBlock(scope: !5423, file: !1415, line: 287, column: 9)
!5801 = !DILocation(line: 287, column: 12, scope: !5800, inlinedAt: !5427)
!5802 = !DILocation(line: 287, column: 9, scope: !5423, inlinedAt: !5427)
!5803 = !DILocation(line: 288, column: 9, scope: !5800, inlinedAt: !5427)
!5804 = !DILocation(line: 289, column: 15, scope: !5423, inlinedAt: !5427)
!5805 = !DILocation(line: 289, column: 18, scope: !5423, inlinedAt: !5427)
!5806 = !DILocation(line: 289, column: 31, scope: !5423, inlinedAt: !5427)
!5807 = !DILocation(line: 289, column: 34, scope: !5423, inlinedAt: !5427)
!5808 = !DILocation(line: 289, column: 29, scope: !5423, inlinedAt: !5427)
!5809 = !DILocation(line: 289, column: 45, scope: !5423, inlinedAt: !5427)
!5810 = !DILocation(line: 289, column: 44, scope: !5423, inlinedAt: !5427)
!5811 = !DILocation(line: 289, column: 42, scope: !5423, inlinedAt: !5427)
!5812 = !DILocation(line: 289, column: 14, scope: !5423, inlinedAt: !5427)
!5813 = !DILocation(line: 289, column: 54, scope: !5814, inlinedAt: !5427)
!5814 = !DILexicalBlockFile(scope: !5423, file: !1415, discriminator: 1)
!5815 = !DILocation(line: 289, column: 53, scope: !5814, inlinedAt: !5427)
!5816 = !DILocation(line: 289, column: 14, scope: !5814, inlinedAt: !5427)
!5817 = !DILocation(line: 289, column: 63, scope: !5818, inlinedAt: !5427)
!5818 = !DILexicalBlockFile(scope: !5423, file: !1415, discriminator: 2)
!5819 = !DILocation(line: 289, column: 66, scope: !5818, inlinedAt: !5427)
!5820 = !DILocation(line: 289, column: 79, scope: !5818, inlinedAt: !5427)
!5821 = !DILocation(line: 289, column: 82, scope: !5818, inlinedAt: !5427)
!5822 = !DILocation(line: 289, column: 77, scope: !5818, inlinedAt: !5427)
!5823 = !DILocation(line: 289, column: 14, scope: !5818, inlinedAt: !5427)
!5824 = !DILocation(line: 289, column: 14, scope: !5825, inlinedAt: !5427)
!5825 = !DILexicalBlockFile(scope: !5423, file: !1415, discriminator: 3)
!5826 = !DILocation(line: 289, column: 13, scope: !5825, inlinedAt: !5427)
!5827 = !DILocation(line: 289, column: 11, scope: !5825, inlinedAt: !5427)
!5828 = !DILocation(line: 290, column: 9, scope: !5829, inlinedAt: !5427)
!5829 = distinct !DILexicalBlock(scope: !5423, file: !1415, line: 290, column: 9)
!5830 = !DILocation(line: 290, column: 18, scope: !5829, inlinedAt: !5427)
!5831 = !DILocation(line: 290, column: 15, scope: !5829, inlinedAt: !5427)
!5832 = !DILocation(line: 290, column: 9, scope: !5423, inlinedAt: !5427)
!5833 = !DILocation(line: 291, column: 9, scope: !5829, inlinedAt: !5427)
!5834 = !DILocation(line: 291, column: 12, scope: !5829, inlinedAt: !5427)
!5835 = !DILocation(line: 291, column: 16, scope: !5829, inlinedAt: !5427)
!5836 = !DILocation(line: 292, column: 12, scope: !5423, inlinedAt: !5427)
!5837 = !DILocation(line: 292, column: 15, scope: !5423, inlinedAt: !5427)
!5838 = !DILocation(line: 292, column: 23, scope: !5423, inlinedAt: !5427)
!5839 = !DILocation(line: 292, column: 28, scope: !5423, inlinedAt: !5427)
!5840 = !DILocation(line: 292, column: 5, scope: !5423, inlinedAt: !5427)
!5841 = !DILocation(line: 293, column: 18, scope: !5423, inlinedAt: !5427)
!5842 = !DILocation(line: 293, column: 5, scope: !5423, inlinedAt: !5427)
!5843 = !DILocation(line: 293, column: 8, scope: !5423, inlinedAt: !5427)
!5844 = !DILocation(line: 293, column: 15, scope: !5423, inlinedAt: !5427)
!5845 = !DILocation(line: 294, column: 12, scope: !5423, inlinedAt: !5427)
!5846 = !DILocation(line: 294, column: 5, scope: !5423, inlinedAt: !5427)
!5847 = !DILocation(line: 295, column: 1, scope: !5423, inlinedAt: !5427)
!5848 = !DILocation(line: 2234, column: 32, scope: !5393)
!5849 = !DILocation(line: 2234, column: 37, scope: !5393)
!5850 = !DILocation(line: 2234, column: 5, scope: !5393)
!5851 = !DILocation(line: 92, column: 646, scope: !5438, inlinedAt: !5440)
!5852 = !DILocation(line: 92, column: 649, scope: !5438, inlinedAt: !5440)
!5853 = !DILocation(line: 92, column: 653, scope: !5438, inlinedAt: !5440)
!5854 = !DILocation(line: 92, column: 657, scope: !5855, inlinedAt: !5440)
!5855 = !DILexicalBlockFile(scope: !5438, file: !1415, discriminator: 1)
!5856 = !DILocation(line: 92, column: 660, scope: !5855, inlinedAt: !5440)
!5857 = !DILocation(line: 92, column: 673, scope: !5855, inlinedAt: !5440)
!5858 = !DILocation(line: 92, column: 676, scope: !5855, inlinedAt: !5440)
!5859 = !DILocation(line: 92, column: 671, scope: !5855, inlinedAt: !5440)
!5860 = !DILocation(line: 92, column: 683, scope: !5855, inlinedAt: !5440)
!5861 = !DILocation(line: 92, column: 645, scope: !5855, inlinedAt: !5440)
!5862 = !DILocation(line: 92, column: 749, scope: !5436, inlinedAt: !5440)
!5863 = !DILocation(line: 92, column: 738, scope: !5436, inlinedAt: !5440)
!5864 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !5435)
!5865 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !5435)
!5866 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !5435)
!5867 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !5435)
!5868 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !5435)
!5869 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !5435)
!5870 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !5435)
!5871 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !5435)
!5872 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !5435)
!5873 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !5435)
!5874 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !5435)
!5875 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !5435)
!5876 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !5435)
!5877 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !5435)
!5878 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !5435)
!5879 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !5435)
!5880 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !5435)
!5881 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !5435)
!5882 = !DILocation(line: 92, column: 719, scope: !5436, inlinedAt: !5440)
!5883 = !DILocation(line: 92, column: 722, scope: !5436, inlinedAt: !5440)
!5884 = !DILocation(line: 92, column: 732, scope: !5436, inlinedAt: !5440)
!5885 = !DILocation(line: 92, column: 735, scope: !5436, inlinedAt: !5440)
!5886 = !DILocation(line: 92, column: 759, scope: !5436, inlinedAt: !5440)
!5887 = !DILocation(line: 92, column: 762, scope: !5436, inlinedAt: !5440)
!5888 = !DILocation(line: 92, column: 769, scope: !5436, inlinedAt: !5440)
!5889 = !DILocation(line: 92, column: 775, scope: !5436, inlinedAt: !5440)
!5890 = !DILocation(line: 92, column: 782, scope: !5891, inlinedAt: !5440)
!5891 = !DILexicalBlockFile(scope: !5438, file: !1415, discriminator: 3)
!5892 = !DILocation(line: 92, column: 785, scope: !5891, inlinedAt: !5440)
!5893 = !DILocation(line: 92, column: 789, scope: !5891, inlinedAt: !5440)
!5894 = !DILocation(line: 2236, column: 5, scope: !5393)
!5895 = !DILocation(line: 2237, column: 1, scope: !5393)
!5896 = distinct !DISubprogram(name: "handle_notify", scope: !64, file: !64, line: 2239, type: !5007, isLocal: true, isDefinition: true, scopeLine: 2240, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5897 = !DILocalVariable(name: "g", arg: 1, scope: !5898, file: !1415, line: 164, type: !1444)
!5898 = distinct !DISubprogram(name: "bytestream2_skip", scope: !1415, file: !1415, line: 164, type: !5899, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5899 = !DISubroutineType(types: !5900)
!5900 = !{null, !1444, !109}
!5901 = !DILocation(line: 164, column: 84, scope: !5898, inlinedAt: !5902)
!5902 = distinct !DILocation(line: 2268, column: 17, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5904, file: !64, line: 2260, column: 58)
!5904 = distinct !DILexicalBlock(scope: !5905, file: !64, line: 2254, column: 69)
!5905 = distinct !DILexicalBlock(scope: !5906, file: !64, line: 2254, column: 13)
!5906 = distinct !DILexicalBlock(scope: !5907, file: !64, line: 2252, column: 47)
!5907 = distinct !DILexicalBlock(scope: !5896, file: !64, line: 2252, column: 9)
!5908 = !DILocalVariable(name: "size", arg: 2, scope: !5898, file: !1415, line: 165, type: !109)
!5909 = !DILocation(line: 165, column: 60, scope: !5898, inlinedAt: !5902)
!5910 = !DILocation(line: 93, column: 95, scope: !1414, inlinedAt: !5911)
!5911 = distinct !DILocation(line: 93, column: 1086, scope: !5912, inlinedAt: !5913)
!5912 = distinct !DISubprogram(name: "bytestream2_get_be24u", scope: !1415, file: !1415, line: 93, type: !2999, isLocal: true, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5913 = distinct !DILocation(line: 93, column: 1304, scope: !5914, inlinedAt: !5916)
!5914 = !DILexicalBlockFile(scope: !5915, file: !1415, discriminator: 2)
!5915 = distinct !DISubprogram(name: "bytestream2_get_be24", scope: !1415, file: !1415, line: 93, type: !2999, isLocal: true, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5916 = distinct !DILocation(line: 2279, column: 17, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5904, file: !64, line: 2279, column: 17)
!5918 = !DILocalVariable(name: "g", arg: 1, scope: !5912, file: !1415, line: 93, type: !1444)
!5919 = !DILocation(line: 93, column: 1074, scope: !5912, inlinedAt: !5913)
!5920 = !DILocalVariable(name: "g", arg: 1, scope: !5915, file: !1415, line: 93, type: !1444)
!5921 = !DILocation(line: 93, column: 1216, scope: !5915, inlinedAt: !5916)
!5922 = !DILocation(line: 154, column: 102, scope: !2998, inlinedAt: !5923)
!5923 = distinct !DILocation(line: 2260, column: 20, scope: !5924)
!5924 = !DILexicalBlockFile(scope: !5904, file: !64, discriminator: 1)
!5925 = !DILocation(line: 164, column: 84, scope: !5898, inlinedAt: !5926)
!5926 = distinct !DILocation(line: 2259, column: 13, scope: !5904)
!5927 = !DILocation(line: 165, column: 60, scope: !5898, inlinedAt: !5926)
!5928 = !DILocation(line: 95, column: 95, scope: !1435, inlinedAt: !5929)
!5929 = distinct !DILocation(line: 95, column: 855, scope: !5930, inlinedAt: !5931)
!5930 = distinct !DISubprogram(name: "bytestream2_get_byteu", scope: !1415, file: !1415, line: 95, type: !2999, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5931 = distinct !DILocation(line: 95, column: 1073, scope: !5932, inlinedAt: !5934)
!5932 = !DILexicalBlockFile(scope: !5933, file: !1415, discriminator: 2)
!5933 = distinct !DISubprogram(name: "bytestream2_get_byte", scope: !1415, file: !1415, line: 95, type: !2999, isLocal: true, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!5934 = distinct !DILocation(line: 2254, column: 13, scope: !5905)
!5935 = !DILocalVariable(name: "g", arg: 1, scope: !5930, file: !1415, line: 95, type: !1444)
!5936 = !DILocation(line: 95, column: 843, scope: !5930, inlinedAt: !5931)
!5937 = !DILocalVariable(name: "g", arg: 1, scope: !5933, file: !1415, line: 95, type: !1444)
!5938 = !DILocation(line: 95, column: 985, scope: !5933, inlinedAt: !5934)
!5939 = !DILocation(line: 133, column: 84, scope: !1441, inlinedAt: !5940)
!5940 = distinct !DILocation(line: 2247, column: 5, scope: !5896)
!5941 = !DILocation(line: 134, column: 62, scope: !1441, inlinedAt: !5940)
!5942 = !DILocation(line: 135, column: 51, scope: !1441, inlinedAt: !5940)
!5943 = !DILocalVariable(name: "s", arg: 1, scope: !5896, file: !64, line: 2239, type: !154)
!5944 = !DILocation(line: 2239, column: 38, scope: !5896)
!5945 = !DILocalVariable(name: "pkt", arg: 2, scope: !5896, file: !64, line: 2239, type: !393)
!5946 = !DILocation(line: 2239, column: 53, scope: !5896)
!5947 = !DILocalVariable(name: "rt", scope: !5896, file: !64, line: 2241, type: !385)
!5948 = !DILocation(line: 2241, column: 18, scope: !5896)
!5949 = !DILocation(line: 2241, column: 23, scope: !5896)
!5950 = !DILocation(line: 2241, column: 26, scope: !5896)
!5951 = !DILocalVariable(name: "commandbuffer", scope: !5896, file: !64, line: 2242, type: !1791)
!5952 = !DILocation(line: 2242, column: 13, scope: !5896)
!5953 = !DILocalVariable(name: "statusmsg", scope: !5896, file: !64, line: 2243, type: !4858)
!5954 = !DILocation(line: 2243, column: 10, scope: !5896)
!5955 = !DILocalVariable(name: "stringlen", scope: !5896, file: !64, line: 2244, type: !108)
!5956 = !DILocation(line: 2244, column: 9, scope: !5896)
!5957 = !DILocalVariable(name: "ret", scope: !5896, file: !64, line: 2244, type: !108)
!5958 = !DILocation(line: 2244, column: 20, scope: !5896)
!5959 = !DILocalVariable(name: "skip", scope: !5896, file: !64, line: 2244, type: !108)
!5960 = !DILocation(line: 2244, column: 25, scope: !5896)
!5961 = !DILocalVariable(name: "gbc", scope: !5896, file: !64, line: 2245, type: !1445)
!5962 = !DILocation(line: 2245, column: 20, scope: !5896)
!5963 = !DILocation(line: 2247, column: 28, scope: !5896)
!5964 = !DILocation(line: 2247, column: 33, scope: !5896)
!5965 = !DILocation(line: 2247, column: 39, scope: !5896)
!5966 = !DILocation(line: 2247, column: 44, scope: !5896)
!5967 = !DILocation(line: 2247, column: 5, scope: !5896)
!5968 = !DILocation(line: 137, column: 16, scope: !1805, inlinedAt: !5940)
!5969 = !DILocation(line: 137, column: 25, scope: !1805, inlinedAt: !5940)
!5970 = !DILocation(line: 137, column: 14, scope: !1805, inlinedAt: !5940)
!5971 = !DILocation(line: 137, column: 34, scope: !1811, inlinedAt: !5940)
!5972 = !DILocation(line: 137, column: 95, scope: !1814, inlinedAt: !5940)
!5973 = !DILocation(line: 137, column: 95, scope: !1811, inlinedAt: !5940)
!5974 = !DILocation(line: 138, column: 17, scope: !1441, inlinedAt: !5940)
!5975 = !DILocation(line: 138, column: 5, scope: !1441, inlinedAt: !5940)
!5976 = !DILocation(line: 138, column: 8, scope: !1441, inlinedAt: !5940)
!5977 = !DILocation(line: 138, column: 15, scope: !1441, inlinedAt: !5940)
!5978 = !DILocation(line: 139, column: 23, scope: !1441, inlinedAt: !5940)
!5979 = !DILocation(line: 139, column: 5, scope: !1441, inlinedAt: !5940)
!5980 = !DILocation(line: 139, column: 8, scope: !1441, inlinedAt: !5940)
!5981 = !DILocation(line: 139, column: 21, scope: !1441, inlinedAt: !5940)
!5982 = !DILocation(line: 140, column: 21, scope: !1441, inlinedAt: !5940)
!5983 = !DILocation(line: 140, column: 27, scope: !1441, inlinedAt: !5940)
!5984 = !DILocation(line: 140, column: 25, scope: !1441, inlinedAt: !5940)
!5985 = !DILocation(line: 140, column: 5, scope: !1441, inlinedAt: !5940)
!5986 = !DILocation(line: 140, column: 8, scope: !1441, inlinedAt: !5940)
!5987 = !DILocation(line: 140, column: 19, scope: !1441, inlinedAt: !5940)
!5988 = !DILocation(line: 2248, column: 34, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5896, file: !64, line: 2248, column: 9)
!5990 = !DILocation(line: 2248, column: 9, scope: !5989)
!5991 = !DILocation(line: 2248, column: 9, scope: !5896)
!5992 = !DILocation(line: 2250, column: 9, scope: !5989)
!5993 = !DILocation(line: 2252, column: 17, scope: !5907)
!5994 = !DILocation(line: 2252, column: 10, scope: !5907)
!5995 = !DILocation(line: 2252, column: 9, scope: !5896)
!5996 = !DILocation(line: 2254, column: 13, scope: !5905)
!5997 = !DILocation(line: 95, column: 994, scope: !5998, inlinedAt: !5934)
!5998 = distinct !DILexicalBlock(scope: !5933, file: !1415, line: 95, column: 994)
!5999 = !DILocation(line: 95, column: 997, scope: !5998, inlinedAt: !5934)
!6000 = !DILocation(line: 95, column: 1010, scope: !5998, inlinedAt: !5934)
!6001 = !DILocation(line: 95, column: 1013, scope: !5998, inlinedAt: !5934)
!6002 = !DILocation(line: 95, column: 1008, scope: !5998, inlinedAt: !5934)
!6003 = !DILocation(line: 95, column: 1020, scope: !5998, inlinedAt: !5934)
!6004 = !DILocation(line: 95, column: 994, scope: !5933, inlinedAt: !5934)
!6005 = !DILocation(line: 95, column: 1039, scope: !6006, inlinedAt: !5934)
!6006 = !DILexicalBlockFile(scope: !6007, file: !1415, discriminator: 1)
!6007 = distinct !DILexicalBlock(scope: !5998, file: !1415, line: 95, column: 1025)
!6008 = !DILocation(line: 95, column: 1042, scope: !6006, inlinedAt: !5934)
!6009 = !DILocation(line: 95, column: 1027, scope: !6006, inlinedAt: !5934)
!6010 = !DILocation(line: 95, column: 1030, scope: !6006, inlinedAt: !5934)
!6011 = !DILocation(line: 95, column: 1037, scope: !6006, inlinedAt: !5934)
!6012 = !DILocation(line: 95, column: 1054, scope: !6006, inlinedAt: !5934)
!6013 = !DILocation(line: 95, column: 1095, scope: !5932, inlinedAt: !5934)
!6014 = !DILocation(line: 95, column: 1073, scope: !5932, inlinedAt: !5934)
!6015 = !DILocation(line: 95, column: 876, scope: !5930, inlinedAt: !5931)
!6016 = !DILocation(line: 95, column: 879, scope: !5930, inlinedAt: !5931)
!6017 = !DILocation(line: 95, column: 855, scope: !5930, inlinedAt: !5931)
!6018 = !DILocation(line: 95, column: 102, scope: !1435, inlinedAt: !5929)
!6019 = !DILocation(line: 95, column: 105, scope: !1435, inlinedAt: !5929)
!6020 = !DILocation(line: 95, column: 138, scope: !1435, inlinedAt: !5929)
!6021 = !DILocation(line: 95, column: 137, scope: !1435, inlinedAt: !5929)
!6022 = !DILocation(line: 95, column: 140, scope: !1435, inlinedAt: !5929)
!6023 = !DILocation(line: 95, column: 119, scope: !1435, inlinedAt: !5929)
!6024 = !DILocation(line: 95, column: 118, scope: !1435, inlinedAt: !5929)
!6025 = !DILocation(line: 95, column: 1066, scope: !5932, inlinedAt: !5934)
!6026 = !DILocation(line: 95, column: 1099, scope: !6027, inlinedAt: !5934)
!6027 = !DILexicalBlockFile(scope: !5933, file: !1415, discriminator: 3)
!6028 = !DILocation(line: 2254, column: 40, scope: !5905)
!6029 = !DILocation(line: 2254, column: 13, scope: !5906)
!6030 = !DILocation(line: 2257, column: 13, scope: !5904)
!6031 = !DILocation(line: 2257, column: 17, scope: !5904)
!6032 = !DILocation(line: 2257, column: 35, scope: !5904)
!6033 = !DILocation(line: 2259, column: 13, scope: !5904)
!6034 = !DILocation(line: 167, column: 20, scope: !5898, inlinedAt: !5926)
!6035 = !DILocation(line: 167, column: 23, scope: !5898, inlinedAt: !5926)
!6036 = !DILocation(line: 167, column: 36, scope: !5898, inlinedAt: !5926)
!6037 = !DILocation(line: 167, column: 39, scope: !5898, inlinedAt: !5926)
!6038 = !DILocation(line: 167, column: 34, scope: !5898, inlinedAt: !5926)
!6039 = !DILocation(line: 167, column: 50, scope: !5898, inlinedAt: !5926)
!6040 = !DILocation(line: 167, column: 49, scope: !5898, inlinedAt: !5926)
!6041 = !DILocation(line: 167, column: 47, scope: !5898, inlinedAt: !5926)
!6042 = !DILocation(line: 167, column: 19, scope: !5898, inlinedAt: !5926)
!6043 = !DILocation(line: 167, column: 59, scope: !6044, inlinedAt: !5926)
!6044 = !DILexicalBlockFile(scope: !5898, file: !1415, discriminator: 1)
!6045 = !DILocation(line: 167, column: 58, scope: !6044, inlinedAt: !5926)
!6046 = !DILocation(line: 167, column: 19, scope: !6044, inlinedAt: !5926)
!6047 = !DILocation(line: 167, column: 68, scope: !6048, inlinedAt: !5926)
!6048 = !DILexicalBlockFile(scope: !5898, file: !1415, discriminator: 2)
!6049 = !DILocation(line: 167, column: 71, scope: !6048, inlinedAt: !5926)
!6050 = !DILocation(line: 167, column: 84, scope: !6048, inlinedAt: !5926)
!6051 = !DILocation(line: 167, column: 87, scope: !6048, inlinedAt: !5926)
!6052 = !DILocation(line: 167, column: 82, scope: !6048, inlinedAt: !5926)
!6053 = !DILocation(line: 167, column: 19, scope: !6048, inlinedAt: !5926)
!6054 = !DILocation(line: 167, column: 19, scope: !6055, inlinedAt: !5926)
!6055 = !DILexicalBlockFile(scope: !5898, file: !1415, discriminator: 3)
!6056 = !DILocation(line: 167, column: 5, scope: !6055, inlinedAt: !5926)
!6057 = !DILocation(line: 167, column: 8, scope: !6055, inlinedAt: !5926)
!6058 = !DILocation(line: 167, column: 15, scope: !6055, inlinedAt: !5926)
!6059 = !DILocation(line: 2260, column: 13, scope: !5904)
!6060 = !DILocation(line: 2260, column: 20, scope: !5924)
!6061 = !DILocation(line: 156, column: 12, scope: !2998, inlinedAt: !5923)
!6062 = !DILocation(line: 156, column: 15, scope: !2998, inlinedAt: !5923)
!6063 = !DILocation(line: 156, column: 28, scope: !2998, inlinedAt: !5923)
!6064 = !DILocation(line: 156, column: 31, scope: !2998, inlinedAt: !5923)
!6065 = !DILocation(line: 156, column: 26, scope: !2998, inlinedAt: !5923)
!6066 = !DILocation(line: 2260, column: 53, scope: !5924)
!6067 = !DILocation(line: 2260, column: 13, scope: !5924)
!6068 = !DILocation(line: 2261, column: 45, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !5903, file: !64, line: 2261, column: 21)
!6070 = !DILocation(line: 2261, column: 21, scope: !6069)
!6071 = !DILocation(line: 2261, column: 21, scope: !5903)
!6072 = !DILocation(line: 2263, column: 21, scope: !6069)
!6073 = !DILocation(line: 2265, column: 49, scope: !5903)
!6074 = !DILocation(line: 2265, column: 61, scope: !5903)
!6075 = !DILocation(line: 2265, column: 29, scope: !5903)
!6076 = !DILocation(line: 2265, column: 27, scope: !5903)
!6077 = !DILocation(line: 2266, column: 21, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !5903, file: !64, line: 2266, column: 21)
!6079 = !DILocation(line: 2266, column: 31, scope: !6078)
!6080 = !DILocation(line: 2266, column: 21, scope: !5903)
!6081 = !DILocation(line: 2267, column: 21, scope: !6078)
!6082 = !DILocation(line: 2268, column: 40, scope: !5903)
!6083 = !DILocation(line: 2268, column: 17, scope: !5903)
!6084 = !DILocation(line: 167, column: 20, scope: !5898, inlinedAt: !5902)
!6085 = !DILocation(line: 167, column: 23, scope: !5898, inlinedAt: !5902)
!6086 = !DILocation(line: 167, column: 36, scope: !5898, inlinedAt: !5902)
!6087 = !DILocation(line: 167, column: 39, scope: !5898, inlinedAt: !5902)
!6088 = !DILocation(line: 167, column: 34, scope: !5898, inlinedAt: !5902)
!6089 = !DILocation(line: 167, column: 50, scope: !5898, inlinedAt: !5902)
!6090 = !DILocation(line: 167, column: 49, scope: !5898, inlinedAt: !5902)
!6091 = !DILocation(line: 167, column: 47, scope: !5898, inlinedAt: !5902)
!6092 = !DILocation(line: 167, column: 19, scope: !5898, inlinedAt: !5902)
!6093 = !DILocation(line: 167, column: 59, scope: !6044, inlinedAt: !5902)
!6094 = !DILocation(line: 167, column: 58, scope: !6044, inlinedAt: !5902)
!6095 = !DILocation(line: 167, column: 19, scope: !6044, inlinedAt: !5902)
!6096 = !DILocation(line: 167, column: 68, scope: !6048, inlinedAt: !5902)
!6097 = !DILocation(line: 167, column: 71, scope: !6048, inlinedAt: !5902)
!6098 = !DILocation(line: 167, column: 84, scope: !6048, inlinedAt: !5902)
!6099 = !DILocation(line: 167, column: 87, scope: !6048, inlinedAt: !5902)
!6100 = !DILocation(line: 167, column: 82, scope: !6048, inlinedAt: !5902)
!6101 = !DILocation(line: 167, column: 19, scope: !6048, inlinedAt: !5902)
!6102 = !DILocation(line: 167, column: 19, scope: !6055, inlinedAt: !5902)
!6103 = !DILocation(line: 167, column: 5, scope: !6055, inlinedAt: !5902)
!6104 = !DILocation(line: 167, column: 8, scope: !6055, inlinedAt: !5902)
!6105 = !DILocation(line: 167, column: 15, scope: !6055, inlinedAt: !5902)
!6106 = !DILocation(line: 2272, column: 29, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !5903, file: !64, line: 2272, column: 21)
!6108 = !DILocation(line: 2272, column: 22, scope: !6107)
!6109 = !DILocation(line: 2272, column: 21, scope: !5903)
!6110 = !DILocation(line: 2273, column: 21, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6107, file: !64, line: 2272, column: 57)
!6112 = !DILocation(line: 2273, column: 25, scope: !6111)
!6113 = !DILocation(line: 2273, column: 35, scope: !6111)
!6114 = !DILocation(line: 2274, column: 17, scope: !6111)
!6115 = !DILocation(line: 2275, column: 29, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !5903, file: !64, line: 2275, column: 21)
!6117 = !DILocation(line: 2275, column: 22, scope: !6116)
!6118 = !DILocation(line: 2275, column: 21, scope: !5903)
!6119 = !DILocation(line: 2276, column: 21, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6116, file: !64, line: 2275, column: 57)
!6121 = !DILocation(line: 2276, column: 25, scope: !6120)
!6122 = !DILocation(line: 2276, column: 35, scope: !6120)
!6123 = !DILocation(line: 2277, column: 17, scope: !6120)
!6124 = !DILocation(line: 2260, column: 13, scope: !6125)
!6125 = !DILexicalBlockFile(scope: !5904, file: !64, discriminator: 2)
!6126 = distinct !{!6126, !6059}
!6127 = !DILocation(line: 2279, column: 17, scope: !5917)
!6128 = !DILocation(line: 93, column: 1225, scope: !6129, inlinedAt: !5916)
!6129 = distinct !DILexicalBlock(scope: !5915, file: !1415, line: 93, column: 1225)
!6130 = !DILocation(line: 93, column: 1228, scope: !6129, inlinedAt: !5916)
!6131 = !DILocation(line: 93, column: 1241, scope: !6129, inlinedAt: !5916)
!6132 = !DILocation(line: 93, column: 1244, scope: !6129, inlinedAt: !5916)
!6133 = !DILocation(line: 93, column: 1239, scope: !6129, inlinedAt: !5916)
!6134 = !DILocation(line: 93, column: 1251, scope: !6129, inlinedAt: !5916)
!6135 = !DILocation(line: 93, column: 1225, scope: !5915, inlinedAt: !5916)
!6136 = !DILocation(line: 93, column: 1270, scope: !6137, inlinedAt: !5916)
!6137 = !DILexicalBlockFile(scope: !6138, file: !1415, discriminator: 1)
!6138 = distinct !DILexicalBlock(scope: !6129, file: !1415, line: 93, column: 1256)
!6139 = !DILocation(line: 93, column: 1273, scope: !6137, inlinedAt: !5916)
!6140 = !DILocation(line: 93, column: 1258, scope: !6137, inlinedAt: !5916)
!6141 = !DILocation(line: 93, column: 1261, scope: !6137, inlinedAt: !5916)
!6142 = !DILocation(line: 93, column: 1268, scope: !6137, inlinedAt: !5916)
!6143 = !DILocation(line: 93, column: 1285, scope: !6137, inlinedAt: !5916)
!6144 = !DILocation(line: 93, column: 1326, scope: !5914, inlinedAt: !5916)
!6145 = !DILocation(line: 93, column: 1304, scope: !5914, inlinedAt: !5916)
!6146 = !DILocation(line: 93, column: 1107, scope: !5912, inlinedAt: !5913)
!6147 = !DILocation(line: 93, column: 1110, scope: !5912, inlinedAt: !5913)
!6148 = !DILocation(line: 93, column: 1086, scope: !5912, inlinedAt: !5913)
!6149 = !DILocation(line: 93, column: 102, scope: !1414, inlinedAt: !5911)
!6150 = !DILocation(line: 93, column: 105, scope: !1414, inlinedAt: !5911)
!6151 = !DILocation(line: 93, column: 139, scope: !1414, inlinedAt: !5911)
!6152 = !DILocation(line: 93, column: 138, scope: !1414, inlinedAt: !5911)
!6153 = !DILocation(line: 93, column: 141, scope: !1414, inlinedAt: !5911)
!6154 = !DILocation(line: 93, column: 120, scope: !1414, inlinedAt: !5911)
!6155 = !DILocation(line: 93, column: 150, scope: !1414, inlinedAt: !5911)
!6156 = !DILocation(line: 93, column: 179, scope: !1414, inlinedAt: !5911)
!6157 = !DILocation(line: 93, column: 178, scope: !1414, inlinedAt: !5911)
!6158 = !DILocation(line: 93, column: 181, scope: !1414, inlinedAt: !5911)
!6159 = !DILocation(line: 93, column: 160, scope: !1414, inlinedAt: !5911)
!6160 = !DILocation(line: 93, column: 190, scope: !1414, inlinedAt: !5911)
!6161 = !DILocation(line: 93, column: 157, scope: !1414, inlinedAt: !5911)
!6162 = !DILocation(line: 93, column: 217, scope: !1414, inlinedAt: !5911)
!6163 = !DILocation(line: 93, column: 216, scope: !1414, inlinedAt: !5911)
!6164 = !DILocation(line: 93, column: 219, scope: !1414, inlinedAt: !5911)
!6165 = !DILocation(line: 93, column: 198, scope: !1414, inlinedAt: !5911)
!6166 = !DILocation(line: 93, column: 196, scope: !1414, inlinedAt: !5911)
!6167 = !DILocation(line: 93, column: 1297, scope: !5914, inlinedAt: !5916)
!6168 = !DILocation(line: 93, column: 1330, scope: !6169, inlinedAt: !5916)
!6169 = !DILexicalBlockFile(scope: !5915, file: !1415, discriminator: 3)
!6170 = !DILocation(line: 2279, column: 44, scope: !5917)
!6171 = !DILocation(line: 2279, column: 17, scope: !5904)
!6172 = !DILocation(line: 2280, column: 17, scope: !5917)
!6173 = !DILocation(line: 2281, column: 9, scope: !5904)
!6174 = !DILocation(line: 2282, column: 5, scope: !5906)
!6175 = !DILocation(line: 2285, column: 17, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !5896, file: !64, line: 2285, column: 9)
!6177 = !DILocation(line: 2285, column: 10, scope: !6176)
!6178 = !DILocation(line: 2285, column: 9, scope: !5896)
!6179 = !DILocation(line: 2286, column: 20, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6176, file: !64, line: 2285, column: 50)
!6181 = !DILocation(line: 2286, column: 29, scope: !6180)
!6182 = !DILocation(line: 2286, column: 34, scope: !6180)
!6183 = !DILocation(line: 2286, column: 27, scope: !6180)
!6184 = !DILocation(line: 2286, column: 16, scope: !6180)
!6185 = !DILocation(line: 2286, column: 14, scope: !6180)
!6186 = !DILocation(line: 2287, column: 40, scope: !6180)
!6187 = !DILocation(line: 2287, column: 15, scope: !6180)
!6188 = !DILocation(line: 2287, column: 13, scope: !6180)
!6189 = !DILocation(line: 2289, column: 13, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6180, file: !64, line: 2289, column: 13)
!6191 = !DILocation(line: 2289, column: 17, scope: !6190)
!6192 = !DILocation(line: 2289, column: 13, scope: !6180)
!6193 = !DILocation(line: 2290, column: 13, scope: !6190)
!6194 = !DILocation(line: 2291, column: 5, scope: !6180)
!6195 = !DILocation(line: 2293, column: 28, scope: !5896)
!6196 = !DILocation(line: 2293, column: 32, scope: !5896)
!6197 = !DILocation(line: 2293, column: 37, scope: !5896)
!6198 = !DILocation(line: 2293, column: 12, scope: !5896)
!6199 = !DILocation(line: 2293, column: 5, scope: !5896)
!6200 = !DILocation(line: 2294, column: 1, scope: !5896)
!6201 = distinct !DISubprogram(name: "handle_metadata", scope: !64, file: !64, line: 2347, type: !6202, isLocal: true, isDefinition: true, scopeLine: 2348, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!6202 = !DISubroutineType(types: !6203)
!6203 = !{!108, !385, !393}
!6204 = !DILocation(line: 93, column: 95, scope: !1414, inlinedAt: !6205)
!6205 = distinct !DILocation(line: 2370, column: 16, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6201, file: !64, line: 2368, column: 47)
!6207 = !DILocation(line: 93, column: 95, scope: !1414, inlinedAt: !6208)
!6208 = distinct !DILocation(line: 2371, column: 15, scope: !6206)
!6209 = !DILocation(line: 95, column: 95, scope: !1435, inlinedAt: !6210)
!6210 = distinct !DILocation(line: 2372, column: 16, scope: !6206)
!6211 = !DILocation(line: 95, column: 233, scope: !2965, inlinedAt: !6212)
!6212 = distinct !DILocation(line: 2379, column: 9, scope: !6206)
!6213 = !DILocation(line: 95, column: 255, scope: !2965, inlinedAt: !6212)
!6214 = !DILocation(line: 93, column: 312, scope: !3797, inlinedAt: !6215)
!6215 = distinct !DILocation(line: 2380, column: 9, scope: !6206)
!6216 = !DILocation(line: 93, column: 334, scope: !3797, inlinedAt: !6215)
!6217 = !DILocation(line: 93, column: 312, scope: !3797, inlinedAt: !6218)
!6218 = distinct !DILocation(line: 2381, column: 9, scope: !6206)
!6219 = !DILocation(line: 93, column: 334, scope: !3797, inlinedAt: !6218)
!6220 = !DILocation(line: 95, column: 233, scope: !2965, inlinedAt: !6221)
!6221 = distinct !DILocation(line: 2382, column: 9, scope: !6206)
!6222 = !DILocation(line: 95, column: 255, scope: !2965, inlinedAt: !6221)
!6223 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !6224)
!6224 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !6225)
!6225 = distinct !DILocation(line: 2385, column: 9, scope: !6206)
!6226 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !6225)
!6227 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !6225)
!6228 = !DILocation(line: 95, column: 95, scope: !1435, inlinedAt: !6229)
!6229 = distinct !DILocation(line: 2369, column: 16, scope: !6206)
!6230 = !DILocalVariable(name: "rt", arg: 1, scope: !6201, file: !64, line: 2347, type: !385)
!6231 = !DILocation(line: 2347, column: 41, scope: !6201)
!6232 = !DILocalVariable(name: "pkt", arg: 2, scope: !6201, file: !64, line: 2347, type: !393)
!6233 = !DILocation(line: 2347, column: 57, scope: !6201)
!6234 = !DILocalVariable(name: "ret", scope: !6201, file: !64, line: 2349, type: !108)
!6235 = !DILocation(line: 2349, column: 9, scope: !6201)
!6236 = !DILocalVariable(name: "old_flv_size", scope: !6201, file: !64, line: 2349, type: !108)
!6237 = !DILocation(line: 2349, column: 14, scope: !6201)
!6238 = !DILocalVariable(name: "type", scope: !6201, file: !64, line: 2349, type: !108)
!6239 = !DILocation(line: 2349, column: 28, scope: !6201)
!6240 = !DILocalVariable(name: "next", scope: !6201, file: !64, line: 2350, type: !131)
!6241 = !DILocation(line: 2350, column: 20, scope: !6201)
!6242 = !DILocalVariable(name: "p", scope: !6201, file: !64, line: 2351, type: !110)
!6243 = !DILocation(line: 2351, column: 14, scope: !6201)
!6244 = !DILocalVariable(name: "size", scope: !6201, file: !64, line: 2352, type: !119)
!6245 = !DILocation(line: 2352, column: 14, scope: !6201)
!6246 = !DILocalVariable(name: "ts", scope: !6201, file: !64, line: 2353, type: !119)
!6247 = !DILocation(line: 2353, column: 14, scope: !6201)
!6248 = !DILocalVariable(name: "cts", scope: !6201, file: !64, line: 2353, type: !119)
!6249 = !DILocation(line: 2353, column: 18, scope: !6201)
!6250 = !DILocalVariable(name: "pts", scope: !6201, file: !64, line: 2353, type: !119)
!6251 = !DILocation(line: 2353, column: 23, scope: !6201)
!6252 = !DILocation(line: 2355, column: 34, scope: !6201)
!6253 = !DILocation(line: 2355, column: 38, scope: !6201)
!6254 = !DILocation(line: 2355, column: 43, scope: !6201)
!6255 = !DILocation(line: 2355, column: 20, scope: !6201)
!6256 = !DILocation(line: 2355, column: 18, scope: !6201)
!6257 = !DILocation(line: 2357, column: 29, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6201, file: !64, line: 2357, column: 9)
!6259 = !DILocation(line: 2357, column: 33, scope: !6258)
!6260 = !DILocation(line: 2357, column: 28, scope: !6258)
!6261 = !DILocation(line: 2357, column: 43, scope: !6258)
!6262 = !DILocation(line: 2357, column: 47, scope: !6258)
!6263 = !DILocation(line: 2357, column: 16, scope: !6258)
!6264 = !DILocation(line: 2357, column: 14, scope: !6258)
!6265 = !DILocation(line: 2357, column: 58, scope: !6258)
!6266 = !DILocation(line: 2357, column: 9, scope: !6201)
!6267 = !DILocation(line: 2358, column: 24, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6258, file: !64, line: 2357, column: 63)
!6269 = !DILocation(line: 2358, column: 28, scope: !6268)
!6270 = !DILocation(line: 2358, column: 36, scope: !6268)
!6271 = !DILocation(line: 2358, column: 9, scope: !6268)
!6272 = !DILocation(line: 2358, column: 13, scope: !6268)
!6273 = !DILocation(line: 2358, column: 22, scope: !6268)
!6274 = !DILocation(line: 2359, column: 16, scope: !6268)
!6275 = !DILocation(line: 2359, column: 9, scope: !6268)
!6276 = !DILocation(line: 2362, column: 12, scope: !6201)
!6277 = !DILocation(line: 2362, column: 17, scope: !6201)
!6278 = !DILocation(line: 2362, column: 10, scope: !6201)
!6279 = !DILocation(line: 2363, column: 9, scope: !6201)
!6280 = !DILocation(line: 2363, column: 13, scope: !6201)
!6281 = !DILocation(line: 2363, column: 24, scope: !6201)
!6282 = !DILocation(line: 2363, column: 22, scope: !6201)
!6283 = !DILocation(line: 2363, column: 7, scope: !6201)
!6284 = !DILocation(line: 2366, column: 10, scope: !6201)
!6285 = !DILocation(line: 2366, column: 15, scope: !6201)
!6286 = !DILocation(line: 2366, column: 8, scope: !6201)
!6287 = !DILocation(line: 2368, column: 5, scope: !6201)
!6288 = !DILocation(line: 2368, column: 12, scope: !6289)
!6289 = !DILexicalBlockFile(scope: !6201, file: !64, discriminator: 1)
!6290 = !DILocation(line: 2368, column: 19, scope: !6289)
!6291 = !DILocation(line: 2368, column: 24, scope: !6289)
!6292 = !DILocation(line: 2368, column: 17, scope: !6289)
!6293 = !DILocation(line: 2368, column: 31, scope: !6289)
!6294 = !DILocation(line: 2368, column: 36, scope: !6289)
!6295 = !DILocation(line: 2368, column: 41, scope: !6289)
!6296 = !DILocation(line: 2368, column: 29, scope: !6289)
!6297 = !DILocation(line: 2368, column: 5, scope: !6289)
!6298 = !DILocation(line: 2369, column: 16, scope: !6206)
!6299 = !DILocation(line: 95, column: 102, scope: !1435, inlinedAt: !6229)
!6300 = !DILocation(line: 95, column: 105, scope: !1435, inlinedAt: !6229)
!6301 = !DILocation(line: 95, column: 138, scope: !1435, inlinedAt: !6229)
!6302 = !DILocation(line: 95, column: 137, scope: !1435, inlinedAt: !6229)
!6303 = !DILocation(line: 95, column: 140, scope: !1435, inlinedAt: !6229)
!6304 = !DILocation(line: 95, column: 119, scope: !1435, inlinedAt: !6229)
!6305 = !DILocation(line: 95, column: 118, scope: !1435, inlinedAt: !6229)
!6306 = !DILocation(line: 2369, column: 14, scope: !6206)
!6307 = !DILocation(line: 2370, column: 16, scope: !6206)
!6308 = !DILocation(line: 93, column: 102, scope: !1414, inlinedAt: !6205)
!6309 = !DILocation(line: 93, column: 105, scope: !1414, inlinedAt: !6205)
!6310 = !DILocation(line: 93, column: 139, scope: !1414, inlinedAt: !6205)
!6311 = !DILocation(line: 93, column: 138, scope: !1414, inlinedAt: !6205)
!6312 = !DILocation(line: 93, column: 141, scope: !1414, inlinedAt: !6205)
!6313 = !DILocation(line: 93, column: 120, scope: !1414, inlinedAt: !6205)
!6314 = !DILocation(line: 93, column: 150, scope: !1414, inlinedAt: !6205)
!6315 = !DILocation(line: 93, column: 179, scope: !1414, inlinedAt: !6205)
!6316 = !DILocation(line: 93, column: 178, scope: !1414, inlinedAt: !6205)
!6317 = !DILocation(line: 93, column: 181, scope: !1414, inlinedAt: !6205)
!6318 = !DILocation(line: 93, column: 160, scope: !1414, inlinedAt: !6205)
!6319 = !DILocation(line: 93, column: 190, scope: !1414, inlinedAt: !6205)
!6320 = !DILocation(line: 93, column: 157, scope: !1414, inlinedAt: !6205)
!6321 = !DILocation(line: 93, column: 217, scope: !1414, inlinedAt: !6205)
!6322 = !DILocation(line: 93, column: 216, scope: !1414, inlinedAt: !6205)
!6323 = !DILocation(line: 93, column: 219, scope: !1414, inlinedAt: !6205)
!6324 = !DILocation(line: 93, column: 198, scope: !1414, inlinedAt: !6205)
!6325 = !DILocation(line: 93, column: 196, scope: !1414, inlinedAt: !6205)
!6326 = !DILocation(line: 2370, column: 14, scope: !6206)
!6327 = !DILocation(line: 2371, column: 15, scope: !6206)
!6328 = !DILocation(line: 93, column: 102, scope: !1414, inlinedAt: !6208)
!6329 = !DILocation(line: 93, column: 105, scope: !1414, inlinedAt: !6208)
!6330 = !DILocation(line: 93, column: 139, scope: !1414, inlinedAt: !6208)
!6331 = !DILocation(line: 93, column: 138, scope: !1414, inlinedAt: !6208)
!6332 = !DILocation(line: 93, column: 141, scope: !1414, inlinedAt: !6208)
!6333 = !DILocation(line: 93, column: 120, scope: !1414, inlinedAt: !6208)
!6334 = !DILocation(line: 93, column: 150, scope: !1414, inlinedAt: !6208)
!6335 = !DILocation(line: 93, column: 179, scope: !1414, inlinedAt: !6208)
!6336 = !DILocation(line: 93, column: 178, scope: !1414, inlinedAt: !6208)
!6337 = !DILocation(line: 93, column: 181, scope: !1414, inlinedAt: !6208)
!6338 = !DILocation(line: 93, column: 160, scope: !1414, inlinedAt: !6208)
!6339 = !DILocation(line: 93, column: 190, scope: !1414, inlinedAt: !6208)
!6340 = !DILocation(line: 93, column: 157, scope: !1414, inlinedAt: !6208)
!6341 = !DILocation(line: 93, column: 217, scope: !1414, inlinedAt: !6208)
!6342 = !DILocation(line: 93, column: 216, scope: !1414, inlinedAt: !6208)
!6343 = !DILocation(line: 93, column: 219, scope: !1414, inlinedAt: !6208)
!6344 = !DILocation(line: 93, column: 198, scope: !1414, inlinedAt: !6208)
!6345 = !DILocation(line: 93, column: 196, scope: !1414, inlinedAt: !6208)
!6346 = !DILocation(line: 2371, column: 13, scope: !6206)
!6347 = !DILocation(line: 2372, column: 16, scope: !6206)
!6348 = !DILocation(line: 95, column: 102, scope: !1435, inlinedAt: !6210)
!6349 = !DILocation(line: 95, column: 105, scope: !1435, inlinedAt: !6210)
!6350 = !DILocation(line: 95, column: 138, scope: !1435, inlinedAt: !6210)
!6351 = !DILocation(line: 95, column: 137, scope: !1435, inlinedAt: !6210)
!6352 = !DILocation(line: 95, column: 140, scope: !1435, inlinedAt: !6210)
!6353 = !DILocation(line: 95, column: 119, scope: !1435, inlinedAt: !6210)
!6354 = !DILocation(line: 95, column: 118, scope: !1435, inlinedAt: !6210)
!6355 = !DILocation(line: 2372, column: 43, scope: !6206)
!6356 = !DILocation(line: 2372, column: 13, scope: !6206)
!6357 = !DILocation(line: 2373, column: 14, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6206, file: !64, line: 2373, column: 13)
!6359 = !DILocation(line: 2373, column: 13, scope: !6206)
!6360 = !DILocation(line: 2374, column: 19, scope: !6358)
!6361 = !DILocation(line: 2374, column: 17, scope: !6358)
!6362 = !DILocation(line: 2374, column: 13, scope: !6358)
!6363 = !DILocation(line: 2375, column: 15, scope: !6206)
!6364 = !DILocation(line: 2375, column: 21, scope: !6206)
!6365 = !DILocation(line: 2375, column: 19, scope: !6206)
!6366 = !DILocation(line: 2375, column: 12, scope: !6206)
!6367 = !DILocation(line: 2376, column: 15, scope: !6206)
!6368 = !DILocation(line: 2376, column: 13, scope: !6206)
!6369 = !DILocation(line: 2377, column: 13, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6206, file: !64, line: 2377, column: 13)
!6371 = !DILocation(line: 2377, column: 18, scope: !6370)
!6372 = !DILocation(line: 2377, column: 22, scope: !6370)
!6373 = !DILocation(line: 2377, column: 28, scope: !6370)
!6374 = !DILocation(line: 2377, column: 33, scope: !6370)
!6375 = !DILocation(line: 2377, column: 40, scope: !6370)
!6376 = !DILocation(line: 2377, column: 45, scope: !6370)
!6377 = !DILocation(line: 2377, column: 38, scope: !6370)
!6378 = !DILocation(line: 2377, column: 52, scope: !6370)
!6379 = !DILocation(line: 2377, column: 50, scope: !6370)
!6380 = !DILocation(line: 2377, column: 26, scope: !6370)
!6381 = !DILocation(line: 2377, column: 13, scope: !6206)
!6382 = !DILocation(line: 2378, column: 13, scope: !6370)
!6383 = !DILocation(line: 2379, column: 33, scope: !6206)
!6384 = !DILocation(line: 2379, column: 9, scope: !6206)
!6385 = !DILocation(line: 95, column: 292, scope: !3316, inlinedAt: !6212)
!6386 = !DILocation(line: 95, column: 291, scope: !3316, inlinedAt: !6212)
!6387 = !DILocation(line: 95, column: 282, scope: !3316, inlinedAt: !6212)
!6388 = !DILocation(line: 95, column: 281, scope: !3316, inlinedAt: !6212)
!6389 = !DILocation(line: 95, column: 289, scope: !3316, inlinedAt: !6212)
!6390 = !DILocation(line: 95, column: 314, scope: !3323, inlinedAt: !6212)
!6391 = !DILocation(line: 95, column: 317, scope: !3323, inlinedAt: !6212)
!6392 = !DILocation(line: 2380, column: 33, scope: !6206)
!6393 = !DILocation(line: 2380, column: 9, scope: !6206)
!6394 = !DILocation(line: 93, column: 371, scope: !3943, inlinedAt: !6215)
!6395 = !DILocation(line: 93, column: 370, scope: !3943, inlinedAt: !6215)
!6396 = !DILocation(line: 93, column: 361, scope: !3943, inlinedAt: !6215)
!6397 = !DILocation(line: 93, column: 360, scope: !3943, inlinedAt: !6215)
!6398 = !DILocation(line: 93, column: 348, scope: !3943, inlinedAt: !6215)
!6399 = !DILocation(line: 93, column: 368, scope: !3943, inlinedAt: !6215)
!6400 = !DILocation(line: 93, column: 402, scope: !3943, inlinedAt: !6215)
!6401 = !DILocation(line: 93, column: 408, scope: !3943, inlinedAt: !6215)
!6402 = !DILocation(line: 93, column: 401, scope: !3943, inlinedAt: !6215)
!6403 = !DILocation(line: 93, column: 392, scope: !3943, inlinedAt: !6215)
!6404 = !DILocation(line: 93, column: 391, scope: !3943, inlinedAt: !6215)
!6405 = !DILocation(line: 93, column: 379, scope: !3943, inlinedAt: !6215)
!6406 = !DILocation(line: 93, column: 399, scope: !3943, inlinedAt: !6215)
!6407 = !DILocation(line: 93, column: 436, scope: !3943, inlinedAt: !6215)
!6408 = !DILocation(line: 93, column: 442, scope: !3943, inlinedAt: !6215)
!6409 = !DILocation(line: 93, column: 435, scope: !3943, inlinedAt: !6215)
!6410 = !DILocation(line: 93, column: 426, scope: !3943, inlinedAt: !6215)
!6411 = !DILocation(line: 93, column: 425, scope: !3943, inlinedAt: !6215)
!6412 = !DILocation(line: 93, column: 433, scope: !3943, inlinedAt: !6215)
!6413 = !DILocation(line: 93, column: 462, scope: !3964, inlinedAt: !6215)
!6414 = !DILocation(line: 93, column: 465, scope: !3964, inlinedAt: !6215)
!6415 = !DILocation(line: 2381, column: 33, scope: !6206)
!6416 = !DILocation(line: 2381, column: 9, scope: !6206)
!6417 = !DILocation(line: 93, column: 371, scope: !3943, inlinedAt: !6218)
!6418 = !DILocation(line: 93, column: 370, scope: !3943, inlinedAt: !6218)
!6419 = !DILocation(line: 93, column: 361, scope: !3943, inlinedAt: !6218)
!6420 = !DILocation(line: 93, column: 360, scope: !3943, inlinedAt: !6218)
!6421 = !DILocation(line: 93, column: 348, scope: !3943, inlinedAt: !6218)
!6422 = !DILocation(line: 93, column: 368, scope: !3943, inlinedAt: !6218)
!6423 = !DILocation(line: 93, column: 402, scope: !3943, inlinedAt: !6218)
!6424 = !DILocation(line: 93, column: 408, scope: !3943, inlinedAt: !6218)
!6425 = !DILocation(line: 93, column: 401, scope: !3943, inlinedAt: !6218)
!6426 = !DILocation(line: 93, column: 392, scope: !3943, inlinedAt: !6218)
!6427 = !DILocation(line: 93, column: 391, scope: !3943, inlinedAt: !6218)
!6428 = !DILocation(line: 93, column: 379, scope: !3943, inlinedAt: !6218)
!6429 = !DILocation(line: 93, column: 399, scope: !3943, inlinedAt: !6218)
!6430 = !DILocation(line: 93, column: 436, scope: !3943, inlinedAt: !6218)
!6431 = !DILocation(line: 93, column: 442, scope: !3943, inlinedAt: !6218)
!6432 = !DILocation(line: 93, column: 435, scope: !3943, inlinedAt: !6218)
!6433 = !DILocation(line: 93, column: 426, scope: !3943, inlinedAt: !6218)
!6434 = !DILocation(line: 93, column: 425, scope: !3943, inlinedAt: !6218)
!6435 = !DILocation(line: 93, column: 433, scope: !3943, inlinedAt: !6218)
!6436 = !DILocation(line: 93, column: 462, scope: !3964, inlinedAt: !6218)
!6437 = !DILocation(line: 93, column: 465, scope: !3964, inlinedAt: !6218)
!6438 = !DILocation(line: 2382, column: 33, scope: !6206)
!6439 = !DILocation(line: 2382, column: 36, scope: !6206)
!6440 = !DILocation(line: 2382, column: 9, scope: !6206)
!6441 = !DILocation(line: 95, column: 292, scope: !3316, inlinedAt: !6221)
!6442 = !DILocation(line: 95, column: 291, scope: !3316, inlinedAt: !6221)
!6443 = !DILocation(line: 95, column: 282, scope: !3316, inlinedAt: !6221)
!6444 = !DILocation(line: 95, column: 281, scope: !3316, inlinedAt: !6221)
!6445 = !DILocation(line: 95, column: 289, scope: !3316, inlinedAt: !6221)
!6446 = !DILocation(line: 95, column: 314, scope: !3323, inlinedAt: !6221)
!6447 = !DILocation(line: 95, column: 317, scope: !3323, inlinedAt: !6221)
!6448 = !DILocation(line: 2383, column: 16, scope: !6206)
!6449 = !DILocation(line: 2383, column: 19, scope: !6206)
!6450 = !DILocation(line: 2383, column: 25, scope: !6206)
!6451 = !DILocation(line: 2383, column: 30, scope: !6206)
!6452 = !DILocation(line: 2383, column: 34, scope: !6206)
!6453 = !DILocation(line: 2383, column: 9, scope: !6206)
!6454 = !DILocation(line: 2384, column: 14, scope: !6206)
!6455 = !DILocation(line: 2384, column: 19, scope: !6206)
!6456 = !DILocation(line: 2384, column: 11, scope: !6206)
!6457 = !DILocation(line: 2385, column: 33, scope: !6206)
!6458 = !DILocation(line: 2385, column: 38, scope: !6206)
!6459 = !DILocation(line: 2385, column: 9, scope: !6206)
!6460 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !6225)
!6461 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !6225)
!6462 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !6224)
!6463 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !6224)
!6464 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !6224)
!6465 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !6224)
!6466 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !6224)
!6467 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !6224)
!6468 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !6224)
!6469 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !6224)
!6470 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !6224)
!6471 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !6224)
!6472 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !6224)
!6473 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !6224)
!6474 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !6224)
!6475 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !6224)
!6476 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !6224)
!6477 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !6224)
!6478 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !6224)
!6479 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !6224)
!6480 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !6225)
!6481 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !6225)
!6482 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !6225)
!6483 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !6225)
!6484 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !6225)
!6485 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !6225)
!6486 = !DILocation(line: 2386, column: 17, scope: !6206)
!6487 = !DILocation(line: 2386, column: 22, scope: !6206)
!6488 = !DILocation(line: 2386, column: 26, scope: !6206)
!6489 = !DILocation(line: 2386, column: 14, scope: !6206)
!6490 = !DILocation(line: 2368, column: 5, scope: !6491)
!6491 = !DILexicalBlockFile(scope: !6201, file: !64, discriminator: 2)
!6492 = distinct !{!6492, !6287}
!6493 = !DILocation(line: 2388, column: 9, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6201, file: !64, line: 2388, column: 9)
!6495 = !DILocation(line: 2388, column: 14, scope: !6494)
!6496 = !DILocation(line: 2388, column: 18, scope: !6494)
!6497 = !DILocation(line: 2388, column: 29, scope: !6494)
!6498 = !DILocation(line: 2388, column: 33, scope: !6494)
!6499 = !DILocation(line: 2388, column: 27, scope: !6494)
!6500 = !DILocation(line: 2388, column: 11, scope: !6494)
!6501 = !DILocation(line: 2388, column: 9, scope: !6201)
!6502 = !DILocation(line: 2389, column: 9, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6494, file: !64, line: 2388, column: 43)
!6504 = !DILocation(line: 2391, column: 24, scope: !6503)
!6505 = !DILocation(line: 2391, column: 28, scope: !6503)
!6506 = !DILocation(line: 2391, column: 32, scope: !6503)
!6507 = !DILocation(line: 2391, column: 26, scope: !6503)
!6508 = !DILocation(line: 2391, column: 9, scope: !6503)
!6509 = !DILocation(line: 2391, column: 13, scope: !6503)
!6510 = !DILocation(line: 2391, column: 22, scope: !6503)
!6511 = !DILocation(line: 2392, column: 5, scope: !6503)
!6512 = !DILocation(line: 2394, column: 5, scope: !6201)
!6513 = !DILocation(line: 2395, column: 1, scope: !6201)
!6514 = distinct !DISubprogram(name: "handle_user_control", scope: !64, file: !64, line: 1524, type: !5007, isLocal: true, isDefinition: true, scopeLine: 1525, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!6515 = !DILocation(line: 58, column: 98, scope: !2971, inlinedAt: !6516)
!6516 = distinct !DILocation(line: 1535, column: 9, scope: !6514)
!6517 = !DILocalVariable(name: "s", arg: 1, scope: !6514, file: !64, line: 1524, type: !154)
!6518 = !DILocation(line: 1524, column: 44, scope: !6514)
!6519 = !DILocalVariable(name: "pkt", arg: 2, scope: !6514, file: !64, line: 1524, type: !393)
!6520 = !DILocation(line: 1524, column: 59, scope: !6514)
!6521 = !DILocalVariable(name: "rt", scope: !6514, file: !64, line: 1526, type: !385)
!6522 = !DILocation(line: 1526, column: 18, scope: !6514)
!6523 = !DILocation(line: 1526, column: 23, scope: !6514)
!6524 = !DILocation(line: 1526, column: 26, scope: !6514)
!6525 = !DILocalVariable(name: "t", scope: !6514, file: !64, line: 1527, type: !108)
!6526 = !DILocation(line: 1527, column: 9, scope: !6514)
!6527 = !DILocalVariable(name: "ret", scope: !6514, file: !64, line: 1527, type: !108)
!6528 = !DILocation(line: 1527, column: 12, scope: !6514)
!6529 = !DILocation(line: 1529, column: 9, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6514, file: !64, line: 1529, column: 9)
!6531 = !DILocation(line: 1529, column: 14, scope: !6530)
!6532 = !DILocation(line: 1529, column: 19, scope: !6530)
!6533 = !DILocation(line: 1529, column: 9, scope: !6514)
!6534 = !DILocation(line: 1530, column: 16, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6530, file: !64, line: 1529, column: 24)
!6536 = !DILocation(line: 1531, column: 16, scope: !6535)
!6537 = !DILocation(line: 1531, column: 21, scope: !6535)
!6538 = !DILocation(line: 1530, column: 9, scope: !6535)
!6539 = !DILocation(line: 1532, column: 9, scope: !6535)
!6540 = !DILocation(line: 1535, column: 52, scope: !6514)
!6541 = !DILocation(line: 1535, column: 57, scope: !6514)
!6542 = !DILocation(line: 1535, column: 65, scope: !6514)
!6543 = !DILocation(line: 1535, column: 9, scope: !6514)
!6544 = !DILocation(line: 60, column: 9, scope: !2971, inlinedAt: !6516)
!6545 = !DILocation(line: 60, column: 10, scope: !2971, inlinedAt: !6516)
!6546 = !DILocation(line: 60, column: 18, scope: !2971, inlinedAt: !6516)
!6547 = !DILocation(line: 60, column: 19, scope: !2971, inlinedAt: !6516)
!6548 = !DILocation(line: 60, column: 15, scope: !2971, inlinedAt: !6516)
!6549 = !DILocation(line: 60, column: 8, scope: !2971, inlinedAt: !6516)
!6550 = !DILocation(line: 60, column: 6, scope: !2971, inlinedAt: !6516)
!6551 = !DILocation(line: 61, column: 12, scope: !2971, inlinedAt: !6516)
!6552 = !DILocation(line: 1535, column: 7, scope: !6514)
!6553 = !DILocation(line: 1536, column: 9, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6514, file: !64, line: 1536, column: 9)
!6555 = !DILocation(line: 1536, column: 11, scope: !6554)
!6556 = !DILocation(line: 1536, column: 9, scope: !6514)
!6557 = !DILocation(line: 1537, column: 29, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6559, file: !64, line: 1537, column: 13)
!6559 = distinct !DILexicalBlock(scope: !6554, file: !64, line: 1536, column: 17)
!6560 = !DILocation(line: 1537, column: 32, scope: !6558)
!6561 = !DILocation(line: 1537, column: 36, scope: !6558)
!6562 = !DILocation(line: 1537, column: 20, scope: !6558)
!6563 = !DILocation(line: 1537, column: 18, scope: !6558)
!6564 = !DILocation(line: 1537, column: 42, scope: !6558)
!6565 = !DILocation(line: 1537, column: 13, scope: !6559)
!6566 = !DILocation(line: 1538, column: 20, scope: !6558)
!6567 = !DILocation(line: 1538, column: 13, scope: !6558)
!6568 = !DILocation(line: 1539, column: 5, scope: !6559)
!6569 = !DILocation(line: 1539, column: 16, scope: !6570)
!6570 = !DILexicalBlockFile(scope: !6571, file: !64, discriminator: 1)
!6571 = distinct !DILexicalBlock(scope: !6554, file: !64, line: 1539, column: 16)
!6572 = !DILocation(line: 1539, column: 18, scope: !6570)
!6573 = !DILocation(line: 1540, column: 13, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6575, file: !64, line: 1540, column: 13)
!6575 = distinct !DILexicalBlock(scope: !6571, file: !64, line: 1539, column: 25)
!6576 = !DILocation(line: 1540, column: 17, scope: !6574)
!6577 = !DILocation(line: 1540, column: 13, scope: !6575)
!6578 = !DILocation(line: 1541, column: 45, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6580, file: !64, line: 1541, column: 17)
!6580 = distinct !DILexicalBlock(scope: !6574, file: !64, line: 1540, column: 26)
!6581 = !DILocation(line: 1541, column: 48, scope: !6579)
!6582 = !DILocation(line: 1541, column: 24, scope: !6579)
!6583 = !DILocation(line: 1541, column: 22, scope: !6579)
!6584 = !DILocation(line: 1541, column: 53, scope: !6579)
!6585 = !DILocation(line: 1541, column: 17, scope: !6580)
!6586 = !DILocation(line: 1542, column: 24, scope: !6579)
!6587 = !DILocation(line: 1542, column: 17, scope: !6579)
!6588 = !DILocation(line: 1543, column: 9, scope: !6580)
!6589 = !DILocation(line: 1544, column: 20, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6574, file: !64, line: 1543, column: 16)
!6591 = !DILocation(line: 1544, column: 13, scope: !6590)
!6592 = !DILocation(line: 1546, column: 5, scope: !6575)
!6593 = !DILocation(line: 1548, column: 5, scope: !6514)
!6594 = !DILocation(line: 1549, column: 1, scope: !6514)
!6595 = distinct !DISubprogram(name: "handle_invoke", scope: !64, file: !64, line: 2156, type: !5007, isLocal: true, isDefinition: true, scopeLine: 2157, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!6596 = !DILocalVariable(name: "s", arg: 1, scope: !6595, file: !64, line: 2156, type: !154)
!6597 = !DILocation(line: 2156, column: 38, scope: !6595)
!6598 = !DILocalVariable(name: "pkt", arg: 2, scope: !6595, file: !64, line: 2156, type: !393)
!6599 = !DILocation(line: 2156, column: 53, scope: !6595)
!6600 = !DILocalVariable(name: "rt", scope: !6595, file: !64, line: 2158, type: !385)
!6601 = !DILocation(line: 2158, column: 18, scope: !6595)
!6602 = !DILocation(line: 2158, column: 23, scope: !6595)
!6603 = !DILocation(line: 2158, column: 26, scope: !6595)
!6604 = !DILocalVariable(name: "ret", scope: !6595, file: !64, line: 2159, type: !108)
!6605 = !DILocation(line: 2159, column: 9, scope: !6595)
!6606 = !DILocation(line: 2162, column: 29, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6595, file: !64, line: 2162, column: 9)
!6608 = !DILocation(line: 2162, column: 34, scope: !6607)
!6609 = !DILocation(line: 2162, column: 40, scope: !6607)
!6610 = !DILocation(line: 2162, column: 45, scope: !6607)
!6611 = !DILocation(line: 2162, column: 9, scope: !6607)
!6612 = !DILocation(line: 2162, column: 9, scope: !6595)
!6613 = !DILocation(line: 2163, column: 40, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6615, file: !64, line: 2163, column: 13)
!6615 = distinct !DILexicalBlock(scope: !6607, file: !64, line: 2162, column: 62)
!6616 = !DILocation(line: 2163, column: 43, scope: !6614)
!6617 = !DILocation(line: 2163, column: 20, scope: !6614)
!6618 = !DILocation(line: 2163, column: 18, scope: !6614)
!6619 = !DILocation(line: 2163, column: 49, scope: !6614)
!6620 = !DILocation(line: 2163, column: 13, scope: !6615)
!6621 = !DILocation(line: 2164, column: 20, scope: !6614)
!6622 = !DILocation(line: 2164, column: 13, scope: !6614)
!6623 = !DILocation(line: 2165, column: 5, scope: !6615)
!6624 = !DILocation(line: 2165, column: 36, scope: !6625)
!6625 = !DILexicalBlockFile(scope: !6626, file: !64, discriminator: 1)
!6626 = distinct !DILexicalBlock(scope: !6607, file: !64, line: 2165, column: 16)
!6627 = !DILocation(line: 2165, column: 41, scope: !6625)
!6628 = !DILocation(line: 2165, column: 47, scope: !6625)
!6629 = !DILocation(line: 2165, column: 52, scope: !6625)
!6630 = !DILocation(line: 2165, column: 16, scope: !6625)
!6631 = !DILocation(line: 2166, column: 41, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6633, file: !64, line: 2166, column: 13)
!6633 = distinct !DILexicalBlock(scope: !6626, file: !64, line: 2165, column: 70)
!6634 = !DILocation(line: 2166, column: 44, scope: !6632)
!6635 = !DILocation(line: 2166, column: 20, scope: !6632)
!6636 = !DILocation(line: 2166, column: 18, scope: !6632)
!6637 = !DILocation(line: 2166, column: 50, scope: !6632)
!6638 = !DILocation(line: 2166, column: 13, scope: !6633)
!6639 = !DILocation(line: 2167, column: 20, scope: !6632)
!6640 = !DILocation(line: 2167, column: 13, scope: !6632)
!6641 = !DILocation(line: 2168, column: 5, scope: !6633)
!6642 = !DILocation(line: 2168, column: 36, scope: !6643)
!6643 = !DILexicalBlockFile(scope: !6644, file: !64, discriminator: 1)
!6644 = distinct !DILexicalBlock(scope: !6626, file: !64, line: 2168, column: 16)
!6645 = !DILocation(line: 2168, column: 41, scope: !6643)
!6646 = !DILocation(line: 2168, column: 47, scope: !6643)
!6647 = !DILocation(line: 2168, column: 52, scope: !6643)
!6648 = !DILocation(line: 2168, column: 16, scope: !6643)
!6649 = !DILocation(line: 2169, column: 41, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6651, file: !64, line: 2169, column: 13)
!6651 = distinct !DILexicalBlock(scope: !6644, file: !64, line: 2168, column: 71)
!6652 = !DILocation(line: 2169, column: 44, scope: !6650)
!6653 = !DILocation(line: 2169, column: 20, scope: !6650)
!6654 = !DILocation(line: 2169, column: 18, scope: !6650)
!6655 = !DILocation(line: 2169, column: 50, scope: !6650)
!6656 = !DILocation(line: 2169, column: 13, scope: !6651)
!6657 = !DILocation(line: 2170, column: 20, scope: !6650)
!6658 = !DILocation(line: 2170, column: 13, scope: !6650)
!6659 = !DILocation(line: 2171, column: 5, scope: !6651)
!6660 = !DILocation(line: 2171, column: 36, scope: !6661)
!6661 = !DILexicalBlockFile(scope: !6662, file: !64, discriminator: 1)
!6662 = distinct !DILexicalBlock(scope: !6644, file: !64, line: 2171, column: 16)
!6663 = !DILocation(line: 2171, column: 41, scope: !6661)
!6664 = !DILocation(line: 2171, column: 47, scope: !6661)
!6665 = !DILocation(line: 2171, column: 52, scope: !6661)
!6666 = !DILocation(line: 2171, column: 16, scope: !6661)
!6667 = !DILocation(line: 2172, column: 33, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !64, line: 2172, column: 13)
!6669 = distinct !DILexicalBlock(scope: !6662, file: !64, line: 2171, column: 71)
!6670 = !DILocation(line: 2172, column: 36, scope: !6668)
!6671 = !DILocation(line: 2172, column: 20, scope: !6668)
!6672 = !DILocation(line: 2172, column: 18, scope: !6668)
!6673 = !DILocation(line: 2172, column: 41, scope: !6668)
!6674 = !DILocation(line: 2172, column: 13, scope: !6669)
!6675 = !DILocation(line: 2173, column: 20, scope: !6668)
!6676 = !DILocation(line: 2173, column: 13, scope: !6668)
!6677 = !DILocation(line: 2174, column: 5, scope: !6669)
!6678 = !DILocation(line: 2174, column: 36, scope: !6679)
!6679 = !DILexicalBlockFile(scope: !6680, file: !64, discriminator: 1)
!6680 = distinct !DILexicalBlock(scope: !6662, file: !64, line: 2174, column: 16)
!6681 = !DILocation(line: 2174, column: 41, scope: !6679)
!6682 = !DILocation(line: 2174, column: 47, scope: !6679)
!6683 = !DILocation(line: 2174, column: 52, scope: !6679)
!6684 = !DILocation(line: 2174, column: 16, scope: !6679)
!6685 = !DILocation(line: 2174, column: 75, scope: !6679)
!6686 = !DILocation(line: 2175, column: 36, scope: !6680)
!6687 = !DILocation(line: 2175, column: 41, scope: !6680)
!6688 = !DILocation(line: 2175, column: 47, scope: !6680)
!6689 = !DILocation(line: 2175, column: 52, scope: !6680)
!6690 = !DILocation(line: 2175, column: 16, scope: !6680)
!6691 = !DILocation(line: 2175, column: 71, scope: !6680)
!6692 = !DILocation(line: 2176, column: 36, scope: !6680)
!6693 = !DILocation(line: 2176, column: 41, scope: !6680)
!6694 = !DILocation(line: 2176, column: 47, scope: !6680)
!6695 = !DILocation(line: 2176, column: 52, scope: !6680)
!6696 = !DILocation(line: 2176, column: 16, scope: !6680)
!6697 = !DILocation(line: 2176, column: 69, scope: !6680)
!6698 = !DILocation(line: 2177, column: 36, scope: !6680)
!6699 = !DILocation(line: 2177, column: 41, scope: !6680)
!6700 = !DILocation(line: 2177, column: 47, scope: !6680)
!6701 = !DILocation(line: 2177, column: 52, scope: !6680)
!6702 = !DILocation(line: 2177, column: 16, scope: !6680)
!6703 = !DILocation(line: 2177, column: 66, scope: !6680)
!6704 = !DILocation(line: 2178, column: 36, scope: !6680)
!6705 = !DILocation(line: 2178, column: 41, scope: !6680)
!6706 = !DILocation(line: 2178, column: 47, scope: !6680)
!6707 = !DILocation(line: 2178, column: 52, scope: !6680)
!6708 = !DILocation(line: 2178, column: 16, scope: !6680)
!6709 = !DILocation(line: 2178, column: 70, scope: !6680)
!6710 = !DILocation(line: 2179, column: 36, scope: !6680)
!6711 = !DILocation(line: 2179, column: 41, scope: !6680)
!6712 = !DILocation(line: 2179, column: 47, scope: !6680)
!6713 = !DILocation(line: 2179, column: 52, scope: !6680)
!6714 = !DILocation(line: 2179, column: 16, scope: !6680)
!6715 = !DILocation(line: 2174, column: 16, scope: !6716)
!6716 = !DILexicalBlockFile(scope: !6662, file: !64, discriminator: 2)
!6717 = !DILocation(line: 2180, column: 41, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !64, line: 2180, column: 13)
!6719 = distinct !DILexicalBlock(scope: !6680, file: !64, line: 2179, column: 75)
!6720 = !DILocation(line: 2180, column: 44, scope: !6718)
!6721 = !DILocation(line: 2180, column: 20, scope: !6718)
!6722 = !DILocation(line: 2180, column: 18, scope: !6718)
!6723 = !DILocation(line: 2180, column: 50, scope: !6718)
!6724 = !DILocation(line: 2180, column: 13, scope: !6719)
!6725 = !DILocation(line: 2181, column: 20, scope: !6718)
!6726 = !DILocation(line: 2181, column: 13, scope: !6718)
!6727 = !DILocation(line: 2182, column: 5, scope: !6719)
!6728 = !DILocation(line: 2184, column: 12, scope: !6595)
!6729 = !DILocation(line: 2184, column: 5, scope: !6595)
!6730 = !DILocation(line: 2185, column: 1, scope: !6595)
!6731 = distinct !DISubprogram(name: "gen_pong", scope: !64, file: !64, line: 868, type: !5318, isLocal: true, isDefinition: true, scopeLine: 869, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!6732 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !6733)
!6733 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !6734)
!6734 = distinct !DILocation(line: 886, column: 5, scope: !6735)
!6735 = !DILexicalBlockFile(scope: !6731, file: !64, discriminator: 1)
!6736 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !6734)
!6737 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !6734)
!6738 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !6739)
!6739 = distinct !DILocation(line: 886, column: 29, scope: !6731)
!6740 = !DILocation(line: 58, column: 98, scope: !2971, inlinedAt: !6741)
!6741 = distinct !DILocation(line: 94, column: 328, scope: !2976, inlinedAt: !6742)
!6742 = distinct !DILocation(line: 885, column: 5, scope: !6731)
!6743 = !DILocation(line: 94, column: 258, scope: !2976, inlinedAt: !6742)
!6744 = !DILocation(line: 94, column: 280, scope: !2976, inlinedAt: !6742)
!6745 = !DILocalVariable(name: "s", arg: 1, scope: !6731, file: !64, line: 868, type: !154)
!6746 = !DILocation(line: 868, column: 33, scope: !6731)
!6747 = !DILocalVariable(name: "rt", arg: 2, scope: !6731, file: !64, line: 868, type: !385)
!6748 = !DILocation(line: 868, column: 49, scope: !6731)
!6749 = !DILocalVariable(name: "ppkt", arg: 3, scope: !6731, file: !64, line: 868, type: !393)
!6750 = !DILocation(line: 868, column: 65, scope: !6731)
!6751 = !DILocalVariable(name: "pkt", scope: !6731, file: !64, line: 870, type: !394)
!6752 = !DILocation(line: 870, column: 16, scope: !6731)
!6753 = !DILocalVariable(name: "p", scope: !6731, file: !64, line: 871, type: !110)
!6754 = !DILocation(line: 871, column: 14, scope: !6731)
!6755 = !DILocalVariable(name: "ret", scope: !6731, file: !64, line: 872, type: !108)
!6756 = !DILocation(line: 872, column: 9, scope: !6731)
!6757 = !DILocation(line: 874, column: 9, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6731, file: !64, line: 874, column: 9)
!6759 = !DILocation(line: 874, column: 15, scope: !6758)
!6760 = !DILocation(line: 874, column: 20, scope: !6758)
!6761 = !DILocation(line: 874, column: 9, scope: !6731)
!6762 = !DILocation(line: 875, column: 16, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6758, file: !64, line: 874, column: 25)
!6764 = !DILocation(line: 876, column: 16, scope: !6763)
!6765 = !DILocation(line: 876, column: 22, scope: !6763)
!6766 = !DILocation(line: 875, column: 9, scope: !6763)
!6767 = !DILocation(line: 877, column: 9, scope: !6763)
!6768 = !DILocation(line: 881, column: 38, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6731, file: !64, line: 880, column: 9)
!6770 = !DILocation(line: 881, column: 44, scope: !6769)
!6771 = !DILocation(line: 881, column: 54, scope: !6769)
!6772 = !DILocation(line: 880, column: 16, scope: !6769)
!6773 = !DILocation(line: 880, column: 14, scope: !6769)
!6774 = !DILocation(line: 881, column: 63, scope: !6769)
!6775 = !DILocation(line: 880, column: 9, scope: !6731)
!6776 = !DILocation(line: 882, column: 16, scope: !6769)
!6777 = !DILocation(line: 882, column: 9, scope: !6769)
!6778 = !DILocation(line: 884, column: 13, scope: !6731)
!6779 = !DILocation(line: 884, column: 7, scope: !6731)
!6780 = !DILocation(line: 885, column: 5, scope: !6731)
!6781 = !DILocation(line: 94, column: 339, scope: !2976, inlinedAt: !6742)
!6782 = !DILocation(line: 94, column: 328, scope: !2976, inlinedAt: !6742)
!6783 = !DILocation(line: 60, column: 9, scope: !2971, inlinedAt: !6741)
!6784 = !DILocation(line: 60, column: 10, scope: !2971, inlinedAt: !6741)
!6785 = !DILocation(line: 60, column: 18, scope: !2971, inlinedAt: !6741)
!6786 = !DILocation(line: 60, column: 19, scope: !2971, inlinedAt: !6741)
!6787 = !DILocation(line: 60, column: 15, scope: !2971, inlinedAt: !6741)
!6788 = !DILocation(line: 60, column: 8, scope: !2971, inlinedAt: !6741)
!6789 = !DILocation(line: 60, column: 6, scope: !2971, inlinedAt: !6741)
!6790 = !DILocation(line: 61, column: 12, scope: !2971, inlinedAt: !6741)
!6791 = !DILocation(line: 94, column: 317, scope: !2976, inlinedAt: !6742)
!6792 = !DILocation(line: 94, column: 316, scope: !2976, inlinedAt: !6742)
!6793 = !DILocation(line: 94, column: 322, scope: !2976, inlinedAt: !6742)
!6794 = !DILocation(line: 94, column: 325, scope: !2976, inlinedAt: !6742)
!6795 = !DILocation(line: 94, column: 351, scope: !2976, inlinedAt: !6742)
!6796 = !DILocation(line: 94, column: 354, scope: !2976, inlinedAt: !6742)
!6797 = !DILocation(line: 886, column: 72, scope: !6731)
!6798 = !DILocation(line: 886, column: 78, scope: !6731)
!6799 = !DILocation(line: 886, column: 82, scope: !6731)
!6800 = !DILocation(line: 886, column: 88, scope: !6731)
!6801 = !DILocation(line: 886, column: 29, scope: !6731)
!6802 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !6739)
!6803 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !6739)
!6804 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !6739)
!6805 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !6739)
!6806 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !6739)
!6807 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !6739)
!6808 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !6739)
!6809 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !6739)
!6810 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !6739)
!6811 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !6739)
!6812 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !6739)
!6813 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !6739)
!6814 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !6739)
!6815 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !6739)
!6816 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !6739)
!6817 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !6739)
!6818 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !6739)
!6819 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !6739)
!6820 = !DILocation(line: 886, column: 5, scope: !6735)
!6821 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !6734)
!6822 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !6734)
!6823 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !6733)
!6824 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !6733)
!6825 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !6733)
!6826 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !6733)
!6827 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !6733)
!6828 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !6733)
!6829 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !6733)
!6830 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !6733)
!6831 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !6733)
!6832 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !6733)
!6833 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !6733)
!6834 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !6733)
!6835 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !6733)
!6836 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !6733)
!6837 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !6733)
!6838 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !6733)
!6839 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !6733)
!6840 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !6733)
!6841 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !6734)
!6842 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !6734)
!6843 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !6734)
!6844 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !6734)
!6845 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !6734)
!6846 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !6734)
!6847 = !DILocation(line: 888, column: 29, scope: !6731)
!6848 = !DILocation(line: 888, column: 12, scope: !6731)
!6849 = !DILocation(line: 888, column: 5, scope: !6731)
!6850 = !DILocation(line: 889, column: 1, scope: !6731)
!6851 = distinct !DISubprogram(name: "gen_swf_verification", scope: !64, file: !64, line: 894, type: !2327, isLocal: true, isDefinition: true, scopeLine: 895, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!6852 = !DILocation(line: 58, column: 98, scope: !2971, inlinedAt: !6853)
!6853 = distinct !DILocation(line: 94, column: 328, scope: !2976, inlinedAt: !6854)
!6854 = distinct !DILocation(line: 906, column: 5, scope: !6851)
!6855 = !DILocation(line: 94, column: 258, scope: !2976, inlinedAt: !6854)
!6856 = !DILocation(line: 94, column: 280, scope: !2976, inlinedAt: !6854)
!6857 = !DILocalVariable(name: "s", arg: 1, scope: !6851, file: !64, line: 894, type: !154)
!6858 = !DILocation(line: 894, column: 45, scope: !6851)
!6859 = !DILocalVariable(name: "rt", arg: 2, scope: !6851, file: !64, line: 894, type: !385)
!6860 = !DILocation(line: 894, column: 61, scope: !6851)
!6861 = !DILocalVariable(name: "pkt", scope: !6851, file: !64, line: 896, type: !394)
!6862 = !DILocation(line: 896, column: 16, scope: !6851)
!6863 = !DILocalVariable(name: "p", scope: !6851, file: !64, line: 897, type: !110)
!6864 = !DILocation(line: 897, column: 14, scope: !6851)
!6865 = !DILocalVariable(name: "ret", scope: !6851, file: !64, line: 898, type: !108)
!6866 = !DILocation(line: 898, column: 9, scope: !6851)
!6867 = !DILocation(line: 900, column: 12, scope: !6851)
!6868 = !DILocation(line: 900, column: 5, scope: !6851)
!6869 = !DILocation(line: 901, column: 16, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6851, file: !64, line: 901, column: 9)
!6871 = !DILocation(line: 901, column: 14, scope: !6870)
!6872 = !DILocation(line: 902, column: 46, scope: !6870)
!6873 = !DILocation(line: 901, column: 9, scope: !6851)
!6874 = !DILocation(line: 903, column: 16, scope: !6870)
!6875 = !DILocation(line: 903, column: 9, scope: !6870)
!6876 = !DILocation(line: 905, column: 13, scope: !6851)
!6877 = !DILocation(line: 905, column: 7, scope: !6851)
!6878 = !DILocation(line: 906, column: 5, scope: !6851)
!6879 = !DILocation(line: 94, column: 339, scope: !2976, inlinedAt: !6854)
!6880 = !DILocation(line: 94, column: 328, scope: !2976, inlinedAt: !6854)
!6881 = !DILocation(line: 60, column: 9, scope: !2971, inlinedAt: !6853)
!6882 = !DILocation(line: 60, column: 10, scope: !2971, inlinedAt: !6853)
!6883 = !DILocation(line: 60, column: 18, scope: !2971, inlinedAt: !6853)
!6884 = !DILocation(line: 60, column: 19, scope: !2971, inlinedAt: !6853)
!6885 = !DILocation(line: 60, column: 15, scope: !2971, inlinedAt: !6853)
!6886 = !DILocation(line: 60, column: 8, scope: !2971, inlinedAt: !6853)
!6887 = !DILocation(line: 60, column: 6, scope: !2971, inlinedAt: !6853)
!6888 = !DILocation(line: 61, column: 12, scope: !2971, inlinedAt: !6853)
!6889 = !DILocation(line: 94, column: 317, scope: !2976, inlinedAt: !6854)
!6890 = !DILocation(line: 94, column: 316, scope: !2976, inlinedAt: !6854)
!6891 = !DILocation(line: 94, column: 322, scope: !2976, inlinedAt: !6854)
!6892 = !DILocation(line: 94, column: 325, scope: !2976, inlinedAt: !6854)
!6893 = !DILocation(line: 94, column: 351, scope: !2976, inlinedAt: !6854)
!6894 = !DILocation(line: 94, column: 354, scope: !2976, inlinedAt: !6854)
!6895 = !DILocation(line: 907, column: 12, scope: !6851)
!6896 = !DILocation(line: 907, column: 15, scope: !6851)
!6897 = !DILocation(line: 907, column: 19, scope: !6851)
!6898 = !DILocation(line: 907, column: 5, scope: !6851)
!6899 = !DILocation(line: 909, column: 29, scope: !6851)
!6900 = !DILocation(line: 909, column: 12, scope: !6851)
!6901 = !DILocation(line: 909, column: 5, scope: !6851)
!6902 = !DILocation(line: 910, column: 1, scope: !6851)
!6903 = distinct !DISubprogram(name: "handle_invoke_error", scope: !64, file: !64, line: 1793, type: !5007, isLocal: true, isDefinition: true, scopeLine: 1794, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!6904 = !DILocalVariable(name: "s", arg: 1, scope: !6903, file: !64, line: 1793, type: !154)
!6905 = !DILocation(line: 1793, column: 44, scope: !6903)
!6906 = !DILocalVariable(name: "pkt", arg: 2, scope: !6903, file: !64, line: 1793, type: !393)
!6907 = !DILocation(line: 1793, column: 59, scope: !6903)
!6908 = !DILocalVariable(name: "rt", scope: !6903, file: !64, line: 1795, type: !385)
!6909 = !DILocation(line: 1795, column: 18, scope: !6903)
!6910 = !DILocation(line: 1795, column: 23, scope: !6903)
!6911 = !DILocation(line: 1795, column: 26, scope: !6903)
!6912 = !DILocalVariable(name: "data_end", scope: !6903, file: !64, line: 1796, type: !131)
!6913 = !DILocation(line: 1796, column: 20, scope: !6903)
!6914 = !DILocation(line: 1796, column: 31, scope: !6903)
!6915 = !DILocation(line: 1796, column: 36, scope: !6903)
!6916 = !DILocation(line: 1796, column: 43, scope: !6903)
!6917 = !DILocation(line: 1796, column: 48, scope: !6903)
!6918 = !DILocation(line: 1796, column: 41, scope: !6903)
!6919 = !DILocalVariable(name: "tracked_method", scope: !6903, file: !64, line: 1797, type: !244)
!6920 = !DILocation(line: 1797, column: 11, scope: !6903)
!6921 = !DILocalVariable(name: "level", scope: !6903, file: !64, line: 1798, type: !108)
!6922 = !DILocation(line: 1798, column: 9, scope: !6903)
!6923 = !DILocalVariable(name: "tmpstr", scope: !6903, file: !64, line: 1799, type: !3027)
!6924 = !DILocation(line: 1799, column: 13, scope: !6903)
!6925 = !DILocalVariable(name: "ret", scope: !6903, file: !64, line: 1800, type: !108)
!6926 = !DILocation(line: 1800, column: 9, scope: !6903)
!6927 = !DILocation(line: 1802, column: 36, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6903, file: !64, line: 1802, column: 9)
!6929 = !DILocation(line: 1802, column: 39, scope: !6928)
!6930 = !DILocation(line: 1802, column: 16, scope: !6928)
!6931 = !DILocation(line: 1802, column: 14, scope: !6928)
!6932 = !DILocation(line: 1802, column: 65, scope: !6928)
!6933 = !DILocation(line: 1802, column: 9, scope: !6903)
!6934 = !DILocation(line: 1803, column: 16, scope: !6928)
!6935 = !DILocation(line: 1803, column: 9, scope: !6928)
!6936 = !DILocation(line: 1805, column: 33, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6903, file: !64, line: 1805, column: 9)
!6938 = !DILocation(line: 1805, column: 38, scope: !6937)
!6939 = !DILocation(line: 1805, column: 43, scope: !6937)
!6940 = !DILocation(line: 1805, column: 48, scope: !6937)
!6941 = !DILocation(line: 1806, column: 48, scope: !6937)
!6942 = !DILocation(line: 1805, column: 10, scope: !6937)
!6943 = !DILocation(line: 1805, column: 9, scope: !6903)
!6944 = !DILocation(line: 1807, column: 13, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !64, line: 1807, column: 13)
!6946 = distinct !DILexicalBlock(scope: !6937, file: !64, line: 1806, column: 73)
!6947 = !DILocation(line: 1807, column: 28, scope: !6945)
!6948 = !DILocation(line: 1807, column: 40, scope: !6949)
!6949 = !DILexicalBlockFile(scope: !6945, file: !64, discriminator: 1)
!6950 = !DILocation(line: 1807, column: 33, scope: !6949)
!6951 = !DILocation(line: 1807, column: 68, scope: !6949)
!6952 = !DILocation(line: 1808, column: 40, scope: !6945)
!6953 = !DILocation(line: 1808, column: 33, scope: !6945)
!6954 = !DILocation(line: 1808, column: 73, scope: !6945)
!6955 = !DILocation(line: 1809, column: 40, scope: !6945)
!6956 = !DILocation(line: 1809, column: 33, scope: !6945)
!6957 = !DILocation(line: 1809, column: 71, scope: !6945)
!6958 = !DILocation(line: 1810, column: 40, scope: !6945)
!6959 = !DILocation(line: 1810, column: 33, scope: !6945)
!6960 = !DILocation(line: 1807, column: 13, scope: !6961)
!6961 = !DILexicalBlockFile(scope: !6946, file: !64, discriminator: 2)
!6962 = !DILocation(line: 1812, column: 19, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6945, file: !64, line: 1810, column: 71)
!6964 = !DILocation(line: 1813, column: 17, scope: !6963)
!6965 = !DILocation(line: 1814, column: 9, scope: !6963)
!6966 = !DILocation(line: 1814, column: 20, scope: !6967)
!6967 = !DILexicalBlockFile(scope: !6968, file: !64, discriminator: 1)
!6968 = distinct !DILexicalBlock(scope: !6945, file: !64, line: 1814, column: 20)
!6969 = !DILocation(line: 1814, column: 35, scope: !6967)
!6970 = !DILocation(line: 1814, column: 46, scope: !6971)
!6971 = !DILexicalBlockFile(scope: !6968, file: !64, discriminator: 2)
!6972 = !DILocation(line: 1814, column: 39, scope: !6971)
!6973 = !DILocation(line: 1814, column: 20, scope: !6971)
!6974 = !DILocation(line: 1815, column: 21, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6968, file: !64, line: 1814, column: 82)
!6976 = !DILocation(line: 1815, column: 25, scope: !6975)
!6977 = !DILocation(line: 1815, column: 19, scope: !6975)
!6978 = !DILocation(line: 1816, column: 17, scope: !6975)
!6979 = !DILocation(line: 1817, column: 9, scope: !6975)
!6980 = !DILocation(line: 1817, column: 20, scope: !6981)
!6981 = !DILexicalBlockFile(scope: !6982, file: !64, discriminator: 1)
!6982 = distinct !DILexicalBlock(scope: !6968, file: !64, line: 1817, column: 20)
!6983 = !DILocation(line: 1817, column: 35, scope: !6981)
!6984 = !DILocation(line: 1817, column: 46, scope: !6985)
!6985 = !DILexicalBlockFile(scope: !6982, file: !64, discriminator: 2)
!6986 = !DILocation(line: 1817, column: 39, scope: !6985)
!6987 = !DILocation(line: 1817, column: 20, scope: !6985)
!6988 = !DILocation(line: 1818, column: 40, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6982, file: !64, line: 1817, column: 74)
!6990 = !DILocation(line: 1818, column: 43, scope: !6989)
!6991 = !DILocation(line: 1818, column: 19, scope: !6989)
!6992 = !DILocation(line: 1818, column: 17, scope: !6989)
!6993 = !DILocation(line: 1819, column: 18, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6989, file: !64, line: 1819, column: 17)
!6995 = !DILocation(line: 1819, column: 17, scope: !6989)
!6996 = !DILocation(line: 1820, column: 17, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6994, file: !64, line: 1819, column: 23)
!6998 = !DILocation(line: 1820, column: 21, scope: !6997)
!6999 = !DILocation(line: 1820, column: 34, scope: !6997)
!7000 = !DILocation(line: 1821, column: 23, scope: !6997)
!7001 = !DILocation(line: 1822, column: 13, scope: !6997)
!7002 = !DILocation(line: 1823, column: 9, scope: !6989)
!7003 = !DILocation(line: 1824, column: 17, scope: !6982)
!7004 = !DILocation(line: 1825, column: 16, scope: !6946)
!7005 = !DILocation(line: 1825, column: 19, scope: !6946)
!7006 = !DILocation(line: 1825, column: 48, scope: !6946)
!7007 = !DILocation(line: 1825, column: 9, scope: !6946)
!7008 = !DILocation(line: 1826, column: 5, scope: !6946)
!7009 = !DILocation(line: 1828, column: 13, scope: !6903)
!7010 = !DILocation(line: 1828, column: 5, scope: !6903)
!7011 = !DILocation(line: 1829, column: 12, scope: !6903)
!7012 = !DILocation(line: 1829, column: 5, scope: !6903)
!7013 = !DILocation(line: 1830, column: 1, scope: !6903)
!7014 = distinct !DISubprogram(name: "handle_invoke_result", scope: !64, file: !64, line: 2047, type: !5007, isLocal: true, isDefinition: true, scopeLine: 2048, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!7015 = !DILocalVariable(name: "s", arg: 1, scope: !7014, file: !64, line: 2047, type: !154)
!7016 = !DILocation(line: 2047, column: 45, scope: !7014)
!7017 = !DILocalVariable(name: "pkt", arg: 2, scope: !7014, file: !64, line: 2047, type: !393)
!7018 = !DILocation(line: 2047, column: 60, scope: !7014)
!7019 = !DILocalVariable(name: "rt", scope: !7014, file: !64, line: 2049, type: !385)
!7020 = !DILocation(line: 2049, column: 18, scope: !7014)
!7021 = !DILocation(line: 2049, column: 23, scope: !7014)
!7022 = !DILocation(line: 2049, column: 26, scope: !7014)
!7023 = !DILocalVariable(name: "tracked_method", scope: !7014, file: !64, line: 2050, type: !244)
!7024 = !DILocation(line: 2050, column: 11, scope: !7014)
!7025 = !DILocalVariable(name: "ret", scope: !7014, file: !64, line: 2051, type: !108)
!7026 = !DILocation(line: 2051, column: 9, scope: !7014)
!7027 = !DILocation(line: 2053, column: 36, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7014, file: !64, line: 2053, column: 9)
!7029 = !DILocation(line: 2053, column: 39, scope: !7028)
!7030 = !DILocation(line: 2053, column: 16, scope: !7028)
!7031 = !DILocation(line: 2053, column: 14, scope: !7028)
!7032 = !DILocation(line: 2053, column: 66, scope: !7028)
!7033 = !DILocation(line: 2053, column: 9, scope: !7014)
!7034 = !DILocation(line: 2054, column: 16, scope: !7028)
!7035 = !DILocation(line: 2054, column: 9, scope: !7028)
!7036 = !DILocation(line: 2056, column: 10, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7014, file: !64, line: 2056, column: 9)
!7038 = !DILocation(line: 2056, column: 9, scope: !7014)
!7039 = !DILocation(line: 2058, column: 16, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7037, file: !64, line: 2056, column: 26)
!7041 = !DILocation(line: 2058, column: 9, scope: !7040)
!7042 = !DILocation(line: 2061, column: 17, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7014, file: !64, line: 2061, column: 9)
!7044 = !DILocation(line: 2061, column: 10, scope: !7043)
!7045 = !DILocation(line: 2061, column: 9, scope: !7014)
!7046 = !DILocation(line: 2062, column: 14, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !64, line: 2062, column: 13)
!7048 = distinct !DILexicalBlock(scope: !7043, file: !64, line: 2061, column: 45)
!7049 = !DILocation(line: 2062, column: 18, scope: !7047)
!7050 = !DILocation(line: 2062, column: 13, scope: !7048)
!7051 = !DILocation(line: 2063, column: 43, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7053, file: !64, line: 2063, column: 17)
!7053 = distinct !DILexicalBlock(scope: !7047, file: !64, line: 2062, column: 28)
!7054 = !DILocation(line: 2063, column: 46, scope: !7052)
!7055 = !DILocation(line: 2063, column: 24, scope: !7052)
!7056 = !DILocation(line: 2063, column: 22, scope: !7052)
!7057 = !DILocation(line: 2063, column: 51, scope: !7052)
!7058 = !DILocation(line: 2063, column: 17, scope: !7053)
!7059 = !DILocation(line: 2064, column: 17, scope: !7052)
!7060 = !DILocation(line: 2066, column: 45, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7053, file: !64, line: 2066, column: 17)
!7062 = !DILocation(line: 2066, column: 48, scope: !7061)
!7063 = !DILocation(line: 2066, column: 24, scope: !7061)
!7064 = !DILocation(line: 2066, column: 22, scope: !7061)
!7065 = !DILocation(line: 2066, column: 53, scope: !7061)
!7066 = !DILocation(line: 2066, column: 17, scope: !7053)
!7067 = !DILocation(line: 2067, column: 17, scope: !7061)
!7068 = !DILocation(line: 2068, column: 9, scope: !7053)
!7069 = !DILocation(line: 2069, column: 44, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !64, line: 2069, column: 17)
!7071 = distinct !DILexicalBlock(scope: !7047, file: !64, line: 2068, column: 16)
!7072 = !DILocation(line: 2069, column: 47, scope: !7070)
!7073 = !DILocation(line: 2069, column: 24, scope: !7070)
!7074 = !DILocation(line: 2069, column: 22, scope: !7070)
!7075 = !DILocation(line: 2069, column: 52, scope: !7070)
!7076 = !DILocation(line: 2069, column: 17, scope: !7071)
!7077 = !DILocation(line: 2070, column: 17, scope: !7070)
!7078 = !DILocation(line: 2073, column: 38, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7048, file: !64, line: 2073, column: 13)
!7080 = !DILocation(line: 2073, column: 41, scope: !7079)
!7081 = !DILocation(line: 2073, column: 20, scope: !7079)
!7082 = !DILocation(line: 2073, column: 18, scope: !7079)
!7083 = !DILocation(line: 2073, column: 46, scope: !7079)
!7084 = !DILocation(line: 2073, column: 13, scope: !7048)
!7085 = !DILocation(line: 2074, column: 13, scope: !7079)
!7086 = !DILocation(line: 2076, column: 13, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7048, file: !64, line: 2076, column: 13)
!7088 = !DILocation(line: 2076, column: 17, scope: !7087)
!7089 = !DILocation(line: 2076, column: 13, scope: !7048)
!7090 = !DILocation(line: 2079, column: 17, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !64, line: 2079, column: 17)
!7092 = distinct !DILexicalBlock(scope: !7087, file: !64, line: 2076, column: 27)
!7093 = !DILocation(line: 2079, column: 21, scope: !7091)
!7094 = !DILocation(line: 2079, column: 17, scope: !7092)
!7095 = !DILocation(line: 2080, column: 51, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !64, line: 2080, column: 21)
!7097 = distinct !DILexicalBlock(scope: !7091, file: !64, line: 2079, column: 32)
!7098 = !DILocation(line: 2080, column: 54, scope: !7096)
!7099 = !DILocation(line: 2080, column: 58, scope: !7096)
!7100 = !DILocation(line: 2080, column: 62, scope: !7096)
!7101 = !DILocation(line: 2080, column: 28, scope: !7096)
!7102 = !DILocation(line: 2080, column: 26, scope: !7096)
!7103 = !DILocation(line: 2080, column: 74, scope: !7096)
!7104 = !DILocation(line: 2080, column: 21, scope: !7097)
!7105 = !DILocation(line: 2081, column: 21, scope: !7096)
!7106 = !DILocation(line: 2082, column: 13, scope: !7097)
!7107 = !DILocation(line: 2082, column: 24, scope: !7108)
!7108 = !DILexicalBlockFile(scope: !7109, file: !64, discriminator: 1)
!7109 = distinct !DILexicalBlock(scope: !7091, file: !64, line: 2082, column: 24)
!7110 = !DILocation(line: 2082, column: 28, scope: !7108)
!7111 = !DILocation(line: 2082, column: 33, scope: !7108)
!7112 = !DILocation(line: 2083, column: 51, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !64, line: 2083, column: 21)
!7114 = distinct !DILexicalBlock(scope: !7109, file: !64, line: 2082, column: 40)
!7115 = !DILocation(line: 2083, column: 54, scope: !7113)
!7116 = !DILocation(line: 2083, column: 58, scope: !7113)
!7117 = !DILocation(line: 2083, column: 62, scope: !7113)
!7118 = !DILocation(line: 2083, column: 28, scope: !7113)
!7119 = !DILocation(line: 2083, column: 26, scope: !7113)
!7120 = !DILocation(line: 2083, column: 73, scope: !7113)
!7121 = !DILocation(line: 2083, column: 21, scope: !7114)
!7122 = !DILocation(line: 2084, column: 21, scope: !7113)
!7123 = !DILocation(line: 2085, column: 13, scope: !7114)
!7124 = !DILocation(line: 2086, column: 9, scope: !7092)
!7125 = !DILocation(line: 2087, column: 5, scope: !7048)
!7126 = !DILocation(line: 2087, column: 24, scope: !7127)
!7127 = !DILexicalBlockFile(scope: !7128, file: !64, discriminator: 1)
!7128 = distinct !DILexicalBlock(scope: !7043, file: !64, line: 2087, column: 16)
!7129 = !DILocation(line: 2087, column: 17, scope: !7127)
!7130 = !DILocation(line: 2087, column: 16, scope: !7127)
!7131 = !DILocalVariable(name: "stream_id", scope: !7132, file: !64, line: 2088, type: !185)
!7132 = distinct !DILexicalBlock(scope: !7128, file: !64, line: 2087, column: 57)
!7133 = !DILocation(line: 2088, column: 16, scope: !7132)
!7134 = !DILocation(line: 2089, column: 32, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7132, file: !64, line: 2089, column: 13)
!7136 = !DILocation(line: 2089, column: 13, scope: !7135)
!7137 = !DILocation(line: 2089, column: 13, scope: !7132)
!7138 = !DILocation(line: 2090, column: 20, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7135, file: !64, line: 2089, column: 50)
!7140 = !DILocation(line: 2090, column: 13, scope: !7139)
!7141 = !DILocation(line: 2091, column: 9, scope: !7139)
!7142 = !DILocation(line: 2092, column: 29, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7135, file: !64, line: 2091, column: 16)
!7144 = !DILocation(line: 2092, column: 13, scope: !7143)
!7145 = !DILocation(line: 2092, column: 17, scope: !7143)
!7146 = !DILocation(line: 2092, column: 27, scope: !7143)
!7147 = !DILocation(line: 2095, column: 14, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7132, file: !64, line: 2095, column: 13)
!7149 = !DILocation(line: 2095, column: 18, scope: !7148)
!7150 = !DILocation(line: 2095, column: 13, scope: !7132)
!7151 = !DILocation(line: 2096, column: 36, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !64, line: 2096, column: 17)
!7153 = distinct !DILexicalBlock(scope: !7148, file: !64, line: 2095, column: 28)
!7154 = !DILocation(line: 2096, column: 39, scope: !7152)
!7155 = !DILocation(line: 2096, column: 24, scope: !7152)
!7156 = !DILocation(line: 2096, column: 22, scope: !7152)
!7157 = !DILocation(line: 2096, column: 44, scope: !7152)
!7158 = !DILocation(line: 2096, column: 17, scope: !7153)
!7159 = !DILocation(line: 2097, column: 17, scope: !7152)
!7160 = !DILocation(line: 2098, column: 9, scope: !7153)
!7161 = !DILocation(line: 2099, column: 17, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7163, file: !64, line: 2099, column: 17)
!7163 = distinct !DILexicalBlock(scope: !7148, file: !64, line: 2098, column: 16)
!7164 = !DILocation(line: 2099, column: 21, scope: !7162)
!7165 = !DILocation(line: 2099, column: 26, scope: !7162)
!7166 = !DILocation(line: 2099, column: 17, scope: !7163)
!7167 = !DILocation(line: 2100, column: 50, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7169, file: !64, line: 2100, column: 21)
!7169 = distinct !DILexicalBlock(scope: !7162, file: !64, line: 2099, column: 33)
!7170 = !DILocation(line: 2100, column: 53, scope: !7168)
!7171 = !DILocation(line: 2100, column: 28, scope: !7168)
!7172 = !DILocation(line: 2100, column: 26, scope: !7168)
!7173 = !DILocation(line: 2100, column: 58, scope: !7168)
!7174 = !DILocation(line: 2100, column: 21, scope: !7169)
!7175 = !DILocation(line: 2101, column: 21, scope: !7168)
!7176 = !DILocation(line: 2102, column: 13, scope: !7169)
!7177 = !DILocation(line: 2103, column: 33, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7163, file: !64, line: 2103, column: 17)
!7179 = !DILocation(line: 2103, column: 36, scope: !7178)
!7180 = !DILocation(line: 2103, column: 24, scope: !7178)
!7181 = !DILocation(line: 2103, column: 22, scope: !7178)
!7182 = !DILocation(line: 2103, column: 41, scope: !7178)
!7183 = !DILocation(line: 2103, column: 17, scope: !7163)
!7184 = !DILocation(line: 2104, column: 17, scope: !7178)
!7185 = !DILocation(line: 2105, column: 40, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7163, file: !64, line: 2105, column: 17)
!7187 = !DILocation(line: 2105, column: 43, scope: !7186)
!7188 = !DILocation(line: 2105, column: 24, scope: !7186)
!7189 = !DILocation(line: 2105, column: 22, scope: !7186)
!7190 = !DILocation(line: 2105, column: 48, scope: !7186)
!7191 = !DILocation(line: 2105, column: 17, scope: !7163)
!7192 = !DILocation(line: 2106, column: 17, scope: !7186)
!7193 = !DILocation(line: 2108, column: 5, scope: !7132)
!7194 = !DILocation(line: 2108, column: 24, scope: !7195)
!7195 = !DILexicalBlockFile(scope: !7196, file: !64, discriminator: 1)
!7196 = distinct !DILexicalBlock(scope: !7128, file: !64, line: 2108, column: 16)
!7197 = !DILocation(line: 2108, column: 17, scope: !7195)
!7198 = !DILocation(line: 2108, column: 16, scope: !7195)
!7199 = !DILocation(line: 2109, column: 32, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7201, file: !64, line: 2109, column: 13)
!7201 = distinct !DILexicalBlock(scope: !7196, file: !64, line: 2108, column: 60)
!7202 = !DILocation(line: 2109, column: 38, scope: !7200)
!7203 = !DILocation(line: 2109, column: 42, scope: !7200)
!7204 = !DILocation(line: 2109, column: 13, scope: !7200)
!7205 = !DILocation(line: 2109, column: 13, scope: !7201)
!7206 = !DILocation(line: 2110, column: 20, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7200, file: !64, line: 2109, column: 53)
!7208 = !DILocation(line: 2110, column: 13, scope: !7207)
!7209 = !DILocation(line: 2111, column: 9, scope: !7207)
!7210 = !DILocation(line: 2112, column: 5, scope: !7201)
!7211 = !DILocation(line: 2061, column: 42, scope: !7212)
!7212 = !DILexicalBlockFile(scope: !7043, file: !64, discriminator: 1)
!7213 = !DILocation(line: 2115, column: 13, scope: !7014)
!7214 = !DILocation(line: 2115, column: 5, scope: !7014)
!7215 = !DILocation(line: 2116, column: 12, scope: !7014)
!7216 = !DILocation(line: 2116, column: 5, scope: !7014)
!7217 = !DILocation(line: 2117, column: 1, scope: !7014)
!7218 = distinct !DISubprogram(name: "handle_invoke_status", scope: !64, file: !64, line: 2119, type: !5007, isLocal: true, isDefinition: true, scopeLine: 2120, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!7219 = !DILocalVariable(name: "s", arg: 1, scope: !7218, file: !64, line: 2119, type: !154)
!7220 = !DILocation(line: 2119, column: 45, scope: !7218)
!7221 = !DILocalVariable(name: "pkt", arg: 2, scope: !7218, file: !64, line: 2119, type: !393)
!7222 = !DILocation(line: 2119, column: 60, scope: !7218)
!7223 = !DILocalVariable(name: "rt", scope: !7218, file: !64, line: 2121, type: !385)
!7224 = !DILocation(line: 2121, column: 18, scope: !7218)
!7225 = !DILocation(line: 2121, column: 23, scope: !7218)
!7226 = !DILocation(line: 2121, column: 26, scope: !7218)
!7227 = !DILocalVariable(name: "data_end", scope: !7218, file: !64, line: 2122, type: !131)
!7228 = !DILocation(line: 2122, column: 20, scope: !7218)
!7229 = !DILocation(line: 2122, column: 31, scope: !7218)
!7230 = !DILocation(line: 2122, column: 36, scope: !7218)
!7231 = !DILocation(line: 2122, column: 43, scope: !7218)
!7232 = !DILocation(line: 2122, column: 48, scope: !7218)
!7233 = !DILocation(line: 2122, column: 41, scope: !7218)
!7234 = !DILocalVariable(name: "ptr", scope: !7218, file: !64, line: 2123, type: !131)
!7235 = !DILocation(line: 2123, column: 20, scope: !7218)
!7236 = !DILocation(line: 2123, column: 26, scope: !7218)
!7237 = !DILocation(line: 2123, column: 31, scope: !7218)
!7238 = !DILocation(line: 2123, column: 36, scope: !7218)
!7239 = !DILocalVariable(name: "tmpstr", scope: !7218, file: !64, line: 2124, type: !3027)
!7240 = !DILocation(line: 2124, column: 13, scope: !7218)
!7241 = !DILocalVariable(name: "i", scope: !7218, file: !64, line: 2125, type: !108)
!7242 = !DILocation(line: 2125, column: 9, scope: !7218)
!7243 = !DILocalVariable(name: "t", scope: !7218, file: !64, line: 2125, type: !108)
!7244 = !DILocation(line: 2125, column: 12, scope: !7218)
!7245 = !DILocation(line: 2127, column: 12, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7218, file: !64, line: 2127, column: 5)
!7247 = !DILocation(line: 2127, column: 10, scope: !7246)
!7248 = !DILocation(line: 2127, column: 17, scope: !7249)
!7249 = !DILexicalBlockFile(scope: !7250, file: !64, discriminator: 1)
!7250 = distinct !DILexicalBlock(scope: !7246, file: !64, line: 2127, column: 5)
!7251 = !DILocation(line: 2127, column: 19, scope: !7249)
!7252 = !DILocation(line: 2127, column: 5, scope: !7249)
!7253 = !DILocation(line: 2128, column: 29, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7250, file: !64, line: 2127, column: 29)
!7255 = !DILocation(line: 2128, column: 34, scope: !7254)
!7256 = !DILocation(line: 2128, column: 13, scope: !7254)
!7257 = !DILocation(line: 2128, column: 11, scope: !7254)
!7258 = !DILocation(line: 2129, column: 13, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7254, file: !64, line: 2129, column: 13)
!7260 = !DILocation(line: 2129, column: 15, scope: !7259)
!7261 = !DILocation(line: 2129, column: 13, scope: !7254)
!7262 = !DILocation(line: 2130, column: 13, scope: !7259)
!7263 = !DILocation(line: 2131, column: 16, scope: !7254)
!7264 = !DILocation(line: 2131, column: 13, scope: !7254)
!7265 = !DILocation(line: 2132, column: 5, scope: !7254)
!7266 = !DILocation(line: 2127, column: 25, scope: !7267)
!7267 = !DILexicalBlockFile(scope: !7250, file: !64, discriminator: 2)
!7268 = !DILocation(line: 2127, column: 5, scope: !7267)
!7269 = distinct !{!7269, !7270}
!7270 = !DILocation(line: 2127, column: 5, scope: !7218)
!7271 = !DILocation(line: 2134, column: 32, scope: !7218)
!7272 = !DILocation(line: 2134, column: 37, scope: !7218)
!7273 = !DILocation(line: 2134, column: 56, scope: !7218)
!7274 = !DILocation(line: 2134, column: 9, scope: !7218)
!7275 = !DILocation(line: 2134, column: 7, scope: !7218)
!7276 = !DILocation(line: 2135, column: 10, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7218, file: !64, line: 2135, column: 9)
!7278 = !DILocation(line: 2135, column: 12, scope: !7277)
!7279 = !DILocation(line: 2135, column: 23, scope: !7280)
!7280 = !DILexicalBlockFile(scope: !7277, file: !64, discriminator: 1)
!7281 = !DILocation(line: 2135, column: 16, scope: !7280)
!7282 = !DILocation(line: 2135, column: 9, scope: !7280)
!7283 = !DILocation(line: 2136, column: 36, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7277, file: !64, line: 2135, column: 41)
!7285 = !DILocation(line: 2136, column: 41, scope: !7284)
!7286 = !DILocation(line: 2137, column: 51, scope: !7284)
!7287 = !DILocation(line: 2136, column: 13, scope: !7284)
!7288 = !DILocation(line: 2136, column: 11, scope: !7284)
!7289 = !DILocation(line: 2138, column: 13, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7284, file: !64, line: 2138, column: 13)
!7291 = !DILocation(line: 2138, column: 15, scope: !7290)
!7292 = !DILocation(line: 2138, column: 19, scope: !7293)
!7293 = !DILexicalBlockFile(scope: !7290, file: !64, discriminator: 1)
!7294 = !DILocation(line: 2138, column: 13, scope: !7293)
!7295 = !DILocation(line: 2139, column: 40, scope: !7290)
!7296 = !DILocation(line: 2139, column: 45, scope: !7290)
!7297 = !DILocation(line: 2140, column: 40, scope: !7290)
!7298 = !DILocation(line: 2139, column: 17, scope: !7290)
!7299 = !DILocation(line: 2139, column: 15, scope: !7290)
!7300 = !DILocation(line: 2139, column: 13, scope: !7290)
!7301 = !DILocation(line: 2141, column: 14, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7284, file: !64, line: 2141, column: 13)
!7303 = !DILocation(line: 2141, column: 13, scope: !7284)
!7304 = !DILocation(line: 2142, column: 20, scope: !7302)
!7305 = !DILocation(line: 2142, column: 49, scope: !7302)
!7306 = !DILocation(line: 2142, column: 13, scope: !7302)
!7307 = !DILocation(line: 2143, column: 9, scope: !7284)
!7308 = !DILocation(line: 2146, column: 32, scope: !7218)
!7309 = !DILocation(line: 2146, column: 37, scope: !7218)
!7310 = !DILocation(line: 2146, column: 55, scope: !7218)
!7311 = !DILocation(line: 2146, column: 9, scope: !7218)
!7312 = !DILocation(line: 2146, column: 7, scope: !7218)
!7313 = !DILocation(line: 2147, column: 10, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7218, file: !64, line: 2147, column: 9)
!7315 = !DILocation(line: 2147, column: 12, scope: !7314)
!7316 = !DILocation(line: 2147, column: 23, scope: !7317)
!7317 = !DILexicalBlockFile(scope: !7314, file: !64, discriminator: 1)
!7318 = !DILocation(line: 2147, column: 16, scope: !7317)
!7319 = !DILocation(line: 2147, column: 9, scope: !7317)
!7320 = !DILocation(line: 2147, column: 56, scope: !7321)
!7321 = !DILexicalBlockFile(scope: !7314, file: !64, discriminator: 2)
!7322 = !DILocation(line: 2147, column: 60, scope: !7321)
!7323 = !DILocation(line: 2147, column: 66, scope: !7321)
!7324 = !DILocation(line: 2148, column: 10, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7218, file: !64, line: 2148, column: 9)
!7326 = !DILocation(line: 2148, column: 12, scope: !7325)
!7327 = !DILocation(line: 2148, column: 23, scope: !7328)
!7328 = !DILexicalBlockFile(scope: !7325, file: !64, discriminator: 1)
!7329 = !DILocation(line: 2148, column: 16, scope: !7328)
!7330 = !DILocation(line: 2148, column: 9, scope: !7328)
!7331 = !DILocation(line: 2148, column: 55, scope: !7332)
!7332 = !DILexicalBlockFile(scope: !7325, file: !64, discriminator: 2)
!7333 = !DILocation(line: 2148, column: 59, scope: !7332)
!7334 = !DILocation(line: 2148, column: 65, scope: !7332)
!7335 = !DILocation(line: 2149, column: 10, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7218, file: !64, line: 2149, column: 9)
!7337 = !DILocation(line: 2149, column: 12, scope: !7336)
!7338 = !DILocation(line: 2149, column: 23, scope: !7339)
!7339 = !DILexicalBlockFile(scope: !7336, file: !64, discriminator: 1)
!7340 = !DILocation(line: 2149, column: 16, scope: !7339)
!7341 = !DILocation(line: 2149, column: 9, scope: !7339)
!7342 = !DILocation(line: 2149, column: 66, scope: !7343)
!7343 = !DILexicalBlockFile(scope: !7336, file: !64, discriminator: 2)
!7344 = !DILocation(line: 2149, column: 70, scope: !7343)
!7345 = !DILocation(line: 2149, column: 76, scope: !7343)
!7346 = !DILocation(line: 2150, column: 10, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7218, file: !64, line: 2150, column: 9)
!7348 = !DILocation(line: 2150, column: 12, scope: !7347)
!7349 = !DILocation(line: 2150, column: 23, scope: !7350)
!7350 = !DILexicalBlockFile(scope: !7347, file: !64, discriminator: 1)
!7351 = !DILocation(line: 2150, column: 16, scope: !7350)
!7352 = !DILocation(line: 2150, column: 9, scope: !7350)
!7353 = !DILocation(line: 2150, column: 59, scope: !7354)
!7354 = !DILexicalBlockFile(scope: !7347, file: !64, discriminator: 2)
!7355 = !DILocation(line: 2150, column: 63, scope: !7354)
!7356 = !DILocation(line: 2150, column: 69, scope: !7354)
!7357 = !DILocation(line: 2151, column: 10, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7218, file: !64, line: 2151, column: 9)
!7359 = !DILocation(line: 2151, column: 12, scope: !7358)
!7360 = !DILocation(line: 2151, column: 23, scope: !7361)
!7361 = !DILexicalBlockFile(scope: !7358, file: !64, discriminator: 1)
!7362 = !DILocation(line: 2151, column: 16, scope: !7361)
!7363 = !DILocation(line: 2151, column: 9, scope: !7361)
!7364 = !DILocation(line: 2151, column: 57, scope: !7365)
!7365 = !DILexicalBlockFile(scope: !7358, file: !64, discriminator: 2)
!7366 = !DILocation(line: 2151, column: 61, scope: !7365)
!7367 = !DILocation(line: 2151, column: 67, scope: !7365)
!7368 = !DILocation(line: 2153, column: 5, scope: !7218)
!7369 = !DILocation(line: 2154, column: 1, scope: !7218)
!7370 = distinct !DISubprogram(name: "gen_check_bw", scope: !64, file: !64, line: 934, type: !2327, isLocal: true, isDefinition: true, scopeLine: 935, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!7371 = !DILocalVariable(name: "s", arg: 1, scope: !7370, file: !64, line: 934, type: !154)
!7372 = !DILocation(line: 934, column: 37, scope: !7370)
!7373 = !DILocalVariable(name: "rt", arg: 2, scope: !7370, file: !64, line: 934, type: !385)
!7374 = !DILocation(line: 934, column: 53, scope: !7370)
!7375 = !DILocalVariable(name: "pkt", scope: !7370, file: !64, line: 936, type: !394)
!7376 = !DILocation(line: 936, column: 16, scope: !7370)
!7377 = !DILocalVariable(name: "p", scope: !7370, file: !64, line: 937, type: !110)
!7378 = !DILocation(line: 937, column: 14, scope: !7370)
!7379 = !DILocalVariable(name: "ret", scope: !7370, file: !64, line: 938, type: !108)
!7380 = !DILocation(line: 938, column: 9, scope: !7370)
!7381 = !DILocation(line: 940, column: 16, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7370, file: !64, line: 940, column: 9)
!7383 = !DILocation(line: 940, column: 14, scope: !7382)
!7384 = !DILocation(line: 941, column: 46, scope: !7382)
!7385 = !DILocation(line: 940, column: 9, scope: !7370)
!7386 = !DILocation(line: 942, column: 16, scope: !7382)
!7387 = !DILocation(line: 942, column: 9, scope: !7382)
!7388 = !DILocation(line: 944, column: 13, scope: !7370)
!7389 = !DILocation(line: 944, column: 7, scope: !7370)
!7390 = !DILocation(line: 945, column: 5, scope: !7370)
!7391 = !DILocation(line: 946, column: 31, scope: !7370)
!7392 = !DILocation(line: 946, column: 35, scope: !7370)
!7393 = !DILocation(line: 946, column: 29, scope: !7370)
!7394 = !DILocation(line: 946, column: 5, scope: !7370)
!7395 = !DILocation(line: 947, column: 5, scope: !7370)
!7396 = !DILocation(line: 949, column: 29, scope: !7370)
!7397 = !DILocation(line: 949, column: 12, scope: !7370)
!7398 = !DILocation(line: 949, column: 5, scope: !7370)
!7399 = !DILocation(line: 950, column: 1, scope: !7370)
!7400 = distinct !DISubprogram(name: "send_invoke_response", scope: !64, file: !64, line: 1901, type: !5007, isLocal: true, isDefinition: true, scopeLine: 1902, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!7401 = !DILocation(line: 133, column: 84, scope: !1441, inlinedAt: !7402)
!7402 = distinct !DILocation(line: 1915, column: 5, scope: !7400)
!7403 = !DILocation(line: 134, column: 62, scope: !1441, inlinedAt: !7402)
!7404 = !DILocation(line: 135, column: 51, scope: !1441, inlinedAt: !7402)
!7405 = !DILocalVariable(name: "s", arg: 1, scope: !7400, file: !64, line: 1901, type: !154)
!7406 = !DILocation(line: 1901, column: 45, scope: !7400)
!7407 = !DILocalVariable(name: "pkt", arg: 2, scope: !7400, file: !64, line: 1901, type: !393)
!7408 = !DILocation(line: 1901, column: 60, scope: !7400)
!7409 = !DILocalVariable(name: "rt", scope: !7400, file: !64, line: 1903, type: !385)
!7410 = !DILocation(line: 1903, column: 18, scope: !7400)
!7411 = !DILocation(line: 1903, column: 23, scope: !7400)
!7412 = !DILocation(line: 1903, column: 26, scope: !7400)
!7413 = !DILocalVariable(name: "seqnum", scope: !7400, file: !64, line: 1904, type: !185)
!7414 = !DILocation(line: 1904, column: 12, scope: !7400)
!7415 = !DILocalVariable(name: "filename", scope: !7400, file: !64, line: 1905, type: !4858)
!7416 = !DILocation(line: 1905, column: 10, scope: !7400)
!7417 = !DILocalVariable(name: "command", scope: !7400, file: !64, line: 1906, type: !3020)
!7418 = !DILocation(line: 1906, column: 10, scope: !7400)
!7419 = !DILocalVariable(name: "stringlen", scope: !7400, file: !64, line: 1907, type: !108)
!7420 = !DILocation(line: 1907, column: 9, scope: !7400)
!7421 = !DILocalVariable(name: "pchar", scope: !7400, file: !64, line: 1908, type: !244)
!7422 = !DILocation(line: 1908, column: 11, scope: !7400)
!7423 = !DILocalVariable(name: "p", scope: !7400, file: !64, line: 1909, type: !131)
!7424 = !DILocation(line: 1909, column: 20, scope: !7400)
!7425 = !DILocation(line: 1909, column: 24, scope: !7400)
!7426 = !DILocation(line: 1909, column: 29, scope: !7400)
!7427 = !DILocalVariable(name: "pp", scope: !7400, file: !64, line: 1910, type: !110)
!7428 = !DILocation(line: 1910, column: 14, scope: !7400)
!7429 = !DILocalVariable(name: "spkt", scope: !7400, file: !64, line: 1911, type: !394)
!7430 = !DILocation(line: 1911, column: 16, scope: !7400)
!7431 = !DILocalVariable(name: "gbc", scope: !7400, file: !64, line: 1912, type: !1445)
!7432 = !DILocation(line: 1912, column: 20, scope: !7400)
!7433 = !DILocalVariable(name: "ret", scope: !7400, file: !64, line: 1913, type: !108)
!7434 = !DILocation(line: 1913, column: 9, scope: !7400)
!7435 = !DILocation(line: 1915, column: 28, scope: !7400)
!7436 = !DILocation(line: 1915, column: 31, scope: !7400)
!7437 = !DILocation(line: 1915, column: 36, scope: !7400)
!7438 = !DILocation(line: 1915, column: 5, scope: !7400)
!7439 = !DILocation(line: 137, column: 16, scope: !1805, inlinedAt: !7402)
!7440 = !DILocation(line: 137, column: 25, scope: !1805, inlinedAt: !7402)
!7441 = !DILocation(line: 137, column: 14, scope: !1805, inlinedAt: !7402)
!7442 = !DILocation(line: 137, column: 34, scope: !1811, inlinedAt: !7402)
!7443 = !DILocation(line: 137, column: 95, scope: !1814, inlinedAt: !7402)
!7444 = !DILocation(line: 137, column: 95, scope: !1811, inlinedAt: !7402)
!7445 = !DILocation(line: 138, column: 17, scope: !1441, inlinedAt: !7402)
!7446 = !DILocation(line: 138, column: 5, scope: !1441, inlinedAt: !7402)
!7447 = !DILocation(line: 138, column: 8, scope: !1441, inlinedAt: !7402)
!7448 = !DILocation(line: 138, column: 15, scope: !1441, inlinedAt: !7402)
!7449 = !DILocation(line: 139, column: 23, scope: !1441, inlinedAt: !7402)
!7450 = !DILocation(line: 139, column: 5, scope: !1441, inlinedAt: !7402)
!7451 = !DILocation(line: 139, column: 8, scope: !1441, inlinedAt: !7402)
!7452 = !DILocation(line: 139, column: 21, scope: !1441, inlinedAt: !7402)
!7453 = !DILocation(line: 140, column: 21, scope: !1441, inlinedAt: !7402)
!7454 = !DILocation(line: 140, column: 27, scope: !1441, inlinedAt: !7402)
!7455 = !DILocation(line: 140, column: 25, scope: !1441, inlinedAt: !7402)
!7456 = !DILocation(line: 140, column: 5, scope: !1441, inlinedAt: !7402)
!7457 = !DILocation(line: 140, column: 8, scope: !1441, inlinedAt: !7402)
!7458 = !DILocation(line: 140, column: 19, scope: !1441, inlinedAt: !7402)
!7459 = !DILocation(line: 1916, column: 34, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !7400, file: !64, line: 1916, column: 9)
!7461 = !DILocation(line: 1916, column: 9, scope: !7460)
!7462 = !DILocation(line: 1916, column: 9, scope: !7400)
!7463 = !DILocation(line: 1918, column: 16, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7460, file: !64, line: 1917, column: 41)
!7465 = !DILocation(line: 1918, column: 9, scope: !7464)
!7466 = !DILocation(line: 1919, column: 9, scope: !7464)
!7467 = !DILocation(line: 1922, column: 11, scope: !7400)
!7468 = !DILocation(line: 1922, column: 9, scope: !7400)
!7469 = !DILocation(line: 1923, column: 9, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7400, file: !64, line: 1923, column: 9)
!7471 = !DILocation(line: 1923, column: 9, scope: !7400)
!7472 = !DILocation(line: 1924, column: 16, scope: !7470)
!7473 = !DILocation(line: 1924, column: 9, scope: !7470)
!7474 = !DILocation(line: 1925, column: 11, scope: !7400)
!7475 = !DILocation(line: 1925, column: 9, scope: !7400)
!7476 = !DILocation(line: 1926, column: 9, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7400, file: !64, line: 1926, column: 9)
!7478 = !DILocation(line: 1926, column: 9, scope: !7400)
!7479 = !DILocation(line: 1927, column: 16, scope: !7477)
!7480 = !DILocation(line: 1927, column: 9, scope: !7477)
!7481 = !DILocation(line: 1928, column: 17, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7400, file: !64, line: 1928, column: 9)
!7483 = !DILocation(line: 1928, column: 10, scope: !7482)
!7484 = !DILocation(line: 1928, column: 39, scope: !7482)
!7485 = !DILocation(line: 1929, column: 17, scope: !7482)
!7486 = !DILocation(line: 1929, column: 10, scope: !7482)
!7487 = !DILocation(line: 1928, column: 9, scope: !7488)
!7488 = !DILexicalBlockFile(scope: !7400, file: !64, discriminator: 1)
!7489 = !DILocation(line: 1930, column: 40, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7482, file: !64, line: 1929, column: 38)
!7491 = !DILocation(line: 1930, column: 15, scope: !7490)
!7492 = !DILocation(line: 1930, column: 13, scope: !7490)
!7493 = !DILocation(line: 1932, column: 13, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7490, file: !64, line: 1932, column: 13)
!7495 = !DILocation(line: 1932, column: 13, scope: !7490)
!7496 = !DILocation(line: 1933, column: 17, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7498, file: !64, line: 1933, column: 17)
!7498 = distinct !DILexicalBlock(scope: !7494, file: !64, line: 1932, column: 18)
!7499 = !DILocation(line: 1933, column: 21, scope: !7497)
!7500 = !DILocation(line: 1933, column: 17, scope: !7498)
!7501 = !DILocation(line: 1934, column: 24, scope: !7497)
!7502 = !DILocation(line: 1934, column: 17, scope: !7497)
!7503 = !DILocation(line: 1936, column: 24, scope: !7497)
!7504 = !DILocation(line: 1936, column: 17, scope: !7497)
!7505 = !DILocation(line: 1937, column: 20, scope: !7498)
!7506 = !DILocation(line: 1937, column: 13, scope: !7498)
!7507 = !DILocation(line: 1940, column: 13, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7490, file: !64, line: 1940, column: 13)
!7509 = !DILocation(line: 1940, column: 16, scope: !7508)
!7510 = !DILocation(line: 1940, column: 13, scope: !7490)
!7511 = !DILocation(line: 1941, column: 29, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7508, file: !64, line: 1940, column: 26)
!7513 = !DILocation(line: 1941, column: 32, scope: !7512)
!7514 = !DILocation(line: 1941, column: 21, scope: !7512)
!7515 = !DILocation(line: 1941, column: 19, scope: !7512)
!7516 = !DILocation(line: 1942, column: 18, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7512, file: !64, line: 1942, column: 17)
!7518 = !DILocation(line: 1942, column: 17, scope: !7512)
!7519 = !DILocation(line: 1943, column: 24, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7517, file: !64, line: 1942, column: 25)
!7521 = !DILocation(line: 1945, column: 24, scope: !7520)
!7522 = !DILocation(line: 1945, column: 27, scope: !7520)
!7523 = !DILocation(line: 1943, column: 17, scope: !7520)
!7524 = !DILocation(line: 1946, column: 25, scope: !7520)
!7525 = !DILocation(line: 1946, column: 28, scope: !7520)
!7526 = !DILocation(line: 1946, column: 23, scope: !7520)
!7527 = !DILocation(line: 1947, column: 13, scope: !7520)
!7528 = !DILocation(line: 1948, column: 18, scope: !7512)
!7529 = !DILocation(line: 1949, column: 24, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7512, file: !64, line: 1949, column: 17)
!7531 = !DILocation(line: 1949, column: 31, scope: !7530)
!7532 = !DILocation(line: 1949, column: 17, scope: !7530)
!7533 = !DILocation(line: 1949, column: 17, scope: !7512)
!7534 = !DILocation(line: 1950, column: 24, scope: !7530)
!7535 = !DILocation(line: 1951, column: 33, scope: !7530)
!7536 = !DILocation(line: 1951, column: 43, scope: !7530)
!7537 = !DILocation(line: 1950, column: 17, scope: !7530)
!7538 = !DILocation(line: 1952, column: 9, scope: !7512)
!7539 = !DILocation(line: 1953, column: 9, scope: !7490)
!7540 = !DILocation(line: 1953, column: 13, scope: !7490)
!7541 = !DILocation(line: 1953, column: 19, scope: !7490)
!7542 = !DILocation(line: 1954, column: 5, scope: !7490)
!7543 = !DILocation(line: 1956, column: 17, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7400, file: !64, line: 1956, column: 9)
!7545 = !DILocation(line: 1956, column: 10, scope: !7544)
!7546 = !DILocation(line: 1956, column: 9, scope: !7400)
!7547 = !DILocation(line: 1957, column: 20, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7549, file: !64, line: 1957, column: 13)
!7549 = distinct !DILexicalBlock(scope: !7544, file: !64, line: 1956, column: 40)
!7550 = !DILocation(line: 1957, column: 18, scope: !7548)
!7551 = !DILocation(line: 1959, column: 49, scope: !7548)
!7552 = !DILocation(line: 1957, column: 13, scope: !7549)
!7553 = !DILocation(line: 1960, column: 20, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7548, file: !64, line: 1959, column: 54)
!7555 = !DILocation(line: 1960, column: 13, scope: !7554)
!7556 = !DILocation(line: 1961, column: 20, scope: !7554)
!7557 = !DILocation(line: 1961, column: 13, scope: !7554)
!7558 = !DILocation(line: 1963, column: 19, scope: !7549)
!7559 = !DILocation(line: 1963, column: 12, scope: !7549)
!7560 = !DILocation(line: 1964, column: 9, scope: !7549)
!7561 = !DILocation(line: 1965, column: 5, scope: !7549)
!7562 = !DILocation(line: 1965, column: 24, scope: !7563)
!7563 = !DILexicalBlockFile(scope: !7564, file: !64, discriminator: 1)
!7564 = distinct !DILexicalBlock(scope: !7544, file: !64, line: 1965, column: 16)
!7565 = !DILocation(line: 1965, column: 17, scope: !7563)
!7566 = !DILocation(line: 1965, column: 16, scope: !7563)
!7567 = !DILocation(line: 1966, column: 27, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7564, file: !64, line: 1965, column: 45)
!7569 = !DILocation(line: 1966, column: 15, scope: !7568)
!7570 = !DILocation(line: 1966, column: 13, scope: !7568)
!7571 = !DILocation(line: 1967, column: 13, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7568, file: !64, line: 1967, column: 13)
!7573 = !DILocation(line: 1967, column: 17, scope: !7572)
!7574 = !DILocation(line: 1967, column: 13, scope: !7568)
!7575 = !DILocation(line: 1968, column: 20, scope: !7572)
!7576 = !DILocation(line: 1968, column: 13, scope: !7572)
!7577 = !DILocation(line: 1971, column: 29, scope: !7568)
!7578 = !DILocation(line: 1971, column: 32, scope: !7568)
!7579 = !DILocation(line: 1972, column: 28, scope: !7568)
!7580 = !DILocation(line: 1971, column: 16, scope: !7568)
!7581 = !DILocation(line: 1971, column: 9, scope: !7568)
!7582 = !DILocation(line: 1973, column: 24, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7564, file: !64, line: 1973, column: 16)
!7584 = !DILocation(line: 1973, column: 17, scope: !7583)
!7585 = !DILocation(line: 1973, column: 16, scope: !7564)
!7586 = !DILocation(line: 1974, column: 27, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7583, file: !64, line: 1973, column: 42)
!7588 = !DILocation(line: 1974, column: 15, scope: !7587)
!7589 = !DILocation(line: 1974, column: 13, scope: !7587)
!7590 = !DILocation(line: 1975, column: 13, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7587, file: !64, line: 1975, column: 13)
!7592 = !DILocation(line: 1975, column: 17, scope: !7591)
!7593 = !DILocation(line: 1975, column: 13, scope: !7587)
!7594 = !DILocation(line: 1976, column: 20, scope: !7591)
!7595 = !DILocation(line: 1976, column: 13, scope: !7591)
!7596 = !DILocation(line: 1977, column: 9, scope: !7587)
!7597 = !DILocation(line: 1977, column: 13, scope: !7587)
!7598 = !DILocation(line: 1977, column: 19, scope: !7587)
!7599 = !DILocation(line: 1978, column: 29, scope: !7587)
!7600 = !DILocation(line: 1978, column: 32, scope: !7587)
!7601 = !DILocation(line: 1979, column: 29, scope: !7587)
!7602 = !DILocation(line: 1978, column: 16, scope: !7587)
!7603 = !DILocation(line: 1978, column: 9, scope: !7587)
!7604 = !DILocation(line: 1981, column: 20, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7606, file: !64, line: 1981, column: 13)
!7606 = distinct !DILexicalBlock(scope: !7583, file: !64, line: 1980, column: 12)
!7607 = !DILocation(line: 1981, column: 18, scope: !7605)
!7608 = !DILocation(line: 1983, column: 49, scope: !7605)
!7609 = !DILocation(line: 1981, column: 13, scope: !7606)
!7610 = !DILocation(line: 1984, column: 20, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7605, file: !64, line: 1983, column: 54)
!7612 = !DILocation(line: 1984, column: 13, scope: !7611)
!7613 = !DILocation(line: 1985, column: 20, scope: !7611)
!7614 = !DILocation(line: 1985, column: 13, scope: !7611)
!7615 = !DILocation(line: 1987, column: 19, scope: !7606)
!7616 = !DILocation(line: 1987, column: 12, scope: !7606)
!7617 = !DILocation(line: 1988, column: 9, scope: !7606)
!7618 = !DILocation(line: 1989, column: 34, scope: !7606)
!7619 = !DILocation(line: 1989, column: 9, scope: !7606)
!7620 = !DILocation(line: 1990, column: 9, scope: !7606)
!7621 = !DILocation(line: 1991, column: 21, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7606, file: !64, line: 1991, column: 13)
!7623 = !DILocation(line: 1991, column: 14, scope: !7622)
!7624 = !DILocation(line: 1991, column: 13, scope: !7606)
!7625 = !DILocation(line: 1992, column: 13, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7622, file: !64, line: 1991, column: 47)
!7627 = !DILocation(line: 1992, column: 17, scope: !7626)
!7628 = !DILocation(line: 1992, column: 28, scope: !7626)
!7629 = !DILocation(line: 1993, column: 17, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7626, file: !64, line: 1993, column: 17)
!7631 = !DILocation(line: 1993, column: 21, scope: !7630)
!7632 = !DILocation(line: 1993, column: 33, scope: !7630)
!7633 = !DILocation(line: 1993, column: 38, scope: !7630)
!7634 = !DILocation(line: 1993, column: 41, scope: !7635)
!7635 = !DILexicalBlockFile(scope: !7630, file: !64, discriminator: 1)
!7636 = !DILocation(line: 1993, column: 45, scope: !7635)
!7637 = !DILocation(line: 1993, column: 57, scope: !7635)
!7638 = !DILocation(line: 1993, column: 17, scope: !7635)
!7639 = !DILocation(line: 1994, column: 17, scope: !7630)
!7640 = !DILocation(line: 1994, column: 21, scope: !7630)
!7641 = !DILocation(line: 1994, column: 32, scope: !7630)
!7642 = !DILocation(line: 1995, column: 38, scope: !7626)
!7643 = !DILocation(line: 1995, column: 42, scope: !7626)
!7644 = !DILocation(line: 1995, column: 13, scope: !7626)
!7645 = !DILocation(line: 1999, column: 9, scope: !7626)
!7646 = !DILocation(line: 2001, column: 17, scope: !7400)
!7647 = !DILocation(line: 2001, column: 27, scope: !7400)
!7648 = !DILocation(line: 2001, column: 20, scope: !7400)
!7649 = !DILocation(line: 2001, column: 10, scope: !7400)
!7650 = !DILocation(line: 2001, column: 15, scope: !7400)
!7651 = !DILocation(line: 2002, column: 32, scope: !7400)
!7652 = !DILocation(line: 2002, column: 36, scope: !7400)
!7653 = !DILocation(line: 2002, column: 51, scope: !7400)
!7654 = !DILocation(line: 2002, column: 55, scope: !7400)
!7655 = !DILocation(line: 2003, column: 33, scope: !7400)
!7656 = !DILocation(line: 2003, column: 37, scope: !7400)
!7657 = !DILocation(line: 2003, column: 51, scope: !7400)
!7658 = !DILocation(line: 2003, column: 55, scope: !7400)
!7659 = !DILocation(line: 2002, column: 11, scope: !7400)
!7660 = !DILocation(line: 2002, column: 9, scope: !7400)
!7661 = !DILocation(line: 2004, column: 5, scope: !7400)
!7662 = !DILocation(line: 2005, column: 12, scope: !7400)
!7663 = !DILocation(line: 2005, column: 5, scope: !7400)
!7664 = !DILocation(line: 2006, column: 1, scope: !7400)
!7665 = distinct !DISubprogram(name: "find_tracked_method", scope: !64, file: !64, line: 191, type: !7666, isLocal: true, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!7666 = !DISubroutineType(types: !7667)
!7667 = !{!108, !154, !393, !108, !7668}
!7668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64, align: 64)
!7669 = !DILocation(line: 133, column: 84, scope: !1441, inlinedAt: !7670)
!7670 = distinct !DILocation(line: 200, column: 5, scope: !7665)
!7671 = !DILocation(line: 134, column: 62, scope: !1441, inlinedAt: !7670)
!7672 = !DILocation(line: 135, column: 51, scope: !1441, inlinedAt: !7670)
!7673 = !DILocalVariable(name: "s", arg: 1, scope: !7665, file: !64, line: 191, type: !154)
!7674 = !DILocation(line: 191, column: 44, scope: !7665)
!7675 = !DILocalVariable(name: "pkt", arg: 2, scope: !7665, file: !64, line: 191, type: !393)
!7676 = !DILocation(line: 191, column: 59, scope: !7665)
!7677 = !DILocalVariable(name: "offset", arg: 3, scope: !7665, file: !64, line: 191, type: !108)
!7678 = !DILocation(line: 191, column: 68, scope: !7665)
!7679 = !DILocalVariable(name: "tracked_method", arg: 4, scope: !7665, file: !64, line: 192, type: !7668)
!7680 = !DILocation(line: 192, column: 39, scope: !7665)
!7681 = !DILocalVariable(name: "rt", scope: !7665, file: !64, line: 194, type: !385)
!7682 = !DILocation(line: 194, column: 18, scope: !7665)
!7683 = !DILocation(line: 194, column: 23, scope: !7665)
!7684 = !DILocation(line: 194, column: 26, scope: !7665)
!7685 = !DILocalVariable(name: "gbc", scope: !7665, file: !64, line: 195, type: !1445)
!7686 = !DILocation(line: 195, column: 20, scope: !7665)
!7687 = !DILocalVariable(name: "pkt_id", scope: !7665, file: !64, line: 196, type: !185)
!7688 = !DILocation(line: 196, column: 12, scope: !7665)
!7689 = !DILocalVariable(name: "ret", scope: !7665, file: !64, line: 197, type: !108)
!7690 = !DILocation(line: 197, column: 9, scope: !7665)
!7691 = !DILocalVariable(name: "i", scope: !7665, file: !64, line: 198, type: !108)
!7692 = !DILocation(line: 198, column: 9, scope: !7665)
!7693 = !DILocation(line: 200, column: 28, scope: !7665)
!7694 = !DILocation(line: 200, column: 33, scope: !7665)
!7695 = !DILocation(line: 200, column: 40, scope: !7665)
!7696 = !DILocation(line: 200, column: 38, scope: !7665)
!7697 = !DILocation(line: 200, column: 48, scope: !7665)
!7698 = !DILocation(line: 200, column: 53, scope: !7665)
!7699 = !DILocation(line: 200, column: 60, scope: !7665)
!7700 = !DILocation(line: 200, column: 58, scope: !7665)
!7701 = !DILocation(line: 200, column: 5, scope: !7665)
!7702 = !DILocation(line: 137, column: 16, scope: !1805, inlinedAt: !7670)
!7703 = !DILocation(line: 137, column: 25, scope: !1805, inlinedAt: !7670)
!7704 = !DILocation(line: 137, column: 14, scope: !1805, inlinedAt: !7670)
!7705 = !DILocation(line: 137, column: 34, scope: !1811, inlinedAt: !7670)
!7706 = !DILocation(line: 137, column: 95, scope: !1814, inlinedAt: !7670)
!7707 = !DILocation(line: 137, column: 95, scope: !1811, inlinedAt: !7670)
!7708 = !DILocation(line: 138, column: 17, scope: !1441, inlinedAt: !7670)
!7709 = !DILocation(line: 138, column: 5, scope: !1441, inlinedAt: !7670)
!7710 = !DILocation(line: 138, column: 8, scope: !1441, inlinedAt: !7670)
!7711 = !DILocation(line: 138, column: 15, scope: !1441, inlinedAt: !7670)
!7712 = !DILocation(line: 139, column: 23, scope: !1441, inlinedAt: !7670)
!7713 = !DILocation(line: 139, column: 5, scope: !1441, inlinedAt: !7670)
!7714 = !DILocation(line: 139, column: 8, scope: !1441, inlinedAt: !7670)
!7715 = !DILocation(line: 139, column: 21, scope: !1441, inlinedAt: !7670)
!7716 = !DILocation(line: 140, column: 21, scope: !1441, inlinedAt: !7670)
!7717 = !DILocation(line: 140, column: 27, scope: !1441, inlinedAt: !7670)
!7718 = !DILocation(line: 140, column: 25, scope: !1441, inlinedAt: !7670)
!7719 = !DILocation(line: 140, column: 5, scope: !1441, inlinedAt: !7670)
!7720 = !DILocation(line: 140, column: 8, scope: !1441, inlinedAt: !7670)
!7721 = !DILocation(line: 140, column: 19, scope: !1441, inlinedAt: !7670)
!7722 = !DILocation(line: 201, column: 16, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7665, file: !64, line: 201, column: 9)
!7724 = !DILocation(line: 201, column: 14, scope: !7723)
!7725 = !DILocation(line: 201, column: 51, scope: !7723)
!7726 = !DILocation(line: 201, column: 9, scope: !7665)
!7727 = !DILocation(line: 202, column: 16, scope: !7723)
!7728 = !DILocation(line: 202, column: 9, scope: !7723)
!7729 = !DILocation(line: 204, column: 12, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7665, file: !64, line: 204, column: 5)
!7731 = !DILocation(line: 204, column: 10, scope: !7730)
!7732 = !DILocation(line: 204, column: 17, scope: !7733)
!7733 = !DILexicalBlockFile(scope: !7734, file: !64, discriminator: 1)
!7734 = distinct !DILexicalBlock(scope: !7730, file: !64, line: 204, column: 5)
!7735 = !DILocation(line: 204, column: 21, scope: !7733)
!7736 = !DILocation(line: 204, column: 25, scope: !7733)
!7737 = !DILocation(line: 204, column: 19, scope: !7733)
!7738 = !DILocation(line: 204, column: 5, scope: !7733)
!7739 = !DILocation(line: 205, column: 33, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !64, line: 205, column: 13)
!7741 = distinct !DILexicalBlock(scope: !7734, file: !64, line: 204, column: 50)
!7742 = !DILocation(line: 205, column: 13, scope: !7740)
!7743 = !DILocation(line: 205, column: 17, scope: !7740)
!7744 = !DILocation(line: 205, column: 36, scope: !7740)
!7745 = !DILocation(line: 205, column: 42, scope: !7740)
!7746 = !DILocation(line: 205, column: 39, scope: !7740)
!7747 = !DILocation(line: 205, column: 13, scope: !7741)
!7748 = !DILocation(line: 206, column: 13, scope: !7740)
!7749 = !DILocation(line: 208, column: 47, scope: !7741)
!7750 = !DILocation(line: 208, column: 27, scope: !7741)
!7751 = !DILocation(line: 208, column: 31, scope: !7741)
!7752 = !DILocation(line: 208, column: 50, scope: !7741)
!7753 = !DILocation(line: 208, column: 10, scope: !7741)
!7754 = !DILocation(line: 208, column: 25, scope: !7741)
!7755 = !DILocation(line: 209, column: 28, scope: !7741)
!7756 = !DILocation(line: 209, column: 32, scope: !7741)
!7757 = !DILocation(line: 209, column: 9, scope: !7741)
!7758 = !DILocation(line: 210, column: 9, scope: !7741)
!7759 = !DILocation(line: 204, column: 46, scope: !7760)
!7760 = !DILexicalBlockFile(scope: !7734, file: !64, discriminator: 2)
!7761 = !DILocation(line: 204, column: 5, scope: !7760)
!7762 = distinct !{!7762, !7763}
!7763 = !DILocation(line: 204, column: 5, scope: !7665)
!7764 = !DILocation(line: 213, column: 5, scope: !7665)
!7765 = !DILocation(line: 214, column: 1, scope: !7665)
!7766 = distinct !DISubprogram(name: "handle_connect_error", scope: !64, file: !64, line: 1702, type: !7767, isLocal: true, isDefinition: true, scopeLine: 1703, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!7767 = !DISubroutineType(types: !7768)
!7768 = !{!108, !154, !147}
!7769 = !DILocalVariable(name: "s", arg: 1, scope: !7766, file: !64, line: 1702, type: !154)
!7770 = !DILocation(line: 1702, column: 45, scope: !7766)
!7771 = !DILocalVariable(name: "desc", arg: 2, scope: !7766, file: !64, line: 1702, type: !147)
!7772 = !DILocation(line: 1702, column: 60, scope: !7766)
!7773 = !DILocalVariable(name: "rt", scope: !7766, file: !64, line: 1704, type: !385)
!7774 = !DILocation(line: 1704, column: 18, scope: !7766)
!7775 = !DILocation(line: 1704, column: 23, scope: !7766)
!7776 = !DILocation(line: 1704, column: 26, scope: !7766)
!7777 = !DILocalVariable(name: "buf", scope: !7766, file: !64, line: 1705, type: !7778)
!7778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 2400, align: 8, elements: !7779)
!7779 = !{!7780}
!7780 = !DISubrange(count: 300)
!7781 = !DILocation(line: 1705, column: 10, scope: !7766)
!7782 = !DILocalVariable(name: "ptr", scope: !7766, file: !64, line: 1705, type: !244)
!7783 = !DILocation(line: 1705, column: 21, scope: !7766)
!7784 = !DILocalVariable(name: "authmod", scope: !7766, file: !64, line: 1705, type: !7785)
!7785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 120, align: 8, elements: !7786)
!7786 = !{!7787}
!7787 = !DISubrange(count: 15)
!7788 = !DILocation(line: 1705, column: 26, scope: !7766)
!7789 = !DILocalVariable(name: "i", scope: !7766, file: !64, line: 1706, type: !108)
!7790 = !DILocation(line: 1706, column: 9, scope: !7766)
!7791 = !DILocalVariable(name: "ret", scope: !7766, file: !64, line: 1706, type: !108)
!7792 = !DILocation(line: 1706, column: 16, scope: !7766)
!7793 = !DILocalVariable(name: "user", scope: !7766, file: !64, line: 1707, type: !147)
!7794 = !DILocation(line: 1707, column: 17, scope: !7766)
!7795 = !DILocalVariable(name: "salt", scope: !7766, file: !64, line: 1707, type: !147)
!7796 = !DILocation(line: 1707, column: 29, scope: !7766)
!7797 = !DILocalVariable(name: "opaque", scope: !7766, file: !64, line: 1707, type: !147)
!7798 = !DILocation(line: 1707, column: 41, scope: !7766)
!7799 = !DILocalVariable(name: "challenge", scope: !7766, file: !64, line: 1708, type: !147)
!7800 = !DILocation(line: 1708, column: 17, scope: !7766)
!7801 = !DILocalVariable(name: "cptr", scope: !7766, file: !64, line: 1708, type: !147)
!7802 = !DILocation(line: 1708, column: 35, scope: !7766)
!7803 = !DILocalVariable(name: "nonce", scope: !7766, file: !64, line: 1708, type: !147)
!7804 = !DILocation(line: 1708, column: 49, scope: !7766)
!7805 = !DILocation(line: 1710, column: 25, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7766, file: !64, line: 1710, column: 9)
!7807 = !DILocation(line: 1710, column: 18, scope: !7806)
!7808 = !DILocation(line: 1710, column: 16, scope: !7806)
!7809 = !DILocation(line: 1710, column: 49, scope: !7806)
!7810 = !DILocation(line: 1711, column: 25, scope: !7806)
!7811 = !DILocation(line: 1711, column: 18, scope: !7806)
!7812 = !DILocation(line: 1711, column: 16, scope: !7806)
!7813 = !DILocation(line: 1710, column: 9, scope: !7814)
!7814 = !DILexicalBlockFile(scope: !7766, file: !64, discriminator: 1)
!7815 = !DILocation(line: 1712, column: 16, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7806, file: !64, line: 1711, column: 49)
!7817 = !DILocation(line: 1712, column: 9, scope: !7816)
!7818 = !DILocation(line: 1714, column: 9, scope: !7816)
!7819 = !DILocation(line: 1716, column: 10, scope: !7766)
!7820 = !DILocation(line: 1717, column: 5, scope: !7766)
!7821 = !DILocation(line: 1717, column: 13, scope: !7814)
!7822 = !DILocation(line: 1717, column: 12, scope: !7814)
!7823 = !DILocation(line: 1717, column: 18, scope: !7814)
!7824 = !DILocation(line: 1717, column: 22, scope: !7825)
!7825 = !DILexicalBlockFile(scope: !7766, file: !64, discriminator: 2)
!7826 = !DILocation(line: 1717, column: 21, scope: !7825)
!7827 = !DILocation(line: 1717, column: 27, scope: !7825)
!7828 = !DILocation(line: 1717, column: 34, scope: !7825)
!7829 = !DILocation(line: 1717, column: 37, scope: !7830)
!7830 = !DILexicalBlockFile(scope: !7766, file: !64, discriminator: 3)
!7831 = !DILocation(line: 1717, column: 39, scope: !7830)
!7832 = !DILocation(line: 1717, column: 5, scope: !7833)
!7833 = !DILexicalBlockFile(scope: !7766, file: !64, discriminator: 4)
!7834 = !DILocation(line: 1718, column: 29, scope: !7766)
!7835 = !DILocation(line: 1718, column: 24, scope: !7766)
!7836 = !DILocation(line: 1718, column: 18, scope: !7766)
!7837 = !DILocation(line: 1718, column: 9, scope: !7766)
!7838 = !DILocation(line: 1718, column: 22, scope: !7766)
!7839 = !DILocation(line: 1717, column: 5, scope: !7840)
!7840 = !DILexicalBlockFile(scope: !7766, file: !64, discriminator: 5)
!7841 = distinct !{!7841, !7820}
!7842 = !DILocation(line: 1719, column: 13, scope: !7766)
!7843 = !DILocation(line: 1719, column: 5, scope: !7766)
!7844 = !DILocation(line: 1719, column: 16, scope: !7766)
!7845 = !DILocation(line: 1721, column: 10, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7766, file: !64, line: 1721, column: 9)
!7847 = !DILocation(line: 1721, column: 14, scope: !7846)
!7848 = !DILocation(line: 1721, column: 26, scope: !7846)
!7849 = !DILocation(line: 1721, column: 30, scope: !7850)
!7850 = !DILexicalBlockFile(scope: !7846, file: !64, discriminator: 1)
!7851 = !DILocation(line: 1721, column: 34, scope: !7850)
!7852 = !DILocation(line: 1721, column: 9, scope: !7850)
!7853 = !DILocation(line: 1722, column: 16, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7846, file: !64, line: 1721, column: 47)
!7855 = !DILocation(line: 1722, column: 9, scope: !7854)
!7856 = !DILocation(line: 1723, column: 9, scope: !7854)
!7857 = !DILocation(line: 1726, column: 16, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7766, file: !64, line: 1726, column: 9)
!7859 = !DILocation(line: 1726, column: 9, scope: !7858)
!7860 = !DILocation(line: 1726, column: 9, scope: !7766)
!7861 = !DILocation(line: 1727, column: 16, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7858, file: !64, line: 1726, column: 45)
!7863 = !DILocation(line: 1727, column: 9, scope: !7862)
!7864 = !DILocation(line: 1728, column: 9, scope: !7862)
!7865 = !DILocation(line: 1729, column: 23, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7858, file: !64, line: 1729, column: 16)
!7867 = !DILocation(line: 1729, column: 16, scope: !7866)
!7868 = !DILocation(line: 1729, column: 16, scope: !7858)
!7869 = !DILocation(line: 1730, column: 16, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7866, file: !64, line: 1729, column: 52)
!7871 = !DILocation(line: 1730, column: 9, scope: !7870)
!7872 = !DILocation(line: 1731, column: 9, scope: !7870)
!7873 = !DILocation(line: 1734, column: 9, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7766, file: !64, line: 1734, column: 9)
!7875 = !DILocation(line: 1734, column: 13, scope: !7874)
!7876 = !DILocation(line: 1734, column: 9, scope: !7766)
!7877 = !DILocation(line: 1735, column: 16, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7874, file: !64, line: 1734, column: 25)
!7879 = !DILocation(line: 1735, column: 9, scope: !7878)
!7880 = !DILocation(line: 1736, column: 9, scope: !7878)
!7881 = !DILocation(line: 1739, column: 5, scope: !7766)
!7882 = !DILocation(line: 1739, column: 9, scope: !7766)
!7883 = !DILocation(line: 1739, column: 24, scope: !7766)
!7884 = !DILocation(line: 1741, column: 16, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7766, file: !64, line: 1741, column: 9)
!7886 = !DILocation(line: 1741, column: 9, scope: !7885)
!7887 = !DILocation(line: 1741, column: 9, scope: !7766)
!7888 = !DILocation(line: 1742, column: 18, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7885, file: !64, line: 1741, column: 45)
!7890 = !DILocation(line: 1742, column: 22, scope: !7889)
!7891 = !DILocation(line: 1743, column: 41, scope: !7889)
!7892 = !DILocation(line: 1743, column: 50, scope: !7889)
!7893 = !DILocation(line: 1743, column: 54, scope: !7889)
!7894 = !DILocation(line: 1742, column: 9, scope: !7889)
!7895 = !DILocation(line: 1744, column: 9, scope: !7889)
!7896 = !DILocation(line: 1747, column: 25, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7766, file: !64, line: 1747, column: 9)
!7898 = !DILocation(line: 1747, column: 18, scope: !7897)
!7899 = !DILocation(line: 1747, column: 16, scope: !7897)
!7900 = !DILocation(line: 1747, column: 9, scope: !7766)
!7901 = !DILocation(line: 1748, column: 16, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7897, file: !64, line: 1747, column: 53)
!7903 = !DILocation(line: 1748, column: 9, scope: !7902)
!7904 = !DILocation(line: 1749, column: 9, scope: !7902)
!7905 = !DILocation(line: 1752, column: 16, scope: !7766)
!7906 = !DILocation(line: 1752, column: 21, scope: !7766)
!7907 = !DILocation(line: 1752, column: 26, scope: !7766)
!7908 = !DILocation(line: 1752, column: 5, scope: !7766)
!7909 = !DILocation(line: 1753, column: 11, scope: !7766)
!7910 = !DILocation(line: 1753, column: 9, scope: !7766)
!7911 = !DILocation(line: 1755, column: 5, scope: !7766)
!7912 = !DILocation(line: 1755, column: 12, scope: !7814)
!7913 = !DILocation(line: 1755, column: 5, scope: !7814)
!7914 = !DILocalVariable(name: "next", scope: !7915, file: !64, line: 1756, type: !244)
!7915 = distinct !DILexicalBlock(scope: !7766, file: !64, line: 1755, column: 17)
!7916 = !DILocation(line: 1756, column: 15, scope: !7915)
!7917 = !DILocation(line: 1756, column: 29, scope: !7915)
!7918 = !DILocation(line: 1756, column: 22, scope: !7915)
!7919 = !DILocalVariable(name: "value", scope: !7915, file: !64, line: 1757, type: !244)
!7920 = !DILocation(line: 1757, column: 15, scope: !7915)
!7921 = !DILocation(line: 1757, column: 30, scope: !7915)
!7922 = !DILocation(line: 1757, column: 23, scope: !7915)
!7923 = !DILocation(line: 1758, column: 13, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7915, file: !64, line: 1758, column: 13)
!7925 = !DILocation(line: 1758, column: 13, scope: !7915)
!7926 = !DILocation(line: 1759, column: 18, scope: !7924)
!7927 = !DILocation(line: 1759, column: 21, scope: !7924)
!7928 = !DILocation(line: 1759, column: 13, scope: !7924)
!7929 = !DILocation(line: 1760, column: 13, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7915, file: !64, line: 1760, column: 13)
!7931 = !DILocation(line: 1760, column: 13, scope: !7915)
!7932 = !DILocation(line: 1761, column: 19, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7930, file: !64, line: 1760, column: 20)
!7934 = !DILocation(line: 1761, column: 22, scope: !7933)
!7935 = !DILocation(line: 1762, column: 25, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7933, file: !64, line: 1762, column: 17)
!7937 = !DILocation(line: 1762, column: 18, scope: !7936)
!7938 = !DILocation(line: 1762, column: 17, scope: !7933)
!7939 = !DILocation(line: 1763, column: 24, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7936, file: !64, line: 1762, column: 39)
!7941 = !DILocation(line: 1763, column: 22, scope: !7940)
!7942 = !DILocation(line: 1764, column: 13, scope: !7940)
!7943 = !DILocation(line: 1764, column: 32, scope: !7944)
!7944 = !DILexicalBlockFile(scope: !7945, file: !64, discriminator: 1)
!7945 = distinct !DILexicalBlock(scope: !7936, file: !64, line: 1764, column: 24)
!7946 = !DILocation(line: 1764, column: 25, scope: !7944)
!7947 = !DILocation(line: 1764, column: 24, scope: !7944)
!7948 = !DILocation(line: 1765, column: 24, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7945, file: !64, line: 1764, column: 46)
!7950 = !DILocation(line: 1765, column: 22, scope: !7949)
!7951 = !DILocation(line: 1766, column: 13, scope: !7949)
!7952 = !DILocation(line: 1766, column: 32, scope: !7953)
!7953 = !DILexicalBlockFile(scope: !7954, file: !64, discriminator: 1)
!7954 = distinct !DILexicalBlock(scope: !7945, file: !64, line: 1766, column: 24)
!7955 = !DILocation(line: 1766, column: 25, scope: !7953)
!7956 = !DILocation(line: 1766, column: 24, scope: !7953)
!7957 = !DILocation(line: 1767, column: 26, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7954, file: !64, line: 1766, column: 48)
!7959 = !DILocation(line: 1767, column: 24, scope: !7958)
!7960 = !DILocation(line: 1768, column: 13, scope: !7958)
!7961 = !DILocation(line: 1768, column: 32, scope: !7962)
!7962 = !DILexicalBlockFile(scope: !7963, file: !64, discriminator: 1)
!7963 = distinct !DILexicalBlock(scope: !7954, file: !64, line: 1768, column: 24)
!7964 = !DILocation(line: 1768, column: 25, scope: !7962)
!7965 = !DILocation(line: 1768, column: 24, scope: !7962)
!7966 = !DILocation(line: 1769, column: 29, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7963, file: !64, line: 1768, column: 51)
!7968 = !DILocation(line: 1769, column: 27, scope: !7967)
!7969 = !DILocation(line: 1770, column: 13, scope: !7967)
!7970 = !DILocation(line: 1770, column: 32, scope: !7971)
!7971 = !DILexicalBlockFile(scope: !7972, file: !64, discriminator: 1)
!7972 = distinct !DILexicalBlock(scope: !7963, file: !64, line: 1770, column: 24)
!7973 = !DILocation(line: 1770, column: 25, scope: !7971)
!7974 = !DILocation(line: 1770, column: 24, scope: !7971)
!7975 = !DILocation(line: 1771, column: 25, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7972, file: !64, line: 1770, column: 47)
!7977 = !DILocation(line: 1771, column: 23, scope: !7976)
!7978 = !DILocation(line: 1772, column: 13, scope: !7976)
!7979 = !DILocation(line: 1773, column: 24, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7972, file: !64, line: 1772, column: 20)
!7981 = !DILocation(line: 1773, column: 64, scope: !7980)
!7982 = !DILocation(line: 1773, column: 17, scope: !7980)
!7983 = !DILocation(line: 1775, column: 9, scope: !7933)
!7984 = !DILocation(line: 1776, column: 20, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7930, file: !64, line: 1775, column: 16)
!7986 = !DILocation(line: 1776, column: 59, scope: !7985)
!7987 = !DILocation(line: 1776, column: 13, scope: !7985)
!7988 = !DILocation(line: 1778, column: 15, scope: !7915)
!7989 = !DILocation(line: 1778, column: 13, scope: !7915)
!7990 = !DILocation(line: 1755, column: 5, scope: !7825)
!7991 = distinct !{!7991, !7911}
!7992 = !DILocation(line: 1781, column: 17, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7766, file: !64, line: 1781, column: 9)
!7994 = !DILocation(line: 1781, column: 10, scope: !7993)
!7995 = !DILocation(line: 1781, column: 9, scope: !7766)
!7996 = !DILocation(line: 1782, column: 34, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7998, file: !64, line: 1782, column: 13)
!7998 = distinct !DILexicalBlock(scope: !7993, file: !64, line: 1781, column: 36)
!7999 = !DILocation(line: 1782, column: 38, scope: !7997)
!8000 = !DILocation(line: 1782, column: 44, scope: !7997)
!8001 = !DILocation(line: 1782, column: 50, scope: !7997)
!8002 = !DILocation(line: 1782, column: 58, scope: !7997)
!8003 = !DILocation(line: 1782, column: 20, scope: !7997)
!8004 = !DILocation(line: 1782, column: 18, scope: !7997)
!8005 = !DILocation(line: 1782, column: 70, scope: !7997)
!8006 = !DILocation(line: 1782, column: 13, scope: !7998)
!8007 = !DILocation(line: 1783, column: 20, scope: !7997)
!8008 = !DILocation(line: 1783, column: 13, scope: !7997)
!8009 = !DILocation(line: 1784, column: 5, scope: !7998)
!8010 = !DILocation(line: 1785, column: 33, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8012, file: !64, line: 1785, column: 13)
!8012 = distinct !DILexicalBlock(scope: !7993, file: !64, line: 1784, column: 12)
!8013 = !DILocation(line: 1785, column: 37, scope: !8011)
!8014 = !DILocation(line: 1785, column: 43, scope: !8011)
!8015 = !DILocation(line: 1785, column: 20, scope: !8011)
!8016 = !DILocation(line: 1785, column: 18, scope: !8011)
!8017 = !DILocation(line: 1785, column: 51, scope: !8011)
!8018 = !DILocation(line: 1785, column: 13, scope: !8012)
!8019 = !DILocation(line: 1786, column: 20, scope: !8011)
!8020 = !DILocation(line: 1786, column: 13, scope: !8011)
!8021 = !DILocation(line: 1789, column: 5, scope: !7766)
!8022 = !DILocation(line: 1789, column: 9, scope: !7766)
!8023 = !DILocation(line: 1789, column: 20, scope: !7766)
!8024 = !DILocation(line: 1790, column: 5, scope: !7766)
!8025 = !DILocation(line: 1791, column: 1, scope: !7766)
!8026 = distinct !DISubprogram(name: "del_tracked_method", scope: !64, file: !64, line: 184, type: !8027, isLocal: true, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8027 = !DISubroutineType(types: !8028)
!8028 = !{null, !385, !108}
!8029 = !DILocalVariable(name: "rt", arg: 1, scope: !8026, file: !64, line: 184, type: !385)
!8030 = !DILocation(line: 184, column: 45, scope: !8026)
!8031 = !DILocalVariable(name: "index", arg: 2, scope: !8026, file: !64, line: 184, type: !108)
!8032 = !DILocation(line: 184, column: 53, scope: !8026)
!8033 = !DILocation(line: 186, column: 34, scope: !8026)
!8034 = !DILocation(line: 186, column: 14, scope: !8026)
!8035 = !DILocation(line: 186, column: 18, scope: !8026)
!8036 = !DILocation(line: 186, column: 5, scope: !8026)
!8037 = !DILocation(line: 186, column: 63, scope: !8026)
!8038 = !DILocation(line: 186, column: 69, scope: !8026)
!8039 = !DILocation(line: 186, column: 43, scope: !8026)
!8040 = !DILocation(line: 186, column: 47, scope: !8026)
!8041 = !DILocation(line: 187, column: 45, scope: !8026)
!8042 = !DILocation(line: 187, column: 49, scope: !8026)
!8043 = !DILocation(line: 187, column: 70, scope: !8026)
!8044 = !DILocation(line: 187, column: 68, scope: !8026)
!8045 = !DILocation(line: 187, column: 76, scope: !8026)
!8046 = !DILocation(line: 187, column: 44, scope: !8026)
!8047 = !DILocation(line: 187, column: 42, scope: !8026)
!8048 = !DILocation(line: 188, column: 5, scope: !8026)
!8049 = !DILocation(line: 188, column: 9, scope: !8026)
!8050 = !DILocation(line: 188, column: 27, scope: !8026)
!8051 = !DILocation(line: 189, column: 1, scope: !8026)
!8052 = distinct !DISubprogram(name: "do_adobe_auth", scope: !64, file: !64, line: 1604, type: !8053, isLocal: true, isDefinition: true, scopeLine: 1606, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8053 = !DISubroutineType(types: !8054)
!8054 = !{!108, !385, !147, !147, !147, !147}
!8055 = !DILocalVariable(name: "rt", arg: 1, scope: !8052, file: !64, line: 1604, type: !385)
!8056 = !DILocation(line: 1604, column: 39, scope: !8052)
!8057 = !DILocalVariable(name: "user", arg: 2, scope: !8052, file: !64, line: 1604, type: !147)
!8058 = !DILocation(line: 1604, column: 55, scope: !8052)
!8059 = !DILocalVariable(name: "salt", arg: 3, scope: !8052, file: !64, line: 1604, type: !147)
!8060 = !DILocation(line: 1604, column: 73, scope: !8052)
!8061 = !DILocalVariable(name: "opaque", arg: 4, scope: !8052, file: !64, line: 1605, type: !147)
!8062 = !DILocation(line: 1605, column: 38, scope: !8052)
!8063 = !DILocalVariable(name: "challenge", arg: 5, scope: !8052, file: !64, line: 1605, type: !147)
!8064 = !DILocation(line: 1605, column: 58, scope: !8052)
!8065 = !DILocalVariable(name: "hash", scope: !8052, file: !64, line: 1607, type: !8066)
!8066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 128, align: 8, elements: !8067)
!8067 = !{!8068}
!8068 = !DISubrange(count: 16)
!8069 = !DILocation(line: 1607, column: 13, scope: !8052)
!8070 = !DILocalVariable(name: "hashstr", scope: !8052, file: !64, line: 1608, type: !8071)
!8071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 200, align: 8, elements: !8072)
!8072 = !{!8073}
!8073 = !DISubrange(count: 25)
!8074 = !DILocation(line: 1608, column: 10, scope: !8052)
!8075 = !DILocalVariable(name: "challenge2", scope: !8052, file: !64, line: 1608, type: !8076)
!8076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 80, align: 8, elements: !8077)
!8077 = !{!8078}
!8078 = !DISubrange(count: 10)
!8079 = !DILocation(line: 1608, column: 53, scope: !8052)
!8080 = !DILocalVariable(name: "md5", scope: !8052, file: !64, line: 1609, type: !8081)
!8081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8082, size: 64, align: 64)
!8082 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVMD5", file: !8083, line: 46, flags: DIFlagFwdDecl)
!8083 = !DIFile(filename: "./libavutil/md5.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavformat--libavformat.a")
!8084 = !DILocation(line: 1609, column: 19, scope: !8052)
!8085 = !DILocation(line: 1609, column: 25, scope: !8052)
!8086 = !DILocation(line: 1610, column: 10, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8052, file: !64, line: 1610, column: 9)
!8088 = !DILocation(line: 1610, column: 9, scope: !8052)
!8089 = !DILocation(line: 1611, column: 9, scope: !8087)
!8090 = !DILocation(line: 1613, column: 14, scope: !8052)
!8091 = !DILocation(line: 1613, column: 54, scope: !8052)
!8092 = !DILocation(line: 1613, column: 5, scope: !8093)
!8093 = !DILexicalBlockFile(scope: !8052, file: !64, discriminator: 1)
!8094 = !DILocation(line: 1615, column: 17, scope: !8052)
!8095 = !DILocation(line: 1615, column: 5, scope: !8052)
!8096 = !DILocation(line: 1616, column: 19, scope: !8052)
!8097 = !DILocation(line: 1616, column: 24, scope: !8052)
!8098 = !DILocation(line: 1616, column: 37, scope: !8052)
!8099 = !DILocation(line: 1616, column: 30, scope: !8052)
!8100 = !DILocation(line: 1616, column: 5, scope: !8093)
!8101 = !DILocation(line: 1617, column: 19, scope: !8052)
!8102 = !DILocation(line: 1617, column: 24, scope: !8052)
!8103 = !DILocation(line: 1617, column: 37, scope: !8052)
!8104 = !DILocation(line: 1617, column: 30, scope: !8052)
!8105 = !DILocation(line: 1617, column: 5, scope: !8093)
!8106 = !DILocation(line: 1618, column: 19, scope: !8052)
!8107 = !DILocation(line: 1618, column: 24, scope: !8052)
!8108 = !DILocation(line: 1618, column: 28, scope: !8052)
!8109 = !DILocation(line: 1618, column: 45, scope: !8052)
!8110 = !DILocation(line: 1618, column: 49, scope: !8052)
!8111 = !DILocation(line: 1618, column: 38, scope: !8052)
!8112 = !DILocation(line: 1618, column: 5, scope: !8093)
!8113 = !DILocation(line: 1619, column: 18, scope: !8052)
!8114 = !DILocation(line: 1619, column: 23, scope: !8052)
!8115 = !DILocation(line: 1619, column: 5, scope: !8052)
!8116 = !DILocation(line: 1620, column: 22, scope: !8052)
!8117 = !DILocation(line: 1620, column: 48, scope: !8052)
!8118 = !DILocation(line: 1620, column: 5, scope: !8052)
!8119 = !DILocation(line: 1622, column: 17, scope: !8052)
!8120 = !DILocation(line: 1622, column: 5, scope: !8052)
!8121 = !DILocation(line: 1623, column: 19, scope: !8052)
!8122 = !DILocation(line: 1623, column: 24, scope: !8052)
!8123 = !DILocation(line: 1623, column: 40, scope: !8052)
!8124 = !DILocation(line: 1623, column: 33, scope: !8052)
!8125 = !DILocation(line: 1623, column: 5, scope: !8093)
!8126 = !DILocation(line: 1624, column: 9, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8052, file: !64, line: 1624, column: 9)
!8128 = !DILocation(line: 1624, column: 9, scope: !8052)
!8129 = !DILocation(line: 1625, column: 23, scope: !8127)
!8130 = !DILocation(line: 1625, column: 28, scope: !8127)
!8131 = !DILocation(line: 1625, column: 43, scope: !8127)
!8132 = !DILocation(line: 1625, column: 36, scope: !8127)
!8133 = !DILocation(line: 1625, column: 9, scope: !8134)
!8134 = !DILexicalBlockFile(scope: !8127, file: !64, discriminator: 1)
!8135 = !DILocation(line: 1625, column: 9, scope: !8127)
!8136 = !DILocation(line: 1626, column: 14, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8127, file: !64, line: 1626, column: 14)
!8138 = !DILocation(line: 1626, column: 14, scope: !8127)
!8139 = !DILocation(line: 1627, column: 23, scope: !8137)
!8140 = !DILocation(line: 1627, column: 28, scope: !8137)
!8141 = !DILocation(line: 1627, column: 46, scope: !8137)
!8142 = !DILocation(line: 1627, column: 39, scope: !8137)
!8143 = !DILocation(line: 1627, column: 9, scope: !8144)
!8144 = !DILexicalBlockFile(scope: !8137, file: !64, discriminator: 1)
!8145 = !DILocation(line: 1627, column: 9, scope: !8137)
!8146 = !DILocation(line: 1628, column: 19, scope: !8052)
!8147 = !DILocation(line: 1628, column: 24, scope: !8052)
!8148 = !DILocation(line: 1628, column: 43, scope: !8052)
!8149 = !DILocation(line: 1628, column: 36, scope: !8052)
!8150 = !DILocation(line: 1628, column: 5, scope: !8093)
!8151 = !DILocation(line: 1629, column: 18, scope: !8052)
!8152 = !DILocation(line: 1629, column: 23, scope: !8052)
!8153 = !DILocation(line: 1629, column: 5, scope: !8052)
!8154 = !DILocation(line: 1630, column: 22, scope: !8052)
!8155 = !DILocation(line: 1630, column: 48, scope: !8052)
!8156 = !DILocation(line: 1630, column: 5, scope: !8052)
!8157 = !DILocation(line: 1632, column: 14, scope: !8052)
!8158 = !DILocation(line: 1632, column: 18, scope: !8052)
!8159 = !DILocation(line: 1634, column: 23, scope: !8052)
!8160 = !DILocation(line: 1634, column: 29, scope: !8052)
!8161 = !DILocation(line: 1634, column: 41, scope: !8052)
!8162 = !DILocation(line: 1632, column: 5, scope: !8052)
!8163 = !DILocation(line: 1635, column: 9, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8052, file: !64, line: 1635, column: 9)
!8165 = !DILocation(line: 1635, column: 9, scope: !8052)
!8166 = !DILocation(line: 1636, column: 21, scope: !8164)
!8167 = !DILocation(line: 1636, column: 25, scope: !8164)
!8168 = !DILocation(line: 1637, column: 35, scope: !8164)
!8169 = !DILocation(line: 1636, column: 9, scope: !8164)
!8170 = !DILocation(line: 1639, column: 13, scope: !8052)
!8171 = !DILocation(line: 1639, column: 5, scope: !8052)
!8172 = !DILocation(line: 1640, column: 5, scope: !8052)
!8173 = !DILocation(line: 1641, column: 1, scope: !8052)
!8174 = distinct !DISubprogram(name: "do_llnw_auth", scope: !64, file: !64, line: 1643, type: !8175, isLocal: true, isDefinition: true, scopeLine: 1644, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8175 = !DISubroutineType(types: !8176)
!8176 = !{!108, !385, !147, !147}
!8177 = !DILocalVariable(name: "rt", arg: 1, scope: !8174, file: !64, line: 1643, type: !385)
!8178 = !DILocation(line: 1643, column: 38, scope: !8174)
!8179 = !DILocalVariable(name: "user", arg: 2, scope: !8174, file: !64, line: 1643, type: !147)
!8180 = !DILocation(line: 1643, column: 54, scope: !8174)
!8181 = !DILocalVariable(name: "nonce", arg: 3, scope: !8174, file: !64, line: 1643, type: !147)
!8182 = !DILocation(line: 1643, column: 72, scope: !8174)
!8183 = !DILocalVariable(name: "hash", scope: !8174, file: !64, line: 1645, type: !8066)
!8184 = !DILocation(line: 1645, column: 13, scope: !8174)
!8185 = !DILocalVariable(name: "hashstr1", scope: !8174, file: !64, line: 1646, type: !8186)
!8186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !149, size: 264, align: 8, elements: !8187)
!8187 = !{!8188}
!8188 = !DISubrange(count: 33)
!8189 = !DILocation(line: 1646, column: 10, scope: !8174)
!8190 = !DILocalVariable(name: "hashstr2", scope: !8174, file: !64, line: 1646, type: !8186)
!8191 = !DILocation(line: 1646, column: 24, scope: !8174)
!8192 = !DILocalVariable(name: "realm", scope: !8174, file: !64, line: 1647, type: !147)
!8193 = !DILocation(line: 1647, column: 17, scope: !8174)
!8194 = !DILocalVariable(name: "method", scope: !8174, file: !64, line: 1648, type: !147)
!8195 = !DILocation(line: 1648, column: 17, scope: !8174)
!8196 = !DILocalVariable(name: "qop", scope: !8174, file: !64, line: 1649, type: !147)
!8197 = !DILocation(line: 1649, column: 17, scope: !8174)
!8198 = !DILocalVariable(name: "nc", scope: !8174, file: !64, line: 1650, type: !147)
!8199 = !DILocation(line: 1650, column: 17, scope: !8174)
!8200 = !DILocalVariable(name: "cnonce", scope: !8174, file: !64, line: 1651, type: !8076)
!8201 = !DILocation(line: 1651, column: 10, scope: !8174)
!8202 = !DILocalVariable(name: "md5", scope: !8174, file: !64, line: 1652, type: !8081)
!8203 = !DILocation(line: 1652, column: 19, scope: !8174)
!8204 = !DILocation(line: 1652, column: 25, scope: !8174)
!8205 = !DILocation(line: 1653, column: 10, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8174, file: !64, line: 1653, column: 9)
!8207 = !DILocation(line: 1653, column: 9, scope: !8174)
!8208 = !DILocation(line: 1654, column: 9, scope: !8206)
!8209 = !DILocation(line: 1656, column: 14, scope: !8174)
!8210 = !DILocation(line: 1656, column: 46, scope: !8174)
!8211 = !DILocation(line: 1656, column: 5, scope: !8212)
!8212 = !DILexicalBlockFile(scope: !8174, file: !64, discriminator: 1)
!8213 = !DILocation(line: 1658, column: 17, scope: !8174)
!8214 = !DILocation(line: 1658, column: 5, scope: !8174)
!8215 = !DILocation(line: 1659, column: 19, scope: !8174)
!8216 = !DILocation(line: 1659, column: 24, scope: !8174)
!8217 = !DILocation(line: 1659, column: 37, scope: !8174)
!8218 = !DILocation(line: 1659, column: 30, scope: !8174)
!8219 = !DILocation(line: 1659, column: 5, scope: !8212)
!8220 = !DILocation(line: 1660, column: 19, scope: !8174)
!8221 = !DILocation(line: 1660, column: 5, scope: !8174)
!8222 = !DILocation(line: 1661, column: 19, scope: !8174)
!8223 = !DILocation(line: 1661, column: 24, scope: !8174)
!8224 = !DILocation(line: 1661, column: 38, scope: !8174)
!8225 = !DILocation(line: 1661, column: 31, scope: !8174)
!8226 = !DILocation(line: 1661, column: 5, scope: !8212)
!8227 = !DILocation(line: 1662, column: 19, scope: !8174)
!8228 = !DILocation(line: 1662, column: 5, scope: !8174)
!8229 = !DILocation(line: 1663, column: 19, scope: !8174)
!8230 = !DILocation(line: 1663, column: 24, scope: !8174)
!8231 = !DILocation(line: 1663, column: 28, scope: !8174)
!8232 = !DILocation(line: 1663, column: 45, scope: !8174)
!8233 = !DILocation(line: 1663, column: 49, scope: !8174)
!8234 = !DILocation(line: 1663, column: 38, scope: !8174)
!8235 = !DILocation(line: 1663, column: 5, scope: !8212)
!8236 = !DILocation(line: 1664, column: 18, scope: !8174)
!8237 = !DILocation(line: 1664, column: 23, scope: !8174)
!8238 = !DILocation(line: 1664, column: 5, scope: !8174)
!8239 = !DILocation(line: 1665, column: 20, scope: !8174)
!8240 = !DILocation(line: 1665, column: 30, scope: !8174)
!8241 = !DILocation(line: 1665, column: 5, scope: !8174)
!8242 = !DILocation(line: 1666, column: 5, scope: !8174)
!8243 = !DILocation(line: 1666, column: 18, scope: !8174)
!8244 = !DILocation(line: 1668, column: 17, scope: !8174)
!8245 = !DILocation(line: 1668, column: 5, scope: !8174)
!8246 = !DILocation(line: 1669, column: 19, scope: !8174)
!8247 = !DILocation(line: 1669, column: 24, scope: !8174)
!8248 = !DILocation(line: 1669, column: 39, scope: !8174)
!8249 = !DILocation(line: 1669, column: 32, scope: !8174)
!8250 = !DILocation(line: 1669, column: 5, scope: !8212)
!8251 = !DILocation(line: 1670, column: 19, scope: !8174)
!8252 = !DILocation(line: 1670, column: 5, scope: !8174)
!8253 = !DILocation(line: 1671, column: 19, scope: !8174)
!8254 = !DILocation(line: 1671, column: 24, scope: !8174)
!8255 = !DILocation(line: 1671, column: 28, scope: !8174)
!8256 = !DILocation(line: 1671, column: 40, scope: !8174)
!8257 = !DILocation(line: 1671, column: 44, scope: !8174)
!8258 = !DILocation(line: 1671, column: 33, scope: !8174)
!8259 = !DILocation(line: 1671, column: 5, scope: !8212)
!8260 = !DILocation(line: 1672, column: 17, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8174, file: !64, line: 1672, column: 9)
!8262 = !DILocation(line: 1672, column: 21, scope: !8261)
!8263 = !DILocation(line: 1672, column: 10, scope: !8261)
!8264 = !DILocation(line: 1672, column: 9, scope: !8174)
!8265 = !DILocation(line: 1673, column: 23, scope: !8261)
!8266 = !DILocation(line: 1673, column: 9, scope: !8261)
!8267 = !DILocation(line: 1674, column: 18, scope: !8174)
!8268 = !DILocation(line: 1674, column: 23, scope: !8174)
!8269 = !DILocation(line: 1674, column: 5, scope: !8174)
!8270 = !DILocation(line: 1675, column: 20, scope: !8174)
!8271 = !DILocation(line: 1675, column: 30, scope: !8174)
!8272 = !DILocation(line: 1675, column: 5, scope: !8174)
!8273 = !DILocation(line: 1676, column: 5, scope: !8174)
!8274 = !DILocation(line: 1676, column: 18, scope: !8174)
!8275 = !DILocation(line: 1678, column: 17, scope: !8174)
!8276 = !DILocation(line: 1678, column: 5, scope: !8174)
!8277 = !DILocation(line: 1679, column: 19, scope: !8174)
!8278 = !DILocation(line: 1679, column: 24, scope: !8174)
!8279 = !DILocation(line: 1679, column: 41, scope: !8174)
!8280 = !DILocation(line: 1679, column: 34, scope: !8174)
!8281 = !DILocation(line: 1679, column: 5, scope: !8212)
!8282 = !DILocation(line: 1680, column: 19, scope: !8174)
!8283 = !DILocation(line: 1680, column: 5, scope: !8174)
!8284 = !DILocation(line: 1681, column: 9, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8174, file: !64, line: 1681, column: 9)
!8286 = !DILocation(line: 1681, column: 9, scope: !8174)
!8287 = !DILocation(line: 1682, column: 23, scope: !8285)
!8288 = !DILocation(line: 1682, column: 28, scope: !8285)
!8289 = !DILocation(line: 1682, column: 42, scope: !8285)
!8290 = !DILocation(line: 1682, column: 35, scope: !8285)
!8291 = !DILocation(line: 1682, column: 9, scope: !8292)
!8292 = !DILexicalBlockFile(scope: !8285, file: !64, discriminator: 1)
!8293 = !DILocation(line: 1682, column: 9, scope: !8285)
!8294 = !DILocation(line: 1683, column: 19, scope: !8174)
!8295 = !DILocation(line: 1683, column: 5, scope: !8174)
!8296 = !DILocation(line: 1684, column: 19, scope: !8174)
!8297 = !DILocation(line: 1684, column: 24, scope: !8174)
!8298 = !DILocation(line: 1684, column: 35, scope: !8174)
!8299 = !DILocation(line: 1684, column: 28, scope: !8174)
!8300 = !DILocation(line: 1684, column: 5, scope: !8212)
!8301 = !DILocation(line: 1685, column: 19, scope: !8174)
!8302 = !DILocation(line: 1685, column: 5, scope: !8174)
!8303 = !DILocation(line: 1686, column: 19, scope: !8174)
!8304 = !DILocation(line: 1686, column: 24, scope: !8174)
!8305 = !DILocation(line: 1686, column: 39, scope: !8174)
!8306 = !DILocation(line: 1686, column: 32, scope: !8174)
!8307 = !DILocation(line: 1686, column: 5, scope: !8212)
!8308 = !DILocation(line: 1687, column: 19, scope: !8174)
!8309 = !DILocation(line: 1687, column: 5, scope: !8174)
!8310 = !DILocation(line: 1688, column: 19, scope: !8174)
!8311 = !DILocation(line: 1688, column: 24, scope: !8174)
!8312 = !DILocation(line: 1688, column: 36, scope: !8174)
!8313 = !DILocation(line: 1688, column: 29, scope: !8174)
!8314 = !DILocation(line: 1688, column: 5, scope: !8212)
!8315 = !DILocation(line: 1689, column: 19, scope: !8174)
!8316 = !DILocation(line: 1689, column: 5, scope: !8174)
!8317 = !DILocation(line: 1690, column: 19, scope: !8174)
!8318 = !DILocation(line: 1690, column: 24, scope: !8174)
!8319 = !DILocation(line: 1690, column: 41, scope: !8174)
!8320 = !DILocation(line: 1690, column: 34, scope: !8174)
!8321 = !DILocation(line: 1690, column: 5, scope: !8212)
!8322 = !DILocation(line: 1691, column: 18, scope: !8174)
!8323 = !DILocation(line: 1691, column: 23, scope: !8174)
!8324 = !DILocation(line: 1691, column: 5, scope: !8174)
!8325 = !DILocation(line: 1692, column: 20, scope: !8174)
!8326 = !DILocation(line: 1692, column: 30, scope: !8174)
!8327 = !DILocation(line: 1692, column: 5, scope: !8174)
!8328 = !DILocation(line: 1694, column: 14, scope: !8174)
!8329 = !DILocation(line: 1694, column: 18, scope: !8174)
!8330 = !DILocation(line: 1696, column: 22, scope: !8174)
!8331 = !DILocation(line: 1696, column: 28, scope: !8174)
!8332 = !DILocation(line: 1696, column: 35, scope: !8174)
!8333 = !DILocation(line: 1696, column: 43, scope: !8174)
!8334 = !DILocation(line: 1696, column: 47, scope: !8174)
!8335 = !DILocation(line: 1694, column: 5, scope: !8174)
!8336 = !DILocation(line: 1698, column: 13, scope: !8174)
!8337 = !DILocation(line: 1698, column: 5, scope: !8174)
!8338 = !DILocation(line: 1699, column: 5, scope: !8174)
!8339 = !DILocation(line: 1700, column: 1, scope: !8174)
!8340 = distinct !DISubprogram(name: "gen_release_stream", scope: !64, file: !64, line: 597, type: !2327, isLocal: true, isDefinition: true, scopeLine: 598, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8341 = !DILocalVariable(name: "s", arg: 1, scope: !8340, file: !64, line: 597, type: !154)
!8342 = !DILocation(line: 597, column: 43, scope: !8340)
!8343 = !DILocalVariable(name: "rt", arg: 2, scope: !8340, file: !64, line: 597, type: !385)
!8344 = !DILocation(line: 597, column: 59, scope: !8340)
!8345 = !DILocalVariable(name: "pkt", scope: !8340, file: !64, line: 599, type: !394)
!8346 = !DILocation(line: 599, column: 16, scope: !8340)
!8347 = !DILocalVariable(name: "p", scope: !8340, file: !64, line: 600, type: !110)
!8348 = !DILocation(line: 600, column: 14, scope: !8340)
!8349 = !DILocalVariable(name: "ret", scope: !8340, file: !64, line: 601, type: !108)
!8350 = !DILocation(line: 601, column: 9, scope: !8340)
!8351 = !DILocation(line: 604, column: 53, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8340, file: !64, line: 603, column: 9)
!8353 = !DILocation(line: 604, column: 57, scope: !8352)
!8354 = !DILocation(line: 604, column: 46, scope: !8352)
!8355 = !DILocation(line: 604, column: 44, scope: !8352)
!8356 = !DILocation(line: 604, column: 41, scope: !8352)
!8357 = !DILocation(line: 603, column: 16, scope: !8352)
!8358 = !DILocation(line: 603, column: 14, scope: !8352)
!8359 = !DILocation(line: 604, column: 69, scope: !8352)
!8360 = !DILocation(line: 603, column: 9, scope: !8340)
!8361 = !DILocation(line: 605, column: 16, scope: !8352)
!8362 = !DILocation(line: 605, column: 9, scope: !8352)
!8363 = !DILocation(line: 607, column: 12, scope: !8340)
!8364 = !DILocation(line: 607, column: 5, scope: !8340)
!8365 = !DILocation(line: 608, column: 13, scope: !8340)
!8366 = !DILocation(line: 608, column: 7, scope: !8340)
!8367 = !DILocation(line: 609, column: 5, scope: !8340)
!8368 = !DILocation(line: 610, column: 31, scope: !8340)
!8369 = !DILocation(line: 610, column: 35, scope: !8340)
!8370 = !DILocation(line: 610, column: 29, scope: !8340)
!8371 = !DILocation(line: 610, column: 5, scope: !8340)
!8372 = !DILocation(line: 611, column: 5, scope: !8340)
!8373 = !DILocation(line: 612, column: 29, scope: !8340)
!8374 = !DILocation(line: 612, column: 33, scope: !8340)
!8375 = !DILocation(line: 612, column: 5, scope: !8340)
!8376 = !DILocation(line: 614, column: 29, scope: !8340)
!8377 = !DILocation(line: 614, column: 12, scope: !8340)
!8378 = !DILocation(line: 614, column: 5, scope: !8340)
!8379 = !DILocation(line: 615, column: 1, scope: !8340)
!8380 = distinct !DISubprogram(name: "gen_fcpublish_stream", scope: !64, file: !64, line: 621, type: !2327, isLocal: true, isDefinition: true, scopeLine: 622, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8381 = !DILocalVariable(name: "s", arg: 1, scope: !8380, file: !64, line: 621, type: !154)
!8382 = !DILocation(line: 621, column: 45, scope: !8380)
!8383 = !DILocalVariable(name: "rt", arg: 2, scope: !8380, file: !64, line: 621, type: !385)
!8384 = !DILocation(line: 621, column: 61, scope: !8380)
!8385 = !DILocalVariable(name: "pkt", scope: !8380, file: !64, line: 623, type: !394)
!8386 = !DILocation(line: 623, column: 16, scope: !8380)
!8387 = !DILocalVariable(name: "p", scope: !8380, file: !64, line: 624, type: !110)
!8388 = !DILocation(line: 624, column: 14, scope: !8380)
!8389 = !DILocalVariable(name: "ret", scope: !8380, file: !64, line: 625, type: !108)
!8390 = !DILocation(line: 625, column: 9, scope: !8380)
!8391 = !DILocation(line: 628, column: 53, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8380, file: !64, line: 627, column: 9)
!8393 = !DILocation(line: 628, column: 57, scope: !8392)
!8394 = !DILocation(line: 628, column: 46, scope: !8392)
!8395 = !DILocation(line: 628, column: 44, scope: !8392)
!8396 = !DILocation(line: 628, column: 41, scope: !8392)
!8397 = !DILocation(line: 627, column: 16, scope: !8392)
!8398 = !DILocation(line: 627, column: 14, scope: !8392)
!8399 = !DILocation(line: 628, column: 69, scope: !8392)
!8400 = !DILocation(line: 627, column: 9, scope: !8380)
!8401 = !DILocation(line: 629, column: 16, scope: !8392)
!8402 = !DILocation(line: 629, column: 9, scope: !8392)
!8403 = !DILocation(line: 631, column: 12, scope: !8380)
!8404 = !DILocation(line: 631, column: 5, scope: !8380)
!8405 = !DILocation(line: 632, column: 13, scope: !8380)
!8406 = !DILocation(line: 632, column: 7, scope: !8380)
!8407 = !DILocation(line: 633, column: 5, scope: !8380)
!8408 = !DILocation(line: 634, column: 31, scope: !8380)
!8409 = !DILocation(line: 634, column: 35, scope: !8380)
!8410 = !DILocation(line: 634, column: 29, scope: !8380)
!8411 = !DILocation(line: 634, column: 5, scope: !8380)
!8412 = !DILocation(line: 635, column: 5, scope: !8380)
!8413 = !DILocation(line: 636, column: 29, scope: !8380)
!8414 = !DILocation(line: 636, column: 33, scope: !8380)
!8415 = !DILocation(line: 636, column: 5, scope: !8380)
!8416 = !DILocation(line: 638, column: 29, scope: !8380)
!8417 = !DILocation(line: 638, column: 12, scope: !8380)
!8418 = !DILocation(line: 638, column: 5, scope: !8380)
!8419 = !DILocation(line: 639, column: 1, scope: !8380)
!8420 = distinct !DISubprogram(name: "gen_window_ack_size", scope: !64, file: !64, line: 915, type: !2327, isLocal: true, isDefinition: true, scopeLine: 916, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8421 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !8422)
!8422 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !8423)
!8423 = distinct !DILocation(line: 926, column: 5, scope: !8420)
!8424 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !8423)
!8425 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !8423)
!8426 = !DILocalVariable(name: "s", arg: 1, scope: !8420, file: !64, line: 915, type: !154)
!8427 = !DILocation(line: 915, column: 44, scope: !8420)
!8428 = !DILocalVariable(name: "rt", arg: 2, scope: !8420, file: !64, line: 915, type: !385)
!8429 = !DILocation(line: 915, column: 60, scope: !8420)
!8430 = !DILocalVariable(name: "pkt", scope: !8420, file: !64, line: 917, type: !394)
!8431 = !DILocation(line: 917, column: 16, scope: !8420)
!8432 = !DILocalVariable(name: "p", scope: !8420, file: !64, line: 918, type: !110)
!8433 = !DILocation(line: 918, column: 14, scope: !8420)
!8434 = !DILocalVariable(name: "ret", scope: !8420, file: !64, line: 919, type: !108)
!8435 = !DILocation(line: 919, column: 9, scope: !8420)
!8436 = !DILocation(line: 921, column: 16, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8420, file: !64, line: 921, column: 9)
!8438 = !DILocation(line: 921, column: 14, scope: !8437)
!8439 = !DILocation(line: 922, column: 45, scope: !8437)
!8440 = !DILocation(line: 921, column: 9, scope: !8420)
!8441 = !DILocation(line: 923, column: 16, scope: !8437)
!8442 = !DILocation(line: 923, column: 9, scope: !8437)
!8443 = !DILocation(line: 925, column: 13, scope: !8420)
!8444 = !DILocation(line: 925, column: 7, scope: !8420)
!8445 = !DILocation(line: 926, column: 29, scope: !8420)
!8446 = !DILocation(line: 926, column: 33, scope: !8420)
!8447 = !DILocation(line: 926, column: 5, scope: !8420)
!8448 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !8423)
!8449 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !8423)
!8450 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !8422)
!8451 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !8422)
!8452 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !8422)
!8453 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !8422)
!8454 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !8422)
!8455 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !8422)
!8456 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !8422)
!8457 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !8422)
!8458 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !8422)
!8459 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !8422)
!8460 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !8422)
!8461 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !8422)
!8462 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !8422)
!8463 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !8422)
!8464 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !8422)
!8465 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !8422)
!8466 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !8422)
!8467 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !8422)
!8468 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !8423)
!8469 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !8423)
!8470 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !8423)
!8471 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !8423)
!8472 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !8423)
!8473 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !8423)
!8474 = !DILocation(line: 928, column: 29, scope: !8420)
!8475 = !DILocation(line: 928, column: 12, scope: !8420)
!8476 = !DILocation(line: 928, column: 5, scope: !8420)
!8477 = !DILocation(line: 929, column: 1, scope: !8420)
!8478 = distinct !DISubprogram(name: "gen_create_stream", scope: !64, file: !64, line: 669, type: !2327, isLocal: true, isDefinition: true, scopeLine: 670, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8479 = !DILocalVariable(name: "s", arg: 1, scope: !8478, file: !64, line: 669, type: !154)
!8480 = !DILocation(line: 669, column: 42, scope: !8478)
!8481 = !DILocalVariable(name: "rt", arg: 2, scope: !8478, file: !64, line: 669, type: !385)
!8482 = !DILocation(line: 669, column: 58, scope: !8478)
!8483 = !DILocalVariable(name: "pkt", scope: !8478, file: !64, line: 671, type: !394)
!8484 = !DILocation(line: 671, column: 16, scope: !8478)
!8485 = !DILocalVariable(name: "p", scope: !8478, file: !64, line: 672, type: !110)
!8486 = !DILocation(line: 672, column: 14, scope: !8478)
!8487 = !DILocalVariable(name: "ret", scope: !8478, file: !64, line: 673, type: !108)
!8488 = !DILocation(line: 673, column: 9, scope: !8478)
!8489 = !DILocation(line: 675, column: 12, scope: !8478)
!8490 = !DILocation(line: 675, column: 5, scope: !8478)
!8491 = !DILocation(line: 677, column: 16, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8478, file: !64, line: 677, column: 9)
!8493 = !DILocation(line: 677, column: 14, scope: !8492)
!8494 = !DILocation(line: 678, column: 46, scope: !8492)
!8495 = !DILocation(line: 677, column: 9, scope: !8478)
!8496 = !DILocation(line: 679, column: 16, scope: !8492)
!8497 = !DILocation(line: 679, column: 9, scope: !8492)
!8498 = !DILocation(line: 681, column: 13, scope: !8478)
!8499 = !DILocation(line: 681, column: 7, scope: !8478)
!8500 = !DILocation(line: 682, column: 5, scope: !8478)
!8501 = !DILocation(line: 683, column: 31, scope: !8478)
!8502 = !DILocation(line: 683, column: 35, scope: !8478)
!8503 = !DILocation(line: 683, column: 29, scope: !8478)
!8504 = !DILocation(line: 683, column: 5, scope: !8478)
!8505 = !DILocation(line: 684, column: 5, scope: !8478)
!8506 = !DILocation(line: 686, column: 29, scope: !8478)
!8507 = !DILocation(line: 686, column: 12, scope: !8478)
!8508 = !DILocation(line: 686, column: 5, scope: !8478)
!8509 = !DILocation(line: 687, column: 1, scope: !8478)
!8510 = distinct !DISubprogram(name: "gen_fcsubscribe_stream", scope: !64, file: !64, line: 971, type: !8511, isLocal: true, isDefinition: true, scopeLine: 973, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8511 = !DISubroutineType(types: !8512)
!8512 = !{!108, !154, !385, !147}
!8513 = !DILocalVariable(name: "s", arg: 1, scope: !8510, file: !64, line: 971, type: !154)
!8514 = !DILocation(line: 971, column: 47, scope: !8510)
!8515 = !DILocalVariable(name: "rt", arg: 2, scope: !8510, file: !64, line: 971, type: !385)
!8516 = !DILocation(line: 971, column: 63, scope: !8510)
!8517 = !DILocalVariable(name: "subscribe", arg: 3, scope: !8510, file: !64, line: 972, type: !147)
!8518 = !DILocation(line: 972, column: 47, scope: !8510)
!8519 = !DILocalVariable(name: "pkt", scope: !8510, file: !64, line: 974, type: !394)
!8520 = !DILocation(line: 974, column: 16, scope: !8510)
!8521 = !DILocalVariable(name: "p", scope: !8510, file: !64, line: 975, type: !110)
!8522 = !DILocation(line: 975, column: 14, scope: !8510)
!8523 = !DILocalVariable(name: "ret", scope: !8510, file: !64, line: 976, type: !108)
!8524 = !DILocation(line: 976, column: 9, scope: !8510)
!8525 = !DILocation(line: 979, column: 53, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8510, file: !64, line: 978, column: 9)
!8527 = !DILocation(line: 979, column: 46, scope: !8526)
!8528 = !DILocation(line: 979, column: 44, scope: !8526)
!8529 = !DILocation(line: 979, column: 41, scope: !8526)
!8530 = !DILocation(line: 978, column: 16, scope: !8526)
!8531 = !DILocation(line: 978, column: 14, scope: !8526)
!8532 = !DILocation(line: 979, column: 66, scope: !8526)
!8533 = !DILocation(line: 978, column: 9, scope: !8510)
!8534 = !DILocation(line: 980, column: 16, scope: !8526)
!8535 = !DILocation(line: 980, column: 9, scope: !8526)
!8536 = !DILocation(line: 982, column: 13, scope: !8510)
!8537 = !DILocation(line: 982, column: 7, scope: !8510)
!8538 = !DILocation(line: 983, column: 5, scope: !8510)
!8539 = !DILocation(line: 984, column: 31, scope: !8510)
!8540 = !DILocation(line: 984, column: 35, scope: !8510)
!8541 = !DILocation(line: 984, column: 29, scope: !8510)
!8542 = !DILocation(line: 984, column: 5, scope: !8510)
!8543 = !DILocation(line: 985, column: 5, scope: !8510)
!8544 = !DILocation(line: 986, column: 29, scope: !8510)
!8545 = !DILocation(line: 986, column: 5, scope: !8510)
!8546 = !DILocation(line: 988, column: 29, scope: !8510)
!8547 = !DILocation(line: 988, column: 12, scope: !8510)
!8548 = !DILocation(line: 988, column: 5, scope: !8510)
!8549 = !DILocation(line: 989, column: 1, scope: !8510)
!8550 = distinct !DISubprogram(name: "read_number_result", scope: !64, file: !64, line: 2017, type: !8551, isLocal: true, isDefinition: true, scopeLine: 2018, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8551 = !DISubroutineType(types: !8552)
!8552 = !{!108, !393, !8553}
!8553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64)
!8554 = !DILocation(line: 133, column: 84, scope: !1441, inlinedAt: !8555)
!8555 = distinct !DILocation(line: 2025, column: 5, scope: !8550)
!8556 = !DILocation(line: 134, column: 62, scope: !1441, inlinedAt: !8555)
!8557 = !DILocation(line: 135, column: 51, scope: !1441, inlinedAt: !8555)
!8558 = !DILocalVariable(name: "pkt", arg: 1, scope: !8550, file: !64, line: 2017, type: !393)
!8559 = !DILocation(line: 2017, column: 43, scope: !8550)
!8560 = !DILocalVariable(name: "number", arg: 2, scope: !8550, file: !64, line: 2017, type: !8553)
!8561 = !DILocation(line: 2017, column: 56, scope: !8550)
!8562 = !DILocalVariable(name: "strbuffer", scope: !8550, file: !64, line: 2020, type: !8563)
!8563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 64, align: 8, elements: !486)
!8564 = !DILocation(line: 2020, column: 13, scope: !8550)
!8565 = !DILocalVariable(name: "stringlen", scope: !8550, file: !64, line: 2021, type: !108)
!8566 = !DILocation(line: 2021, column: 9, scope: !8550)
!8567 = !DILocalVariable(name: "numbuffer", scope: !8550, file: !64, line: 2022, type: !185)
!8568 = !DILocation(line: 2022, column: 12, scope: !8550)
!8569 = !DILocalVariable(name: "gbc", scope: !8550, file: !64, line: 2023, type: !1445)
!8570 = !DILocation(line: 2023, column: 20, scope: !8550)
!8571 = !DILocation(line: 2025, column: 28, scope: !8550)
!8572 = !DILocation(line: 2025, column: 33, scope: !8550)
!8573 = !DILocation(line: 2025, column: 39, scope: !8550)
!8574 = !DILocation(line: 2025, column: 44, scope: !8550)
!8575 = !DILocation(line: 2025, column: 5, scope: !8550)
!8576 = !DILocation(line: 137, column: 16, scope: !1805, inlinedAt: !8555)
!8577 = !DILocation(line: 137, column: 25, scope: !1805, inlinedAt: !8555)
!8578 = !DILocation(line: 137, column: 14, scope: !1805, inlinedAt: !8555)
!8579 = !DILocation(line: 137, column: 34, scope: !1811, inlinedAt: !8555)
!8580 = !DILocation(line: 137, column: 95, scope: !1814, inlinedAt: !8555)
!8581 = !DILocation(line: 137, column: 95, scope: !1811, inlinedAt: !8555)
!8582 = !DILocation(line: 138, column: 17, scope: !1441, inlinedAt: !8555)
!8583 = !DILocation(line: 138, column: 5, scope: !1441, inlinedAt: !8555)
!8584 = !DILocation(line: 138, column: 8, scope: !1441, inlinedAt: !8555)
!8585 = !DILocation(line: 138, column: 15, scope: !1441, inlinedAt: !8555)
!8586 = !DILocation(line: 139, column: 23, scope: !1441, inlinedAt: !8555)
!8587 = !DILocation(line: 139, column: 5, scope: !1441, inlinedAt: !8555)
!8588 = !DILocation(line: 139, column: 8, scope: !1441, inlinedAt: !8555)
!8589 = !DILocation(line: 139, column: 21, scope: !1441, inlinedAt: !8555)
!8590 = !DILocation(line: 140, column: 21, scope: !1441, inlinedAt: !8555)
!8591 = !DILocation(line: 140, column: 27, scope: !1441, inlinedAt: !8555)
!8592 = !DILocation(line: 140, column: 25, scope: !1441, inlinedAt: !8555)
!8593 = !DILocation(line: 140, column: 5, scope: !1441, inlinedAt: !8555)
!8594 = !DILocation(line: 140, column: 8, scope: !1441, inlinedAt: !8555)
!8595 = !DILocation(line: 140, column: 19, scope: !1441, inlinedAt: !8555)
!8596 = !DILocation(line: 2028, column: 34, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8550, file: !64, line: 2028, column: 9)
!8598 = !DILocation(line: 2028, column: 9, scope: !8597)
!8599 = !DILocation(line: 2028, column: 9, scope: !8550)
!8600 = !DILocation(line: 2029, column: 9, scope: !8597)
!8601 = !DILocation(line: 2030, column: 16, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8550, file: !64, line: 2030, column: 9)
!8603 = !DILocation(line: 2030, column: 9, scope: !8602)
!8604 = !DILocation(line: 2030, column: 9, scope: !8550)
!8605 = !DILocation(line: 2031, column: 9, scope: !8602)
!8606 = !DILocation(line: 2033, column: 9, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8550, file: !64, line: 2033, column: 9)
!8608 = !DILocation(line: 2033, column: 9, scope: !8550)
!8609 = !DILocation(line: 2034, column: 9, scope: !8607)
!8610 = !DILocation(line: 2036, column: 9, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8550, file: !64, line: 2036, column: 9)
!8612 = !DILocation(line: 2036, column: 9, scope: !8550)
!8613 = !DILocation(line: 2037, column: 9, scope: !8611)
!8614 = !DILocation(line: 2039, column: 9, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8550, file: !64, line: 2039, column: 9)
!8616 = !DILocation(line: 2039, column: 9, scope: !8550)
!8617 = !DILocation(line: 2040, column: 9, scope: !8615)
!8618 = !DILocation(line: 2042, column: 19, scope: !8615)
!8619 = !DILocation(line: 2042, column: 10, scope: !8615)
!8620 = !DILocation(line: 2042, column: 17, scope: !8615)
!8621 = !DILocation(line: 2044, column: 5, scope: !8550)
!8622 = !DILocation(line: 2045, column: 1, scope: !8550)
!8623 = distinct !DISubprogram(name: "gen_publish", scope: !64, file: !64, line: 841, type: !2327, isLocal: true, isDefinition: true, scopeLine: 842, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8624 = !DILocalVariable(name: "s", arg: 1, scope: !8623, file: !64, line: 841, type: !154)
!8625 = !DILocation(line: 841, column: 36, scope: !8623)
!8626 = !DILocalVariable(name: "rt", arg: 2, scope: !8623, file: !64, line: 841, type: !385)
!8627 = !DILocation(line: 841, column: 52, scope: !8623)
!8628 = !DILocalVariable(name: "pkt", scope: !8623, file: !64, line: 843, type: !394)
!8629 = !DILocation(line: 843, column: 16, scope: !8623)
!8630 = !DILocalVariable(name: "p", scope: !8623, file: !64, line: 844, type: !110)
!8631 = !DILocation(line: 844, column: 14, scope: !8623)
!8632 = !DILocalVariable(name: "ret", scope: !8623, file: !64, line: 845, type: !108)
!8633 = !DILocation(line: 845, column: 9, scope: !8623)
!8634 = !DILocation(line: 847, column: 12, scope: !8623)
!8635 = !DILocation(line: 847, column: 57, scope: !8623)
!8636 = !DILocation(line: 847, column: 61, scope: !8623)
!8637 = !DILocation(line: 847, column: 5, scope: !8623)
!8638 = !DILocation(line: 850, column: 53, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8623, file: !64, line: 849, column: 9)
!8640 = !DILocation(line: 850, column: 57, scope: !8639)
!8641 = !DILocation(line: 850, column: 46, scope: !8639)
!8642 = !DILocation(line: 850, column: 44, scope: !8639)
!8643 = !DILocation(line: 850, column: 41, scope: !8639)
!8644 = !DILocation(line: 849, column: 16, scope: !8639)
!8645 = !DILocation(line: 849, column: 14, scope: !8639)
!8646 = !DILocation(line: 850, column: 69, scope: !8639)
!8647 = !DILocation(line: 849, column: 9, scope: !8623)
!8648 = !DILocation(line: 851, column: 16, scope: !8639)
!8649 = !DILocation(line: 851, column: 9, scope: !8639)
!8650 = !DILocation(line: 853, column: 17, scope: !8623)
!8651 = !DILocation(line: 853, column: 21, scope: !8623)
!8652 = !DILocation(line: 853, column: 9, scope: !8623)
!8653 = !DILocation(line: 853, column: 15, scope: !8623)
!8654 = !DILocation(line: 855, column: 13, scope: !8623)
!8655 = !DILocation(line: 855, column: 7, scope: !8623)
!8656 = !DILocation(line: 856, column: 5, scope: !8623)
!8657 = !DILocation(line: 857, column: 31, scope: !8623)
!8658 = !DILocation(line: 857, column: 35, scope: !8623)
!8659 = !DILocation(line: 857, column: 29, scope: !8623)
!8660 = !DILocation(line: 857, column: 5, scope: !8623)
!8661 = !DILocation(line: 858, column: 5, scope: !8623)
!8662 = !DILocation(line: 859, column: 29, scope: !8623)
!8663 = !DILocation(line: 859, column: 33, scope: !8623)
!8664 = !DILocation(line: 859, column: 5, scope: !8623)
!8665 = !DILocation(line: 860, column: 5, scope: !8623)
!8666 = !DILocation(line: 862, column: 29, scope: !8623)
!8667 = !DILocation(line: 862, column: 12, scope: !8623)
!8668 = !DILocation(line: 862, column: 5, scope: !8623)
!8669 = !DILocation(line: 863, column: 1, scope: !8623)
!8670 = distinct !DISubprogram(name: "gen_get_stream_length", scope: !64, file: !64, line: 720, type: !2327, isLocal: true, isDefinition: true, scopeLine: 721, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8671 = !DILocalVariable(name: "s", arg: 1, scope: !8670, file: !64, line: 720, type: !154)
!8672 = !DILocation(line: 720, column: 46, scope: !8670)
!8673 = !DILocalVariable(name: "rt", arg: 2, scope: !8670, file: !64, line: 720, type: !385)
!8674 = !DILocation(line: 720, column: 62, scope: !8670)
!8675 = !DILocalVariable(name: "pkt", scope: !8670, file: !64, line: 722, type: !394)
!8676 = !DILocation(line: 722, column: 16, scope: !8670)
!8677 = !DILocalVariable(name: "p", scope: !8670, file: !64, line: 723, type: !110)
!8678 = !DILocation(line: 723, column: 14, scope: !8670)
!8679 = !DILocalVariable(name: "ret", scope: !8670, file: !64, line: 724, type: !108)
!8680 = !DILocation(line: 724, column: 9, scope: !8670)
!8681 = !DILocation(line: 727, column: 53, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8670, file: !64, line: 726, column: 9)
!8683 = !DILocation(line: 727, column: 57, scope: !8682)
!8684 = !DILocation(line: 727, column: 46, scope: !8682)
!8685 = !DILocation(line: 727, column: 44, scope: !8682)
!8686 = !DILocation(line: 727, column: 41, scope: !8682)
!8687 = !DILocation(line: 726, column: 16, scope: !8682)
!8688 = !DILocation(line: 726, column: 14, scope: !8682)
!8689 = !DILocation(line: 727, column: 69, scope: !8682)
!8690 = !DILocation(line: 726, column: 9, scope: !8670)
!8691 = !DILocation(line: 728, column: 16, scope: !8682)
!8692 = !DILocation(line: 728, column: 9, scope: !8682)
!8693 = !DILocation(line: 730, column: 13, scope: !8670)
!8694 = !DILocation(line: 730, column: 7, scope: !8670)
!8695 = !DILocation(line: 731, column: 5, scope: !8670)
!8696 = !DILocation(line: 732, column: 31, scope: !8670)
!8697 = !DILocation(line: 732, column: 35, scope: !8670)
!8698 = !DILocation(line: 732, column: 29, scope: !8670)
!8699 = !DILocation(line: 732, column: 5, scope: !8670)
!8700 = !DILocation(line: 733, column: 5, scope: !8670)
!8701 = !DILocation(line: 734, column: 29, scope: !8670)
!8702 = !DILocation(line: 734, column: 33, scope: !8670)
!8703 = !DILocation(line: 734, column: 5, scope: !8670)
!8704 = !DILocation(line: 736, column: 29, scope: !8670)
!8705 = !DILocation(line: 736, column: 12, scope: !8670)
!8706 = !DILocation(line: 736, column: 5, scope: !8670)
!8707 = !DILocation(line: 737, column: 1, scope: !8670)
!8708 = distinct !DISubprogram(name: "gen_play", scope: !64, file: !64, line: 764, type: !2327, isLocal: true, isDefinition: true, scopeLine: 765, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8709 = !DILocalVariable(name: "s", arg: 1, scope: !8708, file: !64, line: 764, type: !154)
!8710 = !DILocation(line: 764, column: 33, scope: !8708)
!8711 = !DILocalVariable(name: "rt", arg: 2, scope: !8708, file: !64, line: 764, type: !385)
!8712 = !DILocation(line: 764, column: 49, scope: !8708)
!8713 = !DILocalVariable(name: "pkt", scope: !8708, file: !64, line: 766, type: !394)
!8714 = !DILocation(line: 766, column: 16, scope: !8708)
!8715 = !DILocalVariable(name: "p", scope: !8708, file: !64, line: 767, type: !110)
!8716 = !DILocation(line: 767, column: 14, scope: !8708)
!8717 = !DILocalVariable(name: "ret", scope: !8708, file: !64, line: 768, type: !108)
!8718 = !DILocation(line: 768, column: 9, scope: !8708)
!8719 = !DILocation(line: 770, column: 12, scope: !8708)
!8720 = !DILocation(line: 770, column: 54, scope: !8708)
!8721 = !DILocation(line: 770, column: 58, scope: !8708)
!8722 = !DILocation(line: 770, column: 5, scope: !8708)
!8723 = !DILocation(line: 773, column: 53, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8708, file: !64, line: 772, column: 9)
!8725 = !DILocation(line: 773, column: 57, scope: !8724)
!8726 = !DILocation(line: 773, column: 46, scope: !8724)
!8727 = !DILocation(line: 773, column: 44, scope: !8724)
!8728 = !DILocation(line: 773, column: 41, scope: !8724)
!8729 = !DILocation(line: 772, column: 16, scope: !8724)
!8730 = !DILocation(line: 772, column: 14, scope: !8724)
!8731 = !DILocation(line: 773, column: 69, scope: !8724)
!8732 = !DILocation(line: 772, column: 9, scope: !8708)
!8733 = !DILocation(line: 774, column: 16, scope: !8724)
!8734 = !DILocation(line: 774, column: 9, scope: !8724)
!8735 = !DILocation(line: 776, column: 17, scope: !8708)
!8736 = !DILocation(line: 776, column: 21, scope: !8708)
!8737 = !DILocation(line: 776, column: 9, scope: !8708)
!8738 = !DILocation(line: 776, column: 15, scope: !8708)
!8739 = !DILocation(line: 778, column: 13, scope: !8708)
!8740 = !DILocation(line: 778, column: 7, scope: !8708)
!8741 = !DILocation(line: 779, column: 5, scope: !8708)
!8742 = !DILocation(line: 780, column: 31, scope: !8708)
!8743 = !DILocation(line: 780, column: 35, scope: !8708)
!8744 = !DILocation(line: 780, column: 29, scope: !8708)
!8745 = !DILocation(line: 780, column: 5, scope: !8708)
!8746 = !DILocation(line: 781, column: 5, scope: !8708)
!8747 = !DILocation(line: 782, column: 29, scope: !8708)
!8748 = !DILocation(line: 782, column: 33, scope: !8708)
!8749 = !DILocation(line: 782, column: 5, scope: !8708)
!8750 = !DILocation(line: 783, column: 29, scope: !8708)
!8751 = !DILocation(line: 783, column: 33, scope: !8708)
!8752 = !DILocation(line: 783, column: 38, scope: !8708)
!8753 = !DILocation(line: 783, column: 5, scope: !8708)
!8754 = !DILocation(line: 785, column: 29, scope: !8708)
!8755 = !DILocation(line: 785, column: 12, scope: !8708)
!8756 = !DILocation(line: 785, column: 5, scope: !8708)
!8757 = !DILocation(line: 786, column: 1, scope: !8708)
!8758 = distinct !DISubprogram(name: "gen_buffer_time", scope: !64, file: !64, line: 742, type: !2327, isLocal: true, isDefinition: true, scopeLine: 743, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8759 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !8760)
!8760 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !8761)
!8761 = distinct !DILocation(line: 755, column: 5, scope: !8758)
!8762 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !8761)
!8763 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !8761)
!8764 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !8765)
!8765 = distinct !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !8766)
!8766 = distinct !DILocation(line: 754, column: 5, scope: !8758)
!8767 = !DILocation(line: 92, column: 258, scope: !2954, inlinedAt: !8766)
!8768 = !DILocation(line: 92, column: 280, scope: !2954, inlinedAt: !8766)
!8769 = !DILocation(line: 58, column: 98, scope: !2971, inlinedAt: !8770)
!8770 = distinct !DILocation(line: 94, column: 328, scope: !2976, inlinedAt: !8771)
!8771 = distinct !DILocation(line: 753, column: 5, scope: !8758)
!8772 = !DILocation(line: 94, column: 258, scope: !2976, inlinedAt: !8771)
!8773 = !DILocation(line: 94, column: 280, scope: !2976, inlinedAt: !8771)
!8774 = !DILocalVariable(name: "s", arg: 1, scope: !8758, file: !64, line: 742, type: !154)
!8775 = !DILocation(line: 742, column: 40, scope: !8758)
!8776 = !DILocalVariable(name: "rt", arg: 2, scope: !8758, file: !64, line: 742, type: !385)
!8777 = !DILocation(line: 742, column: 56, scope: !8758)
!8778 = !DILocalVariable(name: "pkt", scope: !8758, file: !64, line: 744, type: !394)
!8779 = !DILocation(line: 744, column: 16, scope: !8758)
!8780 = !DILocalVariable(name: "p", scope: !8758, file: !64, line: 745, type: !110)
!8781 = !DILocation(line: 745, column: 14, scope: !8758)
!8782 = !DILocalVariable(name: "ret", scope: !8758, file: !64, line: 746, type: !108)
!8783 = !DILocation(line: 746, column: 9, scope: !8758)
!8784 = !DILocation(line: 748, column: 16, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8758, file: !64, line: 748, column: 9)
!8786 = !DILocation(line: 748, column: 14, scope: !8785)
!8787 = !DILocation(line: 749, column: 46, scope: !8785)
!8788 = !DILocation(line: 748, column: 9, scope: !8758)
!8789 = !DILocation(line: 750, column: 16, scope: !8785)
!8790 = !DILocation(line: 750, column: 9, scope: !8785)
!8791 = !DILocation(line: 752, column: 13, scope: !8758)
!8792 = !DILocation(line: 752, column: 7, scope: !8758)
!8793 = !DILocation(line: 753, column: 5, scope: !8758)
!8794 = !DILocation(line: 94, column: 339, scope: !2976, inlinedAt: !8771)
!8795 = !DILocation(line: 94, column: 328, scope: !2976, inlinedAt: !8771)
!8796 = !DILocation(line: 60, column: 9, scope: !2971, inlinedAt: !8770)
!8797 = !DILocation(line: 60, column: 10, scope: !2971, inlinedAt: !8770)
!8798 = !DILocation(line: 60, column: 18, scope: !2971, inlinedAt: !8770)
!8799 = !DILocation(line: 60, column: 19, scope: !2971, inlinedAt: !8770)
!8800 = !DILocation(line: 60, column: 15, scope: !2971, inlinedAt: !8770)
!8801 = !DILocation(line: 60, column: 8, scope: !2971, inlinedAt: !8770)
!8802 = !DILocation(line: 60, column: 6, scope: !2971, inlinedAt: !8770)
!8803 = !DILocation(line: 61, column: 12, scope: !2971, inlinedAt: !8770)
!8804 = !DILocation(line: 94, column: 317, scope: !2976, inlinedAt: !8771)
!8805 = !DILocation(line: 94, column: 316, scope: !2976, inlinedAt: !8771)
!8806 = !DILocation(line: 94, column: 322, scope: !2976, inlinedAt: !8771)
!8807 = !DILocation(line: 94, column: 325, scope: !2976, inlinedAt: !8771)
!8808 = !DILocation(line: 94, column: 351, scope: !2976, inlinedAt: !8771)
!8809 = !DILocation(line: 94, column: 354, scope: !2976, inlinedAt: !8771)
!8810 = !DILocation(line: 754, column: 29, scope: !8758)
!8811 = !DILocation(line: 754, column: 33, scope: !8758)
!8812 = !DILocation(line: 754, column: 5, scope: !8758)
!8813 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !8766)
!8814 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !8766)
!8815 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !8765)
!8816 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !8765)
!8817 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !8765)
!8818 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !8765)
!8819 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !8765)
!8820 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !8765)
!8821 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !8765)
!8822 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !8765)
!8823 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !8765)
!8824 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !8765)
!8825 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !8765)
!8826 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !8765)
!8827 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !8765)
!8828 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !8765)
!8829 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !8765)
!8830 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !8765)
!8831 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !8765)
!8832 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !8765)
!8833 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !8766)
!8834 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !8766)
!8835 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !8766)
!8836 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !8766)
!8837 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !8766)
!8838 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !8766)
!8839 = !DILocation(line: 755, column: 29, scope: !8758)
!8840 = !DILocation(line: 755, column: 33, scope: !8758)
!8841 = !DILocation(line: 755, column: 5, scope: !8758)
!8842 = !DILocation(line: 92, column: 339, scope: !2954, inlinedAt: !8761)
!8843 = !DILocation(line: 92, column: 328, scope: !2954, inlinedAt: !8761)
!8844 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !8760)
!8845 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !8760)
!8846 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !8760)
!8847 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !8760)
!8848 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !8760)
!8849 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !8760)
!8850 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !8760)
!8851 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !8760)
!8852 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !8760)
!8853 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !8760)
!8854 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !8760)
!8855 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !8760)
!8856 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !8760)
!8857 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !8760)
!8858 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !8760)
!8859 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !8760)
!8860 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !8760)
!8861 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !8760)
!8862 = !DILocation(line: 92, column: 317, scope: !2954, inlinedAt: !8761)
!8863 = !DILocation(line: 92, column: 316, scope: !2954, inlinedAt: !8761)
!8864 = !DILocation(line: 92, column: 322, scope: !2954, inlinedAt: !8761)
!8865 = !DILocation(line: 92, column: 325, scope: !2954, inlinedAt: !8761)
!8866 = !DILocation(line: 92, column: 351, scope: !2954, inlinedAt: !8761)
!8867 = !DILocation(line: 92, column: 354, scope: !2954, inlinedAt: !8761)
!8868 = !DILocation(line: 757, column: 29, scope: !8758)
!8869 = !DILocation(line: 757, column: 12, scope: !8758)
!8870 = !DILocation(line: 757, column: 5, scope: !8758)
!8871 = !DILocation(line: 758, column: 1, scope: !8758)
!8872 = distinct !DISubprogram(name: "write_begin", scope: !64, file: !64, line: 1832, type: !279, isLocal: true, isDefinition: true, scopeLine: 1833, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8873 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !8874)
!8874 = distinct !DILocation(line: 92, column: 738, scope: !5436, inlinedAt: !8875)
!8875 = distinct !DILocation(line: 1848, column: 5, scope: !8872)
!8876 = !DILocation(line: 92, column: 610, scope: !5439, inlinedAt: !8875)
!8877 = !DILocation(line: 92, column: 632, scope: !5439, inlinedAt: !8875)
!8878 = !DILocation(line: 58, column: 98, scope: !2971, inlinedAt: !8879)
!8879 = distinct !DILocation(line: 94, column: 738, scope: !8880, inlinedAt: !8884)
!8880 = !DILexicalBlockFile(scope: !8881, file: !1415, discriminator: 2)
!8881 = distinct !DILexicalBlock(scope: !8882, file: !1415, line: 94, column: 690)
!8882 = distinct !DILexicalBlock(scope: !8883, file: !1415, line: 94, column: 645)
!8883 = distinct !DISubprogram(name: "bytestream2_put_be16", scope: !1415, file: !1415, line: 94, type: !5396, isLocal: true, isDefinition: true, scopeLine: 94, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!8884 = distinct !DILocation(line: 1847, column: 5, scope: !8872)
!8885 = !DILocalVariable(name: "p", arg: 1, scope: !8883, file: !1415, line: 94, type: !5398)
!8886 = !DILocation(line: 94, column: 610, scope: !8883, inlinedAt: !8884)
!8887 = !DILocalVariable(name: "value", arg: 2, scope: !8883, file: !1415, line: 94, type: !2958)
!8888 = !DILocation(line: 94, column: 632, scope: !8883, inlinedAt: !8884)
!8889 = !DILocation(line: 143, column: 91, scope: !5459, inlinedAt: !8890)
!8890 = distinct !DILocation(line: 1846, column: 5, scope: !8872)
!8891 = !DILocation(line: 144, column: 63, scope: !5459, inlinedAt: !8890)
!8892 = !DILocation(line: 145, column: 58, scope: !5459, inlinedAt: !8890)
!8893 = !DILocalVariable(name: "s", arg: 1, scope: !8872, file: !64, line: 1832, type: !154)
!8894 = !DILocation(line: 1832, column: 36, scope: !8872)
!8895 = !DILocalVariable(name: "rt", scope: !8872, file: !64, line: 1834, type: !385)
!8896 = !DILocation(line: 1834, column: 18, scope: !8872)
!8897 = !DILocation(line: 1834, column: 23, scope: !8872)
!8898 = !DILocation(line: 1834, column: 26, scope: !8872)
!8899 = !DILocalVariable(name: "pbc", scope: !8872, file: !64, line: 1835, type: !5399)
!8900 = !DILocation(line: 1835, column: 20, scope: !8872)
!8901 = !DILocalVariable(name: "spkt", scope: !8872, file: !64, line: 1836, type: !394)
!8902 = !DILocation(line: 1836, column: 16, scope: !8872)
!8903 = !DILocalVariable(name: "ret", scope: !8872, file: !64, line: 1837, type: !108)
!8904 = !DILocation(line: 1837, column: 9, scope: !8872)
!8905 = !DILocation(line: 1840, column: 16, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8872, file: !64, line: 1840, column: 9)
!8907 = !DILocation(line: 1840, column: 14, scope: !8906)
!8908 = !DILocation(line: 1841, column: 67, scope: !8906)
!8909 = !DILocation(line: 1840, column: 9, scope: !8872)
!8910 = !DILocation(line: 1842, column: 16, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8906, file: !64, line: 1841, column: 72)
!8912 = !DILocation(line: 1842, column: 9, scope: !8911)
!8913 = !DILocation(line: 1843, column: 16, scope: !8911)
!8914 = !DILocation(line: 1843, column: 9, scope: !8911)
!8915 = !DILocation(line: 1846, column: 40, scope: !8872)
!8916 = !DILocation(line: 1846, column: 51, scope: !8872)
!8917 = !DILocation(line: 1846, column: 5, scope: !8872)
!8918 = !DILocation(line: 147, column: 16, scope: !5547, inlinedAt: !8890)
!8919 = !DILocation(line: 147, column: 25, scope: !5547, inlinedAt: !8890)
!8920 = !DILocation(line: 147, column: 14, scope: !5547, inlinedAt: !8890)
!8921 = !DILocation(line: 147, column: 34, scope: !5553, inlinedAt: !8890)
!8922 = !DILocation(line: 147, column: 95, scope: !5556, inlinedAt: !8890)
!8923 = !DILocation(line: 147, column: 95, scope: !5553, inlinedAt: !8890)
!8924 = !DILocation(line: 148, column: 17, scope: !5459, inlinedAt: !8890)
!8925 = !DILocation(line: 148, column: 5, scope: !5459, inlinedAt: !8890)
!8926 = !DILocation(line: 148, column: 8, scope: !5459, inlinedAt: !8890)
!8927 = !DILocation(line: 148, column: 15, scope: !5459, inlinedAt: !8890)
!8928 = !DILocation(line: 149, column: 23, scope: !5459, inlinedAt: !8890)
!8929 = !DILocation(line: 149, column: 5, scope: !5459, inlinedAt: !8890)
!8930 = !DILocation(line: 149, column: 8, scope: !5459, inlinedAt: !8890)
!8931 = !DILocation(line: 149, column: 21, scope: !5459, inlinedAt: !8890)
!8932 = !DILocation(line: 150, column: 21, scope: !5459, inlinedAt: !8890)
!8933 = !DILocation(line: 150, column: 27, scope: !5459, inlinedAt: !8890)
!8934 = !DILocation(line: 150, column: 25, scope: !5459, inlinedAt: !8890)
!8935 = !DILocation(line: 150, column: 5, scope: !5459, inlinedAt: !8890)
!8936 = !DILocation(line: 150, column: 8, scope: !5459, inlinedAt: !8890)
!8937 = !DILocation(line: 150, column: 19, scope: !5459, inlinedAt: !8890)
!8938 = !DILocation(line: 151, column: 5, scope: !5459, inlinedAt: !8890)
!8939 = !DILocation(line: 151, column: 8, scope: !5459, inlinedAt: !8890)
!8940 = !DILocation(line: 151, column: 12, scope: !5459, inlinedAt: !8890)
!8941 = !DILocation(line: 1847, column: 5, scope: !8872)
!8942 = !DILocation(line: 94, column: 646, scope: !8882, inlinedAt: !8884)
!8943 = !DILocation(line: 94, column: 649, scope: !8882, inlinedAt: !8884)
!8944 = !DILocation(line: 94, column: 653, scope: !8882, inlinedAt: !8884)
!8945 = !DILocation(line: 94, column: 657, scope: !8946, inlinedAt: !8884)
!8946 = !DILexicalBlockFile(scope: !8882, file: !1415, discriminator: 1)
!8947 = !DILocation(line: 94, column: 660, scope: !8946, inlinedAt: !8884)
!8948 = !DILocation(line: 94, column: 673, scope: !8946, inlinedAt: !8884)
!8949 = !DILocation(line: 94, column: 676, scope: !8946, inlinedAt: !8884)
!8950 = !DILocation(line: 94, column: 671, scope: !8946, inlinedAt: !8884)
!8951 = !DILocation(line: 94, column: 683, scope: !8946, inlinedAt: !8884)
!8952 = !DILocation(line: 94, column: 645, scope: !8946, inlinedAt: !8884)
!8953 = !DILocation(line: 94, column: 749, scope: !8880, inlinedAt: !8884)
!8954 = !DILocation(line: 94, column: 738, scope: !8880, inlinedAt: !8884)
!8955 = !DILocation(line: 60, column: 9, scope: !2971, inlinedAt: !8879)
!8956 = !DILocation(line: 60, column: 10, scope: !2971, inlinedAt: !8879)
!8957 = !DILocation(line: 60, column: 18, scope: !2971, inlinedAt: !8879)
!8958 = !DILocation(line: 60, column: 19, scope: !2971, inlinedAt: !8879)
!8959 = !DILocation(line: 60, column: 15, scope: !2971, inlinedAt: !8879)
!8960 = !DILocation(line: 60, column: 8, scope: !2971, inlinedAt: !8879)
!8961 = !DILocation(line: 60, column: 6, scope: !2971, inlinedAt: !8879)
!8962 = !DILocation(line: 61, column: 12, scope: !2971, inlinedAt: !8879)
!8963 = !DILocation(line: 94, column: 719, scope: !8880, inlinedAt: !8884)
!8964 = !DILocation(line: 94, column: 722, scope: !8880, inlinedAt: !8884)
!8965 = !DILocation(line: 94, column: 732, scope: !8880, inlinedAt: !8884)
!8966 = !DILocation(line: 94, column: 735, scope: !8880, inlinedAt: !8884)
!8967 = !DILocation(line: 94, column: 759, scope: !8880, inlinedAt: !8884)
!8968 = !DILocation(line: 94, column: 762, scope: !8880, inlinedAt: !8884)
!8969 = !DILocation(line: 94, column: 769, scope: !8880, inlinedAt: !8884)
!8970 = !DILocation(line: 94, column: 775, scope: !8880, inlinedAt: !8884)
!8971 = !DILocation(line: 94, column: 782, scope: !8972, inlinedAt: !8884)
!8972 = !DILexicalBlockFile(scope: !8882, file: !1415, discriminator: 3)
!8973 = !DILocation(line: 94, column: 785, scope: !8972, inlinedAt: !8884)
!8974 = !DILocation(line: 94, column: 789, scope: !8972, inlinedAt: !8884)
!8975 = !DILocation(line: 1848, column: 32, scope: !8872)
!8976 = !DILocation(line: 1848, column: 36, scope: !8872)
!8977 = !DILocation(line: 1848, column: 5, scope: !8872)
!8978 = !DILocation(line: 92, column: 646, scope: !5438, inlinedAt: !8875)
!8979 = !DILocation(line: 92, column: 649, scope: !5438, inlinedAt: !8875)
!8980 = !DILocation(line: 92, column: 653, scope: !5438, inlinedAt: !8875)
!8981 = !DILocation(line: 92, column: 657, scope: !5855, inlinedAt: !8875)
!8982 = !DILocation(line: 92, column: 660, scope: !5855, inlinedAt: !8875)
!8983 = !DILocation(line: 92, column: 673, scope: !5855, inlinedAt: !8875)
!8984 = !DILocation(line: 92, column: 676, scope: !5855, inlinedAt: !8875)
!8985 = !DILocation(line: 92, column: 671, scope: !5855, inlinedAt: !8875)
!8986 = !DILocation(line: 92, column: 683, scope: !5855, inlinedAt: !8875)
!8987 = !DILocation(line: 92, column: 645, scope: !5855, inlinedAt: !8875)
!8988 = !DILocation(line: 92, column: 749, scope: !5436, inlinedAt: !8875)
!8989 = !DILocation(line: 92, column: 738, scope: !5436, inlinedAt: !8875)
!8990 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !8874)
!8991 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !8874)
!8992 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !8874)
!8993 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !8874)
!8994 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !8874)
!8995 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !8874)
!8996 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !8874)
!8997 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !8874)
!8998 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !8874)
!8999 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !8874)
!9000 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !8874)
!9001 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !8874)
!9002 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !8874)
!9003 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !8874)
!9004 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !8874)
!9005 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !8874)
!9006 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !8874)
!9007 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !8874)
!9008 = !DILocation(line: 92, column: 719, scope: !5436, inlinedAt: !8875)
!9009 = !DILocation(line: 92, column: 722, scope: !5436, inlinedAt: !8875)
!9010 = !DILocation(line: 92, column: 732, scope: !5436, inlinedAt: !8875)
!9011 = !DILocation(line: 92, column: 735, scope: !5436, inlinedAt: !8875)
!9012 = !DILocation(line: 92, column: 759, scope: !5436, inlinedAt: !8875)
!9013 = !DILocation(line: 92, column: 762, scope: !5436, inlinedAt: !8875)
!9014 = !DILocation(line: 92, column: 769, scope: !5436, inlinedAt: !8875)
!9015 = !DILocation(line: 92, column: 775, scope: !5436, inlinedAt: !8875)
!9016 = !DILocation(line: 92, column: 782, scope: !5891, inlinedAt: !8875)
!9017 = !DILocation(line: 92, column: 785, scope: !5891, inlinedAt: !8875)
!9018 = !DILocation(line: 92, column: 789, scope: !5891, inlinedAt: !8875)
!9019 = !DILocation(line: 1850, column: 32, scope: !8872)
!9020 = !DILocation(line: 1850, column: 36, scope: !8872)
!9021 = !DILocation(line: 1850, column: 51, scope: !8872)
!9022 = !DILocation(line: 1850, column: 55, scope: !8872)
!9023 = !DILocation(line: 1851, column: 33, scope: !8872)
!9024 = !DILocation(line: 1851, column: 37, scope: !8872)
!9025 = !DILocation(line: 1851, column: 51, scope: !8872)
!9026 = !DILocation(line: 1851, column: 55, scope: !8872)
!9027 = !DILocation(line: 1850, column: 11, scope: !8872)
!9028 = !DILocation(line: 1850, column: 9, scope: !8872)
!9029 = !DILocation(line: 1853, column: 5, scope: !8872)
!9030 = !DILocation(line: 1855, column: 12, scope: !8872)
!9031 = !DILocation(line: 1855, column: 5, scope: !8872)
!9032 = !DILocation(line: 1856, column: 1, scope: !8872)
!9033 = distinct !DISubprogram(name: "write_status", scope: !64, file: !64, line: 1858, type: !9034, isLocal: true, isDefinition: true, scopeLine: 1860, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!9034 = !DISubroutineType(types: !9035)
!9035 = !{!108, !154, !393, !147, !147}
!9036 = !DILocalVariable(name: "s", arg: 1, scope: !9033, file: !64, line: 1858, type: !154)
!9037 = !DILocation(line: 1858, column: 37, scope: !9033)
!9038 = !DILocalVariable(name: "pkt", arg: 2, scope: !9033, file: !64, line: 1858, type: !393)
!9039 = !DILocation(line: 1858, column: 52, scope: !9033)
!9040 = !DILocalVariable(name: "status", arg: 3, scope: !9033, file: !64, line: 1859, type: !147)
!9041 = !DILocation(line: 1859, column: 37, scope: !9033)
!9042 = !DILocalVariable(name: "filename", arg: 4, scope: !9033, file: !64, line: 1859, type: !147)
!9043 = !DILocation(line: 1859, column: 57, scope: !9033)
!9044 = !DILocalVariable(name: "rt", scope: !9033, file: !64, line: 1861, type: !385)
!9045 = !DILocation(line: 1861, column: 18, scope: !9033)
!9046 = !DILocation(line: 1861, column: 23, scope: !9033)
!9047 = !DILocation(line: 1861, column: 26, scope: !9033)
!9048 = !DILocalVariable(name: "spkt", scope: !9033, file: !64, line: 1862, type: !394)
!9049 = !DILocation(line: 1862, column: 16, scope: !9033)
!9050 = !DILocalVariable(name: "statusmsg", scope: !9033, file: !64, line: 1863, type: !4858)
!9051 = !DILocation(line: 1863, column: 10, scope: !9033)
!9052 = !DILocalVariable(name: "pp", scope: !9033, file: !64, line: 1864, type: !110)
!9053 = !DILocation(line: 1864, column: 14, scope: !9033)
!9054 = !DILocalVariable(name: "ret", scope: !9033, file: !64, line: 1865, type: !108)
!9055 = !DILocation(line: 1865, column: 9, scope: !9033)
!9056 = !DILocation(line: 1867, column: 16, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9033, file: !64, line: 1867, column: 9)
!9058 = !DILocation(line: 1867, column: 14, scope: !9057)
!9059 = !DILocation(line: 1869, column: 45, scope: !9057)
!9060 = !DILocation(line: 1867, column: 9, scope: !9033)
!9061 = !DILocation(line: 1870, column: 16, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9057, file: !64, line: 1869, column: 50)
!9063 = !DILocation(line: 1870, column: 9, scope: !9062)
!9064 = !DILocation(line: 1871, column: 16, scope: !9062)
!9065 = !DILocation(line: 1871, column: 9, scope: !9062)
!9066 = !DILocation(line: 1874, column: 15, scope: !9033)
!9067 = !DILocation(line: 1874, column: 8, scope: !9033)
!9068 = !DILocation(line: 1875, column: 18, scope: !9033)
!9069 = !DILocation(line: 1875, column: 23, scope: !9033)
!9070 = !DILocation(line: 1875, column: 10, scope: !9033)
!9071 = !DILocation(line: 1875, column: 16, scope: !9033)
!9072 = !DILocation(line: 1876, column: 5, scope: !9033)
!9073 = !DILocation(line: 1877, column: 5, scope: !9033)
!9074 = !DILocation(line: 1878, column: 5, scope: !9033)
!9075 = !DILocation(line: 1880, column: 5, scope: !9033)
!9076 = !DILocation(line: 1881, column: 5, scope: !9033)
!9077 = !DILocation(line: 1882, column: 5, scope: !9033)
!9078 = !DILocation(line: 1883, column: 5, scope: !9033)
!9079 = !DILocation(line: 1884, column: 30, scope: !9033)
!9080 = !DILocation(line: 1884, column: 5, scope: !9033)
!9081 = !DILocation(line: 1885, column: 5, scope: !9033)
!9082 = !DILocation(line: 1886, column: 14, scope: !9033)
!9083 = !DILocation(line: 1887, column: 37, scope: !9033)
!9084 = !DILocation(line: 1886, column: 5, scope: !9033)
!9085 = !DILocation(line: 1888, column: 30, scope: !9033)
!9086 = !DILocation(line: 1888, column: 5, scope: !9033)
!9087 = !DILocation(line: 1889, column: 5, scope: !9033)
!9088 = !DILocation(line: 1890, column: 30, scope: !9033)
!9089 = !DILocation(line: 1890, column: 5, scope: !9033)
!9090 = !DILocation(line: 1891, column: 5, scope: !9033)
!9091 = !DILocation(line: 1893, column: 17, scope: !9033)
!9092 = !DILocation(line: 1893, column: 27, scope: !9033)
!9093 = !DILocation(line: 1893, column: 20, scope: !9033)
!9094 = !DILocation(line: 1893, column: 10, scope: !9033)
!9095 = !DILocation(line: 1893, column: 15, scope: !9033)
!9096 = !DILocation(line: 1894, column: 32, scope: !9033)
!9097 = !DILocation(line: 1894, column: 36, scope: !9033)
!9098 = !DILocation(line: 1894, column: 51, scope: !9033)
!9099 = !DILocation(line: 1894, column: 55, scope: !9033)
!9100 = !DILocation(line: 1895, column: 33, scope: !9033)
!9101 = !DILocation(line: 1895, column: 37, scope: !9033)
!9102 = !DILocation(line: 1895, column: 51, scope: !9033)
!9103 = !DILocation(line: 1895, column: 55, scope: !9033)
!9104 = !DILocation(line: 1894, column: 11, scope: !9033)
!9105 = !DILocation(line: 1894, column: 9, scope: !9033)
!9106 = !DILocation(line: 1896, column: 5, scope: !9033)
!9107 = !DILocation(line: 1898, column: 12, scope: !9033)
!9108 = !DILocation(line: 1898, column: 5, scope: !9033)
!9109 = !DILocation(line: 1899, column: 1, scope: !9033)
!9110 = distinct !DISubprogram(name: "update_offset", scope: !64, file: !64, line: 2187, type: !9111, isLocal: true, isDefinition: true, scopeLine: 2188, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!9111 = !DISubroutineType(types: !9112)
!9112 = !{!108, !385, !108}
!9113 = !DILocalVariable(name: "rt", arg: 1, scope: !9110, file: !64, line: 2187, type: !385)
!9114 = !DILocation(line: 2187, column: 39, scope: !9110)
!9115 = !DILocalVariable(name: "size", arg: 2, scope: !9110, file: !64, line: 2187, type: !108)
!9116 = !DILocation(line: 2187, column: 47, scope: !9110)
!9117 = !DILocalVariable(name: "old_flv_size", scope: !9110, file: !64, line: 2189, type: !108)
!9118 = !DILocation(line: 2189, column: 9, scope: !9110)
!9119 = !DILocation(line: 2192, column: 9, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9110, file: !64, line: 2192, column: 9)
!9121 = !DILocation(line: 2192, column: 13, scope: !9120)
!9122 = !DILocation(line: 2192, column: 23, scope: !9120)
!9123 = !DILocation(line: 2192, column: 27, scope: !9120)
!9124 = !DILocation(line: 2192, column: 21, scope: !9120)
!9125 = !DILocation(line: 2192, column: 9, scope: !9110)
!9126 = !DILocation(line: 2194, column: 24, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9120, file: !64, line: 2192, column: 37)
!9128 = !DILocation(line: 2194, column: 28, scope: !9127)
!9129 = !DILocation(line: 2194, column: 22, scope: !9127)
!9130 = !DILocation(line: 2195, column: 25, scope: !9127)
!9131 = !DILocation(line: 2195, column: 9, scope: !9127)
!9132 = !DILocation(line: 2195, column: 13, scope: !9127)
!9133 = !DILocation(line: 2195, column: 22, scope: !9127)
!9134 = !DILocation(line: 2196, column: 5, scope: !9127)
!9135 = !DILocation(line: 2198, column: 22, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9120, file: !64, line: 2196, column: 12)
!9137 = !DILocation(line: 2199, column: 24, scope: !9136)
!9138 = !DILocation(line: 2199, column: 9, scope: !9136)
!9139 = !DILocation(line: 2199, column: 13, scope: !9136)
!9140 = !DILocation(line: 2199, column: 22, scope: !9136)
!9141 = !DILocation(line: 2200, column: 9, scope: !9136)
!9142 = !DILocation(line: 2200, column: 13, scope: !9136)
!9143 = !DILocation(line: 2200, column: 21, scope: !9136)
!9144 = !DILocation(line: 2203, column: 12, scope: !9110)
!9145 = !DILocation(line: 2203, column: 5, scope: !9110)
!9146 = distinct !DISubprogram(name: "av_bswap64", scope: !2618, file: !2618, line: 73, type: !9147, isLocal: true, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!9147 = !DISubroutineType(types: !9148)
!9148 = !{!137, !137}
!9149 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !9150)
!9150 = distinct !DILocation(line: 75, column: 44, scope: !9151)
!9151 = !DILexicalBlockFile(scope: !9146, file: !2618, discriminator: 1)
!9152 = !DILocation(line: 66, column: 98, scope: !2617, inlinedAt: !9153)
!9153 = distinct !DILocation(line: 75, column: 22, scope: !9146)
!9154 = !DILocalVariable(name: "x", arg: 1, scope: !9146, file: !2618, line: 73, type: !137)
!9155 = !DILocation(line: 73, column: 67, scope: !9146)
!9156 = !DILocation(line: 75, column: 33, scope: !9146)
!9157 = !DILocation(line: 75, column: 22, scope: !9146)
!9158 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !9153)
!9159 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !9153)
!9160 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !9153)
!9161 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !9153)
!9162 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !9153)
!9163 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !9153)
!9164 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !9153)
!9165 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !9153)
!9166 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !9153)
!9167 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !9153)
!9168 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !9153)
!9169 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !9153)
!9170 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !9153)
!9171 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !9153)
!9172 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !9153)
!9173 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !9153)
!9174 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !9153)
!9175 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !9153)
!9176 = !DILocation(line: 75, column: 12, scope: !9146)
!9177 = !DILocation(line: 75, column: 36, scope: !9146)
!9178 = !DILocation(line: 75, column: 55, scope: !9146)
!9179 = !DILocation(line: 75, column: 57, scope: !9146)
!9180 = !DILocation(line: 75, column: 44, scope: !9151)
!9181 = !DILocation(line: 68, column: 16, scope: !2617, inlinedAt: !9150)
!9182 = !DILocation(line: 68, column: 19, scope: !2617, inlinedAt: !9150)
!9183 = !DILocation(line: 68, column: 24, scope: !2617, inlinedAt: !9150)
!9184 = !DILocation(line: 68, column: 38, scope: !2617, inlinedAt: !9150)
!9185 = !DILocation(line: 68, column: 41, scope: !2617, inlinedAt: !9150)
!9186 = !DILocation(line: 68, column: 46, scope: !2617, inlinedAt: !9150)
!9187 = !DILocation(line: 68, column: 34, scope: !2617, inlinedAt: !9150)
!9188 = !DILocation(line: 68, column: 57, scope: !2617, inlinedAt: !9150)
!9189 = !DILocation(line: 68, column: 69, scope: !2617, inlinedAt: !9150)
!9190 = !DILocation(line: 68, column: 72, scope: !2617, inlinedAt: !9150)
!9191 = !DILocation(line: 68, column: 79, scope: !2617, inlinedAt: !9150)
!9192 = !DILocation(line: 68, column: 84, scope: !2617, inlinedAt: !9150)
!9193 = !DILocation(line: 68, column: 99, scope: !2617, inlinedAt: !9150)
!9194 = !DILocation(line: 68, column: 102, scope: !2617, inlinedAt: !9150)
!9195 = !DILocation(line: 68, column: 109, scope: !2617, inlinedAt: !9150)
!9196 = !DILocation(line: 68, column: 114, scope: !2617, inlinedAt: !9150)
!9197 = !DILocation(line: 68, column: 94, scope: !2617, inlinedAt: !9150)
!9198 = !DILocation(line: 68, column: 63, scope: !2617, inlinedAt: !9150)
!9199 = !DILocation(line: 75, column: 44, scope: !9146)
!9200 = !DILocation(line: 75, column: 42, scope: !9146)
!9201 = !DILocation(line: 75, column: 5, scope: !9146)
!9202 = distinct !DISubprogram(name: "gen_fcunpublish_stream", scope: !64, file: !64, line: 645, type: !2327, isLocal: true, isDefinition: true, scopeLine: 646, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!9203 = !DILocalVariable(name: "s", arg: 1, scope: !9202, file: !64, line: 645, type: !154)
!9204 = !DILocation(line: 645, column: 47, scope: !9202)
!9205 = !DILocalVariable(name: "rt", arg: 2, scope: !9202, file: !64, line: 645, type: !385)
!9206 = !DILocation(line: 645, column: 63, scope: !9202)
!9207 = !DILocalVariable(name: "pkt", scope: !9202, file: !64, line: 647, type: !394)
!9208 = !DILocation(line: 647, column: 16, scope: !9202)
!9209 = !DILocalVariable(name: "p", scope: !9202, file: !64, line: 648, type: !110)
!9210 = !DILocation(line: 648, column: 14, scope: !9202)
!9211 = !DILocalVariable(name: "ret", scope: !9202, file: !64, line: 649, type: !108)
!9212 = !DILocation(line: 649, column: 9, scope: !9202)
!9213 = !DILocation(line: 652, column: 53, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9202, file: !64, line: 651, column: 9)
!9215 = !DILocation(line: 652, column: 57, scope: !9214)
!9216 = !DILocation(line: 652, column: 46, scope: !9214)
!9217 = !DILocation(line: 652, column: 44, scope: !9214)
!9218 = !DILocation(line: 652, column: 41, scope: !9214)
!9219 = !DILocation(line: 651, column: 16, scope: !9214)
!9220 = !DILocation(line: 651, column: 14, scope: !9214)
!9221 = !DILocation(line: 652, column: 69, scope: !9214)
!9222 = !DILocation(line: 651, column: 9, scope: !9202)
!9223 = !DILocation(line: 653, column: 16, scope: !9214)
!9224 = !DILocation(line: 653, column: 9, scope: !9214)
!9225 = !DILocation(line: 655, column: 12, scope: !9202)
!9226 = !DILocation(line: 655, column: 5, scope: !9202)
!9227 = !DILocation(line: 656, column: 13, scope: !9202)
!9228 = !DILocation(line: 656, column: 7, scope: !9202)
!9229 = !DILocation(line: 657, column: 5, scope: !9202)
!9230 = !DILocation(line: 658, column: 31, scope: !9202)
!9231 = !DILocation(line: 658, column: 35, scope: !9202)
!9232 = !DILocation(line: 658, column: 29, scope: !9202)
!9233 = !DILocation(line: 658, column: 5, scope: !9202)
!9234 = !DILocation(line: 659, column: 5, scope: !9202)
!9235 = !DILocation(line: 660, column: 29, scope: !9202)
!9236 = !DILocation(line: 660, column: 33, scope: !9202)
!9237 = !DILocation(line: 660, column: 5, scope: !9202)
!9238 = !DILocation(line: 662, column: 29, scope: !9202)
!9239 = !DILocation(line: 662, column: 12, scope: !9202)
!9240 = !DILocation(line: 662, column: 5, scope: !9202)
!9241 = !DILocation(line: 663, column: 1, scope: !9202)
!9242 = distinct !DISubprogram(name: "gen_delete_stream", scope: !64, file: !64, line: 694, type: !2327, isLocal: true, isDefinition: true, scopeLine: 695, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!9243 = !DILocalVariable(name: "s", arg: 1, scope: !9242, file: !64, line: 694, type: !154)
!9244 = !DILocation(line: 694, column: 42, scope: !9242)
!9245 = !DILocalVariable(name: "rt", arg: 2, scope: !9242, file: !64, line: 694, type: !385)
!9246 = !DILocation(line: 694, column: 58, scope: !9242)
!9247 = !DILocalVariable(name: "pkt", scope: !9242, file: !64, line: 696, type: !394)
!9248 = !DILocation(line: 696, column: 16, scope: !9242)
!9249 = !DILocalVariable(name: "p", scope: !9242, file: !64, line: 697, type: !110)
!9250 = !DILocation(line: 697, column: 14, scope: !9242)
!9251 = !DILocalVariable(name: "ret", scope: !9242, file: !64, line: 698, type: !108)
!9252 = !DILocation(line: 698, column: 9, scope: !9242)
!9253 = !DILocation(line: 700, column: 12, scope: !9242)
!9254 = !DILocation(line: 700, column: 5, scope: !9242)
!9255 = !DILocation(line: 702, column: 16, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9242, file: !64, line: 702, column: 9)
!9257 = !DILocation(line: 702, column: 14, scope: !9256)
!9258 = !DILocation(line: 703, column: 46, scope: !9256)
!9259 = !DILocation(line: 702, column: 9, scope: !9242)
!9260 = !DILocation(line: 704, column: 16, scope: !9256)
!9261 = !DILocation(line: 704, column: 9, scope: !9256)
!9262 = !DILocation(line: 706, column: 13, scope: !9242)
!9263 = !DILocation(line: 706, column: 7, scope: !9242)
!9264 = !DILocation(line: 707, column: 5, scope: !9242)
!9265 = !DILocation(line: 708, column: 31, scope: !9242)
!9266 = !DILocation(line: 708, column: 35, scope: !9242)
!9267 = !DILocation(line: 708, column: 29, scope: !9242)
!9268 = !DILocation(line: 708, column: 5, scope: !9242)
!9269 = !DILocation(line: 709, column: 5, scope: !9242)
!9270 = !DILocation(line: 710, column: 29, scope: !9242)
!9271 = !DILocation(line: 710, column: 33, scope: !9242)
!9272 = !DILocation(line: 710, column: 5, scope: !9242)
!9273 = !DILocation(line: 712, column: 29, scope: !9242)
!9274 = !DILocation(line: 712, column: 12, scope: !9242)
!9275 = !DILocation(line: 712, column: 5, scope: !9242)
!9276 = !DILocation(line: 713, column: 1, scope: !9242)
!9277 = distinct !DISubprogram(name: "gen_pause", scope: !64, file: !64, line: 814, type: !9278, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!9278 = !DISubroutineType(types: !9279)
!9279 = !{!108, !154, !385, !108, !119}
!9280 = !DILocalVariable(name: "s", arg: 1, scope: !9277, file: !64, line: 814, type: !154)
!9281 = !DILocation(line: 814, column: 34, scope: !9277)
!9282 = !DILocalVariable(name: "rt", arg: 2, scope: !9277, file: !64, line: 814, type: !385)
!9283 = !DILocation(line: 814, column: 50, scope: !9277)
!9284 = !DILocalVariable(name: "pause", arg: 3, scope: !9277, file: !64, line: 814, type: !108)
!9285 = !DILocation(line: 814, column: 58, scope: !9277)
!9286 = !DILocalVariable(name: "timestamp", arg: 4, scope: !9277, file: !64, line: 814, type: !119)
!9287 = !DILocation(line: 814, column: 74, scope: !9277)
!9288 = !DILocalVariable(name: "pkt", scope: !9277, file: !64, line: 816, type: !394)
!9289 = !DILocation(line: 816, column: 16, scope: !9277)
!9290 = !DILocalVariable(name: "p", scope: !9277, file: !64, line: 817, type: !110)
!9291 = !DILocation(line: 817, column: 14, scope: !9277)
!9292 = !DILocalVariable(name: "ret", scope: !9277, file: !64, line: 818, type: !108)
!9293 = !DILocation(line: 818, column: 9, scope: !9277)
!9294 = !DILocation(line: 820, column: 12, scope: !9277)
!9295 = !DILocation(line: 821, column: 12, scope: !9277)
!9296 = !DILocation(line: 820, column: 5, scope: !9277)
!9297 = !DILocation(line: 823, column: 16, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9277, file: !64, line: 823, column: 9)
!9299 = !DILocation(line: 823, column: 14, scope: !9298)
!9300 = !DILocation(line: 823, column: 71, scope: !9298)
!9301 = !DILocation(line: 823, column: 9, scope: !9277)
!9302 = !DILocation(line: 824, column: 16, scope: !9298)
!9303 = !DILocation(line: 824, column: 9, scope: !9298)
!9304 = !DILocation(line: 826, column: 17, scope: !9277)
!9305 = !DILocation(line: 826, column: 21, scope: !9277)
!9306 = !DILocation(line: 826, column: 9, scope: !9277)
!9307 = !DILocation(line: 826, column: 15, scope: !9277)
!9308 = !DILocation(line: 828, column: 13, scope: !9277)
!9309 = !DILocation(line: 828, column: 7, scope: !9277)
!9310 = !DILocation(line: 829, column: 5, scope: !9277)
!9311 = !DILocation(line: 830, column: 5, scope: !9277)
!9312 = !DILocation(line: 831, column: 5, scope: !9277)
!9313 = !DILocation(line: 832, column: 27, scope: !9277)
!9314 = !DILocation(line: 832, column: 5, scope: !9277)
!9315 = !DILocation(line: 833, column: 29, scope: !9277)
!9316 = !DILocation(line: 833, column: 5, scope: !9277)
!9317 = !DILocation(line: 835, column: 29, scope: !9277)
!9318 = !DILocation(line: 835, column: 12, scope: !9277)
!9319 = !DILocation(line: 835, column: 5, scope: !9277)
!9320 = !DILocation(line: 836, column: 1, scope: !9277)
!9321 = distinct !DISubprogram(name: "gen_seek", scope: !64, file: !64, line: 788, type: !9322, isLocal: true, isDefinition: true, scopeLine: 789, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !374)
!9322 = !DISubroutineType(types: !9323)
!9323 = !{!108, !154, !385, !182}
!9324 = !DILocalVariable(name: "s", arg: 1, scope: !9321, file: !64, line: 788, type: !154)
!9325 = !DILocation(line: 788, column: 33, scope: !9321)
!9326 = !DILocalVariable(name: "rt", arg: 2, scope: !9321, file: !64, line: 788, type: !385)
!9327 = !DILocation(line: 788, column: 49, scope: !9321)
!9328 = !DILocalVariable(name: "timestamp", arg: 3, scope: !9321, file: !64, line: 788, type: !182)
!9329 = !DILocation(line: 788, column: 61, scope: !9321)
!9330 = !DILocalVariable(name: "pkt", scope: !9321, file: !64, line: 790, type: !394)
!9331 = !DILocation(line: 790, column: 16, scope: !9321)
!9332 = !DILocalVariable(name: "p", scope: !9321, file: !64, line: 791, type: !110)
!9333 = !DILocation(line: 791, column: 14, scope: !9321)
!9334 = !DILocalVariable(name: "ret", scope: !9321, file: !64, line: 792, type: !108)
!9335 = !DILocation(line: 792, column: 9, scope: !9321)
!9336 = !DILocation(line: 794, column: 12, scope: !9321)
!9337 = !DILocation(line: 795, column: 12, scope: !9321)
!9338 = !DILocation(line: 794, column: 5, scope: !9321)
!9339 = !DILocation(line: 797, column: 16, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9321, file: !64, line: 797, column: 9)
!9341 = !DILocation(line: 797, column: 14, scope: !9340)
!9342 = !DILocation(line: 797, column: 71, scope: !9340)
!9343 = !DILocation(line: 797, column: 9, scope: !9321)
!9344 = !DILocation(line: 798, column: 16, scope: !9340)
!9345 = !DILocation(line: 798, column: 9, scope: !9340)
!9346 = !DILocation(line: 800, column: 17, scope: !9321)
!9347 = !DILocation(line: 800, column: 21, scope: !9321)
!9348 = !DILocation(line: 800, column: 9, scope: !9321)
!9349 = !DILocation(line: 800, column: 15, scope: !9321)
!9350 = !DILocation(line: 802, column: 13, scope: !9321)
!9351 = !DILocation(line: 802, column: 7, scope: !9321)
!9352 = !DILocation(line: 803, column: 5, scope: !9321)
!9353 = !DILocation(line: 804, column: 5, scope: !9321)
!9354 = !DILocation(line: 805, column: 5, scope: !9321)
!9355 = !DILocation(line: 806, column: 29, scope: !9321)
!9356 = !DILocation(line: 806, column: 5, scope: !9321)
!9357 = !DILocation(line: 808, column: 29, scope: !9321)
!9358 = !DILocation(line: 808, column: 12, scope: !9321)
!9359 = !DILocation(line: 808, column: 5, scope: !9321)
!9360 = !DILocation(line: 809, column: 1, scope: !9321)
