; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--hevc_ps.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--hevc_ps.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVRational = type { i32, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.ShortTermRPS = type { i32, i32, i32, [32 x i32], [32 x i8] }
%struct.HEVCSPS = type { i32, i32, i8, %struct.HEVCWindow, %struct.HEVCWindow, i32, i32, i32, i32, i32, i32, i32, [7 x %struct.anon], i8, %struct.VUI, %struct.PTL, i8, %struct.ScalingList, i32, [64 x %struct.ShortTermRPS], i8, i8, i8, [32 x i16], [32 x i8], i8, %struct.anon.0, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, [4096 x i8], i32 }
%struct.HEVCWindow = type { i32, i32, i32, i32 }
%struct.anon = type { i32, i32, i32 }
%struct.VUI = type { %struct.AVRational, i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, %struct.HEVCWindow, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.PTL = type { %struct.PTLCommon, [7 x %struct.PTLCommon], [7 x i8], [7 x i8] }
%struct.PTLCommon = type { i8, i8, i8, [32 x i8], i8, i8, i8, i8, i8 }
%struct.ScalingList = type { [4 x [6 x [64 x i8]]], [2 x [6 x i8]] }
%struct.anon.0 = type { i8, i8, i32, i32, i8 }
%struct.HEVCParamSets = type { [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*], [64 x %struct.AVBufferRef*], %struct.HEVCVPS*, %struct.HEVCSPS*, %struct.HEVCPPS* }
%struct.HEVCVPS = type { i8, i32, i32, %struct.PTL, i32, [7 x i32], [7 x i32], [7 x i32], i32, i32, i8, i32, i32, i8, i32, i32, [4096 x i8], i32 }
%struct.HEVCPPS = type { i32, i8, i8, i32, i32, i32, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i32, i32, i8, %struct.ScalingList, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, [6 x i8], [6 x i8], i8, i8, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, [4096 x i8], i32 }
%union.unaligned_32 = type { i32 }
%struct.AVPixFmtDescriptor = type { i8*, i8, i8, i8, i64, [4 x %struct.AVComponentDescriptor], i8* }
%struct.AVComponentDescriptor = type { i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [58 x i8] c"Invalid value of delta_idx in slice header RPS: %d > %d.\0A\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"Invalid value of abs_delta_rps: %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"Invalid num_delta_pocs: %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"Too many refs in a short term RPS.\0A\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"Invalid value of delta_poc: %d\0A\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"Decoding VPS\0A\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"Truncating likely oversized VPS (%td > %zu)\0A\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"VPS id out of range: %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"vps_reserved_three_2bits is not three\0A\00", align 1
@.str.9 = private unnamed_addr constant [40 x i8] c"vps_reserved_ffff_16bits is not 0xffff\0A\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"vps_max_sub_layers out of range: %d\0A\00", align 1
@.str.11 = private unnamed_addr constant [51 x i8] c"vps_max_dec_pic_buffering_minus1 out of range: %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [43 x i8] c"vps_max_num_reorder_pics out of range: %d\0A\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"too many layer_id_included_flags\0A\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"vps_num_hrd_parameters %d is invalid\0A\00", align 1
@.str.15 = private unnamed_addr constant [25 x i8] c"Overread VPS by %d bits\0A\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"VPS %d does not exist\0A\00", align 1
@.str.17 = private unnamed_addr constant [37 x i8] c"sps_max_sub_layers out of range: %d\0A\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"SPS id out of range: %d\0A\00", align 1
@.str.19 = private unnamed_addr constant [33 x i8] c"chroma_format_idc %d is invalid\0A\00", align 1
@hevc_sub_height_c = internal constant [4 x i8] c"\01\02\01\01", align 1
@hevc_sub_width_c = internal constant [4 x i8] c"\01\02\02\01", align 1
@.str.20 = private unnamed_addr constant [76 x i8] c"discarding sps conformance window, original values are l:%u r:%u t:%u b:%u\0A\00", align 1
@.str.21 = private unnamed_addr constant [83 x i8] c"Luma bit depth (%d) is different from chroma bit depth (%d), this is unsupported.\0A\00", align 1
@.str.22 = private unnamed_addr constant [49 x i8] c"log2_max_pic_order_cnt_lsb_minus4 out range: %d\0A\00", align 1
@.str.23 = private unnamed_addr constant [51 x i8] c"sps_max_dec_pic_buffering_minus1 out of range: %d\0A\00", align 1
@.str.24 = private unnamed_addr constant [43 x i8] c"sps_max_num_reorder_pics out of range: %d\0A\00", align 1
@.str.25 = private unnamed_addr constant [38 x i8] c"Invalid value %d for log2_min_cb_size\00", align 1
@.str.26 = private unnamed_addr constant [57 x i8] c"Invalid value %d for log2_diff_max_min_coding_block_size\00", align 1
@.str.27 = private unnamed_addr constant [35 x i8] c"Invalid value for log2_min_tb_size\00", align 1
@.str.28 = private unnamed_addr constant [60 x i8] c"Invalid value %d for log2_diff_max_min_transform_block_size\00", align 1
@.str.29 = private unnamed_addr constant [62 x i8] c"PCM bit depth (%d, %d) is greater than normal bit depth (%d)\0A\00", align 1
@.str.30 = private unnamed_addr constant [30 x i8] c"Too many short term RPS: %d.\0A\00", align 1
@.str.31 = private unnamed_addr constant [34 x i8] c"Too many long term ref pics: %d.\0A\00", align 1
@.str.32 = private unnamed_addr constant [56 x i8] c"extended_precision_processing_flag not yet implemented\0A\00", align 1
@.str.33 = private unnamed_addr constant [57 x i8] c"high_precision_offsets_enabled_flag not yet implemented\0A\00", align 1
@.str.34 = private unnamed_addr constant [57 x i8] c"cabac_bypass_alignment_enabled_flag not yet implemented\0A\00", align 1
@.str.35 = private unnamed_addr constant [39 x i8] c"Invalid cropping offsets: %u/%u/%u/%u\0A\00", align 1
@.str.36 = private unnamed_addr constant [37 x i8] c"Displaying the whole video surface.\0A\00", align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"CTB size out of range: 2^%d\0A\00", align 1
@.str.38 = private unnamed_addr constant [63 x i8] c"log2_ctb_size %d differs from the bounds of any known profile\0A\00", align 1
@.str.39 = private unnamed_addr constant [17 x i8] c"log2_ctb_size %d\00", align 1
@.str.40 = private unnamed_addr constant [33 x i8] c"Invalid coded frame dimensions.\0A\00", align 1
@.str.41 = private unnamed_addr constant [54 x i8] c"max_transform_hierarchy_depth_inter out of range: %d\0A\00", align 1
@.str.42 = private unnamed_addr constant [54 x i8] c"max_transform_hierarchy_depth_intra out of range: %d\0A\00", align 1
@.str.43 = private unnamed_addr constant [43 x i8] c"max transform block size out of range: %d\0A\00", align 1
@.str.44 = private unnamed_addr constant [25 x i8] c"Overread SPS by %d bits\0A\00", align 1
@.str.45 = private unnamed_addr constant [14 x i8] c"Decoding SPS\0A\00", align 1
@.str.46 = private unnamed_addr constant [45 x i8] c"Truncating likely oversized SPS (%td > %zu)\0A\00", align 1
@.str.47 = private unnamed_addr constant [71 x i8] c"Parsed SPS: id %d; coded wxh: %dx%d; cropped wxh: %dx%d; pix_fmt: %s.\0A\00", align 1
@.str.48 = private unnamed_addr constant [14 x i8] c"Decoding PPS\0A\00", align 1
@.str.49 = private unnamed_addr constant [45 x i8] c"Truncating likely oversized PPS (%td > %zu)\0A\00", align 1
@.str.50 = private unnamed_addr constant [25 x i8] c"PPS id out of range: %d\0A\00", align 1
@.str.51 = private unnamed_addr constant [24 x i8] c"SPS %u does not exist.\0A\00", align 1
@.str.52 = private unnamed_addr constant [38 x i8] c"diff_cu_qp_delta_depth %d is invalid\0A\00", align 1
@.str.53 = private unnamed_addr constant [35 x i8] c"pps_cb_qp_offset out of range: %d\0A\00", align 1
@.str.54 = private unnamed_addr constant [35 x i8] c"pps_cr_qp_offset out of range: %d\0A\00", align 1
@.str.55 = private unnamed_addr constant [42 x i8] c"num_tile_columns_minus1 out of range: %d\0A\00", align 1
@.str.56 = private unnamed_addr constant [39 x i8] c"num_tile_rows_minus1 out of range: %d\0A\00", align 1
@.str.57 = private unnamed_addr constant [22 x i8] c"Invalid tile widths.\0A\00", align 1
@.str.58 = private unnamed_addr constant [23 x i8] c"Invalid tile heights.\0A\00", align 1
@.str.59 = private unnamed_addr constant [39 x i8] c"pps_beta_offset_div2 out of range: %d\0A\00", align 1
@.str.60 = private unnamed_addr constant [37 x i8] c"pps_tc_offset_div2 out of range: %d\0A\00", align 1
@.str.61 = private unnamed_addr constant [51 x i8] c"log2_parallel_merge_level_minus2 out of range: %d\0A\00", align 1
@.str.62 = private unnamed_addr constant [25 x i8] c"Overread PPS by %d bits\0A\00", align 1
@.str.63 = private unnamed_addr constant [27 x i8] c"PTL information too short\0A\00", align 1
@.str.64 = private unnamed_addr constant [43 x i8] c"PTL information for sublayer %i too short\0A\00", align 1
@.str.65 = private unnamed_addr constant [43 x i8] c"Not enough data for sublayer %i level_idc\0A\00", align 1
@.str.66 = private unnamed_addr constant [24 x i8] c"Main profile bitstream\0A\00", align 1
@.str.67 = private unnamed_addr constant [27 x i8] c"Main 10 profile bitstream\0A\00", align 1
@.str.68 = private unnamed_addr constant [38 x i8] c"Main Still Picture profile bitstream\0A\00", align 1
@.str.69 = private unnamed_addr constant [35 x i8] c"Range Extension profile bitstream\0A\00", align 1
@.str.70 = private unnamed_addr constant [26 x i8] c"Unknown HEVC profile: %d\0A\00", align 1
@.str.71 = private unnamed_addr constant [19 x i8] c"nb_cpb %d invalid\0A\00", align 1
@.str.72 = private unnamed_addr constant [110 x i8] c"The following bit-depths are currently specified: 8, 9, 10 and 12 bits, chroma_format_idc is %d, depth is %d\0A\00", align 1
@default_scaling_list_intra = internal constant [64 x i8] c"\10\10\10\10\11\12\15\18\10\10\10\10\11\13\16\19\10\10\11\12\14\16\19\1D\10\10\12\15\18\1B\1F$\11\11\14\18\1E#)/\12\13\16\1B#,6A\15\16\19\1F)6FX\18\19\1D$/AXs", align 16
@default_scaling_list_inter = internal constant [64 x i8] c"\10\10\10\10\11\12\14\18\10\10\10\11\12\14\18\19\10\10\11\12\14\18\19\1C\10\11\12\14\18\19\1C!\11\12\14\18\19\1C!)\12\14\18\19\1C!)6\14\18\19\1C!)6G\18\19\1C!)6G[", align 16
@.str.73 = private unnamed_addr constant [41 x i8] c"Invalid delta in scaling list data: %d.\0A\00", align 1
@ff_hevc_diag_scan4x4_y = external constant [16 x i8], align 16
@ff_hevc_diag_scan4x4_x = external constant [16 x i8], align 16
@ff_hevc_diag_scan8x8_y = external constant [64 x i8], align 16
@ff_hevc_diag_scan8x8_x = external constant [64 x i8], align 16
@.str.74 = private unnamed_addr constant [14 x i8] c"Decoding VUI\0A\00", align 1
@vui_sar = internal constant [17 x %struct.AVRational] [%struct.AVRational { i32 0, i32 1 }, %struct.AVRational { i32 1, i32 1 }, %struct.AVRational { i32 12, i32 11 }, %struct.AVRational { i32 10, i32 11 }, %struct.AVRational { i32 16, i32 11 }, %struct.AVRational { i32 40, i32 33 }, %struct.AVRational { i32 24, i32 11 }, %struct.AVRational { i32 20, i32 11 }, %struct.AVRational { i32 32, i32 11 }, %struct.AVRational { i32 80, i32 33 }, %struct.AVRational { i32 18, i32 11 }, %struct.AVRational { i32 15, i32 11 }, %struct.AVRational { i32 64, i32 33 }, %struct.AVRational { i32 160, i32 99 }, %struct.AVRational { i32 4, i32 3 }, %struct.AVRational { i32 3, i32 2 }, %struct.AVRational { i32 2, i32 1 }], align 16
@.str.75 = private unnamed_addr constant [24 x i8] c"Unknown SAR index: %u.\0A\00", align 1
@.str.76 = private unnamed_addr constant [32 x i8] c"Invalid default display window\0A\00", align 1
@.str.77 = private unnamed_addr constant [80 x i8] c"discarding vui default display window, original values are l:%u r:%u t:%u b:%u\0A\00", align 1
@.str.78 = private unnamed_addr constant [45 x i8] c"Strange VUI timing information, retrying...\0A\00", align 1
@.str.79 = private unnamed_addr constant [21 x i8] c"Retry got %u/%u fps\0A\00", align 1
@.str.80 = private unnamed_addr constant [84 x i8] c"Strange VUI bitstream restriction information, retrying from timing information...\0A\00", align 1
@.str.81 = private unnamed_addr constant [54 x i8] c"Overread in VUI, retrying from timing information...\0A\00", align 1
@.str.82 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.83 = private unnamed_addr constant [64 x i8] c"!(s->sps_list[id] && s->sps == (HEVCSPS*)s->sps_list[id]->data)\00", align 1
@.str.84 = private unnamed_addr constant [21 x i8] c"libavcodec/hevc_ps.c\00", align 1
@ff_golomb_vlc_len = external constant [512 x i8], align 16
@ff_se_golomb_vlc_code = external constant [512 x i8], align 16
@.str.85 = private unnamed_addr constant [64 x i8] c"chroma_qp_offset_list_len_minus1 shall be in the range [0, 5].\0A\00", align 1
@.str.86 = private unnamed_addr constant [35 x i8] c"cb_qp_offset_list not tested yet.\0A\00", align 1

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_decode_short_term_rps(%struct.GetBitContext* %gb, %struct.AVCodecContext* %avctx, %struct.ShortTermRPS* %rps, %struct.HEVCSPS* %sps, i32 %is_slice_header) #0 !dbg !1298 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %rps.addr = alloca %struct.ShortTermRPS*, align 8
  %sps.addr = alloca %struct.HEVCSPS*, align 8
  %is_slice_header.addr = alloca i32, align 4
  %rps_predict = alloca i8, align 1
  %delta_poc = alloca i32, align 4
  %k0 = alloca i32, align 4
  %k1 = alloca i32, align 4
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %rps_ridx = alloca %struct.ShortTermRPS*, align 8
  %delta_rps = alloca i32, align 4
  %abs_delta_rps = alloca i32, align 4
  %use_delta_flag = alloca i8, align 1
  %delta_rps_sign = alloca i8, align 1
  %delta_idx = alloca i32, align 4
  %used = alloca i32, align 4
  %used83 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %used137 = alloca i32, align 4
  %prev = alloca i32, align 4
  %nb_positive_pics = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !1891, metadata !1892), !dbg !1893
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1894, metadata !1892), !dbg !1895
  store %struct.ShortTermRPS* %rps, %struct.ShortTermRPS** %rps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShortTermRPS** %rps.addr, metadata !1896, metadata !1892), !dbg !1897
  store %struct.HEVCSPS* %sps, %struct.HEVCSPS** %sps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCSPS** %sps.addr, metadata !1898, metadata !1892), !dbg !1899
  store i32 %is_slice_header, i32* %is_slice_header.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_slice_header.addr, metadata !1900, metadata !1892), !dbg !1901
  call void @llvm.dbg.declare(metadata i8* %rps_predict, metadata !1902, metadata !1892), !dbg !1903
  store i8 0, i8* %rps_predict, align 1, !dbg !1903
  call void @llvm.dbg.declare(metadata i32* %delta_poc, metadata !1904, metadata !1892), !dbg !1905
  call void @llvm.dbg.declare(metadata i32* %k0, metadata !1906, metadata !1892), !dbg !1907
  store i32 0, i32* %k0, align 4, !dbg !1907
  call void @llvm.dbg.declare(metadata i32* %k1, metadata !1908, metadata !1892), !dbg !1909
  store i32 0, i32* %k1, align 4, !dbg !1909
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1910, metadata !1892), !dbg !1911
  store i32 0, i32* %k, align 4, !dbg !1911
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1912, metadata !1892), !dbg !1913
  %0 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !1914
  %1 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !1916
  %st_rps = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %1, i32 0, i32 19, !dbg !1917
  %arraydecay = getelementptr inbounds [64 x %struct.ShortTermRPS], [64 x %struct.ShortTermRPS]* %st_rps, i32 0, i32 0, !dbg !1916
  %cmp = icmp ne %struct.ShortTermRPS* %0, %arraydecay, !dbg !1918
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1919

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !1920
  %nb_st_rps = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %2, i32 0, i32 18, !dbg !1922
  %3 = load i32, i32* %nb_st_rps, align 4, !dbg !1922
  %tobool = icmp ne i32 %3, 0, !dbg !1920
  br i1 %tobool, label %if.then, label %if.end, !dbg !1923

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !1924
  %call = call i32 @get_bits1(%struct.GetBitContext* %4), !dbg !1925
  %conv = trunc i32 %call to i8, !dbg !1925
  store i8 %conv, i8* %rps_predict, align 1, !dbg !1926
  br label %if.end, !dbg !1927

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load i8, i8* %rps_predict, align 1, !dbg !1928
  %tobool1 = icmp ne i8 %5, 0, !dbg !1928
  br i1 %tobool1, label %if.then2, label %if.else177, !dbg !1930

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.ShortTermRPS** %rps_ridx, metadata !1931, metadata !1892), !dbg !1935
  call void @llvm.dbg.declare(metadata i32* %delta_rps, metadata !1936, metadata !1892), !dbg !1937
  call void @llvm.dbg.declare(metadata i32* %abs_delta_rps, metadata !1938, metadata !1892), !dbg !1939
  call void @llvm.dbg.declare(metadata i8* %use_delta_flag, metadata !1940, metadata !1892), !dbg !1941
  store i8 0, i8* %use_delta_flag, align 1, !dbg !1941
  call void @llvm.dbg.declare(metadata i8* %delta_rps_sign, metadata !1942, metadata !1892), !dbg !1943
  %6 = load i32, i32* %is_slice_header.addr, align 4, !dbg !1944
  %tobool3 = icmp ne i32 %6, 0, !dbg !1944
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !1946

if.then4:                                         ; preds = %if.then2
  call void @llvm.dbg.declare(metadata i32* %delta_idx, metadata !1947, metadata !1892), !dbg !1949
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !1950
  %call5 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %7), !dbg !1951
  %add = add i32 %call5, 1, !dbg !1952
  store i32 %add, i32* %delta_idx, align 4, !dbg !1949
  %8 = load i32, i32* %delta_idx, align 4, !dbg !1953
  %9 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !1955
  %nb_st_rps6 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %9, i32 0, i32 18, !dbg !1956
  %10 = load i32, i32* %nb_st_rps6, align 4, !dbg !1956
  %cmp7 = icmp ugt i32 %8, %10, !dbg !1957
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !1958

if.then9:                                         ; preds = %if.then4
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1959
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !1959
  %13 = load i32, i32* %delta_idx, align 4, !dbg !1961
  %14 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !1962
  %nb_st_rps10 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %14, i32 0, i32 18, !dbg !1963
  %15 = load i32, i32* %nb_st_rps10, align 4, !dbg !1963
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i32 0, i32 0), i32 %13, i32 %15), !dbg !1964
  store i32 -1094995529, i32* %retval, align 4, !dbg !1965
  br label %return, !dbg !1965

if.end11:                                         ; preds = %if.then4
  %16 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !1966
  %nb_st_rps12 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %16, i32 0, i32 18, !dbg !1967
  %17 = load i32, i32* %nb_st_rps12, align 4, !dbg !1967
  %18 = load i32, i32* %delta_idx, align 4, !dbg !1968
  %sub = sub i32 %17, %18, !dbg !1969
  %idxprom = zext i32 %sub to i64, !dbg !1970
  %19 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !1970
  %st_rps13 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %19, i32 0, i32 19, !dbg !1971
  %arrayidx = getelementptr inbounds [64 x %struct.ShortTermRPS], [64 x %struct.ShortTermRPS]* %st_rps13, i64 0, i64 %idxprom, !dbg !1970
  store %struct.ShortTermRPS* %arrayidx, %struct.ShortTermRPS** %rps_ridx, align 8, !dbg !1972
  %20 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps_ridx, align 8, !dbg !1973
  %num_delta_pocs = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %20, i32 0, i32 1, !dbg !1974
  %21 = load i32, i32* %num_delta_pocs, align 4, !dbg !1974
  %22 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !1975
  %rps_idx_num_delta_pocs = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %22, i32 0, i32 2, !dbg !1976
  store i32 %21, i32* %rps_idx_num_delta_pocs, align 4, !dbg !1977
  br label %if.end19, !dbg !1978

if.else:                                          ; preds = %if.then2
  %23 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !1979
  %24 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !1980
  %st_rps14 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %24, i32 0, i32 19, !dbg !1981
  %arraydecay15 = getelementptr inbounds [64 x %struct.ShortTermRPS], [64 x %struct.ShortTermRPS]* %st_rps14, i32 0, i32 0, !dbg !1980
  %sub.ptr.lhs.cast = ptrtoint %struct.ShortTermRPS* %23 to i64, !dbg !1982
  %sub.ptr.rhs.cast = ptrtoint %struct.ShortTermRPS* %arraydecay15 to i64, !dbg !1982
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1982
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 172, !dbg !1982
  %sub16 = sub nsw i64 %sub.ptr.div, 1, !dbg !1983
  %25 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !1984
  %st_rps17 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %25, i32 0, i32 19, !dbg !1985
  %arrayidx18 = getelementptr inbounds [64 x %struct.ShortTermRPS], [64 x %struct.ShortTermRPS]* %st_rps17, i64 0, i64 %sub16, !dbg !1984
  store %struct.ShortTermRPS* %arrayidx18, %struct.ShortTermRPS** %rps_ridx, align 8, !dbg !1986
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.end11
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !1987
  %call20 = call i32 @get_bits1(%struct.GetBitContext* %26), !dbg !1988
  %conv21 = trunc i32 %call20 to i8, !dbg !1988
  store i8 %conv21, i8* %delta_rps_sign, align 1, !dbg !1989
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !1990
  %call22 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %27), !dbg !1991
  %add23 = add i32 %call22, 1, !dbg !1992
  store i32 %add23, i32* %abs_delta_rps, align 4, !dbg !1993
  %28 = load i32, i32* %abs_delta_rps, align 4, !dbg !1994
  %cmp24 = icmp ult i32 %28, 1, !dbg !1996
  br i1 %cmp24, label %if.then28, label %lor.lhs.false, !dbg !1997

lor.lhs.false:                                    ; preds = %if.end19
  %29 = load i32, i32* %abs_delta_rps, align 4, !dbg !1998
  %cmp26 = icmp ugt i32 %29, 32768, !dbg !2000
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !2001

if.then28:                                        ; preds = %lor.lhs.false, %if.end19
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2002
  %31 = bitcast %struct.AVCodecContext* %30 to i8*, !dbg !2002
  %32 = load i32, i32* %abs_delta_rps, align 4, !dbg !2004
  call void (i8*, i32, i8*, ...) @av_log(i8* %31, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i32 0, i32 0), i32 %32), !dbg !2005
  store i32 -1094995529, i32* %retval, align 4, !dbg !2006
  br label %return, !dbg !2006

if.end29:                                         ; preds = %lor.lhs.false
  %33 = load i8, i8* %delta_rps_sign, align 1, !dbg !2007
  %conv30 = zext i8 %33 to i32, !dbg !2007
  %shl = shl i32 %conv30, 1, !dbg !2008
  %sub31 = sub nsw i32 1, %shl, !dbg !2009
  %34 = load i32, i32* %abs_delta_rps, align 4, !dbg !2010
  %mul = mul i32 %sub31, %34, !dbg !2011
  store i32 %mul, i32* %delta_rps, align 4, !dbg !2012
  store i32 0, i32* %i, align 4, !dbg !2013
  br label %for.cond, !dbg !2015

for.cond:                                         ; preds = %for.inc, %if.end29
  %35 = load i32, i32* %i, align 4, !dbg !2016
  %36 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps_ridx, align 8, !dbg !2019
  %num_delta_pocs32 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %36, i32 0, i32 1, !dbg !2020
  %37 = load i32, i32* %num_delta_pocs32, align 4, !dbg !2020
  %cmp33 = icmp sle i32 %35, %37, !dbg !2021
  br i1 %cmp33, label %for.body, label %for.end, !dbg !2022

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %used, metadata !2023, metadata !1892), !dbg !2025
  %38 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2026
  %call35 = call i32 @get_bits1(%struct.GetBitContext* %38), !dbg !2027
  %conv36 = trunc i32 %call35 to i8, !dbg !2027
  %39 = load i32, i32* %k, align 4, !dbg !2028
  %idxprom37 = sext i32 %39 to i64, !dbg !2029
  %40 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2029
  %used38 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %40, i32 0, i32 4, !dbg !2030
  %arrayidx39 = getelementptr inbounds [32 x i8], [32 x i8]* %used38, i64 0, i64 %idxprom37, !dbg !2029
  store i8 %conv36, i8* %arrayidx39, align 1, !dbg !2031
  %conv40 = zext i8 %conv36 to i32, !dbg !2029
  store i32 %conv40, i32* %used, align 4, !dbg !2025
  %41 = load i32, i32* %used, align 4, !dbg !2032
  %tobool41 = icmp ne i32 %41, 0, !dbg !2032
  br i1 %tobool41, label %if.end45, label %if.then42, !dbg !2034

if.then42:                                        ; preds = %for.body
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2035
  %call43 = call i32 @get_bits1(%struct.GetBitContext* %42), !dbg !2036
  %conv44 = trunc i32 %call43 to i8, !dbg !2036
  store i8 %conv44, i8* %use_delta_flag, align 1, !dbg !2037
  br label %if.end45, !dbg !2038

if.end45:                                         ; preds = %if.then42, %for.body
  %43 = load i32, i32* %used, align 4, !dbg !2039
  %tobool46 = icmp ne i32 %43, 0, !dbg !2039
  br i1 %tobool46, label %if.then50, label %lor.lhs.false47, !dbg !2041

lor.lhs.false47:                                  ; preds = %if.end45
  %44 = load i8, i8* %use_delta_flag, align 1, !dbg !2042
  %conv48 = zext i8 %44 to i32, !dbg !2042
  %tobool49 = icmp ne i32 %conv48, 0, !dbg !2042
  br i1 %tobool49, label %if.then50, label %if.end71, !dbg !2044

if.then50:                                        ; preds = %lor.lhs.false47, %if.end45
  %45 = load i32, i32* %i, align 4, !dbg !2045
  %46 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps_ridx, align 8, !dbg !2048
  %num_delta_pocs51 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %46, i32 0, i32 1, !dbg !2049
  %47 = load i32, i32* %num_delta_pocs51, align 4, !dbg !2049
  %cmp52 = icmp slt i32 %45, %47, !dbg !2050
  br i1 %cmp52, label %if.then54, label %if.else59, !dbg !2051

if.then54:                                        ; preds = %if.then50
  %48 = load i32, i32* %delta_rps, align 4, !dbg !2052
  %49 = load i32, i32* %i, align 4, !dbg !2053
  %idxprom55 = sext i32 %49 to i64, !dbg !2054
  %50 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps_ridx, align 8, !dbg !2054
  %delta_poc56 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %50, i32 0, i32 3, !dbg !2055
  %arrayidx57 = getelementptr inbounds [32 x i32], [32 x i32]* %delta_poc56, i64 0, i64 %idxprom55, !dbg !2054
  %51 = load i32, i32* %arrayidx57, align 4, !dbg !2054
  %add58 = add nsw i32 %48, %51, !dbg !2056
  store i32 %add58, i32* %delta_poc, align 4, !dbg !2057
  br label %if.end60, !dbg !2058

if.else59:                                        ; preds = %if.then50
  %52 = load i32, i32* %delta_rps, align 4, !dbg !2059
  store i32 %52, i32* %delta_poc, align 4, !dbg !2060
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %if.then54
  %53 = load i32, i32* %delta_poc, align 4, !dbg !2061
  %54 = load i32, i32* %k, align 4, !dbg !2062
  %idxprom61 = sext i32 %54 to i64, !dbg !2063
  %55 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2063
  %delta_poc62 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %55, i32 0, i32 3, !dbg !2064
  %arrayidx63 = getelementptr inbounds [32 x i32], [32 x i32]* %delta_poc62, i64 0, i64 %idxprom61, !dbg !2063
  store i32 %53, i32* %arrayidx63, align 4, !dbg !2065
  %56 = load i32, i32* %delta_poc, align 4, !dbg !2066
  %cmp64 = icmp slt i32 %56, 0, !dbg !2068
  br i1 %cmp64, label %if.then66, label %if.else67, !dbg !2069

if.then66:                                        ; preds = %if.end60
  %57 = load i32, i32* %k0, align 4, !dbg !2070
  %inc = add nsw i32 %57, 1, !dbg !2070
  store i32 %inc, i32* %k0, align 4, !dbg !2070
  br label %if.end69, !dbg !2071

if.else67:                                        ; preds = %if.end60
  %58 = load i32, i32* %k1, align 4, !dbg !2072
  %inc68 = add nsw i32 %58, 1, !dbg !2072
  store i32 %inc68, i32* %k1, align 4, !dbg !2072
  br label %if.end69

if.end69:                                         ; preds = %if.else67, %if.then66
  %59 = load i32, i32* %k, align 4, !dbg !2073
  %inc70 = add nsw i32 %59, 1, !dbg !2073
  store i32 %inc70, i32* %k, align 4, !dbg !2073
  br label %if.end71, !dbg !2074

if.end71:                                         ; preds = %if.end69, %lor.lhs.false47
  br label %for.inc, !dbg !2075

for.inc:                                          ; preds = %if.end71
  %60 = load i32, i32* %i, align 4, !dbg !2076
  %inc72 = add nsw i32 %60, 1, !dbg !2076
  store i32 %inc72, i32* %i, align 4, !dbg !2076
  br label %for.cond, !dbg !2078, !llvm.loop !2079

for.end:                                          ; preds = %for.cond
  %61 = load i32, i32* %k, align 4, !dbg !2081
  %conv73 = sext i32 %61 to i64, !dbg !2081
  %cmp74 = icmp uge i64 %conv73, 32, !dbg !2083
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !2084

if.then76:                                        ; preds = %for.end
  %62 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2085
  %63 = bitcast %struct.AVCodecContext* %62 to i8*, !dbg !2085
  %64 = load i32, i32* %k, align 4, !dbg !2087
  call void (i8*, i32, i8*, ...) @av_log(i8* %63, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0), i32 %64), !dbg !2088
  store i32 -1094995529, i32* %retval, align 4, !dbg !2089
  br label %return, !dbg !2089

if.end77:                                         ; preds = %for.end
  %65 = load i32, i32* %k, align 4, !dbg !2090
  %66 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2091
  %num_delta_pocs78 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %66, i32 0, i32 1, !dbg !2092
  store i32 %65, i32* %num_delta_pocs78, align 4, !dbg !2093
  %67 = load i32, i32* %k0, align 4, !dbg !2094
  %68 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2095
  %num_negative_pics = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %68, i32 0, i32 0, !dbg !2096
  store i32 %67, i32* %num_negative_pics, align 4, !dbg !2097
  %69 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2098
  %num_delta_pocs79 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %69, i32 0, i32 1, !dbg !2100
  %70 = load i32, i32* %num_delta_pocs79, align 4, !dbg !2100
  %cmp80 = icmp ne i32 %70, 0, !dbg !2101
  br i1 %cmp80, label %if.then82, label %if.end131, !dbg !2102

if.then82:                                        ; preds = %if.end77
  call void @llvm.dbg.declare(metadata i32* %used83, metadata !2103, metadata !1892), !dbg !2105
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !2106, metadata !1892), !dbg !2107
  store i32 1, i32* %i, align 4, !dbg !2108
  br label %for.cond84, !dbg !2110

for.cond84:                                       ; preds = %for.inc128, %if.then82
  %71 = load i32, i32* %i, align 4, !dbg !2111
  %72 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2114
  %num_delta_pocs85 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %72, i32 0, i32 1, !dbg !2115
  %73 = load i32, i32* %num_delta_pocs85, align 4, !dbg !2115
  %cmp86 = icmp slt i32 %71, %73, !dbg !2116
  br i1 %cmp86, label %for.body88, label %for.end130, !dbg !2117

for.body88:                                       ; preds = %for.cond84
  %74 = load i32, i32* %i, align 4, !dbg !2118
  %idxprom89 = sext i32 %74 to i64, !dbg !2120
  %75 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2120
  %delta_poc90 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %75, i32 0, i32 3, !dbg !2121
  %arrayidx91 = getelementptr inbounds [32 x i32], [32 x i32]* %delta_poc90, i64 0, i64 %idxprom89, !dbg !2120
  %76 = load i32, i32* %arrayidx91, align 4, !dbg !2120
  store i32 %76, i32* %delta_poc, align 4, !dbg !2122
  %77 = load i32, i32* %i, align 4, !dbg !2123
  %idxprom92 = sext i32 %77 to i64, !dbg !2124
  %78 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2124
  %used93 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %78, i32 0, i32 4, !dbg !2125
  %arrayidx94 = getelementptr inbounds [32 x i8], [32 x i8]* %used93, i64 0, i64 %idxprom92, !dbg !2124
  %79 = load i8, i8* %arrayidx94, align 1, !dbg !2124
  %conv95 = zext i8 %79 to i32, !dbg !2124
  store i32 %conv95, i32* %used83, align 4, !dbg !2126
  %80 = load i32, i32* %i, align 4, !dbg !2127
  %sub96 = sub nsw i32 %80, 1, !dbg !2129
  store i32 %sub96, i32* %k, align 4, !dbg !2130
  br label %for.cond97, !dbg !2131

for.cond97:                                       ; preds = %for.inc126, %for.body88
  %81 = load i32, i32* %k, align 4, !dbg !2132
  %cmp98 = icmp sge i32 %81, 0, !dbg !2135
  br i1 %cmp98, label %for.body100, label %for.end127, !dbg !2136

for.body100:                                      ; preds = %for.cond97
  %82 = load i32, i32* %k, align 4, !dbg !2137
  %idxprom101 = sext i32 %82 to i64, !dbg !2139
  %83 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2139
  %delta_poc102 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %83, i32 0, i32 3, !dbg !2140
  %arrayidx103 = getelementptr inbounds [32 x i32], [32 x i32]* %delta_poc102, i64 0, i64 %idxprom101, !dbg !2139
  %84 = load i32, i32* %arrayidx103, align 4, !dbg !2139
  store i32 %84, i32* %tmp, align 4, !dbg !2141
  %85 = load i32, i32* %delta_poc, align 4, !dbg !2142
  %86 = load i32, i32* %tmp, align 4, !dbg !2144
  %cmp104 = icmp slt i32 %85, %86, !dbg !2145
  br i1 %cmp104, label %if.then106, label %if.end125, !dbg !2146

if.then106:                                       ; preds = %for.body100
  %87 = load i32, i32* %tmp, align 4, !dbg !2147
  %88 = load i32, i32* %k, align 4, !dbg !2149
  %add107 = add nsw i32 %88, 1, !dbg !2150
  %idxprom108 = sext i32 %add107 to i64, !dbg !2151
  %89 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2151
  %delta_poc109 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %89, i32 0, i32 3, !dbg !2152
  %arrayidx110 = getelementptr inbounds [32 x i32], [32 x i32]* %delta_poc109, i64 0, i64 %idxprom108, !dbg !2151
  store i32 %87, i32* %arrayidx110, align 4, !dbg !2153
  %90 = load i32, i32* %k, align 4, !dbg !2154
  %idxprom111 = sext i32 %90 to i64, !dbg !2155
  %91 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2155
  %used112 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %91, i32 0, i32 4, !dbg !2156
  %arrayidx113 = getelementptr inbounds [32 x i8], [32 x i8]* %used112, i64 0, i64 %idxprom111, !dbg !2155
  %92 = load i8, i8* %arrayidx113, align 1, !dbg !2155
  %93 = load i32, i32* %k, align 4, !dbg !2157
  %add114 = add nsw i32 %93, 1, !dbg !2158
  %idxprom115 = sext i32 %add114 to i64, !dbg !2159
  %94 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2159
  %used116 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %94, i32 0, i32 4, !dbg !2160
  %arrayidx117 = getelementptr inbounds [32 x i8], [32 x i8]* %used116, i64 0, i64 %idxprom115, !dbg !2159
  store i8 %92, i8* %arrayidx117, align 1, !dbg !2161
  %95 = load i32, i32* %delta_poc, align 4, !dbg !2162
  %96 = load i32, i32* %k, align 4, !dbg !2163
  %idxprom118 = sext i32 %96 to i64, !dbg !2164
  %97 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2164
  %delta_poc119 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %97, i32 0, i32 3, !dbg !2165
  %arrayidx120 = getelementptr inbounds [32 x i32], [32 x i32]* %delta_poc119, i64 0, i64 %idxprom118, !dbg !2164
  store i32 %95, i32* %arrayidx120, align 4, !dbg !2166
  %98 = load i32, i32* %used83, align 4, !dbg !2167
  %conv121 = trunc i32 %98 to i8, !dbg !2167
  %99 = load i32, i32* %k, align 4, !dbg !2168
  %idxprom122 = sext i32 %99 to i64, !dbg !2169
  %100 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2169
  %used123 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %100, i32 0, i32 4, !dbg !2170
  %arrayidx124 = getelementptr inbounds [32 x i8], [32 x i8]* %used123, i64 0, i64 %idxprom122, !dbg !2169
  store i8 %conv121, i8* %arrayidx124, align 1, !dbg !2171
  br label %if.end125, !dbg !2172

if.end125:                                        ; preds = %if.then106, %for.body100
  br label %for.inc126, !dbg !2173

for.inc126:                                       ; preds = %if.end125
  %101 = load i32, i32* %k, align 4, !dbg !2174
  %dec = add nsw i32 %101, -1, !dbg !2174
  store i32 %dec, i32* %k, align 4, !dbg !2174
  br label %for.cond97, !dbg !2176, !llvm.loop !2177

for.end127:                                       ; preds = %for.cond97
  br label %for.inc128, !dbg !2179

for.inc128:                                       ; preds = %for.end127
  %102 = load i32, i32* %i, align 4, !dbg !2180
  %inc129 = add nsw i32 %102, 1, !dbg !2180
  store i32 %inc129, i32* %i, align 4, !dbg !2180
  br label %for.cond84, !dbg !2182, !llvm.loop !2183

for.end130:                                       ; preds = %for.cond84
  br label %if.end131, !dbg !2185

if.end131:                                        ; preds = %for.end130, %if.end77
  %103 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2186
  %num_negative_pics132 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %103, i32 0, i32 0, !dbg !2188
  %104 = load i32, i32* %num_negative_pics132, align 4, !dbg !2188
  %shr = lshr i32 %104, 1, !dbg !2189
  %cmp133 = icmp ne i32 %shr, 0, !dbg !2190
  br i1 %cmp133, label %if.then135, label %if.end176, !dbg !2191

if.then135:                                       ; preds = %if.end131
  call void @llvm.dbg.declare(metadata i32* %used137, metadata !2192, metadata !1892), !dbg !2194
  %105 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2195
  %num_negative_pics138 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %105, i32 0, i32 0, !dbg !2196
  %106 = load i32, i32* %num_negative_pics138, align 4, !dbg !2196
  %sub139 = sub i32 %106, 1, !dbg !2197
  store i32 %sub139, i32* %k, align 4, !dbg !2198
  store i32 0, i32* %i, align 4, !dbg !2199
  br label %for.cond140, !dbg !2201

for.cond140:                                      ; preds = %for.inc173, %if.then135
  %107 = load i32, i32* %i, align 4, !dbg !2202
  %108 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2205
  %num_negative_pics141 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %108, i32 0, i32 0, !dbg !2206
  %109 = load i32, i32* %num_negative_pics141, align 4, !dbg !2206
  %shr142 = lshr i32 %109, 1, !dbg !2207
  %cmp143 = icmp ult i32 %107, %shr142, !dbg !2208
  br i1 %cmp143, label %for.body145, label %for.end175, !dbg !2209

for.body145:                                      ; preds = %for.cond140
  %110 = load i32, i32* %i, align 4, !dbg !2210
  %idxprom146 = sext i32 %110 to i64, !dbg !2212
  %111 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2212
  %delta_poc147 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %111, i32 0, i32 3, !dbg !2213
  %arrayidx148 = getelementptr inbounds [32 x i32], [32 x i32]* %delta_poc147, i64 0, i64 %idxprom146, !dbg !2212
  %112 = load i32, i32* %arrayidx148, align 4, !dbg !2212
  store i32 %112, i32* %delta_poc, align 4, !dbg !2214
  %113 = load i32, i32* %i, align 4, !dbg !2215
  %idxprom149 = sext i32 %113 to i64, !dbg !2216
  %114 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2216
  %used150 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %114, i32 0, i32 4, !dbg !2217
  %arrayidx151 = getelementptr inbounds [32 x i8], [32 x i8]* %used150, i64 0, i64 %idxprom149, !dbg !2216
  %115 = load i8, i8* %arrayidx151, align 1, !dbg !2216
  %conv152 = zext i8 %115 to i32, !dbg !2216
  store i32 %conv152, i32* %used137, align 4, !dbg !2218
  %116 = load i32, i32* %k, align 4, !dbg !2219
  %idxprom153 = sext i32 %116 to i64, !dbg !2220
  %117 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2220
  %delta_poc154 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %117, i32 0, i32 3, !dbg !2221
  %arrayidx155 = getelementptr inbounds [32 x i32], [32 x i32]* %delta_poc154, i64 0, i64 %idxprom153, !dbg !2220
  %118 = load i32, i32* %arrayidx155, align 4, !dbg !2220
  %119 = load i32, i32* %i, align 4, !dbg !2222
  %idxprom156 = sext i32 %119 to i64, !dbg !2223
  %120 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2223
  %delta_poc157 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %120, i32 0, i32 3, !dbg !2224
  %arrayidx158 = getelementptr inbounds [32 x i32], [32 x i32]* %delta_poc157, i64 0, i64 %idxprom156, !dbg !2223
  store i32 %118, i32* %arrayidx158, align 4, !dbg !2225
  %121 = load i32, i32* %k, align 4, !dbg !2226
  %idxprom159 = sext i32 %121 to i64, !dbg !2227
  %122 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2227
  %used160 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %122, i32 0, i32 4, !dbg !2228
  %arrayidx161 = getelementptr inbounds [32 x i8], [32 x i8]* %used160, i64 0, i64 %idxprom159, !dbg !2227
  %123 = load i8, i8* %arrayidx161, align 1, !dbg !2227
  %124 = load i32, i32* %i, align 4, !dbg !2229
  %idxprom162 = sext i32 %124 to i64, !dbg !2230
  %125 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2230
  %used163 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %125, i32 0, i32 4, !dbg !2231
  %arrayidx164 = getelementptr inbounds [32 x i8], [32 x i8]* %used163, i64 0, i64 %idxprom162, !dbg !2230
  store i8 %123, i8* %arrayidx164, align 1, !dbg !2232
  %126 = load i32, i32* %delta_poc, align 4, !dbg !2233
  %127 = load i32, i32* %k, align 4, !dbg !2234
  %idxprom165 = sext i32 %127 to i64, !dbg !2235
  %128 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2235
  %delta_poc166 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %128, i32 0, i32 3, !dbg !2236
  %arrayidx167 = getelementptr inbounds [32 x i32], [32 x i32]* %delta_poc166, i64 0, i64 %idxprom165, !dbg !2235
  store i32 %126, i32* %arrayidx167, align 4, !dbg !2237
  %129 = load i32, i32* %used137, align 4, !dbg !2238
  %conv168 = trunc i32 %129 to i8, !dbg !2238
  %130 = load i32, i32* %k, align 4, !dbg !2239
  %idxprom169 = sext i32 %130 to i64, !dbg !2240
  %131 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2240
  %used170 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %131, i32 0, i32 4, !dbg !2241
  %arrayidx171 = getelementptr inbounds [32 x i8], [32 x i8]* %used170, i64 0, i64 %idxprom169, !dbg !2240
  store i8 %conv168, i8* %arrayidx171, align 1, !dbg !2242
  %132 = load i32, i32* %k, align 4, !dbg !2243
  %dec172 = add nsw i32 %132, -1, !dbg !2243
  store i32 %dec172, i32* %k, align 4, !dbg !2243
  br label %for.inc173, !dbg !2244

for.inc173:                                       ; preds = %for.body145
  %133 = load i32, i32* %i, align 4, !dbg !2245
  %inc174 = add nsw i32 %133, 1, !dbg !2245
  store i32 %inc174, i32* %i, align 4, !dbg !2245
  br label %for.cond140, !dbg !2247, !llvm.loop !2248

for.end175:                                       ; preds = %for.cond140
  br label %if.end176, !dbg !2250

if.end176:                                        ; preds = %for.end175, %if.end131
  br label %if.end253, !dbg !2251

if.else177:                                       ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %prev, metadata !2252, metadata !1892), !dbg !2254
  call void @llvm.dbg.declare(metadata i32* %nb_positive_pics, metadata !2255, metadata !1892), !dbg !2256
  %134 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2257
  %call180 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %134), !dbg !2258
  %135 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2259
  %num_negative_pics181 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %135, i32 0, i32 0, !dbg !2260
  store i32 %call180, i32* %num_negative_pics181, align 4, !dbg !2261
  %136 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2262
  %call182 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %136), !dbg !2263
  store i32 %call182, i32* %nb_positive_pics, align 4, !dbg !2264
  %137 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2265
  %num_negative_pics183 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %137, i32 0, i32 0, !dbg !2267
  %138 = load i32, i32* %num_negative_pics183, align 4, !dbg !2267
  %cmp184 = icmp uge i32 %138, 16, !dbg !2268
  br i1 %cmp184, label %if.then189, label %lor.lhs.false186, !dbg !2269

lor.lhs.false186:                                 ; preds = %if.else177
  %139 = load i32, i32* %nb_positive_pics, align 4, !dbg !2270
  %cmp187 = icmp uge i32 %139, 16, !dbg !2271
  br i1 %cmp187, label %if.then189, label %if.end190, !dbg !2272

if.then189:                                       ; preds = %lor.lhs.false186, %if.else177
  %140 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2274
  %141 = bitcast %struct.AVCodecContext* %140 to i8*, !dbg !2274
  call void (i8*, i32, i8*, ...) @av_log(i8* %141, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i32 0, i32 0)), !dbg !2276
  store i32 -1094995529, i32* %retval, align 4, !dbg !2277
  br label %return, !dbg !2277

if.end190:                                        ; preds = %lor.lhs.false186
  %142 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2278
  %num_negative_pics191 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %142, i32 0, i32 0, !dbg !2279
  %143 = load i32, i32* %num_negative_pics191, align 4, !dbg !2279
  %144 = load i32, i32* %nb_positive_pics, align 4, !dbg !2280
  %add192 = add i32 %143, %144, !dbg !2281
  %145 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2282
  %num_delta_pocs193 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %145, i32 0, i32 1, !dbg !2283
  store i32 %add192, i32* %num_delta_pocs193, align 4, !dbg !2284
  %146 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2285
  %num_delta_pocs194 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %146, i32 0, i32 1, !dbg !2287
  %147 = load i32, i32* %num_delta_pocs194, align 4, !dbg !2287
  %tobool195 = icmp ne i32 %147, 0, !dbg !2285
  br i1 %tobool195, label %if.then196, label %if.end252, !dbg !2288

if.then196:                                       ; preds = %if.end190
  store i32 0, i32* %prev, align 4, !dbg !2289
  store i32 0, i32* %i, align 4, !dbg !2291
  br label %for.cond197, !dbg !2293

for.cond197:                                      ; preds = %for.inc220, %if.then196
  %148 = load i32, i32* %i, align 4, !dbg !2294
  %149 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2297
  %num_negative_pics198 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %149, i32 0, i32 0, !dbg !2298
  %150 = load i32, i32* %num_negative_pics198, align 4, !dbg !2298
  %cmp199 = icmp ult i32 %148, %150, !dbg !2299
  br i1 %cmp199, label %for.body201, label %for.end222, !dbg !2300

for.body201:                                      ; preds = %for.cond197
  %151 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2301
  %call202 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %151), !dbg !2303
  %add203 = add i32 %call202, 1, !dbg !2304
  store i32 %add203, i32* %delta_poc, align 4, !dbg !2305
  %152 = load i32, i32* %delta_poc, align 4, !dbg !2306
  %cmp204 = icmp slt i32 %152, 1, !dbg !2308
  br i1 %cmp204, label %if.then209, label %lor.lhs.false206, !dbg !2309

lor.lhs.false206:                                 ; preds = %for.body201
  %153 = load i32, i32* %delta_poc, align 4, !dbg !2310
  %cmp207 = icmp sgt i32 %153, 32768, !dbg !2312
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !2313

if.then209:                                       ; preds = %lor.lhs.false206, %for.body201
  %154 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2314
  %155 = bitcast %struct.AVCodecContext* %154 to i8*, !dbg !2314
  %156 = load i32, i32* %delta_poc, align 4, !dbg !2316
  call void (i8*, i32, i8*, ...) @av_log(i8* %155, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i32 0, i32 0), i32 %156), !dbg !2317
  store i32 -1094995529, i32* %retval, align 4, !dbg !2318
  br label %return, !dbg !2318

if.end210:                                        ; preds = %lor.lhs.false206
  %157 = load i32, i32* %delta_poc, align 4, !dbg !2319
  %158 = load i32, i32* %prev, align 4, !dbg !2320
  %sub211 = sub i32 %158, %157, !dbg !2320
  store i32 %sub211, i32* %prev, align 4, !dbg !2320
  %159 = load i32, i32* %prev, align 4, !dbg !2321
  %160 = load i32, i32* %i, align 4, !dbg !2322
  %idxprom212 = sext i32 %160 to i64, !dbg !2323
  %161 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2323
  %delta_poc213 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %161, i32 0, i32 3, !dbg !2324
  %arrayidx214 = getelementptr inbounds [32 x i32], [32 x i32]* %delta_poc213, i64 0, i64 %idxprom212, !dbg !2323
  store i32 %159, i32* %arrayidx214, align 4, !dbg !2325
  %162 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2326
  %call215 = call i32 @get_bits1(%struct.GetBitContext* %162), !dbg !2327
  %conv216 = trunc i32 %call215 to i8, !dbg !2327
  %163 = load i32, i32* %i, align 4, !dbg !2328
  %idxprom217 = sext i32 %163 to i64, !dbg !2329
  %164 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2329
  %used218 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %164, i32 0, i32 4, !dbg !2330
  %arrayidx219 = getelementptr inbounds [32 x i8], [32 x i8]* %used218, i64 0, i64 %idxprom217, !dbg !2329
  store i8 %conv216, i8* %arrayidx219, align 1, !dbg !2331
  br label %for.inc220, !dbg !2332

for.inc220:                                       ; preds = %if.end210
  %165 = load i32, i32* %i, align 4, !dbg !2333
  %inc221 = add nsw i32 %165, 1, !dbg !2333
  store i32 %inc221, i32* %i, align 4, !dbg !2333
  br label %for.cond197, !dbg !2335, !llvm.loop !2336

for.end222:                                       ; preds = %for.cond197
  store i32 0, i32* %prev, align 4, !dbg !2338
  store i32 0, i32* %i, align 4, !dbg !2339
  br label %for.cond223, !dbg !2341

for.cond223:                                      ; preds = %for.inc249, %for.end222
  %166 = load i32, i32* %i, align 4, !dbg !2342
  %167 = load i32, i32* %nb_positive_pics, align 4, !dbg !2345
  %cmp224 = icmp ult i32 %166, %167, !dbg !2346
  br i1 %cmp224, label %for.body226, label %for.end251, !dbg !2347

for.body226:                                      ; preds = %for.cond223
  %168 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2348
  %call227 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %168), !dbg !2350
  %add228 = add i32 %call227, 1, !dbg !2351
  store i32 %add228, i32* %delta_poc, align 4, !dbg !2352
  %169 = load i32, i32* %delta_poc, align 4, !dbg !2353
  %cmp229 = icmp slt i32 %169, 1, !dbg !2355
  br i1 %cmp229, label %if.then234, label %lor.lhs.false231, !dbg !2356

lor.lhs.false231:                                 ; preds = %for.body226
  %170 = load i32, i32* %delta_poc, align 4, !dbg !2357
  %cmp232 = icmp sgt i32 %170, 32768, !dbg !2359
  br i1 %cmp232, label %if.then234, label %if.end235, !dbg !2360

if.then234:                                       ; preds = %lor.lhs.false231, %for.body226
  %171 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2361
  %172 = bitcast %struct.AVCodecContext* %171 to i8*, !dbg !2361
  %173 = load i32, i32* %delta_poc, align 4, !dbg !2363
  call void (i8*, i32, i8*, ...) @av_log(i8* %172, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i32 0, i32 0), i32 %173), !dbg !2364
  store i32 -1094995529, i32* %retval, align 4, !dbg !2365
  br label %return, !dbg !2365

if.end235:                                        ; preds = %lor.lhs.false231
  %174 = load i32, i32* %delta_poc, align 4, !dbg !2366
  %175 = load i32, i32* %prev, align 4, !dbg !2367
  %add236 = add i32 %175, %174, !dbg !2367
  store i32 %add236, i32* %prev, align 4, !dbg !2367
  %176 = load i32, i32* %prev, align 4, !dbg !2368
  %177 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2369
  %num_negative_pics237 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %177, i32 0, i32 0, !dbg !2370
  %178 = load i32, i32* %num_negative_pics237, align 4, !dbg !2370
  %179 = load i32, i32* %i, align 4, !dbg !2371
  %add238 = add i32 %178, %179, !dbg !2372
  %idxprom239 = zext i32 %add238 to i64, !dbg !2373
  %180 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2373
  %delta_poc240 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %180, i32 0, i32 3, !dbg !2374
  %arrayidx241 = getelementptr inbounds [32 x i32], [32 x i32]* %delta_poc240, i64 0, i64 %idxprom239, !dbg !2373
  store i32 %176, i32* %arrayidx241, align 4, !dbg !2375
  %181 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2376
  %call242 = call i32 @get_bits1(%struct.GetBitContext* %181), !dbg !2377
  %conv243 = trunc i32 %call242 to i8, !dbg !2377
  %182 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2378
  %num_negative_pics244 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %182, i32 0, i32 0, !dbg !2379
  %183 = load i32, i32* %num_negative_pics244, align 4, !dbg !2379
  %184 = load i32, i32* %i, align 4, !dbg !2380
  %add245 = add i32 %183, %184, !dbg !2381
  %idxprom246 = zext i32 %add245 to i64, !dbg !2382
  %185 = load %struct.ShortTermRPS*, %struct.ShortTermRPS** %rps.addr, align 8, !dbg !2382
  %used247 = getelementptr inbounds %struct.ShortTermRPS, %struct.ShortTermRPS* %185, i32 0, i32 4, !dbg !2383
  %arrayidx248 = getelementptr inbounds [32 x i8], [32 x i8]* %used247, i64 0, i64 %idxprom246, !dbg !2382
  store i8 %conv243, i8* %arrayidx248, align 1, !dbg !2384
  br label %for.inc249, !dbg !2385

for.inc249:                                       ; preds = %if.end235
  %186 = load i32, i32* %i, align 4, !dbg !2386
  %inc250 = add nsw i32 %186, 1, !dbg !2386
  store i32 %inc250, i32* %i, align 4, !dbg !2386
  br label %for.cond223, !dbg !2388, !llvm.loop !2389

for.end251:                                       ; preds = %for.cond223
  br label %if.end252, !dbg !2391

if.end252:                                        ; preds = %for.end251, %if.end190
  br label %if.end253

if.end253:                                        ; preds = %if.end252, %if.end176
  store i32 0, i32* %retval, align 4, !dbg !2392
  br label %return, !dbg !2392

return:                                           ; preds = %if.end253, %if.then234, %if.then209, %if.then189, %if.then76, %if.then28, %if.then9
  %187 = load i32, i32* %retval, align 4, !dbg !2393
  ret i32 %187, !dbg !2393
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #2 !dbg !2394 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2397, metadata !1892), !dbg !2398
  call void @llvm.dbg.declare(metadata i32* %index, metadata !2399, metadata !1892), !dbg !2400
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2401
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !2402
  %1 = load i32, i32* %index1, align 8, !dbg !2402
  store i32 %1, i32* %index, align 4, !dbg !2400
  call void @llvm.dbg.declare(metadata i8* %result, metadata !2403, metadata !1892), !dbg !2404
  %2 = load i32, i32* %index, align 4, !dbg !2405
  %shr = lshr i32 %2, 3, !dbg !2406
  %idxprom = zext i32 %shr to i64, !dbg !2407
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2407
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !2408
  %4 = load i8*, i8** %buffer, align 8, !dbg !2408
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !2407
  %5 = load i8, i8* %arrayidx, align 1, !dbg !2407
  store i8 %5, i8* %result, align 1, !dbg !2404
  %6 = load i32, i32* %index, align 4, !dbg !2409
  %and = and i32 %6, 7, !dbg !2410
  %7 = load i8, i8* %result, align 1, !dbg !2411
  %conv = zext i8 %7 to i32, !dbg !2411
  %shl = shl i32 %conv, %and, !dbg !2411
  %conv2 = trunc i32 %shl to i8, !dbg !2411
  store i8 %conv2, i8* %result, align 1, !dbg !2411
  %8 = load i8, i8* %result, align 1, !dbg !2412
  %conv3 = zext i8 %8 to i32, !dbg !2412
  %shr4 = ashr i32 %conv3, 7, !dbg !2412
  %conv5 = trunc i32 %shr4 to i8, !dbg !2412
  store i8 %conv5, i8* %result, align 1, !dbg !2412
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2413
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !2415
  %10 = load i32, i32* %index6, align 8, !dbg !2415
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2416
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !2417
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !2417
  %cmp = icmp slt i32 %10, %12, !dbg !2418
  br i1 %cmp, label %if.then, label %if.end, !dbg !2419

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !2420
  %inc = add i32 %13, 1, !dbg !2420
  store i32 %inc, i32* %index, align 4, !dbg !2420
  br label %if.end, !dbg !2421

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !2422
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2423
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !2424
  store i32 %14, i32* %index8, align 8, !dbg !2425
  %16 = load i8, i8* %result, align 1, !dbg !2426
  %conv9 = zext i8 %16 to i32, !dbg !2426
  ret i32 %conv9, !dbg !2427
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_ue_golomb_long(%struct.GetBitContext* %gb) #2 !dbg !2428 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %buf = alloca i32, align 4
  %log = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !2430, metadata !1892), !dbg !2431
  call void @llvm.dbg.declare(metadata i32* %buf, metadata !2432, metadata !1892), !dbg !2433
  call void @llvm.dbg.declare(metadata i32* %log, metadata !2434, metadata !1892), !dbg !2435
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2436
  %call = call i32 @show_bits_long(%struct.GetBitContext* %0, i32 32), !dbg !2437
  store i32 %call, i32* %buf, align 4, !dbg !2438
  %1 = load i32, i32* %buf, align 4, !dbg !2439
  %or = or i32 %1, 1, !dbg !2440
  %2 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !2441
  %sub = sub nsw i32 31, %2, !dbg !2442
  %sub1 = sub nsw i32 31, %sub, !dbg !2443
  store i32 %sub1, i32* %log, align 4, !dbg !2444
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2445
  %4 = load i32, i32* %log, align 4, !dbg !2446
  call void @skip_bits_long(%struct.GetBitContext* %3, i32 %4), !dbg !2447
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2448
  %6 = load i32, i32* %log, align 4, !dbg !2449
  %add = add i32 %6, 1, !dbg !2450
  %call2 = call i32 @get_bits_long(%struct.GetBitContext* %5, i32 %add), !dbg !2451
  %sub3 = sub i32 %call2, 1, !dbg !2452
  ret i32 %sub3, !dbg !2453
}

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_decode_nal_vps(%struct.GetBitContext* %gb, %struct.AVCodecContext* %avctx, %struct.HEVCParamSets* %ps) #0 !dbg !2454 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ps.addr = alloca %struct.HEVCParamSets*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %vps_id = alloca i32, align 4
  %nal_size = alloca i64, align 8
  %vps = alloca %struct.HEVCVPS*, align 8
  %vps_buf = alloca %struct.AVBufferRef*, align 8
  %common_inf_present = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !2471, metadata !1892), !dbg !2472
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2473, metadata !1892), !dbg !2474
  store %struct.HEVCParamSets* %ps, %struct.HEVCParamSets** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCParamSets** %ps.addr, metadata !2475, metadata !1892), !dbg !2476
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2477, metadata !1892), !dbg !2478
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2479, metadata !1892), !dbg !2480
  call void @llvm.dbg.declare(metadata i32* %vps_id, metadata !2481, metadata !1892), !dbg !2482
  store i32 0, i32* %vps_id, align 4, !dbg !2482
  call void @llvm.dbg.declare(metadata i64* %nal_size, metadata !2483, metadata !1892), !dbg !2485
  call void @llvm.dbg.declare(metadata %struct.HEVCVPS** %vps, metadata !2486, metadata !1892), !dbg !2487
  call void @llvm.dbg.declare(metadata %struct.AVBufferRef** %vps_buf, metadata !2488, metadata !1892), !dbg !2489
  %call = call %struct.AVBufferRef* @av_buffer_allocz(i32 4568), !dbg !2490
  store %struct.AVBufferRef* %call, %struct.AVBufferRef** %vps_buf, align 8, !dbg !2489
  %0 = load %struct.AVBufferRef*, %struct.AVBufferRef** %vps_buf, align 8, !dbg !2491
  %tobool = icmp ne %struct.AVBufferRef* %0, null, !dbg !2491
  br i1 %tobool, label %if.end, label %if.then, !dbg !2493

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !2494
  br label %return, !dbg !2494

if.end:                                           ; preds = %entry
  %1 = load %struct.AVBufferRef*, %struct.AVBufferRef** %vps_buf, align 8, !dbg !2495
  %data = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %1, i32 0, i32 1, !dbg !2496
  %2 = load i8*, i8** %data, align 8, !dbg !2496
  %3 = bitcast i8* %2 to %struct.HEVCVPS*, !dbg !2497
  store %struct.HEVCVPS* %3, %struct.HEVCVPS** %vps, align 8, !dbg !2498
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2499
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !2499
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 48, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0)), !dbg !2500
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2501
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 1, !dbg !2502
  %7 = load i8*, i8** %buffer_end, align 8, !dbg !2502
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2503
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %8, i32 0, i32 0, !dbg !2504
  %9 = load i8*, i8** %buffer, align 8, !dbg !2504
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64, !dbg !2505
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !2505
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2505
  store i64 %sub.ptr.sub, i64* %nal_size, align 8, !dbg !2506
  %10 = load i64, i64* %nal_size, align 8, !dbg !2507
  %cmp = icmp ugt i64 %10, 4096, !dbg !2509
  br i1 %cmp, label %if.then1, label %if.else, !dbg !2510

if.then1:                                         ; preds = %if.end
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2511
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !2511
  %13 = load i64, i64* %nal_size, align 8, !dbg !2513
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 24, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i32 0, i32 0), i64 %13, i64 4096), !dbg !2514
  %14 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2515
  %data_size = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %14, i32 0, i32 17, !dbg !2516
  store i32 4096, i32* %data_size, align 4, !dbg !2517
  br label %if.end3, !dbg !2518

if.else:                                          ; preds = %if.end
  %15 = load i64, i64* %nal_size, align 8, !dbg !2519
  %conv = trunc i64 %15 to i32, !dbg !2519
  %16 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2521
  %data_size2 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %16, i32 0, i32 17, !dbg !2522
  store i32 %conv, i32* %data_size2, align 4, !dbg !2523
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then1
  %17 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2524
  %data4 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %17, i32 0, i32 16, !dbg !2525
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %data4, i32 0, i32 0, !dbg !2526
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2527
  %buffer5 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %18, i32 0, i32 0, !dbg !2528
  %19 = load i8*, i8** %buffer5, align 8, !dbg !2528
  %20 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2529
  %data_size6 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %20, i32 0, i32 17, !dbg !2530
  %21 = load i32, i32* %data_size6, align 4, !dbg !2530
  %conv7 = sext i32 %21 to i64, !dbg !2529
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %19, i64 %conv7, i32 1, i1 false), !dbg !2526
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2531
  %call8 = call i32 @get_bits(%struct.GetBitContext* %22, i32 4), !dbg !2532
  store i32 %call8, i32* %vps_id, align 4, !dbg !2533
  %23 = load i32, i32* %vps_id, align 4, !dbg !2534
  %cmp9 = icmp sge i32 %23, 16, !dbg !2536
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !2537

if.then11:                                        ; preds = %if.end3
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2538
  %25 = bitcast %struct.AVCodecContext* %24 to i8*, !dbg !2538
  %26 = load i32, i32* %vps_id, align 4, !dbg !2540
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i32 0, i32 0), i32 %26), !dbg !2541
  br label %err, !dbg !2542

if.end12:                                         ; preds = %if.end3
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2543
  %call13 = call i32 @get_bits(%struct.GetBitContext* %27, i32 2), !dbg !2545
  %cmp14 = icmp ne i32 %call13, 3, !dbg !2546
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !2547

if.then16:                                        ; preds = %if.end12
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2548
  %29 = bitcast %struct.AVCodecContext* %28 to i8*, !dbg !2548
  call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0)), !dbg !2550
  br label %err, !dbg !2551

if.end17:                                         ; preds = %if.end12
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2552
  %call18 = call i32 @get_bits(%struct.GetBitContext* %30, i32 6), !dbg !2553
  %add = add i32 %call18, 1, !dbg !2554
  %31 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2555
  %vps_max_layers = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %31, i32 0, i32 1, !dbg !2556
  store i32 %add, i32* %vps_max_layers, align 4, !dbg !2557
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2558
  %call19 = call i32 @get_bits(%struct.GetBitContext* %32, i32 3), !dbg !2559
  %add20 = add i32 %call19, 1, !dbg !2560
  %33 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2561
  %vps_max_sub_layers = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %33, i32 0, i32 2, !dbg !2562
  store i32 %add20, i32* %vps_max_sub_layers, align 4, !dbg !2563
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2564
  %call21 = call i32 @get_bits1(%struct.GetBitContext* %34), !dbg !2565
  %conv22 = trunc i32 %call21 to i8, !dbg !2565
  %35 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2566
  %vps_temporal_id_nesting_flag = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %35, i32 0, i32 0, !dbg !2567
  store i8 %conv22, i8* %vps_temporal_id_nesting_flag, align 4, !dbg !2568
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2569
  %call23 = call i32 @get_bits(%struct.GetBitContext* %36, i32 16), !dbg !2571
  %cmp24 = icmp ne i32 %call23, 65535, !dbg !2572
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !2573

if.then26:                                        ; preds = %if.end17
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2574
  %38 = bitcast %struct.AVCodecContext* %37 to i8*, !dbg !2574
  call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i32 0, i32 0)), !dbg !2576
  br label %err, !dbg !2577

if.end27:                                         ; preds = %if.end17
  %39 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2578
  %vps_max_sub_layers28 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %39, i32 0, i32 2, !dbg !2580
  %40 = load i32, i32* %vps_max_sub_layers28, align 4, !dbg !2580
  %cmp29 = icmp sgt i32 %40, 7, !dbg !2581
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !2582

if.then31:                                        ; preds = %if.end27
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2583
  %42 = bitcast %struct.AVCodecContext* %41 to i8*, !dbg !2583
  %43 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2585
  %vps_max_sub_layers32 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %43, i32 0, i32 2, !dbg !2586
  %44 = load i32, i32* %vps_max_sub_layers32, align 4, !dbg !2586
  call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i32 0, i32 0), i32 %44), !dbg !2587
  br label %err, !dbg !2588

if.end33:                                         ; preds = %if.end27
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2589
  %46 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2591
  %47 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2592
  %ptl = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %47, i32 0, i32 3, !dbg !2593
  %48 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2594
  %vps_max_sub_layers34 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %48, i32 0, i32 2, !dbg !2595
  %49 = load i32, i32* %vps_max_sub_layers34, align 4, !dbg !2595
  %call35 = call i32 @parse_ptl(%struct.GetBitContext* %45, %struct.AVCodecContext* %46, %struct.PTL* %ptl, i32 %49), !dbg !2596
  %cmp36 = icmp slt i32 %call35, 0, !dbg !2597
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !2598

if.then38:                                        ; preds = %if.end33
  br label %err, !dbg !2599

if.end39:                                         ; preds = %if.end33
  %50 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2600
  %call40 = call i32 @get_bits1(%struct.GetBitContext* %50), !dbg !2601
  %51 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2602
  %vps_sub_layer_ordering_info_present_flag = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %51, i32 0, i32 4, !dbg !2603
  store i32 %call40, i32* %vps_sub_layer_ordering_info_present_flag, align 4, !dbg !2604
  %52 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2605
  %vps_sub_layer_ordering_info_present_flag41 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %52, i32 0, i32 4, !dbg !2606
  %53 = load i32, i32* %vps_sub_layer_ordering_info_present_flag41, align 4, !dbg !2606
  %tobool42 = icmp ne i32 %53, 0, !dbg !2605
  br i1 %tobool42, label %cond.true, label %cond.false, !dbg !2605

cond.true:                                        ; preds = %if.end39
  br label %cond.end, !dbg !2607

cond.false:                                       ; preds = %if.end39
  %54 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2609
  %vps_max_sub_layers43 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %54, i32 0, i32 2, !dbg !2611
  %55 = load i32, i32* %vps_max_sub_layers43, align 4, !dbg !2611
  %sub = sub nsw i32 %55, 1, !dbg !2612
  br label %cond.end, !dbg !2613

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub, %cond.false ], !dbg !2614
  store i32 %cond, i32* %i, align 4, !dbg !2616
  br label %for.cond, !dbg !2617

for.cond:                                         ; preds = %for.inc, %cond.end
  %56 = load i32, i32* %i, align 4, !dbg !2618
  %57 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2622
  %vps_max_sub_layers44 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %57, i32 0, i32 2, !dbg !2623
  %58 = load i32, i32* %vps_max_sub_layers44, align 4, !dbg !2623
  %cmp45 = icmp slt i32 %56, %58, !dbg !2624
  br i1 %cmp45, label %for.body, label %for.end, !dbg !2625

for.body:                                         ; preds = %for.cond
  %59 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2626
  %call47 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %59), !dbg !2628
  %add48 = add i32 %call47, 1, !dbg !2629
  %60 = load i32, i32* %i, align 4, !dbg !2630
  %idxprom = sext i32 %60 to i64, !dbg !2631
  %61 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2631
  %vps_max_dec_pic_buffering = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %61, i32 0, i32 5, !dbg !2632
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* %vps_max_dec_pic_buffering, i64 0, i64 %idxprom, !dbg !2631
  store i32 %add48, i32* %arrayidx, align 4, !dbg !2633
  %62 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2634
  %call49 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %62), !dbg !2635
  %63 = load i32, i32* %i, align 4, !dbg !2636
  %idxprom50 = sext i32 %63 to i64, !dbg !2637
  %64 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2637
  %vps_num_reorder_pics = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %64, i32 0, i32 6, !dbg !2638
  %arrayidx51 = getelementptr inbounds [7 x i32], [7 x i32]* %vps_num_reorder_pics, i64 0, i64 %idxprom50, !dbg !2637
  store i32 %call49, i32* %arrayidx51, align 4, !dbg !2639
  %65 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2640
  %call52 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %65), !dbg !2641
  %sub53 = sub i32 %call52, 1, !dbg !2642
  %66 = load i32, i32* %i, align 4, !dbg !2643
  %idxprom54 = sext i32 %66 to i64, !dbg !2644
  %67 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2644
  %vps_max_latency_increase = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %67, i32 0, i32 7, !dbg !2645
  %arrayidx55 = getelementptr inbounds [7 x i32], [7 x i32]* %vps_max_latency_increase, i64 0, i64 %idxprom54, !dbg !2644
  store i32 %sub53, i32* %arrayidx55, align 4, !dbg !2646
  %68 = load i32, i32* %i, align 4, !dbg !2647
  %idxprom56 = sext i32 %68 to i64, !dbg !2649
  %69 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2649
  %vps_max_dec_pic_buffering57 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %69, i32 0, i32 5, !dbg !2650
  %arrayidx58 = getelementptr inbounds [7 x i32], [7 x i32]* %vps_max_dec_pic_buffering57, i64 0, i64 %idxprom56, !dbg !2649
  %70 = load i32, i32* %arrayidx58, align 4, !dbg !2649
  %cmp59 = icmp ugt i32 %70, 16, !dbg !2651
  br i1 %cmp59, label %if.then65, label %lor.lhs.false, !dbg !2652

lor.lhs.false:                                    ; preds = %for.body
  %71 = load i32, i32* %i, align 4, !dbg !2653
  %idxprom61 = sext i32 %71 to i64, !dbg !2655
  %72 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2655
  %vps_max_dec_pic_buffering62 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %72, i32 0, i32 5, !dbg !2656
  %arrayidx63 = getelementptr inbounds [7 x i32], [7 x i32]* %vps_max_dec_pic_buffering62, i64 0, i64 %idxprom61, !dbg !2655
  %73 = load i32, i32* %arrayidx63, align 4, !dbg !2655
  %tobool64 = icmp ne i32 %73, 0, !dbg !2655
  br i1 %tobool64, label %if.end70, label %if.then65, !dbg !2657

if.then65:                                        ; preds = %lor.lhs.false, %for.body
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2658
  %75 = bitcast %struct.AVCodecContext* %74 to i8*, !dbg !2658
  %76 = load i32, i32* %i, align 4, !dbg !2660
  %idxprom66 = sext i32 %76 to i64, !dbg !2661
  %77 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2661
  %vps_max_dec_pic_buffering67 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %77, i32 0, i32 5, !dbg !2662
  %arrayidx68 = getelementptr inbounds [7 x i32], [7 x i32]* %vps_max_dec_pic_buffering67, i64 0, i64 %idxprom66, !dbg !2661
  %78 = load i32, i32* %arrayidx68, align 4, !dbg !2661
  %sub69 = sub i32 %78, 1, !dbg !2663
  call void (i8*, i32, i8*, ...) @av_log(i8* %75, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.11, i32 0, i32 0), i32 %sub69), !dbg !2664
  br label %err, !dbg !2665

if.end70:                                         ; preds = %lor.lhs.false
  %79 = load i32, i32* %i, align 4, !dbg !2666
  %idxprom71 = sext i32 %79 to i64, !dbg !2668
  %80 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2668
  %vps_num_reorder_pics72 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %80, i32 0, i32 6, !dbg !2669
  %arrayidx73 = getelementptr inbounds [7 x i32], [7 x i32]* %vps_num_reorder_pics72, i64 0, i64 %idxprom71, !dbg !2668
  %81 = load i32, i32* %arrayidx73, align 4, !dbg !2668
  %82 = load i32, i32* %i, align 4, !dbg !2670
  %idxprom74 = sext i32 %82 to i64, !dbg !2671
  %83 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2671
  %vps_max_dec_pic_buffering75 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %83, i32 0, i32 5, !dbg !2672
  %arrayidx76 = getelementptr inbounds [7 x i32], [7 x i32]* %vps_max_dec_pic_buffering75, i64 0, i64 %idxprom74, !dbg !2671
  %84 = load i32, i32* %arrayidx76, align 4, !dbg !2671
  %sub77 = sub i32 %84, 1, !dbg !2673
  %cmp78 = icmp ugt i32 %81, %sub77, !dbg !2674
  br i1 %cmp78, label %if.then80, label %if.end87, !dbg !2675

if.then80:                                        ; preds = %if.end70
  %85 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2676
  %86 = bitcast %struct.AVCodecContext* %85 to i8*, !dbg !2676
  %87 = load i32, i32* %i, align 4, !dbg !2678
  %idxprom81 = sext i32 %87 to i64, !dbg !2679
  %88 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2679
  %vps_num_reorder_pics82 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %88, i32 0, i32 6, !dbg !2680
  %arrayidx83 = getelementptr inbounds [7 x i32], [7 x i32]* %vps_num_reorder_pics82, i64 0, i64 %idxprom81, !dbg !2679
  %89 = load i32, i32* %arrayidx83, align 4, !dbg !2679
  call void (i8*, i32, i8*, ...) @av_log(i8* %86, i32 24, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12, i32 0, i32 0), i32 %89), !dbg !2681
  %90 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2682
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %90, i32 0, i32 135, !dbg !2684
  %91 = load i32, i32* %err_recognition, align 8, !dbg !2684
  %and = and i32 %91, 8, !dbg !2685
  %tobool84 = icmp ne i32 %and, 0, !dbg !2685
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !2686

if.then85:                                        ; preds = %if.then80
  br label %err, !dbg !2687

if.end86:                                         ; preds = %if.then80
  br label %if.end87, !dbg !2688

if.end87:                                         ; preds = %if.end86, %if.end70
  br label %for.inc, !dbg !2689

for.inc:                                          ; preds = %if.end87
  %92 = load i32, i32* %i, align 4, !dbg !2690
  %inc = add nsw i32 %92, 1, !dbg !2690
  store i32 %inc, i32* %i, align 4, !dbg !2690
  br label %for.cond, !dbg !2692, !llvm.loop !2693

for.end:                                          ; preds = %for.cond
  %93 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2694
  %call88 = call i32 @get_bits(%struct.GetBitContext* %93, i32 6), !dbg !2695
  %94 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2696
  %vps_max_layer_id = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %94, i32 0, i32 8, !dbg !2697
  store i32 %call88, i32* %vps_max_layer_id, align 4, !dbg !2698
  %95 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2699
  %call89 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %95), !dbg !2700
  %add90 = add i32 %call89, 1, !dbg !2701
  %96 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2702
  %vps_num_layer_sets = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %96, i32 0, i32 9, !dbg !2703
  store i32 %add90, i32* %vps_num_layer_sets, align 4, !dbg !2704
  %97 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2705
  %vps_num_layer_sets91 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %97, i32 0, i32 9, !dbg !2707
  %98 = load i32, i32* %vps_num_layer_sets91, align 4, !dbg !2707
  %cmp92 = icmp slt i32 %98, 1, !dbg !2708
  br i1 %cmp92, label %if.then109, label %lor.lhs.false94, !dbg !2709

lor.lhs.false94:                                  ; preds = %for.end
  %99 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2710
  %vps_num_layer_sets95 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %99, i32 0, i32 9, !dbg !2712
  %100 = load i32, i32* %vps_num_layer_sets95, align 4, !dbg !2712
  %cmp96 = icmp sgt i32 %100, 1024, !dbg !2713
  br i1 %cmp96, label %if.then109, label %lor.lhs.false98, !dbg !2714

lor.lhs.false98:                                  ; preds = %lor.lhs.false94
  %101 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2715
  %vps_num_layer_sets99 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %101, i32 0, i32 9, !dbg !2716
  %102 = load i32, i32* %vps_num_layer_sets99, align 4, !dbg !2716
  %conv100 = sext i32 %102 to i64, !dbg !2715
  %sub101 = sub nsw i64 %conv100, 1, !dbg !2717
  %103 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2718
  %vps_max_layer_id102 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %103, i32 0, i32 8, !dbg !2719
  %104 = load i32, i32* %vps_max_layer_id102, align 4, !dbg !2719
  %conv103 = sext i32 %104 to i64, !dbg !2718
  %add104 = add nsw i64 %conv103, 1, !dbg !2720
  %mul = mul nsw i64 %sub101, %add104, !dbg !2721
  %105 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2722
  %call105 = call i32 @get_bits_left(%struct.GetBitContext* %105), !dbg !2723
  %conv106 = sext i32 %call105 to i64, !dbg !2723
  %cmp107 = icmp sgt i64 %mul, %conv106, !dbg !2724
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !2725

if.then109:                                       ; preds = %lor.lhs.false98, %lor.lhs.false94, %for.end
  %106 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2726
  %107 = bitcast %struct.AVCodecContext* %106 to i8*, !dbg !2726
  call void (i8*, i32, i8*, ...) @av_log(i8* %107, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i32 0, i32 0)), !dbg !2728
  br label %err, !dbg !2729

if.end110:                                        ; preds = %lor.lhs.false98
  store i32 1, i32* %i, align 4, !dbg !2730
  br label %for.cond111, !dbg !2732

for.cond111:                                      ; preds = %for.inc124, %if.end110
  %108 = load i32, i32* %i, align 4, !dbg !2733
  %109 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2736
  %vps_num_layer_sets112 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %109, i32 0, i32 9, !dbg !2737
  %110 = load i32, i32* %vps_num_layer_sets112, align 4, !dbg !2737
  %cmp113 = icmp slt i32 %108, %110, !dbg !2738
  br i1 %cmp113, label %for.body115, label %for.end126, !dbg !2739

for.body115:                                      ; preds = %for.cond111
  store i32 0, i32* %j, align 4, !dbg !2740
  br label %for.cond116, !dbg !2742

for.cond116:                                      ; preds = %for.inc121, %for.body115
  %111 = load i32, i32* %j, align 4, !dbg !2743
  %112 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2746
  %vps_max_layer_id117 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %112, i32 0, i32 8, !dbg !2747
  %113 = load i32, i32* %vps_max_layer_id117, align 4, !dbg !2747
  %cmp118 = icmp sle i32 %111, %113, !dbg !2748
  br i1 %cmp118, label %for.body120, label %for.end123, !dbg !2749

for.body120:                                      ; preds = %for.cond116
  %114 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2750
  call void @skip_bits(%struct.GetBitContext* %114, i32 1), !dbg !2751
  br label %for.inc121, !dbg !2751

for.inc121:                                       ; preds = %for.body120
  %115 = load i32, i32* %j, align 4, !dbg !2752
  %inc122 = add nsw i32 %115, 1, !dbg !2752
  store i32 %inc122, i32* %j, align 4, !dbg !2752
  br label %for.cond116, !dbg !2754, !llvm.loop !2755

for.end123:                                       ; preds = %for.cond116
  br label %for.inc124, !dbg !2757

for.inc124:                                       ; preds = %for.end123
  %116 = load i32, i32* %i, align 4, !dbg !2759
  %inc125 = add nsw i32 %116, 1, !dbg !2759
  store i32 %inc125, i32* %i, align 4, !dbg !2759
  br label %for.cond111, !dbg !2761, !llvm.loop !2762

for.end126:                                       ; preds = %for.cond111
  %117 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2764
  %call127 = call i32 @get_bits1(%struct.GetBitContext* %117), !dbg !2765
  %conv128 = trunc i32 %call127 to i8, !dbg !2765
  %118 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2766
  %vps_timing_info_present_flag = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %118, i32 0, i32 10, !dbg !2767
  store i8 %conv128, i8* %vps_timing_info_present_flag, align 4, !dbg !2768
  %119 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2769
  %vps_timing_info_present_flag129 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %119, i32 0, i32 10, !dbg !2771
  %120 = load i8, i8* %vps_timing_info_present_flag129, align 4, !dbg !2771
  %tobool130 = icmp ne i8 %120, 0, !dbg !2769
  br i1 %tobool130, label %if.then131, label %if.end165, !dbg !2772

if.then131:                                       ; preds = %for.end126
  %121 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2773
  %call132 = call i32 @get_bits_long(%struct.GetBitContext* %121, i32 32), !dbg !2775
  %122 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2776
  %vps_num_units_in_tick = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %122, i32 0, i32 11, !dbg !2777
  store i32 %call132, i32* %vps_num_units_in_tick, align 4, !dbg !2778
  %123 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2779
  %call133 = call i32 @get_bits_long(%struct.GetBitContext* %123, i32 32), !dbg !2780
  %124 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2781
  %vps_time_scale = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %124, i32 0, i32 12, !dbg !2782
  store i32 %call133, i32* %vps_time_scale, align 4, !dbg !2783
  %125 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2784
  %call134 = call i32 @get_bits1(%struct.GetBitContext* %125), !dbg !2785
  %conv135 = trunc i32 %call134 to i8, !dbg !2785
  %126 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2786
  %vps_poc_proportional_to_timing_flag = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %126, i32 0, i32 13, !dbg !2787
  store i8 %conv135, i8* %vps_poc_proportional_to_timing_flag, align 4, !dbg !2788
  %127 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2789
  %vps_poc_proportional_to_timing_flag136 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %127, i32 0, i32 13, !dbg !2791
  %128 = load i8, i8* %vps_poc_proportional_to_timing_flag136, align 4, !dbg !2791
  %tobool137 = icmp ne i8 %128, 0, !dbg !2789
  br i1 %tobool137, label %if.then138, label %if.end141, !dbg !2792

if.then138:                                       ; preds = %if.then131
  %129 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2793
  %call139 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %129), !dbg !2794
  %add140 = add i32 %call139, 1, !dbg !2795
  %130 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2796
  %vps_num_ticks_poc_diff_one = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %130, i32 0, i32 14, !dbg !2797
  store i32 %add140, i32* %vps_num_ticks_poc_diff_one, align 4, !dbg !2798
  br label %if.end141, !dbg !2796

if.end141:                                        ; preds = %if.then138, %if.then131
  %131 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2799
  %call142 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %131), !dbg !2800
  %132 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2801
  %vps_num_hrd_parameters = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %132, i32 0, i32 15, !dbg !2802
  store i32 %call142, i32* %vps_num_hrd_parameters, align 4, !dbg !2803
  %133 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2804
  %vps_num_hrd_parameters143 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %133, i32 0, i32 15, !dbg !2806
  %134 = load i32, i32* %vps_num_hrd_parameters143, align 4, !dbg !2806
  %135 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2807
  %vps_num_layer_sets144 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %135, i32 0, i32 9, !dbg !2808
  %136 = load i32, i32* %vps_num_layer_sets144, align 4, !dbg !2808
  %cmp145 = icmp ugt i32 %134, %136, !dbg !2809
  br i1 %cmp145, label %if.then147, label %if.end149, !dbg !2810

if.then147:                                       ; preds = %if.end141
  %137 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2811
  %138 = bitcast %struct.AVCodecContext* %137 to i8*, !dbg !2811
  %139 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2813
  %vps_num_hrd_parameters148 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %139, i32 0, i32 15, !dbg !2814
  %140 = load i32, i32* %vps_num_hrd_parameters148, align 4, !dbg !2814
  call void (i8*, i32, i8*, ...) @av_log(i8* %138, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i32 0, i32 0), i32 %140), !dbg !2815
  br label %err, !dbg !2816

if.end149:                                        ; preds = %if.end141
  store i32 0, i32* %i, align 4, !dbg !2817
  br label %for.cond150, !dbg !2819

for.cond150:                                      ; preds = %for.inc162, %if.end149
  %141 = load i32, i32* %i, align 4, !dbg !2820
  %142 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2823
  %vps_num_hrd_parameters151 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %142, i32 0, i32 15, !dbg !2824
  %143 = load i32, i32* %vps_num_hrd_parameters151, align 4, !dbg !2824
  %cmp152 = icmp slt i32 %141, %143, !dbg !2825
  br i1 %cmp152, label %for.body154, label %for.end164, !dbg !2826

for.body154:                                      ; preds = %for.cond150
  call void @llvm.dbg.declare(metadata i32* %common_inf_present, metadata !2827, metadata !1892), !dbg !2829
  store i32 1, i32* %common_inf_present, align 4, !dbg !2829
  %144 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2830
  %call155 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %144), !dbg !2831
  %145 = load i32, i32* %i, align 4, !dbg !2832
  %tobool156 = icmp ne i32 %145, 0, !dbg !2832
  br i1 %tobool156, label %if.then157, label %if.end159, !dbg !2834

if.then157:                                       ; preds = %for.body154
  %146 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2835
  %call158 = call i32 @get_bits1(%struct.GetBitContext* %146), !dbg !2836
  store i32 %call158, i32* %common_inf_present, align 4, !dbg !2837
  br label %if.end159, !dbg !2838

if.end159:                                        ; preds = %if.then157, %for.body154
  %147 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2839
  %148 = load i32, i32* %common_inf_present, align 4, !dbg !2840
  %149 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !2841
  %vps_max_sub_layers160 = getelementptr inbounds %struct.HEVCVPS, %struct.HEVCVPS* %149, i32 0, i32 2, !dbg !2842
  %150 = load i32, i32* %vps_max_sub_layers160, align 4, !dbg !2842
  %call161 = call i32 @decode_hrd(%struct.GetBitContext* %147, i32 %148, i32 %150), !dbg !2843
  br label %for.inc162, !dbg !2844

for.inc162:                                       ; preds = %if.end159
  %151 = load i32, i32* %i, align 4, !dbg !2845
  %inc163 = add nsw i32 %151, 1, !dbg !2845
  store i32 %inc163, i32* %i, align 4, !dbg !2845
  br label %for.cond150, !dbg !2847, !llvm.loop !2848

for.end164:                                       ; preds = %for.cond150
  br label %if.end165, !dbg !2850

if.end165:                                        ; preds = %for.end164, %for.end126
  %152 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2851
  %call166 = call i32 @get_bits1(%struct.GetBitContext* %152), !dbg !2852
  %153 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2853
  %call167 = call i32 @get_bits_left(%struct.GetBitContext* %153), !dbg !2855
  %cmp168 = icmp slt i32 %call167, 0, !dbg !2856
  br i1 %cmp168, label %if.then170, label %if.end178, !dbg !2857

if.then170:                                       ; preds = %if.end165
  %154 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2858
  %155 = bitcast %struct.AVCodecContext* %154 to i8*, !dbg !2858
  %156 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2860
  %call171 = call i32 @get_bits_left(%struct.GetBitContext* %156), !dbg !2861
  %sub172 = sub nsw i32 0, %call171, !dbg !2862
  call void (i8*, i32, i8*, ...) @av_log(i8* %155, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i32 0, i32 0), i32 %sub172), !dbg !2863
  %157 = load i32, i32* %vps_id, align 4, !dbg !2864
  %idxprom173 = sext i32 %157 to i64, !dbg !2866
  %158 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !2866
  %vps_list = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %158, i32 0, i32 0, !dbg !2867
  %arrayidx174 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %vps_list, i64 0, i64 %idxprom173, !dbg !2866
  %159 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx174, align 8, !dbg !2866
  %tobool175 = icmp ne %struct.AVBufferRef* %159, null, !dbg !2866
  br i1 %tobool175, label %if.then176, label %if.end177, !dbg !2868

if.then176:                                       ; preds = %if.then170
  br label %err, !dbg !2869

if.end177:                                        ; preds = %if.then170
  br label %if.end178, !dbg !2870

if.end178:                                        ; preds = %if.end177, %if.end165
  %160 = load i32, i32* %vps_id, align 4, !dbg !2871
  %idxprom179 = sext i32 %160 to i64, !dbg !2873
  %161 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !2873
  %vps_list180 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %161, i32 0, i32 0, !dbg !2874
  %arrayidx181 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %vps_list180, i64 0, i64 %idxprom179, !dbg !2873
  %162 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx181, align 8, !dbg !2873
  %tobool182 = icmp ne %struct.AVBufferRef* %162, null, !dbg !2873
  br i1 %tobool182, label %land.lhs.true, label %if.else192, !dbg !2875

land.lhs.true:                                    ; preds = %if.end178
  %163 = load i32, i32* %vps_id, align 4, !dbg !2876
  %idxprom183 = sext i32 %163 to i64, !dbg !2877
  %164 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !2877
  %vps_list184 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %164, i32 0, i32 0, !dbg !2878
  %arrayidx185 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %vps_list184, i64 0, i64 %idxprom183, !dbg !2877
  %165 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx185, align 8, !dbg !2877
  %data186 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %165, i32 0, i32 1, !dbg !2879
  %166 = load i8*, i8** %data186, align 8, !dbg !2879
  %167 = load %struct.AVBufferRef*, %struct.AVBufferRef** %vps_buf, align 8, !dbg !2880
  %data187 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %167, i32 0, i32 1, !dbg !2881
  %168 = load i8*, i8** %data187, align 8, !dbg !2881
  %169 = load %struct.AVBufferRef*, %struct.AVBufferRef** %vps_buf, align 8, !dbg !2882
  %size = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %169, i32 0, i32 2, !dbg !2883
  %170 = load i32, i32* %size, align 8, !dbg !2883
  %conv188 = sext i32 %170 to i64, !dbg !2882
  %call189 = call i32 @memcmp(i8* %166, i8* %168, i64 %conv188) #7, !dbg !2884
  %tobool190 = icmp ne i32 %call189, 0, !dbg !2884
  br i1 %tobool190, label %if.else192, label %if.then191, !dbg !2885

if.then191:                                       ; preds = %land.lhs.true
  call void @av_buffer_unref(%struct.AVBufferRef** %vps_buf), !dbg !2886
  br label %if.end196, !dbg !2888

if.else192:                                       ; preds = %land.lhs.true, %if.end178
  %171 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !2889
  %172 = load i32, i32* %vps_id, align 4, !dbg !2891
  call void @remove_vps(%struct.HEVCParamSets* %171, i32 %172), !dbg !2892
  %173 = load %struct.AVBufferRef*, %struct.AVBufferRef** %vps_buf, align 8, !dbg !2893
  %174 = load i32, i32* %vps_id, align 4, !dbg !2894
  %idxprom193 = sext i32 %174 to i64, !dbg !2895
  %175 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !2895
  %vps_list194 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %175, i32 0, i32 0, !dbg !2896
  %arrayidx195 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %vps_list194, i64 0, i64 %idxprom193, !dbg !2895
  store %struct.AVBufferRef* %173, %struct.AVBufferRef** %arrayidx195, align 8, !dbg !2897
  br label %if.end196

if.end196:                                        ; preds = %if.else192, %if.then191
  store i32 0, i32* %retval, align 4, !dbg !2898
  br label %return, !dbg !2898

err:                                              ; preds = %if.then176, %if.then147, %if.then109, %if.then85, %if.then65, %if.then38, %if.then31, %if.then26, %if.then16, %if.then11
  call void @av_buffer_unref(%struct.AVBufferRef** %vps_buf), !dbg !2899
  store i32 -1094995529, i32* %retval, align 4, !dbg !2900
  br label %return, !dbg !2900

return:                                           ; preds = %err, %if.end196, %if.then
  %176 = load i32, i32* %retval, align 4, !dbg !2901
  ret i32 %176, !dbg !2901
}

declare %struct.AVBufferRef* @av_buffer_allocz(i32) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #2 !dbg !2902 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2905, metadata !1892), !dbg !2910
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2912, metadata !1892), !dbg !2913
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !2914, metadata !1892), !dbg !2915
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !2916, metadata !1892), !dbg !2917
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !2918, metadata !1892), !dbg !2919
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2920
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !2921
  %1 = load i32, i32* %index, align 8, !dbg !2921
  store i32 %1, i32* %re_index, align 4, !dbg !2919
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !2922, metadata !1892), !dbg !2923
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !2924, metadata !1892), !dbg !2925
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2926
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !2927
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !2927
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !2925
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2928
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !2929
  %5 = load i8*, i8** %buffer, align 8, !dbg !2929
  %6 = load i32, i32* %re_index, align 4, !dbg !2930
  %shr = lshr i32 %6, 3, !dbg !2931
  %idx.ext = zext i32 %shr to i64, !dbg !2932
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !2932
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !2933
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !2933
  %8 = load i32, i32* %l, align 1, !dbg !2933
  store i32 %8, i32* %x.addr.i, align 4, !dbg !2934
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !2935
  %shl.i = shl i32 %9, 8, !dbg !2936
  %and.i = and i32 %shl.i, 65280, !dbg !2937
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !2938
  %shr.i = lshr i32 %10, 8, !dbg !2939
  %and1.i = and i32 %shr.i, 255, !dbg !2940
  %or.i = or i32 %and.i, %and1.i, !dbg !2941
  %shl2.i = shl i32 %or.i, 16, !dbg !2942
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !2943
  %shr3.i = lshr i32 %11, 16, !dbg !2944
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2945
  %and5.i = and i32 %shl4.i, 65280, !dbg !2946
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !2947
  %shr6.i = lshr i32 %12, 16, !dbg !2948
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2949
  %and8.i = and i32 %shr7.i, 255, !dbg !2950
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2951
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2952
  %13 = load i32, i32* %re_index, align 4, !dbg !2953
  %and = and i32 %13, 7, !dbg !2954
  %shl = shl i32 %or10.i, %and, !dbg !2955
  store i32 %shl, i32* %re_cache, align 4, !dbg !2956
  %14 = load i32, i32* %re_cache, align 4, !dbg !2957
  %15 = load i32, i32* %n.addr, align 4, !dbg !2958
  %conv = trunc i32 %15 to i8, !dbg !2958
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !2959
  store i32 %call4, i32* %tmp, align 4, !dbg !2960
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !2961
  %17 = load i32, i32* %re_index, align 4, !dbg !2962
  %18 = load i32, i32* %n.addr, align 4, !dbg !2963
  %add = add i32 %17, %18, !dbg !2964
  %cmp = icmp ugt i32 %16, %add, !dbg !2965
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2966

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !2967
  %20 = load i32, i32* %n.addr, align 4, !dbg !2969
  %add6 = add i32 %19, %20, !dbg !2970
  br label %cond.end, !dbg !2971

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !2972
  br label %cond.end, !dbg !2974

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !2975
  store i32 %cond, i32* %re_index, align 4, !dbg !2977
  %22 = load i32, i32* %re_index, align 4, !dbg !2978
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2979
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !2980
  store i32 %22, i32* %index7, align 8, !dbg !2981
  %24 = load i32, i32* %tmp, align 4, !dbg !2982
  ret i32 %24, !dbg !2983
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_ptl(%struct.GetBitContext* %gb, %struct.AVCodecContext* %avctx, %struct.PTL* %ptl, i32 %max_num_sub_layers) #0 !dbg !2984 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ptl.addr = alloca %struct.PTL*, align 8
  %max_num_sub_layers.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !2988, metadata !1892), !dbg !2989
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2990, metadata !1892), !dbg !2991
  store %struct.PTL* %ptl, %struct.PTL** %ptl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTL** %ptl.addr, metadata !2992, metadata !1892), !dbg !2993
  store i32 %max_num_sub_layers, i32* %max_num_sub_layers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_num_sub_layers.addr, metadata !2994, metadata !1892), !dbg !2995
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2996, metadata !1892), !dbg !2997
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !2998
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3000
  %2 = load %struct.PTL*, %struct.PTL** %ptl.addr, align 8, !dbg !3001
  %general_ptl = getelementptr inbounds %struct.PTL, %struct.PTL* %2, i32 0, i32 0, !dbg !3002
  %call = call i32 @decode_profile_tier_level(%struct.GetBitContext* %0, %struct.AVCodecContext* %1, %struct.PTLCommon* %general_ptl), !dbg !3003
  %cmp = icmp slt i32 %call, 0, !dbg !3004
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3005

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3006
  %call1 = call i32 @get_bits_left(%struct.GetBitContext* %3), !dbg !3007
  %4 = load i32, i32* %max_num_sub_layers.addr, align 4, !dbg !3008
  %sub = sub nsw i32 %4, 1, !dbg !3009
  %cmp2 = icmp sgt i32 %sub, 0, !dbg !3010
  %conv = zext i1 %cmp2 to i32, !dbg !3010
  %mul = mul nsw i32 16, %conv, !dbg !3011
  %add = add nsw i32 8, %mul, !dbg !3012
  %cmp3 = icmp slt i32 %call1, %add, !dbg !3013
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3014

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3016
  %6 = bitcast %struct.AVCodecContext* %5 to i8*, !dbg !3016
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i32 0, i32 0)), !dbg !3018
  store i32 -1, i32* %retval, align 4, !dbg !3019
  br label %return, !dbg !3019

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3020
  %call5 = call i32 @get_bits(%struct.GetBitContext* %7, i32 8), !dbg !3021
  %conv6 = trunc i32 %call5 to i8, !dbg !3021
  %8 = load %struct.PTL*, %struct.PTL** %ptl.addr, align 8, !dbg !3022
  %general_ptl7 = getelementptr inbounds %struct.PTL, %struct.PTL* %8, i32 0, i32 0, !dbg !3023
  %level_idc = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %general_ptl7, i32 0, i32 4, !dbg !3024
  store i8 %conv6, i8* %level_idc, align 1, !dbg !3025
  store i32 0, i32* %i, align 4, !dbg !3026
  br label %for.cond, !dbg !3028

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !3029
  %10 = load i32, i32* %max_num_sub_layers.addr, align 4, !dbg !3032
  %sub8 = sub nsw i32 %10, 1, !dbg !3033
  %cmp9 = icmp slt i32 %9, %sub8, !dbg !3034
  br i1 %cmp9, label %for.body, label %for.end, !dbg !3035

for.body:                                         ; preds = %for.cond
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3036
  %call11 = call i32 @get_bits1(%struct.GetBitContext* %11), !dbg !3038
  %conv12 = trunc i32 %call11 to i8, !dbg !3038
  %12 = load i32, i32* %i, align 4, !dbg !3039
  %idxprom = sext i32 %12 to i64, !dbg !3040
  %13 = load %struct.PTL*, %struct.PTL** %ptl.addr, align 8, !dbg !3040
  %sub_layer_profile_present_flag = getelementptr inbounds %struct.PTL, %struct.PTL* %13, i32 0, i32 2, !dbg !3041
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %sub_layer_profile_present_flag, i64 0, i64 %idxprom, !dbg !3040
  store i8 %conv12, i8* %arrayidx, align 1, !dbg !3042
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3043
  %call13 = call i32 @get_bits1(%struct.GetBitContext* %14), !dbg !3044
  %conv14 = trunc i32 %call13 to i8, !dbg !3044
  %15 = load i32, i32* %i, align 4, !dbg !3045
  %idxprom15 = sext i32 %15 to i64, !dbg !3046
  %16 = load %struct.PTL*, %struct.PTL** %ptl.addr, align 8, !dbg !3046
  %sub_layer_level_present_flag = getelementptr inbounds %struct.PTL, %struct.PTL* %16, i32 0, i32 3, !dbg !3047
  %arrayidx16 = getelementptr inbounds [7 x i8], [7 x i8]* %sub_layer_level_present_flag, i64 0, i64 %idxprom15, !dbg !3046
  store i8 %conv14, i8* %arrayidx16, align 1, !dbg !3048
  br label %for.inc, !dbg !3049

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !3050
  %inc = add nsw i32 %17, 1, !dbg !3050
  store i32 %inc, i32* %i, align 4, !dbg !3050
  br label %for.cond, !dbg !3052, !llvm.loop !3053

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %max_num_sub_layers.addr, align 4, !dbg !3055
  %sub17 = sub nsw i32 %18, 1, !dbg !3057
  %cmp18 = icmp sgt i32 %sub17, 0, !dbg !3058
  br i1 %cmp18, label %if.then20, label %if.end29, !dbg !3059

if.then20:                                        ; preds = %for.end
  %19 = load i32, i32* %max_num_sub_layers.addr, align 4, !dbg !3060
  %sub21 = sub nsw i32 %19, 1, !dbg !3062
  store i32 %sub21, i32* %i, align 4, !dbg !3063
  br label %for.cond22, !dbg !3064

for.cond22:                                       ; preds = %for.inc26, %if.then20
  %20 = load i32, i32* %i, align 4, !dbg !3065
  %cmp23 = icmp slt i32 %20, 8, !dbg !3068
  br i1 %cmp23, label %for.body25, label %for.end28, !dbg !3069

for.body25:                                       ; preds = %for.cond22
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3070
  call void @skip_bits(%struct.GetBitContext* %21, i32 2), !dbg !3071
  br label %for.inc26, !dbg !3071

for.inc26:                                        ; preds = %for.body25
  %22 = load i32, i32* %i, align 4, !dbg !3072
  %inc27 = add nsw i32 %22, 1, !dbg !3072
  store i32 %inc27, i32* %i, align 4, !dbg !3072
  br label %for.cond22, !dbg !3074, !llvm.loop !3075

for.end28:                                        ; preds = %for.cond22
  br label %if.end29, !dbg !3077

if.end29:                                         ; preds = %for.end28, %for.end
  store i32 0, i32* %i, align 4, !dbg !3079
  br label %for.cond30, !dbg !3081

for.cond30:                                       ; preds = %for.inc63, %if.end29
  %23 = load i32, i32* %i, align 4, !dbg !3082
  %24 = load i32, i32* %max_num_sub_layers.addr, align 4, !dbg !3085
  %sub31 = sub nsw i32 %24, 1, !dbg !3086
  %cmp32 = icmp slt i32 %23, %sub31, !dbg !3087
  br i1 %cmp32, label %for.body34, label %for.end65, !dbg !3088

for.body34:                                       ; preds = %for.cond30
  %25 = load i32, i32* %i, align 4, !dbg !3089
  %idxprom35 = sext i32 %25 to i64, !dbg !3092
  %26 = load %struct.PTL*, %struct.PTL** %ptl.addr, align 8, !dbg !3092
  %sub_layer_profile_present_flag36 = getelementptr inbounds %struct.PTL, %struct.PTL* %26, i32 0, i32 2, !dbg !3093
  %arrayidx37 = getelementptr inbounds [7 x i8], [7 x i8]* %sub_layer_profile_present_flag36, i64 0, i64 %idxprom35, !dbg !3092
  %27 = load i8, i8* %arrayidx37, align 1, !dbg !3092
  %conv38 = zext i8 %27 to i32, !dbg !3092
  %tobool = icmp ne i32 %conv38, 0, !dbg !3092
  br i1 %tobool, label %land.lhs.true, label %if.end45, !dbg !3094

land.lhs.true:                                    ; preds = %for.body34
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3095
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3096
  %30 = load i32, i32* %i, align 4, !dbg !3097
  %idxprom39 = sext i32 %30 to i64, !dbg !3098
  %31 = load %struct.PTL*, %struct.PTL** %ptl.addr, align 8, !dbg !3098
  %sub_layer_ptl = getelementptr inbounds %struct.PTL, %struct.PTL* %31, i32 0, i32 1, !dbg !3099
  %arrayidx40 = getelementptr inbounds [7 x %struct.PTLCommon], [7 x %struct.PTLCommon]* %sub_layer_ptl, i64 0, i64 %idxprom39, !dbg !3098
  %call41 = call i32 @decode_profile_tier_level(%struct.GetBitContext* %28, %struct.AVCodecContext* %29, %struct.PTLCommon* %arrayidx40), !dbg !3100
  %cmp42 = icmp slt i32 %call41, 0, !dbg !3101
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !3102

if.then44:                                        ; preds = %land.lhs.true
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3104
  %33 = bitcast %struct.AVCodecContext* %32 to i8*, !dbg !3104
  %34 = load i32, i32* %i, align 4, !dbg !3106
  call void (i8*, i32, i8*, ...) @av_log(i8* %33, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.64, i32 0, i32 0), i32 %34), !dbg !3107
  store i32 -1, i32* %retval, align 4, !dbg !3108
  br label %return, !dbg !3108

if.end45:                                         ; preds = %land.lhs.true, %for.body34
  %35 = load i32, i32* %i, align 4, !dbg !3109
  %idxprom46 = sext i32 %35 to i64, !dbg !3111
  %36 = load %struct.PTL*, %struct.PTL** %ptl.addr, align 8, !dbg !3111
  %sub_layer_level_present_flag47 = getelementptr inbounds %struct.PTL, %struct.PTL* %36, i32 0, i32 3, !dbg !3112
  %arrayidx48 = getelementptr inbounds [7 x i8], [7 x i8]* %sub_layer_level_present_flag47, i64 0, i64 %idxprom46, !dbg !3111
  %37 = load i8, i8* %arrayidx48, align 1, !dbg !3111
  %tobool49 = icmp ne i8 %37, 0, !dbg !3111
  br i1 %tobool49, label %if.then50, label %if.end62, !dbg !3113

if.then50:                                        ; preds = %if.end45
  %38 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3114
  %call51 = call i32 @get_bits_left(%struct.GetBitContext* %38), !dbg !3117
  %cmp52 = icmp slt i32 %call51, 8, !dbg !3118
  br i1 %cmp52, label %if.then54, label %if.else, !dbg !3119

if.then54:                                        ; preds = %if.then50
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3120
  %40 = bitcast %struct.AVCodecContext* %39 to i8*, !dbg !3120
  %41 = load i32, i32* %i, align 4, !dbg !3122
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.65, i32 0, i32 0), i32 %41), !dbg !3123
  store i32 -1, i32* %retval, align 4, !dbg !3124
  br label %return, !dbg !3124

if.else:                                          ; preds = %if.then50
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3125
  %call55 = call i32 @get_bits(%struct.GetBitContext* %42, i32 8), !dbg !3126
  %conv56 = trunc i32 %call55 to i8, !dbg !3126
  %43 = load i32, i32* %i, align 4, !dbg !3127
  %idxprom57 = sext i32 %43 to i64, !dbg !3128
  %44 = load %struct.PTL*, %struct.PTL** %ptl.addr, align 8, !dbg !3128
  %sub_layer_ptl58 = getelementptr inbounds %struct.PTL, %struct.PTL* %44, i32 0, i32 1, !dbg !3129
  %arrayidx59 = getelementptr inbounds [7 x %struct.PTLCommon], [7 x %struct.PTLCommon]* %sub_layer_ptl58, i64 0, i64 %idxprom57, !dbg !3128
  %level_idc60 = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %arrayidx59, i32 0, i32 4, !dbg !3130
  store i8 %conv56, i8* %level_idc60, align 1, !dbg !3131
  br label %if.end61

if.end61:                                         ; preds = %if.else
  br label %if.end62, !dbg !3132

if.end62:                                         ; preds = %if.end61, %if.end45
  br label %for.inc63, !dbg !3133

for.inc63:                                        ; preds = %if.end62
  %45 = load i32, i32* %i, align 4, !dbg !3134
  %inc64 = add nsw i32 %45, 1, !dbg !3134
  store i32 %inc64, i32* %i, align 4, !dbg !3134
  br label %for.cond30, !dbg !3136, !llvm.loop !3137

for.end65:                                        ; preds = %for.cond30
  store i32 0, i32* %retval, align 4, !dbg !3139
  br label %return, !dbg !3139

return:                                           ; preds = %for.end65, %if.then54, %if.then44, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !3140
  ret i32 %46, !dbg !3140
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #2 !dbg !3141 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3144, metadata !1892), !dbg !3145
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3146
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !3147
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !3147
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3148
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !3149
  %sub = sub nsw i32 %1, %call, !dbg !3150
  ret i32 %sub, !dbg !3151
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #2 !dbg !3152 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3155, metadata !1892), !dbg !3156
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3157, metadata !1892), !dbg !3158
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !3159, metadata !1892), !dbg !3160
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3161
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3162
  %1 = load i32, i32* %index, align 8, !dbg !3162
  store i32 %1, i32* %re_index, align 4, !dbg !3160
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !3163, metadata !1892), !dbg !3164
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !3165, metadata !1892), !dbg !3166
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3167
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !3168
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3168
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !3166
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !3169
  %5 = load i32, i32* %re_index, align 4, !dbg !3170
  %6 = load i32, i32* %n.addr, align 4, !dbg !3171
  %add = add i32 %5, %6, !dbg !3172
  %cmp = icmp ugt i32 %4, %add, !dbg !3173
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3174

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !3175
  %8 = load i32, i32* %n.addr, align 4, !dbg !3177
  %add1 = add i32 %7, %8, !dbg !3178
  br label %cond.end, !dbg !3179

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !3180
  br label %cond.end, !dbg !3182

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !3183
  store i32 %cond, i32* %re_index, align 4, !dbg !3185
  %10 = load i32, i32* %re_index, align 4, !dbg !3186
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3187
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !3188
  store i32 %10, i32* %index2, align 8, !dbg !3189
  ret void, !dbg !3190
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_long(%struct.GetBitContext* %s, i32 %n) #2 !dbg !3191 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3192, metadata !1892), !dbg !3193
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3194, metadata !1892), !dbg !3195
  %0 = load i32, i32* %n.addr, align 4, !dbg !3196
  %tobool = icmp ne i32 %0, 0, !dbg !3196
  br i1 %tobool, label %if.else, label %if.then, !dbg !3198

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3199
  br label %return, !dbg !3199

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !3201
  %cmp = icmp sle i32 %1, 25, !dbg !3203
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !3204

if.then1:                                         ; preds = %if.else
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3205
  %3 = load i32, i32* %n.addr, align 4, !dbg !3207
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 %3), !dbg !3208
  store i32 %call, i32* %retval, align 4, !dbg !3209
  br label %return, !dbg !3209

if.else2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3210, metadata !1892), !dbg !3212
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3213
  %call3 = call i32 @get_bits(%struct.GetBitContext* %4, i32 16), !dbg !3214
  %5 = load i32, i32* %n.addr, align 4, !dbg !3215
  %sub = sub nsw i32 %5, 16, !dbg !3216
  %shl = shl i32 %call3, %sub, !dbg !3217
  store i32 %shl, i32* %ret, align 4, !dbg !3212
  %6 = load i32, i32* %ret, align 4, !dbg !3218
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3219
  %8 = load i32, i32* %n.addr, align 4, !dbg !3220
  %sub4 = sub nsw i32 %8, 16, !dbg !3221
  %call5 = call i32 @get_bits(%struct.GetBitContext* %7, i32 %sub4), !dbg !3222
  %or = or i32 %6, %call5, !dbg !3223
  store i32 %or, i32* %retval, align 4, !dbg !3224
  br label %return, !dbg !3224

return:                                           ; preds = %if.else2, %if.then1, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !3225
  ret i32 %9, !dbg !3225
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_hrd(%struct.GetBitContext* %gb, i32 %common_inf_present, i32 %max_sublayers) #0 !dbg !3226 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %common_inf_present.addr = alloca i32, align 4
  %max_sublayers.addr = alloca i32, align 4
  %nal_params_present = alloca i32, align 4
  %vcl_params_present = alloca i32, align 4
  %subpic_params_present = alloca i32, align 4
  %i = alloca i32, align 4
  %low_delay = alloca i32, align 4
  %nb_cpb = alloca i32, align 4
  %fixed_rate = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3229, metadata !1892), !dbg !3230
  store i32 %common_inf_present, i32* %common_inf_present.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %common_inf_present.addr, metadata !3231, metadata !1892), !dbg !3232
  store i32 %max_sublayers, i32* %max_sublayers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_sublayers.addr, metadata !3233, metadata !1892), !dbg !3234
  call void @llvm.dbg.declare(metadata i32* %nal_params_present, metadata !3235, metadata !1892), !dbg !3236
  store i32 0, i32* %nal_params_present, align 4, !dbg !3236
  call void @llvm.dbg.declare(metadata i32* %vcl_params_present, metadata !3237, metadata !1892), !dbg !3238
  store i32 0, i32* %vcl_params_present, align 4, !dbg !3238
  call void @llvm.dbg.declare(metadata i32* %subpic_params_present, metadata !3239, metadata !1892), !dbg !3240
  store i32 0, i32* %subpic_params_present, align 4, !dbg !3240
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3241, metadata !1892), !dbg !3242
  %0 = load i32, i32* %common_inf_present.addr, align 4, !dbg !3243
  %tobool = icmp ne i32 %0, 0, !dbg !3243
  br i1 %tobool, label %if.then, label %if.end12, !dbg !3245

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3246
  %call = call i32 @get_bits1(%struct.GetBitContext* %1), !dbg !3248
  store i32 %call, i32* %nal_params_present, align 4, !dbg !3249
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3250
  %call1 = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !3251
  store i32 %call1, i32* %vcl_params_present, align 4, !dbg !3252
  %3 = load i32, i32* %nal_params_present, align 4, !dbg !3253
  %tobool2 = icmp ne i32 %3, 0, !dbg !3253
  br i1 %tobool2, label %if.then4, label %lor.lhs.false, !dbg !3255

lor.lhs.false:                                    ; preds = %if.then
  %4 = load i32, i32* %vcl_params_present, align 4, !dbg !3256
  %tobool3 = icmp ne i32 %4, 0, !dbg !3256
  br i1 %tobool3, label %if.then4, label %if.end11, !dbg !3258

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3259
  %call5 = call i32 @get_bits1(%struct.GetBitContext* %5), !dbg !3261
  store i32 %call5, i32* %subpic_params_present, align 4, !dbg !3262
  %6 = load i32, i32* %subpic_params_present, align 4, !dbg !3263
  %tobool6 = icmp ne i32 %6, 0, !dbg !3263
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !3265

if.then7:                                         ; preds = %if.then4
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3266
  call void @skip_bits(%struct.GetBitContext* %7, i32 8), !dbg !3268
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3269
  call void @skip_bits(%struct.GetBitContext* %8, i32 5), !dbg !3270
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3271
  call void @skip_bits(%struct.GetBitContext* %9, i32 1), !dbg !3272
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3273
  call void @skip_bits(%struct.GetBitContext* %10, i32 5), !dbg !3274
  br label %if.end, !dbg !3275

if.end:                                           ; preds = %if.then7, %if.then4
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3276
  call void @skip_bits(%struct.GetBitContext* %11, i32 4), !dbg !3277
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3278
  call void @skip_bits(%struct.GetBitContext* %12, i32 4), !dbg !3279
  %13 = load i32, i32* %subpic_params_present, align 4, !dbg !3280
  %tobool8 = icmp ne i32 %13, 0, !dbg !3280
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !3282

if.then9:                                         ; preds = %if.end
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3283
  call void @skip_bits(%struct.GetBitContext* %14, i32 4), !dbg !3284
  br label %if.end10, !dbg !3284

if.end10:                                         ; preds = %if.then9, %if.end
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3285
  call void @skip_bits(%struct.GetBitContext* %15, i32 5), !dbg !3286
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3287
  call void @skip_bits(%struct.GetBitContext* %16, i32 5), !dbg !3288
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3289
  call void @skip_bits(%struct.GetBitContext* %17, i32 5), !dbg !3290
  br label %if.end11, !dbg !3291

if.end11:                                         ; preds = %if.end10, %lor.lhs.false
  br label %if.end12, !dbg !3292

if.end12:                                         ; preds = %if.end11, %entry
  store i32 0, i32* %i, align 4, !dbg !3293
  br label %for.cond, !dbg !3295

for.cond:                                         ; preds = %for.inc, %if.end12
  %18 = load i32, i32* %i, align 4, !dbg !3296
  %19 = load i32, i32* %max_sublayers.addr, align 4, !dbg !3299
  %cmp = icmp slt i32 %18, %19, !dbg !3300
  br i1 %cmp, label %for.body, label %for.end, !dbg !3301

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %low_delay, metadata !3302, metadata !1892), !dbg !3304
  store i32 0, i32* %low_delay, align 4, !dbg !3304
  call void @llvm.dbg.declare(metadata i32* %nb_cpb, metadata !3305, metadata !1892), !dbg !3306
  store i32 1, i32* %nb_cpb, align 4, !dbg !3306
  call void @llvm.dbg.declare(metadata i32* %fixed_rate, metadata !3307, metadata !1892), !dbg !3308
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3309
  %call13 = call i32 @get_bits1(%struct.GetBitContext* %20), !dbg !3310
  store i32 %call13, i32* %fixed_rate, align 4, !dbg !3308
  %21 = load i32, i32* %fixed_rate, align 4, !dbg !3311
  %tobool14 = icmp ne i32 %21, 0, !dbg !3311
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !3313

if.then15:                                        ; preds = %for.body
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3314
  %call16 = call i32 @get_bits1(%struct.GetBitContext* %22), !dbg !3315
  store i32 %call16, i32* %fixed_rate, align 4, !dbg !3316
  br label %if.end17, !dbg !3317

if.end17:                                         ; preds = %if.then15, %for.body
  %23 = load i32, i32* %fixed_rate, align 4, !dbg !3318
  %tobool18 = icmp ne i32 %23, 0, !dbg !3318
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !3320

if.then19:                                        ; preds = %if.end17
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3321
  %call20 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %24), !dbg !3322
  br label %if.end22, !dbg !3322

if.else:                                          ; preds = %if.end17
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3323
  %call21 = call i32 @get_bits1(%struct.GetBitContext* %25), !dbg !3324
  store i32 %call21, i32* %low_delay, align 4, !dbg !3325
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then19
  %26 = load i32, i32* %low_delay, align 4, !dbg !3326
  %tobool23 = icmp ne i32 %26, 0, !dbg !3326
  br i1 %tobool23, label %if.end31, label %if.then24, !dbg !3328

if.then24:                                        ; preds = %if.end22
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3329
  %call25 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %27), !dbg !3331
  %add = add i32 %call25, 1, !dbg !3332
  store i32 %add, i32* %nb_cpb, align 4, !dbg !3333
  %28 = load i32, i32* %nb_cpb, align 4, !dbg !3334
  %cmp26 = icmp ult i32 %28, 1, !dbg !3336
  br i1 %cmp26, label %if.then29, label %lor.lhs.false27, !dbg !3337

lor.lhs.false27:                                  ; preds = %if.then24
  %29 = load i32, i32* %nb_cpb, align 4, !dbg !3338
  %cmp28 = icmp ugt i32 %29, 32, !dbg !3340
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !3341

if.then29:                                        ; preds = %lor.lhs.false27, %if.then24
  %30 = load i32, i32* %nb_cpb, align 4, !dbg !3342
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.71, i32 0, i32 0), i32 %30), !dbg !3344
  store i32 -1094995529, i32* %retval, align 4, !dbg !3345
  br label %return, !dbg !3345

if.end30:                                         ; preds = %lor.lhs.false27
  br label %if.end31, !dbg !3346

if.end31:                                         ; preds = %if.end30, %if.end22
  %31 = load i32, i32* %nal_params_present, align 4, !dbg !3347
  %tobool32 = icmp ne i32 %31, 0, !dbg !3347
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !3349

if.then33:                                        ; preds = %if.end31
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3350
  %33 = load i32, i32* %nb_cpb, align 4, !dbg !3351
  %34 = load i32, i32* %subpic_params_present, align 4, !dbg !3352
  call void @decode_sublayer_hrd(%struct.GetBitContext* %32, i32 %33, i32 %34), !dbg !3353
  br label %if.end34, !dbg !3353

if.end34:                                         ; preds = %if.then33, %if.end31
  %35 = load i32, i32* %vcl_params_present, align 4, !dbg !3354
  %tobool35 = icmp ne i32 %35, 0, !dbg !3354
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !3356

if.then36:                                        ; preds = %if.end34
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3357
  %37 = load i32, i32* %nb_cpb, align 4, !dbg !3358
  %38 = load i32, i32* %subpic_params_present, align 4, !dbg !3359
  call void @decode_sublayer_hrd(%struct.GetBitContext* %36, i32 %37, i32 %38), !dbg !3360
  br label %if.end37, !dbg !3360

if.end37:                                         ; preds = %if.then36, %if.end34
  br label %for.inc, !dbg !3361

for.inc:                                          ; preds = %if.end37
  %39 = load i32, i32* %i, align 4, !dbg !3362
  %inc = add nsw i32 %39, 1, !dbg !3362
  store i32 %inc, i32* %i, align 4, !dbg !3362
  br label %for.cond, !dbg !3364, !llvm.loop !3365

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !3367
  br label %return, !dbg !3367

return:                                           ; preds = %for.end, %if.then29
  %40 = load i32, i32* %retval, align 4, !dbg !3368
  ret i32 %40, !dbg !3368
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #5

declare void @av_buffer_unref(%struct.AVBufferRef**) #3

; Function Attrs: nounwind uwtable
define internal void @remove_vps(%struct.HEVCParamSets* %s, i32 %id) #0 !dbg !3369 {
entry:
  %s.addr = alloca %struct.HEVCParamSets*, align 8
  %id.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.HEVCParamSets* %s, %struct.HEVCParamSets** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCParamSets** %s.addr, metadata !3372, metadata !1892), !dbg !3373
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !3374, metadata !1892), !dbg !3375
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3376, metadata !1892), !dbg !3377
  %0 = load i32, i32* %id.addr, align 4, !dbg !3378
  %idxprom = sext i32 %0 to i64, !dbg !3380
  %1 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !3380
  %vps_list = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %1, i32 0, i32 0, !dbg !3381
  %arrayidx = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %vps_list, i64 0, i64 %idxprom, !dbg !3380
  %2 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx, align 8, !dbg !3380
  %tobool = icmp ne %struct.AVBufferRef* %2, null, !dbg !3380
  br i1 %tobool, label %if.then, label %if.end19, !dbg !3382

if.then:                                          ; preds = %entry
  %3 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !3383
  %vps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %3, i32 0, i32 3, !dbg !3386
  %4 = load %struct.HEVCVPS*, %struct.HEVCVPS** %vps, align 8, !dbg !3386
  %5 = load i32, i32* %id.addr, align 4, !dbg !3387
  %idxprom1 = sext i32 %5 to i64, !dbg !3388
  %6 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !3388
  %vps_list2 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %6, i32 0, i32 0, !dbg !3389
  %arrayidx3 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %vps_list2, i64 0, i64 %idxprom1, !dbg !3388
  %7 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx3, align 8, !dbg !3388
  %data = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %7, i32 0, i32 1, !dbg !3390
  %8 = load i8*, i8** %data, align 8, !dbg !3390
  %9 = bitcast i8* %8 to %struct.HEVCVPS*, !dbg !3391
  %cmp = icmp eq %struct.HEVCVPS* %4, %9, !dbg !3392
  br i1 %cmp, label %if.then4, label %if.end, !dbg !3393

if.then4:                                         ; preds = %if.then
  %10 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !3394
  %vps5 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %10, i32 0, i32 3, !dbg !3395
  store %struct.HEVCVPS* null, %struct.HEVCVPS** %vps5, align 8, !dbg !3396
  br label %if.end, !dbg !3394

if.end:                                           ; preds = %if.then4, %if.then
  store i32 0, i32* %i, align 4, !dbg !3397
  br label %for.cond, !dbg !3399

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !3400
  %conv = sext i32 %11 to i64, !dbg !3400
  %cmp6 = icmp ult i64 %conv, 16, !dbg !3403
  br i1 %cmp6, label %for.body, label %for.end, !dbg !3404

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !3405
  %idxprom8 = sext i32 %12 to i64, !dbg !3407
  %13 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !3407
  %sps_list = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %13, i32 0, i32 1, !dbg !3408
  %arrayidx9 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %sps_list, i64 0, i64 %idxprom8, !dbg !3407
  %14 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx9, align 8, !dbg !3407
  %tobool10 = icmp ne %struct.AVBufferRef* %14, null, !dbg !3407
  br i1 %tobool10, label %land.lhs.true, label %if.end18, !dbg !3409

land.lhs.true:                                    ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !3410
  %idxprom11 = sext i32 %15 to i64, !dbg !3412
  %16 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !3412
  %sps_list12 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %16, i32 0, i32 1, !dbg !3413
  %arrayidx13 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %sps_list12, i64 0, i64 %idxprom11, !dbg !3412
  %17 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx13, align 8, !dbg !3412
  %data14 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %17, i32 0, i32 1, !dbg !3414
  %18 = load i8*, i8** %data14, align 8, !dbg !3414
  %19 = bitcast i8* %18 to %struct.HEVCSPS*, !dbg !3415
  %vps_id = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %19, i32 0, i32 0, !dbg !3415
  %20 = load i32, i32* %vps_id, align 4, !dbg !3415
  %21 = load i32, i32* %id.addr, align 4, !dbg !3416
  %cmp15 = icmp eq i32 %20, %21, !dbg !3417
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !3418

if.then17:                                        ; preds = %land.lhs.true
  %22 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !3419
  %23 = load i32, i32* %i, align 4, !dbg !3420
  call void @remove_sps(%struct.HEVCParamSets* %22, i32 %23), !dbg !3421
  br label %if.end18, !dbg !3421

if.end18:                                         ; preds = %if.then17, %land.lhs.true, %for.body
  br label %for.inc, !dbg !3422

for.inc:                                          ; preds = %if.end18
  %24 = load i32, i32* %i, align 4, !dbg !3424
  %inc = add nsw i32 %24, 1, !dbg !3424
  store i32 %inc, i32* %i, align 4, !dbg !3424
  br label %for.cond, !dbg !3426, !llvm.loop !3427

for.end:                                          ; preds = %for.cond
  br label %if.end19, !dbg !3429

if.end19:                                         ; preds = %for.end, %entry
  %25 = load i32, i32* %id.addr, align 4, !dbg !3430
  %idxprom20 = sext i32 %25 to i64, !dbg !3431
  %26 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !3431
  %vps_list21 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %26, i32 0, i32 0, !dbg !3432
  %arrayidx22 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %vps_list21, i64 0, i64 %idxprom20, !dbg !3431
  call void @av_buffer_unref(%struct.AVBufferRef** %arrayidx22), !dbg !3433
  ret void, !dbg !3434
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_parse_sps(%struct.HEVCSPS* %sps, %struct.GetBitContext* %gb, i32* %sps_id, i32 %apply_defdispwin, %struct.AVBufferRef** %vps_list, %struct.AVCodecContext* %avctx) #0 !dbg !3435 {
entry:
  %a.addr.i611 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i611, metadata !3438, metadata !1892), !dbg !3443
  %p.addr.i612 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i612, metadata !3446, metadata !1892), !dbg !3447
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3438, metadata !1892), !dbg !3448
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !3446, metadata !1892), !dbg !3450
  %retval = alloca i32, align 4
  %sps.addr = alloca %struct.HEVCSPS*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %sps_id.addr = alloca i32*, align 8
  %apply_defdispwin.addr = alloca i32, align 4
  %vps_list.addr = alloca %struct.AVBufferRef**, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ow = alloca %struct.HEVCWindow*, align 8
  %ret = alloca i32, align 4
  %log2_diff_max_min_transform_block_size = alloca i32, align 4
  %bit_depth_chroma = alloca i32, align 4
  %start = alloca i32, align 4
  %vui_present = alloca i32, align 4
  %sublayer_ordering_info = alloca i32, align 4
  %i = alloca i32, align 4
  %vert_mult = alloca i32, align 4
  %horiz_mult = alloca i32, align 4
  %.compoundliteral = alloca %struct.AVRational, align 4
  store %struct.HEVCSPS* %sps, %struct.HEVCSPS** %sps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCSPS** %sps.addr, metadata !3451, metadata !1892), !dbg !3452
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3453, metadata !1892), !dbg !3454
  store i32* %sps_id, i32** %sps_id.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %sps_id.addr, metadata !3455, metadata !1892), !dbg !3456
  store i32 %apply_defdispwin, i32* %apply_defdispwin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %apply_defdispwin.addr, metadata !3457, metadata !1892), !dbg !3458
  store %struct.AVBufferRef** %vps_list, %struct.AVBufferRef*** %vps_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVBufferRef*** %vps_list.addr, metadata !3459, metadata !1892), !dbg !3460
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3461, metadata !1892), !dbg !3462
  call void @llvm.dbg.declare(metadata %struct.HEVCWindow** %ow, metadata !3463, metadata !1892), !dbg !3465
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3466, metadata !1892), !dbg !3467
  store i32 0, i32* %ret, align 4, !dbg !3467
  call void @llvm.dbg.declare(metadata i32* %log2_diff_max_min_transform_block_size, metadata !3468, metadata !1892), !dbg !3469
  call void @llvm.dbg.declare(metadata i32* %bit_depth_chroma, metadata !3470, metadata !1892), !dbg !3471
  call void @llvm.dbg.declare(metadata i32* %start, metadata !3472, metadata !1892), !dbg !3473
  call void @llvm.dbg.declare(metadata i32* %vui_present, metadata !3474, metadata !1892), !dbg !3475
  call void @llvm.dbg.declare(metadata i32* %sublayer_ordering_info, metadata !3476, metadata !1892), !dbg !3477
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3478, metadata !1892), !dbg !3479
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3480
  %call = call i32 @get_bits(%struct.GetBitContext* %0, i32 4), !dbg !3481
  %1 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3482
  %vps_id = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %1, i32 0, i32 0, !dbg !3483
  store i32 %call, i32* %vps_id, align 4, !dbg !3484
  %2 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3485
  %vps_id1 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %2, i32 0, i32 0, !dbg !3487
  %3 = load i32, i32* %vps_id1, align 4, !dbg !3487
  %cmp = icmp uge i32 %3, 16, !dbg !3488
  br i1 %cmp, label %if.then, label %if.end, !dbg !3489

if.then:                                          ; preds = %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3490
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !3490
  %6 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3492
  %vps_id2 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %6, i32 0, i32 0, !dbg !3493
  %7 = load i32, i32* %vps_id2, align 4, !dbg !3493
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i32 0, i32 0), i32 %7), !dbg !3494
  store i32 -1094995529, i32* %retval, align 4, !dbg !3495
  br label %return, !dbg !3495

if.end:                                           ; preds = %entry
  %8 = load %struct.AVBufferRef**, %struct.AVBufferRef*** %vps_list.addr, align 8, !dbg !3496
  %tobool = icmp ne %struct.AVBufferRef** %8, null, !dbg !3496
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !3498

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3499
  %vps_id3 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %9, i32 0, i32 0, !dbg !3501
  %10 = load i32, i32* %vps_id3, align 4, !dbg !3501
  %idxprom = zext i32 %10 to i64, !dbg !3502
  %11 = load %struct.AVBufferRef**, %struct.AVBufferRef*** %vps_list.addr, align 8, !dbg !3502
  %arrayidx = getelementptr inbounds %struct.AVBufferRef*, %struct.AVBufferRef** %11, i64 %idxprom, !dbg !3502
  %12 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx, align 8, !dbg !3502
  %tobool4 = icmp ne %struct.AVBufferRef* %12, null, !dbg !3502
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !3503

if.then5:                                         ; preds = %land.lhs.true
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3504
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !3504
  %15 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3506
  %vps_id6 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %15, i32 0, i32 0, !dbg !3507
  %16 = load i32, i32* %vps_id6, align 4, !dbg !3507
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i32 0, i32 0), i32 %16), !dbg !3508
  store i32 -1094995529, i32* %retval, align 4, !dbg !3509
  br label %return, !dbg !3509

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3510
  %call8 = call i32 @get_bits(%struct.GetBitContext* %17, i32 3), !dbg !3511
  %add = add i32 %call8, 1, !dbg !3512
  %18 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3513
  %max_sub_layers = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %18, i32 0, i32 11, !dbg !3514
  store i32 %add, i32* %max_sub_layers, align 4, !dbg !3515
  %19 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3516
  %max_sub_layers9 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %19, i32 0, i32 11, !dbg !3518
  %20 = load i32, i32* %max_sub_layers9, align 4, !dbg !3518
  %cmp10 = icmp sgt i32 %20, 7, !dbg !3519
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !3520

if.then11:                                        ; preds = %if.end7
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3521
  %22 = bitcast %struct.AVCodecContext* %21 to i8*, !dbg !3521
  %23 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3523
  %max_sub_layers12 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %23, i32 0, i32 11, !dbg !3524
  %24 = load i32, i32* %max_sub_layers12, align 4, !dbg !3524
  call void (i8*, i32, i8*, ...) @av_log(i8* %22, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.17, i32 0, i32 0), i32 %24), !dbg !3525
  store i32 -1094995529, i32* %retval, align 4, !dbg !3526
  br label %return, !dbg !3526

if.end13:                                         ; preds = %if.end7
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3527
  %call14 = call i32 @get_bits(%struct.GetBitContext* %25, i32 1), !dbg !3528
  %conv = trunc i32 %call14 to i8, !dbg !3528
  %26 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3529
  %temporal_id_nesting_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %26, i32 0, i32 13, !dbg !3530
  store i8 %conv, i8* %temporal_id_nesting_flag, align 4, !dbg !3531
  %27 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3532
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3534
  %29 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3535
  %ptl = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %29, i32 0, i32 15, !dbg !3536
  %30 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3537
  %max_sub_layers15 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %30, i32 0, i32 11, !dbg !3538
  %31 = load i32, i32* %max_sub_layers15, align 4, !dbg !3538
  %call16 = call i32 @parse_ptl(%struct.GetBitContext* %27, %struct.AVCodecContext* %28, %struct.PTL* %ptl, i32 %31), !dbg !3539
  store i32 %call16, i32* %ret, align 4, !dbg !3540
  %cmp17 = icmp slt i32 %call16, 0, !dbg !3541
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !3542

if.then19:                                        ; preds = %if.end13
  %32 = load i32, i32* %ret, align 4, !dbg !3543
  store i32 %32, i32* %retval, align 4, !dbg !3544
  br label %return, !dbg !3544

if.end20:                                         ; preds = %if.end13
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3545
  %call21 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %33), !dbg !3546
  %34 = load i32*, i32** %sps_id.addr, align 8, !dbg !3547
  store i32 %call21, i32* %34, align 4, !dbg !3548
  %35 = load i32*, i32** %sps_id.addr, align 8, !dbg !3549
  %36 = load i32, i32* %35, align 4, !dbg !3551
  %cmp22 = icmp uge i32 %36, 16, !dbg !3552
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !3553

if.then24:                                        ; preds = %if.end20
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3554
  %38 = bitcast %struct.AVCodecContext* %37 to i8*, !dbg !3554
  %39 = load i32*, i32** %sps_id.addr, align 8, !dbg !3556
  %40 = load i32, i32* %39, align 4, !dbg !3557
  call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i32 0, i32 0), i32 %40), !dbg !3558
  store i32 -1094995529, i32* %retval, align 4, !dbg !3559
  br label %return, !dbg !3559

if.end25:                                         ; preds = %if.end20
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3560
  %call26 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %41), !dbg !3561
  %42 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3562
  %chroma_format_idc = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %42, i32 0, i32 1, !dbg !3563
  store i32 %call26, i32* %chroma_format_idc, align 4, !dbg !3564
  %43 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3565
  %chroma_format_idc27 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %43, i32 0, i32 1, !dbg !3567
  %44 = load i32, i32* %chroma_format_idc27, align 4, !dbg !3567
  %cmp28 = icmp ugt i32 %44, 3, !dbg !3568
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !3569

if.then30:                                        ; preds = %if.end25
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3570
  %46 = bitcast %struct.AVCodecContext* %45 to i8*, !dbg !3570
  %47 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3572
  %chroma_format_idc31 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %47, i32 0, i32 1, !dbg !3573
  %48 = load i32, i32* %chroma_format_idc31, align 4, !dbg !3573
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i32 0, i32 0), i32 %48), !dbg !3574
  store i32 -1094995529, i32* %retval, align 4, !dbg !3575
  br label %return, !dbg !3575

if.end32:                                         ; preds = %if.end25
  %49 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3576
  %chroma_format_idc33 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %49, i32 0, i32 1, !dbg !3578
  %50 = load i32, i32* %chroma_format_idc33, align 4, !dbg !3578
  %cmp34 = icmp eq i32 %50, 3, !dbg !3579
  br i1 %cmp34, label %if.then36, label %if.end39, !dbg !3580

if.then36:                                        ; preds = %if.end32
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3581
  %call37 = call i32 @get_bits1(%struct.GetBitContext* %51), !dbg !3582
  %conv38 = trunc i32 %call37 to i8, !dbg !3582
  %52 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3583
  %separate_colour_plane_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %52, i32 0, i32 2, !dbg !3584
  store i8 %conv38, i8* %separate_colour_plane_flag, align 4, !dbg !3585
  br label %if.end39, !dbg !3583

if.end39:                                         ; preds = %if.then36, %if.end32
  %53 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3586
  %separate_colour_plane_flag40 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %53, i32 0, i32 2, !dbg !3588
  %54 = load i8, i8* %separate_colour_plane_flag40, align 4, !dbg !3588
  %tobool41 = icmp ne i8 %54, 0, !dbg !3586
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !3589

if.then42:                                        ; preds = %if.end39
  %55 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3590
  %chroma_format_idc43 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %55, i32 0, i32 1, !dbg !3591
  store i32 0, i32* %chroma_format_idc43, align 4, !dbg !3592
  br label %if.end44, !dbg !3590

if.end44:                                         ; preds = %if.then42, %if.end39
  %56 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3593
  %call45 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %56), !dbg !3594
  %57 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3595
  %width = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %57, i32 0, i32 47, !dbg !3596
  store i32 %call45, i32* %width, align 4, !dbg !3597
  %58 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3598
  %call46 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %58), !dbg !3599
  %59 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3600
  %height = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %59, i32 0, i32 48, !dbg !3601
  store i32 %call46, i32* %height, align 4, !dbg !3602
  %60 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3603
  %width47 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %60, i32 0, i32 47, !dbg !3605
  %61 = load i32, i32* %width47, align 4, !dbg !3605
  %62 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3606
  %height48 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %62, i32 0, i32 48, !dbg !3607
  %63 = load i32, i32* %height48, align 4, !dbg !3607
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3608
  %65 = bitcast %struct.AVCodecContext* %64 to i8*, !dbg !3608
  %call49 = call i32 @av_image_check_size(i32 %61, i32 %63, i32 0, i8* %65), !dbg !3609
  store i32 %call49, i32* %ret, align 4, !dbg !3610
  %cmp50 = icmp slt i32 %call49, 0, !dbg !3611
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !3612

if.then52:                                        ; preds = %if.end44
  %66 = load i32, i32* %ret, align 4, !dbg !3613
  store i32 %66, i32* %retval, align 4, !dbg !3614
  br label %return, !dbg !3614

if.end53:                                         ; preds = %if.end44
  %67 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3615
  %call54 = call i32 @get_bits1(%struct.GetBitContext* %67), !dbg !3617
  %tobool55 = icmp ne i32 %call54, 0, !dbg !3617
  br i1 %tobool55, label %if.then56, label %if.end95, !dbg !3618

if.then56:                                        ; preds = %if.end53
  call void @llvm.dbg.declare(metadata i32* %vert_mult, metadata !3619, metadata !1892), !dbg !3621
  %68 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3622
  %chroma_format_idc57 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %68, i32 0, i32 1, !dbg !3623
  %69 = load i32, i32* %chroma_format_idc57, align 4, !dbg !3623
  %idxprom58 = sext i32 %69 to i64, !dbg !3624
  %arrayidx59 = getelementptr inbounds [4 x i8], [4 x i8]* @hevc_sub_height_c, i64 0, i64 %idxprom58, !dbg !3624
  %70 = load i8, i8* %arrayidx59, align 1, !dbg !3624
  %conv60 = zext i8 %70 to i32, !dbg !3624
  store i32 %conv60, i32* %vert_mult, align 4, !dbg !3621
  call void @llvm.dbg.declare(metadata i32* %horiz_mult, metadata !3625, metadata !1892), !dbg !3626
  %71 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3627
  %chroma_format_idc61 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %71, i32 0, i32 1, !dbg !3628
  %72 = load i32, i32* %chroma_format_idc61, align 4, !dbg !3628
  %idxprom62 = sext i32 %72 to i64, !dbg !3629
  %arrayidx63 = getelementptr inbounds [4 x i8], [4 x i8]* @hevc_sub_width_c, i64 0, i64 %idxprom62, !dbg !3629
  %73 = load i8, i8* %arrayidx63, align 1, !dbg !3629
  %conv64 = zext i8 %73 to i32, !dbg !3629
  store i32 %conv64, i32* %horiz_mult, align 4, !dbg !3626
  %74 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3630
  %call65 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %74), !dbg !3631
  %75 = load i32, i32* %horiz_mult, align 4, !dbg !3632
  %mul = mul i32 %call65, %75, !dbg !3633
  %76 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3634
  %pic_conf_win = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %76, i32 0, i32 4, !dbg !3635
  %left_offset = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %pic_conf_win, i32 0, i32 0, !dbg !3636
  store i32 %mul, i32* %left_offset, align 4, !dbg !3637
  %77 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3638
  %call66 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %77), !dbg !3639
  %78 = load i32, i32* %horiz_mult, align 4, !dbg !3640
  %mul67 = mul i32 %call66, %78, !dbg !3641
  %79 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3642
  %pic_conf_win68 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %79, i32 0, i32 4, !dbg !3643
  %right_offset = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %pic_conf_win68, i32 0, i32 1, !dbg !3644
  store i32 %mul67, i32* %right_offset, align 4, !dbg !3645
  %80 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3646
  %call69 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %80), !dbg !3647
  %81 = load i32, i32* %vert_mult, align 4, !dbg !3648
  %mul70 = mul i32 %call69, %81, !dbg !3649
  %82 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3650
  %pic_conf_win71 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %82, i32 0, i32 4, !dbg !3651
  %top_offset = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %pic_conf_win71, i32 0, i32 2, !dbg !3652
  store i32 %mul70, i32* %top_offset, align 4, !dbg !3653
  %83 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3654
  %call72 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %83), !dbg !3655
  %84 = load i32, i32* %vert_mult, align 4, !dbg !3656
  %mul73 = mul i32 %call72, %84, !dbg !3657
  %85 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3658
  %pic_conf_win74 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %85, i32 0, i32 4, !dbg !3659
  %bottom_offset = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %pic_conf_win74, i32 0, i32 3, !dbg !3660
  store i32 %mul73, i32* %bottom_offset, align 4, !dbg !3661
  %86 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3662
  %flags2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %86, i32 0, i32 14, !dbg !3664
  %87 = load i32, i32* %flags2, align 8, !dbg !3664
  %and = and i32 %87, 65536, !dbg !3665
  %tobool75 = icmp ne i32 %and, 0, !dbg !3665
  br i1 %tobool75, label %if.then76, label %if.end93, !dbg !3666

if.then76:                                        ; preds = %if.then56
  %88 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3667
  %89 = bitcast %struct.AVCodecContext* %88 to i8*, !dbg !3667
  %90 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3669
  %pic_conf_win77 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %90, i32 0, i32 4, !dbg !3670
  %left_offset78 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %pic_conf_win77, i32 0, i32 0, !dbg !3671
  %91 = load i32, i32* %left_offset78, align 4, !dbg !3671
  %92 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3672
  %pic_conf_win79 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %92, i32 0, i32 4, !dbg !3673
  %right_offset80 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %pic_conf_win79, i32 0, i32 1, !dbg !3674
  %93 = load i32, i32* %right_offset80, align 4, !dbg !3674
  %94 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3675
  %pic_conf_win81 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %94, i32 0, i32 4, !dbg !3676
  %top_offset82 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %pic_conf_win81, i32 0, i32 2, !dbg !3677
  %95 = load i32, i32* %top_offset82, align 4, !dbg !3677
  %96 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3678
  %pic_conf_win83 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %96, i32 0, i32 4, !dbg !3679
  %bottom_offset84 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %pic_conf_win83, i32 0, i32 3, !dbg !3680
  %97 = load i32, i32* %bottom_offset84, align 4, !dbg !3680
  call void (i8*, i32, i8*, ...) @av_log(i8* %89, i32 48, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.20, i32 0, i32 0), i32 %91, i32 %93, i32 %95, i32 %97), !dbg !3681
  %98 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3682
  %pic_conf_win85 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %98, i32 0, i32 4, !dbg !3683
  %bottom_offset86 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %pic_conf_win85, i32 0, i32 3, !dbg !3684
  store i32 0, i32* %bottom_offset86, align 4, !dbg !3685
  %99 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3686
  %pic_conf_win87 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %99, i32 0, i32 4, !dbg !3687
  %top_offset88 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %pic_conf_win87, i32 0, i32 2, !dbg !3688
  store i32 0, i32* %top_offset88, align 4, !dbg !3689
  %100 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3690
  %pic_conf_win89 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %100, i32 0, i32 4, !dbg !3691
  %right_offset90 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %pic_conf_win89, i32 0, i32 1, !dbg !3692
  store i32 0, i32* %right_offset90, align 4, !dbg !3693
  %101 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3694
  %pic_conf_win91 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %101, i32 0, i32 4, !dbg !3695
  %left_offset92 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %pic_conf_win91, i32 0, i32 0, !dbg !3696
  store i32 0, i32* %left_offset92, align 4, !dbg !3697
  br label %if.end93, !dbg !3698

if.end93:                                         ; preds = %if.then76, %if.then56
  %102 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3699
  %output_window = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %102, i32 0, i32 3, !dbg !3700
  %103 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3701
  %pic_conf_win94 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %103, i32 0, i32 4, !dbg !3702
  %104 = bitcast %struct.HEVCWindow* %output_window to i8*, !dbg !3702
  %105 = bitcast %struct.HEVCWindow* %pic_conf_win94 to i8*, !dbg !3702
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %105, i64 16, i32 4, i1 false), !dbg !3702
  br label %if.end95, !dbg !3703

if.end95:                                         ; preds = %if.end93, %if.end53
  %106 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3704
  %call96 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %106), !dbg !3705
  %add97 = add i32 %call96, 8, !dbg !3706
  %107 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3707
  %bit_depth = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %107, i32 0, i32 5, !dbg !3708
  store i32 %add97, i32* %bit_depth, align 4, !dbg !3709
  %108 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3710
  %call98 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %108), !dbg !3711
  %add99 = add i32 %call98, 8, !dbg !3712
  store i32 %add99, i32* %bit_depth_chroma, align 4, !dbg !3713
  %109 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3714
  %chroma_format_idc100 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %109, i32 0, i32 1, !dbg !3716
  %110 = load i32, i32* %chroma_format_idc100, align 4, !dbg !3716
  %tobool101 = icmp ne i32 %110, 0, !dbg !3714
  br i1 %tobool101, label %land.lhs.true102, label %if.end108, !dbg !3717

land.lhs.true102:                                 ; preds = %if.end95
  %111 = load i32, i32* %bit_depth_chroma, align 4, !dbg !3718
  %112 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3720
  %bit_depth103 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %112, i32 0, i32 5, !dbg !3721
  %113 = load i32, i32* %bit_depth103, align 4, !dbg !3721
  %cmp104 = icmp ne i32 %111, %113, !dbg !3722
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !3723

if.then106:                                       ; preds = %land.lhs.true102
  %114 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3724
  %115 = bitcast %struct.AVCodecContext* %114 to i8*, !dbg !3724
  %116 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3726
  %bit_depth107 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %116, i32 0, i32 5, !dbg !3727
  %117 = load i32, i32* %bit_depth107, align 4, !dbg !3727
  %118 = load i32, i32* %bit_depth_chroma, align 4, !dbg !3728
  call void (i8*, i32, i8*, ...) @av_log(i8* %115, i32 16, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.21, i32 0, i32 0), i32 %117, i32 %118), !dbg !3729
  store i32 -1094995529, i32* %retval, align 4, !dbg !3730
  br label %return, !dbg !3730

if.end108:                                        ; preds = %land.lhs.true102, %if.end95
  %119 = load i32, i32* %bit_depth_chroma, align 4, !dbg !3731
  %120 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3732
  %bit_depth_chroma109 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %120, i32 0, i32 6, !dbg !3733
  store i32 %119, i32* %bit_depth_chroma109, align 4, !dbg !3734
  %121 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3735
  %122 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3736
  %call110 = call i32 @map_pixel_format(%struct.AVCodecContext* %121, %struct.HEVCSPS* %122), !dbg !3737
  store i32 %call110, i32* %ret, align 4, !dbg !3738
  %123 = load i32, i32* %ret, align 4, !dbg !3739
  %cmp111 = icmp slt i32 %123, 0, !dbg !3741
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !3742

if.then113:                                       ; preds = %if.end108
  %124 = load i32, i32* %ret, align 4, !dbg !3743
  store i32 %124, i32* %retval, align 4, !dbg !3744
  br label %return, !dbg !3744

if.end114:                                        ; preds = %if.end108
  %125 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3745
  %call115 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %125), !dbg !3746
  %add116 = add i32 %call115, 4, !dbg !3747
  %126 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3748
  %log2_max_poc_lsb = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %126, i32 0, i32 9, !dbg !3749
  store i32 %add116, i32* %log2_max_poc_lsb, align 4, !dbg !3750
  %127 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3751
  %log2_max_poc_lsb117 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %127, i32 0, i32 9, !dbg !3753
  %128 = load i32, i32* %log2_max_poc_lsb117, align 4, !dbg !3753
  %cmp118 = icmp ugt i32 %128, 16, !dbg !3754
  br i1 %cmp118, label %if.then120, label %if.end122, !dbg !3755

if.then120:                                       ; preds = %if.end114
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3756
  %130 = bitcast %struct.AVCodecContext* %129 to i8*, !dbg !3756
  %131 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3758
  %log2_max_poc_lsb121 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %131, i32 0, i32 9, !dbg !3759
  %132 = load i32, i32* %log2_max_poc_lsb121, align 4, !dbg !3759
  %sub = sub i32 %132, 4, !dbg !3760
  call void (i8*, i32, i8*, ...) @av_log(i8* %130, i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22, i32 0, i32 0), i32 %sub), !dbg !3761
  store i32 -1094995529, i32* %retval, align 4, !dbg !3762
  br label %return, !dbg !3762

if.end122:                                        ; preds = %if.end114
  %133 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3763
  %call123 = call i32 @get_bits1(%struct.GetBitContext* %133), !dbg !3764
  store i32 %call123, i32* %sublayer_ordering_info, align 4, !dbg !3765
  %134 = load i32, i32* %sublayer_ordering_info, align 4, !dbg !3766
  %tobool124 = icmp ne i32 %134, 0, !dbg !3766
  br i1 %tobool124, label %cond.true, label %cond.false, !dbg !3766

cond.true:                                        ; preds = %if.end122
  br label %cond.end, !dbg !3767

cond.false:                                       ; preds = %if.end122
  %135 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3769
  %max_sub_layers125 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %135, i32 0, i32 11, !dbg !3771
  %136 = load i32, i32* %max_sub_layers125, align 4, !dbg !3771
  %sub126 = sub nsw i32 %136, 1, !dbg !3772
  br label %cond.end, !dbg !3773

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub126, %cond.false ], !dbg !3774
  store i32 %cond, i32* %start, align 4, !dbg !3776
  %137 = load i32, i32* %start, align 4, !dbg !3777
  store i32 %137, i32* %i, align 4, !dbg !3779
  br label %for.cond, !dbg !3780

for.cond:                                         ; preds = %for.inc, %cond.end
  %138 = load i32, i32* %i, align 4, !dbg !3781
  %139 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3784
  %max_sub_layers127 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %139, i32 0, i32 11, !dbg !3785
  %140 = load i32, i32* %max_sub_layers127, align 4, !dbg !3785
  %cmp128 = icmp slt i32 %138, %140, !dbg !3786
  br i1 %cmp128, label %for.body, label %for.end, !dbg !3787

for.body:                                         ; preds = %for.cond
  %141 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3788
  %call130 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %141), !dbg !3790
  %add131 = add i32 %call130, 1, !dbg !3791
  %142 = load i32, i32* %i, align 4, !dbg !3792
  %idxprom132 = sext i32 %142 to i64, !dbg !3793
  %143 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3793
  %temporal_layer = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %143, i32 0, i32 12, !dbg !3794
  %arrayidx133 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer, i64 0, i64 %idxprom132, !dbg !3793
  %max_dec_pic_buffering = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx133, i32 0, i32 0, !dbg !3795
  store i32 %add131, i32* %max_dec_pic_buffering, align 4, !dbg !3796
  %144 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3797
  %call134 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %144), !dbg !3798
  %145 = load i32, i32* %i, align 4, !dbg !3799
  %idxprom135 = sext i32 %145 to i64, !dbg !3800
  %146 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3800
  %temporal_layer136 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %146, i32 0, i32 12, !dbg !3801
  %arrayidx137 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer136, i64 0, i64 %idxprom135, !dbg !3800
  %num_reorder_pics = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx137, i32 0, i32 1, !dbg !3802
  store i32 %call134, i32* %num_reorder_pics, align 4, !dbg !3803
  %147 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3804
  %call138 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %147), !dbg !3805
  %sub139 = sub i32 %call138, 1, !dbg !3806
  %148 = load i32, i32* %i, align 4, !dbg !3807
  %idxprom140 = sext i32 %148 to i64, !dbg !3808
  %149 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3808
  %temporal_layer141 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %149, i32 0, i32 12, !dbg !3809
  %arrayidx142 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer141, i64 0, i64 %idxprom140, !dbg !3808
  %max_latency_increase = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx142, i32 0, i32 2, !dbg !3810
  store i32 %sub139, i32* %max_latency_increase, align 4, !dbg !3811
  %150 = load i32, i32* %i, align 4, !dbg !3812
  %idxprom143 = sext i32 %150 to i64, !dbg !3814
  %151 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3814
  %temporal_layer144 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %151, i32 0, i32 12, !dbg !3815
  %arrayidx145 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer144, i64 0, i64 %idxprom143, !dbg !3814
  %max_dec_pic_buffering146 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx145, i32 0, i32 0, !dbg !3816
  %152 = load i32, i32* %max_dec_pic_buffering146, align 4, !dbg !3816
  %cmp147 = icmp ugt i32 %152, 16, !dbg !3817
  br i1 %cmp147, label %if.then149, label %if.end155, !dbg !3818

if.then149:                                       ; preds = %for.body
  %153 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3819
  %154 = bitcast %struct.AVCodecContext* %153 to i8*, !dbg !3819
  %155 = load i32, i32* %i, align 4, !dbg !3821
  %idxprom150 = sext i32 %155 to i64, !dbg !3822
  %156 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3822
  %temporal_layer151 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %156, i32 0, i32 12, !dbg !3823
  %arrayidx152 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer151, i64 0, i64 %idxprom150, !dbg !3822
  %max_dec_pic_buffering153 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx152, i32 0, i32 0, !dbg !3824
  %157 = load i32, i32* %max_dec_pic_buffering153, align 4, !dbg !3824
  %sub154 = sub i32 %157, 1, !dbg !3825
  call void (i8*, i32, i8*, ...) @av_log(i8* %154, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.23, i32 0, i32 0), i32 %sub154), !dbg !3826
  store i32 -1094995529, i32* %retval, align 4, !dbg !3827
  br label %return, !dbg !3827

if.end155:                                        ; preds = %for.body
  %158 = load i32, i32* %i, align 4, !dbg !3828
  %idxprom156 = sext i32 %158 to i64, !dbg !3830
  %159 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3830
  %temporal_layer157 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %159, i32 0, i32 12, !dbg !3831
  %arrayidx158 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer157, i64 0, i64 %idxprom156, !dbg !3830
  %num_reorder_pics159 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx158, i32 0, i32 1, !dbg !3832
  %160 = load i32, i32* %num_reorder_pics159, align 4, !dbg !3832
  %161 = load i32, i32* %i, align 4, !dbg !3833
  %idxprom160 = sext i32 %161 to i64, !dbg !3834
  %162 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3834
  %temporal_layer161 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %162, i32 0, i32 12, !dbg !3835
  %arrayidx162 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer161, i64 0, i64 %idxprom160, !dbg !3834
  %max_dec_pic_buffering163 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx162, i32 0, i32 0, !dbg !3836
  %163 = load i32, i32* %max_dec_pic_buffering163, align 4, !dbg !3836
  %sub164 = sub nsw i32 %163, 1, !dbg !3837
  %cmp165 = icmp sgt i32 %160, %sub164, !dbg !3838
  br i1 %cmp165, label %if.then167, label %if.end191, !dbg !3839

if.then167:                                       ; preds = %if.end155
  %164 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3840
  %165 = bitcast %struct.AVCodecContext* %164 to i8*, !dbg !3840
  %166 = load i32, i32* %i, align 4, !dbg !3842
  %idxprom168 = sext i32 %166 to i64, !dbg !3843
  %167 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3843
  %temporal_layer169 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %167, i32 0, i32 12, !dbg !3844
  %arrayidx170 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer169, i64 0, i64 %idxprom168, !dbg !3843
  %num_reorder_pics171 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx170, i32 0, i32 1, !dbg !3845
  %168 = load i32, i32* %num_reorder_pics171, align 4, !dbg !3845
  call void (i8*, i32, i8*, ...) @av_log(i8* %165, i32 24, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.24, i32 0, i32 0), i32 %168), !dbg !3846
  %169 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3847
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %169, i32 0, i32 135, !dbg !3849
  %170 = load i32, i32* %err_recognition, align 8, !dbg !3849
  %and172 = and i32 %170, 8, !dbg !3850
  %tobool173 = icmp ne i32 %and172, 0, !dbg !3850
  br i1 %tobool173, label %if.then180, label %lor.lhs.false, !dbg !3851

lor.lhs.false:                                    ; preds = %if.then167
  %171 = load i32, i32* %i, align 4, !dbg !3852
  %idxprom174 = sext i32 %171 to i64, !dbg !3853
  %172 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3853
  %temporal_layer175 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %172, i32 0, i32 12, !dbg !3854
  %arrayidx176 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer175, i64 0, i64 %idxprom174, !dbg !3853
  %num_reorder_pics177 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx176, i32 0, i32 1, !dbg !3855
  %173 = load i32, i32* %num_reorder_pics177, align 4, !dbg !3855
  %cmp178 = icmp sgt i32 %173, 15, !dbg !3856
  br i1 %cmp178, label %if.then180, label %if.end181, !dbg !3857

if.then180:                                       ; preds = %lor.lhs.false, %if.then167
  store i32 -1094995529, i32* %retval, align 4, !dbg !3859
  br label %return, !dbg !3859

if.end181:                                        ; preds = %lor.lhs.false
  %174 = load i32, i32* %i, align 4, !dbg !3861
  %idxprom182 = sext i32 %174 to i64, !dbg !3862
  %175 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3862
  %temporal_layer183 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %175, i32 0, i32 12, !dbg !3863
  %arrayidx184 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer183, i64 0, i64 %idxprom182, !dbg !3862
  %num_reorder_pics185 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx184, i32 0, i32 1, !dbg !3864
  %176 = load i32, i32* %num_reorder_pics185, align 4, !dbg !3864
  %add186 = add nsw i32 %176, 1, !dbg !3865
  %177 = load i32, i32* %i, align 4, !dbg !3866
  %idxprom187 = sext i32 %177 to i64, !dbg !3867
  %178 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3867
  %temporal_layer188 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %178, i32 0, i32 12, !dbg !3868
  %arrayidx189 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer188, i64 0, i64 %idxprom187, !dbg !3867
  %max_dec_pic_buffering190 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx189, i32 0, i32 0, !dbg !3869
  store i32 %add186, i32* %max_dec_pic_buffering190, align 4, !dbg !3870
  br label %if.end191, !dbg !3871

if.end191:                                        ; preds = %if.end181, %if.end155
  br label %for.inc, !dbg !3872

for.inc:                                          ; preds = %if.end191
  %179 = load i32, i32* %i, align 4, !dbg !3873
  %inc = add nsw i32 %179, 1, !dbg !3873
  store i32 %inc, i32* %i, align 4, !dbg !3873
  br label %for.cond, !dbg !3875, !llvm.loop !3876

for.end:                                          ; preds = %for.cond
  %180 = load i32, i32* %sublayer_ordering_info, align 4, !dbg !3878
  %tobool192 = icmp ne i32 %180, 0, !dbg !3878
  br i1 %tobool192, label %if.end225, label %if.then193, !dbg !3880

if.then193:                                       ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !3881
  br label %for.cond194, !dbg !3884

for.cond194:                                      ; preds = %for.inc222, %if.then193
  %181 = load i32, i32* %i, align 4, !dbg !3885
  %182 = load i32, i32* %start, align 4, !dbg !3888
  %cmp195 = icmp slt i32 %181, %182, !dbg !3889
  br i1 %cmp195, label %for.body197, label %for.end224, !dbg !3890

for.body197:                                      ; preds = %for.cond194
  %183 = load i32, i32* %start, align 4, !dbg !3891
  %idxprom198 = sext i32 %183 to i64, !dbg !3893
  %184 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3893
  %temporal_layer199 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %184, i32 0, i32 12, !dbg !3894
  %arrayidx200 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer199, i64 0, i64 %idxprom198, !dbg !3893
  %max_dec_pic_buffering201 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx200, i32 0, i32 0, !dbg !3895
  %185 = load i32, i32* %max_dec_pic_buffering201, align 4, !dbg !3895
  %186 = load i32, i32* %i, align 4, !dbg !3896
  %idxprom202 = sext i32 %186 to i64, !dbg !3897
  %187 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3897
  %temporal_layer203 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %187, i32 0, i32 12, !dbg !3898
  %arrayidx204 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer203, i64 0, i64 %idxprom202, !dbg !3897
  %max_dec_pic_buffering205 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx204, i32 0, i32 0, !dbg !3899
  store i32 %185, i32* %max_dec_pic_buffering205, align 4, !dbg !3900
  %188 = load i32, i32* %start, align 4, !dbg !3901
  %idxprom206 = sext i32 %188 to i64, !dbg !3902
  %189 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3902
  %temporal_layer207 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %189, i32 0, i32 12, !dbg !3903
  %arrayidx208 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer207, i64 0, i64 %idxprom206, !dbg !3902
  %num_reorder_pics209 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx208, i32 0, i32 1, !dbg !3904
  %190 = load i32, i32* %num_reorder_pics209, align 4, !dbg !3904
  %191 = load i32, i32* %i, align 4, !dbg !3905
  %idxprom210 = sext i32 %191 to i64, !dbg !3906
  %192 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3906
  %temporal_layer211 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %192, i32 0, i32 12, !dbg !3907
  %arrayidx212 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer211, i64 0, i64 %idxprom210, !dbg !3906
  %num_reorder_pics213 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx212, i32 0, i32 1, !dbg !3908
  store i32 %190, i32* %num_reorder_pics213, align 4, !dbg !3909
  %193 = load i32, i32* %start, align 4, !dbg !3910
  %idxprom214 = sext i32 %193 to i64, !dbg !3911
  %194 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3911
  %temporal_layer215 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %194, i32 0, i32 12, !dbg !3912
  %arrayidx216 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer215, i64 0, i64 %idxprom214, !dbg !3911
  %max_latency_increase217 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx216, i32 0, i32 2, !dbg !3913
  %195 = load i32, i32* %max_latency_increase217, align 4, !dbg !3913
  %196 = load i32, i32* %i, align 4, !dbg !3914
  %idxprom218 = sext i32 %196 to i64, !dbg !3915
  %197 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3915
  %temporal_layer219 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %197, i32 0, i32 12, !dbg !3916
  %arrayidx220 = getelementptr inbounds [7 x %struct.anon], [7 x %struct.anon]* %temporal_layer219, i64 0, i64 %idxprom218, !dbg !3915
  %max_latency_increase221 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx220, i32 0, i32 2, !dbg !3917
  store i32 %195, i32* %max_latency_increase221, align 4, !dbg !3918
  br label %for.inc222, !dbg !3919

for.inc222:                                       ; preds = %for.body197
  %198 = load i32, i32* %i, align 4, !dbg !3920
  %inc223 = add nsw i32 %198, 1, !dbg !3920
  store i32 %inc223, i32* %i, align 4, !dbg !3920
  br label %for.cond194, !dbg !3922, !llvm.loop !3923

for.end224:                                       ; preds = %for.cond194
  br label %if.end225, !dbg !3925

if.end225:                                        ; preds = %for.end224, %for.end
  %199 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3926
  %call226 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %199), !dbg !3927
  %add227 = add i32 %call226, 3, !dbg !3928
  %200 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3929
  %log2_min_cb_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %200, i32 0, i32 29, !dbg !3930
  store i32 %add227, i32* %log2_min_cb_size, align 4, !dbg !3931
  %201 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3932
  %call228 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %201), !dbg !3933
  %202 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3934
  %log2_diff_max_min_coding_block_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %202, i32 0, i32 30, !dbg !3935
  store i32 %call228, i32* %log2_diff_max_min_coding_block_size, align 4, !dbg !3936
  %203 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3937
  %call229 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %203), !dbg !3938
  %add230 = add i32 %call229, 2, !dbg !3939
  %204 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3940
  %log2_min_tb_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %204, i32 0, i32 31, !dbg !3941
  store i32 %add230, i32* %log2_min_tb_size, align 4, !dbg !3942
  %205 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3943
  %call231 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %205), !dbg !3944
  store i32 %call231, i32* %log2_diff_max_min_transform_block_size, align 4, !dbg !3945
  %206 = load i32, i32* %log2_diff_max_min_transform_block_size, align 4, !dbg !3946
  %207 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3947
  %log2_min_tb_size232 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %207, i32 0, i32 31, !dbg !3948
  %208 = load i32, i32* %log2_min_tb_size232, align 4, !dbg !3948
  %add233 = add i32 %206, %208, !dbg !3949
  %209 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3950
  %log2_max_trafo_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %209, i32 0, i32 32, !dbg !3951
  store i32 %add233, i32* %log2_max_trafo_size, align 4, !dbg !3952
  %210 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3953
  %log2_min_cb_size234 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %210, i32 0, i32 29, !dbg !3955
  %211 = load i32, i32* %log2_min_cb_size234, align 4, !dbg !3955
  %cmp235 = icmp ult i32 %211, 3, !dbg !3956
  br i1 %cmp235, label %if.then241, label %lor.lhs.false237, !dbg !3957

lor.lhs.false237:                                 ; preds = %if.end225
  %212 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3958
  %log2_min_cb_size238 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %212, i32 0, i32 29, !dbg !3960
  %213 = load i32, i32* %log2_min_cb_size238, align 4, !dbg !3960
  %cmp239 = icmp ugt i32 %213, 30, !dbg !3961
  br i1 %cmp239, label %if.then241, label %if.end243, !dbg !3962

if.then241:                                       ; preds = %lor.lhs.false237, %if.end225
  %214 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3963
  %215 = bitcast %struct.AVCodecContext* %214 to i8*, !dbg !3963
  %216 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3965
  %log2_min_cb_size242 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %216, i32 0, i32 29, !dbg !3966
  %217 = load i32, i32* %log2_min_cb_size242, align 4, !dbg !3966
  call void (i8*, i32, i8*, ...) @av_log(i8* %215, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i32 0, i32 0), i32 %217), !dbg !3967
  store i32 -1094995529, i32* %retval, align 4, !dbg !3968
  br label %return, !dbg !3968

if.end243:                                        ; preds = %lor.lhs.false237
  %218 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3969
  %log2_diff_max_min_coding_block_size244 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %218, i32 0, i32 30, !dbg !3971
  %219 = load i32, i32* %log2_diff_max_min_coding_block_size244, align 4, !dbg !3971
  %cmp245 = icmp ugt i32 %219, 30, !dbg !3972
  br i1 %cmp245, label %if.then247, label %if.end249, !dbg !3973

if.then247:                                       ; preds = %if.end243
  %220 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3974
  %221 = bitcast %struct.AVCodecContext* %220 to i8*, !dbg !3974
  %222 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3976
  %log2_diff_max_min_coding_block_size248 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %222, i32 0, i32 30, !dbg !3977
  %223 = load i32, i32* %log2_diff_max_min_coding_block_size248, align 4, !dbg !3977
  call void (i8*, i32, i8*, ...) @av_log(i8* %221, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.26, i32 0, i32 0), i32 %223), !dbg !3978
  store i32 -1094995529, i32* %retval, align 4, !dbg !3979
  br label %return, !dbg !3979

if.end249:                                        ; preds = %if.end243
  %224 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3980
  %log2_min_tb_size250 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %224, i32 0, i32 31, !dbg !3982
  %225 = load i32, i32* %log2_min_tb_size250, align 4, !dbg !3982
  %226 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3983
  %log2_min_cb_size251 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %226, i32 0, i32 29, !dbg !3984
  %227 = load i32, i32* %log2_min_cb_size251, align 4, !dbg !3984
  %cmp252 = icmp uge i32 %225, %227, !dbg !3985
  br i1 %cmp252, label %if.then258, label %lor.lhs.false254, !dbg !3986

lor.lhs.false254:                                 ; preds = %if.end249
  %228 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !3987
  %log2_min_tb_size255 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %228, i32 0, i32 31, !dbg !3989
  %229 = load i32, i32* %log2_min_tb_size255, align 4, !dbg !3989
  %cmp256 = icmp ult i32 %229, 2, !dbg !3990
  br i1 %cmp256, label %if.then258, label %if.end259, !dbg !3991

if.then258:                                       ; preds = %lor.lhs.false254, %if.end249
  %230 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3992
  %231 = bitcast %struct.AVCodecContext* %230 to i8*, !dbg !3992
  call void (i8*, i32, i8*, ...) @av_log(i8* %231, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.27, i32 0, i32 0)), !dbg !3994
  store i32 -1094995529, i32* %retval, align 4, !dbg !3995
  br label %return, !dbg !3995

if.end259:                                        ; preds = %lor.lhs.false254
  %232 = load i32, i32* %log2_diff_max_min_transform_block_size, align 4, !dbg !3996
  %cmp260 = icmp slt i32 %232, 0, !dbg !3998
  br i1 %cmp260, label %if.then265, label %lor.lhs.false262, !dbg !3999

lor.lhs.false262:                                 ; preds = %if.end259
  %233 = load i32, i32* %log2_diff_max_min_transform_block_size, align 4, !dbg !4000
  %cmp263 = icmp sgt i32 %233, 30, !dbg !4002
  br i1 %cmp263, label %if.then265, label %if.end266, !dbg !4003

if.then265:                                       ; preds = %lor.lhs.false262, %if.end259
  %234 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4004
  %235 = bitcast %struct.AVCodecContext* %234 to i8*, !dbg !4004
  %236 = load i32, i32* %log2_diff_max_min_transform_block_size, align 4, !dbg !4006
  call void (i8*, i32, i8*, ...) @av_log(i8* %235, i32 16, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.28, i32 0, i32 0), i32 %236), !dbg !4007
  store i32 -1094995529, i32* %retval, align 4, !dbg !4008
  br label %return, !dbg !4008

if.end266:                                        ; preds = %lor.lhs.false262
  %237 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4009
  %call267 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %237), !dbg !4010
  %238 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4011
  %max_transform_hierarchy_depth_inter = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %238, i32 0, i32 35, !dbg !4012
  store i32 %call267, i32* %max_transform_hierarchy_depth_inter, align 4, !dbg !4013
  %239 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4014
  %call268 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %239), !dbg !4015
  %240 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4016
  %max_transform_hierarchy_depth_intra = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %240, i32 0, i32 36, !dbg !4017
  store i32 %call268, i32* %max_transform_hierarchy_depth_intra, align 4, !dbg !4018
  %241 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4019
  %call269 = call i32 @get_bits1(%struct.GetBitContext* %241), !dbg !4020
  %conv270 = trunc i32 %call269 to i8, !dbg !4020
  %242 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4021
  %scaling_list_enable_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %242, i32 0, i32 16, !dbg !4022
  store i8 %conv270, i8* %scaling_list_enable_flag, align 2, !dbg !4023
  %243 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4024
  %scaling_list_enable_flag271 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %243, i32 0, i32 16, !dbg !4026
  %244 = load i8, i8* %scaling_list_enable_flag271, align 2, !dbg !4026
  %tobool272 = icmp ne i8 %244, 0, !dbg !4024
  br i1 %tobool272, label %if.then273, label %if.end284, !dbg !4027

if.then273:                                       ; preds = %if.end266
  %245 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4028
  %scaling_list = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %245, i32 0, i32 17, !dbg !4030
  call void @set_default_scaling_list_data(%struct.ScalingList* %scaling_list), !dbg !4031
  %246 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4032
  %call274 = call i32 @get_bits1(%struct.GetBitContext* %246), !dbg !4034
  %tobool275 = icmp ne i32 %call274, 0, !dbg !4034
  br i1 %tobool275, label %if.then276, label %if.end283, !dbg !4035

if.then276:                                       ; preds = %if.then273
  %247 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4036
  %248 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4038
  %249 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4039
  %scaling_list277 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %249, i32 0, i32 17, !dbg !4040
  %250 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4041
  %call278 = call i32 @scaling_list_data(%struct.GetBitContext* %247, %struct.AVCodecContext* %248, %struct.ScalingList* %scaling_list277, %struct.HEVCSPS* %250), !dbg !4042
  store i32 %call278, i32* %ret, align 4, !dbg !4043
  %251 = load i32, i32* %ret, align 4, !dbg !4044
  %cmp279 = icmp slt i32 %251, 0, !dbg !4046
  br i1 %cmp279, label %if.then281, label %if.end282, !dbg !4047

if.then281:                                       ; preds = %if.then276
  %252 = load i32, i32* %ret, align 4, !dbg !4048
  store i32 %252, i32* %retval, align 4, !dbg !4049
  br label %return, !dbg !4049

if.end282:                                        ; preds = %if.then276
  br label %if.end283, !dbg !4050

if.end283:                                        ; preds = %if.end282, %if.then273
  br label %if.end284, !dbg !4051

if.end284:                                        ; preds = %if.end283, %if.end266
  %253 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4052
  %call285 = call i32 @get_bits1(%struct.GetBitContext* %253), !dbg !4053
  %conv286 = trunc i32 %call285 to i8, !dbg !4053
  %254 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4054
  %amp_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %254, i32 0, i32 20, !dbg !4055
  store i8 %conv286, i8* %amp_enabled_flag, align 4, !dbg !4056
  %255 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4057
  %call287 = call i32 @get_bits1(%struct.GetBitContext* %255), !dbg !4058
  %conv288 = trunc i32 %call287 to i8, !dbg !4058
  %256 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4059
  %sao_enabled = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %256, i32 0, i32 21, !dbg !4060
  store i8 %conv288, i8* %sao_enabled, align 1, !dbg !4061
  %257 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4062
  %call289 = call i32 @get_bits1(%struct.GetBitContext* %257), !dbg !4063
  %258 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4064
  %pcm_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %258, i32 0, i32 10, !dbg !4065
  store i32 %call289, i32* %pcm_enabled_flag, align 4, !dbg !4066
  %259 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4067
  %pcm_enabled_flag290 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %259, i32 0, i32 10, !dbg !4069
  %260 = load i32, i32* %pcm_enabled_flag290, align 4, !dbg !4069
  %tobool291 = icmp ne i32 %260, 0, !dbg !4067
  br i1 %tobool291, label %if.then292, label %if.end343, !dbg !4070

if.then292:                                       ; preds = %if.end284
  %261 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4071
  %call293 = call i32 @get_bits(%struct.GetBitContext* %261, i32 4), !dbg !4073
  %add294 = add i32 %call293, 1, !dbg !4074
  %conv295 = trunc i32 %add294 to i8, !dbg !4073
  %262 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4075
  %pcm = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %262, i32 0, i32 26, !dbg !4076
  %bit_depth296 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %pcm, i32 0, i32 0, !dbg !4077
  store i8 %conv295, i8* %bit_depth296, align 4, !dbg !4078
  %263 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4079
  %call297 = call i32 @get_bits(%struct.GetBitContext* %263, i32 4), !dbg !4080
  %add298 = add i32 %call297, 1, !dbg !4081
  %conv299 = trunc i32 %add298 to i8, !dbg !4080
  %264 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4082
  %pcm300 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %264, i32 0, i32 26, !dbg !4083
  %bit_depth_chroma301 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %pcm300, i32 0, i32 1, !dbg !4084
  store i8 %conv299, i8* %bit_depth_chroma301, align 1, !dbg !4085
  %265 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4086
  %call302 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %265), !dbg !4087
  %add303 = add i32 %call302, 3, !dbg !4088
  %266 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4089
  %pcm304 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %266, i32 0, i32 26, !dbg !4090
  %log2_min_pcm_cb_size = getelementptr inbounds %struct.anon.0, %struct.anon.0* %pcm304, i32 0, i32 2, !dbg !4091
  store i32 %add303, i32* %log2_min_pcm_cb_size, align 4, !dbg !4092
  %267 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4093
  %pcm305 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %267, i32 0, i32 26, !dbg !4094
  %log2_min_pcm_cb_size306 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %pcm305, i32 0, i32 2, !dbg !4095
  %268 = load i32, i32* %log2_min_pcm_cb_size306, align 4, !dbg !4095
  %269 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4096
  %call307 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %269), !dbg !4097
  %add308 = add i32 %268, %call307, !dbg !4098
  %270 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4099
  %pcm309 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %270, i32 0, i32 26, !dbg !4100
  %log2_max_pcm_cb_size = getelementptr inbounds %struct.anon.0, %struct.anon.0* %pcm309, i32 0, i32 3, !dbg !4101
  store i32 %add308, i32* %log2_max_pcm_cb_size, align 4, !dbg !4102
  %271 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4103
  %pcm310 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %271, i32 0, i32 26, !dbg !4105
  %bit_depth311 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %pcm310, i32 0, i32 0, !dbg !4106
  %272 = load i8, i8* %bit_depth311, align 4, !dbg !4106
  %conv312 = zext i8 %272 to i32, !dbg !4107
  %273 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4108
  %pcm313 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %273, i32 0, i32 26, !dbg !4109
  %bit_depth_chroma314 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %pcm313, i32 0, i32 1, !dbg !4110
  %274 = load i8, i8* %bit_depth_chroma314, align 1, !dbg !4110
  %conv315 = zext i8 %274 to i32, !dbg !4111
  %cmp316 = icmp sgt i32 %conv312, %conv315, !dbg !4112
  br i1 %cmp316, label %cond.true318, label %cond.false322, !dbg !4107

cond.true318:                                     ; preds = %if.then292
  %275 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4113
  %pcm319 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %275, i32 0, i32 26, !dbg !4115
  %bit_depth320 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %pcm319, i32 0, i32 0, !dbg !4116
  %276 = load i8, i8* %bit_depth320, align 4, !dbg !4116
  %conv321 = zext i8 %276 to i32, !dbg !4117
  br label %cond.end326, !dbg !4118

cond.false322:                                    ; preds = %if.then292
  %277 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4119
  %pcm323 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %277, i32 0, i32 26, !dbg !4121
  %bit_depth_chroma324 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %pcm323, i32 0, i32 1, !dbg !4122
  %278 = load i8, i8* %bit_depth_chroma324, align 1, !dbg !4122
  %conv325 = zext i8 %278 to i32, !dbg !4123
  br label %cond.end326, !dbg !4124

cond.end326:                                      ; preds = %cond.false322, %cond.true318
  %cond327 = phi i32 [ %conv321, %cond.true318 ], [ %conv325, %cond.false322 ], !dbg !4125
  %279 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4127
  %bit_depth328 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %279, i32 0, i32 5, !dbg !4128
  %280 = load i32, i32* %bit_depth328, align 4, !dbg !4128
  %cmp329 = icmp sgt i32 %cond327, %280, !dbg !4129
  br i1 %cmp329, label %if.then331, label %if.end339, !dbg !4130

if.then331:                                       ; preds = %cond.end326
  %281 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4131
  %282 = bitcast %struct.AVCodecContext* %281 to i8*, !dbg !4131
  %283 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4133
  %pcm332 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %283, i32 0, i32 26, !dbg !4134
  %bit_depth333 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %pcm332, i32 0, i32 0, !dbg !4135
  %284 = load i8, i8* %bit_depth333, align 4, !dbg !4135
  %conv334 = zext i8 %284 to i32, !dbg !4133
  %285 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4136
  %pcm335 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %285, i32 0, i32 26, !dbg !4137
  %bit_depth_chroma336 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %pcm335, i32 0, i32 1, !dbg !4138
  %286 = load i8, i8* %bit_depth_chroma336, align 1, !dbg !4138
  %conv337 = zext i8 %286 to i32, !dbg !4136
  %287 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4139
  %bit_depth338 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %287, i32 0, i32 5, !dbg !4140
  %288 = load i32, i32* %bit_depth338, align 4, !dbg !4140
  call void (i8*, i32, i8*, ...) @av_log(i8* %282, i32 16, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.29, i32 0, i32 0), i32 %conv334, i32 %conv337, i32 %288), !dbg !4141
  store i32 -1094995529, i32* %retval, align 4, !dbg !4142
  br label %return, !dbg !4142

if.end339:                                        ; preds = %cond.end326
  %289 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4143
  %call340 = call i32 @get_bits1(%struct.GetBitContext* %289), !dbg !4144
  %conv341 = trunc i32 %call340 to i8, !dbg !4144
  %290 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4145
  %pcm342 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %290, i32 0, i32 26, !dbg !4146
  %loop_filter_disable_flag = getelementptr inbounds %struct.anon.0, %struct.anon.0* %pcm342, i32 0, i32 4, !dbg !4147
  store i8 %conv341, i8* %loop_filter_disable_flag, align 4, !dbg !4148
  br label %if.end343, !dbg !4149

if.end343:                                        ; preds = %if.end339, %if.end284
  %291 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4150
  %call344 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %291), !dbg !4151
  %292 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4152
  %nb_st_rps = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %292, i32 0, i32 18, !dbg !4153
  store i32 %call344, i32* %nb_st_rps, align 4, !dbg !4154
  %293 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4155
  %nb_st_rps345 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %293, i32 0, i32 18, !dbg !4157
  %294 = load i32, i32* %nb_st_rps345, align 4, !dbg !4157
  %cmp346 = icmp ugt i32 %294, 64, !dbg !4158
  br i1 %cmp346, label %if.then348, label %if.end350, !dbg !4159

if.then348:                                       ; preds = %if.end343
  %295 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4160
  %296 = bitcast %struct.AVCodecContext* %295 to i8*, !dbg !4160
  %297 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4162
  %nb_st_rps349 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %297, i32 0, i32 18, !dbg !4163
  %298 = load i32, i32* %nb_st_rps349, align 4, !dbg !4163
  call void (i8*, i32, i8*, ...) @av_log(i8* %296, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.30, i32 0, i32 0), i32 %298), !dbg !4164
  store i32 -1094995529, i32* %retval, align 4, !dbg !4165
  br label %return, !dbg !4165

if.end350:                                        ; preds = %if.end343
  store i32 0, i32* %i, align 4, !dbg !4166
  br label %for.cond351, !dbg !4168

for.cond351:                                      ; preds = %for.inc363, %if.end350
  %299 = load i32, i32* %i, align 4, !dbg !4169
  %300 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4172
  %nb_st_rps352 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %300, i32 0, i32 18, !dbg !4173
  %301 = load i32, i32* %nb_st_rps352, align 4, !dbg !4173
  %cmp353 = icmp ult i32 %299, %301, !dbg !4174
  br i1 %cmp353, label %for.body355, label %for.end365, !dbg !4175

for.body355:                                      ; preds = %for.cond351
  %302 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4176
  %303 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4179
  %304 = load i32, i32* %i, align 4, !dbg !4180
  %idxprom356 = sext i32 %304 to i64, !dbg !4181
  %305 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4181
  %st_rps = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %305, i32 0, i32 19, !dbg !4182
  %arrayidx357 = getelementptr inbounds [64 x %struct.ShortTermRPS], [64 x %struct.ShortTermRPS]* %st_rps, i64 0, i64 %idxprom356, !dbg !4181
  %306 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4183
  %call358 = call i32 @ff_hevc_decode_short_term_rps(%struct.GetBitContext* %302, %struct.AVCodecContext* %303, %struct.ShortTermRPS* %arrayidx357, %struct.HEVCSPS* %306, i32 0), !dbg !4184
  store i32 %call358, i32* %ret, align 4, !dbg !4185
  %cmp359 = icmp slt i32 %call358, 0, !dbg !4186
  br i1 %cmp359, label %if.then361, label %if.end362, !dbg !4187

if.then361:                                       ; preds = %for.body355
  %307 = load i32, i32* %ret, align 4, !dbg !4188
  store i32 %307, i32* %retval, align 4, !dbg !4189
  br label %return, !dbg !4189

if.end362:                                        ; preds = %for.body355
  br label %for.inc363, !dbg !4190

for.inc363:                                       ; preds = %if.end362
  %308 = load i32, i32* %i, align 4, !dbg !4191
  %inc364 = add nsw i32 %308, 1, !dbg !4191
  store i32 %inc364, i32* %i, align 4, !dbg !4191
  br label %for.cond351, !dbg !4193, !llvm.loop !4194

for.end365:                                       ; preds = %for.cond351
  %309 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4196
  %call366 = call i32 @get_bits1(%struct.GetBitContext* %309), !dbg !4197
  %conv367 = trunc i32 %call366 to i8, !dbg !4197
  %310 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4198
  %long_term_ref_pics_present_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %310, i32 0, i32 22, !dbg !4199
  store i8 %conv367, i8* %long_term_ref_pics_present_flag, align 2, !dbg !4200
  %311 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4201
  %long_term_ref_pics_present_flag368 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %311, i32 0, i32 22, !dbg !4203
  %312 = load i8, i8* %long_term_ref_pics_present_flag368, align 2, !dbg !4203
  %tobool369 = icmp ne i8 %312, 0, !dbg !4201
  br i1 %tobool369, label %if.then370, label %if.end399, !dbg !4204

if.then370:                                       ; preds = %for.end365
  %313 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4205
  %call371 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %313), !dbg !4207
  %conv372 = trunc i32 %call371 to i8, !dbg !4207
  %314 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4208
  %num_long_term_ref_pics_sps = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %314, i32 0, i32 25, !dbg !4209
  store i8 %conv372, i8* %num_long_term_ref_pics_sps, align 4, !dbg !4210
  %315 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4211
  %num_long_term_ref_pics_sps373 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %315, i32 0, i32 25, !dbg !4213
  %316 = load i8, i8* %num_long_term_ref_pics_sps373, align 4, !dbg !4213
  %conv374 = zext i8 %316 to i32, !dbg !4211
  %cmp375 = icmp sgt i32 %conv374, 32, !dbg !4214
  br i1 %cmp375, label %if.then377, label %if.end380, !dbg !4215

if.then377:                                       ; preds = %if.then370
  %317 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4216
  %318 = bitcast %struct.AVCodecContext* %317 to i8*, !dbg !4216
  %319 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4218
  %num_long_term_ref_pics_sps378 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %319, i32 0, i32 25, !dbg !4219
  %320 = load i8, i8* %num_long_term_ref_pics_sps378, align 4, !dbg !4219
  %conv379 = zext i8 %320 to i32, !dbg !4218
  call void (i8*, i32, i8*, ...) @av_log(i8* %318, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.31, i32 0, i32 0), i32 %conv379), !dbg !4220
  store i32 -1094995529, i32* %retval, align 4, !dbg !4221
  br label %return, !dbg !4221

if.end380:                                        ; preds = %if.then370
  store i32 0, i32* %i, align 4, !dbg !4222
  br label %for.cond381, !dbg !4224

for.cond381:                                      ; preds = %for.inc396, %if.end380
  %321 = load i32, i32* %i, align 4, !dbg !4225
  %322 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4228
  %num_long_term_ref_pics_sps382 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %322, i32 0, i32 25, !dbg !4229
  %323 = load i8, i8* %num_long_term_ref_pics_sps382, align 4, !dbg !4229
  %conv383 = zext i8 %323 to i32, !dbg !4228
  %cmp384 = icmp slt i32 %321, %conv383, !dbg !4230
  br i1 %cmp384, label %for.body386, label %for.end398, !dbg !4231

for.body386:                                      ; preds = %for.cond381
  %324 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4232
  %325 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4234
  %log2_max_poc_lsb387 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %325, i32 0, i32 9, !dbg !4235
  %326 = load i32, i32* %log2_max_poc_lsb387, align 4, !dbg !4235
  %call388 = call i32 @get_bits(%struct.GetBitContext* %324, i32 %326), !dbg !4236
  %conv389 = trunc i32 %call388 to i16, !dbg !4236
  %327 = load i32, i32* %i, align 4, !dbg !4237
  %idxprom390 = sext i32 %327 to i64, !dbg !4238
  %328 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4238
  %lt_ref_pic_poc_lsb_sps = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %328, i32 0, i32 23, !dbg !4239
  %arrayidx391 = getelementptr inbounds [32 x i16], [32 x i16]* %lt_ref_pic_poc_lsb_sps, i64 0, i64 %idxprom390, !dbg !4238
  store i16 %conv389, i16* %arrayidx391, align 2, !dbg !4240
  %329 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4241
  %call392 = call i32 @get_bits1(%struct.GetBitContext* %329), !dbg !4242
  %conv393 = trunc i32 %call392 to i8, !dbg !4242
  %330 = load i32, i32* %i, align 4, !dbg !4243
  %idxprom394 = sext i32 %330 to i64, !dbg !4244
  %331 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4244
  %used_by_curr_pic_lt_sps_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %331, i32 0, i32 24, !dbg !4245
  %arrayidx395 = getelementptr inbounds [32 x i8], [32 x i8]* %used_by_curr_pic_lt_sps_flag, i64 0, i64 %idxprom394, !dbg !4244
  store i8 %conv393, i8* %arrayidx395, align 1, !dbg !4246
  br label %for.inc396, !dbg !4247

for.inc396:                                       ; preds = %for.body386
  %332 = load i32, i32* %i, align 4, !dbg !4248
  %inc397 = add nsw i32 %332, 1, !dbg !4248
  store i32 %inc397, i32* %i, align 4, !dbg !4248
  br label %for.cond381, !dbg !4250, !llvm.loop !4251

for.end398:                                       ; preds = %for.cond381
  br label %if.end399, !dbg !4253

if.end399:                                        ; preds = %for.end398, %for.end365
  %333 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4254
  %call400 = call i32 @get_bits1(%struct.GetBitContext* %333), !dbg !4255
  %conv401 = trunc i32 %call400 to i8, !dbg !4255
  %334 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4256
  %sps_temporal_mvp_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %334, i32 0, i32 27, !dbg !4257
  store i8 %conv401, i8* %sps_temporal_mvp_enabled_flag, align 4, !dbg !4258
  %335 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4259
  %call402 = call i32 @get_bits1(%struct.GetBitContext* %335), !dbg !4260
  %conv403 = trunc i32 %call402 to i8, !dbg !4260
  %336 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4261
  %sps_strong_intra_smoothing_enable_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %336, i32 0, i32 28, !dbg !4262
  store i8 %conv403, i8* %sps_strong_intra_smoothing_enable_flag, align 1, !dbg !4263
  %337 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4264
  %vui = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %337, i32 0, i32 14, !dbg !4265
  %sar = getelementptr inbounds %struct.VUI, %struct.VUI* %vui, i32 0, i32 0, !dbg !4266
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !4267
  store i32 0, i32* %num, align 4, !dbg !4267
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !4267
  store i32 1, i32* %den, align 4, !dbg !4267
  %338 = bitcast %struct.AVRational* %sar to i8*, !dbg !4268
  %339 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !4268
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %338, i8* %339, i64 8, i32 4, i1 false), !dbg !4268
  %340 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4269
  %call404 = call i32 @get_bits1(%struct.GetBitContext* %340), !dbg !4270
  store i32 %call404, i32* %vui_present, align 4, !dbg !4271
  %341 = load i32, i32* %vui_present, align 4, !dbg !4272
  %tobool405 = icmp ne i32 %341, 0, !dbg !4272
  br i1 %tobool405, label %if.then406, label %if.end407, !dbg !4274

if.then406:                                       ; preds = %if.end399
  %342 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4275
  %343 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4276
  %344 = load i32, i32* %apply_defdispwin.addr, align 4, !dbg !4277
  %345 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4278
  call void @decode_vui(%struct.GetBitContext* %342, %struct.AVCodecContext* %343, i32 %344, %struct.HEVCSPS* %345), !dbg !4279
  br label %if.end407, !dbg !4279

if.end407:                                        ; preds = %if.then406, %if.end399
  %346 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4280
  %call408 = call i32 @get_bits1(%struct.GetBitContext* %346), !dbg !4282
  %tobool409 = icmp ne i32 %call408, 0, !dbg !4282
  br i1 %tobool409, label %if.then410, label %if.end437, !dbg !4283

if.then410:                                       ; preds = %if.end407
  %347 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4284
  %call411 = call i32 @get_bits1(%struct.GetBitContext* %347), !dbg !4286
  %348 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4287
  %sps_range_extension_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %348, i32 0, i32 37, !dbg !4288
  store i32 %call411, i32* %sps_range_extension_flag, align 4, !dbg !4289
  %349 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4290
  call void @skip_bits(%struct.GetBitContext* %349, i32 7), !dbg !4291
  %350 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4292
  %sps_range_extension_flag412 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %350, i32 0, i32 37, !dbg !4294
  %351 = load i32, i32* %sps_range_extension_flag412, align 4, !dbg !4294
  %tobool413 = icmp ne i32 %351, 0, !dbg !4292
  br i1 %tobool413, label %if.then414, label %if.end436, !dbg !4295

if.then414:                                       ; preds = %if.then410
  %352 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4296
  %call415 = call i32 @get_bits1(%struct.GetBitContext* %352), !dbg !4298
  %353 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4299
  %transform_skip_rotation_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %353, i32 0, i32 38, !dbg !4300
  store i32 %call415, i32* %transform_skip_rotation_enabled_flag, align 4, !dbg !4301
  %354 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4302
  %call416 = call i32 @get_bits1(%struct.GetBitContext* %354), !dbg !4303
  %355 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4304
  %transform_skip_context_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %355, i32 0, i32 39, !dbg !4305
  store i32 %call416, i32* %transform_skip_context_enabled_flag, align 4, !dbg !4306
  %356 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4307
  %call417 = call i32 @get_bits1(%struct.GetBitContext* %356), !dbg !4308
  %357 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4309
  %implicit_rdpcm_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %357, i32 0, i32 40, !dbg !4310
  store i32 %call417, i32* %implicit_rdpcm_enabled_flag, align 4, !dbg !4311
  %358 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4312
  %call418 = call i32 @get_bits1(%struct.GetBitContext* %358), !dbg !4313
  %359 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4314
  %explicit_rdpcm_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %359, i32 0, i32 41, !dbg !4315
  store i32 %call418, i32* %explicit_rdpcm_enabled_flag, align 4, !dbg !4316
  %360 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4317
  %call419 = call i32 @get_bits1(%struct.GetBitContext* %360), !dbg !4318
  %361 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4319
  %extended_precision_processing_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %361, i32 0, i32 42, !dbg !4320
  store i32 %call419, i32* %extended_precision_processing_flag, align 4, !dbg !4321
  %362 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4322
  %extended_precision_processing_flag420 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %362, i32 0, i32 42, !dbg !4324
  %363 = load i32, i32* %extended_precision_processing_flag420, align 4, !dbg !4324
  %tobool421 = icmp ne i32 %363, 0, !dbg !4322
  br i1 %tobool421, label %if.then422, label %if.end423, !dbg !4325

if.then422:                                       ; preds = %if.then414
  %364 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4326
  %365 = bitcast %struct.AVCodecContext* %364 to i8*, !dbg !4326
  call void (i8*, i32, i8*, ...) @av_log(i8* %365, i32 24, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.32, i32 0, i32 0)), !dbg !4327
  br label %if.end423, !dbg !4327

if.end423:                                        ; preds = %if.then422, %if.then414
  %366 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4328
  %call424 = call i32 @get_bits1(%struct.GetBitContext* %366), !dbg !4329
  %367 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4330
  %intra_smoothing_disabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %367, i32 0, i32 43, !dbg !4331
  store i32 %call424, i32* %intra_smoothing_disabled_flag, align 4, !dbg !4332
  %368 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4333
  %call425 = call i32 @get_bits1(%struct.GetBitContext* %368), !dbg !4334
  %369 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4335
  %high_precision_offsets_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %369, i32 0, i32 44, !dbg !4336
  store i32 %call425, i32* %high_precision_offsets_enabled_flag, align 4, !dbg !4337
  %370 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4338
  %high_precision_offsets_enabled_flag426 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %370, i32 0, i32 44, !dbg !4340
  %371 = load i32, i32* %high_precision_offsets_enabled_flag426, align 4, !dbg !4340
  %tobool427 = icmp ne i32 %371, 0, !dbg !4338
  br i1 %tobool427, label %if.then428, label %if.end429, !dbg !4341

if.then428:                                       ; preds = %if.end423
  %372 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4342
  %373 = bitcast %struct.AVCodecContext* %372 to i8*, !dbg !4342
  call void (i8*, i32, i8*, ...) @av_log(i8* %373, i32 24, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.33, i32 0, i32 0)), !dbg !4343
  br label %if.end429, !dbg !4343

if.end429:                                        ; preds = %if.then428, %if.end423
  %374 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4344
  %call430 = call i32 @get_bits1(%struct.GetBitContext* %374), !dbg !4345
  %375 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4346
  %persistent_rice_adaptation_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %375, i32 0, i32 45, !dbg !4347
  store i32 %call430, i32* %persistent_rice_adaptation_enabled_flag, align 4, !dbg !4348
  %376 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4349
  %call431 = call i32 @get_bits1(%struct.GetBitContext* %376), !dbg !4350
  %377 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4351
  %cabac_bypass_alignment_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %377, i32 0, i32 46, !dbg !4352
  store i32 %call431, i32* %cabac_bypass_alignment_enabled_flag, align 4, !dbg !4353
  %378 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4354
  %cabac_bypass_alignment_enabled_flag432 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %378, i32 0, i32 46, !dbg !4356
  %379 = load i32, i32* %cabac_bypass_alignment_enabled_flag432, align 4, !dbg !4356
  %tobool433 = icmp ne i32 %379, 0, !dbg !4354
  br i1 %tobool433, label %if.then434, label %if.end435, !dbg !4357

if.then434:                                       ; preds = %if.end429
  %380 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4358
  %381 = bitcast %struct.AVCodecContext* %380 to i8*, !dbg !4358
  call void (i8*, i32, i8*, ...) @av_log(i8* %381, i32 24, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.34, i32 0, i32 0)), !dbg !4359
  br label %if.end435, !dbg !4359

if.end435:                                        ; preds = %if.then434, %if.end429
  br label %if.end436, !dbg !4360

if.end436:                                        ; preds = %if.end435, %if.then410
  br label %if.end437, !dbg !4361

if.end437:                                        ; preds = %if.end436, %if.end407
  %382 = load i32, i32* %apply_defdispwin.addr, align 4, !dbg !4362
  %tobool438 = icmp ne i32 %382, 0, !dbg !4362
  br i1 %tobool438, label %if.then439, label %if.end463, !dbg !4364

if.then439:                                       ; preds = %if.end437
  %383 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4365
  %vui440 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %383, i32 0, i32 14, !dbg !4367
  %def_disp_win = getelementptr inbounds %struct.VUI, %struct.VUI* %vui440, i32 0, i32 17, !dbg !4368
  %left_offset441 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win, i32 0, i32 0, !dbg !4369
  %384 = load i32, i32* %left_offset441, align 4, !dbg !4369
  %385 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4370
  %output_window442 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %385, i32 0, i32 3, !dbg !4371
  %left_offset443 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %output_window442, i32 0, i32 0, !dbg !4372
  %386 = load i32, i32* %left_offset443, align 4, !dbg !4373
  %add444 = add i32 %386, %384, !dbg !4373
  store i32 %add444, i32* %left_offset443, align 4, !dbg !4373
  %387 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4374
  %vui445 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %387, i32 0, i32 14, !dbg !4375
  %def_disp_win446 = getelementptr inbounds %struct.VUI, %struct.VUI* %vui445, i32 0, i32 17, !dbg !4376
  %right_offset447 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win446, i32 0, i32 1, !dbg !4377
  %388 = load i32, i32* %right_offset447, align 4, !dbg !4377
  %389 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4378
  %output_window448 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %389, i32 0, i32 3, !dbg !4379
  %right_offset449 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %output_window448, i32 0, i32 1, !dbg !4380
  %390 = load i32, i32* %right_offset449, align 4, !dbg !4381
  %add450 = add i32 %390, %388, !dbg !4381
  store i32 %add450, i32* %right_offset449, align 4, !dbg !4381
  %391 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4382
  %vui451 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %391, i32 0, i32 14, !dbg !4383
  %def_disp_win452 = getelementptr inbounds %struct.VUI, %struct.VUI* %vui451, i32 0, i32 17, !dbg !4384
  %top_offset453 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win452, i32 0, i32 2, !dbg !4385
  %392 = load i32, i32* %top_offset453, align 4, !dbg !4385
  %393 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4386
  %output_window454 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %393, i32 0, i32 3, !dbg !4387
  %top_offset455 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %output_window454, i32 0, i32 2, !dbg !4388
  %394 = load i32, i32* %top_offset455, align 4, !dbg !4389
  %add456 = add i32 %394, %392, !dbg !4389
  store i32 %add456, i32* %top_offset455, align 4, !dbg !4389
  %395 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4390
  %vui457 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %395, i32 0, i32 14, !dbg !4391
  %def_disp_win458 = getelementptr inbounds %struct.VUI, %struct.VUI* %vui457, i32 0, i32 17, !dbg !4392
  %bottom_offset459 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win458, i32 0, i32 3, !dbg !4393
  %396 = load i32, i32* %bottom_offset459, align 4, !dbg !4393
  %397 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4394
  %output_window460 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %397, i32 0, i32 3, !dbg !4395
  %bottom_offset461 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %output_window460, i32 0, i32 3, !dbg !4396
  %398 = load i32, i32* %bottom_offset461, align 4, !dbg !4397
  %add462 = add i32 %398, %396, !dbg !4397
  store i32 %add462, i32* %bottom_offset461, align 4, !dbg !4397
  br label %if.end463, !dbg !4398

if.end463:                                        ; preds = %if.then439, %if.end437
  %399 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4399
  %output_window464 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %399, i32 0, i32 3, !dbg !4400
  store %struct.HEVCWindow* %output_window464, %struct.HEVCWindow** %ow, align 8, !dbg !4401
  %400 = load %struct.HEVCWindow*, %struct.HEVCWindow** %ow, align 8, !dbg !4402
  %left_offset465 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %400, i32 0, i32 0, !dbg !4404
  %401 = load i32, i32* %left_offset465, align 4, !dbg !4404
  %402 = load %struct.HEVCWindow*, %struct.HEVCWindow** %ow, align 8, !dbg !4405
  %right_offset466 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %402, i32 0, i32 1, !dbg !4406
  %403 = load i32, i32* %right_offset466, align 4, !dbg !4406
  %sub467 = sub i32 2147483647, %403, !dbg !4407
  %cmp468 = icmp uge i32 %401, %sub467, !dbg !4408
  br i1 %cmp468, label %if.then490, label %lor.lhs.false470, !dbg !4409

lor.lhs.false470:                                 ; preds = %if.end463
  %404 = load %struct.HEVCWindow*, %struct.HEVCWindow** %ow, align 8, !dbg !4410
  %top_offset471 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %404, i32 0, i32 2, !dbg !4411
  %405 = load i32, i32* %top_offset471, align 4, !dbg !4411
  %406 = load %struct.HEVCWindow*, %struct.HEVCWindow** %ow, align 8, !dbg !4412
  %bottom_offset472 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %406, i32 0, i32 3, !dbg !4413
  %407 = load i32, i32* %bottom_offset472, align 4, !dbg !4413
  %sub473 = sub i32 2147483647, %407, !dbg !4414
  %cmp474 = icmp uge i32 %405, %sub473, !dbg !4415
  br i1 %cmp474, label %if.then490, label %lor.lhs.false476, !dbg !4416

lor.lhs.false476:                                 ; preds = %lor.lhs.false470
  %408 = load %struct.HEVCWindow*, %struct.HEVCWindow** %ow, align 8, !dbg !4417
  %left_offset477 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %408, i32 0, i32 0, !dbg !4418
  %409 = load i32, i32* %left_offset477, align 4, !dbg !4418
  %410 = load %struct.HEVCWindow*, %struct.HEVCWindow** %ow, align 8, !dbg !4419
  %right_offset478 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %410, i32 0, i32 1, !dbg !4420
  %411 = load i32, i32* %right_offset478, align 4, !dbg !4420
  %add479 = add i32 %409, %411, !dbg !4421
  %412 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4422
  %width480 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %412, i32 0, i32 47, !dbg !4423
  %413 = load i32, i32* %width480, align 4, !dbg !4423
  %cmp481 = icmp uge i32 %add479, %413, !dbg !4424
  br i1 %cmp481, label %if.then490, label %lor.lhs.false483, !dbg !4425

lor.lhs.false483:                                 ; preds = %lor.lhs.false476
  %414 = load %struct.HEVCWindow*, %struct.HEVCWindow** %ow, align 8, !dbg !4426
  %top_offset484 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %414, i32 0, i32 2, !dbg !4427
  %415 = load i32, i32* %top_offset484, align 4, !dbg !4427
  %416 = load %struct.HEVCWindow*, %struct.HEVCWindow** %ow, align 8, !dbg !4428
  %bottom_offset485 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %416, i32 0, i32 3, !dbg !4429
  %417 = load i32, i32* %bottom_offset485, align 4, !dbg !4429
  %add486 = add i32 %415, %417, !dbg !4430
  %418 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4431
  %height487 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %418, i32 0, i32 48, !dbg !4432
  %419 = load i32, i32* %height487, align 4, !dbg !4432
  %cmp488 = icmp uge i32 %add486, %419, !dbg !4433
  br i1 %cmp488, label %if.then490, label %if.end501, !dbg !4434

if.then490:                                       ; preds = %lor.lhs.false483, %lor.lhs.false476, %lor.lhs.false470, %if.end463
  %420 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4435
  %421 = bitcast %struct.AVCodecContext* %420 to i8*, !dbg !4435
  %422 = load %struct.HEVCWindow*, %struct.HEVCWindow** %ow, align 8, !dbg !4437
  %left_offset491 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %422, i32 0, i32 0, !dbg !4438
  %423 = load i32, i32* %left_offset491, align 4, !dbg !4438
  %424 = load %struct.HEVCWindow*, %struct.HEVCWindow** %ow, align 8, !dbg !4439
  %right_offset492 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %424, i32 0, i32 1, !dbg !4440
  %425 = load i32, i32* %right_offset492, align 4, !dbg !4440
  %426 = load %struct.HEVCWindow*, %struct.HEVCWindow** %ow, align 8, !dbg !4441
  %top_offset493 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %426, i32 0, i32 2, !dbg !4442
  %427 = load i32, i32* %top_offset493, align 4, !dbg !4442
  %428 = load %struct.HEVCWindow*, %struct.HEVCWindow** %ow, align 8, !dbg !4443
  %bottom_offset494 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %428, i32 0, i32 3, !dbg !4444
  %429 = load i32, i32* %bottom_offset494, align 4, !dbg !4444
  call void (i8*, i32, i8*, ...) @av_log(i8* %421, i32 24, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.35, i32 0, i32 0), i32 %423, i32 %425, i32 %427, i32 %429), !dbg !4445
  %430 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4446
  %err_recognition495 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %430, i32 0, i32 135, !dbg !4448
  %431 = load i32, i32* %err_recognition495, align 8, !dbg !4448
  %and496 = and i32 %431, 8, !dbg !4449
  %tobool497 = icmp ne i32 %and496, 0, !dbg !4449
  br i1 %tobool497, label %if.then498, label %if.end499, !dbg !4450

if.then498:                                       ; preds = %if.then490
  store i32 -1094995529, i32* %retval, align 4, !dbg !4451
  br label %return, !dbg !4451

if.end499:                                        ; preds = %if.then490
  %432 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4453
  %433 = bitcast %struct.AVCodecContext* %432 to i8*, !dbg !4453
  call void (i8*, i32, i8*, ...) @av_log(i8* %433, i32 24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.36, i32 0, i32 0)), !dbg !4454
  %434 = load %struct.HEVCWindow*, %struct.HEVCWindow** %ow, align 8, !dbg !4455
  %435 = bitcast %struct.HEVCWindow* %434 to i8*, !dbg !4456
  call void @llvm.memset.p0i8.i64(i8* %435, i8 0, i64 16, i32 4, i1 false), !dbg !4456
  %436 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4457
  %pic_conf_win500 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %436, i32 0, i32 4, !dbg !4458
  %437 = bitcast %struct.HEVCWindow* %pic_conf_win500 to i8*, !dbg !4459
  call void @llvm.memset.p0i8.i64(i8* %437, i8 0, i64 16, i32 4, i1 false), !dbg !4459
  br label %if.end501, !dbg !4460

if.end501:                                        ; preds = %if.end499, %lor.lhs.false483
  %438 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4461
  %log2_min_cb_size502 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %438, i32 0, i32 29, !dbg !4462
  %439 = load i32, i32* %log2_min_cb_size502, align 4, !dbg !4462
  %440 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4463
  %log2_diff_max_min_coding_block_size503 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %440, i32 0, i32 30, !dbg !4464
  %441 = load i32, i32* %log2_diff_max_min_coding_block_size503, align 4, !dbg !4464
  %add504 = add i32 %439, %441, !dbg !4465
  %442 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4466
  %log2_ctb_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %442, i32 0, i32 33, !dbg !4467
  store i32 %add504, i32* %log2_ctb_size, align 4, !dbg !4468
  %443 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4469
  %log2_min_cb_size505 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %443, i32 0, i32 29, !dbg !4470
  %444 = load i32, i32* %log2_min_cb_size505, align 4, !dbg !4470
  %sub506 = sub i32 %444, 1, !dbg !4471
  %445 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4472
  %log2_min_pu_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %445, i32 0, i32 34, !dbg !4473
  store i32 %sub506, i32* %log2_min_pu_size, align 4, !dbg !4474
  %446 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4475
  %log2_ctb_size507 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %446, i32 0, i32 33, !dbg !4477
  %447 = load i32, i32* %log2_ctb_size507, align 4, !dbg !4477
  %cmp508 = icmp ugt i32 %447, 6, !dbg !4478
  br i1 %cmp508, label %if.then510, label %if.end512, !dbg !4479

if.then510:                                       ; preds = %if.end501
  %448 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4480
  %449 = bitcast %struct.AVCodecContext* %448 to i8*, !dbg !4480
  %450 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4482
  %log2_ctb_size511 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %450, i32 0, i32 33, !dbg !4483
  %451 = load i32, i32* %log2_ctb_size511, align 4, !dbg !4483
  call void (i8*, i32, i8*, ...) @av_log(i8* %449, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i32 %451), !dbg !4484
  store i32 -1094995529, i32* %retval, align 4, !dbg !4485
  br label %return, !dbg !4485

if.end512:                                        ; preds = %if.end501
  %452 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4486
  %log2_ctb_size513 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %452, i32 0, i32 33, !dbg !4488
  %453 = load i32, i32* %log2_ctb_size513, align 4, !dbg !4488
  %cmp514 = icmp ult i32 %453, 4, !dbg !4489
  br i1 %cmp514, label %if.then516, label %if.end519, !dbg !4490

if.then516:                                       ; preds = %if.end512
  %454 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4491
  %455 = bitcast %struct.AVCodecContext* %454 to i8*, !dbg !4491
  %456 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4493
  %log2_ctb_size517 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %456, i32 0, i32 33, !dbg !4494
  %457 = load i32, i32* %log2_ctb_size517, align 4, !dbg !4494
  call void (i8*, i32, i8*, ...) @av_log(i8* %455, i32 16, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.38, i32 0, i32 0), i32 %457), !dbg !4495
  %458 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4496
  %459 = bitcast %struct.AVCodecContext* %458 to i8*, !dbg !4496
  %460 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4497
  %log2_ctb_size518 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %460, i32 0, i32 33, !dbg !4498
  %461 = load i32, i32* %log2_ctb_size518, align 4, !dbg !4498
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %459, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i32 0, i32 0), i32 %461), !dbg !4499
  store i32 -1094995529, i32* %retval, align 4, !dbg !4500
  br label %return, !dbg !4500

if.end519:                                        ; preds = %if.end512
  %462 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4501
  %width520 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %462, i32 0, i32 47, !dbg !4502
  %463 = load i32, i32* %width520, align 4, !dbg !4502
  %464 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4503
  %log2_ctb_size521 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %464, i32 0, i32 33, !dbg !4504
  %465 = load i32, i32* %log2_ctb_size521, align 4, !dbg !4504
  %shl = shl i32 1, %465, !dbg !4505
  %add522 = add nsw i32 %463, %shl, !dbg !4506
  %sub523 = sub nsw i32 %add522, 1, !dbg !4507
  %466 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4508
  %log2_ctb_size524 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %466, i32 0, i32 33, !dbg !4509
  %467 = load i32, i32* %log2_ctb_size524, align 4, !dbg !4509
  %shr = ashr i32 %sub523, %467, !dbg !4510
  %468 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4511
  %ctb_width = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %468, i32 0, i32 49, !dbg !4512
  store i32 %shr, i32* %ctb_width, align 4, !dbg !4513
  %469 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4514
  %height525 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %469, i32 0, i32 48, !dbg !4515
  %470 = load i32, i32* %height525, align 4, !dbg !4515
  %471 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4516
  %log2_ctb_size526 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %471, i32 0, i32 33, !dbg !4517
  %472 = load i32, i32* %log2_ctb_size526, align 4, !dbg !4517
  %shl527 = shl i32 1, %472, !dbg !4518
  %add528 = add nsw i32 %470, %shl527, !dbg !4519
  %sub529 = sub nsw i32 %add528, 1, !dbg !4520
  %473 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4521
  %log2_ctb_size530 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %473, i32 0, i32 33, !dbg !4522
  %474 = load i32, i32* %log2_ctb_size530, align 4, !dbg !4522
  %shr531 = ashr i32 %sub529, %474, !dbg !4523
  %475 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4524
  %ctb_height = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %475, i32 0, i32 50, !dbg !4525
  store i32 %shr531, i32* %ctb_height, align 4, !dbg !4526
  %476 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4527
  %ctb_width532 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %476, i32 0, i32 49, !dbg !4528
  %477 = load i32, i32* %ctb_width532, align 4, !dbg !4528
  %478 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4529
  %ctb_height533 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %478, i32 0, i32 50, !dbg !4530
  %479 = load i32, i32* %ctb_height533, align 4, !dbg !4530
  %mul534 = mul nsw i32 %477, %479, !dbg !4531
  %480 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4532
  %ctb_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %480, i32 0, i32 51, !dbg !4533
  store i32 %mul534, i32* %ctb_size, align 4, !dbg !4534
  %481 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4535
  %width535 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %481, i32 0, i32 47, !dbg !4536
  %482 = load i32, i32* %width535, align 4, !dbg !4536
  %483 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4537
  %log2_min_cb_size536 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %483, i32 0, i32 29, !dbg !4538
  %484 = load i32, i32* %log2_min_cb_size536, align 4, !dbg !4538
  %shr537 = ashr i32 %482, %484, !dbg !4539
  %485 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4540
  %min_cb_width = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %485, i32 0, i32 52, !dbg !4541
  store i32 %shr537, i32* %min_cb_width, align 4, !dbg !4542
  %486 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4543
  %height538 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %486, i32 0, i32 48, !dbg !4544
  %487 = load i32, i32* %height538, align 4, !dbg !4544
  %488 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4545
  %log2_min_cb_size539 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %488, i32 0, i32 29, !dbg !4546
  %489 = load i32, i32* %log2_min_cb_size539, align 4, !dbg !4546
  %shr540 = ashr i32 %487, %489, !dbg !4547
  %490 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4548
  %min_cb_height = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %490, i32 0, i32 53, !dbg !4549
  store i32 %shr540, i32* %min_cb_height, align 4, !dbg !4550
  %491 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4551
  %width541 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %491, i32 0, i32 47, !dbg !4552
  %492 = load i32, i32* %width541, align 4, !dbg !4552
  %493 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4553
  %log2_min_tb_size542 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %493, i32 0, i32 31, !dbg !4554
  %494 = load i32, i32* %log2_min_tb_size542, align 4, !dbg !4554
  %shr543 = ashr i32 %492, %494, !dbg !4555
  %495 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4556
  %min_tb_width = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %495, i32 0, i32 54, !dbg !4557
  store i32 %shr543, i32* %min_tb_width, align 4, !dbg !4558
  %496 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4559
  %height544 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %496, i32 0, i32 48, !dbg !4560
  %497 = load i32, i32* %height544, align 4, !dbg !4560
  %498 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4561
  %log2_min_tb_size545 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %498, i32 0, i32 31, !dbg !4562
  %499 = load i32, i32* %log2_min_tb_size545, align 4, !dbg !4562
  %shr546 = ashr i32 %497, %499, !dbg !4563
  %500 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4564
  %min_tb_height = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %500, i32 0, i32 55, !dbg !4565
  store i32 %shr546, i32* %min_tb_height, align 4, !dbg !4566
  %501 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4567
  %width547 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %501, i32 0, i32 47, !dbg !4568
  %502 = load i32, i32* %width547, align 4, !dbg !4568
  %503 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4569
  %log2_min_pu_size548 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %503, i32 0, i32 34, !dbg !4570
  %504 = load i32, i32* %log2_min_pu_size548, align 4, !dbg !4570
  %shr549 = ashr i32 %502, %504, !dbg !4571
  %505 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4572
  %min_pu_width = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %505, i32 0, i32 56, !dbg !4573
  store i32 %shr549, i32* %min_pu_width, align 4, !dbg !4574
  %506 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4575
  %height550 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %506, i32 0, i32 48, !dbg !4576
  %507 = load i32, i32* %height550, align 4, !dbg !4576
  %508 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4577
  %log2_min_pu_size551 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %508, i32 0, i32 34, !dbg !4578
  %509 = load i32, i32* %log2_min_pu_size551, align 4, !dbg !4578
  %shr552 = ashr i32 %507, %509, !dbg !4579
  %510 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4580
  %min_pu_height = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %510, i32 0, i32 57, !dbg !4581
  store i32 %shr552, i32* %min_pu_height, align 4, !dbg !4582
  %511 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4583
  %log2_ctb_size553 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %511, i32 0, i32 33, !dbg !4584
  %512 = load i32, i32* %log2_ctb_size553, align 4, !dbg !4584
  %513 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4585
  %log2_min_tb_size554 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %513, i32 0, i32 31, !dbg !4586
  %514 = load i32, i32* %log2_min_tb_size554, align 4, !dbg !4586
  %sub555 = sub i32 %512, %514, !dbg !4587
  %shl556 = shl i32 1, %sub555, !dbg !4588
  %sub557 = sub nsw i32 %shl556, 1, !dbg !4589
  %515 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4590
  %tb_mask = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %515, i32 0, i32 58, !dbg !4591
  store i32 %sub557, i32* %tb_mask, align 4, !dbg !4592
  %516 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4593
  %bit_depth558 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %516, i32 0, i32 5, !dbg !4594
  %517 = load i32, i32* %bit_depth558, align 4, !dbg !4594
  %sub559 = sub nsw i32 %517, 8, !dbg !4595
  %mul560 = mul nsw i32 6, %sub559, !dbg !4596
  %518 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4597
  %qp_bd_offset = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %518, i32 0, i32 61, !dbg !4598
  store i32 %mul560, i32* %qp_bd_offset, align 4, !dbg !4599
  %519 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4600
  %width561 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %519, i32 0, i32 47, !dbg !4601
  %520 = load i32, i32* %width561, align 4, !dbg !4601
  %521 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4602
  %log2_min_cb_size562 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %521, i32 0, i32 29, !dbg !4603
  %522 = load i32, i32* %log2_min_cb_size562, align 4, !dbg !4603
  store i32 %520, i32* %a.addr.i, align 4, !dbg !4604
  store i32 %522, i32* %p.addr.i, align 4, !dbg !4604
  %523 = load i32, i32* %a.addr.i, align 4, !dbg !4605
  %524 = load i32, i32* %p.addr.i, align 4, !dbg !4606
  %shl.i = shl i32 1, %524, !dbg !4607
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !4608
  %and.i = and i32 %523, %sub.i, !dbg !4609
  %tobool564 = icmp ne i32 %and.i, 0, !dbg !4604
  br i1 %tobool564, label %if.then570, label %lor.lhs.false565, !dbg !4610

lor.lhs.false565:                                 ; preds = %if.end519
  %525 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4611
  %height566 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %525, i32 0, i32 48, !dbg !4612
  %526 = load i32, i32* %height566, align 4, !dbg !4612
  %527 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4613
  %log2_min_cb_size567 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %527, i32 0, i32 29, !dbg !4614
  %528 = load i32, i32* %log2_min_cb_size567, align 4, !dbg !4614
  store i32 %526, i32* %a.addr.i611, align 4, !dbg !4615
  store i32 %528, i32* %p.addr.i612, align 4, !dbg !4615
  %529 = load i32, i32* %a.addr.i611, align 4, !dbg !4616
  %530 = load i32, i32* %p.addr.i612, align 4, !dbg !4617
  %shl.i613 = shl i32 1, %530, !dbg !4618
  %sub.i614 = sub nsw i32 %shl.i613, 1, !dbg !4619
  %and.i615 = and i32 %529, %sub.i614, !dbg !4620
  %tobool569 = icmp ne i32 %and.i615, 0, !dbg !4615
  br i1 %tobool569, label %if.then570, label %if.end571, !dbg !4621

if.then570:                                       ; preds = %lor.lhs.false565, %if.end519
  %531 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4622
  %532 = bitcast %struct.AVCodecContext* %531 to i8*, !dbg !4622
  call void (i8*, i32, i8*, ...) @av_log(i8* %532, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i32 0, i32 0)), !dbg !4624
  store i32 -1094995529, i32* %retval, align 4, !dbg !4625
  br label %return, !dbg !4625

if.end571:                                        ; preds = %lor.lhs.false565
  %533 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4626
  %max_transform_hierarchy_depth_inter572 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %533, i32 0, i32 35, !dbg !4628
  %534 = load i32, i32* %max_transform_hierarchy_depth_inter572, align 4, !dbg !4628
  %535 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4629
  %log2_ctb_size573 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %535, i32 0, i32 33, !dbg !4630
  %536 = load i32, i32* %log2_ctb_size573, align 4, !dbg !4630
  %537 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4631
  %log2_min_tb_size574 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %537, i32 0, i32 31, !dbg !4632
  %538 = load i32, i32* %log2_min_tb_size574, align 4, !dbg !4632
  %sub575 = sub i32 %536, %538, !dbg !4633
  %cmp576 = icmp ugt i32 %534, %sub575, !dbg !4634
  br i1 %cmp576, label %if.then578, label %if.end580, !dbg !4635

if.then578:                                       ; preds = %if.end571
  %539 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4636
  %540 = bitcast %struct.AVCodecContext* %539 to i8*, !dbg !4636
  %541 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4638
  %max_transform_hierarchy_depth_inter579 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %541, i32 0, i32 35, !dbg !4639
  %542 = load i32, i32* %max_transform_hierarchy_depth_inter579, align 4, !dbg !4639
  call void (i8*, i32, i8*, ...) @av_log(i8* %540, i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.41, i32 0, i32 0), i32 %542), !dbg !4640
  store i32 -1094995529, i32* %retval, align 4, !dbg !4641
  br label %return, !dbg !4641

if.end580:                                        ; preds = %if.end571
  %543 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4642
  %max_transform_hierarchy_depth_intra581 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %543, i32 0, i32 36, !dbg !4644
  %544 = load i32, i32* %max_transform_hierarchy_depth_intra581, align 4, !dbg !4644
  %545 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4645
  %log2_ctb_size582 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %545, i32 0, i32 33, !dbg !4646
  %546 = load i32, i32* %log2_ctb_size582, align 4, !dbg !4646
  %547 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4647
  %log2_min_tb_size583 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %547, i32 0, i32 31, !dbg !4648
  %548 = load i32, i32* %log2_min_tb_size583, align 4, !dbg !4648
  %sub584 = sub i32 %546, %548, !dbg !4649
  %cmp585 = icmp ugt i32 %544, %sub584, !dbg !4650
  br i1 %cmp585, label %if.then587, label %if.end589, !dbg !4651

if.then587:                                       ; preds = %if.end580
  %549 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4652
  %550 = bitcast %struct.AVCodecContext* %549 to i8*, !dbg !4652
  %551 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4654
  %max_transform_hierarchy_depth_intra588 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %551, i32 0, i32 36, !dbg !4655
  %552 = load i32, i32* %max_transform_hierarchy_depth_intra588, align 4, !dbg !4655
  call void (i8*, i32, i8*, ...) @av_log(i8* %550, i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.42, i32 0, i32 0), i32 %552), !dbg !4656
  store i32 -1094995529, i32* %retval, align 4, !dbg !4657
  br label %return, !dbg !4657

if.end589:                                        ; preds = %if.end580
  %553 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4658
  %log2_max_trafo_size590 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %553, i32 0, i32 32, !dbg !4660
  %554 = load i32, i32* %log2_max_trafo_size590, align 4, !dbg !4660
  %555 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4661
  %log2_ctb_size591 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %555, i32 0, i32 33, !dbg !4662
  %556 = load i32, i32* %log2_ctb_size591, align 4, !dbg !4662
  %cmp592 = icmp ugt i32 %556, 5, !dbg !4663
  br i1 %cmp592, label %cond.true594, label %cond.false595, !dbg !4664

cond.true594:                                     ; preds = %if.end589
  br label %cond.end597, !dbg !4665

cond.false595:                                    ; preds = %if.end589
  %557 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4667
  %log2_ctb_size596 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %557, i32 0, i32 33, !dbg !4669
  %558 = load i32, i32* %log2_ctb_size596, align 4, !dbg !4669
  br label %cond.end597, !dbg !4670

cond.end597:                                      ; preds = %cond.false595, %cond.true594
  %cond598 = phi i32 [ 5, %cond.true594 ], [ %558, %cond.false595 ], !dbg !4671
  %cmp599 = icmp ugt i32 %554, %cond598, !dbg !4673
  br i1 %cmp599, label %if.then601, label %if.end603, !dbg !4674

if.then601:                                       ; preds = %cond.end597
  %559 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4675
  %560 = bitcast %struct.AVCodecContext* %559 to i8*, !dbg !4675
  %561 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4677
  %log2_max_trafo_size602 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %561, i32 0, i32 32, !dbg !4678
  %562 = load i32, i32* %log2_max_trafo_size602, align 4, !dbg !4678
  call void (i8*, i32, i8*, ...) @av_log(i8* %560, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.43, i32 0, i32 0), i32 %562), !dbg !4679
  store i32 -1094995529, i32* %retval, align 4, !dbg !4680
  br label %return, !dbg !4680

if.end603:                                        ; preds = %cond.end597
  %563 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4681
  %call604 = call i32 @get_bits_left(%struct.GetBitContext* %563), !dbg !4683
  %cmp605 = icmp slt i32 %call604, 0, !dbg !4684
  br i1 %cmp605, label %if.then607, label %if.end610, !dbg !4685

if.then607:                                       ; preds = %if.end603
  %564 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4686
  %565 = bitcast %struct.AVCodecContext* %564 to i8*, !dbg !4686
  %566 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4688
  %call608 = call i32 @get_bits_left(%struct.GetBitContext* %566), !dbg !4689
  %sub609 = sub nsw i32 0, %call608, !dbg !4690
  call void (i8*, i32, i8*, ...) @av_log(i8* %565, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i32 0, i32 0), i32 %sub609), !dbg !4691
  store i32 -1094995529, i32* %retval, align 4, !dbg !4692
  br label %return, !dbg !4692

if.end610:                                        ; preds = %if.end603
  store i32 0, i32* %retval, align 4, !dbg !4693
  br label %return, !dbg !4693

return:                                           ; preds = %if.end610, %if.then607, %if.then601, %if.then587, %if.then578, %if.then570, %if.then516, %if.then510, %if.then498, %if.then377, %if.then361, %if.then348, %if.then331, %if.then281, %if.then265, %if.then258, %if.then247, %if.then241, %if.then180, %if.then149, %if.then120, %if.then113, %if.then106, %if.then52, %if.then30, %if.then24, %if.then19, %if.then11, %if.then5, %if.then
  %567 = load i32, i32* %retval, align 4, !dbg !4694
  ret i32 %567, !dbg !4694
}

declare i32 @av_image_check_size(i32, i32, i32, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @map_pixel_format(%struct.AVCodecContext* %avctx, %struct.HEVCSPS* %sps) #0 !dbg !4695 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %sps.addr = alloca %struct.HEVCSPS*, align 8
  %desc = alloca %struct.AVPixFmtDescriptor*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4698, metadata !1892), !dbg !4699
  store %struct.HEVCSPS* %sps, %struct.HEVCSPS** %sps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCSPS** %sps.addr, metadata !4700, metadata !1892), !dbg !4701
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %desc, metadata !4702, metadata !1892), !dbg !4728
  %0 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4729
  %bit_depth = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %0, i32 0, i32 5, !dbg !4730
  %1 = load i32, i32* %bit_depth, align 4, !dbg !4730
  switch i32 %1, label %sw.default [
    i32 8, label %sw.bb
    i32 9, label %sw.bb16
    i32 10, label %sw.bb37
    i32 12, label %sw.bb58
  ], !dbg !4731

sw.bb:                                            ; preds = %entry
  %2 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4732
  %chroma_format_idc = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %2, i32 0, i32 1, !dbg !4735
  %3 = load i32, i32* %chroma_format_idc, align 4, !dbg !4735
  %cmp = icmp eq i32 %3, 0, !dbg !4736
  br i1 %cmp, label %if.then, label %if.end, !dbg !4737

if.then:                                          ; preds = %sw.bb
  %4 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4738
  %pix_fmt = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %4, i32 0, i32 8, !dbg !4740
  store i32 8, i32* %pix_fmt, align 4, !dbg !4741
  br label %if.end, !dbg !4738

if.end:                                           ; preds = %if.then, %sw.bb
  %5 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4742
  %chroma_format_idc1 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %5, i32 0, i32 1, !dbg !4744
  %6 = load i32, i32* %chroma_format_idc1, align 4, !dbg !4744
  %cmp2 = icmp eq i32 %6, 1, !dbg !4745
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !4746

if.then3:                                         ; preds = %if.end
  %7 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4747
  %pix_fmt4 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %7, i32 0, i32 8, !dbg !4749
  store i32 0, i32* %pix_fmt4, align 4, !dbg !4750
  br label %if.end5, !dbg !4747

if.end5:                                          ; preds = %if.then3, %if.end
  %8 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4751
  %chroma_format_idc6 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %8, i32 0, i32 1, !dbg !4753
  %9 = load i32, i32* %chroma_format_idc6, align 4, !dbg !4753
  %cmp7 = icmp eq i32 %9, 2, !dbg !4754
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !4755

if.then8:                                         ; preds = %if.end5
  %10 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4756
  %pix_fmt9 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %10, i32 0, i32 8, !dbg !4758
  store i32 4, i32* %pix_fmt9, align 4, !dbg !4759
  br label %if.end10, !dbg !4756

if.end10:                                         ; preds = %if.then8, %if.end5
  %11 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4760
  %chroma_format_idc11 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %11, i32 0, i32 1, !dbg !4762
  %12 = load i32, i32* %chroma_format_idc11, align 4, !dbg !4762
  %cmp12 = icmp eq i32 %12, 3, !dbg !4763
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !4764

if.then13:                                        ; preds = %if.end10
  %13 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4765
  %pix_fmt14 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %13, i32 0, i32 8, !dbg !4767
  store i32 5, i32* %pix_fmt14, align 4, !dbg !4768
  br label %if.end15, !dbg !4765

if.end15:                                         ; preds = %if.then13, %if.end10
  br label %sw.epilog, !dbg !4769

sw.bb16:                                          ; preds = %entry
  %14 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4770
  %chroma_format_idc17 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %14, i32 0, i32 1, !dbg !4772
  %15 = load i32, i32* %chroma_format_idc17, align 4, !dbg !4772
  %cmp18 = icmp eq i32 %15, 0, !dbg !4773
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !4774

if.then19:                                        ; preds = %sw.bb16
  %16 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4775
  %pix_fmt20 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %16, i32 0, i32 8, !dbg !4777
  store i32 176, i32* %pix_fmt20, align 4, !dbg !4778
  br label %if.end21, !dbg !4775

if.end21:                                         ; preds = %if.then19, %sw.bb16
  %17 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4779
  %chroma_format_idc22 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %17, i32 0, i32 1, !dbg !4781
  %18 = load i32, i32* %chroma_format_idc22, align 4, !dbg !4781
  %cmp23 = icmp eq i32 %18, 1, !dbg !4782
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !4783

if.then24:                                        ; preds = %if.end21
  %19 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4784
  %pix_fmt25 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %19, i32 0, i32 8, !dbg !4786
  store i32 62, i32* %pix_fmt25, align 4, !dbg !4787
  br label %if.end26, !dbg !4784

if.end26:                                         ; preds = %if.then24, %if.end21
  %20 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4788
  %chroma_format_idc27 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %20, i32 0, i32 1, !dbg !4790
  %21 = load i32, i32* %chroma_format_idc27, align 4, !dbg !4790
  %cmp28 = icmp eq i32 %21, 2, !dbg !4791
  br i1 %cmp28, label %if.then29, label %if.end31, !dbg !4792

if.then29:                                        ; preds = %if.end26
  %22 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4793
  %pix_fmt30 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %22, i32 0, i32 8, !dbg !4795
  store i32 72, i32* %pix_fmt30, align 4, !dbg !4796
  br label %if.end31, !dbg !4793

if.end31:                                         ; preds = %if.then29, %if.end26
  %23 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4797
  %chroma_format_idc32 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %23, i32 0, i32 1, !dbg !4799
  %24 = load i32, i32* %chroma_format_idc32, align 4, !dbg !4799
  %cmp33 = icmp eq i32 %24, 3, !dbg !4800
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !4801

if.then34:                                        ; preds = %if.end31
  %25 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4802
  %pix_fmt35 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %25, i32 0, i32 8, !dbg !4804
  store i32 68, i32* %pix_fmt35, align 4, !dbg !4805
  br label %if.end36, !dbg !4802

if.end36:                                         ; preds = %if.then34, %if.end31
  br label %sw.epilog, !dbg !4806

sw.bb37:                                          ; preds = %entry
  %26 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4807
  %chroma_format_idc38 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %26, i32 0, i32 1, !dbg !4809
  %27 = load i32, i32* %chroma_format_idc38, align 4, !dbg !4809
  %cmp39 = icmp eq i32 %27, 0, !dbg !4810
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !4811

if.then40:                                        ; preds = %sw.bb37
  %28 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4812
  %pix_fmt41 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %28, i32 0, i32 8, !dbg !4814
  store i32 171, i32* %pix_fmt41, align 4, !dbg !4815
  br label %if.end42, !dbg !4812

if.end42:                                         ; preds = %if.then40, %sw.bb37
  %29 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4816
  %chroma_format_idc43 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %29, i32 0, i32 1, !dbg !4818
  %30 = load i32, i32* %chroma_format_idc43, align 4, !dbg !4818
  %cmp44 = icmp eq i32 %30, 1, !dbg !4819
  br i1 %cmp44, label %if.then45, label %if.end47, !dbg !4820

if.then45:                                        ; preds = %if.end42
  %31 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4821
  %pix_fmt46 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %31, i32 0, i32 8, !dbg !4823
  store i32 64, i32* %pix_fmt46, align 4, !dbg !4824
  br label %if.end47, !dbg !4821

if.end47:                                         ; preds = %if.then45, %if.end42
  %32 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4825
  %chroma_format_idc48 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %32, i32 0, i32 1, !dbg !4827
  %33 = load i32, i32* %chroma_format_idc48, align 4, !dbg !4827
  %cmp49 = icmp eq i32 %33, 2, !dbg !4828
  br i1 %cmp49, label %if.then50, label %if.end52, !dbg !4829

if.then50:                                        ; preds = %if.end47
  %34 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4830
  %pix_fmt51 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %34, i32 0, i32 8, !dbg !4832
  store i32 66, i32* %pix_fmt51, align 4, !dbg !4833
  br label %if.end52, !dbg !4830

if.end52:                                         ; preds = %if.then50, %if.end47
  %35 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4834
  %chroma_format_idc53 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %35, i32 0, i32 1, !dbg !4836
  %36 = load i32, i32* %chroma_format_idc53, align 4, !dbg !4836
  %cmp54 = icmp eq i32 %36, 3, !dbg !4837
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !4838

if.then55:                                        ; preds = %if.end52
  %37 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4839
  %pix_fmt56 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %37, i32 0, i32 8, !dbg !4841
  store i32 70, i32* %pix_fmt56, align 4, !dbg !4842
  br label %if.end57, !dbg !4839

if.end57:                                         ; preds = %if.then55, %if.end52
  br label %sw.epilog, !dbg !4843

sw.bb58:                                          ; preds = %entry
  %38 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4844
  %chroma_format_idc59 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %38, i32 0, i32 1, !dbg !4846
  %39 = load i32, i32* %chroma_format_idc59, align 4, !dbg !4846
  %cmp60 = icmp eq i32 %39, 0, !dbg !4847
  br i1 %cmp60, label %if.then61, label %if.end63, !dbg !4848

if.then61:                                        ; preds = %sw.bb58
  %40 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4849
  %pix_fmt62 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %40, i32 0, i32 8, !dbg !4851
  store i32 169, i32* %pix_fmt62, align 4, !dbg !4852
  br label %if.end63, !dbg !4849

if.end63:                                         ; preds = %if.then61, %sw.bb58
  %41 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4853
  %chroma_format_idc64 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %41, i32 0, i32 1, !dbg !4855
  %42 = load i32, i32* %chroma_format_idc64, align 4, !dbg !4855
  %cmp65 = icmp eq i32 %42, 1, !dbg !4856
  br i1 %cmp65, label %if.then66, label %if.end68, !dbg !4857

if.then66:                                        ; preds = %if.end63
  %43 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4858
  %pix_fmt67 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %43, i32 0, i32 8, !dbg !4860
  store i32 125, i32* %pix_fmt67, align 4, !dbg !4861
  br label %if.end68, !dbg !4858

if.end68:                                         ; preds = %if.then66, %if.end63
  %44 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4862
  %chroma_format_idc69 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %44, i32 0, i32 1, !dbg !4864
  %45 = load i32, i32* %chroma_format_idc69, align 4, !dbg !4864
  %cmp70 = icmp eq i32 %45, 2, !dbg !4865
  br i1 %cmp70, label %if.then71, label %if.end73, !dbg !4866

if.then71:                                        ; preds = %if.end68
  %46 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4867
  %pix_fmt72 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %46, i32 0, i32 8, !dbg !4869
  store i32 129, i32* %pix_fmt72, align 4, !dbg !4870
  br label %if.end73, !dbg !4867

if.end73:                                         ; preds = %if.then71, %if.end68
  %47 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4871
  %chroma_format_idc74 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %47, i32 0, i32 1, !dbg !4873
  %48 = load i32, i32* %chroma_format_idc74, align 4, !dbg !4873
  %cmp75 = icmp eq i32 %48, 3, !dbg !4874
  br i1 %cmp75, label %if.then76, label %if.end78, !dbg !4875

if.then76:                                        ; preds = %if.end73
  %49 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4876
  %pix_fmt77 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %49, i32 0, i32 8, !dbg !4878
  store i32 133, i32* %pix_fmt77, align 4, !dbg !4879
  br label %if.end78, !dbg !4876

if.end78:                                         ; preds = %if.then76, %if.end73
  br label %sw.epilog, !dbg !4880

sw.default:                                       ; preds = %entry
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4881
  %51 = bitcast %struct.AVCodecContext* %50 to i8*, !dbg !4881
  %52 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4882
  %chroma_format_idc79 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %52, i32 0, i32 1, !dbg !4883
  %53 = load i32, i32* %chroma_format_idc79, align 4, !dbg !4883
  %54 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4884
  %bit_depth80 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %54, i32 0, i32 5, !dbg !4885
  %55 = load i32, i32* %bit_depth80, align 4, !dbg !4885
  call void (i8*, i32, i8*, ...) @av_log(i8* %51, i32 16, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.72, i32 0, i32 0), i32 %53, i32 %55), !dbg !4886
  store i32 -1094995529, i32* %retval, align 4, !dbg !4887
  br label %return, !dbg !4887

sw.epilog:                                        ; preds = %if.end78, %if.end57, %if.end36, %if.end15
  %56 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4888
  %pix_fmt81 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %56, i32 0, i32 8, !dbg !4889
  %57 = load i32, i32* %pix_fmt81, align 4, !dbg !4889
  %call = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %57), !dbg !4890
  store %struct.AVPixFmtDescriptor* %call, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4891
  %58 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4892
  %tobool = icmp ne %struct.AVPixFmtDescriptor* %58, null, !dbg !4892
  br i1 %tobool, label %if.end83, label %if.then82, !dbg !4894

if.then82:                                        ; preds = %sw.epilog
  store i32 -22, i32* %retval, align 4, !dbg !4895
  br label %return, !dbg !4895

if.end83:                                         ; preds = %sw.epilog
  %59 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4896
  %vshift = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %59, i32 0, i32 60, !dbg !4897
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %vshift, i64 0, i64 0, !dbg !4896
  store i32 0, i32* %arrayidx, align 4, !dbg !4898
  %60 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4899
  %hshift = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %60, i32 0, i32 59, !dbg !4900
  %arrayidx84 = getelementptr inbounds [3 x i32], [3 x i32]* %hshift, i64 0, i64 0, !dbg !4899
  store i32 0, i32* %arrayidx84, align 4, !dbg !4901
  %61 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4902
  %log2_chroma_w = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %61, i32 0, i32 2, !dbg !4903
  %62 = load i8, i8* %log2_chroma_w, align 1, !dbg !4903
  %conv = zext i8 %62 to i32, !dbg !4902
  %63 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4904
  %hshift85 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %63, i32 0, i32 59, !dbg !4905
  %arrayidx86 = getelementptr inbounds [3 x i32], [3 x i32]* %hshift85, i64 0, i64 1, !dbg !4904
  store i32 %conv, i32* %arrayidx86, align 4, !dbg !4906
  %64 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4907
  %hshift87 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %64, i32 0, i32 59, !dbg !4908
  %arrayidx88 = getelementptr inbounds [3 x i32], [3 x i32]* %hshift87, i64 0, i64 2, !dbg !4907
  store i32 %conv, i32* %arrayidx88, align 4, !dbg !4909
  %65 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !4910
  %log2_chroma_h = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %65, i32 0, i32 3, !dbg !4911
  %66 = load i8, i8* %log2_chroma_h, align 2, !dbg !4911
  %conv89 = zext i8 %66 to i32, !dbg !4910
  %67 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4912
  %vshift90 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %67, i32 0, i32 60, !dbg !4913
  %arrayidx91 = getelementptr inbounds [3 x i32], [3 x i32]* %vshift90, i64 0, i64 1, !dbg !4912
  store i32 %conv89, i32* %arrayidx91, align 4, !dbg !4914
  %68 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4915
  %vshift92 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %68, i32 0, i32 60, !dbg !4916
  %arrayidx93 = getelementptr inbounds [3 x i32], [3 x i32]* %vshift92, i64 0, i64 2, !dbg !4915
  store i32 %conv89, i32* %arrayidx93, align 4, !dbg !4917
  %69 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4918
  %bit_depth94 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %69, i32 0, i32 5, !dbg !4919
  %70 = load i32, i32* %bit_depth94, align 4, !dbg !4919
  %cmp95 = icmp sgt i32 %70, 8, !dbg !4920
  %conv96 = zext i1 %cmp95 to i32, !dbg !4920
  %71 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !4921
  %pixel_shift = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %71, i32 0, i32 7, !dbg !4922
  store i32 %conv96, i32* %pixel_shift, align 4, !dbg !4923
  store i32 0, i32* %retval, align 4, !dbg !4924
  br label %return, !dbg !4924

return:                                           ; preds = %if.end83, %if.then82, %sw.default
  %72 = load i32, i32* %retval, align 4, !dbg !4925
  ret i32 %72, !dbg !4925
}

; Function Attrs: nounwind uwtable
define internal void @set_default_scaling_list_data(%struct.ScalingList* %sl) #0 !dbg !4926 {
entry:
  %sl.addr = alloca %struct.ScalingList*, align 8
  %matrixId = alloca i32, align 4
  store %struct.ScalingList* %sl, %struct.ScalingList** %sl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScalingList** %sl.addr, metadata !4930, metadata !1892), !dbg !4931
  call void @llvm.dbg.declare(metadata i32* %matrixId, metadata !4932, metadata !1892), !dbg !4933
  store i32 0, i32* %matrixId, align 4, !dbg !4934
  br label %for.cond, !dbg !4936

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %matrixId, align 4, !dbg !4937
  %cmp = icmp slt i32 %0, 6, !dbg !4940
  br i1 %cmp, label %for.body, label %for.end, !dbg !4941

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %matrixId, align 4, !dbg !4942
  %idxprom = sext i32 %1 to i64, !dbg !4944
  %2 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4944
  %sl1 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %2, i32 0, i32 0, !dbg !4945
  %arrayidx = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl1, i64 0, i64 0, !dbg !4944
  %arrayidx2 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx, i64 0, i64 %idxprom, !dbg !4944
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx2, i32 0, i32 0, !dbg !4946
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 16, i64 16, i32 1, i1 false), !dbg !4946
  %3 = load i32, i32* %matrixId, align 4, !dbg !4947
  %idxprom3 = sext i32 %3 to i64, !dbg !4948
  %4 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4948
  %sl_dc = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %4, i32 0, i32 1, !dbg !4949
  %arrayidx4 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %sl_dc, i64 0, i64 0, !dbg !4948
  %arrayidx5 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx4, i64 0, i64 %idxprom3, !dbg !4948
  store i8 16, i8* %arrayidx5, align 1, !dbg !4950
  %5 = load i32, i32* %matrixId, align 4, !dbg !4951
  %idxprom6 = sext i32 %5 to i64, !dbg !4952
  %6 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4952
  %sl_dc7 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %6, i32 0, i32 1, !dbg !4953
  %arrayidx8 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %sl_dc7, i64 0, i64 1, !dbg !4952
  %arrayidx9 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx8, i64 0, i64 %idxprom6, !dbg !4952
  store i8 16, i8* %arrayidx9, align 1, !dbg !4954
  br label %for.inc, !dbg !4955

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %matrixId, align 4, !dbg !4956
  %inc = add nsw i32 %7, 1, !dbg !4956
  store i32 %inc, i32* %matrixId, align 4, !dbg !4956
  br label %for.cond, !dbg !4958, !llvm.loop !4959

for.end:                                          ; preds = %for.cond
  %8 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4961
  %sl10 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %8, i32 0, i32 0, !dbg !4962
  %arrayidx11 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl10, i64 0, i64 1, !dbg !4961
  %arrayidx12 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx11, i64 0, i64 0, !dbg !4961
  %arraydecay13 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx12, i32 0, i32 0, !dbg !4963
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay13, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_intra, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !4963
  %9 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4964
  %sl14 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %9, i32 0, i32 0, !dbg !4965
  %arrayidx15 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl14, i64 0, i64 1, !dbg !4964
  %arrayidx16 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx15, i64 0, i64 1, !dbg !4964
  %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx16, i32 0, i32 0, !dbg !4966
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay17, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_intra, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !4966
  %10 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4967
  %sl18 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %10, i32 0, i32 0, !dbg !4968
  %arrayidx19 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl18, i64 0, i64 1, !dbg !4967
  %arrayidx20 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx19, i64 0, i64 2, !dbg !4967
  %arraydecay21 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx20, i32 0, i32 0, !dbg !4969
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay21, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_intra, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !4969
  %11 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4970
  %sl22 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %11, i32 0, i32 0, !dbg !4971
  %arrayidx23 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl22, i64 0, i64 1, !dbg !4970
  %arrayidx24 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx23, i64 0, i64 3, !dbg !4970
  %arraydecay25 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx24, i32 0, i32 0, !dbg !4972
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay25, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_inter, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !4972
  %12 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4973
  %sl26 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %12, i32 0, i32 0, !dbg !4974
  %arrayidx27 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl26, i64 0, i64 1, !dbg !4973
  %arrayidx28 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx27, i64 0, i64 4, !dbg !4973
  %arraydecay29 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx28, i32 0, i32 0, !dbg !4975
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay29, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_inter, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !4975
  %13 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4976
  %sl30 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %13, i32 0, i32 0, !dbg !4977
  %arrayidx31 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl30, i64 0, i64 1, !dbg !4976
  %arrayidx32 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx31, i64 0, i64 5, !dbg !4976
  %arraydecay33 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx32, i32 0, i32 0, !dbg !4978
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay33, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_inter, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !4978
  %14 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4979
  %sl34 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %14, i32 0, i32 0, !dbg !4980
  %arrayidx35 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl34, i64 0, i64 2, !dbg !4979
  %arrayidx36 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx35, i64 0, i64 0, !dbg !4979
  %arraydecay37 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx36, i32 0, i32 0, !dbg !4981
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay37, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_intra, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !4981
  %15 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4982
  %sl38 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %15, i32 0, i32 0, !dbg !4983
  %arrayidx39 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl38, i64 0, i64 2, !dbg !4982
  %arrayidx40 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx39, i64 0, i64 1, !dbg !4982
  %arraydecay41 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx40, i32 0, i32 0, !dbg !4984
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay41, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_intra, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !4984
  %16 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4985
  %sl42 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %16, i32 0, i32 0, !dbg !4986
  %arrayidx43 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl42, i64 0, i64 2, !dbg !4985
  %arrayidx44 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx43, i64 0, i64 2, !dbg !4985
  %arraydecay45 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx44, i32 0, i32 0, !dbg !4987
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay45, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_intra, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !4987
  %17 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4988
  %sl46 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %17, i32 0, i32 0, !dbg !4989
  %arrayidx47 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl46, i64 0, i64 2, !dbg !4988
  %arrayidx48 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx47, i64 0, i64 3, !dbg !4988
  %arraydecay49 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx48, i32 0, i32 0, !dbg !4990
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay49, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_inter, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !4990
  %18 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4991
  %sl50 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %18, i32 0, i32 0, !dbg !4992
  %arrayidx51 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl50, i64 0, i64 2, !dbg !4991
  %arrayidx52 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx51, i64 0, i64 4, !dbg !4991
  %arraydecay53 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx52, i32 0, i32 0, !dbg !4993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay53, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_inter, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !4993
  %19 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4994
  %sl54 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %19, i32 0, i32 0, !dbg !4995
  %arrayidx55 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl54, i64 0, i64 2, !dbg !4994
  %arrayidx56 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx55, i64 0, i64 5, !dbg !4994
  %arraydecay57 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx56, i32 0, i32 0, !dbg !4996
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay57, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_inter, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !4996
  %20 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !4997
  %sl58 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %20, i32 0, i32 0, !dbg !4998
  %arrayidx59 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl58, i64 0, i64 3, !dbg !4997
  %arrayidx60 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx59, i64 0, i64 0, !dbg !4997
  %arraydecay61 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx60, i32 0, i32 0, !dbg !4999
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay61, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_intra, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !4999
  %21 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5000
  %sl62 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %21, i32 0, i32 0, !dbg !5001
  %arrayidx63 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl62, i64 0, i64 3, !dbg !5000
  %arrayidx64 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx63, i64 0, i64 1, !dbg !5000
  %arraydecay65 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx64, i32 0, i32 0, !dbg !5002
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay65, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_intra, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !5002
  %22 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5003
  %sl66 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %22, i32 0, i32 0, !dbg !5004
  %arrayidx67 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl66, i64 0, i64 3, !dbg !5003
  %arrayidx68 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx67, i64 0, i64 2, !dbg !5003
  %arraydecay69 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx68, i32 0, i32 0, !dbg !5005
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay69, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_intra, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !5005
  %23 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5006
  %sl70 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %23, i32 0, i32 0, !dbg !5007
  %arrayidx71 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl70, i64 0, i64 3, !dbg !5006
  %arrayidx72 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx71, i64 0, i64 3, !dbg !5006
  %arraydecay73 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx72, i32 0, i32 0, !dbg !5008
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay73, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_inter, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !5008
  %24 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5009
  %sl74 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %24, i32 0, i32 0, !dbg !5010
  %arrayidx75 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl74, i64 0, i64 3, !dbg !5009
  %arrayidx76 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx75, i64 0, i64 4, !dbg !5009
  %arraydecay77 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx76, i32 0, i32 0, !dbg !5011
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay77, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_inter, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !5011
  %25 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5012
  %sl78 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %25, i32 0, i32 0, !dbg !5013
  %arrayidx79 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl78, i64 0, i64 3, !dbg !5012
  %arrayidx80 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx79, i64 0, i64 5, !dbg !5012
  %arraydecay81 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx80, i32 0, i32 0, !dbg !5014
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay81, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @default_scaling_list_inter, i32 0, i32 0), i64 64, i32 1, i1 false), !dbg !5014
  ret void, !dbg !5015
}

; Function Attrs: nounwind uwtable
define internal i32 @scaling_list_data(%struct.GetBitContext* %gb, %struct.AVCodecContext* %avctx, %struct.ScalingList* %sl, %struct.HEVCSPS* %sps) #0 !dbg !5016 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %sl.addr = alloca %struct.ScalingList*, align 8
  %sps.addr = alloca %struct.HEVCSPS*, align 8
  %scaling_list_pred_mode_flag = alloca i8, align 1
  %scaling_list_dc_coef = alloca [2 x [6 x i32]], align 16
  %size_id = alloca i32, align 4
  %matrix_id = alloca i32, align 4
  %pos = alloca i32, align 4
  %i = alloca i32, align 4
  %delta = alloca i32, align 4
  %next_coef = alloca i32, align 4
  %coef_num = alloca i32, align 4
  %scaling_list_delta_coef = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5019, metadata !1892), !dbg !5020
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5021, metadata !1892), !dbg !5022
  store %struct.ScalingList* %sl, %struct.ScalingList** %sl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScalingList** %sl.addr, metadata !5023, metadata !1892), !dbg !5024
  store %struct.HEVCSPS* %sps, %struct.HEVCSPS** %sps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCSPS** %sps.addr, metadata !5025, metadata !1892), !dbg !5026
  call void @llvm.dbg.declare(metadata i8* %scaling_list_pred_mode_flag, metadata !5027, metadata !1892), !dbg !5028
  call void @llvm.dbg.declare(metadata [2 x [6 x i32]]* %scaling_list_dc_coef, metadata !5029, metadata !1892), !dbg !5031
  call void @llvm.dbg.declare(metadata i32* %size_id, metadata !5032, metadata !1892), !dbg !5033
  call void @llvm.dbg.declare(metadata i32* %matrix_id, metadata !5034, metadata !1892), !dbg !5035
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5036, metadata !1892), !dbg !5037
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5038, metadata !1892), !dbg !5039
  store i32 0, i32* %size_id, align 4, !dbg !5040
  br label %for.cond, !dbg !5042

for.cond:                                         ; preds = %for.inc115, %entry
  %0 = load i32, i32* %size_id, align 4, !dbg !5043
  %cmp = icmp slt i32 %0, 4, !dbg !5046
  br i1 %cmp, label %for.body, label %for.end117, !dbg !5047

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %matrix_id, align 4, !dbg !5048
  br label %for.cond1, !dbg !5050

for.cond1:                                        ; preds = %for.inc109, %for.body
  %1 = load i32, i32* %matrix_id, align 4, !dbg !5051
  %cmp2 = icmp slt i32 %1, 6, !dbg !5054
  br i1 %cmp2, label %for.body3, label %for.end114, !dbg !5055

for.body3:                                        ; preds = %for.cond1
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5056
  %call = call i32 @get_bits1(%struct.GetBitContext* %2), !dbg !5058
  %conv = trunc i32 %call to i8, !dbg !5058
  store i8 %conv, i8* %scaling_list_pred_mode_flag, align 1, !dbg !5059
  %3 = load i8, i8* %scaling_list_pred_mode_flag, align 1, !dbg !5060
  %tobool = icmp ne i8 %3, 0, !dbg !5060
  br i1 %tobool, label %if.else, label %if.then, !dbg !5062

if.then:                                          ; preds = %for.body3
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !5063, metadata !1892), !dbg !5065
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5066
  %call4 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %4), !dbg !5067
  store i32 %call4, i32* %delta, align 4, !dbg !5065
  %5 = load i32, i32* %delta, align 4, !dbg !5068
  %tobool5 = icmp ne i32 %5, 0, !dbg !5068
  br i1 %tobool5, label %if.then6, label %if.end41, !dbg !5070

if.then6:                                         ; preds = %if.then
  %6 = load i32, i32* %size_id, align 4, !dbg !5071
  %cmp7 = icmp eq i32 %6, 3, !dbg !5073
  %cond = select i1 %cmp7, i32 3, i32 1, !dbg !5074
  %7 = load i32, i32* %delta, align 4, !dbg !5075
  %mul = mul i32 %7, %cond, !dbg !5075
  store i32 %mul, i32* %delta, align 4, !dbg !5075
  %8 = load i32, i32* %matrix_id, align 4, !dbg !5076
  %9 = load i32, i32* %delta, align 4, !dbg !5078
  %cmp9 = icmp ult i32 %8, %9, !dbg !5079
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !5080

if.then11:                                        ; preds = %if.then6
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5081
  %11 = bitcast %struct.AVCodecContext* %10 to i8*, !dbg !5081
  %12 = load i32, i32* %delta, align 4, !dbg !5083
  call void (i8*, i32, i8*, ...) @av_log(i8* %11, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.73, i32 0, i32 0), i32 %12), !dbg !5084
  store i32 -1094995529, i32* %retval, align 4, !dbg !5085
  br label %return, !dbg !5085

if.end:                                           ; preds = %if.then6
  %13 = load i32, i32* %matrix_id, align 4, !dbg !5086
  %idxprom = sext i32 %13 to i64, !dbg !5087
  %14 = load i32, i32* %size_id, align 4, !dbg !5088
  %idxprom12 = sext i32 %14 to i64, !dbg !5087
  %15 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5087
  %sl13 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %15, i32 0, i32 0, !dbg !5089
  %arrayidx = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl13, i64 0, i64 %idxprom12, !dbg !5087
  %arrayidx14 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx, i64 0, i64 %idxprom, !dbg !5087
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx14, i32 0, i32 0, !dbg !5090
  %16 = load i32, i32* %matrix_id, align 4, !dbg !5091
  %17 = load i32, i32* %delta, align 4, !dbg !5092
  %sub = sub i32 %16, %17, !dbg !5093
  %idxprom15 = zext i32 %sub to i64, !dbg !5094
  %18 = load i32, i32* %size_id, align 4, !dbg !5095
  %idxprom16 = sext i32 %18 to i64, !dbg !5094
  %19 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5094
  %sl17 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %19, i32 0, i32 0, !dbg !5096
  %arrayidx18 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl17, i64 0, i64 %idxprom16, !dbg !5094
  %arrayidx19 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx18, i64 0, i64 %idxprom15, !dbg !5094
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx19, i32 0, i32 0, !dbg !5090
  %20 = load i32, i32* %size_id, align 4, !dbg !5097
  %cmp21 = icmp sgt i32 %20, 0, !dbg !5098
  %cond23 = select i1 %cmp21, i32 64, i32 16, !dbg !5097
  %conv24 = sext i32 %cond23 to i64, !dbg !5097
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arraydecay20, i64 %conv24, i32 1, i1 false), !dbg !5090
  %21 = load i32, i32* %size_id, align 4, !dbg !5099
  %cmp25 = icmp sgt i32 %21, 1, !dbg !5101
  br i1 %cmp25, label %if.then27, label %if.end40, !dbg !5102

if.then27:                                        ; preds = %if.end
  %22 = load i32, i32* %matrix_id, align 4, !dbg !5103
  %23 = load i32, i32* %delta, align 4, !dbg !5104
  %sub28 = sub i32 %22, %23, !dbg !5105
  %idxprom29 = zext i32 %sub28 to i64, !dbg !5106
  %24 = load i32, i32* %size_id, align 4, !dbg !5107
  %sub30 = sub nsw i32 %24, 2, !dbg !5108
  %idxprom31 = sext i32 %sub30 to i64, !dbg !5106
  %25 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5106
  %sl_dc = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %25, i32 0, i32 1, !dbg !5109
  %arrayidx32 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %sl_dc, i64 0, i64 %idxprom31, !dbg !5106
  %arrayidx33 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx32, i64 0, i64 %idxprom29, !dbg !5106
  %26 = load i8, i8* %arrayidx33, align 1, !dbg !5106
  %27 = load i32, i32* %matrix_id, align 4, !dbg !5110
  %idxprom34 = sext i32 %27 to i64, !dbg !5111
  %28 = load i32, i32* %size_id, align 4, !dbg !5112
  %sub35 = sub nsw i32 %28, 2, !dbg !5113
  %idxprom36 = sext i32 %sub35 to i64, !dbg !5111
  %29 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5111
  %sl_dc37 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %29, i32 0, i32 1, !dbg !5114
  %arrayidx38 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %sl_dc37, i64 0, i64 %idxprom36, !dbg !5111
  %arrayidx39 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx38, i64 0, i64 %idxprom34, !dbg !5111
  store i8 %26, i8* %arrayidx39, align 1, !dbg !5115
  br label %if.end40, !dbg !5111

if.end40:                                         ; preds = %if.then27, %if.end
  br label %if.end41, !dbg !5116

if.end41:                                         ; preds = %if.end40, %if.then
  br label %if.end108, !dbg !5117

if.else:                                          ; preds = %for.body3
  call void @llvm.dbg.declare(metadata i32* %next_coef, metadata !5118, metadata !1892), !dbg !5120
  call void @llvm.dbg.declare(metadata i32* %coef_num, metadata !5121, metadata !1892), !dbg !5122
  call void @llvm.dbg.declare(metadata i32* %scaling_list_delta_coef, metadata !5123, metadata !1892), !dbg !5124
  store i32 8, i32* %next_coef, align 4, !dbg !5125
  %30 = load i32, i32* %size_id, align 4, !dbg !5126
  %shl = shl i32 %30, 1, !dbg !5127
  %add = add nsw i32 4, %shl, !dbg !5128
  %shl42 = shl i32 1, %add, !dbg !5129
  %cmp43 = icmp sgt i32 64, %shl42, !dbg !5130
  br i1 %cmp43, label %cond.true, label %cond.false, !dbg !5131

cond.true:                                        ; preds = %if.else
  %31 = load i32, i32* %size_id, align 4, !dbg !5132
  %shl45 = shl i32 %31, 1, !dbg !5134
  %add46 = add nsw i32 4, %shl45, !dbg !5135
  %shl47 = shl i32 1, %add46, !dbg !5136
  br label %cond.end, !dbg !5137

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !5138

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond48 = phi i32 [ %shl47, %cond.true ], [ 64, %cond.false ], !dbg !5140
  store i32 %cond48, i32* %coef_num, align 4, !dbg !5142
  %32 = load i32, i32* %size_id, align 4, !dbg !5143
  %cmp49 = icmp sgt i32 %32, 1, !dbg !5145
  br i1 %cmp49, label %if.then51, label %if.end71, !dbg !5146

if.then51:                                        ; preds = %cond.end
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5147
  %call52 = call i32 @get_se_golomb(%struct.GetBitContext* %33), !dbg !5149
  %add53 = add nsw i32 %call52, 8, !dbg !5150
  %34 = load i32, i32* %matrix_id, align 4, !dbg !5151
  %idxprom54 = sext i32 %34 to i64, !dbg !5152
  %35 = load i32, i32* %size_id, align 4, !dbg !5153
  %sub55 = sub nsw i32 %35, 2, !dbg !5154
  %idxprom56 = sext i32 %sub55 to i64, !dbg !5152
  %arrayidx57 = getelementptr inbounds [2 x [6 x i32]], [2 x [6 x i32]]* %scaling_list_dc_coef, i64 0, i64 %idxprom56, !dbg !5152
  %arrayidx58 = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx57, i64 0, i64 %idxprom54, !dbg !5152
  store i32 %add53, i32* %arrayidx58, align 4, !dbg !5155
  %36 = load i32, i32* %matrix_id, align 4, !dbg !5156
  %idxprom59 = sext i32 %36 to i64, !dbg !5157
  %37 = load i32, i32* %size_id, align 4, !dbg !5158
  %sub60 = sub nsw i32 %37, 2, !dbg !5159
  %idxprom61 = sext i32 %sub60 to i64, !dbg !5157
  %arrayidx62 = getelementptr inbounds [2 x [6 x i32]], [2 x [6 x i32]]* %scaling_list_dc_coef, i64 0, i64 %idxprom61, !dbg !5157
  %arrayidx63 = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx62, i64 0, i64 %idxprom59, !dbg !5157
  %38 = load i32, i32* %arrayidx63, align 4, !dbg !5157
  store i32 %38, i32* %next_coef, align 4, !dbg !5160
  %39 = load i32, i32* %next_coef, align 4, !dbg !5161
  %conv64 = trunc i32 %39 to i8, !dbg !5161
  %40 = load i32, i32* %matrix_id, align 4, !dbg !5162
  %idxprom65 = sext i32 %40 to i64, !dbg !5163
  %41 = load i32, i32* %size_id, align 4, !dbg !5164
  %sub66 = sub nsw i32 %41, 2, !dbg !5165
  %idxprom67 = sext i32 %sub66 to i64, !dbg !5163
  %42 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5163
  %sl_dc68 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %42, i32 0, i32 1, !dbg !5166
  %arrayidx69 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %sl_dc68, i64 0, i64 %idxprom67, !dbg !5163
  %arrayidx70 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx69, i64 0, i64 %idxprom65, !dbg !5163
  store i8 %conv64, i8* %arrayidx70, align 1, !dbg !5167
  br label %if.end71, !dbg !5168

if.end71:                                         ; preds = %if.then51, %cond.end
  store i32 0, i32* %i, align 4, !dbg !5169
  br label %for.cond72, !dbg !5171

for.cond72:                                       ; preds = %for.inc, %if.end71
  %43 = load i32, i32* %i, align 4, !dbg !5172
  %44 = load i32, i32* %coef_num, align 4, !dbg !5175
  %cmp73 = icmp slt i32 %43, %44, !dbg !5176
  br i1 %cmp73, label %for.body75, label %for.end, !dbg !5177

for.body75:                                       ; preds = %for.cond72
  %45 = load i32, i32* %size_id, align 4, !dbg !5178
  %cmp76 = icmp eq i32 %45, 0, !dbg !5181
  br i1 %cmp76, label %if.then78, label %if.else87, !dbg !5182

if.then78:                                        ; preds = %for.body75
  %46 = load i32, i32* %i, align 4, !dbg !5183
  %idxprom79 = sext i32 %46 to i64, !dbg !5184
  %arrayidx80 = getelementptr inbounds [16 x i8], [16 x i8]* @ff_hevc_diag_scan4x4_y, i64 0, i64 %idxprom79, !dbg !5184
  %47 = load i8, i8* %arrayidx80, align 1, !dbg !5184
  %conv81 = zext i8 %47 to i32, !dbg !5184
  %mul82 = mul nsw i32 4, %conv81, !dbg !5185
  %48 = load i32, i32* %i, align 4, !dbg !5186
  %idxprom83 = sext i32 %48 to i64, !dbg !5187
  %arrayidx84 = getelementptr inbounds [16 x i8], [16 x i8]* @ff_hevc_diag_scan4x4_x, i64 0, i64 %idxprom83, !dbg !5187
  %49 = load i8, i8* %arrayidx84, align 1, !dbg !5187
  %conv85 = zext i8 %49 to i32, !dbg !5187
  %add86 = add nsw i32 %mul82, %conv85, !dbg !5188
  store i32 %add86, i32* %pos, align 4, !dbg !5189
  br label %if.end96, !dbg !5190

if.else87:                                        ; preds = %for.body75
  %50 = load i32, i32* %i, align 4, !dbg !5191
  %idxprom88 = sext i32 %50 to i64, !dbg !5192
  %arrayidx89 = getelementptr inbounds [64 x i8], [64 x i8]* @ff_hevc_diag_scan8x8_y, i64 0, i64 %idxprom88, !dbg !5192
  %51 = load i8, i8* %arrayidx89, align 1, !dbg !5192
  %conv90 = zext i8 %51 to i32, !dbg !5192
  %mul91 = mul nsw i32 8, %conv90, !dbg !5193
  %52 = load i32, i32* %i, align 4, !dbg !5194
  %idxprom92 = sext i32 %52 to i64, !dbg !5195
  %arrayidx93 = getelementptr inbounds [64 x i8], [64 x i8]* @ff_hevc_diag_scan8x8_x, i64 0, i64 %idxprom92, !dbg !5195
  %53 = load i8, i8* %arrayidx93, align 1, !dbg !5195
  %conv94 = zext i8 %53 to i32, !dbg !5195
  %add95 = add nsw i32 %mul91, %conv94, !dbg !5196
  store i32 %add95, i32* %pos, align 4, !dbg !5197
  br label %if.end96

if.end96:                                         ; preds = %if.else87, %if.then78
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5198
  %call97 = call i32 @get_se_golomb(%struct.GetBitContext* %54), !dbg !5199
  store i32 %call97, i32* %scaling_list_delta_coef, align 4, !dbg !5200
  %55 = load i32, i32* %next_coef, align 4, !dbg !5201
  %add98 = add i32 %55, 256, !dbg !5202
  %56 = load i32, i32* %scaling_list_delta_coef, align 4, !dbg !5203
  %add99 = add i32 %add98, %56, !dbg !5204
  %rem = urem i32 %add99, 256, !dbg !5205
  store i32 %rem, i32* %next_coef, align 4, !dbg !5206
  %57 = load i32, i32* %next_coef, align 4, !dbg !5207
  %conv100 = trunc i32 %57 to i8, !dbg !5207
  %58 = load i32, i32* %pos, align 4, !dbg !5208
  %idxprom101 = sext i32 %58 to i64, !dbg !5209
  %59 = load i32, i32* %matrix_id, align 4, !dbg !5210
  %idxprom102 = sext i32 %59 to i64, !dbg !5209
  %60 = load i32, i32* %size_id, align 4, !dbg !5211
  %idxprom103 = sext i32 %60 to i64, !dbg !5209
  %61 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5209
  %sl104 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %61, i32 0, i32 0, !dbg !5212
  %arrayidx105 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl104, i64 0, i64 %idxprom103, !dbg !5209
  %arrayidx106 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx105, i64 0, i64 %idxprom102, !dbg !5209
  %arrayidx107 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx106, i64 0, i64 %idxprom101, !dbg !5209
  store i8 %conv100, i8* %arrayidx107, align 1, !dbg !5213
  br label %for.inc, !dbg !5214

for.inc:                                          ; preds = %if.end96
  %62 = load i32, i32* %i, align 4, !dbg !5215
  %inc = add nsw i32 %62, 1, !dbg !5215
  store i32 %inc, i32* %i, align 4, !dbg !5215
  br label %for.cond72, !dbg !5217, !llvm.loop !5218

for.end:                                          ; preds = %for.cond72
  br label %if.end108

if.end108:                                        ; preds = %for.end, %if.end41
  br label %for.inc109, !dbg !5220

for.inc109:                                       ; preds = %if.end108
  %63 = load i32, i32* %size_id, align 4, !dbg !5221
  %cmp110 = icmp eq i32 %63, 3, !dbg !5223
  %cond112 = select i1 %cmp110, i32 3, i32 1, !dbg !5224
  %64 = load i32, i32* %matrix_id, align 4, !dbg !5225
  %add113 = add nsw i32 %64, %cond112, !dbg !5225
  store i32 %add113, i32* %matrix_id, align 4, !dbg !5225
  br label %for.cond1, !dbg !5226, !llvm.loop !5227

for.end114:                                       ; preds = %for.cond1
  br label %for.inc115, !dbg !5229

for.inc115:                                       ; preds = %for.end114
  %65 = load i32, i32* %size_id, align 4, !dbg !5231
  %inc116 = add nsw i32 %65, 1, !dbg !5231
  store i32 %inc116, i32* %size_id, align 4, !dbg !5231
  br label %for.cond, !dbg !5233, !llvm.loop !5234

for.end117:                                       ; preds = %for.cond
  %66 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !5236
  %chroma_format_idc = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %66, i32 0, i32 1, !dbg !5238
  %67 = load i32, i32* %chroma_format_idc, align 4, !dbg !5238
  %cmp118 = icmp eq i32 %67, 3, !dbg !5239
  br i1 %cmp118, label %if.then120, label %if.end192, !dbg !5240

if.then120:                                       ; preds = %for.end117
  store i32 0, i32* %i, align 4, !dbg !5241
  br label %for.cond121, !dbg !5244

for.cond121:                                      ; preds = %for.inc165, %if.then120
  %68 = load i32, i32* %i, align 4, !dbg !5245
  %cmp122 = icmp slt i32 %68, 64, !dbg !5248
  br i1 %cmp122, label %for.body124, label %for.end167, !dbg !5249

for.body124:                                      ; preds = %for.cond121
  %69 = load i32, i32* %i, align 4, !dbg !5250
  %idxprom125 = sext i32 %69 to i64, !dbg !5252
  %70 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5252
  %sl126 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %70, i32 0, i32 0, !dbg !5253
  %arrayidx127 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl126, i64 0, i64 2, !dbg !5252
  %arrayidx128 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx127, i64 0, i64 1, !dbg !5252
  %arrayidx129 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx128, i64 0, i64 %idxprom125, !dbg !5252
  %71 = load i8, i8* %arrayidx129, align 1, !dbg !5252
  %72 = load i32, i32* %i, align 4, !dbg !5254
  %idxprom130 = sext i32 %72 to i64, !dbg !5255
  %73 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5255
  %sl131 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %73, i32 0, i32 0, !dbg !5256
  %arrayidx132 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl131, i64 0, i64 3, !dbg !5255
  %arrayidx133 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx132, i64 0, i64 1, !dbg !5255
  %arrayidx134 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx133, i64 0, i64 %idxprom130, !dbg !5255
  store i8 %71, i8* %arrayidx134, align 1, !dbg !5257
  %74 = load i32, i32* %i, align 4, !dbg !5258
  %idxprom135 = sext i32 %74 to i64, !dbg !5259
  %75 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5259
  %sl136 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %75, i32 0, i32 0, !dbg !5260
  %arrayidx137 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl136, i64 0, i64 2, !dbg !5259
  %arrayidx138 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx137, i64 0, i64 2, !dbg !5259
  %arrayidx139 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx138, i64 0, i64 %idxprom135, !dbg !5259
  %76 = load i8, i8* %arrayidx139, align 1, !dbg !5259
  %77 = load i32, i32* %i, align 4, !dbg !5261
  %idxprom140 = sext i32 %77 to i64, !dbg !5262
  %78 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5262
  %sl141 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %78, i32 0, i32 0, !dbg !5263
  %arrayidx142 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl141, i64 0, i64 3, !dbg !5262
  %arrayidx143 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx142, i64 0, i64 2, !dbg !5262
  %arrayidx144 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx143, i64 0, i64 %idxprom140, !dbg !5262
  store i8 %76, i8* %arrayidx144, align 1, !dbg !5264
  %79 = load i32, i32* %i, align 4, !dbg !5265
  %idxprom145 = sext i32 %79 to i64, !dbg !5266
  %80 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5266
  %sl146 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %80, i32 0, i32 0, !dbg !5267
  %arrayidx147 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl146, i64 0, i64 2, !dbg !5266
  %arrayidx148 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx147, i64 0, i64 4, !dbg !5266
  %arrayidx149 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx148, i64 0, i64 %idxprom145, !dbg !5266
  %81 = load i8, i8* %arrayidx149, align 1, !dbg !5266
  %82 = load i32, i32* %i, align 4, !dbg !5268
  %idxprom150 = sext i32 %82 to i64, !dbg !5269
  %83 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5269
  %sl151 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %83, i32 0, i32 0, !dbg !5270
  %arrayidx152 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl151, i64 0, i64 3, !dbg !5269
  %arrayidx153 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx152, i64 0, i64 4, !dbg !5269
  %arrayidx154 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx153, i64 0, i64 %idxprom150, !dbg !5269
  store i8 %81, i8* %arrayidx154, align 1, !dbg !5271
  %84 = load i32, i32* %i, align 4, !dbg !5272
  %idxprom155 = sext i32 %84 to i64, !dbg !5273
  %85 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5273
  %sl156 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %85, i32 0, i32 0, !dbg !5274
  %arrayidx157 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl156, i64 0, i64 2, !dbg !5273
  %arrayidx158 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx157, i64 0, i64 5, !dbg !5273
  %arrayidx159 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx158, i64 0, i64 %idxprom155, !dbg !5273
  %86 = load i8, i8* %arrayidx159, align 1, !dbg !5273
  %87 = load i32, i32* %i, align 4, !dbg !5275
  %idxprom160 = sext i32 %87 to i64, !dbg !5276
  %88 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5276
  %sl161 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %88, i32 0, i32 0, !dbg !5277
  %arrayidx162 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl161, i64 0, i64 3, !dbg !5276
  %arrayidx163 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx162, i64 0, i64 5, !dbg !5276
  %arrayidx164 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx163, i64 0, i64 %idxprom160, !dbg !5276
  store i8 %86, i8* %arrayidx164, align 1, !dbg !5278
  br label %for.inc165, !dbg !5279

for.inc165:                                       ; preds = %for.body124
  %89 = load i32, i32* %i, align 4, !dbg !5280
  %inc166 = add nsw i32 %89, 1, !dbg !5280
  store i32 %inc166, i32* %i, align 4, !dbg !5280
  br label %for.cond121, !dbg !5282, !llvm.loop !5283

for.end167:                                       ; preds = %for.cond121
  %90 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5285
  %sl_dc168 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %90, i32 0, i32 1, !dbg !5286
  %arrayidx169 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %sl_dc168, i64 0, i64 0, !dbg !5285
  %arrayidx170 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx169, i64 0, i64 1, !dbg !5285
  %91 = load i8, i8* %arrayidx170, align 1, !dbg !5285
  %92 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5287
  %sl_dc171 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %92, i32 0, i32 1, !dbg !5288
  %arrayidx172 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %sl_dc171, i64 0, i64 1, !dbg !5287
  %arrayidx173 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx172, i64 0, i64 1, !dbg !5287
  store i8 %91, i8* %arrayidx173, align 1, !dbg !5289
  %93 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5290
  %sl_dc174 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %93, i32 0, i32 1, !dbg !5291
  %arrayidx175 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %sl_dc174, i64 0, i64 0, !dbg !5290
  %arrayidx176 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx175, i64 0, i64 2, !dbg !5290
  %94 = load i8, i8* %arrayidx176, align 1, !dbg !5290
  %95 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5292
  %sl_dc177 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %95, i32 0, i32 1, !dbg !5293
  %arrayidx178 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %sl_dc177, i64 0, i64 1, !dbg !5292
  %arrayidx179 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx178, i64 0, i64 2, !dbg !5292
  store i8 %94, i8* %arrayidx179, align 1, !dbg !5294
  %96 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5295
  %sl_dc180 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %96, i32 0, i32 1, !dbg !5296
  %arrayidx181 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %sl_dc180, i64 0, i64 0, !dbg !5295
  %arrayidx182 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx181, i64 0, i64 4, !dbg !5295
  %97 = load i8, i8* %arrayidx182, align 1, !dbg !5295
  %98 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5297
  %sl_dc183 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %98, i32 0, i32 1, !dbg !5298
  %arrayidx184 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %sl_dc183, i64 0, i64 1, !dbg !5297
  %arrayidx185 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx184, i64 0, i64 4, !dbg !5297
  store i8 %97, i8* %arrayidx185, align 1, !dbg !5299
  %99 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5300
  %sl_dc186 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %99, i32 0, i32 1, !dbg !5301
  %arrayidx187 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %sl_dc186, i64 0, i64 0, !dbg !5300
  %arrayidx188 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx187, i64 0, i64 5, !dbg !5300
  %100 = load i8, i8* %arrayidx188, align 1, !dbg !5300
  %101 = load %struct.ScalingList*, %struct.ScalingList** %sl.addr, align 8, !dbg !5302
  %sl_dc189 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %101, i32 0, i32 1, !dbg !5303
  %arrayidx190 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %sl_dc189, i64 0, i64 1, !dbg !5302
  %arrayidx191 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx190, i64 0, i64 5, !dbg !5302
  store i8 %100, i8* %arrayidx191, align 1, !dbg !5304
  br label %if.end192, !dbg !5305

if.end192:                                        ; preds = %for.end167, %for.end117
  store i32 0, i32* %retval, align 4, !dbg !5306
  br label %return, !dbg !5306

return:                                           ; preds = %if.end192, %if.then11
  %102 = load i32, i32* %retval, align 4, !dbg !5307
  ret i32 %102, !dbg !5307
}

; Function Attrs: nounwind uwtable
define internal void @decode_vui(%struct.GetBitContext* %gb, %struct.AVCodecContext* %avctx, i32 %apply_defdispwin, %struct.HEVCSPS* %sps) #0 !dbg !5308 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %apply_defdispwin.addr = alloca i32, align 4
  %sps.addr = alloca %struct.HEVCSPS*, align 8
  %backup_vui = alloca %struct.VUI, align 4
  %vui = alloca %struct.VUI*, align 8
  %backup = alloca %struct.GetBitContext, align 8
  %sar_present = alloca i32, align 4
  %alt = alloca i32, align 4
  %sar_idx = alloca i8, align 1
  %vert_mult = alloca i32, align 4
  %horiz_mult = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5311, metadata !1892), !dbg !5312
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5313, metadata !1892), !dbg !5314
  store i32 %apply_defdispwin, i32* %apply_defdispwin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %apply_defdispwin.addr, metadata !5315, metadata !1892), !dbg !5316
  store %struct.HEVCSPS* %sps, %struct.HEVCSPS** %sps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCSPS** %sps.addr, metadata !5317, metadata !1892), !dbg !5318
  call void @llvm.dbg.declare(metadata %struct.VUI* %backup_vui, metadata !5319, metadata !1892), !dbg !5320
  call void @llvm.dbg.declare(metadata %struct.VUI** %vui, metadata !5321, metadata !1892), !dbg !5323
  %0 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !5324
  %vui1 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %0, i32 0, i32 14, !dbg !5325
  store %struct.VUI* %vui1, %struct.VUI** %vui, align 8, !dbg !5323
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %backup, metadata !5326, metadata !1892), !dbg !5327
  call void @llvm.dbg.declare(metadata i32* %sar_present, metadata !5328, metadata !1892), !dbg !5329
  call void @llvm.dbg.declare(metadata i32* %alt, metadata !5330, metadata !1892), !dbg !5331
  store i32 0, i32* %alt, align 4, !dbg !5331
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5332
  %2 = bitcast %struct.AVCodecContext* %1 to i8*, !dbg !5332
  call void (i8*, i32, i8*, ...) @av_log(i8* %2, i32 48, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.74, i32 0, i32 0)), !dbg !5333
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5334
  %call = call i32 @get_bits1(%struct.GetBitContext* %3), !dbg !5335
  store i32 %call, i32* %sar_present, align 4, !dbg !5336
  %4 = load i32, i32* %sar_present, align 4, !dbg !5337
  %tobool = icmp ne i32 %4, 0, !dbg !5337
  br i1 %tobool, label %if.then, label %if.end17, !dbg !5339

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sar_idx, metadata !5340, metadata !1892), !dbg !5342
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5343
  %call2 = call i32 @get_bits(%struct.GetBitContext* %5, i32 8), !dbg !5344
  %conv = trunc i32 %call2 to i8, !dbg !5344
  store i8 %conv, i8* %sar_idx, align 1, !dbg !5342
  %6 = load i8, i8* %sar_idx, align 1, !dbg !5345
  %conv3 = zext i8 %6 to i64, !dbg !5345
  %cmp = icmp ult i64 %conv3, 17, !dbg !5347
  br i1 %cmp, label %if.then5, label %if.else, !dbg !5348

if.then5:                                         ; preds = %if.then
  %7 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5349
  %sar = getelementptr inbounds %struct.VUI, %struct.VUI* %7, i32 0, i32 0, !dbg !5350
  %8 = load i8, i8* %sar_idx, align 1, !dbg !5351
  %idxprom = zext i8 %8 to i64, !dbg !5352
  %arrayidx = getelementptr inbounds [17 x %struct.AVRational], [17 x %struct.AVRational]* @vui_sar, i64 0, i64 %idxprom, !dbg !5352
  %9 = bitcast %struct.AVRational* %sar to i8*, !dbg !5352
  %10 = bitcast %struct.AVRational* %arrayidx to i8*, !dbg !5352
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 4, i1 false), !dbg !5352
  br label %if.end16, !dbg !5349

if.else:                                          ; preds = %if.then
  %11 = load i8, i8* %sar_idx, align 1, !dbg !5353
  %conv6 = zext i8 %11 to i32, !dbg !5353
  %cmp7 = icmp eq i32 %conv6, 255, !dbg !5355
  br i1 %cmp7, label %if.then9, label %if.else14, !dbg !5356

if.then9:                                         ; preds = %if.else
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5357
  %call10 = call i32 @get_bits(%struct.GetBitContext* %12, i32 16), !dbg !5359
  %13 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5360
  %sar11 = getelementptr inbounds %struct.VUI, %struct.VUI* %13, i32 0, i32 0, !dbg !5361
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sar11, i32 0, i32 0, !dbg !5362
  store i32 %call10, i32* %num, align 4, !dbg !5363
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5364
  %call12 = call i32 @get_bits(%struct.GetBitContext* %14, i32 16), !dbg !5365
  %15 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5366
  %sar13 = getelementptr inbounds %struct.VUI, %struct.VUI* %15, i32 0, i32 0, !dbg !5367
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sar13, i32 0, i32 1, !dbg !5368
  store i32 %call12, i32* %den, align 4, !dbg !5369
  br label %if.end, !dbg !5370

if.else14:                                        ; preds = %if.else
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5371
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !5371
  %18 = load i8, i8* %sar_idx, align 1, !dbg !5372
  %conv15 = zext i8 %18 to i32, !dbg !5372
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.75, i32 0, i32 0), i32 %conv15), !dbg !5373
  br label %if.end

if.end:                                           ; preds = %if.else14, %if.then9
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then5
  br label %if.end17, !dbg !5374

if.end17:                                         ; preds = %if.end16, %entry
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5375
  %call18 = call i32 @get_bits1(%struct.GetBitContext* %19), !dbg !5376
  %20 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5377
  %overscan_info_present_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %20, i32 0, i32 1, !dbg !5378
  store i32 %call18, i32* %overscan_info_present_flag, align 4, !dbg !5379
  %21 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5380
  %overscan_info_present_flag19 = getelementptr inbounds %struct.VUI, %struct.VUI* %21, i32 0, i32 1, !dbg !5382
  %22 = load i32, i32* %overscan_info_present_flag19, align 4, !dbg !5382
  %tobool20 = icmp ne i32 %22, 0, !dbg !5380
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !5383

if.then21:                                        ; preds = %if.end17
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5384
  %call22 = call i32 @get_bits1(%struct.GetBitContext* %23), !dbg !5385
  %24 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5386
  %overscan_appropriate_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %24, i32 0, i32 2, !dbg !5387
  store i32 %call22, i32* %overscan_appropriate_flag, align 4, !dbg !5388
  br label %if.end23, !dbg !5386

if.end23:                                         ; preds = %if.then21, %if.end17
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5389
  %call24 = call i32 @get_bits1(%struct.GetBitContext* %25), !dbg !5390
  %26 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5391
  %video_signal_type_present_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %26, i32 0, i32 3, !dbg !5392
  store i32 %call24, i32* %video_signal_type_present_flag, align 4, !dbg !5393
  %27 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5394
  %video_signal_type_present_flag25 = getelementptr inbounds %struct.VUI, %struct.VUI* %27, i32 0, i32 3, !dbg !5396
  %28 = load i32, i32* %video_signal_type_present_flag25, align 4, !dbg !5396
  %tobool26 = icmp ne i32 %28, 0, !dbg !5394
  br i1 %tobool26, label %if.then27, label %if.end81, !dbg !5397

if.then27:                                        ; preds = %if.end23
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5398
  %call28 = call i32 @get_bits(%struct.GetBitContext* %29, i32 3), !dbg !5400
  %30 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5401
  %video_format = getelementptr inbounds %struct.VUI, %struct.VUI* %30, i32 0, i32 4, !dbg !5402
  store i32 %call28, i32* %video_format, align 4, !dbg !5403
  %31 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5404
  %call29 = call i32 @get_bits1(%struct.GetBitContext* %31), !dbg !5405
  %32 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5406
  %video_full_range_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %32, i32 0, i32 5, !dbg !5407
  store i32 %call29, i32* %video_full_range_flag, align 4, !dbg !5408
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5409
  %call30 = call i32 @get_bits1(%struct.GetBitContext* %33), !dbg !5410
  %34 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5411
  %colour_description_present_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %34, i32 0, i32 6, !dbg !5412
  store i32 %call30, i32* %colour_description_present_flag, align 4, !dbg !5413
  %35 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5414
  %video_full_range_flag31 = getelementptr inbounds %struct.VUI, %struct.VUI* %35, i32 0, i32 5, !dbg !5416
  %36 = load i32, i32* %video_full_range_flag31, align 4, !dbg !5416
  %tobool32 = icmp ne i32 %36, 0, !dbg !5414
  br i1 %tobool32, label %land.lhs.true, label %if.end37, !dbg !5417

land.lhs.true:                                    ; preds = %if.then27
  %37 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !5418
  %pix_fmt = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %37, i32 0, i32 8, !dbg !5420
  %38 = load i32, i32* %pix_fmt, align 4, !dbg !5420
  %cmp33 = icmp eq i32 %38, 0, !dbg !5421
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !5422

if.then35:                                        ; preds = %land.lhs.true
  %39 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !5423
  %pix_fmt36 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %39, i32 0, i32 8, !dbg !5424
  store i32 12, i32* %pix_fmt36, align 4, !dbg !5425
  br label %if.end37, !dbg !5423

if.end37:                                         ; preds = %if.then35, %land.lhs.true, %if.then27
  %40 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5426
  %colour_description_present_flag38 = getelementptr inbounds %struct.VUI, %struct.VUI* %40, i32 0, i32 6, !dbg !5428
  %41 = load i32, i32* %colour_description_present_flag38, align 4, !dbg !5428
  %tobool39 = icmp ne i32 %41, 0, !dbg !5426
  br i1 %tobool39, label %if.then40, label %if.end80, !dbg !5429

if.then40:                                        ; preds = %if.end37
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5430
  %call41 = call i32 @get_bits(%struct.GetBitContext* %42, i32 8), !dbg !5432
  %conv42 = trunc i32 %call41 to i8, !dbg !5432
  %43 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5433
  %colour_primaries = getelementptr inbounds %struct.VUI, %struct.VUI* %43, i32 0, i32 7, !dbg !5434
  store i8 %conv42, i8* %colour_primaries, align 4, !dbg !5435
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5436
  %call43 = call i32 @get_bits(%struct.GetBitContext* %44, i32 8), !dbg !5437
  %conv44 = trunc i32 %call43 to i8, !dbg !5437
  %45 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5438
  %transfer_characteristic = getelementptr inbounds %struct.VUI, %struct.VUI* %45, i32 0, i32 8, !dbg !5439
  store i8 %conv44, i8* %transfer_characteristic, align 1, !dbg !5440
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5441
  %call45 = call i32 @get_bits(%struct.GetBitContext* %46, i32 8), !dbg !5442
  %conv46 = trunc i32 %call45 to i8, !dbg !5442
  %47 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5443
  %matrix_coeffs = getelementptr inbounds %struct.VUI, %struct.VUI* %47, i32 0, i32 9, !dbg !5444
  store i8 %conv46, i8* %matrix_coeffs, align 2, !dbg !5445
  %48 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5446
  %colour_primaries47 = getelementptr inbounds %struct.VUI, %struct.VUI* %48, i32 0, i32 7, !dbg !5448
  %49 = load i8, i8* %colour_primaries47, align 4, !dbg !5448
  %conv48 = zext i8 %49 to i32, !dbg !5446
  %call49 = call i8* @av_color_primaries_name(i32 %conv48), !dbg !5449
  %tobool50 = icmp ne i8* %call49, null, !dbg !5449
  br i1 %tobool50, label %if.end53, label %if.then51, !dbg !5450

if.then51:                                        ; preds = %if.then40
  %50 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5451
  %colour_primaries52 = getelementptr inbounds %struct.VUI, %struct.VUI* %50, i32 0, i32 7, !dbg !5452
  store i8 2, i8* %colour_primaries52, align 4, !dbg !5453
  br label %if.end53, !dbg !5451

if.end53:                                         ; preds = %if.then51, %if.then40
  %51 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5454
  %transfer_characteristic54 = getelementptr inbounds %struct.VUI, %struct.VUI* %51, i32 0, i32 8, !dbg !5456
  %52 = load i8, i8* %transfer_characteristic54, align 1, !dbg !5456
  %conv55 = zext i8 %52 to i32, !dbg !5454
  %call56 = call i8* @av_color_transfer_name(i32 %conv55), !dbg !5457
  %tobool57 = icmp ne i8* %call56, null, !dbg !5457
  br i1 %tobool57, label %if.end60, label %if.then58, !dbg !5458

if.then58:                                        ; preds = %if.end53
  %53 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5459
  %transfer_characteristic59 = getelementptr inbounds %struct.VUI, %struct.VUI* %53, i32 0, i32 8, !dbg !5460
  store i8 2, i8* %transfer_characteristic59, align 1, !dbg !5461
  br label %if.end60, !dbg !5459

if.end60:                                         ; preds = %if.then58, %if.end53
  %54 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5462
  %matrix_coeffs61 = getelementptr inbounds %struct.VUI, %struct.VUI* %54, i32 0, i32 9, !dbg !5464
  %55 = load i8, i8* %matrix_coeffs61, align 2, !dbg !5464
  %conv62 = zext i8 %55 to i32, !dbg !5462
  %call63 = call i8* @av_color_space_name(i32 %conv62), !dbg !5465
  %tobool64 = icmp ne i8* %call63, null, !dbg !5465
  br i1 %tobool64, label %if.end67, label %if.then65, !dbg !5466

if.then65:                                        ; preds = %if.end60
  %56 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5467
  %matrix_coeffs66 = getelementptr inbounds %struct.VUI, %struct.VUI* %56, i32 0, i32 9, !dbg !5468
  store i8 2, i8* %matrix_coeffs66, align 2, !dbg !5469
  br label %if.end67, !dbg !5467

if.end67:                                         ; preds = %if.then65, %if.end60
  %57 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5470
  %matrix_coeffs68 = getelementptr inbounds %struct.VUI, %struct.VUI* %57, i32 0, i32 9, !dbg !5472
  %58 = load i8, i8* %matrix_coeffs68, align 2, !dbg !5472
  %conv69 = zext i8 %58 to i32, !dbg !5470
  %cmp70 = icmp eq i32 %conv69, 0, !dbg !5473
  br i1 %cmp70, label %if.then72, label %if.end79, !dbg !5474

if.then72:                                        ; preds = %if.end67
  %59 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !5475
  %pix_fmt73 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %59, i32 0, i32 8, !dbg !5477
  %60 = load i32, i32* %pix_fmt73, align 4, !dbg !5477
  switch i32 %60, label %sw.epilog [
    i32 5, label %sw.bb
    i32 70, label %sw.bb75
    i32 133, label %sw.bb77
  ], !dbg !5478

sw.bb:                                            ; preds = %if.then72
  %61 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !5479
  %pix_fmt74 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %61, i32 0, i32 8, !dbg !5481
  store i32 73, i32* %pix_fmt74, align 4, !dbg !5482
  br label %sw.epilog, !dbg !5483

sw.bb75:                                          ; preds = %if.then72
  %62 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !5484
  %pix_fmt76 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %62, i32 0, i32 8, !dbg !5485
  store i32 77, i32* %pix_fmt76, align 4, !dbg !5486
  br label %sw.epilog, !dbg !5487

sw.bb77:                                          ; preds = %if.then72
  %63 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !5488
  %pix_fmt78 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %63, i32 0, i32 8, !dbg !5489
  store i32 137, i32* %pix_fmt78, align 4, !dbg !5490
  br label %sw.epilog, !dbg !5491

sw.epilog:                                        ; preds = %if.then72, %sw.bb77, %sw.bb75, %sw.bb
  br label %if.end79, !dbg !5492

if.end79:                                         ; preds = %sw.epilog, %if.end67
  br label %if.end80, !dbg !5493

if.end80:                                         ; preds = %if.end79, %if.end37
  br label %if.end81, !dbg !5494

if.end81:                                         ; preds = %if.end80, %if.end23
  %64 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5495
  %call82 = call i32 @get_bits1(%struct.GetBitContext* %64), !dbg !5496
  %65 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5497
  %chroma_loc_info_present_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %65, i32 0, i32 10, !dbg !5498
  store i32 %call82, i32* %chroma_loc_info_present_flag, align 4, !dbg !5499
  %66 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5500
  %chroma_loc_info_present_flag83 = getelementptr inbounds %struct.VUI, %struct.VUI* %66, i32 0, i32 10, !dbg !5502
  %67 = load i32, i32* %chroma_loc_info_present_flag83, align 4, !dbg !5502
  %tobool84 = icmp ne i32 %67, 0, !dbg !5500
  br i1 %tobool84, label %if.then85, label %if.end88, !dbg !5503

if.then85:                                        ; preds = %if.end81
  %68 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5504
  %call86 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %68), !dbg !5506
  %69 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5507
  %chroma_sample_loc_type_top_field = getelementptr inbounds %struct.VUI, %struct.VUI* %69, i32 0, i32 11, !dbg !5508
  store i32 %call86, i32* %chroma_sample_loc_type_top_field, align 4, !dbg !5509
  %70 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5510
  %call87 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %70), !dbg !5511
  %71 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5512
  %chroma_sample_loc_type_bottom_field = getelementptr inbounds %struct.VUI, %struct.VUI* %71, i32 0, i32 12, !dbg !5513
  store i32 %call87, i32* %chroma_sample_loc_type_bottom_field, align 4, !dbg !5514
  br label %if.end88, !dbg !5515

if.end88:                                         ; preds = %if.then85, %if.end81
  %72 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5516
  %call89 = call i32 @get_bits1(%struct.GetBitContext* %72), !dbg !5517
  %73 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5518
  %neutra_chroma_indication_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %73, i32 0, i32 13, !dbg !5519
  store i32 %call89, i32* %neutra_chroma_indication_flag, align 4, !dbg !5520
  %74 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5521
  %call90 = call i32 @get_bits1(%struct.GetBitContext* %74), !dbg !5522
  %75 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5523
  %field_seq_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %75, i32 0, i32 14, !dbg !5524
  store i32 %call90, i32* %field_seq_flag, align 4, !dbg !5525
  %76 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5526
  %call91 = call i32 @get_bits1(%struct.GetBitContext* %76), !dbg !5527
  %77 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5528
  %frame_field_info_present_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %77, i32 0, i32 15, !dbg !5529
  store i32 %call91, i32* %frame_field_info_present_flag, align 4, !dbg !5530
  %78 = bitcast %struct.GetBitContext* %backup to i8*, !dbg !5531
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5532
  %80 = bitcast %struct.GetBitContext* %79 to i8*, !dbg !5531
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %80, i64 32, i32 8, i1 false), !dbg !5531
  %81 = bitcast %struct.VUI* %backup_vui to i8*, !dbg !5533
  %82 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5534
  %83 = bitcast %struct.VUI* %82 to i8*, !dbg !5533
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %83, i64 140, i32 4, i1 false), !dbg !5533
  %84 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5535
  %call92 = call i32 @get_bits_left(%struct.GetBitContext* %84), !dbg !5537
  %cmp93 = icmp sge i32 %call92, 68, !dbg !5538
  br i1 %cmp93, label %land.lhs.true95, label %if.else100, !dbg !5539

land.lhs.true95:                                  ; preds = %if.end88
  %85 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5540
  %call96 = call i32 @show_bits_long(%struct.GetBitContext* %85, i32 21), !dbg !5542
  %cmp97 = icmp eq i32 %call96, 1048576, !dbg !5543
  br i1 %cmp97, label %if.then99, label %if.else100, !dbg !5544

if.then99:                                        ; preds = %land.lhs.true95
  %86 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5545
  %default_display_window_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %86, i32 0, i32 16, !dbg !5547
  store i32 0, i32* %default_display_window_flag, align 4, !dbg !5548
  %87 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5549
  %88 = bitcast %struct.AVCodecContext* %87 to i8*, !dbg !5549
  call void (i8*, i32, i8*, ...) @av_log(i8* %88, i32 24, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.76, i32 0, i32 0)), !dbg !5550
  br label %if.end103, !dbg !5551

if.else100:                                       ; preds = %land.lhs.true95, %if.end88
  %89 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5552
  %call101 = call i32 @get_bits1(%struct.GetBitContext* %89), !dbg !5553
  %90 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5554
  %default_display_window_flag102 = getelementptr inbounds %struct.VUI, %struct.VUI* %90, i32 0, i32 16, !dbg !5555
  store i32 %call101, i32* %default_display_window_flag102, align 4, !dbg !5556
  br label %if.end103

if.end103:                                        ; preds = %if.else100, %if.then99
  %91 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5557
  %default_display_window_flag104 = getelementptr inbounds %struct.VUI, %struct.VUI* %91, i32 0, i32 16, !dbg !5559
  %92 = load i32, i32* %default_display_window_flag104, align 4, !dbg !5559
  %tobool105 = icmp ne i32 %92, 0, !dbg !5557
  br i1 %tobool105, label %if.then106, label %if.end145, !dbg !5560

if.then106:                                       ; preds = %if.end103
  call void @llvm.dbg.declare(metadata i32* %vert_mult, metadata !5561, metadata !1892), !dbg !5563
  %93 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !5564
  %chroma_format_idc = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %93, i32 0, i32 1, !dbg !5565
  %94 = load i32, i32* %chroma_format_idc, align 4, !dbg !5565
  %idxprom107 = sext i32 %94 to i64, !dbg !5566
  %arrayidx108 = getelementptr inbounds [4 x i8], [4 x i8]* @hevc_sub_height_c, i64 0, i64 %idxprom107, !dbg !5566
  %95 = load i8, i8* %arrayidx108, align 1, !dbg !5566
  %conv109 = zext i8 %95 to i32, !dbg !5566
  store i32 %conv109, i32* %vert_mult, align 4, !dbg !5563
  call void @llvm.dbg.declare(metadata i32* %horiz_mult, metadata !5567, metadata !1892), !dbg !5568
  %96 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !5569
  %chroma_format_idc110 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %96, i32 0, i32 1, !dbg !5570
  %97 = load i32, i32* %chroma_format_idc110, align 4, !dbg !5570
  %idxprom111 = sext i32 %97 to i64, !dbg !5571
  %arrayidx112 = getelementptr inbounds [4 x i8], [4 x i8]* @hevc_sub_width_c, i64 0, i64 %idxprom111, !dbg !5571
  %98 = load i8, i8* %arrayidx112, align 1, !dbg !5571
  %conv113 = zext i8 %98 to i32, !dbg !5571
  store i32 %conv113, i32* %horiz_mult, align 4, !dbg !5568
  %99 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5572
  %call114 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %99), !dbg !5573
  %100 = load i32, i32* %horiz_mult, align 4, !dbg !5574
  %mul = mul i32 %call114, %100, !dbg !5575
  %101 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5576
  %def_disp_win = getelementptr inbounds %struct.VUI, %struct.VUI* %101, i32 0, i32 17, !dbg !5577
  %left_offset = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win, i32 0, i32 0, !dbg !5578
  store i32 %mul, i32* %left_offset, align 4, !dbg !5579
  %102 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5580
  %call115 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %102), !dbg !5581
  %103 = load i32, i32* %horiz_mult, align 4, !dbg !5582
  %mul116 = mul i32 %call115, %103, !dbg !5583
  %104 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5584
  %def_disp_win117 = getelementptr inbounds %struct.VUI, %struct.VUI* %104, i32 0, i32 17, !dbg !5585
  %right_offset = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win117, i32 0, i32 1, !dbg !5586
  store i32 %mul116, i32* %right_offset, align 4, !dbg !5587
  %105 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5588
  %call118 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %105), !dbg !5589
  %106 = load i32, i32* %vert_mult, align 4, !dbg !5590
  %mul119 = mul i32 %call118, %106, !dbg !5591
  %107 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5592
  %def_disp_win120 = getelementptr inbounds %struct.VUI, %struct.VUI* %107, i32 0, i32 17, !dbg !5593
  %top_offset = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win120, i32 0, i32 2, !dbg !5594
  store i32 %mul119, i32* %top_offset, align 4, !dbg !5595
  %108 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5596
  %call121 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %108), !dbg !5597
  %109 = load i32, i32* %vert_mult, align 4, !dbg !5598
  %mul122 = mul i32 %call121, %109, !dbg !5599
  %110 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5600
  %def_disp_win123 = getelementptr inbounds %struct.VUI, %struct.VUI* %110, i32 0, i32 17, !dbg !5601
  %bottom_offset = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win123, i32 0, i32 3, !dbg !5602
  store i32 %mul122, i32* %bottom_offset, align 4, !dbg !5603
  %111 = load i32, i32* %apply_defdispwin.addr, align 4, !dbg !5604
  %tobool124 = icmp ne i32 %111, 0, !dbg !5604
  br i1 %tobool124, label %land.lhs.true125, label %if.end144, !dbg !5606

land.lhs.true125:                                 ; preds = %if.then106
  %112 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5607
  %flags2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %112, i32 0, i32 14, !dbg !5608
  %113 = load i32, i32* %flags2, align 8, !dbg !5608
  %and = and i32 %113, 65536, !dbg !5609
  %tobool126 = icmp ne i32 %and, 0, !dbg !5609
  br i1 %tobool126, label %if.then127, label %if.end144, !dbg !5610

if.then127:                                       ; preds = %land.lhs.true125
  %114 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5612
  %115 = bitcast %struct.AVCodecContext* %114 to i8*, !dbg !5612
  %116 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5614
  %def_disp_win128 = getelementptr inbounds %struct.VUI, %struct.VUI* %116, i32 0, i32 17, !dbg !5615
  %left_offset129 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win128, i32 0, i32 0, !dbg !5616
  %117 = load i32, i32* %left_offset129, align 4, !dbg !5616
  %118 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5617
  %def_disp_win130 = getelementptr inbounds %struct.VUI, %struct.VUI* %118, i32 0, i32 17, !dbg !5618
  %right_offset131 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win130, i32 0, i32 1, !dbg !5619
  %119 = load i32, i32* %right_offset131, align 4, !dbg !5619
  %120 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5620
  %def_disp_win132 = getelementptr inbounds %struct.VUI, %struct.VUI* %120, i32 0, i32 17, !dbg !5621
  %top_offset133 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win132, i32 0, i32 2, !dbg !5622
  %121 = load i32, i32* %top_offset133, align 4, !dbg !5622
  %122 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5623
  %def_disp_win134 = getelementptr inbounds %struct.VUI, %struct.VUI* %122, i32 0, i32 17, !dbg !5624
  %bottom_offset135 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win134, i32 0, i32 3, !dbg !5625
  %123 = load i32, i32* %bottom_offset135, align 4, !dbg !5625
  call void (i8*, i32, i8*, ...) @av_log(i8* %115, i32 48, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.77, i32 0, i32 0), i32 %117, i32 %119, i32 %121, i32 %123), !dbg !5626
  %124 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5627
  %def_disp_win136 = getelementptr inbounds %struct.VUI, %struct.VUI* %124, i32 0, i32 17, !dbg !5628
  %bottom_offset137 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win136, i32 0, i32 3, !dbg !5629
  store i32 0, i32* %bottom_offset137, align 4, !dbg !5630
  %125 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5631
  %def_disp_win138 = getelementptr inbounds %struct.VUI, %struct.VUI* %125, i32 0, i32 17, !dbg !5632
  %top_offset139 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win138, i32 0, i32 2, !dbg !5633
  store i32 0, i32* %top_offset139, align 4, !dbg !5634
  %126 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5635
  %def_disp_win140 = getelementptr inbounds %struct.VUI, %struct.VUI* %126, i32 0, i32 17, !dbg !5636
  %right_offset141 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win140, i32 0, i32 1, !dbg !5637
  store i32 0, i32* %right_offset141, align 4, !dbg !5638
  %127 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5639
  %def_disp_win142 = getelementptr inbounds %struct.VUI, %struct.VUI* %127, i32 0, i32 17, !dbg !5640
  %left_offset143 = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %def_disp_win142, i32 0, i32 0, !dbg !5641
  store i32 0, i32* %left_offset143, align 4, !dbg !5642
  br label %if.end144, !dbg !5643

if.end144:                                        ; preds = %if.then127, %land.lhs.true125, %if.then106
  br label %if.end145, !dbg !5644

if.end145:                                        ; preds = %if.end144, %if.end103
  br label %timing_info, !dbg !5645

timing_info:                                      ; preds = %if.then202, %if.then186, %if.then155, %if.end145
  %128 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5647
  %call146 = call i32 @get_bits1(%struct.GetBitContext* %128), !dbg !5648
  %129 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5649
  %vui_timing_info_present_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %129, i32 0, i32 18, !dbg !5650
  store i32 %call146, i32* %vui_timing_info_present_flag, align 4, !dbg !5651
  %130 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5652
  %vui_timing_info_present_flag147 = getelementptr inbounds %struct.VUI, %struct.VUI* %130, i32 0, i32 18, !dbg !5654
  %131 = load i32, i32* %vui_timing_info_present_flag147, align 4, !dbg !5654
  %tobool148 = icmp ne i32 %131, 0, !dbg !5652
  br i1 %tobool148, label %if.then149, label %if.end176, !dbg !5655

if.then149:                                       ; preds = %timing_info
  %132 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5656
  %call150 = call i32 @get_bits_left(%struct.GetBitContext* %132), !dbg !5659
  %cmp151 = icmp slt i32 %call150, 66, !dbg !5660
  br i1 %cmp151, label %land.lhs.true153, label %if.end156, !dbg !5661

land.lhs.true153:                                 ; preds = %if.then149
  %133 = load i32, i32* %alt, align 4, !dbg !5662
  %tobool154 = icmp ne i32 %133, 0, !dbg !5662
  br i1 %tobool154, label %if.end156, label %if.then155, !dbg !5664

if.then155:                                       ; preds = %land.lhs.true153
  %134 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5665
  %135 = bitcast %struct.AVCodecContext* %134 to i8*, !dbg !5665
  call void (i8*, i32, i8*, ...) @av_log(i8* %135, i32 24, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.78, i32 0, i32 0)), !dbg !5667
  %136 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5668
  %137 = bitcast %struct.VUI* %136 to i8*, !dbg !5669
  %138 = bitcast %struct.VUI* %backup_vui to i8*, !dbg !5669
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %138, i64 140, i32 4, i1 false), !dbg !5669
  %139 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5670
  %140 = bitcast %struct.GetBitContext* %139 to i8*, !dbg !5671
  %141 = bitcast %struct.GetBitContext* %backup to i8*, !dbg !5671
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %140, i8* %141, i64 32, i32 8, i1 false), !dbg !5671
  store i32 1, i32* %alt, align 4, !dbg !5672
  br label %timing_info, !dbg !5673

if.end156:                                        ; preds = %land.lhs.true153, %if.then149
  %142 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5674
  %call157 = call i32 @get_bits_long(%struct.GetBitContext* %142, i32 32), !dbg !5675
  %143 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5676
  %vui_num_units_in_tick = getelementptr inbounds %struct.VUI, %struct.VUI* %143, i32 0, i32 19, !dbg !5677
  store i32 %call157, i32* %vui_num_units_in_tick, align 4, !dbg !5678
  %144 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5679
  %call158 = call i32 @get_bits_long(%struct.GetBitContext* %144, i32 32), !dbg !5680
  %145 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5681
  %vui_time_scale = getelementptr inbounds %struct.VUI, %struct.VUI* %145, i32 0, i32 20, !dbg !5682
  store i32 %call158, i32* %vui_time_scale, align 4, !dbg !5683
  %146 = load i32, i32* %alt, align 4, !dbg !5684
  %tobool159 = icmp ne i32 %146, 0, !dbg !5684
  br i1 %tobool159, label %if.then160, label %if.end163, !dbg !5686

if.then160:                                       ; preds = %if.end156
  %147 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5687
  %148 = bitcast %struct.AVCodecContext* %147 to i8*, !dbg !5687
  %149 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5689
  %vui_time_scale161 = getelementptr inbounds %struct.VUI, %struct.VUI* %149, i32 0, i32 20, !dbg !5690
  %150 = load i32, i32* %vui_time_scale161, align 4, !dbg !5690
  %151 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5691
  %vui_num_units_in_tick162 = getelementptr inbounds %struct.VUI, %struct.VUI* %151, i32 0, i32 19, !dbg !5692
  %152 = load i32, i32* %vui_num_units_in_tick162, align 4, !dbg !5692
  call void (i8*, i32, i8*, ...) @av_log(i8* %148, i32 32, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.79, i32 0, i32 0), i32 %150, i32 %152), !dbg !5693
  br label %if.end163, !dbg !5694

if.end163:                                        ; preds = %if.then160, %if.end156
  %153 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5695
  %call164 = call i32 @get_bits1(%struct.GetBitContext* %153), !dbg !5696
  %154 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5697
  %vui_poc_proportional_to_timing_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %154, i32 0, i32 21, !dbg !5698
  store i32 %call164, i32* %vui_poc_proportional_to_timing_flag, align 4, !dbg !5699
  %155 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5700
  %vui_poc_proportional_to_timing_flag165 = getelementptr inbounds %struct.VUI, %struct.VUI* %155, i32 0, i32 21, !dbg !5702
  %156 = load i32, i32* %vui_poc_proportional_to_timing_flag165, align 4, !dbg !5702
  %tobool166 = icmp ne i32 %156, 0, !dbg !5700
  br i1 %tobool166, label %if.then167, label %if.end169, !dbg !5703

if.then167:                                       ; preds = %if.end163
  %157 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5704
  %call168 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %157), !dbg !5705
  %158 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5706
  %vui_num_ticks_poc_diff_one_minus1 = getelementptr inbounds %struct.VUI, %struct.VUI* %158, i32 0, i32 22, !dbg !5707
  store i32 %call168, i32* %vui_num_ticks_poc_diff_one_minus1, align 4, !dbg !5708
  br label %if.end169, !dbg !5706

if.end169:                                        ; preds = %if.then167, %if.end163
  %159 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5709
  %call170 = call i32 @get_bits1(%struct.GetBitContext* %159), !dbg !5710
  %160 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5711
  %vui_hrd_parameters_present_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %160, i32 0, i32 23, !dbg !5712
  store i32 %call170, i32* %vui_hrd_parameters_present_flag, align 4, !dbg !5713
  %161 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5714
  %vui_hrd_parameters_present_flag171 = getelementptr inbounds %struct.VUI, %struct.VUI* %161, i32 0, i32 23, !dbg !5716
  %162 = load i32, i32* %vui_hrd_parameters_present_flag171, align 4, !dbg !5716
  %tobool172 = icmp ne i32 %162, 0, !dbg !5714
  br i1 %tobool172, label %if.then173, label %if.end175, !dbg !5717

if.then173:                                       ; preds = %if.end169
  %163 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5718
  %164 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !5719
  %max_sub_layers = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %164, i32 0, i32 11, !dbg !5720
  %165 = load i32, i32* %max_sub_layers, align 4, !dbg !5720
  %call174 = call i32 @decode_hrd(%struct.GetBitContext* %163, i32 1, i32 %165), !dbg !5721
  br label %if.end175, !dbg !5721

if.end175:                                        ; preds = %if.then173, %if.end169
  br label %if.end176, !dbg !5722

if.end176:                                        ; preds = %if.end175, %timing_info
  %166 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5723
  %call177 = call i32 @get_bits1(%struct.GetBitContext* %166), !dbg !5724
  %167 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5725
  %bitstream_restriction_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %167, i32 0, i32 24, !dbg !5726
  store i32 %call177, i32* %bitstream_restriction_flag, align 4, !dbg !5727
  %168 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5728
  %bitstream_restriction_flag178 = getelementptr inbounds %struct.VUI, %struct.VUI* %168, i32 0, i32 24, !dbg !5730
  %169 = load i32, i32* %bitstream_restriction_flag178, align 4, !dbg !5730
  %tobool179 = icmp ne i32 %169, 0, !dbg !5728
  br i1 %tobool179, label %if.then180, label %if.end196, !dbg !5731

if.then180:                                       ; preds = %if.end176
  %170 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5732
  %call181 = call i32 @get_bits_left(%struct.GetBitContext* %170), !dbg !5735
  %cmp182 = icmp slt i32 %call181, 8, !dbg !5736
  br i1 %cmp182, label %land.lhs.true184, label %if.end187, !dbg !5737

land.lhs.true184:                                 ; preds = %if.then180
  %171 = load i32, i32* %alt, align 4, !dbg !5738
  %tobool185 = icmp ne i32 %171, 0, !dbg !5738
  br i1 %tobool185, label %if.end187, label %if.then186, !dbg !5740

if.then186:                                       ; preds = %land.lhs.true184
  %172 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5741
  %173 = bitcast %struct.AVCodecContext* %172 to i8*, !dbg !5741
  call void (i8*, i32, i8*, ...) @av_log(i8* %173, i32 24, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.80, i32 0, i32 0)), !dbg !5743
  %174 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5744
  %175 = bitcast %struct.VUI* %174 to i8*, !dbg !5745
  %176 = bitcast %struct.VUI* %backup_vui to i8*, !dbg !5745
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %175, i8* %176, i64 140, i32 4, i1 false), !dbg !5745
  %177 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5746
  %178 = bitcast %struct.GetBitContext* %177 to i8*, !dbg !5747
  %179 = bitcast %struct.GetBitContext* %backup to i8*, !dbg !5747
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %178, i8* %179, i64 32, i32 8, i1 false), !dbg !5747
  store i32 1, i32* %alt, align 4, !dbg !5748
  br label %timing_info, !dbg !5749

if.end187:                                        ; preds = %land.lhs.true184, %if.then180
  %180 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5750
  %call188 = call i32 @get_bits1(%struct.GetBitContext* %180), !dbg !5751
  %181 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5752
  %tiles_fixed_structure_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %181, i32 0, i32 25, !dbg !5753
  store i32 %call188, i32* %tiles_fixed_structure_flag, align 4, !dbg !5754
  %182 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5755
  %call189 = call i32 @get_bits1(%struct.GetBitContext* %182), !dbg !5756
  %183 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5757
  %motion_vectors_over_pic_boundaries_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %183, i32 0, i32 26, !dbg !5758
  store i32 %call189, i32* %motion_vectors_over_pic_boundaries_flag, align 4, !dbg !5759
  %184 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5760
  %call190 = call i32 @get_bits1(%struct.GetBitContext* %184), !dbg !5761
  %185 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5762
  %restricted_ref_pic_lists_flag = getelementptr inbounds %struct.VUI, %struct.VUI* %185, i32 0, i32 27, !dbg !5763
  store i32 %call190, i32* %restricted_ref_pic_lists_flag, align 4, !dbg !5764
  %186 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5765
  %call191 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %186), !dbg !5766
  %187 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5767
  %min_spatial_segmentation_idc = getelementptr inbounds %struct.VUI, %struct.VUI* %187, i32 0, i32 28, !dbg !5768
  store i32 %call191, i32* %min_spatial_segmentation_idc, align 4, !dbg !5769
  %188 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5770
  %call192 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %188), !dbg !5771
  %189 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5772
  %max_bytes_per_pic_denom = getelementptr inbounds %struct.VUI, %struct.VUI* %189, i32 0, i32 29, !dbg !5773
  store i32 %call192, i32* %max_bytes_per_pic_denom, align 4, !dbg !5774
  %190 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5775
  %call193 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %190), !dbg !5776
  %191 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5777
  %max_bits_per_min_cu_denom = getelementptr inbounds %struct.VUI, %struct.VUI* %191, i32 0, i32 30, !dbg !5778
  store i32 %call193, i32* %max_bits_per_min_cu_denom, align 4, !dbg !5779
  %192 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5780
  %call194 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %192), !dbg !5781
  %193 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5782
  %log2_max_mv_length_horizontal = getelementptr inbounds %struct.VUI, %struct.VUI* %193, i32 0, i32 31, !dbg !5783
  store i32 %call194, i32* %log2_max_mv_length_horizontal, align 4, !dbg !5784
  %194 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5785
  %call195 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %194), !dbg !5786
  %195 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5787
  %log2_max_mv_length_vertical = getelementptr inbounds %struct.VUI, %struct.VUI* %195, i32 0, i32 32, !dbg !5788
  store i32 %call195, i32* %log2_max_mv_length_vertical, align 4, !dbg !5789
  br label %if.end196, !dbg !5790

if.end196:                                        ; preds = %if.end187, %if.end176
  %196 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5791
  %call197 = call i32 @get_bits_left(%struct.GetBitContext* %196), !dbg !5793
  %cmp198 = icmp slt i32 %call197, 1, !dbg !5794
  br i1 %cmp198, label %land.lhs.true200, label %if.end203, !dbg !5795

land.lhs.true200:                                 ; preds = %if.end196
  %197 = load i32, i32* %alt, align 4, !dbg !5796
  %tobool201 = icmp ne i32 %197, 0, !dbg !5796
  br i1 %tobool201, label %if.end203, label %if.then202, !dbg !5798

if.then202:                                       ; preds = %land.lhs.true200
  %198 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5799
  %199 = bitcast %struct.AVCodecContext* %198 to i8*, !dbg !5799
  call void (i8*, i32, i8*, ...) @av_log(i8* %199, i32 24, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.81, i32 0, i32 0)), !dbg !5801
  %200 = load %struct.VUI*, %struct.VUI** %vui, align 8, !dbg !5802
  %201 = bitcast %struct.VUI* %200 to i8*, !dbg !5803
  %202 = bitcast %struct.VUI* %backup_vui to i8*, !dbg !5803
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %201, i8* %202, i64 140, i32 4, i1 false), !dbg !5803
  %203 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5804
  %204 = bitcast %struct.GetBitContext* %203 to i8*, !dbg !5805
  %205 = bitcast %struct.GetBitContext* %backup to i8*, !dbg !5805
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %204, i8* %205, i64 32, i32 8, i1 false), !dbg !5805
  store i32 1, i32* %alt, align 4, !dbg !5806
  br label %timing_info, !dbg !5807

if.end203:                                        ; preds = %land.lhs.true200, %if.end196
  ret void, !dbg !5808
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

declare void @avpriv_request_sample(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_decode_nal_sps(%struct.GetBitContext* %gb, %struct.AVCodecContext* %avctx, %struct.HEVCParamSets* %ps, i32 %apply_defdispwin) #0 !dbg !5809 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ps.addr = alloca %struct.HEVCParamSets*, align 8
  %apply_defdispwin.addr = alloca i32, align 4
  %sps = alloca %struct.HEVCSPS*, align 8
  %sps_buf = alloca %struct.AVBufferRef*, align 8
  %sps_id = alloca i32, align 4
  %ret = alloca i32, align 4
  %nal_size = alloca i64, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5812, metadata !1892), !dbg !5813
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !5814, metadata !1892), !dbg !5815
  store %struct.HEVCParamSets* %ps, %struct.HEVCParamSets** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCParamSets** %ps.addr, metadata !5816, metadata !1892), !dbg !5817
  store i32 %apply_defdispwin, i32* %apply_defdispwin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %apply_defdispwin.addr, metadata !5818, metadata !1892), !dbg !5819
  call void @llvm.dbg.declare(metadata %struct.HEVCSPS** %sps, metadata !5820, metadata !1892), !dbg !5821
  call void @llvm.dbg.declare(metadata %struct.AVBufferRef** %sps_buf, metadata !5822, metadata !1892), !dbg !5823
  %call = call %struct.AVBufferRef* @av_buffer_allocz(i32 17568), !dbg !5824
  store %struct.AVBufferRef* %call, %struct.AVBufferRef** %sps_buf, align 8, !dbg !5823
  call void @llvm.dbg.declare(metadata i32* %sps_id, metadata !5825, metadata !1892), !dbg !5826
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5827, metadata !1892), !dbg !5828
  call void @llvm.dbg.declare(metadata i64* %nal_size, metadata !5829, metadata !1892), !dbg !5830
  %0 = load %struct.AVBufferRef*, %struct.AVBufferRef** %sps_buf, align 8, !dbg !5831
  %tobool = icmp ne %struct.AVBufferRef* %0, null, !dbg !5831
  br i1 %tobool, label %if.end, label %if.then, !dbg !5833

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !5834
  br label %return, !dbg !5834

if.end:                                           ; preds = %entry
  %1 = load %struct.AVBufferRef*, %struct.AVBufferRef** %sps_buf, align 8, !dbg !5835
  %data = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %1, i32 0, i32 1, !dbg !5836
  %2 = load i8*, i8** %data, align 8, !dbg !5836
  %3 = bitcast i8* %2 to %struct.HEVCSPS*, !dbg !5837
  store %struct.HEVCSPS* %3, %struct.HEVCSPS** %sps, align 8, !dbg !5838
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5839
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !5839
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 48, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.45, i32 0, i32 0)), !dbg !5840
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5841
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 1, !dbg !5842
  %7 = load i8*, i8** %buffer_end, align 8, !dbg !5842
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5843
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %8, i32 0, i32 0, !dbg !5844
  %9 = load i8*, i8** %buffer, align 8, !dbg !5844
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64, !dbg !5845
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !5845
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5845
  store i64 %sub.ptr.sub, i64* %nal_size, align 8, !dbg !5846
  %10 = load i64, i64* %nal_size, align 8, !dbg !5847
  %cmp = icmp ugt i64 %10, 4096, !dbg !5849
  br i1 %cmp, label %if.then1, label %if.else, !dbg !5850

if.then1:                                         ; preds = %if.end
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5851
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !5851
  %13 = load i64, i64* %nal_size, align 8, !dbg !5853
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 24, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.46, i32 0, i32 0), i64 %13, i64 4096), !dbg !5854
  %14 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5855
  %data_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %14, i32 0, i32 63, !dbg !5856
  store i32 4096, i32* %data_size, align 4, !dbg !5857
  br label %if.end3, !dbg !5858

if.else:                                          ; preds = %if.end
  %15 = load i64, i64* %nal_size, align 8, !dbg !5859
  %conv = trunc i64 %15 to i32, !dbg !5859
  %16 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5861
  %data_size2 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %16, i32 0, i32 63, !dbg !5862
  store i32 %conv, i32* %data_size2, align 4, !dbg !5863
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then1
  %17 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5864
  %data4 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %17, i32 0, i32 62, !dbg !5865
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %data4, i32 0, i32 0, !dbg !5866
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5867
  %buffer5 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %18, i32 0, i32 0, !dbg !5868
  %19 = load i8*, i8** %buffer5, align 8, !dbg !5868
  %20 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5869
  %data_size6 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %20, i32 0, i32 63, !dbg !5870
  %21 = load i32, i32* %data_size6, align 4, !dbg !5870
  %conv7 = sext i32 %21 to i64, !dbg !5869
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %19, i64 %conv7, i32 1, i1 false), !dbg !5866
  %22 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5871
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5872
  %24 = load i32, i32* %apply_defdispwin.addr, align 4, !dbg !5873
  %25 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !5874
  %vps_list = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %25, i32 0, i32 0, !dbg !5875
  %arraydecay8 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %vps_list, i32 0, i32 0, !dbg !5874
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5876
  %call9 = call i32 @ff_hevc_parse_sps(%struct.HEVCSPS* %22, %struct.GetBitContext* %23, i32* %sps_id, i32 %24, %struct.AVBufferRef** %arraydecay8, %struct.AVCodecContext* %26), !dbg !5877
  store i32 %call9, i32* %ret, align 4, !dbg !5878
  %27 = load i32, i32* %ret, align 4, !dbg !5879
  %cmp10 = icmp slt i32 %27, 0, !dbg !5881
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !5882

if.then12:                                        ; preds = %if.end3
  call void @av_buffer_unref(%struct.AVBufferRef** %sps_buf), !dbg !5883
  %28 = load i32, i32* %ret, align 4, !dbg !5885
  store i32 %28, i32* %retval, align 4, !dbg !5886
  br label %return, !dbg !5886

if.end13:                                         ; preds = %if.end3
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5887
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 134, !dbg !5889
  %30 = load i32, i32* %debug, align 4, !dbg !5889
  %and = and i32 %30, 4, !dbg !5890
  %tobool14 = icmp ne i32 %and, 0, !dbg !5890
  br i1 %tobool14, label %if.then15, label %if.end24, !dbg !5891

if.then15:                                        ; preds = %if.end13
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5892
  %32 = bitcast %struct.AVCodecContext* %31 to i8*, !dbg !5892
  %33 = load i32, i32* %sps_id, align 4, !dbg !5894
  %34 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5895
  %width = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %34, i32 0, i32 47, !dbg !5896
  %35 = load i32, i32* %width, align 4, !dbg !5896
  %36 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5897
  %height = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %36, i32 0, i32 48, !dbg !5898
  %37 = load i32, i32* %height, align 4, !dbg !5898
  %38 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5899
  %width16 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %38, i32 0, i32 47, !dbg !5900
  %39 = load i32, i32* %width16, align 4, !dbg !5900
  %40 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5901
  %output_window = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %40, i32 0, i32 3, !dbg !5902
  %left_offset = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %output_window, i32 0, i32 0, !dbg !5903
  %41 = load i32, i32* %left_offset, align 4, !dbg !5903
  %42 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5904
  %output_window17 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %42, i32 0, i32 3, !dbg !5905
  %right_offset = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %output_window17, i32 0, i32 1, !dbg !5906
  %43 = load i32, i32* %right_offset, align 4, !dbg !5906
  %add = add i32 %41, %43, !dbg !5907
  %sub = sub i32 %39, %add, !dbg !5908
  %44 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5909
  %height18 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %44, i32 0, i32 48, !dbg !5910
  %45 = load i32, i32* %height18, align 4, !dbg !5910
  %46 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5911
  %output_window19 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %46, i32 0, i32 3, !dbg !5912
  %top_offset = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %output_window19, i32 0, i32 2, !dbg !5913
  %47 = load i32, i32* %top_offset, align 4, !dbg !5913
  %48 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5914
  %output_window20 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %48, i32 0, i32 3, !dbg !5915
  %bottom_offset = getelementptr inbounds %struct.HEVCWindow, %struct.HEVCWindow* %output_window20, i32 0, i32 3, !dbg !5916
  %49 = load i32, i32* %bottom_offset, align 4, !dbg !5916
  %add21 = add i32 %47, %49, !dbg !5917
  %sub22 = sub i32 %45, %add21, !dbg !5918
  %50 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5919
  %pix_fmt = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %50, i32 0, i32 8, !dbg !5920
  %51 = load i32, i32* %pix_fmt, align 4, !dbg !5920
  %call23 = call i8* @av_get_pix_fmt_name(i32 %51), !dbg !5921
  call void (i8*, i32, i8*, ...) @av_log(i8* %32, i32 48, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.47, i32 0, i32 0), i32 %33, i32 %35, i32 %37, i32 %sub, i32 %sub22, i8* %call23), !dbg !5922
  br label %if.end24, !dbg !5923

if.end24:                                         ; preds = %if.then15, %if.end13
  %52 = load i32, i32* %sps_id, align 4, !dbg !5924
  %idxprom = zext i32 %52 to i64, !dbg !5926
  %53 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !5926
  %sps_list = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %53, i32 0, i32 1, !dbg !5927
  %arrayidx = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %sps_list, i64 0, i64 %idxprom, !dbg !5926
  %54 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx, align 8, !dbg !5926
  %tobool25 = icmp ne %struct.AVBufferRef* %54, null, !dbg !5926
  br i1 %tobool25, label %land.lhs.true, label %if.else35, !dbg !5928

land.lhs.true:                                    ; preds = %if.end24
  %55 = load i32, i32* %sps_id, align 4, !dbg !5929
  %idxprom26 = zext i32 %55 to i64, !dbg !5930
  %56 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !5930
  %sps_list27 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %56, i32 0, i32 1, !dbg !5931
  %arrayidx28 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %sps_list27, i64 0, i64 %idxprom26, !dbg !5930
  %57 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx28, align 8, !dbg !5930
  %data29 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %57, i32 0, i32 1, !dbg !5932
  %58 = load i8*, i8** %data29, align 8, !dbg !5932
  %59 = load %struct.AVBufferRef*, %struct.AVBufferRef** %sps_buf, align 8, !dbg !5933
  %data30 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %59, i32 0, i32 1, !dbg !5934
  %60 = load i8*, i8** %data30, align 8, !dbg !5934
  %61 = load %struct.AVBufferRef*, %struct.AVBufferRef** %sps_buf, align 8, !dbg !5935
  %size = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %61, i32 0, i32 2, !dbg !5936
  %62 = load i32, i32* %size, align 8, !dbg !5936
  %conv31 = sext i32 %62 to i64, !dbg !5935
  %call32 = call i32 @memcmp(i8* %58, i8* %60, i64 %conv31) #7, !dbg !5937
  %tobool33 = icmp ne i32 %call32, 0, !dbg !5937
  br i1 %tobool33, label %if.else35, label %if.then34, !dbg !5938

if.then34:                                        ; preds = %land.lhs.true
  call void @av_buffer_unref(%struct.AVBufferRef** %sps_buf), !dbg !5940
  br label %if.end39, !dbg !5942

if.else35:                                        ; preds = %land.lhs.true, %if.end24
  %63 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !5943
  %64 = load i32, i32* %sps_id, align 4, !dbg !5945
  call void @remove_sps(%struct.HEVCParamSets* %63, i32 %64), !dbg !5946
  %65 = load %struct.AVBufferRef*, %struct.AVBufferRef** %sps_buf, align 8, !dbg !5947
  %66 = load i32, i32* %sps_id, align 4, !dbg !5948
  %idxprom36 = zext i32 %66 to i64, !dbg !5949
  %67 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !5949
  %sps_list37 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %67, i32 0, i32 1, !dbg !5950
  %arrayidx38 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %sps_list37, i64 0, i64 %idxprom36, !dbg !5949
  store %struct.AVBufferRef* %65, %struct.AVBufferRef** %arrayidx38, align 8, !dbg !5951
  br label %if.end39

if.end39:                                         ; preds = %if.else35, %if.then34
  store i32 0, i32* %retval, align 4, !dbg !5952
  br label %return, !dbg !5952

return:                                           ; preds = %if.end39, %if.then12, %if.then
  %68 = load i32, i32* %retval, align 4, !dbg !5953
  ret i32 %68, !dbg !5953
}

declare i8* @av_get_pix_fmt_name(i32) #3

; Function Attrs: nounwind uwtable
define internal void @remove_sps(%struct.HEVCParamSets* %s, i32 %id) #0 !dbg !5954 {
entry:
  %s.addr = alloca %struct.HEVCParamSets*, align 8
  %id.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.HEVCParamSets* %s, %struct.HEVCParamSets** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCParamSets** %s.addr, metadata !5955, metadata !1892), !dbg !5956
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !5957, metadata !1892), !dbg !5958
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5959, metadata !1892), !dbg !5960
  %0 = load i32, i32* %id.addr, align 4, !dbg !5961
  %idxprom = sext i32 %0 to i64, !dbg !5963
  %1 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !5963
  %sps_list = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %1, i32 0, i32 1, !dbg !5964
  %arrayidx = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %sps_list, i64 0, i64 %idxprom, !dbg !5963
  %2 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx, align 8, !dbg !5963
  %tobool = icmp ne %struct.AVBufferRef* %2, null, !dbg !5963
  br i1 %tobool, label %if.then, label %if.end33, !dbg !5965

if.then:                                          ; preds = %entry
  %3 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !5966
  %sps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %3, i32 0, i32 4, !dbg !5969
  %4 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !5969
  %5 = load i32, i32* %id.addr, align 4, !dbg !5970
  %idxprom1 = sext i32 %5 to i64, !dbg !5971
  %6 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !5971
  %sps_list2 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %6, i32 0, i32 1, !dbg !5972
  %arrayidx3 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %sps_list2, i64 0, i64 %idxprom1, !dbg !5971
  %7 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx3, align 8, !dbg !5971
  %data = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %7, i32 0, i32 1, !dbg !5973
  %8 = load i8*, i8** %data, align 8, !dbg !5973
  %9 = bitcast i8* %8 to %struct.HEVCSPS*, !dbg !5974
  %cmp = icmp eq %struct.HEVCSPS* %4, %9, !dbg !5975
  br i1 %cmp, label %if.then4, label %if.end, !dbg !5976

if.then4:                                         ; preds = %if.then
  %10 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !5977
  %sps5 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %10, i32 0, i32 4, !dbg !5978
  store %struct.HEVCSPS* null, %struct.HEVCSPS** %sps5, align 8, !dbg !5979
  br label %if.end, !dbg !5977

if.end:                                           ; preds = %if.then4, %if.then
  store i32 0, i32* %i, align 4, !dbg !5980
  br label %for.cond, !dbg !5982

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !5983
  %conv = sext i32 %11 to i64, !dbg !5983
  %cmp6 = icmp ult i64 %conv, 64, !dbg !5986
  br i1 %cmp6, label %for.body, label %for.end, !dbg !5987

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !5988
  %idxprom8 = sext i32 %12 to i64, !dbg !5990
  %13 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !5990
  %pps_list = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %13, i32 0, i32 2, !dbg !5991
  %arrayidx9 = getelementptr inbounds [64 x %struct.AVBufferRef*], [64 x %struct.AVBufferRef*]* %pps_list, i64 0, i64 %idxprom8, !dbg !5990
  %14 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx9, align 8, !dbg !5990
  %tobool10 = icmp ne %struct.AVBufferRef* %14, null, !dbg !5990
  br i1 %tobool10, label %land.lhs.true, label %if.end18, !dbg !5992

land.lhs.true:                                    ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !5993
  %idxprom11 = sext i32 %15 to i64, !dbg !5995
  %16 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !5995
  %pps_list12 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %16, i32 0, i32 2, !dbg !5996
  %arrayidx13 = getelementptr inbounds [64 x %struct.AVBufferRef*], [64 x %struct.AVBufferRef*]* %pps_list12, i64 0, i64 %idxprom11, !dbg !5995
  %17 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx13, align 8, !dbg !5995
  %data14 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %17, i32 0, i32 1, !dbg !5997
  %18 = load i8*, i8** %data14, align 8, !dbg !5997
  %19 = bitcast i8* %18 to %struct.HEVCPPS*, !dbg !5998
  %sps_id = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %19, i32 0, i32 0, !dbg !5998
  %20 = load i32, i32* %sps_id, align 8, !dbg !5998
  %21 = load i32, i32* %id.addr, align 4, !dbg !5999
  %cmp15 = icmp eq i32 %20, %21, !dbg !6000
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !6001

if.then17:                                        ; preds = %land.lhs.true
  %22 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !6002
  %23 = load i32, i32* %i, align 4, !dbg !6003
  call void @remove_pps(%struct.HEVCParamSets* %22, i32 %23), !dbg !6004
  br label %if.end18, !dbg !6004

if.end18:                                         ; preds = %if.then17, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6005

for.inc:                                          ; preds = %if.end18
  %24 = load i32, i32* %i, align 4, !dbg !6007
  %inc = add nsw i32 %24, 1, !dbg !6007
  store i32 %inc, i32* %i, align 4, !dbg !6007
  br label %for.cond, !dbg !6009, !llvm.loop !6010

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !6012, !llvm.loop !6013

do.body:                                          ; preds = %for.end
  %25 = load i32, i32* %id.addr, align 4, !dbg !6014
  %idxprom19 = sext i32 %25 to i64, !dbg !6018
  %26 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !6018
  %sps_list20 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %26, i32 0, i32 1, !dbg !6019
  %arrayidx21 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %sps_list20, i64 0, i64 %idxprom19, !dbg !6018
  %27 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx21, align 8, !dbg !6018
  %tobool22 = icmp ne %struct.AVBufferRef* %27, null, !dbg !6018
  br i1 %tobool22, label %land.lhs.true23, label %if.end32, !dbg !6020

land.lhs.true23:                                  ; preds = %do.body
  %28 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !6021
  %sps24 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %28, i32 0, i32 4, !dbg !6023
  %29 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps24, align 8, !dbg !6023
  %30 = load i32, i32* %id.addr, align 4, !dbg !6024
  %idxprom25 = sext i32 %30 to i64, !dbg !6025
  %31 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !6025
  %sps_list26 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %31, i32 0, i32 1, !dbg !6026
  %arrayidx27 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %sps_list26, i64 0, i64 %idxprom25, !dbg !6025
  %32 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx27, align 8, !dbg !6025
  %data28 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %32, i32 0, i32 1, !dbg !6027
  %33 = load i8*, i8** %data28, align 8, !dbg !6027
  %34 = bitcast i8* %33 to %struct.HEVCSPS*, !dbg !6028
  %cmp29 = icmp eq %struct.HEVCSPS* %29, %34, !dbg !6029
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !6030

if.then31:                                        ; preds = %land.lhs.true23
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.84, i32 0, i32 0), i32 100), !dbg !6031
  call void @abort() #8, !dbg !6034
  unreachable, !dbg !6036

if.end32:                                         ; preds = %land.lhs.true23, %do.body
  br label %do.end, !dbg !6037

do.end:                                           ; preds = %if.end32
  br label %if.end33, !dbg !6039

if.end33:                                         ; preds = %do.end, %entry
  %35 = load i32, i32* %id.addr, align 4, !dbg !6040
  %idxprom34 = sext i32 %35 to i64, !dbg !6041
  %36 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !6041
  %sps_list35 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %36, i32 0, i32 1, !dbg !6042
  %arrayidx36 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %sps_list35, i64 0, i64 %idxprom34, !dbg !6041
  call void @av_buffer_unref(%struct.AVBufferRef** %arrayidx36), !dbg !6043
  ret void, !dbg !6044
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_decode_nal_pps(%struct.GetBitContext* %gb, %struct.AVCodecContext* %avctx, %struct.HEVCParamSets* %ps) #0 !dbg !6045 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ps.addr = alloca %struct.HEVCParamSets*, align 8
  %sps = alloca %struct.HEVCSPS*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %pps_id = alloca i32, align 4
  %nal_size = alloca i64, align 8
  %log2_parallel_merge_level_minus2 = alloca i32, align 4
  %pps_buf = alloca %struct.AVBufferRef*, align 8
  %pps = alloca %struct.HEVCPPS*, align 8
  %sum = alloca i64, align 8
  %beta_offset_div2 = alloca i32, align 4
  %tc_offset_div2 = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6046, metadata !1892), !dbg !6047
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6048, metadata !1892), !dbg !6049
  store %struct.HEVCParamSets* %ps, %struct.HEVCParamSets** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCParamSets** %ps.addr, metadata !6050, metadata !1892), !dbg !6051
  call void @llvm.dbg.declare(metadata %struct.HEVCSPS** %sps, metadata !6052, metadata !1892), !dbg !6053
  store %struct.HEVCSPS* null, %struct.HEVCSPS** %sps, align 8, !dbg !6053
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6054, metadata !1892), !dbg !6055
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6056, metadata !1892), !dbg !6057
  store i32 0, i32* %ret, align 4, !dbg !6057
  call void @llvm.dbg.declare(metadata i32* %pps_id, metadata !6058, metadata !1892), !dbg !6059
  store i32 0, i32* %pps_id, align 4, !dbg !6059
  call void @llvm.dbg.declare(metadata i64* %nal_size, metadata !6060, metadata !1892), !dbg !6061
  call void @llvm.dbg.declare(metadata i32* %log2_parallel_merge_level_minus2, metadata !6062, metadata !1892), !dbg !6063
  call void @llvm.dbg.declare(metadata %struct.AVBufferRef** %pps_buf, metadata !6064, metadata !1892), !dbg !6065
  call void @llvm.dbg.declare(metadata %struct.HEVCPPS** %pps, metadata !6066, metadata !1892), !dbg !6067
  %call = call noalias i8* @av_mallocz(i64 5848), !dbg !6068
  %0 = bitcast i8* %call to %struct.HEVCPPS*, !dbg !6068
  store %struct.HEVCPPS* %0, %struct.HEVCPPS** %pps, align 8, !dbg !6067
  %1 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6069
  %tobool = icmp ne %struct.HEVCPPS* %1, null, !dbg !6069
  br i1 %tobool, label %if.end, label %if.then, !dbg !6071

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !6072
  br label %return, !dbg !6072

if.end:                                           ; preds = %entry
  %2 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6073
  %3 = bitcast %struct.HEVCPPS* %2 to i8*, !dbg !6074
  %call1 = call %struct.AVBufferRef* @av_buffer_create(i8* %3, i32 5848, void (i8*, i8*)* @hevc_pps_free, i8* null, i32 0), !dbg !6075
  store %struct.AVBufferRef* %call1, %struct.AVBufferRef** %pps_buf, align 8, !dbg !6076
  %4 = load %struct.AVBufferRef*, %struct.AVBufferRef** %pps_buf, align 8, !dbg !6077
  %tobool2 = icmp ne %struct.AVBufferRef* %4, null, !dbg !6077
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6079

if.then3:                                         ; preds = %if.end
  %5 = bitcast %struct.HEVCPPS** %pps to i8*, !dbg !6080
  call void @av_freep(i8* %5), !dbg !6082
  store i32 -12, i32* %retval, align 4, !dbg !6083
  br label %return, !dbg !6083

if.end4:                                          ; preds = %if.end
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6084
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !6084
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 48, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.48, i32 0, i32 0)), !dbg !6085
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6086
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %8, i32 0, i32 1, !dbg !6087
  %9 = load i8*, i8** %buffer_end, align 8, !dbg !6087
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6088
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %10, i32 0, i32 0, !dbg !6089
  %11 = load i8*, i8** %buffer, align 8, !dbg !6089
  %sub.ptr.lhs.cast = ptrtoint i8* %9 to i64, !dbg !6090
  %sub.ptr.rhs.cast = ptrtoint i8* %11 to i64, !dbg !6090
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6090
  store i64 %sub.ptr.sub, i64* %nal_size, align 8, !dbg !6091
  %12 = load i64, i64* %nal_size, align 8, !dbg !6092
  %cmp = icmp ugt i64 %12, 4096, !dbg !6094
  br i1 %cmp, label %if.then5, label %if.else, !dbg !6095

if.then5:                                         ; preds = %if.end4
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6096
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !6096
  %15 = load i64, i64* %nal_size, align 8, !dbg !6098
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 24, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.49, i32 0, i32 0), i64 %15, i64 4096), !dbg !6099
  %16 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6100
  %data_size = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %16, i32 0, i32 58, !dbg !6101
  store i32 4096, i32* %data_size, align 8, !dbg !6102
  br label %if.end7, !dbg !6103

if.else:                                          ; preds = %if.end4
  %17 = load i64, i64* %nal_size, align 8, !dbg !6104
  %conv = trunc i64 %17 to i32, !dbg !6104
  %18 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6106
  %data_size6 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %18, i32 0, i32 58, !dbg !6107
  store i32 %conv, i32* %data_size6, align 8, !dbg !6108
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %19 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6109
  %data = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %19, i32 0, i32 57, !dbg !6110
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %data, i32 0, i32 0, !dbg !6111
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6112
  %buffer8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %20, i32 0, i32 0, !dbg !6113
  %21 = load i8*, i8** %buffer8, align 8, !dbg !6113
  %22 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6114
  %data_size9 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %22, i32 0, i32 58, !dbg !6115
  %23 = load i32, i32* %data_size9, align 8, !dbg !6115
  %conv10 = sext i32 %23 to i64, !dbg !6114
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %21, i64 %conv10, i32 1, i1 false), !dbg !6111
  %24 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6116
  %loop_filter_across_tiles_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %24, i32 0, i32 23, !dbg !6117
  store i8 1, i8* %loop_filter_across_tiles_enabled_flag, align 1, !dbg !6118
  %25 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6119
  %num_tile_columns = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %25, i32 0, i32 20, !dbg !6120
  store i32 1, i32* %num_tile_columns, align 4, !dbg !6121
  %26 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6122
  %num_tile_rows = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %26, i32 0, i32 21, !dbg !6123
  store i32 1, i32* %num_tile_rows, align 8, !dbg !6124
  %27 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6125
  %uniform_spacing_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %27, i32 0, i32 22, !dbg !6126
  store i8 1, i8* %uniform_spacing_flag, align 4, !dbg !6127
  %28 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6128
  %disable_dbf = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %28, i32 0, i32 27, !dbg !6129
  store i8 0, i8* %disable_dbf, align 1, !dbg !6130
  %29 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6131
  %beta_offset = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %29, i32 0, i32 28, !dbg !6132
  store i32 0, i32* %beta_offset, align 4, !dbg !6133
  %30 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6134
  %tc_offset = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %30, i32 0, i32 29, !dbg !6135
  store i32 0, i32* %tc_offset, align 8, !dbg !6136
  %31 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6137
  %log2_max_transform_skip_block_size = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %31, i32 0, i32 36, !dbg !6138
  store i8 2, i8* %log2_max_transform_skip_block_size, align 1, !dbg !6139
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6140
  %call11 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %32), !dbg !6141
  store i32 %call11, i32* %pps_id, align 4, !dbg !6142
  %33 = load i32, i32* %pps_id, align 4, !dbg !6143
  %cmp12 = icmp uge i32 %33, 64, !dbg !6145
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !6146

if.then14:                                        ; preds = %if.end7
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6147
  %35 = bitcast %struct.AVCodecContext* %34 to i8*, !dbg !6147
  %36 = load i32, i32* %pps_id, align 4, !dbg !6149
  call void (i8*, i32, i8*, ...) @av_log(i8* %35, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.50, i32 0, i32 0), i32 %36), !dbg !6150
  store i32 -1094995529, i32* %ret, align 4, !dbg !6151
  br label %err, !dbg !6152

if.end15:                                         ; preds = %if.end7
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6153
  %call16 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %37), !dbg !6154
  %38 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6155
  %sps_id = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %38, i32 0, i32 0, !dbg !6156
  store i32 %call16, i32* %sps_id, align 8, !dbg !6157
  %39 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6158
  %sps_id17 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %39, i32 0, i32 0, !dbg !6160
  %40 = load i32, i32* %sps_id17, align 8, !dbg !6160
  %cmp18 = icmp uge i32 %40, 16, !dbg !6161
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !6162

if.then20:                                        ; preds = %if.end15
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6163
  %42 = bitcast %struct.AVCodecContext* %41 to i8*, !dbg !6163
  %43 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6165
  %sps_id21 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %43, i32 0, i32 0, !dbg !6166
  %44 = load i32, i32* %sps_id21, align 8, !dbg !6166
  call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i32 0, i32 0), i32 %44), !dbg !6167
  store i32 -1094995529, i32* %ret, align 4, !dbg !6168
  br label %err, !dbg !6169

if.end22:                                         ; preds = %if.end15
  %45 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6170
  %sps_id23 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %45, i32 0, i32 0, !dbg !6172
  %46 = load i32, i32* %sps_id23, align 8, !dbg !6172
  %idxprom = zext i32 %46 to i64, !dbg !6173
  %47 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !6173
  %sps_list = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %47, i32 0, i32 1, !dbg !6174
  %arrayidx = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %sps_list, i64 0, i64 %idxprom, !dbg !6173
  %48 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx, align 8, !dbg !6173
  %tobool24 = icmp ne %struct.AVBufferRef* %48, null, !dbg !6173
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !6175

if.then25:                                        ; preds = %if.end22
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6176
  %50 = bitcast %struct.AVCodecContext* %49 to i8*, !dbg !6176
  %51 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6178
  %sps_id26 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %51, i32 0, i32 0, !dbg !6179
  %52 = load i32, i32* %sps_id26, align 8, !dbg !6179
  call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51, i32 0, i32 0), i32 %52), !dbg !6180
  store i32 -1094995529, i32* %ret, align 4, !dbg !6181
  br label %err, !dbg !6182

if.end27:                                         ; preds = %if.end22
  %53 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6183
  %sps_id28 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %53, i32 0, i32 0, !dbg !6184
  %54 = load i32, i32* %sps_id28, align 8, !dbg !6184
  %idxprom29 = zext i32 %54 to i64, !dbg !6185
  %55 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !6185
  %sps_list30 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %55, i32 0, i32 1, !dbg !6186
  %arrayidx31 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %sps_list30, i64 0, i64 %idxprom29, !dbg !6185
  %56 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx31, align 8, !dbg !6185
  %data32 = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %56, i32 0, i32 1, !dbg !6187
  %57 = load i8*, i8** %data32, align 8, !dbg !6187
  %58 = bitcast i8* %57 to %struct.HEVCSPS*, !dbg !6188
  store %struct.HEVCSPS* %58, %struct.HEVCSPS** %sps, align 8, !dbg !6189
  %59 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6190
  %call33 = call i32 @get_bits1(%struct.GetBitContext* %59), !dbg !6191
  %conv34 = trunc i32 %call33 to i8, !dbg !6191
  %60 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6192
  %dependent_slice_segments_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %60, i32 0, i32 17, !dbg !6193
  store i8 %conv34, i8* %dependent_slice_segments_enabled_flag, align 1, !dbg !6194
  %61 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6195
  %call35 = call i32 @get_bits1(%struct.GetBitContext* %61), !dbg !6196
  %conv36 = trunc i32 %call35 to i8, !dbg !6196
  %62 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6197
  %output_flag_present_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %62, i32 0, i32 15, !dbg !6198
  store i8 %conv36, i8* %output_flag_present_flag, align 1, !dbg !6199
  %63 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6200
  %call37 = call i32 @get_bits(%struct.GetBitContext* %63, i32 3), !dbg !6201
  %64 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6202
  %num_extra_slice_header_bits = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %64, i32 0, i32 34, !dbg !6203
  store i32 %call37, i32* %num_extra_slice_header_bits, align 8, !dbg !6204
  %65 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6205
  %call38 = call i32 @get_bits1(%struct.GetBitContext* %65), !dbg !6206
  %conv39 = trunc i32 %call38 to i8, !dbg !6206
  %66 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6207
  %sign_data_hiding_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %66, i32 0, i32 1, !dbg !6208
  store i8 %conv39, i8* %sign_data_hiding_flag, align 4, !dbg !6209
  %67 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6210
  %call40 = call i32 @get_bits1(%struct.GetBitContext* %67), !dbg !6211
  %conv41 = trunc i32 %call40 to i8, !dbg !6211
  %68 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6212
  %cabac_init_present_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %68, i32 0, i32 2, !dbg !6213
  store i8 %conv41, i8* %cabac_init_present_flag, align 1, !dbg !6214
  %69 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6215
  %call42 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %69), !dbg !6216
  %add = add i32 %call42, 1, !dbg !6217
  %70 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6218
  %num_ref_idx_l0_default_active = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %70, i32 0, i32 3, !dbg !6219
  store i32 %add, i32* %num_ref_idx_l0_default_active, align 8, !dbg !6220
  %71 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6221
  %call43 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %71), !dbg !6222
  %add44 = add i32 %call43, 1, !dbg !6223
  %72 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6224
  %num_ref_idx_l1_default_active = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %72, i32 0, i32 4, !dbg !6225
  store i32 %add44, i32* %num_ref_idx_l1_default_active, align 4, !dbg !6226
  %73 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6227
  %call45 = call i32 @get_se_golomb(%struct.GetBitContext* %73), !dbg !6228
  %74 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6229
  %pic_init_qp_minus26 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %74, i32 0, i32 5, !dbg !6230
  store i32 %call45, i32* %pic_init_qp_minus26, align 8, !dbg !6231
  %75 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6232
  %call46 = call i32 @get_bits1(%struct.GetBitContext* %75), !dbg !6233
  %conv47 = trunc i32 %call46 to i8, !dbg !6233
  %76 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6234
  %constrained_intra_pred_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %76, i32 0, i32 6, !dbg !6235
  store i8 %conv47, i8* %constrained_intra_pred_flag, align 4, !dbg !6236
  %77 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6237
  %call48 = call i32 @get_bits1(%struct.GetBitContext* %77), !dbg !6238
  %conv49 = trunc i32 %call48 to i8, !dbg !6238
  %78 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6239
  %transform_skip_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %78, i32 0, i32 7, !dbg !6240
  store i8 %conv49, i8* %transform_skip_enabled_flag, align 1, !dbg !6241
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6242
  %call50 = call i32 @get_bits1(%struct.GetBitContext* %79), !dbg !6243
  %conv51 = trunc i32 %call50 to i8, !dbg !6243
  %80 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6244
  %cu_qp_delta_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %80, i32 0, i32 8, !dbg !6245
  store i8 %conv51, i8* %cu_qp_delta_enabled_flag, align 2, !dbg !6246
  %81 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6247
  %diff_cu_qp_delta_depth = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %81, i32 0, i32 9, !dbg !6248
  store i32 0, i32* %diff_cu_qp_delta_depth, align 8, !dbg !6249
  %82 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6250
  %cu_qp_delta_enabled_flag52 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %82, i32 0, i32 8, !dbg !6252
  %83 = load i8, i8* %cu_qp_delta_enabled_flag52, align 2, !dbg !6252
  %tobool53 = icmp ne i8 %83, 0, !dbg !6250
  br i1 %tobool53, label %if.then54, label %if.end57, !dbg !6253

if.then54:                                        ; preds = %if.end27
  %84 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6254
  %call55 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %84), !dbg !6255
  %85 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6256
  %diff_cu_qp_delta_depth56 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %85, i32 0, i32 9, !dbg !6257
  store i32 %call55, i32* %diff_cu_qp_delta_depth56, align 8, !dbg !6258
  br label %if.end57, !dbg !6256

if.end57:                                         ; preds = %if.then54, %if.end27
  %86 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6259
  %diff_cu_qp_delta_depth58 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %86, i32 0, i32 9, !dbg !6261
  %87 = load i32, i32* %diff_cu_qp_delta_depth58, align 8, !dbg !6261
  %cmp59 = icmp slt i32 %87, 0, !dbg !6262
  br i1 %cmp59, label %if.then64, label %lor.lhs.false, !dbg !6263

lor.lhs.false:                                    ; preds = %if.end57
  %88 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6264
  %diff_cu_qp_delta_depth61 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %88, i32 0, i32 9, !dbg !6265
  %89 = load i32, i32* %diff_cu_qp_delta_depth61, align 8, !dbg !6265
  %90 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !6266
  %log2_diff_max_min_coding_block_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %90, i32 0, i32 30, !dbg !6267
  %91 = load i32, i32* %log2_diff_max_min_coding_block_size, align 4, !dbg !6267
  %cmp62 = icmp ugt i32 %89, %91, !dbg !6268
  br i1 %cmp62, label %if.then64, label %if.end66, !dbg !6269

if.then64:                                        ; preds = %lor.lhs.false, %if.end57
  %92 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6271
  %93 = bitcast %struct.AVCodecContext* %92 to i8*, !dbg !6271
  %94 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6273
  %diff_cu_qp_delta_depth65 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %94, i32 0, i32 9, !dbg !6274
  %95 = load i32, i32* %diff_cu_qp_delta_depth65, align 8, !dbg !6274
  call void (i8*, i32, i8*, ...) @av_log(i8* %93, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.52, i32 0, i32 0), i32 %95), !dbg !6275
  store i32 -1094995529, i32* %ret, align 4, !dbg !6276
  br label %err, !dbg !6277

if.end66:                                         ; preds = %lor.lhs.false
  %96 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6278
  %call67 = call i32 @get_se_golomb(%struct.GetBitContext* %96), !dbg !6279
  %97 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6280
  %cb_qp_offset = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %97, i32 0, i32 10, !dbg !6281
  store i32 %call67, i32* %cb_qp_offset, align 4, !dbg !6282
  %98 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6283
  %cb_qp_offset68 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %98, i32 0, i32 10, !dbg !6285
  %99 = load i32, i32* %cb_qp_offset68, align 4, !dbg !6285
  %cmp69 = icmp slt i32 %99, -12, !dbg !6286
  br i1 %cmp69, label %if.then75, label %lor.lhs.false71, !dbg !6287

lor.lhs.false71:                                  ; preds = %if.end66
  %100 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6288
  %cb_qp_offset72 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %100, i32 0, i32 10, !dbg !6290
  %101 = load i32, i32* %cb_qp_offset72, align 4, !dbg !6290
  %cmp73 = icmp sgt i32 %101, 12, !dbg !6291
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !6292

if.then75:                                        ; preds = %lor.lhs.false71, %if.end66
  %102 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6293
  %103 = bitcast %struct.AVCodecContext* %102 to i8*, !dbg !6293
  %104 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6295
  %cb_qp_offset76 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %104, i32 0, i32 10, !dbg !6296
  %105 = load i32, i32* %cb_qp_offset76, align 4, !dbg !6296
  call void (i8*, i32, i8*, ...) @av_log(i8* %103, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.53, i32 0, i32 0), i32 %105), !dbg !6297
  store i32 -1094995529, i32* %ret, align 4, !dbg !6298
  br label %err, !dbg !6299

if.end77:                                         ; preds = %lor.lhs.false71
  %106 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6300
  %call78 = call i32 @get_se_golomb(%struct.GetBitContext* %106), !dbg !6301
  %107 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6302
  %cr_qp_offset = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %107, i32 0, i32 11, !dbg !6303
  store i32 %call78, i32* %cr_qp_offset, align 8, !dbg !6304
  %108 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6305
  %cr_qp_offset79 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %108, i32 0, i32 11, !dbg !6307
  %109 = load i32, i32* %cr_qp_offset79, align 8, !dbg !6307
  %cmp80 = icmp slt i32 %109, -12, !dbg !6308
  br i1 %cmp80, label %if.then86, label %lor.lhs.false82, !dbg !6309

lor.lhs.false82:                                  ; preds = %if.end77
  %110 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6310
  %cr_qp_offset83 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %110, i32 0, i32 11, !dbg !6312
  %111 = load i32, i32* %cr_qp_offset83, align 8, !dbg !6312
  %cmp84 = icmp sgt i32 %111, 12, !dbg !6313
  br i1 %cmp84, label %if.then86, label %if.end88, !dbg !6314

if.then86:                                        ; preds = %lor.lhs.false82, %if.end77
  %112 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6315
  %113 = bitcast %struct.AVCodecContext* %112 to i8*, !dbg !6315
  %114 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6317
  %cr_qp_offset87 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %114, i32 0, i32 11, !dbg !6318
  %115 = load i32, i32* %cr_qp_offset87, align 8, !dbg !6318
  call void (i8*, i32, i8*, ...) @av_log(i8* %113, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.54, i32 0, i32 0), i32 %115), !dbg !6319
  store i32 -1094995529, i32* %ret, align 4, !dbg !6320
  br label %err, !dbg !6321

if.end88:                                         ; preds = %lor.lhs.false82
  %116 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6322
  %call89 = call i32 @get_bits1(%struct.GetBitContext* %116), !dbg !6323
  %conv90 = trunc i32 %call89 to i8, !dbg !6323
  %117 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6324
  %pic_slice_level_chroma_qp_offsets_present_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %117, i32 0, i32 12, !dbg !6325
  store i8 %conv90, i8* %pic_slice_level_chroma_qp_offsets_present_flag, align 4, !dbg !6326
  %118 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6327
  %call91 = call i32 @get_bits1(%struct.GetBitContext* %118), !dbg !6328
  %conv92 = trunc i32 %call91 to i8, !dbg !6328
  %119 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6329
  %weighted_pred_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %119, i32 0, i32 13, !dbg !6330
  store i8 %conv92, i8* %weighted_pred_flag, align 1, !dbg !6331
  %120 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6332
  %call93 = call i32 @get_bits1(%struct.GetBitContext* %120), !dbg !6333
  %conv94 = trunc i32 %call93 to i8, !dbg !6333
  %121 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6334
  %weighted_bipred_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %121, i32 0, i32 14, !dbg !6335
  store i8 %conv94, i8* %weighted_bipred_flag, align 2, !dbg !6336
  %122 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6337
  %call95 = call i32 @get_bits1(%struct.GetBitContext* %122), !dbg !6338
  %conv96 = trunc i32 %call95 to i8, !dbg !6338
  %123 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6339
  %transquant_bypass_enable_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %123, i32 0, i32 16, !dbg !6340
  store i8 %conv96, i8* %transquant_bypass_enable_flag, align 8, !dbg !6341
  %124 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6342
  %call97 = call i32 @get_bits1(%struct.GetBitContext* %124), !dbg !6343
  %conv98 = trunc i32 %call97 to i8, !dbg !6343
  %125 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6344
  %tiles_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %125, i32 0, i32 18, !dbg !6345
  store i8 %conv98, i8* %tiles_enabled_flag, align 2, !dbg !6346
  %126 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6347
  %call99 = call i32 @get_bits1(%struct.GetBitContext* %126), !dbg !6348
  %conv100 = trunc i32 %call99 to i8, !dbg !6348
  %127 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6349
  %entropy_coding_sync_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %127, i32 0, i32 19, !dbg !6350
  store i8 %conv100, i8* %entropy_coding_sync_enabled_flag, align 1, !dbg !6351
  %128 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6352
  %tiles_enabled_flag101 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %128, i32 0, i32 18, !dbg !6354
  %129 = load i8, i8* %tiles_enabled_flag101, align 2, !dbg !6354
  %tobool102 = icmp ne i8 %129, 0, !dbg !6352
  br i1 %tobool102, label %if.then103, label %if.end215, !dbg !6355

if.then103:                                       ; preds = %if.end88
  %130 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6356
  %call104 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %130), !dbg !6358
  %add105 = add i32 %call104, 1, !dbg !6359
  %131 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6360
  %num_tile_columns106 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %131, i32 0, i32 20, !dbg !6361
  store i32 %add105, i32* %num_tile_columns106, align 4, !dbg !6362
  %132 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6363
  %call107 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %132), !dbg !6364
  %add108 = add i32 %call107, 1, !dbg !6365
  %133 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6366
  %num_tile_rows109 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %133, i32 0, i32 21, !dbg !6367
  store i32 %add108, i32* %num_tile_rows109, align 8, !dbg !6368
  %134 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6369
  %num_tile_columns110 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %134, i32 0, i32 20, !dbg !6371
  %135 = load i32, i32* %num_tile_columns110, align 4, !dbg !6371
  %cmp111 = icmp sle i32 %135, 0, !dbg !6372
  br i1 %cmp111, label %if.then117, label %lor.lhs.false113, !dbg !6373

lor.lhs.false113:                                 ; preds = %if.then103
  %136 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6374
  %num_tile_columns114 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %136, i32 0, i32 20, !dbg !6375
  %137 = load i32, i32* %num_tile_columns114, align 4, !dbg !6375
  %138 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !6376
  %width = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %138, i32 0, i32 47, !dbg !6377
  %139 = load i32, i32* %width, align 4, !dbg !6377
  %cmp115 = icmp sge i32 %137, %139, !dbg !6378
  br i1 %cmp115, label %if.then117, label %if.end119, !dbg !6379

if.then117:                                       ; preds = %lor.lhs.false113, %if.then103
  %140 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6381
  %141 = bitcast %struct.AVCodecContext* %140 to i8*, !dbg !6381
  %142 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6383
  %num_tile_columns118 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %142, i32 0, i32 20, !dbg !6384
  %143 = load i32, i32* %num_tile_columns118, align 4, !dbg !6384
  %sub = sub nsw i32 %143, 1, !dbg !6385
  call void (i8*, i32, i8*, ...) @av_log(i8* %141, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.55, i32 0, i32 0), i32 %sub), !dbg !6386
  store i32 -1094995529, i32* %ret, align 4, !dbg !6387
  br label %err, !dbg !6388

if.end119:                                        ; preds = %lor.lhs.false113
  %144 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6389
  %num_tile_rows120 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %144, i32 0, i32 21, !dbg !6391
  %145 = load i32, i32* %num_tile_rows120, align 8, !dbg !6391
  %cmp121 = icmp sle i32 %145, 0, !dbg !6392
  br i1 %cmp121, label %if.then127, label %lor.lhs.false123, !dbg !6393

lor.lhs.false123:                                 ; preds = %if.end119
  %146 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6394
  %num_tile_rows124 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %146, i32 0, i32 21, !dbg !6395
  %147 = load i32, i32* %num_tile_rows124, align 8, !dbg !6395
  %148 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !6396
  %height = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %148, i32 0, i32 48, !dbg !6397
  %149 = load i32, i32* %height, align 4, !dbg !6397
  %cmp125 = icmp sge i32 %147, %149, !dbg !6398
  br i1 %cmp125, label %if.then127, label %if.end130, !dbg !6399

if.then127:                                       ; preds = %lor.lhs.false123, %if.end119
  %150 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6400
  %151 = bitcast %struct.AVCodecContext* %150 to i8*, !dbg !6400
  %152 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6402
  %num_tile_rows128 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %152, i32 0, i32 21, !dbg !6403
  %153 = load i32, i32* %num_tile_rows128, align 8, !dbg !6403
  %sub129 = sub nsw i32 %153, 1, !dbg !6404
  call void (i8*, i32, i8*, ...) @av_log(i8* %151, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.56, i32 0, i32 0), i32 %sub129), !dbg !6405
  store i32 -1094995529, i32* %ret, align 4, !dbg !6406
  br label %err, !dbg !6407

if.end130:                                        ; preds = %lor.lhs.false123
  %154 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6408
  %num_tile_columns131 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %154, i32 0, i32 20, !dbg !6409
  %155 = load i32, i32* %num_tile_columns131, align 4, !dbg !6409
  %conv132 = sext i32 %155 to i64, !dbg !6408
  %call133 = call i8* @av_malloc_array(i64 %conv132, i64 4), !dbg !6410
  %156 = bitcast i8* %call133 to i32*, !dbg !6410
  %157 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6411
  %column_width = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %157, i32 0, i32 46, !dbg !6412
  store i32* %156, i32** %column_width, align 8, !dbg !6413
  %158 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6414
  %num_tile_rows134 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %158, i32 0, i32 21, !dbg !6415
  %159 = load i32, i32* %num_tile_rows134, align 8, !dbg !6415
  %conv135 = sext i32 %159 to i64, !dbg !6414
  %call136 = call i8* @av_malloc_array(i64 %conv135, i64 4), !dbg !6416
  %160 = bitcast i8* %call136 to i32*, !dbg !6416
  %161 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6417
  %row_height = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %161, i32 0, i32 47, !dbg !6418
  store i32* %160, i32** %row_height, align 8, !dbg !6419
  %162 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6420
  %column_width137 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %162, i32 0, i32 46, !dbg !6422
  %163 = load i32*, i32** %column_width137, align 8, !dbg !6422
  %tobool138 = icmp ne i32* %163, null, !dbg !6420
  br i1 %tobool138, label %lor.lhs.false139, label %if.then142, !dbg !6423

lor.lhs.false139:                                 ; preds = %if.end130
  %164 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6424
  %row_height140 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %164, i32 0, i32 47, !dbg !6426
  %165 = load i32*, i32** %row_height140, align 8, !dbg !6426
  %tobool141 = icmp ne i32* %165, null, !dbg !6424
  br i1 %tobool141, label %if.end143, label %if.then142, !dbg !6427

if.then142:                                       ; preds = %lor.lhs.false139, %if.end130
  store i32 -12, i32* %ret, align 4, !dbg !6428
  br label %err, !dbg !6430

if.end143:                                        ; preds = %lor.lhs.false139
  %166 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6431
  %call144 = call i32 @get_bits1(%struct.GetBitContext* %166), !dbg !6432
  %conv145 = trunc i32 %call144 to i8, !dbg !6432
  %167 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6433
  %uniform_spacing_flag146 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %167, i32 0, i32 22, !dbg !6434
  store i8 %conv145, i8* %uniform_spacing_flag146, align 4, !dbg !6435
  %168 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6436
  %uniform_spacing_flag147 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %168, i32 0, i32 22, !dbg !6438
  %169 = load i8, i8* %uniform_spacing_flag147, align 4, !dbg !6438
  %tobool148 = icmp ne i8 %169, 0, !dbg !6436
  br i1 %tobool148, label %if.end211, label %if.then149, !dbg !6439

if.then149:                                       ; preds = %if.end143
  call void @llvm.dbg.declare(metadata i64* %sum, metadata !6440, metadata !1892), !dbg !6442
  store i64 0, i64* %sum, align 8, !dbg !6442
  store i32 0, i32* %i, align 4, !dbg !6443
  br label %for.cond, !dbg !6445

for.cond:                                         ; preds = %for.inc, %if.then149
  %170 = load i32, i32* %i, align 4, !dbg !6446
  %171 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6449
  %num_tile_columns150 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %171, i32 0, i32 20, !dbg !6450
  %172 = load i32, i32* %num_tile_columns150, align 4, !dbg !6450
  %sub151 = sub nsw i32 %172, 1, !dbg !6451
  %cmp152 = icmp slt i32 %170, %sub151, !dbg !6452
  br i1 %cmp152, label %for.body, label %for.end, !dbg !6453

for.body:                                         ; preds = %for.cond
  %173 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6454
  %call154 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %173), !dbg !6456
  %add155 = add i32 %call154, 1, !dbg !6457
  %174 = load i32, i32* %i, align 4, !dbg !6458
  %idxprom156 = sext i32 %174 to i64, !dbg !6459
  %175 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6459
  %column_width157 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %175, i32 0, i32 46, !dbg !6460
  %176 = load i32*, i32** %column_width157, align 8, !dbg !6460
  %arrayidx158 = getelementptr inbounds i32, i32* %176, i64 %idxprom156, !dbg !6459
  store i32 %add155, i32* %arrayidx158, align 4, !dbg !6461
  %177 = load i32, i32* %i, align 4, !dbg !6462
  %idxprom159 = sext i32 %177 to i64, !dbg !6463
  %178 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6463
  %column_width160 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %178, i32 0, i32 46, !dbg !6464
  %179 = load i32*, i32** %column_width160, align 8, !dbg !6464
  %arrayidx161 = getelementptr inbounds i32, i32* %179, i64 %idxprom159, !dbg !6463
  %180 = load i32, i32* %arrayidx161, align 4, !dbg !6463
  %conv162 = zext i32 %180 to i64, !dbg !6463
  %181 = load i64, i64* %sum, align 8, !dbg !6465
  %add163 = add i64 %181, %conv162, !dbg !6465
  store i64 %add163, i64* %sum, align 8, !dbg !6465
  br label %for.inc, !dbg !6466

for.inc:                                          ; preds = %for.body
  %182 = load i32, i32* %i, align 4, !dbg !6467
  %inc = add nsw i32 %182, 1, !dbg !6467
  store i32 %inc, i32* %i, align 4, !dbg !6467
  br label %for.cond, !dbg !6469, !llvm.loop !6470

for.end:                                          ; preds = %for.cond
  %183 = load i64, i64* %sum, align 8, !dbg !6472
  %184 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !6474
  %ctb_width = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %184, i32 0, i32 49, !dbg !6475
  %185 = load i32, i32* %ctb_width, align 4, !dbg !6475
  %conv164 = sext i32 %185 to i64, !dbg !6474
  %cmp165 = icmp uge i64 %183, %conv164, !dbg !6476
  br i1 %cmp165, label %if.then167, label %if.end168, !dbg !6477

if.then167:                                       ; preds = %for.end
  %186 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6478
  %187 = bitcast %struct.AVCodecContext* %186 to i8*, !dbg !6478
  call void (i8*, i32, i8*, ...) @av_log(i8* %187, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.57, i32 0, i32 0)), !dbg !6480
  store i32 -1094995529, i32* %ret, align 4, !dbg !6481
  br label %err, !dbg !6482

if.end168:                                        ; preds = %for.end
  %188 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !6483
  %ctb_width169 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %188, i32 0, i32 49, !dbg !6484
  %189 = load i32, i32* %ctb_width169, align 4, !dbg !6484
  %conv170 = sext i32 %189 to i64, !dbg !6483
  %190 = load i64, i64* %sum, align 8, !dbg !6485
  %sub171 = sub i64 %conv170, %190, !dbg !6486
  %conv172 = trunc i64 %sub171 to i32, !dbg !6483
  %191 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6487
  %num_tile_columns173 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %191, i32 0, i32 20, !dbg !6488
  %192 = load i32, i32* %num_tile_columns173, align 4, !dbg !6488
  %sub174 = sub nsw i32 %192, 1, !dbg !6489
  %idxprom175 = sext i32 %sub174 to i64, !dbg !6490
  %193 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6490
  %column_width176 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %193, i32 0, i32 46, !dbg !6491
  %194 = load i32*, i32** %column_width176, align 8, !dbg !6491
  %arrayidx177 = getelementptr inbounds i32, i32* %194, i64 %idxprom175, !dbg !6490
  store i32 %conv172, i32* %arrayidx177, align 4, !dbg !6492
  store i64 0, i64* %sum, align 8, !dbg !6493
  store i32 0, i32* %i, align 4, !dbg !6494
  br label %for.cond178, !dbg !6496

for.cond178:                                      ; preds = %for.inc194, %if.end168
  %195 = load i32, i32* %i, align 4, !dbg !6497
  %196 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6500
  %num_tile_rows179 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %196, i32 0, i32 21, !dbg !6501
  %197 = load i32, i32* %num_tile_rows179, align 8, !dbg !6501
  %sub180 = sub nsw i32 %197, 1, !dbg !6502
  %cmp181 = icmp slt i32 %195, %sub180, !dbg !6503
  br i1 %cmp181, label %for.body183, label %for.end196, !dbg !6504

for.body183:                                      ; preds = %for.cond178
  %198 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6505
  %call184 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %198), !dbg !6507
  %add185 = add i32 %call184, 1, !dbg !6508
  %199 = load i32, i32* %i, align 4, !dbg !6509
  %idxprom186 = sext i32 %199 to i64, !dbg !6510
  %200 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6510
  %row_height187 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %200, i32 0, i32 47, !dbg !6511
  %201 = load i32*, i32** %row_height187, align 8, !dbg !6511
  %arrayidx188 = getelementptr inbounds i32, i32* %201, i64 %idxprom186, !dbg !6510
  store i32 %add185, i32* %arrayidx188, align 4, !dbg !6512
  %202 = load i32, i32* %i, align 4, !dbg !6513
  %idxprom189 = sext i32 %202 to i64, !dbg !6514
  %203 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6514
  %row_height190 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %203, i32 0, i32 47, !dbg !6515
  %204 = load i32*, i32** %row_height190, align 8, !dbg !6515
  %arrayidx191 = getelementptr inbounds i32, i32* %204, i64 %idxprom189, !dbg !6514
  %205 = load i32, i32* %arrayidx191, align 4, !dbg !6514
  %conv192 = zext i32 %205 to i64, !dbg !6514
  %206 = load i64, i64* %sum, align 8, !dbg !6516
  %add193 = add i64 %206, %conv192, !dbg !6516
  store i64 %add193, i64* %sum, align 8, !dbg !6516
  br label %for.inc194, !dbg !6517

for.inc194:                                       ; preds = %for.body183
  %207 = load i32, i32* %i, align 4, !dbg !6518
  %inc195 = add nsw i32 %207, 1, !dbg !6518
  store i32 %inc195, i32* %i, align 4, !dbg !6518
  br label %for.cond178, !dbg !6520, !llvm.loop !6521

for.end196:                                       ; preds = %for.cond178
  %208 = load i64, i64* %sum, align 8, !dbg !6523
  %209 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !6525
  %ctb_height = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %209, i32 0, i32 50, !dbg !6526
  %210 = load i32, i32* %ctb_height, align 4, !dbg !6526
  %conv197 = sext i32 %210 to i64, !dbg !6525
  %cmp198 = icmp uge i64 %208, %conv197, !dbg !6527
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !6528

if.then200:                                       ; preds = %for.end196
  %211 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6529
  %212 = bitcast %struct.AVCodecContext* %211 to i8*, !dbg !6529
  call void (i8*, i32, i8*, ...) @av_log(i8* %212, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.58, i32 0, i32 0)), !dbg !6531
  store i32 -1094995529, i32* %ret, align 4, !dbg !6532
  br label %err, !dbg !6533

if.end201:                                        ; preds = %for.end196
  %213 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !6534
  %ctb_height202 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %213, i32 0, i32 50, !dbg !6535
  %214 = load i32, i32* %ctb_height202, align 4, !dbg !6535
  %conv203 = sext i32 %214 to i64, !dbg !6534
  %215 = load i64, i64* %sum, align 8, !dbg !6536
  %sub204 = sub i64 %conv203, %215, !dbg !6537
  %conv205 = trunc i64 %sub204 to i32, !dbg !6534
  %216 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6538
  %num_tile_rows206 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %216, i32 0, i32 21, !dbg !6539
  %217 = load i32, i32* %num_tile_rows206, align 8, !dbg !6539
  %sub207 = sub nsw i32 %217, 1, !dbg !6540
  %idxprom208 = sext i32 %sub207 to i64, !dbg !6541
  %218 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6541
  %row_height209 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %218, i32 0, i32 47, !dbg !6542
  %219 = load i32*, i32** %row_height209, align 8, !dbg !6542
  %arrayidx210 = getelementptr inbounds i32, i32* %219, i64 %idxprom208, !dbg !6541
  store i32 %conv205, i32* %arrayidx210, align 4, !dbg !6543
  br label %if.end211, !dbg !6544

if.end211:                                        ; preds = %if.end201, %if.end143
  %220 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6545
  %call212 = call i32 @get_bits1(%struct.GetBitContext* %220), !dbg !6546
  %conv213 = trunc i32 %call212 to i8, !dbg !6546
  %221 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6547
  %loop_filter_across_tiles_enabled_flag214 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %221, i32 0, i32 23, !dbg !6548
  store i8 %conv213, i8* %loop_filter_across_tiles_enabled_flag214, align 1, !dbg !6549
  br label %if.end215, !dbg !6550

if.end215:                                        ; preds = %if.end211, %if.end88
  %222 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6551
  %call216 = call i32 @get_bits1(%struct.GetBitContext* %222), !dbg !6552
  %conv217 = trunc i32 %call216 to i8, !dbg !6552
  %223 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6553
  %seq_loop_filter_across_slices_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %223, i32 0, i32 24, !dbg !6554
  store i8 %conv217, i8* %seq_loop_filter_across_slices_enabled_flag, align 2, !dbg !6555
  %224 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6556
  %call218 = call i32 @get_bits1(%struct.GetBitContext* %224), !dbg !6557
  %conv219 = trunc i32 %call218 to i8, !dbg !6557
  %225 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6558
  %deblocking_filter_control_present_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %225, i32 0, i32 25, !dbg !6559
  store i8 %conv219, i8* %deblocking_filter_control_present_flag, align 1, !dbg !6560
  %226 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6561
  %deblocking_filter_control_present_flag220 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %226, i32 0, i32 25, !dbg !6563
  %227 = load i8, i8* %deblocking_filter_control_present_flag220, align 1, !dbg !6563
  %tobool221 = icmp ne i8 %227, 0, !dbg !6561
  br i1 %tobool221, label %if.then222, label %if.end251, !dbg !6564

if.then222:                                       ; preds = %if.end215
  %228 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6565
  %call223 = call i32 @get_bits1(%struct.GetBitContext* %228), !dbg !6567
  %conv224 = trunc i32 %call223 to i8, !dbg !6567
  %229 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6568
  %deblocking_filter_override_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %229, i32 0, i32 26, !dbg !6569
  store i8 %conv224, i8* %deblocking_filter_override_enabled_flag, align 8, !dbg !6570
  %230 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6571
  %call225 = call i32 @get_bits1(%struct.GetBitContext* %230), !dbg !6572
  %conv226 = trunc i32 %call225 to i8, !dbg !6572
  %231 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6573
  %disable_dbf227 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %231, i32 0, i32 27, !dbg !6574
  store i8 %conv226, i8* %disable_dbf227, align 1, !dbg !6575
  %232 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6576
  %disable_dbf228 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %232, i32 0, i32 27, !dbg !6578
  %233 = load i8, i8* %disable_dbf228, align 1, !dbg !6578
  %tobool229 = icmp ne i8 %233, 0, !dbg !6576
  br i1 %tobool229, label %if.end250, label %if.then230, !dbg !6579

if.then230:                                       ; preds = %if.then222
  call void @llvm.dbg.declare(metadata i32* %beta_offset_div2, metadata !6580, metadata !1892), !dbg !6582
  %234 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6583
  %call231 = call i32 @get_se_golomb(%struct.GetBitContext* %234), !dbg !6584
  store i32 %call231, i32* %beta_offset_div2, align 4, !dbg !6582
  call void @llvm.dbg.declare(metadata i32* %tc_offset_div2, metadata !6585, metadata !1892), !dbg !6586
  %235 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6587
  %call232 = call i32 @get_se_golomb(%struct.GetBitContext* %235), !dbg !6588
  store i32 %call232, i32* %tc_offset_div2, align 4, !dbg !6586
  %236 = load i32, i32* %beta_offset_div2, align 4, !dbg !6589
  %cmp233 = icmp slt i32 %236, -6, !dbg !6591
  br i1 %cmp233, label %if.then238, label %lor.lhs.false235, !dbg !6592

lor.lhs.false235:                                 ; preds = %if.then230
  %237 = load i32, i32* %beta_offset_div2, align 4, !dbg !6593
  %cmp236 = icmp sgt i32 %237, 6, !dbg !6595
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !6596

if.then238:                                       ; preds = %lor.lhs.false235, %if.then230
  %238 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6597
  %239 = bitcast %struct.AVCodecContext* %238 to i8*, !dbg !6597
  %240 = load i32, i32* %beta_offset_div2, align 4, !dbg !6599
  call void (i8*, i32, i8*, ...) @av_log(i8* %239, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.59, i32 0, i32 0), i32 %240), !dbg !6600
  store i32 -1094995529, i32* %ret, align 4, !dbg !6601
  br label %err, !dbg !6602

if.end239:                                        ; preds = %lor.lhs.false235
  %241 = load i32, i32* %tc_offset_div2, align 4, !dbg !6603
  %cmp240 = icmp slt i32 %241, -6, !dbg !6605
  br i1 %cmp240, label %if.then245, label %lor.lhs.false242, !dbg !6606

lor.lhs.false242:                                 ; preds = %if.end239
  %242 = load i32, i32* %tc_offset_div2, align 4, !dbg !6607
  %cmp243 = icmp sgt i32 %242, 6, !dbg !6609
  br i1 %cmp243, label %if.then245, label %if.end246, !dbg !6610

if.then245:                                       ; preds = %lor.lhs.false242, %if.end239
  %243 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6611
  %244 = bitcast %struct.AVCodecContext* %243 to i8*, !dbg !6611
  %245 = load i32, i32* %tc_offset_div2, align 4, !dbg !6613
  call void (i8*, i32, i8*, ...) @av_log(i8* %244, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.60, i32 0, i32 0), i32 %245), !dbg !6614
  store i32 -1094995529, i32* %ret, align 4, !dbg !6615
  br label %err, !dbg !6616

if.end246:                                        ; preds = %lor.lhs.false242
  %246 = load i32, i32* %beta_offset_div2, align 4, !dbg !6617
  %mul = mul nsw i32 2, %246, !dbg !6618
  %247 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6619
  %beta_offset247 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %247, i32 0, i32 28, !dbg !6620
  store i32 %mul, i32* %beta_offset247, align 4, !dbg !6621
  %248 = load i32, i32* %tc_offset_div2, align 4, !dbg !6622
  %mul248 = mul nsw i32 2, %248, !dbg !6623
  %249 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6624
  %tc_offset249 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %249, i32 0, i32 29, !dbg !6625
  store i32 %mul248, i32* %tc_offset249, align 8, !dbg !6626
  br label %if.end250, !dbg !6627

if.end250:                                        ; preds = %if.end246, %if.then222
  br label %if.end251, !dbg !6628

if.end251:                                        ; preds = %if.end250, %if.end215
  %250 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6629
  %call252 = call i32 @get_bits1(%struct.GetBitContext* %250), !dbg !6630
  %conv253 = trunc i32 %call252 to i8, !dbg !6630
  %251 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6631
  %scaling_list_data_present_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %251, i32 0, i32 30, !dbg !6632
  store i8 %conv253, i8* %scaling_list_data_present_flag, align 4, !dbg !6633
  %252 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6634
  %scaling_list_data_present_flag254 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %252, i32 0, i32 30, !dbg !6636
  %253 = load i8, i8* %scaling_list_data_present_flag254, align 4, !dbg !6636
  %tobool255 = icmp ne i8 %253, 0, !dbg !6634
  br i1 %tobool255, label %if.then256, label %if.end263, !dbg !6637

if.then256:                                       ; preds = %if.end251
  %254 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6638
  %scaling_list = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %254, i32 0, i32 31, !dbg !6640
  call void @set_default_scaling_list_data(%struct.ScalingList* %scaling_list), !dbg !6641
  %255 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6642
  %256 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6643
  %257 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6644
  %scaling_list257 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %257, i32 0, i32 31, !dbg !6645
  %258 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !6646
  %call258 = call i32 @scaling_list_data(%struct.GetBitContext* %255, %struct.AVCodecContext* %256, %struct.ScalingList* %scaling_list257, %struct.HEVCSPS* %258), !dbg !6647
  store i32 %call258, i32* %ret, align 4, !dbg !6648
  %259 = load i32, i32* %ret, align 4, !dbg !6649
  %cmp259 = icmp slt i32 %259, 0, !dbg !6651
  br i1 %cmp259, label %if.then261, label %if.end262, !dbg !6652

if.then261:                                       ; preds = %if.then256
  br label %err, !dbg !6653

if.end262:                                        ; preds = %if.then256
  br label %if.end263, !dbg !6654

if.end263:                                        ; preds = %if.end262, %if.end251
  %260 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6655
  %call264 = call i32 @get_bits1(%struct.GetBitContext* %260), !dbg !6656
  %conv265 = trunc i32 %call264 to i8, !dbg !6656
  %261 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6657
  %lists_modification_present_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %261, i32 0, i32 32, !dbg !6658
  store i8 %conv265, i8* %lists_modification_present_flag, align 1, !dbg !6659
  %262 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6660
  %call266 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %262), !dbg !6661
  store i32 %call266, i32* %log2_parallel_merge_level_minus2, align 4, !dbg !6662
  %263 = load i32, i32* %log2_parallel_merge_level_minus2, align 4, !dbg !6663
  %264 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !6665
  %log2_ctb_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %264, i32 0, i32 33, !dbg !6666
  %265 = load i32, i32* %log2_ctb_size, align 4, !dbg !6666
  %cmp267 = icmp ugt i32 %263, %265, !dbg !6667
  br i1 %cmp267, label %if.then269, label %if.end270, !dbg !6668

if.then269:                                       ; preds = %if.end263
  %266 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6669
  %267 = bitcast %struct.AVCodecContext* %266 to i8*, !dbg !6669
  %268 = load i32, i32* %log2_parallel_merge_level_minus2, align 4, !dbg !6671
  call void (i8*, i32, i8*, ...) @av_log(i8* %267, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.61, i32 0, i32 0), i32 %268), !dbg !6672
  store i32 -1094995529, i32* %ret, align 4, !dbg !6673
  br label %err, !dbg !6674

if.end270:                                        ; preds = %if.end263
  %269 = load i32, i32* %log2_parallel_merge_level_minus2, align 4, !dbg !6675
  %add271 = add i32 %269, 2, !dbg !6676
  %270 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6677
  %log2_parallel_merge_level = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %270, i32 0, i32 33, !dbg !6678
  store i32 %add271, i32* %log2_parallel_merge_level, align 4, !dbg !6679
  %271 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6680
  %call272 = call i32 @get_bits1(%struct.GetBitContext* %271), !dbg !6681
  %conv273 = trunc i32 %call272 to i8, !dbg !6681
  %272 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6682
  %slice_header_extension_present_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %272, i32 0, i32 35, !dbg !6683
  store i8 %conv273, i8* %slice_header_extension_present_flag, align 4, !dbg !6684
  %273 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6685
  %call274 = call i32 @get_bits1(%struct.GetBitContext* %273), !dbg !6687
  %tobool275 = icmp ne i32 %call274, 0, !dbg !6687
  br i1 %tobool275, label %if.then276, label %if.end292, !dbg !6688

if.then276:                                       ; preds = %if.end270
  %274 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6689
  %call277 = call i32 @get_bits1(%struct.GetBitContext* %274), !dbg !6691
  %conv278 = trunc i32 %call277 to i8, !dbg !6691
  %275 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6692
  %pps_range_extensions_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %275, i32 0, i32 37, !dbg !6693
  store i8 %conv278, i8* %pps_range_extensions_flag, align 2, !dbg !6694
  %276 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6695
  call void @skip_bits(%struct.GetBitContext* %276, i32 7), !dbg !6696
  %277 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !6697
  %ptl = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %277, i32 0, i32 15, !dbg !6699
  %general_ptl = getelementptr inbounds %struct.PTL, %struct.PTL* %ptl, i32 0, i32 0, !dbg !6700
  %profile_idc = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %general_ptl, i32 0, i32 2, !dbg !6701
  %278 = load i8, i8* %profile_idc, align 2, !dbg !6701
  %conv279 = zext i8 %278 to i32, !dbg !6697
  %cmp280 = icmp eq i32 %conv279, 4, !dbg !6702
  br i1 %cmp280, label %land.lhs.true, label %if.end291, !dbg !6703

land.lhs.true:                                    ; preds = %if.then276
  %279 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6704
  %pps_range_extensions_flag282 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %279, i32 0, i32 37, !dbg !6706
  %280 = load i8, i8* %pps_range_extensions_flag282, align 2, !dbg !6706
  %conv283 = zext i8 %280 to i32, !dbg !6704
  %tobool284 = icmp ne i32 %conv283, 0, !dbg !6704
  br i1 %tobool284, label %if.then285, label %if.end291, !dbg !6707

if.then285:                                       ; preds = %land.lhs.true
  %281 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6708
  %282 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6711
  %283 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6712
  %284 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !6713
  %call286 = call i32 @pps_range_extensions(%struct.GetBitContext* %281, %struct.AVCodecContext* %282, %struct.HEVCPPS* %283, %struct.HEVCSPS* %284), !dbg !6714
  store i32 %call286, i32* %ret, align 4, !dbg !6715
  %cmp287 = icmp slt i32 %call286, 0, !dbg !6716
  br i1 %cmp287, label %if.then289, label %if.end290, !dbg !6717

if.then289:                                       ; preds = %if.then285
  br label %err, !dbg !6718

if.end290:                                        ; preds = %if.then285
  br label %if.end291, !dbg !6719

if.end291:                                        ; preds = %if.end290, %land.lhs.true, %if.then276
  br label %if.end292, !dbg !6720

if.end292:                                        ; preds = %if.end291, %if.end270
  %285 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6721
  %286 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6722
  %287 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6723
  %288 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !6724
  %call293 = call i32 @setup_pps(%struct.AVCodecContext* %285, %struct.GetBitContext* %286, %struct.HEVCPPS* %287, %struct.HEVCSPS* %288), !dbg !6725
  store i32 %call293, i32* %ret, align 4, !dbg !6726
  %289 = load i32, i32* %ret, align 4, !dbg !6727
  %cmp294 = icmp slt i32 %289, 0, !dbg !6729
  br i1 %cmp294, label %if.then296, label %if.end297, !dbg !6730

if.then296:                                       ; preds = %if.end292
  br label %err, !dbg !6731

if.end297:                                        ; preds = %if.end292
  %290 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6732
  %call298 = call i32 @get_bits_left(%struct.GetBitContext* %290), !dbg !6734
  %cmp299 = icmp slt i32 %call298, 0, !dbg !6735
  br i1 %cmp299, label %if.then301, label %if.end304, !dbg !6736

if.then301:                                       ; preds = %if.end297
  %291 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6737
  %292 = bitcast %struct.AVCodecContext* %291 to i8*, !dbg !6737
  %293 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6739
  %call302 = call i32 @get_bits_left(%struct.GetBitContext* %293), !dbg !6740
  %sub303 = sub nsw i32 0, %call302, !dbg !6741
  call void (i8*, i32, i8*, ...) @av_log(i8* %292, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.62, i32 0, i32 0), i32 %sub303), !dbg !6742
  br label %err, !dbg !6743

if.end304:                                        ; preds = %if.end297
  %294 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !6744
  %295 = load i32, i32* %pps_id, align 4, !dbg !6745
  call void @remove_pps(%struct.HEVCParamSets* %294, i32 %295), !dbg !6746
  %296 = load %struct.AVBufferRef*, %struct.AVBufferRef** %pps_buf, align 8, !dbg !6747
  %297 = load i32, i32* %pps_id, align 4, !dbg !6748
  %idxprom305 = zext i32 %297 to i64, !dbg !6749
  %298 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !6749
  %pps_list = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %298, i32 0, i32 2, !dbg !6750
  %arrayidx306 = getelementptr inbounds [64 x %struct.AVBufferRef*], [64 x %struct.AVBufferRef*]* %pps_list, i64 0, i64 %idxprom305, !dbg !6749
  store %struct.AVBufferRef* %296, %struct.AVBufferRef** %arrayidx306, align 8, !dbg !6751
  store i32 0, i32* %retval, align 4, !dbg !6752
  br label %return, !dbg !6752

err:                                              ; preds = %if.then301, %if.then296, %if.then289, %if.then269, %if.then261, %if.then245, %if.then238, %if.then200, %if.then167, %if.then142, %if.then127, %if.then117, %if.then86, %if.then75, %if.then64, %if.then25, %if.then20, %if.then14
  call void @av_buffer_unref(%struct.AVBufferRef** %pps_buf), !dbg !6753
  %299 = load i32, i32* %ret, align 4, !dbg !6754
  store i32 %299, i32* %retval, align 4, !dbg !6755
  br label %return, !dbg !6755

return:                                           ; preds = %err, %if.end304, %if.then3, %if.then
  %300 = load i32, i32* %retval, align 4, !dbg !6756
  ret i32 %300, !dbg !6756
}

declare noalias i8* @av_mallocz(i64) #3

declare %struct.AVBufferRef* @av_buffer_create(i8*, i32, void (i8*, i8*)*, i8*, i32) #3

; Function Attrs: nounwind uwtable
define internal void @hevc_pps_free(i8* %opaque, i8* %data) #0 !dbg !6757 {
entry:
  %opaque.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %pps = alloca %struct.HEVCPPS*, align 8
  store i8* %opaque, i8** %opaque.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opaque.addr, metadata !6760, metadata !1892), !dbg !6761
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6762, metadata !1892), !dbg !6763
  call void @llvm.dbg.declare(metadata %struct.HEVCPPS** %pps, metadata !6764, metadata !1892), !dbg !6765
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6766
  %1 = bitcast i8* %0 to %struct.HEVCPPS*, !dbg !6767
  store %struct.HEVCPPS* %1, %struct.HEVCPPS** %pps, align 8, !dbg !6765
  %2 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6768
  %column_width = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %2, i32 0, i32 46, !dbg !6769
  %3 = bitcast i32** %column_width to i8*, !dbg !6770
  call void @av_freep(i8* %3), !dbg !6771
  %4 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6772
  %row_height = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %4, i32 0, i32 47, !dbg !6773
  %5 = bitcast i32** %row_height to i8*, !dbg !6774
  call void @av_freep(i8* %5), !dbg !6775
  %6 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6776
  %col_bd = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %6, i32 0, i32 48, !dbg !6777
  %7 = bitcast i32** %col_bd to i8*, !dbg !6778
  call void @av_freep(i8* %7), !dbg !6779
  %8 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6780
  %row_bd = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %8, i32 0, i32 49, !dbg !6781
  %9 = bitcast i32** %row_bd to i8*, !dbg !6782
  call void @av_freep(i8* %9), !dbg !6783
  %10 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6784
  %col_idxX = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %10, i32 0, i32 50, !dbg !6785
  %11 = bitcast i32** %col_idxX to i8*, !dbg !6786
  call void @av_freep(i8* %11), !dbg !6787
  %12 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6788
  %ctb_addr_rs_to_ts = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %12, i32 0, i32 51, !dbg !6789
  %13 = bitcast i32** %ctb_addr_rs_to_ts to i8*, !dbg !6790
  call void @av_freep(i8* %13), !dbg !6791
  %14 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6792
  %ctb_addr_ts_to_rs = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %14, i32 0, i32 52, !dbg !6793
  %15 = bitcast i32** %ctb_addr_ts_to_rs to i8*, !dbg !6794
  call void @av_freep(i8* %15), !dbg !6795
  %16 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6796
  %tile_pos_rs = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %16, i32 0, i32 54, !dbg !6797
  %17 = bitcast i32** %tile_pos_rs to i8*, !dbg !6798
  call void @av_freep(i8* %17), !dbg !6799
  %18 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6800
  %tile_id = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %18, i32 0, i32 53, !dbg !6801
  %19 = bitcast i32** %tile_id to i8*, !dbg !6802
  call void @av_freep(i8* %19), !dbg !6803
  %20 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !6804
  %min_tb_addr_zs_tab = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %20, i32 0, i32 56, !dbg !6805
  %21 = bitcast i32** %min_tb_addr_zs_tab to i8*, !dbg !6806
  call void @av_freep(i8* %21), !dbg !6807
  %22 = bitcast %struct.HEVCPPS** %pps to i8*, !dbg !6808
  call void @av_freep(i8* %22), !dbg !6809
  ret void, !dbg !6810
}

declare void @av_freep(i8*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_se_golomb(%struct.GetBitContext* %gb) #2 !dbg !6811 {
entry:
  %x.addr.i46 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i46, metadata !2905, metadata !1892), !dbg !6812
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2905, metadata !1892), !dbg !6816
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %buf = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  %log = alloca i32, align 4
  %sign = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6818, metadata !1892), !dbg !6819
  call void @llvm.dbg.declare(metadata i32* %buf, metadata !6820, metadata !1892), !dbg !6821
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !6822, metadata !1892), !dbg !6823
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6824
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6825
  %1 = load i32, i32* %index, align 8, !dbg !6825
  store i32 %1, i32* %re_index, align 4, !dbg !6823
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !6826, metadata !1892), !dbg !6827
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !6828, metadata !1892), !dbg !6829
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6830
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !6831
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !6831
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !6829
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6832
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !6833
  %5 = load i8*, i8** %buffer, align 8, !dbg !6833
  %6 = load i32, i32* %re_index, align 4, !dbg !6834
  %shr = lshr i32 %6, 3, !dbg !6835
  %idx.ext = zext i32 %shr to i64, !dbg !6836
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !6836
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !6837
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !6837
  %8 = load i32, i32* %l, align 1, !dbg !6837
  store i32 %8, i32* %x.addr.i, align 4, !dbg !6838
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !6839
  %shl.i = shl i32 %9, 8, !dbg !6840
  %and.i = and i32 %shl.i, 65280, !dbg !6841
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !6842
  %shr.i = lshr i32 %10, 8, !dbg !6843
  %and1.i = and i32 %shr.i, 255, !dbg !6844
  %or.i = or i32 %and.i, %and1.i, !dbg !6845
  %shl2.i = shl i32 %or.i, 16, !dbg !6846
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !6847
  %shr3.i = lshr i32 %11, 16, !dbg !6848
  %shl4.i = shl i32 %shr3.i, 8, !dbg !6849
  %and5.i = and i32 %shl4.i, 65280, !dbg !6850
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !6851
  %shr6.i = lshr i32 %12, 16, !dbg !6852
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !6853
  %and8.i = and i32 %shr7.i, 255, !dbg !6854
  %or9.i = or i32 %and5.i, %and8.i, !dbg !6855
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !6856
  %13 = load i32, i32* %re_index, align 4, !dbg !6857
  %and = and i32 %13, 7, !dbg !6858
  %shl = shl i32 %or10.i, %and, !dbg !6859
  store i32 %shl, i32* %re_cache, align 4, !dbg !6860
  %14 = load i32, i32* %re_cache, align 4, !dbg !6861
  store i32 %14, i32* %buf, align 4, !dbg !6862
  %15 = load i32, i32* %buf, align 4, !dbg !6863
  %cmp = icmp uge i32 %15, 134217728, !dbg !6864
  br i1 %cmp, label %if.then, label %if.else, !dbg !6865

if.then:                                          ; preds = %entry
  %16 = load i32, i32* %buf, align 4, !dbg !6866
  %shr1 = lshr i32 %16, 23, !dbg !6866
  store i32 %shr1, i32* %buf, align 4, !dbg !6866
  %17 = load i32, i32* %re_size_plus8, align 4, !dbg !6868
  %18 = load i32, i32* %re_index, align 4, !dbg !6869
  %19 = load i32, i32* %buf, align 4, !dbg !6870
  %idxprom = zext i32 %19 to i64, !dbg !6871
  %arrayidx = getelementptr inbounds [512 x i8], [512 x i8]* @ff_golomb_vlc_len, i64 0, i64 %idxprom, !dbg !6871
  %20 = load i8, i8* %arrayidx, align 1, !dbg !6871
  %conv = zext i8 %20 to i32, !dbg !6872
  %add = add i32 %18, %conv, !dbg !6873
  %cmp2 = icmp ugt i32 %17, %add, !dbg !6874
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !6875

cond.true:                                        ; preds = %if.then
  %21 = load i32, i32* %re_index, align 4, !dbg !6876
  %22 = load i32, i32* %buf, align 4, !dbg !6878
  %idxprom4 = zext i32 %22 to i64, !dbg !6879
  %arrayidx5 = getelementptr inbounds [512 x i8], [512 x i8]* @ff_golomb_vlc_len, i64 0, i64 %idxprom4, !dbg !6879
  %23 = load i8, i8* %arrayidx5, align 1, !dbg !6879
  %conv6 = zext i8 %23 to i32, !dbg !6880
  %add7 = add i32 %21, %conv6, !dbg !6881
  br label %cond.end, !dbg !6882

cond.false:                                       ; preds = %if.then
  %24 = load i32, i32* %re_size_plus8, align 4, !dbg !6883
  br label %cond.end, !dbg !6885

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add7, %cond.true ], [ %24, %cond.false ], !dbg !6886
  store i32 %cond, i32* %re_index, align 4, !dbg !6888
  %25 = load i32, i32* %re_index, align 4, !dbg !6889
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6890
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %26, i32 0, i32 2, !dbg !6891
  store i32 %25, i32* %index8, align 8, !dbg !6892
  %27 = load i32, i32* %buf, align 4, !dbg !6893
  %idxprom9 = zext i32 %27 to i64, !dbg !6894
  %arrayidx10 = getelementptr inbounds [512 x i8], [512 x i8]* @ff_se_golomb_vlc_code, i64 0, i64 %idxprom9, !dbg !6894
  %28 = load i8, i8* %arrayidx10, align 1, !dbg !6894
  %conv11 = sext i8 %28 to i32, !dbg !6894
  store i32 %conv11, i32* %retval, align 4, !dbg !6895
  br label %return, !dbg !6895

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %log, metadata !6896, metadata !1892), !dbg !6897
  %29 = load i32, i32* %buf, align 4, !dbg !6898
  %or = or i32 %29, 1, !dbg !6899
  %30 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !6900
  %sub = sub nsw i32 31, %30, !dbg !6901
  store i32 %sub, i32* %log, align 4, !dbg !6897
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !6902, metadata !1892), !dbg !6903
  %31 = load i32, i32* %re_size_plus8, align 4, !dbg !6904
  %32 = load i32, i32* %re_index, align 4, !dbg !6905
  %33 = load i32, i32* %log, align 4, !dbg !6906
  %sub12 = sub nsw i32 31, %33, !dbg !6907
  %add13 = add i32 %32, %sub12, !dbg !6908
  %cmp14 = icmp ugt i32 %31, %add13, !dbg !6909
  br i1 %cmp14, label %cond.true16, label %cond.false19, !dbg !6910

cond.true16:                                      ; preds = %if.else
  %34 = load i32, i32* %re_index, align 4, !dbg !6911
  %35 = load i32, i32* %log, align 4, !dbg !6913
  %sub17 = sub nsw i32 31, %35, !dbg !6914
  %add18 = add i32 %34, %sub17, !dbg !6915
  br label %cond.end20, !dbg !6916

cond.false19:                                     ; preds = %if.else
  %36 = load i32, i32* %re_size_plus8, align 4, !dbg !6917
  br label %cond.end20, !dbg !6919

cond.end20:                                       ; preds = %cond.false19, %cond.true16
  %cond21 = phi i32 [ %add18, %cond.true16 ], [ %36, %cond.false19 ], !dbg !6920
  store i32 %cond21, i32* %re_index, align 4, !dbg !6922
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6923
  %buffer22 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %37, i32 0, i32 0, !dbg !6924
  %38 = load i8*, i8** %buffer22, align 8, !dbg !6924
  %39 = load i32, i32* %re_index, align 4, !dbg !6925
  %shr23 = lshr i32 %39, 3, !dbg !6926
  %idx.ext24 = zext i32 %shr23 to i64, !dbg !6927
  %add.ptr25 = getelementptr inbounds i8, i8* %38, i64 %idx.ext24, !dbg !6927
  %40 = bitcast i8* %add.ptr25 to %union.unaligned_32*, !dbg !6928
  %l26 = bitcast %union.unaligned_32* %40 to i32*, !dbg !6928
  %41 = load i32, i32* %l26, align 1, !dbg !6928
  store i32 %41, i32* %x.addr.i46, align 4, !dbg !6929
  %42 = load i32, i32* %x.addr.i46, align 4, !dbg !6930
  %shl.i47 = shl i32 %42, 8, !dbg !6931
  %and.i48 = and i32 %shl.i47, 65280, !dbg !6932
  %43 = load i32, i32* %x.addr.i46, align 4, !dbg !6933
  %shr.i49 = lshr i32 %43, 8, !dbg !6934
  %and1.i50 = and i32 %shr.i49, 255, !dbg !6935
  %or.i51 = or i32 %and.i48, %and1.i50, !dbg !6936
  %shl2.i52 = shl i32 %or.i51, 16, !dbg !6937
  %44 = load i32, i32* %x.addr.i46, align 4, !dbg !6938
  %shr3.i53 = lshr i32 %44, 16, !dbg !6939
  %shl4.i54 = shl i32 %shr3.i53, 8, !dbg !6940
  %and5.i55 = and i32 %shl4.i54, 65280, !dbg !6941
  %45 = load i32, i32* %x.addr.i46, align 4, !dbg !6942
  %shr6.i56 = lshr i32 %45, 16, !dbg !6943
  %shr7.i57 = lshr i32 %shr6.i56, 8, !dbg !6944
  %and8.i58 = and i32 %shr7.i57, 255, !dbg !6945
  %or9.i59 = or i32 %and5.i55, %and8.i58, !dbg !6946
  %or10.i60 = or i32 %shl2.i52, %or9.i59, !dbg !6947
  %46 = load i32, i32* %re_index, align 4, !dbg !6948
  %and28 = and i32 %46, 7, !dbg !6949
  %shl29 = shl i32 %or10.i60, %and28, !dbg !6950
  store i32 %shl29, i32* %re_cache, align 4, !dbg !6951
  %47 = load i32, i32* %re_cache, align 4, !dbg !6952
  store i32 %47, i32* %buf, align 4, !dbg !6953
  %48 = load i32, i32* %log, align 4, !dbg !6954
  %49 = load i32, i32* %buf, align 4, !dbg !6955
  %shr30 = lshr i32 %49, %48, !dbg !6955
  store i32 %shr30, i32* %buf, align 4, !dbg !6955
  %50 = load i32, i32* %re_size_plus8, align 4, !dbg !6956
  %51 = load i32, i32* %re_index, align 4, !dbg !6957
  %52 = load i32, i32* %log, align 4, !dbg !6958
  %sub31 = sub nsw i32 32, %52, !dbg !6959
  %add32 = add i32 %51, %sub31, !dbg !6960
  %cmp33 = icmp ugt i32 %50, %add32, !dbg !6961
  br i1 %cmp33, label %cond.true35, label %cond.false38, !dbg !6962

cond.true35:                                      ; preds = %cond.end20
  %53 = load i32, i32* %re_index, align 4, !dbg !6963
  %54 = load i32, i32* %log, align 4, !dbg !6964
  %sub36 = sub nsw i32 32, %54, !dbg !6965
  %add37 = add i32 %53, %sub36, !dbg !6966
  br label %cond.end39, !dbg !6967

cond.false38:                                     ; preds = %cond.end20
  %55 = load i32, i32* %re_size_plus8, align 4, !dbg !6968
  br label %cond.end39, !dbg !6969

cond.end39:                                       ; preds = %cond.false38, %cond.true35
  %cond40 = phi i32 [ %add37, %cond.true35 ], [ %55, %cond.false38 ], !dbg !6970
  store i32 %cond40, i32* %re_index, align 4, !dbg !6971
  %56 = load i32, i32* %re_index, align 4, !dbg !6972
  %57 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6973
  %index41 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %57, i32 0, i32 2, !dbg !6974
  store i32 %56, i32* %index41, align 8, !dbg !6975
  %58 = load i32, i32* %buf, align 4, !dbg !6976
  %and42 = and i32 %58, 1, !dbg !6977
  %sub43 = sub i32 0, %and42, !dbg !6978
  store i32 %sub43, i32* %sign, align 4, !dbg !6979
  %59 = load i32, i32* %buf, align 4, !dbg !6980
  %shr44 = lshr i32 %59, 1, !dbg !6981
  %60 = load i32, i32* %sign, align 4, !dbg !6982
  %xor = xor i32 %shr44, %60, !dbg !6983
  %61 = load i32, i32* %sign, align 4, !dbg !6984
  %sub45 = sub i32 %xor, %61, !dbg !6985
  store i32 %sub45, i32* %buf, align 4, !dbg !6986
  %62 = load i32, i32* %buf, align 4, !dbg !6987
  store i32 %62, i32* %retval, align 4, !dbg !6988
  br label %return, !dbg !6988

return:                                           ; preds = %cond.end39, %cond.end
  %63 = load i32, i32* %retval, align 4, !dbg !6989
  ret i32 %63, !dbg !6989
}

declare i8* @av_malloc_array(i64, i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @pps_range_extensions(%struct.GetBitContext* %gb, %struct.AVCodecContext* %avctx, %struct.HEVCPPS* %pps, %struct.HEVCSPS* %sps) #0 !dbg !6990 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %pps.addr = alloca %struct.HEVCPPS*, align 8
  %sps.addr = alloca %struct.HEVCSPS*, align 8
  %i = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6993, metadata !1892), !dbg !6994
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6995, metadata !1892), !dbg !6996
  store %struct.HEVCPPS* %pps, %struct.HEVCPPS** %pps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCPPS** %pps.addr, metadata !6997, metadata !1892), !dbg !6998
  store %struct.HEVCSPS* %sps, %struct.HEVCSPS** %sps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCSPS** %sps.addr, metadata !6999, metadata !1892), !dbg !7000
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7001, metadata !1892), !dbg !7002
  %0 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7003
  %transform_skip_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %0, i32 0, i32 7, !dbg !7005
  %1 = load i8, i8* %transform_skip_enabled_flag, align 1, !dbg !7005
  %tobool = icmp ne i8 %1, 0, !dbg !7003
  br i1 %tobool, label %if.then, label %if.end, !dbg !7006

if.then:                                          ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7007
  %call = call i32 @get_ue_golomb_long(%struct.GetBitContext* %2), !dbg !7009
  %add = add i32 %call, 2, !dbg !7010
  %conv = trunc i32 %add to i8, !dbg !7009
  %3 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7011
  %log2_max_transform_skip_block_size = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %3, i32 0, i32 36, !dbg !7012
  store i8 %conv, i8* %log2_max_transform_skip_block_size, align 1, !dbg !7013
  br label %if.end, !dbg !7014

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7015
  %call1 = call i32 @get_bits1(%struct.GetBitContext* %4), !dbg !7016
  %conv2 = trunc i32 %call1 to i8, !dbg !7016
  %5 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7017
  %cross_component_prediction_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %5, i32 0, i32 38, !dbg !7018
  store i8 %conv2, i8* %cross_component_prediction_enabled_flag, align 1, !dbg !7019
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7020
  %call3 = call i32 @get_bits1(%struct.GetBitContext* %6), !dbg !7021
  %conv4 = trunc i32 %call3 to i8, !dbg !7021
  %7 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7022
  %chroma_qp_offset_list_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %7, i32 0, i32 39, !dbg !7023
  store i8 %conv4, i8* %chroma_qp_offset_list_enabled_flag, align 8, !dbg !7024
  %8 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7025
  %chroma_qp_offset_list_enabled_flag5 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %8, i32 0, i32 39, !dbg !7027
  %9 = load i8, i8* %chroma_qp_offset_list_enabled_flag5, align 8, !dbg !7027
  %tobool6 = icmp ne i8 %9, 0, !dbg !7025
  br i1 %tobool6, label %if.then7, label %if.end39, !dbg !7028

if.then7:                                         ; preds = %if.end
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7029
  %call8 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %10), !dbg !7031
  %conv9 = trunc i32 %call8 to i8, !dbg !7031
  %11 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7032
  %diff_cu_chroma_qp_offset_depth = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %11, i32 0, i32 40, !dbg !7033
  store i8 %conv9, i8* %diff_cu_chroma_qp_offset_depth, align 1, !dbg !7034
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7035
  %call10 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %12), !dbg !7036
  %conv11 = trunc i32 %call10 to i8, !dbg !7036
  %13 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7037
  %chroma_qp_offset_list_len_minus1 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %13, i32 0, i32 41, !dbg !7038
  store i8 %conv11, i8* %chroma_qp_offset_list_len_minus1, align 2, !dbg !7039
  %14 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7040
  %chroma_qp_offset_list_len_minus112 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %14, i32 0, i32 41, !dbg !7042
  %15 = load i8, i8* %chroma_qp_offset_list_len_minus112, align 2, !dbg !7042
  %conv13 = zext i8 %15 to i32, !dbg !7040
  %cmp = icmp sgt i32 %conv13, 5, !dbg !7043
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !7044

if.then15:                                        ; preds = %if.then7
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7045
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !7045
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.85, i32 0, i32 0)), !dbg !7047
  store i32 -1094995529, i32* %retval, align 4, !dbg !7048
  br label %return, !dbg !7048

if.end16:                                         ; preds = %if.then7
  store i32 0, i32* %i, align 4, !dbg !7049
  br label %for.cond, !dbg !7051

for.cond:                                         ; preds = %for.inc, %if.end16
  %18 = load i32, i32* %i, align 4, !dbg !7052
  %19 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7055
  %chroma_qp_offset_list_len_minus117 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %19, i32 0, i32 41, !dbg !7056
  %20 = load i8, i8* %chroma_qp_offset_list_len_minus117, align 2, !dbg !7056
  %conv18 = zext i8 %20 to i32, !dbg !7055
  %cmp19 = icmp sle i32 %18, %conv18, !dbg !7057
  br i1 %cmp19, label %for.body, label %for.end, !dbg !7058

for.body:                                         ; preds = %for.cond
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7059
  %call21 = call i32 @get_se_golomb_long(%struct.GetBitContext* %21), !dbg !7061
  %conv22 = trunc i32 %call21 to i8, !dbg !7061
  %22 = load i32, i32* %i, align 4, !dbg !7062
  %idxprom = sext i32 %22 to i64, !dbg !7063
  %23 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7063
  %cb_qp_offset_list = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %23, i32 0, i32 42, !dbg !7064
  %arrayidx = getelementptr inbounds [6 x i8], [6 x i8]* %cb_qp_offset_list, i64 0, i64 %idxprom, !dbg !7063
  store i8 %conv22, i8* %arrayidx, align 1, !dbg !7065
  %24 = load i32, i32* %i, align 4, !dbg !7066
  %idxprom23 = sext i32 %24 to i64, !dbg !7068
  %25 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7068
  %cb_qp_offset_list24 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %25, i32 0, i32 42, !dbg !7069
  %arrayidx25 = getelementptr inbounds [6 x i8], [6 x i8]* %cb_qp_offset_list24, i64 0, i64 %idxprom23, !dbg !7068
  %26 = load i8, i8* %arrayidx25, align 1, !dbg !7068
  %tobool26 = icmp ne i8 %26, 0, !dbg !7068
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !7070

if.then27:                                        ; preds = %for.body
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7071
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !7071
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.86, i32 0, i32 0)), !dbg !7073
  br label %if.end28, !dbg !7074

if.end28:                                         ; preds = %if.then27, %for.body
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7075
  %call29 = call i32 @get_se_golomb_long(%struct.GetBitContext* %29), !dbg !7076
  %conv30 = trunc i32 %call29 to i8, !dbg !7076
  %30 = load i32, i32* %i, align 4, !dbg !7077
  %idxprom31 = sext i32 %30 to i64, !dbg !7078
  %31 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7078
  %cr_qp_offset_list = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %31, i32 0, i32 43, !dbg !7079
  %arrayidx32 = getelementptr inbounds [6 x i8], [6 x i8]* %cr_qp_offset_list, i64 0, i64 %idxprom31, !dbg !7078
  store i8 %conv30, i8* %arrayidx32, align 1, !dbg !7080
  %32 = load i32, i32* %i, align 4, !dbg !7081
  %idxprom33 = sext i32 %32 to i64, !dbg !7083
  %33 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7083
  %cr_qp_offset_list34 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %33, i32 0, i32 43, !dbg !7084
  %arrayidx35 = getelementptr inbounds [6 x i8], [6 x i8]* %cr_qp_offset_list34, i64 0, i64 %idxprom33, !dbg !7083
  %34 = load i8, i8* %arrayidx35, align 1, !dbg !7083
  %tobool36 = icmp ne i8 %34, 0, !dbg !7083
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !7085

if.then37:                                        ; preds = %if.end28
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !7086
  %36 = bitcast %struct.AVCodecContext* %35 to i8*, !dbg !7086
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.86, i32 0, i32 0)), !dbg !7088
  br label %if.end38, !dbg !7089

if.end38:                                         ; preds = %if.then37, %if.end28
  br label %for.inc, !dbg !7090

for.inc:                                          ; preds = %if.end38
  %37 = load i32, i32* %i, align 4, !dbg !7091
  %inc = add nsw i32 %37, 1, !dbg !7091
  store i32 %inc, i32* %i, align 4, !dbg !7091
  br label %for.cond, !dbg !7093, !llvm.loop !7094

for.end:                                          ; preds = %for.cond
  br label %if.end39, !dbg !7096

if.end39:                                         ; preds = %for.end, %if.end
  %38 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7097
  %call40 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %38), !dbg !7098
  %conv41 = trunc i32 %call40 to i8, !dbg !7098
  %39 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7099
  %log2_sao_offset_scale_luma = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %39, i32 0, i32 44, !dbg !7100
  store i8 %conv41, i8* %log2_sao_offset_scale_luma, align 1, !dbg !7101
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7102
  %call42 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %40), !dbg !7103
  %conv43 = trunc i32 %call42 to i8, !dbg !7103
  %41 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7104
  %log2_sao_offset_scale_chroma = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %41, i32 0, i32 45, !dbg !7105
  store i8 %conv43, i8* %log2_sao_offset_scale_chroma, align 8, !dbg !7106
  %42 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7107
  %log2_sao_offset_scale_luma44 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %42, i32 0, i32 44, !dbg !7109
  %43 = load i8, i8* %log2_sao_offset_scale_luma44, align 1, !dbg !7109
  %conv45 = zext i8 %43 to i32, !dbg !7107
  %44 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7110
  %bit_depth = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %44, i32 0, i32 5, !dbg !7111
  %45 = load i32, i32* %bit_depth, align 4, !dbg !7111
  %sub = sub nsw i32 %45, 10, !dbg !7112
  %cmp46 = icmp sgt i32 %sub, 0, !dbg !7113
  br i1 %cmp46, label %cond.true, label %cond.false, !dbg !7114

cond.true:                                        ; preds = %if.end39
  %46 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7115
  %bit_depth48 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %46, i32 0, i32 5, !dbg !7117
  %47 = load i32, i32* %bit_depth48, align 4, !dbg !7117
  %sub49 = sub nsw i32 %47, 10, !dbg !7118
  br label %cond.end, !dbg !7119

cond.false:                                       ; preds = %if.end39
  br label %cond.end, !dbg !7120

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub49, %cond.true ], [ 0, %cond.false ], !dbg !7122
  %cmp50 = icmp sgt i32 %conv45, %cond, !dbg !7124
  br i1 %cmp50, label %if.then65, label %lor.lhs.false, !dbg !7125

lor.lhs.false:                                    ; preds = %cond.end
  %48 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7126
  %log2_sao_offset_scale_chroma52 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %48, i32 0, i32 45, !dbg !7127
  %49 = load i8, i8* %log2_sao_offset_scale_chroma52, align 8, !dbg !7127
  %conv53 = zext i8 %49 to i32, !dbg !7126
  %50 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7128
  %bit_depth_chroma = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %50, i32 0, i32 6, !dbg !7129
  %51 = load i32, i32* %bit_depth_chroma, align 4, !dbg !7129
  %sub54 = sub nsw i32 %51, 10, !dbg !7130
  %cmp55 = icmp sgt i32 %sub54, 0, !dbg !7131
  br i1 %cmp55, label %cond.true57, label %cond.false60, !dbg !7132

cond.true57:                                      ; preds = %lor.lhs.false
  %52 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7133
  %bit_depth_chroma58 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %52, i32 0, i32 6, !dbg !7134
  %53 = load i32, i32* %bit_depth_chroma58, align 4, !dbg !7134
  %sub59 = sub nsw i32 %53, 10, !dbg !7135
  br label %cond.end61, !dbg !7136

cond.false60:                                     ; preds = %lor.lhs.false
  br label %cond.end61, !dbg !7137

cond.end61:                                       ; preds = %cond.false60, %cond.true57
  %cond62 = phi i32 [ %sub59, %cond.true57 ], [ 0, %cond.false60 ], !dbg !7138
  %cmp63 = icmp sgt i32 %conv53, %cond62, !dbg !7140
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !7141

if.then65:                                        ; preds = %cond.end61, %cond.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !7143
  br label %return, !dbg !7143

if.end66:                                         ; preds = %cond.end61
  store i32 0, i32* %retval, align 4, !dbg !7144
  br label %return, !dbg !7144

return:                                           ; preds = %if.end66, %if.then65, %if.then15
  %54 = load i32, i32* %retval, align 4, !dbg !7145
  ret i32 %54, !dbg !7145
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @setup_pps(%struct.AVCodecContext* %avctx, %struct.GetBitContext* %gb, %struct.HEVCPPS* %pps, %struct.HEVCSPS* %sps) #2 !dbg !7146 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %pps.addr = alloca %struct.HEVCPPS*, align 8
  %sps.addr = alloca %struct.HEVCSPS*, align 8
  %log2_diff = alloca i32, align 4
  %pic_area_in_ctbs = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %ctb_addr_rs = alloca i32, align 4
  %tile_id = alloca i32, align 4
  %tb_x = alloca i32, align 4
  %tb_y = alloca i32, align 4
  %tile_x = alloca i32, align 4
  %tile_y = alloca i32, align 4
  %val = alloca i32, align 4
  %tb_x371 = alloca i32, align 4
  %tb_y372 = alloca i32, align 4
  %rs = alloca i32, align 4
  %val377 = alloca i32, align 4
  %m = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !7149, metadata !1892), !dbg !7150
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7151, metadata !1892), !dbg !7152
  store %struct.HEVCPPS* %pps, %struct.HEVCPPS** %pps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCPPS** %pps.addr, metadata !7153, metadata !1892), !dbg !7154
  store %struct.HEVCSPS* %sps, %struct.HEVCSPS** %sps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCSPS** %sps.addr, metadata !7155, metadata !1892), !dbg !7156
  call void @llvm.dbg.declare(metadata i32* %log2_diff, metadata !7157, metadata !1892), !dbg !7158
  call void @llvm.dbg.declare(metadata i32* %pic_area_in_ctbs, metadata !7159, metadata !1892), !dbg !7160
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7161, metadata !1892), !dbg !7162
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7163, metadata !1892), !dbg !7164
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7165, metadata !1892), !dbg !7166
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7167, metadata !1892), !dbg !7168
  call void @llvm.dbg.declare(metadata i32* %ctb_addr_rs, metadata !7169, metadata !1892), !dbg !7170
  call void @llvm.dbg.declare(metadata i32* %tile_id, metadata !7171, metadata !1892), !dbg !7172
  %0 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7173
  %num_tile_columns = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %0, i32 0, i32 20, !dbg !7174
  %1 = load i32, i32* %num_tile_columns, align 4, !dbg !7174
  %add = add nsw i32 %1, 1, !dbg !7175
  %conv = sext i32 %add to i64, !dbg !7173
  %call = call i8* @av_malloc_array(i64 %conv, i64 4), !dbg !7176
  %2 = bitcast i8* %call to i32*, !dbg !7176
  %3 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7177
  %col_bd = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %3, i32 0, i32 48, !dbg !7178
  store i32* %2, i32** %col_bd, align 8, !dbg !7179
  %4 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7180
  %num_tile_rows = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %4, i32 0, i32 21, !dbg !7181
  %5 = load i32, i32* %num_tile_rows, align 8, !dbg !7181
  %add1 = add nsw i32 %5, 1, !dbg !7182
  %conv2 = sext i32 %add1 to i64, !dbg !7180
  %call3 = call i8* @av_malloc_array(i64 %conv2, i64 4), !dbg !7183
  %6 = bitcast i8* %call3 to i32*, !dbg !7183
  %7 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7184
  %row_bd = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %7, i32 0, i32 49, !dbg !7185
  store i32* %6, i32** %row_bd, align 8, !dbg !7186
  %8 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7187
  %ctb_width = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %8, i32 0, i32 49, !dbg !7188
  %9 = load i32, i32* %ctb_width, align 4, !dbg !7188
  %conv4 = sext i32 %9 to i64, !dbg !7187
  %call5 = call i8* @av_malloc_array(i64 %conv4, i64 4), !dbg !7189
  %10 = bitcast i8* %call5 to i32*, !dbg !7189
  %11 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7190
  %col_idxX = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %11, i32 0, i32 50, !dbg !7191
  store i32* %10, i32** %col_idxX, align 8, !dbg !7192
  %12 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7193
  %col_bd6 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %12, i32 0, i32 48, !dbg !7195
  %13 = load i32*, i32** %col_bd6, align 8, !dbg !7195
  %tobool = icmp ne i32* %13, null, !dbg !7193
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7196

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7197
  %row_bd7 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %14, i32 0, i32 49, !dbg !7199
  %15 = load i32*, i32** %row_bd7, align 8, !dbg !7199
  %tobool8 = icmp ne i32* %15, null, !dbg !7197
  br i1 %tobool8, label %lor.lhs.false9, label %if.then, !dbg !7200

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %16 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7201
  %col_idxX10 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %16, i32 0, i32 50, !dbg !7203
  %17 = load i32*, i32** %col_idxX10, align 8, !dbg !7203
  %tobool11 = icmp ne i32* %17, null, !dbg !7201
  br i1 %tobool11, label %if.end, label %if.then, !dbg !7204

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false, %entry
  store i32 -12, i32* %retval, align 4, !dbg !7205
  br label %return, !dbg !7205

if.end:                                           ; preds = %lor.lhs.false9
  %18 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7206
  %uniform_spacing_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %18, i32 0, i32 22, !dbg !7208
  %19 = load i8, i8* %uniform_spacing_flag, align 4, !dbg !7208
  %tobool12 = icmp ne i8 %19, 0, !dbg !7206
  br i1 %tobool12, label %if.then13, label %if.end61, !dbg !7209

if.then13:                                        ; preds = %if.end
  %20 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7210
  %column_width = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %20, i32 0, i32 46, !dbg !7213
  %21 = load i32*, i32** %column_width, align 8, !dbg !7213
  %tobool14 = icmp ne i32* %21, null, !dbg !7210
  br i1 %tobool14, label %if.end23, label %if.then15, !dbg !7214

if.then15:                                        ; preds = %if.then13
  %22 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7215
  %num_tile_columns16 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %22, i32 0, i32 20, !dbg !7217
  %23 = load i32, i32* %num_tile_columns16, align 4, !dbg !7217
  %conv17 = sext i32 %23 to i64, !dbg !7215
  %call18 = call i8* @av_malloc_array(i64 %conv17, i64 4), !dbg !7218
  %24 = bitcast i8* %call18 to i32*, !dbg !7218
  %25 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7219
  %column_width19 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %25, i32 0, i32 46, !dbg !7220
  store i32* %24, i32** %column_width19, align 8, !dbg !7221
  %26 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7222
  %num_tile_rows20 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %26, i32 0, i32 21, !dbg !7223
  %27 = load i32, i32* %num_tile_rows20, align 8, !dbg !7223
  %conv21 = sext i32 %27 to i64, !dbg !7222
  %call22 = call i8* @av_malloc_array(i64 %conv21, i64 4), !dbg !7224
  %28 = bitcast i8* %call22 to i32*, !dbg !7224
  %29 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7225
  %row_height = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %29, i32 0, i32 47, !dbg !7226
  store i32* %28, i32** %row_height, align 8, !dbg !7227
  br label %if.end23, !dbg !7228

if.end23:                                         ; preds = %if.then15, %if.then13
  %30 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7229
  %column_width24 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %30, i32 0, i32 46, !dbg !7231
  %31 = load i32*, i32** %column_width24, align 8, !dbg !7231
  %tobool25 = icmp ne i32* %31, null, !dbg !7229
  br i1 %tobool25, label %lor.lhs.false26, label %if.then29, !dbg !7232

lor.lhs.false26:                                  ; preds = %if.end23
  %32 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7233
  %row_height27 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %32, i32 0, i32 47, !dbg !7235
  %33 = load i32*, i32** %row_height27, align 8, !dbg !7235
  %tobool28 = icmp ne i32* %33, null, !dbg !7233
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !7236

if.then29:                                        ; preds = %lor.lhs.false26, %if.end23
  store i32 -12, i32* %retval, align 4, !dbg !7237
  br label %return, !dbg !7237

if.end30:                                         ; preds = %lor.lhs.false26
  store i32 0, i32* %i, align 4, !dbg !7238
  br label %for.cond, !dbg !7240

for.cond:                                         ; preds = %for.inc, %if.end30
  %34 = load i32, i32* %i, align 4, !dbg !7241
  %35 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7244
  %num_tile_columns31 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %35, i32 0, i32 20, !dbg !7245
  %36 = load i32, i32* %num_tile_columns31, align 4, !dbg !7245
  %cmp = icmp slt i32 %34, %36, !dbg !7246
  br i1 %cmp, label %for.body, label %for.end, !dbg !7247

for.body:                                         ; preds = %for.cond
  %37 = load i32, i32* %i, align 4, !dbg !7248
  %add33 = add nsw i32 %37, 1, !dbg !7250
  %38 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7251
  %ctb_width34 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %38, i32 0, i32 49, !dbg !7252
  %39 = load i32, i32* %ctb_width34, align 4, !dbg !7252
  %mul = mul nsw i32 %add33, %39, !dbg !7253
  %40 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7254
  %num_tile_columns35 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %40, i32 0, i32 20, !dbg !7255
  %41 = load i32, i32* %num_tile_columns35, align 4, !dbg !7255
  %div = sdiv i32 %mul, %41, !dbg !7256
  %42 = load i32, i32* %i, align 4, !dbg !7257
  %43 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7258
  %ctb_width36 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %43, i32 0, i32 49, !dbg !7259
  %44 = load i32, i32* %ctb_width36, align 4, !dbg !7259
  %mul37 = mul nsw i32 %42, %44, !dbg !7260
  %45 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7261
  %num_tile_columns38 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %45, i32 0, i32 20, !dbg !7262
  %46 = load i32, i32* %num_tile_columns38, align 4, !dbg !7262
  %div39 = sdiv i32 %mul37, %46, !dbg !7263
  %sub = sub nsw i32 %div, %div39, !dbg !7264
  %47 = load i32, i32* %i, align 4, !dbg !7265
  %idxprom = sext i32 %47 to i64, !dbg !7266
  %48 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7266
  %column_width40 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %48, i32 0, i32 46, !dbg !7267
  %49 = load i32*, i32** %column_width40, align 8, !dbg !7267
  %arrayidx = getelementptr inbounds i32, i32* %49, i64 %idxprom, !dbg !7266
  store i32 %sub, i32* %arrayidx, align 4, !dbg !7268
  br label %for.inc, !dbg !7269

for.inc:                                          ; preds = %for.body
  %50 = load i32, i32* %i, align 4, !dbg !7270
  %inc = add nsw i32 %50, 1, !dbg !7270
  store i32 %inc, i32* %i, align 4, !dbg !7270
  br label %for.cond, !dbg !7272, !llvm.loop !7273

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7275
  br label %for.cond41, !dbg !7277

for.cond41:                                       ; preds = %for.inc58, %for.end
  %51 = load i32, i32* %i, align 4, !dbg !7278
  %52 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7281
  %num_tile_rows42 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %52, i32 0, i32 21, !dbg !7282
  %53 = load i32, i32* %num_tile_rows42, align 8, !dbg !7282
  %cmp43 = icmp slt i32 %51, %53, !dbg !7283
  br i1 %cmp43, label %for.body45, label %for.end60, !dbg !7284

for.body45:                                       ; preds = %for.cond41
  %54 = load i32, i32* %i, align 4, !dbg !7285
  %add46 = add nsw i32 %54, 1, !dbg !7287
  %55 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7288
  %ctb_height = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %55, i32 0, i32 50, !dbg !7289
  %56 = load i32, i32* %ctb_height, align 4, !dbg !7289
  %mul47 = mul nsw i32 %add46, %56, !dbg !7290
  %57 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7291
  %num_tile_rows48 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %57, i32 0, i32 21, !dbg !7292
  %58 = load i32, i32* %num_tile_rows48, align 8, !dbg !7292
  %div49 = sdiv i32 %mul47, %58, !dbg !7293
  %59 = load i32, i32* %i, align 4, !dbg !7294
  %60 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7295
  %ctb_height50 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %60, i32 0, i32 50, !dbg !7296
  %61 = load i32, i32* %ctb_height50, align 4, !dbg !7296
  %mul51 = mul nsw i32 %59, %61, !dbg !7297
  %62 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7298
  %num_tile_rows52 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %62, i32 0, i32 21, !dbg !7299
  %63 = load i32, i32* %num_tile_rows52, align 8, !dbg !7299
  %div53 = sdiv i32 %mul51, %63, !dbg !7300
  %sub54 = sub nsw i32 %div49, %div53, !dbg !7301
  %64 = load i32, i32* %i, align 4, !dbg !7302
  %idxprom55 = sext i32 %64 to i64, !dbg !7303
  %65 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7303
  %row_height56 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %65, i32 0, i32 47, !dbg !7304
  %66 = load i32*, i32** %row_height56, align 8, !dbg !7304
  %arrayidx57 = getelementptr inbounds i32, i32* %66, i64 %idxprom55, !dbg !7303
  store i32 %sub54, i32* %arrayidx57, align 4, !dbg !7305
  br label %for.inc58, !dbg !7306

for.inc58:                                        ; preds = %for.body45
  %67 = load i32, i32* %i, align 4, !dbg !7307
  %inc59 = add nsw i32 %67, 1, !dbg !7307
  store i32 %inc59, i32* %i, align 4, !dbg !7307
  br label %for.cond41, !dbg !7309, !llvm.loop !7310

for.end60:                                        ; preds = %for.cond41
  br label %if.end61, !dbg !7312

if.end61:                                         ; preds = %for.end60, %if.end
  %68 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7313
  %col_bd62 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %68, i32 0, i32 48, !dbg !7314
  %69 = load i32*, i32** %col_bd62, align 8, !dbg !7314
  %arrayidx63 = getelementptr inbounds i32, i32* %69, i64 0, !dbg !7313
  store i32 0, i32* %arrayidx63, align 4, !dbg !7315
  store i32 0, i32* %i, align 4, !dbg !7316
  br label %for.cond64, !dbg !7318

for.cond64:                                       ; preds = %for.inc80, %if.end61
  %70 = load i32, i32* %i, align 4, !dbg !7319
  %71 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7322
  %num_tile_columns65 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %71, i32 0, i32 20, !dbg !7323
  %72 = load i32, i32* %num_tile_columns65, align 4, !dbg !7323
  %cmp66 = icmp slt i32 %70, %72, !dbg !7324
  br i1 %cmp66, label %for.body68, label %for.end82, !dbg !7325

for.body68:                                       ; preds = %for.cond64
  %73 = load i32, i32* %i, align 4, !dbg !7326
  %idxprom69 = sext i32 %73 to i64, !dbg !7327
  %74 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7327
  %col_bd70 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %74, i32 0, i32 48, !dbg !7328
  %75 = load i32*, i32** %col_bd70, align 8, !dbg !7328
  %arrayidx71 = getelementptr inbounds i32, i32* %75, i64 %idxprom69, !dbg !7327
  %76 = load i32, i32* %arrayidx71, align 4, !dbg !7327
  %77 = load i32, i32* %i, align 4, !dbg !7329
  %idxprom72 = sext i32 %77 to i64, !dbg !7330
  %78 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7330
  %column_width73 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %78, i32 0, i32 46, !dbg !7331
  %79 = load i32*, i32** %column_width73, align 8, !dbg !7331
  %arrayidx74 = getelementptr inbounds i32, i32* %79, i64 %idxprom72, !dbg !7330
  %80 = load i32, i32* %arrayidx74, align 4, !dbg !7330
  %add75 = add i32 %76, %80, !dbg !7332
  %81 = load i32, i32* %i, align 4, !dbg !7333
  %add76 = add nsw i32 %81, 1, !dbg !7334
  %idxprom77 = sext i32 %add76 to i64, !dbg !7335
  %82 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7335
  %col_bd78 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %82, i32 0, i32 48, !dbg !7336
  %83 = load i32*, i32** %col_bd78, align 8, !dbg !7336
  %arrayidx79 = getelementptr inbounds i32, i32* %83, i64 %idxprom77, !dbg !7335
  store i32 %add75, i32* %arrayidx79, align 4, !dbg !7337
  br label %for.inc80, !dbg !7335

for.inc80:                                        ; preds = %for.body68
  %84 = load i32, i32* %i, align 4, !dbg !7338
  %inc81 = add nsw i32 %84, 1, !dbg !7338
  store i32 %inc81, i32* %i, align 4, !dbg !7338
  br label %for.cond64, !dbg !7340, !llvm.loop !7341

for.end82:                                        ; preds = %for.cond64
  %85 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7343
  %row_bd83 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %85, i32 0, i32 49, !dbg !7344
  %86 = load i32*, i32** %row_bd83, align 8, !dbg !7344
  %arrayidx84 = getelementptr inbounds i32, i32* %86, i64 0, !dbg !7343
  store i32 0, i32* %arrayidx84, align 4, !dbg !7345
  store i32 0, i32* %i, align 4, !dbg !7346
  br label %for.cond85, !dbg !7348

for.cond85:                                       ; preds = %for.inc101, %for.end82
  %87 = load i32, i32* %i, align 4, !dbg !7349
  %88 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7352
  %num_tile_rows86 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %88, i32 0, i32 21, !dbg !7353
  %89 = load i32, i32* %num_tile_rows86, align 8, !dbg !7353
  %cmp87 = icmp slt i32 %87, %89, !dbg !7354
  br i1 %cmp87, label %for.body89, label %for.end103, !dbg !7355

for.body89:                                       ; preds = %for.cond85
  %90 = load i32, i32* %i, align 4, !dbg !7356
  %idxprom90 = sext i32 %90 to i64, !dbg !7357
  %91 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7357
  %row_bd91 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %91, i32 0, i32 49, !dbg !7358
  %92 = load i32*, i32** %row_bd91, align 8, !dbg !7358
  %arrayidx92 = getelementptr inbounds i32, i32* %92, i64 %idxprom90, !dbg !7357
  %93 = load i32, i32* %arrayidx92, align 4, !dbg !7357
  %94 = load i32, i32* %i, align 4, !dbg !7359
  %idxprom93 = sext i32 %94 to i64, !dbg !7360
  %95 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7360
  %row_height94 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %95, i32 0, i32 47, !dbg !7361
  %96 = load i32*, i32** %row_height94, align 8, !dbg !7361
  %arrayidx95 = getelementptr inbounds i32, i32* %96, i64 %idxprom93, !dbg !7360
  %97 = load i32, i32* %arrayidx95, align 4, !dbg !7360
  %add96 = add i32 %93, %97, !dbg !7362
  %98 = load i32, i32* %i, align 4, !dbg !7363
  %add97 = add nsw i32 %98, 1, !dbg !7364
  %idxprom98 = sext i32 %add97 to i64, !dbg !7365
  %99 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7365
  %row_bd99 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %99, i32 0, i32 49, !dbg !7366
  %100 = load i32*, i32** %row_bd99, align 8, !dbg !7366
  %arrayidx100 = getelementptr inbounds i32, i32* %100, i64 %idxprom98, !dbg !7365
  store i32 %add96, i32* %arrayidx100, align 4, !dbg !7367
  br label %for.inc101, !dbg !7365

for.inc101:                                       ; preds = %for.body89
  %101 = load i32, i32* %i, align 4, !dbg !7368
  %inc102 = add nsw i32 %101, 1, !dbg !7368
  store i32 %inc102, i32* %i, align 4, !dbg !7368
  br label %for.cond85, !dbg !7370, !llvm.loop !7371

for.end103:                                       ; preds = %for.cond85
  store i32 0, i32* %i, align 4, !dbg !7373
  store i32 0, i32* %j, align 4, !dbg !7375
  br label %for.cond104, !dbg !7376

for.cond104:                                      ; preds = %for.inc120, %for.end103
  %102 = load i32, i32* %i, align 4, !dbg !7377
  %103 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7380
  %ctb_width105 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %103, i32 0, i32 49, !dbg !7381
  %104 = load i32, i32* %ctb_width105, align 4, !dbg !7381
  %cmp106 = icmp slt i32 %102, %104, !dbg !7382
  br i1 %cmp106, label %for.body108, label %for.end122, !dbg !7383

for.body108:                                      ; preds = %for.cond104
  %105 = load i32, i32* %i, align 4, !dbg !7384
  %106 = load i32, i32* %j, align 4, !dbg !7387
  %idxprom109 = sext i32 %106 to i64, !dbg !7388
  %107 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7388
  %col_bd110 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %107, i32 0, i32 48, !dbg !7389
  %108 = load i32*, i32** %col_bd110, align 8, !dbg !7389
  %arrayidx111 = getelementptr inbounds i32, i32* %108, i64 %idxprom109, !dbg !7388
  %109 = load i32, i32* %arrayidx111, align 4, !dbg !7388
  %cmp112 = icmp ugt i32 %105, %109, !dbg !7390
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !7391

if.then114:                                       ; preds = %for.body108
  %110 = load i32, i32* %j, align 4, !dbg !7392
  %inc115 = add nsw i32 %110, 1, !dbg !7392
  store i32 %inc115, i32* %j, align 4, !dbg !7392
  br label %if.end116, !dbg !7393

if.end116:                                        ; preds = %if.then114, %for.body108
  %111 = load i32, i32* %j, align 4, !dbg !7394
  %112 = load i32, i32* %i, align 4, !dbg !7395
  %idxprom117 = sext i32 %112 to i64, !dbg !7396
  %113 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7396
  %col_idxX118 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %113, i32 0, i32 50, !dbg !7397
  %114 = load i32*, i32** %col_idxX118, align 8, !dbg !7397
  %arrayidx119 = getelementptr inbounds i32, i32* %114, i64 %idxprom117, !dbg !7396
  store i32 %111, i32* %arrayidx119, align 4, !dbg !7398
  br label %for.inc120, !dbg !7399

for.inc120:                                       ; preds = %if.end116
  %115 = load i32, i32* %i, align 4, !dbg !7400
  %inc121 = add nsw i32 %115, 1, !dbg !7400
  store i32 %inc121, i32* %i, align 4, !dbg !7400
  br label %for.cond104, !dbg !7402, !llvm.loop !7403

for.end122:                                       ; preds = %for.cond104
  %116 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7405
  %ctb_width123 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %116, i32 0, i32 49, !dbg !7406
  %117 = load i32, i32* %ctb_width123, align 4, !dbg !7406
  %118 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7407
  %ctb_height124 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %118, i32 0, i32 50, !dbg !7408
  %119 = load i32, i32* %ctb_height124, align 4, !dbg !7408
  %mul125 = mul nsw i32 %117, %119, !dbg !7409
  store i32 %mul125, i32* %pic_area_in_ctbs, align 4, !dbg !7410
  %120 = load i32, i32* %pic_area_in_ctbs, align 4, !dbg !7411
  %conv126 = sext i32 %120 to i64, !dbg !7411
  %call127 = call i8* @av_malloc_array(i64 %conv126, i64 4), !dbg !7412
  %121 = bitcast i8* %call127 to i32*, !dbg !7412
  %122 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7413
  %ctb_addr_rs_to_ts = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %122, i32 0, i32 51, !dbg !7414
  store i32* %121, i32** %ctb_addr_rs_to_ts, align 8, !dbg !7415
  %123 = load i32, i32* %pic_area_in_ctbs, align 4, !dbg !7416
  %conv128 = sext i32 %123 to i64, !dbg !7416
  %call129 = call i8* @av_malloc_array(i64 %conv128, i64 4), !dbg !7417
  %124 = bitcast i8* %call129 to i32*, !dbg !7417
  %125 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7418
  %ctb_addr_ts_to_rs = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %125, i32 0, i32 52, !dbg !7419
  store i32* %124, i32** %ctb_addr_ts_to_rs, align 8, !dbg !7420
  %126 = load i32, i32* %pic_area_in_ctbs, align 4, !dbg !7421
  %conv130 = sext i32 %126 to i64, !dbg !7421
  %call131 = call i8* @av_malloc_array(i64 %conv130, i64 4), !dbg !7422
  %127 = bitcast i8* %call131 to i32*, !dbg !7422
  %128 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7423
  %tile_id132 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %128, i32 0, i32 53, !dbg !7424
  store i32* %127, i32** %tile_id132, align 8, !dbg !7425
  %129 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7426
  %tb_mask = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %129, i32 0, i32 58, !dbg !7427
  %130 = load i32, i32* %tb_mask, align 4, !dbg !7427
  %add133 = add nsw i32 %130, 2, !dbg !7428
  %131 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7429
  %tb_mask134 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %131, i32 0, i32 58, !dbg !7430
  %132 = load i32, i32* %tb_mask134, align 4, !dbg !7430
  %add135 = add nsw i32 %132, 2, !dbg !7431
  %mul136 = mul nsw i32 %add133, %add135, !dbg !7432
  %conv137 = sext i32 %mul136 to i64, !dbg !7433
  %call138 = call i8* @av_malloc_array(i64 %conv137, i64 4), !dbg !7434
  %133 = bitcast i8* %call138 to i32*, !dbg !7434
  %134 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7435
  %min_tb_addr_zs_tab = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %134, i32 0, i32 56, !dbg !7436
  store i32* %133, i32** %min_tb_addr_zs_tab, align 8, !dbg !7437
  %135 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7438
  %ctb_addr_rs_to_ts139 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %135, i32 0, i32 51, !dbg !7440
  %136 = load i32*, i32** %ctb_addr_rs_to_ts139, align 8, !dbg !7440
  %tobool140 = icmp ne i32* %136, null, !dbg !7438
  br i1 %tobool140, label %lor.lhs.false141, label %if.then150, !dbg !7441

lor.lhs.false141:                                 ; preds = %for.end122
  %137 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7442
  %ctb_addr_ts_to_rs142 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %137, i32 0, i32 52, !dbg !7444
  %138 = load i32*, i32** %ctb_addr_ts_to_rs142, align 8, !dbg !7444
  %tobool143 = icmp ne i32* %138, null, !dbg !7442
  br i1 %tobool143, label %lor.lhs.false144, label %if.then150, !dbg !7445

lor.lhs.false144:                                 ; preds = %lor.lhs.false141
  %139 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7446
  %tile_id145 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %139, i32 0, i32 53, !dbg !7447
  %140 = load i32*, i32** %tile_id145, align 8, !dbg !7447
  %tobool146 = icmp ne i32* %140, null, !dbg !7446
  br i1 %tobool146, label %lor.lhs.false147, label %if.then150, !dbg !7448

lor.lhs.false147:                                 ; preds = %lor.lhs.false144
  %141 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7449
  %min_tb_addr_zs_tab148 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %141, i32 0, i32 56, !dbg !7450
  %142 = load i32*, i32** %min_tb_addr_zs_tab148, align 8, !dbg !7450
  %tobool149 = icmp ne i32* %142, null, !dbg !7449
  br i1 %tobool149, label %if.end151, label %if.then150, !dbg !7451

if.then150:                                       ; preds = %lor.lhs.false147, %lor.lhs.false144, %lor.lhs.false141, %for.end122
  store i32 -12, i32* %retval, align 4, !dbg !7453
  br label %return, !dbg !7453

if.end151:                                        ; preds = %lor.lhs.false147
  store i32 0, i32* %ctb_addr_rs, align 4, !dbg !7455
  br label %for.cond152, !dbg !7457

for.cond152:                                      ; preds = %for.inc239, %if.end151
  %143 = load i32, i32* %ctb_addr_rs, align 4, !dbg !7458
  %144 = load i32, i32* %pic_area_in_ctbs, align 4, !dbg !7461
  %cmp153 = icmp slt i32 %143, %144, !dbg !7462
  br i1 %cmp153, label %for.body155, label %for.end241, !dbg !7463

for.body155:                                      ; preds = %for.cond152
  call void @llvm.dbg.declare(metadata i32* %tb_x, metadata !7464, metadata !1892), !dbg !7466
  %145 = load i32, i32* %ctb_addr_rs, align 4, !dbg !7467
  %146 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7468
  %ctb_width156 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %146, i32 0, i32 49, !dbg !7469
  %147 = load i32, i32* %ctb_width156, align 4, !dbg !7469
  %rem = srem i32 %145, %147, !dbg !7470
  store i32 %rem, i32* %tb_x, align 4, !dbg !7466
  call void @llvm.dbg.declare(metadata i32* %tb_y, metadata !7471, metadata !1892), !dbg !7472
  %148 = load i32, i32* %ctb_addr_rs, align 4, !dbg !7473
  %149 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7474
  %ctb_width157 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %149, i32 0, i32 49, !dbg !7475
  %150 = load i32, i32* %ctb_width157, align 4, !dbg !7475
  %div158 = sdiv i32 %148, %150, !dbg !7476
  store i32 %div158, i32* %tb_y, align 4, !dbg !7472
  call void @llvm.dbg.declare(metadata i32* %tile_x, metadata !7477, metadata !1892), !dbg !7478
  store i32 0, i32* %tile_x, align 4, !dbg !7478
  call void @llvm.dbg.declare(metadata i32* %tile_y, metadata !7479, metadata !1892), !dbg !7480
  store i32 0, i32* %tile_y, align 4, !dbg !7480
  call void @llvm.dbg.declare(metadata i32* %val, metadata !7481, metadata !1892), !dbg !7482
  store i32 0, i32* %val, align 4, !dbg !7482
  store i32 0, i32* %i, align 4, !dbg !7483
  br label %for.cond159, !dbg !7485

for.cond159:                                      ; preds = %for.inc172, %for.body155
  %151 = load i32, i32* %i, align 4, !dbg !7486
  %152 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7489
  %num_tile_columns160 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %152, i32 0, i32 20, !dbg !7490
  %153 = load i32, i32* %num_tile_columns160, align 4, !dbg !7490
  %cmp161 = icmp slt i32 %151, %153, !dbg !7491
  br i1 %cmp161, label %for.body163, label %for.end174, !dbg !7492

for.body163:                                      ; preds = %for.cond159
  %154 = load i32, i32* %tb_x, align 4, !dbg !7493
  %155 = load i32, i32* %i, align 4, !dbg !7496
  %add164 = add nsw i32 %155, 1, !dbg !7497
  %idxprom165 = sext i32 %add164 to i64, !dbg !7498
  %156 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7498
  %col_bd166 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %156, i32 0, i32 48, !dbg !7499
  %157 = load i32*, i32** %col_bd166, align 8, !dbg !7499
  %arrayidx167 = getelementptr inbounds i32, i32* %157, i64 %idxprom165, !dbg !7498
  %158 = load i32, i32* %arrayidx167, align 4, !dbg !7498
  %cmp168 = icmp ult i32 %154, %158, !dbg !7500
  br i1 %cmp168, label %if.then170, label %if.end171, !dbg !7501

if.then170:                                       ; preds = %for.body163
  %159 = load i32, i32* %i, align 4, !dbg !7502
  store i32 %159, i32* %tile_x, align 4, !dbg !7504
  br label %for.end174, !dbg !7505

if.end171:                                        ; preds = %for.body163
  br label %for.inc172, !dbg !7506

for.inc172:                                       ; preds = %if.end171
  %160 = load i32, i32* %i, align 4, !dbg !7507
  %inc173 = add nsw i32 %160, 1, !dbg !7507
  store i32 %inc173, i32* %i, align 4, !dbg !7507
  br label %for.cond159, !dbg !7509, !llvm.loop !7510

for.end174:                                       ; preds = %if.then170, %for.cond159
  store i32 0, i32* %i, align 4, !dbg !7512
  br label %for.cond175, !dbg !7514

for.cond175:                                      ; preds = %for.inc188, %for.end174
  %161 = load i32, i32* %i, align 4, !dbg !7515
  %162 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7518
  %num_tile_rows176 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %162, i32 0, i32 21, !dbg !7519
  %163 = load i32, i32* %num_tile_rows176, align 8, !dbg !7519
  %cmp177 = icmp slt i32 %161, %163, !dbg !7520
  br i1 %cmp177, label %for.body179, label %for.end190, !dbg !7521

for.body179:                                      ; preds = %for.cond175
  %164 = load i32, i32* %tb_y, align 4, !dbg !7522
  %165 = load i32, i32* %i, align 4, !dbg !7525
  %add180 = add nsw i32 %165, 1, !dbg !7526
  %idxprom181 = sext i32 %add180 to i64, !dbg !7527
  %166 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7527
  %row_bd182 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %166, i32 0, i32 49, !dbg !7528
  %167 = load i32*, i32** %row_bd182, align 8, !dbg !7528
  %arrayidx183 = getelementptr inbounds i32, i32* %167, i64 %idxprom181, !dbg !7527
  %168 = load i32, i32* %arrayidx183, align 4, !dbg !7527
  %cmp184 = icmp ult i32 %164, %168, !dbg !7529
  br i1 %cmp184, label %if.then186, label %if.end187, !dbg !7530

if.then186:                                       ; preds = %for.body179
  %169 = load i32, i32* %i, align 4, !dbg !7531
  store i32 %169, i32* %tile_y, align 4, !dbg !7533
  br label %for.end190, !dbg !7534

if.end187:                                        ; preds = %for.body179
  br label %for.inc188, !dbg !7535

for.inc188:                                       ; preds = %if.end187
  %170 = load i32, i32* %i, align 4, !dbg !7536
  %inc189 = add nsw i32 %170, 1, !dbg !7536
  store i32 %inc189, i32* %i, align 4, !dbg !7536
  br label %for.cond175, !dbg !7538, !llvm.loop !7539

for.end190:                                       ; preds = %if.then186, %for.cond175
  store i32 0, i32* %i, align 4, !dbg !7541
  br label %for.cond191, !dbg !7543

for.cond191:                                      ; preds = %for.inc203, %for.end190
  %171 = load i32, i32* %i, align 4, !dbg !7544
  %172 = load i32, i32* %tile_x, align 4, !dbg !7547
  %cmp192 = icmp slt i32 %171, %172, !dbg !7548
  br i1 %cmp192, label %for.body194, label %for.end205, !dbg !7549

for.body194:                                      ; preds = %for.cond191
  %173 = load i32, i32* %tile_y, align 4, !dbg !7550
  %idxprom195 = sext i32 %173 to i64, !dbg !7551
  %174 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7551
  %row_height196 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %174, i32 0, i32 47, !dbg !7552
  %175 = load i32*, i32** %row_height196, align 8, !dbg !7552
  %arrayidx197 = getelementptr inbounds i32, i32* %175, i64 %idxprom195, !dbg !7551
  %176 = load i32, i32* %arrayidx197, align 4, !dbg !7551
  %177 = load i32, i32* %i, align 4, !dbg !7553
  %idxprom198 = sext i32 %177 to i64, !dbg !7554
  %178 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7554
  %column_width199 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %178, i32 0, i32 46, !dbg !7555
  %179 = load i32*, i32** %column_width199, align 8, !dbg !7555
  %arrayidx200 = getelementptr inbounds i32, i32* %179, i64 %idxprom198, !dbg !7554
  %180 = load i32, i32* %arrayidx200, align 4, !dbg !7554
  %mul201 = mul i32 %176, %180, !dbg !7556
  %181 = load i32, i32* %val, align 4, !dbg !7557
  %add202 = add i32 %181, %mul201, !dbg !7557
  store i32 %add202, i32* %val, align 4, !dbg !7557
  br label %for.inc203, !dbg !7558

for.inc203:                                       ; preds = %for.body194
  %182 = load i32, i32* %i, align 4, !dbg !7559
  %inc204 = add nsw i32 %182, 1, !dbg !7559
  store i32 %inc204, i32* %i, align 4, !dbg !7559
  br label %for.cond191, !dbg !7561, !llvm.loop !7562

for.end205:                                       ; preds = %for.cond191
  store i32 0, i32* %i, align 4, !dbg !7564
  br label %for.cond206, !dbg !7566

for.cond206:                                      ; preds = %for.inc216, %for.end205
  %183 = load i32, i32* %i, align 4, !dbg !7567
  %184 = load i32, i32* %tile_y, align 4, !dbg !7570
  %cmp207 = icmp slt i32 %183, %184, !dbg !7571
  br i1 %cmp207, label %for.body209, label %for.end218, !dbg !7572

for.body209:                                      ; preds = %for.cond206
  %185 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7573
  %ctb_width210 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %185, i32 0, i32 49, !dbg !7574
  %186 = load i32, i32* %ctb_width210, align 4, !dbg !7574
  %187 = load i32, i32* %i, align 4, !dbg !7575
  %idxprom211 = sext i32 %187 to i64, !dbg !7576
  %188 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7576
  %row_height212 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %188, i32 0, i32 47, !dbg !7577
  %189 = load i32*, i32** %row_height212, align 8, !dbg !7577
  %arrayidx213 = getelementptr inbounds i32, i32* %189, i64 %idxprom211, !dbg !7576
  %190 = load i32, i32* %arrayidx213, align 4, !dbg !7576
  %mul214 = mul i32 %186, %190, !dbg !7578
  %191 = load i32, i32* %val, align 4, !dbg !7579
  %add215 = add i32 %191, %mul214, !dbg !7579
  store i32 %add215, i32* %val, align 4, !dbg !7579
  br label %for.inc216, !dbg !7580

for.inc216:                                       ; preds = %for.body209
  %192 = load i32, i32* %i, align 4, !dbg !7581
  %inc217 = add nsw i32 %192, 1, !dbg !7581
  store i32 %inc217, i32* %i, align 4, !dbg !7581
  br label %for.cond206, !dbg !7583, !llvm.loop !7584

for.end218:                                       ; preds = %for.cond206
  %193 = load i32, i32* %tb_y, align 4, !dbg !7586
  %194 = load i32, i32* %tile_y, align 4, !dbg !7587
  %idxprom219 = sext i32 %194 to i64, !dbg !7588
  %195 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7588
  %row_bd220 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %195, i32 0, i32 49, !dbg !7589
  %196 = load i32*, i32** %row_bd220, align 8, !dbg !7589
  %arrayidx221 = getelementptr inbounds i32, i32* %196, i64 %idxprom219, !dbg !7588
  %197 = load i32, i32* %arrayidx221, align 4, !dbg !7588
  %sub222 = sub i32 %193, %197, !dbg !7590
  %198 = load i32, i32* %tile_x, align 4, !dbg !7591
  %idxprom223 = sext i32 %198 to i64, !dbg !7592
  %199 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7592
  %column_width224 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %199, i32 0, i32 46, !dbg !7593
  %200 = load i32*, i32** %column_width224, align 8, !dbg !7593
  %arrayidx225 = getelementptr inbounds i32, i32* %200, i64 %idxprom223, !dbg !7592
  %201 = load i32, i32* %arrayidx225, align 4, !dbg !7592
  %mul226 = mul i32 %sub222, %201, !dbg !7594
  %202 = load i32, i32* %tb_x, align 4, !dbg !7595
  %add227 = add i32 %mul226, %202, !dbg !7596
  %203 = load i32, i32* %tile_x, align 4, !dbg !7597
  %idxprom228 = sext i32 %203 to i64, !dbg !7598
  %204 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7598
  %col_bd229 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %204, i32 0, i32 48, !dbg !7599
  %205 = load i32*, i32** %col_bd229, align 8, !dbg !7599
  %arrayidx230 = getelementptr inbounds i32, i32* %205, i64 %idxprom228, !dbg !7598
  %206 = load i32, i32* %arrayidx230, align 4, !dbg !7598
  %sub231 = sub i32 %add227, %206, !dbg !7600
  %207 = load i32, i32* %val, align 4, !dbg !7601
  %add232 = add i32 %207, %sub231, !dbg !7601
  store i32 %add232, i32* %val, align 4, !dbg !7601
  %208 = load i32, i32* %val, align 4, !dbg !7602
  %209 = load i32, i32* %ctb_addr_rs, align 4, !dbg !7603
  %idxprom233 = sext i32 %209 to i64, !dbg !7604
  %210 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7604
  %ctb_addr_rs_to_ts234 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %210, i32 0, i32 51, !dbg !7605
  %211 = load i32*, i32** %ctb_addr_rs_to_ts234, align 8, !dbg !7605
  %arrayidx235 = getelementptr inbounds i32, i32* %211, i64 %idxprom233, !dbg !7604
  store i32 %208, i32* %arrayidx235, align 4, !dbg !7606
  %212 = load i32, i32* %ctb_addr_rs, align 4, !dbg !7607
  %213 = load i32, i32* %val, align 4, !dbg !7608
  %idxprom236 = sext i32 %213 to i64, !dbg !7609
  %214 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7609
  %ctb_addr_ts_to_rs237 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %214, i32 0, i32 52, !dbg !7610
  %215 = load i32*, i32** %ctb_addr_ts_to_rs237, align 8, !dbg !7610
  %arrayidx238 = getelementptr inbounds i32, i32* %215, i64 %idxprom236, !dbg !7609
  store i32 %212, i32* %arrayidx238, align 4, !dbg !7611
  br label %for.inc239, !dbg !7612

for.inc239:                                       ; preds = %for.end218
  %216 = load i32, i32* %ctb_addr_rs, align 4, !dbg !7613
  %inc240 = add nsw i32 %216, 1, !dbg !7613
  store i32 %inc240, i32* %ctb_addr_rs, align 4, !dbg !7613
  br label %for.cond152, !dbg !7615, !llvm.loop !7616

for.end241:                                       ; preds = %for.cond152
  store i32 0, i32* %j, align 4, !dbg !7618
  store i32 0, i32* %tile_id, align 4, !dbg !7620
  br label %for.cond242, !dbg !7621

for.cond242:                                      ; preds = %for.inc293, %for.end241
  %217 = load i32, i32* %j, align 4, !dbg !7622
  %218 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7625
  %num_tile_rows243 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %218, i32 0, i32 21, !dbg !7626
  %219 = load i32, i32* %num_tile_rows243, align 8, !dbg !7626
  %cmp244 = icmp slt i32 %217, %219, !dbg !7627
  br i1 %cmp244, label %for.body246, label %for.end295, !dbg !7628

for.body246:                                      ; preds = %for.cond242
  store i32 0, i32* %i, align 4, !dbg !7629
  br label %for.cond247, !dbg !7631

for.cond247:                                      ; preds = %for.inc289, %for.body246
  %220 = load i32, i32* %i, align 4, !dbg !7632
  %221 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7635
  %num_tile_columns248 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %221, i32 0, i32 20, !dbg !7636
  %222 = load i32, i32* %num_tile_columns248, align 4, !dbg !7636
  %cmp249 = icmp slt i32 %220, %222, !dbg !7637
  br i1 %cmp249, label %for.body251, label %for.end292, !dbg !7638

for.body251:                                      ; preds = %for.cond247
  %223 = load i32, i32* %j, align 4, !dbg !7639
  %idxprom252 = sext i32 %223 to i64, !dbg !7641
  %224 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7641
  %row_bd253 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %224, i32 0, i32 49, !dbg !7642
  %225 = load i32*, i32** %row_bd253, align 8, !dbg !7642
  %arrayidx254 = getelementptr inbounds i32, i32* %225, i64 %idxprom252, !dbg !7641
  %226 = load i32, i32* %arrayidx254, align 4, !dbg !7641
  store i32 %226, i32* %y, align 4, !dbg !7643
  br label %for.cond255, !dbg !7644

for.cond255:                                      ; preds = %for.inc286, %for.body251
  %227 = load i32, i32* %y, align 4, !dbg !7645
  %228 = load i32, i32* %j, align 4, !dbg !7648
  %add256 = add nsw i32 %228, 1, !dbg !7649
  %idxprom257 = sext i32 %add256 to i64, !dbg !7650
  %229 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7650
  %row_bd258 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %229, i32 0, i32 49, !dbg !7651
  %230 = load i32*, i32** %row_bd258, align 8, !dbg !7651
  %arrayidx259 = getelementptr inbounds i32, i32* %230, i64 %idxprom257, !dbg !7650
  %231 = load i32, i32* %arrayidx259, align 4, !dbg !7650
  %cmp260 = icmp ult i32 %227, %231, !dbg !7652
  br i1 %cmp260, label %for.body262, label %for.end288, !dbg !7653

for.body262:                                      ; preds = %for.cond255
  %232 = load i32, i32* %i, align 4, !dbg !7654
  %idxprom263 = sext i32 %232 to i64, !dbg !7656
  %233 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7656
  %col_bd264 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %233, i32 0, i32 48, !dbg !7657
  %234 = load i32*, i32** %col_bd264, align 8, !dbg !7657
  %arrayidx265 = getelementptr inbounds i32, i32* %234, i64 %idxprom263, !dbg !7656
  %235 = load i32, i32* %arrayidx265, align 4, !dbg !7656
  store i32 %235, i32* %x, align 4, !dbg !7658
  br label %for.cond266, !dbg !7659

for.cond266:                                      ; preds = %for.inc283, %for.body262
  %236 = load i32, i32* %x, align 4, !dbg !7660
  %237 = load i32, i32* %i, align 4, !dbg !7663
  %add267 = add nsw i32 %237, 1, !dbg !7664
  %idxprom268 = sext i32 %add267 to i64, !dbg !7665
  %238 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7665
  %col_bd269 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %238, i32 0, i32 48, !dbg !7666
  %239 = load i32*, i32** %col_bd269, align 8, !dbg !7666
  %arrayidx270 = getelementptr inbounds i32, i32* %239, i64 %idxprom268, !dbg !7665
  %240 = load i32, i32* %arrayidx270, align 4, !dbg !7665
  %cmp271 = icmp ult i32 %236, %240, !dbg !7667
  br i1 %cmp271, label %for.body273, label %for.end285, !dbg !7668

for.body273:                                      ; preds = %for.cond266
  %241 = load i32, i32* %tile_id, align 4, !dbg !7669
  %242 = load i32, i32* %y, align 4, !dbg !7670
  %243 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7671
  %ctb_width274 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %243, i32 0, i32 49, !dbg !7672
  %244 = load i32, i32* %ctb_width274, align 4, !dbg !7672
  %mul275 = mul nsw i32 %242, %244, !dbg !7673
  %245 = load i32, i32* %x, align 4, !dbg !7674
  %add276 = add nsw i32 %mul275, %245, !dbg !7675
  %idxprom277 = sext i32 %add276 to i64, !dbg !7676
  %246 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7676
  %ctb_addr_rs_to_ts278 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %246, i32 0, i32 51, !dbg !7677
  %247 = load i32*, i32** %ctb_addr_rs_to_ts278, align 8, !dbg !7677
  %arrayidx279 = getelementptr inbounds i32, i32* %247, i64 %idxprom277, !dbg !7676
  %248 = load i32, i32* %arrayidx279, align 4, !dbg !7676
  %idxprom280 = sext i32 %248 to i64, !dbg !7678
  %249 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7678
  %tile_id281 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %249, i32 0, i32 53, !dbg !7679
  %250 = load i32*, i32** %tile_id281, align 8, !dbg !7679
  %arrayidx282 = getelementptr inbounds i32, i32* %250, i64 %idxprom280, !dbg !7678
  store i32 %241, i32* %arrayidx282, align 4, !dbg !7680
  br label %for.inc283, !dbg !7678

for.inc283:                                       ; preds = %for.body273
  %251 = load i32, i32* %x, align 4, !dbg !7681
  %inc284 = add nsw i32 %251, 1, !dbg !7681
  store i32 %inc284, i32* %x, align 4, !dbg !7681
  br label %for.cond266, !dbg !7683, !llvm.loop !7684

for.end285:                                       ; preds = %for.cond266
  br label %for.inc286, !dbg !7686

for.inc286:                                       ; preds = %for.end285
  %252 = load i32, i32* %y, align 4, !dbg !7688
  %inc287 = add nsw i32 %252, 1, !dbg !7688
  store i32 %inc287, i32* %y, align 4, !dbg !7688
  br label %for.cond255, !dbg !7690, !llvm.loop !7691

for.end288:                                       ; preds = %for.cond255
  br label %for.inc289, !dbg !7693

for.inc289:                                       ; preds = %for.end288
  %253 = load i32, i32* %i, align 4, !dbg !7695
  %inc290 = add nsw i32 %253, 1, !dbg !7695
  store i32 %inc290, i32* %i, align 4, !dbg !7695
  %254 = load i32, i32* %tile_id, align 4, !dbg !7697
  %inc291 = add nsw i32 %254, 1, !dbg !7697
  store i32 %inc291, i32* %tile_id, align 4, !dbg !7697
  br label %for.cond247, !dbg !7698, !llvm.loop !7699

for.end292:                                       ; preds = %for.cond247
  br label %for.inc293, !dbg !7701

for.inc293:                                       ; preds = %for.end292
  %255 = load i32, i32* %j, align 4, !dbg !7703
  %inc294 = add nsw i32 %255, 1, !dbg !7703
  store i32 %inc294, i32* %j, align 4, !dbg !7703
  br label %for.cond242, !dbg !7705, !llvm.loop !7706

for.end295:                                       ; preds = %for.cond242
  %256 = load i32, i32* %tile_id, align 4, !dbg !7708
  %conv296 = sext i32 %256 to i64, !dbg !7708
  %call297 = call i8* @av_malloc_array(i64 %conv296, i64 4), !dbg !7709
  %257 = bitcast i8* %call297 to i32*, !dbg !7709
  %258 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7710
  %tile_pos_rs = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %258, i32 0, i32 54, !dbg !7711
  store i32* %257, i32** %tile_pos_rs, align 8, !dbg !7712
  %259 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7713
  %tile_pos_rs298 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %259, i32 0, i32 54, !dbg !7715
  %260 = load i32*, i32** %tile_pos_rs298, align 8, !dbg !7715
  %tobool299 = icmp ne i32* %260, null, !dbg !7713
  br i1 %tobool299, label %if.end301, label %if.then300, !dbg !7716

if.then300:                                       ; preds = %for.end295
  store i32 -12, i32* %retval, align 4, !dbg !7717
  br label %return, !dbg !7717

if.end301:                                        ; preds = %for.end295
  store i32 0, i32* %j, align 4, !dbg !7718
  br label %for.cond302, !dbg !7720

for.cond302:                                      ; preds = %for.inc330, %if.end301
  %261 = load i32, i32* %j, align 4, !dbg !7721
  %262 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7724
  %num_tile_rows303 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %262, i32 0, i32 21, !dbg !7725
  %263 = load i32, i32* %num_tile_rows303, align 8, !dbg !7725
  %cmp304 = icmp slt i32 %261, %263, !dbg !7726
  br i1 %cmp304, label %for.body306, label %for.end332, !dbg !7727

for.body306:                                      ; preds = %for.cond302
  store i32 0, i32* %i, align 4, !dbg !7728
  br label %for.cond307, !dbg !7730

for.cond307:                                      ; preds = %for.inc327, %for.body306
  %264 = load i32, i32* %i, align 4, !dbg !7731
  %265 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7734
  %num_tile_columns308 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %265, i32 0, i32 20, !dbg !7735
  %266 = load i32, i32* %num_tile_columns308, align 4, !dbg !7735
  %cmp309 = icmp slt i32 %264, %266, !dbg !7736
  br i1 %cmp309, label %for.body311, label %for.end329, !dbg !7737

for.body311:                                      ; preds = %for.cond307
  %267 = load i32, i32* %j, align 4, !dbg !7738
  %idxprom312 = sext i32 %267 to i64, !dbg !7739
  %268 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7739
  %row_bd313 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %268, i32 0, i32 49, !dbg !7740
  %269 = load i32*, i32** %row_bd313, align 8, !dbg !7740
  %arrayidx314 = getelementptr inbounds i32, i32* %269, i64 %idxprom312, !dbg !7739
  %270 = load i32, i32* %arrayidx314, align 4, !dbg !7739
  %271 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7741
  %ctb_width315 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %271, i32 0, i32 49, !dbg !7742
  %272 = load i32, i32* %ctb_width315, align 4, !dbg !7742
  %mul316 = mul i32 %270, %272, !dbg !7743
  %273 = load i32, i32* %i, align 4, !dbg !7744
  %idxprom317 = sext i32 %273 to i64, !dbg !7745
  %274 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7745
  %col_bd318 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %274, i32 0, i32 48, !dbg !7746
  %275 = load i32*, i32** %col_bd318, align 8, !dbg !7746
  %arrayidx319 = getelementptr inbounds i32, i32* %275, i64 %idxprom317, !dbg !7745
  %276 = load i32, i32* %arrayidx319, align 4, !dbg !7745
  %add320 = add i32 %mul316, %276, !dbg !7747
  %277 = load i32, i32* %j, align 4, !dbg !7748
  %278 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7749
  %num_tile_columns321 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %278, i32 0, i32 20, !dbg !7750
  %279 = load i32, i32* %num_tile_columns321, align 4, !dbg !7750
  %mul322 = mul nsw i32 %277, %279, !dbg !7751
  %280 = load i32, i32* %i, align 4, !dbg !7752
  %add323 = add nsw i32 %mul322, %280, !dbg !7753
  %idxprom324 = sext i32 %add323 to i64, !dbg !7754
  %281 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7754
  %tile_pos_rs325 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %281, i32 0, i32 54, !dbg !7755
  %282 = load i32*, i32** %tile_pos_rs325, align 8, !dbg !7755
  %arrayidx326 = getelementptr inbounds i32, i32* %282, i64 %idxprom324, !dbg !7754
  store i32 %add320, i32* %arrayidx326, align 4, !dbg !7756
  br label %for.inc327, !dbg !7754

for.inc327:                                       ; preds = %for.body311
  %283 = load i32, i32* %i, align 4, !dbg !7757
  %inc328 = add nsw i32 %283, 1, !dbg !7757
  store i32 %inc328, i32* %i, align 4, !dbg !7757
  br label %for.cond307, !dbg !7759, !llvm.loop !7760

for.end329:                                       ; preds = %for.cond307
  br label %for.inc330, !dbg !7762

for.inc330:                                       ; preds = %for.end329
  %284 = load i32, i32* %j, align 4, !dbg !7764
  %inc331 = add nsw i32 %284, 1, !dbg !7764
  store i32 %inc331, i32* %j, align 4, !dbg !7764
  br label %for.cond302, !dbg !7766, !llvm.loop !7767

for.end332:                                       ; preds = %for.cond302
  %285 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7769
  %log2_ctb_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %285, i32 0, i32 33, !dbg !7770
  %286 = load i32, i32* %log2_ctb_size, align 4, !dbg !7770
  %287 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7771
  %log2_min_tb_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %287, i32 0, i32 31, !dbg !7772
  %288 = load i32, i32* %log2_min_tb_size, align 4, !dbg !7772
  %sub333 = sub i32 %286, %288, !dbg !7773
  store i32 %sub333, i32* %log2_diff, align 4, !dbg !7774
  %289 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7775
  %tb_mask334 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %289, i32 0, i32 58, !dbg !7776
  %290 = load i32, i32* %tb_mask334, align 4, !dbg !7776
  %add335 = add nsw i32 %290, 2, !dbg !7777
  %mul336 = mul nsw i32 1, %add335, !dbg !7778
  %add337 = add nsw i32 %mul336, 1, !dbg !7779
  %idxprom338 = sext i32 %add337 to i64, !dbg !7780
  %291 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7780
  %min_tb_addr_zs_tab339 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %291, i32 0, i32 56, !dbg !7781
  %292 = load i32*, i32** %min_tb_addr_zs_tab339, align 8, !dbg !7781
  %arrayidx340 = getelementptr inbounds i32, i32* %292, i64 %idxprom338, !dbg !7780
  %293 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7782
  %min_tb_addr_zs = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %293, i32 0, i32 55, !dbg !7783
  store i32* %arrayidx340, i32** %min_tb_addr_zs, align 8, !dbg !7784
  store i32 0, i32* %y, align 4, !dbg !7785
  br label %for.cond341, !dbg !7787

for.cond341:                                      ; preds = %for.inc356, %for.end332
  %294 = load i32, i32* %y, align 4, !dbg !7788
  %295 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7791
  %tb_mask342 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %295, i32 0, i32 58, !dbg !7792
  %296 = load i32, i32* %tb_mask342, align 4, !dbg !7792
  %add343 = add nsw i32 %296, 2, !dbg !7793
  %cmp344 = icmp slt i32 %294, %add343, !dbg !7794
  br i1 %cmp344, label %for.body346, label %for.end358, !dbg !7795

for.body346:                                      ; preds = %for.cond341
  %297 = load i32, i32* %y, align 4, !dbg !7796
  %298 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7798
  %tb_mask347 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %298, i32 0, i32 58, !dbg !7799
  %299 = load i32, i32* %tb_mask347, align 4, !dbg !7799
  %add348 = add nsw i32 %299, 2, !dbg !7800
  %mul349 = mul nsw i32 %297, %add348, !dbg !7801
  %idxprom350 = sext i32 %mul349 to i64, !dbg !7802
  %300 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7802
  %min_tb_addr_zs_tab351 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %300, i32 0, i32 56, !dbg !7803
  %301 = load i32*, i32** %min_tb_addr_zs_tab351, align 8, !dbg !7803
  %arrayidx352 = getelementptr inbounds i32, i32* %301, i64 %idxprom350, !dbg !7802
  store i32 -1, i32* %arrayidx352, align 4, !dbg !7804
  %302 = load i32, i32* %y, align 4, !dbg !7805
  %idxprom353 = sext i32 %302 to i64, !dbg !7806
  %303 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7806
  %min_tb_addr_zs_tab354 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %303, i32 0, i32 56, !dbg !7807
  %304 = load i32*, i32** %min_tb_addr_zs_tab354, align 8, !dbg !7807
  %arrayidx355 = getelementptr inbounds i32, i32* %304, i64 %idxprom353, !dbg !7806
  store i32 -1, i32* %arrayidx355, align 4, !dbg !7808
  br label %for.inc356, !dbg !7809

for.inc356:                                       ; preds = %for.body346
  %305 = load i32, i32* %y, align 4, !dbg !7810
  %inc357 = add nsw i32 %305, 1, !dbg !7810
  store i32 %inc357, i32* %y, align 4, !dbg !7810
  br label %for.cond341, !dbg !7812, !llvm.loop !7813

for.end358:                                       ; preds = %for.cond341
  store i32 0, i32* %y, align 4, !dbg !7815
  br label %for.cond359, !dbg !7817

for.cond359:                                      ; preds = %for.inc412, %for.end358
  %306 = load i32, i32* %y, align 4, !dbg !7818
  %307 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7821
  %tb_mask360 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %307, i32 0, i32 58, !dbg !7822
  %308 = load i32, i32* %tb_mask360, align 4, !dbg !7822
  %add361 = add nsw i32 %308, 1, !dbg !7823
  %cmp362 = icmp slt i32 %306, %add361, !dbg !7824
  br i1 %cmp362, label %for.body364, label %for.end414, !dbg !7825

for.body364:                                      ; preds = %for.cond359
  store i32 0, i32* %x, align 4, !dbg !7826
  br label %for.cond365, !dbg !7829

for.cond365:                                      ; preds = %for.inc409, %for.body364
  %309 = load i32, i32* %x, align 4, !dbg !7830
  %310 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7833
  %tb_mask366 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %310, i32 0, i32 58, !dbg !7834
  %311 = load i32, i32* %tb_mask366, align 4, !dbg !7834
  %add367 = add nsw i32 %311, 1, !dbg !7835
  %cmp368 = icmp slt i32 %309, %add367, !dbg !7836
  br i1 %cmp368, label %for.body370, label %for.end411, !dbg !7837

for.body370:                                      ; preds = %for.cond365
  call void @llvm.dbg.declare(metadata i32* %tb_x371, metadata !7838, metadata !1892), !dbg !7840
  %312 = load i32, i32* %x, align 4, !dbg !7841
  %313 = load i32, i32* %log2_diff, align 4, !dbg !7842
  %shr = ashr i32 %312, %313, !dbg !7843
  store i32 %shr, i32* %tb_x371, align 4, !dbg !7840
  call void @llvm.dbg.declare(metadata i32* %tb_y372, metadata !7844, metadata !1892), !dbg !7845
  %314 = load i32, i32* %y, align 4, !dbg !7846
  %315 = load i32, i32* %log2_diff, align 4, !dbg !7847
  %shr373 = ashr i32 %314, %315, !dbg !7848
  store i32 %shr373, i32* %tb_y372, align 4, !dbg !7845
  call void @llvm.dbg.declare(metadata i32* %rs, metadata !7849, metadata !1892), !dbg !7850
  %316 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7851
  %ctb_width374 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %316, i32 0, i32 49, !dbg !7852
  %317 = load i32, i32* %ctb_width374, align 4, !dbg !7852
  %318 = load i32, i32* %tb_y372, align 4, !dbg !7853
  %mul375 = mul nsw i32 %317, %318, !dbg !7854
  %319 = load i32, i32* %tb_x371, align 4, !dbg !7855
  %add376 = add nsw i32 %mul375, %319, !dbg !7856
  store i32 %add376, i32* %rs, align 4, !dbg !7850
  call void @llvm.dbg.declare(metadata i32* %val377, metadata !7857, metadata !1892), !dbg !7858
  %320 = load i32, i32* %rs, align 4, !dbg !7859
  %idxprom378 = sext i32 %320 to i64, !dbg !7860
  %321 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7860
  %ctb_addr_rs_to_ts379 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %321, i32 0, i32 51, !dbg !7861
  %322 = load i32*, i32** %ctb_addr_rs_to_ts379, align 8, !dbg !7861
  %arrayidx380 = getelementptr inbounds i32, i32* %322, i64 %idxprom378, !dbg !7860
  %323 = load i32, i32* %arrayidx380, align 4, !dbg !7860
  %324 = load i32, i32* %log2_diff, align 4, !dbg !7862
  %mul381 = mul nsw i32 %324, 2, !dbg !7863
  %shl = shl i32 %323, %mul381, !dbg !7864
  store i32 %shl, i32* %val377, align 4, !dbg !7858
  store i32 0, i32* %i, align 4, !dbg !7865
  br label %for.cond382, !dbg !7867

for.cond382:                                      ; preds = %for.inc399, %for.body370
  %325 = load i32, i32* %i, align 4, !dbg !7868
  %326 = load i32, i32* %log2_diff, align 4, !dbg !7871
  %cmp383 = icmp slt i32 %325, %326, !dbg !7872
  br i1 %cmp383, label %for.body385, label %for.end401, !dbg !7873

for.body385:                                      ; preds = %for.cond382
  call void @llvm.dbg.declare(metadata i32* %m, metadata !7874, metadata !1892), !dbg !7876
  %327 = load i32, i32* %i, align 4, !dbg !7877
  %shl386 = shl i32 1, %327, !dbg !7878
  store i32 %shl386, i32* %m, align 4, !dbg !7876
  %328 = load i32, i32* %m, align 4, !dbg !7879
  %329 = load i32, i32* %x, align 4, !dbg !7880
  %and = and i32 %328, %329, !dbg !7881
  %tobool387 = icmp ne i32 %and, 0, !dbg !7881
  br i1 %tobool387, label %cond.true, label %cond.false, !dbg !7879

cond.true:                                        ; preds = %for.body385
  %330 = load i32, i32* %m, align 4, !dbg !7882
  %331 = load i32, i32* %m, align 4, !dbg !7884
  %mul388 = mul nsw i32 %330, %331, !dbg !7885
  br label %cond.end, !dbg !7886

cond.false:                                       ; preds = %for.body385
  br label %cond.end, !dbg !7887

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul388, %cond.true ], [ 0, %cond.false ], !dbg !7889
  %332 = load i32, i32* %m, align 4, !dbg !7891
  %333 = load i32, i32* %y, align 4, !dbg !7892
  %and389 = and i32 %332, %333, !dbg !7893
  %tobool390 = icmp ne i32 %and389, 0, !dbg !7893
  br i1 %tobool390, label %cond.true391, label %cond.false394, !dbg !7891

cond.true391:                                     ; preds = %cond.end
  %334 = load i32, i32* %m, align 4, !dbg !7894
  %mul392 = mul nsw i32 2, %334, !dbg !7896
  %335 = load i32, i32* %m, align 4, !dbg !7897
  %mul393 = mul nsw i32 %mul392, %335, !dbg !7898
  br label %cond.end395, !dbg !7899

cond.false394:                                    ; preds = %cond.end
  br label %cond.end395, !dbg !7900

cond.end395:                                      ; preds = %cond.false394, %cond.true391
  %cond396 = phi i32 [ %mul393, %cond.true391 ], [ 0, %cond.false394 ], !dbg !7902
  %add397 = add nsw i32 %cond, %cond396, !dbg !7904
  %336 = load i32, i32* %val377, align 4, !dbg !7905
  %add398 = add nsw i32 %336, %add397, !dbg !7905
  store i32 %add398, i32* %val377, align 4, !dbg !7905
  br label %for.inc399, !dbg !7906

for.inc399:                                       ; preds = %cond.end395
  %337 = load i32, i32* %i, align 4, !dbg !7907
  %inc400 = add nsw i32 %337, 1, !dbg !7907
  store i32 %inc400, i32* %i, align 4, !dbg !7907
  br label %for.cond382, !dbg !7909, !llvm.loop !7910

for.end401:                                       ; preds = %for.cond382
  %338 = load i32, i32* %val377, align 4, !dbg !7912
  %339 = load i32, i32* %y, align 4, !dbg !7913
  %340 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !7914
  %tb_mask402 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %340, i32 0, i32 58, !dbg !7915
  %341 = load i32, i32* %tb_mask402, align 4, !dbg !7915
  %add403 = add nsw i32 %341, 2, !dbg !7916
  %mul404 = mul nsw i32 %339, %add403, !dbg !7917
  %342 = load i32, i32* %x, align 4, !dbg !7918
  %add405 = add nsw i32 %mul404, %342, !dbg !7919
  %idxprom406 = sext i32 %add405 to i64, !dbg !7920
  %343 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps.addr, align 8, !dbg !7920
  %min_tb_addr_zs407 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %343, i32 0, i32 55, !dbg !7921
  %344 = load i32*, i32** %min_tb_addr_zs407, align 8, !dbg !7921
  %arrayidx408 = getelementptr inbounds i32, i32* %344, i64 %idxprom406, !dbg !7920
  store i32 %338, i32* %arrayidx408, align 4, !dbg !7922
  br label %for.inc409, !dbg !7923

for.inc409:                                       ; preds = %for.end401
  %345 = load i32, i32* %x, align 4, !dbg !7924
  %inc410 = add nsw i32 %345, 1, !dbg !7924
  store i32 %inc410, i32* %x, align 4, !dbg !7924
  br label %for.cond365, !dbg !7926, !llvm.loop !7927

for.end411:                                       ; preds = %for.cond365
  br label %for.inc412, !dbg !7929

for.inc412:                                       ; preds = %for.end411
  %346 = load i32, i32* %y, align 4, !dbg !7930
  %inc413 = add nsw i32 %346, 1, !dbg !7930
  store i32 %inc413, i32* %y, align 4, !dbg !7930
  br label %for.cond359, !dbg !7932, !llvm.loop !7933

for.end414:                                       ; preds = %for.cond359
  store i32 0, i32* %retval, align 4, !dbg !7935
  br label %return, !dbg !7935

return:                                           ; preds = %for.end414, %if.then300, %if.then150, %if.then29, %if.then
  %347 = load i32, i32* %retval, align 4, !dbg !7936
  ret i32 %347, !dbg !7936
}

; Function Attrs: nounwind uwtable
define internal void @remove_pps(%struct.HEVCParamSets* %s, i32 %id) #0 !dbg !7937 {
entry:
  %s.addr = alloca %struct.HEVCParamSets*, align 8
  %id.addr = alloca i32, align 4
  store %struct.HEVCParamSets* %s, %struct.HEVCParamSets** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCParamSets** %s.addr, metadata !7938, metadata !1892), !dbg !7939
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !7940, metadata !1892), !dbg !7941
  %0 = load i32, i32* %id.addr, align 4, !dbg !7942
  %idxprom = sext i32 %0 to i64, !dbg !7944
  %1 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !7944
  %pps_list = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %1, i32 0, i32 2, !dbg !7945
  %arrayidx = getelementptr inbounds [64 x %struct.AVBufferRef*], [64 x %struct.AVBufferRef*]* %pps_list, i64 0, i64 %idxprom, !dbg !7944
  %2 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx, align 8, !dbg !7944
  %tobool = icmp ne %struct.AVBufferRef* %2, null, !dbg !7944
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7946

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !7947
  %pps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %3, i32 0, i32 5, !dbg !7949
  %4 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !7949
  %5 = load i32, i32* %id.addr, align 4, !dbg !7950
  %idxprom1 = sext i32 %5 to i64, !dbg !7951
  %6 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !7951
  %pps_list2 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %6, i32 0, i32 2, !dbg !7952
  %arrayidx3 = getelementptr inbounds [64 x %struct.AVBufferRef*], [64 x %struct.AVBufferRef*]* %pps_list2, i64 0, i64 %idxprom1, !dbg !7951
  %7 = load %struct.AVBufferRef*, %struct.AVBufferRef** %arrayidx3, align 8, !dbg !7951
  %data = getelementptr inbounds %struct.AVBufferRef, %struct.AVBufferRef* %7, i32 0, i32 1, !dbg !7953
  %8 = load i8*, i8** %data, align 8, !dbg !7953
  %9 = bitcast i8* %8 to %struct.HEVCPPS*, !dbg !7954
  %cmp = icmp eq %struct.HEVCPPS* %4, %9, !dbg !7955
  br i1 %cmp, label %if.then, label %if.end, !dbg !7956

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !7957
  %pps4 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %10, i32 0, i32 5, !dbg !7958
  store %struct.HEVCPPS* null, %struct.HEVCPPS** %pps4, align 8, !dbg !7959
  br label %if.end, !dbg !7957

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %11 = load i32, i32* %id.addr, align 4, !dbg !7960
  %idxprom5 = sext i32 %11 to i64, !dbg !7961
  %12 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %s.addr, align 8, !dbg !7961
  %pps_list6 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %12, i32 0, i32 2, !dbg !7962
  %arrayidx7 = getelementptr inbounds [64 x %struct.AVBufferRef*], [64 x %struct.AVBufferRef*]* %pps_list6, i64 0, i64 %idxprom5, !dbg !7961
  call void @av_buffer_unref(%struct.AVBufferRef** %arrayidx7), !dbg !7963
  ret void, !dbg !7964
}

; Function Attrs: nounwind uwtable
define void @ff_hevc_ps_uninit(%struct.HEVCParamSets* %ps) #0 !dbg !7965 {
entry:
  %ps.addr = alloca %struct.HEVCParamSets*, align 8
  %i = alloca i32, align 4
  store %struct.HEVCParamSets* %ps, %struct.HEVCParamSets** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCParamSets** %ps.addr, metadata !7968, metadata !1892), !dbg !7969
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7970, metadata !1892), !dbg !7971
  store i32 0, i32* %i, align 4, !dbg !7972
  br label %for.cond, !dbg !7974

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7975
  %conv = sext i32 %0 to i64, !dbg !7975
  %cmp = icmp ult i64 %conv, 16, !dbg !7978
  br i1 %cmp, label %for.body, label %for.end, !dbg !7979

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !7980
  %idxprom = sext i32 %1 to i64, !dbg !7981
  %2 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !7981
  %vps_list = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %2, i32 0, i32 0, !dbg !7982
  %arrayidx = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %vps_list, i64 0, i64 %idxprom, !dbg !7981
  call void @av_buffer_unref(%struct.AVBufferRef** %arrayidx), !dbg !7983
  br label %for.inc, !dbg !7983

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !7984
  %inc = add nsw i32 %3, 1, !dbg !7984
  store i32 %inc, i32* %i, align 4, !dbg !7984
  br label %for.cond, !dbg !7986, !llvm.loop !7987

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7989
  br label %for.cond2, !dbg !7991

for.cond2:                                        ; preds = %for.inc9, %for.end
  %4 = load i32, i32* %i, align 4, !dbg !7992
  %conv3 = sext i32 %4 to i64, !dbg !7992
  %cmp4 = icmp ult i64 %conv3, 16, !dbg !7995
  br i1 %cmp4, label %for.body6, label %for.end11, !dbg !7996

for.body6:                                        ; preds = %for.cond2
  %5 = load i32, i32* %i, align 4, !dbg !7997
  %idxprom7 = sext i32 %5 to i64, !dbg !7998
  %6 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !7998
  %sps_list = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %6, i32 0, i32 1, !dbg !7999
  %arrayidx8 = getelementptr inbounds [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*]* %sps_list, i64 0, i64 %idxprom7, !dbg !7998
  call void @av_buffer_unref(%struct.AVBufferRef** %arrayidx8), !dbg !8000
  br label %for.inc9, !dbg !8000

for.inc9:                                         ; preds = %for.body6
  %7 = load i32, i32* %i, align 4, !dbg !8001
  %inc10 = add nsw i32 %7, 1, !dbg !8001
  store i32 %inc10, i32* %i, align 4, !dbg !8001
  br label %for.cond2, !dbg !8003, !llvm.loop !8004

for.end11:                                        ; preds = %for.cond2
  store i32 0, i32* %i, align 4, !dbg !8006
  br label %for.cond12, !dbg !8008

for.cond12:                                       ; preds = %for.inc19, %for.end11
  %8 = load i32, i32* %i, align 4, !dbg !8009
  %conv13 = sext i32 %8 to i64, !dbg !8009
  %cmp14 = icmp ult i64 %conv13, 64, !dbg !8012
  br i1 %cmp14, label %for.body16, label %for.end21, !dbg !8013

for.body16:                                       ; preds = %for.cond12
  %9 = load i32, i32* %i, align 4, !dbg !8014
  %idxprom17 = sext i32 %9 to i64, !dbg !8015
  %10 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !8015
  %pps_list = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %10, i32 0, i32 2, !dbg !8016
  %arrayidx18 = getelementptr inbounds [64 x %struct.AVBufferRef*], [64 x %struct.AVBufferRef*]* %pps_list, i64 0, i64 %idxprom17, !dbg !8015
  call void @av_buffer_unref(%struct.AVBufferRef** %arrayidx18), !dbg !8017
  br label %for.inc19, !dbg !8017

for.inc19:                                        ; preds = %for.body16
  %11 = load i32, i32* %i, align 4, !dbg !8018
  %inc20 = add nsw i32 %11, 1, !dbg !8018
  store i32 %inc20, i32* %i, align 4, !dbg !8018
  br label %for.cond12, !dbg !8020, !llvm.loop !8021

for.end21:                                        ; preds = %for.cond12
  %12 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !8023
  %sps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %12, i32 0, i32 4, !dbg !8024
  store %struct.HEVCSPS* null, %struct.HEVCSPS** %sps, align 8, !dbg !8025
  %13 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !8026
  %pps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %13, i32 0, i32 5, !dbg !8027
  store %struct.HEVCPPS* null, %struct.HEVCPPS** %pps, align 8, !dbg !8028
  %14 = load %struct.HEVCParamSets*, %struct.HEVCParamSets** %ps.addr, align 8, !dbg !8029
  %vps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %14, i32 0, i32 3, !dbg !8030
  store %struct.HEVCVPS* null, %struct.HEVCVPS** %vps, align 8, !dbg !8031
  ret void, !dbg !8032
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_compute_poc(%struct.HEVCSPS* %sps, i32 %pocTid0, i32 %poc_lsb, i32 %nal_unit_type) #0 !dbg !8033 {
entry:
  %sps.addr = alloca %struct.HEVCSPS*, align 8
  %pocTid0.addr = alloca i32, align 4
  %poc_lsb.addr = alloca i32, align 4
  %nal_unit_type.addr = alloca i32, align 4
  %max_poc_lsb = alloca i32, align 4
  %prev_poc_lsb = alloca i32, align 4
  %prev_poc_msb = alloca i32, align 4
  %poc_msb = alloca i32, align 4
  store %struct.HEVCSPS* %sps, %struct.HEVCSPS** %sps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCSPS** %sps.addr, metadata !8036, metadata !1892), !dbg !8037
  store i32 %pocTid0, i32* %pocTid0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pocTid0.addr, metadata !8038, metadata !1892), !dbg !8039
  store i32 %poc_lsb, i32* %poc_lsb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %poc_lsb.addr, metadata !8040, metadata !1892), !dbg !8041
  store i32 %nal_unit_type, i32* %nal_unit_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nal_unit_type.addr, metadata !8042, metadata !1892), !dbg !8043
  call void @llvm.dbg.declare(metadata i32* %max_poc_lsb, metadata !8044, metadata !1892), !dbg !8045
  %0 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps.addr, align 8, !dbg !8046
  %log2_max_poc_lsb = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %0, i32 0, i32 9, !dbg !8047
  %1 = load i32, i32* %log2_max_poc_lsb, align 4, !dbg !8047
  %shl = shl i32 1, %1, !dbg !8048
  store i32 %shl, i32* %max_poc_lsb, align 4, !dbg !8045
  call void @llvm.dbg.declare(metadata i32* %prev_poc_lsb, metadata !8049, metadata !1892), !dbg !8050
  %2 = load i32, i32* %pocTid0.addr, align 4, !dbg !8051
  %3 = load i32, i32* %max_poc_lsb, align 4, !dbg !8052
  %rem = srem i32 %2, %3, !dbg !8053
  store i32 %rem, i32* %prev_poc_lsb, align 4, !dbg !8050
  call void @llvm.dbg.declare(metadata i32* %prev_poc_msb, metadata !8054, metadata !1892), !dbg !8055
  %4 = load i32, i32* %pocTid0.addr, align 4, !dbg !8056
  %5 = load i32, i32* %prev_poc_lsb, align 4, !dbg !8057
  %sub = sub nsw i32 %4, %5, !dbg !8058
  store i32 %sub, i32* %prev_poc_msb, align 4, !dbg !8055
  call void @llvm.dbg.declare(metadata i32* %poc_msb, metadata !8059, metadata !1892), !dbg !8060
  %6 = load i32, i32* %poc_lsb.addr, align 4, !dbg !8061
  %7 = load i32, i32* %prev_poc_lsb, align 4, !dbg !8063
  %cmp = icmp slt i32 %6, %7, !dbg !8064
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !8065

land.lhs.true:                                    ; preds = %entry
  %8 = load i32, i32* %prev_poc_lsb, align 4, !dbg !8066
  %9 = load i32, i32* %poc_lsb.addr, align 4, !dbg !8068
  %sub1 = sub nsw i32 %8, %9, !dbg !8069
  %10 = load i32, i32* %max_poc_lsb, align 4, !dbg !8070
  %div = sdiv i32 %10, 2, !dbg !8071
  %cmp2 = icmp sge i32 %sub1, %div, !dbg !8072
  br i1 %cmp2, label %if.then, label %if.else, !dbg !8073

if.then:                                          ; preds = %land.lhs.true
  %11 = load i32, i32* %prev_poc_msb, align 4, !dbg !8074
  %12 = load i32, i32* %max_poc_lsb, align 4, !dbg !8075
  %add = add nsw i32 %11, %12, !dbg !8076
  store i32 %add, i32* %poc_msb, align 4, !dbg !8077
  br label %if.end11, !dbg !8078

if.else:                                          ; preds = %land.lhs.true, %entry
  %13 = load i32, i32* %poc_lsb.addr, align 4, !dbg !8079
  %14 = load i32, i32* %prev_poc_lsb, align 4, !dbg !8081
  %cmp3 = icmp sgt i32 %13, %14, !dbg !8082
  br i1 %cmp3, label %land.lhs.true4, label %if.else10, !dbg !8083

land.lhs.true4:                                   ; preds = %if.else
  %15 = load i32, i32* %poc_lsb.addr, align 4, !dbg !8084
  %16 = load i32, i32* %prev_poc_lsb, align 4, !dbg !8086
  %sub5 = sub nsw i32 %15, %16, !dbg !8087
  %17 = load i32, i32* %max_poc_lsb, align 4, !dbg !8088
  %div6 = sdiv i32 %17, 2, !dbg !8089
  %cmp7 = icmp sgt i32 %sub5, %div6, !dbg !8090
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !8091

if.then8:                                         ; preds = %land.lhs.true4
  %18 = load i32, i32* %prev_poc_msb, align 4, !dbg !8092
  %19 = load i32, i32* %max_poc_lsb, align 4, !dbg !8093
  %sub9 = sub nsw i32 %18, %19, !dbg !8094
  store i32 %sub9, i32* %poc_msb, align 4, !dbg !8095
  br label %if.end, !dbg !8096

if.else10:                                        ; preds = %land.lhs.true4, %if.else
  %20 = load i32, i32* %prev_poc_msb, align 4, !dbg !8097
  store i32 %20, i32* %poc_msb, align 4, !dbg !8098
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then8
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  %21 = load i32, i32* %nal_unit_type.addr, align 4, !dbg !8099
  %cmp12 = icmp eq i32 %21, 16, !dbg !8101
  br i1 %cmp12, label %if.then16, label %lor.lhs.false, !dbg !8102

lor.lhs.false:                                    ; preds = %if.end11
  %22 = load i32, i32* %nal_unit_type.addr, align 4, !dbg !8103
  %cmp13 = icmp eq i32 %22, 17, !dbg !8104
  br i1 %cmp13, label %if.then16, label %lor.lhs.false14, !dbg !8105

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %23 = load i32, i32* %nal_unit_type.addr, align 4, !dbg !8106
  %cmp15 = icmp eq i32 %23, 18, !dbg !8107
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !8108

if.then16:                                        ; preds = %lor.lhs.false14, %lor.lhs.false, %if.end11
  store i32 0, i32* %poc_msb, align 4, !dbg !8110
  br label %if.end17, !dbg !8111

if.end17:                                         ; preds = %if.then16, %lor.lhs.false14
  %24 = load i32, i32* %poc_msb, align 4, !dbg !8112
  %25 = load i32, i32* %poc_lsb.addr, align 4, !dbg !8113
  %add18 = add nsw i32 %24, %25, !dbg !8114
  ret i32 %add18, !dbg !8115
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @show_bits_long(%struct.GetBitContext* %s, i32 %n) #2 !dbg !8116 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %gb = alloca %struct.GetBitContext, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8117, metadata !1892), !dbg !8118
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8119, metadata !1892), !dbg !8120
  %0 = load i32, i32* %n.addr, align 4, !dbg !8121
  %cmp = icmp sle i32 %0, 25, !dbg !8123
  br i1 %cmp, label %if.then, label %if.else, !dbg !8124

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8125
  %2 = load i32, i32* %n.addr, align 4, !dbg !8127
  %call = call i32 @show_bits(%struct.GetBitContext* %1, i32 %2), !dbg !8128
  store i32 %call, i32* %retval, align 4, !dbg !8129
  br label %return, !dbg !8129

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !8130, metadata !1892), !dbg !8132
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8133
  %4 = bitcast %struct.GetBitContext* %gb to i8*, !dbg !8134
  %5 = bitcast %struct.GetBitContext* %3 to i8*, !dbg !8134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 32, i32 8, i1 false), !dbg !8134
  %6 = load i32, i32* %n.addr, align 4, !dbg !8135
  %call1 = call i32 @get_bits_long(%struct.GetBitContext* %gb, i32 %6), !dbg !8136
  store i32 %call1, i32* %retval, align 4, !dbg !8137
  br label %return, !dbg !8137

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !8138
  ret i32 %7, !dbg !8138
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #2 !dbg !8139 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !8140, metadata !1892), !dbg !8144
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !8146, metadata !1892), !dbg !8147
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !8148, metadata !1892), !dbg !8149
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8150, metadata !1892), !dbg !8151
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8152, metadata !1892), !dbg !8153
  %0 = load i32, i32* %n.addr, align 4, !dbg !8154
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8155
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !8156
  %2 = load i32, i32* %index, align 8, !dbg !8156
  %sub = sub nsw i32 0, %2, !dbg !8157
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8158
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !8159
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !8159
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8160
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !8161
  %6 = load i32, i32* %index1, align 8, !dbg !8161
  %sub2 = sub nsw i32 %4, %6, !dbg !8162
  store i32 %0, i32* %a.addr.i, align 4, !dbg !8163
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !8163
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !8163
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !8164
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !8166
  %cmp.i = icmp slt i32 %7, %8, !dbg !8167
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !8168

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !8169
  store i32 %9, i32* %retval.i, align 4, !dbg !8171
  br label %av_clip_c.exit, !dbg !8171

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !8172
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !8174
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !8175
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !8176

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !8177
  store i32 %12, i32* %retval.i, align 4, !dbg !8179
  br label %av_clip_c.exit, !dbg !8179

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !8180
  store i32 %13, i32* %retval.i, align 4, !dbg !8181
  br label %av_clip_c.exit, !dbg !8181

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !8182
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8183
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !8184
  %16 = load i32, i32* %index3, align 8, !dbg !8185
  %add = add nsw i32 %16, %14, !dbg !8185
  store i32 %add, i32* %index3, align 8, !dbg !8185
  ret void, !dbg !8186
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @show_bits(%struct.GetBitContext* %s, i32 %n) #2 !dbg !8187 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2905, metadata !1892), !dbg !8188
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8190, metadata !1892), !dbg !8191
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8192, metadata !1892), !dbg !8193
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8194, metadata !1892), !dbg !8195
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !8196, metadata !1892), !dbg !8197
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8198
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !8199
  %1 = load i32, i32* %index, align 8, !dbg !8199
  store i32 %1, i32* %re_index, align 4, !dbg !8197
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !8200, metadata !1892), !dbg !8201
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8202
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 0, !dbg !8203
  %3 = load i8*, i8** %buffer, align 8, !dbg !8203
  %4 = load i32, i32* %re_index, align 4, !dbg !8204
  %shr = lshr i32 %4, 3, !dbg !8205
  %idx.ext = zext i32 %shr to i64, !dbg !8206
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !8206
  %5 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !8207
  %l = bitcast %union.unaligned_32* %5 to i32*, !dbg !8207
  %6 = load i32, i32* %l, align 1, !dbg !8207
  store i32 %6, i32* %x.addr.i, align 4, !dbg !8208
  %7 = load i32, i32* %x.addr.i, align 4, !dbg !8209
  %shl.i = shl i32 %7, 8, !dbg !8210
  %and.i = and i32 %shl.i, 65280, !dbg !8211
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !8212
  %shr.i = lshr i32 %8, 8, !dbg !8213
  %and1.i = and i32 %shr.i, 255, !dbg !8214
  %or.i = or i32 %and.i, %and1.i, !dbg !8215
  %shl2.i = shl i32 %or.i, 16, !dbg !8216
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !8217
  %shr3.i = lshr i32 %9, 16, !dbg !8218
  %shl4.i = shl i32 %shr3.i, 8, !dbg !8219
  %and5.i = and i32 %shl4.i, 65280, !dbg !8220
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !8221
  %shr6.i = lshr i32 %10, 16, !dbg !8222
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !8223
  %and8.i = and i32 %shr7.i, 255, !dbg !8224
  %or9.i = or i32 %and5.i, %and8.i, !dbg !8225
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !8226
  %11 = load i32, i32* %re_index, align 4, !dbg !8227
  %and = and i32 %11, 7, !dbg !8228
  %shl = shl i32 %or10.i, %and, !dbg !8229
  store i32 %shl, i32* %re_cache, align 4, !dbg !8230
  %12 = load i32, i32* %re_cache, align 4, !dbg !8231
  %13 = load i32, i32* %n.addr, align 4, !dbg !8232
  %conv = trunc i32 %13 to i8, !dbg !8232
  %call3 = call i32 @NEG_USR32(i32 %12, i8 signext %conv), !dbg !8233
  store i32 %call3, i32* %tmp, align 4, !dbg !8234
  %14 = load i32, i32* %tmp, align 4, !dbg !8235
  ret i32 %14, !dbg !8236
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #2 !dbg !8237 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !8241, metadata !1892), !dbg !8242
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !8243, metadata !1892), !dbg !8244
  %0 = load i32, i32* %a.addr, align 4, !dbg !8245
  %1 = load i8, i8* %s.addr, align 1, !dbg !8246
  %conv = sext i8 %1 to i32, !dbg !8246
  %sub = sub nsw i32 0, %conv, !dbg !8247
  %conv1 = trunc i32 %sub to i8, !dbg !8248
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #1, !dbg !8245, !srcloc !8249
  store i32 %2, i32* %a.addr, align 4, !dbg !8245
  %3 = load i32, i32* %a.addr, align 4, !dbg !8250
  ret i32 %3, !dbg !8251
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_profile_tier_level(%struct.GetBitContext* %gb, %struct.AVCodecContext* %avctx, %struct.PTLCommon* %ptl) #0 !dbg !8252 {
entry:
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %ptl.addr = alloca %struct.PTLCommon*, align 8
  %i = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8256, metadata !1892), !dbg !8257
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !8258, metadata !1892), !dbg !8259
  store %struct.PTLCommon* %ptl, %struct.PTLCommon** %ptl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTLCommon** %ptl.addr, metadata !8260, metadata !1892), !dbg !8261
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8262, metadata !1892), !dbg !8263
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8264
  %call = call i32 @get_bits_left(%struct.GetBitContext* %0), !dbg !8266
  %cmp = icmp slt i32 %call, 88, !dbg !8267
  br i1 %cmp, label %if.then, label %if.end, !dbg !8268

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !8269
  br label %return, !dbg !8269

if.end:                                           ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8270
  %call1 = call i32 @get_bits(%struct.GetBitContext* %1, i32 2), !dbg !8271
  %conv = trunc i32 %call1 to i8, !dbg !8271
  %2 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8272
  %profile_space = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %2, i32 0, i32 0, !dbg !8273
  store i8 %conv, i8* %profile_space, align 1, !dbg !8274
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8275
  %call2 = call i32 @get_bits1(%struct.GetBitContext* %3), !dbg !8276
  %conv3 = trunc i32 %call2 to i8, !dbg !8276
  %4 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8277
  %tier_flag = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %4, i32 0, i32 1, !dbg !8278
  store i8 %conv3, i8* %tier_flag, align 1, !dbg !8279
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8280
  %call4 = call i32 @get_bits(%struct.GetBitContext* %5, i32 5), !dbg !8281
  %conv5 = trunc i32 %call4 to i8, !dbg !8281
  %6 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8282
  %profile_idc = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %6, i32 0, i32 2, !dbg !8283
  store i8 %conv5, i8* %profile_idc, align 1, !dbg !8284
  %7 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8285
  %profile_idc6 = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %7, i32 0, i32 2, !dbg !8287
  %8 = load i8, i8* %profile_idc6, align 1, !dbg !8287
  %conv7 = zext i8 %8 to i32, !dbg !8285
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !8288
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !8289

if.then10:                                        ; preds = %if.end
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8290
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !8290
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 48, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.66, i32 0, i32 0)), !dbg !8291
  br label %if.end34, !dbg !8291

if.else:                                          ; preds = %if.end
  %11 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8292
  %profile_idc11 = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %11, i32 0, i32 2, !dbg !8294
  %12 = load i8, i8* %profile_idc11, align 1, !dbg !8294
  %conv12 = zext i8 %12 to i32, !dbg !8292
  %cmp13 = icmp eq i32 %conv12, 2, !dbg !8295
  br i1 %cmp13, label %if.then15, label %if.else16, !dbg !8296

if.then15:                                        ; preds = %if.else
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8297
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !8297
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 48, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.67, i32 0, i32 0)), !dbg !8298
  br label %if.end33, !dbg !8298

if.else16:                                        ; preds = %if.else
  %15 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8299
  %profile_idc17 = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %15, i32 0, i32 2, !dbg !8301
  %16 = load i8, i8* %profile_idc17, align 1, !dbg !8301
  %conv18 = zext i8 %16 to i32, !dbg !8299
  %cmp19 = icmp eq i32 %conv18, 3, !dbg !8302
  br i1 %cmp19, label %if.then21, label %if.else22, !dbg !8303

if.then21:                                        ; preds = %if.else16
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8304
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !8304
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 48, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.68, i32 0, i32 0)), !dbg !8305
  br label %if.end32, !dbg !8305

if.else22:                                        ; preds = %if.else16
  %19 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8306
  %profile_idc23 = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %19, i32 0, i32 2, !dbg !8308
  %20 = load i8, i8* %profile_idc23, align 1, !dbg !8308
  %conv24 = zext i8 %20 to i32, !dbg !8306
  %cmp25 = icmp eq i32 %conv24, 4, !dbg !8309
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !8310

if.then27:                                        ; preds = %if.else22
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8311
  %22 = bitcast %struct.AVCodecContext* %21 to i8*, !dbg !8311
  call void (i8*, i32, i8*, ...) @av_log(i8* %22, i32 48, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.69, i32 0, i32 0)), !dbg !8312
  br label %if.end31, !dbg !8312

if.else28:                                        ; preds = %if.else22
  %23 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !8313
  %24 = bitcast %struct.AVCodecContext* %23 to i8*, !dbg !8313
  %25 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8314
  %profile_idc29 = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %25, i32 0, i32 2, !dbg !8315
  %26 = load i8, i8* %profile_idc29, align 1, !dbg !8315
  %conv30 = zext i8 %26 to i32, !dbg !8314
  call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 24, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.70, i32 0, i32 0), i32 %conv30), !dbg !8316
  br label %if.end31

if.end31:                                         ; preds = %if.else28, %if.then27
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then21
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then15
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then10
  store i32 0, i32* %i, align 4, !dbg !8317
  br label %for.cond, !dbg !8319

for.cond:                                         ; preds = %for.inc, %if.end34
  %27 = load i32, i32* %i, align 4, !dbg !8320
  %cmp35 = icmp slt i32 %27, 32, !dbg !8323
  br i1 %cmp35, label %for.body, label %for.end, !dbg !8324

for.body:                                         ; preds = %for.cond
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8325
  %call37 = call i32 @get_bits1(%struct.GetBitContext* %28), !dbg !8327
  %conv38 = trunc i32 %call37 to i8, !dbg !8327
  %29 = load i32, i32* %i, align 4, !dbg !8328
  %idxprom = sext i32 %29 to i64, !dbg !8329
  %30 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8329
  %profile_compatibility_flag = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %30, i32 0, i32 3, !dbg !8330
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %profile_compatibility_flag, i64 0, i64 %idxprom, !dbg !8329
  store i8 %conv38, i8* %arrayidx, align 1, !dbg !8331
  %31 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8332
  %profile_idc39 = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %31, i32 0, i32 2, !dbg !8334
  %32 = load i8, i8* %profile_idc39, align 1, !dbg !8334
  %conv40 = zext i8 %32 to i32, !dbg !8332
  %cmp41 = icmp eq i32 %conv40, 0, !dbg !8335
  br i1 %cmp41, label %land.lhs.true, label %if.end53, !dbg !8336

land.lhs.true:                                    ; preds = %for.body
  %33 = load i32, i32* %i, align 4, !dbg !8337
  %cmp43 = icmp sgt i32 %33, 0, !dbg !8339
  br i1 %cmp43, label %land.lhs.true45, label %if.end53, !dbg !8340

land.lhs.true45:                                  ; preds = %land.lhs.true
  %34 = load i32, i32* %i, align 4, !dbg !8341
  %idxprom46 = sext i32 %34 to i64, !dbg !8343
  %35 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8343
  %profile_compatibility_flag47 = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %35, i32 0, i32 3, !dbg !8344
  %arrayidx48 = getelementptr inbounds [32 x i8], [32 x i8]* %profile_compatibility_flag47, i64 0, i64 %idxprom46, !dbg !8343
  %36 = load i8, i8* %arrayidx48, align 1, !dbg !8343
  %conv49 = zext i8 %36 to i32, !dbg !8343
  %tobool = icmp ne i32 %conv49, 0, !dbg !8343
  br i1 %tobool, label %if.then50, label %if.end53, !dbg !8345

if.then50:                                        ; preds = %land.lhs.true45
  %37 = load i32, i32* %i, align 4, !dbg !8346
  %conv51 = trunc i32 %37 to i8, !dbg !8346
  %38 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8347
  %profile_idc52 = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %38, i32 0, i32 2, !dbg !8348
  store i8 %conv51, i8* %profile_idc52, align 1, !dbg !8349
  br label %if.end53, !dbg !8347

if.end53:                                         ; preds = %if.then50, %land.lhs.true45, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8350

for.inc:                                          ; preds = %if.end53
  %39 = load i32, i32* %i, align 4, !dbg !8351
  %inc = add nsw i32 %39, 1, !dbg !8351
  store i32 %inc, i32* %i, align 4, !dbg !8351
  br label %for.cond, !dbg !8353, !llvm.loop !8354

for.end:                                          ; preds = %for.cond
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8356
  %call54 = call i32 @get_bits1(%struct.GetBitContext* %40), !dbg !8357
  %conv55 = trunc i32 %call54 to i8, !dbg !8357
  %41 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8358
  %progressive_source_flag = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %41, i32 0, i32 5, !dbg !8359
  store i8 %conv55, i8* %progressive_source_flag, align 1, !dbg !8360
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8361
  %call56 = call i32 @get_bits1(%struct.GetBitContext* %42), !dbg !8362
  %conv57 = trunc i32 %call56 to i8, !dbg !8362
  %43 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8363
  %interlaced_source_flag = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %43, i32 0, i32 6, !dbg !8364
  store i8 %conv57, i8* %interlaced_source_flag, align 1, !dbg !8365
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8366
  %call58 = call i32 @get_bits1(%struct.GetBitContext* %44), !dbg !8367
  %conv59 = trunc i32 %call58 to i8, !dbg !8367
  %45 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8368
  %non_packed_constraint_flag = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %45, i32 0, i32 7, !dbg !8369
  store i8 %conv59, i8* %non_packed_constraint_flag, align 1, !dbg !8370
  %46 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8371
  %call60 = call i32 @get_bits1(%struct.GetBitContext* %46), !dbg !8372
  %conv61 = trunc i32 %call60 to i8, !dbg !8372
  %47 = load %struct.PTLCommon*, %struct.PTLCommon** %ptl.addr, align 8, !dbg !8373
  %frame_only_constraint_flag = getelementptr inbounds %struct.PTLCommon, %struct.PTLCommon* %47, i32 0, i32 8, !dbg !8374
  store i8 %conv61, i8* %frame_only_constraint_flag, align 1, !dbg !8375
  %48 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8376
  call void @skip_bits(%struct.GetBitContext* %48, i32 16), !dbg !8377
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8378
  call void @skip_bits(%struct.GetBitContext* %49, i32 16), !dbg !8379
  %50 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8380
  call void @skip_bits(%struct.GetBitContext* %50, i32 12), !dbg !8381
  store i32 0, i32* %retval, align 4, !dbg !8382
  br label %return, !dbg !8382

return:                                           ; preds = %for.end, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !8383
  ret i32 %51, !dbg !8383
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #2 !dbg !8384 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8389, metadata !1892), !dbg !8390
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8391
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !8392
  %1 = load i32, i32* %index, align 8, !dbg !8392
  ret i32 %1, !dbg !8393
}

; Function Attrs: nounwind uwtable
define internal void @decode_sublayer_hrd(%struct.GetBitContext* %gb, i32 %nb_cpb, i32 %subpic_params_present) #0 !dbg !8394 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %nb_cpb.addr = alloca i32, align 4
  %subpic_params_present.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8397, metadata !1892), !dbg !8398
  store i32 %nb_cpb, i32* %nb_cpb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_cpb.addr, metadata !8399, metadata !1892), !dbg !8400
  store i32 %subpic_params_present, i32* %subpic_params_present.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subpic_params_present.addr, metadata !8401, metadata !1892), !dbg !8402
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8403, metadata !1892), !dbg !8404
  store i32 0, i32* %i, align 4, !dbg !8405
  br label %for.cond, !dbg !8407

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8408
  %1 = load i32, i32* %nb_cpb.addr, align 4, !dbg !8411
  %cmp = icmp ult i32 %0, %1, !dbg !8412
  br i1 %cmp, label %for.body, label %for.end, !dbg !8413

for.body:                                         ; preds = %for.cond
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8414
  %call = call i32 @get_ue_golomb_long(%struct.GetBitContext* %2), !dbg !8416
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8417
  %call1 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %3), !dbg !8418
  %4 = load i32, i32* %subpic_params_present.addr, align 4, !dbg !8419
  %tobool = icmp ne i32 %4, 0, !dbg !8419
  br i1 %tobool, label %if.then, label %if.end, !dbg !8421

if.then:                                          ; preds = %for.body
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8422
  %call2 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %5), !dbg !8424
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8425
  %call3 = call i32 @get_ue_golomb_long(%struct.GetBitContext* %6), !dbg !8426
  br label %if.end, !dbg !8427

if.end:                                           ; preds = %if.then, %for.body
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8428
  call void @skip_bits1(%struct.GetBitContext* %7), !dbg !8429
  br label %for.inc, !dbg !8430

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !8431
  %inc = add nsw i32 %8, 1, !dbg !8431
  store i32 %inc, i32* %i, align 4, !dbg !8431
  br label %for.cond, !dbg !8433, !llvm.loop !8434

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8436
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits1(%struct.GetBitContext* %s) #2 !dbg !8437 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8440, metadata !1892), !dbg !8441
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8442
  call void @skip_bits(%struct.GetBitContext* %0, i32 1), !dbg !8443
  ret void, !dbg !8444
}

declare %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32) #3

declare i8* @av_color_primaries_name(i32) #3

declare i8* @av_color_transfer_name(i32) #3

declare i8* @av_color_space_name(i32) #3

; Function Attrs: noreturn nounwind
declare void @abort() #6

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_se_golomb_long(%struct.GetBitContext* %gb) #2 !dbg !8445 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %buf = alloca i32, align 4
  %sign = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8446, metadata !1892), !dbg !8447
  call void @llvm.dbg.declare(metadata i32* %buf, metadata !8448, metadata !1892), !dbg !8449
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8450
  %call = call i32 @get_ue_golomb_long(%struct.GetBitContext* %0), !dbg !8451
  store i32 %call, i32* %buf, align 4, !dbg !8449
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !8452, metadata !1892), !dbg !8453
  %1 = load i32, i32* %buf, align 4, !dbg !8454
  %and = and i32 %1, 1, !dbg !8455
  %sub = sub i32 %and, 1, !dbg !8456
  store i32 %sub, i32* %sign, align 4, !dbg !8453
  %2 = load i32, i32* %buf, align 4, !dbg !8457
  %shr = lshr i32 %2, 1, !dbg !8458
  %3 = load i32, i32* %sign, align 4, !dbg !8459
  %xor = xor i32 %shr, %3, !dbg !8460
  %add = add i32 %xor, 1, !dbg !8461
  ret i32 %add, !dbg !8462
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly }
attributes #8 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1295, !1296}
!llvm.ident = !{!1297}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !976, globals: !1280)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--hevc_ps.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878, !887, !910}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !888, line: 101, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/hevc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!889 = !{!890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909}
!890 = !DIEnumerator(name: "HEVC_MAX_LAYERS", value: 63)
!891 = !DIEnumerator(name: "HEVC_MAX_SUB_LAYERS", value: 7)
!892 = !DIEnumerator(name: "HEVC_MAX_LAYER_SETS", value: 1024)
!893 = !DIEnumerator(name: "HEVC_MAX_VPS_COUNT", value: 16)
!894 = !DIEnumerator(name: "HEVC_MAX_SPS_COUNT", value: 16)
!895 = !DIEnumerator(name: "HEVC_MAX_PPS_COUNT", value: 64)
!896 = !DIEnumerator(name: "HEVC_MAX_DPB_SIZE", value: 16)
!897 = !DIEnumerator(name: "HEVC_MAX_REFS", value: 16)
!898 = !DIEnumerator(name: "HEVC_MAX_SHORT_TERM_REF_PIC_SETS", value: 64)
!899 = !DIEnumerator(name: "HEVC_MAX_LONG_TERM_REF_PICS", value: 32)
!900 = !DIEnumerator(name: "HEVC_MIN_LOG2_CTB_SIZE", value: 4)
!901 = !DIEnumerator(name: "HEVC_MAX_LOG2_CTB_SIZE", value: 6)
!902 = !DIEnumerator(name: "HEVC_MAX_CPB_CNT", value: 32)
!903 = !DIEnumerator(name: "HEVC_MAX_LUMA_PS", value: 35651584)
!904 = !DIEnumerator(name: "HEVC_MAX_WIDTH", value: 16888)
!905 = !DIEnumerator(name: "HEVC_MAX_HEIGHT", value: 16888)
!906 = !DIEnumerator(name: "HEVC_MAX_TILE_ROWS", value: 22)
!907 = !DIEnumerator(name: "HEVC_MAX_TILE_COLUMNS", value: 20)
!908 = !DIEnumerator(name: "HEVC_MAX_SLICE_SEGMENTS", value: 600)
!909 = !DIEnumerator(name: "HEVC_MAX_ENTRY_POINT_OFFSETS", value: 2700)
!910 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "HEVCNALUnitType", file: !888, line: 28, size: 32, align: 32, elements: !911)
!911 = !{!912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975}
!912 = !DIEnumerator(name: "HEVC_NAL_TRAIL_N", value: 0)
!913 = !DIEnumerator(name: "HEVC_NAL_TRAIL_R", value: 1)
!914 = !DIEnumerator(name: "HEVC_NAL_TSA_N", value: 2)
!915 = !DIEnumerator(name: "HEVC_NAL_TSA_R", value: 3)
!916 = !DIEnumerator(name: "HEVC_NAL_STSA_N", value: 4)
!917 = !DIEnumerator(name: "HEVC_NAL_STSA_R", value: 5)
!918 = !DIEnumerator(name: "HEVC_NAL_RADL_N", value: 6)
!919 = !DIEnumerator(name: "HEVC_NAL_RADL_R", value: 7)
!920 = !DIEnumerator(name: "HEVC_NAL_RASL_N", value: 8)
!921 = !DIEnumerator(name: "HEVC_NAL_RASL_R", value: 9)
!922 = !DIEnumerator(name: "HEVC_NAL_VCL_N10", value: 10)
!923 = !DIEnumerator(name: "HEVC_NAL_VCL_R11", value: 11)
!924 = !DIEnumerator(name: "HEVC_NAL_VCL_N12", value: 12)
!925 = !DIEnumerator(name: "HEVC_NAL_VCL_R13", value: 13)
!926 = !DIEnumerator(name: "HEVC_NAL_VCL_N14", value: 14)
!927 = !DIEnumerator(name: "HEVC_NAL_VCL_R15", value: 15)
!928 = !DIEnumerator(name: "HEVC_NAL_BLA_W_LP", value: 16)
!929 = !DIEnumerator(name: "HEVC_NAL_BLA_W_RADL", value: 17)
!930 = !DIEnumerator(name: "HEVC_NAL_BLA_N_LP", value: 18)
!931 = !DIEnumerator(name: "HEVC_NAL_IDR_W_RADL", value: 19)
!932 = !DIEnumerator(name: "HEVC_NAL_IDR_N_LP", value: 20)
!933 = !DIEnumerator(name: "HEVC_NAL_CRA_NUT", value: 21)
!934 = !DIEnumerator(name: "HEVC_NAL_IRAP_VCL22", value: 22)
!935 = !DIEnumerator(name: "HEVC_NAL_IRAP_VCL23", value: 23)
!936 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL24", value: 24)
!937 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL25", value: 25)
!938 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL26", value: 26)
!939 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL27", value: 27)
!940 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL28", value: 28)
!941 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL29", value: 29)
!942 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL30", value: 30)
!943 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL31", value: 31)
!944 = !DIEnumerator(name: "HEVC_NAL_VPS", value: 32)
!945 = !DIEnumerator(name: "HEVC_NAL_SPS", value: 33)
!946 = !DIEnumerator(name: "HEVC_NAL_PPS", value: 34)
!947 = !DIEnumerator(name: "HEVC_NAL_AUD", value: 35)
!948 = !DIEnumerator(name: "HEVC_NAL_EOS_NUT", value: 36)
!949 = !DIEnumerator(name: "HEVC_NAL_EOB_NUT", value: 37)
!950 = !DIEnumerator(name: "HEVC_NAL_FD_NUT", value: 38)
!951 = !DIEnumerator(name: "HEVC_NAL_SEI_PREFIX", value: 39)
!952 = !DIEnumerator(name: "HEVC_NAL_SEI_SUFFIX", value: 40)
!953 = !DIEnumerator(name: "HEVC_NAL_RSV_NVCL41", value: 41)
!954 = !DIEnumerator(name: "HEVC_NAL_RSV_NVCL42", value: 42)
!955 = !DIEnumerator(name: "HEVC_NAL_RSV_NVCL43", value: 43)
!956 = !DIEnumerator(name: "HEVC_NAL_RSV_NVCL44", value: 44)
!957 = !DIEnumerator(name: "HEVC_NAL_RSV_NVCL45", value: 45)
!958 = !DIEnumerator(name: "HEVC_NAL_RSV_NVCL46", value: 46)
!959 = !DIEnumerator(name: "HEVC_NAL_RSV_NVCL47", value: 47)
!960 = !DIEnumerator(name: "HEVC_NAL_UNSPEC48", value: 48)
!961 = !DIEnumerator(name: "HEVC_NAL_UNSPEC49", value: 49)
!962 = !DIEnumerator(name: "HEVC_NAL_UNSPEC50", value: 50)
!963 = !DIEnumerator(name: "HEVC_NAL_UNSPEC51", value: 51)
!964 = !DIEnumerator(name: "HEVC_NAL_UNSPEC52", value: 52)
!965 = !DIEnumerator(name: "HEVC_NAL_UNSPEC53", value: 53)
!966 = !DIEnumerator(name: "HEVC_NAL_UNSPEC54", value: 54)
!967 = !DIEnumerator(name: "HEVC_NAL_UNSPEC55", value: 55)
!968 = !DIEnumerator(name: "HEVC_NAL_UNSPEC56", value: 56)
!969 = !DIEnumerator(name: "HEVC_NAL_UNSPEC57", value: 57)
!970 = !DIEnumerator(name: "HEVC_NAL_UNSPEC58", value: 58)
!971 = !DIEnumerator(name: "HEVC_NAL_UNSPEC59", value: 59)
!972 = !DIEnumerator(name: "HEVC_NAL_UNSPEC60", value: 60)
!973 = !DIEnumerator(name: "HEVC_NAL_UNSPEC61", value: 61)
!974 = !DIEnumerator(name: "HEVC_NAL_UNSPEC62", value: 62)
!975 = !DIEnumerator(name: "HEVC_NAL_UNSPEC63", value: 63)
!976 = !{!977, !978, !979, !1036, !1197, !1198, !1199, !985, !1205, !1207, !1209, !1026, !1278}
!977 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!978 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64, align: 64)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCVPS", file: !981, line: 216, baseType: !982)
!981 = !DIFile(filename: "libavcodec/hevc_ps.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCVPS", file: !981, line: 195, size: 36544, align: 32, elements: !983)
!983 = !{!984, !988, !989, !990, !1017, !1018, !1020, !1021, !1022, !1023, !1024, !1025, !1027, !1028, !1029, !1030, !1031, !1035}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "vps_temporal_id_nesting_flag", scope: !982, file: !981, line: 196, baseType: !985, size: 8, align: 8)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !986, line: 48, baseType: !987)
!986 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!987 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "vps_max_layers", scope: !982, file: !981, line: 197, baseType: !977, size: 32, align: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "vps_max_sub_layers", scope: !982, file: !981, line: 198, baseType: !977, size: 32, align: 32, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !982, file: !981, line: 200, baseType: !991, size: 2672, align: 8, offset: 96)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTL", file: !981, line: 193, baseType: !992)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTL", file: !981, line: 187, size: 2672, align: 8, elements: !993)
!993 = !{!994, !1010, !1014, !1016}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "general_ptl", scope: !992, file: !981, line: 188, baseType: !995, size: 320, align: 8)
!995 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTLCommon", file: !981, line: 185, baseType: !996)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTLCommon", file: !981, line: 175, size: 320, align: 8, elements: !997)
!997 = !{!998, !999, !1000, !1001, !1005, !1006, !1007, !1008, !1009}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "profile_space", scope: !996, file: !981, line: 176, baseType: !985, size: 8, align: 8)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "tier_flag", scope: !996, file: !981, line: 177, baseType: !985, size: 8, align: 8, offset: 8)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "profile_idc", scope: !996, file: !981, line: 178, baseType: !985, size: 8, align: 8, offset: 16)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "profile_compatibility_flag", scope: !996, file: !981, line: 179, baseType: !1002, size: 256, align: 8, offset: 24)
!1002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 256, align: 8, elements: !1003)
!1003 = !{!1004}
!1004 = !DISubrange(count: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "level_idc", scope: !996, file: !981, line: 180, baseType: !985, size: 8, align: 8, offset: 280)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "progressive_source_flag", scope: !996, file: !981, line: 181, baseType: !985, size: 8, align: 8, offset: 288)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_source_flag", scope: !996, file: !981, line: 182, baseType: !985, size: 8, align: 8, offset: 296)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "non_packed_constraint_flag", scope: !996, file: !981, line: 183, baseType: !985, size: 8, align: 8, offset: 304)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "frame_only_constraint_flag", scope: !996, file: !981, line: 184, baseType: !985, size: 8, align: 8, offset: 312)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "sub_layer_ptl", scope: !992, file: !981, line: 189, baseType: !1011, size: 2240, align: 8, offset: 320)
!1011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !995, size: 2240, align: 8, elements: !1012)
!1012 = !{!1013}
!1013 = !DISubrange(count: 7)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "sub_layer_profile_present_flag", scope: !992, file: !981, line: 191, baseType: !1015, size: 56, align: 8, offset: 2560)
!1015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 56, align: 8, elements: !1012)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "sub_layer_level_present_flag", scope: !992, file: !981, line: 192, baseType: !1015, size: 56, align: 8, offset: 2616)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "vps_sub_layer_ordering_info_present_flag", scope: !982, file: !981, line: 201, baseType: !977, size: 32, align: 32, offset: 2784)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "vps_max_dec_pic_buffering", scope: !982, file: !981, line: 202, baseType: !1019, size: 224, align: 32, offset: 2816)
!1019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !978, size: 224, align: 32, elements: !1012)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "vps_num_reorder_pics", scope: !982, file: !981, line: 203, baseType: !1019, size: 224, align: 32, offset: 3040)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "vps_max_latency_increase", scope: !982, file: !981, line: 204, baseType: !1019, size: 224, align: 32, offset: 3264)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "vps_max_layer_id", scope: !982, file: !981, line: 205, baseType: !977, size: 32, align: 32, offset: 3488)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "vps_num_layer_sets", scope: !982, file: !981, line: 206, baseType: !977, size: 32, align: 32, offset: 3520)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "vps_timing_info_present_flag", scope: !982, file: !981, line: 207, baseType: !985, size: 8, align: 8, offset: 3552)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "vps_num_units_in_tick", scope: !982, file: !981, line: 208, baseType: !1026, size: 32, align: 32, offset: 3584)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !986, line: 51, baseType: !978)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "vps_time_scale", scope: !982, file: !981, line: 209, baseType: !1026, size: 32, align: 32, offset: 3616)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "vps_poc_proportional_to_timing_flag", scope: !982, file: !981, line: 210, baseType: !985, size: 8, align: 8, offset: 3648)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "vps_num_ticks_poc_diff_one", scope: !982, file: !981, line: 211, baseType: !977, size: 32, align: 32, offset: 3680)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "vps_num_hrd_parameters", scope: !982, file: !981, line: 212, baseType: !977, size: 32, align: 32, offset: 3712)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !982, file: !981, line: 214, baseType: !1032, size: 32768, align: 8, offset: 3744)
!1032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 32768, align: 8, elements: !1033)
!1033 = !{!1034}
!1034 = !DISubrange(count: 4096)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !982, file: !981, line: 215, baseType: !977, size: 32, align: 32, offset: 36512)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64, align: 64)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCSPS", file: !981, line: 319, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCSPS", file: !981, line: 225, size: 140544, align: 32, elements: !1039)
!1039 = !{!1040, !1041, !1042, !1043, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1066, !1067, !1110, !1111, !1112, !1126, !1127, !1140, !1141, !1142, !1143, !1147, !1148, !1149, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1193, !1194, !1195, !1196}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "vps_id", scope: !1038, file: !981, line: 226, baseType: !978, size: 32, align: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_format_idc", scope: !1038, file: !981, line: 227, baseType: !977, size: 32, align: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "separate_colour_plane_flag", scope: !1038, file: !981, line: 228, baseType: !985, size: 8, align: 8, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "output_window", scope: !1038, file: !981, line: 230, baseType: !1044, size: 128, align: 32, offset: 96)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCWindow", file: !981, line: 130, baseType: !1045)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCWindow", file: !981, line: 125, size: 128, align: 32, elements: !1046)
!1046 = !{!1047, !1048, !1049, !1050}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "left_offset", scope: !1045, file: !981, line: 126, baseType: !978, size: 32, align: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "right_offset", scope: !1045, file: !981, line: 127, baseType: !978, size: 32, align: 32, offset: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "top_offset", scope: !1045, file: !981, line: 128, baseType: !978, size: 32, align: 32, offset: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "bottom_offset", scope: !1045, file: !981, line: 129, baseType: !978, size: 32, align: 32, offset: 96)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "pic_conf_win", scope: !1038, file: !981, line: 232, baseType: !1044, size: 128, align: 32, offset: 224)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth", scope: !1038, file: !981, line: 234, baseType: !977, size: 32, align: 32, offset: 352)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth_chroma", scope: !1038, file: !981, line: 235, baseType: !977, size: 32, align: 32, offset: 384)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_shift", scope: !1038, file: !981, line: 236, baseType: !977, size: 32, align: 32, offset: 416)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1038, file: !981, line: 237, baseType: !494, size: 32, align: 32, offset: 448)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "log2_max_poc_lsb", scope: !1038, file: !981, line: 239, baseType: !978, size: 32, align: 32, offset: 480)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "pcm_enabled_flag", scope: !1038, file: !981, line: 240, baseType: !977, size: 32, align: 32, offset: 512)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "max_sub_layers", scope: !1038, file: !981, line: 242, baseType: !977, size: 32, align: 32, offset: 544)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_layer", scope: !1038, file: !981, line: 247, baseType: !1060, size: 672, align: 32, offset: 576)
!1060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1061, size: 672, align: 32, elements: !1012)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1038, file: !981, line: 243, size: 96, align: 32, elements: !1062)
!1062 = !{!1063, !1064, !1065}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "max_dec_pic_buffering", scope: !1061, file: !981, line: 244, baseType: !977, size: 32, align: 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "num_reorder_pics", scope: !1061, file: !981, line: 245, baseType: !977, size: 32, align: 32, offset: 32)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "max_latency_increase", scope: !1061, file: !981, line: 246, baseType: !977, size: 32, align: 32, offset: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_id_nesting_flag", scope: !1038, file: !981, line: 248, baseType: !985, size: 8, align: 8, offset: 1248)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "vui", scope: !1038, file: !981, line: 250, baseType: !1068, size: 1120, align: 32, offset: 1280)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "VUI", file: !981, line: 173, baseType: !1069)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VUI", file: !981, line: 132, size: 1120, align: 32, elements: !1070)
!1070 = !{!1071, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "sar", scope: !1069, file: !981, line: 133, baseType: !1072, size: 64, align: 32)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1073, line: 61, baseType: !1074)
!1073 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1073, line: 58, size: 64, align: 32, elements: !1075)
!1075 = !{!1076, !1077}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1074, file: !1073, line: 59, baseType: !977, size: 32, align: 32)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1074, file: !1073, line: 60, baseType: !977, size: 32, align: 32, offset: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "overscan_info_present_flag", scope: !1069, file: !981, line: 135, baseType: !977, size: 32, align: 32, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "overscan_appropriate_flag", scope: !1069, file: !981, line: 136, baseType: !977, size: 32, align: 32, offset: 96)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "video_signal_type_present_flag", scope: !1069, file: !981, line: 138, baseType: !977, size: 32, align: 32, offset: 128)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "video_format", scope: !1069, file: !981, line: 139, baseType: !977, size: 32, align: 32, offset: 160)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "video_full_range_flag", scope: !1069, file: !981, line: 140, baseType: !977, size: 32, align: 32, offset: 192)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "colour_description_present_flag", scope: !1069, file: !981, line: 141, baseType: !977, size: 32, align: 32, offset: 224)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "colour_primaries", scope: !1069, file: !981, line: 142, baseType: !985, size: 8, align: 8, offset: 256)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_characteristic", scope: !1069, file: !981, line: 143, baseType: !985, size: 8, align: 8, offset: 264)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "matrix_coeffs", scope: !1069, file: !981, line: 144, baseType: !985, size: 8, align: 8, offset: 272)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_loc_info_present_flag", scope: !1069, file: !981, line: 146, baseType: !977, size: 32, align: 32, offset: 288)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_loc_type_top_field", scope: !1069, file: !981, line: 147, baseType: !977, size: 32, align: 32, offset: 320)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_loc_type_bottom_field", scope: !1069, file: !981, line: 148, baseType: !977, size: 32, align: 32, offset: 352)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "neutra_chroma_indication_flag", scope: !1069, file: !981, line: 149, baseType: !977, size: 32, align: 32, offset: 384)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "field_seq_flag", scope: !1069, file: !981, line: 151, baseType: !977, size: 32, align: 32, offset: 416)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "frame_field_info_present_flag", scope: !1069, file: !981, line: 152, baseType: !977, size: 32, align: 32, offset: 448)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "default_display_window_flag", scope: !1069, file: !981, line: 154, baseType: !977, size: 32, align: 32, offset: 480)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "def_disp_win", scope: !1069, file: !981, line: 155, baseType: !1044, size: 128, align: 32, offset: 512)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "vui_timing_info_present_flag", scope: !1069, file: !981, line: 157, baseType: !977, size: 32, align: 32, offset: 640)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "vui_num_units_in_tick", scope: !1069, file: !981, line: 158, baseType: !1026, size: 32, align: 32, offset: 672)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "vui_time_scale", scope: !1069, file: !981, line: 159, baseType: !1026, size: 32, align: 32, offset: 704)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "vui_poc_proportional_to_timing_flag", scope: !1069, file: !981, line: 160, baseType: !977, size: 32, align: 32, offset: 736)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "vui_num_ticks_poc_diff_one_minus1", scope: !1069, file: !981, line: 161, baseType: !977, size: 32, align: 32, offset: 768)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "vui_hrd_parameters_present_flag", scope: !1069, file: !981, line: 162, baseType: !977, size: 32, align: 32, offset: 800)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_restriction_flag", scope: !1069, file: !981, line: 164, baseType: !977, size: 32, align: 32, offset: 832)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "tiles_fixed_structure_flag", scope: !1069, file: !981, line: 165, baseType: !977, size: 32, align: 32, offset: 864)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "motion_vectors_over_pic_boundaries_flag", scope: !1069, file: !981, line: 166, baseType: !977, size: 32, align: 32, offset: 896)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "restricted_ref_pic_lists_flag", scope: !1069, file: !981, line: 167, baseType: !977, size: 32, align: 32, offset: 928)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "min_spatial_segmentation_idc", scope: !1069, file: !981, line: 168, baseType: !977, size: 32, align: 32, offset: 960)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "max_bytes_per_pic_denom", scope: !1069, file: !981, line: 169, baseType: !977, size: 32, align: 32, offset: 992)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "max_bits_per_min_cu_denom", scope: !1069, file: !981, line: 170, baseType: !977, size: 32, align: 32, offset: 1024)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "log2_max_mv_length_horizontal", scope: !1069, file: !981, line: 171, baseType: !977, size: 32, align: 32, offset: 1056)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "log2_max_mv_length_vertical", scope: !1069, file: !981, line: 172, baseType: !977, size: 32, align: 32, offset: 1088)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1038, file: !981, line: 251, baseType: !991, size: 2672, align: 8, offset: 2400)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_list_enable_flag", scope: !1038, file: !981, line: 253, baseType: !985, size: 8, align: 8, offset: 5072)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_list", scope: !1038, file: !981, line: 254, baseType: !1113, size: 12384, align: 8, offset: 5080)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScalingList", file: !981, line: 223, baseType: !1114)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScalingList", file: !981, line: 218, size: 12384, align: 8, elements: !1115)
!1115 = !{!1116, !1122}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "sl", scope: !1114, file: !981, line: 221, baseType: !1117, size: 12288, align: 8)
!1117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 12288, align: 8, elements: !1118)
!1118 = !{!1119, !1120, !1121}
!1119 = !DISubrange(count: 4)
!1120 = !DISubrange(count: 6)
!1121 = !DISubrange(count: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "sl_dc", scope: !1114, file: !981, line: 222, baseType: !1123, size: 96, align: 8, offset: 12288)
!1123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 96, align: 8, elements: !1124)
!1124 = !{!1125, !1120}
!1125 = !DISubrange(count: 2)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "nb_st_rps", scope: !1038, file: !981, line: 256, baseType: !978, size: 32, align: 32, offset: 17472)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "st_rps", scope: !1038, file: !981, line: 257, baseType: !1128, size: 88064, align: 32, offset: 17504)
!1128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1129, size: 88064, align: 32, elements: !1139)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShortTermRPS", file: !981, line: 40, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShortTermRPS", file: !981, line: 34, size: 1376, align: 32, elements: !1131)
!1131 = !{!1132, !1133, !1134, !1135, !1138}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "num_negative_pics", scope: !1130, file: !981, line: 35, baseType: !978, size: 32, align: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "num_delta_pocs", scope: !1130, file: !981, line: 36, baseType: !977, size: 32, align: 32, offset: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "rps_idx_num_delta_pocs", scope: !1130, file: !981, line: 37, baseType: !977, size: 32, align: 32, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "delta_poc", scope: !1130, file: !981, line: 38, baseType: !1136, size: 1024, align: 32, offset: 96)
!1136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1137, size: 1024, align: 32, elements: !1003)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !986, line: 38, baseType: !977)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1130, file: !981, line: 39, baseType: !1002, size: 256, align: 8, offset: 1120)
!1139 = !{!1121}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "amp_enabled_flag", scope: !1038, file: !981, line: 259, baseType: !985, size: 8, align: 8, offset: 105568)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "sao_enabled", scope: !1038, file: !981, line: 260, baseType: !985, size: 8, align: 8, offset: 105576)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "long_term_ref_pics_present_flag", scope: !1038, file: !981, line: 262, baseType: !985, size: 8, align: 8, offset: 105584)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "lt_ref_pic_poc_lsb_sps", scope: !1038, file: !981, line: 263, baseType: !1144, size: 512, align: 16, offset: 105600)
!1144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1145, size: 512, align: 16, elements: !1003)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !986, line: 49, baseType: !1146)
!1146 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "used_by_curr_pic_lt_sps_flag", scope: !1038, file: !981, line: 264, baseType: !1002, size: 256, align: 8, offset: 106112)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "num_long_term_ref_pics_sps", scope: !1038, file: !981, line: 265, baseType: !985, size: 8, align: 8, offset: 106368)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "pcm", scope: !1038, file: !981, line: 273, baseType: !1150, size: 128, align: 32, offset: 106400)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1038, file: !981, line: 267, size: 128, align: 32, elements: !1151)
!1151 = !{!1152, !1153, !1154, !1155, !1156}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth", scope: !1150, file: !981, line: 268, baseType: !985, size: 8, align: 8)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth_chroma", scope: !1150, file: !981, line: 269, baseType: !985, size: 8, align: 8, offset: 8)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "log2_min_pcm_cb_size", scope: !1150, file: !981, line: 270, baseType: !978, size: 32, align: 32, offset: 32)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "log2_max_pcm_cb_size", scope: !1150, file: !981, line: 271, baseType: !978, size: 32, align: 32, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "loop_filter_disable_flag", scope: !1150, file: !981, line: 272, baseType: !985, size: 8, align: 8, offset: 96)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "sps_temporal_mvp_enabled_flag", scope: !1038, file: !981, line: 274, baseType: !985, size: 8, align: 8, offset: 106528)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "sps_strong_intra_smoothing_enable_flag", scope: !1038, file: !981, line: 275, baseType: !985, size: 8, align: 8, offset: 106536)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "log2_min_cb_size", scope: !1038, file: !981, line: 277, baseType: !978, size: 32, align: 32, offset: 106560)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "log2_diff_max_min_coding_block_size", scope: !1038, file: !981, line: 278, baseType: !978, size: 32, align: 32, offset: 106592)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "log2_min_tb_size", scope: !1038, file: !981, line: 279, baseType: !978, size: 32, align: 32, offset: 106624)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "log2_max_trafo_size", scope: !1038, file: !981, line: 280, baseType: !978, size: 32, align: 32, offset: 106656)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "log2_ctb_size", scope: !1038, file: !981, line: 281, baseType: !978, size: 32, align: 32, offset: 106688)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "log2_min_pu_size", scope: !1038, file: !981, line: 282, baseType: !978, size: 32, align: 32, offset: 106720)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "max_transform_hierarchy_depth_inter", scope: !1038, file: !981, line: 284, baseType: !977, size: 32, align: 32, offset: 106752)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "max_transform_hierarchy_depth_intra", scope: !1038, file: !981, line: 285, baseType: !977, size: 32, align: 32, offset: 106784)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "sps_range_extension_flag", scope: !1038, file: !981, line: 287, baseType: !977, size: 32, align: 32, offset: 106816)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "transform_skip_rotation_enabled_flag", scope: !1038, file: !981, line: 288, baseType: !977, size: 32, align: 32, offset: 106848)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "transform_skip_context_enabled_flag", scope: !1038, file: !981, line: 289, baseType: !977, size: 32, align: 32, offset: 106880)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "implicit_rdpcm_enabled_flag", scope: !1038, file: !981, line: 290, baseType: !977, size: 32, align: 32, offset: 106912)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_rdpcm_enabled_flag", scope: !1038, file: !981, line: 291, baseType: !977, size: 32, align: 32, offset: 106944)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "extended_precision_processing_flag", scope: !1038, file: !981, line: 292, baseType: !977, size: 32, align: 32, offset: 106976)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "intra_smoothing_disabled_flag", scope: !1038, file: !981, line: 293, baseType: !977, size: 32, align: 32, offset: 107008)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "high_precision_offsets_enabled_flag", scope: !1038, file: !981, line: 294, baseType: !977, size: 32, align: 32, offset: 107040)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "persistent_rice_adaptation_enabled_flag", scope: !1038, file: !981, line: 295, baseType: !977, size: 32, align: 32, offset: 107072)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "cabac_bypass_alignment_enabled_flag", scope: !1038, file: !981, line: 296, baseType: !977, size: 32, align: 32, offset: 107104)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1038, file: !981, line: 299, baseType: !977, size: 32, align: 32, offset: 107136)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1038, file: !981, line: 300, baseType: !977, size: 32, align: 32, offset: 107168)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_width", scope: !1038, file: !981, line: 301, baseType: !977, size: 32, align: 32, offset: 107200)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_height", scope: !1038, file: !981, line: 302, baseType: !977, size: 32, align: 32, offset: 107232)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_size", scope: !1038, file: !981, line: 303, baseType: !977, size: 32, align: 32, offset: 107264)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "min_cb_width", scope: !1038, file: !981, line: 304, baseType: !977, size: 32, align: 32, offset: 107296)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "min_cb_height", scope: !1038, file: !981, line: 305, baseType: !977, size: 32, align: 32, offset: 107328)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "min_tb_width", scope: !1038, file: !981, line: 306, baseType: !977, size: 32, align: 32, offset: 107360)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "min_tb_height", scope: !1038, file: !981, line: 307, baseType: !977, size: 32, align: 32, offset: 107392)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "min_pu_width", scope: !1038, file: !981, line: 308, baseType: !977, size: 32, align: 32, offset: 107424)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "min_pu_height", scope: !1038, file: !981, line: 309, baseType: !977, size: 32, align: 32, offset: 107456)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "tb_mask", scope: !1038, file: !981, line: 310, baseType: !977, size: 32, align: 32, offset: 107488)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "hshift", scope: !1038, file: !981, line: 312, baseType: !1190, size: 96, align: 32, offset: 107520)
!1190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !977, size: 96, align: 32, elements: !1191)
!1191 = !{!1192}
!1192 = !DISubrange(count: 3)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "vshift", scope: !1038, file: !981, line: 313, baseType: !1190, size: 96, align: 32, offset: 107616)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "qp_bd_offset", scope: !1038, file: !981, line: 315, baseType: !977, size: 32, align: 32, offset: 107712)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1038, file: !981, line: 317, baseType: !1032, size: 32768, align: 8, offset: 107744)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !1038, file: !981, line: 318, baseType: !977, size: 32, align: 32, offset: 140512)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64, align: 64)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64, align: 64)
!1200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1201)
!1201 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1202, line: 221, size: 32, align: 8, elements: !1203)
!1202 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1203 = !{!1204}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1201, file: !1202, line: 221, baseType: !1026, size: 32, align: 32)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64, align: 64)
!1206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !980)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64, align: 64)
!1208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64, align: 64)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCPPS", file: !981, line: 397, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCPPS", file: !981, line: 321, size: 46784, align: 64, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1260, !1261, !1262, !1263, !1265, !1266, !1267, !1268, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "sps_id", scope: !1211, file: !981, line: 322, baseType: !978, size: 32, align: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "sign_data_hiding_flag", scope: !1211, file: !981, line: 324, baseType: !985, size: 8, align: 8, offset: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "cabac_init_present_flag", scope: !1211, file: !981, line: 326, baseType: !985, size: 8, align: 8, offset: 40)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "num_ref_idx_l0_default_active", scope: !1211, file: !981, line: 328, baseType: !977, size: 32, align: 32, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "num_ref_idx_l1_default_active", scope: !1211, file: !981, line: 329, baseType: !977, size: 32, align: 32, offset: 96)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "pic_init_qp_minus26", scope: !1211, file: !981, line: 330, baseType: !977, size: 32, align: 32, offset: 128)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "constrained_intra_pred_flag", scope: !1211, file: !981, line: 332, baseType: !985, size: 8, align: 8, offset: 160)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "transform_skip_enabled_flag", scope: !1211, file: !981, line: 333, baseType: !985, size: 8, align: 8, offset: 168)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "cu_qp_delta_enabled_flag", scope: !1211, file: !981, line: 335, baseType: !985, size: 8, align: 8, offset: 176)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "diff_cu_qp_delta_depth", scope: !1211, file: !981, line: 336, baseType: !977, size: 32, align: 32, offset: 192)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "cb_qp_offset", scope: !1211, file: !981, line: 338, baseType: !977, size: 32, align: 32, offset: 224)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "cr_qp_offset", scope: !1211, file: !981, line: 339, baseType: !977, size: 32, align: 32, offset: 256)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "pic_slice_level_chroma_qp_offsets_present_flag", scope: !1211, file: !981, line: 340, baseType: !985, size: 8, align: 8, offset: 288)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "weighted_pred_flag", scope: !1211, file: !981, line: 341, baseType: !985, size: 8, align: 8, offset: 296)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "weighted_bipred_flag", scope: !1211, file: !981, line: 342, baseType: !985, size: 8, align: 8, offset: 304)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "output_flag_present_flag", scope: !1211, file: !981, line: 343, baseType: !985, size: 8, align: 8, offset: 312)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "transquant_bypass_enable_flag", scope: !1211, file: !981, line: 344, baseType: !985, size: 8, align: 8, offset: 320)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "dependent_slice_segments_enabled_flag", scope: !1211, file: !981, line: 346, baseType: !985, size: 8, align: 8, offset: 328)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "tiles_enabled_flag", scope: !1211, file: !981, line: 347, baseType: !985, size: 8, align: 8, offset: 336)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "entropy_coding_sync_enabled_flag", scope: !1211, file: !981, line: 348, baseType: !985, size: 8, align: 8, offset: 344)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "num_tile_columns", scope: !1211, file: !981, line: 350, baseType: !977, size: 32, align: 32, offset: 352)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "num_tile_rows", scope: !1211, file: !981, line: 351, baseType: !977, size: 32, align: 32, offset: 384)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "uniform_spacing_flag", scope: !1211, file: !981, line: 352, baseType: !985, size: 8, align: 8, offset: 416)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "loop_filter_across_tiles_enabled_flag", scope: !1211, file: !981, line: 353, baseType: !985, size: 8, align: 8, offset: 424)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "seq_loop_filter_across_slices_enabled_flag", scope: !1211, file: !981, line: 355, baseType: !985, size: 8, align: 8, offset: 432)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "deblocking_filter_control_present_flag", scope: !1211, file: !981, line: 357, baseType: !985, size: 8, align: 8, offset: 440)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "deblocking_filter_override_enabled_flag", scope: !1211, file: !981, line: 358, baseType: !985, size: 8, align: 8, offset: 448)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "disable_dbf", scope: !1211, file: !981, line: 359, baseType: !985, size: 8, align: 8, offset: 456)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "beta_offset", scope: !1211, file: !981, line: 360, baseType: !977, size: 32, align: 32, offset: 480)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "tc_offset", scope: !1211, file: !981, line: 361, baseType: !977, size: 32, align: 32, offset: 512)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_list_data_present_flag", scope: !1211, file: !981, line: 363, baseType: !985, size: 8, align: 8, offset: 544)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_list", scope: !1211, file: !981, line: 364, baseType: !1113, size: 12384, align: 8, offset: 552)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "lists_modification_present_flag", scope: !1211, file: !981, line: 366, baseType: !985, size: 8, align: 8, offset: 12936)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "log2_parallel_merge_level", scope: !1211, file: !981, line: 367, baseType: !977, size: 32, align: 32, offset: 12960)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "num_extra_slice_header_bits", scope: !1211, file: !981, line: 368, baseType: !977, size: 32, align: 32, offset: 12992)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "slice_header_extension_present_flag", scope: !1211, file: !981, line: 369, baseType: !985, size: 8, align: 8, offset: 13024)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "log2_max_transform_skip_block_size", scope: !1211, file: !981, line: 370, baseType: !985, size: 8, align: 8, offset: 13032)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "pps_range_extensions_flag", scope: !1211, file: !981, line: 371, baseType: !985, size: 8, align: 8, offset: 13040)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "cross_component_prediction_enabled_flag", scope: !1211, file: !981, line: 372, baseType: !985, size: 8, align: 8, offset: 13048)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qp_offset_list_enabled_flag", scope: !1211, file: !981, line: 373, baseType: !985, size: 8, align: 8, offset: 13056)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "diff_cu_chroma_qp_offset_depth", scope: !1211, file: !981, line: 374, baseType: !985, size: 8, align: 8, offset: 13064)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qp_offset_list_len_minus1", scope: !1211, file: !981, line: 375, baseType: !985, size: 8, align: 8, offset: 13072)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "cb_qp_offset_list", scope: !1211, file: !981, line: 376, baseType: !1256, size: 48, align: 8, offset: 13080)
!1256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1257, size: 48, align: 8, elements: !1259)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !986, line: 36, baseType: !1258)
!1258 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1259 = !{!1120}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "cr_qp_offset_list", scope: !1211, file: !981, line: 377, baseType: !1256, size: 48, align: 8, offset: 13128)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "log2_sao_offset_scale_luma", scope: !1211, file: !981, line: 378, baseType: !985, size: 8, align: 8, offset: 13176)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "log2_sao_offset_scale_chroma", scope: !1211, file: !981, line: 379, baseType: !985, size: 8, align: 8, offset: 13184)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "column_width", scope: !1211, file: !981, line: 382, baseType: !1264, size: 64, align: 64, offset: 13248)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64, align: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "row_height", scope: !1211, file: !981, line: 383, baseType: !1264, size: 64, align: 64, offset: 13312)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "col_bd", scope: !1211, file: !981, line: 384, baseType: !1264, size: 64, align: 64, offset: 13376)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "row_bd", scope: !1211, file: !981, line: 385, baseType: !1264, size: 64, align: 64, offset: 13440)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "col_idxX", scope: !1211, file: !981, line: 386, baseType: !1269, size: 64, align: 64, offset: 13504)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64, align: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_addr_rs_to_ts", scope: !1211, file: !981, line: 388, baseType: !1269, size: 64, align: 64, offset: 13568)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_addr_ts_to_rs", scope: !1211, file: !981, line: 389, baseType: !1269, size: 64, align: 64, offset: 13632)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "tile_id", scope: !1211, file: !981, line: 390, baseType: !1269, size: 64, align: 64, offset: 13696)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "tile_pos_rs", scope: !1211, file: !981, line: 391, baseType: !1269, size: 64, align: 64, offset: 13760)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "min_tb_addr_zs", scope: !1211, file: !981, line: 392, baseType: !1269, size: 64, align: 64, offset: 13824)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "min_tb_addr_zs_tab", scope: !1211, file: !981, line: 393, baseType: !1269, size: 64, align: 64, offset: 13888)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1211, file: !981, line: 395, baseType: !1032, size: 32768, align: 8, offset: 13952)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !1211, file: !981, line: 396, baseType: !977, size: 32, align: 32, offset: 46720)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1210)
!1280 = !{!1281, !1286, !1287, !1289, !1290}
!1281 = distinct !DIGlobalVariable(name: "hevc_sub_height_c", scope: !0, file: !1282, line: 77, type: !1283, isLocal: true, isDefinition: true, variable: [4 x i8]* @hevc_sub_height_c)
!1282 = !DIFile(filename: "libavcodec/hevc_ps.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1284, size: 32, align: 8, elements: !1285)
!1284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !985)
!1285 = !{!1119}
!1286 = distinct !DIGlobalVariable(name: "hevc_sub_width_c", scope: !0, file: !1282, line: 73, type: !1283, isLocal: true, isDefinition: true, variable: [4 x i8]* @hevc_sub_width_c)
!1287 = distinct !DIGlobalVariable(name: "default_scaling_list_intra", scope: !0, file: !1282, line: 31, type: !1288, isLocal: true, isDefinition: true, variable: [64 x i8]* @default_scaling_list_intra)
!1288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1284, size: 512, align: 8, elements: !1139)
!1289 = distinct !DIGlobalVariable(name: "default_scaling_list_inter", scope: !0, file: !1282, line: 42, type: !1288, isLocal: true, isDefinition: true, variable: [64 x i8]* @default_scaling_list_inter)
!1290 = distinct !DIGlobalVariable(name: "vui_sar", scope: !0, file: !1282, line: 53, type: !1291, isLocal: true, isDefinition: true, variable: [17 x %struct.AVRational]* @vui_sar)
!1291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 1088, align: 32, elements: !1293)
!1292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1072)
!1293 = !{!1294}
!1294 = !DISubrange(count: 17)
!1295 = !{i32 2, !"Dwarf Version", i32 4}
!1296 = !{i32 2, !"Debug Info Version", i32 3}
!1297 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1298 = distinct !DISubprogram(name: "ff_hevc_decode_short_term_rps", scope: !1282, file: !1282, line: 119, type: !1299, isLocal: false, isDefinition: true, scopeLine: 121, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!977, !1301, !1312, !1889, !1207, !977}
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64, align: 64)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1303, line: 70, baseType: !1304)
!1303 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1303, line: 61, size: 256, align: 64, elements: !1305)
!1305 = !{!1306, !1308, !1309, !1310, !1311}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1304, file: !1303, line: 62, baseType: !1307, size: 64, align: 64)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64, align: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1304, file: !1303, line: 62, baseType: !1307, size: 64, align: 64, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1304, file: !1303, line: 67, baseType: !977, size: 32, align: 32, offset: 128)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1304, file: !1303, line: 68, baseType: !977, size: 32, align: 32, offset: 160)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1304, file: !1303, line: 69, baseType: !977, size: 32, align: 32, offset: 192)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64, align: 64)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !1314)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !1315)
!1315 = !{!1316, !1360, !1361, !1362, !1614, !1615, !1616, !1617, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1643, !1647, !1648, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1827, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1314, file: !35, line: 1561, baseType: !1317, size: 64, align: 64)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64, align: 64)
!1318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1319)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !1320)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !1321)
!1321 = !{!1322, !1326, !1330, !1334, !1335, !1336, !1337, !1341, !1347, !1349, !1353}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1320, file: !4, line: 72, baseType: !1323, size: 64, align: 64)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64, align: 64)
!1324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1325)
!1325 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1320, file: !4, line: 78, baseType: !1327, size: 64, align: 64, offset: 64)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64, align: 64)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{!1323, !1198}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1320, file: !4, line: 85, baseType: !1331, size: 64, align: 64, offset: 128)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64, align: 64)
!1332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1333)
!1333 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1320, file: !4, line: 93, baseType: !977, size: 32, align: 32, offset: 192)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1320, file: !4, line: 99, baseType: !977, size: 32, align: 32, offset: 224)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1320, file: !4, line: 108, baseType: !977, size: 32, align: 32, offset: 256)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1320, file: !4, line: 113, baseType: !1338, size: 64, align: 64, offset: 320)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64, align: 64)
!1339 = !DISubroutineType(types: !1340)
!1340 = !{!1198, !1198, !1198}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1320, file: !4, line: 123, baseType: !1342, size: 64, align: 64, offset: 384)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64, align: 64)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!1345, !1345}
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64, align: 64)
!1346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1320)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1320, file: !4, line: 130, baseType: !1348, size: 32, align: 32, offset: 448)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1320, file: !4, line: 136, baseType: !1350, size: 64, align: 64, offset: 512)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64, align: 64)
!1351 = !DISubroutineType(types: !1352)
!1352 = !{!1348, !1198}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1320, file: !4, line: 142, baseType: !1354, size: 64, align: 64, offset: 576)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64, align: 64)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!977, !1357, !1198, !1323, !977}
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64, align: 64)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64, align: 64)
!1359 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1314, file: !35, line: 1562, baseType: !977, size: 32, align: 32, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1314, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1314, file: !35, line: 1565, baseType: !1363, size: 64, align: 64, offset: 128)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64, align: 64)
!1364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1365)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1366)
!1366 = !{!1367, !1368, !1369, !1370, !1371, !1372, !1374, !1377, !1380, !1383, !1388, !1389, !1390, !1398, !1399, !1400, !1402, !1406, !1412, !1417, !1421, !1422, !1467, !1585, !1589, !1590, !1594, !1598, !1603, !1607, !1608, !1609}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1365, file: !35, line: 3475, baseType: !1323, size: 64, align: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1365, file: !35, line: 3480, baseType: !1323, size: 64, align: 64, offset: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1365, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1365, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1365, file: !35, line: 3487, baseType: !977, size: 32, align: 32, offset: 192)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1365, file: !35, line: 3488, baseType: !1373, size: 64, align: 64, offset: 256)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64, align: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1365, file: !35, line: 3489, baseType: !1375, size: 64, align: 64, offset: 320)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64, align: 64)
!1376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1365, file: !35, line: 3490, baseType: !1378, size: 64, align: 64, offset: 384)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64, align: 64)
!1379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !977)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1365, file: !35, line: 3491, baseType: !1381, size: 64, align: 64, offset: 448)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64, align: 64)
!1382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1365, file: !35, line: 3492, baseType: !1384, size: 64, align: 64, offset: 512)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64, align: 64)
!1385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1386)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !986, line: 55, baseType: !1387)
!1387 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1365, file: !35, line: 3493, baseType: !985, size: 8, align: 8, offset: 576)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1365, file: !35, line: 3494, baseType: !1317, size: 64, align: 64, offset: 640)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1365, file: !35, line: 3495, baseType: !1391, size: 64, align: 64, offset: 704)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64, align: 64)
!1392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1393)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1394)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1395)
!1395 = !{!1396, !1397}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1394, file: !35, line: 3402, baseType: !977, size: 32, align: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1394, file: !35, line: 3403, baseType: !1323, size: 64, align: 64, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1365, file: !35, line: 3507, baseType: !1323, size: 64, align: 64, offset: 768)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1365, file: !35, line: 3516, baseType: !977, size: 32, align: 32, offset: 832)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1365, file: !35, line: 3517, baseType: !1401, size: 64, align: 64, offset: 896)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64, align: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1365, file: !35, line: 3527, baseType: !1403, size: 64, align: 64, offset: 960)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64, align: 64)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{!977, !1312}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1365, file: !35, line: 3535, baseType: !1407, size: 64, align: 64, offset: 1024)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64, align: 64)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!977, !1312, !1410}
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64, align: 64)
!1411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1313)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1365, file: !35, line: 3541, baseType: !1413, size: 64, align: 64, offset: 1088)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64, align: 64)
!1414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1415)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1416)
!1416 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !35, line: 3461, flags: DIFlagFwdDecl)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1365, file: !35, line: 3549, baseType: !1418, size: 64, align: 64, offset: 1152)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64, align: 64)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{null, !1401}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1365, file: !35, line: 3551, baseType: !1403, size: 64, align: 64, offset: 1216)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1365, file: !35, line: 3552, baseType: !1423, size: 64, align: 64, offset: 1280)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64, align: 64)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{!977, !1312, !1197, !977, !1426}
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64, align: 64)
!1427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1428)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1429)
!1429 = !{!1430, !1431, !1432, !1433, !1434, !1464}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1428, file: !35, line: 3921, baseType: !1145, size: 16, align: 16)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1428, file: !35, line: 3922, baseType: !1026, size: 32, align: 32, offset: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1428, file: !35, line: 3923, baseType: !1026, size: 32, align: 32, offset: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1428, file: !35, line: 3924, baseType: !978, size: 32, align: 32, offset: 96)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1428, file: !35, line: 3925, baseType: !1435, size: 64, align: 64, offset: 128)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64, align: 64)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64, align: 64)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443, !1444, !1445, !1455, !1457, !1459, !1460, !1462, !1463}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1438, file: !35, line: 3886, baseType: !977, size: 32, align: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1438, file: !35, line: 3887, baseType: !977, size: 32, align: 32, offset: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1438, file: !35, line: 3888, baseType: !977, size: 32, align: 32, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1438, file: !35, line: 3889, baseType: !977, size: 32, align: 32, offset: 96)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1438, file: !35, line: 3890, baseType: !977, size: 32, align: 32, offset: 128)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1438, file: !35, line: 3897, baseType: !1446, size: 768, align: 64, offset: 192)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1447)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1448)
!1448 = !{!1449, !1453}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1447, file: !35, line: 3855, baseType: !1450, size: 512, align: 64)
!1450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1197, size: 512, align: 64, elements: !1451)
!1451 = !{!1452}
!1452 = !DISubrange(count: 8)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1447, file: !35, line: 3857, baseType: !1454, size: 256, align: 32, offset: 512)
!1454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !977, size: 256, align: 32, elements: !1451)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1438, file: !35, line: 3903, baseType: !1456, size: 256, align: 64, offset: 960)
!1456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1197, size: 256, align: 64, elements: !1285)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1438, file: !35, line: 3904, baseType: !1458, size: 128, align: 32, offset: 1216)
!1458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !977, size: 128, align: 32, elements: !1285)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1438, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1438, file: !35, line: 3908, baseType: !1461, size: 64, align: 64, offset: 1408)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64, align: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1438, file: !35, line: 3915, baseType: !1461, size: 64, align: 64, offset: 1472)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1438, file: !35, line: 3917, baseType: !977, size: 32, align: 32, offset: 1536)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1428, file: !35, line: 3926, baseType: !1465, size: 64, align: 64, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !986, line: 40, baseType: !1466)
!1466 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1365, file: !35, line: 3564, baseType: !1468, size: 64, align: 64, offset: 1344)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64, align: 64)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!977, !1312, !1471, !1505, !1269}
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64, align: 64)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1473)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1474)
!1474 = !{!1475, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1501, !1502, !1503, !1504}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1473, file: !35, line: 1451, baseType: !1476, size: 64, align: 64)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64, align: 64)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1478, line: 94, baseType: !1479)
!1478 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1478, line: 81, size: 192, align: 64, elements: !1480)
!1480 = !{!1481, !1485, !1486}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1479, file: !1478, line: 82, baseType: !1482, size: 64, align: 64)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64, align: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1478, line: 73, baseType: !1484)
!1484 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1478, line: 73, flags: DIFlagFwdDecl)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1479, file: !1478, line: 89, baseType: !1197, size: 64, align: 64, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1479, file: !1478, line: 93, baseType: !977, size: 32, align: 32, offset: 128)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1473, file: !35, line: 1461, baseType: !1465, size: 64, align: 64, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1473, file: !35, line: 1467, baseType: !1465, size: 64, align: 64, offset: 128)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1473, file: !35, line: 1468, baseType: !1197, size: 64, align: 64, offset: 192)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1473, file: !35, line: 1469, baseType: !977, size: 32, align: 32, offset: 256)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1473, file: !35, line: 1470, baseType: !977, size: 32, align: 32, offset: 288)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1473, file: !35, line: 1474, baseType: !977, size: 32, align: 32, offset: 320)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1473, file: !35, line: 1479, baseType: !1494, size: 64, align: 64, offset: 384)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64, align: 64)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1496)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1497)
!1497 = !{!1498, !1499, !1500}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1496, file: !35, line: 1412, baseType: !1197, size: 64, align: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1496, file: !35, line: 1413, baseType: !977, size: 32, align: 32, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1496, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1473, file: !35, line: 1480, baseType: !977, size: 32, align: 32, offset: 448)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1473, file: !35, line: 1486, baseType: !1465, size: 64, align: 64, offset: 512)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1473, file: !35, line: 1488, baseType: !1465, size: 64, align: 64, offset: 576)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1473, file: !35, line: 1497, baseType: !1465, size: 64, align: 64, offset: 640)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64, align: 64)
!1506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1507)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1508)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1509)
!1509 = !{!1510, !1511, !1512, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1539, !1541, !1542, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1573, !1574, !1575, !1576, !1577, !1578, !1581, !1582, !1583, !1584}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1508, file: !758, line: 282, baseType: !1450, size: 512, align: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1508, file: !758, line: 299, baseType: !1454, size: 256, align: 32, offset: 512)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1508, file: !758, line: 315, baseType: !1513, size: 64, align: 64, offset: 768)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64, align: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1508, file: !758, line: 326, baseType: !977, size: 32, align: 32, offset: 832)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1508, file: !758, line: 326, baseType: !977, size: 32, align: 32, offset: 864)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1508, file: !758, line: 334, baseType: !977, size: 32, align: 32, offset: 896)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1508, file: !758, line: 341, baseType: !977, size: 32, align: 32, offset: 928)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1508, file: !758, line: 346, baseType: !977, size: 32, align: 32, offset: 960)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1508, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1508, file: !758, line: 356, baseType: !1072, size: 64, align: 32, offset: 1024)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1508, file: !758, line: 361, baseType: !1465, size: 64, align: 64, offset: 1088)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1508, file: !758, line: 369, baseType: !1465, size: 64, align: 64, offset: 1152)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1508, file: !758, line: 377, baseType: !1465, size: 64, align: 64, offset: 1216)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1508, file: !758, line: 382, baseType: !977, size: 32, align: 32, offset: 1280)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1508, file: !758, line: 386, baseType: !977, size: 32, align: 32, offset: 1312)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1508, file: !758, line: 391, baseType: !977, size: 32, align: 32, offset: 1344)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1508, file: !758, line: 396, baseType: !1198, size: 64, align: 64, offset: 1408)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1508, file: !758, line: 403, baseType: !1529, size: 512, align: 64, offset: 1472)
!1529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1386, size: 512, align: 64, elements: !1451)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1508, file: !758, line: 410, baseType: !977, size: 32, align: 32, offset: 1984)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1508, file: !758, line: 415, baseType: !977, size: 32, align: 32, offset: 2016)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1508, file: !758, line: 420, baseType: !977, size: 32, align: 32, offset: 2048)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1508, file: !758, line: 425, baseType: !977, size: 32, align: 32, offset: 2080)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1508, file: !758, line: 435, baseType: !1465, size: 64, align: 64, offset: 2112)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1508, file: !758, line: 440, baseType: !977, size: 32, align: 32, offset: 2176)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1508, file: !758, line: 445, baseType: !1386, size: 64, align: 64, offset: 2240)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1508, file: !758, line: 459, baseType: !1538, size: 512, align: 64, offset: 2304)
!1538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1476, size: 512, align: 64, elements: !1451)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1508, file: !758, line: 473, baseType: !1540, size: 64, align: 64, offset: 2816)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64, align: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1508, file: !758, line: 477, baseType: !977, size: 32, align: 32, offset: 2880)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1508, file: !758, line: 479, baseType: !1543, size: 64, align: 64, offset: 2944)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64, align: 64)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64, align: 64)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !1546)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551, !1556}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1546, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1546, file: !758, line: 203, baseType: !1197, size: 64, align: 64, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1546, file: !758, line: 204, baseType: !977, size: 32, align: 32, offset: 128)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1546, file: !758, line: 205, baseType: !1552, size: 64, align: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64, align: 64)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1554, line: 86, baseType: !1555)
!1554 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1555 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1554, line: 86, flags: DIFlagFwdDecl)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1546, file: !758, line: 206, baseType: !1476, size: 64, align: 64, offset: 256)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1508, file: !758, line: 480, baseType: !977, size: 32, align: 32, offset: 3008)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1508, file: !758, line: 505, baseType: !977, size: 32, align: 32, offset: 3040)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1508, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1508, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1508, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1508, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1508, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1508, file: !758, line: 532, baseType: !1465, size: 64, align: 64, offset: 3264)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1508, file: !758, line: 539, baseType: !1465, size: 64, align: 64, offset: 3328)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1508, file: !758, line: 547, baseType: !1465, size: 64, align: 64, offset: 3392)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1508, file: !758, line: 554, baseType: !1552, size: 64, align: 64, offset: 3456)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1508, file: !758, line: 563, baseType: !977, size: 32, align: 32, offset: 3520)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1508, file: !758, line: 572, baseType: !977, size: 32, align: 32, offset: 3552)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1508, file: !758, line: 581, baseType: !977, size: 32, align: 32, offset: 3584)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1508, file: !758, line: 588, baseType: !1572, size: 64, align: 64, offset: 3648)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64, align: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1508, file: !758, line: 593, baseType: !977, size: 32, align: 32, offset: 3712)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1508, file: !758, line: 596, baseType: !977, size: 32, align: 32, offset: 3744)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1508, file: !758, line: 599, baseType: !1476, size: 64, align: 64, offset: 3776)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1508, file: !758, line: 605, baseType: !1476, size: 64, align: 64, offset: 3840)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1508, file: !758, line: 616, baseType: !1476, size: 64, align: 64, offset: 3904)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1508, file: !758, line: 626, baseType: !1579, size: 64, align: 64, offset: 3968)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1580, line: 216, baseType: !1387)
!1580 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1508, file: !758, line: 627, baseType: !1579, size: 64, align: 64, offset: 4032)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1508, file: !758, line: 628, baseType: !1579, size: 64, align: 64, offset: 4096)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1508, file: !758, line: 629, baseType: !1579, size: 64, align: 64, offset: 4160)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1508, file: !758, line: 645, baseType: !1476, size: 64, align: 64, offset: 4224)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1365, file: !35, line: 3566, baseType: !1586, size: 64, align: 64, offset: 1408)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64, align: 64)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!977, !1312, !1198, !1269, !1471}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1365, file: !35, line: 3567, baseType: !1403, size: 64, align: 64, offset: 1472)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1365, file: !35, line: 3576, baseType: !1591, size: 64, align: 64, offset: 1536)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64, align: 64)
!1592 = !DISubroutineType(types: !1593)
!1593 = !{!977, !1312, !1505}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1365, file: !35, line: 3577, baseType: !1595, size: 64, align: 64, offset: 1600)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64, align: 64)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{!977, !1312, !1471}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1365, file: !35, line: 3584, baseType: !1599, size: 64, align: 64, offset: 1664)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64, align: 64)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!977, !1312, !1602}
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64, align: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1365, file: !35, line: 3589, baseType: !1604, size: 64, align: 64, offset: 1728)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64, align: 64)
!1605 = !DISubroutineType(types: !1606)
!1606 = !{null, !1312}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1365, file: !35, line: 3594, baseType: !977, size: 32, align: 32, offset: 1792)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1365, file: !35, line: 3600, baseType: !1323, size: 64, align: 64, offset: 1856)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1365, file: !35, line: 3609, baseType: !1610, size: 64, align: 64, offset: 1920)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64, align: 64)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64, align: 64)
!1612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1613)
!1613 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1314, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1314, file: !35, line: 1581, baseType: !978, size: 32, align: 32, offset: 224)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1314, file: !35, line: 1583, baseType: !1198, size: 64, align: 64, offset: 256)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1314, file: !35, line: 1591, baseType: !1618, size: 64, align: 64, offset: 320)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64, align: 64)
!1619 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !35, line: 1532, flags: DIFlagFwdDecl)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1314, file: !35, line: 1598, baseType: !1198, size: 64, align: 64, offset: 384)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1314, file: !35, line: 1606, baseType: !1465, size: 64, align: 64, offset: 448)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1314, file: !35, line: 1614, baseType: !977, size: 32, align: 32, offset: 512)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1314, file: !35, line: 1622, baseType: !977, size: 32, align: 32, offset: 544)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1314, file: !35, line: 1628, baseType: !977, size: 32, align: 32, offset: 576)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1314, file: !35, line: 1636, baseType: !977, size: 32, align: 32, offset: 608)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1314, file: !35, line: 1643, baseType: !977, size: 32, align: 32, offset: 640)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1314, file: !35, line: 1657, baseType: !1197, size: 64, align: 64, offset: 704)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1314, file: !35, line: 1658, baseType: !977, size: 32, align: 32, offset: 768)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1314, file: !35, line: 1679, baseType: !1072, size: 64, align: 32, offset: 800)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1314, file: !35, line: 1688, baseType: !977, size: 32, align: 32, offset: 864)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1314, file: !35, line: 1712, baseType: !977, size: 32, align: 32, offset: 896)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1314, file: !35, line: 1729, baseType: !977, size: 32, align: 32, offset: 928)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1314, file: !35, line: 1729, baseType: !977, size: 32, align: 32, offset: 960)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1314, file: !35, line: 1744, baseType: !977, size: 32, align: 32, offset: 992)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1314, file: !35, line: 1744, baseType: !977, size: 32, align: 32, offset: 1024)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1314, file: !35, line: 1751, baseType: !977, size: 32, align: 32, offset: 1056)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1314, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1314, file: !35, line: 1791, baseType: !1639, size: 64, align: 64, offset: 1152)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64, align: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{null, !1642, !1505, !1269, !977, !977, !977}
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 64, align: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1314, file: !35, line: 1808, baseType: !1644, size: 64, align: 64, offset: 1216)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64, align: 64)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!494, !1642, !1375}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1314, file: !35, line: 1816, baseType: !977, size: 32, align: 32, offset: 1280)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1314, file: !35, line: 1825, baseType: !1649, size: 32, align: 32, offset: 1312)
!1649 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1314, file: !35, line: 1830, baseType: !977, size: 32, align: 32, offset: 1344)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1314, file: !35, line: 1838, baseType: !1649, size: 32, align: 32, offset: 1376)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1314, file: !35, line: 1846, baseType: !977, size: 32, align: 32, offset: 1408)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1314, file: !35, line: 1851, baseType: !977, size: 32, align: 32, offset: 1440)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1314, file: !35, line: 1861, baseType: !1649, size: 32, align: 32, offset: 1472)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1314, file: !35, line: 1868, baseType: !1649, size: 32, align: 32, offset: 1504)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1314, file: !35, line: 1875, baseType: !1649, size: 32, align: 32, offset: 1536)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1314, file: !35, line: 1882, baseType: !1649, size: 32, align: 32, offset: 1568)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1314, file: !35, line: 1889, baseType: !1649, size: 32, align: 32, offset: 1600)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1314, file: !35, line: 1896, baseType: !1649, size: 32, align: 32, offset: 1632)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1314, file: !35, line: 1903, baseType: !1649, size: 32, align: 32, offset: 1664)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1314, file: !35, line: 1910, baseType: !977, size: 32, align: 32, offset: 1696)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1314, file: !35, line: 1915, baseType: !977, size: 32, align: 32, offset: 1728)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1314, file: !35, line: 1926, baseType: !1269, size: 64, align: 64, offset: 1792)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1314, file: !35, line: 1935, baseType: !1072, size: 64, align: 32, offset: 1856)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1314, file: !35, line: 1942, baseType: !977, size: 32, align: 32, offset: 1920)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1314, file: !35, line: 1948, baseType: !977, size: 32, align: 32, offset: 1952)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1314, file: !35, line: 1954, baseType: !977, size: 32, align: 32, offset: 1984)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1314, file: !35, line: 1960, baseType: !977, size: 32, align: 32, offset: 2016)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1314, file: !35, line: 1984, baseType: !977, size: 32, align: 32, offset: 2048)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1314, file: !35, line: 1991, baseType: !977, size: 32, align: 32, offset: 2080)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1314, file: !35, line: 1996, baseType: !977, size: 32, align: 32, offset: 2112)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1314, file: !35, line: 2004, baseType: !977, size: 32, align: 32, offset: 2144)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1314, file: !35, line: 2011, baseType: !977, size: 32, align: 32, offset: 2176)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1314, file: !35, line: 2018, baseType: !977, size: 32, align: 32, offset: 2208)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1314, file: !35, line: 2027, baseType: !977, size: 32, align: 32, offset: 2240)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1314, file: !35, line: 2034, baseType: !977, size: 32, align: 32, offset: 2272)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1314, file: !35, line: 2044, baseType: !977, size: 32, align: 32, offset: 2304)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1314, file: !35, line: 2054, baseType: !1679, size: 64, align: 64, offset: 2368)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64, align: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1314, file: !35, line: 2061, baseType: !1679, size: 64, align: 64, offset: 2432)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1314, file: !35, line: 2066, baseType: !977, size: 32, align: 32, offset: 2496)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1314, file: !35, line: 2070, baseType: !977, size: 32, align: 32, offset: 2528)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1314, file: !35, line: 2078, baseType: !977, size: 32, align: 32, offset: 2560)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1314, file: !35, line: 2085, baseType: !977, size: 32, align: 32, offset: 2592)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1314, file: !35, line: 2092, baseType: !977, size: 32, align: 32, offset: 2624)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1314, file: !35, line: 2099, baseType: !977, size: 32, align: 32, offset: 2656)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1314, file: !35, line: 2106, baseType: !977, size: 32, align: 32, offset: 2688)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1314, file: !35, line: 2113, baseType: !977, size: 32, align: 32, offset: 2720)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1314, file: !35, line: 2120, baseType: !977, size: 32, align: 32, offset: 2752)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1314, file: !35, line: 2125, baseType: !977, size: 32, align: 32, offset: 2784)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1314, file: !35, line: 2133, baseType: !977, size: 32, align: 32, offset: 2816)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1314, file: !35, line: 2140, baseType: !977, size: 32, align: 32, offset: 2848)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1314, file: !35, line: 2145, baseType: !977, size: 32, align: 32, offset: 2880)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1314, file: !35, line: 2153, baseType: !977, size: 32, align: 32, offset: 2912)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1314, file: !35, line: 2158, baseType: !977, size: 32, align: 32, offset: 2944)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1314, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1314, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1314, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1314, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1314, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1314, file: !35, line: 2203, baseType: !977, size: 32, align: 32, offset: 3136)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1314, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1314, file: !35, line: 2212, baseType: !977, size: 32, align: 32, offset: 3200)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1314, file: !35, line: 2213, baseType: !977, size: 32, align: 32, offset: 3232)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1314, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1314, file: !35, line: 2232, baseType: !977, size: 32, align: 32, offset: 3296)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1314, file: !35, line: 2243, baseType: !977, size: 32, align: 32, offset: 3328)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1314, file: !35, line: 2249, baseType: !977, size: 32, align: 32, offset: 3360)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1314, file: !35, line: 2256, baseType: !977, size: 32, align: 32, offset: 3392)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1314, file: !35, line: 2263, baseType: !1386, size: 64, align: 64, offset: 3456)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1314, file: !35, line: 2270, baseType: !1386, size: 64, align: 64, offset: 3520)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1314, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1314, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1314, file: !35, line: 2367, baseType: !1715, size: 64, align: 64, offset: 3648)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64, align: 64)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!977, !1642, !1602, !977}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1314, file: !35, line: 2383, baseType: !977, size: 32, align: 32, offset: 3712)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1314, file: !35, line: 2386, baseType: !1649, size: 32, align: 32, offset: 3744)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1314, file: !35, line: 2387, baseType: !1649, size: 32, align: 32, offset: 3776)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1314, file: !35, line: 2394, baseType: !977, size: 32, align: 32, offset: 3808)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1314, file: !35, line: 2401, baseType: !977, size: 32, align: 32, offset: 3840)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1314, file: !35, line: 2408, baseType: !977, size: 32, align: 32, offset: 3872)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1314, file: !35, line: 2415, baseType: !977, size: 32, align: 32, offset: 3904)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1314, file: !35, line: 2422, baseType: !977, size: 32, align: 32, offset: 3936)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1314, file: !35, line: 2423, baseType: !1727, size: 64, align: 64, offset: 3968)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64, align: 64)
!1728 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !1729)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !1730)
!1730 = !{!1731, !1732, !1733, !1734}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1729, file: !35, line: 827, baseType: !977, size: 32, align: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1729, file: !35, line: 828, baseType: !977, size: 32, align: 32, offset: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1729, file: !35, line: 829, baseType: !977, size: 32, align: 32, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1729, file: !35, line: 830, baseType: !1649, size: 32, align: 32, offset: 96)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1314, file: !35, line: 2430, baseType: !1465, size: 64, align: 64, offset: 4032)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1314, file: !35, line: 2437, baseType: !1465, size: 64, align: 64, offset: 4096)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1314, file: !35, line: 2444, baseType: !1649, size: 32, align: 32, offset: 4160)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1314, file: !35, line: 2451, baseType: !1649, size: 32, align: 32, offset: 4192)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1314, file: !35, line: 2458, baseType: !977, size: 32, align: 32, offset: 4224)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1314, file: !35, line: 2469, baseType: !977, size: 32, align: 32, offset: 4256)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1314, file: !35, line: 2475, baseType: !977, size: 32, align: 32, offset: 4288)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1314, file: !35, line: 2481, baseType: !977, size: 32, align: 32, offset: 4320)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1314, file: !35, line: 2485, baseType: !977, size: 32, align: 32, offset: 4352)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1314, file: !35, line: 2489, baseType: !977, size: 32, align: 32, offset: 4384)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1314, file: !35, line: 2493, baseType: !977, size: 32, align: 32, offset: 4416)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1314, file: !35, line: 2501, baseType: !977, size: 32, align: 32, offset: 4448)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1314, file: !35, line: 2506, baseType: !977, size: 32, align: 32, offset: 4480)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1314, file: !35, line: 2510, baseType: !977, size: 32, align: 32, offset: 4512)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1314, file: !35, line: 2514, baseType: !1465, size: 64, align: 64, offset: 4544)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1314, file: !35, line: 2528, baseType: !1751, size: 64, align: 64, offset: 4608)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64, align: 64)
!1752 = !DISubroutineType(types: !1753)
!1753 = !{null, !1642, !1198, !977, !977}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1314, file: !35, line: 2534, baseType: !977, size: 32, align: 32, offset: 4672)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1314, file: !35, line: 2545, baseType: !977, size: 32, align: 32, offset: 4704)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1314, file: !35, line: 2547, baseType: !977, size: 32, align: 32, offset: 4736)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1314, file: !35, line: 2549, baseType: !977, size: 32, align: 32, offset: 4768)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1314, file: !35, line: 2551, baseType: !977, size: 32, align: 32, offset: 4800)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1314, file: !35, line: 2553, baseType: !977, size: 32, align: 32, offset: 4832)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1314, file: !35, line: 2555, baseType: !977, size: 32, align: 32, offset: 4864)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1314, file: !35, line: 2557, baseType: !977, size: 32, align: 32, offset: 4896)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1314, file: !35, line: 2559, baseType: !977, size: 32, align: 32, offset: 4928)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1314, file: !35, line: 2563, baseType: !977, size: 32, align: 32, offset: 4960)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1314, file: !35, line: 2571, baseType: !1461, size: 64, align: 64, offset: 4992)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1314, file: !35, line: 2579, baseType: !1461, size: 64, align: 64, offset: 5056)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1314, file: !35, line: 2586, baseType: !977, size: 32, align: 32, offset: 5120)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1314, file: !35, line: 2615, baseType: !977, size: 32, align: 32, offset: 5152)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1314, file: !35, line: 2627, baseType: !977, size: 32, align: 32, offset: 5184)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1314, file: !35, line: 2637, baseType: !977, size: 32, align: 32, offset: 5216)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1314, file: !35, line: 2681, baseType: !977, size: 32, align: 32, offset: 5248)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1314, file: !35, line: 2709, baseType: !1465, size: 64, align: 64, offset: 5312)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1314, file: !35, line: 2716, baseType: !1773, size: 64, align: 64, offset: 5376)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64, align: 64)
!1774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1775)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !1776)
!1776 = !{!1777, !1778, !1779, !1780, !1781, !1782, !1783, !1787, !1791, !1792, !1793, !1794, !1800, !1801, !1802, !1803, !1804}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1775, file: !35, line: 3642, baseType: !1323, size: 64, align: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1775, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1775, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1775, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1775, file: !35, line: 3669, baseType: !977, size: 32, align: 32, offset: 160)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1775, file: !35, line: 3682, baseType: !1599, size: 64, align: 64, offset: 192)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1775, file: !35, line: 3698, baseType: !1784, size: 64, align: 64, offset: 256)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64, align: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!977, !1312, !1307, !1026}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1775, file: !35, line: 3712, baseType: !1788, size: 64, align: 64, offset: 320)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64, align: 64)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!977, !1312, !977, !1307, !1026}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1775, file: !35, line: 3726, baseType: !1784, size: 64, align: 64, offset: 384)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1775, file: !35, line: 3737, baseType: !1403, size: 64, align: 64, offset: 448)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1775, file: !35, line: 3746, baseType: !977, size: 32, align: 32, offset: 512)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1775, file: !35, line: 3757, baseType: !1795, size: 64, align: 64, offset: 576)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64, align: 64)
!1796 = !DISubroutineType(types: !1797)
!1797 = !{null, !1798}
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64, align: 64)
!1799 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1775, file: !35, line: 3766, baseType: !1403, size: 64, align: 64, offset: 640)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1775, file: !35, line: 3774, baseType: !1403, size: 64, align: 64, offset: 704)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1775, file: !35, line: 3780, baseType: !977, size: 32, align: 32, offset: 768)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1775, file: !35, line: 3785, baseType: !977, size: 32, align: 32, offset: 800)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1775, file: !35, line: 3795, baseType: !1805, size: 64, align: 64, offset: 832)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64, align: 64)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{!977, !1312, !1476}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1314, file: !35, line: 2728, baseType: !1198, size: 64, align: 64, offset: 5440)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1314, file: !35, line: 2735, baseType: !1529, size: 512, align: 64, offset: 5504)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1314, file: !35, line: 2742, baseType: !977, size: 32, align: 32, offset: 6016)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1314, file: !35, line: 2755, baseType: !977, size: 32, align: 32, offset: 6048)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1314, file: !35, line: 2776, baseType: !977, size: 32, align: 32, offset: 6080)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1314, file: !35, line: 2783, baseType: !977, size: 32, align: 32, offset: 6112)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1314, file: !35, line: 2791, baseType: !977, size: 32, align: 32, offset: 6144)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1314, file: !35, line: 2802, baseType: !1602, size: 64, align: 64, offset: 6208)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1314, file: !35, line: 2811, baseType: !977, size: 32, align: 32, offset: 6272)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1314, file: !35, line: 2821, baseType: !977, size: 32, align: 32, offset: 6304)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1314, file: !35, line: 2830, baseType: !977, size: 32, align: 32, offset: 6336)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1314, file: !35, line: 2840, baseType: !977, size: 32, align: 32, offset: 6368)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1314, file: !35, line: 2851, baseType: !1821, size: 64, align: 64, offset: 6400)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64, align: 64)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{!977, !1642, !1824, !1198, !1269, !977, !977}
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64, align: 64)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!977, !1642, !1198}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1314, file: !35, line: 2871, baseType: !1828, size: 64, align: 64, offset: 6464)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64, align: 64)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!977, !1642, !1831, !1198, !1269, !977}
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64, align: 64)
!1832 = !DISubroutineType(types: !1833)
!1833 = !{!977, !1642, !1198, !977, !977}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1314, file: !35, line: 2878, baseType: !977, size: 32, align: 32, offset: 6528)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1314, file: !35, line: 2885, baseType: !977, size: 32, align: 32, offset: 6560)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1314, file: !35, line: 3005, baseType: !977, size: 32, align: 32, offset: 6592)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1314, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1314, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1314, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1314, file: !35, line: 3037, baseType: !1197, size: 64, align: 64, offset: 6720)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1314, file: !35, line: 3038, baseType: !977, size: 32, align: 32, offset: 6784)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1314, file: !35, line: 3050, baseType: !1386, size: 64, align: 64, offset: 6848)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1314, file: !35, line: 3065, baseType: !977, size: 32, align: 32, offset: 6912)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1314, file: !35, line: 3083, baseType: !977, size: 32, align: 32, offset: 6944)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1314, file: !35, line: 3092, baseType: !1072, size: 64, align: 32, offset: 6976)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1314, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1314, file: !35, line: 3106, baseType: !1072, size: 64, align: 32, offset: 7072)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1314, file: !35, line: 3113, baseType: !1849, size: 64, align: 64, offset: 7168)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64, align: 64)
!1850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1851)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !1852)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !1853)
!1853 = !{!1854, !1855, !1856, !1857, !1858, !1859, !1862}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1852, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1852, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1852, file: !35, line: 720, baseType: !1323, size: 64, align: 64, offset: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1852, file: !35, line: 724, baseType: !1323, size: 64, align: 64, offset: 128)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1852, file: !35, line: 728, baseType: !977, size: 32, align: 32, offset: 192)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1852, file: !35, line: 734, baseType: !1860, size: 64, align: 64, offset: 256)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64, align: 64)
!1861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1323)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1852, file: !35, line: 739, baseType: !1863, size: 64, align: 64, offset: 320)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64, align: 64)
!1864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1394)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1314, file: !35, line: 3129, baseType: !1465, size: 64, align: 64, offset: 7232)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1314, file: !35, line: 3130, baseType: !1465, size: 64, align: 64, offset: 7296)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1314, file: !35, line: 3131, baseType: !1465, size: 64, align: 64, offset: 7360)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1314, file: !35, line: 3132, baseType: !1465, size: 64, align: 64, offset: 7424)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1314, file: !35, line: 3139, baseType: !1461, size: 64, align: 64, offset: 7488)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1314, file: !35, line: 3147, baseType: !977, size: 32, align: 32, offset: 7552)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1314, file: !35, line: 3165, baseType: !977, size: 32, align: 32, offset: 7584)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1314, file: !35, line: 3172, baseType: !977, size: 32, align: 32, offset: 7616)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1314, file: !35, line: 3180, baseType: !977, size: 32, align: 32, offset: 7648)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1314, file: !35, line: 3191, baseType: !1679, size: 64, align: 64, offset: 7680)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1314, file: !35, line: 3199, baseType: !1197, size: 64, align: 64, offset: 7744)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1314, file: !35, line: 3207, baseType: !1461, size: 64, align: 64, offset: 7808)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1314, file: !35, line: 3214, baseType: !978, size: 32, align: 32, offset: 7872)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1314, file: !35, line: 3224, baseType: !1494, size: 64, align: 64, offset: 7936)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1314, file: !35, line: 3225, baseType: !977, size: 32, align: 32, offset: 8000)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1314, file: !35, line: 3249, baseType: !1476, size: 64, align: 64, offset: 8064)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1314, file: !35, line: 3256, baseType: !977, size: 32, align: 32, offset: 8128)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1314, file: !35, line: 3271, baseType: !977, size: 32, align: 32, offset: 8160)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1314, file: !35, line: 3279, baseType: !1465, size: 64, align: 64, offset: 8192)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1314, file: !35, line: 3301, baseType: !1476, size: 64, align: 64, offset: 8256)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1314, file: !35, line: 3310, baseType: !977, size: 32, align: 32, offset: 8320)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1314, file: !35, line: 3337, baseType: !977, size: 32, align: 32, offset: 8352)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1314, file: !35, line: 3351, baseType: !977, size: 32, align: 32, offset: 8384)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1314, file: !35, line: 3359, baseType: !977, size: 32, align: 32, offset: 8416)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64, align: 64)
!1890 = !{}
!1891 = !DILocalVariable(name: "gb", arg: 1, scope: !1298, file: !1282, line: 119, type: !1301)
!1892 = !DIExpression()
!1893 = !DILocation(line: 119, column: 50, scope: !1298)
!1894 = !DILocalVariable(name: "avctx", arg: 2, scope: !1298, file: !1282, line: 119, type: !1312)
!1895 = !DILocation(line: 119, column: 70, scope: !1298)
!1896 = !DILocalVariable(name: "rps", arg: 3, scope: !1298, file: !1282, line: 120, type: !1889)
!1897 = !DILocation(line: 120, column: 49, scope: !1298)
!1898 = !DILocalVariable(name: "sps", arg: 4, scope: !1298, file: !1282, line: 120, type: !1207)
!1899 = !DILocation(line: 120, column: 69, scope: !1298)
!1900 = !DILocalVariable(name: "is_slice_header", arg: 5, scope: !1298, file: !1282, line: 120, type: !977)
!1901 = !DILocation(line: 120, column: 78, scope: !1298)
!1902 = !DILocalVariable(name: "rps_predict", scope: !1298, file: !1282, line: 122, type: !985)
!1903 = !DILocation(line: 122, column: 13, scope: !1298)
!1904 = !DILocalVariable(name: "delta_poc", scope: !1298, file: !1282, line: 123, type: !977)
!1905 = !DILocation(line: 123, column: 9, scope: !1298)
!1906 = !DILocalVariable(name: "k0", scope: !1298, file: !1282, line: 124, type: !977)
!1907 = !DILocation(line: 124, column: 9, scope: !1298)
!1908 = !DILocalVariable(name: "k1", scope: !1298, file: !1282, line: 125, type: !977)
!1909 = !DILocation(line: 125, column: 9, scope: !1298)
!1910 = !DILocalVariable(name: "k", scope: !1298, file: !1282, line: 126, type: !977)
!1911 = !DILocation(line: 126, column: 9, scope: !1298)
!1912 = !DILocalVariable(name: "i", scope: !1298, file: !1282, line: 127, type: !977)
!1913 = !DILocation(line: 127, column: 9, scope: !1298)
!1914 = !DILocation(line: 129, column: 9, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1298, file: !1282, line: 129, column: 9)
!1916 = !DILocation(line: 129, column: 16, scope: !1915)
!1917 = !DILocation(line: 129, column: 21, scope: !1915)
!1918 = !DILocation(line: 129, column: 13, scope: !1915)
!1919 = !DILocation(line: 129, column: 28, scope: !1915)
!1920 = !DILocation(line: 129, column: 31, scope: !1921)
!1921 = !DILexicalBlockFile(scope: !1915, file: !1282, discriminator: 1)
!1922 = !DILocation(line: 129, column: 36, scope: !1921)
!1923 = !DILocation(line: 129, column: 9, scope: !1921)
!1924 = !DILocation(line: 130, column: 33, scope: !1915)
!1925 = !DILocation(line: 130, column: 23, scope: !1915)
!1926 = !DILocation(line: 130, column: 21, scope: !1915)
!1927 = !DILocation(line: 130, column: 9, scope: !1915)
!1928 = !DILocation(line: 132, column: 9, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1298, file: !1282, line: 132, column: 9)
!1930 = !DILocation(line: 132, column: 9, scope: !1298)
!1931 = !DILocalVariable(name: "rps_ridx", scope: !1932, file: !1282, line: 133, type: !1933)
!1932 = distinct !DILexicalBlock(scope: !1929, file: !1282, line: 132, column: 22)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64, align: 64)
!1934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1129)
!1935 = !DILocation(line: 133, column: 29, scope: !1932)
!1936 = !DILocalVariable(name: "delta_rps", scope: !1932, file: !1282, line: 134, type: !977)
!1937 = !DILocation(line: 134, column: 13, scope: !1932)
!1938 = !DILocalVariable(name: "abs_delta_rps", scope: !1932, file: !1282, line: 135, type: !978)
!1939 = !DILocation(line: 135, column: 18, scope: !1932)
!1940 = !DILocalVariable(name: "use_delta_flag", scope: !1932, file: !1282, line: 136, type: !985)
!1941 = !DILocation(line: 136, column: 17, scope: !1932)
!1942 = !DILocalVariable(name: "delta_rps_sign", scope: !1932, file: !1282, line: 137, type: !985)
!1943 = !DILocation(line: 137, column: 17, scope: !1932)
!1944 = !DILocation(line: 139, column: 13, scope: !1945)
!1945 = distinct !DILexicalBlock(scope: !1932, file: !1282, line: 139, column: 13)
!1946 = !DILocation(line: 139, column: 13, scope: !1932)
!1947 = !DILocalVariable(name: "delta_idx", scope: !1948, file: !1282, line: 140, type: !978)
!1948 = distinct !DILexicalBlock(scope: !1945, file: !1282, line: 139, column: 30)
!1949 = !DILocation(line: 140, column: 26, scope: !1948)
!1950 = !DILocation(line: 140, column: 57, scope: !1948)
!1951 = !DILocation(line: 140, column: 38, scope: !1948)
!1952 = !DILocation(line: 140, column: 61, scope: !1948)
!1953 = !DILocation(line: 141, column: 17, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1948, file: !1282, line: 141, column: 17)
!1955 = !DILocation(line: 141, column: 29, scope: !1954)
!1956 = !DILocation(line: 141, column: 34, scope: !1954)
!1957 = !DILocation(line: 141, column: 27, scope: !1954)
!1958 = !DILocation(line: 141, column: 17, scope: !1948)
!1959 = !DILocation(line: 142, column: 24, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !1954, file: !1282, line: 141, column: 45)
!1961 = !DILocation(line: 144, column: 24, scope: !1960)
!1962 = !DILocation(line: 144, column: 35, scope: !1960)
!1963 = !DILocation(line: 144, column: 40, scope: !1960)
!1964 = !DILocation(line: 142, column: 17, scope: !1960)
!1965 = !DILocation(line: 145, column: 17, scope: !1960)
!1966 = !DILocation(line: 147, column: 37, scope: !1948)
!1967 = !DILocation(line: 147, column: 42, scope: !1948)
!1968 = !DILocation(line: 147, column: 54, scope: !1948)
!1969 = !DILocation(line: 147, column: 52, scope: !1948)
!1970 = !DILocation(line: 147, column: 25, scope: !1948)
!1971 = !DILocation(line: 147, column: 30, scope: !1948)
!1972 = !DILocation(line: 147, column: 22, scope: !1948)
!1973 = !DILocation(line: 148, column: 43, scope: !1948)
!1974 = !DILocation(line: 148, column: 53, scope: !1948)
!1975 = !DILocation(line: 148, column: 13, scope: !1948)
!1976 = !DILocation(line: 148, column: 18, scope: !1948)
!1977 = !DILocation(line: 148, column: 41, scope: !1948)
!1978 = !DILocation(line: 149, column: 9, scope: !1948)
!1979 = !DILocation(line: 150, column: 37, scope: !1945)
!1980 = !DILocation(line: 150, column: 43, scope: !1945)
!1981 = !DILocation(line: 150, column: 48, scope: !1945)
!1982 = !DILocation(line: 150, column: 41, scope: !1945)
!1983 = !DILocation(line: 150, column: 55, scope: !1945)
!1984 = !DILocation(line: 150, column: 25, scope: !1945)
!1985 = !DILocation(line: 150, column: 30, scope: !1945)
!1986 = !DILocation(line: 150, column: 22, scope: !1945)
!1987 = !DILocation(line: 152, column: 36, scope: !1932)
!1988 = !DILocation(line: 152, column: 26, scope: !1932)
!1989 = !DILocation(line: 152, column: 24, scope: !1932)
!1990 = !DILocation(line: 153, column: 44, scope: !1932)
!1991 = !DILocation(line: 153, column: 25, scope: !1932)
!1992 = !DILocation(line: 153, column: 48, scope: !1932)
!1993 = !DILocation(line: 153, column: 23, scope: !1932)
!1994 = !DILocation(line: 154, column: 13, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1932, file: !1282, line: 154, column: 13)
!1996 = !DILocation(line: 154, column: 27, scope: !1995)
!1997 = !DILocation(line: 154, column: 31, scope: !1995)
!1998 = !DILocation(line: 154, column: 34, scope: !1999)
!1999 = !DILexicalBlockFile(scope: !1995, file: !1282, discriminator: 1)
!2000 = !DILocation(line: 154, column: 48, scope: !1999)
!2001 = !DILocation(line: 154, column: 13, scope: !1999)
!2002 = !DILocation(line: 155, column: 20, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !1995, file: !1282, line: 154, column: 57)
!2004 = !DILocation(line: 157, column: 20, scope: !2003)
!2005 = !DILocation(line: 155, column: 13, scope: !2003)
!2006 = !DILocation(line: 158, column: 13, scope: !2003)
!2007 = !DILocation(line: 160, column: 27, scope: !1932)
!2008 = !DILocation(line: 160, column: 42, scope: !1932)
!2009 = !DILocation(line: 160, column: 24, scope: !1932)
!2010 = !DILocation(line: 160, column: 51, scope: !1932)
!2011 = !DILocation(line: 160, column: 49, scope: !1932)
!2012 = !DILocation(line: 160, column: 19, scope: !1932)
!2013 = !DILocation(line: 161, column: 16, scope: !2014)
!2014 = distinct !DILexicalBlock(scope: !1932, file: !1282, line: 161, column: 9)
!2015 = !DILocation(line: 161, column: 14, scope: !2014)
!2016 = !DILocation(line: 161, column: 21, scope: !2017)
!2017 = !DILexicalBlockFile(scope: !2018, file: !1282, discriminator: 1)
!2018 = distinct !DILexicalBlock(scope: !2014, file: !1282, line: 161, column: 9)
!2019 = !DILocation(line: 161, column: 26, scope: !2017)
!2020 = !DILocation(line: 161, column: 36, scope: !2017)
!2021 = !DILocation(line: 161, column: 23, scope: !2017)
!2022 = !DILocation(line: 161, column: 9, scope: !2017)
!2023 = !DILocalVariable(name: "used", scope: !2024, file: !1282, line: 162, type: !977)
!2024 = distinct !DILexicalBlock(scope: !2018, file: !1282, line: 161, column: 57)
!2025 = !DILocation(line: 162, column: 17, scope: !2024)
!2026 = !DILocation(line: 162, column: 49, scope: !2024)
!2027 = !DILocation(line: 162, column: 39, scope: !2024)
!2028 = !DILocation(line: 162, column: 34, scope: !2024)
!2029 = !DILocation(line: 162, column: 24, scope: !2024)
!2030 = !DILocation(line: 162, column: 29, scope: !2024)
!2031 = !DILocation(line: 162, column: 37, scope: !2024)
!2032 = !DILocation(line: 164, column: 18, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !2024, file: !1282, line: 164, column: 17)
!2034 = !DILocation(line: 164, column: 17, scope: !2024)
!2035 = !DILocation(line: 165, column: 44, scope: !2033)
!2036 = !DILocation(line: 165, column: 34, scope: !2033)
!2037 = !DILocation(line: 165, column: 32, scope: !2033)
!2038 = !DILocation(line: 165, column: 17, scope: !2033)
!2039 = !DILocation(line: 167, column: 17, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !2024, file: !1282, line: 167, column: 17)
!2041 = !DILocation(line: 167, column: 22, scope: !2040)
!2042 = !DILocation(line: 167, column: 25, scope: !2043)
!2043 = !DILexicalBlockFile(scope: !2040, file: !1282, discriminator: 1)
!2044 = !DILocation(line: 167, column: 17, scope: !2043)
!2045 = !DILocation(line: 168, column: 21, scope: !2046)
!2046 = distinct !DILexicalBlock(scope: !2047, file: !1282, line: 168, column: 21)
!2047 = distinct !DILexicalBlock(scope: !2040, file: !1282, line: 167, column: 41)
!2048 = !DILocation(line: 168, column: 25, scope: !2046)
!2049 = !DILocation(line: 168, column: 35, scope: !2046)
!2050 = !DILocation(line: 168, column: 23, scope: !2046)
!2051 = !DILocation(line: 168, column: 21, scope: !2047)
!2052 = !DILocation(line: 169, column: 33, scope: !2046)
!2053 = !DILocation(line: 169, column: 65, scope: !2046)
!2054 = !DILocation(line: 169, column: 45, scope: !2046)
!2055 = !DILocation(line: 169, column: 55, scope: !2046)
!2056 = !DILocation(line: 169, column: 43, scope: !2046)
!2057 = !DILocation(line: 169, column: 31, scope: !2046)
!2058 = !DILocation(line: 169, column: 21, scope: !2046)
!2059 = !DILocation(line: 171, column: 33, scope: !2046)
!2060 = !DILocation(line: 171, column: 31, scope: !2046)
!2061 = !DILocation(line: 172, column: 37, scope: !2047)
!2062 = !DILocation(line: 172, column: 32, scope: !2047)
!2063 = !DILocation(line: 172, column: 17, scope: !2047)
!2064 = !DILocation(line: 172, column: 22, scope: !2047)
!2065 = !DILocation(line: 172, column: 35, scope: !2047)
!2066 = !DILocation(line: 173, column: 21, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !2047, file: !1282, line: 173, column: 21)
!2068 = !DILocation(line: 173, column: 31, scope: !2067)
!2069 = !DILocation(line: 173, column: 21, scope: !2047)
!2070 = !DILocation(line: 174, column: 23, scope: !2067)
!2071 = !DILocation(line: 174, column: 21, scope: !2067)
!2072 = !DILocation(line: 176, column: 23, scope: !2067)
!2073 = !DILocation(line: 177, column: 18, scope: !2047)
!2074 = !DILocation(line: 178, column: 13, scope: !2047)
!2075 = !DILocation(line: 179, column: 9, scope: !2024)
!2076 = !DILocation(line: 161, column: 53, scope: !2077)
!2077 = !DILexicalBlockFile(scope: !2018, file: !1282, discriminator: 2)
!2078 = !DILocation(line: 161, column: 9, scope: !2077)
!2079 = distinct !{!2079, !2080}
!2080 = !DILocation(line: 161, column: 9, scope: !1932)
!2081 = !DILocation(line: 181, column: 13, scope: !2082)
!2082 = distinct !DILexicalBlock(scope: !1932, file: !1282, line: 181, column: 13)
!2083 = !DILocation(line: 181, column: 15, scope: !2082)
!2084 = !DILocation(line: 181, column: 13, scope: !1932)
!2085 = !DILocation(line: 182, column: 20, scope: !2086)
!2086 = distinct !DILexicalBlock(scope: !2082, file: !1282, line: 181, column: 64)
!2087 = !DILocation(line: 183, column: 52, scope: !2086)
!2088 = !DILocation(line: 182, column: 13, scope: !2086)
!2089 = !DILocation(line: 184, column: 13, scope: !2086)
!2090 = !DILocation(line: 187, column: 31, scope: !1932)
!2091 = !DILocation(line: 187, column: 9, scope: !1932)
!2092 = !DILocation(line: 187, column: 14, scope: !1932)
!2093 = !DILocation(line: 187, column: 29, scope: !1932)
!2094 = !DILocation(line: 188, column: 34, scope: !1932)
!2095 = !DILocation(line: 188, column: 9, scope: !1932)
!2096 = !DILocation(line: 188, column: 14, scope: !1932)
!2097 = !DILocation(line: 188, column: 32, scope: !1932)
!2098 = !DILocation(line: 190, column: 13, scope: !2099)
!2099 = distinct !DILexicalBlock(scope: !1932, file: !1282, line: 190, column: 13)
!2100 = !DILocation(line: 190, column: 18, scope: !2099)
!2101 = !DILocation(line: 190, column: 33, scope: !2099)
!2102 = !DILocation(line: 190, column: 13, scope: !1932)
!2103 = !DILocalVariable(name: "used", scope: !2104, file: !1282, line: 191, type: !977)
!2104 = distinct !DILexicalBlock(scope: !2099, file: !1282, line: 190, column: 39)
!2105 = !DILocation(line: 191, column: 17, scope: !2104)
!2106 = !DILocalVariable(name: "tmp", scope: !2104, file: !1282, line: 191, type: !977)
!2107 = !DILocation(line: 191, column: 23, scope: !2104)
!2108 = !DILocation(line: 192, column: 20, scope: !2109)
!2109 = distinct !DILexicalBlock(scope: !2104, file: !1282, line: 192, column: 13)
!2110 = !DILocation(line: 192, column: 18, scope: !2109)
!2111 = !DILocation(line: 192, column: 25, scope: !2112)
!2112 = !DILexicalBlockFile(scope: !2113, file: !1282, discriminator: 1)
!2113 = distinct !DILexicalBlock(scope: !2109, file: !1282, line: 192, column: 13)
!2114 = !DILocation(line: 192, column: 29, scope: !2112)
!2115 = !DILocation(line: 192, column: 34, scope: !2112)
!2116 = !DILocation(line: 192, column: 27, scope: !2112)
!2117 = !DILocation(line: 192, column: 13, scope: !2112)
!2118 = !DILocation(line: 193, column: 44, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2113, file: !1282, line: 192, column: 55)
!2120 = !DILocation(line: 193, column: 29, scope: !2119)
!2121 = !DILocation(line: 193, column: 34, scope: !2119)
!2122 = !DILocation(line: 193, column: 27, scope: !2119)
!2123 = !DILocation(line: 194, column: 34, scope: !2119)
!2124 = !DILocation(line: 194, column: 24, scope: !2119)
!2125 = !DILocation(line: 194, column: 29, scope: !2119)
!2126 = !DILocation(line: 194, column: 22, scope: !2119)
!2127 = !DILocation(line: 195, column: 26, scope: !2128)
!2128 = distinct !DILexicalBlock(scope: !2119, file: !1282, line: 195, column: 17)
!2129 = !DILocation(line: 195, column: 28, scope: !2128)
!2130 = !DILocation(line: 195, column: 24, scope: !2128)
!2131 = !DILocation(line: 195, column: 22, scope: !2128)
!2132 = !DILocation(line: 195, column: 33, scope: !2133)
!2133 = !DILexicalBlockFile(scope: !2134, file: !1282, discriminator: 1)
!2134 = distinct !DILexicalBlock(scope: !2128, file: !1282, line: 195, column: 17)
!2135 = !DILocation(line: 195, column: 35, scope: !2133)
!2136 = !DILocation(line: 195, column: 17, scope: !2133)
!2137 = !DILocation(line: 196, column: 42, scope: !2138)
!2138 = distinct !DILexicalBlock(scope: !2134, file: !1282, line: 195, column: 46)
!2139 = !DILocation(line: 196, column: 27, scope: !2138)
!2140 = !DILocation(line: 196, column: 32, scope: !2138)
!2141 = !DILocation(line: 196, column: 25, scope: !2138)
!2142 = !DILocation(line: 197, column: 25, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2138, file: !1282, line: 197, column: 25)
!2144 = !DILocation(line: 197, column: 37, scope: !2143)
!2145 = !DILocation(line: 197, column: 35, scope: !2143)
!2146 = !DILocation(line: 197, column: 25, scope: !2138)
!2147 = !DILocation(line: 198, column: 49, scope: !2148)
!2148 = distinct !DILexicalBlock(scope: !2143, file: !1282, line: 197, column: 42)
!2149 = !DILocation(line: 198, column: 40, scope: !2148)
!2150 = !DILocation(line: 198, column: 42, scope: !2148)
!2151 = !DILocation(line: 198, column: 25, scope: !2148)
!2152 = !DILocation(line: 198, column: 30, scope: !2148)
!2153 = !DILocation(line: 198, column: 47, scope: !2148)
!2154 = !DILocation(line: 199, column: 54, scope: !2148)
!2155 = !DILocation(line: 199, column: 44, scope: !2148)
!2156 = !DILocation(line: 199, column: 49, scope: !2148)
!2157 = !DILocation(line: 199, column: 35, scope: !2148)
!2158 = !DILocation(line: 199, column: 37, scope: !2148)
!2159 = !DILocation(line: 199, column: 25, scope: !2148)
!2160 = !DILocation(line: 199, column: 30, scope: !2148)
!2161 = !DILocation(line: 199, column: 42, scope: !2148)
!2162 = !DILocation(line: 200, column: 45, scope: !2148)
!2163 = !DILocation(line: 200, column: 40, scope: !2148)
!2164 = !DILocation(line: 200, column: 25, scope: !2148)
!2165 = !DILocation(line: 200, column: 30, scope: !2148)
!2166 = !DILocation(line: 200, column: 43, scope: !2148)
!2167 = !DILocation(line: 201, column: 40, scope: !2148)
!2168 = !DILocation(line: 201, column: 35, scope: !2148)
!2169 = !DILocation(line: 201, column: 25, scope: !2148)
!2170 = !DILocation(line: 201, column: 30, scope: !2148)
!2171 = !DILocation(line: 201, column: 38, scope: !2148)
!2172 = !DILocation(line: 202, column: 21, scope: !2148)
!2173 = !DILocation(line: 203, column: 17, scope: !2138)
!2174 = !DILocation(line: 195, column: 42, scope: !2175)
!2175 = !DILexicalBlockFile(scope: !2134, file: !1282, discriminator: 2)
!2176 = !DILocation(line: 195, column: 17, scope: !2175)
!2177 = distinct !{!2177, !2178}
!2178 = !DILocation(line: 195, column: 17, scope: !2119)
!2179 = !DILocation(line: 204, column: 13, scope: !2119)
!2180 = !DILocation(line: 192, column: 51, scope: !2181)
!2181 = !DILexicalBlockFile(scope: !2113, file: !1282, discriminator: 2)
!2182 = !DILocation(line: 192, column: 13, scope: !2181)
!2183 = distinct !{!2183, !2184}
!2184 = !DILocation(line: 192, column: 13, scope: !2104)
!2185 = !DILocation(line: 205, column: 9, scope: !2104)
!2186 = !DILocation(line: 206, column: 14, scope: !2187)
!2187 = distinct !DILexicalBlock(scope: !1932, file: !1282, line: 206, column: 13)
!2188 = !DILocation(line: 206, column: 19, scope: !2187)
!2189 = !DILocation(line: 206, column: 37, scope: !2187)
!2190 = !DILocation(line: 206, column: 43, scope: !2187)
!2191 = !DILocation(line: 206, column: 13, scope: !1932)
!2192 = !DILocalVariable(name: "used", scope: !2193, file: !1282, line: 207, type: !977)
!2193 = distinct !DILexicalBlock(scope: !2187, file: !1282, line: 206, column: 49)
!2194 = !DILocation(line: 207, column: 17, scope: !2193)
!2195 = !DILocation(line: 208, column: 17, scope: !2193)
!2196 = !DILocation(line: 208, column: 22, scope: !2193)
!2197 = !DILocation(line: 208, column: 40, scope: !2193)
!2198 = !DILocation(line: 208, column: 15, scope: !2193)
!2199 = !DILocation(line: 210, column: 20, scope: !2200)
!2200 = distinct !DILexicalBlock(scope: !2193, file: !1282, line: 210, column: 13)
!2201 = !DILocation(line: 210, column: 18, scope: !2200)
!2202 = !DILocation(line: 210, column: 25, scope: !2203)
!2203 = !DILexicalBlockFile(scope: !2204, file: !1282, discriminator: 1)
!2204 = distinct !DILexicalBlock(scope: !2200, file: !1282, line: 210, column: 13)
!2205 = !DILocation(line: 210, column: 29, scope: !2203)
!2206 = !DILocation(line: 210, column: 34, scope: !2203)
!2207 = !DILocation(line: 210, column: 52, scope: !2203)
!2208 = !DILocation(line: 210, column: 27, scope: !2203)
!2209 = !DILocation(line: 210, column: 13, scope: !2203)
!2210 = !DILocation(line: 211, column: 44, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !2204, file: !1282, line: 210, column: 63)
!2212 = !DILocation(line: 211, column: 29, scope: !2211)
!2213 = !DILocation(line: 211, column: 34, scope: !2211)
!2214 = !DILocation(line: 211, column: 27, scope: !2211)
!2215 = !DILocation(line: 212, column: 34, scope: !2211)
!2216 = !DILocation(line: 212, column: 24, scope: !2211)
!2217 = !DILocation(line: 212, column: 29, scope: !2211)
!2218 = !DILocation(line: 212, column: 22, scope: !2211)
!2219 = !DILocation(line: 213, column: 52, scope: !2211)
!2220 = !DILocation(line: 213, column: 37, scope: !2211)
!2221 = !DILocation(line: 213, column: 42, scope: !2211)
!2222 = !DILocation(line: 213, column: 32, scope: !2211)
!2223 = !DILocation(line: 213, column: 17, scope: !2211)
!2224 = !DILocation(line: 213, column: 22, scope: !2211)
!2225 = !DILocation(line: 213, column: 35, scope: !2211)
!2226 = !DILocation(line: 214, column: 42, scope: !2211)
!2227 = !DILocation(line: 214, column: 32, scope: !2211)
!2228 = !DILocation(line: 214, column: 37, scope: !2211)
!2229 = !DILocation(line: 214, column: 27, scope: !2211)
!2230 = !DILocation(line: 214, column: 17, scope: !2211)
!2231 = !DILocation(line: 214, column: 22, scope: !2211)
!2232 = !DILocation(line: 214, column: 30, scope: !2211)
!2233 = !DILocation(line: 215, column: 37, scope: !2211)
!2234 = !DILocation(line: 215, column: 32, scope: !2211)
!2235 = !DILocation(line: 215, column: 17, scope: !2211)
!2236 = !DILocation(line: 215, column: 22, scope: !2211)
!2237 = !DILocation(line: 215, column: 35, scope: !2211)
!2238 = !DILocation(line: 216, column: 32, scope: !2211)
!2239 = !DILocation(line: 216, column: 27, scope: !2211)
!2240 = !DILocation(line: 216, column: 17, scope: !2211)
!2241 = !DILocation(line: 216, column: 22, scope: !2211)
!2242 = !DILocation(line: 216, column: 30, scope: !2211)
!2243 = !DILocation(line: 217, column: 18, scope: !2211)
!2244 = !DILocation(line: 218, column: 13, scope: !2211)
!2245 = !DILocation(line: 210, column: 59, scope: !2246)
!2246 = !DILexicalBlockFile(scope: !2204, file: !1282, discriminator: 2)
!2247 = !DILocation(line: 210, column: 13, scope: !2246)
!2248 = distinct !{!2248, !2249}
!2249 = !DILocation(line: 210, column: 13, scope: !2193)
!2250 = !DILocation(line: 219, column: 9, scope: !2193)
!2251 = !DILocation(line: 220, column: 5, scope: !1932)
!2252 = !DILocalVariable(name: "prev", scope: !2253, file: !1282, line: 221, type: !978)
!2253 = distinct !DILexicalBlock(scope: !1929, file: !1282, line: 220, column: 12)
!2254 = !DILocation(line: 221, column: 22, scope: !2253)
!2255 = !DILocalVariable(name: "nb_positive_pics", scope: !2253, file: !1282, line: 221, type: !978)
!2256 = !DILocation(line: 221, column: 28, scope: !2253)
!2257 = !DILocation(line: 222, column: 53, scope: !2253)
!2258 = !DILocation(line: 222, column: 34, scope: !2253)
!2259 = !DILocation(line: 222, column: 9, scope: !2253)
!2260 = !DILocation(line: 222, column: 14, scope: !2253)
!2261 = !DILocation(line: 222, column: 32, scope: !2253)
!2262 = !DILocation(line: 223, column: 47, scope: !2253)
!2263 = !DILocation(line: 223, column: 28, scope: !2253)
!2264 = !DILocation(line: 223, column: 26, scope: !2253)
!2265 = !DILocation(line: 225, column: 13, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2253, file: !1282, line: 225, column: 13)
!2267 = !DILocation(line: 225, column: 18, scope: !2266)
!2268 = !DILocation(line: 225, column: 36, scope: !2266)
!2269 = !DILocation(line: 225, column: 53, scope: !2266)
!2270 = !DILocation(line: 226, column: 13, scope: !2266)
!2271 = !DILocation(line: 226, column: 30, scope: !2266)
!2272 = !DILocation(line: 225, column: 13, scope: !2273)
!2273 = !DILexicalBlockFile(scope: !2253, file: !1282, discriminator: 1)
!2274 = !DILocation(line: 227, column: 20, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2266, file: !1282, line: 226, column: 48)
!2276 = !DILocation(line: 227, column: 13, scope: !2275)
!2277 = !DILocation(line: 228, column: 13, scope: !2275)
!2278 = !DILocation(line: 231, column: 31, scope: !2253)
!2279 = !DILocation(line: 231, column: 36, scope: !2253)
!2280 = !DILocation(line: 231, column: 56, scope: !2253)
!2281 = !DILocation(line: 231, column: 54, scope: !2253)
!2282 = !DILocation(line: 231, column: 9, scope: !2253)
!2283 = !DILocation(line: 231, column: 14, scope: !2253)
!2284 = !DILocation(line: 231, column: 29, scope: !2253)
!2285 = !DILocation(line: 232, column: 13, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2253, file: !1282, line: 232, column: 13)
!2287 = !DILocation(line: 232, column: 18, scope: !2286)
!2288 = !DILocation(line: 232, column: 13, scope: !2253)
!2289 = !DILocation(line: 233, column: 18, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2286, file: !1282, line: 232, column: 34)
!2291 = !DILocation(line: 234, column: 20, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2290, file: !1282, line: 234, column: 13)
!2293 = !DILocation(line: 234, column: 18, scope: !2292)
!2294 = !DILocation(line: 234, column: 25, scope: !2295)
!2295 = !DILexicalBlockFile(scope: !2296, file: !1282, discriminator: 1)
!2296 = distinct !DILexicalBlock(scope: !2292, file: !1282, line: 234, column: 13)
!2297 = !DILocation(line: 234, column: 29, scope: !2295)
!2298 = !DILocation(line: 234, column: 34, scope: !2295)
!2299 = !DILocation(line: 234, column: 27, scope: !2295)
!2300 = !DILocation(line: 234, column: 13, scope: !2295)
!2301 = !DILocation(line: 235, column: 48, scope: !2302)
!2302 = distinct !DILexicalBlock(scope: !2296, file: !1282, line: 234, column: 58)
!2303 = !DILocation(line: 235, column: 29, scope: !2302)
!2304 = !DILocation(line: 235, column: 52, scope: !2302)
!2305 = !DILocation(line: 235, column: 27, scope: !2302)
!2306 = !DILocation(line: 236, column: 21, scope: !2307)
!2307 = distinct !DILexicalBlock(scope: !2302, file: !1282, line: 236, column: 21)
!2308 = !DILocation(line: 236, column: 31, scope: !2307)
!2309 = !DILocation(line: 236, column: 35, scope: !2307)
!2310 = !DILocation(line: 236, column: 38, scope: !2311)
!2311 = !DILexicalBlockFile(scope: !2307, file: !1282, discriminator: 1)
!2312 = !DILocation(line: 236, column: 48, scope: !2311)
!2313 = !DILocation(line: 236, column: 21, scope: !2311)
!2314 = !DILocation(line: 237, column: 28, scope: !2315)
!2315 = distinct !DILexicalBlock(scope: !2307, file: !1282, line: 236, column: 57)
!2316 = !DILocation(line: 239, column: 25, scope: !2315)
!2317 = !DILocation(line: 237, column: 21, scope: !2315)
!2318 = !DILocation(line: 240, column: 21, scope: !2315)
!2319 = !DILocation(line: 242, column: 25, scope: !2302)
!2320 = !DILocation(line: 242, column: 22, scope: !2302)
!2321 = !DILocation(line: 243, column: 37, scope: !2302)
!2322 = !DILocation(line: 243, column: 32, scope: !2302)
!2323 = !DILocation(line: 243, column: 17, scope: !2302)
!2324 = !DILocation(line: 243, column: 22, scope: !2302)
!2325 = !DILocation(line: 243, column: 35, scope: !2302)
!2326 = !DILocation(line: 244, column: 42, scope: !2302)
!2327 = !DILocation(line: 244, column: 32, scope: !2302)
!2328 = !DILocation(line: 244, column: 27, scope: !2302)
!2329 = !DILocation(line: 244, column: 17, scope: !2302)
!2330 = !DILocation(line: 244, column: 22, scope: !2302)
!2331 = !DILocation(line: 244, column: 30, scope: !2302)
!2332 = !DILocation(line: 245, column: 13, scope: !2302)
!2333 = !DILocation(line: 234, column: 54, scope: !2334)
!2334 = !DILexicalBlockFile(scope: !2296, file: !1282, discriminator: 2)
!2335 = !DILocation(line: 234, column: 13, scope: !2334)
!2336 = distinct !{!2336, !2337}
!2337 = !DILocation(line: 234, column: 13, scope: !2290)
!2338 = !DILocation(line: 246, column: 18, scope: !2290)
!2339 = !DILocation(line: 247, column: 20, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2290, file: !1282, line: 247, column: 13)
!2341 = !DILocation(line: 247, column: 18, scope: !2340)
!2342 = !DILocation(line: 247, column: 25, scope: !2343)
!2343 = !DILexicalBlockFile(scope: !2344, file: !1282, discriminator: 1)
!2344 = distinct !DILexicalBlock(scope: !2340, file: !1282, line: 247, column: 13)
!2345 = !DILocation(line: 247, column: 29, scope: !2343)
!2346 = !DILocation(line: 247, column: 27, scope: !2343)
!2347 = !DILocation(line: 247, column: 13, scope: !2343)
!2348 = !DILocation(line: 248, column: 48, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2344, file: !1282, line: 247, column: 52)
!2350 = !DILocation(line: 248, column: 29, scope: !2349)
!2351 = !DILocation(line: 248, column: 52, scope: !2349)
!2352 = !DILocation(line: 248, column: 27, scope: !2349)
!2353 = !DILocation(line: 249, column: 21, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2349, file: !1282, line: 249, column: 21)
!2355 = !DILocation(line: 249, column: 31, scope: !2354)
!2356 = !DILocation(line: 249, column: 35, scope: !2354)
!2357 = !DILocation(line: 249, column: 38, scope: !2358)
!2358 = !DILexicalBlockFile(scope: !2354, file: !1282, discriminator: 1)
!2359 = !DILocation(line: 249, column: 48, scope: !2358)
!2360 = !DILocation(line: 249, column: 21, scope: !2358)
!2361 = !DILocation(line: 250, column: 28, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2354, file: !1282, line: 249, column: 57)
!2363 = !DILocation(line: 252, column: 25, scope: !2362)
!2364 = !DILocation(line: 250, column: 21, scope: !2362)
!2365 = !DILocation(line: 253, column: 21, scope: !2362)
!2366 = !DILocation(line: 255, column: 25, scope: !2349)
!2367 = !DILocation(line: 255, column: 22, scope: !2349)
!2368 = !DILocation(line: 256, column: 62, scope: !2349)
!2369 = !DILocation(line: 256, column: 32, scope: !2349)
!2370 = !DILocation(line: 256, column: 37, scope: !2349)
!2371 = !DILocation(line: 256, column: 57, scope: !2349)
!2372 = !DILocation(line: 256, column: 55, scope: !2349)
!2373 = !DILocation(line: 256, column: 17, scope: !2349)
!2374 = !DILocation(line: 256, column: 22, scope: !2349)
!2375 = !DILocation(line: 256, column: 60, scope: !2349)
!2376 = !DILocation(line: 257, column: 67, scope: !2349)
!2377 = !DILocation(line: 257, column: 57, scope: !2349)
!2378 = !DILocation(line: 257, column: 27, scope: !2349)
!2379 = !DILocation(line: 257, column: 32, scope: !2349)
!2380 = !DILocation(line: 257, column: 52, scope: !2349)
!2381 = !DILocation(line: 257, column: 50, scope: !2349)
!2382 = !DILocation(line: 257, column: 17, scope: !2349)
!2383 = !DILocation(line: 257, column: 22, scope: !2349)
!2384 = !DILocation(line: 257, column: 55, scope: !2349)
!2385 = !DILocation(line: 258, column: 13, scope: !2349)
!2386 = !DILocation(line: 247, column: 48, scope: !2387)
!2387 = !DILexicalBlockFile(scope: !2344, file: !1282, discriminator: 2)
!2388 = !DILocation(line: 247, column: 13, scope: !2387)
!2389 = distinct !{!2389, !2390}
!2390 = !DILocation(line: 247, column: 13, scope: !2290)
!2391 = !DILocation(line: 259, column: 9, scope: !2290)
!2392 = !DILocation(line: 261, column: 5, scope: !1298)
!2393 = !DILocation(line: 262, column: 1, scope: !1298)
!2394 = distinct !DISubprogram(name: "get_bits1", scope: !1303, file: !1303, line: 487, type: !2395, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!2395 = !DISubroutineType(types: !2396)
!2396 = !{!978, !1301}
!2397 = !DILocalVariable(name: "s", arg: 1, scope: !2394, file: !1303, line: 487, type: !1301)
!2398 = !DILocation(line: 487, column: 53, scope: !2394)
!2399 = !DILocalVariable(name: "index", scope: !2394, file: !1303, line: 499, type: !978)
!2400 = !DILocation(line: 499, column: 18, scope: !2394)
!2401 = !DILocation(line: 499, column: 26, scope: !2394)
!2402 = !DILocation(line: 499, column: 29, scope: !2394)
!2403 = !DILocalVariable(name: "result", scope: !2394, file: !1303, line: 500, type: !985)
!2404 = !DILocation(line: 500, column: 13, scope: !2394)
!2405 = !DILocation(line: 500, column: 32, scope: !2394)
!2406 = !DILocation(line: 500, column: 38, scope: !2394)
!2407 = !DILocation(line: 500, column: 22, scope: !2394)
!2408 = !DILocation(line: 500, column: 25, scope: !2394)
!2409 = !DILocation(line: 505, column: 16, scope: !2394)
!2410 = !DILocation(line: 505, column: 22, scope: !2394)
!2411 = !DILocation(line: 505, column: 12, scope: !2394)
!2412 = !DILocation(line: 506, column: 12, scope: !2394)
!2413 = !DILocation(line: 509, column: 9, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2394, file: !1303, line: 509, column: 9)
!2415 = !DILocation(line: 509, column: 12, scope: !2414)
!2416 = !DILocation(line: 509, column: 20, scope: !2414)
!2417 = !DILocation(line: 509, column: 23, scope: !2414)
!2418 = !DILocation(line: 509, column: 18, scope: !2414)
!2419 = !DILocation(line: 509, column: 9, scope: !2394)
!2420 = !DILocation(line: 511, column: 14, scope: !2414)
!2421 = !DILocation(line: 511, column: 9, scope: !2414)
!2422 = !DILocation(line: 512, column: 16, scope: !2394)
!2423 = !DILocation(line: 512, column: 5, scope: !2394)
!2424 = !DILocation(line: 512, column: 8, scope: !2394)
!2425 = !DILocation(line: 512, column: 14, scope: !2394)
!2426 = !DILocation(line: 514, column: 12, scope: !2394)
!2427 = !DILocation(line: 514, column: 5, scope: !2394)
!2428 = distinct !DISubprogram(name: "get_ue_golomb_long", scope: !2429, file: !2429, line: 103, type: !2395, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!2429 = !DIFile(filename: "libavcodec/golomb.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2430 = !DILocalVariable(name: "gb", arg: 1, scope: !2428, file: !2429, line: 103, type: !1301)
!2431 = !DILocation(line: 103, column: 58, scope: !2428)
!2432 = !DILocalVariable(name: "buf", scope: !2428, file: !2429, line: 105, type: !978)
!2433 = !DILocation(line: 105, column: 14, scope: !2428)
!2434 = !DILocalVariable(name: "log", scope: !2428, file: !2429, line: 105, type: !978)
!2435 = !DILocation(line: 105, column: 19, scope: !2428)
!2436 = !DILocation(line: 107, column: 26, scope: !2428)
!2437 = !DILocation(line: 107, column: 11, scope: !2428)
!2438 = !DILocation(line: 107, column: 9, scope: !2428)
!2439 = !DILocation(line: 108, column: 37, scope: !2428)
!2440 = !DILocation(line: 108, column: 41, scope: !2428)
!2441 = !DILocation(line: 108, column: 22, scope: !2428)
!2442 = !DILocation(line: 108, column: 20, scope: !2428)
!2443 = !DILocation(line: 108, column: 14, scope: !2428)
!2444 = !DILocation(line: 108, column: 9, scope: !2428)
!2445 = !DILocation(line: 109, column: 20, scope: !2428)
!2446 = !DILocation(line: 109, column: 24, scope: !2428)
!2447 = !DILocation(line: 109, column: 5, scope: !2428)
!2448 = !DILocation(line: 111, column: 26, scope: !2428)
!2449 = !DILocation(line: 111, column: 30, scope: !2428)
!2450 = !DILocation(line: 111, column: 34, scope: !2428)
!2451 = !DILocation(line: 111, column: 12, scope: !2428)
!2452 = !DILocation(line: 111, column: 39, scope: !2428)
!2453 = !DILocation(line: 111, column: 5, scope: !2428)
!2454 = distinct !DISubprogram(name: "ff_hevc_decode_nal_vps", scope: !1282, file: !1282, line: 424, type: !2455, isLocal: false, isDefinition: true, scopeLine: 426, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{!977, !1301, !1312, !2457}
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64, align: 64)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCParamSets", file: !981, line: 408, baseType: !2459)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCParamSets", file: !981, line: 399, size: 6336, align: 64, elements: !2460)
!2460 = !{!2461, !2465, !2466, !2468, !2469, !2470}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "vps_list", scope: !2459, file: !981, line: 400, baseType: !2462, size: 1024, align: 64)
!2462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1476, size: 1024, align: 64, elements: !2463)
!2463 = !{!2464}
!2464 = !DISubrange(count: 16)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "sps_list", scope: !2459, file: !981, line: 401, baseType: !2462, size: 1024, align: 64, offset: 1024)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "pps_list", scope: !2459, file: !981, line: 402, baseType: !2467, size: 4096, align: 64, offset: 2048)
!2467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1476, size: 4096, align: 64, elements: !1139)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "vps", scope: !2459, file: !981, line: 405, baseType: !1205, size: 64, align: 64, offset: 6144)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "sps", scope: !2459, file: !981, line: 406, baseType: !1207, size: 64, align: 64, offset: 6208)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !2459, file: !981, line: 407, baseType: !1278, size: 64, align: 64, offset: 6272)
!2471 = !DILocalVariable(name: "gb", arg: 1, scope: !2454, file: !1282, line: 424, type: !1301)
!2472 = !DILocation(line: 424, column: 43, scope: !2454)
!2473 = !DILocalVariable(name: "avctx", arg: 2, scope: !2454, file: !1282, line: 424, type: !1312)
!2474 = !DILocation(line: 424, column: 63, scope: !2454)
!2475 = !DILocalVariable(name: "ps", arg: 3, scope: !2454, file: !1282, line: 425, type: !2457)
!2476 = !DILocation(line: 425, column: 43, scope: !2454)
!2477 = !DILocalVariable(name: "i", scope: !2454, file: !1282, line: 427, type: !977)
!2478 = !DILocation(line: 427, column: 9, scope: !2454)
!2479 = !DILocalVariable(name: "j", scope: !2454, file: !1282, line: 427, type: !977)
!2480 = !DILocation(line: 427, column: 11, scope: !2454)
!2481 = !DILocalVariable(name: "vps_id", scope: !2454, file: !1282, line: 428, type: !977)
!2482 = !DILocation(line: 428, column: 9, scope: !2454)
!2483 = !DILocalVariable(name: "nal_size", scope: !2454, file: !1282, line: 429, type: !2484)
!2484 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1580, line: 149, baseType: !1466)
!2485 = !DILocation(line: 429, column: 15, scope: !2454)
!2486 = !DILocalVariable(name: "vps", scope: !2454, file: !1282, line: 430, type: !979)
!2487 = !DILocation(line: 430, column: 14, scope: !2454)
!2488 = !DILocalVariable(name: "vps_buf", scope: !2454, file: !1282, line: 431, type: !1476)
!2489 = !DILocation(line: 431, column: 18, scope: !2454)
!2490 = !DILocation(line: 431, column: 28, scope: !2454)
!2491 = !DILocation(line: 433, column: 10, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2454, file: !1282, line: 433, column: 9)
!2493 = !DILocation(line: 433, column: 9, scope: !2454)
!2494 = !DILocation(line: 434, column: 9, scope: !2492)
!2495 = !DILocation(line: 435, column: 21, scope: !2454)
!2496 = !DILocation(line: 435, column: 30, scope: !2454)
!2497 = !DILocation(line: 435, column: 11, scope: !2454)
!2498 = !DILocation(line: 435, column: 9, scope: !2454)
!2499 = !DILocation(line: 437, column: 12, scope: !2454)
!2500 = !DILocation(line: 437, column: 5, scope: !2454)
!2501 = !DILocation(line: 439, column: 16, scope: !2454)
!2502 = !DILocation(line: 439, column: 20, scope: !2454)
!2503 = !DILocation(line: 439, column: 33, scope: !2454)
!2504 = !DILocation(line: 439, column: 37, scope: !2454)
!2505 = !DILocation(line: 439, column: 31, scope: !2454)
!2506 = !DILocation(line: 439, column: 14, scope: !2454)
!2507 = !DILocation(line: 440, column: 9, scope: !2508)
!2508 = distinct !DILexicalBlock(scope: !2454, file: !1282, line: 440, column: 9)
!2509 = !DILocation(line: 440, column: 18, scope: !2508)
!2510 = !DILocation(line: 440, column: 9, scope: !2454)
!2511 = !DILocation(line: 441, column: 16, scope: !2512)
!2512 = distinct !DILexicalBlock(scope: !2508, file: !1282, line: 440, column: 39)
!2513 = !DILocation(line: 443, column: 16, scope: !2512)
!2514 = !DILocation(line: 441, column: 9, scope: !2512)
!2515 = !DILocation(line: 444, column: 9, scope: !2512)
!2516 = !DILocation(line: 444, column: 14, scope: !2512)
!2517 = !DILocation(line: 444, column: 24, scope: !2512)
!2518 = !DILocation(line: 445, column: 5, scope: !2512)
!2519 = !DILocation(line: 446, column: 26, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2508, file: !1282, line: 445, column: 12)
!2521 = !DILocation(line: 446, column: 9, scope: !2520)
!2522 = !DILocation(line: 446, column: 14, scope: !2520)
!2523 = !DILocation(line: 446, column: 24, scope: !2520)
!2524 = !DILocation(line: 448, column: 12, scope: !2454)
!2525 = !DILocation(line: 448, column: 17, scope: !2454)
!2526 = !DILocation(line: 448, column: 5, scope: !2454)
!2527 = !DILocation(line: 448, column: 23, scope: !2454)
!2528 = !DILocation(line: 448, column: 27, scope: !2454)
!2529 = !DILocation(line: 448, column: 35, scope: !2454)
!2530 = !DILocation(line: 448, column: 40, scope: !2454)
!2531 = !DILocation(line: 450, column: 23, scope: !2454)
!2532 = !DILocation(line: 450, column: 14, scope: !2454)
!2533 = !DILocation(line: 450, column: 12, scope: !2454)
!2534 = !DILocation(line: 451, column: 9, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2454, file: !1282, line: 451, column: 9)
!2536 = !DILocation(line: 451, column: 16, scope: !2535)
!2537 = !DILocation(line: 451, column: 9, scope: !2454)
!2538 = !DILocation(line: 452, column: 16, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2535, file: !1282, line: 451, column: 39)
!2540 = !DILocation(line: 452, column: 56, scope: !2539)
!2541 = !DILocation(line: 452, column: 9, scope: !2539)
!2542 = !DILocation(line: 453, column: 9, scope: !2539)
!2543 = !DILocation(line: 456, column: 18, scope: !2544)
!2544 = distinct !DILexicalBlock(scope: !2454, file: !1282, line: 456, column: 9)
!2545 = !DILocation(line: 456, column: 9, scope: !2544)
!2546 = !DILocation(line: 456, column: 25, scope: !2544)
!2547 = !DILocation(line: 456, column: 9, scope: !2454)
!2548 = !DILocation(line: 457, column: 16, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2544, file: !1282, line: 456, column: 31)
!2550 = !DILocation(line: 457, column: 9, scope: !2549)
!2551 = !DILocation(line: 458, column: 9, scope: !2549)
!2552 = !DILocation(line: 461, column: 36, scope: !2454)
!2553 = !DILocation(line: 461, column: 27, scope: !2454)
!2554 = !DILocation(line: 461, column: 43, scope: !2454)
!2555 = !DILocation(line: 461, column: 5, scope: !2454)
!2556 = !DILocation(line: 461, column: 10, scope: !2454)
!2557 = !DILocation(line: 461, column: 25, scope: !2454)
!2558 = !DILocation(line: 462, column: 40, scope: !2454)
!2559 = !DILocation(line: 462, column: 31, scope: !2454)
!2560 = !DILocation(line: 462, column: 47, scope: !2454)
!2561 = !DILocation(line: 462, column: 5, scope: !2454)
!2562 = !DILocation(line: 462, column: 10, scope: !2454)
!2563 = !DILocation(line: 462, column: 29, scope: !2454)
!2564 = !DILocation(line: 463, column: 51, scope: !2454)
!2565 = !DILocation(line: 463, column: 41, scope: !2454)
!2566 = !DILocation(line: 463, column: 5, scope: !2454)
!2567 = !DILocation(line: 463, column: 10, scope: !2454)
!2568 = !DILocation(line: 463, column: 39, scope: !2454)
!2569 = !DILocation(line: 465, column: 18, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2454, file: !1282, line: 465, column: 9)
!2571 = !DILocation(line: 465, column: 9, scope: !2570)
!2572 = !DILocation(line: 465, column: 26, scope: !2570)
!2573 = !DILocation(line: 465, column: 9, scope: !2454)
!2574 = !DILocation(line: 466, column: 16, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2570, file: !1282, line: 465, column: 37)
!2576 = !DILocation(line: 466, column: 9, scope: !2575)
!2577 = !DILocation(line: 467, column: 9, scope: !2575)
!2578 = !DILocation(line: 470, column: 9, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2454, file: !1282, line: 470, column: 9)
!2580 = !DILocation(line: 470, column: 14, scope: !2579)
!2581 = !DILocation(line: 470, column: 33, scope: !2579)
!2582 = !DILocation(line: 470, column: 9, scope: !2454)
!2583 = !DILocation(line: 471, column: 16, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2579, file: !1282, line: 470, column: 56)
!2585 = !DILocation(line: 472, column: 16, scope: !2584)
!2586 = !DILocation(line: 472, column: 21, scope: !2584)
!2587 = !DILocation(line: 471, column: 9, scope: !2584)
!2588 = !DILocation(line: 473, column: 9, scope: !2584)
!2589 = !DILocation(line: 476, column: 19, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2454, file: !1282, line: 476, column: 9)
!2591 = !DILocation(line: 476, column: 23, scope: !2590)
!2592 = !DILocation(line: 476, column: 31, scope: !2590)
!2593 = !DILocation(line: 476, column: 36, scope: !2590)
!2594 = !DILocation(line: 476, column: 41, scope: !2590)
!2595 = !DILocation(line: 476, column: 46, scope: !2590)
!2596 = !DILocation(line: 476, column: 9, scope: !2590)
!2597 = !DILocation(line: 476, column: 66, scope: !2590)
!2598 = !DILocation(line: 476, column: 9, scope: !2454)
!2599 = !DILocation(line: 477, column: 9, scope: !2590)
!2600 = !DILocation(line: 479, column: 63, scope: !2454)
!2601 = !DILocation(line: 479, column: 53, scope: !2454)
!2602 = !DILocation(line: 479, column: 5, scope: !2454)
!2603 = !DILocation(line: 479, column: 10, scope: !2454)
!2604 = !DILocation(line: 479, column: 51, scope: !2454)
!2605 = !DILocation(line: 481, column: 9, scope: !2454)
!2606 = !DILocation(line: 481, column: 14, scope: !2454)
!2607 = !DILocation(line: 481, column: 9, scope: !2608)
!2608 = !DILexicalBlockFile(scope: !2454, file: !1282, discriminator: 1)
!2609 = !DILocation(line: 481, column: 61, scope: !2610)
!2610 = !DILexicalBlockFile(scope: !2454, file: !1282, discriminator: 2)
!2611 = !DILocation(line: 481, column: 66, scope: !2610)
!2612 = !DILocation(line: 481, column: 85, scope: !2610)
!2613 = !DILocation(line: 481, column: 9, scope: !2610)
!2614 = !DILocation(line: 481, column: 9, scope: !2615)
!2615 = !DILexicalBlockFile(scope: !2454, file: !1282, discriminator: 3)
!2616 = !DILocation(line: 481, column: 7, scope: !2615)
!2617 = !DILocation(line: 482, column: 5, scope: !2454)
!2618 = !DILocation(line: 482, column: 12, scope: !2619)
!2619 = !DILexicalBlockFile(scope: !2620, file: !1282, discriminator: 1)
!2620 = distinct !DILexicalBlock(scope: !2621, file: !1282, line: 482, column: 5)
!2621 = distinct !DILexicalBlock(scope: !2454, file: !1282, line: 482, column: 5)
!2622 = !DILocation(line: 482, column: 16, scope: !2619)
!2623 = !DILocation(line: 482, column: 21, scope: !2619)
!2624 = !DILocation(line: 482, column: 14, scope: !2619)
!2625 = !DILocation(line: 482, column: 5, scope: !2619)
!2626 = !DILocation(line: 483, column: 64, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2620, file: !1282, line: 482, column: 46)
!2628 = !DILocation(line: 483, column: 45, scope: !2627)
!2629 = !DILocation(line: 483, column: 68, scope: !2627)
!2630 = !DILocation(line: 483, column: 40, scope: !2627)
!2631 = !DILocation(line: 483, column: 9, scope: !2627)
!2632 = !DILocation(line: 483, column: 14, scope: !2627)
!2633 = !DILocation(line: 483, column: 43, scope: !2627)
!2634 = !DILocation(line: 484, column: 59, scope: !2627)
!2635 = !DILocation(line: 484, column: 40, scope: !2627)
!2636 = !DILocation(line: 484, column: 35, scope: !2627)
!2637 = !DILocation(line: 484, column: 9, scope: !2627)
!2638 = !DILocation(line: 484, column: 14, scope: !2627)
!2639 = !DILocation(line: 484, column: 38, scope: !2627)
!2640 = !DILocation(line: 485, column: 63, scope: !2627)
!2641 = !DILocation(line: 485, column: 44, scope: !2627)
!2642 = !DILocation(line: 485, column: 67, scope: !2627)
!2643 = !DILocation(line: 485, column: 39, scope: !2627)
!2644 = !DILocation(line: 485, column: 9, scope: !2627)
!2645 = !DILocation(line: 485, column: 14, scope: !2627)
!2646 = !DILocation(line: 485, column: 42, scope: !2627)
!2647 = !DILocation(line: 487, column: 44, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2627, file: !1282, line: 487, column: 13)
!2649 = !DILocation(line: 487, column: 13, scope: !2648)
!2650 = !DILocation(line: 487, column: 18, scope: !2648)
!2651 = !DILocation(line: 487, column: 47, scope: !2648)
!2652 = !DILocation(line: 487, column: 67, scope: !2648)
!2653 = !DILocation(line: 487, column: 102, scope: !2654)
!2654 = !DILexicalBlockFile(scope: !2648, file: !1282, discriminator: 1)
!2655 = !DILocation(line: 487, column: 71, scope: !2654)
!2656 = !DILocation(line: 487, column: 76, scope: !2654)
!2657 = !DILocation(line: 487, column: 13, scope: !2654)
!2658 = !DILocation(line: 488, column: 20, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2648, file: !1282, line: 487, column: 106)
!2660 = !DILocation(line: 489, column: 51, scope: !2659)
!2661 = !DILocation(line: 489, column: 20, scope: !2659)
!2662 = !DILocation(line: 489, column: 25, scope: !2659)
!2663 = !DILocation(line: 489, column: 54, scope: !2659)
!2664 = !DILocation(line: 488, column: 13, scope: !2659)
!2665 = !DILocation(line: 490, column: 13, scope: !2659)
!2666 = !DILocation(line: 492, column: 39, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2627, file: !1282, line: 492, column: 13)
!2668 = !DILocation(line: 492, column: 13, scope: !2667)
!2669 = !DILocation(line: 492, column: 18, scope: !2667)
!2670 = !DILocation(line: 492, column: 75, scope: !2667)
!2671 = !DILocation(line: 492, column: 44, scope: !2667)
!2672 = !DILocation(line: 492, column: 49, scope: !2667)
!2673 = !DILocation(line: 492, column: 78, scope: !2667)
!2674 = !DILocation(line: 492, column: 42, scope: !2667)
!2675 = !DILocation(line: 492, column: 13, scope: !2627)
!2676 = !DILocation(line: 493, column: 20, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2667, file: !1282, line: 492, column: 83)
!2678 = !DILocation(line: 494, column: 46, scope: !2677)
!2679 = !DILocation(line: 494, column: 20, scope: !2677)
!2680 = !DILocation(line: 494, column: 25, scope: !2677)
!2681 = !DILocation(line: 493, column: 13, scope: !2677)
!2682 = !DILocation(line: 495, column: 17, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2677, file: !1282, line: 495, column: 17)
!2684 = !DILocation(line: 495, column: 24, scope: !2683)
!2685 = !DILocation(line: 495, column: 40, scope: !2683)
!2686 = !DILocation(line: 495, column: 17, scope: !2677)
!2687 = !DILocation(line: 496, column: 17, scope: !2683)
!2688 = !DILocation(line: 497, column: 9, scope: !2677)
!2689 = !DILocation(line: 498, column: 5, scope: !2627)
!2690 = !DILocation(line: 482, column: 42, scope: !2691)
!2691 = !DILexicalBlockFile(scope: !2620, file: !1282, discriminator: 2)
!2692 = !DILocation(line: 482, column: 5, scope: !2691)
!2693 = distinct !{!2693, !2617}
!2694 = !DILocation(line: 500, column: 38, scope: !2454)
!2695 = !DILocation(line: 500, column: 29, scope: !2454)
!2696 = !DILocation(line: 500, column: 5, scope: !2454)
!2697 = !DILocation(line: 500, column: 10, scope: !2454)
!2698 = !DILocation(line: 500, column: 27, scope: !2454)
!2699 = !DILocation(line: 501, column: 50, scope: !2454)
!2700 = !DILocation(line: 501, column: 31, scope: !2454)
!2701 = !DILocation(line: 501, column: 54, scope: !2454)
!2702 = !DILocation(line: 501, column: 5, scope: !2454)
!2703 = !DILocation(line: 501, column: 10, scope: !2454)
!2704 = !DILocation(line: 501, column: 29, scope: !2454)
!2705 = !DILocation(line: 502, column: 9, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2454, file: !1282, line: 502, column: 9)
!2707 = !DILocation(line: 502, column: 14, scope: !2706)
!2708 = !DILocation(line: 502, column: 33, scope: !2706)
!2709 = !DILocation(line: 502, column: 37, scope: !2706)
!2710 = !DILocation(line: 502, column: 40, scope: !2711)
!2711 = !DILexicalBlockFile(scope: !2706, file: !1282, discriminator: 1)
!2712 = !DILocation(line: 502, column: 45, scope: !2711)
!2713 = !DILocation(line: 502, column: 64, scope: !2711)
!2714 = !DILocation(line: 502, column: 71, scope: !2711)
!2715 = !DILocation(line: 503, column: 10, scope: !2706)
!2716 = !DILocation(line: 503, column: 15, scope: !2706)
!2717 = !DILocation(line: 503, column: 34, scope: !2706)
!2718 = !DILocation(line: 503, column: 44, scope: !2706)
!2719 = !DILocation(line: 503, column: 49, scope: !2706)
!2720 = !DILocation(line: 503, column: 66, scope: !2706)
!2721 = !DILocation(line: 503, column: 41, scope: !2706)
!2722 = !DILocation(line: 503, column: 89, scope: !2706)
!2723 = !DILocation(line: 503, column: 75, scope: !2706)
!2724 = !DILocation(line: 503, column: 73, scope: !2706)
!2725 = !DILocation(line: 502, column: 9, scope: !2610)
!2726 = !DILocation(line: 504, column: 16, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2706, file: !1282, line: 503, column: 94)
!2728 = !DILocation(line: 504, column: 9, scope: !2727)
!2729 = !DILocation(line: 505, column: 9, scope: !2727)
!2730 = !DILocation(line: 508, column: 12, scope: !2731)
!2731 = distinct !DILexicalBlock(scope: !2454, file: !1282, line: 508, column: 5)
!2732 = !DILocation(line: 508, column: 10, scope: !2731)
!2733 = !DILocation(line: 508, column: 17, scope: !2734)
!2734 = !DILexicalBlockFile(scope: !2735, file: !1282, discriminator: 1)
!2735 = distinct !DILexicalBlock(scope: !2731, file: !1282, line: 508, column: 5)
!2736 = !DILocation(line: 508, column: 21, scope: !2734)
!2737 = !DILocation(line: 508, column: 26, scope: !2734)
!2738 = !DILocation(line: 508, column: 19, scope: !2734)
!2739 = !DILocation(line: 508, column: 5, scope: !2734)
!2740 = !DILocation(line: 509, column: 16, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2735, file: !1282, line: 509, column: 9)
!2742 = !DILocation(line: 509, column: 14, scope: !2741)
!2743 = !DILocation(line: 509, column: 21, scope: !2744)
!2744 = !DILexicalBlockFile(scope: !2745, file: !1282, discriminator: 1)
!2745 = distinct !DILexicalBlock(scope: !2741, file: !1282, line: 509, column: 9)
!2746 = !DILocation(line: 509, column: 26, scope: !2744)
!2747 = !DILocation(line: 509, column: 31, scope: !2744)
!2748 = !DILocation(line: 509, column: 23, scope: !2744)
!2749 = !DILocation(line: 509, column: 9, scope: !2744)
!2750 = !DILocation(line: 510, column: 23, scope: !2745)
!2751 = !DILocation(line: 510, column: 13, scope: !2745)
!2752 = !DILocation(line: 509, column: 50, scope: !2753)
!2753 = !DILexicalBlockFile(scope: !2745, file: !1282, discriminator: 2)
!2754 = !DILocation(line: 509, column: 9, scope: !2753)
!2755 = distinct !{!2755, !2756}
!2756 = !DILocation(line: 509, column: 9, scope: !2735)
!2757 = !DILocation(line: 510, column: 28, scope: !2758)
!2758 = !DILexicalBlockFile(scope: !2741, file: !1282, discriminator: 1)
!2759 = !DILocation(line: 508, column: 47, scope: !2760)
!2760 = !DILexicalBlockFile(scope: !2735, file: !1282, discriminator: 2)
!2761 = !DILocation(line: 508, column: 5, scope: !2760)
!2762 = distinct !{!2762, !2763}
!2763 = !DILocation(line: 508, column: 5, scope: !2454)
!2764 = !DILocation(line: 512, column: 51, scope: !2454)
!2765 = !DILocation(line: 512, column: 41, scope: !2454)
!2766 = !DILocation(line: 512, column: 5, scope: !2454)
!2767 = !DILocation(line: 512, column: 10, scope: !2454)
!2768 = !DILocation(line: 512, column: 39, scope: !2454)
!2769 = !DILocation(line: 513, column: 9, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2454, file: !1282, line: 513, column: 9)
!2771 = !DILocation(line: 513, column: 14, scope: !2770)
!2772 = !DILocation(line: 513, column: 9, scope: !2454)
!2773 = !DILocation(line: 514, column: 52, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2770, file: !1282, line: 513, column: 44)
!2775 = !DILocation(line: 514, column: 38, scope: !2774)
!2776 = !DILocation(line: 514, column: 9, scope: !2774)
!2777 = !DILocation(line: 514, column: 14, scope: !2774)
!2778 = !DILocation(line: 514, column: 36, scope: !2774)
!2779 = !DILocation(line: 515, column: 45, scope: !2774)
!2780 = !DILocation(line: 515, column: 31, scope: !2774)
!2781 = !DILocation(line: 515, column: 9, scope: !2774)
!2782 = !DILocation(line: 515, column: 14, scope: !2774)
!2783 = !DILocation(line: 515, column: 29, scope: !2774)
!2784 = !DILocation(line: 516, column: 62, scope: !2774)
!2785 = !DILocation(line: 516, column: 52, scope: !2774)
!2786 = !DILocation(line: 516, column: 9, scope: !2774)
!2787 = !DILocation(line: 516, column: 14, scope: !2774)
!2788 = !DILocation(line: 516, column: 50, scope: !2774)
!2789 = !DILocation(line: 517, column: 13, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !2774, file: !1282, line: 517, column: 13)
!2791 = !DILocation(line: 517, column: 18, scope: !2790)
!2792 = !DILocation(line: 517, column: 13, scope: !2774)
!2793 = !DILocation(line: 518, column: 66, scope: !2790)
!2794 = !DILocation(line: 518, column: 47, scope: !2790)
!2795 = !DILocation(line: 518, column: 70, scope: !2790)
!2796 = !DILocation(line: 518, column: 13, scope: !2790)
!2797 = !DILocation(line: 518, column: 18, scope: !2790)
!2798 = !DILocation(line: 518, column: 45, scope: !2790)
!2799 = !DILocation(line: 519, column: 58, scope: !2774)
!2800 = !DILocation(line: 519, column: 39, scope: !2774)
!2801 = !DILocation(line: 519, column: 9, scope: !2774)
!2802 = !DILocation(line: 519, column: 14, scope: !2774)
!2803 = !DILocation(line: 519, column: 37, scope: !2774)
!2804 = !DILocation(line: 520, column: 13, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2774, file: !1282, line: 520, column: 13)
!2806 = !DILocation(line: 520, column: 18, scope: !2805)
!2807 = !DILocation(line: 520, column: 53, scope: !2805)
!2808 = !DILocation(line: 520, column: 58, scope: !2805)
!2809 = !DILocation(line: 520, column: 41, scope: !2805)
!2810 = !DILocation(line: 520, column: 13, scope: !2774)
!2811 = !DILocation(line: 521, column: 20, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2805, file: !1282, line: 520, column: 78)
!2813 = !DILocation(line: 522, column: 62, scope: !2812)
!2814 = !DILocation(line: 522, column: 67, scope: !2812)
!2815 = !DILocation(line: 521, column: 13, scope: !2812)
!2816 = !DILocation(line: 523, column: 13, scope: !2812)
!2817 = !DILocation(line: 525, column: 16, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2774, file: !1282, line: 525, column: 9)
!2819 = !DILocation(line: 525, column: 14, scope: !2818)
!2820 = !DILocation(line: 525, column: 21, scope: !2821)
!2821 = !DILexicalBlockFile(scope: !2822, file: !1282, discriminator: 1)
!2822 = distinct !DILexicalBlock(scope: !2818, file: !1282, line: 525, column: 9)
!2823 = !DILocation(line: 525, column: 25, scope: !2821)
!2824 = !DILocation(line: 525, column: 30, scope: !2821)
!2825 = !DILocation(line: 525, column: 23, scope: !2821)
!2826 = !DILocation(line: 525, column: 9, scope: !2821)
!2827 = !DILocalVariable(name: "common_inf_present", scope: !2828, file: !1282, line: 526, type: !977)
!2828 = distinct !DILexicalBlock(scope: !2822, file: !1282, line: 525, column: 59)
!2829 = !DILocation(line: 526, column: 17, scope: !2828)
!2830 = !DILocation(line: 528, column: 32, scope: !2828)
!2831 = !DILocation(line: 528, column: 13, scope: !2828)
!2832 = !DILocation(line: 529, column: 17, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2828, file: !1282, line: 529, column: 17)
!2834 = !DILocation(line: 529, column: 17, scope: !2828)
!2835 = !DILocation(line: 530, column: 48, scope: !2833)
!2836 = !DILocation(line: 530, column: 38, scope: !2833)
!2837 = !DILocation(line: 530, column: 36, scope: !2833)
!2838 = !DILocation(line: 530, column: 17, scope: !2833)
!2839 = !DILocation(line: 531, column: 24, scope: !2828)
!2840 = !DILocation(line: 531, column: 28, scope: !2828)
!2841 = !DILocation(line: 531, column: 48, scope: !2828)
!2842 = !DILocation(line: 531, column: 53, scope: !2828)
!2843 = !DILocation(line: 531, column: 13, scope: !2828)
!2844 = !DILocation(line: 532, column: 9, scope: !2828)
!2845 = !DILocation(line: 525, column: 55, scope: !2846)
!2846 = !DILexicalBlockFile(scope: !2822, file: !1282, discriminator: 2)
!2847 = !DILocation(line: 525, column: 9, scope: !2846)
!2848 = distinct !{!2848, !2849}
!2849 = !DILocation(line: 525, column: 9, scope: !2774)
!2850 = !DILocation(line: 533, column: 5, scope: !2774)
!2851 = !DILocation(line: 534, column: 15, scope: !2454)
!2852 = !DILocation(line: 534, column: 5, scope: !2454)
!2853 = !DILocation(line: 536, column: 23, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2454, file: !1282, line: 536, column: 9)
!2855 = !DILocation(line: 536, column: 9, scope: !2854)
!2856 = !DILocation(line: 536, column: 27, scope: !2854)
!2857 = !DILocation(line: 536, column: 9, scope: !2454)
!2858 = !DILocation(line: 537, column: 16, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2854, file: !1282, line: 536, column: 32)
!2860 = !DILocation(line: 538, column: 60, scope: !2859)
!2861 = !DILocation(line: 538, column: 46, scope: !2859)
!2862 = !DILocation(line: 538, column: 45, scope: !2859)
!2863 = !DILocation(line: 537, column: 9, scope: !2859)
!2864 = !DILocation(line: 539, column: 26, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2859, file: !1282, line: 539, column: 13)
!2866 = !DILocation(line: 539, column: 13, scope: !2865)
!2867 = !DILocation(line: 539, column: 17, scope: !2865)
!2868 = !DILocation(line: 539, column: 13, scope: !2859)
!2869 = !DILocation(line: 540, column: 13, scope: !2865)
!2870 = !DILocation(line: 541, column: 5, scope: !2859)
!2871 = !DILocation(line: 543, column: 22, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2454, file: !1282, line: 543, column: 9)
!2873 = !DILocation(line: 543, column: 9, scope: !2872)
!2874 = !DILocation(line: 543, column: 13, scope: !2872)
!2875 = !DILocation(line: 543, column: 30, scope: !2872)
!2876 = !DILocation(line: 544, column: 30, scope: !2872)
!2877 = !DILocation(line: 544, column: 17, scope: !2872)
!2878 = !DILocation(line: 544, column: 21, scope: !2872)
!2879 = !DILocation(line: 544, column: 39, scope: !2872)
!2880 = !DILocation(line: 544, column: 45, scope: !2872)
!2881 = !DILocation(line: 544, column: 54, scope: !2872)
!2882 = !DILocation(line: 544, column: 60, scope: !2872)
!2883 = !DILocation(line: 544, column: 69, scope: !2872)
!2884 = !DILocation(line: 544, column: 10, scope: !2872)
!2885 = !DILocation(line: 543, column: 9, scope: !2608)
!2886 = !DILocation(line: 545, column: 9, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2872, file: !1282, line: 544, column: 76)
!2888 = !DILocation(line: 546, column: 5, scope: !2887)
!2889 = !DILocation(line: 547, column: 20, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2872, file: !1282, line: 546, column: 12)
!2891 = !DILocation(line: 547, column: 24, scope: !2890)
!2892 = !DILocation(line: 547, column: 9, scope: !2890)
!2893 = !DILocation(line: 548, column: 32, scope: !2890)
!2894 = !DILocation(line: 548, column: 22, scope: !2890)
!2895 = !DILocation(line: 548, column: 9, scope: !2890)
!2896 = !DILocation(line: 548, column: 13, scope: !2890)
!2897 = !DILocation(line: 548, column: 30, scope: !2890)
!2898 = !DILocation(line: 551, column: 5, scope: !2454)
!2899 = !DILocation(line: 554, column: 5, scope: !2454)
!2900 = !DILocation(line: 555, column: 5, scope: !2454)
!2901 = !DILocation(line: 556, column: 1, scope: !2454)
!2902 = distinct !DISubprogram(name: "get_bits", scope: !1303, file: !1303, line: 381, type: !2903, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!2903 = !DISubroutineType(types: !2904)
!2904 = !{!978, !1301, !977}
!2905 = !DILocalVariable(name: "x", arg: 1, scope: !2906, file: !2907, line: 66, type: !1026)
!2906 = distinct !DISubprogram(name: "av_bswap32", scope: !2907, file: !2907, line: 66, type: !2908, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!2907 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2908 = !DISubroutineType(types: !2909)
!2909 = !{!1026, !1026}
!2910 = !DILocation(line: 66, column: 98, scope: !2906, inlinedAt: !2911)
!2911 = distinct !DILocation(line: 401, column: 16, scope: !2902)
!2912 = !DILocalVariable(name: "s", arg: 1, scope: !2902, file: !1303, line: 381, type: !1301)
!2913 = !DILocation(line: 381, column: 52, scope: !2902)
!2914 = !DILocalVariable(name: "n", arg: 2, scope: !2902, file: !1303, line: 381, type: !977)
!2915 = !DILocation(line: 381, column: 59, scope: !2902)
!2916 = !DILocalVariable(name: "tmp", scope: !2902, file: !1303, line: 383, type: !977)
!2917 = !DILocation(line: 383, column: 18, scope: !2902)
!2918 = !DILocalVariable(name: "re_index", scope: !2902, file: !1303, line: 399, type: !978)
!2919 = !DILocation(line: 399, column: 18, scope: !2902)
!2920 = !DILocation(line: 399, column: 30, scope: !2902)
!2921 = !DILocation(line: 399, column: 34, scope: !2902)
!2922 = !DILocalVariable(name: "re_cache", scope: !2902, file: !1303, line: 399, type: !978)
!2923 = !DILocation(line: 399, column: 78, scope: !2902)
!2924 = !DILocalVariable(name: "re_size_plus8", scope: !2902, file: !1303, line: 399, type: !978)
!2925 = !DILocation(line: 399, column: 101, scope: !2902)
!2926 = !DILocation(line: 399, column: 118, scope: !2902)
!2927 = !DILocation(line: 399, column: 122, scope: !2902)
!2928 = !DILocation(line: 401, column: 60, scope: !2902)
!2929 = !DILocation(line: 401, column: 64, scope: !2902)
!2930 = !DILocation(line: 401, column: 74, scope: !2902)
!2931 = !DILocation(line: 401, column: 83, scope: !2902)
!2932 = !DILocation(line: 401, column: 71, scope: !2902)
!2933 = !DILocation(line: 401, column: 92, scope: !2902)
!2934 = !DILocation(line: 401, column: 16, scope: !2902)
!2935 = !DILocation(line: 68, column: 16, scope: !2906, inlinedAt: !2911)
!2936 = !DILocation(line: 68, column: 19, scope: !2906, inlinedAt: !2911)
!2937 = !DILocation(line: 68, column: 24, scope: !2906, inlinedAt: !2911)
!2938 = !DILocation(line: 68, column: 38, scope: !2906, inlinedAt: !2911)
!2939 = !DILocation(line: 68, column: 41, scope: !2906, inlinedAt: !2911)
!2940 = !DILocation(line: 68, column: 46, scope: !2906, inlinedAt: !2911)
!2941 = !DILocation(line: 68, column: 34, scope: !2906, inlinedAt: !2911)
!2942 = !DILocation(line: 68, column: 57, scope: !2906, inlinedAt: !2911)
!2943 = !DILocation(line: 68, column: 69, scope: !2906, inlinedAt: !2911)
!2944 = !DILocation(line: 68, column: 72, scope: !2906, inlinedAt: !2911)
!2945 = !DILocation(line: 68, column: 79, scope: !2906, inlinedAt: !2911)
!2946 = !DILocation(line: 68, column: 84, scope: !2906, inlinedAt: !2911)
!2947 = !DILocation(line: 68, column: 99, scope: !2906, inlinedAt: !2911)
!2948 = !DILocation(line: 68, column: 102, scope: !2906, inlinedAt: !2911)
!2949 = !DILocation(line: 68, column: 109, scope: !2906, inlinedAt: !2911)
!2950 = !DILocation(line: 68, column: 114, scope: !2906, inlinedAt: !2911)
!2951 = !DILocation(line: 68, column: 94, scope: !2906, inlinedAt: !2911)
!2952 = !DILocation(line: 68, column: 63, scope: !2906, inlinedAt: !2911)
!2953 = !DILocation(line: 401, column: 100, scope: !2902)
!2954 = !DILocation(line: 401, column: 109, scope: !2902)
!2955 = !DILocation(line: 401, column: 96, scope: !2902)
!2956 = !DILocation(line: 401, column: 14, scope: !2902)
!2957 = !DILocation(line: 402, column: 21, scope: !2902)
!2958 = !DILocation(line: 402, column: 31, scope: !2902)
!2959 = !DILocation(line: 402, column: 11, scope: !2902)
!2960 = !DILocation(line: 402, column: 9, scope: !2902)
!2961 = !DILocation(line: 403, column: 18, scope: !2902)
!2962 = !DILocation(line: 403, column: 36, scope: !2902)
!2963 = !DILocation(line: 403, column: 48, scope: !2902)
!2964 = !DILocation(line: 403, column: 45, scope: !2902)
!2965 = !DILocation(line: 403, column: 33, scope: !2902)
!2966 = !DILocation(line: 403, column: 17, scope: !2902)
!2967 = !DILocation(line: 403, column: 55, scope: !2968)
!2968 = !DILexicalBlockFile(scope: !2902, file: !1303, discriminator: 1)
!2969 = !DILocation(line: 403, column: 67, scope: !2968)
!2970 = !DILocation(line: 403, column: 64, scope: !2968)
!2971 = !DILocation(line: 403, column: 17, scope: !2968)
!2972 = !DILocation(line: 403, column: 74, scope: !2973)
!2973 = !DILexicalBlockFile(scope: !2902, file: !1303, discriminator: 2)
!2974 = !DILocation(line: 403, column: 17, scope: !2973)
!2975 = !DILocation(line: 403, column: 17, scope: !2976)
!2976 = !DILexicalBlockFile(scope: !2902, file: !1303, discriminator: 3)
!2977 = !DILocation(line: 403, column: 14, scope: !2976)
!2978 = !DILocation(line: 404, column: 18, scope: !2902)
!2979 = !DILocation(line: 404, column: 6, scope: !2902)
!2980 = !DILocation(line: 404, column: 10, scope: !2902)
!2981 = !DILocation(line: 404, column: 16, scope: !2902)
!2982 = !DILocation(line: 406, column: 12, scope: !2902)
!2983 = !DILocation(line: 406, column: 5, scope: !2902)
!2984 = distinct !DISubprogram(name: "parse_ptl", scope: !1282, file: !1282, line: 305, type: !2985, isLocal: true, isDefinition: true, scopeLine: 307, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!2985 = !DISubroutineType(types: !2986)
!2986 = !{!977, !1301, !1312, !2987, !977}
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64, align: 64)
!2988 = !DILocalVariable(name: "gb", arg: 1, scope: !2984, file: !1282, line: 305, type: !1301)
!2989 = !DILocation(line: 305, column: 37, scope: !2984)
!2990 = !DILocalVariable(name: "avctx", arg: 2, scope: !2984, file: !1282, line: 305, type: !1312)
!2991 = !DILocation(line: 305, column: 57, scope: !2984)
!2992 = !DILocalVariable(name: "ptl", arg: 3, scope: !2984, file: !1282, line: 306, type: !2987)
!2993 = !DILocation(line: 306, column: 28, scope: !2984)
!2994 = !DILocalVariable(name: "max_num_sub_layers", arg: 4, scope: !2984, file: !1282, line: 306, type: !977)
!2995 = !DILocation(line: 306, column: 37, scope: !2984)
!2996 = !DILocalVariable(name: "i", scope: !2984, file: !1282, line: 308, type: !977)
!2997 = !DILocation(line: 308, column: 9, scope: !2984)
!2998 = !DILocation(line: 309, column: 35, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2984, file: !1282, line: 309, column: 9)
!3000 = !DILocation(line: 309, column: 39, scope: !2999)
!3001 = !DILocation(line: 309, column: 47, scope: !2999)
!3002 = !DILocation(line: 309, column: 52, scope: !2999)
!3003 = !DILocation(line: 309, column: 9, scope: !2999)
!3004 = !DILocation(line: 309, column: 65, scope: !2999)
!3005 = !DILocation(line: 309, column: 69, scope: !2999)
!3006 = !DILocation(line: 310, column: 23, scope: !2999)
!3007 = !DILocation(line: 310, column: 9, scope: !2999)
!3008 = !DILocation(line: 310, column: 41, scope: !2999)
!3009 = !DILocation(line: 310, column: 60, scope: !2999)
!3010 = !DILocation(line: 310, column: 64, scope: !2999)
!3011 = !DILocation(line: 310, column: 38, scope: !2999)
!3012 = !DILocation(line: 310, column: 31, scope: !2999)
!3013 = !DILocation(line: 310, column: 27, scope: !2999)
!3014 = !DILocation(line: 309, column: 9, scope: !3015)
!3015 = !DILexicalBlockFile(scope: !2984, file: !1282, discriminator: 1)
!3016 = !DILocation(line: 311, column: 16, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !2999, file: !1282, line: 310, column: 71)
!3018 = !DILocation(line: 311, column: 9, scope: !3017)
!3019 = !DILocation(line: 312, column: 9, scope: !3017)
!3020 = !DILocation(line: 315, column: 43, scope: !2984)
!3021 = !DILocation(line: 315, column: 34, scope: !2984)
!3022 = !DILocation(line: 315, column: 5, scope: !2984)
!3023 = !DILocation(line: 315, column: 10, scope: !2984)
!3024 = !DILocation(line: 315, column: 22, scope: !2984)
!3025 = !DILocation(line: 315, column: 32, scope: !2984)
!3026 = !DILocation(line: 317, column: 12, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !2984, file: !1282, line: 317, column: 5)
!3028 = !DILocation(line: 317, column: 10, scope: !3027)
!3029 = !DILocation(line: 317, column: 17, scope: !3030)
!3030 = !DILexicalBlockFile(scope: !3031, file: !1282, discriminator: 1)
!3031 = distinct !DILexicalBlock(scope: !3027, file: !1282, line: 317, column: 5)
!3032 = !DILocation(line: 317, column: 21, scope: !3030)
!3033 = !DILocation(line: 317, column: 40, scope: !3030)
!3034 = !DILocation(line: 317, column: 19, scope: !3030)
!3035 = !DILocation(line: 317, column: 5, scope: !3030)
!3036 = !DILocation(line: 318, column: 60, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3031, file: !1282, line: 317, column: 50)
!3038 = !DILocation(line: 318, column: 50, scope: !3037)
!3039 = !DILocation(line: 318, column: 45, scope: !3037)
!3040 = !DILocation(line: 318, column: 9, scope: !3037)
!3041 = !DILocation(line: 318, column: 14, scope: !3037)
!3042 = !DILocation(line: 318, column: 48, scope: !3037)
!3043 = !DILocation(line: 319, column: 58, scope: !3037)
!3044 = !DILocation(line: 319, column: 48, scope: !3037)
!3045 = !DILocation(line: 319, column: 43, scope: !3037)
!3046 = !DILocation(line: 319, column: 9, scope: !3037)
!3047 = !DILocation(line: 319, column: 14, scope: !3037)
!3048 = !DILocation(line: 319, column: 46, scope: !3037)
!3049 = !DILocation(line: 320, column: 5, scope: !3037)
!3050 = !DILocation(line: 317, column: 46, scope: !3051)
!3051 = !DILexicalBlockFile(scope: !3031, file: !1282, discriminator: 2)
!3052 = !DILocation(line: 317, column: 5, scope: !3051)
!3053 = distinct !{!3053, !3054}
!3054 = !DILocation(line: 317, column: 5, scope: !2984)
!3055 = !DILocation(line: 322, column: 9, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !2984, file: !1282, line: 322, column: 9)
!3057 = !DILocation(line: 322, column: 28, scope: !3056)
!3058 = !DILocation(line: 322, column: 31, scope: !3056)
!3059 = !DILocation(line: 322, column: 9, scope: !2984)
!3060 = !DILocation(line: 323, column: 18, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3056, file: !1282, line: 323, column: 9)
!3062 = !DILocation(line: 323, column: 37, scope: !3061)
!3063 = !DILocation(line: 323, column: 16, scope: !3061)
!3064 = !DILocation(line: 323, column: 14, scope: !3061)
!3065 = !DILocation(line: 323, column: 42, scope: !3066)
!3066 = !DILexicalBlockFile(scope: !3067, file: !1282, discriminator: 1)
!3067 = distinct !DILexicalBlock(scope: !3061, file: !1282, line: 323, column: 9)
!3068 = !DILocation(line: 323, column: 44, scope: !3066)
!3069 = !DILocation(line: 323, column: 9, scope: !3066)
!3070 = !DILocation(line: 324, column: 23, scope: !3067)
!3071 = !DILocation(line: 324, column: 13, scope: !3067)
!3072 = !DILocation(line: 323, column: 50, scope: !3073)
!3073 = !DILexicalBlockFile(scope: !3067, file: !1282, discriminator: 2)
!3074 = !DILocation(line: 323, column: 9, scope: !3073)
!3075 = distinct !{!3075, !3076}
!3076 = !DILocation(line: 323, column: 9, scope: !3056)
!3077 = !DILocation(line: 324, column: 28, scope: !3078)
!3078 = !DILexicalBlockFile(scope: !3061, file: !1282, discriminator: 1)
!3079 = !DILocation(line: 325, column: 12, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !2984, file: !1282, line: 325, column: 5)
!3081 = !DILocation(line: 325, column: 10, scope: !3080)
!3082 = !DILocation(line: 325, column: 17, scope: !3083)
!3083 = !DILexicalBlockFile(scope: !3084, file: !1282, discriminator: 1)
!3084 = distinct !DILexicalBlock(scope: !3080, file: !1282, line: 325, column: 5)
!3085 = !DILocation(line: 325, column: 21, scope: !3083)
!3086 = !DILocation(line: 325, column: 40, scope: !3083)
!3087 = !DILocation(line: 325, column: 19, scope: !3083)
!3088 = !DILocation(line: 325, column: 5, scope: !3083)
!3089 = !DILocation(line: 326, column: 49, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !1282, line: 326, column: 13)
!3091 = distinct !DILexicalBlock(scope: !3084, file: !1282, line: 325, column: 50)
!3092 = !DILocation(line: 326, column: 13, scope: !3090)
!3093 = !DILocation(line: 326, column: 18, scope: !3090)
!3094 = !DILocation(line: 326, column: 52, scope: !3090)
!3095 = !DILocation(line: 327, column: 39, scope: !3090)
!3096 = !DILocation(line: 327, column: 43, scope: !3090)
!3097 = !DILocation(line: 327, column: 70, scope: !3090)
!3098 = !DILocation(line: 327, column: 51, scope: !3090)
!3099 = !DILocation(line: 327, column: 56, scope: !3090)
!3100 = !DILocation(line: 327, column: 13, scope: !3090)
!3101 = !DILocation(line: 327, column: 74, scope: !3090)
!3102 = !DILocation(line: 326, column: 13, scope: !3103)
!3103 = !DILexicalBlockFile(scope: !3091, file: !1282, discriminator: 1)
!3104 = !DILocation(line: 328, column: 20, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3090, file: !1282, line: 327, column: 79)
!3106 = !DILocation(line: 329, column: 67, scope: !3105)
!3107 = !DILocation(line: 328, column: 13, scope: !3105)
!3108 = !DILocation(line: 330, column: 13, scope: !3105)
!3109 = !DILocation(line: 332, column: 47, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3091, file: !1282, line: 332, column: 13)
!3111 = !DILocation(line: 332, column: 13, scope: !3110)
!3112 = !DILocation(line: 332, column: 18, scope: !3110)
!3113 = !DILocation(line: 332, column: 13, scope: !3091)
!3114 = !DILocation(line: 333, column: 31, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3116, file: !1282, line: 333, column: 17)
!3116 = distinct !DILexicalBlock(scope: !3110, file: !1282, line: 332, column: 51)
!3117 = !DILocation(line: 333, column: 17, scope: !3115)
!3118 = !DILocation(line: 333, column: 35, scope: !3115)
!3119 = !DILocation(line: 333, column: 17, scope: !3116)
!3120 = !DILocation(line: 334, column: 24, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3115, file: !1282, line: 333, column: 40)
!3122 = !DILocation(line: 335, column: 71, scope: !3121)
!3123 = !DILocation(line: 334, column: 17, scope: !3121)
!3124 = !DILocation(line: 336, column: 17, scope: !3121)
!3125 = !DILocation(line: 338, column: 60, scope: !3115)
!3126 = !DILocation(line: 338, column: 51, scope: !3115)
!3127 = !DILocation(line: 338, column: 36, scope: !3115)
!3128 = !DILocation(line: 338, column: 17, scope: !3115)
!3129 = !DILocation(line: 338, column: 22, scope: !3115)
!3130 = !DILocation(line: 338, column: 39, scope: !3115)
!3131 = !DILocation(line: 338, column: 49, scope: !3115)
!3132 = !DILocation(line: 339, column: 9, scope: !3116)
!3133 = !DILocation(line: 340, column: 5, scope: !3091)
!3134 = !DILocation(line: 325, column: 46, scope: !3135)
!3135 = !DILexicalBlockFile(scope: !3084, file: !1282, discriminator: 2)
!3136 = !DILocation(line: 325, column: 5, scope: !3135)
!3137 = distinct !{!3137, !3138}
!3138 = !DILocation(line: 325, column: 5, scope: !2984)
!3139 = !DILocation(line: 342, column: 5, scope: !2984)
!3140 = !DILocation(line: 343, column: 1, scope: !2984)
!3141 = distinct !DISubprogram(name: "get_bits_left", scope: !1303, file: !1303, line: 814, type: !3142, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{!977, !1301}
!3144 = !DILocalVariable(name: "gb", arg: 1, scope: !3141, file: !1303, line: 814, type: !1301)
!3145 = !DILocation(line: 814, column: 48, scope: !3141)
!3146 = !DILocation(line: 816, column: 12, scope: !3141)
!3147 = !DILocation(line: 816, column: 16, scope: !3141)
!3148 = !DILocation(line: 816, column: 46, scope: !3141)
!3149 = !DILocation(line: 816, column: 31, scope: !3141)
!3150 = !DILocation(line: 816, column: 29, scope: !3141)
!3151 = !DILocation(line: 816, column: 5, scope: !3141)
!3152 = distinct !DISubprogram(name: "skip_bits", scope: !1303, file: !1303, line: 460, type: !3153, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{null, !1301, !977}
!3155 = !DILocalVariable(name: "s", arg: 1, scope: !3152, file: !1303, line: 460, type: !1301)
!3156 = !DILocation(line: 460, column: 45, scope: !3152)
!3157 = !DILocalVariable(name: "n", arg: 2, scope: !3152, file: !1303, line: 460, type: !977)
!3158 = !DILocation(line: 460, column: 52, scope: !3152)
!3159 = !DILocalVariable(name: "re_index", scope: !3152, file: !1303, line: 481, type: !978)
!3160 = !DILocation(line: 481, column: 18, scope: !3152)
!3161 = !DILocation(line: 481, column: 30, scope: !3152)
!3162 = !DILocation(line: 481, column: 34, scope: !3152)
!3163 = !DILocalVariable(name: "re_cache", scope: !3152, file: !1303, line: 481, type: !978)
!3164 = !DILocation(line: 481, column: 78, scope: !3152)
!3165 = !DILocalVariable(name: "re_size_plus8", scope: !3152, file: !1303, line: 481, type: !978)
!3166 = !DILocation(line: 481, column: 101, scope: !3152)
!3167 = !DILocation(line: 481, column: 118, scope: !3152)
!3168 = !DILocation(line: 481, column: 122, scope: !3152)
!3169 = !DILocation(line: 482, column: 18, scope: !3152)
!3170 = !DILocation(line: 482, column: 36, scope: !3152)
!3171 = !DILocation(line: 482, column: 48, scope: !3152)
!3172 = !DILocation(line: 482, column: 45, scope: !3152)
!3173 = !DILocation(line: 482, column: 33, scope: !3152)
!3174 = !DILocation(line: 482, column: 17, scope: !3152)
!3175 = !DILocation(line: 482, column: 55, scope: !3176)
!3176 = !DILexicalBlockFile(scope: !3152, file: !1303, discriminator: 1)
!3177 = !DILocation(line: 482, column: 67, scope: !3176)
!3178 = !DILocation(line: 482, column: 64, scope: !3176)
!3179 = !DILocation(line: 482, column: 17, scope: !3176)
!3180 = !DILocation(line: 482, column: 74, scope: !3181)
!3181 = !DILexicalBlockFile(scope: !3152, file: !1303, discriminator: 2)
!3182 = !DILocation(line: 482, column: 17, scope: !3181)
!3183 = !DILocation(line: 482, column: 17, scope: !3184)
!3184 = !DILexicalBlockFile(scope: !3152, file: !1303, discriminator: 3)
!3185 = !DILocation(line: 482, column: 14, scope: !3184)
!3186 = !DILocation(line: 483, column: 18, scope: !3152)
!3187 = !DILocation(line: 483, column: 6, scope: !3152)
!3188 = !DILocation(line: 483, column: 10, scope: !3152)
!3189 = !DILocation(line: 483, column: 16, scope: !3152)
!3190 = !DILocation(line: 485, column: 1, scope: !3152)
!3191 = distinct !DISubprogram(name: "get_bits_long", scope: !1303, file: !1303, line: 531, type: !2903, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!3192 = !DILocalVariable(name: "s", arg: 1, scope: !3191, file: !1303, line: 531, type: !1301)
!3193 = !DILocation(line: 531, column: 57, scope: !3191)
!3194 = !DILocalVariable(name: "n", arg: 2, scope: !3191, file: !1303, line: 531, type: !977)
!3195 = !DILocation(line: 531, column: 64, scope: !3191)
!3196 = !DILocation(line: 534, column: 10, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3191, file: !1303, line: 534, column: 9)
!3198 = !DILocation(line: 534, column: 9, scope: !3191)
!3199 = !DILocation(line: 535, column: 9, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3197, file: !1303, line: 534, column: 13)
!3201 = !DILocation(line: 540, column: 16, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3197, file: !1303, line: 540, column: 16)
!3203 = !DILocation(line: 540, column: 18, scope: !3202)
!3204 = !DILocation(line: 540, column: 16, scope: !3197)
!3205 = !DILocation(line: 541, column: 25, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3202, file: !1303, line: 540, column: 25)
!3207 = !DILocation(line: 541, column: 28, scope: !3206)
!3208 = !DILocation(line: 541, column: 16, scope: !3206)
!3209 = !DILocation(line: 541, column: 9, scope: !3206)
!3210 = !DILocalVariable(name: "ret", scope: !3211, file: !1303, line: 547, type: !978)
!3211 = distinct !DILexicalBlock(scope: !3202, file: !1303, line: 542, column: 12)
!3212 = !DILocation(line: 547, column: 18, scope: !3211)
!3213 = !DILocation(line: 547, column: 33, scope: !3211)
!3214 = !DILocation(line: 547, column: 24, scope: !3211)
!3215 = !DILocation(line: 547, column: 44, scope: !3211)
!3216 = !DILocation(line: 547, column: 46, scope: !3211)
!3217 = !DILocation(line: 547, column: 40, scope: !3211)
!3218 = !DILocation(line: 548, column: 16, scope: !3211)
!3219 = !DILocation(line: 548, column: 31, scope: !3211)
!3220 = !DILocation(line: 548, column: 34, scope: !3211)
!3221 = !DILocation(line: 548, column: 36, scope: !3211)
!3222 = !DILocation(line: 548, column: 22, scope: !3211)
!3223 = !DILocation(line: 548, column: 20, scope: !3211)
!3224 = !DILocation(line: 548, column: 9, scope: !3211)
!3225 = !DILocation(line: 552, column: 1, scope: !3191)
!3226 = distinct !DISubprogram(name: "decode_hrd", scope: !1282, file: !1282, line: 362, type: !3227, isLocal: true, isDefinition: true, scopeLine: 364, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!3227 = !DISubroutineType(types: !3228)
!3228 = !{!977, !1301, !977, !977}
!3229 = !DILocalVariable(name: "gb", arg: 1, scope: !3226, file: !1282, line: 362, type: !1301)
!3230 = !DILocation(line: 362, column: 38, scope: !3226)
!3231 = !DILocalVariable(name: "common_inf_present", arg: 2, scope: !3226, file: !1282, line: 362, type: !977)
!3232 = !DILocation(line: 362, column: 46, scope: !3226)
!3233 = !DILocalVariable(name: "max_sublayers", arg: 3, scope: !3226, file: !1282, line: 363, type: !977)
!3234 = !DILocation(line: 363, column: 28, scope: !3226)
!3235 = !DILocalVariable(name: "nal_params_present", scope: !3226, file: !1282, line: 365, type: !977)
!3236 = !DILocation(line: 365, column: 9, scope: !3226)
!3237 = !DILocalVariable(name: "vcl_params_present", scope: !3226, file: !1282, line: 365, type: !977)
!3238 = !DILocation(line: 365, column: 33, scope: !3226)
!3239 = !DILocalVariable(name: "subpic_params_present", scope: !3226, file: !1282, line: 366, type: !977)
!3240 = !DILocation(line: 366, column: 9, scope: !3226)
!3241 = !DILocalVariable(name: "i", scope: !3226, file: !1282, line: 367, type: !977)
!3242 = !DILocation(line: 367, column: 9, scope: !3226)
!3243 = !DILocation(line: 369, column: 9, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3226, file: !1282, line: 369, column: 9)
!3245 = !DILocation(line: 369, column: 9, scope: !3226)
!3246 = !DILocation(line: 370, column: 40, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3244, file: !1282, line: 369, column: 29)
!3248 = !DILocation(line: 370, column: 30, scope: !3247)
!3249 = !DILocation(line: 370, column: 28, scope: !3247)
!3250 = !DILocation(line: 371, column: 40, scope: !3247)
!3251 = !DILocation(line: 371, column: 30, scope: !3247)
!3252 = !DILocation(line: 371, column: 28, scope: !3247)
!3253 = !DILocation(line: 373, column: 13, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3247, file: !1282, line: 373, column: 13)
!3255 = !DILocation(line: 373, column: 32, scope: !3254)
!3256 = !DILocation(line: 373, column: 35, scope: !3257)
!3257 = !DILexicalBlockFile(scope: !3254, file: !1282, discriminator: 1)
!3258 = !DILocation(line: 373, column: 13, scope: !3257)
!3259 = !DILocation(line: 374, column: 47, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3254, file: !1282, line: 373, column: 55)
!3261 = !DILocation(line: 374, column: 37, scope: !3260)
!3262 = !DILocation(line: 374, column: 35, scope: !3260)
!3263 = !DILocation(line: 376, column: 17, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3260, file: !1282, line: 376, column: 17)
!3265 = !DILocation(line: 376, column: 17, scope: !3260)
!3266 = !DILocation(line: 377, column: 27, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3264, file: !1282, line: 376, column: 40)
!3268 = !DILocation(line: 377, column: 17, scope: !3267)
!3269 = !DILocation(line: 378, column: 27, scope: !3267)
!3270 = !DILocation(line: 378, column: 17, scope: !3267)
!3271 = !DILocation(line: 379, column: 27, scope: !3267)
!3272 = !DILocation(line: 379, column: 17, scope: !3267)
!3273 = !DILocation(line: 380, column: 27, scope: !3267)
!3274 = !DILocation(line: 380, column: 17, scope: !3267)
!3275 = !DILocation(line: 381, column: 13, scope: !3267)
!3276 = !DILocation(line: 383, column: 23, scope: !3260)
!3277 = !DILocation(line: 383, column: 13, scope: !3260)
!3278 = !DILocation(line: 384, column: 23, scope: !3260)
!3279 = !DILocation(line: 384, column: 13, scope: !3260)
!3280 = !DILocation(line: 386, column: 17, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3260, file: !1282, line: 386, column: 17)
!3282 = !DILocation(line: 386, column: 17, scope: !3260)
!3283 = !DILocation(line: 387, column: 27, scope: !3281)
!3284 = !DILocation(line: 387, column: 17, scope: !3281)
!3285 = !DILocation(line: 389, column: 23, scope: !3260)
!3286 = !DILocation(line: 389, column: 13, scope: !3260)
!3287 = !DILocation(line: 390, column: 23, scope: !3260)
!3288 = !DILocation(line: 390, column: 13, scope: !3260)
!3289 = !DILocation(line: 391, column: 23, scope: !3260)
!3290 = !DILocation(line: 391, column: 13, scope: !3260)
!3291 = !DILocation(line: 392, column: 9, scope: !3260)
!3292 = !DILocation(line: 393, column: 5, scope: !3247)
!3293 = !DILocation(line: 395, column: 12, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3226, file: !1282, line: 395, column: 5)
!3295 = !DILocation(line: 395, column: 10, scope: !3294)
!3296 = !DILocation(line: 395, column: 17, scope: !3297)
!3297 = !DILexicalBlockFile(scope: !3298, file: !1282, discriminator: 1)
!3298 = distinct !DILexicalBlock(scope: !3294, file: !1282, line: 395, column: 5)
!3299 = !DILocation(line: 395, column: 21, scope: !3297)
!3300 = !DILocation(line: 395, column: 19, scope: !3297)
!3301 = !DILocation(line: 395, column: 5, scope: !3297)
!3302 = !DILocalVariable(name: "low_delay", scope: !3303, file: !1282, line: 396, type: !977)
!3303 = distinct !DILexicalBlock(scope: !3298, file: !1282, line: 395, column: 41)
!3304 = !DILocation(line: 396, column: 13, scope: !3303)
!3305 = !DILocalVariable(name: "nb_cpb", scope: !3303, file: !1282, line: 397, type: !978)
!3306 = !DILocation(line: 397, column: 22, scope: !3303)
!3307 = !DILocalVariable(name: "fixed_rate", scope: !3303, file: !1282, line: 398, type: !977)
!3308 = !DILocation(line: 398, column: 13, scope: !3303)
!3309 = !DILocation(line: 398, column: 36, scope: !3303)
!3310 = !DILocation(line: 398, column: 26, scope: !3303)
!3311 = !DILocation(line: 400, column: 14, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3303, file: !1282, line: 400, column: 13)
!3313 = !DILocation(line: 400, column: 13, scope: !3303)
!3314 = !DILocation(line: 401, column: 36, scope: !3312)
!3315 = !DILocation(line: 401, column: 26, scope: !3312)
!3316 = !DILocation(line: 401, column: 24, scope: !3312)
!3317 = !DILocation(line: 401, column: 13, scope: !3312)
!3318 = !DILocation(line: 403, column: 13, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3303, file: !1282, line: 403, column: 13)
!3320 = !DILocation(line: 403, column: 13, scope: !3303)
!3321 = !DILocation(line: 404, column: 32, scope: !3319)
!3322 = !DILocation(line: 404, column: 13, scope: !3319)
!3323 = !DILocation(line: 406, column: 35, scope: !3319)
!3324 = !DILocation(line: 406, column: 25, scope: !3319)
!3325 = !DILocation(line: 406, column: 23, scope: !3319)
!3326 = !DILocation(line: 408, column: 14, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3303, file: !1282, line: 408, column: 13)
!3328 = !DILocation(line: 408, column: 13, scope: !3303)
!3329 = !DILocation(line: 409, column: 41, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3327, file: !1282, line: 408, column: 25)
!3331 = !DILocation(line: 409, column: 22, scope: !3330)
!3332 = !DILocation(line: 409, column: 45, scope: !3330)
!3333 = !DILocation(line: 409, column: 20, scope: !3330)
!3334 = !DILocation(line: 410, column: 17, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3330, file: !1282, line: 410, column: 17)
!3336 = !DILocation(line: 410, column: 24, scope: !3335)
!3337 = !DILocation(line: 410, column: 28, scope: !3335)
!3338 = !DILocation(line: 410, column: 31, scope: !3339)
!3339 = !DILexicalBlockFile(scope: !3335, file: !1282, discriminator: 1)
!3340 = !DILocation(line: 410, column: 38, scope: !3339)
!3341 = !DILocation(line: 410, column: 17, scope: !3339)
!3342 = !DILocation(line: 411, column: 56, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3335, file: !1282, line: 410, column: 44)
!3344 = !DILocation(line: 411, column: 17, scope: !3343)
!3345 = !DILocation(line: 412, column: 17, scope: !3343)
!3346 = !DILocation(line: 414, column: 9, scope: !3330)
!3347 = !DILocation(line: 416, column: 13, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3303, file: !1282, line: 416, column: 13)
!3349 = !DILocation(line: 416, column: 13, scope: !3303)
!3350 = !DILocation(line: 417, column: 33, scope: !3348)
!3351 = !DILocation(line: 417, column: 37, scope: !3348)
!3352 = !DILocation(line: 417, column: 45, scope: !3348)
!3353 = !DILocation(line: 417, column: 13, scope: !3348)
!3354 = !DILocation(line: 418, column: 13, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3303, file: !1282, line: 418, column: 13)
!3356 = !DILocation(line: 418, column: 13, scope: !3303)
!3357 = !DILocation(line: 419, column: 33, scope: !3355)
!3358 = !DILocation(line: 419, column: 37, scope: !3355)
!3359 = !DILocation(line: 419, column: 45, scope: !3355)
!3360 = !DILocation(line: 419, column: 13, scope: !3355)
!3361 = !DILocation(line: 420, column: 5, scope: !3303)
!3362 = !DILocation(line: 395, column: 37, scope: !3363)
!3363 = !DILexicalBlockFile(scope: !3298, file: !1282, discriminator: 2)
!3364 = !DILocation(line: 395, column: 5, scope: !3363)
!3365 = distinct !{!3365, !3366}
!3366 = !DILocation(line: 395, column: 5, scope: !3226)
!3367 = !DILocation(line: 421, column: 5, scope: !3226)
!3368 = !DILocation(line: 422, column: 1, scope: !3226)
!3369 = distinct !DISubprogram(name: "remove_vps", scope: !1282, file: !1282, line: 105, type: !3370, isLocal: true, isDefinition: true, scopeLine: 106, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!3370 = !DISubroutineType(types: !3371)
!3371 = !{null, !2457, !977}
!3372 = !DILocalVariable(name: "s", arg: 1, scope: !3369, file: !1282, line: 105, type: !2457)
!3373 = !DILocation(line: 105, column: 39, scope: !3369)
!3374 = !DILocalVariable(name: "id", arg: 2, scope: !3369, file: !1282, line: 105, type: !977)
!3375 = !DILocation(line: 105, column: 46, scope: !3369)
!3376 = !DILocalVariable(name: "i", scope: !3369, file: !1282, line: 107, type: !977)
!3377 = !DILocation(line: 107, column: 9, scope: !3369)
!3378 = !DILocation(line: 108, column: 21, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3369, file: !1282, line: 108, column: 9)
!3380 = !DILocation(line: 108, column: 9, scope: !3379)
!3381 = !DILocation(line: 108, column: 12, scope: !3379)
!3382 = !DILocation(line: 108, column: 9, scope: !3369)
!3383 = !DILocation(line: 109, column: 13, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3385, file: !1282, line: 109, column: 13)
!3385 = distinct !DILexicalBlock(scope: !3379, file: !1282, line: 108, column: 26)
!3386 = !DILocation(line: 109, column: 16, scope: !3384)
!3387 = !DILocation(line: 109, column: 51, scope: !3384)
!3388 = !DILocation(line: 109, column: 39, scope: !3384)
!3389 = !DILocation(line: 109, column: 42, scope: !3384)
!3390 = !DILocation(line: 109, column: 56, scope: !3384)
!3391 = !DILocation(line: 109, column: 23, scope: !3384)
!3392 = !DILocation(line: 109, column: 20, scope: !3384)
!3393 = !DILocation(line: 109, column: 13, scope: !3385)
!3394 = !DILocation(line: 110, column: 13, scope: !3384)
!3395 = !DILocation(line: 110, column: 16, scope: !3384)
!3396 = !DILocation(line: 110, column: 20, scope: !3384)
!3397 = !DILocation(line: 112, column: 16, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3385, file: !1282, line: 112, column: 9)
!3399 = !DILocation(line: 112, column: 14, scope: !3398)
!3400 = !DILocation(line: 112, column: 21, scope: !3401)
!3401 = !DILexicalBlockFile(scope: !3402, file: !1282, discriminator: 1)
!3402 = distinct !DILexicalBlock(scope: !3398, file: !1282, line: 112, column: 9)
!3403 = !DILocation(line: 112, column: 23, scope: !3401)
!3404 = !DILocation(line: 112, column: 9, scope: !3401)
!3405 = !DILocation(line: 113, column: 29, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3402, file: !1282, line: 113, column: 17)
!3407 = !DILocation(line: 113, column: 17, scope: !3406)
!3408 = !DILocation(line: 113, column: 20, scope: !3406)
!3409 = !DILocation(line: 113, column: 32, scope: !3406)
!3410 = !DILocation(line: 113, column: 58, scope: !3411)
!3411 = !DILexicalBlockFile(scope: !3406, file: !1282, discriminator: 1)
!3412 = !DILocation(line: 113, column: 46, scope: !3411)
!3413 = !DILocation(line: 113, column: 49, scope: !3411)
!3414 = !DILocation(line: 113, column: 62, scope: !3411)
!3415 = !DILocation(line: 113, column: 69, scope: !3411)
!3416 = !DILocation(line: 113, column: 79, scope: !3411)
!3417 = !DILocation(line: 113, column: 76, scope: !3411)
!3418 = !DILocation(line: 113, column: 17, scope: !3411)
!3419 = !DILocation(line: 114, column: 28, scope: !3406)
!3420 = !DILocation(line: 114, column: 31, scope: !3406)
!3421 = !DILocation(line: 114, column: 17, scope: !3406)
!3422 = !DILocation(line: 113, column: 79, scope: !3423)
!3423 = !DILexicalBlockFile(scope: !3406, file: !1282, discriminator: 2)
!3424 = !DILocation(line: 112, column: 76, scope: !3425)
!3425 = !DILexicalBlockFile(scope: !3402, file: !1282, discriminator: 2)
!3426 = !DILocation(line: 112, column: 9, scope: !3425)
!3427 = distinct !{!3427, !3428}
!3428 = !DILocation(line: 112, column: 9, scope: !3385)
!3429 = !DILocation(line: 115, column: 5, scope: !3385)
!3430 = !DILocation(line: 116, column: 34, scope: !3369)
!3431 = !DILocation(line: 116, column: 22, scope: !3369)
!3432 = !DILocation(line: 116, column: 25, scope: !3369)
!3433 = !DILocation(line: 116, column: 5, scope: !3369)
!3434 = !DILocation(line: 117, column: 1, scope: !3369)
!3435 = distinct !DISubprogram(name: "ff_hevc_parse_sps", scope: !1282, file: !1282, line: 874, type: !3436, isLocal: false, isDefinition: true, scopeLine: 876, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{!977, !1036, !1301, !1264, !977, !1540, !1312}
!3438 = !DILocalVariable(name: "a", arg: 1, scope: !3439, file: !3440, line: 241, type: !978)
!3439 = distinct !DISubprogram(name: "av_mod_uintp2_c", scope: !3440, file: !3440, line: 241, type: !3441, isLocal: true, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!3440 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3441 = !DISubroutineType(types: !3442)
!3442 = !{!978, !978, !978}
!3443 = !DILocation(line: 241, column: 103, scope: !3439, inlinedAt: !3444)
!3444 = distinct !DILocation(line: 1189, column: 9, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1188, column: 9)
!3446 = !DILocalVariable(name: "p", arg: 2, scope: !3439, file: !3440, line: 241, type: !978)
!3447 = !DILocation(line: 241, column: 115, scope: !3439, inlinedAt: !3444)
!3448 = !DILocation(line: 241, column: 103, scope: !3439, inlinedAt: !3449)
!3449 = distinct !DILocation(line: 1188, column: 9, scope: !3445)
!3450 = !DILocation(line: 241, column: 115, scope: !3439, inlinedAt: !3449)
!3451 = !DILocalVariable(name: "sps", arg: 1, scope: !3435, file: !1282, line: 874, type: !1036)
!3452 = !DILocation(line: 874, column: 32, scope: !3435)
!3453 = !DILocalVariable(name: "gb", arg: 2, scope: !3435, file: !1282, line: 874, type: !1301)
!3454 = !DILocation(line: 874, column: 52, scope: !3435)
!3455 = !DILocalVariable(name: "sps_id", arg: 3, scope: !3435, file: !1282, line: 874, type: !1264)
!3456 = !DILocation(line: 874, column: 70, scope: !3435)
!3457 = !DILocalVariable(name: "apply_defdispwin", arg: 4, scope: !3435, file: !1282, line: 875, type: !977)
!3458 = !DILocation(line: 875, column: 27, scope: !3435)
!3459 = !DILocalVariable(name: "vps_list", arg: 5, scope: !3435, file: !1282, line: 875, type: !1540)
!3460 = !DILocation(line: 875, column: 59, scope: !3435)
!3461 = !DILocalVariable(name: "avctx", arg: 6, scope: !3435, file: !1282, line: 875, type: !1312)
!3462 = !DILocation(line: 875, column: 85, scope: !3435)
!3463 = !DILocalVariable(name: "ow", scope: !3435, file: !1282, line: 877, type: !3464)
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64, align: 64)
!3465 = !DILocation(line: 877, column: 17, scope: !3435)
!3466 = !DILocalVariable(name: "ret", scope: !3435, file: !1282, line: 878, type: !977)
!3467 = !DILocation(line: 878, column: 9, scope: !3435)
!3468 = !DILocalVariable(name: "log2_diff_max_min_transform_block_size", scope: !3435, file: !1282, line: 879, type: !977)
!3469 = !DILocation(line: 879, column: 9, scope: !3435)
!3470 = !DILocalVariable(name: "bit_depth_chroma", scope: !3435, file: !1282, line: 880, type: !977)
!3471 = !DILocation(line: 880, column: 9, scope: !3435)
!3472 = !DILocalVariable(name: "start", scope: !3435, file: !1282, line: 880, type: !977)
!3473 = !DILocation(line: 880, column: 27, scope: !3435)
!3474 = !DILocalVariable(name: "vui_present", scope: !3435, file: !1282, line: 880, type: !977)
!3475 = !DILocation(line: 880, column: 34, scope: !3435)
!3476 = !DILocalVariable(name: "sublayer_ordering_info", scope: !3435, file: !1282, line: 880, type: !977)
!3477 = !DILocation(line: 880, column: 47, scope: !3435)
!3478 = !DILocalVariable(name: "i", scope: !3435, file: !1282, line: 881, type: !977)
!3479 = !DILocation(line: 881, column: 9, scope: !3435)
!3480 = !DILocation(line: 885, column: 28, scope: !3435)
!3481 = !DILocation(line: 885, column: 19, scope: !3435)
!3482 = !DILocation(line: 885, column: 5, scope: !3435)
!3483 = !DILocation(line: 885, column: 10, scope: !3435)
!3484 = !DILocation(line: 885, column: 17, scope: !3435)
!3485 = !DILocation(line: 886, column: 9, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 886, column: 9)
!3487 = !DILocation(line: 886, column: 14, scope: !3486)
!3488 = !DILocation(line: 886, column: 21, scope: !3486)
!3489 = !DILocation(line: 886, column: 9, scope: !3435)
!3490 = !DILocation(line: 887, column: 16, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3486, file: !1282, line: 886, column: 44)
!3492 = !DILocation(line: 887, column: 56, scope: !3491)
!3493 = !DILocation(line: 887, column: 61, scope: !3491)
!3494 = !DILocation(line: 887, column: 9, scope: !3491)
!3495 = !DILocation(line: 888, column: 9, scope: !3491)
!3496 = !DILocation(line: 891, column: 9, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 891, column: 9)
!3498 = !DILocation(line: 891, column: 18, scope: !3497)
!3499 = !DILocation(line: 891, column: 31, scope: !3500)
!3500 = !DILexicalBlockFile(scope: !3497, file: !1282, discriminator: 1)
!3501 = !DILocation(line: 891, column: 36, scope: !3500)
!3502 = !DILocation(line: 891, column: 22, scope: !3500)
!3503 = !DILocation(line: 891, column: 9, scope: !3500)
!3504 = !DILocation(line: 892, column: 16, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3497, file: !1282, line: 891, column: 45)
!3506 = !DILocation(line: 893, column: 16, scope: !3505)
!3507 = !DILocation(line: 893, column: 21, scope: !3505)
!3508 = !DILocation(line: 892, column: 9, scope: !3505)
!3509 = !DILocation(line: 894, column: 9, scope: !3505)
!3510 = !DILocation(line: 897, column: 36, scope: !3435)
!3511 = !DILocation(line: 897, column: 27, scope: !3435)
!3512 = !DILocation(line: 897, column: 43, scope: !3435)
!3513 = !DILocation(line: 897, column: 5, scope: !3435)
!3514 = !DILocation(line: 897, column: 10, scope: !3435)
!3515 = !DILocation(line: 897, column: 25, scope: !3435)
!3516 = !DILocation(line: 898, column: 9, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 898, column: 9)
!3518 = !DILocation(line: 898, column: 14, scope: !3517)
!3519 = !DILocation(line: 898, column: 29, scope: !3517)
!3520 = !DILocation(line: 898, column: 9, scope: !3435)
!3521 = !DILocation(line: 899, column: 16, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3517, file: !1282, line: 898, column: 52)
!3523 = !DILocation(line: 900, column: 16, scope: !3522)
!3524 = !DILocation(line: 900, column: 21, scope: !3522)
!3525 = !DILocation(line: 899, column: 9, scope: !3522)
!3526 = !DILocation(line: 901, column: 9, scope: !3522)
!3527 = !DILocation(line: 904, column: 46, scope: !3435)
!3528 = !DILocation(line: 904, column: 37, scope: !3435)
!3529 = !DILocation(line: 904, column: 5, scope: !3435)
!3530 = !DILocation(line: 904, column: 10, scope: !3435)
!3531 = !DILocation(line: 904, column: 35, scope: !3435)
!3532 = !DILocation(line: 906, column: 26, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 906, column: 9)
!3534 = !DILocation(line: 906, column: 30, scope: !3533)
!3535 = !DILocation(line: 906, column: 38, scope: !3533)
!3536 = !DILocation(line: 906, column: 43, scope: !3533)
!3537 = !DILocation(line: 906, column: 48, scope: !3533)
!3538 = !DILocation(line: 906, column: 53, scope: !3533)
!3539 = !DILocation(line: 906, column: 16, scope: !3533)
!3540 = !DILocation(line: 906, column: 14, scope: !3533)
!3541 = !DILocation(line: 906, column: 70, scope: !3533)
!3542 = !DILocation(line: 906, column: 9, scope: !3435)
!3543 = !DILocation(line: 907, column: 16, scope: !3533)
!3544 = !DILocation(line: 907, column: 9, scope: !3533)
!3545 = !DILocation(line: 909, column: 34, scope: !3435)
!3546 = !DILocation(line: 909, column: 15, scope: !3435)
!3547 = !DILocation(line: 909, column: 6, scope: !3435)
!3548 = !DILocation(line: 909, column: 13, scope: !3435)
!3549 = !DILocation(line: 910, column: 10, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 910, column: 9)
!3551 = !DILocation(line: 910, column: 9, scope: !3550)
!3552 = !DILocation(line: 910, column: 17, scope: !3550)
!3553 = !DILocation(line: 910, column: 9, scope: !3435)
!3554 = !DILocation(line: 911, column: 16, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3550, file: !1282, line: 910, column: 40)
!3556 = !DILocation(line: 911, column: 57, scope: !3555)
!3557 = !DILocation(line: 911, column: 56, scope: !3555)
!3558 = !DILocation(line: 911, column: 9, scope: !3555)
!3559 = !DILocation(line: 912, column: 9, scope: !3555)
!3560 = !DILocation(line: 915, column: 49, scope: !3435)
!3561 = !DILocation(line: 915, column: 30, scope: !3435)
!3562 = !DILocation(line: 915, column: 5, scope: !3435)
!3563 = !DILocation(line: 915, column: 10, scope: !3435)
!3564 = !DILocation(line: 915, column: 28, scope: !3435)
!3565 = !DILocation(line: 916, column: 9, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 916, column: 9)
!3567 = !DILocation(line: 916, column: 14, scope: !3566)
!3568 = !DILocation(line: 916, column: 32, scope: !3566)
!3569 = !DILocation(line: 916, column: 9, scope: !3435)
!3570 = !DILocation(line: 917, column: 16, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3566, file: !1282, line: 916, column: 38)
!3572 = !DILocation(line: 917, column: 64, scope: !3571)
!3573 = !DILocation(line: 917, column: 69, scope: !3571)
!3574 = !DILocation(line: 917, column: 9, scope: !3571)
!3575 = !DILocation(line: 918, column: 9, scope: !3571)
!3576 = !DILocation(line: 921, column: 9, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 921, column: 9)
!3578 = !DILocation(line: 921, column: 14, scope: !3577)
!3579 = !DILocation(line: 921, column: 32, scope: !3577)
!3580 = !DILocation(line: 921, column: 9, scope: !3435)
!3581 = !DILocation(line: 922, column: 53, scope: !3577)
!3582 = !DILocation(line: 922, column: 43, scope: !3577)
!3583 = !DILocation(line: 922, column: 9, scope: !3577)
!3584 = !DILocation(line: 922, column: 14, scope: !3577)
!3585 = !DILocation(line: 922, column: 41, scope: !3577)
!3586 = !DILocation(line: 924, column: 9, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 924, column: 9)
!3588 = !DILocation(line: 924, column: 14, scope: !3587)
!3589 = !DILocation(line: 924, column: 9, scope: !3435)
!3590 = !DILocation(line: 925, column: 9, scope: !3587)
!3591 = !DILocation(line: 925, column: 14, scope: !3587)
!3592 = !DILocation(line: 925, column: 32, scope: !3587)
!3593 = !DILocation(line: 927, column: 37, scope: !3435)
!3594 = !DILocation(line: 927, column: 18, scope: !3435)
!3595 = !DILocation(line: 927, column: 5, scope: !3435)
!3596 = !DILocation(line: 927, column: 10, scope: !3435)
!3597 = !DILocation(line: 927, column: 16, scope: !3435)
!3598 = !DILocation(line: 928, column: 38, scope: !3435)
!3599 = !DILocation(line: 928, column: 19, scope: !3435)
!3600 = !DILocation(line: 928, column: 5, scope: !3435)
!3601 = !DILocation(line: 928, column: 10, scope: !3435)
!3602 = !DILocation(line: 928, column: 17, scope: !3435)
!3603 = !DILocation(line: 929, column: 36, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 929, column: 9)
!3605 = !DILocation(line: 929, column: 41, scope: !3604)
!3606 = !DILocation(line: 930, column: 36, scope: !3604)
!3607 = !DILocation(line: 930, column: 41, scope: !3604)
!3608 = !DILocation(line: 930, column: 52, scope: !3604)
!3609 = !DILocation(line: 929, column: 16, scope: !3604)
!3610 = !DILocation(line: 929, column: 14, scope: !3604)
!3611 = !DILocation(line: 930, column: 60, scope: !3604)
!3612 = !DILocation(line: 929, column: 9, scope: !3435)
!3613 = !DILocation(line: 931, column: 16, scope: !3604)
!3614 = !DILocation(line: 931, column: 9, scope: !3604)
!3615 = !DILocation(line: 933, column: 19, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 933, column: 9)
!3617 = !DILocation(line: 933, column: 9, scope: !3616)
!3618 = !DILocation(line: 933, column: 9, scope: !3435)
!3619 = !DILocalVariable(name: "vert_mult", scope: !3620, file: !1282, line: 934, type: !977)
!3620 = distinct !DILexicalBlock(scope: !3616, file: !1282, line: 933, column: 24)
!3621 = !DILocation(line: 934, column: 13, scope: !3620)
!3622 = !DILocation(line: 934, column: 43, scope: !3620)
!3623 = !DILocation(line: 934, column: 48, scope: !3620)
!3624 = !DILocation(line: 934, column: 25, scope: !3620)
!3625 = !DILocalVariable(name: "horiz_mult", scope: !3620, file: !1282, line: 935, type: !977)
!3626 = !DILocation(line: 935, column: 13, scope: !3620)
!3627 = !DILocation(line: 935, column: 43, scope: !3620)
!3628 = !DILocation(line: 935, column: 48, scope: !3620)
!3629 = !DILocation(line: 935, column: 26, scope: !3620)
!3630 = !DILocation(line: 936, column: 60, scope: !3620)
!3631 = !DILocation(line: 936, column: 41, scope: !3620)
!3632 = !DILocation(line: 936, column: 66, scope: !3620)
!3633 = !DILocation(line: 936, column: 64, scope: !3620)
!3634 = !DILocation(line: 936, column: 9, scope: !3620)
!3635 = !DILocation(line: 936, column: 14, scope: !3620)
!3636 = !DILocation(line: 936, column: 27, scope: !3620)
!3637 = !DILocation(line: 936, column: 39, scope: !3620)
!3638 = !DILocation(line: 937, column: 61, scope: !3620)
!3639 = !DILocation(line: 937, column: 42, scope: !3620)
!3640 = !DILocation(line: 937, column: 67, scope: !3620)
!3641 = !DILocation(line: 937, column: 65, scope: !3620)
!3642 = !DILocation(line: 937, column: 9, scope: !3620)
!3643 = !DILocation(line: 937, column: 14, scope: !3620)
!3644 = !DILocation(line: 937, column: 27, scope: !3620)
!3645 = !DILocation(line: 937, column: 40, scope: !3620)
!3646 = !DILocation(line: 938, column: 59, scope: !3620)
!3647 = !DILocation(line: 938, column: 40, scope: !3620)
!3648 = !DILocation(line: 938, column: 65, scope: !3620)
!3649 = !DILocation(line: 938, column: 63, scope: !3620)
!3650 = !DILocation(line: 938, column: 9, scope: !3620)
!3651 = !DILocation(line: 938, column: 14, scope: !3620)
!3652 = !DILocation(line: 938, column: 27, scope: !3620)
!3653 = !DILocation(line: 938, column: 38, scope: !3620)
!3654 = !DILocation(line: 939, column: 62, scope: !3620)
!3655 = !DILocation(line: 939, column: 43, scope: !3620)
!3656 = !DILocation(line: 939, column: 68, scope: !3620)
!3657 = !DILocation(line: 939, column: 66, scope: !3620)
!3658 = !DILocation(line: 939, column: 9, scope: !3620)
!3659 = !DILocation(line: 939, column: 14, scope: !3620)
!3660 = !DILocation(line: 939, column: 27, scope: !3620)
!3661 = !DILocation(line: 939, column: 41, scope: !3620)
!3662 = !DILocation(line: 941, column: 13, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3620, file: !1282, line: 941, column: 13)
!3664 = !DILocation(line: 941, column: 20, scope: !3663)
!3665 = !DILocation(line: 941, column: 27, scope: !3663)
!3666 = !DILocation(line: 941, column: 13, scope: !3620)
!3667 = !DILocation(line: 942, column: 20, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3663, file: !1282, line: 941, column: 40)
!3669 = !DILocation(line: 945, column: 20, scope: !3668)
!3670 = !DILocation(line: 945, column: 25, scope: !3668)
!3671 = !DILocation(line: 945, column: 38, scope: !3668)
!3672 = !DILocation(line: 946, column: 20, scope: !3668)
!3673 = !DILocation(line: 946, column: 25, scope: !3668)
!3674 = !DILocation(line: 946, column: 38, scope: !3668)
!3675 = !DILocation(line: 947, column: 20, scope: !3668)
!3676 = !DILocation(line: 947, column: 25, scope: !3668)
!3677 = !DILocation(line: 947, column: 38, scope: !3668)
!3678 = !DILocation(line: 948, column: 20, scope: !3668)
!3679 = !DILocation(line: 948, column: 25, scope: !3668)
!3680 = !DILocation(line: 948, column: 38, scope: !3668)
!3681 = !DILocation(line: 942, column: 13, scope: !3668)
!3682 = !DILocation(line: 953, column: 13, scope: !3668)
!3683 = !DILocation(line: 953, column: 18, scope: !3668)
!3684 = !DILocation(line: 953, column: 31, scope: !3668)
!3685 = !DILocation(line: 953, column: 45, scope: !3668)
!3686 = !DILocation(line: 952, column: 13, scope: !3668)
!3687 = !DILocation(line: 952, column: 18, scope: !3668)
!3688 = !DILocation(line: 952, column: 31, scope: !3668)
!3689 = !DILocation(line: 952, column: 42, scope: !3668)
!3690 = !DILocation(line: 951, column: 13, scope: !3668)
!3691 = !DILocation(line: 951, column: 18, scope: !3668)
!3692 = !DILocation(line: 951, column: 31, scope: !3668)
!3693 = !DILocation(line: 951, column: 44, scope: !3668)
!3694 = !DILocation(line: 950, column: 13, scope: !3668)
!3695 = !DILocation(line: 950, column: 18, scope: !3668)
!3696 = !DILocation(line: 950, column: 31, scope: !3668)
!3697 = !DILocation(line: 950, column: 43, scope: !3668)
!3698 = !DILocation(line: 954, column: 9, scope: !3668)
!3699 = !DILocation(line: 955, column: 9, scope: !3620)
!3700 = !DILocation(line: 955, column: 14, scope: !3620)
!3701 = !DILocation(line: 955, column: 30, scope: !3620)
!3702 = !DILocation(line: 955, column: 35, scope: !3620)
!3703 = !DILocation(line: 956, column: 5, scope: !3620)
!3704 = !DILocation(line: 958, column: 41, scope: !3435)
!3705 = !DILocation(line: 958, column: 22, scope: !3435)
!3706 = !DILocation(line: 958, column: 45, scope: !3435)
!3707 = !DILocation(line: 958, column: 5, scope: !3435)
!3708 = !DILocation(line: 958, column: 10, scope: !3435)
!3709 = !DILocation(line: 958, column: 20, scope: !3435)
!3710 = !DILocation(line: 959, column: 43, scope: !3435)
!3711 = !DILocation(line: 959, column: 24, scope: !3435)
!3712 = !DILocation(line: 959, column: 47, scope: !3435)
!3713 = !DILocation(line: 959, column: 22, scope: !3435)
!3714 = !DILocation(line: 960, column: 9, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 960, column: 9)
!3716 = !DILocation(line: 960, column: 14, scope: !3715)
!3717 = !DILocation(line: 960, column: 32, scope: !3715)
!3718 = !DILocation(line: 960, column: 35, scope: !3719)
!3719 = !DILexicalBlockFile(scope: !3715, file: !1282, discriminator: 1)
!3720 = !DILocation(line: 960, column: 55, scope: !3719)
!3721 = !DILocation(line: 960, column: 60, scope: !3719)
!3722 = !DILocation(line: 960, column: 52, scope: !3719)
!3723 = !DILocation(line: 960, column: 9, scope: !3719)
!3724 = !DILocation(line: 961, column: 16, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3715, file: !1282, line: 960, column: 71)
!3726 = !DILocation(line: 964, column: 16, scope: !3725)
!3727 = !DILocation(line: 964, column: 21, scope: !3725)
!3728 = !DILocation(line: 964, column: 32, scope: !3725)
!3729 = !DILocation(line: 961, column: 9, scope: !3725)
!3730 = !DILocation(line: 965, column: 9, scope: !3725)
!3731 = !DILocation(line: 967, column: 29, scope: !3435)
!3732 = !DILocation(line: 967, column: 5, scope: !3435)
!3733 = !DILocation(line: 967, column: 10, scope: !3435)
!3734 = !DILocation(line: 967, column: 27, scope: !3435)
!3735 = !DILocation(line: 969, column: 28, scope: !3435)
!3736 = !DILocation(line: 969, column: 35, scope: !3435)
!3737 = !DILocation(line: 969, column: 11, scope: !3435)
!3738 = !DILocation(line: 969, column: 9, scope: !3435)
!3739 = !DILocation(line: 970, column: 9, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 970, column: 9)
!3741 = !DILocation(line: 970, column: 13, scope: !3740)
!3742 = !DILocation(line: 970, column: 9, scope: !3435)
!3743 = !DILocation(line: 971, column: 16, scope: !3740)
!3744 = !DILocation(line: 971, column: 9, scope: !3740)
!3745 = !DILocation(line: 973, column: 48, scope: !3435)
!3746 = !DILocation(line: 973, column: 29, scope: !3435)
!3747 = !DILocation(line: 973, column: 52, scope: !3435)
!3748 = !DILocation(line: 973, column: 5, scope: !3435)
!3749 = !DILocation(line: 973, column: 10, scope: !3435)
!3750 = !DILocation(line: 973, column: 27, scope: !3435)
!3751 = !DILocation(line: 974, column: 9, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 974, column: 9)
!3753 = !DILocation(line: 974, column: 14, scope: !3752)
!3754 = !DILocation(line: 974, column: 31, scope: !3752)
!3755 = !DILocation(line: 974, column: 9, scope: !3435)
!3756 = !DILocation(line: 975, column: 16, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3752, file: !1282, line: 974, column: 37)
!3758 = !DILocation(line: 976, column: 16, scope: !3757)
!3759 = !DILocation(line: 976, column: 21, scope: !3757)
!3760 = !DILocation(line: 976, column: 38, scope: !3757)
!3761 = !DILocation(line: 975, column: 9, scope: !3757)
!3762 = !DILocation(line: 977, column: 9, scope: !3757)
!3763 = !DILocation(line: 980, column: 40, scope: !3435)
!3764 = !DILocation(line: 980, column: 30, scope: !3435)
!3765 = !DILocation(line: 980, column: 28, scope: !3435)
!3766 = !DILocation(line: 981, column: 13, scope: !3435)
!3767 = !DILocation(line: 981, column: 13, scope: !3768)
!3768 = !DILexicalBlockFile(scope: !3435, file: !1282, discriminator: 1)
!3769 = !DILocation(line: 981, column: 42, scope: !3770)
!3770 = !DILexicalBlockFile(scope: !3435, file: !1282, discriminator: 2)
!3771 = !DILocation(line: 981, column: 47, scope: !3770)
!3772 = !DILocation(line: 981, column: 62, scope: !3770)
!3773 = !DILocation(line: 981, column: 13, scope: !3770)
!3774 = !DILocation(line: 981, column: 13, scope: !3775)
!3775 = !DILexicalBlockFile(scope: !3435, file: !1282, discriminator: 3)
!3776 = !DILocation(line: 981, column: 11, scope: !3775)
!3777 = !DILocation(line: 982, column: 14, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 982, column: 5)
!3779 = !DILocation(line: 982, column: 12, scope: !3778)
!3780 = !DILocation(line: 982, column: 10, scope: !3778)
!3781 = !DILocation(line: 982, column: 21, scope: !3782)
!3782 = !DILexicalBlockFile(scope: !3783, file: !1282, discriminator: 1)
!3783 = distinct !DILexicalBlock(scope: !3778, file: !1282, line: 982, column: 5)
!3784 = !DILocation(line: 982, column: 25, scope: !3782)
!3785 = !DILocation(line: 982, column: 30, scope: !3782)
!3786 = !DILocation(line: 982, column: 23, scope: !3782)
!3787 = !DILocation(line: 982, column: 5, scope: !3782)
!3788 = !DILocation(line: 983, column: 75, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3783, file: !1282, line: 982, column: 51)
!3790 = !DILocation(line: 983, column: 56, scope: !3789)
!3791 = !DILocation(line: 983, column: 79, scope: !3789)
!3792 = !DILocation(line: 983, column: 29, scope: !3789)
!3793 = !DILocation(line: 983, column: 9, scope: !3789)
!3794 = !DILocation(line: 983, column: 14, scope: !3789)
!3795 = !DILocation(line: 983, column: 32, scope: !3789)
!3796 = !DILocation(line: 983, column: 54, scope: !3789)
!3797 = !DILocation(line: 984, column: 70, scope: !3789)
!3798 = !DILocation(line: 984, column: 51, scope: !3789)
!3799 = !DILocation(line: 984, column: 29, scope: !3789)
!3800 = !DILocation(line: 984, column: 9, scope: !3789)
!3801 = !DILocation(line: 984, column: 14, scope: !3789)
!3802 = !DILocation(line: 984, column: 32, scope: !3789)
!3803 = !DILocation(line: 984, column: 49, scope: !3789)
!3804 = !DILocation(line: 985, column: 74, scope: !3789)
!3805 = !DILocation(line: 985, column: 55, scope: !3789)
!3806 = !DILocation(line: 985, column: 78, scope: !3789)
!3807 = !DILocation(line: 985, column: 29, scope: !3789)
!3808 = !DILocation(line: 985, column: 9, scope: !3789)
!3809 = !DILocation(line: 985, column: 14, scope: !3789)
!3810 = !DILocation(line: 985, column: 32, scope: !3789)
!3811 = !DILocation(line: 985, column: 53, scope: !3789)
!3812 = !DILocation(line: 986, column: 33, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3789, file: !1282, line: 986, column: 13)
!3814 = !DILocation(line: 986, column: 13, scope: !3813)
!3815 = !DILocation(line: 986, column: 18, scope: !3813)
!3816 = !DILocation(line: 986, column: 36, scope: !3813)
!3817 = !DILocation(line: 986, column: 58, scope: !3813)
!3818 = !DILocation(line: 986, column: 13, scope: !3789)
!3819 = !DILocation(line: 987, column: 20, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3813, file: !1282, line: 986, column: 89)
!3821 = !DILocation(line: 988, column: 40, scope: !3820)
!3822 = !DILocation(line: 988, column: 20, scope: !3820)
!3823 = !DILocation(line: 988, column: 25, scope: !3820)
!3824 = !DILocation(line: 988, column: 43, scope: !3820)
!3825 = !DILocation(line: 988, column: 65, scope: !3820)
!3826 = !DILocation(line: 987, column: 13, scope: !3820)
!3827 = !DILocation(line: 989, column: 13, scope: !3820)
!3828 = !DILocation(line: 991, column: 33, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3789, file: !1282, line: 991, column: 13)
!3830 = !DILocation(line: 991, column: 13, scope: !3829)
!3831 = !DILocation(line: 991, column: 18, scope: !3829)
!3832 = !DILocation(line: 991, column: 36, scope: !3829)
!3833 = !DILocation(line: 991, column: 75, scope: !3829)
!3834 = !DILocation(line: 991, column: 55, scope: !3829)
!3835 = !DILocation(line: 991, column: 60, scope: !3829)
!3836 = !DILocation(line: 991, column: 78, scope: !3829)
!3837 = !DILocation(line: 991, column: 100, scope: !3829)
!3838 = !DILocation(line: 991, column: 53, scope: !3829)
!3839 = !DILocation(line: 991, column: 13, scope: !3789)
!3840 = !DILocation(line: 992, column: 20, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3829, file: !1282, line: 991, column: 105)
!3842 = !DILocation(line: 993, column: 40, scope: !3841)
!3843 = !DILocation(line: 993, column: 20, scope: !3841)
!3844 = !DILocation(line: 993, column: 25, scope: !3841)
!3845 = !DILocation(line: 993, column: 43, scope: !3841)
!3846 = !DILocation(line: 992, column: 13, scope: !3841)
!3847 = !DILocation(line: 994, column: 17, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3841, file: !1282, line: 994, column: 17)
!3849 = !DILocation(line: 994, column: 24, scope: !3848)
!3850 = !DILocation(line: 994, column: 40, scope: !3848)
!3851 = !DILocation(line: 994, column: 49, scope: !3848)
!3852 = !DILocation(line: 995, column: 37, scope: !3848)
!3853 = !DILocation(line: 995, column: 17, scope: !3848)
!3854 = !DILocation(line: 995, column: 22, scope: !3848)
!3855 = !DILocation(line: 995, column: 40, scope: !3848)
!3856 = !DILocation(line: 995, column: 57, scope: !3848)
!3857 = !DILocation(line: 994, column: 17, scope: !3858)
!3858 = !DILexicalBlockFile(scope: !3841, file: !1282, discriminator: 1)
!3859 = !DILocation(line: 996, column: 17, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3848, file: !1282, line: 995, column: 82)
!3861 = !DILocation(line: 998, column: 80, scope: !3841)
!3862 = !DILocation(line: 998, column: 60, scope: !3841)
!3863 = !DILocation(line: 998, column: 65, scope: !3841)
!3864 = !DILocation(line: 998, column: 83, scope: !3841)
!3865 = !DILocation(line: 998, column: 100, scope: !3841)
!3866 = !DILocation(line: 998, column: 33, scope: !3841)
!3867 = !DILocation(line: 998, column: 13, scope: !3841)
!3868 = !DILocation(line: 998, column: 18, scope: !3841)
!3869 = !DILocation(line: 998, column: 36, scope: !3841)
!3870 = !DILocation(line: 998, column: 58, scope: !3841)
!3871 = !DILocation(line: 999, column: 9, scope: !3841)
!3872 = !DILocation(line: 1000, column: 5, scope: !3789)
!3873 = !DILocation(line: 982, column: 47, scope: !3874)
!3874 = !DILexicalBlockFile(scope: !3783, file: !1282, discriminator: 2)
!3875 = !DILocation(line: 982, column: 5, scope: !3874)
!3876 = distinct !{!3876, !3877}
!3877 = !DILocation(line: 982, column: 5, scope: !3435)
!3878 = !DILocation(line: 1002, column: 10, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1002, column: 9)
!3880 = !DILocation(line: 1002, column: 9, scope: !3435)
!3881 = !DILocation(line: 1003, column: 16, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3883, file: !1282, line: 1003, column: 9)
!3883 = distinct !DILexicalBlock(scope: !3879, file: !1282, line: 1002, column: 34)
!3884 = !DILocation(line: 1003, column: 14, scope: !3882)
!3885 = !DILocation(line: 1003, column: 21, scope: !3886)
!3886 = !DILexicalBlockFile(scope: !3887, file: !1282, discriminator: 1)
!3887 = distinct !DILexicalBlock(scope: !3882, file: !1282, line: 1003, column: 9)
!3888 = !DILocation(line: 1003, column: 25, scope: !3886)
!3889 = !DILocation(line: 1003, column: 23, scope: !3886)
!3890 = !DILocation(line: 1003, column: 9, scope: !3886)
!3891 = !DILocation(line: 1004, column: 80, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3887, file: !1282, line: 1003, column: 37)
!3893 = !DILocation(line: 1004, column: 60, scope: !3892)
!3894 = !DILocation(line: 1004, column: 65, scope: !3892)
!3895 = !DILocation(line: 1004, column: 87, scope: !3892)
!3896 = !DILocation(line: 1004, column: 33, scope: !3892)
!3897 = !DILocation(line: 1004, column: 13, scope: !3892)
!3898 = !DILocation(line: 1004, column: 18, scope: !3892)
!3899 = !DILocation(line: 1004, column: 36, scope: !3892)
!3900 = !DILocation(line: 1004, column: 58, scope: !3892)
!3901 = !DILocation(line: 1005, column: 75, scope: !3892)
!3902 = !DILocation(line: 1005, column: 55, scope: !3892)
!3903 = !DILocation(line: 1005, column: 60, scope: !3892)
!3904 = !DILocation(line: 1005, column: 82, scope: !3892)
!3905 = !DILocation(line: 1005, column: 33, scope: !3892)
!3906 = !DILocation(line: 1005, column: 13, scope: !3892)
!3907 = !DILocation(line: 1005, column: 18, scope: !3892)
!3908 = !DILocation(line: 1005, column: 36, scope: !3892)
!3909 = !DILocation(line: 1005, column: 53, scope: !3892)
!3910 = !DILocation(line: 1006, column: 79, scope: !3892)
!3911 = !DILocation(line: 1006, column: 59, scope: !3892)
!3912 = !DILocation(line: 1006, column: 64, scope: !3892)
!3913 = !DILocation(line: 1006, column: 86, scope: !3892)
!3914 = !DILocation(line: 1006, column: 33, scope: !3892)
!3915 = !DILocation(line: 1006, column: 13, scope: !3892)
!3916 = !DILocation(line: 1006, column: 18, scope: !3892)
!3917 = !DILocation(line: 1006, column: 36, scope: !3892)
!3918 = !DILocation(line: 1006, column: 57, scope: !3892)
!3919 = !DILocation(line: 1007, column: 9, scope: !3892)
!3920 = !DILocation(line: 1003, column: 33, scope: !3921)
!3921 = !DILexicalBlockFile(scope: !3887, file: !1282, discriminator: 2)
!3922 = !DILocation(line: 1003, column: 9, scope: !3921)
!3923 = distinct !{!3923, !3924}
!3924 = !DILocation(line: 1003, column: 9, scope: !3883)
!3925 = !DILocation(line: 1008, column: 5, scope: !3883)
!3926 = !DILocation(line: 1010, column: 48, scope: !3435)
!3927 = !DILocation(line: 1010, column: 29, scope: !3435)
!3928 = !DILocation(line: 1010, column: 52, scope: !3435)
!3929 = !DILocation(line: 1010, column: 5, scope: !3435)
!3930 = !DILocation(line: 1010, column: 10, scope: !3435)
!3931 = !DILocation(line: 1010, column: 27, scope: !3435)
!3932 = !DILocation(line: 1011, column: 67, scope: !3435)
!3933 = !DILocation(line: 1011, column: 48, scope: !3435)
!3934 = !DILocation(line: 1011, column: 5, scope: !3435)
!3935 = !DILocation(line: 1011, column: 10, scope: !3435)
!3936 = !DILocation(line: 1011, column: 46, scope: !3435)
!3937 = !DILocation(line: 1012, column: 48, scope: !3435)
!3938 = !DILocation(line: 1012, column: 29, scope: !3435)
!3939 = !DILocation(line: 1012, column: 52, scope: !3435)
!3940 = !DILocation(line: 1012, column: 5, scope: !3435)
!3941 = !DILocation(line: 1012, column: 10, scope: !3435)
!3942 = !DILocation(line: 1012, column: 27, scope: !3435)
!3943 = !DILocation(line: 1013, column: 65, scope: !3435)
!3944 = !DILocation(line: 1013, column: 46, scope: !3435)
!3945 = !DILocation(line: 1013, column: 44, scope: !3435)
!3946 = !DILocation(line: 1014, column: 32, scope: !3435)
!3947 = !DILocation(line: 1015, column: 48, scope: !3435)
!3948 = !DILocation(line: 1015, column: 53, scope: !3435)
!3949 = !DILocation(line: 1014, column: 71, scope: !3435)
!3950 = !DILocation(line: 1014, column: 5, scope: !3435)
!3951 = !DILocation(line: 1014, column: 10, scope: !3435)
!3952 = !DILocation(line: 1014, column: 30, scope: !3435)
!3953 = !DILocation(line: 1017, column: 9, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1017, column: 9)
!3955 = !DILocation(line: 1017, column: 14, scope: !3954)
!3956 = !DILocation(line: 1017, column: 31, scope: !3954)
!3957 = !DILocation(line: 1017, column: 35, scope: !3954)
!3958 = !DILocation(line: 1017, column: 38, scope: !3959)
!3959 = !DILexicalBlockFile(scope: !3954, file: !1282, discriminator: 1)
!3960 = !DILocation(line: 1017, column: 43, scope: !3959)
!3961 = !DILocation(line: 1017, column: 60, scope: !3959)
!3962 = !DILocation(line: 1017, column: 9, scope: !3959)
!3963 = !DILocation(line: 1018, column: 16, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3954, file: !1282, line: 1017, column: 66)
!3965 = !DILocation(line: 1018, column: 68, scope: !3964)
!3966 = !DILocation(line: 1018, column: 73, scope: !3964)
!3967 = !DILocation(line: 1018, column: 9, scope: !3964)
!3968 = !DILocation(line: 1019, column: 9, scope: !3964)
!3969 = !DILocation(line: 1022, column: 9, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1022, column: 9)
!3971 = !DILocation(line: 1022, column: 14, scope: !3970)
!3972 = !DILocation(line: 1022, column: 50, scope: !3970)
!3973 = !DILocation(line: 1022, column: 9, scope: !3435)
!3974 = !DILocation(line: 1023, column: 16, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3970, file: !1282, line: 1022, column: 56)
!3976 = !DILocation(line: 1023, column: 87, scope: !3975)
!3977 = !DILocation(line: 1023, column: 92, scope: !3975)
!3978 = !DILocation(line: 1023, column: 9, scope: !3975)
!3979 = !DILocation(line: 1024, column: 9, scope: !3975)
!3980 = !DILocation(line: 1027, column: 9, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1027, column: 9)
!3982 = !DILocation(line: 1027, column: 14, scope: !3981)
!3983 = !DILocation(line: 1027, column: 34, scope: !3981)
!3984 = !DILocation(line: 1027, column: 39, scope: !3981)
!3985 = !DILocation(line: 1027, column: 31, scope: !3981)
!3986 = !DILocation(line: 1027, column: 56, scope: !3981)
!3987 = !DILocation(line: 1027, column: 59, scope: !3988)
!3988 = !DILexicalBlockFile(scope: !3981, file: !1282, discriminator: 1)
!3989 = !DILocation(line: 1027, column: 64, scope: !3988)
!3990 = !DILocation(line: 1027, column: 81, scope: !3988)
!3991 = !DILocation(line: 1027, column: 9, scope: !3988)
!3992 = !DILocation(line: 1028, column: 16, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3981, file: !1282, line: 1027, column: 86)
!3994 = !DILocation(line: 1028, column: 9, scope: !3993)
!3995 = !DILocation(line: 1029, column: 9, scope: !3993)
!3996 = !DILocation(line: 1032, column: 9, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1032, column: 9)
!3998 = !DILocation(line: 1032, column: 48, scope: !3997)
!3999 = !DILocation(line: 1032, column: 52, scope: !3997)
!4000 = !DILocation(line: 1032, column: 55, scope: !4001)
!4001 = !DILexicalBlockFile(scope: !3997, file: !1282, discriminator: 1)
!4002 = !DILocation(line: 1032, column: 94, scope: !4001)
!4003 = !DILocation(line: 1032, column: 9, scope: !4001)
!4004 = !DILocation(line: 1033, column: 16, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3997, file: !1282, line: 1032, column: 100)
!4006 = !DILocation(line: 1033, column: 90, scope: !4005)
!4007 = !DILocation(line: 1033, column: 9, scope: !4005)
!4008 = !DILocation(line: 1034, column: 9, scope: !4005)
!4009 = !DILocation(line: 1037, column: 67, scope: !3435)
!4010 = !DILocation(line: 1037, column: 48, scope: !3435)
!4011 = !DILocation(line: 1037, column: 5, scope: !3435)
!4012 = !DILocation(line: 1037, column: 10, scope: !3435)
!4013 = !DILocation(line: 1037, column: 46, scope: !3435)
!4014 = !DILocation(line: 1038, column: 67, scope: !3435)
!4015 = !DILocation(line: 1038, column: 48, scope: !3435)
!4016 = !DILocation(line: 1038, column: 5, scope: !3435)
!4017 = !DILocation(line: 1038, column: 10, scope: !3435)
!4018 = !DILocation(line: 1038, column: 46, scope: !3435)
!4019 = !DILocation(line: 1040, column: 47, scope: !3435)
!4020 = !DILocation(line: 1040, column: 37, scope: !3435)
!4021 = !DILocation(line: 1040, column: 5, scope: !3435)
!4022 = !DILocation(line: 1040, column: 10, scope: !3435)
!4023 = !DILocation(line: 1040, column: 35, scope: !3435)
!4024 = !DILocation(line: 1041, column: 9, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1041, column: 9)
!4026 = !DILocation(line: 1041, column: 14, scope: !4025)
!4027 = !DILocation(line: 1041, column: 9, scope: !3435)
!4028 = !DILocation(line: 1042, column: 40, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4025, file: !1282, line: 1041, column: 40)
!4030 = !DILocation(line: 1042, column: 45, scope: !4029)
!4031 = !DILocation(line: 1042, column: 9, scope: !4029)
!4032 = !DILocation(line: 1044, column: 23, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4029, file: !1282, line: 1044, column: 13)
!4034 = !DILocation(line: 1044, column: 13, scope: !4033)
!4035 = !DILocation(line: 1044, column: 13, scope: !4029)
!4036 = !DILocation(line: 1045, column: 37, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4033, file: !1282, line: 1044, column: 28)
!4038 = !DILocation(line: 1045, column: 41, scope: !4037)
!4039 = !DILocation(line: 1045, column: 49, scope: !4037)
!4040 = !DILocation(line: 1045, column: 54, scope: !4037)
!4041 = !DILocation(line: 1045, column: 68, scope: !4037)
!4042 = !DILocation(line: 1045, column: 19, scope: !4037)
!4043 = !DILocation(line: 1045, column: 17, scope: !4037)
!4044 = !DILocation(line: 1046, column: 17, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4037, file: !1282, line: 1046, column: 17)
!4046 = !DILocation(line: 1046, column: 21, scope: !4045)
!4047 = !DILocation(line: 1046, column: 17, scope: !4037)
!4048 = !DILocation(line: 1047, column: 24, scope: !4045)
!4049 = !DILocation(line: 1047, column: 17, scope: !4045)
!4050 = !DILocation(line: 1048, column: 9, scope: !4037)
!4051 = !DILocation(line: 1049, column: 5, scope: !4029)
!4052 = !DILocation(line: 1051, column: 39, scope: !3435)
!4053 = !DILocation(line: 1051, column: 29, scope: !3435)
!4054 = !DILocation(line: 1051, column: 5, scope: !3435)
!4055 = !DILocation(line: 1051, column: 10, scope: !3435)
!4056 = !DILocation(line: 1051, column: 27, scope: !3435)
!4057 = !DILocation(line: 1052, column: 34, scope: !3435)
!4058 = !DILocation(line: 1052, column: 24, scope: !3435)
!4059 = !DILocation(line: 1052, column: 5, scope: !3435)
!4060 = !DILocation(line: 1052, column: 10, scope: !3435)
!4061 = !DILocation(line: 1052, column: 22, scope: !3435)
!4062 = !DILocation(line: 1054, column: 39, scope: !3435)
!4063 = !DILocation(line: 1054, column: 29, scope: !3435)
!4064 = !DILocation(line: 1054, column: 5, scope: !3435)
!4065 = !DILocation(line: 1054, column: 10, scope: !3435)
!4066 = !DILocation(line: 1054, column: 27, scope: !3435)
!4067 = !DILocation(line: 1055, column: 9, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1055, column: 9)
!4069 = !DILocation(line: 1055, column: 14, scope: !4068)
!4070 = !DILocation(line: 1055, column: 9, scope: !3435)
!4071 = !DILocation(line: 1056, column: 39, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4068, file: !1282, line: 1055, column: 32)
!4073 = !DILocation(line: 1056, column: 30, scope: !4072)
!4074 = !DILocation(line: 1056, column: 46, scope: !4072)
!4075 = !DILocation(line: 1056, column: 9, scope: !4072)
!4076 = !DILocation(line: 1056, column: 14, scope: !4072)
!4077 = !DILocation(line: 1056, column: 18, scope: !4072)
!4078 = !DILocation(line: 1056, column: 28, scope: !4072)
!4079 = !DILocation(line: 1057, column: 46, scope: !4072)
!4080 = !DILocation(line: 1057, column: 37, scope: !4072)
!4081 = !DILocation(line: 1057, column: 53, scope: !4072)
!4082 = !DILocation(line: 1057, column: 9, scope: !4072)
!4083 = !DILocation(line: 1057, column: 14, scope: !4072)
!4084 = !DILocation(line: 1057, column: 18, scope: !4072)
!4085 = !DILocation(line: 1057, column: 35, scope: !4072)
!4086 = !DILocation(line: 1058, column: 60, scope: !4072)
!4087 = !DILocation(line: 1058, column: 41, scope: !4072)
!4088 = !DILocation(line: 1058, column: 64, scope: !4072)
!4089 = !DILocation(line: 1058, column: 9, scope: !4072)
!4090 = !DILocation(line: 1058, column: 14, scope: !4072)
!4091 = !DILocation(line: 1058, column: 18, scope: !4072)
!4092 = !DILocation(line: 1058, column: 39, scope: !4072)
!4093 = !DILocation(line: 1059, column: 41, scope: !4072)
!4094 = !DILocation(line: 1059, column: 46, scope: !4072)
!4095 = !DILocation(line: 1059, column: 50, scope: !4072)
!4096 = !DILocation(line: 1060, column: 60, scope: !4072)
!4097 = !DILocation(line: 1060, column: 41, scope: !4072)
!4098 = !DILocation(line: 1059, column: 71, scope: !4072)
!4099 = !DILocation(line: 1059, column: 9, scope: !4072)
!4100 = !DILocation(line: 1059, column: 14, scope: !4072)
!4101 = !DILocation(line: 1059, column: 18, scope: !4072)
!4102 = !DILocation(line: 1059, column: 39, scope: !4072)
!4103 = !DILocation(line: 1061, column: 15, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4072, file: !1282, line: 1061, column: 13)
!4105 = !DILocation(line: 1061, column: 20, scope: !4104)
!4106 = !DILocation(line: 1061, column: 24, scope: !4104)
!4107 = !DILocation(line: 1061, column: 14, scope: !4104)
!4108 = !DILocation(line: 1061, column: 38, scope: !4104)
!4109 = !DILocation(line: 1061, column: 43, scope: !4104)
!4110 = !DILocation(line: 1061, column: 47, scope: !4104)
!4111 = !DILocation(line: 1061, column: 37, scope: !4104)
!4112 = !DILocation(line: 1061, column: 35, scope: !4104)
!4113 = !DILocation(line: 1061, column: 68, scope: !4114)
!4114 = !DILexicalBlockFile(scope: !4104, file: !1282, discriminator: 1)
!4115 = !DILocation(line: 1061, column: 73, scope: !4114)
!4116 = !DILocation(line: 1061, column: 77, scope: !4114)
!4117 = !DILocation(line: 1061, column: 67, scope: !4114)
!4118 = !DILocation(line: 1061, column: 14, scope: !4114)
!4119 = !DILocation(line: 1061, column: 91, scope: !4120)
!4120 = !DILexicalBlockFile(scope: !4104, file: !1282, discriminator: 2)
!4121 = !DILocation(line: 1061, column: 96, scope: !4120)
!4122 = !DILocation(line: 1061, column: 100, scope: !4120)
!4123 = !DILocation(line: 1061, column: 90, scope: !4120)
!4124 = !DILocation(line: 1061, column: 14, scope: !4120)
!4125 = !DILocation(line: 1061, column: 14, scope: !4126)
!4126 = !DILexicalBlockFile(scope: !4104, file: !1282, discriminator: 3)
!4127 = !DILocation(line: 1061, column: 121, scope: !4126)
!4128 = !DILocation(line: 1061, column: 126, scope: !4126)
!4129 = !DILocation(line: 1061, column: 119, scope: !4126)
!4130 = !DILocation(line: 1061, column: 13, scope: !4126)
!4131 = !DILocation(line: 1062, column: 20, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4104, file: !1282, line: 1061, column: 137)
!4133 = !DILocation(line: 1064, column: 20, scope: !4132)
!4134 = !DILocation(line: 1064, column: 25, scope: !4132)
!4135 = !DILocation(line: 1064, column: 29, scope: !4132)
!4136 = !DILocation(line: 1064, column: 40, scope: !4132)
!4137 = !DILocation(line: 1064, column: 45, scope: !4132)
!4138 = !DILocation(line: 1064, column: 49, scope: !4132)
!4139 = !DILocation(line: 1064, column: 67, scope: !4132)
!4140 = !DILocation(line: 1064, column: 72, scope: !4132)
!4141 = !DILocation(line: 1062, column: 13, scope: !4132)
!4142 = !DILocation(line: 1065, column: 13, scope: !4132)
!4143 = !DILocation(line: 1068, column: 55, scope: !4072)
!4144 = !DILocation(line: 1068, column: 45, scope: !4072)
!4145 = !DILocation(line: 1068, column: 9, scope: !4072)
!4146 = !DILocation(line: 1068, column: 14, scope: !4072)
!4147 = !DILocation(line: 1068, column: 18, scope: !4072)
!4148 = !DILocation(line: 1068, column: 43, scope: !4072)
!4149 = !DILocation(line: 1069, column: 5, scope: !4072)
!4150 = !DILocation(line: 1071, column: 41, scope: !3435)
!4151 = !DILocation(line: 1071, column: 22, scope: !3435)
!4152 = !DILocation(line: 1071, column: 5, scope: !3435)
!4153 = !DILocation(line: 1071, column: 10, scope: !3435)
!4154 = !DILocation(line: 1071, column: 20, scope: !3435)
!4155 = !DILocation(line: 1072, column: 9, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1072, column: 9)
!4157 = !DILocation(line: 1072, column: 14, scope: !4156)
!4158 = !DILocation(line: 1072, column: 24, scope: !4156)
!4159 = !DILocation(line: 1072, column: 9, scope: !3435)
!4160 = !DILocation(line: 1073, column: 16, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4156, file: !1282, line: 1072, column: 60)
!4162 = !DILocation(line: 1074, column: 16, scope: !4161)
!4163 = !DILocation(line: 1074, column: 21, scope: !4161)
!4164 = !DILocation(line: 1073, column: 9, scope: !4161)
!4165 = !DILocation(line: 1075, column: 9, scope: !4161)
!4166 = !DILocation(line: 1077, column: 12, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1077, column: 5)
!4168 = !DILocation(line: 1077, column: 10, scope: !4167)
!4169 = !DILocation(line: 1077, column: 17, scope: !4170)
!4170 = !DILexicalBlockFile(scope: !4171, file: !1282, discriminator: 1)
!4171 = distinct !DILexicalBlock(scope: !4167, file: !1282, line: 1077, column: 5)
!4172 = !DILocation(line: 1077, column: 21, scope: !4170)
!4173 = !DILocation(line: 1077, column: 26, scope: !4170)
!4174 = !DILocation(line: 1077, column: 19, scope: !4170)
!4175 = !DILocation(line: 1077, column: 5, scope: !4170)
!4176 = !DILocation(line: 1078, column: 50, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !1282, line: 1078, column: 13)
!4178 = distinct !DILexicalBlock(scope: !4171, file: !1282, line: 1077, column: 42)
!4179 = !DILocation(line: 1078, column: 54, scope: !4177)
!4180 = !DILocation(line: 1078, column: 74, scope: !4177)
!4181 = !DILocation(line: 1078, column: 62, scope: !4177)
!4182 = !DILocation(line: 1078, column: 67, scope: !4177)
!4183 = !DILocation(line: 1079, column: 50, scope: !4177)
!4184 = !DILocation(line: 1078, column: 20, scope: !4177)
!4185 = !DILocation(line: 1078, column: 18, scope: !4177)
!4186 = !DILocation(line: 1079, column: 59, scope: !4177)
!4187 = !DILocation(line: 1078, column: 13, scope: !4178)
!4188 = !DILocation(line: 1080, column: 20, scope: !4177)
!4189 = !DILocation(line: 1080, column: 13, scope: !4177)
!4190 = !DILocation(line: 1081, column: 5, scope: !4178)
!4191 = !DILocation(line: 1077, column: 38, scope: !4192)
!4192 = !DILexicalBlockFile(scope: !4171, file: !1282, discriminator: 2)
!4193 = !DILocation(line: 1077, column: 5, scope: !4192)
!4194 = distinct !{!4194, !4195}
!4195 = !DILocation(line: 1077, column: 5, scope: !3435)
!4196 = !DILocation(line: 1083, column: 54, scope: !3435)
!4197 = !DILocation(line: 1083, column: 44, scope: !3435)
!4198 = !DILocation(line: 1083, column: 5, scope: !3435)
!4199 = !DILocation(line: 1083, column: 10, scope: !3435)
!4200 = !DILocation(line: 1083, column: 42, scope: !3435)
!4201 = !DILocation(line: 1084, column: 9, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1084, column: 9)
!4203 = !DILocation(line: 1084, column: 14, scope: !4202)
!4204 = !DILocation(line: 1084, column: 9, scope: !3435)
!4205 = !DILocation(line: 1085, column: 62, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4202, file: !1282, line: 1084, column: 47)
!4207 = !DILocation(line: 1085, column: 43, scope: !4206)
!4208 = !DILocation(line: 1085, column: 9, scope: !4206)
!4209 = !DILocation(line: 1085, column: 14, scope: !4206)
!4210 = !DILocation(line: 1085, column: 41, scope: !4206)
!4211 = !DILocation(line: 1086, column: 13, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4206, file: !1282, line: 1086, column: 13)
!4213 = !DILocation(line: 1086, column: 18, scope: !4212)
!4214 = !DILocation(line: 1086, column: 45, scope: !4212)
!4215 = !DILocation(line: 1086, column: 13, scope: !4206)
!4216 = !DILocation(line: 1087, column: 20, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4212, file: !1282, line: 1086, column: 76)
!4218 = !DILocation(line: 1088, column: 20, scope: !4217)
!4219 = !DILocation(line: 1088, column: 25, scope: !4217)
!4220 = !DILocation(line: 1087, column: 13, scope: !4217)
!4221 = !DILocation(line: 1089, column: 13, scope: !4217)
!4222 = !DILocation(line: 1091, column: 16, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4206, file: !1282, line: 1091, column: 9)
!4224 = !DILocation(line: 1091, column: 14, scope: !4223)
!4225 = !DILocation(line: 1091, column: 21, scope: !4226)
!4226 = !DILexicalBlockFile(scope: !4227, file: !1282, discriminator: 1)
!4227 = distinct !DILexicalBlock(scope: !4223, file: !1282, line: 1091, column: 9)
!4228 = !DILocation(line: 1091, column: 25, scope: !4226)
!4229 = !DILocation(line: 1091, column: 30, scope: !4226)
!4230 = !DILocation(line: 1091, column: 23, scope: !4226)
!4231 = !DILocation(line: 1091, column: 9, scope: !4226)
!4232 = !DILocation(line: 1092, column: 55, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4227, file: !1282, line: 1091, column: 63)
!4234 = !DILocation(line: 1092, column: 59, scope: !4233)
!4235 = !DILocation(line: 1092, column: 64, scope: !4233)
!4236 = !DILocation(line: 1092, column: 46, scope: !4233)
!4237 = !DILocation(line: 1092, column: 41, scope: !4233)
!4238 = !DILocation(line: 1092, column: 13, scope: !4233)
!4239 = !DILocation(line: 1092, column: 18, scope: !4233)
!4240 = !DILocation(line: 1092, column: 44, scope: !4233)
!4241 = !DILocation(line: 1093, column: 62, scope: !4233)
!4242 = !DILocation(line: 1093, column: 52, scope: !4233)
!4243 = !DILocation(line: 1093, column: 47, scope: !4233)
!4244 = !DILocation(line: 1093, column: 13, scope: !4233)
!4245 = !DILocation(line: 1093, column: 18, scope: !4233)
!4246 = !DILocation(line: 1093, column: 50, scope: !4233)
!4247 = !DILocation(line: 1094, column: 9, scope: !4233)
!4248 = !DILocation(line: 1091, column: 59, scope: !4249)
!4249 = !DILexicalBlockFile(scope: !4227, file: !1282, discriminator: 2)
!4250 = !DILocation(line: 1091, column: 9, scope: !4249)
!4251 = distinct !{!4251, !4252}
!4252 = !DILocation(line: 1091, column: 9, scope: !4206)
!4253 = !DILocation(line: 1095, column: 5, scope: !4206)
!4254 = !DILocation(line: 1097, column: 52, scope: !3435)
!4255 = !DILocation(line: 1097, column: 42, scope: !3435)
!4256 = !DILocation(line: 1097, column: 5, scope: !3435)
!4257 = !DILocation(line: 1097, column: 10, scope: !3435)
!4258 = !DILocation(line: 1097, column: 40, scope: !3435)
!4259 = !DILocation(line: 1098, column: 61, scope: !3435)
!4260 = !DILocation(line: 1098, column: 51, scope: !3435)
!4261 = !DILocation(line: 1098, column: 5, scope: !3435)
!4262 = !DILocation(line: 1098, column: 10, scope: !3435)
!4263 = !DILocation(line: 1098, column: 49, scope: !3435)
!4264 = !DILocation(line: 1099, column: 5, scope: !3435)
!4265 = !DILocation(line: 1099, column: 10, scope: !3435)
!4266 = !DILocation(line: 1099, column: 14, scope: !3435)
!4267 = !DILocation(line: 1099, column: 32, scope: !3435)
!4268 = !DILocation(line: 1099, column: 20, scope: !3435)
!4269 = !DILocation(line: 1100, column: 29, scope: !3435)
!4270 = !DILocation(line: 1100, column: 19, scope: !3435)
!4271 = !DILocation(line: 1100, column: 17, scope: !3435)
!4272 = !DILocation(line: 1101, column: 9, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1101, column: 9)
!4274 = !DILocation(line: 1101, column: 9, scope: !3435)
!4275 = !DILocation(line: 1102, column: 20, scope: !4273)
!4276 = !DILocation(line: 1102, column: 24, scope: !4273)
!4277 = !DILocation(line: 1102, column: 31, scope: !4273)
!4278 = !DILocation(line: 1102, column: 49, scope: !4273)
!4279 = !DILocation(line: 1102, column: 9, scope: !4273)
!4280 = !DILocation(line: 1104, column: 19, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1104, column: 9)
!4282 = !DILocation(line: 1104, column: 9, scope: !4281)
!4283 = !DILocation(line: 1104, column: 9, scope: !3435)
!4284 = !DILocation(line: 1105, column: 51, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4281, file: !1282, line: 1104, column: 24)
!4286 = !DILocation(line: 1105, column: 41, scope: !4285)
!4287 = !DILocation(line: 1105, column: 9, scope: !4285)
!4288 = !DILocation(line: 1105, column: 14, scope: !4285)
!4289 = !DILocation(line: 1105, column: 39, scope: !4285)
!4290 = !DILocation(line: 1106, column: 19, scope: !4285)
!4291 = !DILocation(line: 1106, column: 9, scope: !4285)
!4292 = !DILocation(line: 1107, column: 13, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4285, file: !1282, line: 1107, column: 13)
!4294 = !DILocation(line: 1107, column: 18, scope: !4293)
!4295 = !DILocation(line: 1107, column: 13, scope: !4285)
!4296 = !DILocation(line: 1108, column: 67, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4293, file: !1282, line: 1107, column: 44)
!4298 = !DILocation(line: 1108, column: 57, scope: !4297)
!4299 = !DILocation(line: 1108, column: 13, scope: !4297)
!4300 = !DILocation(line: 1108, column: 18, scope: !4297)
!4301 = !DILocation(line: 1108, column: 55, scope: !4297)
!4302 = !DILocation(line: 1109, column: 66, scope: !4297)
!4303 = !DILocation(line: 1109, column: 56, scope: !4297)
!4304 = !DILocation(line: 1109, column: 13, scope: !4297)
!4305 = !DILocation(line: 1109, column: 18, scope: !4297)
!4306 = !DILocation(line: 1109, column: 54, scope: !4297)
!4307 = !DILocation(line: 1110, column: 58, scope: !4297)
!4308 = !DILocation(line: 1110, column: 48, scope: !4297)
!4309 = !DILocation(line: 1110, column: 13, scope: !4297)
!4310 = !DILocation(line: 1110, column: 18, scope: !4297)
!4311 = !DILocation(line: 1110, column: 46, scope: !4297)
!4312 = !DILocation(line: 1112, column: 58, scope: !4297)
!4313 = !DILocation(line: 1112, column: 48, scope: !4297)
!4314 = !DILocation(line: 1112, column: 13, scope: !4297)
!4315 = !DILocation(line: 1112, column: 18, scope: !4297)
!4316 = !DILocation(line: 1112, column: 46, scope: !4297)
!4317 = !DILocation(line: 1114, column: 65, scope: !4297)
!4318 = !DILocation(line: 1114, column: 55, scope: !4297)
!4319 = !DILocation(line: 1114, column: 13, scope: !4297)
!4320 = !DILocation(line: 1114, column: 18, scope: !4297)
!4321 = !DILocation(line: 1114, column: 53, scope: !4297)
!4322 = !DILocation(line: 1115, column: 17, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4297, file: !1282, line: 1115, column: 17)
!4324 = !DILocation(line: 1115, column: 22, scope: !4323)
!4325 = !DILocation(line: 1115, column: 17, scope: !4297)
!4326 = !DILocation(line: 1116, column: 24, scope: !4323)
!4327 = !DILocation(line: 1116, column: 17, scope: !4323)
!4328 = !DILocation(line: 1119, column: 60, scope: !4297)
!4329 = !DILocation(line: 1119, column: 50, scope: !4297)
!4330 = !DILocation(line: 1119, column: 13, scope: !4297)
!4331 = !DILocation(line: 1119, column: 18, scope: !4297)
!4332 = !DILocation(line: 1119, column: 48, scope: !4297)
!4333 = !DILocation(line: 1120, column: 66, scope: !4297)
!4334 = !DILocation(line: 1120, column: 56, scope: !4297)
!4335 = !DILocation(line: 1120, column: 13, scope: !4297)
!4336 = !DILocation(line: 1120, column: 18, scope: !4297)
!4337 = !DILocation(line: 1120, column: 54, scope: !4297)
!4338 = !DILocation(line: 1121, column: 17, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4297, file: !1282, line: 1121, column: 17)
!4340 = !DILocation(line: 1121, column: 22, scope: !4339)
!4341 = !DILocation(line: 1121, column: 17, scope: !4297)
!4342 = !DILocation(line: 1122, column: 24, scope: !4339)
!4343 = !DILocation(line: 1122, column: 17, scope: !4339)
!4344 = !DILocation(line: 1125, column: 70, scope: !4297)
!4345 = !DILocation(line: 1125, column: 60, scope: !4297)
!4346 = !DILocation(line: 1125, column: 13, scope: !4297)
!4347 = !DILocation(line: 1125, column: 18, scope: !4297)
!4348 = !DILocation(line: 1125, column: 58, scope: !4297)
!4349 = !DILocation(line: 1127, column: 66, scope: !4297)
!4350 = !DILocation(line: 1127, column: 56, scope: !4297)
!4351 = !DILocation(line: 1127, column: 13, scope: !4297)
!4352 = !DILocation(line: 1127, column: 18, scope: !4297)
!4353 = !DILocation(line: 1127, column: 54, scope: !4297)
!4354 = !DILocation(line: 1128, column: 17, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4297, file: !1282, line: 1128, column: 17)
!4356 = !DILocation(line: 1128, column: 22, scope: !4355)
!4357 = !DILocation(line: 1128, column: 17, scope: !4297)
!4358 = !DILocation(line: 1129, column: 24, scope: !4355)
!4359 = !DILocation(line: 1129, column: 17, scope: !4355)
!4360 = !DILocation(line: 1131, column: 9, scope: !4297)
!4361 = !DILocation(line: 1132, column: 5, scope: !4285)
!4362 = !DILocation(line: 1133, column: 9, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1133, column: 9)
!4364 = !DILocation(line: 1133, column: 9, scope: !3435)
!4365 = !DILocation(line: 1134, column: 43, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4363, file: !1282, line: 1133, column: 27)
!4367 = !DILocation(line: 1134, column: 48, scope: !4366)
!4368 = !DILocation(line: 1134, column: 52, scope: !4366)
!4369 = !DILocation(line: 1134, column: 65, scope: !4366)
!4370 = !DILocation(line: 1134, column: 9, scope: !4366)
!4371 = !DILocation(line: 1134, column: 14, scope: !4366)
!4372 = !DILocation(line: 1134, column: 28, scope: !4366)
!4373 = !DILocation(line: 1134, column: 40, scope: !4366)
!4374 = !DILocation(line: 1135, column: 44, scope: !4366)
!4375 = !DILocation(line: 1135, column: 49, scope: !4366)
!4376 = !DILocation(line: 1135, column: 53, scope: !4366)
!4377 = !DILocation(line: 1135, column: 66, scope: !4366)
!4378 = !DILocation(line: 1135, column: 9, scope: !4366)
!4379 = !DILocation(line: 1135, column: 14, scope: !4366)
!4380 = !DILocation(line: 1135, column: 28, scope: !4366)
!4381 = !DILocation(line: 1135, column: 41, scope: !4366)
!4382 = !DILocation(line: 1136, column: 42, scope: !4366)
!4383 = !DILocation(line: 1136, column: 47, scope: !4366)
!4384 = !DILocation(line: 1136, column: 51, scope: !4366)
!4385 = !DILocation(line: 1136, column: 64, scope: !4366)
!4386 = !DILocation(line: 1136, column: 9, scope: !4366)
!4387 = !DILocation(line: 1136, column: 14, scope: !4366)
!4388 = !DILocation(line: 1136, column: 28, scope: !4366)
!4389 = !DILocation(line: 1136, column: 39, scope: !4366)
!4390 = !DILocation(line: 1137, column: 45, scope: !4366)
!4391 = !DILocation(line: 1137, column: 50, scope: !4366)
!4392 = !DILocation(line: 1137, column: 54, scope: !4366)
!4393 = !DILocation(line: 1137, column: 67, scope: !4366)
!4394 = !DILocation(line: 1137, column: 9, scope: !4366)
!4395 = !DILocation(line: 1137, column: 14, scope: !4366)
!4396 = !DILocation(line: 1137, column: 28, scope: !4366)
!4397 = !DILocation(line: 1137, column: 42, scope: !4366)
!4398 = !DILocation(line: 1138, column: 5, scope: !4366)
!4399 = !DILocation(line: 1140, column: 11, scope: !3435)
!4400 = !DILocation(line: 1140, column: 16, scope: !3435)
!4401 = !DILocation(line: 1140, column: 8, scope: !3435)
!4402 = !DILocation(line: 1141, column: 9, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1141, column: 9)
!4404 = !DILocation(line: 1141, column: 13, scope: !4403)
!4405 = !DILocation(line: 1141, column: 41, scope: !4403)
!4406 = !DILocation(line: 1141, column: 45, scope: !4403)
!4407 = !DILocation(line: 1141, column: 39, scope: !4403)
!4408 = !DILocation(line: 1141, column: 25, scope: !4403)
!4409 = !DILocation(line: 1141, column: 58, scope: !4403)
!4410 = !DILocation(line: 1142, column: 9, scope: !4403)
!4411 = !DILocation(line: 1142, column: 13, scope: !4403)
!4412 = !DILocation(line: 1142, column: 40, scope: !4403)
!4413 = !DILocation(line: 1142, column: 44, scope: !4403)
!4414 = !DILocation(line: 1142, column: 38, scope: !4403)
!4415 = !DILocation(line: 1142, column: 24, scope: !4403)
!4416 = !DILocation(line: 1142, column: 58, scope: !4403)
!4417 = !DILocation(line: 1143, column: 9, scope: !4403)
!4418 = !DILocation(line: 1143, column: 13, scope: !4403)
!4419 = !DILocation(line: 1143, column: 27, scope: !4403)
!4420 = !DILocation(line: 1143, column: 31, scope: !4403)
!4421 = !DILocation(line: 1143, column: 25, scope: !4403)
!4422 = !DILocation(line: 1143, column: 47, scope: !4403)
!4423 = !DILocation(line: 1143, column: 52, scope: !4403)
!4424 = !DILocation(line: 1143, column: 44, scope: !4403)
!4425 = !DILocation(line: 1143, column: 58, scope: !4403)
!4426 = !DILocation(line: 1144, column: 9, scope: !4403)
!4427 = !DILocation(line: 1144, column: 13, scope: !4403)
!4428 = !DILocation(line: 1144, column: 26, scope: !4403)
!4429 = !DILocation(line: 1144, column: 30, scope: !4403)
!4430 = !DILocation(line: 1144, column: 24, scope: !4403)
!4431 = !DILocation(line: 1144, column: 47, scope: !4403)
!4432 = !DILocation(line: 1144, column: 52, scope: !4403)
!4433 = !DILocation(line: 1144, column: 44, scope: !4403)
!4434 = !DILocation(line: 1141, column: 9, scope: !3768)
!4435 = !DILocation(line: 1145, column: 16, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4403, file: !1282, line: 1144, column: 60)
!4437 = !DILocation(line: 1146, column: 16, scope: !4436)
!4438 = !DILocation(line: 1146, column: 20, scope: !4436)
!4439 = !DILocation(line: 1146, column: 33, scope: !4436)
!4440 = !DILocation(line: 1146, column: 37, scope: !4436)
!4441 = !DILocation(line: 1146, column: 51, scope: !4436)
!4442 = !DILocation(line: 1146, column: 55, scope: !4436)
!4443 = !DILocation(line: 1146, column: 67, scope: !4436)
!4444 = !DILocation(line: 1146, column: 71, scope: !4436)
!4445 = !DILocation(line: 1145, column: 9, scope: !4436)
!4446 = !DILocation(line: 1147, column: 13, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4436, file: !1282, line: 1147, column: 13)
!4448 = !DILocation(line: 1147, column: 20, scope: !4447)
!4449 = !DILocation(line: 1147, column: 36, scope: !4447)
!4450 = !DILocation(line: 1147, column: 13, scope: !4436)
!4451 = !DILocation(line: 1148, column: 13, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4447, file: !1282, line: 1147, column: 46)
!4453 = !DILocation(line: 1150, column: 16, scope: !4436)
!4454 = !DILocation(line: 1150, column: 9, scope: !4436)
!4455 = !DILocation(line: 1152, column: 16, scope: !4436)
!4456 = !DILocation(line: 1152, column: 9, scope: !4436)
!4457 = !DILocation(line: 1153, column: 17, scope: !4436)
!4458 = !DILocation(line: 1153, column: 22, scope: !4436)
!4459 = !DILocation(line: 1153, column: 9, scope: !4436)
!4460 = !DILocation(line: 1154, column: 5, scope: !4436)
!4461 = !DILocation(line: 1157, column: 26, scope: !3435)
!4462 = !DILocation(line: 1157, column: 31, scope: !3435)
!4463 = !DILocation(line: 1158, column: 26, scope: !3435)
!4464 = !DILocation(line: 1158, column: 31, scope: !3435)
!4465 = !DILocation(line: 1157, column: 48, scope: !3435)
!4466 = !DILocation(line: 1157, column: 5, scope: !3435)
!4467 = !DILocation(line: 1157, column: 10, scope: !3435)
!4468 = !DILocation(line: 1157, column: 24, scope: !3435)
!4469 = !DILocation(line: 1159, column: 29, scope: !3435)
!4470 = !DILocation(line: 1159, column: 34, scope: !3435)
!4471 = !DILocation(line: 1159, column: 51, scope: !3435)
!4472 = !DILocation(line: 1159, column: 5, scope: !3435)
!4473 = !DILocation(line: 1159, column: 10, scope: !3435)
!4474 = !DILocation(line: 1159, column: 27, scope: !3435)
!4475 = !DILocation(line: 1161, column: 9, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1161, column: 9)
!4477 = !DILocation(line: 1161, column: 14, scope: !4476)
!4478 = !DILocation(line: 1161, column: 28, scope: !4476)
!4479 = !DILocation(line: 1161, column: 9, scope: !3435)
!4480 = !DILocation(line: 1162, column: 16, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4476, file: !1282, line: 1161, column: 54)
!4482 = !DILocation(line: 1162, column: 60, scope: !4481)
!4483 = !DILocation(line: 1162, column: 65, scope: !4481)
!4484 = !DILocation(line: 1162, column: 9, scope: !4481)
!4485 = !DILocation(line: 1163, column: 9, scope: !4481)
!4486 = !DILocation(line: 1165, column: 9, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1165, column: 9)
!4488 = !DILocation(line: 1165, column: 14, scope: !4487)
!4489 = !DILocation(line: 1165, column: 28, scope: !4487)
!4490 = !DILocation(line: 1165, column: 9, scope: !3435)
!4491 = !DILocation(line: 1166, column: 16, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4487, file: !1282, line: 1165, column: 33)
!4493 = !DILocation(line: 1169, column: 16, scope: !4492)
!4494 = !DILocation(line: 1169, column: 21, scope: !4492)
!4495 = !DILocation(line: 1166, column: 9, scope: !4492)
!4496 = !DILocation(line: 1170, column: 31, scope: !4492)
!4497 = !DILocation(line: 1170, column: 58, scope: !4492)
!4498 = !DILocation(line: 1170, column: 63, scope: !4492)
!4499 = !DILocation(line: 1170, column: 9, scope: !4492)
!4500 = !DILocation(line: 1171, column: 9, scope: !4492)
!4501 = !DILocation(line: 1174, column: 23, scope: !3435)
!4502 = !DILocation(line: 1174, column: 28, scope: !3435)
!4503 = !DILocation(line: 1174, column: 42, scope: !3435)
!4504 = !DILocation(line: 1174, column: 47, scope: !3435)
!4505 = !DILocation(line: 1174, column: 39, scope: !3435)
!4506 = !DILocation(line: 1174, column: 34, scope: !3435)
!4507 = !DILocation(line: 1174, column: 62, scope: !3435)
!4508 = !DILocation(line: 1174, column: 70, scope: !3435)
!4509 = !DILocation(line: 1174, column: 75, scope: !3435)
!4510 = !DILocation(line: 1174, column: 67, scope: !3435)
!4511 = !DILocation(line: 1174, column: 5, scope: !3435)
!4512 = !DILocation(line: 1174, column: 10, scope: !3435)
!4513 = !DILocation(line: 1174, column: 20, scope: !3435)
!4514 = !DILocation(line: 1175, column: 24, scope: !3435)
!4515 = !DILocation(line: 1175, column: 29, scope: !3435)
!4516 = !DILocation(line: 1175, column: 44, scope: !3435)
!4517 = !DILocation(line: 1175, column: 49, scope: !3435)
!4518 = !DILocation(line: 1175, column: 41, scope: !3435)
!4519 = !DILocation(line: 1175, column: 36, scope: !3435)
!4520 = !DILocation(line: 1175, column: 64, scope: !3435)
!4521 = !DILocation(line: 1175, column: 72, scope: !3435)
!4522 = !DILocation(line: 1175, column: 77, scope: !3435)
!4523 = !DILocation(line: 1175, column: 69, scope: !3435)
!4524 = !DILocation(line: 1175, column: 5, scope: !3435)
!4525 = !DILocation(line: 1175, column: 10, scope: !3435)
!4526 = !DILocation(line: 1175, column: 21, scope: !3435)
!4527 = !DILocation(line: 1176, column: 21, scope: !3435)
!4528 = !DILocation(line: 1176, column: 26, scope: !3435)
!4529 = !DILocation(line: 1176, column: 38, scope: !3435)
!4530 = !DILocation(line: 1176, column: 43, scope: !3435)
!4531 = !DILocation(line: 1176, column: 36, scope: !3435)
!4532 = !DILocation(line: 1176, column: 5, scope: !3435)
!4533 = !DILocation(line: 1176, column: 10, scope: !3435)
!4534 = !DILocation(line: 1176, column: 19, scope: !3435)
!4535 = !DILocation(line: 1178, column: 25, scope: !3435)
!4536 = !DILocation(line: 1178, column: 30, scope: !3435)
!4537 = !DILocation(line: 1178, column: 39, scope: !3435)
!4538 = !DILocation(line: 1178, column: 44, scope: !3435)
!4539 = !DILocation(line: 1178, column: 36, scope: !3435)
!4540 = !DILocation(line: 1178, column: 5, scope: !3435)
!4541 = !DILocation(line: 1178, column: 10, scope: !3435)
!4542 = !DILocation(line: 1178, column: 23, scope: !3435)
!4543 = !DILocation(line: 1179, column: 26, scope: !3435)
!4544 = !DILocation(line: 1179, column: 31, scope: !3435)
!4545 = !DILocation(line: 1179, column: 41, scope: !3435)
!4546 = !DILocation(line: 1179, column: 46, scope: !3435)
!4547 = !DILocation(line: 1179, column: 38, scope: !3435)
!4548 = !DILocation(line: 1179, column: 5, scope: !3435)
!4549 = !DILocation(line: 1179, column: 10, scope: !3435)
!4550 = !DILocation(line: 1179, column: 24, scope: !3435)
!4551 = !DILocation(line: 1180, column: 25, scope: !3435)
!4552 = !DILocation(line: 1180, column: 30, scope: !3435)
!4553 = !DILocation(line: 1180, column: 39, scope: !3435)
!4554 = !DILocation(line: 1180, column: 44, scope: !3435)
!4555 = !DILocation(line: 1180, column: 36, scope: !3435)
!4556 = !DILocation(line: 1180, column: 5, scope: !3435)
!4557 = !DILocation(line: 1180, column: 10, scope: !3435)
!4558 = !DILocation(line: 1180, column: 23, scope: !3435)
!4559 = !DILocation(line: 1181, column: 26, scope: !3435)
!4560 = !DILocation(line: 1181, column: 31, scope: !3435)
!4561 = !DILocation(line: 1181, column: 41, scope: !3435)
!4562 = !DILocation(line: 1181, column: 46, scope: !3435)
!4563 = !DILocation(line: 1181, column: 38, scope: !3435)
!4564 = !DILocation(line: 1181, column: 5, scope: !3435)
!4565 = !DILocation(line: 1181, column: 10, scope: !3435)
!4566 = !DILocation(line: 1181, column: 24, scope: !3435)
!4567 = !DILocation(line: 1182, column: 25, scope: !3435)
!4568 = !DILocation(line: 1182, column: 30, scope: !3435)
!4569 = !DILocation(line: 1182, column: 39, scope: !3435)
!4570 = !DILocation(line: 1182, column: 44, scope: !3435)
!4571 = !DILocation(line: 1182, column: 36, scope: !3435)
!4572 = !DILocation(line: 1182, column: 5, scope: !3435)
!4573 = !DILocation(line: 1182, column: 10, scope: !3435)
!4574 = !DILocation(line: 1182, column: 23, scope: !3435)
!4575 = !DILocation(line: 1183, column: 26, scope: !3435)
!4576 = !DILocation(line: 1183, column: 31, scope: !3435)
!4577 = !DILocation(line: 1183, column: 41, scope: !3435)
!4578 = !DILocation(line: 1183, column: 46, scope: !3435)
!4579 = !DILocation(line: 1183, column: 38, scope: !3435)
!4580 = !DILocation(line: 1183, column: 5, scope: !3435)
!4581 = !DILocation(line: 1183, column: 10, scope: !3435)
!4582 = !DILocation(line: 1183, column: 24, scope: !3435)
!4583 = !DILocation(line: 1184, column: 27, scope: !3435)
!4584 = !DILocation(line: 1184, column: 32, scope: !3435)
!4585 = !DILocation(line: 1184, column: 48, scope: !3435)
!4586 = !DILocation(line: 1184, column: 53, scope: !3435)
!4587 = !DILocation(line: 1184, column: 46, scope: !3435)
!4588 = !DILocation(line: 1184, column: 23, scope: !3435)
!4589 = !DILocation(line: 1184, column: 72, scope: !3435)
!4590 = !DILocation(line: 1184, column: 5, scope: !3435)
!4591 = !DILocation(line: 1184, column: 10, scope: !3435)
!4592 = !DILocation(line: 1184, column: 18, scope: !3435)
!4593 = !DILocation(line: 1186, column: 30, scope: !3435)
!4594 = !DILocation(line: 1186, column: 35, scope: !3435)
!4595 = !DILocation(line: 1186, column: 45, scope: !3435)
!4596 = !DILocation(line: 1186, column: 27, scope: !3435)
!4597 = !DILocation(line: 1186, column: 5, scope: !3435)
!4598 = !DILocation(line: 1186, column: 10, scope: !3435)
!4599 = !DILocation(line: 1186, column: 23, scope: !3435)
!4600 = !DILocation(line: 1188, column: 25, scope: !3445)
!4601 = !DILocation(line: 1188, column: 30, scope: !3445)
!4602 = !DILocation(line: 1188, column: 37, scope: !3445)
!4603 = !DILocation(line: 1188, column: 42, scope: !3445)
!4604 = !DILocation(line: 1188, column: 9, scope: !3445)
!4605 = !DILocation(line: 243, column: 12, scope: !3439, inlinedAt: !3449)
!4606 = !DILocation(line: 243, column: 23, scope: !3439, inlinedAt: !3449)
!4607 = !DILocation(line: 243, column: 20, scope: !3439, inlinedAt: !3449)
!4608 = !DILocation(line: 243, column: 26, scope: !3439, inlinedAt: !3449)
!4609 = !DILocation(line: 243, column: 14, scope: !3439, inlinedAt: !3449)
!4610 = !DILocation(line: 1188, column: 60, scope: !3445)
!4611 = !DILocation(line: 1189, column: 25, scope: !3445)
!4612 = !DILocation(line: 1189, column: 30, scope: !3445)
!4613 = !DILocation(line: 1189, column: 38, scope: !3445)
!4614 = !DILocation(line: 1189, column: 43, scope: !3445)
!4615 = !DILocation(line: 1189, column: 9, scope: !3445)
!4616 = !DILocation(line: 243, column: 12, scope: !3439, inlinedAt: !3444)
!4617 = !DILocation(line: 243, column: 23, scope: !3439, inlinedAt: !3444)
!4618 = !DILocation(line: 243, column: 20, scope: !3439, inlinedAt: !3444)
!4619 = !DILocation(line: 243, column: 26, scope: !3439, inlinedAt: !3444)
!4620 = !DILocation(line: 243, column: 14, scope: !3439, inlinedAt: !3444)
!4621 = !DILocation(line: 1188, column: 9, scope: !3768)
!4622 = !DILocation(line: 1190, column: 16, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !3445, file: !1282, line: 1189, column: 62)
!4624 = !DILocation(line: 1190, column: 9, scope: !4623)
!4625 = !DILocation(line: 1191, column: 9, scope: !4623)
!4626 = !DILocation(line: 1194, column: 9, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1194, column: 9)
!4628 = !DILocation(line: 1194, column: 14, scope: !4627)
!4629 = !DILocation(line: 1194, column: 52, scope: !4627)
!4630 = !DILocation(line: 1194, column: 57, scope: !4627)
!4631 = !DILocation(line: 1194, column: 73, scope: !4627)
!4632 = !DILocation(line: 1194, column: 78, scope: !4627)
!4633 = !DILocation(line: 1194, column: 71, scope: !4627)
!4634 = !DILocation(line: 1194, column: 50, scope: !4627)
!4635 = !DILocation(line: 1194, column: 9, scope: !3435)
!4636 = !DILocation(line: 1195, column: 16, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4627, file: !1282, line: 1194, column: 96)
!4638 = !DILocation(line: 1196, column: 16, scope: !4637)
!4639 = !DILocation(line: 1196, column: 21, scope: !4637)
!4640 = !DILocation(line: 1195, column: 9, scope: !4637)
!4641 = !DILocation(line: 1197, column: 9, scope: !4637)
!4642 = !DILocation(line: 1199, column: 9, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1199, column: 9)
!4644 = !DILocation(line: 1199, column: 14, scope: !4643)
!4645 = !DILocation(line: 1199, column: 52, scope: !4643)
!4646 = !DILocation(line: 1199, column: 57, scope: !4643)
!4647 = !DILocation(line: 1199, column: 73, scope: !4643)
!4648 = !DILocation(line: 1199, column: 78, scope: !4643)
!4649 = !DILocation(line: 1199, column: 71, scope: !4643)
!4650 = !DILocation(line: 1199, column: 50, scope: !4643)
!4651 = !DILocation(line: 1199, column: 9, scope: !3435)
!4652 = !DILocation(line: 1200, column: 16, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4643, file: !1282, line: 1199, column: 96)
!4654 = !DILocation(line: 1201, column: 16, scope: !4653)
!4655 = !DILocation(line: 1201, column: 21, scope: !4653)
!4656 = !DILocation(line: 1200, column: 9, scope: !4653)
!4657 = !DILocation(line: 1202, column: 9, scope: !4653)
!4658 = !DILocation(line: 1204, column: 9, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1204, column: 9)
!4660 = !DILocation(line: 1204, column: 14, scope: !4659)
!4661 = !DILocation(line: 1204, column: 38, scope: !4659)
!4662 = !DILocation(line: 1204, column: 43, scope: !4659)
!4663 = !DILocation(line: 1204, column: 58, scope: !4659)
!4664 = !DILocation(line: 1204, column: 37, scope: !4659)
!4665 = !DILocation(line: 1204, column: 37, scope: !4666)
!4666 = !DILexicalBlockFile(scope: !4659, file: !1282, discriminator: 1)
!4667 = !DILocation(line: 1204, column: 73, scope: !4668)
!4668 = !DILexicalBlockFile(scope: !4659, file: !1282, discriminator: 2)
!4669 = !DILocation(line: 1204, column: 78, scope: !4668)
!4670 = !DILocation(line: 1204, column: 37, scope: !4668)
!4671 = !DILocation(line: 1204, column: 37, scope: !4672)
!4672 = !DILexicalBlockFile(scope: !4659, file: !1282, discriminator: 3)
!4673 = !DILocation(line: 1204, column: 34, scope: !4672)
!4674 = !DILocation(line: 1204, column: 9, scope: !4672)
!4675 = !DILocation(line: 1205, column: 16, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4659, file: !1282, line: 1204, column: 95)
!4677 = !DILocation(line: 1207, column: 16, scope: !4676)
!4678 = !DILocation(line: 1207, column: 21, scope: !4676)
!4679 = !DILocation(line: 1205, column: 9, scope: !4676)
!4680 = !DILocation(line: 1208, column: 9, scope: !4676)
!4681 = !DILocation(line: 1211, column: 23, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !3435, file: !1282, line: 1211, column: 9)
!4683 = !DILocation(line: 1211, column: 9, scope: !4682)
!4684 = !DILocation(line: 1211, column: 27, scope: !4682)
!4685 = !DILocation(line: 1211, column: 9, scope: !3435)
!4686 = !DILocation(line: 1212, column: 16, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4682, file: !1282, line: 1211, column: 32)
!4688 = !DILocation(line: 1213, column: 60, scope: !4687)
!4689 = !DILocation(line: 1213, column: 46, scope: !4687)
!4690 = !DILocation(line: 1213, column: 45, scope: !4687)
!4691 = !DILocation(line: 1212, column: 9, scope: !4687)
!4692 = !DILocation(line: 1214, column: 9, scope: !4687)
!4693 = !DILocation(line: 1217, column: 5, scope: !3435)
!4694 = !DILocation(line: 1218, column: 1, scope: !3435)
!4695 = distinct !DISubprogram(name: "map_pixel_format", scope: !1282, file: !1282, line: 825, type: !4696, isLocal: true, isDefinition: true, scopeLine: 826, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!4696 = !DISubroutineType(types: !4697)
!4697 = !{!977, !1312, !1036}
!4698 = !DILocalVariable(name: "avctx", arg: 1, scope: !4695, file: !1282, line: 825, type: !1312)
!4699 = !DILocation(line: 825, column: 45, scope: !4695)
!4700 = !DILocalVariable(name: "sps", arg: 2, scope: !4695, file: !1282, line: 825, type: !1036)
!4701 = !DILocation(line: 825, column: 61, scope: !4695)
!4702 = !DILocalVariable(name: "desc", scope: !4695, file: !1282, line: 827, type: !4703)
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4704, size: 64, align: 64)
!4704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4705)
!4705 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPixFmtDescriptor", file: !4706, line: 123, baseType: !4707)
!4706 = !DIFile(filename: "./libavutil/pixdesc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!4707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPixFmtDescriptor", file: !4706, line: 81, size: 1280, align: 64, elements: !4708)
!4708 = !{!4709, !4710, !4711, !4712, !4713, !4714, !4727}
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4707, file: !4706, line: 82, baseType: !1323, size: 64, align: 64)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !4707, file: !4706, line: 83, baseType: !985, size: 8, align: 8, offset: 64)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_w", scope: !4707, file: !4706, line: 92, baseType: !985, size: 8, align: 8, offset: 72)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_h", scope: !4707, file: !4706, line: 101, baseType: !985, size: 8, align: 8, offset: 80)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4707, file: !4706, line: 106, baseType: !1386, size: 64, align: 64, offset: 128)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !4707, file: !4706, line: 117, baseType: !4715, size: 1024, align: 32, offset: 192)
!4715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4716, size: 1024, align: 32, elements: !1285)
!4716 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVComponentDescriptor", file: !4706, line: 70, baseType: !4717)
!4717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVComponentDescriptor", file: !4706, line: 31, size: 256, align: 32, elements: !4718)
!4718 = !{!4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726}
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !4717, file: !4706, line: 35, baseType: !977, size: 32, align: 32)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !4717, file: !4706, line: 41, baseType: !977, size: 32, align: 32, offset: 32)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4717, file: !4706, line: 47, baseType: !977, size: 32, align: 32, offset: 64)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !4717, file: !4706, line: 53, baseType: !977, size: 32, align: 32, offset: 96)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4717, file: !4706, line: 58, baseType: !977, size: 32, align: 32, offset: 128)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "step_minus1", scope: !4717, file: !4706, line: 62, baseType: !977, size: 32, align: 32, offset: 160)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "depth_minus1", scope: !4717, file: !4706, line: 65, baseType: !977, size: 32, align: 32, offset: 192)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "offset_plus1", scope: !4717, file: !4706, line: 68, baseType: !977, size: 32, align: 32, offset: 224)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !4707, file: !4706, line: 122, baseType: !1323, size: 64, align: 64, offset: 1216)
!4728 = !DILocation(line: 827, column: 31, scope: !4695)
!4729 = !DILocation(line: 828, column: 13, scope: !4695)
!4730 = !DILocation(line: 828, column: 18, scope: !4695)
!4731 = !DILocation(line: 828, column: 5, scope: !4695)
!4732 = !DILocation(line: 830, column: 13, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 830, column: 13)
!4734 = distinct !DILexicalBlock(scope: !4695, file: !1282, line: 828, column: 29)
!4735 = !DILocation(line: 830, column: 18, scope: !4733)
!4736 = !DILocation(line: 830, column: 36, scope: !4733)
!4737 = !DILocation(line: 830, column: 13, scope: !4734)
!4738 = !DILocation(line: 830, column: 42, scope: !4739)
!4739 = !DILexicalBlockFile(scope: !4733, file: !1282, discriminator: 1)
!4740 = !DILocation(line: 830, column: 47, scope: !4739)
!4741 = !DILocation(line: 830, column: 55, scope: !4739)
!4742 = !DILocation(line: 831, column: 13, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 831, column: 13)
!4744 = !DILocation(line: 831, column: 18, scope: !4743)
!4745 = !DILocation(line: 831, column: 36, scope: !4743)
!4746 = !DILocation(line: 831, column: 13, scope: !4734)
!4747 = !DILocation(line: 831, column: 42, scope: !4748)
!4748 = !DILexicalBlockFile(scope: !4743, file: !1282, discriminator: 1)
!4749 = !DILocation(line: 831, column: 47, scope: !4748)
!4750 = !DILocation(line: 831, column: 55, scope: !4748)
!4751 = !DILocation(line: 832, column: 13, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 832, column: 13)
!4753 = !DILocation(line: 832, column: 18, scope: !4752)
!4754 = !DILocation(line: 832, column: 36, scope: !4752)
!4755 = !DILocation(line: 832, column: 13, scope: !4734)
!4756 = !DILocation(line: 832, column: 42, scope: !4757)
!4757 = !DILexicalBlockFile(scope: !4752, file: !1282, discriminator: 1)
!4758 = !DILocation(line: 832, column: 47, scope: !4757)
!4759 = !DILocation(line: 832, column: 55, scope: !4757)
!4760 = !DILocation(line: 833, column: 13, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 833, column: 13)
!4762 = !DILocation(line: 833, column: 18, scope: !4761)
!4763 = !DILocation(line: 833, column: 36, scope: !4761)
!4764 = !DILocation(line: 833, column: 13, scope: !4734)
!4765 = !DILocation(line: 833, column: 42, scope: !4766)
!4766 = !DILexicalBlockFile(scope: !4761, file: !1282, discriminator: 1)
!4767 = !DILocation(line: 833, column: 47, scope: !4766)
!4768 = !DILocation(line: 833, column: 55, scope: !4766)
!4769 = !DILocation(line: 834, column: 8, scope: !4734)
!4770 = !DILocation(line: 836, column: 13, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 836, column: 13)
!4772 = !DILocation(line: 836, column: 18, scope: !4771)
!4773 = !DILocation(line: 836, column: 36, scope: !4771)
!4774 = !DILocation(line: 836, column: 13, scope: !4734)
!4775 = !DILocation(line: 836, column: 42, scope: !4776)
!4776 = !DILexicalBlockFile(scope: !4771, file: !1282, discriminator: 1)
!4777 = !DILocation(line: 836, column: 47, scope: !4776)
!4778 = !DILocation(line: 836, column: 55, scope: !4776)
!4779 = !DILocation(line: 837, column: 13, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 837, column: 13)
!4781 = !DILocation(line: 837, column: 18, scope: !4780)
!4782 = !DILocation(line: 837, column: 36, scope: !4780)
!4783 = !DILocation(line: 837, column: 13, scope: !4734)
!4784 = !DILocation(line: 837, column: 42, scope: !4785)
!4785 = !DILexicalBlockFile(scope: !4780, file: !1282, discriminator: 1)
!4786 = !DILocation(line: 837, column: 47, scope: !4785)
!4787 = !DILocation(line: 837, column: 55, scope: !4785)
!4788 = !DILocation(line: 838, column: 13, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 838, column: 13)
!4790 = !DILocation(line: 838, column: 18, scope: !4789)
!4791 = !DILocation(line: 838, column: 36, scope: !4789)
!4792 = !DILocation(line: 838, column: 13, scope: !4734)
!4793 = !DILocation(line: 838, column: 42, scope: !4794)
!4794 = !DILexicalBlockFile(scope: !4789, file: !1282, discriminator: 1)
!4795 = !DILocation(line: 838, column: 47, scope: !4794)
!4796 = !DILocation(line: 838, column: 55, scope: !4794)
!4797 = !DILocation(line: 839, column: 13, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 839, column: 13)
!4799 = !DILocation(line: 839, column: 18, scope: !4798)
!4800 = !DILocation(line: 839, column: 36, scope: !4798)
!4801 = !DILocation(line: 839, column: 13, scope: !4734)
!4802 = !DILocation(line: 839, column: 42, scope: !4803)
!4803 = !DILexicalBlockFile(scope: !4798, file: !1282, discriminator: 1)
!4804 = !DILocation(line: 839, column: 47, scope: !4803)
!4805 = !DILocation(line: 839, column: 55, scope: !4803)
!4806 = !DILocation(line: 840, column: 9, scope: !4734)
!4807 = !DILocation(line: 842, column: 13, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 842, column: 13)
!4809 = !DILocation(line: 842, column: 18, scope: !4808)
!4810 = !DILocation(line: 842, column: 36, scope: !4808)
!4811 = !DILocation(line: 842, column: 13, scope: !4734)
!4812 = !DILocation(line: 842, column: 42, scope: !4813)
!4813 = !DILexicalBlockFile(scope: !4808, file: !1282, discriminator: 1)
!4814 = !DILocation(line: 842, column: 47, scope: !4813)
!4815 = !DILocation(line: 842, column: 55, scope: !4813)
!4816 = !DILocation(line: 843, column: 13, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 843, column: 13)
!4818 = !DILocation(line: 843, column: 18, scope: !4817)
!4819 = !DILocation(line: 843, column: 36, scope: !4817)
!4820 = !DILocation(line: 843, column: 13, scope: !4734)
!4821 = !DILocation(line: 843, column: 42, scope: !4822)
!4822 = !DILexicalBlockFile(scope: !4817, file: !1282, discriminator: 1)
!4823 = !DILocation(line: 843, column: 47, scope: !4822)
!4824 = !DILocation(line: 843, column: 55, scope: !4822)
!4825 = !DILocation(line: 844, column: 13, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 844, column: 13)
!4827 = !DILocation(line: 844, column: 18, scope: !4826)
!4828 = !DILocation(line: 844, column: 36, scope: !4826)
!4829 = !DILocation(line: 844, column: 13, scope: !4734)
!4830 = !DILocation(line: 844, column: 42, scope: !4831)
!4831 = !DILexicalBlockFile(scope: !4826, file: !1282, discriminator: 1)
!4832 = !DILocation(line: 844, column: 47, scope: !4831)
!4833 = !DILocation(line: 844, column: 55, scope: !4831)
!4834 = !DILocation(line: 845, column: 13, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 845, column: 13)
!4836 = !DILocation(line: 845, column: 18, scope: !4835)
!4837 = !DILocation(line: 845, column: 36, scope: !4835)
!4838 = !DILocation(line: 845, column: 13, scope: !4734)
!4839 = !DILocation(line: 845, column: 42, scope: !4840)
!4840 = !DILexicalBlockFile(scope: !4835, file: !1282, discriminator: 1)
!4841 = !DILocation(line: 845, column: 47, scope: !4840)
!4842 = !DILocation(line: 845, column: 55, scope: !4840)
!4843 = !DILocation(line: 846, column: 9, scope: !4734)
!4844 = !DILocation(line: 848, column: 13, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 848, column: 13)
!4846 = !DILocation(line: 848, column: 18, scope: !4845)
!4847 = !DILocation(line: 848, column: 36, scope: !4845)
!4848 = !DILocation(line: 848, column: 13, scope: !4734)
!4849 = !DILocation(line: 848, column: 42, scope: !4850)
!4850 = !DILexicalBlockFile(scope: !4845, file: !1282, discriminator: 1)
!4851 = !DILocation(line: 848, column: 47, scope: !4850)
!4852 = !DILocation(line: 848, column: 55, scope: !4850)
!4853 = !DILocation(line: 849, column: 13, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 849, column: 13)
!4855 = !DILocation(line: 849, column: 18, scope: !4854)
!4856 = !DILocation(line: 849, column: 36, scope: !4854)
!4857 = !DILocation(line: 849, column: 13, scope: !4734)
!4858 = !DILocation(line: 849, column: 42, scope: !4859)
!4859 = !DILexicalBlockFile(scope: !4854, file: !1282, discriminator: 1)
!4860 = !DILocation(line: 849, column: 47, scope: !4859)
!4861 = !DILocation(line: 849, column: 55, scope: !4859)
!4862 = !DILocation(line: 850, column: 13, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 850, column: 13)
!4864 = !DILocation(line: 850, column: 18, scope: !4863)
!4865 = !DILocation(line: 850, column: 36, scope: !4863)
!4866 = !DILocation(line: 850, column: 13, scope: !4734)
!4867 = !DILocation(line: 850, column: 42, scope: !4868)
!4868 = !DILexicalBlockFile(scope: !4863, file: !1282, discriminator: 1)
!4869 = !DILocation(line: 850, column: 47, scope: !4868)
!4870 = !DILocation(line: 850, column: 55, scope: !4868)
!4871 = !DILocation(line: 851, column: 13, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4734, file: !1282, line: 851, column: 13)
!4873 = !DILocation(line: 851, column: 18, scope: !4872)
!4874 = !DILocation(line: 851, column: 36, scope: !4872)
!4875 = !DILocation(line: 851, column: 13, scope: !4734)
!4876 = !DILocation(line: 851, column: 42, scope: !4877)
!4877 = !DILexicalBlockFile(scope: !4872, file: !1282, discriminator: 1)
!4878 = !DILocation(line: 851, column: 47, scope: !4877)
!4879 = !DILocation(line: 851, column: 55, scope: !4877)
!4880 = !DILocation(line: 852, column: 9, scope: !4734)
!4881 = !DILocation(line: 854, column: 16, scope: !4734)
!4882 = !DILocation(line: 857, column: 16, scope: !4734)
!4883 = !DILocation(line: 857, column: 21, scope: !4734)
!4884 = !DILocation(line: 857, column: 40, scope: !4734)
!4885 = !DILocation(line: 857, column: 45, scope: !4734)
!4886 = !DILocation(line: 854, column: 9, scope: !4734)
!4887 = !DILocation(line: 858, column: 9, scope: !4734)
!4888 = !DILocation(line: 861, column: 32, scope: !4695)
!4889 = !DILocation(line: 861, column: 37, scope: !4695)
!4890 = !DILocation(line: 861, column: 12, scope: !4695)
!4891 = !DILocation(line: 861, column: 10, scope: !4695)
!4892 = !DILocation(line: 862, column: 10, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4695, file: !1282, line: 862, column: 9)
!4894 = !DILocation(line: 862, column: 9, scope: !4695)
!4895 = !DILocation(line: 863, column: 9, scope: !4893)
!4896 = !DILocation(line: 865, column: 22, scope: !4695)
!4897 = !DILocation(line: 865, column: 27, scope: !4695)
!4898 = !DILocation(line: 865, column: 37, scope: !4695)
!4899 = !DILocation(line: 865, column: 5, scope: !4695)
!4900 = !DILocation(line: 865, column: 10, scope: !4695)
!4901 = !DILocation(line: 865, column: 20, scope: !4695)
!4902 = !DILocation(line: 866, column: 39, scope: !4695)
!4903 = !DILocation(line: 866, column: 45, scope: !4695)
!4904 = !DILocation(line: 866, column: 22, scope: !4695)
!4905 = !DILocation(line: 866, column: 27, scope: !4695)
!4906 = !DILocation(line: 866, column: 37, scope: !4695)
!4907 = !DILocation(line: 866, column: 5, scope: !4695)
!4908 = !DILocation(line: 866, column: 10, scope: !4695)
!4909 = !DILocation(line: 866, column: 20, scope: !4695)
!4910 = !DILocation(line: 867, column: 39, scope: !4695)
!4911 = !DILocation(line: 867, column: 45, scope: !4695)
!4912 = !DILocation(line: 867, column: 22, scope: !4695)
!4913 = !DILocation(line: 867, column: 27, scope: !4695)
!4914 = !DILocation(line: 867, column: 37, scope: !4695)
!4915 = !DILocation(line: 867, column: 5, scope: !4695)
!4916 = !DILocation(line: 867, column: 10, scope: !4695)
!4917 = !DILocation(line: 867, column: 20, scope: !4695)
!4918 = !DILocation(line: 869, column: 24, scope: !4695)
!4919 = !DILocation(line: 869, column: 29, scope: !4695)
!4920 = !DILocation(line: 869, column: 39, scope: !4695)
!4921 = !DILocation(line: 869, column: 5, scope: !4695)
!4922 = !DILocation(line: 869, column: 10, scope: !4695)
!4923 = !DILocation(line: 869, column: 22, scope: !4695)
!4924 = !DILocation(line: 871, column: 5, scope: !4695)
!4925 = !DILocation(line: 872, column: 1, scope: !4695)
!4926 = distinct !DISubprogram(name: "set_default_scaling_list_data", scope: !1282, file: !1282, line: 723, type: !4927, isLocal: true, isDefinition: true, scopeLine: 724, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{null, !4929}
!4929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64, align: 64)
!4930 = !DILocalVariable(name: "sl", arg: 1, scope: !4926, file: !1282, line: 723, type: !4929)
!4931 = !DILocation(line: 723, column: 56, scope: !4926)
!4932 = !DILocalVariable(name: "matrixId", scope: !4926, file: !1282, line: 725, type: !977)
!4933 = !DILocation(line: 725, column: 9, scope: !4926)
!4934 = !DILocation(line: 727, column: 19, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4926, file: !1282, line: 727, column: 5)
!4936 = !DILocation(line: 727, column: 10, scope: !4935)
!4937 = !DILocation(line: 727, column: 24, scope: !4938)
!4938 = !DILexicalBlockFile(scope: !4939, file: !1282, discriminator: 1)
!4939 = distinct !DILexicalBlock(scope: !4935, file: !1282, line: 727, column: 5)
!4940 = !DILocation(line: 727, column: 33, scope: !4938)
!4941 = !DILocation(line: 727, column: 5, scope: !4938)
!4942 = !DILocation(line: 729, column: 26, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4939, file: !1282, line: 727, column: 50)
!4944 = !DILocation(line: 729, column: 16, scope: !4943)
!4945 = !DILocation(line: 729, column: 20, scope: !4943)
!4946 = !DILocation(line: 729, column: 9, scope: !4943)
!4947 = !DILocation(line: 730, column: 22, scope: !4943)
!4948 = !DILocation(line: 730, column: 9, scope: !4943)
!4949 = !DILocation(line: 730, column: 13, scope: !4943)
!4950 = !DILocation(line: 730, column: 32, scope: !4943)
!4951 = !DILocation(line: 731, column: 22, scope: !4943)
!4952 = !DILocation(line: 731, column: 9, scope: !4943)
!4953 = !DILocation(line: 731, column: 13, scope: !4943)
!4954 = !DILocation(line: 731, column: 32, scope: !4943)
!4955 = !DILocation(line: 732, column: 5, scope: !4943)
!4956 = !DILocation(line: 727, column: 46, scope: !4957)
!4957 = !DILexicalBlockFile(scope: !4939, file: !1282, discriminator: 2)
!4958 = !DILocation(line: 727, column: 5, scope: !4957)
!4959 = distinct !{!4959, !4960}
!4960 = !DILocation(line: 727, column: 5, scope: !4926)
!4961 = !DILocation(line: 733, column: 12, scope: !4926)
!4962 = !DILocation(line: 733, column: 16, scope: !4926)
!4963 = !DILocation(line: 733, column: 5, scope: !4926)
!4964 = !DILocation(line: 734, column: 12, scope: !4926)
!4965 = !DILocation(line: 734, column: 16, scope: !4926)
!4966 = !DILocation(line: 734, column: 5, scope: !4926)
!4967 = !DILocation(line: 735, column: 12, scope: !4926)
!4968 = !DILocation(line: 735, column: 16, scope: !4926)
!4969 = !DILocation(line: 735, column: 5, scope: !4926)
!4970 = !DILocation(line: 736, column: 12, scope: !4926)
!4971 = !DILocation(line: 736, column: 16, scope: !4926)
!4972 = !DILocation(line: 736, column: 5, scope: !4926)
!4973 = !DILocation(line: 737, column: 12, scope: !4926)
!4974 = !DILocation(line: 737, column: 16, scope: !4926)
!4975 = !DILocation(line: 737, column: 5, scope: !4926)
!4976 = !DILocation(line: 738, column: 12, scope: !4926)
!4977 = !DILocation(line: 738, column: 16, scope: !4926)
!4978 = !DILocation(line: 738, column: 5, scope: !4926)
!4979 = !DILocation(line: 739, column: 12, scope: !4926)
!4980 = !DILocation(line: 739, column: 16, scope: !4926)
!4981 = !DILocation(line: 739, column: 5, scope: !4926)
!4982 = !DILocation(line: 740, column: 12, scope: !4926)
!4983 = !DILocation(line: 740, column: 16, scope: !4926)
!4984 = !DILocation(line: 740, column: 5, scope: !4926)
!4985 = !DILocation(line: 741, column: 12, scope: !4926)
!4986 = !DILocation(line: 741, column: 16, scope: !4926)
!4987 = !DILocation(line: 741, column: 5, scope: !4926)
!4988 = !DILocation(line: 742, column: 12, scope: !4926)
!4989 = !DILocation(line: 742, column: 16, scope: !4926)
!4990 = !DILocation(line: 742, column: 5, scope: !4926)
!4991 = !DILocation(line: 743, column: 12, scope: !4926)
!4992 = !DILocation(line: 743, column: 16, scope: !4926)
!4993 = !DILocation(line: 743, column: 5, scope: !4926)
!4994 = !DILocation(line: 744, column: 12, scope: !4926)
!4995 = !DILocation(line: 744, column: 16, scope: !4926)
!4996 = !DILocation(line: 744, column: 5, scope: !4926)
!4997 = !DILocation(line: 745, column: 12, scope: !4926)
!4998 = !DILocation(line: 745, column: 16, scope: !4926)
!4999 = !DILocation(line: 745, column: 5, scope: !4926)
!5000 = !DILocation(line: 746, column: 12, scope: !4926)
!5001 = !DILocation(line: 746, column: 16, scope: !4926)
!5002 = !DILocation(line: 746, column: 5, scope: !4926)
!5003 = !DILocation(line: 747, column: 12, scope: !4926)
!5004 = !DILocation(line: 747, column: 16, scope: !4926)
!5005 = !DILocation(line: 747, column: 5, scope: !4926)
!5006 = !DILocation(line: 748, column: 12, scope: !4926)
!5007 = !DILocation(line: 748, column: 16, scope: !4926)
!5008 = !DILocation(line: 748, column: 5, scope: !4926)
!5009 = !DILocation(line: 749, column: 12, scope: !4926)
!5010 = !DILocation(line: 749, column: 16, scope: !4926)
!5011 = !DILocation(line: 749, column: 5, scope: !4926)
!5012 = !DILocation(line: 750, column: 12, scope: !4926)
!5013 = !DILocation(line: 750, column: 16, scope: !4926)
!5014 = !DILocation(line: 750, column: 5, scope: !4926)
!5015 = !DILocation(line: 751, column: 1, scope: !4926)
!5016 = distinct !DISubprogram(name: "scaling_list_data", scope: !1282, file: !1282, line: 753, type: !5017, isLocal: true, isDefinition: true, scopeLine: 754, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!5017 = !DISubroutineType(types: !5018)
!5018 = !{!977, !1301, !1312, !4929, !1036}
!5019 = !DILocalVariable(name: "gb", arg: 1, scope: !5016, file: !1282, line: 753, type: !1301)
!5020 = !DILocation(line: 753, column: 45, scope: !5016)
!5021 = !DILocalVariable(name: "avctx", arg: 2, scope: !5016, file: !1282, line: 753, type: !1312)
!5022 = !DILocation(line: 753, column: 65, scope: !5016)
!5023 = !DILocalVariable(name: "sl", arg: 3, scope: !5016, file: !1282, line: 753, type: !4929)
!5024 = !DILocation(line: 753, column: 85, scope: !5016)
!5025 = !DILocalVariable(name: "sps", arg: 4, scope: !5016, file: !1282, line: 753, type: !1036)
!5026 = !DILocation(line: 753, column: 98, scope: !5016)
!5027 = !DILocalVariable(name: "scaling_list_pred_mode_flag", scope: !5016, file: !1282, line: 755, type: !985)
!5028 = !DILocation(line: 755, column: 13, scope: !5016)
!5029 = !DILocalVariable(name: "scaling_list_dc_coef", scope: !5016, file: !1282, line: 756, type: !5030)
!5030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1137, size: 384, align: 32, elements: !1124)
!5031 = !DILocation(line: 756, column: 13, scope: !5016)
!5032 = !DILocalVariable(name: "size_id", scope: !5016, file: !1282, line: 757, type: !977)
!5033 = !DILocation(line: 757, column: 9, scope: !5016)
!5034 = !DILocalVariable(name: "matrix_id", scope: !5016, file: !1282, line: 757, type: !977)
!5035 = !DILocation(line: 757, column: 18, scope: !5016)
!5036 = !DILocalVariable(name: "pos", scope: !5016, file: !1282, line: 757, type: !977)
!5037 = !DILocation(line: 757, column: 29, scope: !5016)
!5038 = !DILocalVariable(name: "i", scope: !5016, file: !1282, line: 758, type: !977)
!5039 = !DILocation(line: 758, column: 9, scope: !5016)
!5040 = !DILocation(line: 760, column: 18, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5016, file: !1282, line: 760, column: 5)
!5042 = !DILocation(line: 760, column: 10, scope: !5041)
!5043 = !DILocation(line: 760, column: 23, scope: !5044)
!5044 = !DILexicalBlockFile(scope: !5045, file: !1282, discriminator: 1)
!5045 = distinct !DILexicalBlock(scope: !5041, file: !1282, line: 760, column: 5)
!5046 = !DILocation(line: 760, column: 31, scope: !5044)
!5047 = !DILocation(line: 760, column: 5, scope: !5044)
!5048 = !DILocation(line: 761, column: 24, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5045, file: !1282, line: 761, column: 9)
!5050 = !DILocation(line: 761, column: 14, scope: !5049)
!5051 = !DILocation(line: 761, column: 29, scope: !5052)
!5052 = !DILexicalBlockFile(scope: !5053, file: !1282, discriminator: 1)
!5053 = distinct !DILexicalBlock(scope: !5049, file: !1282, line: 761, column: 9)
!5054 = !DILocation(line: 761, column: 39, scope: !5052)
!5055 = !DILocation(line: 761, column: 9, scope: !5052)
!5056 = !DILocation(line: 762, column: 53, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5053, file: !1282, line: 761, column: 83)
!5058 = !DILocation(line: 762, column: 43, scope: !5057)
!5059 = !DILocation(line: 762, column: 41, scope: !5057)
!5060 = !DILocation(line: 763, column: 18, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5057, file: !1282, line: 763, column: 17)
!5062 = !DILocation(line: 763, column: 17, scope: !5057)
!5063 = !DILocalVariable(name: "delta", scope: !5064, file: !1282, line: 764, type: !978)
!5064 = distinct !DILexicalBlock(scope: !5061, file: !1282, line: 763, column: 47)
!5065 = !DILocation(line: 764, column: 30, scope: !5064)
!5066 = !DILocation(line: 764, column: 57, scope: !5064)
!5067 = !DILocation(line: 764, column: 38, scope: !5064)
!5068 = !DILocation(line: 767, column: 21, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5064, file: !1282, line: 767, column: 21)
!5070 = !DILocation(line: 767, column: 21, scope: !5064)
!5071 = !DILocation(line: 769, column: 31, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5069, file: !1282, line: 767, column: 28)
!5073 = !DILocation(line: 769, column: 39, scope: !5072)
!5074 = !DILocation(line: 769, column: 30, scope: !5072)
!5075 = !DILocation(line: 769, column: 27, scope: !5072)
!5076 = !DILocation(line: 770, column: 25, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5072, file: !1282, line: 770, column: 25)
!5078 = !DILocation(line: 770, column: 37, scope: !5077)
!5079 = !DILocation(line: 770, column: 35, scope: !5077)
!5080 = !DILocation(line: 770, column: 25, scope: !5072)
!5081 = !DILocation(line: 771, column: 32, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5077, file: !1282, line: 770, column: 44)
!5083 = !DILocation(line: 772, column: 77, scope: !5082)
!5084 = !DILocation(line: 771, column: 25, scope: !5082)
!5085 = !DILocation(line: 773, column: 25, scope: !5082)
!5086 = !DILocation(line: 776, column: 44, scope: !5072)
!5087 = !DILocation(line: 776, column: 28, scope: !5072)
!5088 = !DILocation(line: 776, column: 35, scope: !5072)
!5089 = !DILocation(line: 776, column: 32, scope: !5072)
!5090 = !DILocation(line: 776, column: 21, scope: !5072)
!5091 = !DILocation(line: 777, column: 44, scope: !5072)
!5092 = !DILocation(line: 777, column: 56, scope: !5072)
!5093 = !DILocation(line: 777, column: 54, scope: !5072)
!5094 = !DILocation(line: 777, column: 28, scope: !5072)
!5095 = !DILocation(line: 777, column: 35, scope: !5072)
!5096 = !DILocation(line: 777, column: 32, scope: !5072)
!5097 = !DILocation(line: 778, column: 28, scope: !5072)
!5098 = !DILocation(line: 778, column: 36, scope: !5072)
!5099 = !DILocation(line: 779, column: 25, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5072, file: !1282, line: 779, column: 25)
!5101 = !DILocation(line: 779, column: 33, scope: !5100)
!5102 = !DILocation(line: 779, column: 25, scope: !5072)
!5103 = !DILocation(line: 780, column: 84, scope: !5100)
!5104 = !DILocation(line: 780, column: 96, scope: !5100)
!5105 = !DILocation(line: 780, column: 94, scope: !5100)
!5106 = !DILocation(line: 780, column: 61, scope: !5100)
!5107 = !DILocation(line: 780, column: 71, scope: !5100)
!5108 = !DILocation(line: 780, column: 79, scope: !5100)
!5109 = !DILocation(line: 780, column: 65, scope: !5100)
!5110 = !DILocation(line: 780, column: 48, scope: !5100)
!5111 = !DILocation(line: 780, column: 25, scope: !5100)
!5112 = !DILocation(line: 780, column: 35, scope: !5100)
!5113 = !DILocation(line: 780, column: 43, scope: !5100)
!5114 = !DILocation(line: 780, column: 29, scope: !5100)
!5115 = !DILocation(line: 780, column: 59, scope: !5100)
!5116 = !DILocation(line: 781, column: 17, scope: !5072)
!5117 = !DILocation(line: 782, column: 13, scope: !5064)
!5118 = !DILocalVariable(name: "next_coef", scope: !5119, file: !1282, line: 783, type: !977)
!5119 = distinct !DILexicalBlock(scope: !5061, file: !1282, line: 782, column: 20)
!5120 = !DILocation(line: 783, column: 21, scope: !5119)
!5121 = !DILocalVariable(name: "coef_num", scope: !5119, file: !1282, line: 783, type: !977)
!5122 = !DILocation(line: 783, column: 32, scope: !5119)
!5123 = !DILocalVariable(name: "scaling_list_delta_coef", scope: !5119, file: !1282, line: 784, type: !1137)
!5124 = !DILocation(line: 784, column: 25, scope: !5119)
!5125 = !DILocation(line: 786, column: 27, scope: !5119)
!5126 = !DILocation(line: 787, column: 48, scope: !5119)
!5127 = !DILocation(line: 787, column: 56, scope: !5119)
!5128 = !DILocation(line: 787, column: 45, scope: !5119)
!5129 = !DILocation(line: 787, column: 39, scope: !5119)
!5130 = !DILocation(line: 787, column: 34, scope: !5119)
!5131 = !DILocation(line: 787, column: 29, scope: !5119)
!5132 = !DILocation(line: 787, column: 78, scope: !5133)
!5133 = !DILexicalBlockFile(scope: !5119, file: !1282, discriminator: 1)
!5134 = !DILocation(line: 787, column: 86, scope: !5133)
!5135 = !DILocation(line: 787, column: 75, scope: !5133)
!5136 = !DILocation(line: 787, column: 69, scope: !5133)
!5137 = !DILocation(line: 787, column: 29, scope: !5133)
!5138 = !DILocation(line: 787, column: 29, scope: !5139)
!5139 = !DILexicalBlockFile(scope: !5119, file: !1282, discriminator: 2)
!5140 = !DILocation(line: 787, column: 29, scope: !5141)
!5141 = !DILexicalBlockFile(scope: !5119, file: !1282, discriminator: 3)
!5142 = !DILocation(line: 787, column: 26, scope: !5141)
!5143 = !DILocation(line: 788, column: 21, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5119, file: !1282, line: 788, column: 21)
!5145 = !DILocation(line: 788, column: 29, scope: !5144)
!5146 = !DILocation(line: 788, column: 21, scope: !5119)
!5147 = !DILocation(line: 789, column: 82, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5144, file: !1282, line: 788, column: 34)
!5149 = !DILocation(line: 789, column: 68, scope: !5148)
!5150 = !DILocation(line: 789, column: 86, scope: !5148)
!5151 = !DILocation(line: 789, column: 55, scope: !5148)
!5152 = !DILocation(line: 789, column: 21, scope: !5148)
!5153 = !DILocation(line: 789, column: 42, scope: !5148)
!5154 = !DILocation(line: 789, column: 50, scope: !5148)
!5155 = !DILocation(line: 789, column: 66, scope: !5148)
!5156 = !DILocation(line: 790, column: 67, scope: !5148)
!5157 = !DILocation(line: 790, column: 33, scope: !5148)
!5158 = !DILocation(line: 790, column: 54, scope: !5148)
!5159 = !DILocation(line: 790, column: 62, scope: !5148)
!5160 = !DILocation(line: 790, column: 31, scope: !5148)
!5161 = !DILocation(line: 791, column: 57, scope: !5148)
!5162 = !DILocation(line: 791, column: 44, scope: !5148)
!5163 = !DILocation(line: 791, column: 21, scope: !5148)
!5164 = !DILocation(line: 791, column: 31, scope: !5148)
!5165 = !DILocation(line: 791, column: 39, scope: !5148)
!5166 = !DILocation(line: 791, column: 25, scope: !5148)
!5167 = !DILocation(line: 791, column: 55, scope: !5148)
!5168 = !DILocation(line: 792, column: 17, scope: !5148)
!5169 = !DILocation(line: 793, column: 24, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5119, file: !1282, line: 793, column: 17)
!5171 = !DILocation(line: 793, column: 22, scope: !5170)
!5172 = !DILocation(line: 793, column: 29, scope: !5173)
!5173 = !DILexicalBlockFile(scope: !5174, file: !1282, discriminator: 1)
!5174 = distinct !DILexicalBlock(scope: !5170, file: !1282, line: 793, column: 17)
!5175 = !DILocation(line: 793, column: 33, scope: !5173)
!5176 = !DILocation(line: 793, column: 31, scope: !5173)
!5177 = !DILocation(line: 793, column: 17, scope: !5173)
!5178 = !DILocation(line: 794, column: 25, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5180, file: !1282, line: 794, column: 25)
!5180 = distinct !DILexicalBlock(scope: !5174, file: !1282, line: 793, column: 48)
!5181 = !DILocation(line: 794, column: 33, scope: !5179)
!5182 = !DILocation(line: 794, column: 25, scope: !5180)
!5183 = !DILocation(line: 795, column: 58, scope: !5179)
!5184 = !DILocation(line: 795, column: 35, scope: !5179)
!5185 = !DILocation(line: 795, column: 33, scope: !5179)
!5186 = !DILocation(line: 796, column: 58, scope: !5179)
!5187 = !DILocation(line: 796, column: 35, scope: !5179)
!5188 = !DILocation(line: 795, column: 61, scope: !5179)
!5189 = !DILocation(line: 795, column: 29, scope: !5179)
!5190 = !DILocation(line: 795, column: 25, scope: !5179)
!5191 = !DILocation(line: 798, column: 58, scope: !5179)
!5192 = !DILocation(line: 798, column: 35, scope: !5179)
!5193 = !DILocation(line: 798, column: 33, scope: !5179)
!5194 = !DILocation(line: 799, column: 58, scope: !5179)
!5195 = !DILocation(line: 799, column: 35, scope: !5179)
!5196 = !DILocation(line: 798, column: 61, scope: !5179)
!5197 = !DILocation(line: 798, column: 29, scope: !5179)
!5198 = !DILocation(line: 801, column: 61, scope: !5180)
!5199 = !DILocation(line: 801, column: 47, scope: !5180)
!5200 = !DILocation(line: 801, column: 45, scope: !5180)
!5201 = !DILocation(line: 802, column: 34, scope: !5180)
!5202 = !DILocation(line: 802, column: 44, scope: !5180)
!5203 = !DILocation(line: 802, column: 53, scope: !5180)
!5204 = !DILocation(line: 802, column: 51, scope: !5180)
!5205 = !DILocation(line: 802, column: 78, scope: !5180)
!5206 = !DILocation(line: 802, column: 31, scope: !5180)
!5207 = !DILocation(line: 803, column: 55, scope: !5180)
!5208 = !DILocation(line: 803, column: 48, scope: !5180)
!5209 = !DILocation(line: 803, column: 21, scope: !5180)
!5210 = !DILocation(line: 803, column: 37, scope: !5180)
!5211 = !DILocation(line: 803, column: 28, scope: !5180)
!5212 = !DILocation(line: 803, column: 25, scope: !5180)
!5213 = !DILocation(line: 803, column: 53, scope: !5180)
!5214 = !DILocation(line: 804, column: 17, scope: !5180)
!5215 = !DILocation(line: 793, column: 44, scope: !5216)
!5216 = !DILexicalBlockFile(scope: !5174, file: !1282, discriminator: 2)
!5217 = !DILocation(line: 793, column: 17, scope: !5216)
!5218 = distinct !{!5218, !5219}
!5219 = !DILocation(line: 793, column: 17, scope: !5119)
!5220 = !DILocation(line: 806, column: 9, scope: !5057)
!5221 = !DILocation(line: 761, column: 59, scope: !5222)
!5222 = !DILexicalBlockFile(scope: !5053, file: !1282, discriminator: 2)
!5223 = !DILocation(line: 761, column: 67, scope: !5222)
!5224 = !DILocation(line: 761, column: 58, scope: !5222)
!5225 = !DILocation(line: 761, column: 54, scope: !5222)
!5226 = !DILocation(line: 761, column: 9, scope: !5222)
!5227 = distinct !{!5227, !5228}
!5228 = !DILocation(line: 761, column: 9, scope: !5045)
!5229 = !DILocation(line: 806, column: 9, scope: !5230)
!5230 = !DILexicalBlockFile(scope: !5049, file: !1282, discriminator: 1)
!5231 = !DILocation(line: 760, column: 43, scope: !5232)
!5232 = !DILexicalBlockFile(scope: !5045, file: !1282, discriminator: 2)
!5233 = !DILocation(line: 760, column: 5, scope: !5232)
!5234 = distinct !{!5234, !5235}
!5235 = !DILocation(line: 760, column: 5, scope: !5016)
!5236 = !DILocation(line: 808, column: 9, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5016, file: !1282, line: 808, column: 9)
!5238 = !DILocation(line: 808, column: 14, scope: !5237)
!5239 = !DILocation(line: 808, column: 32, scope: !5237)
!5240 = !DILocation(line: 808, column: 9, scope: !5016)
!5241 = !DILocation(line: 809, column: 16, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5243, file: !1282, line: 809, column: 9)
!5243 = distinct !DILexicalBlock(scope: !5237, file: !1282, line: 808, column: 38)
!5244 = !DILocation(line: 809, column: 14, scope: !5242)
!5245 = !DILocation(line: 809, column: 21, scope: !5246)
!5246 = !DILexicalBlockFile(scope: !5247, file: !1282, discriminator: 1)
!5247 = distinct !DILexicalBlock(scope: !5242, file: !1282, line: 809, column: 9)
!5248 = !DILocation(line: 809, column: 23, scope: !5246)
!5249 = !DILocation(line: 809, column: 9, scope: !5246)
!5250 = !DILocation(line: 810, column: 44, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5247, file: !1282, line: 809, column: 34)
!5252 = !DILocation(line: 810, column: 31, scope: !5251)
!5253 = !DILocation(line: 810, column: 35, scope: !5251)
!5254 = !DILocation(line: 810, column: 26, scope: !5251)
!5255 = !DILocation(line: 810, column: 13, scope: !5251)
!5256 = !DILocation(line: 810, column: 17, scope: !5251)
!5257 = !DILocation(line: 810, column: 29, scope: !5251)
!5258 = !DILocation(line: 811, column: 44, scope: !5251)
!5259 = !DILocation(line: 811, column: 31, scope: !5251)
!5260 = !DILocation(line: 811, column: 35, scope: !5251)
!5261 = !DILocation(line: 811, column: 26, scope: !5251)
!5262 = !DILocation(line: 811, column: 13, scope: !5251)
!5263 = !DILocation(line: 811, column: 17, scope: !5251)
!5264 = !DILocation(line: 811, column: 29, scope: !5251)
!5265 = !DILocation(line: 812, column: 44, scope: !5251)
!5266 = !DILocation(line: 812, column: 31, scope: !5251)
!5267 = !DILocation(line: 812, column: 35, scope: !5251)
!5268 = !DILocation(line: 812, column: 26, scope: !5251)
!5269 = !DILocation(line: 812, column: 13, scope: !5251)
!5270 = !DILocation(line: 812, column: 17, scope: !5251)
!5271 = !DILocation(line: 812, column: 29, scope: !5251)
!5272 = !DILocation(line: 813, column: 44, scope: !5251)
!5273 = !DILocation(line: 813, column: 31, scope: !5251)
!5274 = !DILocation(line: 813, column: 35, scope: !5251)
!5275 = !DILocation(line: 813, column: 26, scope: !5251)
!5276 = !DILocation(line: 813, column: 13, scope: !5251)
!5277 = !DILocation(line: 813, column: 17, scope: !5251)
!5278 = !DILocation(line: 813, column: 29, scope: !5251)
!5279 = !DILocation(line: 814, column: 9, scope: !5251)
!5280 = !DILocation(line: 809, column: 30, scope: !5281)
!5281 = !DILexicalBlockFile(scope: !5247, file: !1282, discriminator: 2)
!5282 = !DILocation(line: 809, column: 9, scope: !5281)
!5283 = distinct !{!5283, !5284}
!5284 = !DILocation(line: 809, column: 9, scope: !5243)
!5285 = !DILocation(line: 815, column: 27, scope: !5243)
!5286 = !DILocation(line: 815, column: 31, scope: !5243)
!5287 = !DILocation(line: 815, column: 9, scope: !5243)
!5288 = !DILocation(line: 815, column: 13, scope: !5243)
!5289 = !DILocation(line: 815, column: 25, scope: !5243)
!5290 = !DILocation(line: 816, column: 27, scope: !5243)
!5291 = !DILocation(line: 816, column: 31, scope: !5243)
!5292 = !DILocation(line: 816, column: 9, scope: !5243)
!5293 = !DILocation(line: 816, column: 13, scope: !5243)
!5294 = !DILocation(line: 816, column: 25, scope: !5243)
!5295 = !DILocation(line: 817, column: 27, scope: !5243)
!5296 = !DILocation(line: 817, column: 31, scope: !5243)
!5297 = !DILocation(line: 817, column: 9, scope: !5243)
!5298 = !DILocation(line: 817, column: 13, scope: !5243)
!5299 = !DILocation(line: 817, column: 25, scope: !5243)
!5300 = !DILocation(line: 818, column: 27, scope: !5243)
!5301 = !DILocation(line: 818, column: 31, scope: !5243)
!5302 = !DILocation(line: 818, column: 9, scope: !5243)
!5303 = !DILocation(line: 818, column: 13, scope: !5243)
!5304 = !DILocation(line: 818, column: 25, scope: !5243)
!5305 = !DILocation(line: 819, column: 5, scope: !5243)
!5306 = !DILocation(line: 822, column: 5, scope: !5016)
!5307 = !DILocation(line: 823, column: 1, scope: !5016)
!5308 = distinct !DISubprogram(name: "decode_vui", scope: !1282, file: !1282, line: 558, type: !5309, isLocal: true, isDefinition: true, scopeLine: 560, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!5309 = !DISubroutineType(types: !5310)
!5310 = !{null, !1301, !1312, !977, !1036}
!5311 = !DILocalVariable(name: "gb", arg: 1, scope: !5308, file: !1282, line: 558, type: !1301)
!5312 = !DILocation(line: 558, column: 39, scope: !5308)
!5313 = !DILocalVariable(name: "avctx", arg: 2, scope: !5308, file: !1282, line: 558, type: !1312)
!5314 = !DILocation(line: 558, column: 59, scope: !5308)
!5315 = !DILocalVariable(name: "apply_defdispwin", arg: 3, scope: !5308, file: !1282, line: 559, type: !977)
!5316 = !DILocation(line: 559, column: 28, scope: !5308)
!5317 = !DILocalVariable(name: "sps", arg: 4, scope: !5308, file: !1282, line: 559, type: !1036)
!5318 = !DILocation(line: 559, column: 55, scope: !5308)
!5319 = !DILocalVariable(name: "backup_vui", scope: !5308, file: !1282, line: 561, type: !1068)
!5320 = !DILocation(line: 561, column: 9, scope: !5308)
!5321 = !DILocalVariable(name: "vui", scope: !5308, file: !1282, line: 561, type: !5322)
!5322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64, align: 64)
!5323 = !DILocation(line: 561, column: 22, scope: !5308)
!5324 = !DILocation(line: 561, column: 29, scope: !5308)
!5325 = !DILocation(line: 561, column: 34, scope: !5308)
!5326 = !DILocalVariable(name: "backup", scope: !5308, file: !1282, line: 562, type: !1302)
!5327 = !DILocation(line: 562, column: 19, scope: !5308)
!5328 = !DILocalVariable(name: "sar_present", scope: !5308, file: !1282, line: 563, type: !977)
!5329 = !DILocation(line: 563, column: 9, scope: !5308)
!5330 = !DILocalVariable(name: "alt", scope: !5308, file: !1282, line: 563, type: !977)
!5331 = !DILocation(line: 563, column: 22, scope: !5308)
!5332 = !DILocation(line: 565, column: 12, scope: !5308)
!5333 = !DILocation(line: 565, column: 5, scope: !5308)
!5334 = !DILocation(line: 567, column: 29, scope: !5308)
!5335 = !DILocation(line: 567, column: 19, scope: !5308)
!5336 = !DILocation(line: 567, column: 17, scope: !5308)
!5337 = !DILocation(line: 568, column: 9, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5308, file: !1282, line: 568, column: 9)
!5339 = !DILocation(line: 568, column: 9, scope: !5308)
!5340 = !DILocalVariable(name: "sar_idx", scope: !5341, file: !1282, line: 569, type: !985)
!5341 = distinct !DILexicalBlock(scope: !5338, file: !1282, line: 568, column: 22)
!5342 = !DILocation(line: 569, column: 17, scope: !5341)
!5343 = !DILocation(line: 569, column: 36, scope: !5341)
!5344 = !DILocation(line: 569, column: 27, scope: !5341)
!5345 = !DILocation(line: 570, column: 13, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5341, file: !1282, line: 570, column: 13)
!5347 = !DILocation(line: 570, column: 21, scope: !5346)
!5348 = !DILocation(line: 570, column: 13, scope: !5341)
!5349 = !DILocation(line: 571, column: 13, scope: !5346)
!5350 = !DILocation(line: 571, column: 18, scope: !5346)
!5351 = !DILocation(line: 571, column: 32, scope: !5346)
!5352 = !DILocation(line: 571, column: 24, scope: !5346)
!5353 = !DILocation(line: 572, column: 18, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5346, file: !1282, line: 572, column: 18)
!5355 = !DILocation(line: 572, column: 26, scope: !5354)
!5356 = !DILocation(line: 572, column: 18, scope: !5346)
!5357 = !DILocation(line: 573, column: 37, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5354, file: !1282, line: 572, column: 34)
!5359 = !DILocation(line: 573, column: 28, scope: !5358)
!5360 = !DILocation(line: 573, column: 13, scope: !5358)
!5361 = !DILocation(line: 573, column: 18, scope: !5358)
!5362 = !DILocation(line: 573, column: 22, scope: !5358)
!5363 = !DILocation(line: 573, column: 26, scope: !5358)
!5364 = !DILocation(line: 574, column: 37, scope: !5358)
!5365 = !DILocation(line: 574, column: 28, scope: !5358)
!5366 = !DILocation(line: 574, column: 13, scope: !5358)
!5367 = !DILocation(line: 574, column: 18, scope: !5358)
!5368 = !DILocation(line: 574, column: 22, scope: !5358)
!5369 = !DILocation(line: 574, column: 26, scope: !5358)
!5370 = !DILocation(line: 575, column: 9, scope: !5358)
!5371 = !DILocation(line: 576, column: 20, scope: !5354)
!5372 = !DILocation(line: 577, column: 48, scope: !5354)
!5373 = !DILocation(line: 576, column: 13, scope: !5354)
!5374 = !DILocation(line: 578, column: 5, scope: !5341)
!5375 = !DILocation(line: 580, column: 49, scope: !5308)
!5376 = !DILocation(line: 580, column: 39, scope: !5308)
!5377 = !DILocation(line: 580, column: 5, scope: !5308)
!5378 = !DILocation(line: 580, column: 10, scope: !5308)
!5379 = !DILocation(line: 580, column: 37, scope: !5308)
!5380 = !DILocation(line: 581, column: 9, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5308, file: !1282, line: 581, column: 9)
!5382 = !DILocation(line: 581, column: 14, scope: !5381)
!5383 = !DILocation(line: 581, column: 9, scope: !5308)
!5384 = !DILocation(line: 582, column: 52, scope: !5381)
!5385 = !DILocation(line: 582, column: 42, scope: !5381)
!5386 = !DILocation(line: 582, column: 9, scope: !5381)
!5387 = !DILocation(line: 582, column: 14, scope: !5381)
!5388 = !DILocation(line: 582, column: 40, scope: !5381)
!5389 = !DILocation(line: 584, column: 53, scope: !5308)
!5390 = !DILocation(line: 584, column: 43, scope: !5308)
!5391 = !DILocation(line: 584, column: 5, scope: !5308)
!5392 = !DILocation(line: 584, column: 10, scope: !5308)
!5393 = !DILocation(line: 584, column: 41, scope: !5308)
!5394 = !DILocation(line: 585, column: 9, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5308, file: !1282, line: 585, column: 9)
!5396 = !DILocation(line: 585, column: 14, scope: !5395)
!5397 = !DILocation(line: 585, column: 9, scope: !5308)
!5398 = !DILocation(line: 586, column: 38, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5395, file: !1282, line: 585, column: 46)
!5400 = !DILocation(line: 586, column: 29, scope: !5399)
!5401 = !DILocation(line: 586, column: 9, scope: !5399)
!5402 = !DILocation(line: 586, column: 14, scope: !5399)
!5403 = !DILocation(line: 586, column: 27, scope: !5399)
!5404 = !DILocation(line: 587, column: 48, scope: !5399)
!5405 = !DILocation(line: 587, column: 38, scope: !5399)
!5406 = !DILocation(line: 587, column: 9, scope: !5399)
!5407 = !DILocation(line: 587, column: 14, scope: !5399)
!5408 = !DILocation(line: 587, column: 36, scope: !5399)
!5409 = !DILocation(line: 588, column: 58, scope: !5399)
!5410 = !DILocation(line: 588, column: 48, scope: !5399)
!5411 = !DILocation(line: 588, column: 9, scope: !5399)
!5412 = !DILocation(line: 588, column: 14, scope: !5399)
!5413 = !DILocation(line: 588, column: 46, scope: !5399)
!5414 = !DILocation(line: 589, column: 13, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5399, file: !1282, line: 589, column: 13)
!5416 = !DILocation(line: 589, column: 18, scope: !5415)
!5417 = !DILocation(line: 589, column: 40, scope: !5415)
!5418 = !DILocation(line: 589, column: 43, scope: !5419)
!5419 = !DILexicalBlockFile(scope: !5415, file: !1282, discriminator: 1)
!5420 = !DILocation(line: 589, column: 48, scope: !5419)
!5421 = !DILocation(line: 589, column: 56, scope: !5419)
!5422 = !DILocation(line: 589, column: 13, scope: !5419)
!5423 = !DILocation(line: 590, column: 13, scope: !5415)
!5424 = !DILocation(line: 590, column: 18, scope: !5415)
!5425 = !DILocation(line: 590, column: 26, scope: !5415)
!5426 = !DILocation(line: 591, column: 13, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5399, file: !1282, line: 591, column: 13)
!5428 = !DILocation(line: 591, column: 18, scope: !5427)
!5429 = !DILocation(line: 591, column: 13, scope: !5399)
!5430 = !DILocation(line: 592, column: 46, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5427, file: !1282, line: 591, column: 51)
!5432 = !DILocation(line: 592, column: 37, scope: !5431)
!5433 = !DILocation(line: 592, column: 13, scope: !5431)
!5434 = !DILocation(line: 592, column: 18, scope: !5431)
!5435 = !DILocation(line: 592, column: 35, scope: !5431)
!5436 = !DILocation(line: 593, column: 53, scope: !5431)
!5437 = !DILocation(line: 593, column: 44, scope: !5431)
!5438 = !DILocation(line: 593, column: 13, scope: !5431)
!5439 = !DILocation(line: 593, column: 18, scope: !5431)
!5440 = !DILocation(line: 593, column: 42, scope: !5431)
!5441 = !DILocation(line: 594, column: 43, scope: !5431)
!5442 = !DILocation(line: 594, column: 34, scope: !5431)
!5443 = !DILocation(line: 594, column: 13, scope: !5431)
!5444 = !DILocation(line: 594, column: 18, scope: !5431)
!5445 = !DILocation(line: 594, column: 32, scope: !5431)
!5446 = !DILocation(line: 597, column: 42, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5431, file: !1282, line: 597, column: 17)
!5448 = !DILocation(line: 597, column: 47, scope: !5447)
!5449 = !DILocation(line: 597, column: 18, scope: !5447)
!5450 = !DILocation(line: 597, column: 17, scope: !5431)
!5451 = !DILocation(line: 598, column: 17, scope: !5447)
!5452 = !DILocation(line: 598, column: 22, scope: !5447)
!5453 = !DILocation(line: 598, column: 39, scope: !5447)
!5454 = !DILocation(line: 599, column: 41, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5431, file: !1282, line: 599, column: 17)
!5456 = !DILocation(line: 599, column: 46, scope: !5455)
!5457 = !DILocation(line: 599, column: 18, scope: !5455)
!5458 = !DILocation(line: 599, column: 17, scope: !5431)
!5459 = !DILocation(line: 600, column: 17, scope: !5455)
!5460 = !DILocation(line: 600, column: 22, scope: !5455)
!5461 = !DILocation(line: 600, column: 46, scope: !5455)
!5462 = !DILocation(line: 601, column: 38, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5431, file: !1282, line: 601, column: 17)
!5464 = !DILocation(line: 601, column: 43, scope: !5463)
!5465 = !DILocation(line: 601, column: 18, scope: !5463)
!5466 = !DILocation(line: 601, column: 17, scope: !5431)
!5467 = !DILocation(line: 602, column: 17, scope: !5463)
!5468 = !DILocation(line: 602, column: 22, scope: !5463)
!5469 = !DILocation(line: 602, column: 36, scope: !5463)
!5470 = !DILocation(line: 603, column: 17, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5431, file: !1282, line: 603, column: 17)
!5472 = !DILocation(line: 603, column: 22, scope: !5471)
!5473 = !DILocation(line: 603, column: 36, scope: !5471)
!5474 = !DILocation(line: 603, column: 17, scope: !5431)
!5475 = !DILocation(line: 604, column: 25, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5471, file: !1282, line: 603, column: 54)
!5477 = !DILocation(line: 604, column: 30, scope: !5476)
!5478 = !DILocation(line: 604, column: 17, scope: !5476)
!5479 = !DILocation(line: 606, column: 21, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5476, file: !1282, line: 604, column: 39)
!5481 = !DILocation(line: 606, column: 26, scope: !5480)
!5482 = !DILocation(line: 606, column: 34, scope: !5480)
!5483 = !DILocation(line: 607, column: 21, scope: !5480)
!5484 = !DILocation(line: 609, column: 21, scope: !5480)
!5485 = !DILocation(line: 609, column: 26, scope: !5480)
!5486 = !DILocation(line: 609, column: 34, scope: !5480)
!5487 = !DILocation(line: 610, column: 21, scope: !5480)
!5488 = !DILocation(line: 612, column: 21, scope: !5480)
!5489 = !DILocation(line: 612, column: 26, scope: !5480)
!5490 = !DILocation(line: 612, column: 34, scope: !5480)
!5491 = !DILocation(line: 613, column: 21, scope: !5480)
!5492 = !DILocation(line: 615, column: 13, scope: !5476)
!5493 = !DILocation(line: 616, column: 9, scope: !5431)
!5494 = !DILocation(line: 617, column: 5, scope: !5399)
!5495 = !DILocation(line: 619, column: 51, scope: !5308)
!5496 = !DILocation(line: 619, column: 41, scope: !5308)
!5497 = !DILocation(line: 619, column: 5, scope: !5308)
!5498 = !DILocation(line: 619, column: 10, scope: !5308)
!5499 = !DILocation(line: 619, column: 39, scope: !5308)
!5500 = !DILocation(line: 620, column: 9, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5308, file: !1282, line: 620, column: 9)
!5502 = !DILocation(line: 620, column: 14, scope: !5501)
!5503 = !DILocation(line: 620, column: 9, scope: !5308)
!5504 = !DILocation(line: 621, column: 68, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5501, file: !1282, line: 620, column: 44)
!5506 = !DILocation(line: 621, column: 49, scope: !5505)
!5507 = !DILocation(line: 621, column: 9, scope: !5505)
!5508 = !DILocation(line: 621, column: 14, scope: !5505)
!5509 = !DILocation(line: 621, column: 47, scope: !5505)
!5510 = !DILocation(line: 622, column: 71, scope: !5505)
!5511 = !DILocation(line: 622, column: 52, scope: !5505)
!5512 = !DILocation(line: 622, column: 9, scope: !5505)
!5513 = !DILocation(line: 622, column: 14, scope: !5505)
!5514 = !DILocation(line: 622, column: 50, scope: !5505)
!5515 = !DILocation(line: 623, column: 5, scope: !5505)
!5516 = !DILocation(line: 625, column: 52, scope: !5308)
!5517 = !DILocation(line: 625, column: 42, scope: !5308)
!5518 = !DILocation(line: 625, column: 5, scope: !5308)
!5519 = !DILocation(line: 625, column: 10, scope: !5308)
!5520 = !DILocation(line: 625, column: 40, scope: !5308)
!5521 = !DILocation(line: 626, column: 37, scope: !5308)
!5522 = !DILocation(line: 626, column: 27, scope: !5308)
!5523 = !DILocation(line: 626, column: 5, scope: !5308)
!5524 = !DILocation(line: 626, column: 10, scope: !5308)
!5525 = !DILocation(line: 626, column: 25, scope: !5308)
!5526 = !DILocation(line: 627, column: 52, scope: !5308)
!5527 = !DILocation(line: 627, column: 42, scope: !5308)
!5528 = !DILocation(line: 627, column: 5, scope: !5308)
!5529 = !DILocation(line: 627, column: 10, scope: !5308)
!5530 = !DILocation(line: 627, column: 40, scope: !5308)
!5531 = !DILocation(line: 630, column: 5, scope: !5308)
!5532 = !DILocation(line: 630, column: 21, scope: !5308)
!5533 = !DILocation(line: 631, column: 5, scope: !5308)
!5534 = !DILocation(line: 631, column: 25, scope: !5308)
!5535 = !DILocation(line: 632, column: 23, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5308, file: !1282, line: 632, column: 9)
!5537 = !DILocation(line: 632, column: 9, scope: !5536)
!5538 = !DILocation(line: 632, column: 27, scope: !5536)
!5539 = !DILocation(line: 632, column: 33, scope: !5536)
!5540 = !DILocation(line: 632, column: 51, scope: !5541)
!5541 = !DILexicalBlockFile(scope: !5536, file: !1282, discriminator: 1)
!5542 = !DILocation(line: 632, column: 36, scope: !5541)
!5543 = !DILocation(line: 632, column: 59, scope: !5541)
!5544 = !DILocation(line: 632, column: 9, scope: !5541)
!5545 = !DILocation(line: 633, column: 9, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5536, file: !1282, line: 632, column: 72)
!5547 = !DILocation(line: 633, column: 14, scope: !5546)
!5548 = !DILocation(line: 633, column: 42, scope: !5546)
!5549 = !DILocation(line: 634, column: 16, scope: !5546)
!5550 = !DILocation(line: 634, column: 9, scope: !5546)
!5551 = !DILocation(line: 635, column: 5, scope: !5546)
!5552 = !DILocation(line: 636, column: 54, scope: !5536)
!5553 = !DILocation(line: 636, column: 44, scope: !5536)
!5554 = !DILocation(line: 636, column: 9, scope: !5536)
!5555 = !DILocation(line: 636, column: 14, scope: !5536)
!5556 = !DILocation(line: 636, column: 42, scope: !5536)
!5557 = !DILocation(line: 638, column: 9, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5308, file: !1282, line: 638, column: 9)
!5559 = !DILocation(line: 638, column: 14, scope: !5558)
!5560 = !DILocation(line: 638, column: 9, scope: !5308)
!5561 = !DILocalVariable(name: "vert_mult", scope: !5562, file: !1282, line: 639, type: !977)
!5562 = distinct !DILexicalBlock(scope: !5558, file: !1282, line: 638, column: 43)
!5563 = !DILocation(line: 639, column: 13, scope: !5562)
!5564 = !DILocation(line: 639, column: 43, scope: !5562)
!5565 = !DILocation(line: 639, column: 48, scope: !5562)
!5566 = !DILocation(line: 639, column: 25, scope: !5562)
!5567 = !DILocalVariable(name: "horiz_mult", scope: !5562, file: !1282, line: 640, type: !977)
!5568 = !DILocation(line: 640, column: 13, scope: !5562)
!5569 = !DILocation(line: 640, column: 43, scope: !5562)
!5570 = !DILocation(line: 640, column: 48, scope: !5562)
!5571 = !DILocation(line: 640, column: 26, scope: !5562)
!5572 = !DILocation(line: 641, column: 60, scope: !5562)
!5573 = !DILocation(line: 641, column: 41, scope: !5562)
!5574 = !DILocation(line: 641, column: 66, scope: !5562)
!5575 = !DILocation(line: 641, column: 64, scope: !5562)
!5576 = !DILocation(line: 641, column: 9, scope: !5562)
!5577 = !DILocation(line: 641, column: 14, scope: !5562)
!5578 = !DILocation(line: 641, column: 27, scope: !5562)
!5579 = !DILocation(line: 641, column: 39, scope: !5562)
!5580 = !DILocation(line: 642, column: 61, scope: !5562)
!5581 = !DILocation(line: 642, column: 42, scope: !5562)
!5582 = !DILocation(line: 642, column: 67, scope: !5562)
!5583 = !DILocation(line: 642, column: 65, scope: !5562)
!5584 = !DILocation(line: 642, column: 9, scope: !5562)
!5585 = !DILocation(line: 642, column: 14, scope: !5562)
!5586 = !DILocation(line: 642, column: 27, scope: !5562)
!5587 = !DILocation(line: 642, column: 40, scope: !5562)
!5588 = !DILocation(line: 643, column: 59, scope: !5562)
!5589 = !DILocation(line: 643, column: 40, scope: !5562)
!5590 = !DILocation(line: 643, column: 65, scope: !5562)
!5591 = !DILocation(line: 643, column: 63, scope: !5562)
!5592 = !DILocation(line: 643, column: 9, scope: !5562)
!5593 = !DILocation(line: 643, column: 14, scope: !5562)
!5594 = !DILocation(line: 643, column: 27, scope: !5562)
!5595 = !DILocation(line: 643, column: 38, scope: !5562)
!5596 = !DILocation(line: 644, column: 62, scope: !5562)
!5597 = !DILocation(line: 644, column: 43, scope: !5562)
!5598 = !DILocation(line: 644, column: 68, scope: !5562)
!5599 = !DILocation(line: 644, column: 66, scope: !5562)
!5600 = !DILocation(line: 644, column: 9, scope: !5562)
!5601 = !DILocation(line: 644, column: 14, scope: !5562)
!5602 = !DILocation(line: 644, column: 27, scope: !5562)
!5603 = !DILocation(line: 644, column: 41, scope: !5562)
!5604 = !DILocation(line: 646, column: 13, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5562, file: !1282, line: 646, column: 13)
!5606 = !DILocation(line: 646, column: 30, scope: !5605)
!5607 = !DILocation(line: 647, column: 13, scope: !5605)
!5608 = !DILocation(line: 647, column: 20, scope: !5605)
!5609 = !DILocation(line: 647, column: 27, scope: !5605)
!5610 = !DILocation(line: 646, column: 13, scope: !5611)
!5611 = !DILexicalBlockFile(scope: !5562, file: !1282, discriminator: 1)
!5612 = !DILocation(line: 648, column: 20, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5605, file: !1282, line: 647, column: 40)
!5614 = !DILocation(line: 651, column: 20, scope: !5613)
!5615 = !DILocation(line: 651, column: 25, scope: !5613)
!5616 = !DILocation(line: 651, column: 38, scope: !5613)
!5617 = !DILocation(line: 652, column: 20, scope: !5613)
!5618 = !DILocation(line: 652, column: 25, scope: !5613)
!5619 = !DILocation(line: 652, column: 38, scope: !5613)
!5620 = !DILocation(line: 653, column: 20, scope: !5613)
!5621 = !DILocation(line: 653, column: 25, scope: !5613)
!5622 = !DILocation(line: 653, column: 38, scope: !5613)
!5623 = !DILocation(line: 654, column: 20, scope: !5613)
!5624 = !DILocation(line: 654, column: 25, scope: !5613)
!5625 = !DILocation(line: 654, column: 38, scope: !5613)
!5626 = !DILocation(line: 648, column: 13, scope: !5613)
!5627 = !DILocation(line: 659, column: 13, scope: !5613)
!5628 = !DILocation(line: 659, column: 18, scope: !5613)
!5629 = !DILocation(line: 659, column: 31, scope: !5613)
!5630 = !DILocation(line: 659, column: 45, scope: !5613)
!5631 = !DILocation(line: 658, column: 13, scope: !5613)
!5632 = !DILocation(line: 658, column: 18, scope: !5613)
!5633 = !DILocation(line: 658, column: 31, scope: !5613)
!5634 = !DILocation(line: 658, column: 42, scope: !5613)
!5635 = !DILocation(line: 657, column: 13, scope: !5613)
!5636 = !DILocation(line: 657, column: 18, scope: !5613)
!5637 = !DILocation(line: 657, column: 31, scope: !5613)
!5638 = !DILocation(line: 657, column: 44, scope: !5613)
!5639 = !DILocation(line: 656, column: 13, scope: !5613)
!5640 = !DILocation(line: 656, column: 18, scope: !5613)
!5641 = !DILocation(line: 656, column: 31, scope: !5613)
!5642 = !DILocation(line: 656, column: 43, scope: !5613)
!5643 = !DILocation(line: 660, column: 9, scope: !5613)
!5644 = !DILocation(line: 661, column: 5, scope: !5562)
!5645 = !DILocation(line: 638, column: 14, scope: !5646)
!5646 = !DILexicalBlockFile(scope: !5558, file: !1282, discriminator: 1)
!5647 = !DILocation(line: 664, column: 51, scope: !5308)
!5648 = !DILocation(line: 664, column: 41, scope: !5308)
!5649 = !DILocation(line: 664, column: 5, scope: !5308)
!5650 = !DILocation(line: 664, column: 10, scope: !5308)
!5651 = !DILocation(line: 664, column: 39, scope: !5308)
!5652 = !DILocation(line: 666, column: 9, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5308, file: !1282, line: 666, column: 9)
!5654 = !DILocation(line: 666, column: 14, scope: !5653)
!5655 = !DILocation(line: 666, column: 9, scope: !5308)
!5656 = !DILocation(line: 667, column: 27, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5658, file: !1282, line: 667, column: 13)
!5658 = distinct !DILexicalBlock(scope: !5653, file: !1282, line: 666, column: 44)
!5659 = !DILocation(line: 667, column: 13, scope: !5657)
!5660 = !DILocation(line: 667, column: 31, scope: !5657)
!5661 = !DILocation(line: 667, column: 36, scope: !5657)
!5662 = !DILocation(line: 667, column: 40, scope: !5663)
!5663 = !DILexicalBlockFile(scope: !5657, file: !1282, discriminator: 1)
!5664 = !DILocation(line: 667, column: 13, scope: !5663)
!5665 = !DILocation(line: 670, column: 20, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5657, file: !1282, line: 667, column: 45)
!5667 = !DILocation(line: 670, column: 13, scope: !5666)
!5668 = !DILocation(line: 672, column: 20, scope: !5666)
!5669 = !DILocation(line: 672, column: 13, scope: !5666)
!5670 = !DILocation(line: 673, column: 20, scope: !5666)
!5671 = !DILocation(line: 673, column: 13, scope: !5666)
!5672 = !DILocation(line: 674, column: 17, scope: !5666)
!5673 = !DILocation(line: 675, column: 13, scope: !5666)
!5674 = !DILocation(line: 677, column: 52, scope: !5658)
!5675 = !DILocation(line: 677, column: 38, scope: !5658)
!5676 = !DILocation(line: 677, column: 9, scope: !5658)
!5677 = !DILocation(line: 677, column: 14, scope: !5658)
!5678 = !DILocation(line: 677, column: 36, scope: !5658)
!5679 = !DILocation(line: 678, column: 45, scope: !5658)
!5680 = !DILocation(line: 678, column: 31, scope: !5658)
!5681 = !DILocation(line: 678, column: 9, scope: !5658)
!5682 = !DILocation(line: 678, column: 14, scope: !5658)
!5683 = !DILocation(line: 678, column: 29, scope: !5658)
!5684 = !DILocation(line: 679, column: 13, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5658, file: !1282, line: 679, column: 13)
!5686 = !DILocation(line: 679, column: 13, scope: !5658)
!5687 = !DILocation(line: 680, column: 20, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5685, file: !1282, line: 679, column: 18)
!5689 = !DILocation(line: 681, column: 20, scope: !5688)
!5690 = !DILocation(line: 681, column: 25, scope: !5688)
!5691 = !DILocation(line: 681, column: 41, scope: !5688)
!5692 = !DILocation(line: 681, column: 46, scope: !5688)
!5693 = !DILocation(line: 680, column: 13, scope: !5688)
!5694 = !DILocation(line: 682, column: 9, scope: !5688)
!5695 = !DILocation(line: 683, column: 62, scope: !5658)
!5696 = !DILocation(line: 683, column: 52, scope: !5658)
!5697 = !DILocation(line: 683, column: 9, scope: !5658)
!5698 = !DILocation(line: 683, column: 14, scope: !5658)
!5699 = !DILocation(line: 683, column: 50, scope: !5658)
!5700 = !DILocation(line: 684, column: 13, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5658, file: !1282, line: 684, column: 13)
!5702 = !DILocation(line: 684, column: 18, scope: !5701)
!5703 = !DILocation(line: 684, column: 13, scope: !5658)
!5704 = !DILocation(line: 685, column: 73, scope: !5701)
!5705 = !DILocation(line: 685, column: 54, scope: !5701)
!5706 = !DILocation(line: 685, column: 13, scope: !5701)
!5707 = !DILocation(line: 685, column: 18, scope: !5701)
!5708 = !DILocation(line: 685, column: 52, scope: !5701)
!5709 = !DILocation(line: 686, column: 58, scope: !5658)
!5710 = !DILocation(line: 686, column: 48, scope: !5658)
!5711 = !DILocation(line: 686, column: 9, scope: !5658)
!5712 = !DILocation(line: 686, column: 14, scope: !5658)
!5713 = !DILocation(line: 686, column: 46, scope: !5658)
!5714 = !DILocation(line: 687, column: 13, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5658, file: !1282, line: 687, column: 13)
!5716 = !DILocation(line: 687, column: 18, scope: !5715)
!5717 = !DILocation(line: 687, column: 13, scope: !5658)
!5718 = !DILocation(line: 688, column: 24, scope: !5715)
!5719 = !DILocation(line: 688, column: 31, scope: !5715)
!5720 = !DILocation(line: 688, column: 36, scope: !5715)
!5721 = !DILocation(line: 688, column: 13, scope: !5715)
!5722 = !DILocation(line: 689, column: 5, scope: !5658)
!5723 = !DILocation(line: 691, column: 49, scope: !5308)
!5724 = !DILocation(line: 691, column: 39, scope: !5308)
!5725 = !DILocation(line: 691, column: 5, scope: !5308)
!5726 = !DILocation(line: 691, column: 10, scope: !5308)
!5727 = !DILocation(line: 691, column: 37, scope: !5308)
!5728 = !DILocation(line: 692, column: 9, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5308, file: !1282, line: 692, column: 9)
!5730 = !DILocation(line: 692, column: 14, scope: !5729)
!5731 = !DILocation(line: 692, column: 9, scope: !5308)
!5732 = !DILocation(line: 693, column: 27, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5734, file: !1282, line: 693, column: 13)
!5734 = distinct !DILexicalBlock(scope: !5729, file: !1282, line: 692, column: 42)
!5735 = !DILocation(line: 693, column: 13, scope: !5733)
!5736 = !DILocation(line: 693, column: 31, scope: !5733)
!5737 = !DILocation(line: 693, column: 35, scope: !5733)
!5738 = !DILocation(line: 693, column: 39, scope: !5739)
!5739 = !DILexicalBlockFile(scope: !5733, file: !1282, discriminator: 1)
!5740 = !DILocation(line: 693, column: 13, scope: !5739)
!5741 = !DILocation(line: 694, column: 20, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5733, file: !1282, line: 693, column: 44)
!5743 = !DILocation(line: 694, column: 13, scope: !5742)
!5744 = !DILocation(line: 697, column: 20, scope: !5742)
!5745 = !DILocation(line: 697, column: 13, scope: !5742)
!5746 = !DILocation(line: 698, column: 20, scope: !5742)
!5747 = !DILocation(line: 698, column: 13, scope: !5742)
!5748 = !DILocation(line: 699, column: 17, scope: !5742)
!5749 = !DILocation(line: 700, column: 13, scope: !5742)
!5750 = !DILocation(line: 702, column: 53, scope: !5734)
!5751 = !DILocation(line: 702, column: 43, scope: !5734)
!5752 = !DILocation(line: 702, column: 9, scope: !5734)
!5753 = !DILocation(line: 702, column: 14, scope: !5734)
!5754 = !DILocation(line: 702, column: 41, scope: !5734)
!5755 = !DILocation(line: 703, column: 66, scope: !5734)
!5756 = !DILocation(line: 703, column: 56, scope: !5734)
!5757 = !DILocation(line: 703, column: 9, scope: !5734)
!5758 = !DILocation(line: 703, column: 14, scope: !5734)
!5759 = !DILocation(line: 703, column: 54, scope: !5734)
!5760 = !DILocation(line: 704, column: 56, scope: !5734)
!5761 = !DILocation(line: 704, column: 46, scope: !5734)
!5762 = !DILocation(line: 704, column: 9, scope: !5734)
!5763 = !DILocation(line: 704, column: 14, scope: !5734)
!5764 = !DILocation(line: 704, column: 44, scope: !5734)
!5765 = !DILocation(line: 705, column: 64, scope: !5734)
!5766 = !DILocation(line: 705, column: 45, scope: !5734)
!5767 = !DILocation(line: 705, column: 9, scope: !5734)
!5768 = !DILocation(line: 705, column: 14, scope: !5734)
!5769 = !DILocation(line: 705, column: 43, scope: !5734)
!5770 = !DILocation(line: 706, column: 59, scope: !5734)
!5771 = !DILocation(line: 706, column: 40, scope: !5734)
!5772 = !DILocation(line: 706, column: 9, scope: !5734)
!5773 = !DILocation(line: 706, column: 14, scope: !5734)
!5774 = !DILocation(line: 706, column: 38, scope: !5734)
!5775 = !DILocation(line: 707, column: 61, scope: !5734)
!5776 = !DILocation(line: 707, column: 42, scope: !5734)
!5777 = !DILocation(line: 707, column: 9, scope: !5734)
!5778 = !DILocation(line: 707, column: 14, scope: !5734)
!5779 = !DILocation(line: 707, column: 40, scope: !5734)
!5780 = !DILocation(line: 708, column: 65, scope: !5734)
!5781 = !DILocation(line: 708, column: 46, scope: !5734)
!5782 = !DILocation(line: 708, column: 9, scope: !5734)
!5783 = !DILocation(line: 708, column: 14, scope: !5734)
!5784 = !DILocation(line: 708, column: 44, scope: !5734)
!5785 = !DILocation(line: 709, column: 63, scope: !5734)
!5786 = !DILocation(line: 709, column: 44, scope: !5734)
!5787 = !DILocation(line: 709, column: 9, scope: !5734)
!5788 = !DILocation(line: 709, column: 14, scope: !5734)
!5789 = !DILocation(line: 709, column: 42, scope: !5734)
!5790 = !DILocation(line: 710, column: 5, scope: !5734)
!5791 = !DILocation(line: 712, column: 23, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5308, file: !1282, line: 712, column: 9)
!5793 = !DILocation(line: 712, column: 9, scope: !5792)
!5794 = !DILocation(line: 712, column: 27, scope: !5792)
!5795 = !DILocation(line: 712, column: 31, scope: !5792)
!5796 = !DILocation(line: 712, column: 35, scope: !5797)
!5797 = !DILexicalBlockFile(scope: !5792, file: !1282, discriminator: 1)
!5798 = !DILocation(line: 712, column: 9, scope: !5797)
!5799 = !DILocation(line: 714, column: 16, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5792, file: !1282, line: 712, column: 40)
!5801 = !DILocation(line: 714, column: 9, scope: !5800)
!5802 = !DILocation(line: 716, column: 16, scope: !5800)
!5803 = !DILocation(line: 716, column: 9, scope: !5800)
!5804 = !DILocation(line: 717, column: 16, scope: !5800)
!5805 = !DILocation(line: 717, column: 9, scope: !5800)
!5806 = !DILocation(line: 718, column: 13, scope: !5800)
!5807 = !DILocation(line: 719, column: 9, scope: !5800)
!5808 = !DILocation(line: 721, column: 1, scope: !5308)
!5809 = distinct !DISubprogram(name: "ff_hevc_decode_nal_sps", scope: !1282, file: !1282, line: 1220, type: !5810, isLocal: false, isDefinition: true, scopeLine: 1222, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!5810 = !DISubroutineType(types: !5811)
!5811 = !{!977, !1301, !1312, !2457, !977}
!5812 = !DILocalVariable(name: "gb", arg: 1, scope: !5809, file: !1282, line: 1220, type: !1301)
!5813 = !DILocation(line: 1220, column: 43, scope: !5809)
!5814 = !DILocalVariable(name: "avctx", arg: 2, scope: !5809, file: !1282, line: 1220, type: !1312)
!5815 = !DILocation(line: 1220, column: 63, scope: !5809)
!5816 = !DILocalVariable(name: "ps", arg: 3, scope: !5809, file: !1282, line: 1221, type: !2457)
!5817 = !DILocation(line: 1221, column: 43, scope: !5809)
!5818 = !DILocalVariable(name: "apply_defdispwin", arg: 4, scope: !5809, file: !1282, line: 1221, type: !977)
!5819 = !DILocation(line: 1221, column: 51, scope: !5809)
!5820 = !DILocalVariable(name: "sps", scope: !5809, file: !1282, line: 1223, type: !1036)
!5821 = !DILocation(line: 1223, column: 14, scope: !5809)
!5822 = !DILocalVariable(name: "sps_buf", scope: !5809, file: !1282, line: 1224, type: !1476)
!5823 = !DILocation(line: 1224, column: 18, scope: !5809)
!5824 = !DILocation(line: 1224, column: 28, scope: !5809)
!5825 = !DILocalVariable(name: "sps_id", scope: !5809, file: !1282, line: 1225, type: !978)
!5826 = !DILocation(line: 1225, column: 18, scope: !5809)
!5827 = !DILocalVariable(name: "ret", scope: !5809, file: !1282, line: 1226, type: !977)
!5828 = !DILocation(line: 1226, column: 9, scope: !5809)
!5829 = !DILocalVariable(name: "nal_size", scope: !5809, file: !1282, line: 1227, type: !2484)
!5830 = !DILocation(line: 1227, column: 15, scope: !5809)
!5831 = !DILocation(line: 1229, column: 10, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5809, file: !1282, line: 1229, column: 9)
!5833 = !DILocation(line: 1229, column: 9, scope: !5809)
!5834 = !DILocation(line: 1230, column: 9, scope: !5832)
!5835 = !DILocation(line: 1231, column: 21, scope: !5809)
!5836 = !DILocation(line: 1231, column: 30, scope: !5809)
!5837 = !DILocation(line: 1231, column: 11, scope: !5809)
!5838 = !DILocation(line: 1231, column: 9, scope: !5809)
!5839 = !DILocation(line: 1233, column: 12, scope: !5809)
!5840 = !DILocation(line: 1233, column: 5, scope: !5809)
!5841 = !DILocation(line: 1235, column: 16, scope: !5809)
!5842 = !DILocation(line: 1235, column: 20, scope: !5809)
!5843 = !DILocation(line: 1235, column: 33, scope: !5809)
!5844 = !DILocation(line: 1235, column: 37, scope: !5809)
!5845 = !DILocation(line: 1235, column: 31, scope: !5809)
!5846 = !DILocation(line: 1235, column: 14, scope: !5809)
!5847 = !DILocation(line: 1236, column: 9, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5809, file: !1282, line: 1236, column: 9)
!5849 = !DILocation(line: 1236, column: 18, scope: !5848)
!5850 = !DILocation(line: 1236, column: 9, scope: !5809)
!5851 = !DILocation(line: 1237, column: 16, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5848, file: !1282, line: 1236, column: 39)
!5853 = !DILocation(line: 1239, column: 16, scope: !5852)
!5854 = !DILocation(line: 1237, column: 9, scope: !5852)
!5855 = !DILocation(line: 1240, column: 9, scope: !5852)
!5856 = !DILocation(line: 1240, column: 14, scope: !5852)
!5857 = !DILocation(line: 1240, column: 24, scope: !5852)
!5858 = !DILocation(line: 1241, column: 5, scope: !5852)
!5859 = !DILocation(line: 1242, column: 26, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5848, file: !1282, line: 1241, column: 12)
!5861 = !DILocation(line: 1242, column: 9, scope: !5860)
!5862 = !DILocation(line: 1242, column: 14, scope: !5860)
!5863 = !DILocation(line: 1242, column: 24, scope: !5860)
!5864 = !DILocation(line: 1244, column: 12, scope: !5809)
!5865 = !DILocation(line: 1244, column: 17, scope: !5809)
!5866 = !DILocation(line: 1244, column: 5, scope: !5809)
!5867 = !DILocation(line: 1244, column: 23, scope: !5809)
!5868 = !DILocation(line: 1244, column: 27, scope: !5809)
!5869 = !DILocation(line: 1244, column: 35, scope: !5809)
!5870 = !DILocation(line: 1244, column: 40, scope: !5809)
!5871 = !DILocation(line: 1246, column: 29, scope: !5809)
!5872 = !DILocation(line: 1246, column: 34, scope: !5809)
!5873 = !DILocation(line: 1247, column: 29, scope: !5809)
!5874 = !DILocation(line: 1248, column: 29, scope: !5809)
!5875 = !DILocation(line: 1248, column: 33, scope: !5809)
!5876 = !DILocation(line: 1248, column: 43, scope: !5809)
!5877 = !DILocation(line: 1246, column: 11, scope: !5809)
!5878 = !DILocation(line: 1246, column: 9, scope: !5809)
!5879 = !DILocation(line: 1249, column: 9, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5809, file: !1282, line: 1249, column: 9)
!5881 = !DILocation(line: 1249, column: 13, scope: !5880)
!5882 = !DILocation(line: 1249, column: 9, scope: !5809)
!5883 = !DILocation(line: 1250, column: 9, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5880, file: !1282, line: 1249, column: 18)
!5885 = !DILocation(line: 1251, column: 16, scope: !5884)
!5886 = !DILocation(line: 1251, column: 9, scope: !5884)
!5887 = !DILocation(line: 1254, column: 9, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5809, file: !1282, line: 1254, column: 9)
!5889 = !DILocation(line: 1254, column: 16, scope: !5888)
!5890 = !DILocation(line: 1254, column: 22, scope: !5888)
!5891 = !DILocation(line: 1254, column: 9, scope: !5809)
!5892 = !DILocation(line: 1255, column: 16, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5888, file: !1282, line: 1254, column: 27)
!5894 = !DILocation(line: 1258, column: 16, scope: !5893)
!5895 = !DILocation(line: 1258, column: 24, scope: !5893)
!5896 = !DILocation(line: 1258, column: 29, scope: !5893)
!5897 = !DILocation(line: 1258, column: 36, scope: !5893)
!5898 = !DILocation(line: 1258, column: 41, scope: !5893)
!5899 = !DILocation(line: 1259, column: 16, scope: !5893)
!5900 = !DILocation(line: 1259, column: 21, scope: !5893)
!5901 = !DILocation(line: 1259, column: 30, scope: !5893)
!5902 = !DILocation(line: 1259, column: 35, scope: !5893)
!5903 = !DILocation(line: 1259, column: 49, scope: !5893)
!5904 = !DILocation(line: 1259, column: 63, scope: !5893)
!5905 = !DILocation(line: 1259, column: 68, scope: !5893)
!5906 = !DILocation(line: 1259, column: 82, scope: !5893)
!5907 = !DILocation(line: 1259, column: 61, scope: !5893)
!5908 = !DILocation(line: 1259, column: 27, scope: !5893)
!5909 = !DILocation(line: 1260, column: 16, scope: !5893)
!5910 = !DILocation(line: 1260, column: 21, scope: !5893)
!5911 = !DILocation(line: 1260, column: 31, scope: !5893)
!5912 = !DILocation(line: 1260, column: 36, scope: !5893)
!5913 = !DILocation(line: 1260, column: 50, scope: !5893)
!5914 = !DILocation(line: 1260, column: 63, scope: !5893)
!5915 = !DILocation(line: 1260, column: 68, scope: !5893)
!5916 = !DILocation(line: 1260, column: 82, scope: !5893)
!5917 = !DILocation(line: 1260, column: 61, scope: !5893)
!5918 = !DILocation(line: 1260, column: 28, scope: !5893)
!5919 = !DILocation(line: 1261, column: 36, scope: !5893)
!5920 = !DILocation(line: 1261, column: 41, scope: !5893)
!5921 = !DILocation(line: 1261, column: 16, scope: !5893)
!5922 = !DILocation(line: 1255, column: 9, scope: !5893)
!5923 = !DILocation(line: 1262, column: 5, scope: !5893)
!5924 = !DILocation(line: 1267, column: 22, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5809, file: !1282, line: 1267, column: 9)
!5926 = !DILocation(line: 1267, column: 9, scope: !5925)
!5927 = !DILocation(line: 1267, column: 13, scope: !5925)
!5928 = !DILocation(line: 1267, column: 30, scope: !5925)
!5929 = !DILocation(line: 1268, column: 30, scope: !5925)
!5930 = !DILocation(line: 1268, column: 17, scope: !5925)
!5931 = !DILocation(line: 1268, column: 21, scope: !5925)
!5932 = !DILocation(line: 1268, column: 39, scope: !5925)
!5933 = !DILocation(line: 1268, column: 45, scope: !5925)
!5934 = !DILocation(line: 1268, column: 54, scope: !5925)
!5935 = !DILocation(line: 1268, column: 60, scope: !5925)
!5936 = !DILocation(line: 1268, column: 69, scope: !5925)
!5937 = !DILocation(line: 1268, column: 10, scope: !5925)
!5938 = !DILocation(line: 1267, column: 9, scope: !5939)
!5939 = !DILexicalBlockFile(scope: !5809, file: !1282, discriminator: 1)
!5940 = !DILocation(line: 1269, column: 9, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5925, file: !1282, line: 1268, column: 76)
!5942 = !DILocation(line: 1270, column: 5, scope: !5941)
!5943 = !DILocation(line: 1271, column: 20, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5925, file: !1282, line: 1270, column: 12)
!5945 = !DILocation(line: 1271, column: 24, scope: !5944)
!5946 = !DILocation(line: 1271, column: 9, scope: !5944)
!5947 = !DILocation(line: 1272, column: 32, scope: !5944)
!5948 = !DILocation(line: 1272, column: 22, scope: !5944)
!5949 = !DILocation(line: 1272, column: 9, scope: !5944)
!5950 = !DILocation(line: 1272, column: 13, scope: !5944)
!5951 = !DILocation(line: 1272, column: 30, scope: !5944)
!5952 = !DILocation(line: 1275, column: 5, scope: !5809)
!5953 = !DILocation(line: 1276, column: 1, scope: !5809)
!5954 = distinct !DISubprogram(name: "remove_sps", scope: !1282, file: !1282, line: 88, type: !3370, isLocal: true, isDefinition: true, scopeLine: 89, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!5955 = !DILocalVariable(name: "s", arg: 1, scope: !5954, file: !1282, line: 88, type: !2457)
!5956 = !DILocation(line: 88, column: 39, scope: !5954)
!5957 = !DILocalVariable(name: "id", arg: 2, scope: !5954, file: !1282, line: 88, type: !977)
!5958 = !DILocation(line: 88, column: 46, scope: !5954)
!5959 = !DILocalVariable(name: "i", scope: !5954, file: !1282, line: 90, type: !977)
!5960 = !DILocation(line: 90, column: 9, scope: !5954)
!5961 = !DILocation(line: 91, column: 21, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5954, file: !1282, line: 91, column: 9)
!5963 = !DILocation(line: 91, column: 9, scope: !5962)
!5964 = !DILocation(line: 91, column: 12, scope: !5962)
!5965 = !DILocation(line: 91, column: 9, scope: !5954)
!5966 = !DILocation(line: 92, column: 13, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5968, file: !1282, line: 92, column: 13)
!5968 = distinct !DILexicalBlock(scope: !5962, file: !1282, line: 91, column: 26)
!5969 = !DILocation(line: 92, column: 16, scope: !5967)
!5970 = !DILocation(line: 92, column: 51, scope: !5967)
!5971 = !DILocation(line: 92, column: 39, scope: !5967)
!5972 = !DILocation(line: 92, column: 42, scope: !5967)
!5973 = !DILocation(line: 92, column: 56, scope: !5967)
!5974 = !DILocation(line: 92, column: 23, scope: !5967)
!5975 = !DILocation(line: 92, column: 20, scope: !5967)
!5976 = !DILocation(line: 92, column: 13, scope: !5968)
!5977 = !DILocation(line: 93, column: 13, scope: !5967)
!5978 = !DILocation(line: 93, column: 16, scope: !5967)
!5979 = !DILocation(line: 93, column: 20, scope: !5967)
!5980 = !DILocation(line: 96, column: 16, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5968, file: !1282, line: 96, column: 9)
!5982 = !DILocation(line: 96, column: 14, scope: !5981)
!5983 = !DILocation(line: 96, column: 21, scope: !5984)
!5984 = !DILexicalBlockFile(scope: !5985, file: !1282, discriminator: 1)
!5985 = distinct !DILexicalBlock(scope: !5981, file: !1282, line: 96, column: 9)
!5986 = !DILocation(line: 96, column: 23, scope: !5984)
!5987 = !DILocation(line: 96, column: 9, scope: !5984)
!5988 = !DILocation(line: 97, column: 29, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5985, file: !1282, line: 97, column: 17)
!5990 = !DILocation(line: 97, column: 17, scope: !5989)
!5991 = !DILocation(line: 97, column: 20, scope: !5989)
!5992 = !DILocation(line: 97, column: 32, scope: !5989)
!5993 = !DILocation(line: 97, column: 58, scope: !5994)
!5994 = !DILexicalBlockFile(scope: !5989, file: !1282, discriminator: 1)
!5995 = !DILocation(line: 97, column: 46, scope: !5994)
!5996 = !DILocation(line: 97, column: 49, scope: !5994)
!5997 = !DILocation(line: 97, column: 62, scope: !5994)
!5998 = !DILocation(line: 97, column: 69, scope: !5994)
!5999 = !DILocation(line: 97, column: 79, scope: !5994)
!6000 = !DILocation(line: 97, column: 76, scope: !5994)
!6001 = !DILocation(line: 97, column: 17, scope: !5994)
!6002 = !DILocation(line: 98, column: 28, scope: !5989)
!6003 = !DILocation(line: 98, column: 31, scope: !5989)
!6004 = !DILocation(line: 98, column: 17, scope: !5989)
!6005 = !DILocation(line: 97, column: 79, scope: !6006)
!6006 = !DILexicalBlockFile(scope: !5989, file: !1282, discriminator: 2)
!6007 = !DILocation(line: 96, column: 76, scope: !6008)
!6008 = !DILexicalBlockFile(scope: !5985, file: !1282, discriminator: 2)
!6009 = !DILocation(line: 96, column: 9, scope: !6008)
!6010 = distinct !{!6010, !6011}
!6011 = !DILocation(line: 96, column: 9, scope: !5968)
!6012 = !DILocation(line: 100, column: 9, scope: !5968)
!6013 = distinct !{!6013, !6012}
!6014 = !DILocation(line: 100, column: 34, scope: !6015)
!6015 = !DILexicalBlockFile(scope: !6016, file: !1282, discriminator: 1)
!6016 = distinct !DILexicalBlock(scope: !6017, file: !1282, line: 100, column: 18)
!6017 = distinct !DILexicalBlock(scope: !5968, file: !1282, line: 100, column: 12)
!6018 = !DILocation(line: 100, column: 22, scope: !6015)
!6019 = !DILocation(line: 100, column: 25, scope: !6015)
!6020 = !DILocation(line: 100, column: 38, scope: !6015)
!6021 = !DILocation(line: 100, column: 41, scope: !6022)
!6022 = !DILexicalBlockFile(scope: !6016, file: !1282, discriminator: 2)
!6023 = !DILocation(line: 100, column: 44, scope: !6022)
!6024 = !DILocation(line: 100, column: 73, scope: !6022)
!6025 = !DILocation(line: 100, column: 61, scope: !6022)
!6026 = !DILocation(line: 100, column: 64, scope: !6022)
!6027 = !DILocation(line: 100, column: 78, scope: !6022)
!6028 = !DILocation(line: 100, column: 51, scope: !6022)
!6029 = !DILocation(line: 100, column: 48, scope: !6022)
!6030 = !DILocation(line: 100, column: 18, scope: !6022)
!6031 = !DILocation(line: 100, column: 88, scope: !6032)
!6032 = !DILexicalBlockFile(scope: !6033, file: !1282, discriminator: 3)
!6033 = distinct !DILexicalBlock(scope: !6016, file: !1282, line: 100, column: 86)
!6034 = !DILocation(line: 100, column: 144, scope: !6035)
!6035 = !DILexicalBlockFile(scope: !6032, file: !1282, discriminator: 5)
!6036 = !DILocation(line: 100, column: 144, scope: !6032)
!6037 = !DILocation(line: 100, column: 155, scope: !6038)
!6038 = !DILexicalBlockFile(scope: !6017, file: !1282, discriminator: 4)
!6039 = !DILocation(line: 101, column: 5, scope: !5968)
!6040 = !DILocation(line: 102, column: 34, scope: !5954)
!6041 = !DILocation(line: 102, column: 22, scope: !5954)
!6042 = !DILocation(line: 102, column: 25, scope: !5954)
!6043 = !DILocation(line: 102, column: 5, scope: !5954)
!6044 = !DILocation(line: 103, column: 1, scope: !5954)
!6045 = distinct !DISubprogram(name: "ff_hevc_decode_nal_pps", scope: !1282, file: !1282, line: 1469, type: !2455, isLocal: false, isDefinition: true, scopeLine: 1471, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!6046 = !DILocalVariable(name: "gb", arg: 1, scope: !6045, file: !1282, line: 1469, type: !1301)
!6047 = !DILocation(line: 1469, column: 43, scope: !6045)
!6048 = !DILocalVariable(name: "avctx", arg: 2, scope: !6045, file: !1282, line: 1469, type: !1312)
!6049 = !DILocation(line: 1469, column: 63, scope: !6045)
!6050 = !DILocalVariable(name: "ps", arg: 3, scope: !6045, file: !1282, line: 1470, type: !2457)
!6051 = !DILocation(line: 1470, column: 43, scope: !6045)
!6052 = !DILocalVariable(name: "sps", scope: !6045, file: !1282, line: 1472, type: !1036)
!6053 = !DILocation(line: 1472, column: 14, scope: !6045)
!6054 = !DILocalVariable(name: "i", scope: !6045, file: !1282, line: 1473, type: !977)
!6055 = !DILocation(line: 1473, column: 9, scope: !6045)
!6056 = !DILocalVariable(name: "ret", scope: !6045, file: !1282, line: 1473, type: !977)
!6057 = !DILocation(line: 1473, column: 12, scope: !6045)
!6058 = !DILocalVariable(name: "pps_id", scope: !6045, file: !1282, line: 1474, type: !978)
!6059 = !DILocation(line: 1474, column: 18, scope: !6045)
!6060 = !DILocalVariable(name: "nal_size", scope: !6045, file: !1282, line: 1475, type: !2484)
!6061 = !DILocation(line: 1475, column: 15, scope: !6045)
!6062 = !DILocalVariable(name: "log2_parallel_merge_level_minus2", scope: !6045, file: !1282, line: 1476, type: !978)
!6063 = !DILocation(line: 1476, column: 14, scope: !6045)
!6064 = !DILocalVariable(name: "pps_buf", scope: !6045, file: !1282, line: 1478, type: !1476)
!6065 = !DILocation(line: 1478, column: 18, scope: !6045)
!6066 = !DILocalVariable(name: "pps", scope: !6045, file: !1282, line: 1479, type: !1209)
!6067 = !DILocation(line: 1479, column: 14, scope: !6045)
!6068 = !DILocation(line: 1479, column: 20, scope: !6045)
!6069 = !DILocation(line: 1481, column: 10, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1481, column: 9)
!6071 = !DILocation(line: 1481, column: 9, scope: !6045)
!6072 = !DILocation(line: 1482, column: 9, scope: !6070)
!6073 = !DILocation(line: 1484, column: 43, scope: !6045)
!6074 = !DILocation(line: 1484, column: 32, scope: !6045)
!6075 = !DILocation(line: 1484, column: 15, scope: !6045)
!6076 = !DILocation(line: 1484, column: 13, scope: !6045)
!6077 = !DILocation(line: 1486, column: 10, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1486, column: 9)
!6079 = !DILocation(line: 1486, column: 9, scope: !6045)
!6080 = !DILocation(line: 1487, column: 18, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6078, file: !1282, line: 1486, column: 19)
!6082 = !DILocation(line: 1487, column: 9, scope: !6081)
!6083 = !DILocation(line: 1488, column: 9, scope: !6081)
!6084 = !DILocation(line: 1491, column: 12, scope: !6045)
!6085 = !DILocation(line: 1491, column: 5, scope: !6045)
!6086 = !DILocation(line: 1493, column: 16, scope: !6045)
!6087 = !DILocation(line: 1493, column: 20, scope: !6045)
!6088 = !DILocation(line: 1493, column: 33, scope: !6045)
!6089 = !DILocation(line: 1493, column: 37, scope: !6045)
!6090 = !DILocation(line: 1493, column: 31, scope: !6045)
!6091 = !DILocation(line: 1493, column: 14, scope: !6045)
!6092 = !DILocation(line: 1494, column: 9, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1494, column: 9)
!6094 = !DILocation(line: 1494, column: 18, scope: !6093)
!6095 = !DILocation(line: 1494, column: 9, scope: !6045)
!6096 = !DILocation(line: 1495, column: 16, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6093, file: !1282, line: 1494, column: 39)
!6098 = !DILocation(line: 1497, column: 16, scope: !6097)
!6099 = !DILocation(line: 1495, column: 9, scope: !6097)
!6100 = !DILocation(line: 1498, column: 9, scope: !6097)
!6101 = !DILocation(line: 1498, column: 14, scope: !6097)
!6102 = !DILocation(line: 1498, column: 24, scope: !6097)
!6103 = !DILocation(line: 1499, column: 5, scope: !6097)
!6104 = !DILocation(line: 1500, column: 26, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6093, file: !1282, line: 1499, column: 12)
!6106 = !DILocation(line: 1500, column: 9, scope: !6105)
!6107 = !DILocation(line: 1500, column: 14, scope: !6105)
!6108 = !DILocation(line: 1500, column: 24, scope: !6105)
!6109 = !DILocation(line: 1502, column: 12, scope: !6045)
!6110 = !DILocation(line: 1502, column: 17, scope: !6045)
!6111 = !DILocation(line: 1502, column: 5, scope: !6045)
!6112 = !DILocation(line: 1502, column: 23, scope: !6045)
!6113 = !DILocation(line: 1502, column: 27, scope: !6045)
!6114 = !DILocation(line: 1502, column: 35, scope: !6045)
!6115 = !DILocation(line: 1502, column: 40, scope: !6045)
!6116 = !DILocation(line: 1505, column: 5, scope: !6045)
!6117 = !DILocation(line: 1505, column: 10, scope: !6045)
!6118 = !DILocation(line: 1505, column: 48, scope: !6045)
!6119 = !DILocation(line: 1506, column: 5, scope: !6045)
!6120 = !DILocation(line: 1506, column: 10, scope: !6045)
!6121 = !DILocation(line: 1506, column: 27, scope: !6045)
!6122 = !DILocation(line: 1507, column: 5, scope: !6045)
!6123 = !DILocation(line: 1507, column: 10, scope: !6045)
!6124 = !DILocation(line: 1507, column: 24, scope: !6045)
!6125 = !DILocation(line: 1508, column: 5, scope: !6045)
!6126 = !DILocation(line: 1508, column: 10, scope: !6045)
!6127 = !DILocation(line: 1508, column: 31, scope: !6045)
!6128 = !DILocation(line: 1509, column: 5, scope: !6045)
!6129 = !DILocation(line: 1509, column: 10, scope: !6045)
!6130 = !DILocation(line: 1509, column: 22, scope: !6045)
!6131 = !DILocation(line: 1510, column: 5, scope: !6045)
!6132 = !DILocation(line: 1510, column: 10, scope: !6045)
!6133 = !DILocation(line: 1510, column: 22, scope: !6045)
!6134 = !DILocation(line: 1511, column: 5, scope: !6045)
!6135 = !DILocation(line: 1511, column: 10, scope: !6045)
!6136 = !DILocation(line: 1511, column: 20, scope: !6045)
!6137 = !DILocation(line: 1512, column: 5, scope: !6045)
!6138 = !DILocation(line: 1512, column: 10, scope: !6045)
!6139 = !DILocation(line: 1512, column: 45, scope: !6045)
!6140 = !DILocation(line: 1515, column: 33, scope: !6045)
!6141 = !DILocation(line: 1515, column: 14, scope: !6045)
!6142 = !DILocation(line: 1515, column: 12, scope: !6045)
!6143 = !DILocation(line: 1516, column: 9, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1516, column: 9)
!6145 = !DILocation(line: 1516, column: 16, scope: !6144)
!6146 = !DILocation(line: 1516, column: 9, scope: !6045)
!6147 = !DILocation(line: 1517, column: 16, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6144, file: !1282, line: 1516, column: 39)
!6149 = !DILocation(line: 1517, column: 56, scope: !6148)
!6150 = !DILocation(line: 1517, column: 9, scope: !6148)
!6151 = !DILocation(line: 1518, column: 13, scope: !6148)
!6152 = !DILocation(line: 1519, column: 9, scope: !6148)
!6153 = !DILocation(line: 1521, column: 38, scope: !6045)
!6154 = !DILocation(line: 1521, column: 19, scope: !6045)
!6155 = !DILocation(line: 1521, column: 5, scope: !6045)
!6156 = !DILocation(line: 1521, column: 10, scope: !6045)
!6157 = !DILocation(line: 1521, column: 17, scope: !6045)
!6158 = !DILocation(line: 1522, column: 9, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1522, column: 9)
!6160 = !DILocation(line: 1522, column: 14, scope: !6159)
!6161 = !DILocation(line: 1522, column: 21, scope: !6159)
!6162 = !DILocation(line: 1522, column: 9, scope: !6045)
!6163 = !DILocation(line: 1523, column: 16, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6159, file: !1282, line: 1522, column: 44)
!6165 = !DILocation(line: 1523, column: 56, scope: !6164)
!6166 = !DILocation(line: 1523, column: 61, scope: !6164)
!6167 = !DILocation(line: 1523, column: 9, scope: !6164)
!6168 = !DILocation(line: 1524, column: 13, scope: !6164)
!6169 = !DILocation(line: 1525, column: 9, scope: !6164)
!6170 = !DILocation(line: 1527, column: 23, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1527, column: 9)
!6172 = !DILocation(line: 1527, column: 28, scope: !6171)
!6173 = !DILocation(line: 1527, column: 10, scope: !6171)
!6174 = !DILocation(line: 1527, column: 14, scope: !6171)
!6175 = !DILocation(line: 1527, column: 9, scope: !6045)
!6176 = !DILocation(line: 1528, column: 16, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6171, file: !1282, line: 1527, column: 37)
!6178 = !DILocation(line: 1528, column: 55, scope: !6177)
!6179 = !DILocation(line: 1528, column: 60, scope: !6177)
!6180 = !DILocation(line: 1528, column: 9, scope: !6177)
!6181 = !DILocation(line: 1529, column: 13, scope: !6177)
!6182 = !DILocation(line: 1530, column: 9, scope: !6177)
!6183 = !DILocation(line: 1532, column: 35, scope: !6045)
!6184 = !DILocation(line: 1532, column: 40, scope: !6045)
!6185 = !DILocation(line: 1532, column: 22, scope: !6045)
!6186 = !DILocation(line: 1532, column: 26, scope: !6045)
!6187 = !DILocation(line: 1532, column: 49, scope: !6045)
!6188 = !DILocation(line: 1532, column: 11, scope: !6045)
!6189 = !DILocation(line: 1532, column: 9, scope: !6045)
!6190 = !DILocation(line: 1534, column: 60, scope: !6045)
!6191 = !DILocation(line: 1534, column: 50, scope: !6045)
!6192 = !DILocation(line: 1534, column: 5, scope: !6045)
!6193 = !DILocation(line: 1534, column: 10, scope: !6045)
!6194 = !DILocation(line: 1534, column: 48, scope: !6045)
!6195 = !DILocation(line: 1535, column: 47, scope: !6045)
!6196 = !DILocation(line: 1535, column: 37, scope: !6045)
!6197 = !DILocation(line: 1535, column: 5, scope: !6045)
!6198 = !DILocation(line: 1535, column: 10, scope: !6045)
!6199 = !DILocation(line: 1535, column: 35, scope: !6045)
!6200 = !DILocation(line: 1536, column: 49, scope: !6045)
!6201 = !DILocation(line: 1536, column: 40, scope: !6045)
!6202 = !DILocation(line: 1536, column: 5, scope: !6045)
!6203 = !DILocation(line: 1536, column: 10, scope: !6045)
!6204 = !DILocation(line: 1536, column: 38, scope: !6045)
!6205 = !DILocation(line: 1538, column: 44, scope: !6045)
!6206 = !DILocation(line: 1538, column: 34, scope: !6045)
!6207 = !DILocation(line: 1538, column: 5, scope: !6045)
!6208 = !DILocation(line: 1538, column: 10, scope: !6045)
!6209 = !DILocation(line: 1538, column: 32, scope: !6045)
!6210 = !DILocation(line: 1540, column: 46, scope: !6045)
!6211 = !DILocation(line: 1540, column: 36, scope: !6045)
!6212 = !DILocation(line: 1540, column: 5, scope: !6045)
!6213 = !DILocation(line: 1540, column: 10, scope: !6045)
!6214 = !DILocation(line: 1540, column: 34, scope: !6045)
!6215 = !DILocation(line: 1542, column: 61, scope: !6045)
!6216 = !DILocation(line: 1542, column: 42, scope: !6045)
!6217 = !DILocation(line: 1542, column: 65, scope: !6045)
!6218 = !DILocation(line: 1542, column: 5, scope: !6045)
!6219 = !DILocation(line: 1542, column: 10, scope: !6045)
!6220 = !DILocation(line: 1542, column: 40, scope: !6045)
!6221 = !DILocation(line: 1543, column: 61, scope: !6045)
!6222 = !DILocation(line: 1543, column: 42, scope: !6045)
!6223 = !DILocation(line: 1543, column: 65, scope: !6045)
!6224 = !DILocation(line: 1543, column: 5, scope: !6045)
!6225 = !DILocation(line: 1543, column: 10, scope: !6045)
!6226 = !DILocation(line: 1543, column: 40, scope: !6045)
!6227 = !DILocation(line: 1545, column: 46, scope: !6045)
!6228 = !DILocation(line: 1545, column: 32, scope: !6045)
!6229 = !DILocation(line: 1545, column: 5, scope: !6045)
!6230 = !DILocation(line: 1545, column: 10, scope: !6045)
!6231 = !DILocation(line: 1545, column: 30, scope: !6045)
!6232 = !DILocation(line: 1547, column: 50, scope: !6045)
!6233 = !DILocation(line: 1547, column: 40, scope: !6045)
!6234 = !DILocation(line: 1547, column: 5, scope: !6045)
!6235 = !DILocation(line: 1547, column: 10, scope: !6045)
!6236 = !DILocation(line: 1547, column: 38, scope: !6045)
!6237 = !DILocation(line: 1548, column: 50, scope: !6045)
!6238 = !DILocation(line: 1548, column: 40, scope: !6045)
!6239 = !DILocation(line: 1548, column: 5, scope: !6045)
!6240 = !DILocation(line: 1548, column: 10, scope: !6045)
!6241 = !DILocation(line: 1548, column: 38, scope: !6045)
!6242 = !DILocation(line: 1550, column: 47, scope: !6045)
!6243 = !DILocation(line: 1550, column: 37, scope: !6045)
!6244 = !DILocation(line: 1550, column: 5, scope: !6045)
!6245 = !DILocation(line: 1550, column: 10, scope: !6045)
!6246 = !DILocation(line: 1550, column: 35, scope: !6045)
!6247 = !DILocation(line: 1551, column: 5, scope: !6045)
!6248 = !DILocation(line: 1551, column: 10, scope: !6045)
!6249 = !DILocation(line: 1551, column: 33, scope: !6045)
!6250 = !DILocation(line: 1552, column: 9, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1552, column: 9)
!6252 = !DILocation(line: 1552, column: 14, scope: !6251)
!6253 = !DILocation(line: 1552, column: 9, scope: !6045)
!6254 = !DILocation(line: 1553, column: 58, scope: !6251)
!6255 = !DILocation(line: 1553, column: 39, scope: !6251)
!6256 = !DILocation(line: 1553, column: 9, scope: !6251)
!6257 = !DILocation(line: 1553, column: 14, scope: !6251)
!6258 = !DILocation(line: 1553, column: 37, scope: !6251)
!6259 = !DILocation(line: 1555, column: 9, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1555, column: 9)
!6261 = !DILocation(line: 1555, column: 14, scope: !6260)
!6262 = !DILocation(line: 1555, column: 37, scope: !6260)
!6263 = !DILocation(line: 1555, column: 41, scope: !6260)
!6264 = !DILocation(line: 1556, column: 9, scope: !6260)
!6265 = !DILocation(line: 1556, column: 14, scope: !6260)
!6266 = !DILocation(line: 1556, column: 39, scope: !6260)
!6267 = !DILocation(line: 1556, column: 44, scope: !6260)
!6268 = !DILocation(line: 1556, column: 37, scope: !6260)
!6269 = !DILocation(line: 1555, column: 9, scope: !6270)
!6270 = !DILexicalBlockFile(scope: !6045, file: !1282, discriminator: 1)
!6271 = !DILocation(line: 1557, column: 16, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6260, file: !1282, line: 1556, column: 81)
!6273 = !DILocation(line: 1558, column: 16, scope: !6272)
!6274 = !DILocation(line: 1558, column: 21, scope: !6272)
!6275 = !DILocation(line: 1557, column: 9, scope: !6272)
!6276 = !DILocation(line: 1559, column: 13, scope: !6272)
!6277 = !DILocation(line: 1560, column: 9, scope: !6272)
!6278 = !DILocation(line: 1563, column: 39, scope: !6045)
!6279 = !DILocation(line: 1563, column: 25, scope: !6045)
!6280 = !DILocation(line: 1563, column: 5, scope: !6045)
!6281 = !DILocation(line: 1563, column: 10, scope: !6045)
!6282 = !DILocation(line: 1563, column: 23, scope: !6045)
!6283 = !DILocation(line: 1564, column: 9, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1564, column: 9)
!6285 = !DILocation(line: 1564, column: 14, scope: !6284)
!6286 = !DILocation(line: 1564, column: 27, scope: !6284)
!6287 = !DILocation(line: 1564, column: 33, scope: !6284)
!6288 = !DILocation(line: 1564, column: 36, scope: !6289)
!6289 = !DILexicalBlockFile(scope: !6284, file: !1282, discriminator: 1)
!6290 = !DILocation(line: 1564, column: 41, scope: !6289)
!6291 = !DILocation(line: 1564, column: 54, scope: !6289)
!6292 = !DILocation(line: 1564, column: 9, scope: !6289)
!6293 = !DILocation(line: 1565, column: 16, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6284, file: !1282, line: 1564, column: 60)
!6295 = !DILocation(line: 1566, column: 16, scope: !6294)
!6296 = !DILocation(line: 1566, column: 21, scope: !6294)
!6297 = !DILocation(line: 1565, column: 9, scope: !6294)
!6298 = !DILocation(line: 1567, column: 13, scope: !6294)
!6299 = !DILocation(line: 1568, column: 9, scope: !6294)
!6300 = !DILocation(line: 1570, column: 39, scope: !6045)
!6301 = !DILocation(line: 1570, column: 25, scope: !6045)
!6302 = !DILocation(line: 1570, column: 5, scope: !6045)
!6303 = !DILocation(line: 1570, column: 10, scope: !6045)
!6304 = !DILocation(line: 1570, column: 23, scope: !6045)
!6305 = !DILocation(line: 1571, column: 9, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1571, column: 9)
!6307 = !DILocation(line: 1571, column: 14, scope: !6306)
!6308 = !DILocation(line: 1571, column: 27, scope: !6306)
!6309 = !DILocation(line: 1571, column: 33, scope: !6306)
!6310 = !DILocation(line: 1571, column: 36, scope: !6311)
!6311 = !DILexicalBlockFile(scope: !6306, file: !1282, discriminator: 1)
!6312 = !DILocation(line: 1571, column: 41, scope: !6311)
!6313 = !DILocation(line: 1571, column: 54, scope: !6311)
!6314 = !DILocation(line: 1571, column: 9, scope: !6311)
!6315 = !DILocation(line: 1572, column: 16, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6306, file: !1282, line: 1571, column: 60)
!6317 = !DILocation(line: 1573, column: 16, scope: !6316)
!6318 = !DILocation(line: 1573, column: 21, scope: !6316)
!6319 = !DILocation(line: 1572, column: 9, scope: !6316)
!6320 = !DILocation(line: 1574, column: 13, scope: !6316)
!6321 = !DILocation(line: 1575, column: 9, scope: !6316)
!6322 = !DILocation(line: 1577, column: 69, scope: !6045)
!6323 = !DILocation(line: 1577, column: 59, scope: !6045)
!6324 = !DILocation(line: 1577, column: 5, scope: !6045)
!6325 = !DILocation(line: 1577, column: 10, scope: !6045)
!6326 = !DILocation(line: 1577, column: 57, scope: !6045)
!6327 = !DILocation(line: 1579, column: 41, scope: !6045)
!6328 = !DILocation(line: 1579, column: 31, scope: !6045)
!6329 = !DILocation(line: 1579, column: 5, scope: !6045)
!6330 = !DILocation(line: 1579, column: 10, scope: !6045)
!6331 = !DILocation(line: 1579, column: 29, scope: !6045)
!6332 = !DILocation(line: 1580, column: 43, scope: !6045)
!6333 = !DILocation(line: 1580, column: 33, scope: !6045)
!6334 = !DILocation(line: 1580, column: 5, scope: !6045)
!6335 = !DILocation(line: 1580, column: 10, scope: !6045)
!6336 = !DILocation(line: 1580, column: 31, scope: !6045)
!6337 = !DILocation(line: 1582, column: 52, scope: !6045)
!6338 = !DILocation(line: 1582, column: 42, scope: !6045)
!6339 = !DILocation(line: 1582, column: 5, scope: !6045)
!6340 = !DILocation(line: 1582, column: 10, scope: !6045)
!6341 = !DILocation(line: 1582, column: 40, scope: !6045)
!6342 = !DILocation(line: 1583, column: 41, scope: !6045)
!6343 = !DILocation(line: 1583, column: 31, scope: !6045)
!6344 = !DILocation(line: 1583, column: 5, scope: !6045)
!6345 = !DILocation(line: 1583, column: 10, scope: !6045)
!6346 = !DILocation(line: 1583, column: 29, scope: !6045)
!6347 = !DILocation(line: 1584, column: 55, scope: !6045)
!6348 = !DILocation(line: 1584, column: 45, scope: !6045)
!6349 = !DILocation(line: 1584, column: 5, scope: !6045)
!6350 = !DILocation(line: 1584, column: 10, scope: !6045)
!6351 = !DILocation(line: 1584, column: 43, scope: !6045)
!6352 = !DILocation(line: 1586, column: 9, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1586, column: 9)
!6354 = !DILocation(line: 1586, column: 14, scope: !6353)
!6355 = !DILocation(line: 1586, column: 9, scope: !6045)
!6356 = !DILocation(line: 1587, column: 52, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6353, file: !1282, line: 1586, column: 34)
!6358 = !DILocation(line: 1587, column: 33, scope: !6357)
!6359 = !DILocation(line: 1587, column: 56, scope: !6357)
!6360 = !DILocation(line: 1587, column: 9, scope: !6357)
!6361 = !DILocation(line: 1587, column: 14, scope: !6357)
!6362 = !DILocation(line: 1587, column: 31, scope: !6357)
!6363 = !DILocation(line: 1588, column: 49, scope: !6357)
!6364 = !DILocation(line: 1588, column: 30, scope: !6357)
!6365 = !DILocation(line: 1588, column: 53, scope: !6357)
!6366 = !DILocation(line: 1588, column: 9, scope: !6357)
!6367 = !DILocation(line: 1588, column: 14, scope: !6357)
!6368 = !DILocation(line: 1588, column: 28, scope: !6357)
!6369 = !DILocation(line: 1589, column: 13, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6357, file: !1282, line: 1589, column: 13)
!6371 = !DILocation(line: 1589, column: 18, scope: !6370)
!6372 = !DILocation(line: 1589, column: 35, scope: !6370)
!6373 = !DILocation(line: 1589, column: 40, scope: !6370)
!6374 = !DILocation(line: 1590, column: 13, scope: !6370)
!6375 = !DILocation(line: 1590, column: 18, scope: !6370)
!6376 = !DILocation(line: 1590, column: 38, scope: !6370)
!6377 = !DILocation(line: 1590, column: 43, scope: !6370)
!6378 = !DILocation(line: 1590, column: 35, scope: !6370)
!6379 = !DILocation(line: 1589, column: 13, scope: !6380)
!6380 = !DILexicalBlockFile(scope: !6357, file: !1282, discriminator: 1)
!6381 = !DILocation(line: 1591, column: 20, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6370, file: !1282, line: 1590, column: 50)
!6383 = !DILocation(line: 1592, column: 20, scope: !6382)
!6384 = !DILocation(line: 1592, column: 25, scope: !6382)
!6385 = !DILocation(line: 1592, column: 42, scope: !6382)
!6386 = !DILocation(line: 1591, column: 13, scope: !6382)
!6387 = !DILocation(line: 1593, column: 17, scope: !6382)
!6388 = !DILocation(line: 1594, column: 13, scope: !6382)
!6389 = !DILocation(line: 1596, column: 13, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6357, file: !1282, line: 1596, column: 13)
!6391 = !DILocation(line: 1596, column: 18, scope: !6390)
!6392 = !DILocation(line: 1596, column: 32, scope: !6390)
!6393 = !DILocation(line: 1596, column: 37, scope: !6390)
!6394 = !DILocation(line: 1597, column: 13, scope: !6390)
!6395 = !DILocation(line: 1597, column: 18, scope: !6390)
!6396 = !DILocation(line: 1597, column: 35, scope: !6390)
!6397 = !DILocation(line: 1597, column: 40, scope: !6390)
!6398 = !DILocation(line: 1597, column: 32, scope: !6390)
!6399 = !DILocation(line: 1596, column: 13, scope: !6380)
!6400 = !DILocation(line: 1598, column: 20, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6390, file: !1282, line: 1597, column: 48)
!6402 = !DILocation(line: 1599, column: 20, scope: !6401)
!6403 = !DILocation(line: 1599, column: 25, scope: !6401)
!6404 = !DILocation(line: 1599, column: 39, scope: !6401)
!6405 = !DILocation(line: 1598, column: 13, scope: !6401)
!6406 = !DILocation(line: 1600, column: 17, scope: !6401)
!6407 = !DILocation(line: 1601, column: 13, scope: !6401)
!6408 = !DILocation(line: 1604, column: 45, scope: !6357)
!6409 = !DILocation(line: 1604, column: 50, scope: !6357)
!6410 = !DILocation(line: 1604, column: 29, scope: !6357)
!6411 = !DILocation(line: 1604, column: 9, scope: !6357)
!6412 = !DILocation(line: 1604, column: 14, scope: !6357)
!6413 = !DILocation(line: 1604, column: 27, scope: !6357)
!6414 = !DILocation(line: 1605, column: 43, scope: !6357)
!6415 = !DILocation(line: 1605, column: 48, scope: !6357)
!6416 = !DILocation(line: 1605, column: 27, scope: !6357)
!6417 = !DILocation(line: 1605, column: 9, scope: !6357)
!6418 = !DILocation(line: 1605, column: 14, scope: !6357)
!6419 = !DILocation(line: 1605, column: 25, scope: !6357)
!6420 = !DILocation(line: 1606, column: 14, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6357, file: !1282, line: 1606, column: 13)
!6422 = !DILocation(line: 1606, column: 19, scope: !6421)
!6423 = !DILocation(line: 1606, column: 32, scope: !6421)
!6424 = !DILocation(line: 1606, column: 36, scope: !6425)
!6425 = !DILexicalBlockFile(scope: !6421, file: !1282, discriminator: 1)
!6426 = !DILocation(line: 1606, column: 41, scope: !6425)
!6427 = !DILocation(line: 1606, column: 13, scope: !6425)
!6428 = !DILocation(line: 1607, column: 17, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6421, file: !1282, line: 1606, column: 53)
!6430 = !DILocation(line: 1608, column: 13, scope: !6429)
!6431 = !DILocation(line: 1611, column: 47, scope: !6357)
!6432 = !DILocation(line: 1611, column: 37, scope: !6357)
!6433 = !DILocation(line: 1611, column: 9, scope: !6357)
!6434 = !DILocation(line: 1611, column: 14, scope: !6357)
!6435 = !DILocation(line: 1611, column: 35, scope: !6357)
!6436 = !DILocation(line: 1612, column: 14, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6357, file: !1282, line: 1612, column: 13)
!6438 = !DILocation(line: 1612, column: 19, scope: !6437)
!6439 = !DILocation(line: 1612, column: 13, scope: !6357)
!6440 = !DILocalVariable(name: "sum", scope: !6441, file: !1282, line: 1613, type: !1386)
!6441 = distinct !DILexicalBlock(scope: !6437, file: !1282, line: 1612, column: 41)
!6442 = !DILocation(line: 1613, column: 22, scope: !6441)
!6443 = !DILocation(line: 1614, column: 20, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6441, file: !1282, line: 1614, column: 13)
!6445 = !DILocation(line: 1614, column: 18, scope: !6444)
!6446 = !DILocation(line: 1614, column: 25, scope: !6447)
!6447 = !DILexicalBlockFile(scope: !6448, file: !1282, discriminator: 1)
!6448 = distinct !DILexicalBlock(scope: !6444, file: !1282, line: 1614, column: 13)
!6449 = !DILocation(line: 1614, column: 29, scope: !6447)
!6450 = !DILocation(line: 1614, column: 34, scope: !6447)
!6451 = !DILocation(line: 1614, column: 51, scope: !6447)
!6452 = !DILocation(line: 1614, column: 27, scope: !6447)
!6453 = !DILocation(line: 1614, column: 13, scope: !6447)
!6454 = !DILocation(line: 1615, column: 59, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6448, file: !1282, line: 1614, column: 61)
!6456 = !DILocation(line: 1615, column: 40, scope: !6455)
!6457 = !DILocation(line: 1615, column: 63, scope: !6455)
!6458 = !DILocation(line: 1615, column: 35, scope: !6455)
!6459 = !DILocation(line: 1615, column: 17, scope: !6455)
!6460 = !DILocation(line: 1615, column: 22, scope: !6455)
!6461 = !DILocation(line: 1615, column: 38, scope: !6455)
!6462 = !DILocation(line: 1616, column: 42, scope: !6455)
!6463 = !DILocation(line: 1616, column: 24, scope: !6455)
!6464 = !DILocation(line: 1616, column: 29, scope: !6455)
!6465 = !DILocation(line: 1616, column: 21, scope: !6455)
!6466 = !DILocation(line: 1617, column: 13, scope: !6455)
!6467 = !DILocation(line: 1614, column: 57, scope: !6468)
!6468 = !DILexicalBlockFile(scope: !6448, file: !1282, discriminator: 2)
!6469 = !DILocation(line: 1614, column: 13, scope: !6468)
!6470 = distinct !{!6470, !6471}
!6471 = !DILocation(line: 1614, column: 13, scope: !6441)
!6472 = !DILocation(line: 1618, column: 17, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6441, file: !1282, line: 1618, column: 17)
!6474 = !DILocation(line: 1618, column: 24, scope: !6473)
!6475 = !DILocation(line: 1618, column: 29, scope: !6473)
!6476 = !DILocation(line: 1618, column: 21, scope: !6473)
!6477 = !DILocation(line: 1618, column: 17, scope: !6441)
!6478 = !DILocation(line: 1619, column: 24, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6473, file: !1282, line: 1618, column: 40)
!6480 = !DILocation(line: 1619, column: 17, scope: !6479)
!6481 = !DILocation(line: 1620, column: 21, scope: !6479)
!6482 = !DILocation(line: 1621, column: 17, scope: !6479)
!6483 = !DILocation(line: 1623, column: 60, scope: !6441)
!6484 = !DILocation(line: 1623, column: 65, scope: !6441)
!6485 = !DILocation(line: 1623, column: 77, scope: !6441)
!6486 = !DILocation(line: 1623, column: 75, scope: !6441)
!6487 = !DILocation(line: 1623, column: 31, scope: !6441)
!6488 = !DILocation(line: 1623, column: 36, scope: !6441)
!6489 = !DILocation(line: 1623, column: 53, scope: !6441)
!6490 = !DILocation(line: 1623, column: 13, scope: !6441)
!6491 = !DILocation(line: 1623, column: 18, scope: !6441)
!6492 = !DILocation(line: 1623, column: 58, scope: !6441)
!6493 = !DILocation(line: 1625, column: 17, scope: !6441)
!6494 = !DILocation(line: 1626, column: 20, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6441, file: !1282, line: 1626, column: 13)
!6496 = !DILocation(line: 1626, column: 18, scope: !6495)
!6497 = !DILocation(line: 1626, column: 25, scope: !6498)
!6498 = !DILexicalBlockFile(scope: !6499, file: !1282, discriminator: 1)
!6499 = distinct !DILexicalBlock(scope: !6495, file: !1282, line: 1626, column: 13)
!6500 = !DILocation(line: 1626, column: 29, scope: !6498)
!6501 = !DILocation(line: 1626, column: 34, scope: !6498)
!6502 = !DILocation(line: 1626, column: 48, scope: !6498)
!6503 = !DILocation(line: 1626, column: 27, scope: !6498)
!6504 = !DILocation(line: 1626, column: 13, scope: !6498)
!6505 = !DILocation(line: 1627, column: 57, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6499, file: !1282, line: 1626, column: 58)
!6507 = !DILocation(line: 1627, column: 38, scope: !6506)
!6508 = !DILocation(line: 1627, column: 61, scope: !6506)
!6509 = !DILocation(line: 1627, column: 33, scope: !6506)
!6510 = !DILocation(line: 1627, column: 17, scope: !6506)
!6511 = !DILocation(line: 1627, column: 22, scope: !6506)
!6512 = !DILocation(line: 1627, column: 36, scope: !6506)
!6513 = !DILocation(line: 1628, column: 40, scope: !6506)
!6514 = !DILocation(line: 1628, column: 24, scope: !6506)
!6515 = !DILocation(line: 1628, column: 29, scope: !6506)
!6516 = !DILocation(line: 1628, column: 21, scope: !6506)
!6517 = !DILocation(line: 1629, column: 13, scope: !6506)
!6518 = !DILocation(line: 1626, column: 54, scope: !6519)
!6519 = !DILexicalBlockFile(scope: !6499, file: !1282, discriminator: 2)
!6520 = !DILocation(line: 1626, column: 13, scope: !6519)
!6521 = distinct !{!6521, !6522}
!6522 = !DILocation(line: 1626, column: 13, scope: !6441)
!6523 = !DILocation(line: 1630, column: 17, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6441, file: !1282, line: 1630, column: 17)
!6525 = !DILocation(line: 1630, column: 24, scope: !6524)
!6526 = !DILocation(line: 1630, column: 29, scope: !6524)
!6527 = !DILocation(line: 1630, column: 21, scope: !6524)
!6528 = !DILocation(line: 1630, column: 17, scope: !6441)
!6529 = !DILocation(line: 1631, column: 24, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6524, file: !1282, line: 1630, column: 41)
!6531 = !DILocation(line: 1631, column: 17, scope: !6530)
!6532 = !DILocation(line: 1632, column: 21, scope: !6530)
!6533 = !DILocation(line: 1633, column: 17, scope: !6530)
!6534 = !DILocation(line: 1635, column: 55, scope: !6441)
!6535 = !DILocation(line: 1635, column: 60, scope: !6441)
!6536 = !DILocation(line: 1635, column: 73, scope: !6441)
!6537 = !DILocation(line: 1635, column: 71, scope: !6441)
!6538 = !DILocation(line: 1635, column: 29, scope: !6441)
!6539 = !DILocation(line: 1635, column: 34, scope: !6441)
!6540 = !DILocation(line: 1635, column: 48, scope: !6441)
!6541 = !DILocation(line: 1635, column: 13, scope: !6441)
!6542 = !DILocation(line: 1635, column: 18, scope: !6441)
!6543 = !DILocation(line: 1635, column: 53, scope: !6441)
!6544 = !DILocation(line: 1636, column: 9, scope: !6441)
!6545 = !DILocation(line: 1637, column: 64, scope: !6357)
!6546 = !DILocation(line: 1637, column: 54, scope: !6357)
!6547 = !DILocation(line: 1637, column: 9, scope: !6357)
!6548 = !DILocation(line: 1637, column: 14, scope: !6357)
!6549 = !DILocation(line: 1637, column: 52, scope: !6357)
!6550 = !DILocation(line: 1638, column: 5, scope: !6357)
!6551 = !DILocation(line: 1640, column: 65, scope: !6045)
!6552 = !DILocation(line: 1640, column: 55, scope: !6045)
!6553 = !DILocation(line: 1640, column: 5, scope: !6045)
!6554 = !DILocation(line: 1640, column: 10, scope: !6045)
!6555 = !DILocation(line: 1640, column: 53, scope: !6045)
!6556 = !DILocation(line: 1642, column: 61, scope: !6045)
!6557 = !DILocation(line: 1642, column: 51, scope: !6045)
!6558 = !DILocation(line: 1642, column: 5, scope: !6045)
!6559 = !DILocation(line: 1642, column: 10, scope: !6045)
!6560 = !DILocation(line: 1642, column: 49, scope: !6045)
!6561 = !DILocation(line: 1643, column: 9, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1643, column: 9)
!6563 = !DILocation(line: 1643, column: 14, scope: !6562)
!6564 = !DILocation(line: 1643, column: 9, scope: !6045)
!6565 = !DILocation(line: 1644, column: 66, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6562, file: !1282, line: 1643, column: 54)
!6567 = !DILocation(line: 1644, column: 56, scope: !6566)
!6568 = !DILocation(line: 1644, column: 9, scope: !6566)
!6569 = !DILocation(line: 1644, column: 14, scope: !6566)
!6570 = !DILocation(line: 1644, column: 54, scope: !6566)
!6571 = !DILocation(line: 1645, column: 38, scope: !6566)
!6572 = !DILocation(line: 1645, column: 28, scope: !6566)
!6573 = !DILocation(line: 1645, column: 9, scope: !6566)
!6574 = !DILocation(line: 1645, column: 14, scope: !6566)
!6575 = !DILocation(line: 1645, column: 26, scope: !6566)
!6576 = !DILocation(line: 1646, column: 14, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6566, file: !1282, line: 1646, column: 13)
!6578 = !DILocation(line: 1646, column: 19, scope: !6577)
!6579 = !DILocation(line: 1646, column: 13, scope: !6566)
!6580 = !DILocalVariable(name: "beta_offset_div2", scope: !6581, file: !1282, line: 1647, type: !977)
!6581 = distinct !DILexicalBlock(scope: !6577, file: !1282, line: 1646, column: 32)
!6582 = !DILocation(line: 1647, column: 17, scope: !6581)
!6583 = !DILocation(line: 1647, column: 50, scope: !6581)
!6584 = !DILocation(line: 1647, column: 36, scope: !6581)
!6585 = !DILocalVariable(name: "tc_offset_div2", scope: !6581, file: !1282, line: 1648, type: !977)
!6586 = !DILocation(line: 1648, column: 17, scope: !6581)
!6587 = !DILocation(line: 1648, column: 48, scope: !6581)
!6588 = !DILocation(line: 1648, column: 34, scope: !6581)
!6589 = !DILocation(line: 1649, column: 17, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6581, file: !1282, line: 1649, column: 17)
!6591 = !DILocation(line: 1649, column: 34, scope: !6590)
!6592 = !DILocation(line: 1649, column: 39, scope: !6590)
!6593 = !DILocation(line: 1649, column: 42, scope: !6594)
!6594 = !DILexicalBlockFile(scope: !6590, file: !1282, discriminator: 1)
!6595 = !DILocation(line: 1649, column: 59, scope: !6594)
!6596 = !DILocation(line: 1649, column: 17, scope: !6594)
!6597 = !DILocation(line: 1650, column: 24, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6590, file: !1282, line: 1649, column: 64)
!6599 = !DILocation(line: 1651, column: 24, scope: !6598)
!6600 = !DILocation(line: 1650, column: 17, scope: !6598)
!6601 = !DILocation(line: 1652, column: 21, scope: !6598)
!6602 = !DILocation(line: 1653, column: 17, scope: !6598)
!6603 = !DILocation(line: 1655, column: 17, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6581, file: !1282, line: 1655, column: 17)
!6605 = !DILocation(line: 1655, column: 32, scope: !6604)
!6606 = !DILocation(line: 1655, column: 37, scope: !6604)
!6607 = !DILocation(line: 1655, column: 40, scope: !6608)
!6608 = !DILexicalBlockFile(scope: !6604, file: !1282, discriminator: 1)
!6609 = !DILocation(line: 1655, column: 55, scope: !6608)
!6610 = !DILocation(line: 1655, column: 17, scope: !6608)
!6611 = !DILocation(line: 1656, column: 24, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6604, file: !1282, line: 1655, column: 60)
!6613 = !DILocation(line: 1657, column: 24, scope: !6612)
!6614 = !DILocation(line: 1656, column: 17, scope: !6612)
!6615 = !DILocation(line: 1658, column: 21, scope: !6612)
!6616 = !DILocation(line: 1659, column: 17, scope: !6612)
!6617 = !DILocation(line: 1661, column: 36, scope: !6581)
!6618 = !DILocation(line: 1661, column: 34, scope: !6581)
!6619 = !DILocation(line: 1661, column: 13, scope: !6581)
!6620 = !DILocation(line: 1661, column: 18, scope: !6581)
!6621 = !DILocation(line: 1661, column: 30, scope: !6581)
!6622 = !DILocation(line: 1662, column: 34, scope: !6581)
!6623 = !DILocation(line: 1662, column: 32, scope: !6581)
!6624 = !DILocation(line: 1662, column: 13, scope: !6581)
!6625 = !DILocation(line: 1662, column: 18, scope: !6581)
!6626 = !DILocation(line: 1662, column: 28, scope: !6581)
!6627 = !DILocation(line: 1663, column: 9, scope: !6581)
!6628 = !DILocation(line: 1664, column: 5, scope: !6566)
!6629 = !DILocation(line: 1666, column: 53, scope: !6045)
!6630 = !DILocation(line: 1666, column: 43, scope: !6045)
!6631 = !DILocation(line: 1666, column: 5, scope: !6045)
!6632 = !DILocation(line: 1666, column: 10, scope: !6045)
!6633 = !DILocation(line: 1666, column: 41, scope: !6045)
!6634 = !DILocation(line: 1667, column: 9, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1667, column: 9)
!6636 = !DILocation(line: 1667, column: 14, scope: !6635)
!6637 = !DILocation(line: 1667, column: 9, scope: !6045)
!6638 = !DILocation(line: 1668, column: 40, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6635, file: !1282, line: 1667, column: 46)
!6640 = !DILocation(line: 1668, column: 45, scope: !6639)
!6641 = !DILocation(line: 1668, column: 9, scope: !6639)
!6642 = !DILocation(line: 1669, column: 33, scope: !6639)
!6643 = !DILocation(line: 1669, column: 37, scope: !6639)
!6644 = !DILocation(line: 1669, column: 45, scope: !6639)
!6645 = !DILocation(line: 1669, column: 50, scope: !6639)
!6646 = !DILocation(line: 1669, column: 64, scope: !6639)
!6647 = !DILocation(line: 1669, column: 15, scope: !6639)
!6648 = !DILocation(line: 1669, column: 13, scope: !6639)
!6649 = !DILocation(line: 1670, column: 13, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6639, file: !1282, line: 1670, column: 13)
!6651 = !DILocation(line: 1670, column: 17, scope: !6650)
!6652 = !DILocation(line: 1670, column: 13, scope: !6639)
!6653 = !DILocation(line: 1671, column: 13, scope: !6650)
!6654 = !DILocation(line: 1672, column: 5, scope: !6639)
!6655 = !DILocation(line: 1673, column: 54, scope: !6045)
!6656 = !DILocation(line: 1673, column: 44, scope: !6045)
!6657 = !DILocation(line: 1673, column: 5, scope: !6045)
!6658 = !DILocation(line: 1673, column: 10, scope: !6045)
!6659 = !DILocation(line: 1673, column: 42, scope: !6045)
!6660 = !DILocation(line: 1674, column: 59, scope: !6045)
!6661 = !DILocation(line: 1674, column: 40, scope: !6045)
!6662 = !DILocation(line: 1674, column: 38, scope: !6045)
!6663 = !DILocation(line: 1675, column: 9, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1675, column: 9)
!6665 = !DILocation(line: 1675, column: 44, scope: !6664)
!6666 = !DILocation(line: 1675, column: 49, scope: !6664)
!6667 = !DILocation(line: 1675, column: 42, scope: !6664)
!6668 = !DILocation(line: 1675, column: 9, scope: !6045)
!6669 = !DILocation(line: 1676, column: 16, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6664, file: !1282, line: 1675, column: 64)
!6671 = !DILocation(line: 1677, column: 16, scope: !6670)
!6672 = !DILocation(line: 1676, column: 9, scope: !6670)
!6673 = !DILocation(line: 1678, column: 13, scope: !6670)
!6674 = !DILocation(line: 1679, column: 9, scope: !6670)
!6675 = !DILocation(line: 1681, column: 38, scope: !6045)
!6676 = !DILocation(line: 1681, column: 71, scope: !6045)
!6677 = !DILocation(line: 1681, column: 5, scope: !6045)
!6678 = !DILocation(line: 1681, column: 10, scope: !6045)
!6679 = !DILocation(line: 1681, column: 36, scope: !6045)
!6680 = !DILocation(line: 1683, column: 58, scope: !6045)
!6681 = !DILocation(line: 1683, column: 48, scope: !6045)
!6682 = !DILocation(line: 1683, column: 5, scope: !6045)
!6683 = !DILocation(line: 1683, column: 10, scope: !6045)
!6684 = !DILocation(line: 1683, column: 46, scope: !6045)
!6685 = !DILocation(line: 1685, column: 19, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1685, column: 9)
!6687 = !DILocation(line: 1685, column: 9, scope: !6686)
!6688 = !DILocation(line: 1685, column: 9, scope: !6045)
!6689 = !DILocation(line: 1686, column: 52, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6686, file: !1282, line: 1685, column: 24)
!6691 = !DILocation(line: 1686, column: 42, scope: !6690)
!6692 = !DILocation(line: 1686, column: 9, scope: !6690)
!6693 = !DILocation(line: 1686, column: 14, scope: !6690)
!6694 = !DILocation(line: 1686, column: 40, scope: !6690)
!6695 = !DILocation(line: 1687, column: 19, scope: !6690)
!6696 = !DILocation(line: 1687, column: 9, scope: !6690)
!6697 = !DILocation(line: 1688, column: 13, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6690, file: !1282, line: 1688, column: 13)
!6699 = !DILocation(line: 1688, column: 18, scope: !6698)
!6700 = !DILocation(line: 1688, column: 22, scope: !6698)
!6701 = !DILocation(line: 1688, column: 34, scope: !6698)
!6702 = !DILocation(line: 1688, column: 46, scope: !6698)
!6703 = !DILocation(line: 1688, column: 51, scope: !6698)
!6704 = !DILocation(line: 1688, column: 54, scope: !6705)
!6705 = !DILexicalBlockFile(scope: !6698, file: !1282, discriminator: 1)
!6706 = !DILocation(line: 1688, column: 59, scope: !6705)
!6707 = !DILocation(line: 1688, column: 13, scope: !6705)
!6708 = !DILocation(line: 1689, column: 45, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6710, file: !1282, line: 1689, column: 17)
!6710 = distinct !DILexicalBlock(scope: !6698, file: !1282, line: 1688, column: 86)
!6711 = !DILocation(line: 1689, column: 49, scope: !6709)
!6712 = !DILocation(line: 1689, column: 56, scope: !6709)
!6713 = !DILocation(line: 1689, column: 61, scope: !6709)
!6714 = !DILocation(line: 1689, column: 24, scope: !6709)
!6715 = !DILocation(line: 1689, column: 22, scope: !6709)
!6716 = !DILocation(line: 1689, column: 67, scope: !6709)
!6717 = !DILocation(line: 1689, column: 17, scope: !6710)
!6718 = !DILocation(line: 1690, column: 17, scope: !6709)
!6719 = !DILocation(line: 1691, column: 9, scope: !6710)
!6720 = !DILocation(line: 1692, column: 5, scope: !6690)
!6721 = !DILocation(line: 1694, column: 21, scope: !6045)
!6722 = !DILocation(line: 1694, column: 28, scope: !6045)
!6723 = !DILocation(line: 1694, column: 32, scope: !6045)
!6724 = !DILocation(line: 1694, column: 37, scope: !6045)
!6725 = !DILocation(line: 1694, column: 11, scope: !6045)
!6726 = !DILocation(line: 1694, column: 9, scope: !6045)
!6727 = !DILocation(line: 1695, column: 9, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1695, column: 9)
!6729 = !DILocation(line: 1695, column: 13, scope: !6728)
!6730 = !DILocation(line: 1695, column: 9, scope: !6045)
!6731 = !DILocation(line: 1696, column: 9, scope: !6728)
!6732 = !DILocation(line: 1698, column: 23, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6045, file: !1282, line: 1698, column: 9)
!6734 = !DILocation(line: 1698, column: 9, scope: !6733)
!6735 = !DILocation(line: 1698, column: 27, scope: !6733)
!6736 = !DILocation(line: 1698, column: 9, scope: !6045)
!6737 = !DILocation(line: 1699, column: 16, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6733, file: !1282, line: 1698, column: 32)
!6739 = !DILocation(line: 1700, column: 60, scope: !6738)
!6740 = !DILocation(line: 1700, column: 46, scope: !6738)
!6741 = !DILocation(line: 1700, column: 45, scope: !6738)
!6742 = !DILocation(line: 1699, column: 9, scope: !6738)
!6743 = !DILocation(line: 1701, column: 9, scope: !6738)
!6744 = !DILocation(line: 1704, column: 16, scope: !6045)
!6745 = !DILocation(line: 1704, column: 20, scope: !6045)
!6746 = !DILocation(line: 1704, column: 5, scope: !6045)
!6747 = !DILocation(line: 1705, column: 28, scope: !6045)
!6748 = !DILocation(line: 1705, column: 18, scope: !6045)
!6749 = !DILocation(line: 1705, column: 5, scope: !6045)
!6750 = !DILocation(line: 1705, column: 9, scope: !6045)
!6751 = !DILocation(line: 1705, column: 26, scope: !6045)
!6752 = !DILocation(line: 1707, column: 5, scope: !6045)
!6753 = !DILocation(line: 1710, column: 5, scope: !6045)
!6754 = !DILocation(line: 1711, column: 12, scope: !6045)
!6755 = !DILocation(line: 1711, column: 5, scope: !6045)
!6756 = !DILocation(line: 1712, column: 1, scope: !6045)
!6757 = distinct !DISubprogram(name: "hevc_pps_free", scope: !1282, file: !1282, line: 1278, type: !6758, isLocal: true, isDefinition: true, scopeLine: 1279, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!6758 = !DISubroutineType(types: !6759)
!6759 = !{null, !1198, !1197}
!6760 = !DILocalVariable(name: "opaque", arg: 1, scope: !6757, file: !1282, line: 1278, type: !1198)
!6761 = !DILocation(line: 1278, column: 33, scope: !6757)
!6762 = !DILocalVariable(name: "data", arg: 2, scope: !6757, file: !1282, line: 1278, type: !1197)
!6763 = !DILocation(line: 1278, column: 50, scope: !6757)
!6764 = !DILocalVariable(name: "pps", scope: !6757, file: !1282, line: 1280, type: !1209)
!6765 = !DILocation(line: 1280, column: 14, scope: !6757)
!6766 = !DILocation(line: 1280, column: 30, scope: !6757)
!6767 = !DILocation(line: 1280, column: 20, scope: !6757)
!6768 = !DILocation(line: 1282, column: 15, scope: !6757)
!6769 = !DILocation(line: 1282, column: 20, scope: !6757)
!6770 = !DILocation(line: 1282, column: 14, scope: !6757)
!6771 = !DILocation(line: 1282, column: 5, scope: !6757)
!6772 = !DILocation(line: 1283, column: 15, scope: !6757)
!6773 = !DILocation(line: 1283, column: 20, scope: !6757)
!6774 = !DILocation(line: 1283, column: 14, scope: !6757)
!6775 = !DILocation(line: 1283, column: 5, scope: !6757)
!6776 = !DILocation(line: 1284, column: 15, scope: !6757)
!6777 = !DILocation(line: 1284, column: 20, scope: !6757)
!6778 = !DILocation(line: 1284, column: 14, scope: !6757)
!6779 = !DILocation(line: 1284, column: 5, scope: !6757)
!6780 = !DILocation(line: 1285, column: 15, scope: !6757)
!6781 = !DILocation(line: 1285, column: 20, scope: !6757)
!6782 = !DILocation(line: 1285, column: 14, scope: !6757)
!6783 = !DILocation(line: 1285, column: 5, scope: !6757)
!6784 = !DILocation(line: 1286, column: 15, scope: !6757)
!6785 = !DILocation(line: 1286, column: 20, scope: !6757)
!6786 = !DILocation(line: 1286, column: 14, scope: !6757)
!6787 = !DILocation(line: 1286, column: 5, scope: !6757)
!6788 = !DILocation(line: 1287, column: 15, scope: !6757)
!6789 = !DILocation(line: 1287, column: 20, scope: !6757)
!6790 = !DILocation(line: 1287, column: 14, scope: !6757)
!6791 = !DILocation(line: 1287, column: 5, scope: !6757)
!6792 = !DILocation(line: 1288, column: 15, scope: !6757)
!6793 = !DILocation(line: 1288, column: 20, scope: !6757)
!6794 = !DILocation(line: 1288, column: 14, scope: !6757)
!6795 = !DILocation(line: 1288, column: 5, scope: !6757)
!6796 = !DILocation(line: 1289, column: 15, scope: !6757)
!6797 = !DILocation(line: 1289, column: 20, scope: !6757)
!6798 = !DILocation(line: 1289, column: 14, scope: !6757)
!6799 = !DILocation(line: 1289, column: 5, scope: !6757)
!6800 = !DILocation(line: 1290, column: 15, scope: !6757)
!6801 = !DILocation(line: 1290, column: 20, scope: !6757)
!6802 = !DILocation(line: 1290, column: 14, scope: !6757)
!6803 = !DILocation(line: 1290, column: 5, scope: !6757)
!6804 = !DILocation(line: 1291, column: 15, scope: !6757)
!6805 = !DILocation(line: 1291, column: 20, scope: !6757)
!6806 = !DILocation(line: 1291, column: 14, scope: !6757)
!6807 = !DILocation(line: 1291, column: 5, scope: !6757)
!6808 = !DILocation(line: 1293, column: 14, scope: !6757)
!6809 = !DILocation(line: 1293, column: 5, scope: !6757)
!6810 = !DILocation(line: 1294, column: 1, scope: !6757)
!6811 = distinct !DISubprogram(name: "get_se_golomb", scope: !2429, file: !2429, line: 237, type: !3142, isLocal: true, isDefinition: true, scopeLine: 238, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!6812 = !DILocation(line: 66, column: 98, scope: !2906, inlinedAt: !6813)
!6813 = distinct !DILocation(line: 276, column: 20, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !2429, line: 273, column: 12)
!6815 = distinct !DILexicalBlock(scope: !6811, file: !2429, line: 267, column: 9)
!6816 = !DILocation(line: 66, column: 98, scope: !2906, inlinedAt: !6817)
!6817 = distinct !DILocation(line: 264, column: 16, scope: !6811)
!6818 = !DILocalVariable(name: "gb", arg: 1, scope: !6811, file: !2429, line: 237, type: !1301)
!6819 = !DILocation(line: 237, column: 48, scope: !6811)
!6820 = !DILocalVariable(name: "buf", scope: !6811, file: !2429, line: 239, type: !978)
!6821 = !DILocation(line: 239, column: 18, scope: !6811)
!6822 = !DILocalVariable(name: "re_index", scope: !6811, file: !2429, line: 263, type: !978)
!6823 = !DILocation(line: 263, column: 18, scope: !6811)
!6824 = !DILocation(line: 263, column: 30, scope: !6811)
!6825 = !DILocation(line: 263, column: 35, scope: !6811)
!6826 = !DILocalVariable(name: "re_cache", scope: !6811, file: !2429, line: 263, type: !978)
!6827 = !DILocation(line: 263, column: 79, scope: !6811)
!6828 = !DILocalVariable(name: "re_size_plus8", scope: !6811, file: !2429, line: 263, type: !978)
!6829 = !DILocation(line: 263, column: 102, scope: !6811)
!6830 = !DILocation(line: 263, column: 119, scope: !6811)
!6831 = !DILocation(line: 263, column: 124, scope: !6811)
!6832 = !DILocation(line: 264, column: 60, scope: !6811)
!6833 = !DILocation(line: 264, column: 65, scope: !6811)
!6834 = !DILocation(line: 264, column: 75, scope: !6811)
!6835 = !DILocation(line: 264, column: 84, scope: !6811)
!6836 = !DILocation(line: 264, column: 72, scope: !6811)
!6837 = !DILocation(line: 264, column: 93, scope: !6811)
!6838 = !DILocation(line: 264, column: 16, scope: !6811)
!6839 = !DILocation(line: 68, column: 16, scope: !2906, inlinedAt: !6817)
!6840 = !DILocation(line: 68, column: 19, scope: !2906, inlinedAt: !6817)
!6841 = !DILocation(line: 68, column: 24, scope: !2906, inlinedAt: !6817)
!6842 = !DILocation(line: 68, column: 38, scope: !2906, inlinedAt: !6817)
!6843 = !DILocation(line: 68, column: 41, scope: !2906, inlinedAt: !6817)
!6844 = !DILocation(line: 68, column: 46, scope: !2906, inlinedAt: !6817)
!6845 = !DILocation(line: 68, column: 34, scope: !2906, inlinedAt: !6817)
!6846 = !DILocation(line: 68, column: 57, scope: !2906, inlinedAt: !6817)
!6847 = !DILocation(line: 68, column: 69, scope: !2906, inlinedAt: !6817)
!6848 = !DILocation(line: 68, column: 72, scope: !2906, inlinedAt: !6817)
!6849 = !DILocation(line: 68, column: 79, scope: !2906, inlinedAt: !6817)
!6850 = !DILocation(line: 68, column: 84, scope: !2906, inlinedAt: !6817)
!6851 = !DILocation(line: 68, column: 99, scope: !2906, inlinedAt: !6817)
!6852 = !DILocation(line: 68, column: 102, scope: !2906, inlinedAt: !6817)
!6853 = !DILocation(line: 68, column: 109, scope: !2906, inlinedAt: !6817)
!6854 = !DILocation(line: 68, column: 114, scope: !2906, inlinedAt: !6817)
!6855 = !DILocation(line: 68, column: 94, scope: !2906, inlinedAt: !6817)
!6856 = !DILocation(line: 68, column: 63, scope: !2906, inlinedAt: !6817)
!6857 = !DILocation(line: 264, column: 101, scope: !6811)
!6858 = !DILocation(line: 264, column: 110, scope: !6811)
!6859 = !DILocation(line: 264, column: 97, scope: !6811)
!6860 = !DILocation(line: 264, column: 14, scope: !6811)
!6861 = !DILocation(line: 265, column: 23, scope: !6811)
!6862 = !DILocation(line: 265, column: 9, scope: !6811)
!6863 = !DILocation(line: 267, column: 9, scope: !6815)
!6864 = !DILocation(line: 267, column: 13, scope: !6815)
!6865 = !DILocation(line: 267, column: 9, scope: !6811)
!6866 = !DILocation(line: 268, column: 13, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6815, file: !2429, line: 267, column: 27)
!6868 = !DILocation(line: 269, column: 22, scope: !6867)
!6869 = !DILocation(line: 269, column: 40, scope: !6867)
!6870 = !DILocation(line: 269, column: 70, scope: !6867)
!6871 = !DILocation(line: 269, column: 52, scope: !6867)
!6872 = !DILocation(line: 269, column: 51, scope: !6867)
!6873 = !DILocation(line: 269, column: 49, scope: !6867)
!6874 = !DILocation(line: 269, column: 37, scope: !6867)
!6875 = !DILocation(line: 269, column: 21, scope: !6867)
!6876 = !DILocation(line: 269, column: 80, scope: !6877)
!6877 = !DILexicalBlockFile(scope: !6867, file: !2429, discriminator: 1)
!6878 = !DILocation(line: 269, column: 110, scope: !6877)
!6879 = !DILocation(line: 269, column: 92, scope: !6877)
!6880 = !DILocation(line: 269, column: 91, scope: !6877)
!6881 = !DILocation(line: 269, column: 89, scope: !6877)
!6882 = !DILocation(line: 269, column: 21, scope: !6877)
!6883 = !DILocation(line: 269, column: 120, scope: !6884)
!6884 = !DILexicalBlockFile(scope: !6867, file: !2429, discriminator: 2)
!6885 = !DILocation(line: 269, column: 21, scope: !6884)
!6886 = !DILocation(line: 269, column: 21, scope: !6887)
!6887 = !DILexicalBlockFile(scope: !6867, file: !2429, discriminator: 3)
!6888 = !DILocation(line: 269, column: 18, scope: !6887)
!6889 = !DILocation(line: 270, column: 23, scope: !6867)
!6890 = !DILocation(line: 270, column: 10, scope: !6867)
!6891 = !DILocation(line: 270, column: 15, scope: !6867)
!6892 = !DILocation(line: 270, column: 21, scope: !6867)
!6893 = !DILocation(line: 272, column: 38, scope: !6867)
!6894 = !DILocation(line: 272, column: 16, scope: !6867)
!6895 = !DILocation(line: 272, column: 9, scope: !6867)
!6896 = !DILocalVariable(name: "log", scope: !6814, file: !2429, line: 274, type: !977)
!6897 = !DILocation(line: 274, column: 13, scope: !6814)
!6898 = !DILocation(line: 274, column: 40, scope: !6814)
!6899 = !DILocation(line: 274, column: 44, scope: !6814)
!6900 = !DILocation(line: 274, column: 25, scope: !6814)
!6901 = !DILocation(line: 274, column: 23, scope: !6814)
!6902 = !DILocalVariable(name: "sign", scope: !6814, file: !2429, line: 274, type: !977)
!6903 = !DILocation(line: 274, column: 50, scope: !6814)
!6904 = !DILocation(line: 275, column: 22, scope: !6814)
!6905 = !DILocation(line: 275, column: 40, scope: !6814)
!6906 = !DILocation(line: 275, column: 57, scope: !6814)
!6907 = !DILocation(line: 275, column: 55, scope: !6814)
!6908 = !DILocation(line: 275, column: 49, scope: !6814)
!6909 = !DILocation(line: 275, column: 37, scope: !6814)
!6910 = !DILocation(line: 275, column: 21, scope: !6814)
!6911 = !DILocation(line: 275, column: 66, scope: !6912)
!6912 = !DILexicalBlockFile(scope: !6814, file: !2429, discriminator: 1)
!6913 = !DILocation(line: 275, column: 83, scope: !6912)
!6914 = !DILocation(line: 275, column: 81, scope: !6912)
!6915 = !DILocation(line: 275, column: 75, scope: !6912)
!6916 = !DILocation(line: 275, column: 21, scope: !6912)
!6917 = !DILocation(line: 275, column: 92, scope: !6918)
!6918 = !DILexicalBlockFile(scope: !6814, file: !2429, discriminator: 2)
!6919 = !DILocation(line: 275, column: 21, scope: !6918)
!6920 = !DILocation(line: 275, column: 21, scope: !6921)
!6921 = !DILexicalBlockFile(scope: !6814, file: !2429, discriminator: 3)
!6922 = !DILocation(line: 275, column: 18, scope: !6921)
!6923 = !DILocation(line: 276, column: 64, scope: !6814)
!6924 = !DILocation(line: 276, column: 69, scope: !6814)
!6925 = !DILocation(line: 276, column: 79, scope: !6814)
!6926 = !DILocation(line: 276, column: 88, scope: !6814)
!6927 = !DILocation(line: 276, column: 76, scope: !6814)
!6928 = !DILocation(line: 276, column: 97, scope: !6814)
!6929 = !DILocation(line: 276, column: 20, scope: !6814)
!6930 = !DILocation(line: 68, column: 16, scope: !2906, inlinedAt: !6813)
!6931 = !DILocation(line: 68, column: 19, scope: !2906, inlinedAt: !6813)
!6932 = !DILocation(line: 68, column: 24, scope: !2906, inlinedAt: !6813)
!6933 = !DILocation(line: 68, column: 38, scope: !2906, inlinedAt: !6813)
!6934 = !DILocation(line: 68, column: 41, scope: !2906, inlinedAt: !6813)
!6935 = !DILocation(line: 68, column: 46, scope: !2906, inlinedAt: !6813)
!6936 = !DILocation(line: 68, column: 34, scope: !2906, inlinedAt: !6813)
!6937 = !DILocation(line: 68, column: 57, scope: !2906, inlinedAt: !6813)
!6938 = !DILocation(line: 68, column: 69, scope: !2906, inlinedAt: !6813)
!6939 = !DILocation(line: 68, column: 72, scope: !2906, inlinedAt: !6813)
!6940 = !DILocation(line: 68, column: 79, scope: !2906, inlinedAt: !6813)
!6941 = !DILocation(line: 68, column: 84, scope: !2906, inlinedAt: !6813)
!6942 = !DILocation(line: 68, column: 99, scope: !2906, inlinedAt: !6813)
!6943 = !DILocation(line: 68, column: 102, scope: !2906, inlinedAt: !6813)
!6944 = !DILocation(line: 68, column: 109, scope: !2906, inlinedAt: !6813)
!6945 = !DILocation(line: 68, column: 114, scope: !2906, inlinedAt: !6813)
!6946 = !DILocation(line: 68, column: 94, scope: !2906, inlinedAt: !6813)
!6947 = !DILocation(line: 68, column: 63, scope: !2906, inlinedAt: !6813)
!6948 = !DILocation(line: 276, column: 105, scope: !6814)
!6949 = !DILocation(line: 276, column: 114, scope: !6814)
!6950 = !DILocation(line: 276, column: 101, scope: !6814)
!6951 = !DILocation(line: 276, column: 18, scope: !6814)
!6952 = !DILocation(line: 277, column: 27, scope: !6814)
!6953 = !DILocation(line: 277, column: 13, scope: !6814)
!6954 = !DILocation(line: 279, column: 17, scope: !6814)
!6955 = !DILocation(line: 279, column: 13, scope: !6814)
!6956 = !DILocation(line: 281, column: 22, scope: !6814)
!6957 = !DILocation(line: 281, column: 40, scope: !6814)
!6958 = !DILocation(line: 281, column: 57, scope: !6814)
!6959 = !DILocation(line: 281, column: 55, scope: !6814)
!6960 = !DILocation(line: 281, column: 49, scope: !6814)
!6961 = !DILocation(line: 281, column: 37, scope: !6814)
!6962 = !DILocation(line: 281, column: 21, scope: !6814)
!6963 = !DILocation(line: 281, column: 66, scope: !6912)
!6964 = !DILocation(line: 281, column: 83, scope: !6912)
!6965 = !DILocation(line: 281, column: 81, scope: !6912)
!6966 = !DILocation(line: 281, column: 75, scope: !6912)
!6967 = !DILocation(line: 281, column: 21, scope: !6912)
!6968 = !DILocation(line: 281, column: 92, scope: !6918)
!6969 = !DILocation(line: 281, column: 21, scope: !6918)
!6970 = !DILocation(line: 281, column: 21, scope: !6921)
!6971 = !DILocation(line: 281, column: 18, scope: !6921)
!6972 = !DILocation(line: 282, column: 23, scope: !6814)
!6973 = !DILocation(line: 282, column: 10, scope: !6814)
!6974 = !DILocation(line: 282, column: 15, scope: !6814)
!6975 = !DILocation(line: 282, column: 21, scope: !6814)
!6976 = !DILocation(line: 284, column: 18, scope: !6814)
!6977 = !DILocation(line: 284, column: 22, scope: !6814)
!6978 = !DILocation(line: 284, column: 16, scope: !6814)
!6979 = !DILocation(line: 284, column: 14, scope: !6814)
!6980 = !DILocation(line: 285, column: 17, scope: !6814)
!6981 = !DILocation(line: 285, column: 21, scope: !6814)
!6982 = !DILocation(line: 285, column: 29, scope: !6814)
!6983 = !DILocation(line: 285, column: 27, scope: !6814)
!6984 = !DILocation(line: 285, column: 37, scope: !6814)
!6985 = !DILocation(line: 285, column: 35, scope: !6814)
!6986 = !DILocation(line: 285, column: 13, scope: !6814)
!6987 = !DILocation(line: 287, column: 16, scope: !6814)
!6988 = !DILocation(line: 287, column: 9, scope: !6814)
!6989 = !DILocation(line: 290, column: 1, scope: !6811)
!6990 = distinct !DISubprogram(name: "pps_range_extensions", scope: !1282, file: !1282, line: 1296, type: !6991, isLocal: true, isDefinition: true, scopeLine: 1297, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!6991 = !DISubroutineType(types: !6992)
!6992 = !{!977, !1301, !1312, !1209, !1036}
!6993 = !DILocalVariable(name: "gb", arg: 1, scope: !6990, file: !1282, line: 1296, type: !1301)
!6994 = !DILocation(line: 1296, column: 48, scope: !6990)
!6995 = !DILocalVariable(name: "avctx", arg: 2, scope: !6990, file: !1282, line: 1296, type: !1312)
!6996 = !DILocation(line: 1296, column: 68, scope: !6990)
!6997 = !DILocalVariable(name: "pps", arg: 3, scope: !6990, file: !1282, line: 1297, type: !1209)
!6998 = !DILocation(line: 1297, column: 42, scope: !6990)
!6999 = !DILocalVariable(name: "sps", arg: 4, scope: !6990, file: !1282, line: 1297, type: !1036)
!7000 = !DILocation(line: 1297, column: 56, scope: !6990)
!7001 = !DILocalVariable(name: "i", scope: !6990, file: !1282, line: 1298, type: !977)
!7002 = !DILocation(line: 1298, column: 9, scope: !6990)
!7003 = !DILocation(line: 1300, column: 9, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6990, file: !1282, line: 1300, column: 9)
!7005 = !DILocation(line: 1300, column: 14, scope: !7004)
!7006 = !DILocation(line: 1300, column: 9, scope: !6990)
!7007 = !DILocation(line: 1301, column: 70, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7004, file: !1282, line: 1300, column: 43)
!7009 = !DILocation(line: 1301, column: 51, scope: !7008)
!7010 = !DILocation(line: 1301, column: 74, scope: !7008)
!7011 = !DILocation(line: 1301, column: 9, scope: !7008)
!7012 = !DILocation(line: 1301, column: 14, scope: !7008)
!7013 = !DILocation(line: 1301, column: 49, scope: !7008)
!7014 = !DILocation(line: 1302, column: 5, scope: !7008)
!7015 = !DILocation(line: 1303, column: 62, scope: !6990)
!7016 = !DILocation(line: 1303, column: 52, scope: !6990)
!7017 = !DILocation(line: 1303, column: 5, scope: !6990)
!7018 = !DILocation(line: 1303, column: 10, scope: !6990)
!7019 = !DILocation(line: 1303, column: 50, scope: !6990)
!7020 = !DILocation(line: 1304, column: 57, scope: !6990)
!7021 = !DILocation(line: 1304, column: 47, scope: !6990)
!7022 = !DILocation(line: 1304, column: 5, scope: !6990)
!7023 = !DILocation(line: 1304, column: 10, scope: !6990)
!7024 = !DILocation(line: 1304, column: 45, scope: !6990)
!7025 = !DILocation(line: 1305, column: 9, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !6990, file: !1282, line: 1305, column: 9)
!7027 = !DILocation(line: 1305, column: 14, scope: !7026)
!7028 = !DILocation(line: 1305, column: 9, scope: !6990)
!7029 = !DILocation(line: 1306, column: 66, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7026, file: !1282, line: 1305, column: 50)
!7031 = !DILocation(line: 1306, column: 47, scope: !7030)
!7032 = !DILocation(line: 1306, column: 9, scope: !7030)
!7033 = !DILocation(line: 1306, column: 14, scope: !7030)
!7034 = !DILocation(line: 1306, column: 45, scope: !7030)
!7035 = !DILocation(line: 1307, column: 68, scope: !7030)
!7036 = !DILocation(line: 1307, column: 49, scope: !7030)
!7037 = !DILocation(line: 1307, column: 9, scope: !7030)
!7038 = !DILocation(line: 1307, column: 14, scope: !7030)
!7039 = !DILocation(line: 1307, column: 47, scope: !7030)
!7040 = !DILocation(line: 1308, column: 13, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7030, file: !1282, line: 1308, column: 13)
!7042 = !DILocation(line: 1308, column: 18, scope: !7041)
!7043 = !DILocation(line: 1308, column: 51, scope: !7041)
!7044 = !DILocation(line: 1308, column: 13, scope: !7030)
!7045 = !DILocation(line: 1309, column: 20, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7041, file: !1282, line: 1308, column: 56)
!7047 = !DILocation(line: 1309, column: 13, scope: !7046)
!7048 = !DILocation(line: 1311, column: 13, scope: !7046)
!7049 = !DILocation(line: 1313, column: 16, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7030, file: !1282, line: 1313, column: 9)
!7051 = !DILocation(line: 1313, column: 14, scope: !7050)
!7052 = !DILocation(line: 1313, column: 21, scope: !7053)
!7053 = !DILexicalBlockFile(scope: !7054, file: !1282, discriminator: 1)
!7054 = distinct !DILexicalBlock(scope: !7050, file: !1282, line: 1313, column: 9)
!7055 = !DILocation(line: 1313, column: 26, scope: !7053)
!7056 = !DILocation(line: 1313, column: 31, scope: !7053)
!7057 = !DILocation(line: 1313, column: 23, scope: !7053)
!7058 = !DILocation(line: 1313, column: 9, scope: !7053)
!7059 = !DILocation(line: 1314, column: 60, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7054, file: !1282, line: 1313, column: 70)
!7061 = !DILocation(line: 1314, column: 41, scope: !7060)
!7062 = !DILocation(line: 1314, column: 36, scope: !7060)
!7063 = !DILocation(line: 1314, column: 13, scope: !7060)
!7064 = !DILocation(line: 1314, column: 18, scope: !7060)
!7065 = !DILocation(line: 1314, column: 39, scope: !7060)
!7066 = !DILocation(line: 1315, column: 40, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7060, file: !1282, line: 1315, column: 17)
!7068 = !DILocation(line: 1315, column: 17, scope: !7067)
!7069 = !DILocation(line: 1315, column: 22, scope: !7067)
!7070 = !DILocation(line: 1315, column: 17, scope: !7060)
!7071 = !DILocation(line: 1316, column: 24, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7067, file: !1282, line: 1315, column: 44)
!7073 = !DILocation(line: 1316, column: 17, scope: !7072)
!7074 = !DILocation(line: 1318, column: 13, scope: !7072)
!7075 = !DILocation(line: 1319, column: 60, scope: !7060)
!7076 = !DILocation(line: 1319, column: 41, scope: !7060)
!7077 = !DILocation(line: 1319, column: 36, scope: !7060)
!7078 = !DILocation(line: 1319, column: 13, scope: !7060)
!7079 = !DILocation(line: 1319, column: 18, scope: !7060)
!7080 = !DILocation(line: 1319, column: 39, scope: !7060)
!7081 = !DILocation(line: 1320, column: 40, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7060, file: !1282, line: 1320, column: 17)
!7083 = !DILocation(line: 1320, column: 17, scope: !7082)
!7084 = !DILocation(line: 1320, column: 22, scope: !7082)
!7085 = !DILocation(line: 1320, column: 17, scope: !7060)
!7086 = !DILocation(line: 1321, column: 24, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7082, file: !1282, line: 1320, column: 44)
!7088 = !DILocation(line: 1321, column: 17, scope: !7087)
!7089 = !DILocation(line: 1323, column: 13, scope: !7087)
!7090 = !DILocation(line: 1324, column: 9, scope: !7060)
!7091 = !DILocation(line: 1313, column: 66, scope: !7092)
!7092 = !DILexicalBlockFile(scope: !7054, file: !1282, discriminator: 2)
!7093 = !DILocation(line: 1313, column: 9, scope: !7092)
!7094 = distinct !{!7094, !7095}
!7095 = !DILocation(line: 1313, column: 9, scope: !7030)
!7096 = !DILocation(line: 1325, column: 5, scope: !7030)
!7097 = !DILocation(line: 1326, column: 58, scope: !6990)
!7098 = !DILocation(line: 1326, column: 39, scope: !6990)
!7099 = !DILocation(line: 1326, column: 5, scope: !6990)
!7100 = !DILocation(line: 1326, column: 10, scope: !6990)
!7101 = !DILocation(line: 1326, column: 37, scope: !6990)
!7102 = !DILocation(line: 1327, column: 60, scope: !6990)
!7103 = !DILocation(line: 1327, column: 41, scope: !6990)
!7104 = !DILocation(line: 1327, column: 5, scope: !6990)
!7105 = !DILocation(line: 1327, column: 10, scope: !6990)
!7106 = !DILocation(line: 1327, column: 39, scope: !6990)
!7107 = !DILocation(line: 1329, column: 10, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !6990, file: !1282, line: 1329, column: 10)
!7109 = !DILocation(line: 1329, column: 15, scope: !7108)
!7110 = !DILocation(line: 1329, column: 46, scope: !7108)
!7111 = !DILocation(line: 1329, column: 51, scope: !7108)
!7112 = !DILocation(line: 1329, column: 61, scope: !7108)
!7113 = !DILocation(line: 1329, column: 67, scope: !7108)
!7114 = !DILocation(line: 1329, column: 45, scope: !7108)
!7115 = !DILocation(line: 1329, column: 76, scope: !7116)
!7116 = !DILexicalBlockFile(scope: !7108, file: !1282, discriminator: 1)
!7117 = !DILocation(line: 1329, column: 81, scope: !7116)
!7118 = !DILocation(line: 1329, column: 91, scope: !7116)
!7119 = !DILocation(line: 1329, column: 45, scope: !7116)
!7120 = !DILocation(line: 1329, column: 45, scope: !7121)
!7121 = !DILexicalBlockFile(scope: !7108, file: !1282, discriminator: 2)
!7122 = !DILocation(line: 1329, column: 45, scope: !7123)
!7123 = !DILexicalBlockFile(scope: !7108, file: !1282, discriminator: 3)
!7124 = !DILocation(line: 1329, column: 42, scope: !7123)
!7125 = !DILocation(line: 1330, column: 9, scope: !7108)
!7126 = !DILocation(line: 1330, column: 12, scope: !7116)
!7127 = !DILocation(line: 1330, column: 17, scope: !7116)
!7128 = !DILocation(line: 1330, column: 50, scope: !7116)
!7129 = !DILocation(line: 1330, column: 55, scope: !7116)
!7130 = !DILocation(line: 1330, column: 72, scope: !7116)
!7131 = !DILocation(line: 1330, column: 78, scope: !7116)
!7132 = !DILocation(line: 1330, column: 49, scope: !7116)
!7133 = !DILocation(line: 1330, column: 87, scope: !7121)
!7134 = !DILocation(line: 1330, column: 92, scope: !7121)
!7135 = !DILocation(line: 1330, column: 109, scope: !7121)
!7136 = !DILocation(line: 1330, column: 49, scope: !7121)
!7137 = !DILocation(line: 1330, column: 49, scope: !7123)
!7138 = !DILocation(line: 1330, column: 49, scope: !7139)
!7139 = !DILexicalBlockFile(scope: !7108, file: !1282, discriminator: 4)
!7140 = !DILocation(line: 1330, column: 46, scope: !7139)
!7141 = !DILocation(line: 1329, column: 10, scope: !7142)
!7142 = !DILexicalBlockFile(scope: !6990, file: !1282, discriminator: 4)
!7143 = !DILocation(line: 1332, column: 9, scope: !7108)
!7144 = !DILocation(line: 1334, column: 5, scope: !6990)
!7145 = !DILocation(line: 1335, column: 1, scope: !6990)
!7146 = distinct !DISubprogram(name: "setup_pps", scope: !1282, file: !1282, line: 1337, type: !7147, isLocal: true, isDefinition: true, scopeLine: 1339, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!7147 = !DISubroutineType(types: !7148)
!7148 = !{!977, !1312, !1301, !1209, !1036}
!7149 = !DILocalVariable(name: "avctx", arg: 1, scope: !7146, file: !1282, line: 1337, type: !1312)
!7150 = !DILocation(line: 1337, column: 45, scope: !7146)
!7151 = !DILocalVariable(name: "gb", arg: 2, scope: !7146, file: !1282, line: 1337, type: !1301)
!7152 = !DILocation(line: 1337, column: 67, scope: !7146)
!7153 = !DILocalVariable(name: "pps", arg: 3, scope: !7146, file: !1282, line: 1338, type: !1209)
!7154 = !DILocation(line: 1338, column: 38, scope: !7146)
!7155 = !DILocalVariable(name: "sps", arg: 4, scope: !7146, file: !1282, line: 1338, type: !1036)
!7156 = !DILocation(line: 1338, column: 52, scope: !7146)
!7157 = !DILocalVariable(name: "log2_diff", scope: !7146, file: !1282, line: 1340, type: !977)
!7158 = !DILocation(line: 1340, column: 9, scope: !7146)
!7159 = !DILocalVariable(name: "pic_area_in_ctbs", scope: !7146, file: !1282, line: 1341, type: !977)
!7160 = !DILocation(line: 1341, column: 9, scope: !7146)
!7161 = !DILocalVariable(name: "i", scope: !7146, file: !1282, line: 1342, type: !977)
!7162 = !DILocation(line: 1342, column: 9, scope: !7146)
!7163 = !DILocalVariable(name: "j", scope: !7146, file: !1282, line: 1342, type: !977)
!7164 = !DILocation(line: 1342, column: 12, scope: !7146)
!7165 = !DILocalVariable(name: "x", scope: !7146, file: !1282, line: 1342, type: !977)
!7166 = !DILocation(line: 1342, column: 15, scope: !7146)
!7167 = !DILocalVariable(name: "y", scope: !7146, file: !1282, line: 1342, type: !977)
!7168 = !DILocation(line: 1342, column: 18, scope: !7146)
!7169 = !DILocalVariable(name: "ctb_addr_rs", scope: !7146, file: !1282, line: 1342, type: !977)
!7170 = !DILocation(line: 1342, column: 21, scope: !7146)
!7171 = !DILocalVariable(name: "tile_id", scope: !7146, file: !1282, line: 1342, type: !977)
!7172 = !DILocation(line: 1342, column: 34, scope: !7146)
!7173 = !DILocation(line: 1345, column: 35, scope: !7146)
!7174 = !DILocation(line: 1345, column: 40, scope: !7146)
!7175 = !DILocation(line: 1345, column: 57, scope: !7146)
!7176 = !DILocation(line: 1345, column: 19, scope: !7146)
!7177 = !DILocation(line: 1345, column: 5, scope: !7146)
!7178 = !DILocation(line: 1345, column: 10, scope: !7146)
!7179 = !DILocation(line: 1345, column: 17, scope: !7146)
!7180 = !DILocation(line: 1346, column: 35, scope: !7146)
!7181 = !DILocation(line: 1346, column: 40, scope: !7146)
!7182 = !DILocation(line: 1346, column: 54, scope: !7146)
!7183 = !DILocation(line: 1346, column: 19, scope: !7146)
!7184 = !DILocation(line: 1346, column: 5, scope: !7146)
!7185 = !DILocation(line: 1346, column: 10, scope: !7146)
!7186 = !DILocation(line: 1346, column: 17, scope: !7146)
!7187 = !DILocation(line: 1347, column: 37, scope: !7146)
!7188 = !DILocation(line: 1347, column: 42, scope: !7146)
!7189 = !DILocation(line: 1347, column: 21, scope: !7146)
!7190 = !DILocation(line: 1347, column: 5, scope: !7146)
!7191 = !DILocation(line: 1347, column: 10, scope: !7146)
!7192 = !DILocation(line: 1347, column: 19, scope: !7146)
!7193 = !DILocation(line: 1348, column: 10, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7146, file: !1282, line: 1348, column: 9)
!7195 = !DILocation(line: 1348, column: 15, scope: !7194)
!7196 = !DILocation(line: 1348, column: 22, scope: !7194)
!7197 = !DILocation(line: 1348, column: 26, scope: !7198)
!7198 = !DILexicalBlockFile(scope: !7194, file: !1282, discriminator: 1)
!7199 = !DILocation(line: 1348, column: 31, scope: !7198)
!7200 = !DILocation(line: 1348, column: 38, scope: !7198)
!7201 = !DILocation(line: 1348, column: 42, scope: !7202)
!7202 = !DILexicalBlockFile(scope: !7194, file: !1282, discriminator: 2)
!7203 = !DILocation(line: 1348, column: 47, scope: !7202)
!7204 = !DILocation(line: 1348, column: 9, scope: !7202)
!7205 = !DILocation(line: 1349, column: 9, scope: !7194)
!7206 = !DILocation(line: 1351, column: 9, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7146, file: !1282, line: 1351, column: 9)
!7208 = !DILocation(line: 1351, column: 14, scope: !7207)
!7209 = !DILocation(line: 1351, column: 9, scope: !7146)
!7210 = !DILocation(line: 1352, column: 14, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !1282, line: 1352, column: 13)
!7212 = distinct !DILexicalBlock(scope: !7207, file: !1282, line: 1351, column: 36)
!7213 = !DILocation(line: 1352, column: 19, scope: !7211)
!7214 = !DILocation(line: 1352, column: 13, scope: !7212)
!7215 = !DILocation(line: 1353, column: 49, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7211, file: !1282, line: 1352, column: 33)
!7217 = !DILocation(line: 1353, column: 54, scope: !7216)
!7218 = !DILocation(line: 1353, column: 33, scope: !7216)
!7219 = !DILocation(line: 1353, column: 13, scope: !7216)
!7220 = !DILocation(line: 1353, column: 18, scope: !7216)
!7221 = !DILocation(line: 1353, column: 31, scope: !7216)
!7222 = !DILocation(line: 1354, column: 47, scope: !7216)
!7223 = !DILocation(line: 1354, column: 52, scope: !7216)
!7224 = !DILocation(line: 1354, column: 31, scope: !7216)
!7225 = !DILocation(line: 1354, column: 13, scope: !7216)
!7226 = !DILocation(line: 1354, column: 18, scope: !7216)
!7227 = !DILocation(line: 1354, column: 29, scope: !7216)
!7228 = !DILocation(line: 1355, column: 9, scope: !7216)
!7229 = !DILocation(line: 1356, column: 14, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7212, file: !1282, line: 1356, column: 13)
!7231 = !DILocation(line: 1356, column: 19, scope: !7230)
!7232 = !DILocation(line: 1356, column: 32, scope: !7230)
!7233 = !DILocation(line: 1356, column: 36, scope: !7234)
!7234 = !DILexicalBlockFile(scope: !7230, file: !1282, discriminator: 1)
!7235 = !DILocation(line: 1356, column: 41, scope: !7234)
!7236 = !DILocation(line: 1356, column: 13, scope: !7234)
!7237 = !DILocation(line: 1357, column: 13, scope: !7230)
!7238 = !DILocation(line: 1359, column: 16, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7212, file: !1282, line: 1359, column: 9)
!7240 = !DILocation(line: 1359, column: 14, scope: !7239)
!7241 = !DILocation(line: 1359, column: 21, scope: !7242)
!7242 = !DILexicalBlockFile(scope: !7243, file: !1282, discriminator: 1)
!7243 = distinct !DILexicalBlock(scope: !7239, file: !1282, line: 1359, column: 9)
!7244 = !DILocation(line: 1359, column: 25, scope: !7242)
!7245 = !DILocation(line: 1359, column: 30, scope: !7242)
!7246 = !DILocation(line: 1359, column: 23, scope: !7242)
!7247 = !DILocation(line: 1359, column: 9, scope: !7242)
!7248 = !DILocation(line: 1360, column: 38, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7243, file: !1282, line: 1359, column: 53)
!7250 = !DILocation(line: 1360, column: 40, scope: !7249)
!7251 = !DILocation(line: 1360, column: 47, scope: !7249)
!7252 = !DILocation(line: 1360, column: 52, scope: !7249)
!7253 = !DILocation(line: 1360, column: 45, scope: !7249)
!7254 = !DILocation(line: 1360, column: 65, scope: !7249)
!7255 = !DILocation(line: 1360, column: 70, scope: !7249)
!7256 = !DILocation(line: 1360, column: 63, scope: !7249)
!7257 = !DILocation(line: 1361, column: 37, scope: !7249)
!7258 = !DILocation(line: 1361, column: 41, scope: !7249)
!7259 = !DILocation(line: 1361, column: 46, scope: !7249)
!7260 = !DILocation(line: 1361, column: 39, scope: !7249)
!7261 = !DILocation(line: 1361, column: 59, scope: !7249)
!7262 = !DILocation(line: 1361, column: 64, scope: !7249)
!7263 = !DILocation(line: 1361, column: 57, scope: !7249)
!7264 = !DILocation(line: 1360, column: 87, scope: !7249)
!7265 = !DILocation(line: 1360, column: 31, scope: !7249)
!7266 = !DILocation(line: 1360, column: 13, scope: !7249)
!7267 = !DILocation(line: 1360, column: 18, scope: !7249)
!7268 = !DILocation(line: 1360, column: 34, scope: !7249)
!7269 = !DILocation(line: 1362, column: 9, scope: !7249)
!7270 = !DILocation(line: 1359, column: 49, scope: !7271)
!7271 = !DILexicalBlockFile(scope: !7243, file: !1282, discriminator: 2)
!7272 = !DILocation(line: 1359, column: 9, scope: !7271)
!7273 = distinct !{!7273, !7274}
!7274 = !DILocation(line: 1359, column: 9, scope: !7212)
!7275 = !DILocation(line: 1364, column: 16, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7212, file: !1282, line: 1364, column: 9)
!7277 = !DILocation(line: 1364, column: 14, scope: !7276)
!7278 = !DILocation(line: 1364, column: 21, scope: !7279)
!7279 = !DILexicalBlockFile(scope: !7280, file: !1282, discriminator: 1)
!7280 = distinct !DILexicalBlock(scope: !7276, file: !1282, line: 1364, column: 9)
!7281 = !DILocation(line: 1364, column: 25, scope: !7279)
!7282 = !DILocation(line: 1364, column: 30, scope: !7279)
!7283 = !DILocation(line: 1364, column: 23, scope: !7279)
!7284 = !DILocation(line: 1364, column: 9, scope: !7279)
!7285 = !DILocation(line: 1365, column: 36, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7280, file: !1282, line: 1364, column: 50)
!7287 = !DILocation(line: 1365, column: 38, scope: !7286)
!7288 = !DILocation(line: 1365, column: 45, scope: !7286)
!7289 = !DILocation(line: 1365, column: 50, scope: !7286)
!7290 = !DILocation(line: 1365, column: 43, scope: !7286)
!7291 = !DILocation(line: 1365, column: 64, scope: !7286)
!7292 = !DILocation(line: 1365, column: 69, scope: !7286)
!7293 = !DILocation(line: 1365, column: 62, scope: !7286)
!7294 = !DILocation(line: 1366, column: 35, scope: !7286)
!7295 = !DILocation(line: 1366, column: 39, scope: !7286)
!7296 = !DILocation(line: 1366, column: 44, scope: !7286)
!7297 = !DILocation(line: 1366, column: 37, scope: !7286)
!7298 = !DILocation(line: 1366, column: 58, scope: !7286)
!7299 = !DILocation(line: 1366, column: 63, scope: !7286)
!7300 = !DILocation(line: 1366, column: 56, scope: !7286)
!7301 = !DILocation(line: 1365, column: 83, scope: !7286)
!7302 = !DILocation(line: 1365, column: 29, scope: !7286)
!7303 = !DILocation(line: 1365, column: 13, scope: !7286)
!7304 = !DILocation(line: 1365, column: 18, scope: !7286)
!7305 = !DILocation(line: 1365, column: 32, scope: !7286)
!7306 = !DILocation(line: 1367, column: 9, scope: !7286)
!7307 = !DILocation(line: 1364, column: 46, scope: !7308)
!7308 = !DILexicalBlockFile(scope: !7280, file: !1282, discriminator: 2)
!7309 = !DILocation(line: 1364, column: 9, scope: !7308)
!7310 = distinct !{!7310, !7311}
!7311 = !DILocation(line: 1364, column: 9, scope: !7212)
!7312 = !DILocation(line: 1368, column: 5, scope: !7212)
!7313 = !DILocation(line: 1370, column: 5, scope: !7146)
!7314 = !DILocation(line: 1370, column: 10, scope: !7146)
!7315 = !DILocation(line: 1370, column: 20, scope: !7146)
!7316 = !DILocation(line: 1371, column: 12, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7146, file: !1282, line: 1371, column: 5)
!7318 = !DILocation(line: 1371, column: 10, scope: !7317)
!7319 = !DILocation(line: 1371, column: 17, scope: !7320)
!7320 = !DILexicalBlockFile(scope: !7321, file: !1282, discriminator: 1)
!7321 = distinct !DILexicalBlock(scope: !7317, file: !1282, line: 1371, column: 5)
!7322 = !DILocation(line: 1371, column: 21, scope: !7320)
!7323 = !DILocation(line: 1371, column: 26, scope: !7320)
!7324 = !DILocation(line: 1371, column: 19, scope: !7320)
!7325 = !DILocation(line: 1371, column: 5, scope: !7320)
!7326 = !DILocation(line: 1372, column: 42, scope: !7321)
!7327 = !DILocation(line: 1372, column: 30, scope: !7321)
!7328 = !DILocation(line: 1372, column: 35, scope: !7321)
!7329 = !DILocation(line: 1372, column: 65, scope: !7321)
!7330 = !DILocation(line: 1372, column: 47, scope: !7321)
!7331 = !DILocation(line: 1372, column: 52, scope: !7321)
!7332 = !DILocation(line: 1372, column: 45, scope: !7321)
!7333 = !DILocation(line: 1372, column: 21, scope: !7321)
!7334 = !DILocation(line: 1372, column: 23, scope: !7321)
!7335 = !DILocation(line: 1372, column: 9, scope: !7321)
!7336 = !DILocation(line: 1372, column: 14, scope: !7321)
!7337 = !DILocation(line: 1372, column: 28, scope: !7321)
!7338 = !DILocation(line: 1371, column: 45, scope: !7339)
!7339 = !DILexicalBlockFile(scope: !7321, file: !1282, discriminator: 2)
!7340 = !DILocation(line: 1371, column: 5, scope: !7339)
!7341 = distinct !{!7341, !7342}
!7342 = !DILocation(line: 1371, column: 5, scope: !7146)
!7343 = !DILocation(line: 1374, column: 5, scope: !7146)
!7344 = !DILocation(line: 1374, column: 10, scope: !7146)
!7345 = !DILocation(line: 1374, column: 20, scope: !7146)
!7346 = !DILocation(line: 1375, column: 12, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7146, file: !1282, line: 1375, column: 5)
!7348 = !DILocation(line: 1375, column: 10, scope: !7347)
!7349 = !DILocation(line: 1375, column: 17, scope: !7350)
!7350 = !DILexicalBlockFile(scope: !7351, file: !1282, discriminator: 1)
!7351 = distinct !DILexicalBlock(scope: !7347, file: !1282, line: 1375, column: 5)
!7352 = !DILocation(line: 1375, column: 21, scope: !7350)
!7353 = !DILocation(line: 1375, column: 26, scope: !7350)
!7354 = !DILocation(line: 1375, column: 19, scope: !7350)
!7355 = !DILocation(line: 1375, column: 5, scope: !7350)
!7356 = !DILocation(line: 1376, column: 42, scope: !7351)
!7357 = !DILocation(line: 1376, column: 30, scope: !7351)
!7358 = !DILocation(line: 1376, column: 35, scope: !7351)
!7359 = !DILocation(line: 1376, column: 63, scope: !7351)
!7360 = !DILocation(line: 1376, column: 47, scope: !7351)
!7361 = !DILocation(line: 1376, column: 52, scope: !7351)
!7362 = !DILocation(line: 1376, column: 45, scope: !7351)
!7363 = !DILocation(line: 1376, column: 21, scope: !7351)
!7364 = !DILocation(line: 1376, column: 23, scope: !7351)
!7365 = !DILocation(line: 1376, column: 9, scope: !7351)
!7366 = !DILocation(line: 1376, column: 14, scope: !7351)
!7367 = !DILocation(line: 1376, column: 28, scope: !7351)
!7368 = !DILocation(line: 1375, column: 42, scope: !7369)
!7369 = !DILexicalBlockFile(scope: !7351, file: !1282, discriminator: 2)
!7370 = !DILocation(line: 1375, column: 5, scope: !7369)
!7371 = distinct !{!7371, !7372}
!7372 = !DILocation(line: 1375, column: 5, scope: !7146)
!7373 = !DILocation(line: 1378, column: 12, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7146, file: !1282, line: 1378, column: 5)
!7375 = !DILocation(line: 1378, column: 19, scope: !7374)
!7376 = !DILocation(line: 1378, column: 10, scope: !7374)
!7377 = !DILocation(line: 1378, column: 24, scope: !7378)
!7378 = !DILexicalBlockFile(scope: !7379, file: !1282, discriminator: 1)
!7379 = distinct !DILexicalBlock(scope: !7374, file: !1282, line: 1378, column: 5)
!7380 = !DILocation(line: 1378, column: 28, scope: !7378)
!7381 = !DILocation(line: 1378, column: 33, scope: !7378)
!7382 = !DILocation(line: 1378, column: 26, scope: !7378)
!7383 = !DILocation(line: 1378, column: 5, scope: !7378)
!7384 = !DILocation(line: 1379, column: 13, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7386, file: !1282, line: 1379, column: 13)
!7386 = distinct !DILexicalBlock(scope: !7379, file: !1282, line: 1378, column: 49)
!7387 = !DILocation(line: 1379, column: 29, scope: !7385)
!7388 = !DILocation(line: 1379, column: 17, scope: !7385)
!7389 = !DILocation(line: 1379, column: 22, scope: !7385)
!7390 = !DILocation(line: 1379, column: 15, scope: !7385)
!7391 = !DILocation(line: 1379, column: 13, scope: !7386)
!7392 = !DILocation(line: 1380, column: 14, scope: !7385)
!7393 = !DILocation(line: 1380, column: 13, scope: !7385)
!7394 = !DILocation(line: 1381, column: 28, scope: !7386)
!7395 = !DILocation(line: 1381, column: 23, scope: !7386)
!7396 = !DILocation(line: 1381, column: 9, scope: !7386)
!7397 = !DILocation(line: 1381, column: 14, scope: !7386)
!7398 = !DILocation(line: 1381, column: 26, scope: !7386)
!7399 = !DILocation(line: 1382, column: 5, scope: !7386)
!7400 = !DILocation(line: 1378, column: 45, scope: !7401)
!7401 = !DILexicalBlockFile(scope: !7379, file: !1282, discriminator: 2)
!7402 = !DILocation(line: 1378, column: 5, scope: !7401)
!7403 = distinct !{!7403, !7404}
!7404 = !DILocation(line: 1378, column: 5, scope: !7146)
!7405 = !DILocation(line: 1387, column: 24, scope: !7146)
!7406 = !DILocation(line: 1387, column: 29, scope: !7146)
!7407 = !DILocation(line: 1387, column: 41, scope: !7146)
!7408 = !DILocation(line: 1387, column: 46, scope: !7146)
!7409 = !DILocation(line: 1387, column: 39, scope: !7146)
!7410 = !DILocation(line: 1387, column: 22, scope: !7146)
!7411 = !DILocation(line: 1389, column: 46, scope: !7146)
!7412 = !DILocation(line: 1389, column: 30, scope: !7146)
!7413 = !DILocation(line: 1389, column: 5, scope: !7146)
!7414 = !DILocation(line: 1389, column: 10, scope: !7146)
!7415 = !DILocation(line: 1389, column: 28, scope: !7146)
!7416 = !DILocation(line: 1390, column: 46, scope: !7146)
!7417 = !DILocation(line: 1390, column: 30, scope: !7146)
!7418 = !DILocation(line: 1390, column: 5, scope: !7146)
!7419 = !DILocation(line: 1390, column: 10, scope: !7146)
!7420 = !DILocation(line: 1390, column: 28, scope: !7146)
!7421 = !DILocation(line: 1391, column: 36, scope: !7146)
!7422 = !DILocation(line: 1391, column: 20, scope: !7146)
!7423 = !DILocation(line: 1391, column: 5, scope: !7146)
!7424 = !DILocation(line: 1391, column: 10, scope: !7146)
!7425 = !DILocation(line: 1391, column: 18, scope: !7146)
!7426 = !DILocation(line: 1392, column: 48, scope: !7146)
!7427 = !DILocation(line: 1392, column: 53, scope: !7146)
!7428 = !DILocation(line: 1392, column: 60, scope: !7146)
!7429 = !DILocation(line: 1392, column: 67, scope: !7146)
!7430 = !DILocation(line: 1392, column: 72, scope: !7146)
!7431 = !DILocation(line: 1392, column: 79, scope: !7146)
!7432 = !DILocation(line: 1392, column: 64, scope: !7146)
!7433 = !DILocation(line: 1392, column: 47, scope: !7146)
!7434 = !DILocation(line: 1392, column: 31, scope: !7146)
!7435 = !DILocation(line: 1392, column: 5, scope: !7146)
!7436 = !DILocation(line: 1392, column: 10, scope: !7146)
!7437 = !DILocation(line: 1392, column: 29, scope: !7146)
!7438 = !DILocation(line: 1393, column: 10, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7146, file: !1282, line: 1393, column: 9)
!7440 = !DILocation(line: 1393, column: 15, scope: !7439)
!7441 = !DILocation(line: 1393, column: 33, scope: !7439)
!7442 = !DILocation(line: 1393, column: 37, scope: !7443)
!7443 = !DILexicalBlockFile(scope: !7439, file: !1282, discriminator: 1)
!7444 = !DILocation(line: 1393, column: 42, scope: !7443)
!7445 = !DILocation(line: 1393, column: 60, scope: !7443)
!7446 = !DILocation(line: 1394, column: 10, scope: !7439)
!7447 = !DILocation(line: 1394, column: 15, scope: !7439)
!7448 = !DILocation(line: 1394, column: 23, scope: !7439)
!7449 = !DILocation(line: 1394, column: 27, scope: !7443)
!7450 = !DILocation(line: 1394, column: 32, scope: !7443)
!7451 = !DILocation(line: 1393, column: 9, scope: !7452)
!7452 = !DILexicalBlockFile(scope: !7146, file: !1282, discriminator: 2)
!7453 = !DILocation(line: 1395, column: 9, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7439, file: !1282, line: 1394, column: 52)
!7455 = !DILocation(line: 1398, column: 22, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7146, file: !1282, line: 1398, column: 5)
!7457 = !DILocation(line: 1398, column: 10, scope: !7456)
!7458 = !DILocation(line: 1398, column: 27, scope: !7459)
!7459 = !DILexicalBlockFile(scope: !7460, file: !1282, discriminator: 1)
!7460 = distinct !DILexicalBlock(scope: !7456, file: !1282, line: 1398, column: 5)
!7461 = !DILocation(line: 1398, column: 41, scope: !7459)
!7462 = !DILocation(line: 1398, column: 39, scope: !7459)
!7463 = !DILocation(line: 1398, column: 5, scope: !7459)
!7464 = !DILocalVariable(name: "tb_x", scope: !7465, file: !1282, line: 1399, type: !977)
!7465 = distinct !DILexicalBlock(scope: !7460, file: !1282, line: 1398, column: 74)
!7466 = !DILocation(line: 1399, column: 13, scope: !7465)
!7467 = !DILocation(line: 1399, column: 20, scope: !7465)
!7468 = !DILocation(line: 1399, column: 34, scope: !7465)
!7469 = !DILocation(line: 1399, column: 39, scope: !7465)
!7470 = !DILocation(line: 1399, column: 32, scope: !7465)
!7471 = !DILocalVariable(name: "tb_y", scope: !7465, file: !1282, line: 1400, type: !977)
!7472 = !DILocation(line: 1400, column: 13, scope: !7465)
!7473 = !DILocation(line: 1400, column: 20, scope: !7465)
!7474 = !DILocation(line: 1400, column: 34, scope: !7465)
!7475 = !DILocation(line: 1400, column: 39, scope: !7465)
!7476 = !DILocation(line: 1400, column: 32, scope: !7465)
!7477 = !DILocalVariable(name: "tile_x", scope: !7465, file: !1282, line: 1401, type: !977)
!7478 = !DILocation(line: 1401, column: 13, scope: !7465)
!7479 = !DILocalVariable(name: "tile_y", scope: !7465, file: !1282, line: 1402, type: !977)
!7480 = !DILocation(line: 1402, column: 13, scope: !7465)
!7481 = !DILocalVariable(name: "val", scope: !7465, file: !1282, line: 1403, type: !977)
!7482 = !DILocation(line: 1403, column: 13, scope: !7465)
!7483 = !DILocation(line: 1405, column: 16, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7465, file: !1282, line: 1405, column: 9)
!7485 = !DILocation(line: 1405, column: 14, scope: !7484)
!7486 = !DILocation(line: 1405, column: 21, scope: !7487)
!7487 = !DILexicalBlockFile(scope: !7488, file: !1282, discriminator: 1)
!7488 = distinct !DILexicalBlock(scope: !7484, file: !1282, line: 1405, column: 9)
!7489 = !DILocation(line: 1405, column: 25, scope: !7487)
!7490 = !DILocation(line: 1405, column: 30, scope: !7487)
!7491 = !DILocation(line: 1405, column: 23, scope: !7487)
!7492 = !DILocation(line: 1405, column: 9, scope: !7487)
!7493 = !DILocation(line: 1406, column: 17, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7495, file: !1282, line: 1406, column: 17)
!7495 = distinct !DILexicalBlock(scope: !7488, file: !1282, line: 1405, column: 53)
!7496 = !DILocation(line: 1406, column: 36, scope: !7494)
!7497 = !DILocation(line: 1406, column: 38, scope: !7494)
!7498 = !DILocation(line: 1406, column: 24, scope: !7494)
!7499 = !DILocation(line: 1406, column: 29, scope: !7494)
!7500 = !DILocation(line: 1406, column: 22, scope: !7494)
!7501 = !DILocation(line: 1406, column: 17, scope: !7495)
!7502 = !DILocation(line: 1407, column: 26, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7494, file: !1282, line: 1406, column: 44)
!7504 = !DILocation(line: 1407, column: 24, scope: !7503)
!7505 = !DILocation(line: 1408, column: 17, scope: !7503)
!7506 = !DILocation(line: 1410, column: 9, scope: !7495)
!7507 = !DILocation(line: 1405, column: 49, scope: !7508)
!7508 = !DILexicalBlockFile(scope: !7488, file: !1282, discriminator: 2)
!7509 = !DILocation(line: 1405, column: 9, scope: !7508)
!7510 = distinct !{!7510, !7511}
!7511 = !DILocation(line: 1405, column: 9, scope: !7465)
!7512 = !DILocation(line: 1412, column: 16, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7465, file: !1282, line: 1412, column: 9)
!7514 = !DILocation(line: 1412, column: 14, scope: !7513)
!7515 = !DILocation(line: 1412, column: 21, scope: !7516)
!7516 = !DILexicalBlockFile(scope: !7517, file: !1282, discriminator: 1)
!7517 = distinct !DILexicalBlock(scope: !7513, file: !1282, line: 1412, column: 9)
!7518 = !DILocation(line: 1412, column: 25, scope: !7516)
!7519 = !DILocation(line: 1412, column: 30, scope: !7516)
!7520 = !DILocation(line: 1412, column: 23, scope: !7516)
!7521 = !DILocation(line: 1412, column: 9, scope: !7516)
!7522 = !DILocation(line: 1413, column: 17, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7524, file: !1282, line: 1413, column: 17)
!7524 = distinct !DILexicalBlock(scope: !7517, file: !1282, line: 1412, column: 50)
!7525 = !DILocation(line: 1413, column: 36, scope: !7523)
!7526 = !DILocation(line: 1413, column: 38, scope: !7523)
!7527 = !DILocation(line: 1413, column: 24, scope: !7523)
!7528 = !DILocation(line: 1413, column: 29, scope: !7523)
!7529 = !DILocation(line: 1413, column: 22, scope: !7523)
!7530 = !DILocation(line: 1413, column: 17, scope: !7524)
!7531 = !DILocation(line: 1414, column: 26, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7523, file: !1282, line: 1413, column: 44)
!7533 = !DILocation(line: 1414, column: 24, scope: !7532)
!7534 = !DILocation(line: 1415, column: 17, scope: !7532)
!7535 = !DILocation(line: 1417, column: 9, scope: !7524)
!7536 = !DILocation(line: 1412, column: 46, scope: !7537)
!7537 = !DILexicalBlockFile(scope: !7517, file: !1282, discriminator: 2)
!7538 = !DILocation(line: 1412, column: 9, scope: !7537)
!7539 = distinct !{!7539, !7540}
!7540 = !DILocation(line: 1412, column: 9, scope: !7465)
!7541 = !DILocation(line: 1419, column: 16, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7465, file: !1282, line: 1419, column: 9)
!7543 = !DILocation(line: 1419, column: 14, scope: !7542)
!7544 = !DILocation(line: 1419, column: 21, scope: !7545)
!7545 = !DILexicalBlockFile(scope: !7546, file: !1282, discriminator: 1)
!7546 = distinct !DILexicalBlock(scope: !7542, file: !1282, line: 1419, column: 9)
!7547 = !DILocation(line: 1419, column: 25, scope: !7545)
!7548 = !DILocation(line: 1419, column: 23, scope: !7545)
!7549 = !DILocation(line: 1419, column: 9, scope: !7545)
!7550 = !DILocation(line: 1420, column: 36, scope: !7546)
!7551 = !DILocation(line: 1420, column: 20, scope: !7546)
!7552 = !DILocation(line: 1420, column: 25, scope: !7546)
!7553 = !DILocation(line: 1420, column: 64, scope: !7546)
!7554 = !DILocation(line: 1420, column: 46, scope: !7546)
!7555 = !DILocation(line: 1420, column: 51, scope: !7546)
!7556 = !DILocation(line: 1420, column: 44, scope: !7546)
!7557 = !DILocation(line: 1420, column: 17, scope: !7546)
!7558 = !DILocation(line: 1420, column: 13, scope: !7546)
!7559 = !DILocation(line: 1419, column: 34, scope: !7560)
!7560 = !DILexicalBlockFile(scope: !7546, file: !1282, discriminator: 2)
!7561 = !DILocation(line: 1419, column: 9, scope: !7560)
!7562 = distinct !{!7562, !7563}
!7563 = !DILocation(line: 1419, column: 9, scope: !7465)
!7564 = !DILocation(line: 1421, column: 16, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7465, file: !1282, line: 1421, column: 9)
!7566 = !DILocation(line: 1421, column: 14, scope: !7565)
!7567 = !DILocation(line: 1421, column: 21, scope: !7568)
!7568 = !DILexicalBlockFile(scope: !7569, file: !1282, discriminator: 1)
!7569 = distinct !DILexicalBlock(scope: !7565, file: !1282, line: 1421, column: 9)
!7570 = !DILocation(line: 1421, column: 25, scope: !7568)
!7571 = !DILocation(line: 1421, column: 23, scope: !7568)
!7572 = !DILocation(line: 1421, column: 9, scope: !7568)
!7573 = !DILocation(line: 1422, column: 20, scope: !7569)
!7574 = !DILocation(line: 1422, column: 25, scope: !7569)
!7575 = !DILocation(line: 1422, column: 53, scope: !7569)
!7576 = !DILocation(line: 1422, column: 37, scope: !7569)
!7577 = !DILocation(line: 1422, column: 42, scope: !7569)
!7578 = !DILocation(line: 1422, column: 35, scope: !7569)
!7579 = !DILocation(line: 1422, column: 17, scope: !7569)
!7580 = !DILocation(line: 1422, column: 13, scope: !7569)
!7581 = !DILocation(line: 1421, column: 34, scope: !7582)
!7582 = !DILexicalBlockFile(scope: !7569, file: !1282, discriminator: 2)
!7583 = !DILocation(line: 1421, column: 9, scope: !7582)
!7584 = distinct !{!7584, !7585}
!7585 = !DILocation(line: 1421, column: 9, scope: !7465)
!7586 = !DILocation(line: 1424, column: 17, scope: !7465)
!7587 = !DILocation(line: 1424, column: 36, scope: !7465)
!7588 = !DILocation(line: 1424, column: 24, scope: !7465)
!7589 = !DILocation(line: 1424, column: 29, scope: !7465)
!7590 = !DILocation(line: 1424, column: 22, scope: !7465)
!7591 = !DILocation(line: 1424, column: 65, scope: !7465)
!7592 = !DILocation(line: 1424, column: 47, scope: !7465)
!7593 = !DILocation(line: 1424, column: 52, scope: !7465)
!7594 = !DILocation(line: 1424, column: 45, scope: !7465)
!7595 = !DILocation(line: 1425, column: 16, scope: !7465)
!7596 = !DILocation(line: 1424, column: 73, scope: !7465)
!7597 = !DILocation(line: 1425, column: 35, scope: !7465)
!7598 = !DILocation(line: 1425, column: 23, scope: !7465)
!7599 = !DILocation(line: 1425, column: 28, scope: !7465)
!7600 = !DILocation(line: 1425, column: 21, scope: !7465)
!7601 = !DILocation(line: 1424, column: 13, scope: !7465)
!7602 = !DILocation(line: 1427, column: 47, scope: !7465)
!7603 = !DILocation(line: 1427, column: 32, scope: !7465)
!7604 = !DILocation(line: 1427, column: 9, scope: !7465)
!7605 = !DILocation(line: 1427, column: 14, scope: !7465)
!7606 = !DILocation(line: 1427, column: 45, scope: !7465)
!7607 = !DILocation(line: 1428, column: 39, scope: !7465)
!7608 = !DILocation(line: 1428, column: 32, scope: !7465)
!7609 = !DILocation(line: 1428, column: 9, scope: !7465)
!7610 = !DILocation(line: 1428, column: 14, scope: !7465)
!7611 = !DILocation(line: 1428, column: 37, scope: !7465)
!7612 = !DILocation(line: 1429, column: 5, scope: !7465)
!7613 = !DILocation(line: 1398, column: 70, scope: !7614)
!7614 = !DILexicalBlockFile(scope: !7460, file: !1282, discriminator: 2)
!7615 = !DILocation(line: 1398, column: 5, scope: !7614)
!7616 = distinct !{!7616, !7617}
!7617 = !DILocation(line: 1398, column: 5, scope: !7146)
!7618 = !DILocation(line: 1431, column: 12, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7146, file: !1282, line: 1431, column: 5)
!7620 = !DILocation(line: 1431, column: 25, scope: !7619)
!7621 = !DILocation(line: 1431, column: 10, scope: !7619)
!7622 = !DILocation(line: 1431, column: 30, scope: !7623)
!7623 = !DILexicalBlockFile(scope: !7624, file: !1282, discriminator: 1)
!7624 = distinct !DILexicalBlock(scope: !7619, file: !1282, line: 1431, column: 5)
!7625 = !DILocation(line: 1431, column: 34, scope: !7623)
!7626 = !DILocation(line: 1431, column: 39, scope: !7623)
!7627 = !DILocation(line: 1431, column: 32, scope: !7623)
!7628 = !DILocation(line: 1431, column: 5, scope: !7623)
!7629 = !DILocation(line: 1432, column: 16, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7624, file: !1282, line: 1432, column: 9)
!7631 = !DILocation(line: 1432, column: 14, scope: !7630)
!7632 = !DILocation(line: 1432, column: 21, scope: !7633)
!7633 = !DILexicalBlockFile(scope: !7634, file: !1282, discriminator: 1)
!7634 = distinct !DILexicalBlock(scope: !7630, file: !1282, line: 1432, column: 9)
!7635 = !DILocation(line: 1432, column: 25, scope: !7633)
!7636 = !DILocation(line: 1432, column: 30, scope: !7633)
!7637 = !DILocation(line: 1432, column: 23, scope: !7633)
!7638 = !DILocation(line: 1432, column: 9, scope: !7633)
!7639 = !DILocation(line: 1433, column: 34, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7634, file: !1282, line: 1433, column: 13)
!7641 = !DILocation(line: 1433, column: 22, scope: !7640)
!7642 = !DILocation(line: 1433, column: 27, scope: !7640)
!7643 = !DILocation(line: 1433, column: 20, scope: !7640)
!7644 = !DILocation(line: 1433, column: 18, scope: !7640)
!7645 = !DILocation(line: 1433, column: 38, scope: !7646)
!7646 = !DILexicalBlockFile(scope: !7647, file: !1282, discriminator: 1)
!7647 = distinct !DILexicalBlock(scope: !7640, file: !1282, line: 1433, column: 13)
!7648 = !DILocation(line: 1433, column: 54, scope: !7646)
!7649 = !DILocation(line: 1433, column: 56, scope: !7646)
!7650 = !DILocation(line: 1433, column: 42, scope: !7646)
!7651 = !DILocation(line: 1433, column: 47, scope: !7646)
!7652 = !DILocation(line: 1433, column: 40, scope: !7646)
!7653 = !DILocation(line: 1433, column: 13, scope: !7646)
!7654 = !DILocation(line: 1434, column: 38, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7647, file: !1282, line: 1434, column: 17)
!7656 = !DILocation(line: 1434, column: 26, scope: !7655)
!7657 = !DILocation(line: 1434, column: 31, scope: !7655)
!7658 = !DILocation(line: 1434, column: 24, scope: !7655)
!7659 = !DILocation(line: 1434, column: 22, scope: !7655)
!7660 = !DILocation(line: 1434, column: 42, scope: !7661)
!7661 = !DILexicalBlockFile(scope: !7662, file: !1282, discriminator: 1)
!7662 = distinct !DILexicalBlock(scope: !7655, file: !1282, line: 1434, column: 17)
!7663 = !DILocation(line: 1434, column: 58, scope: !7661)
!7664 = !DILocation(line: 1434, column: 60, scope: !7661)
!7665 = !DILocation(line: 1434, column: 46, scope: !7661)
!7666 = !DILocation(line: 1434, column: 51, scope: !7661)
!7667 = !DILocation(line: 1434, column: 44, scope: !7661)
!7668 = !DILocation(line: 1434, column: 17, scope: !7661)
!7669 = !DILocation(line: 1435, column: 84, scope: !7662)
!7670 = !DILocation(line: 1435, column: 57, scope: !7662)
!7671 = !DILocation(line: 1435, column: 61, scope: !7662)
!7672 = !DILocation(line: 1435, column: 66, scope: !7662)
!7673 = !DILocation(line: 1435, column: 59, scope: !7662)
!7674 = !DILocation(line: 1435, column: 78, scope: !7662)
!7675 = !DILocation(line: 1435, column: 76, scope: !7662)
!7676 = !DILocation(line: 1435, column: 34, scope: !7662)
!7677 = !DILocation(line: 1435, column: 39, scope: !7662)
!7678 = !DILocation(line: 1435, column: 21, scope: !7662)
!7679 = !DILocation(line: 1435, column: 26, scope: !7662)
!7680 = !DILocation(line: 1435, column: 82, scope: !7662)
!7681 = !DILocation(line: 1434, column: 67, scope: !7682)
!7682 = !DILexicalBlockFile(scope: !7662, file: !1282, discriminator: 2)
!7683 = !DILocation(line: 1434, column: 17, scope: !7682)
!7684 = distinct !{!7684, !7685}
!7685 = !DILocation(line: 1434, column: 17, scope: !7647)
!7686 = !DILocation(line: 1435, column: 84, scope: !7687)
!7687 = !DILexicalBlockFile(scope: !7655, file: !1282, discriminator: 1)
!7688 = !DILocation(line: 1433, column: 63, scope: !7689)
!7689 = !DILexicalBlockFile(scope: !7647, file: !1282, discriminator: 2)
!7690 = !DILocation(line: 1433, column: 13, scope: !7689)
!7691 = distinct !{!7691, !7692}
!7692 = !DILocation(line: 1433, column: 13, scope: !7634)
!7693 = !DILocation(line: 1435, column: 84, scope: !7694)
!7694 = !DILexicalBlockFile(scope: !7640, file: !1282, discriminator: 2)
!7695 = !DILocation(line: 1432, column: 49, scope: !7696)
!7696 = !DILexicalBlockFile(scope: !7634, file: !1282, discriminator: 2)
!7697 = !DILocation(line: 1432, column: 60, scope: !7696)
!7698 = !DILocation(line: 1432, column: 9, scope: !7696)
!7699 = distinct !{!7699, !7700}
!7700 = !DILocation(line: 1432, column: 9, scope: !7624)
!7701 = !DILocation(line: 1435, column: 84, scope: !7702)
!7702 = !DILexicalBlockFile(scope: !7630, file: !1282, discriminator: 3)
!7703 = !DILocation(line: 1431, column: 55, scope: !7704)
!7704 = !DILexicalBlockFile(scope: !7624, file: !1282, discriminator: 2)
!7705 = !DILocation(line: 1431, column: 5, scope: !7704)
!7706 = distinct !{!7706, !7707}
!7707 = !DILocation(line: 1431, column: 5, scope: !7146)
!7708 = !DILocation(line: 1437, column: 40, scope: !7146)
!7709 = !DILocation(line: 1437, column: 24, scope: !7146)
!7710 = !DILocation(line: 1437, column: 5, scope: !7146)
!7711 = !DILocation(line: 1437, column: 10, scope: !7146)
!7712 = !DILocation(line: 1437, column: 22, scope: !7146)
!7713 = !DILocation(line: 1438, column: 10, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7146, file: !1282, line: 1438, column: 9)
!7715 = !DILocation(line: 1438, column: 15, scope: !7714)
!7716 = !DILocation(line: 1438, column: 9, scope: !7146)
!7717 = !DILocation(line: 1439, column: 9, scope: !7714)
!7718 = !DILocation(line: 1441, column: 12, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7146, file: !1282, line: 1441, column: 5)
!7720 = !DILocation(line: 1441, column: 10, scope: !7719)
!7721 = !DILocation(line: 1441, column: 17, scope: !7722)
!7722 = !DILexicalBlockFile(scope: !7723, file: !1282, discriminator: 1)
!7723 = distinct !DILexicalBlock(scope: !7719, file: !1282, line: 1441, column: 5)
!7724 = !DILocation(line: 1441, column: 21, scope: !7722)
!7725 = !DILocation(line: 1441, column: 26, scope: !7722)
!7726 = !DILocation(line: 1441, column: 19, scope: !7722)
!7727 = !DILocation(line: 1441, column: 5, scope: !7722)
!7728 = !DILocation(line: 1442, column: 16, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7723, file: !1282, line: 1442, column: 9)
!7730 = !DILocation(line: 1442, column: 14, scope: !7729)
!7731 = !DILocation(line: 1442, column: 21, scope: !7732)
!7732 = !DILexicalBlockFile(scope: !7733, file: !1282, discriminator: 1)
!7733 = distinct !DILexicalBlock(scope: !7729, file: !1282, line: 1442, column: 9)
!7734 = !DILocation(line: 1442, column: 25, scope: !7732)
!7735 = !DILocation(line: 1442, column: 30, scope: !7732)
!7736 = !DILocation(line: 1442, column: 23, scope: !7732)
!7737 = !DILocation(line: 1442, column: 9, scope: !7732)
!7738 = !DILocation(line: 1444, column: 29, scope: !7733)
!7739 = !DILocation(line: 1444, column: 17, scope: !7733)
!7740 = !DILocation(line: 1444, column: 22, scope: !7733)
!7741 = !DILocation(line: 1444, column: 34, scope: !7733)
!7742 = !DILocation(line: 1444, column: 39, scope: !7733)
!7743 = !DILocation(line: 1444, column: 32, scope: !7733)
!7744 = !DILocation(line: 1444, column: 63, scope: !7733)
!7745 = !DILocation(line: 1444, column: 51, scope: !7733)
!7746 = !DILocation(line: 1444, column: 56, scope: !7733)
!7747 = !DILocation(line: 1444, column: 49, scope: !7733)
!7748 = !DILocation(line: 1443, column: 30, scope: !7733)
!7749 = !DILocation(line: 1443, column: 34, scope: !7733)
!7750 = !DILocation(line: 1443, column: 39, scope: !7733)
!7751 = !DILocation(line: 1443, column: 32, scope: !7733)
!7752 = !DILocation(line: 1443, column: 58, scope: !7733)
!7753 = !DILocation(line: 1443, column: 56, scope: !7733)
!7754 = !DILocation(line: 1443, column: 13, scope: !7733)
!7755 = !DILocation(line: 1443, column: 18, scope: !7733)
!7756 = !DILocation(line: 1443, column: 61, scope: !7733)
!7757 = !DILocation(line: 1442, column: 49, scope: !7758)
!7758 = !DILexicalBlockFile(scope: !7733, file: !1282, discriminator: 2)
!7759 = !DILocation(line: 1442, column: 9, scope: !7758)
!7760 = distinct !{!7760, !7761}
!7761 = !DILocation(line: 1442, column: 9, scope: !7723)
!7762 = !DILocation(line: 1444, column: 64, scope: !7763)
!7763 = !DILexicalBlockFile(scope: !7729, file: !1282, discriminator: 1)
!7764 = !DILocation(line: 1441, column: 42, scope: !7765)
!7765 = !DILexicalBlockFile(scope: !7723, file: !1282, discriminator: 2)
!7766 = !DILocation(line: 1441, column: 5, scope: !7765)
!7767 = distinct !{!7767, !7768}
!7768 = !DILocation(line: 1441, column: 5, scope: !7146)
!7769 = !DILocation(line: 1446, column: 17, scope: !7146)
!7770 = !DILocation(line: 1446, column: 22, scope: !7146)
!7771 = !DILocation(line: 1446, column: 38, scope: !7146)
!7772 = !DILocation(line: 1446, column: 43, scope: !7146)
!7773 = !DILocation(line: 1446, column: 36, scope: !7146)
!7774 = !DILocation(line: 1446, column: 15, scope: !7146)
!7775 = !DILocation(line: 1447, column: 55, scope: !7146)
!7776 = !DILocation(line: 1447, column: 60, scope: !7146)
!7777 = !DILocation(line: 1447, column: 67, scope: !7146)
!7778 = !DILocation(line: 1447, column: 53, scope: !7146)
!7779 = !DILocation(line: 1447, column: 70, scope: !7146)
!7780 = !DILocation(line: 1447, column: 28, scope: !7146)
!7781 = !DILocation(line: 1447, column: 33, scope: !7146)
!7782 = !DILocation(line: 1447, column: 5, scope: !7146)
!7783 = !DILocation(line: 1447, column: 10, scope: !7146)
!7784 = !DILocation(line: 1447, column: 25, scope: !7146)
!7785 = !DILocation(line: 1448, column: 12, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7146, file: !1282, line: 1448, column: 5)
!7787 = !DILocation(line: 1448, column: 10, scope: !7786)
!7788 = !DILocation(line: 1448, column: 17, scope: !7789)
!7789 = !DILexicalBlockFile(scope: !7790, file: !1282, discriminator: 1)
!7790 = distinct !DILexicalBlock(scope: !7786, file: !1282, line: 1448, column: 5)
!7791 = !DILocation(line: 1448, column: 21, scope: !7789)
!7792 = !DILocation(line: 1448, column: 26, scope: !7789)
!7793 = !DILocation(line: 1448, column: 33, scope: !7789)
!7794 = !DILocation(line: 1448, column: 19, scope: !7789)
!7795 = !DILocation(line: 1448, column: 5, scope: !7789)
!7796 = !DILocation(line: 1449, column: 33, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7790, file: !1282, line: 1448, column: 42)
!7798 = !DILocation(line: 1449, column: 36, scope: !7797)
!7799 = !DILocation(line: 1449, column: 41, scope: !7797)
!7800 = !DILocation(line: 1449, column: 48, scope: !7797)
!7801 = !DILocation(line: 1449, column: 34, scope: !7797)
!7802 = !DILocation(line: 1449, column: 9, scope: !7797)
!7803 = !DILocation(line: 1449, column: 14, scope: !7797)
!7804 = !DILocation(line: 1449, column: 53, scope: !7797)
!7805 = !DILocation(line: 1450, column: 33, scope: !7797)
!7806 = !DILocation(line: 1450, column: 9, scope: !7797)
!7807 = !DILocation(line: 1450, column: 14, scope: !7797)
!7808 = !DILocation(line: 1450, column: 36, scope: !7797)
!7809 = !DILocation(line: 1451, column: 5, scope: !7797)
!7810 = !DILocation(line: 1448, column: 38, scope: !7811)
!7811 = !DILexicalBlockFile(scope: !7790, file: !1282, discriminator: 2)
!7812 = !DILocation(line: 1448, column: 5, scope: !7811)
!7813 = distinct !{!7813, !7814}
!7814 = !DILocation(line: 1448, column: 5, scope: !7146)
!7815 = !DILocation(line: 1452, column: 12, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7146, file: !1282, line: 1452, column: 5)
!7817 = !DILocation(line: 1452, column: 10, scope: !7816)
!7818 = !DILocation(line: 1452, column: 17, scope: !7819)
!7819 = !DILexicalBlockFile(scope: !7820, file: !1282, discriminator: 1)
!7820 = distinct !DILexicalBlock(scope: !7816, file: !1282, line: 1452, column: 5)
!7821 = !DILocation(line: 1452, column: 21, scope: !7819)
!7822 = !DILocation(line: 1452, column: 26, scope: !7819)
!7823 = !DILocation(line: 1452, column: 33, scope: !7819)
!7824 = !DILocation(line: 1452, column: 19, scope: !7819)
!7825 = !DILocation(line: 1452, column: 5, scope: !7819)
!7826 = !DILocation(line: 1453, column: 16, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7828, file: !1282, line: 1453, column: 9)
!7828 = distinct !DILexicalBlock(scope: !7820, file: !1282, line: 1452, column: 42)
!7829 = !DILocation(line: 1453, column: 14, scope: !7827)
!7830 = !DILocation(line: 1453, column: 21, scope: !7831)
!7831 = !DILexicalBlockFile(scope: !7832, file: !1282, discriminator: 1)
!7832 = distinct !DILexicalBlock(scope: !7827, file: !1282, line: 1453, column: 9)
!7833 = !DILocation(line: 1453, column: 25, scope: !7831)
!7834 = !DILocation(line: 1453, column: 30, scope: !7831)
!7835 = !DILocation(line: 1453, column: 37, scope: !7831)
!7836 = !DILocation(line: 1453, column: 23, scope: !7831)
!7837 = !DILocation(line: 1453, column: 9, scope: !7831)
!7838 = !DILocalVariable(name: "tb_x", scope: !7839, file: !1282, line: 1454, type: !977)
!7839 = distinct !DILexicalBlock(scope: !7832, file: !1282, line: 1453, column: 46)
!7840 = !DILocation(line: 1454, column: 17, scope: !7839)
!7841 = !DILocation(line: 1454, column: 24, scope: !7839)
!7842 = !DILocation(line: 1454, column: 29, scope: !7839)
!7843 = !DILocation(line: 1454, column: 26, scope: !7839)
!7844 = !DILocalVariable(name: "tb_y", scope: !7839, file: !1282, line: 1455, type: !977)
!7845 = !DILocation(line: 1455, column: 17, scope: !7839)
!7846 = !DILocation(line: 1455, column: 24, scope: !7839)
!7847 = !DILocation(line: 1455, column: 29, scope: !7839)
!7848 = !DILocation(line: 1455, column: 26, scope: !7839)
!7849 = !DILocalVariable(name: "rs", scope: !7839, file: !1282, line: 1456, type: !977)
!7850 = !DILocation(line: 1456, column: 17, scope: !7839)
!7851 = !DILocation(line: 1456, column: 22, scope: !7839)
!7852 = !DILocation(line: 1456, column: 27, scope: !7839)
!7853 = !DILocation(line: 1456, column: 39, scope: !7839)
!7854 = !DILocation(line: 1456, column: 37, scope: !7839)
!7855 = !DILocation(line: 1456, column: 46, scope: !7839)
!7856 = !DILocation(line: 1456, column: 44, scope: !7839)
!7857 = !DILocalVariable(name: "val", scope: !7839, file: !1282, line: 1457, type: !977)
!7858 = !DILocation(line: 1457, column: 17, scope: !7839)
!7859 = !DILocation(line: 1457, column: 46, scope: !7839)
!7860 = !DILocation(line: 1457, column: 23, scope: !7839)
!7861 = !DILocation(line: 1457, column: 28, scope: !7839)
!7862 = !DILocation(line: 1457, column: 54, scope: !7839)
!7863 = !DILocation(line: 1457, column: 64, scope: !7839)
!7864 = !DILocation(line: 1457, column: 50, scope: !7839)
!7865 = !DILocation(line: 1458, column: 20, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7839, file: !1282, line: 1458, column: 13)
!7867 = !DILocation(line: 1458, column: 18, scope: !7866)
!7868 = !DILocation(line: 1458, column: 25, scope: !7869)
!7869 = !DILexicalBlockFile(scope: !7870, file: !1282, discriminator: 1)
!7870 = distinct !DILexicalBlock(scope: !7866, file: !1282, line: 1458, column: 13)
!7871 = !DILocation(line: 1458, column: 29, scope: !7869)
!7872 = !DILocation(line: 1458, column: 27, scope: !7869)
!7873 = !DILocation(line: 1458, column: 13, scope: !7869)
!7874 = !DILocalVariable(name: "m", scope: !7875, file: !1282, line: 1459, type: !977)
!7875 = distinct !DILexicalBlock(scope: !7870, file: !1282, line: 1458, column: 45)
!7876 = !DILocation(line: 1459, column: 21, scope: !7875)
!7877 = !DILocation(line: 1459, column: 30, scope: !7875)
!7878 = !DILocation(line: 1459, column: 27, scope: !7875)
!7879 = !DILocation(line: 1460, column: 25, scope: !7875)
!7880 = !DILocation(line: 1460, column: 29, scope: !7875)
!7881 = !DILocation(line: 1460, column: 27, scope: !7875)
!7882 = !DILocation(line: 1460, column: 33, scope: !7883)
!7883 = !DILexicalBlockFile(scope: !7875, file: !1282, discriminator: 1)
!7884 = !DILocation(line: 1460, column: 37, scope: !7883)
!7885 = !DILocation(line: 1460, column: 35, scope: !7883)
!7886 = !DILocation(line: 1460, column: 25, scope: !7883)
!7887 = !DILocation(line: 1460, column: 25, scope: !7888)
!7888 = !DILexicalBlockFile(scope: !7875, file: !1282, discriminator: 2)
!7889 = !DILocation(line: 1460, column: 25, scope: !7890)
!7890 = !DILexicalBlockFile(scope: !7875, file: !1282, discriminator: 3)
!7891 = !DILocation(line: 1460, column: 47, scope: !7890)
!7892 = !DILocation(line: 1460, column: 51, scope: !7890)
!7893 = !DILocation(line: 1460, column: 49, scope: !7890)
!7894 = !DILocation(line: 1460, column: 59, scope: !7895)
!7895 = !DILexicalBlockFile(scope: !7875, file: !1282, discriminator: 4)
!7896 = !DILocation(line: 1460, column: 57, scope: !7895)
!7897 = !DILocation(line: 1460, column: 63, scope: !7895)
!7898 = !DILocation(line: 1460, column: 61, scope: !7895)
!7899 = !DILocation(line: 1460, column: 47, scope: !7895)
!7900 = !DILocation(line: 1460, column: 47, scope: !7901)
!7901 = !DILexicalBlockFile(scope: !7875, file: !1282, discriminator: 5)
!7902 = !DILocation(line: 1460, column: 47, scope: !7903)
!7903 = !DILexicalBlockFile(scope: !7875, file: !1282, discriminator: 6)
!7904 = !DILocation(line: 1460, column: 44, scope: !7903)
!7905 = !DILocation(line: 1460, column: 21, scope: !7903)
!7906 = !DILocation(line: 1461, column: 13, scope: !7875)
!7907 = !DILocation(line: 1458, column: 41, scope: !7908)
!7908 = !DILexicalBlockFile(scope: !7870, file: !1282, discriminator: 2)
!7909 = !DILocation(line: 1458, column: 13, scope: !7908)
!7910 = distinct !{!7910, !7911}
!7911 = !DILocation(line: 1458, column: 13, scope: !7839)
!7912 = !DILocation(line: 1462, column: 61, scope: !7839)
!7913 = !DILocation(line: 1462, column: 33, scope: !7839)
!7914 = !DILocation(line: 1462, column: 38, scope: !7839)
!7915 = !DILocation(line: 1462, column: 43, scope: !7839)
!7916 = !DILocation(line: 1462, column: 50, scope: !7839)
!7917 = !DILocation(line: 1462, column: 35, scope: !7839)
!7918 = !DILocation(line: 1462, column: 56, scope: !7839)
!7919 = !DILocation(line: 1462, column: 54, scope: !7839)
!7920 = !DILocation(line: 1462, column: 13, scope: !7839)
!7921 = !DILocation(line: 1462, column: 18, scope: !7839)
!7922 = !DILocation(line: 1462, column: 59, scope: !7839)
!7923 = !DILocation(line: 1463, column: 9, scope: !7839)
!7924 = !DILocation(line: 1453, column: 42, scope: !7925)
!7925 = !DILexicalBlockFile(scope: !7832, file: !1282, discriminator: 2)
!7926 = !DILocation(line: 1453, column: 9, scope: !7925)
!7927 = distinct !{!7927, !7928}
!7928 = !DILocation(line: 1453, column: 9, scope: !7828)
!7929 = !DILocation(line: 1464, column: 5, scope: !7828)
!7930 = !DILocation(line: 1452, column: 38, scope: !7931)
!7931 = !DILexicalBlockFile(scope: !7820, file: !1282, discriminator: 2)
!7932 = !DILocation(line: 1452, column: 5, scope: !7931)
!7933 = distinct !{!7933, !7934}
!7934 = !DILocation(line: 1452, column: 5, scope: !7146)
!7935 = !DILocation(line: 1466, column: 5, scope: !7146)
!7936 = !DILocation(line: 1467, column: 1, scope: !7146)
!7937 = distinct !DISubprogram(name: "remove_pps", scope: !1282, file: !1282, line: 81, type: !3370, isLocal: true, isDefinition: true, scopeLine: 82, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!7938 = !DILocalVariable(name: "s", arg: 1, scope: !7937, file: !1282, line: 81, type: !2457)
!7939 = !DILocation(line: 81, column: 39, scope: !7937)
!7940 = !DILocalVariable(name: "id", arg: 2, scope: !7937, file: !1282, line: 81, type: !977)
!7941 = !DILocation(line: 81, column: 46, scope: !7937)
!7942 = !DILocation(line: 83, column: 21, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7937, file: !1282, line: 83, column: 9)
!7944 = !DILocation(line: 83, column: 9, scope: !7943)
!7945 = !DILocation(line: 83, column: 12, scope: !7943)
!7946 = !DILocation(line: 83, column: 25, scope: !7943)
!7947 = !DILocation(line: 83, column: 28, scope: !7948)
!7948 = !DILexicalBlockFile(scope: !7943, file: !1282, discriminator: 1)
!7949 = !DILocation(line: 83, column: 31, scope: !7948)
!7950 = !DILocation(line: 83, column: 66, scope: !7948)
!7951 = !DILocation(line: 83, column: 54, scope: !7948)
!7952 = !DILocation(line: 83, column: 57, scope: !7948)
!7953 = !DILocation(line: 83, column: 71, scope: !7948)
!7954 = !DILocation(line: 83, column: 38, scope: !7948)
!7955 = !DILocation(line: 83, column: 35, scope: !7948)
!7956 = !DILocation(line: 83, column: 9, scope: !7948)
!7957 = !DILocation(line: 84, column: 9, scope: !7943)
!7958 = !DILocation(line: 84, column: 12, scope: !7943)
!7959 = !DILocation(line: 84, column: 16, scope: !7943)
!7960 = !DILocation(line: 85, column: 34, scope: !7937)
!7961 = !DILocation(line: 85, column: 22, scope: !7937)
!7962 = !DILocation(line: 85, column: 25, scope: !7937)
!7963 = !DILocation(line: 85, column: 5, scope: !7937)
!7964 = !DILocation(line: 86, column: 1, scope: !7937)
!7965 = distinct !DISubprogram(name: "ff_hevc_ps_uninit", scope: !1282, file: !1282, line: 1714, type: !7966, isLocal: false, isDefinition: true, scopeLine: 1715, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!7966 = !DISubroutineType(types: !7967)
!7967 = !{null, !2457}
!7968 = !DILocalVariable(name: "ps", arg: 1, scope: !7965, file: !1282, line: 1714, type: !2457)
!7969 = !DILocation(line: 1714, column: 39, scope: !7965)
!7970 = !DILocalVariable(name: "i", scope: !7965, file: !1282, line: 1716, type: !977)
!7971 = !DILocation(line: 1716, column: 9, scope: !7965)
!7972 = !DILocation(line: 1718, column: 12, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7965, file: !1282, line: 1718, column: 5)
!7974 = !DILocation(line: 1718, column: 10, scope: !7973)
!7975 = !DILocation(line: 1718, column: 17, scope: !7976)
!7976 = !DILexicalBlockFile(scope: !7977, file: !1282, discriminator: 1)
!7977 = distinct !DILexicalBlock(scope: !7973, file: !1282, line: 1718, column: 5)
!7978 = !DILocation(line: 1718, column: 19, scope: !7976)
!7979 = !DILocation(line: 1718, column: 5, scope: !7976)
!7980 = !DILocation(line: 1719, column: 39, scope: !7977)
!7981 = !DILocation(line: 1719, column: 26, scope: !7977)
!7982 = !DILocation(line: 1719, column: 30, scope: !7977)
!7983 = !DILocation(line: 1719, column: 9, scope: !7977)
!7984 = !DILocation(line: 1718, column: 74, scope: !7985)
!7985 = !DILexicalBlockFile(scope: !7977, file: !1282, discriminator: 2)
!7986 = !DILocation(line: 1718, column: 5, scope: !7985)
!7987 = distinct !{!7987, !7988}
!7988 = !DILocation(line: 1718, column: 5, scope: !7965)
!7989 = !DILocation(line: 1720, column: 12, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7965, file: !1282, line: 1720, column: 5)
!7991 = !DILocation(line: 1720, column: 10, scope: !7990)
!7992 = !DILocation(line: 1720, column: 17, scope: !7993)
!7993 = !DILexicalBlockFile(scope: !7994, file: !1282, discriminator: 1)
!7994 = distinct !DILexicalBlock(scope: !7990, file: !1282, line: 1720, column: 5)
!7995 = !DILocation(line: 1720, column: 19, scope: !7993)
!7996 = !DILocation(line: 1720, column: 5, scope: !7993)
!7997 = !DILocation(line: 1721, column: 39, scope: !7994)
!7998 = !DILocation(line: 1721, column: 26, scope: !7994)
!7999 = !DILocation(line: 1721, column: 30, scope: !7994)
!8000 = !DILocation(line: 1721, column: 9, scope: !7994)
!8001 = !DILocation(line: 1720, column: 74, scope: !8002)
!8002 = !DILexicalBlockFile(scope: !7994, file: !1282, discriminator: 2)
!8003 = !DILocation(line: 1720, column: 5, scope: !8002)
!8004 = distinct !{!8004, !8005}
!8005 = !DILocation(line: 1720, column: 5, scope: !7965)
!8006 = !DILocation(line: 1722, column: 12, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !7965, file: !1282, line: 1722, column: 5)
!8008 = !DILocation(line: 1722, column: 10, scope: !8007)
!8009 = !DILocation(line: 1722, column: 17, scope: !8010)
!8010 = !DILexicalBlockFile(scope: !8011, file: !1282, discriminator: 1)
!8011 = distinct !DILexicalBlock(scope: !8007, file: !1282, line: 1722, column: 5)
!8012 = !DILocation(line: 1722, column: 19, scope: !8010)
!8013 = !DILocation(line: 1722, column: 5, scope: !8010)
!8014 = !DILocation(line: 1723, column: 39, scope: !8011)
!8015 = !DILocation(line: 1723, column: 26, scope: !8011)
!8016 = !DILocation(line: 1723, column: 30, scope: !8011)
!8017 = !DILocation(line: 1723, column: 9, scope: !8011)
!8018 = !DILocation(line: 1722, column: 74, scope: !8019)
!8019 = !DILexicalBlockFile(scope: !8011, file: !1282, discriminator: 2)
!8020 = !DILocation(line: 1722, column: 5, scope: !8019)
!8021 = distinct !{!8021, !8022}
!8022 = !DILocation(line: 1722, column: 5, scope: !7965)
!8023 = !DILocation(line: 1725, column: 5, scope: !7965)
!8024 = !DILocation(line: 1725, column: 9, scope: !7965)
!8025 = !DILocation(line: 1725, column: 13, scope: !7965)
!8026 = !DILocation(line: 1726, column: 5, scope: !7965)
!8027 = !DILocation(line: 1726, column: 9, scope: !7965)
!8028 = !DILocation(line: 1726, column: 13, scope: !7965)
!8029 = !DILocation(line: 1727, column: 5, scope: !7965)
!8030 = !DILocation(line: 1727, column: 9, scope: !7965)
!8031 = !DILocation(line: 1727, column: 13, scope: !7965)
!8032 = !DILocation(line: 1728, column: 1, scope: !7965)
!8033 = distinct !DISubprogram(name: "ff_hevc_compute_poc", scope: !1282, file: !1282, line: 1730, type: !8034, isLocal: false, isDefinition: true, scopeLine: 1731, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!8034 = !DISubroutineType(types: !8035)
!8035 = !{!977, !1207, !977, !977, !977}
!8036 = !DILocalVariable(name: "sps", arg: 1, scope: !8033, file: !1282, line: 1730, type: !1207)
!8037 = !DILocation(line: 1730, column: 40, scope: !8033)
!8038 = !DILocalVariable(name: "pocTid0", arg: 2, scope: !8033, file: !1282, line: 1730, type: !977)
!8039 = !DILocation(line: 1730, column: 49, scope: !8033)
!8040 = !DILocalVariable(name: "poc_lsb", arg: 3, scope: !8033, file: !1282, line: 1730, type: !977)
!8041 = !DILocation(line: 1730, column: 62, scope: !8033)
!8042 = !DILocalVariable(name: "nal_unit_type", arg: 4, scope: !8033, file: !1282, line: 1730, type: !977)
!8043 = !DILocation(line: 1730, column: 75, scope: !8033)
!8044 = !DILocalVariable(name: "max_poc_lsb", scope: !8033, file: !1282, line: 1732, type: !977)
!8045 = !DILocation(line: 1732, column: 9, scope: !8033)
!8046 = !DILocation(line: 1732, column: 28, scope: !8033)
!8047 = !DILocation(line: 1732, column: 33, scope: !8033)
!8048 = !DILocation(line: 1732, column: 25, scope: !8033)
!8049 = !DILocalVariable(name: "prev_poc_lsb", scope: !8033, file: !1282, line: 1733, type: !977)
!8050 = !DILocation(line: 1733, column: 9, scope: !8033)
!8051 = !DILocation(line: 1733, column: 24, scope: !8033)
!8052 = !DILocation(line: 1733, column: 34, scope: !8033)
!8053 = !DILocation(line: 1733, column: 32, scope: !8033)
!8054 = !DILocalVariable(name: "prev_poc_msb", scope: !8033, file: !1282, line: 1734, type: !977)
!8055 = !DILocation(line: 1734, column: 9, scope: !8033)
!8056 = !DILocation(line: 1734, column: 24, scope: !8033)
!8057 = !DILocation(line: 1734, column: 34, scope: !8033)
!8058 = !DILocation(line: 1734, column: 32, scope: !8033)
!8059 = !DILocalVariable(name: "poc_msb", scope: !8033, file: !1282, line: 1735, type: !977)
!8060 = !DILocation(line: 1735, column: 9, scope: !8033)
!8061 = !DILocation(line: 1737, column: 9, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8033, file: !1282, line: 1737, column: 9)
!8063 = !DILocation(line: 1737, column: 19, scope: !8062)
!8064 = !DILocation(line: 1737, column: 17, scope: !8062)
!8065 = !DILocation(line: 1737, column: 32, scope: !8062)
!8066 = !DILocation(line: 1737, column: 35, scope: !8067)
!8067 = !DILexicalBlockFile(scope: !8062, file: !1282, discriminator: 1)
!8068 = !DILocation(line: 1737, column: 50, scope: !8067)
!8069 = !DILocation(line: 1737, column: 48, scope: !8067)
!8070 = !DILocation(line: 1737, column: 61, scope: !8067)
!8071 = !DILocation(line: 1737, column: 73, scope: !8067)
!8072 = !DILocation(line: 1737, column: 58, scope: !8067)
!8073 = !DILocation(line: 1737, column: 9, scope: !8067)
!8074 = !DILocation(line: 1738, column: 19, scope: !8062)
!8075 = !DILocation(line: 1738, column: 34, scope: !8062)
!8076 = !DILocation(line: 1738, column: 32, scope: !8062)
!8077 = !DILocation(line: 1738, column: 17, scope: !8062)
!8078 = !DILocation(line: 1738, column: 9, scope: !8062)
!8079 = !DILocation(line: 1739, column: 14, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8062, file: !1282, line: 1739, column: 14)
!8081 = !DILocation(line: 1739, column: 24, scope: !8080)
!8082 = !DILocation(line: 1739, column: 22, scope: !8080)
!8083 = !DILocation(line: 1739, column: 37, scope: !8080)
!8084 = !DILocation(line: 1739, column: 40, scope: !8085)
!8085 = !DILexicalBlockFile(scope: !8080, file: !1282, discriminator: 1)
!8086 = !DILocation(line: 1739, column: 50, scope: !8085)
!8087 = !DILocation(line: 1739, column: 48, scope: !8085)
!8088 = !DILocation(line: 1739, column: 65, scope: !8085)
!8089 = !DILocation(line: 1739, column: 77, scope: !8085)
!8090 = !DILocation(line: 1739, column: 63, scope: !8085)
!8091 = !DILocation(line: 1739, column: 14, scope: !8085)
!8092 = !DILocation(line: 1740, column: 19, scope: !8080)
!8093 = !DILocation(line: 1740, column: 34, scope: !8080)
!8094 = !DILocation(line: 1740, column: 32, scope: !8080)
!8095 = !DILocation(line: 1740, column: 17, scope: !8080)
!8096 = !DILocation(line: 1740, column: 9, scope: !8080)
!8097 = !DILocation(line: 1742, column: 19, scope: !8080)
!8098 = !DILocation(line: 1742, column: 17, scope: !8080)
!8099 = !DILocation(line: 1745, column: 9, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8033, file: !1282, line: 1745, column: 9)
!8101 = !DILocation(line: 1745, column: 23, scope: !8100)
!8102 = !DILocation(line: 1745, column: 44, scope: !8100)
!8103 = !DILocation(line: 1746, column: 9, scope: !8100)
!8104 = !DILocation(line: 1746, column: 23, scope: !8100)
!8105 = !DILocation(line: 1746, column: 46, scope: !8100)
!8106 = !DILocation(line: 1747, column: 9, scope: !8100)
!8107 = !DILocation(line: 1747, column: 23, scope: !8100)
!8108 = !DILocation(line: 1745, column: 9, scope: !8109)
!8109 = !DILexicalBlockFile(scope: !8033, file: !1282, discriminator: 1)
!8110 = !DILocation(line: 1748, column: 17, scope: !8100)
!8111 = !DILocation(line: 1748, column: 9, scope: !8100)
!8112 = !DILocation(line: 1750, column: 12, scope: !8033)
!8113 = !DILocation(line: 1750, column: 22, scope: !8033)
!8114 = !DILocation(line: 1750, column: 20, scope: !8033)
!8115 = !DILocation(line: 1750, column: 5, scope: !8033)
!8116 = distinct !DISubprogram(name: "show_bits_long", scope: !1303, file: !1303, line: 587, type: !2903, isLocal: true, isDefinition: true, scopeLine: 588, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!8117 = !DILocalVariable(name: "s", arg: 1, scope: !8116, file: !1303, line: 587, type: !1301)
!8118 = !DILocation(line: 587, column: 58, scope: !8116)
!8119 = !DILocalVariable(name: "n", arg: 2, scope: !8116, file: !1303, line: 587, type: !977)
!8120 = !DILocation(line: 587, column: 65, scope: !8116)
!8121 = !DILocation(line: 589, column: 9, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8116, file: !1303, line: 589, column: 9)
!8123 = !DILocation(line: 589, column: 11, scope: !8122)
!8124 = !DILocation(line: 589, column: 9, scope: !8116)
!8125 = !DILocation(line: 590, column: 26, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8122, file: !1303, line: 589, column: 18)
!8127 = !DILocation(line: 590, column: 29, scope: !8126)
!8128 = !DILocation(line: 590, column: 16, scope: !8126)
!8129 = !DILocation(line: 590, column: 9, scope: !8126)
!8130 = !DILocalVariable(name: "gb", scope: !8131, file: !1303, line: 592, type: !1302)
!8131 = distinct !DILexicalBlock(scope: !8122, file: !1303, line: 591, column: 12)
!8132 = !DILocation(line: 592, column: 23, scope: !8131)
!8133 = !DILocation(line: 592, column: 29, scope: !8131)
!8134 = !DILocation(line: 592, column: 28, scope: !8131)
!8135 = !DILocation(line: 593, column: 35, scope: !8131)
!8136 = !DILocation(line: 593, column: 16, scope: !8131)
!8137 = !DILocation(line: 593, column: 9, scope: !8131)
!8138 = !DILocation(line: 595, column: 1, scope: !8116)
!8139 = distinct !DISubprogram(name: "skip_bits_long", scope: !1303, file: !1303, line: 293, type: !3153, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!8140 = !DILocalVariable(name: "a", arg: 1, scope: !8141, file: !3440, line: 127, type: !977)
!8141 = distinct !DISubprogram(name: "av_clip_c", scope: !3440, file: !3440, line: 127, type: !8142, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!8142 = !DISubroutineType(types: !8143)
!8143 = !{!977, !977, !977, !977}
!8144 = !DILocation(line: 127, column: 87, scope: !8141, inlinedAt: !8145)
!8145 = distinct !DILocation(line: 301, column: 17, scope: !8139)
!8146 = !DILocalVariable(name: "amin", arg: 2, scope: !8141, file: !3440, line: 127, type: !977)
!8147 = !DILocation(line: 127, column: 94, scope: !8141, inlinedAt: !8145)
!8148 = !DILocalVariable(name: "amax", arg: 3, scope: !8141, file: !3440, line: 127, type: !977)
!8149 = !DILocation(line: 127, column: 104, scope: !8141, inlinedAt: !8145)
!8150 = !DILocalVariable(name: "s", arg: 1, scope: !8139, file: !1303, line: 293, type: !1301)
!8151 = !DILocation(line: 293, column: 50, scope: !8139)
!8152 = !DILocalVariable(name: "n", arg: 2, scope: !8139, file: !1303, line: 293, type: !977)
!8153 = !DILocation(line: 293, column: 57, scope: !8139)
!8154 = !DILocation(line: 301, column: 27, scope: !8139)
!8155 = !DILocation(line: 301, column: 31, scope: !8139)
!8156 = !DILocation(line: 301, column: 34, scope: !8139)
!8157 = !DILocation(line: 301, column: 30, scope: !8139)
!8158 = !DILocation(line: 301, column: 41, scope: !8139)
!8159 = !DILocation(line: 301, column: 44, scope: !8139)
!8160 = !DILocation(line: 301, column: 65, scope: !8139)
!8161 = !DILocation(line: 301, column: 68, scope: !8139)
!8162 = !DILocation(line: 301, column: 63, scope: !8139)
!8163 = !DILocation(line: 301, column: 17, scope: !8139)
!8164 = !DILocation(line: 132, column: 9, scope: !8165, inlinedAt: !8145)
!8165 = distinct !DILexicalBlock(scope: !8141, file: !3440, line: 132, column: 9)
!8166 = !DILocation(line: 132, column: 13, scope: !8165, inlinedAt: !8145)
!8167 = !DILocation(line: 132, column: 11, scope: !8165, inlinedAt: !8145)
!8168 = !DILocation(line: 132, column: 9, scope: !8141, inlinedAt: !8145)
!8169 = !DILocation(line: 132, column: 26, scope: !8170, inlinedAt: !8145)
!8170 = !DILexicalBlockFile(scope: !8165, file: !3440, discriminator: 1)
!8171 = !DILocation(line: 132, column: 19, scope: !8170, inlinedAt: !8145)
!8172 = !DILocation(line: 133, column: 14, scope: !8173, inlinedAt: !8145)
!8173 = distinct !DILexicalBlock(scope: !8165, file: !3440, line: 133, column: 14)
!8174 = !DILocation(line: 133, column: 18, scope: !8173, inlinedAt: !8145)
!8175 = !DILocation(line: 133, column: 16, scope: !8173, inlinedAt: !8145)
!8176 = !DILocation(line: 133, column: 14, scope: !8165, inlinedAt: !8145)
!8177 = !DILocation(line: 133, column: 31, scope: !8178, inlinedAt: !8145)
!8178 = !DILexicalBlockFile(scope: !8173, file: !3440, discriminator: 1)
!8179 = !DILocation(line: 133, column: 24, scope: !8178, inlinedAt: !8145)
!8180 = !DILocation(line: 134, column: 17, scope: !8173, inlinedAt: !8145)
!8181 = !DILocation(line: 134, column: 10, scope: !8173, inlinedAt: !8145)
!8182 = !DILocation(line: 135, column: 1, scope: !8141, inlinedAt: !8145)
!8183 = !DILocation(line: 301, column: 5, scope: !8139)
!8184 = !DILocation(line: 301, column: 8, scope: !8139)
!8185 = !DILocation(line: 301, column: 14, scope: !8139)
!8186 = !DILocation(line: 304, column: 1, scope: !8139)
!8187 = distinct !DISubprogram(name: "show_bits", scope: !1303, file: !1303, line: 443, type: !2903, isLocal: true, isDefinition: true, scopeLine: 444, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!8188 = !DILocation(line: 66, column: 98, scope: !2906, inlinedAt: !8189)
!8189 = distinct !DILocation(line: 454, column: 16, scope: !8187)
!8190 = !DILocalVariable(name: "s", arg: 1, scope: !8187, file: !1303, line: 443, type: !1301)
!8191 = !DILocation(line: 443, column: 53, scope: !8187)
!8192 = !DILocalVariable(name: "n", arg: 2, scope: !8187, file: !1303, line: 443, type: !977)
!8193 = !DILocation(line: 443, column: 60, scope: !8187)
!8194 = !DILocalVariable(name: "tmp", scope: !8187, file: !1303, line: 445, type: !977)
!8195 = !DILocation(line: 445, column: 18, scope: !8187)
!8196 = !DILocalVariable(name: "re_index", scope: !8187, file: !1303, line: 452, type: !978)
!8197 = !DILocation(line: 452, column: 18, scope: !8187)
!8198 = !DILocation(line: 452, column: 30, scope: !8187)
!8199 = !DILocation(line: 452, column: 34, scope: !8187)
!8200 = !DILocalVariable(name: "re_cache", scope: !8187, file: !1303, line: 452, type: !978)
!8201 = !DILocation(line: 452, column: 78, scope: !8187)
!8202 = !DILocation(line: 454, column: 60, scope: !8187)
!8203 = !DILocation(line: 454, column: 64, scope: !8187)
!8204 = !DILocation(line: 454, column: 74, scope: !8187)
!8205 = !DILocation(line: 454, column: 83, scope: !8187)
!8206 = !DILocation(line: 454, column: 71, scope: !8187)
!8207 = !DILocation(line: 454, column: 92, scope: !8187)
!8208 = !DILocation(line: 454, column: 16, scope: !8187)
!8209 = !DILocation(line: 68, column: 16, scope: !2906, inlinedAt: !8189)
!8210 = !DILocation(line: 68, column: 19, scope: !2906, inlinedAt: !8189)
!8211 = !DILocation(line: 68, column: 24, scope: !2906, inlinedAt: !8189)
!8212 = !DILocation(line: 68, column: 38, scope: !2906, inlinedAt: !8189)
!8213 = !DILocation(line: 68, column: 41, scope: !2906, inlinedAt: !8189)
!8214 = !DILocation(line: 68, column: 46, scope: !2906, inlinedAt: !8189)
!8215 = !DILocation(line: 68, column: 34, scope: !2906, inlinedAt: !8189)
!8216 = !DILocation(line: 68, column: 57, scope: !2906, inlinedAt: !8189)
!8217 = !DILocation(line: 68, column: 69, scope: !2906, inlinedAt: !8189)
!8218 = !DILocation(line: 68, column: 72, scope: !2906, inlinedAt: !8189)
!8219 = !DILocation(line: 68, column: 79, scope: !2906, inlinedAt: !8189)
!8220 = !DILocation(line: 68, column: 84, scope: !2906, inlinedAt: !8189)
!8221 = !DILocation(line: 68, column: 99, scope: !2906, inlinedAt: !8189)
!8222 = !DILocation(line: 68, column: 102, scope: !2906, inlinedAt: !8189)
!8223 = !DILocation(line: 68, column: 109, scope: !2906, inlinedAt: !8189)
!8224 = !DILocation(line: 68, column: 114, scope: !2906, inlinedAt: !8189)
!8225 = !DILocation(line: 68, column: 94, scope: !2906, inlinedAt: !8189)
!8226 = !DILocation(line: 68, column: 63, scope: !2906, inlinedAt: !8189)
!8227 = !DILocation(line: 454, column: 100, scope: !8187)
!8228 = !DILocation(line: 454, column: 109, scope: !8187)
!8229 = !DILocation(line: 454, column: 96, scope: !8187)
!8230 = !DILocation(line: 454, column: 14, scope: !8187)
!8231 = !DILocation(line: 455, column: 21, scope: !8187)
!8232 = !DILocation(line: 455, column: 31, scope: !8187)
!8233 = !DILocation(line: 455, column: 11, scope: !8187)
!8234 = !DILocation(line: 455, column: 9, scope: !8187)
!8235 = !DILocation(line: 457, column: 12, scope: !8187)
!8236 = !DILocation(line: 457, column: 5, scope: !8187)
!8237 = distinct !DISubprogram(name: "NEG_USR32", scope: !8238, file: !8238, line: 124, type: !8239, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!8238 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!8239 = !DISubroutineType(types: !8240)
!8240 = !{!1026, !1026, !1257}
!8241 = !DILocalVariable(name: "a", arg: 1, scope: !8237, file: !8238, line: 124, type: !1026)
!8242 = !DILocation(line: 124, column: 43, scope: !8237)
!8243 = !DILocalVariable(name: "s", arg: 2, scope: !8237, file: !8238, line: 124, type: !1257)
!8244 = !DILocation(line: 124, column: 53, scope: !8237)
!8245 = !DILocation(line: 125, column: 5, scope: !8237)
!8246 = !DILocation(line: 127, column: 29, scope: !8237)
!8247 = !DILocation(line: 127, column: 28, scope: !8237)
!8248 = !DILocation(line: 127, column: 18, scope: !8237)
!8249 = !{i32 185200, i32 185214}
!8250 = !DILocation(line: 129, column: 12, scope: !8237)
!8251 = !DILocation(line: 129, column: 5, scope: !8237)
!8252 = distinct !DISubprogram(name: "decode_profile_tier_level", scope: !1282, file: !1282, line: 265, type: !8253, isLocal: true, isDefinition: true, scopeLine: 267, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!8253 = !DISubroutineType(types: !8254)
!8254 = !{!977, !1301, !1312, !8255}
!8255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64, align: 64)
!8256 = !DILocalVariable(name: "gb", arg: 1, scope: !8252, file: !1282, line: 265, type: !1301)
!8257 = !DILocation(line: 265, column: 53, scope: !8252)
!8258 = !DILocalVariable(name: "avctx", arg: 2, scope: !8252, file: !1282, line: 265, type: !1312)
!8259 = !DILocation(line: 265, column: 73, scope: !8252)
!8260 = !DILocalVariable(name: "ptl", arg: 3, scope: !8252, file: !1282, line: 266, type: !8255)
!8261 = !DILocation(line: 266, column: 50, scope: !8252)
!8262 = !DILocalVariable(name: "i", scope: !8252, file: !1282, line: 268, type: !977)
!8263 = !DILocation(line: 268, column: 9, scope: !8252)
!8264 = !DILocation(line: 270, column: 23, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8252, file: !1282, line: 270, column: 9)
!8266 = !DILocation(line: 270, column: 9, scope: !8265)
!8267 = !DILocation(line: 270, column: 27, scope: !8265)
!8268 = !DILocation(line: 270, column: 9, scope: !8252)
!8269 = !DILocation(line: 271, column: 9, scope: !8265)
!8270 = !DILocation(line: 273, column: 35, scope: !8252)
!8271 = !DILocation(line: 273, column: 26, scope: !8252)
!8272 = !DILocation(line: 273, column: 5, scope: !8252)
!8273 = !DILocation(line: 273, column: 10, scope: !8252)
!8274 = !DILocation(line: 273, column: 24, scope: !8252)
!8275 = !DILocation(line: 274, column: 32, scope: !8252)
!8276 = !DILocation(line: 274, column: 22, scope: !8252)
!8277 = !DILocation(line: 274, column: 5, scope: !8252)
!8278 = !DILocation(line: 274, column: 10, scope: !8252)
!8279 = !DILocation(line: 274, column: 20, scope: !8252)
!8280 = !DILocation(line: 275, column: 33, scope: !8252)
!8281 = !DILocation(line: 275, column: 24, scope: !8252)
!8282 = !DILocation(line: 275, column: 5, scope: !8252)
!8283 = !DILocation(line: 275, column: 10, scope: !8252)
!8284 = !DILocation(line: 275, column: 22, scope: !8252)
!8285 = !DILocation(line: 276, column: 9, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8252, file: !1282, line: 276, column: 9)
!8287 = !DILocation(line: 276, column: 14, scope: !8286)
!8288 = !DILocation(line: 276, column: 26, scope: !8286)
!8289 = !DILocation(line: 276, column: 9, scope: !8252)
!8290 = !DILocation(line: 277, column: 16, scope: !8286)
!8291 = !DILocation(line: 277, column: 9, scope: !8286)
!8292 = !DILocation(line: 278, column: 14, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8286, file: !1282, line: 278, column: 14)
!8294 = !DILocation(line: 278, column: 19, scope: !8293)
!8295 = !DILocation(line: 278, column: 31, scope: !8293)
!8296 = !DILocation(line: 278, column: 14, scope: !8286)
!8297 = !DILocation(line: 279, column: 16, scope: !8293)
!8298 = !DILocation(line: 279, column: 9, scope: !8293)
!8299 = !DILocation(line: 280, column: 14, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8293, file: !1282, line: 280, column: 14)
!8301 = !DILocation(line: 280, column: 19, scope: !8300)
!8302 = !DILocation(line: 280, column: 31, scope: !8300)
!8303 = !DILocation(line: 280, column: 14, scope: !8293)
!8304 = !DILocation(line: 281, column: 16, scope: !8300)
!8305 = !DILocation(line: 281, column: 9, scope: !8300)
!8306 = !DILocation(line: 282, column: 14, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8300, file: !1282, line: 282, column: 14)
!8308 = !DILocation(line: 282, column: 19, scope: !8307)
!8309 = !DILocation(line: 282, column: 31, scope: !8307)
!8310 = !DILocation(line: 282, column: 14, scope: !8300)
!8311 = !DILocation(line: 283, column: 16, scope: !8307)
!8312 = !DILocation(line: 283, column: 9, scope: !8307)
!8313 = !DILocation(line: 285, column: 16, scope: !8307)
!8314 = !DILocation(line: 285, column: 57, scope: !8307)
!8315 = !DILocation(line: 285, column: 62, scope: !8307)
!8316 = !DILocation(line: 285, column: 9, scope: !8307)
!8317 = !DILocation(line: 287, column: 12, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8252, file: !1282, line: 287, column: 5)
!8319 = !DILocation(line: 287, column: 10, scope: !8318)
!8320 = !DILocation(line: 287, column: 17, scope: !8321)
!8321 = !DILexicalBlockFile(scope: !8322, file: !1282, discriminator: 1)
!8322 = distinct !DILexicalBlock(scope: !8318, file: !1282, line: 287, column: 5)
!8323 = !DILocation(line: 287, column: 19, scope: !8321)
!8324 = !DILocation(line: 287, column: 5, scope: !8321)
!8325 = !DILocation(line: 288, column: 56, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8322, file: !1282, line: 287, column: 30)
!8327 = !DILocation(line: 288, column: 46, scope: !8326)
!8328 = !DILocation(line: 288, column: 41, scope: !8326)
!8329 = !DILocation(line: 288, column: 9, scope: !8326)
!8330 = !DILocation(line: 288, column: 14, scope: !8326)
!8331 = !DILocation(line: 288, column: 44, scope: !8326)
!8332 = !DILocation(line: 290, column: 13, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8326, file: !1282, line: 290, column: 13)
!8334 = !DILocation(line: 290, column: 18, scope: !8333)
!8335 = !DILocation(line: 290, column: 30, scope: !8333)
!8336 = !DILocation(line: 290, column: 35, scope: !8333)
!8337 = !DILocation(line: 290, column: 38, scope: !8338)
!8338 = !DILexicalBlockFile(scope: !8333, file: !1282, discriminator: 1)
!8339 = !DILocation(line: 290, column: 40, scope: !8338)
!8340 = !DILocation(line: 290, column: 44, scope: !8338)
!8341 = !DILocation(line: 290, column: 79, scope: !8342)
!8342 = !DILexicalBlockFile(scope: !8333, file: !1282, discriminator: 2)
!8343 = !DILocation(line: 290, column: 47, scope: !8342)
!8344 = !DILocation(line: 290, column: 52, scope: !8342)
!8345 = !DILocation(line: 290, column: 13, scope: !8342)
!8346 = !DILocation(line: 291, column: 32, scope: !8333)
!8347 = !DILocation(line: 291, column: 13, scope: !8333)
!8348 = !DILocation(line: 291, column: 18, scope: !8333)
!8349 = !DILocation(line: 291, column: 30, scope: !8333)
!8350 = !DILocation(line: 292, column: 5, scope: !8326)
!8351 = !DILocation(line: 287, column: 26, scope: !8352)
!8352 = !DILexicalBlockFile(scope: !8322, file: !1282, discriminator: 2)
!8353 = !DILocation(line: 287, column: 5, scope: !8352)
!8354 = distinct !{!8354, !8355}
!8355 = !DILocation(line: 287, column: 5, scope: !8252)
!8356 = !DILocation(line: 293, column: 46, scope: !8252)
!8357 = !DILocation(line: 293, column: 36, scope: !8252)
!8358 = !DILocation(line: 293, column: 5, scope: !8252)
!8359 = !DILocation(line: 293, column: 10, scope: !8252)
!8360 = !DILocation(line: 293, column: 34, scope: !8252)
!8361 = !DILocation(line: 294, column: 45, scope: !8252)
!8362 = !DILocation(line: 294, column: 35, scope: !8252)
!8363 = !DILocation(line: 294, column: 5, scope: !8252)
!8364 = !DILocation(line: 294, column: 10, scope: !8252)
!8365 = !DILocation(line: 294, column: 33, scope: !8252)
!8366 = !DILocation(line: 295, column: 49, scope: !8252)
!8367 = !DILocation(line: 295, column: 39, scope: !8252)
!8368 = !DILocation(line: 295, column: 5, scope: !8252)
!8369 = !DILocation(line: 295, column: 10, scope: !8252)
!8370 = !DILocation(line: 295, column: 37, scope: !8252)
!8371 = !DILocation(line: 296, column: 49, scope: !8252)
!8372 = !DILocation(line: 296, column: 39, scope: !8252)
!8373 = !DILocation(line: 296, column: 5, scope: !8252)
!8374 = !DILocation(line: 296, column: 10, scope: !8252)
!8375 = !DILocation(line: 296, column: 37, scope: !8252)
!8376 = !DILocation(line: 298, column: 15, scope: !8252)
!8377 = !DILocation(line: 298, column: 5, scope: !8252)
!8378 = !DILocation(line: 299, column: 15, scope: !8252)
!8379 = !DILocation(line: 299, column: 5, scope: !8252)
!8380 = !DILocation(line: 300, column: 15, scope: !8252)
!8381 = !DILocation(line: 300, column: 5, scope: !8252)
!8382 = !DILocation(line: 302, column: 5, scope: !8252)
!8383 = !DILocation(line: 303, column: 1, scope: !8252)
!8384 = distinct !DISubprogram(name: "get_bits_count", scope: !1303, file: !1303, line: 219, type: !8385, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!8385 = !DISubroutineType(types: !8386)
!8386 = !{!977, !8387}
!8387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8388, size: 64, align: 64)
!8388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1302)
!8389 = !DILocalVariable(name: "s", arg: 1, scope: !8384, file: !1303, line: 219, type: !8387)
!8390 = !DILocation(line: 219, column: 55, scope: !8384)
!8391 = !DILocation(line: 224, column: 12, scope: !8384)
!8392 = !DILocation(line: 224, column: 15, scope: !8384)
!8393 = !DILocation(line: 224, column: 5, scope: !8384)
!8394 = distinct !DISubprogram(name: "decode_sublayer_hrd", scope: !1282, file: !1282, line: 345, type: !8395, isLocal: true, isDefinition: true, scopeLine: 347, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!8395 = !DISubroutineType(types: !8396)
!8396 = !{null, !1301, !978, !977}
!8397 = !DILocalVariable(name: "gb", arg: 1, scope: !8394, file: !1282, line: 345, type: !1301)
!8398 = !DILocation(line: 345, column: 48, scope: !8394)
!8399 = !DILocalVariable(name: "nb_cpb", arg: 2, scope: !8394, file: !1282, line: 345, type: !978)
!8400 = !DILocation(line: 345, column: 65, scope: !8394)
!8401 = !DILocalVariable(name: "subpic_params_present", arg: 3, scope: !8394, file: !1282, line: 346, type: !977)
!8402 = !DILocation(line: 346, column: 37, scope: !8394)
!8403 = !DILocalVariable(name: "i", scope: !8394, file: !1282, line: 348, type: !977)
!8404 = !DILocation(line: 348, column: 9, scope: !8394)
!8405 = !DILocation(line: 350, column: 12, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8394, file: !1282, line: 350, column: 5)
!8407 = !DILocation(line: 350, column: 10, scope: !8406)
!8408 = !DILocation(line: 350, column: 17, scope: !8409)
!8409 = !DILexicalBlockFile(scope: !8410, file: !1282, discriminator: 1)
!8410 = distinct !DILexicalBlock(scope: !8406, file: !1282, line: 350, column: 5)
!8411 = !DILocation(line: 350, column: 21, scope: !8409)
!8412 = !DILocation(line: 350, column: 19, scope: !8409)
!8413 = !DILocation(line: 350, column: 5, scope: !8409)
!8414 = !DILocation(line: 351, column: 28, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8410, file: !1282, line: 350, column: 34)
!8416 = !DILocation(line: 351, column: 9, scope: !8415)
!8417 = !DILocation(line: 352, column: 28, scope: !8415)
!8418 = !DILocation(line: 352, column: 9, scope: !8415)
!8419 = !DILocation(line: 354, column: 13, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8415, file: !1282, line: 354, column: 13)
!8421 = !DILocation(line: 354, column: 13, scope: !8415)
!8422 = !DILocation(line: 355, column: 32, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8420, file: !1282, line: 354, column: 36)
!8424 = !DILocation(line: 355, column: 13, scope: !8423)
!8425 = !DILocation(line: 356, column: 32, scope: !8423)
!8426 = !DILocation(line: 356, column: 13, scope: !8423)
!8427 = !DILocation(line: 357, column: 9, scope: !8423)
!8428 = !DILocation(line: 358, column: 20, scope: !8415)
!8429 = !DILocation(line: 358, column: 9, scope: !8415)
!8430 = !DILocation(line: 359, column: 5, scope: !8415)
!8431 = !DILocation(line: 350, column: 30, scope: !8432)
!8432 = !DILexicalBlockFile(scope: !8410, file: !1282, discriminator: 2)
!8433 = !DILocation(line: 350, column: 5, scope: !8432)
!8434 = distinct !{!8434, !8435}
!8435 = !DILocation(line: 350, column: 5, scope: !8394)
!8436 = !DILocation(line: 360, column: 1, scope: !8394)
!8437 = distinct !DISubprogram(name: "skip_bits1", scope: !1303, file: !1303, line: 523, type: !8438, isLocal: true, isDefinition: true, scopeLine: 524, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!8438 = !DISubroutineType(types: !8439)
!8439 = !{null, !1301}
!8440 = !DILocalVariable(name: "s", arg: 1, scope: !8437, file: !1303, line: 523, type: !1301)
!8441 = !DILocation(line: 523, column: 46, scope: !8437)
!8442 = !DILocation(line: 525, column: 15, scope: !8437)
!8443 = !DILocation(line: 525, column: 5, scope: !8437)
!8444 = !DILocation(line: 526, column: 1, scope: !8437)
!8445 = distinct !DISubprogram(name: "get_se_golomb_long", scope: !2429, file: !2429, line: 292, type: !3142, isLocal: true, isDefinition: true, scopeLine: 293, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1890)
!8446 = !DILocalVariable(name: "gb", arg: 1, scope: !8445, file: !2429, line: 292, type: !1301)
!8447 = !DILocation(line: 292, column: 53, scope: !8445)
!8448 = !DILocalVariable(name: "buf", scope: !8445, file: !2429, line: 294, type: !978)
!8449 = !DILocation(line: 294, column: 18, scope: !8445)
!8450 = !DILocation(line: 294, column: 43, scope: !8445)
!8451 = !DILocation(line: 294, column: 24, scope: !8445)
!8452 = !DILocalVariable(name: "sign", scope: !8445, file: !2429, line: 295, type: !977)
!8453 = !DILocation(line: 295, column: 9, scope: !8445)
!8454 = !DILocation(line: 295, column: 17, scope: !8445)
!8455 = !DILocation(line: 295, column: 21, scope: !8445)
!8456 = !DILocation(line: 295, column: 26, scope: !8445)
!8457 = !DILocation(line: 296, column: 14, scope: !8445)
!8458 = !DILocation(line: 296, column: 18, scope: !8445)
!8459 = !DILocation(line: 296, column: 26, scope: !8445)
!8460 = !DILocation(line: 296, column: 24, scope: !8445)
!8461 = !DILocation(line: 296, column: 32, scope: !8445)
!8462 = !DILocation(line: 296, column: 5, scope: !8445)
