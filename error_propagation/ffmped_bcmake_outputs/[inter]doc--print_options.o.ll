; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]doc--print_options.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]doc--print_options.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }

@.str = private unnamed_addr constant [66 x i8] c"@c DO NOT EDIT THIS FILE!\0A@c It was generated by print_options.\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"codec\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [45 x i8] c"Usage: enum_options type\0Atype: format codec\0A\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"@section Format AVOptions\0A\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"@table @option\0A\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"@end table\0A\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"@item -%s%s @var{\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"[:stream_specifier]\00", align 1
@.str.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"hexadecimal string\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"rational number\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"} (@emph{\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c",audio\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c",video\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c",subtitles\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"})\0A\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"\0APossible values:\0A@table @samp\0A\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"@item %s\0A%s\0A\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"avioflags\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"direct\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c"reduce buffering\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"probesize\00", align 1
@.str.32 = private unnamed_addr constant [17 x i8] c"set probing size\00", align 1
@.str.33 = private unnamed_addr constant [16 x i8] c"formatprobesize\00", align 1
@.str.34 = private unnamed_addr constant [37 x i8] c"number of bytes to probe file format\00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"packetsize\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"set packet size\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"fflags\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"flush_packets\00", align 1
@.str.39 = private unnamed_addr constant [55 x i8] c"reduce the latency by flushing out packets immediately\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"ignidx\00", align 1
@.str.41 = private unnamed_addr constant [13 x i8] c"ignore index\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"genpts\00", align 1
@.str.43 = private unnamed_addr constant [13 x i8] c"generate pts\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"nofillin\00", align 1
@.str.45 = private unnamed_addr constant [61 x i8] c"do not fill in missing values that can be exactly calculated\00", align 1
@.str.46 = private unnamed_addr constant [8 x i8] c"noparse\00", align 1
@.str.47 = private unnamed_addr constant [43 x i8] c"disable AVParsers, this needs nofillin too\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"igndts\00", align 1
@.str.49 = private unnamed_addr constant [11 x i8] c"ignore dts\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"discardcorrupt\00", align 1
@.str.51 = private unnamed_addr constant [25 x i8] c"discard corrupted frames\00", align 1
@.str.52 = private unnamed_addr constant [8 x i8] c"sortdts\00", align 1
@.str.53 = private unnamed_addr constant [43 x i8] c"try to interleave outputted packets by dts\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"keepside\00", align 1
@.str.55 = private unnamed_addr constant [25 x i8] c"deprecated, does nothing\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"fastseek\00", align 1
@.str.57 = private unnamed_addr constant [26 x i8] c"fast but inaccurate seeks\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"latm\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c"nobuffer\00", align 1
@.str.60 = private unnamed_addr constant [52 x i8] c"reduce the latency introduced by optional buffering\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"bitexact\00", align 1
@.str.62 = private unnamed_addr constant [34 x i8] c"do not write random/volatile data\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"shortest\00", align 1
@.str.64 = private unnamed_addr constant [37 x i8] c"stop muxing with the shortest stream\00", align 1
@.str.65 = private unnamed_addr constant [8 x i8] c"autobsf\00", align 1
@.str.66 = private unnamed_addr constant [30 x i8] c"add needed bsfs automatically\00", align 1
@.str.67 = private unnamed_addr constant [9 x i8] c"seek2any\00", align 1
@.str.68 = private unnamed_addr constant [63 x i8] c"allow seeking to non-keyframes on demuxer level when supported\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"analyzeduration\00", align 1
@.str.70 = private unnamed_addr constant [62 x i8] c"specify how many microseconds are analyzed to probe the input\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"cryptokey\00", align 1
@.str.72 = private unnamed_addr constant [15 x i8] c"decryption key\00", align 1
@.str.73 = private unnamed_addr constant [9 x i8] c"indexmem\00", align 1
@.str.74 = private unnamed_addr constant [49 x i8] c"max memory used for timestamp index (per stream)\00", align 1
@.str.75 = private unnamed_addr constant [10 x i8] c"rtbufsize\00", align 1
@.str.76 = private unnamed_addr constant [47 x i8] c"max memory used for buffering real-time frames\00", align 1
@.str.77 = private unnamed_addr constant [7 x i8] c"fdebug\00", align 1
@.str.78 = private unnamed_addr constant [26 x i8] c"print specific debug info\00", align 1
@.str.79 = private unnamed_addr constant [3 x i8] c"ts\00", align 1
@.str.80 = private unnamed_addr constant [10 x i8] c"max_delay\00", align 1
@.str.81 = private unnamed_addr constant [49 x i8] c"maximum muxing or demuxing delay in microseconds\00", align 1
@.str.82 = private unnamed_addr constant [20 x i8] c"start_time_realtime\00", align 1
@.str.83 = private unnamed_addr constant [44 x i8] c"wall-clock time when stream begins (PTS==0)\00", align 1
@.str.84 = private unnamed_addr constant [13 x i8] c"fpsprobesize\00", align 1
@.str.85 = private unnamed_addr constant [35 x i8] c"number of frames used to probe fps\00", align 1
@.str.86 = private unnamed_addr constant [14 x i8] c"audio_preload\00", align 1
@.str.87 = private unnamed_addr constant [66 x i8] c"microseconds by which audio packets should be interleaved earlier\00", align 1
@.str.88 = private unnamed_addr constant [15 x i8] c"chunk_duration\00", align 1
@.str.89 = private unnamed_addr constant [28 x i8] c"microseconds for each chunk\00", align 1
@.str.90 = private unnamed_addr constant [11 x i8] c"chunk_size\00", align 1
@.str.91 = private unnamed_addr constant [29 x i8] c"size in bytes for each chunk\00", align 1
@.str.92 = private unnamed_addr constant [13 x i8] c"f_err_detect\00", align 1
@.str.93 = private unnamed_addr constant [72 x i8] c"set error detection flags (deprecated; use err_detect, save via avconv)\00", align 1
@.str.94 = private unnamed_addr constant [11 x i8] c"err_detect\00", align 1
@.str.95 = private unnamed_addr constant [26 x i8] c"set error detection flags\00", align 1
@.str.96 = private unnamed_addr constant [9 x i8] c"crccheck\00", align 1
@.str.97 = private unnamed_addr constant [21 x i8] c"verify embedded CRCs\00", align 1
@.str.98 = private unnamed_addr constant [10 x i8] c"bitstream\00", align 1
@.str.99 = private unnamed_addr constant [42 x i8] c"detect bitstream specification deviations\00", align 1
@.str.100 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@.str.101 = private unnamed_addr constant [33 x i8] c"detect improper bitstream length\00", align 1
@.str.102 = private unnamed_addr constant [8 x i8] c"explode\00", align 1
@.str.103 = private unnamed_addr constant [40 x i8] c"abort decoding on minor error detection\00", align 1
@.str.104 = private unnamed_addr constant [11 x i8] c"ignore_err\00", align 1
@.str.105 = private unnamed_addr constant [14 x i8] c"ignore errors\00", align 1
@.str.106 = private unnamed_addr constant [8 x i8] c"careful\00", align 1
@.str.107 = private unnamed_addr constant [102 x i8] c"consider things that violate the spec, are fast to check and have not been seen in the wild as errors\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"compliant\00", align 1
@.str.109 = private unnamed_addr constant [45 x i8] c"consider all spec non compliancies as errors\00", align 1
@.str.110 = private unnamed_addr constant [11 x i8] c"aggressive\00", align 1
@.str.111 = private unnamed_addr constant [61 x i8] c"consider things that a sane encoder shouldn't do as an error\00", align 1
@.str.112 = private unnamed_addr constant [28 x i8] c"use_wallclock_as_timestamps\00", align 1
@.str.113 = private unnamed_addr constant [28 x i8] c"use wallclock as timestamps\00", align 1
@.str.114 = private unnamed_addr constant [19 x i8] c"skip_initial_bytes\00", align 1
@.str.115 = private unnamed_addr constant [61 x i8] c"set number of bytes to skip before reading header and frames\00", align 1
@.str.116 = private unnamed_addr constant [20 x i8] c"correct_ts_overflow\00", align 1
@.str.117 = private unnamed_addr constant [35 x i8] c"correct single timestamp overflows\00", align 1
@.str.118 = private unnamed_addr constant [53 x i8] c"enable flushing of the I/O context after each packet\00", align 1
@.str.119 = private unnamed_addr constant [24 x i8] c"metadata_header_padding\00", align 1
@.str.120 = private unnamed_addr constant [66 x i8] c"set number of bytes to be written as padding in a metadata header\00", align 1
@.str.121 = private unnamed_addr constant [17 x i8] c"output_ts_offset\00", align 1
@.str.122 = private unnamed_addr constant [28 x i8] c"set output timestamp offset\00", align 1
@.str.123 = private unnamed_addr constant [21 x i8] c"max_interleave_delta\00", align 1
@.str.124 = private unnamed_addr constant [44 x i8] c"maximum buffering duration for interleaving\00", align 1
@.str.125 = private unnamed_addr constant [9 x i8] c"f_strict\00", align 1
@.str.126 = private unnamed_addr constant [79 x i8] c"how strictly to follow the standards (deprecated; use strict, save via avconv)\00", align 1
@.str.127 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@.str.128 = private unnamed_addr constant [37 x i8] c"how strictly to follow the standards\00", align 1
@.str.129 = private unnamed_addr constant [5 x i8] c"very\00", align 1
@.str.130 = private unnamed_addr constant [82 x i8] c"strictly conform to a older more strict version of the spec or reference software\00", align 1
@.str.131 = private unnamed_addr constant [79 x i8] c"strictly conform to all the things in the spec no matter what the consequences\00", align 1
@.str.132 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.133 = private unnamed_addr constant [11 x i8] c"unofficial\00", align 1
@.str.134 = private unnamed_addr constant [28 x i8] c"allow unofficial extensions\00", align 1
@.str.135 = private unnamed_addr constant [13 x i8] c"experimental\00", align 1
@.str.136 = private unnamed_addr constant [45 x i8] c"allow non-standardized experimental variants\00", align 1
@.str.137 = private unnamed_addr constant [13 x i8] c"max_ts_probe\00", align 1
@.str.138 = private unnamed_addr constant [72 x i8] c"maximum number of packets to read while waiting for the first timestamp\00", align 1
@.str.139 = private unnamed_addr constant [18 x i8] c"avoid_negative_ts\00", align 1
@.str.140 = private unnamed_addr constant [36 x i8] c"shift timestamps so they start at 0\00", align 1
@.str.141 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.142 = private unnamed_addr constant [39 x i8] c"enabled when required by target format\00", align 1
@.str.143 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.144 = private unnamed_addr constant [25 x i8] c"do not change timestamps\00", align 1
@.str.145 = private unnamed_addr constant [18 x i8] c"make_non_negative\00", align 1
@.str.146 = private unnamed_addr constant [42 x i8] c"shift timestamps so they are non negative\00", align 1
@.str.147 = private unnamed_addr constant [10 x i8] c"make_zero\00", align 1
@.str.148 = private unnamed_addr constant [15 x i8] c"dump_separator\00", align 1
@.str.149 = private unnamed_addr constant [37 x i8] c"set information dump field separator\00", align 1
@.str.150 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.151 = private unnamed_addr constant [16 x i8] c"codec_whitelist\00", align 1
@.str.152 = private unnamed_addr constant [45 x i8] c"List of decoders that are allowed to be used\00", align 1
@.str.153 = private unnamed_addr constant [17 x i8] c"format_whitelist\00", align 1
@.str.154 = private unnamed_addr constant [45 x i8] c"List of demuxers that are allowed to be used\00", align 1
@.str.155 = private unnamed_addr constant [19 x i8] c"protocol_whitelist\00", align 1
@.str.156 = private unnamed_addr constant [46 x i8] c"List of protocols that are allowed to be used\00", align 1
@.str.157 = private unnamed_addr constant [19 x i8] c"protocol_blacklist\00", align 1
@.str.158 = private unnamed_addr constant [50 x i8] c"List of protocols that are not allowed to be used\00", align 1
@.str.159 = private unnamed_addr constant [12 x i8] c"max_streams\00", align 1
@.str.160 = private unnamed_addr constant [26 x i8] c"maximum number of streams\00", align 1
@.str.161 = private unnamed_addr constant [32 x i8] c"skip_estimate_duration_from_pts\00", align 1
@.str.162 = private unnamed_addr constant [55 x i8] c"skip duration calculation in estimate_timings_from_pts\00", align 1
@avformat_options = internal constant <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* null, i32 1292, i32 0, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 32768 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i32 0, i32 0), i32 1128, i32 2, %union.anon { i64 5000000 }, double 3.200000e+01, double 0x43E0000000000000, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.34, i32 0, i32 0), i32 1328, i32 1, %union.anon { i64 1048576 }, double 0.000000e+00, double 0x41DFFFFFFF800000, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i32 0, i32 0), i32 1112, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), i8* null, i32 1120, i32 0, %union.anon { i64 2097152 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.39, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 512 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.45, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.47, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 32 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.49, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.51, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 256 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.53, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 65536 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.55, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 262144 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.57, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 524288 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.55, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 32768 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.60, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 64 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.62, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1024 }, double 0.000000e+00, double 0.000000e+00, i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.64, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1048576 }, double 0.000000e+00, double 0.000000e+00, i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.66, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2097152 }, double 0.000000e+00, double 0.000000e+00, i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.68, i32 0, i32 0), i32 1316, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.70, i32 0, i32 0), i32 1136, i32 2, %union.anon zeroinitializer, double 0.000000e+00, double 0x43E0000000000000, i32 2, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0), i32 1144, i32 7, { double } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.74, i32 0, i32 0), i32 1180, i32 1, %union.anon { i64 1048576 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.76, i32 0, i32 0), i32 1184, i32 1, %union.anon { i64 3041280 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.78, i32 0, i32 0), i32 1240, i32 0, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.81, i32 0, i32 0), i32 1116, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 3, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.83, i32 0, i32 0), i32 1208, i32 2, %union.anon { i64 -9223372036854775808 }, double 0xC3E0000000000000, double 0x43E0000000000000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.85, i32 0, i32 0), i32 1216, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFF800000, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.87, i32 0, i32 0), i32 1276, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFF800000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.89, i32 0, i32 0), i32 1280, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFF800000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.91, i32 0, i32 0), i32 1284, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFF800000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.93, i32 0, i32 0), i32 1220, i32 0, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.95, i32 0, i32 0), i32 1220, i32 0, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.97, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.99, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.101, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.103, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.105, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 32768 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.107, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 65536 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.109, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 131072 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.111, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 262144 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.113, i32 0, i32 0), i32 1288, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.115, i32 0, i32 0), i32 1304, i32 2, %union.anon zeroinitializer, double 0.000000e+00, double 0x43E0000000000000, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.117, i32 0, i32 0), i32 1312, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.118, i32 0, i32 0), i32 1320, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 1.000000e+00, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.120, i32 0, i32 0), i32 1400, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.122, i32 0, i32 0), i32 1424, i32 15, %union.anon zeroinitializer, double 0xC3E0000000000000, double 0x43E0000000000000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.124, i32 0, i32 0), i32 1248, i32 2, %union.anon { i64 10000000 }, double 0.000000e+00, double 0x43E0000000000000, i32 1, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.126, i32 0, i32 0), i32 1256, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.128, i32 0, i32 0), i32 1256, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.130, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.131, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.132, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.134, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 -1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.136, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 -2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.138, i32 0, i32 0), i32 1264, i32 1, %union.anon { i64 50 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.140, i32 0, i32 0), i32 1268, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 2.000000e+00, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.139, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.142, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 -1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.139, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.144, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.139, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.146, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.139, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.140, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.139, i32 0, i32 0) }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.149, i32 0, i32 0), i32 1432, i32 5, { i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.150, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 3, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.152, i32 0, i32 0), i32 1336, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 2, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.154, i32 0, i32 0), i32 1344, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 2, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.156, i32 0, i32 0), i32 1456, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 2, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.158, i32 0, i32 0), i32 1480, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.160, i32 0, i32 0), i32 1488, i32 1, %union.anon { i64 1000 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 2, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.162, i32 0, i32 0), i32 1492, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 2, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@.str.164 = private unnamed_addr constant [26 x i8] c"@section Codec AVOptions\0A\00", align 1
@.str.165 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.166 = private unnamed_addr constant [24 x i8] c"set bitrate (in bits/s)\00", align 1
@.str.167 = private unnamed_addr constant [3 x i8] c"ab\00", align 1
@.str.168 = private unnamed_addr constant [3 x i8] c"bt\00", align 1
@.str.169 = private unnamed_addr constant [276 x i8] c"Set video bitrate tolerance (in bits/s). In 1-pass mode, bitrate tolerance specifies how far ratecontrol is willing to deviate from the target average bitrate value. This is not related to minimum/maximum bitrate. Lowering tolerance too much has an adverse effect on quality.\00", align 1
@.str.170 = private unnamed_addr constant [10 x i8] c"unaligned\00", align 1
@.str.171 = private unnamed_addr constant [43 x i8] c"allow decoders to produce unaligned output\00", align 1
@.str.172 = private unnamed_addr constant [4 x i8] c"mv4\00", align 1
@.str.173 = private unnamed_addr constant [48 x i8] c"use four motion vectors per macroblock (MPEG-4)\00", align 1
@.str.174 = private unnamed_addr constant [5 x i8] c"qpel\00", align 1
@.str.175 = private unnamed_addr constant [32 x i8] c"use 1/4-pel motion compensation\00", align 1
@.str.176 = private unnamed_addr constant [5 x i8] c"loop\00", align 1
@.str.177 = private unnamed_addr constant [16 x i8] c"use loop filter\00", align 1
@.str.178 = private unnamed_addr constant [7 x i8] c"qscale\00", align 1
@.str.179 = private unnamed_addr constant [17 x i8] c"use fixed qscale\00", align 1
@.str.180 = private unnamed_addr constant [6 x i8] c"pass1\00", align 1
@.str.181 = private unnamed_addr constant [52 x i8] c"use internal 2-pass ratecontrol in first  pass mode\00", align 1
@.str.182 = private unnamed_addr constant [6 x i8] c"pass2\00", align 1
@.str.183 = private unnamed_addr constant [52 x i8] c"use internal 2-pass ratecontrol in second pass mode\00", align 1
@.str.184 = private unnamed_addr constant [5 x i8] c"gray\00", align 1
@.str.185 = private unnamed_addr constant [29 x i8] c"only decode/encode grayscale\00", align 1
@.str.186 = private unnamed_addr constant [5 x i8] c"psnr\00", align 1
@.str.187 = private unnamed_addr constant [47 x i8] c"error[?] variables will be set during encoding\00", align 1
@.str.188 = private unnamed_addr constant [10 x i8] c"truncated\00", align 1
@.str.189 = private unnamed_addr constant [44 x i8] c"Input bitstream might be randomly truncated\00", align 1
@.str.190 = private unnamed_addr constant [6 x i8] c"ildct\00", align 1
@.str.191 = private unnamed_addr constant [19 x i8] c"use interlaced DCT\00", align 1
@.str.192 = private unnamed_addr constant [10 x i8] c"low_delay\00", align 1
@.str.193 = private unnamed_addr constant [16 x i8] c"force low delay\00", align 1
@.str.194 = private unnamed_addr constant [14 x i8] c"global_header\00", align 1
@.str.195 = private unnamed_addr constant [60 x i8] c"place global headers in extradata instead of every keyframe\00", align 1
@.str.196 = private unnamed_addr constant [44 x i8] c"use only bitexact functions (except (I)DCT)\00", align 1
@.str.197 = private unnamed_addr constant [4 x i8] c"aic\00", align 1
@.str.198 = private unnamed_addr constant [51 x i8] c"H.263 advanced intra coding / MPEG-4 AC prediction\00", align 1
@.str.199 = private unnamed_addr constant [5 x i8] c"ilme\00", align 1
@.str.200 = private unnamed_addr constant [29 x i8] c"interlaced motion estimation\00", align 1
@.str.201 = private unnamed_addr constant [5 x i8] c"cgop\00", align 1
@.str.202 = private unnamed_addr constant [11 x i8] c"closed GOP\00", align 1
@.str.203 = private unnamed_addr constant [15 x i8] c"output_corrupt\00", align 1
@.str.204 = private unnamed_addr constant [41 x i8] c"Output even potentially corrupted frames\00", align 1
@.str.205 = private unnamed_addr constant [7 x i8] c"flags2\00", align 1
@.str.206 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.207 = private unnamed_addr constant [40 x i8] c"allow non-spec-compliant speedup tricks\00", align 1
@.str.208 = private unnamed_addr constant [6 x i8] c"noout\00", align 1
@.str.209 = private unnamed_addr constant [24 x i8] c"skip bitstream encoding\00", align 1
@.str.210 = private unnamed_addr constant [11 x i8] c"ignorecrop\00", align 1
@.str.211 = private unnamed_addr constant [37 x i8] c"ignore cropping information from sps\00", align 1
@.str.212 = private unnamed_addr constant [13 x i8] c"local_header\00", align 1
@.str.213 = private unnamed_addr constant [63 x i8] c"place global headers at every keyframe instead of in extradata\00", align 1
@.str.214 = private unnamed_addr constant [7 x i8] c"chunks\00", align 1
@.str.215 = private unnamed_addr constant [47 x i8] c"Frame data might be split into multiple chunks\00", align 1
@.str.216 = private unnamed_addr constant [8 x i8] c"showall\00", align 1
@.str.217 = private unnamed_addr constant [42 x i8] c"Show all frames before the first keyframe\00", align 1
@.str.218 = private unnamed_addr constant [11 x i8] c"export_mvs\00", align 1
@.str.219 = private unnamed_addr constant [46 x i8] c"export motion vectors through frame side data\00", align 1
@.str.220 = private unnamed_addr constant [12 x i8] c"skip_manual\00", align 1
@.str.221 = private unnamed_addr constant [67 x i8] c"do not skip samples and export skip information as frame side data\00", align 1
@.str.222 = private unnamed_addr constant [18 x i8] c"ass_ro_flush_noop\00", align 1
@.str.223 = private unnamed_addr constant [42 x i8] c"do not reset ASS ReadOrder field on flush\00", align 1
@.str.224 = private unnamed_addr constant [10 x i8] c"time_base\00", align 1
@.str.225 = private unnamed_addr constant [2 x i8] c"g\00", align 1
@.str.226 = private unnamed_addr constant [36 x i8] c"set the group of picture (GOP) size\00", align 1
@.str.227 = private unnamed_addr constant [3 x i8] c"ar\00", align 1
@.str.228 = private unnamed_addr constant [32 x i8] c"set audio sampling rate (in Hz)\00", align 1
@.str.229 = private unnamed_addr constant [3 x i8] c"ac\00", align 1
@.str.230 = private unnamed_addr constant [29 x i8] c"set number of audio channels\00", align 1
@.str.231 = private unnamed_addr constant [7 x i8] c"cutoff\00", align 1
@.str.232 = private unnamed_addr constant [21 x i8] c"set cutoff bandwidth\00", align 1
@.str.233 = private unnamed_addr constant [11 x i8] c"frame_size\00", align 1
@.str.234 = private unnamed_addr constant [13 x i8] c"frame_number\00", align 1
@.str.235 = private unnamed_addr constant [6 x i8] c"delay\00", align 1
@.str.236 = private unnamed_addr constant [6 x i8] c"qcomp\00", align 1
@.str.237 = private unnamed_addr constant [120 x i8] c"video quantizer scale compression (VBR). Constant of ratecontrol equation. Recommended range for default rc_eq: 0.0-1.0\00", align 1
@.str.238 = private unnamed_addr constant [6 x i8] c"qblur\00", align 1
@.str.239 = private unnamed_addr constant [33 x i8] c"video quantizer scale blur (VBR)\00", align 1
@.str.240 = private unnamed_addr constant [5 x i8] c"qmin\00", align 1
@.str.241 = private unnamed_addr constant [36 x i8] c"minimum video quantizer scale (VBR)\00", align 1
@.str.242 = private unnamed_addr constant [5 x i8] c"qmax\00", align 1
@.str.243 = private unnamed_addr constant [36 x i8] c"maximum video quantizer scale (VBR)\00", align 1
@.str.244 = private unnamed_addr constant [6 x i8] c"qdiff\00", align 1
@.str.245 = private unnamed_addr constant [54 x i8] c"maximum difference between the quantizer scales (VBR)\00", align 1
@.str.246 = private unnamed_addr constant [3 x i8] c"bf\00", align 1
@.str.247 = private unnamed_addr constant [52 x i8] c"set maximum number of B-frames between non-B-frames\00", align 1
@.str.248 = private unnamed_addr constant [10 x i8] c"b_qfactor\00", align 1
@.str.249 = private unnamed_addr constant [34 x i8] c"QP factor between P- and B-frames\00", align 1
@.str.250 = private unnamed_addr constant [11 x i8] c"b_strategy\00", align 1
@.str.251 = private unnamed_addr constant [40 x i8] c"strategy to choose between I/P/B-frames\00", align 1
@.str.252 = private unnamed_addr constant [3 x i8] c"ps\00", align 1
@.str.253 = private unnamed_addr constant [26 x i8] c"RTP payload size in bytes\00", align 1
@.str.254 = private unnamed_addr constant [8 x i8] c"mv_bits\00", align 1
@.str.255 = private unnamed_addr constant [12 x i8] c"header_bits\00", align 1
@.str.256 = private unnamed_addr constant [11 x i8] c"i_tex_bits\00", align 1
@.str.257 = private unnamed_addr constant [11 x i8] c"p_tex_bits\00", align 1
@.str.258 = private unnamed_addr constant [8 x i8] c"i_count\00", align 1
@.str.259 = private unnamed_addr constant [8 x i8] c"p_count\00", align 1
@.str.260 = private unnamed_addr constant [11 x i8] c"skip_count\00", align 1
@.str.261 = private unnamed_addr constant [10 x i8] c"misc_bits\00", align 1
@.str.262 = private unnamed_addr constant [11 x i8] c"frame_bits\00", align 1
@.str.263 = private unnamed_addr constant [10 x i8] c"codec_tag\00", align 1
@.str.264 = private unnamed_addr constant [4 x i8] c"bug\00", align 1
@.str.265 = private unnamed_addr constant [42 x i8] c"work around not autodetected encoder bugs\00", align 1
@.str.266 = private unnamed_addr constant [11 x i8] c"autodetect\00", align 1
@.str.267 = private unnamed_addr constant [11 x i8] c"xvid_ilace\00", align 1
@.str.268 = private unnamed_addr constant [54 x i8] c"Xvid interlacing bug (autodetected if FOURCC == XVIX)\00", align 1
@.str.269 = private unnamed_addr constant [5 x i8] c"ump4\00", align 1
@.str.270 = private unnamed_addr constant [33 x i8] c"(autodetected if FOURCC == UMP4)\00", align 1
@.str.271 = private unnamed_addr constant [11 x i8] c"no_padding\00", align 1
@.str.272 = private unnamed_addr constant [27 x i8] c"padding bug (autodetected)\00", align 1
@.str.273 = private unnamed_addr constant [4 x i8] c"amv\00", align 1
@.str.274 = private unnamed_addr constant [12 x i8] c"qpel_chroma\00", align 1
@.str.275 = private unnamed_addr constant [9 x i8] c"std_qpel\00", align 1
@.str.276 = private unnamed_addr constant [52 x i8] c"old standard qpel (autodetected per FOURCC/version)\00", align 1
@.str.277 = private unnamed_addr constant [13 x i8] c"qpel_chroma2\00", align 1
@.str.278 = private unnamed_addr constant [17 x i8] c"direct_blocksize\00", align 1
@.str.279 = private unnamed_addr constant [60 x i8] c"direct-qpel-blocksize bug (autodetected per FOURCC/version)\00", align 1
@.str.280 = private unnamed_addr constant [5 x i8] c"edge\00", align 1
@.str.281 = private unnamed_addr constant [51 x i8] c"edge padding bug (autodetected per FOURCC/version)\00", align 1
@.str.282 = private unnamed_addr constant [12 x i8] c"hpel_chroma\00", align 1
@.str.283 = private unnamed_addr constant [8 x i8] c"dc_clip\00", align 1
@.str.284 = private unnamed_addr constant [3 x i8] c"ms\00", align 1
@.str.285 = private unnamed_addr constant [56 x i8] c"work around various bugs in Microsoft's broken decoders\00", align 1
@.str.286 = private unnamed_addr constant [6 x i8] c"trunc\00", align 1
@.str.287 = private unnamed_addr constant [17 x i8] c"truncated frames\00", align 1
@.str.288 = private unnamed_addr constant [6 x i8] c"iedge\00", align 1
@.str.289 = private unnamed_addr constant [43 x i8] c"allow non-standardized experimental things\00", align 1
@.str.290 = private unnamed_addr constant [10 x i8] c"b_qoffset\00", align 1
@.str.291 = private unnamed_addr constant [34 x i8] c"QP offset between P- and B-frames\00", align 1
@.str.292 = private unnamed_addr constant [62 x i8] c"consider things that a sane encoder should not do as an error\00", align 1
@.str.293 = private unnamed_addr constant [13 x i8] c"has_b_frames\00", align 1
@.str.294 = private unnamed_addr constant [12 x i8] c"block_align\00", align 1
@.str.295 = private unnamed_addr constant [11 x i8] c"mpeg_quant\00", align 1
@.str.296 = private unnamed_addr constant [37 x i8] c"use MPEG quantizers instead of H.263\00", align 1
@.str.297 = private unnamed_addr constant [18 x i8] c"rc_override_count\00", align 1
@.str.298 = private unnamed_addr constant [8 x i8] c"maxrate\00", align 1
@.str.299 = private unnamed_addr constant [65 x i8] c"maximum bitrate (in bits/s). Used for VBV together with bufsize.\00", align 1
@.str.300 = private unnamed_addr constant [8 x i8] c"minrate\00", align 1
@.str.301 = private unnamed_addr constant [100 x i8] c"minimum bitrate (in bits/s). Most useful in setting up a CBR encode. It is of little use otherwise.\00", align 1
@.str.302 = private unnamed_addr constant [8 x i8] c"bufsize\00", align 1
@.str.303 = private unnamed_addr constant [38 x i8] c"set ratecontrol buffer size (in bits)\00", align 1
@.str.304 = private unnamed_addr constant [10 x i8] c"i_qfactor\00", align 1
@.str.305 = private unnamed_addr constant [34 x i8] c"QP factor between P- and I-frames\00", align 1
@.str.306 = private unnamed_addr constant [10 x i8] c"i_qoffset\00", align 1
@.str.307 = private unnamed_addr constant [34 x i8] c"QP offset between P- and I-frames\00", align 1
@.str.308 = private unnamed_addr constant [4 x i8] c"dct\00", align 1
@.str.309 = private unnamed_addr constant [14 x i8] c"DCT algorithm\00", align 1
@.str.310 = private unnamed_addr constant [22 x i8] c"autoselect a good one\00", align 1
@.str.311 = private unnamed_addr constant [8 x i8] c"fastint\00", align 1
@.str.312 = private unnamed_addr constant [13 x i8] c"fast integer\00", align 1
@.str.313 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.314 = private unnamed_addr constant [17 x i8] c"accurate integer\00", align 1
@.str.315 = private unnamed_addr constant [4 x i8] c"mmx\00", align 1
@.str.316 = private unnamed_addr constant [8 x i8] c"altivec\00", align 1
@.str.317 = private unnamed_addr constant [5 x i8] c"faan\00", align 1
@.str.318 = private unnamed_addr constant [23 x i8] c"floating point AAN DCT\00", align 1
@.str.319 = private unnamed_addr constant [10 x i8] c"lumi_mask\00", align 1
@.str.320 = private unnamed_addr constant [50 x i8] c"compresses bright areas stronger than medium ones\00", align 1
@.str.321 = private unnamed_addr constant [11 x i8] c"tcplx_mask\00", align 1
@.str.322 = private unnamed_addr constant [28 x i8] c"temporal complexity masking\00", align 1
@.str.323 = private unnamed_addr constant [11 x i8] c"scplx_mask\00", align 1
@.str.324 = private unnamed_addr constant [27 x i8] c"spatial complexity masking\00", align 1
@.str.325 = private unnamed_addr constant [7 x i8] c"p_mask\00", align 1
@.str.326 = private unnamed_addr constant [14 x i8] c"inter masking\00", align 1
@.str.327 = private unnamed_addr constant [10 x i8] c"dark_mask\00", align 1
@.str.328 = private unnamed_addr constant [48 x i8] c"compresses dark areas stronger than medium ones\00", align 1
@.str.329 = private unnamed_addr constant [5 x i8] c"idct\00", align 1
@.str.330 = private unnamed_addr constant [27 x i8] c"select IDCT implementation\00", align 1
@.str.331 = private unnamed_addr constant [7 x i8] c"simple\00", align 1
@.str.332 = private unnamed_addr constant [10 x i8] c"simplemmx\00", align 1
@.str.333 = private unnamed_addr constant [4 x i8] c"arm\00", align 1
@.str.334 = private unnamed_addr constant [10 x i8] c"simplearm\00", align 1
@.str.335 = private unnamed_addr constant [14 x i8] c"simplearmv5te\00", align 1
@.str.336 = private unnamed_addr constant [12 x i8] c"simplearmv6\00", align 1
@.str.337 = private unnamed_addr constant [11 x i8] c"simpleneon\00", align 1
@.str.338 = private unnamed_addr constant [5 x i8] c"xvid\00", align 1
@.str.339 = private unnamed_addr constant [8 x i8] c"xvidmmx\00", align 1
@.str.340 = private unnamed_addr constant [35 x i8] c"deprecated, for compatibility only\00", align 1
@.str.341 = private unnamed_addr constant [6 x i8] c"faani\00", align 1
@.str.342 = private unnamed_addr constant [24 x i8] c"floating point AAN IDCT\00", align 1
@.str.343 = private unnamed_addr constant [11 x i8] c"simpleauto\00", align 1
@.str.344 = private unnamed_addr constant [12 x i8] c"slice_count\00", align 1
@.str.345 = private unnamed_addr constant [3 x i8] c"ec\00", align 1
@.str.346 = private unnamed_addr constant [31 x i8] c"set error concealment strategy\00", align 1
@.str.347 = private unnamed_addr constant [10 x i8] c"guess_mvs\00", align 1
@.str.348 = private unnamed_addr constant [43 x i8] c"iterative motion vector (MV) search (slow)\00", align 1
@.str.349 = private unnamed_addr constant [8 x i8] c"deblock\00", align 1
@.str.350 = private unnamed_addr constant [42 x i8] c"use strong deblock filter for damaged MBs\00", align 1
@.str.351 = private unnamed_addr constant [12 x i8] c"favor_inter\00", align 1
@.str.352 = private unnamed_addr constant [41 x i8] c"favor predicting from the previous frame\00", align 1
@.str.353 = private unnamed_addr constant [22 x i8] c"bits_per_coded_sample\00", align 1
@.str.354 = private unnamed_addr constant [5 x i8] c"pred\00", align 1
@.str.355 = private unnamed_addr constant [18 x i8] c"prediction method\00", align 1
@.str.356 = private unnamed_addr constant [5 x i8] c"left\00", align 1
@.str.357 = private unnamed_addr constant [6 x i8] c"plane\00", align 1
@.str.358 = private unnamed_addr constant [7 x i8] c"median\00", align 1
@.str.359 = private unnamed_addr constant [7 x i8] c"aspect\00", align 1
@.str.360 = private unnamed_addr constant [20 x i8] c"sample aspect ratio\00", align 1
@.str.361 = private unnamed_addr constant [4 x i8] c"sar\00", align 1
@.str.362 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.363 = private unnamed_addr constant [5 x i8] c"pict\00", align 1
@.str.364 = private unnamed_addr constant [13 x i8] c"picture info\00", align 1
@.str.365 = private unnamed_addr constant [3 x i8] c"rc\00", align 1
@.str.366 = private unnamed_addr constant [13 x i8] c"rate control\00", align 1
@.str.367 = private unnamed_addr constant [8 x i8] c"mb_type\00", align 1
@.str.368 = private unnamed_addr constant [21 x i8] c"macroblock (MB) type\00", align 1
@.str.369 = private unnamed_addr constant [3 x i8] c"qp\00", align 1
@.str.370 = private unnamed_addr constant [38 x i8] c"per-block quantization parameter (QP)\00", align 1
@.str.371 = private unnamed_addr constant [10 x i8] c"dct_coeff\00", align 1
@.str.372 = private unnamed_addr constant [15 x i8] c"green_metadata\00", align 1
@.str.373 = private unnamed_addr constant [5 x i8] c"skip\00", align 1
@.str.374 = private unnamed_addr constant [10 x i8] c"startcode\00", align 1
@.str.375 = private unnamed_addr constant [3 x i8] c"er\00", align 1
@.str.376 = private unnamed_addr constant [18 x i8] c"error recognition\00", align 1
@.str.377 = private unnamed_addr constant [5 x i8] c"mmco\00", align 1
@.str.378 = private unnamed_addr constant [45 x i8] c"memory management control operations (H.264)\00", align 1
@.str.379 = private unnamed_addr constant [5 x i8] c"bugs\00", align 1
@.str.380 = private unnamed_addr constant [8 x i8] c"buffers\00", align 1
@.str.381 = private unnamed_addr constant [27 x i8] c"picture buffer allocations\00", align 1
@.str.382 = private unnamed_addr constant [11 x i8] c"thread_ops\00", align 1
@.str.383 = private unnamed_addr constant [21 x i8] c"threading operations\00", align 1
@.str.384 = private unnamed_addr constant [5 x i8] c"nomc\00", align 1
@.str.385 = private unnamed_addr constant [25 x i8] c"skip motion compensation\00", align 1
@.str.386 = private unnamed_addr constant [9 x i8] c"dia_size\00", align 1
@.str.387 = private unnamed_addr constant [42 x i8] c"diamond type & size for motion estimation\00", align 1
@.str.388 = private unnamed_addr constant [10 x i8] c"last_pred\00", align 1
@.str.389 = private unnamed_addr constant [52 x i8] c"amount of motion predictors from the previous frame\00", align 1
@.str.390 = private unnamed_addr constant [6 x i8] c"preme\00", align 1
@.str.391 = private unnamed_addr constant [22 x i8] c"pre motion estimation\00", align 1
@.str.392 = private unnamed_addr constant [13 x i8] c"pre_dia_size\00", align 1
@.str.393 = private unnamed_addr constant [51 x i8] c"diamond type & size for motion estimation pre-pass\00", align 1
@.str.394 = private unnamed_addr constant [5 x i8] c"subq\00", align 1
@.str.395 = private unnamed_addr constant [34 x i8] c"sub-pel motion estimation quality\00", align 1
@.str.396 = private unnamed_addr constant [9 x i8] c"me_range\00", align 1
@.str.397 = private unnamed_addr constant [50 x i8] c"limit motion vectors range (1023 for DivX player)\00", align 1
@.str.398 = private unnamed_addr constant [15 x i8] c"global_quality\00", align 1
@.str.399 = private unnamed_addr constant [6 x i8] c"coder\00", align 1
@.str.400 = private unnamed_addr constant [4 x i8] c"vlc\00", align 1
@.str.401 = private unnamed_addr constant [38 x i8] c"variable length coder / Huffman coder\00", align 1
@.str.402 = private unnamed_addr constant [17 x i8] c"arithmetic coder\00", align 1
@.str.403 = private unnamed_addr constant [4 x i8] c"raw\00", align 1
@.str.404 = private unnamed_addr constant [18 x i8] c"raw (no encoding)\00", align 1
@.str.405 = private unnamed_addr constant [4 x i8] c"rle\00", align 1
@.str.406 = private unnamed_addr constant [17 x i8] c"run-length coder\00", align 1
@.str.407 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.408 = private unnamed_addr constant [14 x i8] c"context model\00", align 1
@.str.409 = private unnamed_addr constant [12 x i8] c"slice_flags\00", align 1
@.str.410 = private unnamed_addr constant [4 x i8] c"mbd\00", align 1
@.str.411 = private unnamed_addr constant [50 x i8] c"macroblock decision algorithm (high quality mode)\00", align 1
@.str.412 = private unnamed_addr constant [10 x i8] c"use mbcmp\00", align 1
@.str.413 = private unnamed_addr constant [5 x i8] c"bits\00", align 1
@.str.414 = private unnamed_addr constant [16 x i8] c"use fewest bits\00", align 1
@.str.415 = private unnamed_addr constant [3 x i8] c"rd\00", align 1
@.str.416 = private unnamed_addr constant [25 x i8] c"use best rate distortion\00", align 1
@.str.417 = private unnamed_addr constant [13 x i8] c"sc_threshold\00", align 1
@.str.418 = private unnamed_addr constant [23 x i8] c"scene change threshold\00", align 1
@.str.419 = private unnamed_addr constant [3 x i8] c"nr\00", align 1
@.str.420 = private unnamed_addr constant [16 x i8] c"noise reduction\00", align 1
@.str.421 = private unnamed_addr constant [18 x i8] c"rc_init_occupancy\00", align 1
@.str.422 = private unnamed_addr constant [80 x i8] c"number of bits which should be loaded into the rc buffer before decoding starts\00", align 1
@.str.423 = private unnamed_addr constant [8 x i8] c"threads\00", align 1
@.str.424 = private unnamed_addr constant [26 x i8] c"set the number of threads\00", align 1
@.str.425 = private unnamed_addr constant [47 x i8] c"autodetect a suitable number of threads to use\00", align 1
@.str.426 = private unnamed_addr constant [3 x i8] c"dc\00", align 1
@.str.427 = private unnamed_addr constant [19 x i8] c"intra_dc_precision\00", align 1
@.str.428 = private unnamed_addr constant [6 x i8] c"nssew\00", align 1
@.str.429 = private unnamed_addr constant [12 x i8] c"nsse weight\00", align 1
@.str.430 = private unnamed_addr constant [9 x i8] c"skip_top\00", align 1
@.str.431 = private unnamed_addr constant [55 x i8] c"number of macroblock rows at the top which are skipped\00", align 1
@.str.432 = private unnamed_addr constant [12 x i8] c"skip_bottom\00", align 1
@.str.433 = private unnamed_addr constant [58 x i8] c"number of macroblock rows at the bottom which are skipped\00", align 1
@.str.434 = private unnamed_addr constant [8 x i8] c"profile\00", align 1
@.str.435 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.436 = private unnamed_addr constant [9 x i8] c"aac_main\00", align 1
@.str.437 = private unnamed_addr constant [8 x i8] c"aac_low\00", align 1
@.str.438 = private unnamed_addr constant [8 x i8] c"aac_ssr\00", align 1
@.str.439 = private unnamed_addr constant [8 x i8] c"aac_ltp\00", align 1
@.str.440 = private unnamed_addr constant [7 x i8] c"aac_he\00", align 1
@.str.441 = private unnamed_addr constant [10 x i8] c"aac_he_v2\00", align 1
@.str.442 = private unnamed_addr constant [7 x i8] c"aac_ld\00", align 1
@.str.443 = private unnamed_addr constant [8 x i8] c"aac_eld\00", align 1
@.str.444 = private unnamed_addr constant [14 x i8] c"mpeg2_aac_low\00", align 1
@.str.445 = private unnamed_addr constant [13 x i8] c"mpeg2_aac_he\00", align 1
@.str.446 = private unnamed_addr constant [4 x i8] c"dts\00", align 1
@.str.447 = private unnamed_addr constant [7 x i8] c"dts_es\00", align 1
@.str.448 = private unnamed_addr constant [10 x i8] c"dts_96_24\00", align 1
@.str.449 = private unnamed_addr constant [11 x i8] c"dts_hd_hra\00", align 1
@.str.450 = private unnamed_addr constant [10 x i8] c"dts_hd_ma\00", align 1
@.str.451 = private unnamed_addr constant [9 x i8] c"mpeg4_sp\00", align 1
@.str.452 = private unnamed_addr constant [11 x i8] c"mpeg4_core\00", align 1
@.str.453 = private unnamed_addr constant [11 x i8] c"mpeg4_main\00", align 1
@.str.454 = private unnamed_addr constant [10 x i8] c"mpeg4_asp\00", align 1
@.str.455 = private unnamed_addr constant [7 x i8] c"main10\00", align 1
@.str.456 = private unnamed_addr constant [5 x i8] c"msbc\00", align 1
@.str.457 = private unnamed_addr constant [6 x i8] c"level\00", align 1
@.str.458 = private unnamed_addr constant [7 x i8] c"lowres\00", align 1
@.str.459 = private unnamed_addr constant [43 x i8] c"decode at 1= 1/2, 2=1/4, 3=1/8 resolutions\00", align 1
@.str.460 = private unnamed_addr constant [15 x i8] c"skip_threshold\00", align 1
@.str.461 = private unnamed_addr constant [21 x i8] c"frame skip threshold\00", align 1
@.str.462 = private unnamed_addr constant [12 x i8] c"skip_factor\00", align 1
@.str.463 = private unnamed_addr constant [18 x i8] c"frame skip factor\00", align 1
@.str.464 = private unnamed_addr constant [9 x i8] c"skip_exp\00", align 1
@.str.465 = private unnamed_addr constant [20 x i8] c"frame skip exponent\00", align 1
@.str.466 = private unnamed_addr constant [8 x i8] c"skipcmp\00", align 1
@.str.467 = private unnamed_addr constant [28 x i8] c"frame skip compare function\00", align 1
@.str.468 = private unnamed_addr constant [9 x i8] c"cmp_func\00", align 1
@.str.469 = private unnamed_addr constant [4 x i8] c"cmp\00", align 1
@.str.470 = private unnamed_addr constant [29 x i8] c"full-pel ME compare function\00", align 1
@.str.471 = private unnamed_addr constant [7 x i8] c"subcmp\00", align 1
@.str.472 = private unnamed_addr constant [28 x i8] c"sub-pel ME compare function\00", align 1
@.str.473 = private unnamed_addr constant [6 x i8] c"mbcmp\00", align 1
@.str.474 = private unnamed_addr constant [28 x i8] c"macroblock compare function\00", align 1
@.str.475 = private unnamed_addr constant [9 x i8] c"ildctcmp\00", align 1
@.str.476 = private unnamed_addr constant [32 x i8] c"interlaced DCT compare function\00", align 1
@.str.477 = private unnamed_addr constant [7 x i8] c"precmp\00", align 1
@.str.478 = private unnamed_addr constant [39 x i8] c"pre motion estimation compare function\00", align 1
@.str.479 = private unnamed_addr constant [4 x i8] c"sad\00", align 1
@.str.480 = private unnamed_addr constant [34 x i8] c"sum of absolute differences, fast\00", align 1
@.str.481 = private unnamed_addr constant [4 x i8] c"sse\00", align 1
@.str.482 = private unnamed_addr constant [22 x i8] c"sum of squared errors\00", align 1
@.str.483 = private unnamed_addr constant [5 x i8] c"satd\00", align 1
@.str.484 = private unnamed_addr constant [49 x i8] c"sum of absolute Hadamard transformed differences\00", align 1
@.str.485 = private unnamed_addr constant [44 x i8] c"sum of absolute DCT transformed differences\00", align 1
@.str.486 = private unnamed_addr constant [56 x i8] c"sum of squared quantization errors (avoid, low quality)\00", align 1
@.str.487 = private unnamed_addr constant [4 x i8] c"bit\00", align 1
@.str.488 = private unnamed_addr constant [36 x i8] c"number of bits needed for the block\00", align 1
@.str.489 = private unnamed_addr constant [30 x i8] c"rate distortion optimal, slow\00", align 1
@.str.490 = private unnamed_addr constant [5 x i8] c"zero\00", align 1
@.str.491 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.492 = private unnamed_addr constant [5 x i8] c"vsad\00", align 1
@.str.493 = private unnamed_addr constant [37 x i8] c"sum of absolute vertical differences\00", align 1
@.str.494 = private unnamed_addr constant [5 x i8] c"vsse\00", align 1
@.str.495 = private unnamed_addr constant [36 x i8] c"sum of squared vertical differences\00", align 1
@.str.496 = private unnamed_addr constant [5 x i8] c"nsse\00", align 1
@.str.497 = private unnamed_addr constant [44 x i8] c"noise preserving sum of squared differences\00", align 1
@.str.498 = private unnamed_addr constant [7 x i8] c"dctmax\00", align 1
@.str.499 = private unnamed_addr constant [7 x i8] c"chroma\00", align 1
@.str.500 = private unnamed_addr constant [5 x i8] c"msad\00", align 1
@.str.501 = private unnamed_addr constant [46 x i8] c"sum of absolute differences, median predicted\00", align 1
@.str.502 = private unnamed_addr constant [7 x i8] c"mblmin\00", align 1
@.str.503 = private unnamed_addr constant [41 x i8] c"minimum macroblock Lagrange factor (VBR)\00", align 1
@.str.504 = private unnamed_addr constant [7 x i8] c"mblmax\00", align 1
@.str.505 = private unnamed_addr constant [41 x i8] c"maximum macroblock Lagrange factor (VBR)\00", align 1
@.str.506 = private unnamed_addr constant [5 x i8] c"mepc\00", align 1
@.str.507 = private unnamed_addr constant [59 x i8] c"motion estimation bitrate penalty compensation (1.0 = 256)\00", align 1
@.str.508 = private unnamed_addr constant [17 x i8] c"skip_loop_filter\00", align 1
@.str.509 = private unnamed_addr constant [52 x i8] c"skip loop filtering process for the selected frames\00", align 1
@.str.510 = private unnamed_addr constant [10 x i8] c"avdiscard\00", align 1
@.str.511 = private unnamed_addr constant [10 x i8] c"skip_idct\00", align 1
@.str.512 = private unnamed_addr constant [49 x i8] c"skip IDCT/dequantization for the selected frames\00", align 1
@.str.513 = private unnamed_addr constant [11 x i8] c"skip_frame\00", align 1
@.str.514 = private unnamed_addr constant [38 x i8] c"skip decoding for the selected frames\00", align 1
@.str.515 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.516 = private unnamed_addr constant [17 x i8] c"discard no frame\00", align 1
@.str.517 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.518 = private unnamed_addr constant [23 x i8] c"discard useless frames\00", align 1
@.str.519 = private unnamed_addr constant [6 x i8] c"noref\00", align 1
@.str.520 = private unnamed_addr constant [33 x i8] c"discard all non-reference frames\00", align 1
@.str.521 = private unnamed_addr constant [6 x i8] c"bidir\00", align 1
@.str.522 = private unnamed_addr constant [33 x i8] c"discard all bidirectional frames\00", align 1
@.str.523 = private unnamed_addr constant [6 x i8] c"nokey\00", align 1
@.str.524 = private unnamed_addr constant [36 x i8] c"discard all frames except keyframes\00", align 1
@.str.525 = private unnamed_addr constant [8 x i8] c"nointra\00", align 1
@.str.526 = private unnamed_addr constant [35 x i8] c"discard all frames except I frames\00", align 1
@.str.527 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.528 = private unnamed_addr constant [19 x i8] c"discard all frames\00", align 1
@.str.529 = private unnamed_addr constant [13 x i8] c"bidir_refine\00", align 1
@.str.530 = private unnamed_addr constant [64 x i8] c"refine the two motion vectors used in bidirectional macroblocks\00", align 1
@.str.531 = private unnamed_addr constant [10 x i8] c"brd_scale\00", align 1
@.str.532 = private unnamed_addr constant [46 x i8] c"downscale frames for dynamic B-frame decision\00", align 1
@.str.533 = private unnamed_addr constant [11 x i8] c"keyint_min\00", align 1
@.str.534 = private unnamed_addr constant [36 x i8] c"minimum interval between IDR-frames\00", align 1
@.str.535 = private unnamed_addr constant [5 x i8] c"refs\00", align 1
@.str.536 = private unnamed_addr constant [53 x i8] c"reference frames to consider for motion compensation\00", align 1
@.str.537 = private unnamed_addr constant [13 x i8] c"chromaoffset\00", align 1
@.str.538 = private unnamed_addr constant [27 x i8] c"chroma QP offset from luma\00", align 1
@.str.539 = private unnamed_addr constant [8 x i8] c"trellis\00", align 1
@.str.540 = private unnamed_addr constant [37 x i8] c"rate-distortion optimal quantization\00", align 1
@.str.541 = private unnamed_addr constant [14 x i8] c"mv0_threshold\00", align 1
@.str.542 = private unnamed_addr constant [14 x i8] c"b_sensitivity\00", align 1
@.str.543 = private unnamed_addr constant [41 x i8] c"adjust sensitivity of b_frame_strategy 1\00", align 1
@.str.544 = private unnamed_addr constant [18 x i8] c"compression_level\00", align 1
@.str.545 = private unnamed_addr constant [21 x i8] c"min_prediction_order\00", align 1
@.str.546 = private unnamed_addr constant [21 x i8] c"max_prediction_order\00", align 1
@.str.547 = private unnamed_addr constant [21 x i8] c"timecode_frame_start\00", align 1
@.str.548 = private unnamed_addr constant [58 x i8] c"GOP timecode frame start number, in non-drop-frame format\00", align 1
@.str.549 = private unnamed_addr constant [20 x i8] c"bits_per_raw_sample\00", align 1
@.str.550 = private unnamed_addr constant [15 x i8] c"channel_layout\00", align 1
@.str.551 = private unnamed_addr constant [23 x i8] c"request_channel_layout\00", align 1
@.str.552 = private unnamed_addr constant [15 x i8] c"rc_max_vbv_use\00", align 1
@.str.553 = private unnamed_addr constant [15 x i8] c"rc_min_vbv_use\00", align 1
@.str.554 = private unnamed_addr constant [16 x i8] c"ticks_per_frame\00", align 1
@.str.555 = private unnamed_addr constant [16 x i8] c"color_primaries\00", align 1
@.str.556 = private unnamed_addr constant [16 x i8] c"color primaries\00", align 1
@.str.557 = private unnamed_addr constant [21 x i8] c"color_primaries_type\00", align 1
@.str.558 = private unnamed_addr constant [6 x i8] c"bt709\00", align 1
@.str.559 = private unnamed_addr constant [7 x i8] c"BT.709\00", align 1
@.str.560 = private unnamed_addr constant [12 x i8] c"Unspecified\00", align 1
@.str.561 = private unnamed_addr constant [7 x i8] c"bt470m\00", align 1
@.str.562 = private unnamed_addr constant [9 x i8] c"BT.470 M\00", align 1
@.str.563 = private unnamed_addr constant [8 x i8] c"bt470bg\00", align 1
@.str.564 = private unnamed_addr constant [10 x i8] c"BT.470 BG\00", align 1
@.str.565 = private unnamed_addr constant [10 x i8] c"smpte170m\00", align 1
@.str.566 = private unnamed_addr constant [12 x i8] c"SMPTE 170 M\00", align 1
@.str.567 = private unnamed_addr constant [10 x i8] c"smpte240m\00", align 1
@.str.568 = private unnamed_addr constant [12 x i8] c"SMPTE 240 M\00", align 1
@.str.569 = private unnamed_addr constant [5 x i8] c"film\00", align 1
@.str.570 = private unnamed_addr constant [5 x i8] c"Film\00", align 1
@.str.571 = private unnamed_addr constant [7 x i8] c"bt2020\00", align 1
@.str.572 = private unnamed_addr constant [8 x i8] c"BT.2020\00", align 1
@.str.573 = private unnamed_addr constant [9 x i8] c"smpte428\00", align 1
@.str.574 = private unnamed_addr constant [12 x i8] c"SMPTE 428-1\00", align 1
@.str.575 = private unnamed_addr constant [11 x i8] c"smpte428_1\00", align 1
@.str.576 = private unnamed_addr constant [9 x i8] c"smpte431\00", align 1
@.str.577 = private unnamed_addr constant [12 x i8] c"SMPTE 431-2\00", align 1
@.str.578 = private unnamed_addr constant [9 x i8] c"smpte432\00", align 1
@.str.579 = private unnamed_addr constant [12 x i8] c"SMPTE 422-1\00", align 1
@.str.580 = private unnamed_addr constant [10 x i8] c"jedec-p22\00", align 1
@.str.581 = private unnamed_addr constant [10 x i8] c"JEDEC P22\00", align 1
@.str.582 = private unnamed_addr constant [12 x i8] c"unspecified\00", align 1
@.str.583 = private unnamed_addr constant [10 x i8] c"color_trc\00", align 1
@.str.584 = private unnamed_addr constant [31 x i8] c"color transfer characteristics\00", align 1
@.str.585 = private unnamed_addr constant [15 x i8] c"color_trc_type\00", align 1
@.str.586 = private unnamed_addr constant [8 x i8] c"gamma22\00", align 1
@.str.587 = private unnamed_addr constant [8 x i8] c"gamma28\00", align 1
@.str.588 = private unnamed_addr constant [7 x i8] c"linear\00", align 1
@.str.589 = private unnamed_addr constant [7 x i8] c"Linear\00", align 1
@.str.590 = private unnamed_addr constant [7 x i8] c"log100\00", align 1
@.str.591 = private unnamed_addr constant [4 x i8] c"Log\00", align 1
@.str.592 = private unnamed_addr constant [7 x i8] c"log316\00", align 1
@.str.593 = private unnamed_addr constant [16 x i8] c"Log square root\00", align 1
@.str.594 = private unnamed_addr constant [13 x i8] c"iec61966-2-4\00", align 1
@.str.595 = private unnamed_addr constant [14 x i8] c"IEC 61966-2-4\00", align 1
@.str.596 = private unnamed_addr constant [8 x i8] c"bt1361e\00", align 1
@.str.597 = private unnamed_addr constant [8 x i8] c"BT.1361\00", align 1
@.str.598 = private unnamed_addr constant [13 x i8] c"iec61966-2-1\00", align 1
@.str.599 = private unnamed_addr constant [14 x i8] c"IEC 61966-2-1\00", align 1
@.str.600 = private unnamed_addr constant [10 x i8] c"bt2020-10\00", align 1
@.str.601 = private unnamed_addr constant [17 x i8] c"BT.2020 - 10 bit\00", align 1
@.str.602 = private unnamed_addr constant [10 x i8] c"bt2020-12\00", align 1
@.str.603 = private unnamed_addr constant [17 x i8] c"BT.2020 - 12 bit\00", align 1
@.str.604 = private unnamed_addr constant [10 x i8] c"smpte2084\00", align 1
@.str.605 = private unnamed_addr constant [11 x i8] c"SMPTE 2084\00", align 1
@.str.606 = private unnamed_addr constant [13 x i8] c"arib-std-b67\00", align 1
@.str.607 = private unnamed_addr constant [13 x i8] c"ARIB STD-B67\00", align 1
@.str.608 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.609 = private unnamed_addr constant [9 x i8] c"log_sqrt\00", align 1
@.str.610 = private unnamed_addr constant [13 x i8] c"iec61966_2_4\00", align 1
@.str.611 = private unnamed_addr constant [7 x i8] c"bt1361\00", align 1
@.str.612 = private unnamed_addr constant [13 x i8] c"iec61966_2_1\00", align 1
@.str.613 = private unnamed_addr constant [13 x i8] c"bt2020_10bit\00", align 1
@.str.614 = private unnamed_addr constant [13 x i8] c"bt2020_12bit\00", align 1
@.str.615 = private unnamed_addr constant [11 x i8] c"colorspace\00", align 1
@.str.616 = private unnamed_addr constant [12 x i8] c"color space\00", align 1
@.str.617 = private unnamed_addr constant [16 x i8] c"colorspace_type\00", align 1
@.str.618 = private unnamed_addr constant [4 x i8] c"rgb\00", align 1
@.str.619 = private unnamed_addr constant [4 x i8] c"RGB\00", align 1
@.str.620 = private unnamed_addr constant [4 x i8] c"fcc\00", align 1
@.str.621 = private unnamed_addr constant [4 x i8] c"FCC\00", align 1
@.str.622 = private unnamed_addr constant [6 x i8] c"ycgco\00", align 1
@.str.623 = private unnamed_addr constant [6 x i8] c"YCGCO\00", align 1
@.str.624 = private unnamed_addr constant [9 x i8] c"bt2020nc\00", align 1
@.str.625 = private unnamed_addr constant [12 x i8] c"BT.2020 NCL\00", align 1
@.str.626 = private unnamed_addr constant [8 x i8] c"bt2020c\00", align 1
@.str.627 = private unnamed_addr constant [11 x i8] c"BT.2020 CL\00", align 1
@.str.628 = private unnamed_addr constant [10 x i8] c"smpte2085\00", align 1
@.str.629 = private unnamed_addr constant [11 x i8] c"SMPTE 2085\00", align 1
@.str.630 = private unnamed_addr constant [6 x i8] c"ycocg\00", align 1
@.str.631 = private unnamed_addr constant [11 x i8] c"bt2020_ncl\00", align 1
@.str.632 = private unnamed_addr constant [10 x i8] c"bt2020_cl\00", align 1
@.str.633 = private unnamed_addr constant [12 x i8] c"color_range\00", align 1
@.str.634 = private unnamed_addr constant [12 x i8] c"color range\00", align 1
@.str.635 = private unnamed_addr constant [17 x i8] c"color_range_type\00", align 1
@.str.636 = private unnamed_addr constant [3 x i8] c"tv\00", align 1
@.str.637 = private unnamed_addr constant [19 x i8] c"MPEG (219*2^(n-8))\00", align 1
@.str.638 = private unnamed_addr constant [3 x i8] c"pc\00", align 1
@.str.639 = private unnamed_addr constant [13 x i8] c"JPEG (2^n-1)\00", align 1
@.str.640 = private unnamed_addr constant [5 x i8] c"mpeg\00", align 1
@.str.641 = private unnamed_addr constant [5 x i8] c"jpeg\00", align 1
@.str.642 = private unnamed_addr constant [23 x i8] c"chroma_sample_location\00", align 1
@.str.643 = private unnamed_addr constant [23 x i8] c"chroma sample location\00", align 1
@.str.644 = private unnamed_addr constant [28 x i8] c"chroma_sample_location_type\00", align 1
@.str.645 = private unnamed_addr constant [5 x i8] c"Left\00", align 1
@.str.646 = private unnamed_addr constant [7 x i8] c"center\00", align 1
@.str.647 = private unnamed_addr constant [7 x i8] c"Center\00", align 1
@.str.648 = private unnamed_addr constant [8 x i8] c"topleft\00", align 1
@.str.649 = private unnamed_addr constant [9 x i8] c"Top-left\00", align 1
@.str.650 = private unnamed_addr constant [4 x i8] c"top\00", align 1
@.str.651 = private unnamed_addr constant [4 x i8] c"Top\00", align 1
@.str.652 = private unnamed_addr constant [11 x i8] c"bottomleft\00", align 1
@.str.653 = private unnamed_addr constant [12 x i8] c"Bottom-left\00", align 1
@.str.654 = private unnamed_addr constant [7 x i8] c"bottom\00", align 1
@.str.655 = private unnamed_addr constant [7 x i8] c"Bottom\00", align 1
@.str.656 = private unnamed_addr constant [17 x i8] c"log_level_offset\00", align 1
@.str.657 = private unnamed_addr constant [25 x i8] c"set the log level offset\00", align 1
@.str.658 = private unnamed_addr constant [7 x i8] c"slices\00", align 1
@.str.659 = private unnamed_addr constant [56 x i8] c"set the number of slices, used in parallelized encoding\00", align 1
@.str.660 = private unnamed_addr constant [12 x i8] c"thread_type\00", align 1
@.str.661 = private unnamed_addr constant [27 x i8] c"select multithreading type\00", align 1
@.str.662 = private unnamed_addr constant [6 x i8] c"slice\00", align 1
@.str.663 = private unnamed_addr constant [6 x i8] c"frame\00", align 1
@.str.664 = private unnamed_addr constant [19 x i8] c"audio_service_type\00", align 1
@.str.665 = private unnamed_addr constant [19 x i8] c"audio service type\00", align 1
@.str.666 = private unnamed_addr constant [3 x i8] c"ma\00", align 1
@.str.667 = private unnamed_addr constant [19 x i8] c"Main Audio Service\00", align 1
@.str.668 = private unnamed_addr constant [3 x i8] c"ef\00", align 1
@.str.669 = private unnamed_addr constant [8 x i8] c"Effects\00", align 1
@.str.670 = private unnamed_addr constant [3 x i8] c"vi\00", align 1
@.str.671 = private unnamed_addr constant [18 x i8] c"Visually Impaired\00", align 1
@.str.672 = private unnamed_addr constant [3 x i8] c"hi\00", align 1
@.str.673 = private unnamed_addr constant [17 x i8] c"Hearing Impaired\00", align 1
@.str.674 = private unnamed_addr constant [3 x i8] c"di\00", align 1
@.str.675 = private unnamed_addr constant [9 x i8] c"Dialogue\00", align 1
@.str.676 = private unnamed_addr constant [3 x i8] c"co\00", align 1
@.str.677 = private unnamed_addr constant [11 x i8] c"Commentary\00", align 1
@.str.678 = private unnamed_addr constant [3 x i8] c"em\00", align 1
@.str.679 = private unnamed_addr constant [10 x i8] c"Emergency\00", align 1
@.str.680 = private unnamed_addr constant [3 x i8] c"vo\00", align 1
@.str.681 = private unnamed_addr constant [11 x i8] c"Voice Over\00", align 1
@.str.682 = private unnamed_addr constant [3 x i8] c"ka\00", align 1
@.str.683 = private unnamed_addr constant [8 x i8] c"Karaoke\00", align 1
@.str.684 = private unnamed_addr constant [19 x i8] c"request_sample_fmt\00", align 1
@.str.685 = private unnamed_addr constant [43 x i8] c"sample format audio decoders should prefer\00", align 1
@.str.686 = private unnamed_addr constant [13 x i8] c"pkt_timebase\00", align 1
@.str.687 = private unnamed_addr constant [12 x i8] c"sub_charenc\00", align 1
@.str.688 = private unnamed_addr constant [44 x i8] c"set input text subtitles character encoding\00", align 1
@.str.689 = private unnamed_addr constant [17 x i8] c"sub_charenc_mode\00", align 1
@.str.690 = private unnamed_addr constant [49 x i8] c"set input text subtitles character encoding mode\00", align 1
@.str.691 = private unnamed_addr constant [11 x i8] c"do_nothing\00", align 1
@.str.692 = private unnamed_addr constant [12 x i8] c"pre_decoder\00", align 1
@.str.693 = private unnamed_addr constant [7 x i8] c"ignore\00", align 1
@.str.694 = private unnamed_addr constant [16 x i8] c"sub_text_format\00", align 1
@.str.695 = private unnamed_addr constant [33 x i8] c"set decoded text subtitle format\00", align 1
@.str.696 = private unnamed_addr constant [4 x i8] c"ass\00", align 1
@.str.697 = private unnamed_addr constant [17 x i8] c"ass_with_timings\00", align 1
@.str.698 = private unnamed_addr constant [18 x i8] c"refcounted_frames\00", align 1
@.str.699 = private unnamed_addr constant [23 x i8] c"side_data_only_packets\00", align 1
@.str.700 = private unnamed_addr constant [15 x i8] c"apply_cropping\00", align 1
@.str.701 = private unnamed_addr constant [11 x i8] c"skip_alpha\00", align 1
@.str.702 = private unnamed_addr constant [22 x i8] c"Skip processing alpha\00", align 1
@.str.703 = private unnamed_addr constant [12 x i8] c"field_order\00", align 1
@.str.704 = private unnamed_addr constant [12 x i8] c"Field order\00", align 1
@.str.705 = private unnamed_addr constant [12 x i8] c"progressive\00", align 1
@.str.706 = private unnamed_addr constant [3 x i8] c"tt\00", align 1
@.str.707 = private unnamed_addr constant [3 x i8] c"bb\00", align 1
@.str.708 = private unnamed_addr constant [3 x i8] c"tb\00", align 1
@.str.709 = private unnamed_addr constant [13 x i8] c"pixel_format\00", align 1
@.str.710 = private unnamed_addr constant [17 x i8] c"set pixel format\00", align 1
@.str.711 = private unnamed_addr constant [11 x i8] c"video_size\00", align 1
@.str.712 = private unnamed_addr constant [15 x i8] c"set video size\00", align 1
@.str.713 = private unnamed_addr constant [11 x i8] c"max_pixels\00", align 1
@.str.714 = private unnamed_addr constant [25 x i8] c"Maximum number of pixels\00", align 1
@.str.715 = private unnamed_addr constant [14 x i8] c"hwaccel_flags\00", align 1
@.str.716 = private unnamed_addr constant [13 x i8] c"ignore_level\00", align 1
@.str.717 = private unnamed_addr constant [128 x i8] c"ignore level even if the codec level used is unknown or higher than the maximum supported level reported by the hardware driver\00", align 1
@.str.718 = private unnamed_addr constant [17 x i8] c"allow_high_depth\00", align 1
@.str.719 = private unnamed_addr constant [117 x i8] c"allow to output YUV pixel formats with a different chroma sampling than 4:2:0 and/or other than 8 bits per component\00", align 1
@.str.720 = private unnamed_addr constant [23 x i8] c"allow_profile_mismatch\00", align 1
@.str.721 = private unnamed_addr constant [104 x i8] c"attempt to decode anyway if HW accelerated decoder's supported profiles do not exactly match the stream\00", align 1
@.str.722 = private unnamed_addr constant [16 x i8] c"extra_hw_frames\00", align 1
@.str.723 = private unnamed_addr constant [57 x i8] c"Number of extra hardware frames to allocate for the user\00", align 1
@.str.724 = private unnamed_addr constant [27 x i8] c"discard_damaged_percentage\00", align 1
@.str.725 = private unnamed_addr constant [49 x i8] c"Percentage of damaged samples to discard a frame\00", align 1
@avcodec_options = internal constant <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.166, i32 0, i32 0), i32 56, i32 2, %union.anon { i64 200000 }, double 0.000000e+00, double 0x43E0000000000000, i32 25, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.166, i32 0, i32 0), i32 56, i32 2, %union.anon { i64 128000 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([276 x i8], [276 x i8]* @.str.169, i32 0, i32 0), i32 64, i32 1, %union.anon { i64 4000000 }, double 1.000000e+00, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i8* null, i32 76, i32 0, %union.anon zeroinitializer, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.171, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.173, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.175, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.177, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2048 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.179, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.181, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 512 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.183, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1024 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.185, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8192 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.187, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 32768 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.189, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 65536 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.191, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 262144 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.193, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 524288 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.195, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4194304 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.196, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8388608 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.198, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16777216 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.200, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 536870912 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.202, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2147483648 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.204, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0), i8* null, i32 80, i32 0, %union.anon zeroinitializer, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.207, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.209, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.211, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 65536 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.213, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.215, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 32768 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.217, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4194304 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.218, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.219, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 268435456 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.221, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 536870912 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.223, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1073741824 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 34, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.205, i32 0, i32 0) }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.224, i32 0, i32 0), i8* null, i32 100, i32 6, { double } zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.226, i32 0, i32 0), i32 132, i32 1, %union.anon { i64 12 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.228, i32 0, i32 0), i32 400, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 11, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i32 404, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 11, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.231, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.232, i32 0, i32 0), i32 424, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.233, i32 0, i32 0), i8* null, i32 412, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.234, i32 0, i32 0), i8* null, i32 416, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.235, i32 0, i32 0), i8* null, i32 112, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.237, i32 0, i32 0), i32 468, i32 4, { double } { double 5.000000e-01 }, double 0xC7EFFFFFE0000000, double 0x47EFFFFFE0000000, i32 17, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.239, i32 0, i32 0), i32 472, i32 4, { double } { double 5.000000e-01 }, double -1.000000e+00, double 0x47EFFFFFE0000000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.240, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.241, i32 0, i32 0), i32 476, i32 1, %union.anon { i64 2 }, double -1.000000e+00, double 6.900000e+01, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.242, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.243, i32 0, i32 0), i32 480, i32 1, %union.anon { i64 31 }, double -1.000000e+00, double 1.024000e+03, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.244, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.245, i32 0, i32 0), i32 484, i32 1, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.246, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.247, i32 0, i32 0), i32 160, i32 1, %union.anon zeroinitializer, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 17, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.248, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.249, i32 0, i32 0), i32 164, i32 4, { double } { double 1.250000e+00 }, double 0xC7EFFFFFE0000000, double 0x47EFFFFFE0000000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.250, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.251, i32 0, i32 0), i32 168, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.252, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.253, i32 0, i32 0), i32 584, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.254, i32 0, i32 0), i8* null, i32 588, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.255, i32 0, i32 0), i8* null, i32 592, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.256, i32 0, i32 0), i8* null, i32 596, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.257, i32 0, i32 0), i8* null, i32 600, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.258, i32 0, i32 0), i8* null, i32 604, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.259, i32 0, i32 0), i8* null, i32 608, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.260, i32 0, i32 0), i8* null, i32 612, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.261, i32 0, i32 0), i8* null, i32 616, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.262, i32 0, i32 0), i8* null, i32 620, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.263, i32 0, i32 0), i8* null, i32 28, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.265, i32 0, i32 0), i32 640, i32 0, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.266, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.267, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.268, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.269, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.270, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.272, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.273, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 32 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.274, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 64 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.275, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.276, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 128 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.277, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 256 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.279, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 512 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.280, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.281, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1024 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.282, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2048 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.283, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 4096 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.284, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.285, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8192 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.286, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.287, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16384 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.288, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 32768 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.128, i32 0, i32 0), i32 644, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.130, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.131, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.132, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.134, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 -1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.289, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 -2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0) }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.291, i32 0, i32 0), i32 172, i32 4, { double } { double 1.250000e+00 }, double 0xC7EFFFFFE0000000, double 0x47EFFFFFE0000000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.95, i32 0, i32 0), i32 656, i32 0, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.97, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.99, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.101, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.103, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.105, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 32768 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.107, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 65536 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.109, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 131072 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.292, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 262144 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.293, i32 0, i32 0), i8* null, i32 176, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.294, i32 0, i32 0), i8* null, i32 420, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.296, i32 0, i32 0), i32 180, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.297, i32 0, i32 0), i8* null, i32 492, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.299, i32 0, i32 0), i32 504, i32 2, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 25, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.301, i32 0, i32 0), i32 512, i32 2, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 25, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.303, i32 0, i32 0), i32 488, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 25, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.304, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.305, i32 0, i32 0), i32 184, i32 4, { double } { double -8.000000e-01 }, double 0xC7EFFFFFE0000000, double 0x47EFFFFFE0000000, i32 17, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.306, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.307, i32 0, i32 0), i32 188, i32 4, { double } zeroinitializer, double 0xC7EFFFFFE0000000, double 0x47EFFFFFE0000000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.309, i32 0, i32 0), i32 752, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.308, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.310, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.308, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.311, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.312, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.308, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.314, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.308, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.315, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.308, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.316, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 5 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.308, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.318, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 6 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.308, i32 0, i32 0) }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.320, i32 0, i32 0), i32 192, i32 4, { double } zeroinitializer, double 0xC7EFFFFFE0000000, double 0x47EFFFFFE0000000, i32 17, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.321, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.322, i32 0, i32 0), i32 196, i32 4, { double } zeroinitializer, double 0xC7EFFFFFE0000000, double 0x47EFFFFFE0000000, i32 17, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.323, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.324, i32 0, i32 0), i32 200, i32 4, { double } zeroinitializer, double 0xC7EFFFFFE0000000, double 0x47EFFFFFE0000000, i32 17, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.325, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.326, i32 0, i32 0), i32 204, i32 4, { double } zeroinitializer, double 0xC7EFFFFFE0000000, double 0x47EFFFFFE0000000, i32 17, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.327, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.328, i32 0, i32 0), i32 208, i32 4, { double } zeroinitializer, double 0xC7EFFFFFE0000000, double 0x47EFFFFFE0000000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.330, i32 0, i32 0), i32 756, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.313, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.331, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.332, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.333, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 7 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.316, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.334, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 10 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.335, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 16 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.336, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 17 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.337, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 22 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.338, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 14 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.339, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.340, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 14 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.341, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.342, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 20 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.343, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 128 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.344, i32 0, i32 0), i8* null, i32 212, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.345, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.346, i32 0, i32 0), i32 648, i32 0, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.345, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.347, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.348, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.345, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.349, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.350, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.345, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.351, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.352, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 256 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.345, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.353, i32 0, i32 0), i8* null, i32 760, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.354, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.355, i32 0, i32 0), i32 216, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.354, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.356, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.354, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.357, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.354, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.358, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.354, i32 0, i32 0) }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.359, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.360, i32 0, i32 0), i32 232, i32 6, { double } zeroinitializer, double 0.000000e+00, double 1.000000e+01, i32 17, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.361, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.360, i32 0, i32 0), i32 232, i32 6, { double } zeroinitializer, double 0.000000e+00, double 1.000000e+01, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.78, i32 0, i32 0), i32 652, i32 0, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.364, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.365, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.366, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.367, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.368, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.369, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.370, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.371, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 64 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.372, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 8388608 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.373, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 128 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.374, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 256 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.375, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.376, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1024 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.377, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.378, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2048 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.379, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 4096 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.380, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.381, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 32768 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.382, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.383, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 65536 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.384, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.385, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16777216 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.386, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.387, i32 0, i32 0), i32 256, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.388, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.389, i32 0, i32 0), i32 260, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.390, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.391, i32 0, i32 0), i32 264, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.392, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.393, i32 0, i32 0), i32 272, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.394, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.395, i32 0, i32 0), i32 276, i32 1, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.396, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.397, i32 0, i32 0), i32 280, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.398, i32 0, i32 0), i8* null, i32 68, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 25, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.399, i32 0, i32 0), i8* null, i32 532, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.399, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.400, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.401, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.399, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.402, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.399, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.404, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.399, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.405, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.406, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.399, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.407, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.408, i32 0, i32 0), i32 536, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.409, i32 0, i32 0), i8* null, i32 284, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.410, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.411, i32 0, i32 0), i32 288, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 2.000000e+00, i32 17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.410, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.331, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.412, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.410, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.413, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.414, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.410, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.415, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.416, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.410, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.417, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.418, i32 0, i32 0), i32 312, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.419, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.420, i32 0, i32 0), i32 316, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.421, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.422, i32 0, i32 0), i32 528, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.423, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.424, i32 0, i32 0), i32 784, i32 1, %union.anon { i64 1 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.423, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.425, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.423, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.426, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.427, i32 0, i32 0), i32 320, i32 1, %union.anon zeroinitializer, double -8.000000e+00, double 1.600000e+01, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.428, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.429, i32 0, i32 0), i32 816, i32 1, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.430, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.431, i32 0, i32 0), i32 324, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.432, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.433, i32 0, i32 0), i32 328, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0), i8* null, i32 820, i32 1, %union.anon { i64 -99 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.435, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 -99 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.436, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.437, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.438, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.439, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.440, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.441, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 28 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.442, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 22 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.443, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 38 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.444, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 128 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.445, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 131 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.446, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 20 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.447, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 30 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.448, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 40 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.449, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 50 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.450, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 60 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.451, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.452, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.453, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.454, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 15 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.455, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.456, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.434, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.457, i32 0, i32 0), i8* null, i32 824, i32 1, %union.anon { i64 -99 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.457, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.435, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 -99 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.457, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.458, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.459, i32 0, i32 0), i32 768, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 26, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.460, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.461, i32 0, i32 0), i32 540, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.462, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.463, i32 0, i32 0), i32 544, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.464, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.465, i32 0, i32 0), i32 548, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.466, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.467, i32 0, i32 0), i32 552, i32 1, %union.anon { i64 13 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.469, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.470, i32 0, i32 0), i32 240, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.471, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.472, i32 0, i32 0), i32 244, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.473, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.474, i32 0, i32 0), i32 248, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.475, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.476, i32 0, i32 0), i32 252, i32 1, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.477, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.478, i32 0, i32 0), i32 268, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.479, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.480, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.481, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.482, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.483, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.484, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.485, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.486, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.487, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.488, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 5 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.415, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.489, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 6 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.490, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.491, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 7 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.492, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.493, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.494, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.495, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 9 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.496, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.497, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 10 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.498, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 13 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.499, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 256 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.500, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.501, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 15 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.468, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.502, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.503, i32 0, i32 0), i32 332, i32 1, %union.anon { i64 236 }, double 1.000000e+00, double 3.276700e+04, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.504, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.505, i32 0, i32 0), i32 336, i32 1, %union.anon { i64 3658 }, double 1.000000e+00, double 3.276700e+04, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.506, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.507, i32 0, i32 0), i32 340, i32 1, %union.anon { i64 256 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.508, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.509, i32 0, i32 0), i32 828, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.510, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.511, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.512, i32 0, i32 0), i32 832, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.510, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.513, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.514, i32 0, i32 0), i32 836, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.510, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.515, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.516, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 -16 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.510, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.517, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.518, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.510, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.519, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.520, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.510, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.521, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.522, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.510, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.523, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.524, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 32 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.510, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.525, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.526, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 24 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.510, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.527, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.528, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 48 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.510, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.529, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.530, i32 0, i32 0), i32 344, i32 1, %union.anon { i64 1 }, double 0.000000e+00, double 4.000000e+00, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.531, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.532, i32 0, i32 0), i32 348, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+01, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.533, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.534, i32 0, i32 0), i32 352, i32 1, %union.anon { i64 25 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.535, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.536, i32 0, i32 0), i32 356, i32 1, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.537, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.538, i32 0, i32 0), i32 360, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.539, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.540, i32 0, i32 0), i32 556, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 25, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.541, i32 0, i32 0), i8* null, i32 364, i32 1, %union.anon { i64 256 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.542, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.543, i32 0, i32 0), i32 368, i32 1, %union.anon { i64 40 }, double 1.000000e+00, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.544, i32 0, i32 0), i8* null, i32 72, i32 1, %union.anon { i64 -1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 25, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.545, i32 0, i32 0), i8* null, i32 560, i32 1, %union.anon { i64 -1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.546, i32 0, i32 0), i8* null, i32 564, i32 1, %union.anon { i64 -1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.547, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.548, i32 0, i32 0), i32 568, i32 2, %union.anon { i64 -1 }, double -1.000000e+00, double 0x43E0000000000000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.549, i32 0, i32 0), i8* null, i32 764, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.550, i32 0, i32 0), i8* null, i32 432, i32 9, %union.anon zeroinitializer, double 0.000000e+00, double 0x43F0000000000000, i32 11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.550, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.551, i32 0, i32 0), i8* null, i32 440, i32 9, %union.anon zeroinitializer, double 0.000000e+00, double 0x43F0000000000000, i32 10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.551, i32 0, i32 0) }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.552, i32 0, i32 0), i8* null, i32 520, i32 4, { double } zeroinitializer, double 0.000000e+00, double 0x47EFFFFFE0000000, i32 17, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.553, i32 0, i32 0), i8* null, i32 524, i32 4, { double } { double 3.000000e+00 }, double 0.000000e+00, double 0x47EFFFFFE0000000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.554, i32 0, i32 0), i8* null, i32 108, i32 1, %union.anon { i64 1 }, double 1.000000e+00, double 0x41DFFFFFFFC00000, i32 27, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.555, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.556, i32 0, i32 0), i32 372, i32 1, %union.anon { i64 2 }, double 1.000000e+00, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.558, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.559, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.435, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.560, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.561, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.562, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.563, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.564, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 5 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.565, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.566, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 6 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.567, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.568, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 7 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.569, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.570, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.571, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.572, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 9 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.573, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.574, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 10 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.575, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.574, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 10 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.576, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.577, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 11 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.578, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.579, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 12 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.580, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.581, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 22 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.582, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.560, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.557, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.583, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.584, i32 0, i32 0), i32 376, i32 1, %union.anon { i64 2 }, double 1.000000e+00, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.558, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.559, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.435, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.560, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.586, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.562, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.587, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.564, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 5 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.565, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.566, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 6 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.567, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.568, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 7 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.588, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.589, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.590, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.591, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 9 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.592, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.593, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 10 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.594, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.595, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 11 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.596, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.597, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 12 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.598, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.599, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 13 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.600, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.601, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 14 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.602, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.603, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 15 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.604, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.605, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.573, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.574, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 17 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.606, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.607, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 18 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.582, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.560, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.608, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.591, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 9 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.609, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.593, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 10 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.610, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.595, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 11 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.611, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.597, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 12 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.612, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.599, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 13 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.613, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.601, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 14 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.614, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.603, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 15 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.575, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.574, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 17 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.585, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.615, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.616, i32 0, i32 0), i32 380, i32 1, %union.anon { i64 2 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.618, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.619, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.558, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.559, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.435, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.560, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.620, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.621, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.563, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.564, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 5 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.565, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.566, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 6 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.567, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.568, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 7 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.622, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.623, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.624, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.625, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 9 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.626, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.627, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 10 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.628, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.629, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 11 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.582, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.560, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.630, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.623, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.631, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.625, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 9 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.632, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.627, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 10 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.617, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.633, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.634, i32 0, i32 0), i32 384, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.635, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.435, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.560, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.635, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.636, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.637, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.635, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.638, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.639, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.635, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.582, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.560, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.635, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.640, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.637, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.635, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.641, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.639, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.635, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.642, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.643, i32 0, i32 0), i32 388, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.644, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.435, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.560, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.644, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.356, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.645, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.644, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.646, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.647, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.644, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.648, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.649, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.644, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.650, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.651, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.644, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.652, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.653, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 5 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.644, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.654, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.655, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 6 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.644, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.582, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.560, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.644, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.656, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.657, i32 0, i32 0), i32 8, i32 1, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.658, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.659, i32 0, i32 0), i32 392, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 17, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.660, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.661, i32 0, i32 0), i32 788, i32 0, %union.anon { i64 3 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.660, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.662, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.660, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.663, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.660, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.664, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.665, i32 0, i32 0), i32 448, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 8.000000e+00, i32 9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.664, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.666, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.667, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.664, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.668, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.669, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.664, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.670, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.671, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.664, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.672, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.673, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 3 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.664, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.674, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.675, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.664, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.676, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.677, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 5 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.664, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.678, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.679, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 6 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.664, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.680, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.681, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 7 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.664, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.682, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.683, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.664, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.684, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.685, i32 0, i32 0), i32 452, i32 13, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.684, i32 0, i32 0) }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.686, i32 0, i32 0), i8* null, i32 884, i32 6, { double } zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 0, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.687, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.688, i32 0, i32 0), i32 936, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 34, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.689, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.690, i32 0, i32 0), i32 944, i32 0, %union.anon zeroinitializer, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 34, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.689, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.691, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 -1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 34, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.689, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 34, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.689, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.692, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 34, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.689, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.693, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 34, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.689, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.694, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.695, i32 0, i32 0), i32 1016, i32 1, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.694, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.696, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon zeroinitializer, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.694, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.697, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.694, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.698, i32 0, i32 0), i8* null, i32 464, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 26, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.699, i32 0, i32 0), i8* null, i32 864, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 25, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.700, i32 0, i32 0), i8* null, i32 1044, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 18, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.701, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.702, i32 0, i32 0), i32 948, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 18, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.703, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.704, i32 0, i32 0), i32 396, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 5.000000e+00, i32 19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.703, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.705, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 1 }, double 0.000000e+00, double 0.000000e+00, i32 19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.703, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.706, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 2 }, double 0.000000e+00, double 0.000000e+00, i32 19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.703, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.707, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 3 }, double 0.000000e+00, double 0.000000e+00, i32 19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.703, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.708, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 4 }, double 0.000000e+00, double 0.000000e+00, i32 19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.703, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.168, i32 0, i32 0), i8* null, i32 0, i32 10, %union.anon { i64 5 }, double 0.000000e+00, double 0.000000e+00, i32 19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.703, i32 0, i32 0) }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.149, i32 0, i32 0), i32 968, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 59, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.152, i32 0, i32 0), i32 976, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 58, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.709, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.710, i32 0, i32 0), i32 136, i32 12, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 0, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.711, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.712, i32 0, i32 0), i32 116, i32 11, { i8* } zeroinitializer, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 0, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.713, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.714, i32 0, i32 0), i32 1024, i32 2, %union.anon { i64 2147483647 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 59, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.715, i32 0, i32 0), i8* null, i32 1040, i32 0, %union.anon { i64 1 }, double 0.000000e+00, double 0x41EFFFFFFFE00000, i32 18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.715, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.716, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.717, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.715, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.718, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.719, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.715, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.720, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.721, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0xC1E0000000000000, double 0x41DFFFFFFFC00000, i32 18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.715, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.722, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.723, i32 0, i32 0), i32 1048, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41DFFFFFFFC00000, i32 18, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.724, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.725, i32 0, i32 0), i32 1052, i32 1, %union.anon { i64 95 }, double 0.000000e+00, double 1.000000e+02, i32 18, i8* null }, %struct.AVOption zeroinitializer }>, align 16

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 !dbg !72 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !79, metadata !80), !dbg !81
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !82, metadata !80), !dbg !83
  %0 = load i32, i32* %argc.addr, align 4, !dbg !84
  %cmp = icmp slt i32 %0, 2, !dbg !86
  br i1 %cmp, label %if.then, label %if.end, !dbg !87

if.then:                                          ; preds = %entry
  call void @print_usage(), !dbg !88
  br label %if.end, !dbg !88

if.end:                                           ; preds = %if.then, %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i32 0, i32 0)), !dbg !89
  %1 = load i8**, i8*** %argv.addr, align 8, !dbg !90
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 1, !dbg !90
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !90
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0)) #5, !dbg !92
  %tobool = icmp ne i32 %call1, 0, !dbg !92
  br i1 %tobool, label %if.else, label %if.then2, !dbg !93

if.then2:                                         ; preds = %if.end
  call void @show_format_opts(), !dbg !94
  br label %if.end9, !dbg !94

if.else:                                          ; preds = %if.end
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !95
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !95
  %4 = load i8*, i8** %arrayidx3, align 8, !dbg !95
  %call4 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0)) #5, !dbg !97
  %tobool5 = icmp ne i32 %call4, 0, !dbg !97
  br i1 %tobool5, label %if.else7, label %if.then6, !dbg !98

if.then6:                                         ; preds = %if.else
  call void @show_codec_opts(), !dbg !99
  br label %if.end8, !dbg !99

if.else7:                                         ; preds = %if.else
  call void @print_usage(), !dbg !100
  br label %if.end8

if.end8:                                          ; preds = %if.else7, %if.then6
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.then2
  ret i32 0, !dbg !101
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define internal void @print_usage() #0 !dbg !102 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !105
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i32 0, i32 0)), !dbg !106
  call void @exit(i32 1) #6, !dbg !107
  unreachable, !dbg !107

return:                                           ; No predecessors!
  ret void, !dbg !108
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @show_format_opts() #0 !dbg !109 {
entry:
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i32 0, i32 0)), !dbg !110
  call void @show_opts(%struct.AVOption* getelementptr inbounds ([72 x %struct.AVOption], [72 x %struct.AVOption]* bitcast (<{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @avformat_options to [72 x %struct.AVOption]*), i32 0, i32 0), i32 0), !dbg !111
  ret void, !dbg !112
}

; Function Attrs: nounwind uwtable
define internal void @show_codec_opts() #0 !dbg !113 {
entry:
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.164, i32 0, i32 0)), !dbg !114
  call void @show_opts(%struct.AVOption* getelementptr inbounds ([384 x %struct.AVOption], [384 x %struct.AVOption]* bitcast (<{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @avcodec_options to [384 x %struct.AVOption]*), i32 0, i32 0), i32 1), !dbg !115
  ret void, !dbg !116
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind uwtable
define internal void @show_opts(%struct.AVOption* %opts, i32 %per_stream) #0 !dbg !117 {
entry:
  %opts.addr = alloca %struct.AVOption*, align 8
  %per_stream.addr = alloca i32, align 4
  %o = alloca %struct.AVOption*, align 8
  store %struct.AVOption* %opts, %struct.AVOption** %opts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVOption** %opts.addr, metadata !121, metadata !80), !dbg !122
  store i32 %per_stream, i32* %per_stream.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %per_stream.addr, metadata !123, metadata !80), !dbg !124
  call void @llvm.dbg.declare(metadata %struct.AVOption** %o, metadata !125, metadata !80), !dbg !126
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0)), !dbg !127
  %0 = load %struct.AVOption*, %struct.AVOption** %opts.addr, align 8, !dbg !128
  store %struct.AVOption* %0, %struct.AVOption** %o, align 8, !dbg !130
  br label %for.cond, !dbg !131

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.AVOption*, %struct.AVOption** %o, align 8, !dbg !132
  %name = getelementptr inbounds %struct.AVOption, %struct.AVOption* %1, i32 0, i32 0, !dbg !135
  %2 = load i8*, i8** %name, align 8, !dbg !135
  %tobool = icmp ne i8* %2, null, !dbg !136
  br i1 %tobool, label %for.body, label %for.end, !dbg !136

for.body:                                         ; preds = %for.cond
  %3 = load %struct.AVOption*, %struct.AVOption** %o, align 8, !dbg !137
  %type = getelementptr inbounds %struct.AVOption, %struct.AVOption* %3, i32 0, i32 3, !dbg !140
  %4 = load i32, i32* %type, align 4, !dbg !140
  %cmp = icmp ne i32 %4, 10, !dbg !141
  br i1 %cmp, label %if.then, label %if.end, !dbg !142

if.then:                                          ; preds = %for.body
  %5 = load %struct.AVOption*, %struct.AVOption** %opts.addr, align 8, !dbg !143
  %6 = load %struct.AVOption*, %struct.AVOption** %o, align 8, !dbg !144
  %7 = load i32, i32* %per_stream.addr, align 4, !dbg !145
  call void @print_option(%struct.AVOption* %5, %struct.AVOption* %6, i32 %7), !dbg !146
  br label %if.end, !dbg !146

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !147

for.inc:                                          ; preds = %if.end
  %8 = load %struct.AVOption*, %struct.AVOption** %o, align 8, !dbg !148
  %incdec.ptr = getelementptr inbounds %struct.AVOption, %struct.AVOption* %8, i32 1, !dbg !148
  store %struct.AVOption* %incdec.ptr, %struct.AVOption** %o, align 8, !dbg !148
  br label %for.cond, !dbg !150, !llvm.loop !151

for.end:                                          ; preds = %for.cond
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i32 0, i32 0)), !dbg !153
  ret void, !dbg !154
}

; Function Attrs: nounwind uwtable
define internal void @print_option(%struct.AVOption* %opts, %struct.AVOption* %o, i32 %per_stream) #0 !dbg !155 {
entry:
  %opts.addr = alloca %struct.AVOption*, align 8
  %o.addr = alloca %struct.AVOption*, align 8
  %per_stream.addr = alloca i32, align 4
  %u = alloca %struct.AVOption*, align 8
  store %struct.AVOption* %opts, %struct.AVOption** %opts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVOption** %opts.addr, metadata !158, metadata !80), !dbg !159
  store %struct.AVOption* %o, %struct.AVOption** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVOption** %o.addr, metadata !160, metadata !80), !dbg !161
  store i32 %per_stream, i32* %per_stream.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %per_stream.addr, metadata !162, metadata !80), !dbg !163
  %0 = load %struct.AVOption*, %struct.AVOption** %o.addr, align 8, !dbg !164
  %flags = getelementptr inbounds %struct.AVOption, %struct.AVOption* %0, i32 0, i32 7, !dbg !166
  %1 = load i32, i32* %flags, align 8, !dbg !166
  %and = and i32 %1, 3, !dbg !167
  %tobool = icmp ne i32 %and, 0, !dbg !167
  br i1 %tobool, label %if.end, label %if.then, !dbg !168

if.then:                                          ; preds = %entry
  br label %if.end79, !dbg !169

if.end:                                           ; preds = %entry
  %2 = load %struct.AVOption*, %struct.AVOption** %o.addr, align 8, !dbg !170
  %name = getelementptr inbounds %struct.AVOption, %struct.AVOption* %2, i32 0, i32 0, !dbg !171
  %3 = load i8*, i8** %name, align 8, !dbg !171
  %4 = load i32, i32* %per_stream.addr, align 4, !dbg !172
  %tobool1 = icmp ne i32 %4, 0, !dbg !172
  %cond = select i1 %tobool1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i32 0, i32 0), !dbg !172
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0), i8* %3, i8* %cond), !dbg !173
  %5 = load %struct.AVOption*, %struct.AVOption** %o.addr, align 8, !dbg !174
  %type = getelementptr inbounds %struct.AVOption, %struct.AVOption* %5, i32 0, i32 3, !dbg !175
  %6 = load i32, i32* %type, align 4, !dbg !175
  switch i32 %6, label %sw.default [
    i32 7, label %sw.bb
    i32 5, label %sw.bb3
    i32 1, label %sw.bb5
    i32 2, label %sw.bb5
    i32 4, label %sw.bb7
    i32 3, label %sw.bb7
    i32 6, label %sw.bb9
    i32 0, label %sw.bb11
  ], !dbg !176

sw.bb:                                            ; preds = %if.end
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i32 0, i32 0)), !dbg !177
  br label %sw.epilog, !dbg !179

sw.bb3:                                           ; preds = %if.end
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0)), !dbg !180
  br label %sw.epilog, !dbg !181

sw.bb5:                                           ; preds = %if.end, %if.end
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0)), !dbg !182
  br label %sw.epilog, !dbg !183

sw.bb7:                                           ; preds = %if.end, %if.end
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0)), !dbg !184
  br label %sw.epilog, !dbg !185

sw.bb9:                                           ; preds = %if.end
  %call10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i32 0, i32 0)), !dbg !186
  br label %sw.epilog, !dbg !187

sw.bb11:                                          ; preds = %if.end
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0)), !dbg !188
  br label %sw.epilog, !dbg !189

sw.default:                                       ; preds = %if.end
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0)), !dbg !190
  br label %sw.epilog, !dbg !191

sw.epilog:                                        ; preds = %sw.default, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb
  %call14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i32 0, i32 0)), !dbg !192
  %7 = load %struct.AVOption*, %struct.AVOption** %o.addr, align 8, !dbg !193
  %flags15 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %7, i32 0, i32 7, !dbg !195
  %8 = load i32, i32* %flags15, align 8, !dbg !195
  %and16 = and i32 %8, 2, !dbg !196
  %tobool17 = icmp ne i32 %and16, 0, !dbg !196
  br i1 %tobool17, label %if.then18, label %if.end26, !dbg !197

if.then18:                                        ; preds = %sw.epilog
  %call19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0)), !dbg !198
  %9 = load %struct.AVOption*, %struct.AVOption** %o.addr, align 8, !dbg !200
  %flags20 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %9, i32 0, i32 7, !dbg !202
  %10 = load i32, i32* %flags20, align 8, !dbg !202
  %and21 = and i32 %10, 1, !dbg !203
  %tobool22 = icmp ne i32 %and21, 0, !dbg !203
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !204

if.then23:                                        ; preds = %if.then18
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i32 0, i32 0)), !dbg !205
  br label %if.end25, !dbg !205

if.end25:                                         ; preds = %if.then23, %if.then18
  br label %if.end26, !dbg !206

if.end26:                                         ; preds = %if.end25, %sw.epilog
  %11 = load %struct.AVOption*, %struct.AVOption** %o.addr, align 8, !dbg !207
  %flags27 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %11, i32 0, i32 7, !dbg !209
  %12 = load i32, i32* %flags27, align 8, !dbg !209
  %and28 = and i32 %12, 1, !dbg !210
  %tobool29 = icmp ne i32 %and28, 0, !dbg !210
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !211

if.then30:                                        ; preds = %if.end26
  %call31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i32 0, i32 0)), !dbg !212
  br label %if.end32, !dbg !212

if.end32:                                         ; preds = %if.then30, %if.end26
  %13 = load %struct.AVOption*, %struct.AVOption** %o.addr, align 8, !dbg !214
  %flags33 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %13, i32 0, i32 7, !dbg !216
  %14 = load i32, i32* %flags33, align 8, !dbg !216
  %and34 = and i32 %14, 8, !dbg !217
  %tobool35 = icmp ne i32 %and34, 0, !dbg !217
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !218

if.then36:                                        ; preds = %if.end32
  %call37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i32 0, i32 0)), !dbg !219
  br label %if.end38, !dbg !219

if.end38:                                         ; preds = %if.then36, %if.end32
  %15 = load %struct.AVOption*, %struct.AVOption** %o.addr, align 8, !dbg !221
  %flags39 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %15, i32 0, i32 7, !dbg !223
  %16 = load i32, i32* %flags39, align 8, !dbg !223
  %and40 = and i32 %16, 16, !dbg !224
  %tobool41 = icmp ne i32 %and40, 0, !dbg !224
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !225

if.then42:                                        ; preds = %if.end38
  %call43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0)), !dbg !226
  br label %if.end44, !dbg !226

if.end44:                                         ; preds = %if.then42, %if.end38
  %17 = load %struct.AVOption*, %struct.AVOption** %o.addr, align 8, !dbg !228
  %flags45 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %17, i32 0, i32 7, !dbg !230
  %18 = load i32, i32* %flags45, align 8, !dbg !230
  %and46 = and i32 %18, 32, !dbg !231
  %tobool47 = icmp ne i32 %and46, 0, !dbg !231
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !232

if.then48:                                        ; preds = %if.end44
  %call49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0)), !dbg !233
  br label %if.end50, !dbg !233

if.end50:                                         ; preds = %if.then48, %if.end44
  %call51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0)), !dbg !235
  %19 = load %struct.AVOption*, %struct.AVOption** %o.addr, align 8, !dbg !236
  %help = getelementptr inbounds %struct.AVOption, %struct.AVOption* %19, i32 0, i32 1, !dbg !238
  %20 = load i8*, i8** %help, align 8, !dbg !238
  %tobool52 = icmp ne i8* %20, null, !dbg !236
  br i1 %tobool52, label %if.then53, label %if.end56, !dbg !239

if.then53:                                        ; preds = %if.end50
  %21 = load %struct.AVOption*, %struct.AVOption** %o.addr, align 8, !dbg !240
  %help54 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %21, i32 0, i32 1, !dbg !241
  %22 = load i8*, i8** %help54, align 8, !dbg !241
  %call55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), i8* %22), !dbg !242
  br label %if.end56, !dbg !242

if.end56:                                         ; preds = %if.then53, %if.end50
  %23 = load %struct.AVOption*, %struct.AVOption** %o.addr, align 8, !dbg !243
  %unit = getelementptr inbounds %struct.AVOption, %struct.AVOption* %23, i32 0, i32 8, !dbg !245
  %24 = load i8*, i8** %unit, align 8, !dbg !245
  %tobool57 = icmp ne i8* %24, null, !dbg !243
  br i1 %tobool57, label %if.then58, label %if.end79, !dbg !246

if.then58:                                        ; preds = %if.end56
  call void @llvm.dbg.declare(metadata %struct.AVOption** %u, metadata !247, metadata !80), !dbg !249
  %call59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0)), !dbg !250
  %25 = load %struct.AVOption*, %struct.AVOption** %opts.addr, align 8, !dbg !251
  store %struct.AVOption* %25, %struct.AVOption** %u, align 8, !dbg !253
  br label %for.cond, !dbg !254

for.cond:                                         ; preds = %for.inc, %if.then58
  %26 = load %struct.AVOption*, %struct.AVOption** %u, align 8, !dbg !255
  %name60 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %26, i32 0, i32 0, !dbg !258
  %27 = load i8*, i8** %name60, align 8, !dbg !258
  %tobool61 = icmp ne i8* %27, null, !dbg !259
  br i1 %tobool61, label %for.body, label %for.end, !dbg !259

for.body:                                         ; preds = %for.cond
  %28 = load %struct.AVOption*, %struct.AVOption** %u, align 8, !dbg !260
  %type62 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %28, i32 0, i32 3, !dbg !263
  %29 = load i32, i32* %type62, align 4, !dbg !263
  %cmp = icmp eq i32 %29, 10, !dbg !264
  br i1 %cmp, label %land.lhs.true, label %if.end77, !dbg !265

land.lhs.true:                                    ; preds = %for.body
  %30 = load %struct.AVOption*, %struct.AVOption** %u, align 8, !dbg !266
  %unit63 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %30, i32 0, i32 8, !dbg !268
  %31 = load i8*, i8** %unit63, align 8, !dbg !268
  %tobool64 = icmp ne i8* %31, null, !dbg !266
  br i1 %tobool64, label %land.lhs.true65, label %if.end77, !dbg !269

land.lhs.true65:                                  ; preds = %land.lhs.true
  %32 = load %struct.AVOption*, %struct.AVOption** %u, align 8, !dbg !270
  %unit66 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %32, i32 0, i32 8, !dbg !272
  %33 = load i8*, i8** %unit66, align 8, !dbg !272
  %34 = load %struct.AVOption*, %struct.AVOption** %o.addr, align 8, !dbg !273
  %unit67 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %34, i32 0, i32 8, !dbg !274
  %35 = load i8*, i8** %unit67, align 8, !dbg !274
  %call68 = call i32 @strcmp(i8* %33, i8* %35) #5, !dbg !275
  %tobool69 = icmp ne i32 %call68, 0, !dbg !275
  br i1 %tobool69, label %if.end77, label %if.then70, !dbg !276

if.then70:                                        ; preds = %land.lhs.true65
  %36 = load %struct.AVOption*, %struct.AVOption** %u, align 8, !dbg !277
  %name71 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %36, i32 0, i32 0, !dbg !278
  %37 = load i8*, i8** %name71, align 8, !dbg !278
  %38 = load %struct.AVOption*, %struct.AVOption** %u, align 8, !dbg !279
  %help72 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %38, i32 0, i32 1, !dbg !280
  %39 = load i8*, i8** %help72, align 8, !dbg !280
  %tobool73 = icmp ne i8* %39, null, !dbg !279
  br i1 %tobool73, label %cond.true, label %cond.false, !dbg !279

cond.true:                                        ; preds = %if.then70
  %40 = load %struct.AVOption*, %struct.AVOption** %u, align 8, !dbg !281
  %help74 = getelementptr inbounds %struct.AVOption, %struct.AVOption* %40, i32 0, i32 1, !dbg !282
  %41 = load i8*, i8** %help74, align 8, !dbg !282
  br label %cond.end, !dbg !283

cond.false:                                       ; preds = %if.then70
  br label %cond.end, !dbg !284

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond75 = phi i8* [ %41, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i32 0, i32 0), %cond.false ], !dbg !285
  %call76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i32 0, i32 0), i8* %37, i8* %cond75), !dbg !287
  br label %if.end77, !dbg !287

if.end77:                                         ; preds = %cond.end, %land.lhs.true65, %land.lhs.true, %for.body
  br label %for.inc, !dbg !288

for.inc:                                          ; preds = %if.end77
  %42 = load %struct.AVOption*, %struct.AVOption** %u, align 8, !dbg !289
  %incdec.ptr = getelementptr inbounds %struct.AVOption, %struct.AVOption* %42, i32 1, !dbg !289
  store %struct.AVOption* %incdec.ptr, %struct.AVOption** %u, align 8, !dbg !289
  br label %for.cond, !dbg !291, !llvm.loop !292

for.end:                                          ; preds = %for.cond
  %call78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i32 0, i32 0)), !dbg !294
  br label %if.end79, !dbg !295

if.end79:                                         ; preds = %if.then, %for.end, %if.end56
  ret void, !dbg !296
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!69, !70}
!llvm.ident = !{!71}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, globals: !25)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]doc--print_options.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !4, line: 221, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24}
!6 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!7 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!8 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!9 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!10 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!11 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!12 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!13 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!14 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!15 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!16 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!17 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!18 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!19 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!20 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!21 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!22 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!23 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!24 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!25 = !{!26, !64}
!26 = distinct !DIGlobalVariable(name: "avformat_options", scope: !0, file: !27, line: 36, type: !28, isLocal: true, isDefinition: true, variable: <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @avformat_options)
!27 = !DIFile(filename: "./libavformat/options_table.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!28 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 36864, align: 64, elements: !62)
!29 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !30)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !4, line: 301, baseType: !31)
!31 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 246, size: 512, align: 64, elements: !32)
!32 = !{!33, !37, !38, !40, !41, !58, !59, !60, !61}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !31, file: !4, line: 247, baseType: !34, size: 64, align: 64)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64, align: 64)
!35 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !36)
!36 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !31, file: !4, line: 253, baseType: !34, size: 64, align: 64, offset: 64)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !31, file: !4, line: 259, baseType: !39, size: 32, align: 32, offset: 128)
!39 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !31, file: !4, line: 260, baseType: !3, size: 32, align: 32, offset: 160)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !31, file: !4, line: 271, baseType: !42, size: 64, align: 64, offset: 192)
!42 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !31, file: !4, line: 265, size: 64, align: 64, elements: !43)
!43 = !{!44, !48, !50, !51}
!44 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !42, file: !4, line: 266, baseType: !45, size: 64, align: 64)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !46, line: 40, baseType: !47)
!46 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!47 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !42, file: !4, line: 267, baseType: !49, size: 64, align: 64)
!49 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !42, file: !4, line: 268, baseType: !34, size: 64, align: 64)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !42, file: !4, line: 270, baseType: !52, size: 64, align: 32)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !53, line: 61, baseType: !54)
!53 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!54 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !53, line: 58, size: 64, align: 32, elements: !55)
!55 = !{!56, !57}
!56 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !54, file: !53, line: 59, baseType: !39, size: 32, align: 32)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !54, file: !53, line: 60, baseType: !39, size: 32, align: 32, offset: 32)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !31, file: !4, line: 272, baseType: !49, size: 64, align: 64, offset: 256)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !31, file: !4, line: 273, baseType: !49, size: 64, align: 64, offset: 320)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !31, file: !4, line: 275, baseType: !39, size: 32, align: 32, offset: 384)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !31, file: !4, line: 300, baseType: !34, size: 64, align: 64, offset: 448)
!62 = !{!63}
!63 = !DISubrange(count: 72)
!64 = distinct !DIGlobalVariable(name: "avcodec_options", scope: !0, file: !65, line: 44, type: !66, isLocal: true, isDefinition: true, variable: <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @avcodec_options)
!65 = !DIFile(filename: "./libavcodec/options_table.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!66 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 196608, align: 64, elements: !67)
!67 = !{!68}
!68 = !DISubrange(count: 384)
!69 = !{i32 2, !"Dwarf Version", i32 4}
!70 = !{i32 2, !"Debug Info Version", i32 3}
!71 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!72 = distinct !DISubprogram(name: "main", scope: !73, file: !73, line: 121, type: !74, isLocal: false, isDefinition: true, scopeLine: 122, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !78)
!73 = !DIFile(filename: "doc/print_options.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!74 = !DISubroutineType(types: !75)
!75 = !{!39, !39, !76}
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64, align: 64)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, align: 64)
!78 = !{}
!79 = !DILocalVariable(name: "argc", arg: 1, scope: !72, file: !73, line: 121, type: !39)
!80 = !DIExpression()
!81 = !DILocation(line: 121, column: 14, scope: !72)
!82 = !DILocalVariable(name: "argv", arg: 2, scope: !72, file: !73, line: 121, type: !76)
!83 = !DILocation(line: 121, column: 27, scope: !72)
!84 = !DILocation(line: 123, column: 9, scope: !85)
!85 = distinct !DILexicalBlock(scope: !72, file: !73, line: 123, column: 9)
!86 = !DILocation(line: 123, column: 14, scope: !85)
!87 = !DILocation(line: 123, column: 9, scope: !72)
!88 = !DILocation(line: 124, column: 9, scope: !85)
!89 = !DILocation(line: 126, column: 5, scope: !72)
!90 = !DILocation(line: 128, column: 17, scope: !91)
!91 = distinct !DILexicalBlock(scope: !72, file: !73, line: 128, column: 9)
!92 = !DILocation(line: 128, column: 10, scope: !91)
!93 = !DILocation(line: 128, column: 9, scope: !72)
!94 = !DILocation(line: 129, column: 9, scope: !91)
!95 = !DILocation(line: 130, column: 22, scope: !96)
!96 = distinct !DILexicalBlock(scope: !91, file: !73, line: 130, column: 14)
!97 = !DILocation(line: 130, column: 15, scope: !96)
!98 = !DILocation(line: 130, column: 14, scope: !91)
!99 = !DILocation(line: 131, column: 9, scope: !96)
!100 = !DILocation(line: 133, column: 9, scope: !96)
!101 = !DILocation(line: 135, column: 5, scope: !72)
!102 = distinct !DISubprogram(name: "print_usage", scope: !73, file: !73, line: 45, type: !103, isLocal: true, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !78)
!103 = !DISubroutineType(types: !104)
!104 = !{null}
!105 = !DILocation(line: 47, column: 12, scope: !102)
!106 = !DILocation(line: 47, column: 5, scope: !102)
!107 = !DILocation(line: 49, column: 5, scope: !102)
!108 = !DILocation(line: 50, column: 1, scope: !102)
!109 = distinct !DISubprogram(name: "show_format_opts", scope: !73, file: !73, line: 109, type: !103, isLocal: true, isDefinition: true, scopeLine: 110, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !78)
!110 = !DILocation(line: 111, column: 5, scope: !109)
!111 = !DILocation(line: 112, column: 5, scope: !109)
!112 = !DILocation(line: 113, column: 1, scope: !109)
!113 = distinct !DISubprogram(name: "show_codec_opts", scope: !73, file: !73, line: 115, type: !103, isLocal: true, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !78)
!114 = !DILocation(line: 117, column: 5, scope: !113)
!115 = !DILocation(line: 118, column: 5, scope: !113)
!116 = !DILocation(line: 119, column: 1, scope: !113)
!117 = distinct !DISubprogram(name: "show_opts", scope: !73, file: !73, line: 97, type: !118, isLocal: true, isDefinition: true, scopeLine: 98, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !78)
!118 = !DISubroutineType(types: !119)
!119 = !{null, !120, !39}
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64, align: 64)
!121 = !DILocalVariable(name: "opts", arg: 1, scope: !117, file: !73, line: 97, type: !120)
!122 = !DILocation(line: 97, column: 39, scope: !117)
!123 = !DILocalVariable(name: "per_stream", arg: 2, scope: !117, file: !73, line: 97, type: !39)
!124 = !DILocation(line: 97, column: 49, scope: !117)
!125 = !DILocalVariable(name: "o", scope: !117, file: !73, line: 99, type: !120)
!126 = !DILocation(line: 99, column: 21, scope: !117)
!127 = !DILocation(line: 101, column: 5, scope: !117)
!128 = !DILocation(line: 102, column: 14, scope: !129)
!129 = distinct !DILexicalBlock(scope: !117, file: !73, line: 102, column: 5)
!130 = !DILocation(line: 102, column: 12, scope: !129)
!131 = !DILocation(line: 102, column: 10, scope: !129)
!132 = !DILocation(line: 102, column: 20, scope: !133)
!133 = !DILexicalBlockFile(scope: !134, file: !73, discriminator: 1)
!134 = distinct !DILexicalBlock(scope: !129, file: !73, line: 102, column: 5)
!135 = !DILocation(line: 102, column: 23, scope: !133)
!136 = !DILocation(line: 102, column: 5, scope: !133)
!137 = !DILocation(line: 103, column: 13, scope: !138)
!138 = distinct !DILexicalBlock(scope: !139, file: !73, line: 103, column: 13)
!139 = distinct !DILexicalBlock(scope: !134, file: !73, line: 102, column: 34)
!140 = !DILocation(line: 103, column: 16, scope: !138)
!141 = !DILocation(line: 103, column: 21, scope: !138)
!142 = !DILocation(line: 103, column: 13, scope: !139)
!143 = !DILocation(line: 104, column: 26, scope: !138)
!144 = !DILocation(line: 104, column: 32, scope: !138)
!145 = !DILocation(line: 104, column: 35, scope: !138)
!146 = !DILocation(line: 104, column: 13, scope: !138)
!147 = !DILocation(line: 105, column: 5, scope: !139)
!148 = !DILocation(line: 102, column: 30, scope: !149)
!149 = !DILexicalBlockFile(scope: !134, file: !73, discriminator: 2)
!150 = !DILocation(line: 102, column: 5, scope: !149)
!151 = distinct !{!151, !152}
!152 = !DILocation(line: 102, column: 5, scope: !117)
!153 = !DILocation(line: 106, column: 5, scope: !117)
!154 = !DILocation(line: 107, column: 1, scope: !117)
!155 = distinct !DISubprogram(name: "print_option", scope: !73, file: !73, line: 52, type: !156, isLocal: true, isDefinition: true, scopeLine: 53, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !78)
!156 = !DISubroutineType(types: !157)
!157 = !{null, !120, !120, !39}
!158 = !DILocalVariable(name: "opts", arg: 1, scope: !155, file: !73, line: 52, type: !120)
!159 = !DILocation(line: 52, column: 42, scope: !155)
!160 = !DILocalVariable(name: "o", arg: 2, scope: !155, file: !73, line: 52, type: !120)
!161 = !DILocation(line: 52, column: 64, scope: !155)
!162 = !DILocalVariable(name: "per_stream", arg: 3, scope: !155, file: !73, line: 52, type: !39)
!163 = !DILocation(line: 52, column: 71, scope: !155)
!164 = !DILocation(line: 54, column: 11, scope: !165)
!165 = distinct !DILexicalBlock(scope: !155, file: !73, line: 54, column: 9)
!166 = !DILocation(line: 54, column: 14, scope: !165)
!167 = !DILocation(line: 54, column: 20, scope: !165)
!168 = !DILocation(line: 54, column: 9, scope: !155)
!169 = !DILocation(line: 55, column: 9, scope: !165)
!170 = !DILocation(line: 57, column: 33, scope: !155)
!171 = !DILocation(line: 57, column: 36, scope: !155)
!172 = !DILocation(line: 57, column: 42, scope: !155)
!173 = !DILocation(line: 57, column: 5, scope: !155)
!174 = !DILocation(line: 58, column: 13, scope: !155)
!175 = !DILocation(line: 58, column: 16, scope: !155)
!176 = !DILocation(line: 58, column: 5, scope: !155)
!177 = !DILocation(line: 59, column: 30, scope: !178)
!178 = distinct !DILexicalBlock(scope: !155, file: !73, line: 58, column: 22)
!179 = !DILocation(line: 59, column: 60, scope: !178)
!180 = !DILocation(line: 60, column: 30, scope: !178)
!181 = !DILocation(line: 60, column: 48, scope: !178)
!182 = !DILocation(line: 62, column: 29, scope: !178)
!183 = !DILocation(line: 62, column: 48, scope: !178)
!184 = !DILocation(line: 64, column: 30, scope: !178)
!185 = !DILocation(line: 64, column: 47, scope: !178)
!186 = !DILocation(line: 65, column: 32, scope: !178)
!187 = !DILocation(line: 65, column: 59, scope: !178)
!188 = !DILocation(line: 66, column: 29, scope: !178)
!189 = !DILocation(line: 66, column: 46, scope: !178)
!190 = !DILocation(line: 67, column: 14, scope: !178)
!191 = !DILocation(line: 67, column: 31, scope: !178)
!192 = !DILocation(line: 69, column: 5, scope: !155)
!193 = !DILocation(line: 71, column: 9, scope: !194)
!194 = distinct !DILexicalBlock(scope: !155, file: !73, line: 71, column: 9)
!195 = !DILocation(line: 71, column: 12, scope: !194)
!196 = !DILocation(line: 71, column: 18, scope: !194)
!197 = !DILocation(line: 71, column: 9, scope: !155)
!198 = !DILocation(line: 72, column: 9, scope: !199)
!199 = distinct !DILexicalBlock(scope: !194, file: !73, line: 71, column: 23)
!200 = !DILocation(line: 73, column: 13, scope: !201)
!201 = distinct !DILexicalBlock(scope: !199, file: !73, line: 73, column: 13)
!202 = !DILocation(line: 73, column: 16, scope: !201)
!203 = !DILocation(line: 73, column: 22, scope: !201)
!204 = !DILocation(line: 73, column: 13, scope: !199)
!205 = !DILocation(line: 74, column: 13, scope: !201)
!206 = !DILocation(line: 75, column: 5, scope: !199)
!207 = !DILocation(line: 76, column: 9, scope: !208)
!208 = distinct !DILexicalBlock(scope: !155, file: !73, line: 76, column: 9)
!209 = !DILocation(line: 76, column: 12, scope: !208)
!210 = !DILocation(line: 76, column: 18, scope: !208)
!211 = !DILocation(line: 76, column: 9, scope: !155)
!212 = !DILocation(line: 76, column: 23, scope: !213)
!213 = !DILexicalBlockFile(scope: !208, file: !73, discriminator: 1)
!214 = !DILocation(line: 77, column: 9, scope: !215)
!215 = distinct !DILexicalBlock(scope: !155, file: !73, line: 77, column: 9)
!216 = !DILocation(line: 77, column: 12, scope: !215)
!217 = !DILocation(line: 77, column: 18, scope: !215)
!218 = !DILocation(line: 77, column: 9, scope: !155)
!219 = !DILocation(line: 77, column: 23, scope: !220)
!220 = !DILexicalBlockFile(scope: !215, file: !73, discriminator: 1)
!221 = !DILocation(line: 78, column: 9, scope: !222)
!222 = distinct !DILexicalBlock(scope: !155, file: !73, line: 78, column: 9)
!223 = !DILocation(line: 78, column: 12, scope: !222)
!224 = !DILocation(line: 78, column: 18, scope: !222)
!225 = !DILocation(line: 78, column: 9, scope: !155)
!226 = !DILocation(line: 78, column: 24, scope: !227)
!227 = !DILexicalBlockFile(scope: !222, file: !73, discriminator: 1)
!228 = !DILocation(line: 79, column: 9, scope: !229)
!229 = distinct !DILexicalBlock(scope: !155, file: !73, line: 79, column: 9)
!230 = !DILocation(line: 79, column: 12, scope: !229)
!231 = !DILocation(line: 79, column: 18, scope: !229)
!232 = !DILocation(line: 79, column: 9, scope: !155)
!233 = !DILocation(line: 79, column: 24, scope: !234)
!234 = !DILexicalBlockFile(scope: !229, file: !73, discriminator: 1)
!235 = !DILocation(line: 81, column: 5, scope: !155)
!236 = !DILocation(line: 82, column: 9, scope: !237)
!237 = distinct !DILexicalBlock(scope: !155, file: !73, line: 82, column: 9)
!238 = !DILocation(line: 82, column: 12, scope: !237)
!239 = !DILocation(line: 82, column: 9, scope: !155)
!240 = !DILocation(line: 83, column: 24, scope: !237)
!241 = !DILocation(line: 83, column: 27, scope: !237)
!242 = !DILocation(line: 83, column: 9, scope: !237)
!243 = !DILocation(line: 85, column: 9, scope: !244)
!244 = distinct !DILexicalBlock(scope: !155, file: !73, line: 85, column: 9)
!245 = !DILocation(line: 85, column: 12, scope: !244)
!246 = !DILocation(line: 85, column: 9, scope: !155)
!247 = !DILocalVariable(name: "u", scope: !248, file: !73, line: 86, type: !120)
!248 = distinct !DILexicalBlock(scope: !244, file: !73, line: 85, column: 18)
!249 = !DILocation(line: 86, column: 25, scope: !248)
!250 = !DILocation(line: 87, column: 9, scope: !248)
!251 = !DILocation(line: 89, column: 18, scope: !252)
!252 = distinct !DILexicalBlock(scope: !248, file: !73, line: 89, column: 9)
!253 = !DILocation(line: 89, column: 16, scope: !252)
!254 = !DILocation(line: 89, column: 14, scope: !252)
!255 = !DILocation(line: 89, column: 24, scope: !256)
!256 = !DILexicalBlockFile(scope: !257, file: !73, discriminator: 1)
!257 = distinct !DILexicalBlock(scope: !252, file: !73, line: 89, column: 9)
!258 = !DILocation(line: 89, column: 27, scope: !256)
!259 = !DILocation(line: 89, column: 9, scope: !256)
!260 = !DILocation(line: 90, column: 17, scope: !261)
!261 = distinct !DILexicalBlock(scope: !262, file: !73, line: 90, column: 17)
!262 = distinct !DILexicalBlock(scope: !257, file: !73, line: 89, column: 38)
!263 = !DILocation(line: 90, column: 20, scope: !261)
!264 = !DILocation(line: 90, column: 25, scope: !261)
!265 = !DILocation(line: 90, column: 46, scope: !261)
!266 = !DILocation(line: 90, column: 49, scope: !267)
!267 = !DILexicalBlockFile(scope: !261, file: !73, discriminator: 1)
!268 = !DILocation(line: 90, column: 52, scope: !267)
!269 = !DILocation(line: 90, column: 57, scope: !267)
!270 = !DILocation(line: 90, column: 68, scope: !271)
!271 = !DILexicalBlockFile(scope: !261, file: !73, discriminator: 2)
!272 = !DILocation(line: 90, column: 71, scope: !271)
!273 = !DILocation(line: 90, column: 77, scope: !271)
!274 = !DILocation(line: 90, column: 80, scope: !271)
!275 = !DILocation(line: 90, column: 61, scope: !271)
!276 = !DILocation(line: 90, column: 17, scope: !271)
!277 = !DILocation(line: 91, column: 42, scope: !261)
!278 = !DILocation(line: 91, column: 45, scope: !261)
!279 = !DILocation(line: 91, column: 51, scope: !261)
!280 = !DILocation(line: 91, column: 54, scope: !261)
!281 = !DILocation(line: 91, column: 61, scope: !267)
!282 = !DILocation(line: 91, column: 64, scope: !267)
!283 = !DILocation(line: 91, column: 51, scope: !267)
!284 = !DILocation(line: 91, column: 51, scope: !271)
!285 = !DILocation(line: 91, column: 51, scope: !286)
!286 = !DILexicalBlockFile(scope: !261, file: !73, discriminator: 3)
!287 = !DILocation(line: 91, column: 17, scope: !286)
!288 = !DILocation(line: 92, column: 9, scope: !262)
!289 = !DILocation(line: 89, column: 34, scope: !290)
!290 = !DILexicalBlockFile(scope: !257, file: !73, discriminator: 2)
!291 = !DILocation(line: 89, column: 9, scope: !290)
!292 = distinct !{!292, !293}
!293 = !DILocation(line: 89, column: 9, scope: !248)
!294 = !DILocation(line: 93, column: 9, scope: !248)
!295 = !DILocation(line: 94, column: 5, scope: !248)
!296 = !DILocation(line: 95, column: 1, scope: !155)
