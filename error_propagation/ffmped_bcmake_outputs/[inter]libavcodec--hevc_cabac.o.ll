; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--hevc_cabac.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--hevc_cabac.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.HEVCContext = type { %struct.AVClass*, %struct.AVCodecContext*, [16 x %struct.HEVCContext*], [16 x %struct.HEVCLocalContext*], %struct.HEVCLocalContext*, i8, i8, i32, i32, i8*, i8, %struct.AVFrame*, %struct.AVFrame*, [3 x i8*], [3 x i8*], %struct.HEVCParamSets, %struct.HEVCSEI, %struct.AVMD5*, %struct.AVBufferPool*, %struct.AVBufferPool*, [5 x %struct.RefPicList], %struct.SliceHeader, %struct.SAOParams*, %struct.DBParams*, i32, i32, %struct.HEVCFrame*, [32 x %struct.HEVCFrame], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.HEVCPredContext, %struct.HEVCDSPContext, %struct.VideoDSPContext, %struct.BswapDSPContext, i8*, i8*, i8*, i32*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i16, i16, i32, i32, i8*, %struct.H2645Packet, i32, i8, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.HEVCLocalContext = type { [199 x i8], [4 x i8], i8, %struct.GetBitContext, %struct.CABACContext, i8, i8, i32, %struct.TransformUnit, i8, i8, i8, i8, i32, i32, [16 x i8], [11360 x i8], [11360 x i8], [4096 x i16], i32, %struct.CodingUnit, %struct.PredictionUnit, %struct.NeighbourAvailable, i32, [16 x i8] }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.CABACContext = type { i32, i32, i32, i8*, i8*, i8*, %struct.PutBitContext }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.TransformUnit = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, i8 }
%struct.CodingUnit = type { i32, i32, i32, i32, i8, i8, i8 }
%struct.PredictionUnit = type { i32, i32, [4 x i8], %struct.Mv, i8, [4 x i8], [4 x i8] }
%struct.Mv = type { i16, i16 }
%struct.NeighbourAvailable = type { i32, i32, i32, i32, i32, i32 }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.HEVCParamSets = type { [16 x %struct.AVBufferRef*], [16 x %struct.AVBufferRef*], [64 x %struct.AVBufferRef*], %struct.HEVCVPS*, %struct.HEVCSPS*, %struct.HEVCPPS* }
%struct.HEVCVPS = type { i8, i32, i32, %struct.PTL, i32, [7 x i32], [7 x i32], [7 x i32], i32, i32, i8, i32, i32, i8, i32, i32, [4096 x i8], i32 }
%struct.PTL = type { %struct.PTLCommon, [7 x %struct.PTLCommon], [7 x i8], [7 x i8] }
%struct.PTLCommon = type { i8, i8, i8, [32 x i8], i8, i8, i8, i8, i8 }
%struct.HEVCSPS = type { i32, i32, i8, %struct.HEVCWindow, %struct.HEVCWindow, i32, i32, i32, i32, i32, i32, i32, [7 x %struct.anon], i8, %struct.VUI, %struct.PTL, i8, %struct.ScalingList, i32, [64 x %struct.ShortTermRPS], i8, i8, i8, [32 x i16], [32 x i8], i8, %struct.anon.0, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, [4096 x i8], i32 }
%struct.HEVCWindow = type { i32, i32, i32, i32 }
%struct.anon = type { i32, i32, i32 }
%struct.VUI = type { %struct.AVRational, i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, %struct.HEVCWindow, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ScalingList = type { [4 x [6 x [64 x i8]]], [2 x [6 x i8]] }
%struct.ShortTermRPS = type { i32, i32, i32, [32 x i32], [32 x i8] }
%struct.anon.0 = type { i8, i8, i32, i32, i8 }
%struct.HEVCPPS = type { i32, i8, i8, i32, i32, i32, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i32, i32, i8, %struct.ScalingList, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, [6 x i8], [6 x i8], i8, i8, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, [4096 x i8], i32 }
%struct.HEVCSEI = type { %struct.HEVCSEIPictureHash, %struct.HEVCSEIFramePacking, %struct.HEVCSEIDisplayOrientation, %struct.HEVCSEIPictureTiming, %struct.HEVCSEIA53Caption, %struct.HEVCSEIMasteringDisplay, %struct.HEVCSEIContentLight, i32, %struct.HEVCSEIAlternativeTransfer }
%struct.HEVCSEIPictureHash = type { [3 x [16 x i8]], i8 }
%struct.HEVCSEIFramePacking = type { i32, i32, i32, i32, i32 }
%struct.HEVCSEIDisplayOrientation = type { i32, i32, i32, i32 }
%struct.HEVCSEIPictureTiming = type { i32 }
%struct.HEVCSEIA53Caption = type { i32, i8* }
%struct.HEVCSEIMasteringDisplay = type { i32, [3 x [2 x i16]], [2 x i16], i32, i32 }
%struct.HEVCSEIContentLight = type { i32, i16, i16 }
%struct.HEVCSEIAlternativeTransfer = type { i32, i32 }
%struct.AVMD5 = type opaque
%struct.AVBufferPool = type opaque
%struct.RefPicList = type { [16 x %struct.HEVCFrame*], [16 x i32], [16 x i32], i32 }
%struct.SliceHeader = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, %struct.ShortTermRPS, %struct.ShortTermRPS*, i32, %struct.LongTermRPS, [2 x [32 x i32]], [2 x i8], i8, i8, [2 x i32], [3 x i8], i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i32, i32, i32, i32*, i32*, i32*, i32, i8, i8, i16, [16 x i16], [16 x [2 x i16]], [16 x [2 x i16]], [16 x i16], [16 x i16], [16 x [2 x i16]], [16 x i16], [16 x [2 x i16]], i32 }
%struct.LongTermRPS = type { [32 x i32], [32 x i8], i8 }
%struct.SAOParams = type { [3 x [4 x i32]], [3 x [4 x i32]], [3 x i8], [3 x i32], [3 x [5 x i16]], [3 x i8] }
%struct.DBParams = type { i32, i32 }
%struct.HEVCFrame = type { %struct.AVFrame*, %struct.ThreadFrame, %struct.MvField*, %struct.RefPicList*, %struct.RefPicListTab**, i32, i32, %struct.HEVCFrame*, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i8*, i16, i8 }
%struct.ThreadFrame = type { %struct.AVFrame*, [2 x %struct.AVCodecContext*], %struct.AVBufferRef* }
%struct.MvField = type { [2 x %struct.Mv], [2 x i8], i8 }
%struct.RefPicListTab = type { [2 x %struct.RefPicList] }
%struct.HEVCPredContext = type { [4 x void (%struct.HEVCContext*, i32, i32, i32)*], [4 x void (i8*, i8*, i8*, i64)*], void (i8*, i8*, i8*, i64, i32, i32)*, [4 x void (i8*, i8*, i8*, i64, i32, i32)*] }
%struct.HEVCDSPContext = type { void (i8*, i64, i32, i32, %struct.GetBitContext*, i32)*, [4 x void (i8*, i16*, i64)*], void (i16*, i16)*, void (i16*, i16, i32)*, void (i16*)*, [4 x void (i16*, i32)*], [4 x void (i16*)*], [5 x void (i8*, i8*, i64, i64, i16*, i32, i32, i32)*], [5 x void (i8*, i8*, i64, i16*, i32, i32, i32)*], [2 x void (i8*, i8*, i64, i64, %struct.SAOParams*, i32*, i32, i32, i32, i8*, i8*, i8*)*], [10 x [2 x [2 x void (i16*, i8*, i64, i32, i64, i64, i32)*]]], [10 x [2 x [2 x void (i8*, i64, i8*, i64, i32, i64, i64, i32)*]]], [10 x [2 x [2 x void (i8*, i64, i8*, i64, i32, i32, i32, i32, i64, i64, i32)*]]], [10 x [2 x [2 x void (i8*, i64, i8*, i64, i16*, i32, i64, i64, i32)*]]], [10 x [2 x [2 x void (i8*, i64, i8*, i64, i16*, i32, i32, i32, i32, i32, i32, i64, i64, i32)*]]], [10 x [2 x [2 x void (i16*, i8*, i64, i32, i64, i64, i32)*]]], [10 x [2 x [2 x void (i8*, i64, i8*, i64, i32, i64, i64, i32)*]]], [10 x [2 x [2 x void (i8*, i64, i8*, i64, i32, i32, i32, i32, i64, i64, i32)*]]], [10 x [2 x [2 x void (i8*, i64, i8*, i64, i16*, i32, i64, i64, i32)*]]], [10 x [2 x [2 x void (i8*, i64, i8*, i64, i16*, i32, i32, i32, i32, i32, i32, i64, i64, i32)*]]], void (i8*, i64, i32, i32*, i8*, i8*)*, void (i8*, i64, i32, i32*, i8*, i8*)*, void (i8*, i64, i32*, i8*, i8*)*, void (i8*, i64, i32*, i8*, i8*)*, void (i8*, i64, i32, i32*, i8*, i8*)*, void (i8*, i64, i32, i32*, i8*, i8*)*, void (i8*, i64, i32*, i8*, i8*)*, void (i8*, i64, i32*, i8*, i8*)* }
%struct.VideoDSPContext = type { void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)*, void (i8*, i64, i32)* }
%struct.BswapDSPContext = type { void (i32*, i32*, i32)*, void (i16*, i16*, i32)* }
%struct.H2645Packet = type { %struct.H2645NAL*, %struct.H2645RBSP, i32, i32 }
%struct.H2645NAL = type { i8*, i32, i8*, i32, i32, i8*, %struct.GetBitContext, i32, i32, i32, i32, i32*, i32 }
%struct.H2645RBSP = type { i8*, %struct.AVBufferRef*, i32, i32 }

@elem_offset = internal constant [49 x i32] [i32 0, i32 1, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 5, i32 6, i32 9, i32 12, i32 13, i32 17, i32 17, i32 18, i32 18, i32 18, i32 20, i32 21, i32 22, i32 27, i32 29, i32 31, i32 33, i32 35, i32 35, i32 35, i32 36, i32 37, i32 40, i32 42, i32 46, i32 48, i32 50, i32 52, i32 70, i32 88, i32 88, i32 88, i32 92, i32 136, i32 160, i32 166, i32 166, i32 166, i32 174, i32 176, i32 177], align 16
@.str = private unnamed_addr constant [20 x i8] c"CABAC_MAX_BIN : %d\0A\00", align 1
@ff_hevc_hls_residual_coding.level_scale = internal constant [6 x i8] c"(-39@H", align 1
@ff_hevc_hls_residual_coding.qp_c = internal constant [14 x i32] [i32 29, i32 30, i32 31, i32 32, i32 33, i32 33, i32 34, i32 34, i32 35, i32 35, i32 36, i32 36, i32 37, i32 37], align 16
@ff_hevc_hls_residual_coding.rem6 = internal constant [76 x i8] c"\00\01\02\03\04\05\00\01\02\03\04\05\00\01\02\03\04\05\00\01\02\03\04\05\00\01\02\03\04\05\00\01\02\03\04\05\00\01\02\03\04\05\00\01\02\03\04\05\00\01\02\03\04\05\00\01\02\03\04\05\00\01\02\03\04\05\00\01\02\03\04\05\00\01\00\00", align 16
@ff_hevc_hls_residual_coding.div6 = internal constant [76 x i8] c"\00\00\00\00\00\00\01\01\01\01\01\01\02\02\02\02\02\02\03\03\03\03\03\03\04\04\04\04\04\04\05\05\05\05\05\05\06\06\06\06\06\06\07\07\07\07\07\07\08\08\08\08\08\08\09\09\09\09\09\09\0A\0A\0A\0A\0A\0A\0B\0B\0B\0B\0B\0B\0C\0C\00\00", align 16
@ff_hevc_diag_scan4x4_x = external constant [16 x i8], align 16
@ff_hevc_diag_scan4x4_y = external constant [16 x i8], align 16
@diag_scan4x4_inv = internal constant [4 x [4 x i8]] [[4 x i8] c"\00\02\05\09", [4 x i8] c"\01\04\08\0C", [4 x i8] c"\03\07\0B\0E", [4 x i8] c"\06\0A\0D\0F"], align 16
@scan_1x1 = internal constant [1 x i8] zeroinitializer, align 1
@diag_scan2x2_inv = internal constant [2 x [2 x i8]] [[2 x i8] c"\00\02", [2 x i8] c"\01\03"], align 1
@diag_scan2x2_x = internal constant [4 x i8] c"\00\00\01\01", align 1
@diag_scan2x2_y = internal constant [4 x i8] c"\00\01\00\01", align 1
@diag_scan8x8_inv = internal constant [8 x [8 x i8]] [[8 x i8] c"\00\02\05\09\0E\14\1B#", [8 x i8] c"\01\04\08\0D\13\1A\22*", [8 x i8] c"\03\07\0C\12\19!)0", [8 x i8] c"\06\0B\11\18 (/5", [8 x i8] c"\0A\10\17\1F'.49", [8 x i8] c"\0F\16\1E&-38<", [8 x i8] c"\15\1D%,27;>", [8 x i8] c"\1C$+16:=?"], align 16
@ff_hevc_diag_scan8x8_x = external constant [64 x i8], align 16
@ff_hevc_diag_scan8x8_y = external constant [64 x i8], align 16
@horiz_scan2x2_x = internal constant [4 x i8] c"\00\01\00\01", align 1
@horiz_scan2x2_y = internal constant [4 x i8] c"\00\00\01\01", align 1
@horiz_scan4x4_x = internal constant [16 x i8] c"\00\01\02\03\00\01\02\03\00\01\02\03\00\01\02\03", align 16
@horiz_scan4x4_y = internal constant [16 x i8] c"\00\00\00\00\01\01\01\01\02\02\02\02\03\03\03\03", align 16
@horiz_scan8x8_inv = internal constant [8 x [8 x i8]] [[8 x i8] c"\00\01\02\03\10\11\12\13", [8 x i8] c"\04\05\06\07\14\15\16\17", [8 x i8] c"\08\09\0A\0B\18\19\1A\1B", [8 x i8] c"\0C\0D\0E\0F\1C\1D\1E\1F", [8 x i8] c" !\22#0123", [8 x i8] c"$%&'4567", [8 x i8] c"()*+89:;", [8 x i8] c",-./<=>?"], align 16
@ff_hevc_hls_residual_coding.ctx_idx_map = internal constant [80 x i8] c"\00\01\04\05\02\03\04\05\06\06\08\08\07\07\08\08\01\01\01\00\01\01\00\00\01\00\00\00\00\00\00\00\02\02\02\02\01\01\01\01\00\00\00\00\00\00\00\00\02\01\00\00\02\01\00\00\02\01\00\00\02\01\00\00\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02", align 16
@init_values = internal constant [3 x [199 x i8]] [[199 x i8] c"\99\C8\8B\8D\9D\9A\9A\9A\9A\9A\9A\9A\9A\B8\9A\9A\9A\B8?\8B\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\99\8A\8Ao\8D^\8A\B6\9A\8B\8B\8B\8B\8B\8Bnn|}\8C\99}\7F\8Cmo\8F\7FoOl{?nn|}\8C\99}\7F\8Cmo\8F\7FoOl{?[\AB\86\8Doo}nn^|l|k}\8D\B3\99}k}\8D\B3\99}k}\8D\B3\99}\8C\8B\B6\B6\98\88\98\88\99\88\8Bo\88\8Bo\8Do\8C\5C\89\8A\8C\98\8A\8B\99J\95\5C\8Bkz\98\8C\B3\A6\B6\8C\E3z\C5\8A\99\88\A7\98\98\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [199 x i8] c"\99\B9k\8B~\9A\C5\B9\C9\9A\9A\9A\95\9A\8B\9A\9A\9A\98\8Bnz_O?\1F\1F\99\99\99\99\8C\C6\8C\C6\A8O|\8A^\99o\95k\A7\9A\8B\8B\8B\8B\8B\8B}n^n_O}onNnoo_^l{l}n^n_O}onNnoo_^l{ly\8C=\9A\9B\9A\8B\99\8B{{?\99\A6\B7\8C\88\99\9A\A6\B7\8C\88\99\9A\A6\B7\8C\88\99\9A\AA\99{{kyky\A7\97\B7\8C\97\B7\8C\8C\8C\9A\C4\C4\A7\9A\98\A7\B6\B6\86\95\88\99y\88\89\A9\C2\A6\A7\9A\A7\89\B6k\A7[zk\A7\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [199 x i8] c"\99\A0k\8B~\9A\C5\B9\C9\9A\9A\9A\86\9A\8B\9A\9A\B7\98\8B\9A\89_O?\1F\1F\99\99\99\99\A9\C6\A9\C6\A8O\E0\A7z\99o\95\5C\A7\9A\8B\8B\8B\8B\8B\8B}n|n_^}ooO}~ooOl{]}n|n_^}ooO}~ooOl{]y\8C=\9A\AA\9A\8B\99\8B{{?|\A6\B7\8C\88\99\9A\A6\B7\8C\88\99\9A\A6\B7\8C\88\99\9A\AA\99\8A\8Azyzy\A7\97\B7\8C\97\B7\8C\8C\8C\9A\C4\A7\A7\9A\98\A7\B6\B6\86\95\88\99y\88z\A9\D0\A6\A7\9A\98\A7\B6k\A7[kk\A7\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\9A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"], align 16

; Function Attrs: nounwind uwtable
define void @ff_hevc_save_states(%struct.HEVCContext* %s, i32 %ctb_addr_ts) #0 !dbg !2704 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  %ctb_addr_ts.addr = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !2707, metadata !2708), !dbg !2709
  store i32 %ctb_addr_ts, i32* %ctb_addr_ts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ctb_addr_ts.addr, metadata !2710, metadata !2708), !dbg !2711
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2712
  %ps = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 15, !dbg !2714
  %pps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps, i32 0, i32 5, !dbg !2715
  %1 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !2715
  %entropy_coding_sync_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %1, i32 0, i32 19, !dbg !2716
  %2 = load i8, i8* %entropy_coding_sync_enabled_flag, align 1, !dbg !2716
  %conv = zext i8 %2 to i32, !dbg !2712
  %tobool = icmp ne i32 %conv, 0, !dbg !2712
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2717

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %ctb_addr_ts.addr, align 4, !dbg !2718
  %4 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2719
  %ps1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %4, i32 0, i32 15, !dbg !2720
  %sps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps1, i32 0, i32 4, !dbg !2721
  %5 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !2721
  %ctb_width = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %5, i32 0, i32 49, !dbg !2722
  %6 = load i32, i32* %ctb_width, align 4, !dbg !2722
  %rem = srem i32 %3, %6, !dbg !2723
  %cmp = icmp eq i32 %rem, 2, !dbg !2724
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2725

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2726
  %ps3 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %7, i32 0, i32 15, !dbg !2727
  %sps4 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps3, i32 0, i32 4, !dbg !2728
  %8 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps4, align 8, !dbg !2728
  %ctb_width5 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %8, i32 0, i32 49, !dbg !2729
  %9 = load i32, i32* %ctb_width5, align 4, !dbg !2729
  %cmp6 = icmp eq i32 %9, 2, !dbg !2730
  br i1 %cmp6, label %land.lhs.true8, label %if.end, !dbg !2731

land.lhs.true8:                                   ; preds = %lor.lhs.false
  %10 = load i32, i32* %ctb_addr_ts.addr, align 4, !dbg !2732
  %11 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2733
  %ps9 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %11, i32 0, i32 15, !dbg !2734
  %sps10 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps9, i32 0, i32 4, !dbg !2735
  %12 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps10, align 8, !dbg !2735
  %ctb_width11 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %12, i32 0, i32 49, !dbg !2736
  %13 = load i32, i32* %ctb_width11, align 4, !dbg !2736
  %rem12 = srem i32 %10, %13, !dbg !2737
  %cmp13 = icmp eq i32 %rem12, 0, !dbg !2738
  br i1 %cmp13, label %if.then, label %if.end, !dbg !2739

if.then:                                          ; preds = %land.lhs.true8, %land.lhs.true
  %14 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2741
  %cabac_state = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %14, i32 0, i32 9, !dbg !2743
  %15 = load i8*, i8** %cabac_state, align 8, !dbg !2743
  %16 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2744
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %16, i32 0, i32 4, !dbg !2745
  %17 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !2745
  %cabac_state15 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %17, i32 0, i32 0, !dbg !2746
  %arraydecay = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state15, i32 0, i32 0, !dbg !2747
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %arraydecay, i64 199, i32 1, i1 false), !dbg !2747
  br label %if.end, !dbg !2748

if.end:                                           ; preds = %if.then, %land.lhs.true8, %lor.lhs.false, %entry
  ret void, !dbg !2749
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_cabac_init(%struct.HEVCContext* %s, i32 %ctb_addr_ts) #0 !dbg !2750 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.HEVCContext*, align 8
  %ctb_addr_ts.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %ret71 = alloca i32, align 4
  %ret97 = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !2753, metadata !2708), !dbg !2754
  store i32 %ctb_addr_ts, i32* %ctb_addr_ts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ctb_addr_ts.addr, metadata !2755, metadata !2708), !dbg !2756
  %0 = load i32, i32* %ctb_addr_ts.addr, align 4, !dbg !2757
  %1 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2759
  %sh = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %1, i32 0, i32 21, !dbg !2760
  %slice_ctb_addr_rs = getelementptr inbounds %struct.SliceHeader, %struct.SliceHeader* %sh, i32 0, i32 49, !dbg !2761
  %2 = load i32, i32* %slice_ctb_addr_rs, align 8, !dbg !2761
  %idxprom = sext i32 %2 to i64, !dbg !2762
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2762
  %ps = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 15, !dbg !2763
  %pps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps, i32 0, i32 5, !dbg !2764
  %4 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !2764
  %ctb_addr_rs_to_ts = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %4, i32 0, i32 51, !dbg !2765
  %5 = load i32*, i32** %ctb_addr_rs_to_ts, align 8, !dbg !2765
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !2762
  %6 = load i32, i32* %arrayidx, align 4, !dbg !2762
  %cmp = icmp eq i32 %0, %6, !dbg !2766
  br i1 %cmp, label %if.then, label %if.else50, !dbg !2767

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2768, metadata !2708), !dbg !2770
  %7 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2771
  %call = call i32 @cabac_init_decoder(%struct.HEVCContext* %7), !dbg !2772
  store i32 %call, i32* %ret, align 4, !dbg !2770
  %8 = load i32, i32* %ret, align 4, !dbg !2773
  %cmp1 = icmp slt i32 %8, 0, !dbg !2775
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !2776

if.then2:                                         ; preds = %if.then
  %9 = load i32, i32* %ret, align 4, !dbg !2777
  store i32 %9, i32* %retval, align 4, !dbg !2778
  br label %return, !dbg !2778

if.end:                                           ; preds = %if.then
  %10 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2779
  %sh3 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %10, i32 0, i32 21, !dbg !2781
  %dependent_slice_segment_flag = getelementptr inbounds %struct.SliceHeader, %struct.SliceHeader* %sh3, i32 0, i32 6, !dbg !2782
  %11 = load i8, i8* %dependent_slice_segment_flag, align 1, !dbg !2782
  %conv = zext i8 %11 to i32, !dbg !2779
  %cmp4 = icmp eq i32 %conv, 0, !dbg !2783
  br i1 %cmp4, label %if.then20, label %lor.lhs.false, !dbg !2784

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2785
  %ps6 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %12, i32 0, i32 15, !dbg !2786
  %pps7 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps6, i32 0, i32 5, !dbg !2787
  %13 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps7, align 8, !dbg !2787
  %tiles_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %13, i32 0, i32 18, !dbg !2788
  %14 = load i8, i8* %tiles_enabled_flag, align 2, !dbg !2788
  %conv8 = zext i8 %14 to i32, !dbg !2785
  %tobool = icmp ne i32 %conv8, 0, !dbg !2785
  br i1 %tobool, label %land.lhs.true, label %if.end21, !dbg !2789

land.lhs.true:                                    ; preds = %lor.lhs.false
  %15 = load i32, i32* %ctb_addr_ts.addr, align 4, !dbg !2790
  %idxprom9 = sext i32 %15 to i64, !dbg !2791
  %16 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2791
  %ps10 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %16, i32 0, i32 15, !dbg !2792
  %pps11 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps10, i32 0, i32 5, !dbg !2793
  %17 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps11, align 8, !dbg !2793
  %tile_id = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %17, i32 0, i32 53, !dbg !2794
  %18 = load i32*, i32** %tile_id, align 8, !dbg !2794
  %arrayidx12 = getelementptr inbounds i32, i32* %18, i64 %idxprom9, !dbg !2791
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !2791
  %20 = load i32, i32* %ctb_addr_ts.addr, align 4, !dbg !2795
  %sub = sub nsw i32 %20, 1, !dbg !2796
  %idxprom13 = sext i32 %sub to i64, !dbg !2797
  %21 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2797
  %ps14 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %21, i32 0, i32 15, !dbg !2798
  %pps15 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps14, i32 0, i32 5, !dbg !2799
  %22 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps15, align 8, !dbg !2799
  %tile_id16 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %22, i32 0, i32 53, !dbg !2800
  %23 = load i32*, i32** %tile_id16, align 8, !dbg !2800
  %arrayidx17 = getelementptr inbounds i32, i32* %23, i64 %idxprom13, !dbg !2797
  %24 = load i32, i32* %arrayidx17, align 4, !dbg !2797
  %cmp18 = icmp ne i32 %19, %24, !dbg !2801
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !2802

if.then20:                                        ; preds = %land.lhs.true, %if.end
  %25 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2804
  call void @cabac_init_state(%struct.HEVCContext* %25), !dbg !2805
  br label %if.end21, !dbg !2805

if.end21:                                         ; preds = %if.then20, %land.lhs.true, %lor.lhs.false
  %26 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2806
  %sh22 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %26, i32 0, i32 21, !dbg !2808
  %first_slice_in_pic_flag = getelementptr inbounds %struct.SliceHeader, %struct.SliceHeader* %sh22, i32 0, i32 5, !dbg !2809
  %27 = load i8, i8* %first_slice_in_pic_flag, align 4, !dbg !2809
  %tobool23 = icmp ne i8 %27, 0, !dbg !2806
  br i1 %tobool23, label %if.end49, label %land.lhs.true24, !dbg !2810

land.lhs.true24:                                  ; preds = %if.end21
  %28 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2811
  %ps25 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %28, i32 0, i32 15, !dbg !2812
  %pps26 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps25, i32 0, i32 5, !dbg !2813
  %29 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps26, align 8, !dbg !2813
  %entropy_coding_sync_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %29, i32 0, i32 19, !dbg !2814
  %30 = load i8, i8* %entropy_coding_sync_enabled_flag, align 1, !dbg !2814
  %conv27 = zext i8 %30 to i32, !dbg !2811
  %tobool28 = icmp ne i32 %conv27, 0, !dbg !2811
  br i1 %tobool28, label %if.then29, label %if.end49, !dbg !2815

if.then29:                                        ; preds = %land.lhs.true24
  %31 = load i32, i32* %ctb_addr_ts.addr, align 4, !dbg !2816
  %32 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2819
  %ps30 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %32, i32 0, i32 15, !dbg !2820
  %sps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps30, i32 0, i32 4, !dbg !2821
  %33 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !2821
  %ctb_width = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %33, i32 0, i32 49, !dbg !2822
  %34 = load i32, i32* %ctb_width, align 4, !dbg !2822
  %rem = srem i32 %31, %34, !dbg !2823
  %cmp31 = icmp eq i32 %rem, 0, !dbg !2824
  br i1 %cmp31, label %if.then33, label %if.end48, !dbg !2825

if.then33:                                        ; preds = %if.then29
  %35 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2826
  %ps34 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %35, i32 0, i32 15, !dbg !2829
  %sps35 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps34, i32 0, i32 4, !dbg !2830
  %36 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps35, align 8, !dbg !2830
  %ctb_width36 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %36, i32 0, i32 49, !dbg !2831
  %37 = load i32, i32* %ctb_width36, align 4, !dbg !2831
  %cmp37 = icmp eq i32 %37, 1, !dbg !2832
  br i1 %cmp37, label %if.then39, label %if.else, !dbg !2833

if.then39:                                        ; preds = %if.then33
  %38 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2834
  call void @cabac_init_state(%struct.HEVCContext* %38), !dbg !2835
  br label %if.end47, !dbg !2835

if.else:                                          ; preds = %if.then33
  %39 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2836
  %sh40 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %39, i32 0, i32 21, !dbg !2838
  %dependent_slice_segment_flag41 = getelementptr inbounds %struct.SliceHeader, %struct.SliceHeader* %sh40, i32 0, i32 6, !dbg !2839
  %40 = load i8, i8* %dependent_slice_segment_flag41, align 1, !dbg !2839
  %conv42 = zext i8 %40 to i32, !dbg !2836
  %cmp43 = icmp eq i32 %conv42, 1, !dbg !2840
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !2841

if.then45:                                        ; preds = %if.else
  %41 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2842
  call void @load_states(%struct.HEVCContext* %41), !dbg !2843
  br label %if.end46, !dbg !2843

if.end46:                                         ; preds = %if.then45, %if.else
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then39
  br label %if.end48, !dbg !2844

if.end48:                                         ; preds = %if.end47, %if.then29
  br label %if.end49, !dbg !2845

if.end49:                                         ; preds = %if.end48, %land.lhs.true24, %if.end21
  br label %if.end124, !dbg !2846

if.else50:                                        ; preds = %entry
  %42 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2847
  %ps51 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %42, i32 0, i32 15, !dbg !2850
  %pps52 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps51, i32 0, i32 5, !dbg !2851
  %43 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps52, align 8, !dbg !2851
  %tiles_enabled_flag53 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %43, i32 0, i32 18, !dbg !2852
  %44 = load i8, i8* %tiles_enabled_flag53, align 2, !dbg !2852
  %conv54 = zext i8 %44 to i32, !dbg !2847
  %tobool55 = icmp ne i32 %conv54, 0, !dbg !2847
  br i1 %tobool55, label %land.lhs.true56, label %if.end84, !dbg !2853

land.lhs.true56:                                  ; preds = %if.else50
  %45 = load i32, i32* %ctb_addr_ts.addr, align 4, !dbg !2854
  %idxprom57 = sext i32 %45 to i64, !dbg !2855
  %46 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2855
  %ps58 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %46, i32 0, i32 15, !dbg !2856
  %pps59 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps58, i32 0, i32 5, !dbg !2857
  %47 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps59, align 8, !dbg !2857
  %tile_id60 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %47, i32 0, i32 53, !dbg !2858
  %48 = load i32*, i32** %tile_id60, align 8, !dbg !2858
  %arrayidx61 = getelementptr inbounds i32, i32* %48, i64 %idxprom57, !dbg !2855
  %49 = load i32, i32* %arrayidx61, align 4, !dbg !2855
  %50 = load i32, i32* %ctb_addr_ts.addr, align 4, !dbg !2859
  %sub62 = sub nsw i32 %50, 1, !dbg !2860
  %idxprom63 = sext i32 %sub62 to i64, !dbg !2861
  %51 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2861
  %ps64 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %51, i32 0, i32 15, !dbg !2862
  %pps65 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps64, i32 0, i32 5, !dbg !2863
  %52 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps65, align 8, !dbg !2863
  %tile_id66 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %52, i32 0, i32 53, !dbg !2864
  %53 = load i32*, i32** %tile_id66, align 8, !dbg !2864
  %arrayidx67 = getelementptr inbounds i32, i32* %53, i64 %idxprom63, !dbg !2861
  %54 = load i32, i32* %arrayidx67, align 4, !dbg !2861
  %cmp68 = icmp ne i32 %49, %54, !dbg !2865
  br i1 %cmp68, label %if.then70, label %if.end84, !dbg !2866

if.then70:                                        ; preds = %land.lhs.true56
  call void @llvm.dbg.declare(metadata i32* %ret71, metadata !2868, metadata !2708), !dbg !2870
  %55 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2871
  %threads_number = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %55, i32 0, i32 6, !dbg !2873
  %56 = load i8, i8* %threads_number, align 1, !dbg !2873
  %conv72 = zext i8 %56 to i32, !dbg !2871
  %cmp73 = icmp eq i32 %conv72, 1, !dbg !2874
  br i1 %cmp73, label %if.then75, label %if.else77, !dbg !2875

if.then75:                                        ; preds = %if.then70
  %57 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2876
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %57, i32 0, i32 4, !dbg !2877
  %58 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !2877
  %call76 = call i32 @cabac_reinit(%struct.HEVCLocalContext* %58), !dbg !2878
  store i32 %call76, i32* %ret71, align 4, !dbg !2879
  br label %if.end79, !dbg !2880

if.else77:                                        ; preds = %if.then70
  %59 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2881
  %call78 = call i32 @cabac_init_decoder(%struct.HEVCContext* %59), !dbg !2883
  store i32 %call78, i32* %ret71, align 4, !dbg !2884
  br label %if.end79

if.end79:                                         ; preds = %if.else77, %if.then75
  %60 = load i32, i32* %ret71, align 4, !dbg !2885
  %cmp80 = icmp slt i32 %60, 0, !dbg !2887
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !2888

if.then82:                                        ; preds = %if.end79
  %61 = load i32, i32* %ret71, align 4, !dbg !2889
  store i32 %61, i32* %retval, align 4, !dbg !2890
  br label %return, !dbg !2890

if.end83:                                         ; preds = %if.end79
  %62 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2891
  call void @cabac_init_state(%struct.HEVCContext* %62), !dbg !2892
  br label %if.end84, !dbg !2893

if.end84:                                         ; preds = %if.end83, %land.lhs.true56, %if.else50
  %63 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2894
  %ps85 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %63, i32 0, i32 15, !dbg !2896
  %pps86 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps85, i32 0, i32 5, !dbg !2897
  %64 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps86, align 8, !dbg !2897
  %entropy_coding_sync_enabled_flag87 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %64, i32 0, i32 19, !dbg !2898
  %65 = load i8, i8* %entropy_coding_sync_enabled_flag87, align 1, !dbg !2898
  %tobool88 = icmp ne i8 %65, 0, !dbg !2894
  br i1 %tobool88, label %if.then89, label %if.end123, !dbg !2899

if.then89:                                        ; preds = %if.end84
  %66 = load i32, i32* %ctb_addr_ts.addr, align 4, !dbg !2900
  %67 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2903
  %ps90 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %67, i32 0, i32 15, !dbg !2904
  %sps91 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps90, i32 0, i32 4, !dbg !2905
  %68 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps91, align 8, !dbg !2905
  %ctb_width92 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %68, i32 0, i32 49, !dbg !2906
  %69 = load i32, i32* %ctb_width92, align 4, !dbg !2906
  %rem93 = srem i32 %66, %69, !dbg !2907
  %cmp94 = icmp eq i32 %rem93, 0, !dbg !2908
  br i1 %cmp94, label %if.then96, label %if.end122, !dbg !2909

if.then96:                                        ; preds = %if.then89
  call void @llvm.dbg.declare(metadata i32* %ret97, metadata !2910, metadata !2708), !dbg !2912
  %70 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2913
  %HEVClc98 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %70, i32 0, i32 4, !dbg !2914
  %71 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc98, align 8, !dbg !2914
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %71, i32 0, i32 4, !dbg !2915
  %call99 = call i32 @get_cabac_terminate(%struct.CABACContext* %cc), !dbg !2916
  %72 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2917
  %threads_number100 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %72, i32 0, i32 6, !dbg !2919
  %73 = load i8, i8* %threads_number100, align 1, !dbg !2919
  %conv101 = zext i8 %73 to i32, !dbg !2917
  %cmp102 = icmp eq i32 %conv101, 1, !dbg !2920
  br i1 %cmp102, label %if.then104, label %if.else107, !dbg !2921

if.then104:                                       ; preds = %if.then96
  %74 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2922
  %HEVClc105 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %74, i32 0, i32 4, !dbg !2923
  %75 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc105, align 8, !dbg !2923
  %call106 = call i32 @cabac_reinit(%struct.HEVCLocalContext* %75), !dbg !2924
  store i32 %call106, i32* %ret97, align 4, !dbg !2925
  br label %if.end109, !dbg !2926

if.else107:                                       ; preds = %if.then96
  %76 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2927
  %call108 = call i32 @cabac_init_decoder(%struct.HEVCContext* %76), !dbg !2929
  store i32 %call108, i32* %ret97, align 4, !dbg !2930
  br label %if.end109

if.end109:                                        ; preds = %if.else107, %if.then104
  %77 = load i32, i32* %ret97, align 4, !dbg !2931
  %cmp110 = icmp slt i32 %77, 0, !dbg !2933
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !2934

if.then112:                                       ; preds = %if.end109
  %78 = load i32, i32* %ret97, align 4, !dbg !2935
  store i32 %78, i32* %retval, align 4, !dbg !2936
  br label %return, !dbg !2936

if.end113:                                        ; preds = %if.end109
  %79 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2937
  %ps114 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %79, i32 0, i32 15, !dbg !2939
  %sps115 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps114, i32 0, i32 4, !dbg !2940
  %80 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps115, align 8, !dbg !2940
  %ctb_width116 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %80, i32 0, i32 49, !dbg !2941
  %81 = load i32, i32* %ctb_width116, align 4, !dbg !2941
  %cmp117 = icmp eq i32 %81, 1, !dbg !2942
  br i1 %cmp117, label %if.then119, label %if.else120, !dbg !2943

if.then119:                                       ; preds = %if.end113
  %82 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2944
  call void @cabac_init_state(%struct.HEVCContext* %82), !dbg !2945
  br label %if.end121, !dbg !2945

if.else120:                                       ; preds = %if.end113
  %83 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2946
  call void @load_states(%struct.HEVCContext* %83), !dbg !2947
  br label %if.end121

if.end121:                                        ; preds = %if.else120, %if.then119
  br label %if.end122, !dbg !2948

if.end122:                                        ; preds = %if.end121, %if.then89
  br label %if.end123, !dbg !2949

if.end123:                                        ; preds = %if.end122, %if.end84
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.end49
  store i32 0, i32* %retval, align 4, !dbg !2950
  br label %return, !dbg !2950

return:                                           ; preds = %if.end124, %if.then112, %if.then82, %if.then2
  %84 = load i32, i32* %retval, align 4, !dbg !2951
  ret i32 %84, !dbg !2951
}

; Function Attrs: nounwind uwtable
define internal i32 @cabac_init_decoder(%struct.HEVCContext* %s) #0 !dbg !2952 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !2955, metadata !2708), !dbg !2956
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !2957, metadata !2708), !dbg !2959
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2960
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !2961
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !2961
  %gb1 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 3, !dbg !2962
  store %struct.GetBitContext* %gb1, %struct.GetBitContext** %gb, align 8, !dbg !2959
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2963
  call void @skip_bits(%struct.GetBitContext* %2, i32 1), !dbg !2964
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2965
  %call = call i8* @align_get_bits(%struct.GetBitContext* %3), !dbg !2966
  %4 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !2967
  %HEVClc2 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %4, i32 0, i32 4, !dbg !2968
  %5 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc2, align 8, !dbg !2968
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %5, i32 0, i32 4, !dbg !2969
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2970
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 0, !dbg !2971
  %7 = load i8*, i8** %buffer, align 8, !dbg !2971
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2972
  %call3 = call i32 @get_bits_count(%struct.GetBitContext* %8), !dbg !2973
  %div = sdiv i32 %call3, 8, !dbg !2974
  %idx.ext = sext i32 %div to i64, !dbg !2975
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %idx.ext, !dbg !2975
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2976
  %call4 = call i32 @get_bits_left(%struct.GetBitContext* %9), !dbg !2977
  %add = add nsw i32 %call4, 7, !dbg !2978
  %div5 = sdiv i32 %add, 8, !dbg !2979
  %call6 = call i32 @ff_init_cabac_decoder(%struct.CABACContext* %cc, i8* %add.ptr, i32 %div5), !dbg !2980
  ret i32 %call6, !dbg !2981
}

; Function Attrs: nounwind uwtable
define internal void @cabac_init_state(%struct.HEVCContext* %s) #0 !dbg !2982 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2985, metadata !2708), !dbg !2990
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !2995, metadata !2708), !dbg !2996
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !2997, metadata !2708), !dbg !2998
  %s.addr = alloca %struct.HEVCContext*, align 8
  %init_type = alloca i32, align 4
  %i = alloca i32, align 4
  %init_value = alloca i32, align 4
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  %pre = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !2999, metadata !2708), !dbg !3000
  call void @llvm.dbg.declare(metadata i32* %init_type, metadata !3001, metadata !2708), !dbg !3002
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3003
  %sh = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 21, !dbg !3004
  %slice_type = getelementptr inbounds %struct.SliceHeader, %struct.SliceHeader* %sh, i32 0, i32 3, !dbg !3005
  %1 = load i32, i32* %slice_type, align 4, !dbg !3005
  %sub = sub i32 2, %1, !dbg !3006
  store i32 %sub, i32* %init_type, align 4, !dbg !3002
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3007, metadata !2708), !dbg !3008
  %2 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3009
  %sh1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %2, i32 0, i32 21, !dbg !3011
  %cabac_init_flag = getelementptr inbounds %struct.SliceHeader, %struct.SliceHeader* %sh1, i32 0, i32 22, !dbg !3012
  %3 = load i8, i8* %cabac_init_flag, align 8, !dbg !3012
  %conv = zext i8 %3 to i32, !dbg !3009
  %tobool = icmp ne i32 %conv, 0, !dbg !3009
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3013

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3014
  %sh2 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %4, i32 0, i32 21, !dbg !3016
  %slice_type3 = getelementptr inbounds %struct.SliceHeader, %struct.SliceHeader* %sh2, i32 0, i32 3, !dbg !3017
  %5 = load i32, i32* %slice_type3, align 4, !dbg !3017
  %cmp = icmp ne i32 %5, 2, !dbg !3018
  br i1 %cmp, label %if.then, label %if.end, !dbg !3019

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, i32* %init_type, align 4, !dbg !3020
  %xor = xor i32 %6, 3, !dbg !3020
  store i32 %xor, i32* %init_type, align 4, !dbg !3020
  br label %if.end, !dbg !3021

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  store i32 0, i32* %i, align 4, !dbg !3022
  br label %for.cond, !dbg !3023

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !3024
  %cmp5 = icmp slt i32 %7, 199, !dbg !3026
  br i1 %cmp5, label %for.body, label %for.end, !dbg !3027

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %init_value, metadata !3028, metadata !2708), !dbg !3029
  %8 = load i32, i32* %i, align 4, !dbg !3030
  %idxprom = sext i32 %8 to i64, !dbg !3031
  %9 = load i32, i32* %init_type, align 4, !dbg !3032
  %idxprom7 = sext i32 %9 to i64, !dbg !3031
  %arrayidx = getelementptr inbounds [3 x [199 x i8]], [3 x [199 x i8]]* @init_values, i64 0, i64 %idxprom7, !dbg !3031
  %arrayidx8 = getelementptr inbounds [199 x i8], [199 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !3031
  %10 = load i8, i8* %arrayidx8, align 1, !dbg !3031
  %conv9 = zext i8 %10 to i32, !dbg !3031
  store i32 %conv9, i32* %init_value, align 4, !dbg !3029
  call void @llvm.dbg.declare(metadata i32* %m, metadata !3033, metadata !2708), !dbg !3034
  %11 = load i32, i32* %init_value, align 4, !dbg !3035
  %shr = ashr i32 %11, 4, !dbg !3036
  %mul = mul nsw i32 %shr, 5, !dbg !3037
  %sub10 = sub nsw i32 %mul, 45, !dbg !3038
  store i32 %sub10, i32* %m, align 4, !dbg !3034
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3039, metadata !2708), !dbg !3040
  %12 = load i32, i32* %init_value, align 4, !dbg !3041
  %and = and i32 %12, 15, !dbg !3042
  %shl = shl i32 %and, 3, !dbg !3043
  %sub11 = sub nsw i32 %shl, 16, !dbg !3044
  store i32 %sub11, i32* %n, align 4, !dbg !3040
  call void @llvm.dbg.declare(metadata i32* %pre, metadata !3045, metadata !2708), !dbg !3046
  %13 = load i32, i32* %m, align 4, !dbg !3047
  %14 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3048
  %sh12 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %14, i32 0, i32 21, !dbg !3049
  %slice_qp = getelementptr inbounds %struct.SliceHeader, %struct.SliceHeader* %sh12, i32 0, i32 38, !dbg !3050
  %15 = load i8, i8* %slice_qp, align 4, !dbg !3050
  %conv13 = sext i8 %15 to i32, !dbg !3048
  store i32 %conv13, i32* %a.addr.i, align 4, !dbg !3051
  store i32 0, i32* %amin.addr.i, align 4, !dbg !3051
  store i32 51, i32* %amax.addr.i, align 4, !dbg !3051
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !3052
  %17 = load i32, i32* %amin.addr.i, align 4, !dbg !3054
  %cmp.i = icmp slt i32 %16, %17, !dbg !3055
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !3056

if.then.i:                                        ; preds = %for.body
  %18 = load i32, i32* %amin.addr.i, align 4, !dbg !3057
  store i32 %18, i32* %retval.i, align 4, !dbg !3059
  br label %av_clip_c.exit, !dbg !3059

if.else.i:                                        ; preds = %for.body
  %19 = load i32, i32* %a.addr.i, align 4, !dbg !3060
  %20 = load i32, i32* %amax.addr.i, align 4, !dbg !3062
  %cmp1.i = icmp sgt i32 %19, %20, !dbg !3063
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !3064

if.then2.i:                                       ; preds = %if.else.i
  %21 = load i32, i32* %amax.addr.i, align 4, !dbg !3065
  store i32 %21, i32* %retval.i, align 4, !dbg !3067
  br label %av_clip_c.exit, !dbg !3067

if.else3.i:                                       ; preds = %if.else.i
  %22 = load i32, i32* %a.addr.i, align 4, !dbg !3068
  store i32 %22, i32* %retval.i, align 4, !dbg !3069
  br label %av_clip_c.exit, !dbg !3069

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %23 = load i32, i32* %retval.i, align 4, !dbg !3070
  %mul14 = mul nsw i32 %13, %23, !dbg !3071
  %shr15 = ashr i32 %mul14, 4, !dbg !3072
  %24 = load i32, i32* %n, align 4, !dbg !3073
  %add = add nsw i32 %shr15, %24, !dbg !3074
  %mul16 = mul nsw i32 2, %add, !dbg !3075
  %sub17 = sub nsw i32 %mul16, 127, !dbg !3076
  store i32 %sub17, i32* %pre, align 4, !dbg !3046
  %25 = load i32, i32* %pre, align 4, !dbg !3077
  %shr18 = ashr i32 %25, 31, !dbg !3078
  %26 = load i32, i32* %pre, align 4, !dbg !3079
  %xor19 = xor i32 %26, %shr18, !dbg !3079
  store i32 %xor19, i32* %pre, align 4, !dbg !3079
  %27 = load i32, i32* %pre, align 4, !dbg !3080
  %cmp20 = icmp sgt i32 %27, 124, !dbg !3082
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !3083

if.then22:                                        ; preds = %av_clip_c.exit
  %28 = load i32, i32* %pre, align 4, !dbg !3084
  %and23 = and i32 %28, 1, !dbg !3085
  %add24 = add nsw i32 124, %and23, !dbg !3086
  store i32 %add24, i32* %pre, align 4, !dbg !3087
  br label %if.end25, !dbg !3088

if.end25:                                         ; preds = %if.then22, %av_clip_c.exit
  %29 = load i32, i32* %pre, align 4, !dbg !3089
  %conv26 = trunc i32 %29 to i8, !dbg !3089
  %30 = load i32, i32* %i, align 4, !dbg !3090
  %idxprom27 = sext i32 %30 to i64, !dbg !3091
  %31 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3091
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %31, i32 0, i32 4, !dbg !3092
  %32 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3092
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %32, i32 0, i32 0, !dbg !3093
  %arrayidx28 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom27, !dbg !3091
  store i8 %conv26, i8* %arrayidx28, align 1, !dbg !3094
  br label %for.inc, !dbg !3095

for.inc:                                          ; preds = %if.end25
  %33 = load i32, i32* %i, align 4, !dbg !3096
  %inc = add nsw i32 %33, 1, !dbg !3096
  store i32 %inc, i32* %i, align 4, !dbg !3096
  br label %for.cond, !dbg !3098, !llvm.loop !3099

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3101
  br label %for.cond29, !dbg !3103

for.cond29:                                       ; preds = %for.inc36, %for.end
  %34 = load i32, i32* %i, align 4, !dbg !3104
  %cmp30 = icmp slt i32 %34, 4, !dbg !3107
  br i1 %cmp30, label %for.body32, label %for.end38, !dbg !3108

for.body32:                                       ; preds = %for.cond29
  %35 = load i32, i32* %i, align 4, !dbg !3109
  %idxprom33 = sext i32 %35 to i64, !dbg !3110
  %36 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3110
  %HEVClc34 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %36, i32 0, i32 4, !dbg !3111
  %37 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc34, align 8, !dbg !3111
  %stat_coeff = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %37, i32 0, i32 1, !dbg !3112
  %arrayidx35 = getelementptr inbounds [4 x i8], [4 x i8]* %stat_coeff, i64 0, i64 %idxprom33, !dbg !3110
  store i8 0, i8* %arrayidx35, align 1, !dbg !3113
  br label %for.inc36, !dbg !3110

for.inc36:                                        ; preds = %for.body32
  %38 = load i32, i32* %i, align 4, !dbg !3114
  %inc37 = add nsw i32 %38, 1, !dbg !3114
  store i32 %inc37, i32* %i, align 4, !dbg !3114
  br label %for.cond29, !dbg !3116, !llvm.loop !3117

for.end38:                                        ; preds = %for.cond29
  ret void, !dbg !3119
}

; Function Attrs: nounwind uwtable
define internal void @load_states(%struct.HEVCContext* %s) #0 !dbg !3120 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3121, metadata !2708), !dbg !3122
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3123
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !3124
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3124
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 0, !dbg !3125
  %arraydecay = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i32 0, i32 0, !dbg !3126
  %2 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3127
  %cabac_state1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %2, i32 0, i32 9, !dbg !3128
  %3 = load i8*, i8** %cabac_state1, align 8, !dbg !3128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %3, i64 199, i32 1, i1 false), !dbg !3126
  ret void, !dbg !3129
}

; Function Attrs: nounwind uwtable
define internal i32 @cabac_reinit(%struct.HEVCLocalContext* %lc) #0 !dbg !3130 {
entry:
  %lc.addr = alloca %struct.HEVCLocalContext*, align 8
  store %struct.HEVCLocalContext* %lc, %struct.HEVCLocalContext** %lc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCLocalContext** %lc.addr, metadata !3133, metadata !2708), !dbg !3134
  %0 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc.addr, align 8, !dbg !3135
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %0, i32 0, i32 4, !dbg !3136
  %call = call i8* @skip_bytes(%struct.CABACContext* %cc, i32 0), !dbg !3137
  %cmp = icmp eq i8* %call, null, !dbg !3138
  %cond = select i1 %cmp, i32 -1094995529, i32 0, !dbg !3137
  ret i32 %cond, !dbg !3139
}

; Function Attrs: nounwind uwtable
define internal i32 @get_cabac_terminate(%struct.CABACContext* %c) #0 !dbg !3140 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.CABACContext*, align 8
  store %struct.CABACContext* %c, %struct.CABACContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr, metadata !3145, metadata !2708), !dbg !3146
  %0 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !3147
  %range = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %0, i32 0, i32 1, !dbg !3148
  %1 = load i32, i32* %range, align 4, !dbg !3149
  %sub = sub nsw i32 %1, 2, !dbg !3149
  store i32 %sub, i32* %range, align 4, !dbg !3149
  %2 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !3150
  %low = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %2, i32 0, i32 0, !dbg !3152
  %3 = load i32, i32* %low, align 8, !dbg !3152
  %4 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !3153
  %range1 = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %4, i32 0, i32 1, !dbg !3154
  %5 = load i32, i32* %range1, align 4, !dbg !3154
  %shl = shl i32 %5, 17, !dbg !3155
  %cmp = icmp slt i32 %3, %shl, !dbg !3156
  br i1 %cmp, label %if.then, label %if.else, !dbg !3157

if.then:                                          ; preds = %entry
  %6 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !3158
  call void @renorm_cabac_decoder_once(%struct.CABACContext* %6), !dbg !3160
  store i32 0, i32* %retval, align 4, !dbg !3161
  br label %return, !dbg !3161

if.else:                                          ; preds = %entry
  %7 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !3162
  %bytestream = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %7, i32 0, i32 4, !dbg !3164
  %8 = load i8*, i8** %bytestream, align 8, !dbg !3164
  %9 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !3165
  %bytestream_start = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %9, i32 0, i32 3, !dbg !3166
  %10 = load i8*, i8** %bytestream_start, align 8, !dbg !3166
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !3167
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64, !dbg !3167
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3167
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !3162
  store i32 %conv, i32* %retval, align 4, !dbg !3168
  br label %return, !dbg !3168

return:                                           ; preds = %if.else, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !3169
  ret i32 %11, !dbg !3169
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_sao_merge_flag_decode(%struct.HEVCContext* %s) #0 !dbg !3170 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3171, metadata !2708), !dbg !3172
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3173
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !3174
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3174
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !3175
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 0), align 16, !dbg !3176
  %idxprom = sext i32 %2 to i64, !dbg !3177
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3177
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 4, !dbg !3178
  %4 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !3178
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %4, i32 0, i32 0, !dbg !3179
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !3177
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !3180
  ret i32 %call, !dbg !3181
}

; Function Attrs: nounwind uwtable
define internal i32 @get_cabac(%struct.CABACContext* %c, i8* %state) #0 !dbg !3182 {
entry:
  %c.addr.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i, metadata !3186, metadata !2708), !dbg !3189
  %state.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %state.addr.i, metadata !3191, metadata !2708), !dbg !3192
  %bit.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.i, metadata !3193, metadata !2708), !dbg !3194
  %tmp.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tmp.i, metadata !3195, metadata !2708), !dbg !3196
  %c.addr = alloca %struct.CABACContext*, align 8
  %state.addr = alloca i8*, align 8
  store %struct.CABACContext* %c, %struct.CABACContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr, metadata !3197, metadata !2708), !dbg !3198
  store i8* %state, i8** %state.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %state.addr, metadata !3199, metadata !2708), !dbg !3200
  %0 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !3201
  %1 = load i8*, i8** %state.addr, align 8, !dbg !3202
  store %struct.CABACContext* %0, %struct.CABACContext** %c.addr.i, align 8, !dbg !3203
  store i8* %1, i8** %state.addr.i, align 8, !dbg !3203
  %2 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !3204
  %low.i = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %2, i32 0, i32 0, !dbg !3205
  %3 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !3206
  %range.i = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %3, i32 0, i32 1, !dbg !3207
  %4 = load i8*, i8** %state.addr.i, align 8, !dbg !3208
  %5 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !3209
  %6 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !3210
  %low1.i = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %6, i32 0, i32 0, !dbg !3211
  %7 = load i32, i32* %low1.i, align 8, !dbg !3211
  %8 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !3212
  %range2.i = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %8, i32 0, i32 1, !dbg !3213
  %9 = load i32, i32* %range2.i, align 4, !dbg !3213
  %10 = call { i32, i32, i32, i32 } asm sideeffect "movzbl ($4)    , $0                                     \0A\09mov    $2     , $3                                     \0A\09and    $$0xC0       , $2                                   \0A\09movzbl ff_h264_cabac_tables+512($0, $2, 2), $2 \0A\09sub    $2     , $3                                     \0A\09mov    $3       , %ecx     \0A\09shl    $$17         , $3     \0A\09cmp    $1       , $3     \0A\09cmova  %ecx       , $2   \0A\09sbb    %ecx       , %ecx     \0A\09and    %ecx       , $3     \0A\09xor    %ecx       , $0     \0A\09sub    $3       , $1     \0A\09movzbl ff_h264_cabac_tables+0($2), %ecx    \0A\09shl    %cl        , $2                                   \0A\09movzbl ff_h264_cabac_tables+1024+128($0), $3  \0A\09shl    %cl        , $1                                     \0A\09mov    ${3:b}   , ($4)                                  \0A\09test   ${1:w}   , ${1:w}                                 \0A\09 jnz   2f                                                      \0A\09mov    ${6:c}($5)      , %rcx                              \0A\09cmp    ${7:c}($5)       , %rcx                              \0A\09jge    1f                                                      \0A\09addq $$2  , ${6:c}($5)                                    \0A\091:                                                             \0A\09movzwl (%rcx) , $3                                  \0A\09lea    -1($1)   , %ecx                                     \0A\09xor    $1       , %ecx                                     \0A\09shr    $$15         , %ecx                                     \0A\09bswap  $3                                                   \0A\09shr    $$15         , $3                                     \0A\09movzbl ff_h264_cabac_tables+0(%ecx), %ecx \0A\09sub    $$0xFFFF     , $3                                     \0A\09neg    %ecx                                                   \0A\09add    $$7          , %ecx                                     \0A\09shl    %cl        , $3                                     \0A\09add    $3       , $1                                     \0A\092:                                                             \0A\09", "=&r,=&r,=&r,=&q,r,r,i,i,1,2,~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %4, %struct.CABACContext* %5, i64 24, i64 32, i32 %7, i32 %9) #5, !dbg !3214, !srcloc !3215
  %asmresult.i = extractvalue { i32, i32, i32, i32 } %10, 0, !dbg !3214
  %asmresult3.i = extractvalue { i32, i32, i32, i32 } %10, 1, !dbg !3214
  %asmresult4.i = extractvalue { i32, i32, i32, i32 } %10, 2, !dbg !3214
  %asmresult5.i = extractvalue { i32, i32, i32, i32 } %10, 3, !dbg !3214
  store i32 %asmresult.i, i32* %bit.i, align 4, !dbg !3214
  store i32 %asmresult3.i, i32* %low.i, align 8, !dbg !3214
  store i32 %asmresult4.i, i32* %range.i, align 4, !dbg !3214
  store i32 %asmresult5.i, i32* %tmp.i, align 4, !dbg !3214
  %11 = load i32, i32* %bit.i, align 4, !dbg !3216
  %and.i = and i32 %11, 1, !dbg !3217
  ret i32 %and.i, !dbg !3218
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_sao_type_idx_decode(%struct.HEVCContext* %s) #0 !dbg !3219 {
entry:
  %c.addr.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i, metadata !3220, metadata !2708), !dbg !3222
  %tmp.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i, metadata !3225, metadata !2708), !dbg !3228
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !3229, metadata !2708), !dbg !3230
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.HEVCContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3231, metadata !2708), !dbg !3232
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3233
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !3235
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3235
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !3236
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 1), align 4, !dbg !3237
  %idxprom = sext i32 %2 to i64, !dbg !3238
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3238
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 4, !dbg !3239
  %4 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !3239
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %4, i32 0, i32 0, !dbg !3240
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !3238
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !3241
  %tobool = icmp ne i32 %call, 0, !dbg !3241
  br i1 %tobool, label %if.end, label %if.then, !dbg !3242

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3243
  br label %return, !dbg !3243

if.end:                                           ; preds = %entry
  %5 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3244
  %HEVClc2 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %5, i32 0, i32 4, !dbg !3245
  %6 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc2, align 8, !dbg !3245
  %cc3 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %6, i32 0, i32 4, !dbg !3246
  store %struct.CABACContext* %cc3, %struct.CABACContext** %c.addr.i, align 8, !dbg !3247
  %7 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !3248
  %8 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %7, i64 0, i64 24, i64 32, i64 4) #5, !dbg !3249, !srcloc !3250
  %asmresult.i = extractvalue { i32, i64 } %8, 0, !dbg !3249
  %asmresult2.i = extractvalue { i32, i64 } %8, 1, !dbg !3249
  store i32 %asmresult.i, i32* %res.i, align 4, !dbg !3249
  store i64 %asmresult2.i, i64* %tmp.i, align 8, !dbg !3249
  %9 = load i32, i32* %res.i, align 4, !dbg !3251
  %tobool5 = icmp ne i32 %9, 0, !dbg !3247
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !3252

if.then6:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !3253
  br label %return, !dbg !3253

if.end7:                                          ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !3254
  br label %return, !dbg !3254

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !3255
  ret i32 %10, !dbg !3255
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_sao_band_position_decode(%struct.HEVCContext* %s) #0 !dbg !3256 {
entry:
  %c.addr.i4 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i4, metadata !3220, metadata !2708), !dbg !3257
  %tmp.i5 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i5, metadata !3225, metadata !2708), !dbg !3261
  %res.i6 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i6, metadata !3229, metadata !2708), !dbg !3262
  %c.addr.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i, metadata !3220, metadata !2708), !dbg !3263
  %tmp.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i, metadata !3225, metadata !2708), !dbg !3265
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !3229, metadata !2708), !dbg !3266
  %s.addr = alloca %struct.HEVCContext*, align 8
  %i = alloca i32, align 4
  %value = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3267, metadata !2708), !dbg !3268
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3269, metadata !2708), !dbg !3270
  call void @llvm.dbg.declare(metadata i32* %value, metadata !3271, metadata !2708), !dbg !3272
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3273
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !3274
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3274
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !3275
  store %struct.CABACContext* %cc, %struct.CABACContext** %c.addr.i, align 8, !dbg !3276
  %2 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !3277
  %3 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %2, i64 0, i64 24, i64 32, i64 4) #5, !dbg !3278, !srcloc !3250
  %asmresult.i = extractvalue { i32, i64 } %3, 0, !dbg !3278
  %asmresult2.i = extractvalue { i32, i64 } %3, 1, !dbg !3278
  store i32 %asmresult.i, i32* %res.i, align 4, !dbg !3278
  store i64 %asmresult2.i, i64* %tmp.i, align 8, !dbg !3278
  %4 = load i32, i32* %res.i, align 4, !dbg !3279
  store i32 %4, i32* %value, align 4, !dbg !3272
  store i32 0, i32* %i, align 4, !dbg !3280
  br label %for.cond, !dbg !3281

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !3282
  %cmp = icmp slt i32 %5, 4, !dbg !3284
  br i1 %cmp, label %for.body, label %for.end, !dbg !3285

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %value, align 4, !dbg !3286
  %shl = shl i32 %6, 1, !dbg !3287
  %7 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3288
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %7, i32 0, i32 4, !dbg !3289
  %8 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !3289
  %cc2 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %8, i32 0, i32 4, !dbg !3290
  store %struct.CABACContext* %cc2, %struct.CABACContext** %c.addr.i4, align 8, !dbg !3291
  %9 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i4, align 8, !dbg !3292
  %10 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %9, i64 0, i64 24, i64 32, i64 4) #5, !dbg !3293, !srcloc !3250
  %asmresult.i7 = extractvalue { i32, i64 } %10, 0, !dbg !3293
  %asmresult2.i8 = extractvalue { i32, i64 } %10, 1, !dbg !3293
  store i32 %asmresult.i7, i32* %res.i6, align 4, !dbg !3293
  store i64 %asmresult2.i8, i64* %tmp.i5, align 8, !dbg !3293
  %11 = load i32, i32* %res.i6, align 4, !dbg !3294
  %or = or i32 %shl, %11, !dbg !3295
  store i32 %or, i32* %value, align 4, !dbg !3296
  br label %for.inc, !dbg !3297

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !3298
  %inc = add nsw i32 %12, 1, !dbg !3298
  store i32 %inc, i32* %i, align 4, !dbg !3298
  br label %for.cond, !dbg !3300, !llvm.loop !3301

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %value, align 4, !dbg !3303
  ret i32 %13, !dbg !3304
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_sao_offset_abs_decode(%struct.HEVCContext* %s) #0 !dbg !3305 {
entry:
  %c.addr.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i, metadata !3220, metadata !2708), !dbg !3306
  %tmp.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i, metadata !3225, metadata !2708), !dbg !3309
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !3229, metadata !2708), !dbg !3310
  %s.addr = alloca %struct.HEVCContext*, align 8
  %i = alloca i32, align 4
  %length = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3311, metadata !2708), !dbg !3312
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3313, metadata !2708), !dbg !3314
  store i32 0, i32* %i, align 4, !dbg !3314
  call void @llvm.dbg.declare(metadata i32* %length, metadata !3315, metadata !2708), !dbg !3316
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3317
  %ps = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 15, !dbg !3318
  %sps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps, i32 0, i32 4, !dbg !3319
  %1 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !3319
  %bit_depth = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %1, i32 0, i32 5, !dbg !3320
  %2 = load i32, i32* %bit_depth, align 4, !dbg !3320
  %cmp = icmp sgt i32 %2, 10, !dbg !3321
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3322

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3323

cond.false:                                       ; preds = %entry
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3325
  %ps1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 15, !dbg !3326
  %sps2 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps1, i32 0, i32 4, !dbg !3327
  %4 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps2, align 8, !dbg !3327
  %bit_depth3 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %4, i32 0, i32 5, !dbg !3328
  %5 = load i32, i32* %bit_depth3, align 4, !dbg !3328
  br label %cond.end, !dbg !3329

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 10, %cond.true ], [ %5, %cond.false ], !dbg !3330
  %sub = sub nsw i32 %cond, 5, !dbg !3332
  %shl = shl i32 1, %sub, !dbg !3333
  %sub4 = sub nsw i32 %shl, 1, !dbg !3334
  store i32 %sub4, i32* %length, align 4, !dbg !3335
  br label %while.cond, !dbg !3336

while.cond:                                       ; preds = %while.body, %cond.end
  %6 = load i32, i32* %i, align 4, !dbg !3337
  %7 = load i32, i32* %length, align 4, !dbg !3338
  %cmp5 = icmp slt i32 %6, %7, !dbg !3339
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !3340

land.rhs:                                         ; preds = %while.cond
  %8 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3341
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %8, i32 0, i32 4, !dbg !3342
  %9 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3342
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %9, i32 0, i32 4, !dbg !3343
  store %struct.CABACContext* %cc, %struct.CABACContext** %c.addr.i, align 8, !dbg !3344
  %10 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !3345
  %11 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %10, i64 0, i64 24, i64 32, i64 4) #5, !dbg !3346, !srcloc !3250
  %asmresult.i = extractvalue { i32, i64 } %11, 0, !dbg !3346
  %asmresult2.i = extractvalue { i32, i64 } %11, 1, !dbg !3346
  store i32 %asmresult.i, i32* %res.i, align 4, !dbg !3346
  store i64 %asmresult2.i, i64* %tmp.i, align 8, !dbg !3346
  %12 = load i32, i32* %res.i, align 4, !dbg !3347
  %tobool = icmp ne i32 %12, 0, !dbg !3348
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ]
  br i1 %13, label %while.body, label %while.end, !dbg !3349

while.body:                                       ; preds = %land.end
  %14 = load i32, i32* %i, align 4, !dbg !3350
  %inc = add nsw i32 %14, 1, !dbg !3350
  store i32 %inc, i32* %i, align 4, !dbg !3350
  br label %while.cond, !dbg !3351, !llvm.loop !3353

while.end:                                        ; preds = %land.end
  %15 = load i32, i32* %i, align 4, !dbg !3354
  ret i32 %15, !dbg !3355
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_sao_offset_sign_decode(%struct.HEVCContext* %s) #0 !dbg !3356 {
entry:
  %c.addr.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i, metadata !3220, metadata !2708), !dbg !3357
  %tmp.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i, metadata !3225, metadata !2708), !dbg !3359
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !3229, metadata !2708), !dbg !3360
  %s.addr = alloca %struct.HEVCContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3361, metadata !2708), !dbg !3362
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3363
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !3364
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3364
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !3365
  store %struct.CABACContext* %cc, %struct.CABACContext** %c.addr.i, align 8, !dbg !3366
  %2 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !3367
  %3 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %2, i64 0, i64 24, i64 32, i64 4) #5, !dbg !3368, !srcloc !3250
  %asmresult.i = extractvalue { i32, i64 } %3, 0, !dbg !3368
  %asmresult2.i = extractvalue { i32, i64 } %3, 1, !dbg !3368
  store i32 %asmresult.i, i32* %res.i, align 4, !dbg !3368
  store i64 %asmresult2.i, i64* %tmp.i, align 8, !dbg !3368
  %4 = load i32, i32* %res.i, align 4, !dbg !3369
  ret i32 %4, !dbg !3370
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_sao_eo_class_decode(%struct.HEVCContext* %s) #0 !dbg !3371 {
entry:
  %c.addr.i4 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i4, metadata !3220, metadata !2708), !dbg !3372
  %tmp.i5 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i5, metadata !3225, metadata !2708), !dbg !3374
  %res.i6 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i6, metadata !3229, metadata !2708), !dbg !3375
  %c.addr.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i, metadata !3220, metadata !2708), !dbg !3376
  %tmp.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i, metadata !3225, metadata !2708), !dbg !3378
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !3229, metadata !2708), !dbg !3379
  %s.addr = alloca %struct.HEVCContext*, align 8
  %ret = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3380, metadata !2708), !dbg !3381
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3382, metadata !2708), !dbg !3383
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3384
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !3385
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3385
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !3386
  store %struct.CABACContext* %cc, %struct.CABACContext** %c.addr.i, align 8, !dbg !3387
  %2 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !3388
  %3 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %2, i64 0, i64 24, i64 32, i64 4) #5, !dbg !3389, !srcloc !3250
  %asmresult.i = extractvalue { i32, i64 } %3, 0, !dbg !3389
  %asmresult2.i = extractvalue { i32, i64 } %3, 1, !dbg !3389
  store i32 %asmresult.i, i32* %res.i, align 4, !dbg !3389
  store i64 %asmresult2.i, i64* %tmp.i, align 8, !dbg !3389
  %4 = load i32, i32* %res.i, align 4, !dbg !3390
  %shl = shl i32 %4, 1, !dbg !3391
  store i32 %shl, i32* %ret, align 4, !dbg !3383
  %5 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3392
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %5, i32 0, i32 4, !dbg !3393
  %6 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !3393
  %cc2 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %6, i32 0, i32 4, !dbg !3394
  store %struct.CABACContext* %cc2, %struct.CABACContext** %c.addr.i4, align 8, !dbg !3395
  %7 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i4, align 8, !dbg !3396
  %8 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %7, i64 0, i64 24, i64 32, i64 4) #5, !dbg !3397, !srcloc !3250
  %asmresult.i7 = extractvalue { i32, i64 } %8, 0, !dbg !3397
  %asmresult2.i8 = extractvalue { i32, i64 } %8, 1, !dbg !3397
  store i32 %asmresult.i7, i32* %res.i6, align 4, !dbg !3397
  store i64 %asmresult2.i8, i64* %tmp.i5, align 8, !dbg !3397
  %9 = load i32, i32* %res.i6, align 4, !dbg !3398
  %10 = load i32, i32* %ret, align 4, !dbg !3399
  %or = or i32 %10, %9, !dbg !3399
  store i32 %or, i32* %ret, align 4, !dbg !3399
  %11 = load i32, i32* %ret, align 4, !dbg !3400
  ret i32 %11, !dbg !3401
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_end_of_slice_flag_decode(%struct.HEVCContext* %s) #0 !dbg !3402 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3403, metadata !2708), !dbg !3404
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3405
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !3406
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3406
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !3407
  %call = call i32 @get_cabac_terminate(%struct.CABACContext* %cc), !dbg !3408
  ret i32 %call, !dbg !3409
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_cu_transquant_bypass_flag_decode(%struct.HEVCContext* %s) #0 !dbg !3410 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3411, metadata !2708), !dbg !3412
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3413
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !3414
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3414
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !3415
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 8), align 16, !dbg !3416
  %idxprom = sext i32 %2 to i64, !dbg !3417
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3417
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 4, !dbg !3418
  %4 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !3418
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %4, i32 0, i32 0, !dbg !3419
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !3417
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !3420
  ret i32 %call, !dbg !3421
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_skip_flag_decode(%struct.HEVCContext* %s, i32 %x0, i32 %y0, i32 %x_cb, i32 %y_cb) #0 !dbg !3422 {
entry:
  %a.addr.i36 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i36, metadata !3425, metadata !2708), !dbg !3429
  %p.addr.i37 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i37, metadata !3431, metadata !2708), !dbg !3432
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3425, metadata !2708), !dbg !3433
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !3431, metadata !2708), !dbg !3435
  %s.addr = alloca %struct.HEVCContext*, align 8
  %x0.addr = alloca i32, align 4
  %y0.addr = alloca i32, align 4
  %x_cb.addr = alloca i32, align 4
  %y_cb.addr = alloca i32, align 4
  %min_cb_width = alloca i32, align 4
  %inc = alloca i32, align 4
  %x0b = alloca i32, align 4
  %y0b = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3436, metadata !2708), !dbg !3437
  store i32 %x0, i32* %x0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x0.addr, metadata !3438, metadata !2708), !dbg !3439
  store i32 %y0, i32* %y0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y0.addr, metadata !3440, metadata !2708), !dbg !3441
  store i32 %x_cb, i32* %x_cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x_cb.addr, metadata !3442, metadata !2708), !dbg !3443
  store i32 %y_cb, i32* %y_cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y_cb.addr, metadata !3444, metadata !2708), !dbg !3445
  call void @llvm.dbg.declare(metadata i32* %min_cb_width, metadata !3446, metadata !2708), !dbg !3447
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3448
  %ps = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 15, !dbg !3449
  %sps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps, i32 0, i32 4, !dbg !3450
  %1 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !3450
  %min_cb_width1 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %1, i32 0, i32 52, !dbg !3451
  %2 = load i32, i32* %min_cb_width1, align 4, !dbg !3451
  store i32 %2, i32* %min_cb_width, align 4, !dbg !3447
  call void @llvm.dbg.declare(metadata i32* %inc, metadata !3452, metadata !2708), !dbg !3453
  store i32 0, i32* %inc, align 4, !dbg !3453
  call void @llvm.dbg.declare(metadata i32* %x0b, metadata !3454, metadata !2708), !dbg !3455
  %3 = load i32, i32* %x0.addr, align 4, !dbg !3456
  %4 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3457
  %ps2 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %4, i32 0, i32 15, !dbg !3458
  %sps3 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps2, i32 0, i32 4, !dbg !3459
  %5 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps3, align 8, !dbg !3459
  %log2_ctb_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %5, i32 0, i32 33, !dbg !3460
  %6 = load i32, i32* %log2_ctb_size, align 4, !dbg !3460
  store i32 %3, i32* %a.addr.i, align 4, !dbg !3461
  store i32 %6, i32* %p.addr.i, align 4, !dbg !3461
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !3462
  %8 = load i32, i32* %p.addr.i, align 4, !dbg !3463
  %shl.i = shl i32 1, %8, !dbg !3464
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !3465
  %and.i = and i32 %7, %sub.i, !dbg !3466
  store i32 %and.i, i32* %x0b, align 4, !dbg !3455
  call void @llvm.dbg.declare(metadata i32* %y0b, metadata !3467, metadata !2708), !dbg !3468
  %9 = load i32, i32* %y0.addr, align 4, !dbg !3469
  %10 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3470
  %ps4 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %10, i32 0, i32 15, !dbg !3471
  %sps5 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps4, i32 0, i32 4, !dbg !3472
  %11 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps5, align 8, !dbg !3472
  %log2_ctb_size6 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %11, i32 0, i32 33, !dbg !3473
  %12 = load i32, i32* %log2_ctb_size6, align 4, !dbg !3473
  store i32 %9, i32* %a.addr.i36, align 4, !dbg !3474
  store i32 %12, i32* %p.addr.i37, align 4, !dbg !3474
  %13 = load i32, i32* %a.addr.i36, align 4, !dbg !3475
  %14 = load i32, i32* %p.addr.i37, align 4, !dbg !3476
  %shl.i38 = shl i32 1, %14, !dbg !3477
  %sub.i39 = sub nsw i32 %shl.i38, 1, !dbg !3478
  %and.i40 = and i32 %13, %sub.i39, !dbg !3479
  store i32 %and.i40, i32* %y0b, align 4, !dbg !3468
  %15 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3480
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %15, i32 0, i32 4, !dbg !3482
  %16 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3482
  %ctb_left_flag = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %16, i32 0, i32 9, !dbg !3483
  %17 = load i8, i8* %ctb_left_flag, align 4, !dbg !3483
  %conv = zext i8 %17 to i32, !dbg !3480
  %tobool = icmp ne i32 %conv, 0, !dbg !3480
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !3484

lor.lhs.false:                                    ; preds = %entry
  %18 = load i32, i32* %x0b, align 4, !dbg !3485
  %tobool8 = icmp ne i32 %18, 0, !dbg !3485
  br i1 %tobool8, label %if.then, label %if.end, !dbg !3487

if.then:                                          ; preds = %lor.lhs.false, %entry
  %19 = load i32, i32* %y_cb.addr, align 4, !dbg !3488
  %20 = load i32, i32* %min_cb_width, align 4, !dbg !3489
  %mul = mul nsw i32 %19, %20, !dbg !3490
  %21 = load i32, i32* %x_cb.addr, align 4, !dbg !3491
  %sub = sub nsw i32 %21, 1, !dbg !3492
  %add = add nsw i32 %mul, %sub, !dbg !3493
  %idxprom = sext i32 %add to i64, !dbg !3494
  %22 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3495
  %skip_flag = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %22, i32 0, i32 47, !dbg !3496
  %23 = load i8*, i8** %skip_flag, align 8, !dbg !3496
  %arrayidx = getelementptr inbounds i8, i8* %23, i64 %idxprom, !dbg !3494
  %24 = load i8, i8* %arrayidx, align 1, !dbg !3494
  %tobool9 = icmp ne i8 %24, 0, !dbg !3497
  %lnot = xor i1 %tobool9, true, !dbg !3497
  %lnot10 = xor i1 %lnot, true, !dbg !3498
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !3498
  store i32 %lnot.ext, i32* %inc, align 4, !dbg !3499
  br label %if.end, !dbg !3500

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %25 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3501
  %HEVClc11 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %25, i32 0, i32 4, !dbg !3503
  %26 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc11, align 8, !dbg !3503
  %ctb_up_flag = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %26, i32 0, i32 10, !dbg !3504
  %27 = load i8, i8* %ctb_up_flag, align 1, !dbg !3504
  %conv12 = zext i8 %27 to i32, !dbg !3501
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !3501
  br i1 %tobool13, label %if.then16, label %lor.lhs.false14, !dbg !3505

lor.lhs.false14:                                  ; preds = %if.end
  %28 = load i32, i32* %y0b, align 4, !dbg !3506
  %tobool15 = icmp ne i32 %28, 0, !dbg !3506
  br i1 %tobool15, label %if.then16, label %if.end29, !dbg !3508

if.then16:                                        ; preds = %lor.lhs.false14, %if.end
  %29 = load i32, i32* %y_cb.addr, align 4, !dbg !3509
  %sub17 = sub nsw i32 %29, 1, !dbg !3510
  %30 = load i32, i32* %min_cb_width, align 4, !dbg !3511
  %mul18 = mul nsw i32 %sub17, %30, !dbg !3512
  %31 = load i32, i32* %x_cb.addr, align 4, !dbg !3513
  %add19 = add nsw i32 %mul18, %31, !dbg !3514
  %idxprom20 = sext i32 %add19 to i64, !dbg !3515
  %32 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3516
  %skip_flag21 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %32, i32 0, i32 47, !dbg !3517
  %33 = load i8*, i8** %skip_flag21, align 8, !dbg !3517
  %arrayidx22 = getelementptr inbounds i8, i8* %33, i64 %idxprom20, !dbg !3515
  %34 = load i8, i8* %arrayidx22, align 1, !dbg !3515
  %tobool23 = icmp ne i8 %34, 0, !dbg !3518
  %lnot24 = xor i1 %tobool23, true, !dbg !3518
  %lnot26 = xor i1 %lnot24, true, !dbg !3519
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !3519
  %35 = load i32, i32* %inc, align 4, !dbg !3520
  %add28 = add nsw i32 %35, %lnot.ext27, !dbg !3520
  store i32 %add28, i32* %inc, align 4, !dbg !3520
  br label %if.end29, !dbg !3521

if.end29:                                         ; preds = %if.then16, %lor.lhs.false14
  %36 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3522
  %HEVClc30 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %36, i32 0, i32 4, !dbg !3523
  %37 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc30, align 8, !dbg !3523
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %37, i32 0, i32 4, !dbg !3524
  %38 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 9), align 4, !dbg !3525
  %39 = load i32, i32* %inc, align 4, !dbg !3526
  %add31 = add nsw i32 %38, %39, !dbg !3527
  %idxprom32 = sext i32 %add31 to i64, !dbg !3528
  %40 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3528
  %HEVClc33 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %40, i32 0, i32 4, !dbg !3529
  %41 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc33, align 8, !dbg !3529
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %41, i32 0, i32 0, !dbg !3530
  %arrayidx34 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom32, !dbg !3528
  %call35 = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx34), !dbg !3531
  ret i32 %call35, !dbg !3532
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_cu_qp_delta_abs(%struct.HEVCContext* %s) #0 !dbg !3533 {
entry:
  %c.addr.i29 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i29, metadata !3220, metadata !2708), !dbg !3534
  %tmp.i30 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i30, metadata !3225, metadata !2708), !dbg !3538
  %res.i31 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i31, metadata !3229, metadata !2708), !dbg !3539
  %c.addr.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i, metadata !3220, metadata !2708), !dbg !3540
  %tmp.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i, metadata !3225, metadata !2708), !dbg !3543
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !3229, metadata !2708), !dbg !3544
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.HEVCContext*, align 8
  %prefix_val = alloca i32, align 4
  %suffix_val = alloca i32, align 4
  %inc = alloca i32, align 4
  %k = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3545, metadata !2708), !dbg !3546
  call void @llvm.dbg.declare(metadata i32* %prefix_val, metadata !3547, metadata !2708), !dbg !3548
  store i32 0, i32* %prefix_val, align 4, !dbg !3548
  call void @llvm.dbg.declare(metadata i32* %suffix_val, metadata !3549, metadata !2708), !dbg !3550
  store i32 0, i32* %suffix_val, align 4, !dbg !3550
  call void @llvm.dbg.declare(metadata i32* %inc, metadata !3551, metadata !2708), !dbg !3552
  store i32 0, i32* %inc, align 4, !dbg !3552
  br label %while.cond, !dbg !3553

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %prefix_val, align 4, !dbg !3554
  %cmp = icmp slt i32 %0, 5, !dbg !3556
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3557

land.rhs:                                         ; preds = %while.cond
  %1 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3558
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %1, i32 0, i32 4, !dbg !3560
  %2 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3560
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %2, i32 0, i32 4, !dbg !3561
  %3 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 10), align 8, !dbg !3562
  %4 = load i32, i32* %inc, align 4, !dbg !3563
  %add = add nsw i32 %3, %4, !dbg !3564
  %idxprom = sext i32 %add to i64, !dbg !3565
  %5 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3565
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %5, i32 0, i32 4, !dbg !3566
  %6 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !3566
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %6, i32 0, i32 0, !dbg !3567
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !3565
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !3568
  %tobool = icmp ne i32 %call, 0, !dbg !3569
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ]
  br i1 %7, label %while.body, label %while.end, !dbg !3570

while.body:                                       ; preds = %land.end
  %8 = load i32, i32* %prefix_val, align 4, !dbg !3572
  %inc2 = add nsw i32 %8, 1, !dbg !3572
  store i32 %inc2, i32* %prefix_val, align 4, !dbg !3572
  store i32 1, i32* %inc, align 4, !dbg !3574
  br label %while.cond, !dbg !3575, !llvm.loop !3577

while.end:                                        ; preds = %land.end
  %9 = load i32, i32* %prefix_val, align 4, !dbg !3578
  %cmp3 = icmp sge i32 %9, 5, !dbg !3579
  br i1 %cmp3, label %if.then, label %if.end27, !dbg !3580

if.then:                                          ; preds = %while.end
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3581, metadata !2708), !dbg !3582
  store i32 0, i32* %k, align 4, !dbg !3582
  br label %while.cond4, !dbg !3583

while.cond4:                                      ; preds = %while.body12, %if.then
  %10 = load i32, i32* %k, align 4, !dbg !3584
  %cmp5 = icmp slt i32 %10, 31, !dbg !3586
  br i1 %cmp5, label %land.rhs6, label %land.end11, !dbg !3587

land.rhs6:                                        ; preds = %while.cond4
  %11 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3588
  %HEVClc7 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %11, i32 0, i32 4, !dbg !3589
  %12 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc7, align 8, !dbg !3589
  %cc8 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %12, i32 0, i32 4, !dbg !3590
  store %struct.CABACContext* %cc8, %struct.CABACContext** %c.addr.i, align 8, !dbg !3591
  %13 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !3592
  %14 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %13, i64 0, i64 24, i64 32, i64 4) #5, !dbg !3593, !srcloc !3250
  %asmresult.i = extractvalue { i32, i64 } %14, 0, !dbg !3593
  %asmresult2.i = extractvalue { i32, i64 } %14, 1, !dbg !3593
  store i32 %asmresult.i, i32* %res.i, align 4, !dbg !3593
  store i64 %asmresult2.i, i64* %tmp.i, align 8, !dbg !3593
  %15 = load i32, i32* %res.i, align 4, !dbg !3594
  %tobool10 = icmp ne i32 %15, 0, !dbg !3595
  br label %land.end11

land.end11:                                       ; preds = %land.rhs6, %while.cond4
  %16 = phi i1 [ false, %while.cond4 ], [ %tobool10, %land.rhs6 ]
  br i1 %16, label %while.body12, label %while.end15, !dbg !3596

while.body12:                                     ; preds = %land.end11
  %17 = load i32, i32* %k, align 4, !dbg !3598
  %shl = shl i32 1, %17, !dbg !3600
  %18 = load i32, i32* %suffix_val, align 4, !dbg !3601
  %add13 = add nsw i32 %18, %shl, !dbg !3601
  store i32 %add13, i32* %suffix_val, align 4, !dbg !3601
  %19 = load i32, i32* %k, align 4, !dbg !3602
  %inc14 = add nsw i32 %19, 1, !dbg !3602
  store i32 %inc14, i32* %k, align 4, !dbg !3602
  br label %while.cond4, !dbg !3603, !llvm.loop !3605

while.end15:                                      ; preds = %land.end11
  %20 = load i32, i32* %k, align 4, !dbg !3606
  %cmp16 = icmp eq i32 %20, 31, !dbg !3608
  br i1 %cmp16, label %if.then17, label %if.end, !dbg !3609

if.then17:                                        ; preds = %while.end15
  %21 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3610
  %avctx = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %21, i32 0, i32 1, !dbg !3612
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3612
  %23 = bitcast %struct.AVCodecContext* %22 to i8*, !dbg !3610
  %24 = load i32, i32* %k, align 4, !dbg !3613
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i32 %24), !dbg !3614
  store i32 -1094995529, i32* %retval, align 4, !dbg !3615
  br label %return, !dbg !3615

if.end:                                           ; preds = %while.end15
  br label %while.cond18, !dbg !3616

while.cond18:                                     ; preds = %while.body20, %if.end
  %25 = load i32, i32* %k, align 4, !dbg !3617
  %dec = add nsw i32 %25, -1, !dbg !3617
  store i32 %dec, i32* %k, align 4, !dbg !3617
  %tobool19 = icmp ne i32 %25, 0, !dbg !3618
  br i1 %tobool19, label %while.body20, label %while.end26, !dbg !3618

while.body20:                                     ; preds = %while.cond18
  %26 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3619
  %HEVClc21 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %26, i32 0, i32 4, !dbg !3620
  %27 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc21, align 8, !dbg !3620
  %cc22 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %27, i32 0, i32 4, !dbg !3621
  store %struct.CABACContext* %cc22, %struct.CABACContext** %c.addr.i29, align 8, !dbg !3622
  %28 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i29, align 8, !dbg !3623
  %29 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %28, i64 0, i64 24, i64 32, i64 4) #5, !dbg !3624, !srcloc !3250
  %asmresult.i32 = extractvalue { i32, i64 } %29, 0, !dbg !3624
  %asmresult2.i33 = extractvalue { i32, i64 } %29, 1, !dbg !3624
  store i32 %asmresult.i32, i32* %res.i31, align 4, !dbg !3624
  store i64 %asmresult2.i33, i64* %tmp.i30, align 8, !dbg !3624
  %30 = load i32, i32* %res.i31, align 4, !dbg !3625
  %31 = load i32, i32* %k, align 4, !dbg !3626
  %shl24 = shl i32 %30, %31, !dbg !3627
  %32 = load i32, i32* %suffix_val, align 4, !dbg !3628
  %add25 = add nsw i32 %32, %shl24, !dbg !3628
  store i32 %add25, i32* %suffix_val, align 4, !dbg !3628
  br label %while.cond18, !dbg !3629, !llvm.loop !3630

while.end26:                                      ; preds = %while.cond18
  br label %if.end27, !dbg !3631

if.end27:                                         ; preds = %while.end26, %while.end
  %33 = load i32, i32* %prefix_val, align 4, !dbg !3632
  %34 = load i32, i32* %suffix_val, align 4, !dbg !3633
  %add28 = add nsw i32 %33, %34, !dbg !3634
  store i32 %add28, i32* %retval, align 4, !dbg !3635
  br label %return, !dbg !3635

return:                                           ; preds = %if.end27, %if.then17
  %35 = load i32, i32* %retval, align 4, !dbg !3636
  ret i32 %35, !dbg !3636
}

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_cu_qp_delta_sign_flag(%struct.HEVCContext* %s) #0 !dbg !3637 {
entry:
  %c.addr.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i, metadata !3220, metadata !2708), !dbg !3638
  %tmp.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i, metadata !3225, metadata !2708), !dbg !3640
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !3229, metadata !2708), !dbg !3641
  %s.addr = alloca %struct.HEVCContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3642, metadata !2708), !dbg !3643
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3644
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !3645
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3645
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !3646
  store %struct.CABACContext* %cc, %struct.CABACContext** %c.addr.i, align 8, !dbg !3647
  %2 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !3648
  %3 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %2, i64 0, i64 24, i64 32, i64 4) #5, !dbg !3649, !srcloc !3250
  %asmresult.i = extractvalue { i32, i64 } %3, 0, !dbg !3649
  %asmresult2.i = extractvalue { i32, i64 } %3, 1, !dbg !3649
  store i32 %asmresult.i, i32* %res.i, align 4, !dbg !3649
  store i64 %asmresult2.i, i64* %tmp.i, align 8, !dbg !3649
  %4 = load i32, i32* %res.i, align 4, !dbg !3650
  ret i32 %4, !dbg !3651
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_cu_chroma_qp_offset_flag(%struct.HEVCContext* %s) #0 !dbg !3652 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3653, metadata !2708), !dbg !3654
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3655
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !3656
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3656
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !3657
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 47), align 4, !dbg !3658
  %idxprom = sext i32 %2 to i64, !dbg !3659
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3659
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 4, !dbg !3660
  %4 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !3660
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %4, i32 0, i32 0, !dbg !3661
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !3659
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !3662
  ret i32 %call, !dbg !3663
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_cu_chroma_qp_offset_idx(%struct.HEVCContext* %s) #0 !dbg !3664 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  %c_max = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3665, metadata !2708), !dbg !3666
  call void @llvm.dbg.declare(metadata i32* %c_max, metadata !3667, metadata !2708), !dbg !3668
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3669
  %ps = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 15, !dbg !3670
  %pps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps, i32 0, i32 5, !dbg !3671
  %1 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !3671
  %chroma_qp_offset_list_len_minus1 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %1, i32 0, i32 41, !dbg !3672
  %2 = load i8, i8* %chroma_qp_offset_list_len_minus1, align 2, !dbg !3672
  %conv = zext i8 %2 to i32, !dbg !3673
  %cmp = icmp sgt i32 5, %conv, !dbg !3674
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3675

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3676

cond.false:                                       ; preds = %entry
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3678
  %ps2 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 15, !dbg !3680
  %pps3 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps2, i32 0, i32 5, !dbg !3681
  %4 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps3, align 8, !dbg !3681
  %chroma_qp_offset_list_len_minus14 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %4, i32 0, i32 41, !dbg !3682
  %5 = load i8, i8* %chroma_qp_offset_list_len_minus14, align 2, !dbg !3682
  %conv5 = zext i8 %5 to i32, !dbg !3683
  br label %cond.end, !dbg !3684

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 5, %cond.true ], [ %conv5, %cond.false ], !dbg !3685
  store i32 %cond, i32* %c_max, align 4, !dbg !3687
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3688, metadata !2708), !dbg !3689
  store i32 0, i32* %i, align 4, !dbg !3689
  br label %while.cond, !dbg !3690

while.cond:                                       ; preds = %while.body, %cond.end
  %6 = load i32, i32* %i, align 4, !dbg !3691
  %7 = load i32, i32* %c_max, align 4, !dbg !3692
  %cmp6 = icmp slt i32 %6, %7, !dbg !3693
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !3694

land.rhs:                                         ; preds = %while.cond
  %8 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3695
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %8, i32 0, i32 4, !dbg !3696
  %9 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3696
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %9, i32 0, i32 4, !dbg !3697
  %10 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 48), align 16, !dbg !3698
  %idxprom = sext i32 %10 to i64, !dbg !3699
  %11 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3699
  %HEVClc8 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %11, i32 0, i32 4, !dbg !3700
  %12 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc8, align 8, !dbg !3700
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %12, i32 0, i32 0, !dbg !3701
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !3699
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !3702
  %tobool = icmp ne i32 %call, 0, !dbg !3703
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ]
  br i1 %13, label %while.body, label %while.end, !dbg !3704

while.body:                                       ; preds = %land.end
  %14 = load i32, i32* %i, align 4, !dbg !3705
  %inc = add nsw i32 %14, 1, !dbg !3705
  store i32 %inc, i32* %i, align 4, !dbg !3705
  br label %while.cond, !dbg !3706, !llvm.loop !3708

while.end:                                        ; preds = %land.end
  %15 = load i32, i32* %i, align 4, !dbg !3709
  ret i32 %15, !dbg !3710
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_pred_mode_decode(%struct.HEVCContext* %s) #0 !dbg !3711 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3712, metadata !2708), !dbg !3713
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3714
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !3715
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3715
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !3716
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 11), align 4, !dbg !3717
  %idxprom = sext i32 %2 to i64, !dbg !3718
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3718
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 4, !dbg !3719
  %4 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !3719
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %4, i32 0, i32 0, !dbg !3720
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !3718
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !3721
  ret i32 %call, !dbg !3722
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_split_coding_unit_flag_decode(%struct.HEVCContext* %s, i32 %ct_depth, i32 %x0, i32 %y0) #0 !dbg !3723 {
entry:
  %a.addr.i43 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i43, metadata !3425, metadata !2708), !dbg !3726
  %p.addr.i44 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i44, metadata !3431, metadata !2708), !dbg !3728
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !3425, metadata !2708), !dbg !3729
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !3431, metadata !2708), !dbg !3731
  %s.addr = alloca %struct.HEVCContext*, align 8
  %ct_depth.addr = alloca i32, align 4
  %x0.addr = alloca i32, align 4
  %y0.addr = alloca i32, align 4
  %inc = alloca i32, align 4
  %depth_left = alloca i32, align 4
  %depth_top = alloca i32, align 4
  %x0b = alloca i32, align 4
  %y0b = alloca i32, align 4
  %x_cb = alloca i32, align 4
  %y_cb = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3732, metadata !2708), !dbg !3733
  store i32 %ct_depth, i32* %ct_depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ct_depth.addr, metadata !3734, metadata !2708), !dbg !3735
  store i32 %x0, i32* %x0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x0.addr, metadata !3736, metadata !2708), !dbg !3737
  store i32 %y0, i32* %y0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y0.addr, metadata !3738, metadata !2708), !dbg !3739
  call void @llvm.dbg.declare(metadata i32* %inc, metadata !3740, metadata !2708), !dbg !3741
  store i32 0, i32* %inc, align 4, !dbg !3741
  call void @llvm.dbg.declare(metadata i32* %depth_left, metadata !3742, metadata !2708), !dbg !3743
  store i32 0, i32* %depth_left, align 4, !dbg !3743
  call void @llvm.dbg.declare(metadata i32* %depth_top, metadata !3744, metadata !2708), !dbg !3745
  store i32 0, i32* %depth_top, align 4, !dbg !3745
  call void @llvm.dbg.declare(metadata i32* %x0b, metadata !3746, metadata !2708), !dbg !3747
  %0 = load i32, i32* %x0.addr, align 4, !dbg !3748
  %1 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3749
  %ps = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %1, i32 0, i32 15, !dbg !3750
  %sps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps, i32 0, i32 4, !dbg !3751
  %2 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !3751
  %log2_ctb_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %2, i32 0, i32 33, !dbg !3752
  %3 = load i32, i32* %log2_ctb_size, align 4, !dbg !3752
  store i32 %0, i32* %a.addr.i, align 4, !dbg !3753
  store i32 %3, i32* %p.addr.i, align 4, !dbg !3753
  %4 = load i32, i32* %a.addr.i, align 4, !dbg !3754
  %5 = load i32, i32* %p.addr.i, align 4, !dbg !3755
  %shl.i = shl i32 1, %5, !dbg !3756
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !3757
  %and.i = and i32 %4, %sub.i, !dbg !3758
  store i32 %and.i, i32* %x0b, align 4, !dbg !3747
  call void @llvm.dbg.declare(metadata i32* %y0b, metadata !3759, metadata !2708), !dbg !3760
  %6 = load i32, i32* %y0.addr, align 4, !dbg !3761
  %7 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3762
  %ps1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %7, i32 0, i32 15, !dbg !3763
  %sps2 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps1, i32 0, i32 4, !dbg !3764
  %8 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps2, align 8, !dbg !3764
  %log2_ctb_size3 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %8, i32 0, i32 33, !dbg !3765
  %9 = load i32, i32* %log2_ctb_size3, align 4, !dbg !3765
  store i32 %6, i32* %a.addr.i43, align 4, !dbg !3766
  store i32 %9, i32* %p.addr.i44, align 4, !dbg !3766
  %10 = load i32, i32* %a.addr.i43, align 4, !dbg !3767
  %11 = load i32, i32* %p.addr.i44, align 4, !dbg !3768
  %shl.i45 = shl i32 1, %11, !dbg !3769
  %sub.i46 = sub nsw i32 %shl.i45, 1, !dbg !3770
  %and.i47 = and i32 %10, %sub.i46, !dbg !3771
  store i32 %and.i47, i32* %y0b, align 4, !dbg !3760
  call void @llvm.dbg.declare(metadata i32* %x_cb, metadata !3772, metadata !2708), !dbg !3773
  %12 = load i32, i32* %x0.addr, align 4, !dbg !3774
  %13 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3775
  %ps5 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %13, i32 0, i32 15, !dbg !3776
  %sps6 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps5, i32 0, i32 4, !dbg !3777
  %14 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps6, align 8, !dbg !3777
  %log2_min_cb_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %14, i32 0, i32 29, !dbg !3778
  %15 = load i32, i32* %log2_min_cb_size, align 4, !dbg !3778
  %shr = ashr i32 %12, %15, !dbg !3779
  store i32 %shr, i32* %x_cb, align 4, !dbg !3773
  call void @llvm.dbg.declare(metadata i32* %y_cb, metadata !3780, metadata !2708), !dbg !3781
  %16 = load i32, i32* %y0.addr, align 4, !dbg !3782
  %17 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3783
  %ps7 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %17, i32 0, i32 15, !dbg !3784
  %sps8 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps7, i32 0, i32 4, !dbg !3785
  %18 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps8, align 8, !dbg !3785
  %log2_min_cb_size9 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %18, i32 0, i32 29, !dbg !3786
  %19 = load i32, i32* %log2_min_cb_size9, align 4, !dbg !3786
  %shr10 = ashr i32 %16, %19, !dbg !3787
  store i32 %shr10, i32* %y_cb, align 4, !dbg !3781
  %20 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3788
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %20, i32 0, i32 4, !dbg !3790
  %21 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3790
  %ctb_left_flag = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %21, i32 0, i32 9, !dbg !3791
  %22 = load i8, i8* %ctb_left_flag, align 4, !dbg !3791
  %conv = zext i8 %22 to i32, !dbg !3788
  %tobool = icmp ne i32 %conv, 0, !dbg !3788
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !3792

lor.lhs.false:                                    ; preds = %entry
  %23 = load i32, i32* %x0b, align 4, !dbg !3793
  %tobool11 = icmp ne i32 %23, 0, !dbg !3793
  br i1 %tobool11, label %if.then, label %if.end, !dbg !3795

if.then:                                          ; preds = %lor.lhs.false, %entry
  %24 = load i32, i32* %y_cb, align 4, !dbg !3796
  %25 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3797
  %ps12 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %25, i32 0, i32 15, !dbg !3798
  %sps13 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps12, i32 0, i32 4, !dbg !3799
  %26 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps13, align 8, !dbg !3799
  %min_cb_width = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %26, i32 0, i32 52, !dbg !3800
  %27 = load i32, i32* %min_cb_width, align 4, !dbg !3800
  %mul = mul nsw i32 %24, %27, !dbg !3801
  %28 = load i32, i32* %x_cb, align 4, !dbg !3802
  %add = add nsw i32 %mul, %28, !dbg !3803
  %sub = sub nsw i32 %add, 1, !dbg !3804
  %idxprom = sext i32 %sub to i64, !dbg !3805
  %29 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3805
  %tab_ct_depth = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %29, i32 0, i32 48, !dbg !3806
  %30 = load i8*, i8** %tab_ct_depth, align 8, !dbg !3806
  %arrayidx = getelementptr inbounds i8, i8* %30, i64 %idxprom, !dbg !3805
  %31 = load i8, i8* %arrayidx, align 1, !dbg !3805
  %conv14 = zext i8 %31 to i32, !dbg !3805
  store i32 %conv14, i32* %depth_left, align 4, !dbg !3807
  br label %if.end, !dbg !3808

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %32 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3809
  %HEVClc15 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %32, i32 0, i32 4, !dbg !3811
  %33 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc15, align 8, !dbg !3811
  %ctb_up_flag = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %33, i32 0, i32 10, !dbg !3812
  %34 = load i8, i8* %ctb_up_flag, align 1, !dbg !3812
  %conv16 = zext i8 %34 to i32, !dbg !3809
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !3809
  br i1 %tobool17, label %if.then20, label %lor.lhs.false18, !dbg !3813

lor.lhs.false18:                                  ; preds = %if.end
  %35 = load i32, i32* %y0b, align 4, !dbg !3814
  %tobool19 = icmp ne i32 %35, 0, !dbg !3814
  br i1 %tobool19, label %if.then20, label %if.end31, !dbg !3816

if.then20:                                        ; preds = %lor.lhs.false18, %if.end
  %36 = load i32, i32* %y_cb, align 4, !dbg !3817
  %sub21 = sub nsw i32 %36, 1, !dbg !3818
  %37 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3819
  %ps22 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %37, i32 0, i32 15, !dbg !3820
  %sps23 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps22, i32 0, i32 4, !dbg !3821
  %38 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps23, align 8, !dbg !3821
  %min_cb_width24 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %38, i32 0, i32 52, !dbg !3822
  %39 = load i32, i32* %min_cb_width24, align 4, !dbg !3822
  %mul25 = mul nsw i32 %sub21, %39, !dbg !3823
  %40 = load i32, i32* %x_cb, align 4, !dbg !3824
  %add26 = add nsw i32 %mul25, %40, !dbg !3825
  %idxprom27 = sext i32 %add26 to i64, !dbg !3826
  %41 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3826
  %tab_ct_depth28 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %41, i32 0, i32 48, !dbg !3827
  %42 = load i8*, i8** %tab_ct_depth28, align 8, !dbg !3827
  %arrayidx29 = getelementptr inbounds i8, i8* %42, i64 %idxprom27, !dbg !3826
  %43 = load i8, i8* %arrayidx29, align 1, !dbg !3826
  %conv30 = zext i8 %43 to i32, !dbg !3826
  store i32 %conv30, i32* %depth_top, align 4, !dbg !3828
  br label %if.end31, !dbg !3829

if.end31:                                         ; preds = %if.then20, %lor.lhs.false18
  %44 = load i32, i32* %depth_left, align 4, !dbg !3830
  %45 = load i32, i32* %ct_depth.addr, align 4, !dbg !3831
  %cmp = icmp sgt i32 %44, %45, !dbg !3832
  %conv32 = zext i1 %cmp to i32, !dbg !3832
  %46 = load i32, i32* %inc, align 4, !dbg !3833
  %add33 = add nsw i32 %46, %conv32, !dbg !3833
  store i32 %add33, i32* %inc, align 4, !dbg !3833
  %47 = load i32, i32* %depth_top, align 4, !dbg !3834
  %48 = load i32, i32* %ct_depth.addr, align 4, !dbg !3835
  %cmp34 = icmp sgt i32 %47, %48, !dbg !3836
  %conv35 = zext i1 %cmp34 to i32, !dbg !3836
  %49 = load i32, i32* %inc, align 4, !dbg !3837
  %add36 = add nsw i32 %49, %conv35, !dbg !3837
  store i32 %add36, i32* %inc, align 4, !dbg !3837
  %50 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3838
  %HEVClc37 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %50, i32 0, i32 4, !dbg !3839
  %51 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc37, align 8, !dbg !3839
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %51, i32 0, i32 4, !dbg !3840
  %52 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 7), align 4, !dbg !3841
  %53 = load i32, i32* %inc, align 4, !dbg !3842
  %add38 = add nsw i32 %52, %53, !dbg !3843
  %idxprom39 = sext i32 %add38 to i64, !dbg !3844
  %54 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3844
  %HEVClc40 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %54, i32 0, i32 4, !dbg !3845
  %55 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc40, align 8, !dbg !3845
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %55, i32 0, i32 0, !dbg !3846
  %arrayidx41 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom39, !dbg !3844
  %call42 = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx41), !dbg !3847
  ret i32 %call42, !dbg !3848
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_part_mode_decode(%struct.HEVCContext* %s, i32 %log2_cb_size) #0 !dbg !3849 {
entry:
  %c.addr.i93 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i93, metadata !3220, metadata !2708), !dbg !3850
  %tmp.i94 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i94, metadata !3225, metadata !2708), !dbg !3853
  %res.i95 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i95, metadata !3229, metadata !2708), !dbg !3854
  %c.addr.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i, metadata !3220, metadata !2708), !dbg !3855
  %tmp.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i, metadata !3225, metadata !2708), !dbg !3860
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !3229, metadata !2708), !dbg !3861
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.HEVCContext*, align 8
  %log2_cb_size.addr = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !3862, metadata !2708), !dbg !3863
  store i32 %log2_cb_size, i32* %log2_cb_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %log2_cb_size.addr, metadata !3864, metadata !2708), !dbg !3865
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3866
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !3868
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !3868
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !3869
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 12), align 16, !dbg !3870
  %idxprom = sext i32 %2 to i64, !dbg !3871
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3871
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 4, !dbg !3872
  %4 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !3872
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %4, i32 0, i32 0, !dbg !3873
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !3871
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !3874
  %tobool = icmp ne i32 %call, 0, !dbg !3874
  br i1 %tobool, label %if.then, label %if.end, !dbg !3875

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3876
  br label %return, !dbg !3876

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %log2_cb_size.addr, align 4, !dbg !3877
  %6 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3879
  %ps = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %6, i32 0, i32 15, !dbg !3880
  %sps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps, i32 0, i32 4, !dbg !3881
  %7 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !3881
  %log2_min_cb_size = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %7, i32 0, i32 29, !dbg !3882
  %8 = load i32, i32* %log2_min_cb_size, align 4, !dbg !3882
  %cmp = icmp eq i32 %5, %8, !dbg !3883
  br i1 %cmp, label %if.then2, label %if.end31, !dbg !3884

if.then2:                                         ; preds = %if.end
  %9 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3885
  %HEVClc3 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %9, i32 0, i32 4, !dbg !3888
  %10 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc3, align 8, !dbg !3888
  %cu = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %10, i32 0, i32 20, !dbg !3889
  %pred_mode = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu, i32 0, i32 2, !dbg !3890
  %11 = load i32, i32* %pred_mode, align 4, !dbg !3890
  %cmp4 = icmp eq i32 %11, 1, !dbg !3891
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !3892

if.then5:                                         ; preds = %if.then2
  store i32 3, i32* %retval, align 4, !dbg !3893
  br label %return, !dbg !3893

if.end6:                                          ; preds = %if.then2
  %12 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3894
  %HEVClc7 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %12, i32 0, i32 4, !dbg !3896
  %13 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc7, align 8, !dbg !3896
  %cc8 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %13, i32 0, i32 4, !dbg !3897
  %14 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 12), align 16, !dbg !3898
  %add = add nsw i32 %14, 1, !dbg !3899
  %idxprom9 = sext i32 %add to i64, !dbg !3900
  %15 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3900
  %HEVClc10 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %15, i32 0, i32 4, !dbg !3901
  %16 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc10, align 8, !dbg !3901
  %cabac_state11 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %16, i32 0, i32 0, !dbg !3902
  %arrayidx12 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state11, i64 0, i64 %idxprom9, !dbg !3900
  %call13 = call i32 @get_cabac(%struct.CABACContext* %cc8, i8* %arrayidx12), !dbg !3903
  %tobool14 = icmp ne i32 %call13, 0, !dbg !3903
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !3904

if.then15:                                        ; preds = %if.end6
  store i32 1, i32* %retval, align 4, !dbg !3905
  br label %return, !dbg !3905

if.end16:                                         ; preds = %if.end6
  %17 = load i32, i32* %log2_cb_size.addr, align 4, !dbg !3906
  %cmp17 = icmp eq i32 %17, 3, !dbg !3908
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !3909

if.then18:                                        ; preds = %if.end16
  store i32 2, i32* %retval, align 4, !dbg !3910
  br label %return, !dbg !3910

if.end19:                                         ; preds = %if.end16
  %18 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3911
  %HEVClc20 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %18, i32 0, i32 4, !dbg !3913
  %19 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc20, align 8, !dbg !3913
  %cc21 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %19, i32 0, i32 4, !dbg !3914
  %20 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 12), align 16, !dbg !3915
  %add22 = add nsw i32 %20, 2, !dbg !3916
  %idxprom23 = sext i32 %add22 to i64, !dbg !3917
  %21 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3917
  %HEVClc24 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %21, i32 0, i32 4, !dbg !3918
  %22 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc24, align 8, !dbg !3918
  %cabac_state25 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %22, i32 0, i32 0, !dbg !3919
  %arrayidx26 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state25, i64 0, i64 %idxprom23, !dbg !3917
  %call27 = call i32 @get_cabac(%struct.CABACContext* %cc21, i8* %arrayidx26), !dbg !3920
  %tobool28 = icmp ne i32 %call27, 0, !dbg !3920
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !3921

if.then29:                                        ; preds = %if.end19
  store i32 2, i32* %retval, align 4, !dbg !3922
  br label %return, !dbg !3922

if.end30:                                         ; preds = %if.end19
  store i32 3, i32* %retval, align 4, !dbg !3923
  br label %return, !dbg !3923

if.end31:                                         ; preds = %if.end
  %23 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3924
  %ps32 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %23, i32 0, i32 15, !dbg !3926
  %sps33 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps32, i32 0, i32 4, !dbg !3927
  %24 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps33, align 8, !dbg !3927
  %amp_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %24, i32 0, i32 20, !dbg !3928
  %25 = load i8, i8* %amp_enabled_flag, align 4, !dbg !3928
  %tobool34 = icmp ne i8 %25, 0, !dbg !3924
  br i1 %tobool34, label %if.end47, label %if.then35, !dbg !3929

if.then35:                                        ; preds = %if.end31
  %26 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3930
  %HEVClc36 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %26, i32 0, i32 4, !dbg !3933
  %27 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc36, align 8, !dbg !3933
  %cc37 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %27, i32 0, i32 4, !dbg !3934
  %28 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 12), align 16, !dbg !3935
  %add38 = add nsw i32 %28, 1, !dbg !3936
  %idxprom39 = sext i32 %add38 to i64, !dbg !3937
  %29 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3937
  %HEVClc40 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %29, i32 0, i32 4, !dbg !3938
  %30 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc40, align 8, !dbg !3938
  %cabac_state41 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %30, i32 0, i32 0, !dbg !3939
  %arrayidx42 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state41, i64 0, i64 %idxprom39, !dbg !3937
  %call43 = call i32 @get_cabac(%struct.CABACContext* %cc37, i8* %arrayidx42), !dbg !3940
  %tobool44 = icmp ne i32 %call43, 0, !dbg !3940
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !3941

if.then45:                                        ; preds = %if.then35
  store i32 1, i32* %retval, align 4, !dbg !3942
  br label %return, !dbg !3942

if.end46:                                         ; preds = %if.then35
  store i32 2, i32* %retval, align 4, !dbg !3943
  br label %return, !dbg !3943

if.end47:                                         ; preds = %if.end31
  %31 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3944
  %HEVClc48 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %31, i32 0, i32 4, !dbg !3945
  %32 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc48, align 8, !dbg !3945
  %cc49 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %32, i32 0, i32 4, !dbg !3946
  %33 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 12), align 16, !dbg !3947
  %add50 = add nsw i32 %33, 1, !dbg !3948
  %idxprom51 = sext i32 %add50 to i64, !dbg !3949
  %34 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3949
  %HEVClc52 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %34, i32 0, i32 4, !dbg !3950
  %35 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc52, align 8, !dbg !3950
  %cabac_state53 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %35, i32 0, i32 0, !dbg !3951
  %arrayidx54 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state53, i64 0, i64 %idxprom51, !dbg !3949
  %call55 = call i32 @get_cabac(%struct.CABACContext* %cc49, i8* %arrayidx54), !dbg !3952
  %tobool56 = icmp ne i32 %call55, 0, !dbg !3952
  br i1 %tobool56, label %if.then57, label %if.end75, !dbg !3953

if.then57:                                        ; preds = %if.end47
  %36 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3954
  %HEVClc58 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %36, i32 0, i32 4, !dbg !3956
  %37 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc58, align 8, !dbg !3956
  %cc59 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %37, i32 0, i32 4, !dbg !3957
  %38 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 12), align 16, !dbg !3958
  %add60 = add nsw i32 %38, 3, !dbg !3959
  %idxprom61 = sext i32 %add60 to i64, !dbg !3960
  %39 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3960
  %HEVClc62 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %39, i32 0, i32 4, !dbg !3961
  %40 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc62, align 8, !dbg !3961
  %cabac_state63 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %40, i32 0, i32 0, !dbg !3962
  %arrayidx64 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state63, i64 0, i64 %idxprom61, !dbg !3960
  %call65 = call i32 @get_cabac(%struct.CABACContext* %cc59, i8* %arrayidx64), !dbg !3963
  %tobool66 = icmp ne i32 %call65, 0, !dbg !3963
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !3964

if.then67:                                        ; preds = %if.then57
  store i32 1, i32* %retval, align 4, !dbg !3965
  br label %return, !dbg !3965

if.end68:                                         ; preds = %if.then57
  %41 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3966
  %HEVClc69 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %41, i32 0, i32 4, !dbg !3967
  %42 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc69, align 8, !dbg !3967
  %cc70 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %42, i32 0, i32 4, !dbg !3968
  store %struct.CABACContext* %cc70, %struct.CABACContext** %c.addr.i, align 8, !dbg !3969
  %43 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !3970
  %44 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %43, i64 0, i64 24, i64 32, i64 4) #5, !dbg !3971, !srcloc !3250
  %asmresult.i = extractvalue { i32, i64 } %44, 0, !dbg !3971
  %asmresult2.i = extractvalue { i32, i64 } %44, 1, !dbg !3971
  store i32 %asmresult.i, i32* %res.i, align 4, !dbg !3971
  store i64 %asmresult2.i, i64* %tmp.i, align 8, !dbg !3971
  %45 = load i32, i32* %res.i, align 4, !dbg !3972
  %tobool72 = icmp ne i32 %45, 0, !dbg !3969
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !3973

if.then73:                                        ; preds = %if.end68
  store i32 5, i32* %retval, align 4, !dbg !3974
  br label %return, !dbg !3974

if.end74:                                         ; preds = %if.end68
  store i32 4, i32* %retval, align 4, !dbg !3975
  br label %return, !dbg !3975

if.end75:                                         ; preds = %if.end47
  %46 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3976
  %HEVClc76 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %46, i32 0, i32 4, !dbg !3978
  %47 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc76, align 8, !dbg !3978
  %cc77 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %47, i32 0, i32 4, !dbg !3979
  %48 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 12), align 16, !dbg !3980
  %add78 = add nsw i32 %48, 3, !dbg !3981
  %idxprom79 = sext i32 %add78 to i64, !dbg !3982
  %49 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3982
  %HEVClc80 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %49, i32 0, i32 4, !dbg !3983
  %50 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc80, align 8, !dbg !3983
  %cabac_state81 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %50, i32 0, i32 0, !dbg !3984
  %arrayidx82 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state81, i64 0, i64 %idxprom79, !dbg !3982
  %call83 = call i32 @get_cabac(%struct.CABACContext* %cc77, i8* %arrayidx82), !dbg !3985
  %tobool84 = icmp ne i32 %call83, 0, !dbg !3985
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !3986

if.then85:                                        ; preds = %if.end75
  store i32 2, i32* %retval, align 4, !dbg !3987
  br label %return, !dbg !3987

if.end86:                                         ; preds = %if.end75
  %51 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !3988
  %HEVClc87 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %51, i32 0, i32 4, !dbg !3989
  %52 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc87, align 8, !dbg !3989
  %cc88 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %52, i32 0, i32 4, !dbg !3990
  store %struct.CABACContext* %cc88, %struct.CABACContext** %c.addr.i93, align 8, !dbg !3991
  %53 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i93, align 8, !dbg !3992
  %54 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %53, i64 0, i64 24, i64 32, i64 4) #5, !dbg !3993, !srcloc !3250
  %asmresult.i96 = extractvalue { i32, i64 } %54, 0, !dbg !3993
  %asmresult2.i97 = extractvalue { i32, i64 } %54, 1, !dbg !3993
  store i32 %asmresult.i96, i32* %res.i95, align 4, !dbg !3993
  store i64 %asmresult2.i97, i64* %tmp.i94, align 8, !dbg !3993
  %55 = load i32, i32* %res.i95, align 4, !dbg !3994
  %tobool90 = icmp ne i32 %55, 0, !dbg !3991
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !3995

if.then91:                                        ; preds = %if.end86
  store i32 7, i32* %retval, align 4, !dbg !3996
  br label %return, !dbg !3996

if.end92:                                         ; preds = %if.end86
  store i32 6, i32* %retval, align 4, !dbg !3997
  br label %return, !dbg !3997

return:                                           ; preds = %if.end92, %if.then91, %if.then85, %if.end74, %if.then73, %if.then67, %if.end46, %if.then45, %if.end30, %if.then29, %if.then18, %if.then15, %if.then5, %if.then
  %56 = load i32, i32* %retval, align 4, !dbg !3998
  ret i32 %56, !dbg !3998
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_pcm_flag_decode(%struct.HEVCContext* %s) #0 !dbg !3999 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4000, metadata !2708), !dbg !4001
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4002
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !4003
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4003
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !4004
  %call = call i32 @get_cabac_terminate(%struct.CABACContext* %cc), !dbg !4005
  ret i32 %call, !dbg !4006
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_prev_intra_luma_pred_flag_decode(%struct.HEVCContext* %s) #0 !dbg !4007 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4008, metadata !2708), !dbg !4009
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4010
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !4011
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4011
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !4012
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 14), align 8, !dbg !4013
  %idxprom = sext i32 %2 to i64, !dbg !4014
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4014
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 4, !dbg !4015
  %4 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !4015
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %4, i32 0, i32 0, !dbg !4016
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !4014
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !4017
  ret i32 %call, !dbg !4018
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_mpm_idx_decode(%struct.HEVCContext* %s) #0 !dbg !4019 {
entry:
  %c.addr.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i, metadata !3220, metadata !2708), !dbg !4020
  %tmp.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i, metadata !3225, metadata !2708), !dbg !4023
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !3229, metadata !2708), !dbg !4024
  %s.addr = alloca %struct.HEVCContext*, align 8
  %i = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4025, metadata !2708), !dbg !4026
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4027, metadata !2708), !dbg !4028
  store i32 0, i32* %i, align 4, !dbg !4028
  br label %while.cond, !dbg !4029

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4030
  %cmp = icmp slt i32 %0, 2, !dbg !4032
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4033

land.rhs:                                         ; preds = %while.cond
  %1 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4034
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %1, i32 0, i32 4, !dbg !4035
  %2 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4035
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %2, i32 0, i32 4, !dbg !4036
  store %struct.CABACContext* %cc, %struct.CABACContext** %c.addr.i, align 8, !dbg !4037
  %3 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !4038
  %4 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %3, i64 0, i64 24, i64 32, i64 4) #5, !dbg !4039, !srcloc !3250
  %asmresult.i = extractvalue { i32, i64 } %4, 0, !dbg !4039
  %asmresult2.i = extractvalue { i32, i64 } %4, 1, !dbg !4039
  store i32 %asmresult.i, i32* %res.i, align 4, !dbg !4039
  store i64 %asmresult2.i, i64* %tmp.i, align 8, !dbg !4039
  %5 = load i32, i32* %res.i, align 4, !dbg !4040
  %tobool = icmp ne i32 %5, 0, !dbg !4041
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ]
  br i1 %6, label %while.body, label %while.end, !dbg !4042

while.body:                                       ; preds = %land.end
  %7 = load i32, i32* %i, align 4, !dbg !4044
  %inc = add nsw i32 %7, 1, !dbg !4044
  store i32 %inc, i32* %i, align 4, !dbg !4044
  br label %while.cond, !dbg !4045, !llvm.loop !4047

while.end:                                        ; preds = %land.end
  %8 = load i32, i32* %i, align 4, !dbg !4048
  ret i32 %8, !dbg !4049
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_rem_intra_luma_pred_mode_decode(%struct.HEVCContext* %s) #0 !dbg !4050 {
entry:
  %c.addr.i4 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i4, metadata !3220, metadata !2708), !dbg !4051
  %tmp.i5 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i5, metadata !3225, metadata !2708), !dbg !4055
  %res.i6 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i6, metadata !3229, metadata !2708), !dbg !4056
  %c.addr.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i, metadata !3220, metadata !2708), !dbg !4057
  %tmp.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i, metadata !3225, metadata !2708), !dbg !4059
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !3229, metadata !2708), !dbg !4060
  %s.addr = alloca %struct.HEVCContext*, align 8
  %i = alloca i32, align 4
  %value = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4061, metadata !2708), !dbg !4062
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4063, metadata !2708), !dbg !4064
  call void @llvm.dbg.declare(metadata i32* %value, metadata !4065, metadata !2708), !dbg !4066
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4067
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !4068
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4068
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !4069
  store %struct.CABACContext* %cc, %struct.CABACContext** %c.addr.i, align 8, !dbg !4070
  %2 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !4071
  %3 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %2, i64 0, i64 24, i64 32, i64 4) #5, !dbg !4072, !srcloc !3250
  %asmresult.i = extractvalue { i32, i64 } %3, 0, !dbg !4072
  %asmresult2.i = extractvalue { i32, i64 } %3, 1, !dbg !4072
  store i32 %asmresult.i, i32* %res.i, align 4, !dbg !4072
  store i64 %asmresult2.i, i64* %tmp.i, align 8, !dbg !4072
  %4 = load i32, i32* %res.i, align 4, !dbg !4073
  store i32 %4, i32* %value, align 4, !dbg !4066
  store i32 0, i32* %i, align 4, !dbg !4074
  br label %for.cond, !dbg !4075

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !4076
  %cmp = icmp slt i32 %5, 4, !dbg !4078
  br i1 %cmp, label %for.body, label %for.end, !dbg !4079

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %value, align 4, !dbg !4080
  %shl = shl i32 %6, 1, !dbg !4081
  %7 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4082
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %7, i32 0, i32 4, !dbg !4083
  %8 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !4083
  %cc2 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %8, i32 0, i32 4, !dbg !4084
  store %struct.CABACContext* %cc2, %struct.CABACContext** %c.addr.i4, align 8, !dbg !4085
  %9 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i4, align 8, !dbg !4086
  %10 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %9, i64 0, i64 24, i64 32, i64 4) #5, !dbg !4087, !srcloc !3250
  %asmresult.i7 = extractvalue { i32, i64 } %10, 0, !dbg !4087
  %asmresult2.i8 = extractvalue { i32, i64 } %10, 1, !dbg !4087
  store i32 %asmresult.i7, i32* %res.i6, align 4, !dbg !4087
  store i64 %asmresult2.i8, i64* %tmp.i5, align 8, !dbg !4087
  %11 = load i32, i32* %res.i6, align 4, !dbg !4088
  %or = or i32 %shl, %11, !dbg !4089
  store i32 %or, i32* %value, align 4, !dbg !4090
  br label %for.inc, !dbg !4091

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !4092
  %inc = add nsw i32 %12, 1, !dbg !4092
  store i32 %inc, i32* %i, align 4, !dbg !4092
  br label %for.cond, !dbg !4094, !llvm.loop !4095

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %value, align 4, !dbg !4097
  ret i32 %13, !dbg !4098
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_intra_chroma_pred_mode_decode(%struct.HEVCContext* %s) #0 !dbg !4099 {
entry:
  %c.addr.i8 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i8, metadata !3220, metadata !2708), !dbg !4100
  %tmp.i9 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i9, metadata !3225, metadata !2708), !dbg !4102
  %res.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i10, metadata !3229, metadata !2708), !dbg !4103
  %c.addr.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i, metadata !3220, metadata !2708), !dbg !4104
  %tmp.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i, metadata !3225, metadata !2708), !dbg !4106
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !3229, metadata !2708), !dbg !4107
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.HEVCContext*, align 8
  %ret = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4108, metadata !2708), !dbg !4109
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4110, metadata !2708), !dbg !4111
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4112
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !4114
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4114
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !4115
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 17), align 4, !dbg !4116
  %idxprom = sext i32 %2 to i64, !dbg !4117
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4117
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 4, !dbg !4118
  %4 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !4118
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %4, i32 0, i32 0, !dbg !4119
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !4117
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !4120
  %tobool = icmp ne i32 %call, 0, !dbg !4120
  br i1 %tobool, label %if.end, label %if.then, !dbg !4121

if.then:                                          ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !4122
  br label %return, !dbg !4122

if.end:                                           ; preds = %entry
  %5 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4123
  %HEVClc2 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %5, i32 0, i32 4, !dbg !4124
  %6 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc2, align 8, !dbg !4124
  %cc3 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %6, i32 0, i32 4, !dbg !4125
  store %struct.CABACContext* %cc3, %struct.CABACContext** %c.addr.i, align 8, !dbg !4126
  %7 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !4127
  %8 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %7, i64 0, i64 24, i64 32, i64 4) #5, !dbg !4128, !srcloc !3250
  %asmresult.i = extractvalue { i32, i64 } %8, 0, !dbg !4128
  %asmresult2.i = extractvalue { i32, i64 } %8, 1, !dbg !4128
  store i32 %asmresult.i, i32* %res.i, align 4, !dbg !4128
  store i64 %asmresult2.i, i64* %tmp.i, align 8, !dbg !4128
  %9 = load i32, i32* %res.i, align 4, !dbg !4129
  %shl = shl i32 %9, 1, !dbg !4130
  store i32 %shl, i32* %ret, align 4, !dbg !4131
  %10 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4132
  %HEVClc5 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %10, i32 0, i32 4, !dbg !4133
  %11 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc5, align 8, !dbg !4133
  %cc6 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %11, i32 0, i32 4, !dbg !4134
  store %struct.CABACContext* %cc6, %struct.CABACContext** %c.addr.i8, align 8, !dbg !4135
  %12 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i8, align 8, !dbg !4136
  %13 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %12, i64 0, i64 24, i64 32, i64 4) #5, !dbg !4137, !srcloc !3250
  %asmresult.i11 = extractvalue { i32, i64 } %13, 0, !dbg !4137
  %asmresult2.i12 = extractvalue { i32, i64 } %13, 1, !dbg !4137
  store i32 %asmresult.i11, i32* %res.i10, align 4, !dbg !4137
  store i64 %asmresult2.i12, i64* %tmp.i9, align 8, !dbg !4137
  %14 = load i32, i32* %res.i10, align 4, !dbg !4138
  %15 = load i32, i32* %ret, align 4, !dbg !4139
  %or = or i32 %15, %14, !dbg !4139
  store i32 %or, i32* %ret, align 4, !dbg !4139
  %16 = load i32, i32* %ret, align 4, !dbg !4140
  store i32 %16, i32* %retval, align 4, !dbg !4141
  br label %return, !dbg !4141

return:                                           ; preds = %if.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !4142
  ret i32 %17, !dbg !4142
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_merge_idx_decode(%struct.HEVCContext* %s) #0 !dbg !4143 {
entry:
  %c.addr.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i, metadata !3220, metadata !2708), !dbg !4144
  %tmp.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i, metadata !3225, metadata !2708), !dbg !4149
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !3229, metadata !2708), !dbg !4150
  %s.addr = alloca %struct.HEVCContext*, align 8
  %i = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4151, metadata !2708), !dbg !4152
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4153, metadata !2708), !dbg !4154
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4155
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !4156
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4156
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !4157
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 19), align 4, !dbg !4158
  %idxprom = sext i32 %2 to i64, !dbg !4159
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4159
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 4, !dbg !4160
  %4 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !4160
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %4, i32 0, i32 0, !dbg !4161
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !4159
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !4162
  store i32 %call, i32* %i, align 4, !dbg !4154
  %5 = load i32, i32* %i, align 4, !dbg !4163
  %cmp = icmp ne i32 %5, 0, !dbg !4164
  br i1 %cmp, label %if.then, label %if.end, !dbg !4165

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !4166

while.cond:                                       ; preds = %while.body, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !4167
  %7 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4169
  %sh = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %7, i32 0, i32 21, !dbg !4170
  %max_num_merge_cand = getelementptr inbounds %struct.SliceHeader, %struct.SliceHeader* %sh, i32 0, i32 33, !dbg !4171
  %8 = load i32, i32* %max_num_merge_cand, align 8, !dbg !4171
  %sub = sub i32 %8, 1, !dbg !4172
  %cmp2 = icmp ult i32 %6, %sub, !dbg !4173
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !4174

land.rhs:                                         ; preds = %while.cond
  %9 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4175
  %HEVClc3 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %9, i32 0, i32 4, !dbg !4176
  %10 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc3, align 8, !dbg !4176
  %cc4 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %10, i32 0, i32 4, !dbg !4177
  store %struct.CABACContext* %cc4, %struct.CABACContext** %c.addr.i, align 8, !dbg !4178
  %11 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !4179
  %12 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %11, i64 0, i64 24, i64 32, i64 4) #5, !dbg !4180, !srcloc !3250
  %asmresult.i = extractvalue { i32, i64 } %12, 0, !dbg !4180
  %asmresult2.i = extractvalue { i32, i64 } %12, 1, !dbg !4180
  store i32 %asmresult.i, i32* %res.i, align 4, !dbg !4180
  store i64 %asmresult2.i, i64* %tmp.i, align 8, !dbg !4180
  %13 = load i32, i32* %res.i, align 4, !dbg !4181
  %tobool = icmp ne i32 %13, 0, !dbg !4182
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ]
  br i1 %14, label %while.body, label %while.end, !dbg !4183

while.body:                                       ; preds = %land.end
  %15 = load i32, i32* %i, align 4, !dbg !4185
  %inc = add nsw i32 %15, 1, !dbg !4185
  store i32 %inc, i32* %i, align 4, !dbg !4185
  br label %while.cond, !dbg !4186, !llvm.loop !4188

while.end:                                        ; preds = %land.end
  br label %if.end, !dbg !4189

if.end:                                           ; preds = %while.end, %entry
  %16 = load i32, i32* %i, align 4, !dbg !4190
  ret i32 %16, !dbg !4191
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_merge_flag_decode(%struct.HEVCContext* %s) #0 !dbg !4192 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4193, metadata !2708), !dbg !4194
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4195
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !4196
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4196
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !4197
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 18), align 8, !dbg !4198
  %idxprom = sext i32 %2 to i64, !dbg !4199
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4199
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 4, !dbg !4200
  %4 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !4200
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %4, i32 0, i32 0, !dbg !4201
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !4199
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !4202
  ret i32 %call, !dbg !4203
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_inter_pred_idc_decode(%struct.HEVCContext* %s, i32 %nPbW, i32 %nPbH) #0 !dbg !4204 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.HEVCContext*, align 8
  %nPbW.addr = alloca i32, align 4
  %nPbH.addr = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4207, metadata !2708), !dbg !4208
  store i32 %nPbW, i32* %nPbW.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nPbW.addr, metadata !4209, metadata !2708), !dbg !4210
  store i32 %nPbH, i32* %nPbH.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nPbH.addr, metadata !4211, metadata !2708), !dbg !4212
  %0 = load i32, i32* %nPbW.addr, align 4, !dbg !4213
  %1 = load i32, i32* %nPbH.addr, align 4, !dbg !4215
  %add = add nsw i32 %0, %1, !dbg !4216
  %cmp = icmp eq i32 %add, 12, !dbg !4217
  br i1 %cmp, label %if.then, label %if.end, !dbg !4218

if.then:                                          ; preds = %entry
  %2 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4219
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %2, i32 0, i32 4, !dbg !4220
  %3 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4220
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %3, i32 0, i32 4, !dbg !4221
  %4 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 20), align 16, !dbg !4222
  %add1 = add nsw i32 %4, 4, !dbg !4223
  %idxprom = sext i32 %add1 to i64, !dbg !4224
  %5 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4224
  %HEVClc2 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %5, i32 0, i32 4, !dbg !4225
  %6 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc2, align 8, !dbg !4225
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %6, i32 0, i32 0, !dbg !4226
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !4224
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !4227
  store i32 %call, i32* %retval, align 4, !dbg !4228
  br label %return, !dbg !4228

if.end:                                           ; preds = %entry
  %7 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4229
  %HEVClc3 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %7, i32 0, i32 4, !dbg !4231
  %8 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc3, align 8, !dbg !4231
  %cc4 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %8, i32 0, i32 4, !dbg !4232
  %9 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 20), align 16, !dbg !4233
  %10 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4234
  %HEVClc5 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %10, i32 0, i32 4, !dbg !4235
  %11 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc5, align 8, !dbg !4235
  %ct_depth = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %11, i32 0, i32 19, !dbg !4236
  %12 = load i32, i32* %ct_depth, align 32, !dbg !4236
  %add6 = add nsw i32 %9, %12, !dbg !4237
  %idxprom7 = sext i32 %add6 to i64, !dbg !4238
  %13 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4238
  %HEVClc8 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %13, i32 0, i32 4, !dbg !4239
  %14 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc8, align 8, !dbg !4239
  %cabac_state9 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %14, i32 0, i32 0, !dbg !4240
  %arrayidx10 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state9, i64 0, i64 %idxprom7, !dbg !4238
  %call11 = call i32 @get_cabac(%struct.CABACContext* %cc4, i8* %arrayidx10), !dbg !4241
  %tobool = icmp ne i32 %call11, 0, !dbg !4241
  br i1 %tobool, label %if.then12, label %if.end13, !dbg !4242

if.then12:                                        ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !4243
  br label %return, !dbg !4243

if.end13:                                         ; preds = %if.end
  %15 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4244
  %HEVClc14 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %15, i32 0, i32 4, !dbg !4245
  %16 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc14, align 8, !dbg !4245
  %cc15 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %16, i32 0, i32 4, !dbg !4246
  %17 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 20), align 16, !dbg !4247
  %add16 = add nsw i32 %17, 4, !dbg !4248
  %idxprom17 = sext i32 %add16 to i64, !dbg !4249
  %18 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4249
  %HEVClc18 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %18, i32 0, i32 4, !dbg !4250
  %19 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc18, align 8, !dbg !4250
  %cabac_state19 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %19, i32 0, i32 0, !dbg !4251
  %arrayidx20 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state19, i64 0, i64 %idxprom17, !dbg !4249
  %call21 = call i32 @get_cabac(%struct.CABACContext* %cc15, i8* %arrayidx20), !dbg !4252
  store i32 %call21, i32* %retval, align 4, !dbg !4253
  br label %return, !dbg !4253

return:                                           ; preds = %if.end13, %if.then12, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !4254
  ret i32 %20, !dbg !4254
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_ref_idx_lx_decode(%struct.HEVCContext* %s, i32 %num_ref_idx_lx) #0 !dbg !4255 {
entry:
  %c.addr.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i, metadata !3220, metadata !2708), !dbg !4256
  %tmp.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i, metadata !3225, metadata !2708), !dbg !4261
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !3229, metadata !2708), !dbg !4262
  %s.addr = alloca %struct.HEVCContext*, align 8
  %num_ref_idx_lx.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %max = alloca i32, align 4
  %max_ctx = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4263, metadata !2708), !dbg !4264
  store i32 %num_ref_idx_lx, i32* %num_ref_idx_lx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_ref_idx_lx.addr, metadata !4265, metadata !2708), !dbg !4266
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4267, metadata !2708), !dbg !4268
  store i32 0, i32* %i, align 4, !dbg !4268
  call void @llvm.dbg.declare(metadata i32* %max, metadata !4269, metadata !2708), !dbg !4270
  %0 = load i32, i32* %num_ref_idx_lx.addr, align 4, !dbg !4271
  %sub = sub nsw i32 %0, 1, !dbg !4272
  store i32 %sub, i32* %max, align 4, !dbg !4270
  call void @llvm.dbg.declare(metadata i32* %max_ctx, metadata !4273, metadata !2708), !dbg !4274
  %1 = load i32, i32* %max, align 4, !dbg !4275
  %cmp = icmp sgt i32 %1, 2, !dbg !4276
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4277

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4278

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %max, align 4, !dbg !4280
  br label %cond.end, !dbg !4282

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 2, %cond.true ], [ %2, %cond.false ], !dbg !4283
  store i32 %cond, i32* %max_ctx, align 4, !dbg !4285
  br label %while.cond, !dbg !4286

while.cond:                                       ; preds = %while.body, %cond.end
  %3 = load i32, i32* %i, align 4, !dbg !4287
  %4 = load i32, i32* %max_ctx, align 4, !dbg !4288
  %cmp1 = icmp slt i32 %3, %4, !dbg !4289
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !4290

land.rhs:                                         ; preds = %while.cond
  %5 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4291
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %5, i32 0, i32 4, !dbg !4292
  %6 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4292
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %6, i32 0, i32 4, !dbg !4293
  %7 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 21), align 4, !dbg !4294
  %8 = load i32, i32* %i, align 4, !dbg !4295
  %add = add nsw i32 %7, %8, !dbg !4296
  %idxprom = sext i32 %add to i64, !dbg !4297
  %9 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4297
  %HEVClc2 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %9, i32 0, i32 4, !dbg !4298
  %10 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc2, align 8, !dbg !4298
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %10, i32 0, i32 0, !dbg !4299
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !4297
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !4300
  %tobool = icmp ne i32 %call, 0, !dbg !4301
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %11 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ]
  br i1 %11, label %while.body, label %while.end, !dbg !4302

while.body:                                       ; preds = %land.end
  %12 = load i32, i32* %i, align 4, !dbg !4303
  %inc = add nsw i32 %12, 1, !dbg !4303
  store i32 %inc, i32* %i, align 4, !dbg !4303
  br label %while.cond, !dbg !4304, !llvm.loop !4306

while.end:                                        ; preds = %land.end
  %13 = load i32, i32* %i, align 4, !dbg !4307
  %cmp3 = icmp eq i32 %13, 2, !dbg !4308
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4309

if.then:                                          ; preds = %while.end
  br label %while.cond4, !dbg !4310

while.cond4:                                      ; preds = %while.body12, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !4311
  %15 = load i32, i32* %max, align 4, !dbg !4313
  %cmp5 = icmp slt i32 %14, %15, !dbg !4314
  br i1 %cmp5, label %land.rhs6, label %land.end11, !dbg !4315

land.rhs6:                                        ; preds = %while.cond4
  %16 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4316
  %HEVClc7 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %16, i32 0, i32 4, !dbg !4317
  %17 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc7, align 8, !dbg !4317
  %cc8 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %17, i32 0, i32 4, !dbg !4318
  store %struct.CABACContext* %cc8, %struct.CABACContext** %c.addr.i, align 8, !dbg !4319
  %18 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i, align 8, !dbg !4320
  %19 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %18, i64 0, i64 24, i64 32, i64 4) #5, !dbg !4321, !srcloc !3250
  %asmresult.i = extractvalue { i32, i64 } %19, 0, !dbg !4321
  %asmresult2.i = extractvalue { i32, i64 } %19, 1, !dbg !4321
  store i32 %asmresult.i, i32* %res.i, align 4, !dbg !4321
  store i64 %asmresult2.i, i64* %tmp.i, align 8, !dbg !4321
  %20 = load i32, i32* %res.i, align 4, !dbg !4322
  %tobool10 = icmp ne i32 %20, 0, !dbg !4323
  br label %land.end11

land.end11:                                       ; preds = %land.rhs6, %while.cond4
  %21 = phi i1 [ false, %while.cond4 ], [ %tobool10, %land.rhs6 ]
  br i1 %21, label %while.body12, label %while.end14, !dbg !4324

while.body12:                                     ; preds = %land.end11
  %22 = load i32, i32* %i, align 4, !dbg !4326
  %inc13 = add nsw i32 %22, 1, !dbg !4326
  store i32 %inc13, i32* %i, align 4, !dbg !4326
  br label %while.cond4, !dbg !4327, !llvm.loop !4329

while.end14:                                      ; preds = %land.end11
  br label %if.end, !dbg !4330

if.end:                                           ; preds = %while.end14, %while.end
  %23 = load i32, i32* %i, align 4, !dbg !4331
  ret i32 %23, !dbg !4332
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_mvp_lx_flag_decode(%struct.HEVCContext* %s) #0 !dbg !4333 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4334, metadata !2708), !dbg !4335
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4336
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !4337
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4337
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !4338
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 27), align 4, !dbg !4339
  %idxprom = sext i32 %2 to i64, !dbg !4340
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4340
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 4, !dbg !4341
  %4 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !4341
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %4, i32 0, i32 0, !dbg !4342
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !4340
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !4343
  ret i32 %call, !dbg !4344
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_no_residual_syntax_flag_decode(%struct.HEVCContext* %s) #0 !dbg !4345 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4346, metadata !2708), !dbg !4347
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4348
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !4349
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4349
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !4350
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 28), align 16, !dbg !4351
  %idxprom = sext i32 %2 to i64, !dbg !4352
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4352
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 4, !dbg !4353
  %4 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !4353
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %4, i32 0, i32 0, !dbg !4354
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !4352
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !4355
  ret i32 %call, !dbg !4356
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_split_transform_flag_decode(%struct.HEVCContext* %s, i32 %log2_trafo_size) #0 !dbg !4357 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  %log2_trafo_size.addr = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4358, metadata !2708), !dbg !4359
  store i32 %log2_trafo_size, i32* %log2_trafo_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %log2_trafo_size.addr, metadata !4360, metadata !2708), !dbg !4361
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4362
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !4363
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4363
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !4364
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 29), align 4, !dbg !4365
  %add = add nsw i32 %2, 5, !dbg !4366
  %3 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !4367
  %sub = sub nsw i32 %add, %3, !dbg !4368
  %idxprom = sext i32 %sub to i64, !dbg !4369
  %4 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4369
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %4, i32 0, i32 4, !dbg !4370
  %5 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !4370
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %5, i32 0, i32 0, !dbg !4371
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !4369
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !4372
  ret i32 %call, !dbg !4373
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_cbf_cb_cr_decode(%struct.HEVCContext* %s, i32 %trafo_depth) #0 !dbg !4374 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  %trafo_depth.addr = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4375, metadata !2708), !dbg !4376
  store i32 %trafo_depth, i32* %trafo_depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %trafo_depth.addr, metadata !4377, metadata !2708), !dbg !4378
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4379
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !4380
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4380
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !4381
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 31), align 4, !dbg !4382
  %3 = load i32, i32* %trafo_depth.addr, align 4, !dbg !4383
  %add = add nsw i32 %2, %3, !dbg !4384
  %idxprom = sext i32 %add to i64, !dbg !4385
  %4 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4385
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %4, i32 0, i32 4, !dbg !4386
  %5 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !4386
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %5, i32 0, i32 0, !dbg !4387
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !4385
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !4388
  ret i32 %call, !dbg !4389
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_cbf_luma_decode(%struct.HEVCContext* %s, i32 %trafo_depth) #0 !dbg !4390 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  %trafo_depth.addr = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4391, metadata !2708), !dbg !4392
  store i32 %trafo_depth, i32* %trafo_depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %trafo_depth.addr, metadata !4393, metadata !2708), !dbg !4394
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4395
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !4396
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4396
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !4397
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 30), align 8, !dbg !4398
  %3 = load i32, i32* %trafo_depth.addr, align 4, !dbg !4399
  %tobool = icmp ne i32 %3, 0, !dbg !4400
  %lnot = xor i1 %tobool, true, !dbg !4400
  %lnot.ext = zext i1 %lnot to i32, !dbg !4400
  %add = add nsw i32 %2, %lnot.ext, !dbg !4401
  %idxprom = sext i32 %add to i64, !dbg !4402
  %4 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4402
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %4, i32 0, i32 4, !dbg !4403
  %5 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !4403
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %5, i32 0, i32 0, !dbg !4404
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !4402
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !4405
  ret i32 %call, !dbg !4406
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_log2_res_scale_abs(%struct.HEVCContext* %s, i32 %idx) #0 !dbg !4407 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  %idx.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4408, metadata !2708), !dbg !4409
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !4410, metadata !2708), !dbg !4411
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4412, metadata !2708), !dbg !4413
  store i32 0, i32* %i, align 4, !dbg !4413
  br label %while.cond, !dbg !4414

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4415
  %cmp = icmp slt i32 %0, 4, !dbg !4417
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4418

land.rhs:                                         ; preds = %while.cond
  %1 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4419
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %1, i32 0, i32 4, !dbg !4421
  %2 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4421
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %2, i32 0, i32 4, !dbg !4422
  %3 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 45), align 4, !dbg !4423
  %4 = load i32, i32* %idx.addr, align 4, !dbg !4424
  %mul = mul nsw i32 4, %4, !dbg !4425
  %add = add nsw i32 %3, %mul, !dbg !4426
  %5 = load i32, i32* %i, align 4, !dbg !4427
  %add1 = add nsw i32 %add, %5, !dbg !4428
  %idxprom = sext i32 %add1 to i64, !dbg !4429
  %6 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4429
  %HEVClc2 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %6, i32 0, i32 4, !dbg !4430
  %7 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc2, align 8, !dbg !4430
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %7, i32 0, i32 0, !dbg !4431
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !4429
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !4432
  %tobool = icmp ne i32 %call, 0, !dbg !4433
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ]
  br i1 %8, label %while.body, label %while.end, !dbg !4434

while.body:                                       ; preds = %land.end
  %9 = load i32, i32* %i, align 4, !dbg !4436
  %inc = add nsw i32 %9, 1, !dbg !4436
  store i32 %inc, i32* %i, align 4, !dbg !4436
  br label %while.cond, !dbg !4437, !llvm.loop !4439

while.end:                                        ; preds = %land.end
  %10 = load i32, i32* %i, align 4, !dbg !4440
  ret i32 %10, !dbg !4441
}

; Function Attrs: nounwind uwtable
define i32 @ff_hevc_res_scale_sign_flag(%struct.HEVCContext* %s, i32 %idx) #0 !dbg !4442 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  %idx.addr = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4443, metadata !2708), !dbg !4444
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !4445, metadata !2708), !dbg !4446
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4447
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !4448
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4448
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !4449
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 46), align 8, !dbg !4450
  %3 = load i32, i32* %idx.addr, align 4, !dbg !4451
  %add = add nsw i32 %2, %3, !dbg !4452
  %idxprom = sext i32 %add to i64, !dbg !4453
  %4 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4453
  %HEVClc1 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %4, i32 0, i32 4, !dbg !4454
  %5 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1, align 8, !dbg !4454
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %5, i32 0, i32 0, !dbg !4455
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !4453
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !4456
  ret i32 %call, !dbg !4457
}

; Function Attrs: nounwind uwtable
define void @ff_hevc_hls_residual_coding(%struct.HEVCContext* %s, i32 %x0, i32 %y0, i32 %log2_trafo_size, i32 %scan_idx, i32 %c_idx) #0 !dbg !1058 {
entry:
  %c.addr.i35.i1313 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i35.i1313, metadata !3220, metadata !2708), !dbg !4458
  %tmp.i36.i1314 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i36.i1314, metadata !3225, metadata !2708), !dbg !4476
  %res.i37.i1315 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i37.i1315, metadata !3229, metadata !2708), !dbg !4477
  %c.addr.i30.i1316 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i30.i1316, metadata !3220, metadata !2708), !dbg !4478
  %tmp.i31.i1317 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i31.i1317, metadata !3225, metadata !2708), !dbg !4483
  %res.i32.i1318 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i32.i1318, metadata !3229, metadata !2708), !dbg !4484
  %c.addr.i.i1319 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i.i1319, metadata !3220, metadata !2708), !dbg !4485
  %tmp.i.i1320 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i.i1320, metadata !3225, metadata !2708), !dbg !4488
  %res.i.i1321 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i.i1321, metadata !3229, metadata !2708), !dbg !4489
  %retval.i1322 = alloca i32, align 4
  %s.addr.i1323 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i1323, metadata !4490, metadata !2708), !dbg !4491
  %rc_rice_param.addr.i1324 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rc_rice_param.addr.i1324, metadata !4492, metadata !2708), !dbg !4493
  %prefix.i1325 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %prefix.i1325, metadata !4494, metadata !2708), !dbg !4495
  %suffix.i1326 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %suffix.i1326, metadata !4496, metadata !2708), !dbg !4497
  %last_coeff_abs_level_remaining.i1327 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %last_coeff_abs_level_remaining.i1327, metadata !4498, metadata !2708), !dbg !4499
  %i.i1328 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i1328, metadata !4500, metadata !2708), !dbg !4501
  %prefix_minus3.i1329 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %prefix_minus3.i1329, metadata !4502, metadata !2708), !dbg !4503
  %c.addr.i35.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i35.i, metadata !3220, metadata !2708), !dbg !4504
  %tmp.i36.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i36.i, metadata !3225, metadata !2708), !dbg !4510
  %res.i37.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i37.i, metadata !3229, metadata !2708), !dbg !4511
  %c.addr.i30.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i30.i, metadata !3220, metadata !2708), !dbg !4512
  %tmp.i31.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i31.i, metadata !3225, metadata !2708), !dbg !4514
  %res.i32.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i32.i, metadata !3229, metadata !2708), !dbg !4515
  %c.addr.i.i1285 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i.i1285, metadata !3220, metadata !2708), !dbg !4516
  %tmp.i.i1286 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i.i1286, metadata !3225, metadata !2708), !dbg !4518
  %res.i.i1287 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i.i1287, metadata !3229, metadata !2708), !dbg !4519
  %retval.i1288 = alloca i32, align 4
  %s.addr.i1289 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i1289, metadata !4490, metadata !2708), !dbg !4520
  %rc_rice_param.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rc_rice_param.addr.i, metadata !4492, metadata !2708), !dbg !4521
  %prefix.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %prefix.i, metadata !4494, metadata !2708), !dbg !4522
  %suffix.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %suffix.i, metadata !4496, metadata !2708), !dbg !4523
  %last_coeff_abs_level_remaining.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %last_coeff_abs_level_remaining.i, metadata !4498, metadata !2708), !dbg !4524
  %i.i1290 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i1290, metadata !4500, metadata !2708), !dbg !4525
  %prefix_minus3.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %prefix_minus3.i, metadata !4502, metadata !2708), !dbg !4526
  %c.addr.i.i1266 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i.i1266, metadata !3220, metadata !2708), !dbg !4527
  %tmp.i.i1267 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i.i1267, metadata !3225, metadata !2708), !dbg !4537
  %res.i.i1268 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i.i1268, metadata !3229, metadata !2708), !dbg !4538
  %s.addr.i1269 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i1269, metadata !4539, metadata !2708), !dbg !4540
  %nb.addr.i1270 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %nb.addr.i1270, metadata !4541, metadata !2708), !dbg !4542
  %i.i1271 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i1271, metadata !4543, metadata !2708), !dbg !4544
  %ret.i1272 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i1272, metadata !4545, metadata !2708), !dbg !4546
  %c.addr.i.i1250 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i.i1250, metadata !3220, metadata !2708), !dbg !4547
  %tmp.i.i1251 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i.i1251, metadata !3225, metadata !2708), !dbg !4551
  %res.i.i1252 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i.i1252, metadata !3229, metadata !2708), !dbg !4552
  %s.addr.i1253 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i1253, metadata !4539, metadata !2708), !dbg !4553
  %nb.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %nb.addr.i, metadata !4541, metadata !2708), !dbg !4554
  %i.i1254 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i1254, metadata !4543, metadata !2708), !dbg !4555
  %ret.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i, metadata !4545, metadata !2708), !dbg !4556
  %s.addr.i1235 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i1235, metadata !4557, metadata !2708), !dbg !4559
  %c_idx.addr.i1236 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c_idx.addr.i1236, metadata !4563, metadata !2708), !dbg !4564
  %inc.addr.i1237 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %inc.addr.i1237, metadata !4565, metadata !2708), !dbg !4566
  %s.addr.i1222 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i1222, metadata !4567, metadata !2708), !dbg !4569
  %c_idx.addr.i1223 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c_idx.addr.i1223, metadata !4574, metadata !2708), !dbg !4575
  %inc.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %inc.addr.i, metadata !4576, metadata !2708), !dbg !4577
  %s.addr.i1211 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i1211, metadata !4578, metadata !2708), !dbg !4580
  %c_idx.addr.i1212 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c_idx.addr.i1212, metadata !4587, metadata !2708), !dbg !4588
  %offset.addr.i1213 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr.i1213, metadata !4589, metadata !2708), !dbg !4590
  %s.addr.i1200 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i1200, metadata !4591, metadata !2708), !dbg !4595
  %x_c.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x_c.addr.i, metadata !4601, metadata !2708), !dbg !4602
  %y_c.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %y_c.addr.i, metadata !4603, metadata !2708), !dbg !4604
  %offset.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr.i, metadata !4605, metadata !2708), !dbg !4606
  %ctx_idx_map.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ctx_idx_map.addr.i, metadata !4607, metadata !2708), !dbg !4608
  %inc.i1201 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %inc.i1201, metadata !4609, metadata !2708), !dbg !4610
  %s.addr.i1187 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i1187, metadata !4611, metadata !2708), !dbg !4613
  %c_idx.addr.i1188 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c_idx.addr.i1188, metadata !4617, metadata !2708), !dbg !4618
  %ctx_cg.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ctx_cg.addr.i, metadata !4619, metadata !2708), !dbg !4620
  %inc.i1189 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %inc.i1189, metadata !4621, metadata !2708), !dbg !4622
  %c.addr.i4.i1159 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i4.i1159, metadata !3220, metadata !2708), !dbg !4623
  %tmp.i5.i1160 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i5.i1160, metadata !3225, metadata !2708), !dbg !4631
  %res.i6.i1161 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i6.i1161, metadata !3229, metadata !2708), !dbg !4632
  %c.addr.i.i1162 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i.i1162, metadata !3220, metadata !2708), !dbg !4633
  %tmp.i.i1163 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i.i1163, metadata !3225, metadata !2708), !dbg !4635
  %res.i.i1164 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i.i1164, metadata !3229, metadata !2708), !dbg !4636
  %s.addr.i1165 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i1165, metadata !4637, metadata !2708), !dbg !4638
  %last_significant_coeff_prefix.addr.i1166 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %last_significant_coeff_prefix.addr.i1166, metadata !4639, metadata !2708), !dbg !4640
  %i.i1167 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i1167, metadata !4641, metadata !2708), !dbg !4642
  %length.i1168 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %length.i1168, metadata !4643, metadata !2708), !dbg !4644
  %value.i1169 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.i1169, metadata !4645, metadata !2708), !dbg !4646
  %c.addr.i4.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i4.i, metadata !3220, metadata !2708), !dbg !4647
  %tmp.i5.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i5.i, metadata !3225, metadata !2708), !dbg !4652
  %res.i6.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i6.i, metadata !3229, metadata !2708), !dbg !4653
  %c.addr.i.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i.i, metadata !3220, metadata !2708), !dbg !4654
  %tmp.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i.i, metadata !3225, metadata !2708), !dbg !4656
  %res.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i.i, metadata !3229, metadata !2708), !dbg !4657
  %s.addr.i1150 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i1150, metadata !4637, metadata !2708), !dbg !4658
  %last_significant_coeff_prefix.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %last_significant_coeff_prefix.addr.i, metadata !4639, metadata !2708), !dbg !4659
  %i.i1151 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i1151, metadata !4641, metadata !2708), !dbg !4660
  %length.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %length.i, metadata !4643, metadata !2708), !dbg !4661
  %value.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.i, metadata !4645, metadata !2708), !dbg !4662
  %s.addr.i = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i, metadata !4663, metadata !2708), !dbg !4667
  %c_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c_idx.addr.i, metadata !4669, metadata !2708), !dbg !4670
  %log2_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %log2_size.addr.i, metadata !4671, metadata !2708), !dbg !4672
  %last_scx_prefix.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %last_scx_prefix.addr.i, metadata !4673, metadata !2708), !dbg !4674
  %last_scy_prefix.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %last_scy_prefix.addr.i, metadata !4675, metadata !2708), !dbg !4676
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !4677, metadata !2708), !dbg !4678
  %max.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max.i, metadata !4679, metadata !2708), !dbg !4680
  %ctx_offset.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ctx_offset.i, metadata !4681, metadata !2708), !dbg !4682
  %ctx_shift.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ctx_shift.i, metadata !4683, metadata !2708), !dbg !4684
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2985, metadata !2708), !dbg !4685
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !2995, metadata !2708), !dbg !4691
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !2997, metadata !2708), !dbg !4692
  %s.addr = alloca %struct.HEVCContext*, align 8
  %x0.addr = alloca i32, align 4
  %y0.addr = alloca i32, align 4
  %log2_trafo_size.addr = alloca i32, align 4
  %scan_idx.addr = alloca i32, align 4
  %c_idx.addr = alloca i32, align 4
  %lc = alloca %struct.HEVCLocalContext*, align 8
  %transform_skip_flag = alloca i32, align 4
  %last_significant_coeff_x = alloca i32, align 4
  %last_significant_coeff_y = alloca i32, align 4
  %last_scan_pos = alloca i32, align 4
  %n_end = alloca i32, align 4
  %num_coeff = alloca i32, align 4
  %greater1_ctx = alloca i32, align 4
  %num_last_subset = alloca i32, align 4
  %x_cg_last_sig = alloca i32, align 4
  %y_cg_last_sig = alloca i32, align 4
  %scan_x_cg = alloca i8*, align 8
  %scan_y_cg = alloca i8*, align 8
  %scan_x_off = alloca i8*, align 8
  %scan_y_off = alloca i8*, align 8
  %stride = alloca i64, align 8
  %hshift = alloca i32, align 4
  %vshift = alloca i32, align 4
  %dst = alloca i8*, align 8
  %coeffs = alloca i16*, align 8
  %significant_coeff_group_flag = alloca [8 x [8 x i8]], align 16
  %explicit_rdpcm_flag = alloca i32, align 4
  %explicit_rdpcm_dir_flag = alloca i32, align 4
  %trafo_size = alloca i32, align 4
  %i = alloca i32, align 4
  %qp = alloca i32, align 4
  %shift = alloca i32, align 4
  %add20 = alloca i32, align 4
  %scale = alloca i32, align 4
  %scale_m = alloca i32, align 4
  %scale_matrix = alloca i8*, align 8
  %dc_scale = alloca i8, align 1
  %pred_mode_intra = alloca i32, align 4
  %qp_y = alloca i32, align 4
  %qp_i = alloca i32, align 4
  %offset = alloca i32, align 4
  %sl = alloca %struct.ScalingList*, align 8
  %matrix_id = alloca i32, align 4
  %suffix = alloca i32, align 4
  %suffix199 = alloca i32, align 4
  %SWAP_tmp = alloca i32, align 4
  %last_x_c = alloca i32, align 4
  %last_y_c = alloca i32, align 4
  %n = alloca i32, align 4
  %m = alloca i32, align 4
  %x_cg = alloca i32, align 4
  %y_cg = alloca i32, align 4
  %x_c = alloca i32, align 4
  %y_c = alloca i32, align 4
  %pos = alloca i32, align 4
  %implicit_non_zero_coeff = alloca i32, align 4
  %trans_coeff_level = alloca i64, align 8
  %prev_sig = alloca i32, align 4
  %offset273 = alloca i32, align 4
  %rice_init = alloca i32, align 4
  %significant_coeff_flag_idx = alloca [16 x i8], align 16
  %nb_significant_coeff_flag = alloca i8, align 1
  %ctx_cg = alloca i32, align 4
  %ctx_idx_map_p = alloca i8*, align 8
  %scf_offset = alloca i32, align 4
  %first_nz_pos_in_cg = alloca i32, align 4
  %last_nz_pos_in_cg = alloca i32, align 4
  %c_rice_param = alloca i32, align 4
  %first_greater1_coeff_idx = alloca i32, align 4
  %coeff_abs_level_greater1_flag = alloca [8 x i8], align 1
  %coeff_sign_flag = alloca i16, align 2
  %sum_abs = alloca i32, align 4
  %sign_hidden = alloca i32, align 4
  %sb_type = alloca i32, align 4
  %ctx_set = alloca i32, align 4
  %inc571 = alloca i32, align 4
  %last_coeff_abs_level_remaining = alloca i32, align 4
  %c_rice_p_init = alloca i32, align 4
  %last_coeff_abs_level_remaining767 = alloca i32, align 4
  %c_rice_p_init801 = alloca i32, align 4
  %mode = alloca i32, align 4
  %rot = alloca i32, align 4
  %SWAP_tmp996 = alloca i16, align 2
  %mode1034 = alloca i32, align 4
  %max_xy = alloca i32, align 4
  %col_limit = alloca i32, align 4
  %coeffs_y = alloca i16*, align 8
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !4693, metadata !2708), !dbg !4694
  store i32 %x0, i32* %x0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x0.addr, metadata !4695, metadata !2708), !dbg !4696
  store i32 %y0, i32* %y0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y0.addr, metadata !4697, metadata !2708), !dbg !4698
  store i32 %log2_trafo_size, i32* %log2_trafo_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %log2_trafo_size.addr, metadata !4699, metadata !2708), !dbg !4700
  store i32 %scan_idx, i32* %scan_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scan_idx.addr, metadata !4701, metadata !2708), !dbg !4702
  store i32 %c_idx, i32* %c_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c_idx.addr, metadata !4703, metadata !2708), !dbg !4704
  call void @llvm.dbg.declare(metadata %struct.HEVCLocalContext** %lc, metadata !4705, metadata !2708), !dbg !4706
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4707
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !4708
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !4708
  store %struct.HEVCLocalContext* %1, %struct.HEVCLocalContext** %lc, align 8, !dbg !4706
  call void @llvm.dbg.declare(metadata i32* %transform_skip_flag, metadata !4709, metadata !2708), !dbg !4710
  store i32 0, i32* %transform_skip_flag, align 4, !dbg !4710
  call void @llvm.dbg.declare(metadata i32* %last_significant_coeff_x, metadata !4711, metadata !2708), !dbg !4712
  call void @llvm.dbg.declare(metadata i32* %last_significant_coeff_y, metadata !4713, metadata !2708), !dbg !4714
  call void @llvm.dbg.declare(metadata i32* %last_scan_pos, metadata !4715, metadata !2708), !dbg !4716
  call void @llvm.dbg.declare(metadata i32* %n_end, metadata !4717, metadata !2708), !dbg !4718
  call void @llvm.dbg.declare(metadata i32* %num_coeff, metadata !4719, metadata !2708), !dbg !4720
  store i32 0, i32* %num_coeff, align 4, !dbg !4720
  call void @llvm.dbg.declare(metadata i32* %greater1_ctx, metadata !4721, metadata !2708), !dbg !4722
  store i32 1, i32* %greater1_ctx, align 4, !dbg !4722
  call void @llvm.dbg.declare(metadata i32* %num_last_subset, metadata !4723, metadata !2708), !dbg !4724
  call void @llvm.dbg.declare(metadata i32* %x_cg_last_sig, metadata !4725, metadata !2708), !dbg !4726
  call void @llvm.dbg.declare(metadata i32* %y_cg_last_sig, metadata !4727, metadata !2708), !dbg !4728
  call void @llvm.dbg.declare(metadata i8** %scan_x_cg, metadata !4729, metadata !2708), !dbg !4730
  call void @llvm.dbg.declare(metadata i8** %scan_y_cg, metadata !4731, metadata !2708), !dbg !4732
  call void @llvm.dbg.declare(metadata i8** %scan_x_off, metadata !4733, metadata !2708), !dbg !4734
  call void @llvm.dbg.declare(metadata i8** %scan_y_off, metadata !4735, metadata !2708), !dbg !4736
  call void @llvm.dbg.declare(metadata i64* %stride, metadata !4737, metadata !2708), !dbg !4738
  %2 = load i32, i32* %c_idx.addr, align 4, !dbg !4739
  %idxprom = sext i32 %2 to i64, !dbg !4740
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4740
  %frame = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 11, !dbg !4741
  %4 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !4741
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 1, !dbg !4742
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom, !dbg !4740
  %5 = load i32, i32* %arrayidx, align 4, !dbg !4740
  %conv = sext i32 %5 to i64, !dbg !4740
  store i64 %conv, i64* %stride, align 8, !dbg !4738
  call void @llvm.dbg.declare(metadata i32* %hshift, metadata !4743, metadata !2708), !dbg !4744
  %6 = load i32, i32* %c_idx.addr, align 4, !dbg !4745
  %idxprom1 = sext i32 %6 to i64, !dbg !4746
  %7 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4746
  %ps = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %7, i32 0, i32 15, !dbg !4747
  %sps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps, i32 0, i32 4, !dbg !4748
  %8 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps, align 8, !dbg !4748
  %hshift2 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %8, i32 0, i32 59, !dbg !4749
  %arrayidx3 = getelementptr inbounds [3 x i32], [3 x i32]* %hshift2, i64 0, i64 %idxprom1, !dbg !4746
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !4746
  store i32 %9, i32* %hshift, align 4, !dbg !4744
  call void @llvm.dbg.declare(metadata i32* %vshift, metadata !4750, metadata !2708), !dbg !4751
  %10 = load i32, i32* %c_idx.addr, align 4, !dbg !4752
  %idxprom4 = sext i32 %10 to i64, !dbg !4753
  %11 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4753
  %ps5 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %11, i32 0, i32 15, !dbg !4754
  %sps6 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps5, i32 0, i32 4, !dbg !4755
  %12 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps6, align 8, !dbg !4755
  %vshift7 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %12, i32 0, i32 60, !dbg !4756
  %arrayidx8 = getelementptr inbounds [3 x i32], [3 x i32]* %vshift7, i64 0, i64 %idxprom4, !dbg !4753
  %13 = load i32, i32* %arrayidx8, align 4, !dbg !4753
  store i32 %13, i32* %vshift, align 4, !dbg !4751
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !4757, metadata !2708), !dbg !4758
  %14 = load i32, i32* %y0.addr, align 4, !dbg !4759
  %15 = load i32, i32* %vshift, align 4, !dbg !4760
  %shr = ashr i32 %14, %15, !dbg !4761
  %conv9 = sext i32 %shr to i64, !dbg !4762
  %16 = load i64, i64* %stride, align 8, !dbg !4763
  %mul = mul nsw i64 %conv9, %16, !dbg !4764
  %17 = load i32, i32* %x0.addr, align 4, !dbg !4765
  %18 = load i32, i32* %hshift, align 4, !dbg !4766
  %shr10 = ashr i32 %17, %18, !dbg !4767
  %19 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4768
  %ps11 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %19, i32 0, i32 15, !dbg !4769
  %sps12 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps11, i32 0, i32 4, !dbg !4770
  %20 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps12, align 8, !dbg !4770
  %pixel_shift = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %20, i32 0, i32 7, !dbg !4771
  %21 = load i32, i32* %pixel_shift, align 4, !dbg !4771
  %shl = shl i32 %shr10, %21, !dbg !4772
  %conv13 = sext i32 %shl to i64, !dbg !4773
  %add = add nsw i64 %mul, %conv13, !dbg !4774
  %22 = load i32, i32* %c_idx.addr, align 4, !dbg !4775
  %idxprom14 = sext i32 %22 to i64, !dbg !4776
  %23 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4776
  %frame15 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %23, i32 0, i32 11, !dbg !4777
  %24 = load %struct.AVFrame*, %struct.AVFrame** %frame15, align 8, !dbg !4777
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %24, i32 0, i32 0, !dbg !4778
  %arrayidx16 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom14, !dbg !4776
  %25 = load i8*, i8** %arrayidx16, align 8, !dbg !4776
  %arrayidx17 = getelementptr inbounds i8, i8* %25, i64 %add, !dbg !4776
  store i8* %arrayidx17, i8** %dst, align 8, !dbg !4758
  call void @llvm.dbg.declare(metadata i16** %coeffs, metadata !4779, metadata !2708), !dbg !4780
  %26 = load i32, i32* %c_idx.addr, align 4, !dbg !4781
  %tobool = icmp ne i32 %26, 0, !dbg !4781
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4781

cond.true:                                        ; preds = %entry
  %27 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !4782
  %edge_emu_buffer2 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %27, i32 0, i32 17, !dbg !4784
  %arraydecay = getelementptr inbounds [11360 x i8], [11360 x i8]* %edge_emu_buffer2, i32 0, i32 0, !dbg !4782
  br label %cond.end, !dbg !4785

cond.false:                                       ; preds = %entry
  %28 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !4786
  %edge_emu_buffer = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %28, i32 0, i32 16, !dbg !4788
  %arraydecay18 = getelementptr inbounds [11360 x i8], [11360 x i8]* %edge_emu_buffer, i32 0, i32 0, !dbg !4786
  br label %cond.end, !dbg !4789

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay, %cond.true ], [ %arraydecay18, %cond.false ], !dbg !4790
  %29 = bitcast i8* %cond to i16*, !dbg !4792
  store i16* %29, i16** %coeffs, align 8, !dbg !4793
  call void @llvm.dbg.declare(metadata [8 x [8 x i8]]* %significant_coeff_group_flag, metadata !4794, metadata !2708), !dbg !4796
  %30 = bitcast [8 x [8 x i8]]* %significant_coeff_group_flag to i8*, !dbg !4796
  call void @llvm.memset.p0i8.i64(i8* %30, i8 0, i64 64, i32 16, i1 false), !dbg !4796
  call void @llvm.dbg.declare(metadata i32* %explicit_rdpcm_flag, metadata !4797, metadata !2708), !dbg !4798
  store i32 0, i32* %explicit_rdpcm_flag, align 4, !dbg !4798
  call void @llvm.dbg.declare(metadata i32* %explicit_rdpcm_dir_flag, metadata !4799, metadata !2708), !dbg !4800
  call void @llvm.dbg.declare(metadata i32* %trafo_size, metadata !4801, metadata !2708), !dbg !4802
  %31 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !4803
  %shl19 = shl i32 1, %31, !dbg !4804
  store i32 %shl19, i32* %trafo_size, align 4, !dbg !4802
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4805, metadata !2708), !dbg !4806
  call void @llvm.dbg.declare(metadata i32* %qp, metadata !4807, metadata !2708), !dbg !4808
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !4809, metadata !2708), !dbg !4810
  call void @llvm.dbg.declare(metadata i32* %add20, metadata !4811, metadata !2708), !dbg !4812
  call void @llvm.dbg.declare(metadata i32* %scale, metadata !4813, metadata !2708), !dbg !4814
  call void @llvm.dbg.declare(metadata i32* %scale_m, metadata !4815, metadata !2708), !dbg !4816
  call void @llvm.dbg.declare(metadata i8** %scale_matrix, metadata !4817, metadata !2708), !dbg !4818
  store i8* null, i8** %scale_matrix, align 8, !dbg !4818
  call void @llvm.dbg.declare(metadata i8* %dc_scale, metadata !4819, metadata !2708), !dbg !4820
  call void @llvm.dbg.declare(metadata i32* %pred_mode_intra, metadata !4821, metadata !2708), !dbg !4822
  %32 = load i32, i32* %c_idx.addr, align 4, !dbg !4823
  %cmp = icmp eq i32 %32, 0, !dbg !4824
  br i1 %cmp, label %cond.true22, label %cond.false23, !dbg !4825

cond.true22:                                      ; preds = %cond.end
  %33 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !4826
  %tu = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %33, i32 0, i32 8, !dbg !4827
  %intra_pred_mode = getelementptr inbounds %struct.TransformUnit, %struct.TransformUnit* %tu, i32 0, i32 2, !dbg !4828
  %34 = load i32, i32* %intra_pred_mode, align 8, !dbg !4828
  br label %cond.end25, !dbg !4829

cond.false23:                                     ; preds = %cond.end
  %35 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !4830
  %tu24 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %35, i32 0, i32 8, !dbg !4831
  %intra_pred_mode_c = getelementptr inbounds %struct.TransformUnit, %struct.TransformUnit* %tu24, i32 0, i32 3, !dbg !4832
  %36 = load i32, i32* %intra_pred_mode_c, align 4, !dbg !4832
  br label %cond.end25, !dbg !4833

cond.end25:                                       ; preds = %cond.false23, %cond.true22
  %cond26 = phi i32 [ %34, %cond.true22 ], [ %36, %cond.false23 ], !dbg !4834
  store i32 %cond26, i32* %pred_mode_intra, align 4, !dbg !4835
  %37 = load i16*, i16** %coeffs, align 8, !dbg !4836
  %38 = bitcast i16* %37 to i8*, !dbg !4837
  %39 = load i32, i32* %trafo_size, align 4, !dbg !4838
  %40 = load i32, i32* %trafo_size, align 4, !dbg !4839
  %mul27 = mul nsw i32 %39, %40, !dbg !4840
  %conv28 = sext i32 %mul27 to i64, !dbg !4838
  %mul29 = mul i64 %conv28, 2, !dbg !4841
  call void @llvm.memset.p0i8.i64(i8* %38, i8 0, i64 %mul29, i32 2, i1 false), !dbg !4837
  %41 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !4842
  %cu = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %41, i32 0, i32 20, !dbg !4843
  %cu_transquant_bypass_flag = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu, i32 0, i32 6, !dbg !4844
  %42 = load i8, i8* %cu_transquant_bypass_flag, align 2, !dbg !4844
  %tobool30 = icmp ne i8 %42, 0, !dbg !4842
  br i1 %tobool30, label %if.else162, label %if.then, !dbg !4845

if.then:                                          ; preds = %cond.end25
  call void @llvm.dbg.declare(metadata i32* %qp_y, metadata !4846, metadata !2708), !dbg !4847
  %43 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !4848
  %qp_y31 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %43, i32 0, i32 5, !dbg !4849
  %44 = load i8, i8* %qp_y31, align 32, !dbg !4849
  %conv32 = sext i8 %44 to i32, !dbg !4848
  store i32 %conv32, i32* %qp_y, align 4, !dbg !4847
  %45 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4850
  %ps33 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %45, i32 0, i32 15, !dbg !4852
  %pps = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps33, i32 0, i32 5, !dbg !4853
  %46 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps, align 8, !dbg !4853
  %transform_skip_enabled_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %46, i32 0, i32 7, !dbg !4854
  %47 = load i8, i8* %transform_skip_enabled_flag, align 1, !dbg !4854
  %conv34 = zext i8 %47 to i32, !dbg !4850
  %tobool35 = icmp ne i32 %conv34, 0, !dbg !4850
  br i1 %tobool35, label %land.lhs.true, label %if.end, !dbg !4855

land.lhs.true:                                    ; preds = %if.then
  %48 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !4856
  %49 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4857
  %ps36 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %49, i32 0, i32 15, !dbg !4858
  %pps37 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps36, i32 0, i32 5, !dbg !4859
  %50 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps37, align 8, !dbg !4859
  %log2_max_transform_skip_block_size = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %50, i32 0, i32 36, !dbg !4860
  %51 = load i8, i8* %log2_max_transform_skip_block_size, align 1, !dbg !4860
  %conv38 = zext i8 %51 to i32, !dbg !4857
  %cmp39 = icmp sle i32 %48, %conv38, !dbg !4861
  br i1 %cmp39, label %if.then41, label %if.end, !dbg !4862

if.then41:                                        ; preds = %land.lhs.true
  %52 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4864
  %53 = load i32, i32* %c_idx.addr, align 4, !dbg !4866
  %call = call i32 @hevc_transform_skip_flag_decode(%struct.HEVCContext* %52, i32 %53), !dbg !4867
  store i32 %call, i32* %transform_skip_flag, align 4, !dbg !4868
  br label %if.end, !dbg !4869

if.end:                                           ; preds = %if.then41, %land.lhs.true, %if.then
  %54 = load i32, i32* %c_idx.addr, align 4, !dbg !4870
  %cmp42 = icmp eq i32 %54, 0, !dbg !4871
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !4872

if.then44:                                        ; preds = %if.end
  %55 = load i32, i32* %qp_y, align 4, !dbg !4873
  %56 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4875
  %ps45 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %56, i32 0, i32 15, !dbg !4876
  %sps46 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps45, i32 0, i32 4, !dbg !4877
  %57 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps46, align 8, !dbg !4877
  %qp_bd_offset = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %57, i32 0, i32 61, !dbg !4878
  %58 = load i32, i32* %qp_bd_offset, align 4, !dbg !4878
  %add47 = add nsw i32 %55, %58, !dbg !4879
  store i32 %add47, i32* %qp, align 4, !dbg !4880
  br label %if.end101, !dbg !4881

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %qp_i, metadata !4882, metadata !2708), !dbg !4883
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !4884, metadata !2708), !dbg !4885
  %59 = load i32, i32* %c_idx.addr, align 4, !dbg !4886
  %cmp48 = icmp eq i32 %59, 1, !dbg !4888
  br i1 %cmp48, label %if.then50, label %if.else57, !dbg !4889

if.then50:                                        ; preds = %if.else
  %60 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4890
  %ps51 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %60, i32 0, i32 15, !dbg !4891
  %pps52 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps51, i32 0, i32 5, !dbg !4892
  %61 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps52, align 8, !dbg !4892
  %cb_qp_offset = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %61, i32 0, i32 10, !dbg !4893
  %62 = load i32, i32* %cb_qp_offset, align 4, !dbg !4893
  %63 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4894
  %sh = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %63, i32 0, i32 21, !dbg !4895
  %slice_cb_qp_offset = getelementptr inbounds %struct.SliceHeader, %struct.SliceHeader* %sh, i32 0, i32 28, !dbg !4896
  %64 = load i32, i32* %slice_cb_qp_offset, align 4, !dbg !4896
  %add53 = add nsw i32 %62, %64, !dbg !4897
  %65 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !4898
  %tu54 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %65, i32 0, i32 8, !dbg !4899
  %cu_qp_offset_cb = getelementptr inbounds %struct.TransformUnit, %struct.TransformUnit* %tu54, i32 0, i32 7, !dbg !4900
  %66 = load i8, i8* %cu_qp_offset_cb, align 2, !dbg !4900
  %conv55 = sext i8 %66 to i32, !dbg !4898
  %add56 = add nsw i32 %add53, %conv55, !dbg !4901
  store i32 %add56, i32* %offset, align 4, !dbg !4902
  br label %if.end65, !dbg !4903

if.else57:                                        ; preds = %if.else
  %67 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4904
  %ps58 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %67, i32 0, i32 15, !dbg !4905
  %pps59 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps58, i32 0, i32 5, !dbg !4906
  %68 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps59, align 8, !dbg !4906
  %cr_qp_offset = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %68, i32 0, i32 11, !dbg !4907
  %69 = load i32, i32* %cr_qp_offset, align 8, !dbg !4907
  %70 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4908
  %sh60 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %70, i32 0, i32 21, !dbg !4909
  %slice_cr_qp_offset = getelementptr inbounds %struct.SliceHeader, %struct.SliceHeader* %sh60, i32 0, i32 29, !dbg !4910
  %71 = load i32, i32* %slice_cr_qp_offset, align 8, !dbg !4910
  %add61 = add nsw i32 %69, %71, !dbg !4911
  %72 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !4912
  %tu62 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %72, i32 0, i32 8, !dbg !4913
  %cu_qp_offset_cr = getelementptr inbounds %struct.TransformUnit, %struct.TransformUnit* %tu62, i32 0, i32 8, !dbg !4914
  %73 = load i8, i8* %cu_qp_offset_cr, align 1, !dbg !4914
  %conv63 = sext i8 %73 to i32, !dbg !4912
  %add64 = add nsw i32 %add61, %conv63, !dbg !4915
  store i32 %add64, i32* %offset, align 4, !dbg !4916
  br label %if.end65

if.end65:                                         ; preds = %if.else57, %if.then50
  %74 = load i32, i32* %qp_y, align 4, !dbg !4917
  %75 = load i32, i32* %offset, align 4, !dbg !4918
  %add66 = add nsw i32 %74, %75, !dbg !4919
  %76 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4920
  %ps67 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %76, i32 0, i32 15, !dbg !4921
  %sps68 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps67, i32 0, i32 4, !dbg !4922
  %77 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps68, align 8, !dbg !4922
  %qp_bd_offset69 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %77, i32 0, i32 61, !dbg !4923
  %78 = load i32, i32* %qp_bd_offset69, align 4, !dbg !4923
  %sub = sub nsw i32 0, %78, !dbg !4924
  store i32 %add66, i32* %a.addr.i, align 4, !dbg !4925
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !4925
  store i32 57, i32* %amax.addr.i, align 4, !dbg !4925
  %79 = load i32, i32* %a.addr.i, align 4, !dbg !4926
  %80 = load i32, i32* %amin.addr.i, align 4, !dbg !4927
  %cmp.i = icmp slt i32 %79, %80, !dbg !4928
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !4929

if.then.i:                                        ; preds = %if.end65
  %81 = load i32, i32* %amin.addr.i, align 4, !dbg !4930
  store i32 %81, i32* %retval.i, align 4, !dbg !4931
  br label %av_clip_c.exit, !dbg !4931

if.else.i:                                        ; preds = %if.end65
  %82 = load i32, i32* %a.addr.i, align 4, !dbg !4932
  %83 = load i32, i32* %amax.addr.i, align 4, !dbg !4933
  %cmp1.i = icmp sgt i32 %82, %83, !dbg !4934
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !4935

if.then2.i:                                       ; preds = %if.else.i
  %84 = load i32, i32* %amax.addr.i, align 4, !dbg !4936
  store i32 %84, i32* %retval.i, align 4, !dbg !4937
  br label %av_clip_c.exit, !dbg !4937

if.else3.i:                                       ; preds = %if.else.i
  %85 = load i32, i32* %a.addr.i, align 4, !dbg !4938
  store i32 %85, i32* %retval.i, align 4, !dbg !4939
  br label %av_clip_c.exit, !dbg !4939

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %86 = load i32, i32* %retval.i, align 4, !dbg !4940
  store i32 %86, i32* %qp_i, align 4, !dbg !4941
  %87 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4942
  %ps71 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %87, i32 0, i32 15, !dbg !4944
  %sps72 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps71, i32 0, i32 4, !dbg !4945
  %88 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps72, align 8, !dbg !4945
  %chroma_format_idc = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %88, i32 0, i32 1, !dbg !4946
  %89 = load i32, i32* %chroma_format_idc, align 4, !dbg !4946
  %cmp73 = icmp eq i32 %89, 1, !dbg !4947
  br i1 %cmp73, label %if.then75, label %if.else90, !dbg !4948

if.then75:                                        ; preds = %av_clip_c.exit
  %90 = load i32, i32* %qp_i, align 4, !dbg !4949
  %cmp76 = icmp slt i32 %90, 30, !dbg !4952
  br i1 %cmp76, label %if.then78, label %if.else79, !dbg !4953

if.then78:                                        ; preds = %if.then75
  %91 = load i32, i32* %qp_i, align 4, !dbg !4954
  store i32 %91, i32* %qp, align 4, !dbg !4955
  br label %if.end89, !dbg !4956

if.else79:                                        ; preds = %if.then75
  %92 = load i32, i32* %qp_i, align 4, !dbg !4957
  %cmp80 = icmp sgt i32 %92, 43, !dbg !4959
  br i1 %cmp80, label %if.then82, label %if.else84, !dbg !4960

if.then82:                                        ; preds = %if.else79
  %93 = load i32, i32* %qp_i, align 4, !dbg !4961
  %sub83 = sub nsw i32 %93, 6, !dbg !4962
  store i32 %sub83, i32* %qp, align 4, !dbg !4963
  br label %if.end88, !dbg !4964

if.else84:                                        ; preds = %if.else79
  %94 = load i32, i32* %qp_i, align 4, !dbg !4965
  %sub85 = sub nsw i32 %94, 30, !dbg !4966
  %idxprom86 = sext i32 %sub85 to i64, !dbg !4967
  %arrayidx87 = getelementptr inbounds [14 x i32], [14 x i32]* @ff_hevc_hls_residual_coding.qp_c, i64 0, i64 %idxprom86, !dbg !4967
  %95 = load i32, i32* %arrayidx87, align 4, !dbg !4967
  store i32 %95, i32* %qp, align 4, !dbg !4968
  br label %if.end88

if.end88:                                         ; preds = %if.else84, %if.then82
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.then78
  br label %if.end96, !dbg !4969

if.else90:                                        ; preds = %av_clip_c.exit
  %96 = load i32, i32* %qp_i, align 4, !dbg !4970
  %cmp91 = icmp sgt i32 %96, 51, !dbg !4973
  br i1 %cmp91, label %if.then93, label %if.else94, !dbg !4974

if.then93:                                        ; preds = %if.else90
  store i32 51, i32* %qp, align 4, !dbg !4975
  br label %if.end95, !dbg !4976

if.else94:                                        ; preds = %if.else90
  %97 = load i32, i32* %qp_i, align 4, !dbg !4977
  store i32 %97, i32* %qp, align 4, !dbg !4978
  br label %if.end95

if.end95:                                         ; preds = %if.else94, %if.then93
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.end89
  %98 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4979
  %ps97 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %98, i32 0, i32 15, !dbg !4980
  %sps98 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps97, i32 0, i32 4, !dbg !4981
  %99 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps98, align 8, !dbg !4981
  %qp_bd_offset99 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %99, i32 0, i32 61, !dbg !4982
  %100 = load i32, i32* %qp_bd_offset99, align 4, !dbg !4982
  %101 = load i32, i32* %qp, align 4, !dbg !4983
  %add100 = add nsw i32 %101, %100, !dbg !4983
  store i32 %add100, i32* %qp, align 4, !dbg !4983
  br label %if.end101

if.end101:                                        ; preds = %if.end96, %if.then44
  %102 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !4984
  %ps102 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %102, i32 0, i32 15, !dbg !4985
  %sps103 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps102, i32 0, i32 4, !dbg !4986
  %103 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps103, align 8, !dbg !4986
  %bit_depth = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %103, i32 0, i32 5, !dbg !4987
  %104 = load i32, i32* %bit_depth, align 4, !dbg !4987
  %105 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !4988
  %add104 = add nsw i32 %104, %105, !dbg !4989
  %sub105 = sub nsw i32 %add104, 5, !dbg !4990
  store i32 %sub105, i32* %shift, align 4, !dbg !4991
  %106 = load i32, i32* %shift, align 4, !dbg !4992
  %sub106 = sub nsw i32 %106, 1, !dbg !4993
  %shl107 = shl i32 1, %sub106, !dbg !4994
  store i32 %shl107, i32* %add20, align 4, !dbg !4995
  %107 = load i32, i32* %qp, align 4, !dbg !4996
  %idxprom108 = sext i32 %107 to i64, !dbg !4997
  %arrayidx109 = getelementptr inbounds [76 x i8], [76 x i8]* @ff_hevc_hls_residual_coding.rem6, i64 0, i64 %idxprom108, !dbg !4997
  %108 = load i8, i8* %arrayidx109, align 1, !dbg !4997
  %idxprom110 = zext i8 %108 to i64, !dbg !4998
  %arrayidx111 = getelementptr inbounds [6 x i8], [6 x i8]* @ff_hevc_hls_residual_coding.level_scale, i64 0, i64 %idxprom110, !dbg !4998
  %109 = load i8, i8* %arrayidx111, align 1, !dbg !4998
  %conv112 = zext i8 %109 to i32, !dbg !4998
  %110 = load i32, i32* %qp, align 4, !dbg !4999
  %idxprom113 = sext i32 %110 to i64, !dbg !5000
  %arrayidx114 = getelementptr inbounds [76 x i8], [76 x i8]* @ff_hevc_hls_residual_coding.div6, i64 0, i64 %idxprom113, !dbg !5000
  %111 = load i8, i8* %arrayidx114, align 1, !dbg !5000
  %conv115 = zext i8 %111 to i32, !dbg !5001
  %shl116 = shl i32 %conv112, %conv115, !dbg !5002
  store i32 %shl116, i32* %scale, align 4, !dbg !5003
  store i32 16, i32* %scale_m, align 4, !dbg !5004
  store i8 16, i8* %dc_scale, align 1, !dbg !5005
  %112 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5006
  %ps117 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %112, i32 0, i32 15, !dbg !5008
  %sps118 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps117, i32 0, i32 4, !dbg !5009
  %113 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps118, align 8, !dbg !5009
  %scaling_list_enable_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %113, i32 0, i32 16, !dbg !5010
  %114 = load i8, i8* %scaling_list_enable_flag, align 2, !dbg !5010
  %conv119 = zext i8 %114 to i32, !dbg !5006
  %tobool120 = icmp ne i32 %conv119, 0, !dbg !5006
  br i1 %tobool120, label %land.lhs.true121, label %if.end161, !dbg !5011

land.lhs.true121:                                 ; preds = %if.end101
  %115 = load i32, i32* %transform_skip_flag, align 4, !dbg !5012
  %tobool122 = icmp ne i32 %115, 0, !dbg !5012
  br i1 %tobool122, label %land.lhs.true123, label %if.then126, !dbg !5014

land.lhs.true123:                                 ; preds = %land.lhs.true121
  %116 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !5015
  %cmp124 = icmp sgt i32 %116, 2, !dbg !5017
  br i1 %cmp124, label %if.end161, label %if.then126, !dbg !5018

if.then126:                                       ; preds = %land.lhs.true123, %land.lhs.true121
  call void @llvm.dbg.declare(metadata %struct.ScalingList** %sl, metadata !5019, metadata !2708), !dbg !5023
  %117 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5024
  %ps127 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %117, i32 0, i32 15, !dbg !5025
  %pps128 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps127, i32 0, i32 5, !dbg !5026
  %118 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps128, align 8, !dbg !5026
  %scaling_list_data_present_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %118, i32 0, i32 30, !dbg !5027
  %119 = load i8, i8* %scaling_list_data_present_flag, align 4, !dbg !5027
  %conv129 = zext i8 %119 to i32, !dbg !5024
  %tobool130 = icmp ne i32 %conv129, 0, !dbg !5024
  br i1 %tobool130, label %cond.true131, label %cond.false134, !dbg !5024

cond.true131:                                     ; preds = %if.then126
  %120 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5028
  %ps132 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %120, i32 0, i32 15, !dbg !5029
  %pps133 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps132, i32 0, i32 5, !dbg !5030
  %121 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps133, align 8, !dbg !5030
  %scaling_list = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %121, i32 0, i32 31, !dbg !5031
  br label %cond.end138, !dbg !5032

cond.false134:                                    ; preds = %if.then126
  %122 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5034
  %ps135 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %122, i32 0, i32 15, !dbg !5035
  %sps136 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps135, i32 0, i32 4, !dbg !5036
  %123 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps136, align 8, !dbg !5036
  %scaling_list137 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %123, i32 0, i32 17, !dbg !5037
  br label %cond.end138, !dbg !5038

cond.end138:                                      ; preds = %cond.false134, %cond.true131
  %cond139 = phi %struct.ScalingList* [ %scaling_list, %cond.true131 ], [ %scaling_list137, %cond.false134 ], !dbg !5040
  store %struct.ScalingList* %cond139, %struct.ScalingList** %sl, align 8, !dbg !5042
  call void @llvm.dbg.declare(metadata i32* %matrix_id, metadata !5043, metadata !2708), !dbg !5044
  %124 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !5045
  %cu140 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %124, i32 0, i32 20, !dbg !5046
  %pred_mode = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu140, i32 0, i32 2, !dbg !5047
  %125 = load i32, i32* %pred_mode, align 4, !dbg !5047
  %cmp141 = icmp ne i32 %125, 1, !dbg !5048
  %conv142 = zext i1 %cmp141 to i32, !dbg !5048
  store i32 %conv142, i32* %matrix_id, align 4, !dbg !5044
  %126 = load i32, i32* %matrix_id, align 4, !dbg !5049
  %mul143 = mul nsw i32 3, %126, !dbg !5050
  %127 = load i32, i32* %c_idx.addr, align 4, !dbg !5051
  %add144 = add nsw i32 %mul143, %127, !dbg !5052
  store i32 %add144, i32* %matrix_id, align 4, !dbg !5053
  %128 = load i32, i32* %matrix_id, align 4, !dbg !5054
  %idxprom145 = sext i32 %128 to i64, !dbg !5055
  %129 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !5056
  %sub146 = sub nsw i32 %129, 2, !dbg !5057
  %idxprom147 = sext i32 %sub146 to i64, !dbg !5055
  %130 = load %struct.ScalingList*, %struct.ScalingList** %sl, align 8, !dbg !5055
  %sl148 = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %130, i32 0, i32 0, !dbg !5058
  %arrayidx149 = getelementptr inbounds [4 x [6 x [64 x i8]]], [4 x [6 x [64 x i8]]]* %sl148, i64 0, i64 %idxprom147, !dbg !5055
  %arrayidx150 = getelementptr inbounds [6 x [64 x i8]], [6 x [64 x i8]]* %arrayidx149, i64 0, i64 %idxprom145, !dbg !5055
  %arraydecay151 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx150, i32 0, i32 0, !dbg !5055
  store i8* %arraydecay151, i8** %scale_matrix, align 8, !dbg !5059
  %131 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !5060
  %cmp152 = icmp sge i32 %131, 4, !dbg !5062
  br i1 %cmp152, label %if.then154, label %if.end160, !dbg !5063

if.then154:                                       ; preds = %cond.end138
  %132 = load i32, i32* %matrix_id, align 4, !dbg !5064
  %idxprom155 = sext i32 %132 to i64, !dbg !5065
  %133 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !5066
  %sub156 = sub nsw i32 %133, 4, !dbg !5067
  %idxprom157 = sext i32 %sub156 to i64, !dbg !5065
  %134 = load %struct.ScalingList*, %struct.ScalingList** %sl, align 8, !dbg !5065
  %sl_dc = getelementptr inbounds %struct.ScalingList, %struct.ScalingList* %134, i32 0, i32 1, !dbg !5068
  %arrayidx158 = getelementptr inbounds [2 x [6 x i8]], [2 x [6 x i8]]* %sl_dc, i64 0, i64 %idxprom157, !dbg !5065
  %arrayidx159 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx158, i64 0, i64 %idxprom155, !dbg !5065
  %135 = load i8, i8* %arrayidx159, align 1, !dbg !5065
  store i8 %135, i8* %dc_scale, align 1, !dbg !5069
  br label %if.end160, !dbg !5070

if.end160:                                        ; preds = %if.then154, %cond.end138
  br label %if.end161, !dbg !5071

if.end161:                                        ; preds = %if.end160, %land.lhs.true123, %if.end101
  br label %if.end163, !dbg !5072

if.else162:                                       ; preds = %cond.end25
  store i32 0, i32* %shift, align 4, !dbg !5073
  store i32 0, i32* %add20, align 4, !dbg !5075
  store i32 0, i32* %scale, align 4, !dbg !5076
  store i8 0, i8* %dc_scale, align 1, !dbg !5077
  br label %if.end163

if.end163:                                        ; preds = %if.else162, %if.end161
  %136 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !5078
  %cu164 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %136, i32 0, i32 20, !dbg !5080
  %pred_mode165 = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu164, i32 0, i32 2, !dbg !5081
  %137 = load i32, i32* %pred_mode165, align 4, !dbg !5081
  %cmp166 = icmp eq i32 %137, 0, !dbg !5082
  br i1 %cmp166, label %land.lhs.true168, label %if.end184, !dbg !5083

land.lhs.true168:                                 ; preds = %if.end163
  %138 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5084
  %ps169 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %138, i32 0, i32 15, !dbg !5086
  %sps170 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps169, i32 0, i32 4, !dbg !5087
  %139 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps170, align 8, !dbg !5087
  %explicit_rdpcm_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %139, i32 0, i32 41, !dbg !5088
  %140 = load i32, i32* %explicit_rdpcm_enabled_flag, align 4, !dbg !5088
  %tobool171 = icmp ne i32 %140, 0, !dbg !5084
  br i1 %tobool171, label %land.lhs.true172, label %if.end184, !dbg !5089

land.lhs.true172:                                 ; preds = %land.lhs.true168
  %141 = load i32, i32* %transform_skip_flag, align 4, !dbg !5090
  %tobool173 = icmp ne i32 %141, 0, !dbg !5090
  br i1 %tobool173, label %if.then178, label %lor.lhs.false, !dbg !5091

lor.lhs.false:                                    ; preds = %land.lhs.true172
  %142 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !5092
  %cu174 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %142, i32 0, i32 20, !dbg !5093
  %cu_transquant_bypass_flag175 = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu174, i32 0, i32 6, !dbg !5094
  %143 = load i8, i8* %cu_transquant_bypass_flag175, align 2, !dbg !5094
  %conv176 = zext i8 %143 to i32, !dbg !5092
  %tobool177 = icmp ne i32 %conv176, 0, !dbg !5092
  br i1 %tobool177, label %if.then178, label %if.end184, !dbg !5095

if.then178:                                       ; preds = %lor.lhs.false, %land.lhs.true172
  %144 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5096
  %145 = load i32, i32* %c_idx.addr, align 4, !dbg !5098
  %call179 = call i32 @explicit_rdpcm_flag_decode(%struct.HEVCContext* %144, i32 %145), !dbg !5099
  store i32 %call179, i32* %explicit_rdpcm_flag, align 4, !dbg !5100
  %146 = load i32, i32* %explicit_rdpcm_flag, align 4, !dbg !5101
  %tobool180 = icmp ne i32 %146, 0, !dbg !5101
  br i1 %tobool180, label %if.then181, label %if.end183, !dbg !5103

if.then181:                                       ; preds = %if.then178
  %147 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5104
  %148 = load i32, i32* %c_idx.addr, align 4, !dbg !5106
  %call182 = call i32 @explicit_rdpcm_dir_flag_decode(%struct.HEVCContext* %147, i32 %148), !dbg !5107
  store i32 %call182, i32* %explicit_rdpcm_dir_flag, align 4, !dbg !5108
  br label %if.end183, !dbg !5109

if.end183:                                        ; preds = %if.then181, %if.then178
  br label %if.end184, !dbg !5110

if.end184:                                        ; preds = %if.end183, %lor.lhs.false, %land.lhs.true168, %if.end163
  %149 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5111
  %150 = load i32, i32* %c_idx.addr, align 4, !dbg !5112
  %151 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !5113
  store %struct.HEVCContext* %149, %struct.HEVCContext** %s.addr.i, align 8, !dbg !5114
  store i32 %150, i32* %c_idx.addr.i, align 4, !dbg !5114
  store i32 %151, i32* %log2_size.addr.i, align 4, !dbg !5114
  store i32* %last_significant_coeff_x, i32** %last_scx_prefix.addr.i, align 8, !dbg !5114
  store i32* %last_significant_coeff_y, i32** %last_scy_prefix.addr.i, align 8, !dbg !5114
  store i32 0, i32* %i.i, align 4, !dbg !4678
  %152 = load i32, i32* %log2_size.addr.i, align 4, !dbg !5115
  %shl.i = shl i32 %152, 1, !dbg !5116
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !5117
  store i32 %sub.i, i32* %max.i, align 4, !dbg !4680
  %153 = load i32, i32* %c_idx.addr.i, align 4, !dbg !5118
  %tobool.i = icmp ne i32 %153, 0, !dbg !5118
  br i1 %tobool.i, label %if.else.i1148, label %if.then.i1147, !dbg !5120

if.then.i1147:                                    ; preds = %if.end184
  %154 = load i32, i32* %log2_size.addr.i, align 4, !dbg !5121
  %sub1.i = sub nsw i32 %154, 2, !dbg !5123
  %mul.i = mul nsw i32 3, %sub1.i, !dbg !5124
  %155 = load i32, i32* %log2_size.addr.i, align 4, !dbg !5125
  %sub2.i = sub nsw i32 %155, 1, !dbg !5126
  %shr.i = ashr i32 %sub2.i, 2, !dbg !5127
  %add.i = add nsw i32 %mul.i, %shr.i, !dbg !5128
  store i32 %add.i, i32* %ctx_offset.i, align 4, !dbg !5129
  %156 = load i32, i32* %log2_size.addr.i, align 4, !dbg !5130
  %add3.i = add nsw i32 %156, 1, !dbg !5131
  %shr4.i = ashr i32 %add3.i, 2, !dbg !5132
  store i32 %shr4.i, i32* %ctx_shift.i, align 4, !dbg !5133
  br label %if.end.i, !dbg !5134

if.else.i1148:                                    ; preds = %if.end184
  store i32 15, i32* %ctx_offset.i, align 4, !dbg !5135
  %157 = load i32, i32* %log2_size.addr.i, align 4, !dbg !5137
  %sub5.i = sub nsw i32 %157, 2, !dbg !5138
  store i32 %sub5.i, i32* %ctx_shift.i, align 4, !dbg !5139
  br label %if.end.i, !dbg !5114

if.end.i:                                         ; preds = %if.else.i1148, %if.then.i1147
  br label %while.cond.i, !dbg !5140

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %158 = load i32, i32* %i.i, align 4, !dbg !5141
  %159 = load i32, i32* %max.i, align 4, !dbg !5143
  %cmp.i1149 = icmp slt i32 %158, %159, !dbg !5144
  br i1 %cmp.i1149, label %land.rhs.i, label %land.end.i, !dbg !5145

land.rhs.i:                                       ; preds = %while.cond.i
  %160 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i, align 8, !dbg !5146
  %HEVClc.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %160, i32 0, i32 4, !dbg !5147
  %161 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i, align 8, !dbg !5147
  %cc.i = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %161, i32 0, i32 4, !dbg !5148
  %162 = load i32, i32* %i.i, align 4, !dbg !5149
  %163 = load i32, i32* %ctx_shift.i, align 4, !dbg !5150
  %shr6.i = ashr i32 %162, %163, !dbg !5151
  %add7.i = add nsw i32 52, %shr6.i, !dbg !5152
  %164 = load i32, i32* %ctx_offset.i, align 4, !dbg !5153
  %add8.i = add nsw i32 %add7.i, %164, !dbg !5154
  %idxprom.i = sext i32 %add8.i to i64, !dbg !5155
  %165 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i, align 8, !dbg !5155
  %HEVClc9.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %165, i32 0, i32 4, !dbg !5156
  %166 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc9.i, align 8, !dbg !5156
  %cabac_state.i = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %166, i32 0, i32 0, !dbg !5157
  %arrayidx.i = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state.i, i64 0, i64 %idxprom.i, !dbg !5155
  %call.i = call i32 @get_cabac(%struct.CABACContext* %cc.i, i8* %arrayidx.i) #5, !dbg !5158
  %tobool10.i = icmp ne i32 %call.i, 0, !dbg !5159
  br label %land.end.i, !dbg !5114

land.end.i:                                       ; preds = %land.rhs.i, %while.cond.i
  %167 = phi i1 [ false, %while.cond.i ], [ %tobool10.i, %land.rhs.i ], !dbg !5114
  br i1 %167, label %while.body.i, label %while.end.i, !dbg !5161

while.body.i:                                     ; preds = %land.end.i
  %168 = load i32, i32* %i.i, align 4, !dbg !5163
  %inc.i = add nsw i32 %168, 1, !dbg !5163
  store i32 %inc.i, i32* %i.i, align 4, !dbg !5163
  br label %while.cond.i, !dbg !5164, !llvm.loop !5166

while.end.i:                                      ; preds = %land.end.i
  %169 = load i32, i32* %i.i, align 4, !dbg !5168
  %170 = load i32*, i32** %last_scx_prefix.addr.i, align 8, !dbg !5169
  store i32 %169, i32* %170, align 4, !dbg !5170
  store i32 0, i32* %i.i, align 4, !dbg !5171
  br label %while.cond11.i, !dbg !5172

while.cond11.i:                                   ; preds = %while.body26.i, %while.end.i
  %171 = load i32, i32* %i.i, align 4, !dbg !5173
  %172 = load i32, i32* %max.i, align 4, !dbg !5174
  %cmp12.i = icmp slt i32 %171, %172, !dbg !5175
  br i1 %cmp12.i, label %land.rhs13.i, label %land.end25.i, !dbg !5176

land.rhs13.i:                                     ; preds = %while.cond11.i
  %173 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i, align 8, !dbg !5177
  %HEVClc14.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %173, i32 0, i32 4, !dbg !5178
  %174 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc14.i, align 8, !dbg !5178
  %cc15.i = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %174, i32 0, i32 4, !dbg !5179
  %175 = load i32, i32* %i.i, align 4, !dbg !5180
  %176 = load i32, i32* %ctx_shift.i, align 4, !dbg !5181
  %shr16.i = ashr i32 %175, %176, !dbg !5182
  %add17.i = add nsw i32 70, %shr16.i, !dbg !5183
  %177 = load i32, i32* %ctx_offset.i, align 4, !dbg !5184
  %add18.i = add nsw i32 %add17.i, %177, !dbg !5185
  %idxprom19.i = sext i32 %add18.i to i64, !dbg !5186
  %178 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i, align 8, !dbg !5186
  %HEVClc20.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %178, i32 0, i32 4, !dbg !5187
  %179 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc20.i, align 8, !dbg !5187
  %cabac_state21.i = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %179, i32 0, i32 0, !dbg !5188
  %arrayidx22.i = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state21.i, i64 0, i64 %idxprom19.i, !dbg !5186
  %call23.i = call i32 @get_cabac(%struct.CABACContext* %cc15.i, i8* %arrayidx22.i) #5, !dbg !5189
  %tobool24.i = icmp ne i32 %call23.i, 0, !dbg !5190
  br label %land.end25.i, !dbg !5114

land.end25.i:                                     ; preds = %land.rhs13.i, %while.cond11.i
  %180 = phi i1 [ false, %while.cond11.i ], [ %tobool24.i, %land.rhs13.i ], !dbg !5114
  br i1 %180, label %while.body26.i, label %last_significant_coeff_xy_prefix_decode.exit, !dbg !5191

while.body26.i:                                   ; preds = %land.end25.i
  %181 = load i32, i32* %i.i, align 4, !dbg !5192
  %inc27.i = add nsw i32 %181, 1, !dbg !5192
  store i32 %inc27.i, i32* %i.i, align 4, !dbg !5192
  br label %while.cond11.i, !dbg !5193, !llvm.loop !5194

last_significant_coeff_xy_prefix_decode.exit:     ; preds = %land.end25.i
  %182 = load i32, i32* %i.i, align 4, !dbg !5196
  %183 = load i32*, i32** %last_scy_prefix.addr.i, align 8, !dbg !5197
  store i32 %182, i32* %183, align 4, !dbg !5198
  %184 = load i32, i32* %last_significant_coeff_x, align 4, !dbg !5199
  %cmp185 = icmp sgt i32 %184, 3, !dbg !5200
  br i1 %cmp185, label %if.then187, label %if.end195, !dbg !5201

if.then187:                                       ; preds = %last_significant_coeff_xy_prefix_decode.exit
  call void @llvm.dbg.declare(metadata i32* %suffix, metadata !5202, metadata !2708), !dbg !5203
  %185 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5204
  %186 = load i32, i32* %last_significant_coeff_x, align 4, !dbg !5205
  store %struct.HEVCContext* %185, %struct.HEVCContext** %s.addr.i1150, align 8, !dbg !5206
  store i32 %186, i32* %last_significant_coeff_prefix.addr.i, align 4, !dbg !5206
  %187 = load i32, i32* %last_significant_coeff_prefix.addr.i, align 4, !dbg !5207
  %shr.i1152 = ashr i32 %187, 1, !dbg !5208
  %sub.i1153 = sub nsw i32 %shr.i1152, 1, !dbg !5209
  store i32 %sub.i1153, i32* %length.i, align 4, !dbg !4661
  %188 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1150, align 8, !dbg !5210
  %HEVClc.i1154 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %188, i32 0, i32 4, !dbg !5211
  %189 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i1154, align 8, !dbg !5211
  %cc.i1155 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %189, i32 0, i32 4, !dbg !5212
  store %struct.CABACContext* %cc.i1155, %struct.CABACContext** %c.addr.i.i, align 8, !dbg !5213
  %190 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i.i, align 8, !dbg !5214
  %191 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %190, i64 0, i64 24, i64 32, i64 4) #5, !dbg !5215, !srcloc !3250
  %asmresult.i.i = extractvalue { i32, i64 } %191, 0, !dbg !5215
  %asmresult2.i.i = extractvalue { i32, i64 } %191, 1, !dbg !5215
  store i32 %asmresult.i.i, i32* %res.i.i, align 4, !dbg !5215
  store i64 %asmresult2.i.i, i64* %tmp.i.i, align 8, !dbg !5215
  %192 = load i32, i32* %res.i.i, align 4, !dbg !5216
  store i32 %192, i32* %value.i, align 4, !dbg !4662
  store i32 1, i32* %i.i1151, align 4, !dbg !5217
  br label %for.cond.i, !dbg !5218

for.cond.i:                                       ; preds = %for.body.i, %if.then187
  %193 = load i32, i32* %i.i1151, align 4, !dbg !5219
  %194 = load i32, i32* %length.i, align 4, !dbg !5221
  %cmp.i1156 = icmp slt i32 %193, %194, !dbg !5222
  br i1 %cmp.i1156, label %for.body.i, label %last_significant_coeff_suffix_decode.exit, !dbg !5223

for.body.i:                                       ; preds = %for.cond.i
  %195 = load i32, i32* %value.i, align 4, !dbg !5224
  %shl.i1157 = shl i32 %195, 1, !dbg !5225
  %196 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1150, align 8, !dbg !5226
  %HEVClc1.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %196, i32 0, i32 4, !dbg !5227
  %197 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1.i, align 8, !dbg !5227
  %cc2.i = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %197, i32 0, i32 4, !dbg !5228
  store %struct.CABACContext* %cc2.i, %struct.CABACContext** %c.addr.i4.i, align 8, !dbg !5229
  %198 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i4.i, align 8, !dbg !5230
  %199 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %198, i64 0, i64 24, i64 32, i64 4) #5, !dbg !5231, !srcloc !3250
  %asmresult.i7.i = extractvalue { i32, i64 } %199, 0, !dbg !5231
  %asmresult2.i8.i = extractvalue { i32, i64 } %199, 1, !dbg !5231
  store i32 %asmresult.i7.i, i32* %res.i6.i, align 4, !dbg !5231
  store i64 %asmresult2.i8.i, i64* %tmp.i5.i, align 8, !dbg !5231
  %200 = load i32, i32* %res.i6.i, align 4, !dbg !5232
  %or.i = or i32 %shl.i1157, %200, !dbg !5233
  store i32 %or.i, i32* %value.i, align 4, !dbg !5234
  %201 = load i32, i32* %i.i1151, align 4, !dbg !5235
  %inc.i1158 = add nsw i32 %201, 1, !dbg !5235
  store i32 %inc.i1158, i32* %i.i1151, align 4, !dbg !5235
  br label %for.cond.i, !dbg !5237, !llvm.loop !5238

last_significant_coeff_suffix_decode.exit:        ; preds = %for.cond.i
  %202 = load i32, i32* %value.i, align 4, !dbg !5240
  store i32 %202, i32* %suffix, align 4, !dbg !5203
  %203 = load i32, i32* %last_significant_coeff_x, align 4, !dbg !5241
  %shr189 = ashr i32 %203, 1, !dbg !5242
  %sub190 = sub nsw i32 %shr189, 1, !dbg !5243
  %shl191 = shl i32 1, %sub190, !dbg !5244
  %204 = load i32, i32* %last_significant_coeff_x, align 4, !dbg !5245
  %and = and i32 %204, 1, !dbg !5246
  %add192 = add nsw i32 2, %and, !dbg !5247
  %mul193 = mul nsw i32 %shl191, %add192, !dbg !5248
  %205 = load i32, i32* %suffix, align 4, !dbg !5249
  %add194 = add nsw i32 %mul193, %205, !dbg !5250
  store i32 %add194, i32* %last_significant_coeff_x, align 4, !dbg !5251
  br label %if.end195, !dbg !5252

if.end195:                                        ; preds = %last_significant_coeff_suffix_decode.exit, %last_significant_coeff_xy_prefix_decode.exit
  %206 = load i32, i32* %last_significant_coeff_y, align 4, !dbg !5253
  %cmp196 = icmp sgt i32 %206, 3, !dbg !5254
  br i1 %cmp196, label %if.then198, label %if.end208, !dbg !5255

if.then198:                                       ; preds = %if.end195
  call void @llvm.dbg.declare(metadata i32* %suffix199, metadata !5256, metadata !2708), !dbg !5257
  %207 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5258
  %208 = load i32, i32* %last_significant_coeff_y, align 4, !dbg !5259
  store %struct.HEVCContext* %207, %struct.HEVCContext** %s.addr.i1165, align 8, !dbg !5260
  store i32 %208, i32* %last_significant_coeff_prefix.addr.i1166, align 4, !dbg !5260
  %209 = load i32, i32* %last_significant_coeff_prefix.addr.i1166, align 4, !dbg !5261
  %shr.i1170 = ashr i32 %209, 1, !dbg !5262
  %sub.i1171 = sub nsw i32 %shr.i1170, 1, !dbg !5263
  store i32 %sub.i1171, i32* %length.i1168, align 4, !dbg !4644
  %210 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1165, align 8, !dbg !5264
  %HEVClc.i1172 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %210, i32 0, i32 4, !dbg !5265
  %211 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i1172, align 8, !dbg !5265
  %cc.i1173 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %211, i32 0, i32 4, !dbg !5266
  store %struct.CABACContext* %cc.i1173, %struct.CABACContext** %c.addr.i.i1162, align 8, !dbg !5267
  %212 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i.i1162, align 8, !dbg !5268
  %213 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %212, i64 0, i64 24, i64 32, i64 4) #5, !dbg !5269, !srcloc !3250
  %asmresult.i.i1174 = extractvalue { i32, i64 } %213, 0, !dbg !5269
  %asmresult2.i.i1175 = extractvalue { i32, i64 } %213, 1, !dbg !5269
  store i32 %asmresult.i.i1174, i32* %res.i.i1164, align 4, !dbg !5269
  store i64 %asmresult2.i.i1175, i64* %tmp.i.i1163, align 8, !dbg !5269
  %214 = load i32, i32* %res.i.i1164, align 4, !dbg !5270
  store i32 %214, i32* %value.i1169, align 4, !dbg !4646
  store i32 1, i32* %i.i1167, align 4, !dbg !5271
  br label %for.cond.i1177, !dbg !5272

for.cond.i1177:                                   ; preds = %for.body.i1184, %if.then198
  %215 = load i32, i32* %i.i1167, align 4, !dbg !5273
  %216 = load i32, i32* %length.i1168, align 4, !dbg !5274
  %cmp.i1176 = icmp slt i32 %215, %216, !dbg !5275
  br i1 %cmp.i1176, label %for.body.i1184, label %last_significant_coeff_suffix_decode.exit1186, !dbg !5276

for.body.i1184:                                   ; preds = %for.cond.i1177
  %217 = load i32, i32* %value.i1169, align 4, !dbg !5277
  %shl.i1178 = shl i32 %217, 1, !dbg !5278
  %218 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1165, align 8, !dbg !5279
  %HEVClc1.i1179 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %218, i32 0, i32 4, !dbg !5280
  %219 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1.i1179, align 8, !dbg !5280
  %cc2.i1180 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %219, i32 0, i32 4, !dbg !5281
  store %struct.CABACContext* %cc2.i1180, %struct.CABACContext** %c.addr.i4.i1159, align 8, !dbg !5282
  %220 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i4.i1159, align 8, !dbg !5283
  %221 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %220, i64 0, i64 24, i64 32, i64 4) #5, !dbg !5284, !srcloc !3250
  %asmresult.i7.i1181 = extractvalue { i32, i64 } %221, 0, !dbg !5284
  %asmresult2.i8.i1182 = extractvalue { i32, i64 } %221, 1, !dbg !5284
  store i32 %asmresult.i7.i1181, i32* %res.i6.i1161, align 4, !dbg !5284
  store i64 %asmresult2.i8.i1182, i64* %tmp.i5.i1160, align 8, !dbg !5284
  %222 = load i32, i32* %res.i6.i1161, align 4, !dbg !5285
  %or.i1183 = or i32 %shl.i1178, %222, !dbg !5286
  store i32 %or.i1183, i32* %value.i1169, align 4, !dbg !5287
  %223 = load i32, i32* %i.i1167, align 4, !dbg !5288
  %inc.i1185 = add nsw i32 %223, 1, !dbg !5288
  store i32 %inc.i1185, i32* %i.i1167, align 4, !dbg !5288
  br label %for.cond.i1177, !dbg !5289, !llvm.loop !5238

last_significant_coeff_suffix_decode.exit1186:    ; preds = %for.cond.i1177
  %224 = load i32, i32* %value.i1169, align 4, !dbg !5290
  store i32 %224, i32* %suffix199, align 4, !dbg !5257
  %225 = load i32, i32* %last_significant_coeff_y, align 4, !dbg !5291
  %shr201 = ashr i32 %225, 1, !dbg !5292
  %sub202 = sub nsw i32 %shr201, 1, !dbg !5293
  %shl203 = shl i32 1, %sub202, !dbg !5294
  %226 = load i32, i32* %last_significant_coeff_y, align 4, !dbg !5295
  %and204 = and i32 %226, 1, !dbg !5296
  %add205 = add nsw i32 2, %and204, !dbg !5297
  %mul206 = mul nsw i32 %shl203, %add205, !dbg !5298
  %227 = load i32, i32* %suffix199, align 4, !dbg !5299
  %add207 = add nsw i32 %mul206, %227, !dbg !5300
  store i32 %add207, i32* %last_significant_coeff_y, align 4, !dbg !5301
  br label %if.end208, !dbg !5302

if.end208:                                        ; preds = %last_significant_coeff_suffix_decode.exit1186, %if.end195
  %228 = load i32, i32* %scan_idx.addr, align 4, !dbg !5303
  %cmp209 = icmp eq i32 %228, 2, !dbg !5305
  br i1 %cmp209, label %if.then211, label %if.end212, !dbg !5306

if.then211:                                       ; preds = %if.end208
  br label %do.body, !dbg !5307, !llvm.loop !5308

do.body:                                          ; preds = %if.then211
  call void @llvm.dbg.declare(metadata i32* %SWAP_tmp, metadata !5309, metadata !2708), !dbg !5311
  %229 = load i32, i32* %last_significant_coeff_y, align 4, !dbg !5312
  store i32 %229, i32* %SWAP_tmp, align 4, !dbg !5314
  %230 = load i32, i32* %last_significant_coeff_x, align 4, !dbg !5315
  store i32 %230, i32* %last_significant_coeff_y, align 4, !dbg !5316
  %231 = load i32, i32* %SWAP_tmp, align 4, !dbg !5317
  store i32 %231, i32* %last_significant_coeff_x, align 4, !dbg !5318
  br label %do.end, !dbg !5319

do.end:                                           ; preds = %do.body
  br label %if.end212, !dbg !5320

if.end212:                                        ; preds = %do.end, %if.end208
  %232 = load i32, i32* %last_significant_coeff_x, align 4, !dbg !5322
  %shr213 = ashr i32 %232, 2, !dbg !5323
  store i32 %shr213, i32* %x_cg_last_sig, align 4, !dbg !5324
  %233 = load i32, i32* %last_significant_coeff_y, align 4, !dbg !5325
  %shr214 = ashr i32 %233, 2, !dbg !5326
  store i32 %shr214, i32* %y_cg_last_sig, align 4, !dbg !5327
  %234 = load i32, i32* %scan_idx.addr, align 4, !dbg !5328
  switch i32 %234, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb258
  ], !dbg !5329

sw.bb:                                            ; preds = %if.end212
  call void @llvm.dbg.declare(metadata i32* %last_x_c, metadata !5330, metadata !2708), !dbg !5333
  %235 = load i32, i32* %last_significant_coeff_x, align 4, !dbg !5334
  %and215 = and i32 %235, 3, !dbg !5335
  store i32 %and215, i32* %last_x_c, align 4, !dbg !5333
  call void @llvm.dbg.declare(metadata i32* %last_y_c, metadata !5336, metadata !2708), !dbg !5337
  %236 = load i32, i32* %last_significant_coeff_y, align 4, !dbg !5338
  %and216 = and i32 %236, 3, !dbg !5339
  store i32 %and216, i32* %last_y_c, align 4, !dbg !5337
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ff_hevc_diag_scan4x4_x, i32 0, i32 0), i8** %scan_x_off, align 8, !dbg !5340
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ff_hevc_diag_scan4x4_y, i32 0, i32 0), i8** %scan_y_off, align 8, !dbg !5341
  %237 = load i32, i32* %last_x_c, align 4, !dbg !5342
  %idxprom217 = sext i32 %237 to i64, !dbg !5343
  %238 = load i32, i32* %last_y_c, align 4, !dbg !5344
  %idxprom218 = sext i32 %238 to i64, !dbg !5343
  %arrayidx219 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* @diag_scan4x4_inv, i64 0, i64 %idxprom218, !dbg !5343
  %arrayidx220 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx219, i64 0, i64 %idxprom217, !dbg !5343
  %239 = load i8, i8* %arrayidx220, align 1, !dbg !5343
  %conv221 = zext i8 %239 to i32, !dbg !5343
  store i32 %conv221, i32* %num_coeff, align 4, !dbg !5345
  %240 = load i32, i32* %trafo_size, align 4, !dbg !5346
  %cmp222 = icmp eq i32 %240, 4, !dbg !5348
  br i1 %cmp222, label %if.then224, label %if.else225, !dbg !5349

if.then224:                                       ; preds = %sw.bb
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @scan_1x1, i32 0, i32 0), i8** %scan_x_cg, align 8, !dbg !5350
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @scan_1x1, i32 0, i32 0), i8** %scan_y_cg, align 8, !dbg !5352
  br label %if.end257, !dbg !5353

if.else225:                                       ; preds = %sw.bb
  %241 = load i32, i32* %trafo_size, align 4, !dbg !5354
  %cmp226 = icmp eq i32 %241, 8, !dbg !5357
  br i1 %cmp226, label %if.then228, label %if.else236, !dbg !5354

if.then228:                                       ; preds = %if.else225
  %242 = load i32, i32* %x_cg_last_sig, align 4, !dbg !5358
  %idxprom229 = sext i32 %242 to i64, !dbg !5360
  %243 = load i32, i32* %y_cg_last_sig, align 4, !dbg !5361
  %idxprom230 = sext i32 %243 to i64, !dbg !5360
  %arrayidx231 = getelementptr inbounds [2 x [2 x i8]], [2 x [2 x i8]]* @diag_scan2x2_inv, i64 0, i64 %idxprom230, !dbg !5360
  %arrayidx232 = getelementptr inbounds [2 x i8], [2 x i8]* %arrayidx231, i64 0, i64 %idxprom229, !dbg !5360
  %244 = load i8, i8* %arrayidx232, align 1, !dbg !5360
  %conv233 = zext i8 %244 to i32, !dbg !5360
  %shl234 = shl i32 %conv233, 4, !dbg !5362
  %245 = load i32, i32* %num_coeff, align 4, !dbg !5363
  %add235 = add nsw i32 %245, %shl234, !dbg !5363
  store i32 %add235, i32* %num_coeff, align 4, !dbg !5363
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @diag_scan2x2_x, i32 0, i32 0), i8** %scan_x_cg, align 8, !dbg !5364
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @diag_scan2x2_y, i32 0, i32 0), i8** %scan_y_cg, align 8, !dbg !5365
  br label %if.end256, !dbg !5366

if.else236:                                       ; preds = %if.else225
  %246 = load i32, i32* %trafo_size, align 4, !dbg !5367
  %cmp237 = icmp eq i32 %246, 16, !dbg !5370
  br i1 %cmp237, label %if.then239, label %if.else247, !dbg !5367

if.then239:                                       ; preds = %if.else236
  %247 = load i32, i32* %x_cg_last_sig, align 4, !dbg !5371
  %idxprom240 = sext i32 %247 to i64, !dbg !5373
  %248 = load i32, i32* %y_cg_last_sig, align 4, !dbg !5374
  %idxprom241 = sext i32 %248 to i64, !dbg !5373
  %arrayidx242 = getelementptr inbounds [4 x [4 x i8]], [4 x [4 x i8]]* @diag_scan4x4_inv, i64 0, i64 %idxprom241, !dbg !5373
  %arrayidx243 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx242, i64 0, i64 %idxprom240, !dbg !5373
  %249 = load i8, i8* %arrayidx243, align 1, !dbg !5373
  %conv244 = zext i8 %249 to i32, !dbg !5373
  %shl245 = shl i32 %conv244, 4, !dbg !5375
  %250 = load i32, i32* %num_coeff, align 4, !dbg !5376
  %add246 = add nsw i32 %250, %shl245, !dbg !5376
  store i32 %add246, i32* %num_coeff, align 4, !dbg !5376
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ff_hevc_diag_scan4x4_x, i32 0, i32 0), i8** %scan_x_cg, align 8, !dbg !5377
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ff_hevc_diag_scan4x4_y, i32 0, i32 0), i8** %scan_y_cg, align 8, !dbg !5378
  br label %if.end255, !dbg !5379

if.else247:                                       ; preds = %if.else236
  %251 = load i32, i32* %x_cg_last_sig, align 4, !dbg !5380
  %idxprom248 = sext i32 %251 to i64, !dbg !5382
  %252 = load i32, i32* %y_cg_last_sig, align 4, !dbg !5383
  %idxprom249 = sext i32 %252 to i64, !dbg !5382
  %arrayidx250 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @diag_scan8x8_inv, i64 0, i64 %idxprom249, !dbg !5382
  %arrayidx251 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx250, i64 0, i64 %idxprom248, !dbg !5382
  %253 = load i8, i8* %arrayidx251, align 1, !dbg !5382
  %conv252 = zext i8 %253 to i32, !dbg !5382
  %shl253 = shl i32 %conv252, 4, !dbg !5384
  %254 = load i32, i32* %num_coeff, align 4, !dbg !5385
  %add254 = add nsw i32 %254, %shl253, !dbg !5385
  store i32 %add254, i32* %num_coeff, align 4, !dbg !5385
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @ff_hevc_diag_scan8x8_x, i32 0, i32 0), i8** %scan_x_cg, align 8, !dbg !5386
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @ff_hevc_diag_scan8x8_y, i32 0, i32 0), i8** %scan_y_cg, align 8, !dbg !5387
  br label %if.end255

if.end255:                                        ; preds = %if.else247, %if.then239
  br label %if.end256

if.end256:                                        ; preds = %if.end255, %if.then228
  br label %if.end257

if.end257:                                        ; preds = %if.end256, %if.then224
  br label %sw.epilog, !dbg !5388

sw.bb258:                                         ; preds = %if.end212
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @horiz_scan2x2_x, i32 0, i32 0), i8** %scan_x_cg, align 8, !dbg !5389
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @horiz_scan2x2_y, i32 0, i32 0), i8** %scan_y_cg, align 8, !dbg !5390
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @horiz_scan4x4_x, i32 0, i32 0), i8** %scan_x_off, align 8, !dbg !5391
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @horiz_scan4x4_y, i32 0, i32 0), i8** %scan_y_off, align 8, !dbg !5392
  %255 = load i32, i32* %last_significant_coeff_x, align 4, !dbg !5393
  %idxprom259 = sext i32 %255 to i64, !dbg !5394
  %256 = load i32, i32* %last_significant_coeff_y, align 4, !dbg !5395
  %idxprom260 = sext i32 %256 to i64, !dbg !5394
  %arrayidx261 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @horiz_scan8x8_inv, i64 0, i64 %idxprom260, !dbg !5394
  %arrayidx262 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx261, i64 0, i64 %idxprom259, !dbg !5394
  %257 = load i8, i8* %arrayidx262, align 1, !dbg !5394
  %conv263 = zext i8 %257 to i32, !dbg !5394
  store i32 %conv263, i32* %num_coeff, align 4, !dbg !5396
  br label %sw.epilog, !dbg !5397

sw.default:                                       ; preds = %if.end212
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @horiz_scan2x2_y, i32 0, i32 0), i8** %scan_x_cg, align 8, !dbg !5398
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @horiz_scan2x2_x, i32 0, i32 0), i8** %scan_y_cg, align 8, !dbg !5399
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @horiz_scan4x4_y, i32 0, i32 0), i8** %scan_x_off, align 8, !dbg !5400
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @horiz_scan4x4_x, i32 0, i32 0), i8** %scan_y_off, align 8, !dbg !5401
  %258 = load i32, i32* %last_significant_coeff_y, align 4, !dbg !5402
  %idxprom264 = sext i32 %258 to i64, !dbg !5403
  %259 = load i32, i32* %last_significant_coeff_x, align 4, !dbg !5404
  %idxprom265 = sext i32 %259 to i64, !dbg !5403
  %arrayidx266 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* @horiz_scan8x8_inv, i64 0, i64 %idxprom265, !dbg !5403
  %arrayidx267 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx266, i64 0, i64 %idxprom264, !dbg !5403
  %260 = load i8, i8* %arrayidx267, align 1, !dbg !5403
  %conv268 = zext i8 %260 to i32, !dbg !5403
  store i32 %conv268, i32* %num_coeff, align 4, !dbg !5405
  br label %sw.epilog, !dbg !5406

sw.epilog:                                        ; preds = %sw.default, %sw.bb258, %if.end257
  %261 = load i32, i32* %num_coeff, align 4, !dbg !5407
  %inc = add nsw i32 %261, 1, !dbg !5407
  store i32 %inc, i32* %num_coeff, align 4, !dbg !5407
  %262 = load i32, i32* %num_coeff, align 4, !dbg !5408
  %sub269 = sub nsw i32 %262, 1, !dbg !5409
  %shr270 = ashr i32 %sub269, 4, !dbg !5410
  store i32 %shr270, i32* %num_last_subset, align 4, !dbg !5411
  %263 = load i32, i32* %num_last_subset, align 4, !dbg !5412
  store i32 %263, i32* %i, align 4, !dbg !5413
  br label %for.cond, !dbg !5414

for.cond:                                         ; preds = %for.inc942, %sw.epilog
  %264 = load i32, i32* %i, align 4, !dbg !5415
  %cmp271 = icmp sge i32 %264, 0, !dbg !5417
  br i1 %cmp271, label %for.body, label %for.end944, !dbg !5418

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5419, metadata !2708), !dbg !5420
  call void @llvm.dbg.declare(metadata i32* %m, metadata !5421, metadata !2708), !dbg !5422
  call void @llvm.dbg.declare(metadata i32* %x_cg, metadata !5423, metadata !2708), !dbg !5424
  call void @llvm.dbg.declare(metadata i32* %y_cg, metadata !5425, metadata !2708), !dbg !5426
  call void @llvm.dbg.declare(metadata i32* %x_c, metadata !5427, metadata !2708), !dbg !5428
  call void @llvm.dbg.declare(metadata i32* %y_c, metadata !5429, metadata !2708), !dbg !5430
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5431, metadata !2708), !dbg !5432
  call void @llvm.dbg.declare(metadata i32* %implicit_non_zero_coeff, metadata !5433, metadata !2708), !dbg !5434
  store i32 0, i32* %implicit_non_zero_coeff, align 4, !dbg !5434
  call void @llvm.dbg.declare(metadata i64* %trans_coeff_level, metadata !5435, metadata !2708), !dbg !5436
  call void @llvm.dbg.declare(metadata i32* %prev_sig, metadata !5437, metadata !2708), !dbg !5438
  store i32 0, i32* %prev_sig, align 4, !dbg !5438
  call void @llvm.dbg.declare(metadata i32* %offset273, metadata !5439, metadata !2708), !dbg !5440
  %265 = load i32, i32* %i, align 4, !dbg !5441
  %shl274 = shl i32 %265, 4, !dbg !5442
  store i32 %shl274, i32* %offset273, align 4, !dbg !5440
  call void @llvm.dbg.declare(metadata i32* %rice_init, metadata !5443, metadata !2708), !dbg !5444
  store i32 0, i32* %rice_init, align 4, !dbg !5444
  call void @llvm.dbg.declare(metadata [16 x i8]* %significant_coeff_flag_idx, metadata !5445, metadata !2708), !dbg !5447
  call void @llvm.dbg.declare(metadata i8* %nb_significant_coeff_flag, metadata !5448, metadata !2708), !dbg !5449
  store i8 0, i8* %nb_significant_coeff_flag, align 1, !dbg !5449
  %266 = load i32, i32* %i, align 4, !dbg !5450
  %idxprom275 = sext i32 %266 to i64, !dbg !5451
  %267 = load i8*, i8** %scan_x_cg, align 8, !dbg !5451
  %arrayidx276 = getelementptr inbounds i8, i8* %267, i64 %idxprom275, !dbg !5451
  %268 = load i8, i8* %arrayidx276, align 1, !dbg !5451
  %conv277 = zext i8 %268 to i32, !dbg !5451
  store i32 %conv277, i32* %x_cg, align 4, !dbg !5452
  %269 = load i32, i32* %i, align 4, !dbg !5453
  %idxprom278 = sext i32 %269 to i64, !dbg !5454
  %270 = load i8*, i8** %scan_y_cg, align 8, !dbg !5454
  %arrayidx279 = getelementptr inbounds i8, i8* %270, i64 %idxprom278, !dbg !5454
  %271 = load i8, i8* %arrayidx279, align 1, !dbg !5454
  %conv280 = zext i8 %271 to i32, !dbg !5454
  store i32 %conv280, i32* %y_cg, align 4, !dbg !5455
  %272 = load i32, i32* %i, align 4, !dbg !5456
  %273 = load i32, i32* %num_last_subset, align 4, !dbg !5457
  %cmp281 = icmp slt i32 %272, %273, !dbg !5458
  br i1 %cmp281, label %land.lhs.true283, label %if.else321, !dbg !5459

land.lhs.true283:                                 ; preds = %for.body
  %274 = load i32, i32* %i, align 4, !dbg !5460
  %cmp284 = icmp sgt i32 %274, 0, !dbg !5462
  br i1 %cmp284, label %if.then286, label %if.else321, !dbg !5463

if.then286:                                       ; preds = %land.lhs.true283
  call void @llvm.dbg.declare(metadata i32* %ctx_cg, metadata !5464, metadata !2708), !dbg !5465
  store i32 0, i32* %ctx_cg, align 4, !dbg !5465
  %275 = load i32, i32* %x_cg, align 4, !dbg !5466
  %276 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !5468
  %sub287 = sub nsw i32 %276, 2, !dbg !5469
  %shl288 = shl i32 1, %sub287, !dbg !5470
  %sub289 = sub nsw i32 %shl288, 1, !dbg !5471
  %cmp290 = icmp slt i32 %275, %sub289, !dbg !5472
  br i1 %cmp290, label %if.then292, label %if.end300, !dbg !5473

if.then292:                                       ; preds = %if.then286
  %277 = load i32, i32* %y_cg, align 4, !dbg !5474
  %idxprom293 = sext i32 %277 to i64, !dbg !5475
  %278 = load i32, i32* %x_cg, align 4, !dbg !5476
  %add294 = add nsw i32 %278, 1, !dbg !5477
  %idxprom295 = sext i32 %add294 to i64, !dbg !5475
  %arrayidx296 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %significant_coeff_group_flag, i64 0, i64 %idxprom295, !dbg !5475
  %arrayidx297 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx296, i64 0, i64 %idxprom293, !dbg !5475
  %279 = load i8, i8* %arrayidx297, align 1, !dbg !5475
  %conv298 = zext i8 %279 to i32, !dbg !5475
  %280 = load i32, i32* %ctx_cg, align 4, !dbg !5478
  %add299 = add nsw i32 %280, %conv298, !dbg !5478
  store i32 %add299, i32* %ctx_cg, align 4, !dbg !5478
  br label %if.end300, !dbg !5479

if.end300:                                        ; preds = %if.then292, %if.then286
  %281 = load i32, i32* %y_cg, align 4, !dbg !5480
  %282 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !5482
  %sub301 = sub nsw i32 %282, 2, !dbg !5483
  %shl302 = shl i32 1, %sub301, !dbg !5484
  %sub303 = sub nsw i32 %shl302, 1, !dbg !5485
  %cmp304 = icmp slt i32 %281, %sub303, !dbg !5486
  br i1 %cmp304, label %if.then306, label %if.end314, !dbg !5487

if.then306:                                       ; preds = %if.end300
  %283 = load i32, i32* %y_cg, align 4, !dbg !5488
  %add307 = add nsw i32 %283, 1, !dbg !5489
  %idxprom308 = sext i32 %add307 to i64, !dbg !5490
  %284 = load i32, i32* %x_cg, align 4, !dbg !5491
  %idxprom309 = sext i32 %284 to i64, !dbg !5490
  %arrayidx310 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %significant_coeff_group_flag, i64 0, i64 %idxprom309, !dbg !5490
  %arrayidx311 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx310, i64 0, i64 %idxprom308, !dbg !5490
  %285 = load i8, i8* %arrayidx311, align 1, !dbg !5490
  %conv312 = zext i8 %285 to i32, !dbg !5490
  %286 = load i32, i32* %ctx_cg, align 4, !dbg !5492
  %add313 = add nsw i32 %286, %conv312, !dbg !5492
  store i32 %add313, i32* %ctx_cg, align 4, !dbg !5492
  br label %if.end314, !dbg !5493

if.end314:                                        ; preds = %if.then306, %if.end300
  %287 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5494
  %288 = load i32, i32* %c_idx.addr, align 4, !dbg !5495
  %289 = load i32, i32* %ctx_cg, align 4, !dbg !5496
  store %struct.HEVCContext* %287, %struct.HEVCContext** %s.addr.i1187, align 8, !dbg !5497
  store i32 %288, i32* %c_idx.addr.i1188, align 4, !dbg !5497
  store i32 %289, i32* %ctx_cg.addr.i, align 4, !dbg !5497
  %290 = load i32, i32* %ctx_cg.addr.i, align 4, !dbg !5498
  %cmp.i1190 = icmp sgt i32 %290, 1, !dbg !5499
  br i1 %cmp.i1190, label %cond.true.i, label %cond.false.i, !dbg !5500

cond.true.i:                                      ; preds = %if.end314
  br label %significant_coeff_group_flag_decode.exit, !dbg !5501

cond.false.i:                                     ; preds = %if.end314
  %291 = load i32, i32* %ctx_cg.addr.i, align 4, !dbg !5503
  br label %significant_coeff_group_flag_decode.exit, !dbg !5505

significant_coeff_group_flag_decode.exit:         ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i32 [ 1, %cond.true.i ], [ %291, %cond.false.i ], !dbg !5506
  %292 = load i32, i32* %c_idx.addr.i1188, align 4, !dbg !5508
  %cmp1.i1191 = icmp sgt i32 %292, 0, !dbg !5509
  %cond2.i = select i1 %cmp1.i1191, i32 2, i32 0, !dbg !5508
  %add.i1192 = add nsw i32 %cond.i, %cond2.i, !dbg !5510
  store i32 %add.i1192, i32* %inc.i1189, align 4, !dbg !5511
  %293 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1187, align 8, !dbg !5512
  %HEVClc.i1193 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %293, i32 0, i32 4, !dbg !5513
  %294 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i1193, align 8, !dbg !5513
  %cc.i1194 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %294, i32 0, i32 4, !dbg !5514
  %295 = load i32, i32* %inc.i1189, align 4, !dbg !5515
  %add3.i1195 = add nsw i32 88, %295, !dbg !5516
  %idxprom.i1196 = sext i32 %add3.i1195 to i64, !dbg !5517
  %296 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1187, align 8, !dbg !5517
  %HEVClc4.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %296, i32 0, i32 4, !dbg !5518
  %297 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc4.i, align 8, !dbg !5518
  %cabac_state.i1197 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %297, i32 0, i32 0, !dbg !5519
  %arrayidx.i1198 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state.i1197, i64 0, i64 %idxprom.i1196, !dbg !5517
  %call.i1199 = call i32 @get_cabac(%struct.CABACContext* %cc.i1194, i8* %arrayidx.i1198) #5, !dbg !5520
  %conv316 = trunc i32 %call.i1199 to i8, !dbg !5497
  %298 = load i32, i32* %y_cg, align 4, !dbg !5521
  %idxprom317 = sext i32 %298 to i64, !dbg !5522
  %299 = load i32, i32* %x_cg, align 4, !dbg !5523
  %idxprom318 = sext i32 %299 to i64, !dbg !5522
  %arrayidx319 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %significant_coeff_group_flag, i64 0, i64 %idxprom318, !dbg !5522
  %arrayidx320 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx319, i64 0, i64 %idxprom317, !dbg !5522
  store i8 %conv316, i8* %arrayidx320, align 1, !dbg !5524
  store i32 1, i32* %implicit_non_zero_coeff, align 4, !dbg !5525
  br label %if.end336, !dbg !5526

if.else321:                                       ; preds = %land.lhs.true283, %for.body
  %300 = load i32, i32* %x_cg, align 4, !dbg !5527
  %301 = load i32, i32* %x_cg_last_sig, align 4, !dbg !5529
  %cmp322 = icmp eq i32 %300, %301, !dbg !5530
  br i1 %cmp322, label %land.lhs.true324, label %lor.rhs, !dbg !5531

land.lhs.true324:                                 ; preds = %if.else321
  %302 = load i32, i32* %y_cg, align 4, !dbg !5532
  %303 = load i32, i32* %y_cg_last_sig, align 4, !dbg !5534
  %cmp325 = icmp eq i32 %302, %303, !dbg !5535
  br i1 %cmp325, label %lor.end, label %lor.rhs, !dbg !5536

lor.rhs:                                          ; preds = %land.lhs.true324, %if.else321
  %304 = load i32, i32* %x_cg, align 4, !dbg !5537
  %cmp327 = icmp eq i32 %304, 0, !dbg !5538
  br i1 %cmp327, label %land.rhs, label %land.end, !dbg !5539

land.rhs:                                         ; preds = %lor.rhs
  %305 = load i32, i32* %y_cg, align 4, !dbg !5540
  %cmp329 = icmp eq i32 %305, 0, !dbg !5541
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %306 = phi i1 [ false, %lor.rhs ], [ %cmp329, %land.rhs ]
  br label %lor.end, !dbg !5542

lor.end:                                          ; preds = %land.end, %land.lhs.true324
  %307 = phi i1 [ true, %land.lhs.true324 ], [ %306, %land.end ]
  %lor.ext = zext i1 %307 to i32, !dbg !5544
  %conv331 = trunc i32 %lor.ext to i8, !dbg !5546
  %308 = load i32, i32* %y_cg, align 4, !dbg !5547
  %idxprom332 = sext i32 %308 to i64, !dbg !5548
  %309 = load i32, i32* %x_cg, align 4, !dbg !5549
  %idxprom333 = sext i32 %309 to i64, !dbg !5548
  %arrayidx334 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %significant_coeff_group_flag, i64 0, i64 %idxprom333, !dbg !5548
  %arrayidx335 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx334, i64 0, i64 %idxprom332, !dbg !5548
  store i8 %conv331, i8* %arrayidx335, align 1, !dbg !5550
  br label %if.end336

if.end336:                                        ; preds = %lor.end, %significant_coeff_group_flag_decode.exit
  %310 = load i32, i32* %num_coeff, align 4, !dbg !5551
  %311 = load i32, i32* %offset273, align 4, !dbg !5552
  %sub337 = sub nsw i32 %310, %311, !dbg !5553
  %sub338 = sub nsw i32 %sub337, 1, !dbg !5554
  store i32 %sub338, i32* %last_scan_pos, align 4, !dbg !5555
  %312 = load i32, i32* %i, align 4, !dbg !5556
  %313 = load i32, i32* %num_last_subset, align 4, !dbg !5558
  %cmp339 = icmp eq i32 %312, %313, !dbg !5559
  br i1 %cmp339, label %if.then341, label %if.else345, !dbg !5560

if.then341:                                       ; preds = %if.end336
  %314 = load i32, i32* %last_scan_pos, align 4, !dbg !5561
  %sub342 = sub nsw i32 %314, 1, !dbg !5563
  store i32 %sub342, i32* %n_end, align 4, !dbg !5564
  %315 = load i32, i32* %last_scan_pos, align 4, !dbg !5565
  %conv343 = trunc i32 %315 to i8, !dbg !5565
  %arrayidx344 = getelementptr inbounds [16 x i8], [16 x i8]* %significant_coeff_flag_idx, i64 0, i64 0, !dbg !5566
  store i8 %conv343, i8* %arrayidx344, align 16, !dbg !5567
  store i8 1, i8* %nb_significant_coeff_flag, align 1, !dbg !5568
  br label %if.end346, !dbg !5569

if.else345:                                       ; preds = %if.end336
  store i32 15, i32* %n_end, align 4, !dbg !5570
  br label %if.end346

if.end346:                                        ; preds = %if.else345, %if.then341
  %316 = load i32, i32* %x_cg, align 4, !dbg !5572
  %317 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !5574
  %shl347 = shl i32 1, %317, !dbg !5575
  %sub348 = sub nsw i32 %shl347, 1, !dbg !5576
  %shr349 = ashr i32 %sub348, 2, !dbg !5577
  %cmp350 = icmp slt i32 %316, %shr349, !dbg !5578
  br i1 %cmp350, label %if.then352, label %if.end360, !dbg !5579

if.then352:                                       ; preds = %if.end346
  %318 = load i32, i32* %y_cg, align 4, !dbg !5580
  %idxprom353 = sext i32 %318 to i64, !dbg !5581
  %319 = load i32, i32* %x_cg, align 4, !dbg !5582
  %add354 = add nsw i32 %319, 1, !dbg !5583
  %idxprom355 = sext i32 %add354 to i64, !dbg !5581
  %arrayidx356 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %significant_coeff_group_flag, i64 0, i64 %idxprom355, !dbg !5581
  %arrayidx357 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx356, i64 0, i64 %idxprom353, !dbg !5581
  %320 = load i8, i8* %arrayidx357, align 1, !dbg !5581
  %tobool358 = icmp ne i8 %320, 0, !dbg !5584
  %lnot = xor i1 %tobool358, true, !dbg !5584
  %lnot359 = xor i1 %lnot, true, !dbg !5585
  %lnot.ext = zext i1 %lnot359 to i32, !dbg !5585
  store i32 %lnot.ext, i32* %prev_sig, align 4, !dbg !5586
  br label %if.end360, !dbg !5587

if.end360:                                        ; preds = %if.then352, %if.end346
  %321 = load i32, i32* %y_cg, align 4, !dbg !5588
  %322 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !5590
  %shl361 = shl i32 1, %322, !dbg !5591
  %sub362 = sub nsw i32 %shl361, 1, !dbg !5592
  %shr363 = ashr i32 %sub362, 2, !dbg !5593
  %cmp364 = icmp slt i32 %321, %shr363, !dbg !5594
  br i1 %cmp364, label %if.then366, label %if.end379, !dbg !5595

if.then366:                                       ; preds = %if.end360
  %323 = load i32, i32* %y_cg, align 4, !dbg !5596
  %add367 = add nsw i32 %323, 1, !dbg !5597
  %idxprom368 = sext i32 %add367 to i64, !dbg !5598
  %324 = load i32, i32* %x_cg, align 4, !dbg !5599
  %idxprom369 = sext i32 %324 to i64, !dbg !5598
  %arrayidx370 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %significant_coeff_group_flag, i64 0, i64 %idxprom369, !dbg !5598
  %arrayidx371 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx370, i64 0, i64 %idxprom368, !dbg !5598
  %325 = load i8, i8* %arrayidx371, align 1, !dbg !5598
  %tobool372 = icmp ne i8 %325, 0, !dbg !5600
  %lnot373 = xor i1 %tobool372, true, !dbg !5600
  %lnot375 = xor i1 %lnot373, true, !dbg !5601
  %lnot.ext376 = zext i1 %lnot375 to i32, !dbg !5601
  %shl377 = shl i32 %lnot.ext376, 1, !dbg !5602
  %326 = load i32, i32* %prev_sig, align 4, !dbg !5603
  %add378 = add nsw i32 %326, %shl377, !dbg !5603
  store i32 %add378, i32* %prev_sig, align 4, !dbg !5603
  br label %if.end379, !dbg !5604

if.end379:                                        ; preds = %if.then366, %if.end360
  %327 = load i32, i32* %y_cg, align 4, !dbg !5605
  %idxprom380 = sext i32 %327 to i64, !dbg !5606
  %328 = load i32, i32* %x_cg, align 4, !dbg !5607
  %idxprom381 = sext i32 %328 to i64, !dbg !5606
  %arrayidx382 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %significant_coeff_group_flag, i64 0, i64 %idxprom381, !dbg !5606
  %arrayidx383 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx382, i64 0, i64 %idxprom380, !dbg !5606
  %329 = load i8, i8* %arrayidx383, align 1, !dbg !5606
  %conv384 = zext i8 %329 to i32, !dbg !5606
  %tobool385 = icmp ne i32 %conv384, 0, !dbg !5606
  br i1 %tobool385, label %land.lhs.true386, label %if.end515, !dbg !5608

land.lhs.true386:                                 ; preds = %if.end379
  %330 = load i32, i32* %n_end, align 4, !dbg !5609
  %cmp387 = icmp sge i32 %330, 0, !dbg !5611
  br i1 %cmp387, label %if.then389, label %if.end515, !dbg !5612

if.then389:                                       ; preds = %land.lhs.true386
  call void @llvm.dbg.declare(metadata i8** %ctx_idx_map_p, metadata !5613, metadata !2708), !dbg !5614
  call void @llvm.dbg.declare(metadata i32* %scf_offset, metadata !5615, metadata !2708), !dbg !5616
  store i32 0, i32* %scf_offset, align 4, !dbg !5616
  %331 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5617
  %ps390 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %331, i32 0, i32 15, !dbg !5619
  %sps391 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps390, i32 0, i32 4, !dbg !5620
  %332 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps391, align 8, !dbg !5620
  %transform_skip_context_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %332, i32 0, i32 39, !dbg !5621
  %333 = load i32, i32* %transform_skip_context_enabled_flag, align 4, !dbg !5621
  %tobool392 = icmp ne i32 %333, 0, !dbg !5617
  br i1 %tobool392, label %land.lhs.true393, label %if.else406, !dbg !5622

land.lhs.true393:                                 ; preds = %if.then389
  %334 = load i32, i32* %transform_skip_flag, align 4, !dbg !5623
  %tobool394 = icmp ne i32 %334, 0, !dbg !5623
  br i1 %tobool394, label %if.then400, label %lor.lhs.false395, !dbg !5624

lor.lhs.false395:                                 ; preds = %land.lhs.true393
  %335 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !5625
  %cu396 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %335, i32 0, i32 20, !dbg !5627
  %cu_transquant_bypass_flag397 = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu396, i32 0, i32 6, !dbg !5628
  %336 = load i8, i8* %cu_transquant_bypass_flag397, align 2, !dbg !5628
  %conv398 = zext i8 %336 to i32, !dbg !5625
  %tobool399 = icmp ne i32 %conv398, 0, !dbg !5625
  br i1 %tobool399, label %if.then400, label %if.else406, !dbg !5629

if.then400:                                       ; preds = %lor.lhs.false395, %land.lhs.true393
  store i8* getelementptr inbounds ([80 x i8], [80 x i8]* @ff_hevc_hls_residual_coding.ctx_idx_map, i64 0, i64 64), i8** %ctx_idx_map_p, align 8, !dbg !5631
  %337 = load i32, i32* %c_idx.addr, align 4, !dbg !5633
  %cmp401 = icmp eq i32 %337, 0, !dbg !5635
  br i1 %cmp401, label %if.then403, label %if.else404, !dbg !5636

if.then403:                                       ; preds = %if.then400
  store i32 40, i32* %scf_offset, align 4, !dbg !5637
  br label %if.end405, !dbg !5639

if.else404:                                       ; preds = %if.then400
  store i32 41, i32* %scf_offset, align 4, !dbg !5640
  br label %if.end405

if.end405:                                        ; preds = %if.else404, %if.then403
  br label %if.end450, !dbg !5642

if.else406:                                       ; preds = %lor.lhs.false395, %if.then389
  %338 = load i32, i32* %c_idx.addr, align 4, !dbg !5643
  %cmp407 = icmp ne i32 %338, 0, !dbg !5646
  br i1 %cmp407, label %if.then409, label %if.end410, !dbg !5647

if.then409:                                       ; preds = %if.else406
  store i32 27, i32* %scf_offset, align 4, !dbg !5648
  br label %if.end410, !dbg !5649

if.end410:                                        ; preds = %if.then409, %if.else406
  %339 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !5650
  %cmp411 = icmp eq i32 %339, 2, !dbg !5652
  br i1 %cmp411, label %if.then413, label %if.else414, !dbg !5653

if.then413:                                       ; preds = %if.end410
  store i8* getelementptr inbounds ([80 x i8], [80 x i8]* @ff_hevc_hls_residual_coding.ctx_idx_map, i64 0, i64 0), i8** %ctx_idx_map_p, align 8, !dbg !5654
  br label %if.end449, !dbg !5656

if.else414:                                       ; preds = %if.end410
  %340 = load i32, i32* %prev_sig, align 4, !dbg !5657
  %add415 = add nsw i32 %340, 1, !dbg !5659
  %shl416 = shl i32 %add415, 4, !dbg !5660
  %idxprom417 = sext i32 %shl416 to i64, !dbg !5661
  %arrayidx418 = getelementptr inbounds [80 x i8], [80 x i8]* @ff_hevc_hls_residual_coding.ctx_idx_map, i64 0, i64 %idxprom417, !dbg !5661
  store i8* %arrayidx418, i8** %ctx_idx_map_p, align 8, !dbg !5662
  %341 = load i32, i32* %c_idx.addr, align 4, !dbg !5663
  %cmp419 = icmp eq i32 %341, 0, !dbg !5665
  br i1 %cmp419, label %if.then421, label %if.else440, !dbg !5666

if.then421:                                       ; preds = %if.else414
  %342 = load i32, i32* %x_cg, align 4, !dbg !5667
  %cmp422 = icmp sgt i32 %342, 0, !dbg !5670
  br i1 %cmp422, label %if.then427, label %lor.lhs.false424, !dbg !5671

lor.lhs.false424:                                 ; preds = %if.then421
  %343 = load i32, i32* %y_cg, align 4, !dbg !5672
  %cmp425 = icmp sgt i32 %343, 0, !dbg !5674
  br i1 %cmp425, label %if.then427, label %if.end429, !dbg !5675

if.then427:                                       ; preds = %lor.lhs.false424, %if.then421
  %344 = load i32, i32* %scf_offset, align 4, !dbg !5676
  %add428 = add nsw i32 %344, 3, !dbg !5676
  store i32 %add428, i32* %scf_offset, align 4, !dbg !5676
  br label %if.end429, !dbg !5677

if.end429:                                        ; preds = %if.then427, %lor.lhs.false424
  %345 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !5678
  %cmp430 = icmp eq i32 %345, 3, !dbg !5680
  br i1 %cmp430, label %if.then432, label %if.else437, !dbg !5681

if.then432:                                       ; preds = %if.end429
  %346 = load i32, i32* %scan_idx.addr, align 4, !dbg !5682
  %cmp433 = icmp eq i32 %346, 0, !dbg !5684
  %cond435 = select i1 %cmp433, i32 9, i32 15, !dbg !5685
  %347 = load i32, i32* %scf_offset, align 4, !dbg !5686
  %add436 = add nsw i32 %347, %cond435, !dbg !5686
  store i32 %add436, i32* %scf_offset, align 4, !dbg !5686
  br label %if.end439, !dbg !5687

if.else437:                                       ; preds = %if.end429
  %348 = load i32, i32* %scf_offset, align 4, !dbg !5688
  %add438 = add nsw i32 %348, 21, !dbg !5688
  store i32 %add438, i32* %scf_offset, align 4, !dbg !5688
  br label %if.end439

if.end439:                                        ; preds = %if.else437, %if.then432
  br label %if.end448, !dbg !5690

if.else440:                                       ; preds = %if.else414
  %349 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !5691
  %cmp441 = icmp eq i32 %349, 3, !dbg !5694
  br i1 %cmp441, label %if.then443, label %if.else445, !dbg !5695

if.then443:                                       ; preds = %if.else440
  %350 = load i32, i32* %scf_offset, align 4, !dbg !5696
  %add444 = add nsw i32 %350, 9, !dbg !5696
  store i32 %add444, i32* %scf_offset, align 4, !dbg !5696
  br label %if.end447, !dbg !5697

if.else445:                                       ; preds = %if.else440
  %351 = load i32, i32* %scf_offset, align 4, !dbg !5698
  %add446 = add nsw i32 %351, 12, !dbg !5698
  store i32 %add446, i32* %scf_offset, align 4, !dbg !5698
  br label %if.end447

if.end447:                                        ; preds = %if.else445, %if.then443
  br label %if.end448

if.end448:                                        ; preds = %if.end447, %if.end439
  br label %if.end449

if.end449:                                        ; preds = %if.end448, %if.then413
  br label %if.end450

if.end450:                                        ; preds = %if.end449, %if.end405
  %352 = load i32, i32* %n_end, align 4, !dbg !5699
  store i32 %352, i32* %n, align 4, !dbg !5700
  br label %for.cond451, !dbg !5701

for.cond451:                                      ; preds = %for.inc, %if.end450
  %353 = load i32, i32* %n, align 4, !dbg !5702
  %cmp452 = icmp sgt i32 %353, 0, !dbg !5704
  br i1 %cmp452, label %for.body454, label %for.end, !dbg !5705

for.body454:                                      ; preds = %for.cond451
  %354 = load i32, i32* %n, align 4, !dbg !5706
  %idxprom455 = sext i32 %354 to i64, !dbg !5707
  %355 = load i8*, i8** %scan_x_off, align 8, !dbg !5707
  %arrayidx456 = getelementptr inbounds i8, i8* %355, i64 %idxprom455, !dbg !5707
  %356 = load i8, i8* %arrayidx456, align 1, !dbg !5707
  %conv457 = zext i8 %356 to i32, !dbg !5707
  store i32 %conv457, i32* %x_c, align 4, !dbg !5708
  %357 = load i32, i32* %n, align 4, !dbg !5709
  %idxprom458 = sext i32 %357 to i64, !dbg !5710
  %358 = load i8*, i8** %scan_y_off, align 8, !dbg !5710
  %arrayidx459 = getelementptr inbounds i8, i8* %358, i64 %idxprom458, !dbg !5710
  %359 = load i8, i8* %arrayidx459, align 1, !dbg !5710
  %conv460 = zext i8 %359 to i32, !dbg !5710
  store i32 %conv460, i32* %y_c, align 4, !dbg !5711
  %360 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5712
  %361 = load i32, i32* %x_c, align 4, !dbg !5713
  %362 = load i32, i32* %y_c, align 4, !dbg !5714
  %363 = load i32, i32* %scf_offset, align 4, !dbg !5715
  %364 = load i8*, i8** %ctx_idx_map_p, align 8, !dbg !5716
  store %struct.HEVCContext* %360, %struct.HEVCContext** %s.addr.i1200, align 8, !dbg !5717
  store i32 %361, i32* %x_c.addr.i, align 4, !dbg !5717
  store i32 %362, i32* %y_c.addr.i, align 4, !dbg !5717
  store i32 %363, i32* %offset.addr.i, align 4, !dbg !5717
  store i8* %364, i8** %ctx_idx_map.addr.i, align 8, !dbg !5717
  %365 = load i32, i32* %y_c.addr.i, align 4, !dbg !5718
  %shl.i1202 = shl i32 %365, 2, !dbg !5719
  %366 = load i32, i32* %x_c.addr.i, align 4, !dbg !5720
  %add.i1203 = add nsw i32 %shl.i1202, %366, !dbg !5721
  %idxprom.i1204 = sext i32 %add.i1203 to i64, !dbg !5722
  %367 = load i8*, i8** %ctx_idx_map.addr.i, align 8, !dbg !5722
  %arrayidx.i1205 = getelementptr inbounds i8, i8* %367, i64 %idxprom.i1204, !dbg !5722
  %368 = load i8, i8* %arrayidx.i1205, align 1, !dbg !5722
  %conv.i = zext i8 %368 to i32, !dbg !5722
  %369 = load i32, i32* %offset.addr.i, align 4, !dbg !5723
  %add1.i = add nsw i32 %conv.i, %369, !dbg !5724
  store i32 %add1.i, i32* %inc.i1201, align 4, !dbg !4610
  %370 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1200, align 8, !dbg !5725
  %HEVClc.i1206 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %370, i32 0, i32 4, !dbg !5726
  %371 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i1206, align 8, !dbg !5726
  %cc.i1207 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %371, i32 0, i32 4, !dbg !5727
  %372 = load i32, i32* %inc.i1201, align 4, !dbg !5728
  %add2.i = add nsw i32 92, %372, !dbg !5729
  %idxprom3.i = sext i32 %add2.i to i64, !dbg !5730
  %373 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1200, align 8, !dbg !5730
  %HEVClc4.i1208 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %373, i32 0, i32 4, !dbg !5731
  %374 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc4.i1208, align 8, !dbg !5731
  %cabac_state.i1209 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %374, i32 0, i32 0, !dbg !5732
  %arrayidx5.i = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state.i1209, i64 0, i64 %idxprom3.i, !dbg !5730
  %call.i1210 = call i32 @get_cabac(%struct.CABACContext* %cc.i1207, i8* %arrayidx5.i) #5, !dbg !5733
  %tobool462 = icmp ne i32 %call.i1210, 0, !dbg !5717
  br i1 %tobool462, label %if.then463, label %if.end468, !dbg !5734

if.then463:                                       ; preds = %for.body454
  %375 = load i32, i32* %n, align 4, !dbg !5735
  %conv464 = trunc i32 %375 to i8, !dbg !5735
  %376 = load i8, i8* %nb_significant_coeff_flag, align 1, !dbg !5737
  %idxprom465 = zext i8 %376 to i64, !dbg !5738
  %arrayidx466 = getelementptr inbounds [16 x i8], [16 x i8]* %significant_coeff_flag_idx, i64 0, i64 %idxprom465, !dbg !5738
  store i8 %conv464, i8* %arrayidx466, align 1, !dbg !5739
  %377 = load i8, i8* %nb_significant_coeff_flag, align 1, !dbg !5740
  %inc467 = add i8 %377, 1, !dbg !5740
  store i8 %inc467, i8* %nb_significant_coeff_flag, align 1, !dbg !5740
  store i32 0, i32* %implicit_non_zero_coeff, align 4, !dbg !5741
  br label %if.end468, !dbg !5742

if.end468:                                        ; preds = %if.then463, %for.body454
  br label %for.inc, !dbg !5743

for.inc:                                          ; preds = %if.end468
  %378 = load i32, i32* %n, align 4, !dbg !5744
  %dec = add nsw i32 %378, -1, !dbg !5744
  store i32 %dec, i32* %n, align 4, !dbg !5744
  br label %for.cond451, !dbg !5746, !llvm.loop !5747

for.end:                                          ; preds = %for.cond451
  %379 = load i32, i32* %implicit_non_zero_coeff, align 4, !dbg !5749
  %cmp469 = icmp eq i32 %379, 0, !dbg !5750
  br i1 %cmp469, label %if.then471, label %if.else510, !dbg !5751

if.then471:                                       ; preds = %for.end
  %380 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5752
  %ps472 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %380, i32 0, i32 15, !dbg !5754
  %sps473 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps472, i32 0, i32 4, !dbg !5755
  %381 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps473, align 8, !dbg !5755
  %transform_skip_context_enabled_flag474 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %381, i32 0, i32 39, !dbg !5756
  %382 = load i32, i32* %transform_skip_context_enabled_flag474, align 4, !dbg !5756
  %tobool475 = icmp ne i32 %382, 0, !dbg !5752
  br i1 %tobool475, label %land.lhs.true476, label %if.else489, !dbg !5757

land.lhs.true476:                                 ; preds = %if.then471
  %383 = load i32, i32* %transform_skip_flag, align 4, !dbg !5758
  %tobool477 = icmp ne i32 %383, 0, !dbg !5758
  br i1 %tobool477, label %if.then483, label %lor.lhs.false478, !dbg !5759

lor.lhs.false478:                                 ; preds = %land.lhs.true476
  %384 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !5760
  %cu479 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %384, i32 0, i32 20, !dbg !5762
  %cu_transquant_bypass_flag480 = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu479, i32 0, i32 6, !dbg !5763
  %385 = load i8, i8* %cu_transquant_bypass_flag480, align 2, !dbg !5763
  %conv481 = zext i8 %385 to i32, !dbg !5760
  %tobool482 = icmp ne i32 %conv481, 0, !dbg !5760
  br i1 %tobool482, label %if.then483, label %if.else489, !dbg !5764

if.then483:                                       ; preds = %lor.lhs.false478, %land.lhs.true476
  %386 = load i32, i32* %c_idx.addr, align 4, !dbg !5766
  %cmp484 = icmp eq i32 %386, 0, !dbg !5769
  br i1 %cmp484, label %if.then486, label %if.else487, !dbg !5770

if.then486:                                       ; preds = %if.then483
  store i32 42, i32* %scf_offset, align 4, !dbg !5771
  br label %if.end488, !dbg !5773

if.else487:                                       ; preds = %if.then483
  store i32 43, i32* %scf_offset, align 4, !dbg !5774
  br label %if.end488

if.end488:                                        ; preds = %if.else487, %if.then486
  br label %if.end501, !dbg !5776

if.else489:                                       ; preds = %lor.lhs.false478, %if.then471
  %387 = load i32, i32* %i, align 4, !dbg !5777
  %cmp490 = icmp eq i32 %387, 0, !dbg !5780
  br i1 %cmp490, label %if.then492, label %if.else498, !dbg !5781

if.then492:                                       ; preds = %if.else489
  %388 = load i32, i32* %c_idx.addr, align 4, !dbg !5782
  %cmp493 = icmp eq i32 %388, 0, !dbg !5785
  br i1 %cmp493, label %if.then495, label %if.else496, !dbg !5786

if.then495:                                       ; preds = %if.then492
  store i32 0, i32* %scf_offset, align 4, !dbg !5787
  br label %if.end497, !dbg !5788

if.else496:                                       ; preds = %if.then492
  store i32 27, i32* %scf_offset, align 4, !dbg !5789
  br label %if.end497

if.end497:                                        ; preds = %if.else496, %if.then495
  br label %if.end500, !dbg !5790

if.else498:                                       ; preds = %if.else489
  %389 = load i32, i32* %scf_offset, align 4, !dbg !5791
  %add499 = add nsw i32 2, %389, !dbg !5793
  store i32 %add499, i32* %scf_offset, align 4, !dbg !5794
  br label %if.end500

if.end500:                                        ; preds = %if.else498, %if.end497
  br label %if.end501

if.end501:                                        ; preds = %if.end500, %if.end488
  %390 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5795
  %391 = load i32, i32* %c_idx.addr, align 4, !dbg !5796
  %392 = load i32, i32* %scf_offset, align 4, !dbg !5797
  store %struct.HEVCContext* %390, %struct.HEVCContext** %s.addr.i1211, align 8, !dbg !5798
  store i32 %391, i32* %c_idx.addr.i1212, align 4, !dbg !5798
  store i32 %392, i32* %offset.addr.i1213, align 4, !dbg !5798
  %393 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1211, align 8, !dbg !5799
  %HEVClc.i1214 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %393, i32 0, i32 4, !dbg !5800
  %394 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i1214, align 8, !dbg !5800
  %cc.i1215 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %394, i32 0, i32 4, !dbg !5801
  %395 = load i32, i32* %offset.addr.i1213, align 4, !dbg !5802
  %add.i1216 = add nsw i32 92, %395, !dbg !5803
  %idxprom.i1217 = sext i32 %add.i1216 to i64, !dbg !5804
  %396 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1211, align 8, !dbg !5804
  %HEVClc1.i1218 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %396, i32 0, i32 4, !dbg !5805
  %397 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1.i1218, align 8, !dbg !5805
  %cabac_state.i1219 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %397, i32 0, i32 0, !dbg !5806
  %arrayidx.i1220 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state.i1219, i64 0, i64 %idxprom.i1217, !dbg !5804
  %call.i1221 = call i32 @get_cabac(%struct.CABACContext* %cc.i1215, i8* %arrayidx.i1220) #5, !dbg !5807
  %cmp503 = icmp eq i32 %call.i1221, 1, !dbg !5808
  br i1 %cmp503, label %if.then505, label %if.end509, !dbg !5809

if.then505:                                       ; preds = %if.end501
  %398 = load i8, i8* %nb_significant_coeff_flag, align 1, !dbg !5810
  %idxprom506 = zext i8 %398 to i64, !dbg !5812
  %arrayidx507 = getelementptr inbounds [16 x i8], [16 x i8]* %significant_coeff_flag_idx, i64 0, i64 %idxprom506, !dbg !5812
  store i8 0, i8* %arrayidx507, align 1, !dbg !5813
  %399 = load i8, i8* %nb_significant_coeff_flag, align 1, !dbg !5814
  %inc508 = add i8 %399, 1, !dbg !5814
  store i8 %inc508, i8* %nb_significant_coeff_flag, align 1, !dbg !5814
  br label %if.end509, !dbg !5815

if.end509:                                        ; preds = %if.then505, %if.end501
  br label %if.end514, !dbg !5816

if.else510:                                       ; preds = %for.end
  %400 = load i8, i8* %nb_significant_coeff_flag, align 1, !dbg !5817
  %idxprom511 = zext i8 %400 to i64, !dbg !5819
  %arrayidx512 = getelementptr inbounds [16 x i8], [16 x i8]* %significant_coeff_flag_idx, i64 0, i64 %idxprom511, !dbg !5819
  store i8 0, i8* %arrayidx512, align 1, !dbg !5820
  %401 = load i8, i8* %nb_significant_coeff_flag, align 1, !dbg !5821
  %inc513 = add i8 %401, 1, !dbg !5821
  store i8 %inc513, i8* %nb_significant_coeff_flag, align 1, !dbg !5821
  br label %if.end514

if.end514:                                        ; preds = %if.else510, %if.end509
  br label %if.end515, !dbg !5822

if.end515:                                        ; preds = %if.end514, %land.lhs.true386, %if.end379
  %402 = load i8, i8* %nb_significant_coeff_flag, align 1, !dbg !5823
  %conv516 = zext i8 %402 to i32, !dbg !5823
  store i32 %conv516, i32* %n_end, align 4, !dbg !5824
  %403 = load i32, i32* %n_end, align 4, !dbg !5825
  %tobool517 = icmp ne i32 %403, 0, !dbg !5825
  br i1 %tobool517, label %if.then518, label %if.end941, !dbg !5826

if.then518:                                       ; preds = %if.end515
  call void @llvm.dbg.declare(metadata i32* %first_nz_pos_in_cg, metadata !5827, metadata !2708), !dbg !5828
  call void @llvm.dbg.declare(metadata i32* %last_nz_pos_in_cg, metadata !5829, metadata !2708), !dbg !5830
  call void @llvm.dbg.declare(metadata i32* %c_rice_param, metadata !5831, metadata !2708), !dbg !5832
  store i32 0, i32* %c_rice_param, align 4, !dbg !5832
  call void @llvm.dbg.declare(metadata i32* %first_greater1_coeff_idx, metadata !5833, metadata !2708), !dbg !5834
  store i32 -1, i32* %first_greater1_coeff_idx, align 4, !dbg !5834
  call void @llvm.dbg.declare(metadata [8 x i8]* %coeff_abs_level_greater1_flag, metadata !5835, metadata !2708), !dbg !5837
  call void @llvm.dbg.declare(metadata i16* %coeff_sign_flag, metadata !5838, metadata !2708), !dbg !5839
  call void @llvm.dbg.declare(metadata i32* %sum_abs, metadata !5840, metadata !2708), !dbg !5841
  store i32 0, i32* %sum_abs, align 4, !dbg !5841
  call void @llvm.dbg.declare(metadata i32* %sign_hidden, metadata !5842, metadata !2708), !dbg !5843
  call void @llvm.dbg.declare(metadata i32* %sb_type, metadata !5844, metadata !2708), !dbg !5845
  call void @llvm.dbg.declare(metadata i32* %ctx_set, metadata !5846, metadata !2708), !dbg !5847
  %404 = load i32, i32* %i, align 4, !dbg !5848
  %cmp519 = icmp sgt i32 %404, 0, !dbg !5849
  br i1 %cmp519, label %land.rhs521, label %land.end524, !dbg !5850

land.rhs521:                                      ; preds = %if.then518
  %405 = load i32, i32* %c_idx.addr, align 4, !dbg !5851
  %cmp522 = icmp eq i32 %405, 0, !dbg !5853
  br label %land.end524

land.end524:                                      ; preds = %land.rhs521, %if.then518
  %406 = phi i1 [ false, %if.then518 ], [ %cmp522, %land.rhs521 ]
  %cond525 = select i1 %406, i32 2, i32 0, !dbg !5854
  store i32 %cond525, i32* %ctx_set, align 4, !dbg !5856
  %407 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5857
  %ps526 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %407, i32 0, i32 15, !dbg !5859
  %sps527 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps526, i32 0, i32 4, !dbg !5860
  %408 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps527, align 8, !dbg !5860
  %persistent_rice_adaptation_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %408, i32 0, i32 45, !dbg !5861
  %409 = load i32, i32* %persistent_rice_adaptation_enabled_flag, align 4, !dbg !5861
  %tobool528 = icmp ne i32 %409, 0, !dbg !5857
  br i1 %tobool528, label %if.then529, label %if.end550, !dbg !5862

if.then529:                                       ; preds = %land.end524
  %410 = load i32, i32* %transform_skip_flag, align 4, !dbg !5863
  %tobool530 = icmp ne i32 %410, 0, !dbg !5863
  br i1 %tobool530, label %if.else540, label %land.lhs.true531, !dbg !5866

land.lhs.true531:                                 ; preds = %if.then529
  %411 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !5867
  %cu532 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %411, i32 0, i32 20, !dbg !5869
  %cu_transquant_bypass_flag533 = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu532, i32 0, i32 6, !dbg !5870
  %412 = load i8, i8* %cu_transquant_bypass_flag533, align 2, !dbg !5870
  %tobool534 = icmp ne i8 %412, 0, !dbg !5867
  br i1 %tobool534, label %if.else540, label %if.then535, !dbg !5871

if.then535:                                       ; preds = %land.lhs.true531
  %413 = load i32, i32* %c_idx.addr, align 4, !dbg !5872
  %cmp536 = icmp eq i32 %413, 0, !dbg !5873
  %cond538 = select i1 %cmp536, i32 1, i32 0, !dbg !5872
  %mul539 = mul nsw i32 2, %cond538, !dbg !5874
  store i32 %mul539, i32* %sb_type, align 4, !dbg !5875
  br label %if.end546, !dbg !5876

if.else540:                                       ; preds = %land.lhs.true531, %if.then529
  %414 = load i32, i32* %c_idx.addr, align 4, !dbg !5877
  %cmp541 = icmp eq i32 %414, 0, !dbg !5878
  %cond543 = select i1 %cmp541, i32 1, i32 0, !dbg !5877
  %mul544 = mul nsw i32 2, %cond543, !dbg !5879
  %add545 = add nsw i32 %mul544, 1, !dbg !5880
  store i32 %add545, i32* %sb_type, align 4, !dbg !5881
  br label %if.end546

if.end546:                                        ; preds = %if.else540, %if.then535
  %415 = load i32, i32* %sb_type, align 4, !dbg !5882
  %idxprom547 = sext i32 %415 to i64, !dbg !5883
  %416 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !5883
  %stat_coeff = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %416, i32 0, i32 1, !dbg !5884
  %arrayidx548 = getelementptr inbounds [4 x i8], [4 x i8]* %stat_coeff, i64 0, i64 %idxprom547, !dbg !5883
  %417 = load i8, i8* %arrayidx548, align 1, !dbg !5883
  %conv549 = zext i8 %417 to i32, !dbg !5883
  %div = sdiv i32 %conv549, 4, !dbg !5885
  store i32 %div, i32* %c_rice_param, align 4, !dbg !5886
  br label %if.end550, !dbg !5887

if.end550:                                        ; preds = %if.end546, %land.end524
  %418 = load i32, i32* %i, align 4, !dbg !5888
  %419 = load i32, i32* %num_last_subset, align 4, !dbg !5890
  %cmp551 = icmp eq i32 %418, %419, !dbg !5891
  br i1 %cmp551, label %if.end558, label %land.lhs.true553, !dbg !5892

land.lhs.true553:                                 ; preds = %if.end550
  %420 = load i32, i32* %greater1_ctx, align 4, !dbg !5893
  %cmp554 = icmp eq i32 %420, 0, !dbg !5895
  br i1 %cmp554, label %if.then556, label %if.end558, !dbg !5896

if.then556:                                       ; preds = %land.lhs.true553
  %421 = load i32, i32* %ctx_set, align 4, !dbg !5897
  %inc557 = add nsw i32 %421, 1, !dbg !5897
  store i32 %inc557, i32* %ctx_set, align 4, !dbg !5897
  br label %if.end558, !dbg !5898

if.end558:                                        ; preds = %if.then556, %land.lhs.true553, %if.end550
  store i32 1, i32* %greater1_ctx, align 4, !dbg !5899
  %arrayidx559 = getelementptr inbounds [16 x i8], [16 x i8]* %significant_coeff_flag_idx, i64 0, i64 0, !dbg !5900
  %422 = load i8, i8* %arrayidx559, align 16, !dbg !5900
  %conv560 = zext i8 %422 to i32, !dbg !5900
  store i32 %conv560, i32* %last_nz_pos_in_cg, align 4, !dbg !5901
  store i32 0, i32* %m, align 4, !dbg !5902
  br label %for.cond561, !dbg !5903

for.cond561:                                      ; preds = %for.inc596, %if.end558
  %423 = load i32, i32* %m, align 4, !dbg !5904
  %424 = load i32, i32* %n_end, align 4, !dbg !5906
  %cmp562 = icmp sgt i32 %424, 8, !dbg !5907
  br i1 %cmp562, label %cond.true564, label %cond.false565, !dbg !5906

cond.true564:                                     ; preds = %for.cond561
  br label %cond.end566, !dbg !5908

cond.false565:                                    ; preds = %for.cond561
  %425 = load i32, i32* %n_end, align 4, !dbg !5910
  br label %cond.end566, !dbg !5912

cond.end566:                                      ; preds = %cond.false565, %cond.true564
  %cond567 = phi i32 [ 8, %cond.true564 ], [ %425, %cond.false565 ], !dbg !5913
  %cmp568 = icmp slt i32 %423, %cond567, !dbg !5915
  br i1 %cmp568, label %for.body570, label %for.end598, !dbg !5916

for.body570:                                      ; preds = %cond.end566
  call void @llvm.dbg.declare(metadata i32* %inc571, metadata !5917, metadata !2708), !dbg !5918
  %426 = load i32, i32* %ctx_set, align 4, !dbg !5919
  %shl572 = shl i32 %426, 2, !dbg !5920
  %427 = load i32, i32* %greater1_ctx, align 4, !dbg !5921
  %add573 = add nsw i32 %shl572, %427, !dbg !5922
  store i32 %add573, i32* %inc571, align 4, !dbg !5918
  %428 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5923
  %429 = load i32, i32* %c_idx.addr, align 4, !dbg !5924
  %430 = load i32, i32* %inc571, align 4, !dbg !5925
  store %struct.HEVCContext* %428, %struct.HEVCContext** %s.addr.i1222, align 8, !dbg !5926
  store i32 %429, i32* %c_idx.addr.i1223, align 4, !dbg !5926
  store i32 %430, i32* %inc.addr.i, align 4, !dbg !5926
  %431 = load i32, i32* %c_idx.addr.i1223, align 4, !dbg !5927
  %cmp.i1224 = icmp sgt i32 %431, 0, !dbg !5929
  br i1 %cmp.i1224, label %if.then.i1226, label %coeff_abs_level_greater1_flag_decode.exit, !dbg !5930

if.then.i1226:                                    ; preds = %for.body570
  %432 = load i32, i32* %inc.addr.i, align 4, !dbg !5931
  %add.i1225 = add nsw i32 %432, 16, !dbg !5931
  store i32 %add.i1225, i32* %inc.addr.i, align 4, !dbg !5931
  br label %coeff_abs_level_greater1_flag_decode.exit, !dbg !5932

coeff_abs_level_greater1_flag_decode.exit:        ; preds = %for.body570, %if.then.i1226
  %433 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1222, align 8, !dbg !5933
  %HEVClc.i1227 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %433, i32 0, i32 4, !dbg !5934
  %434 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i1227, align 8, !dbg !5934
  %cc.i1228 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %434, i32 0, i32 4, !dbg !5935
  %435 = load i32, i32* %inc.addr.i, align 4, !dbg !5936
  %add1.i1229 = add nsw i32 136, %435, !dbg !5937
  %idxprom.i1230 = sext i32 %add1.i1229 to i64, !dbg !5938
  %436 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1222, align 8, !dbg !5938
  %HEVClc2.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %436, i32 0, i32 4, !dbg !5939
  %437 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc2.i, align 8, !dbg !5939
  %cabac_state.i1231 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %437, i32 0, i32 0, !dbg !5940
  %arrayidx.i1232 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state.i1231, i64 0, i64 %idxprom.i1230, !dbg !5938
  %call.i1233 = call i32 @get_cabac(%struct.CABACContext* %cc.i1228, i8* %arrayidx.i1232) #5, !dbg !5941
  %conv575 = trunc i32 %call.i1233 to i8, !dbg !5926
  %438 = load i32, i32* %m, align 4, !dbg !5942
  %idxprom576 = sext i32 %438 to i64, !dbg !5943
  %arrayidx577 = getelementptr inbounds [8 x i8], [8 x i8]* %coeff_abs_level_greater1_flag, i64 0, i64 %idxprom576, !dbg !5943
  store i8 %conv575, i8* %arrayidx577, align 1, !dbg !5944
  %439 = load i32, i32* %m, align 4, !dbg !5945
  %idxprom578 = sext i32 %439 to i64, !dbg !5947
  %arrayidx579 = getelementptr inbounds [8 x i8], [8 x i8]* %coeff_abs_level_greater1_flag, i64 0, i64 %idxprom578, !dbg !5947
  %440 = load i8, i8* %arrayidx579, align 1, !dbg !5947
  %tobool580 = icmp ne i8 %440, 0, !dbg !5947
  br i1 %tobool580, label %if.then581, label %if.else586, !dbg !5948

if.then581:                                       ; preds = %coeff_abs_level_greater1_flag_decode.exit
  store i32 0, i32* %greater1_ctx, align 4, !dbg !5949
  %441 = load i32, i32* %first_greater1_coeff_idx, align 4, !dbg !5951
  %cmp582 = icmp eq i32 %441, -1, !dbg !5953
  br i1 %cmp582, label %if.then584, label %if.end585, !dbg !5954

if.then584:                                       ; preds = %if.then581
  %442 = load i32, i32* %m, align 4, !dbg !5955
  store i32 %442, i32* %first_greater1_coeff_idx, align 4, !dbg !5956
  br label %if.end585, !dbg !5957

if.end585:                                        ; preds = %if.then584, %if.then581
  br label %if.end595, !dbg !5958

if.else586:                                       ; preds = %coeff_abs_level_greater1_flag_decode.exit
  %443 = load i32, i32* %greater1_ctx, align 4, !dbg !5959
  %cmp587 = icmp sgt i32 %443, 0, !dbg !5962
  br i1 %cmp587, label %land.lhs.true589, label %if.end594, !dbg !5963

land.lhs.true589:                                 ; preds = %if.else586
  %444 = load i32, i32* %greater1_ctx, align 4, !dbg !5964
  %cmp590 = icmp slt i32 %444, 3, !dbg !5966
  br i1 %cmp590, label %if.then592, label %if.end594, !dbg !5967

if.then592:                                       ; preds = %land.lhs.true589
  %445 = load i32, i32* %greater1_ctx, align 4, !dbg !5968
  %inc593 = add nsw i32 %445, 1, !dbg !5968
  store i32 %inc593, i32* %greater1_ctx, align 4, !dbg !5968
  br label %if.end594, !dbg !5970

if.end594:                                        ; preds = %if.then592, %land.lhs.true589, %if.else586
  br label %if.end595

if.end595:                                        ; preds = %if.end594, %if.end585
  br label %for.inc596, !dbg !5971

for.inc596:                                       ; preds = %if.end595
  %446 = load i32, i32* %m, align 4, !dbg !5972
  %inc597 = add nsw i32 %446, 1, !dbg !5972
  store i32 %inc597, i32* %m, align 4, !dbg !5972
  br label %for.cond561, !dbg !5974, !llvm.loop !5975

for.end598:                                       ; preds = %cond.end566
  %447 = load i32, i32* %n_end, align 4, !dbg !5977
  %sub599 = sub nsw i32 %447, 1, !dbg !5978
  %idxprom600 = sext i32 %sub599 to i64, !dbg !5979
  %arrayidx601 = getelementptr inbounds [16 x i8], [16 x i8]* %significant_coeff_flag_idx, i64 0, i64 %idxprom600, !dbg !5979
  %448 = load i8, i8* %arrayidx601, align 1, !dbg !5979
  %conv602 = zext i8 %448 to i32, !dbg !5979
  store i32 %conv602, i32* %first_nz_pos_in_cg, align 4, !dbg !5980
  %449 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !5981
  %cu603 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %449, i32 0, i32 20, !dbg !5983
  %cu_transquant_bypass_flag604 = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu603, i32 0, i32 6, !dbg !5984
  %450 = load i8, i8* %cu_transquant_bypass_flag604, align 2, !dbg !5984
  %conv605 = zext i8 %450 to i32, !dbg !5981
  %tobool606 = icmp ne i32 %conv605, 0, !dbg !5981
  br i1 %tobool606, label %if.then626, label %lor.lhs.false607, !dbg !5985

lor.lhs.false607:                                 ; preds = %for.end598
  %451 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !5986
  %cu608 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %451, i32 0, i32 20, !dbg !5987
  %pred_mode609 = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu608, i32 0, i32 2, !dbg !5988
  %452 = load i32, i32* %pred_mode609, align 4, !dbg !5988
  %cmp610 = icmp eq i32 %452, 1, !dbg !5989
  br i1 %cmp610, label %land.lhs.true612, label %lor.lhs.false624, !dbg !5990

land.lhs.true612:                                 ; preds = %lor.lhs.false607
  %453 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !5991
  %ps613 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %453, i32 0, i32 15, !dbg !5992
  %sps614 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps613, i32 0, i32 4, !dbg !5993
  %454 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps614, align 8, !dbg !5993
  %implicit_rdpcm_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %454, i32 0, i32 40, !dbg !5994
  %455 = load i32, i32* %implicit_rdpcm_enabled_flag, align 4, !dbg !5994
  %tobool615 = icmp ne i32 %455, 0, !dbg !5991
  br i1 %tobool615, label %land.lhs.true616, label %lor.lhs.false624, !dbg !5995

land.lhs.true616:                                 ; preds = %land.lhs.true612
  %456 = load i32, i32* %transform_skip_flag, align 4, !dbg !5996
  %tobool617 = icmp ne i32 %456, 0, !dbg !5996
  br i1 %tobool617, label %land.lhs.true618, label %lor.lhs.false624, !dbg !5998

land.lhs.true618:                                 ; preds = %land.lhs.true616
  %457 = load i32, i32* %pred_mode_intra, align 4, !dbg !5999
  %cmp619 = icmp eq i32 %457, 10, !dbg !6000
  br i1 %cmp619, label %if.then626, label %lor.lhs.false621, !dbg !6001

lor.lhs.false621:                                 ; preds = %land.lhs.true618
  %458 = load i32, i32* %pred_mode_intra, align 4, !dbg !6002
  %cmp622 = icmp eq i32 %458, 26, !dbg !6003
  br i1 %cmp622, label %if.then626, label %lor.lhs.false624, !dbg !6004

lor.lhs.false624:                                 ; preds = %lor.lhs.false621, %land.lhs.true616, %land.lhs.true612, %lor.lhs.false607
  %459 = load i32, i32* %explicit_rdpcm_flag, align 4, !dbg !6005
  %tobool625 = icmp ne i32 %459, 0, !dbg !6005
  br i1 %tobool625, label %if.then626, label %if.else627, !dbg !6006

if.then626:                                       ; preds = %lor.lhs.false624, %lor.lhs.false621, %land.lhs.true618, %for.end598
  store i32 0, i32* %sign_hidden, align 4, !dbg !6007
  br label %if.end631, !dbg !6008

if.else627:                                       ; preds = %lor.lhs.false624
  %460 = load i32, i32* %last_nz_pos_in_cg, align 4, !dbg !6009
  %461 = load i32, i32* %first_nz_pos_in_cg, align 4, !dbg !6010
  %sub628 = sub nsw i32 %460, %461, !dbg !6011
  %cmp629 = icmp sge i32 %sub628, 4, !dbg !6012
  %conv630 = zext i1 %cmp629 to i32, !dbg !6012
  store i32 %conv630, i32* %sign_hidden, align 4, !dbg !6013
  br label %if.end631

if.end631:                                        ; preds = %if.else627, %if.then626
  %462 = load i32, i32* %first_greater1_coeff_idx, align 4, !dbg !6014
  %cmp632 = icmp ne i32 %462, -1, !dbg !6015
  br i1 %cmp632, label %if.then634, label %if.end641, !dbg !6016

if.then634:                                       ; preds = %if.end631
  %463 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6017
  %464 = load i32, i32* %c_idx.addr, align 4, !dbg !6018
  %465 = load i32, i32* %ctx_set, align 4, !dbg !6019
  store %struct.HEVCContext* %463, %struct.HEVCContext** %s.addr.i1235, align 8, !dbg !6020
  store i32 %464, i32* %c_idx.addr.i1236, align 4, !dbg !6020
  store i32 %465, i32* %inc.addr.i1237, align 4, !dbg !6020
  %466 = load i32, i32* %c_idx.addr.i1236, align 4, !dbg !6021
  %cmp.i1238 = icmp sgt i32 %466, 0, !dbg !6023
  br i1 %cmp.i1238, label %if.then.i1240, label %coeff_abs_level_greater2_flag_decode.exit, !dbg !6024

if.then.i1240:                                    ; preds = %if.then634
  %467 = load i32, i32* %inc.addr.i1237, align 4, !dbg !6025
  %add.i1239 = add nsw i32 %467, 4, !dbg !6025
  store i32 %add.i1239, i32* %inc.addr.i1237, align 4, !dbg !6025
  br label %coeff_abs_level_greater2_flag_decode.exit, !dbg !6026

coeff_abs_level_greater2_flag_decode.exit:        ; preds = %if.then634, %if.then.i1240
  %468 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1235, align 8, !dbg !6027
  %HEVClc.i1241 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %468, i32 0, i32 4, !dbg !6028
  %469 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i1241, align 8, !dbg !6028
  %cc.i1242 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %469, i32 0, i32 4, !dbg !6029
  %470 = load i32, i32* %inc.addr.i1237, align 4, !dbg !6030
  %add1.i1243 = add nsw i32 160, %470, !dbg !6031
  %idxprom.i1244 = sext i32 %add1.i1243 to i64, !dbg !6032
  %471 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1235, align 8, !dbg !6032
  %HEVClc2.i1245 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %471, i32 0, i32 4, !dbg !6033
  %472 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc2.i1245, align 8, !dbg !6033
  %cabac_state.i1246 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %472, i32 0, i32 0, !dbg !6034
  %arrayidx.i1247 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state.i1246, i64 0, i64 %idxprom.i1244, !dbg !6032
  %call.i1248 = call i32 @get_cabac(%struct.CABACContext* %cc.i1242, i8* %arrayidx.i1247) #5, !dbg !6035
  %473 = load i32, i32* %first_greater1_coeff_idx, align 4, !dbg !6036
  %idxprom636 = sext i32 %473 to i64, !dbg !6037
  %arrayidx637 = getelementptr inbounds [8 x i8], [8 x i8]* %coeff_abs_level_greater1_flag, i64 0, i64 %idxprom636, !dbg !6037
  %474 = load i8, i8* %arrayidx637, align 1, !dbg !6038
  %conv638 = zext i8 %474 to i32, !dbg !6038
  %add639 = add nsw i32 %conv638, %call.i1248, !dbg !6038
  %conv640 = trunc i32 %add639 to i8, !dbg !6038
  store i8 %conv640, i8* %arrayidx637, align 1, !dbg !6038
  br label %if.end641, !dbg !6039

if.end641:                                        ; preds = %coeff_abs_level_greater2_flag_decode.exit, %if.end631
  %475 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6040
  %ps642 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %475, i32 0, i32 15, !dbg !6041
  %pps643 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps642, i32 0, i32 5, !dbg !6042
  %476 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps643, align 8, !dbg !6042
  %sign_data_hiding_flag = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %476, i32 0, i32 1, !dbg !6043
  %477 = load i8, i8* %sign_data_hiding_flag, align 4, !dbg !6043
  %tobool644 = icmp ne i8 %477, 0, !dbg !6040
  br i1 %tobool644, label %lor.lhs.false645, label %if.then647, !dbg !6044

lor.lhs.false645:                                 ; preds = %if.end641
  %478 = load i32, i32* %sign_hidden, align 4, !dbg !6045
  %tobool646 = icmp ne i32 %478, 0, !dbg !6045
  br i1 %tobool646, label %if.else653, label %if.then647, !dbg !6047

if.then647:                                       ; preds = %lor.lhs.false645, %if.end641
  %479 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6048
  %480 = load i8, i8* %nb_significant_coeff_flag, align 1, !dbg !6049
  store %struct.HEVCContext* %479, %struct.HEVCContext** %s.addr.i1253, align 8, !dbg !6050
  store i8 %480, i8* %nb.addr.i, align 1, !dbg !6050
  store i32 0, i32* %ret.i, align 4, !dbg !4556
  store i32 0, i32* %i.i1254, align 4, !dbg !6051
  br label %for.cond.i1257, !dbg !6052

for.cond.i1257:                                   ; preds = %for.body.i1264, %if.then647
  %481 = load i32, i32* %i.i1254, align 4, !dbg !6053
  %482 = load i8, i8* %nb.addr.i, align 1, !dbg !6055
  %conv.i1255 = zext i8 %482 to i32, !dbg !6055
  %cmp.i1256 = icmp slt i32 %481, %conv.i1255, !dbg !6056
  br i1 %cmp.i1256, label %for.body.i1264, label %coeff_sign_flag_decode.exit, !dbg !6057

for.body.i1264:                                   ; preds = %for.cond.i1257
  %483 = load i32, i32* %ret.i, align 4, !dbg !6058
  %shl.i1258 = shl i32 %483, 1, !dbg !6059
  %484 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1253, align 8, !dbg !6060
  %HEVClc.i1259 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %484, i32 0, i32 4, !dbg !6061
  %485 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i1259, align 8, !dbg !6061
  %cc.i1260 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %485, i32 0, i32 4, !dbg !6062
  store %struct.CABACContext* %cc.i1260, %struct.CABACContext** %c.addr.i.i1250, align 8, !dbg !6063
  %486 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i.i1250, align 8, !dbg !6064
  %487 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %486, i64 0, i64 24, i64 32, i64 4) #5, !dbg !6065, !srcloc !3250
  %asmresult.i.i1261 = extractvalue { i32, i64 } %487, 0, !dbg !6065
  %asmresult2.i.i1262 = extractvalue { i32, i64 } %487, 1, !dbg !6065
  store i32 %asmresult.i.i1261, i32* %res.i.i1252, align 4, !dbg !6065
  store i64 %asmresult2.i.i1262, i64* %tmp.i.i1251, align 8, !dbg !6065
  %488 = load i32, i32* %res.i.i1252, align 4, !dbg !6066
  %or.i1263 = or i32 %shl.i1258, %488, !dbg !6067
  store i32 %or.i1263, i32* %ret.i, align 4, !dbg !6068
  %489 = load i32, i32* %i.i1254, align 4, !dbg !6069
  %inc.i1265 = add nsw i32 %489, 1, !dbg !6069
  store i32 %inc.i1265, i32* %i.i1254, align 4, !dbg !6069
  br label %for.cond.i1257, !dbg !6071, !llvm.loop !6072

coeff_sign_flag_decode.exit:                      ; preds = %for.cond.i1257
  %490 = load i32, i32* %ret.i, align 4, !dbg !6074
  %491 = load i8, i8* %nb_significant_coeff_flag, align 1, !dbg !6075
  %conv649 = zext i8 %491 to i32, !dbg !6075
  %sub650 = sub nsw i32 16, %conv649, !dbg !6076
  %shl651 = shl i32 %490, %sub650, !dbg !6077
  %conv652 = trunc i32 %shl651 to i16, !dbg !6050
  store i16 %conv652, i16* %coeff_sign_flag, align 2, !dbg !6078
  br label %if.end663, !dbg !6079

if.else653:                                       ; preds = %lor.lhs.false645
  %492 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6080
  %493 = load i8, i8* %nb_significant_coeff_flag, align 1, !dbg !6081
  %conv654 = zext i8 %493 to i32, !dbg !6081
  %sub655 = sub nsw i32 %conv654, 1, !dbg !6082
  %conv656 = trunc i32 %sub655 to i8, !dbg !6081
  store %struct.HEVCContext* %492, %struct.HEVCContext** %s.addr.i1269, align 8, !dbg !6083
  store i8 %conv656, i8* %nb.addr.i1270, align 1, !dbg !6083
  store i32 0, i32* %ret.i1272, align 4, !dbg !4546
  store i32 0, i32* %i.i1271, align 4, !dbg !6084
  br label %for.cond.i1275, !dbg !6085

for.cond.i1275:                                   ; preds = %for.body.i1282, %if.else653
  %494 = load i32, i32* %i.i1271, align 4, !dbg !6086
  %495 = load i8, i8* %nb.addr.i1270, align 1, !dbg !6087
  %conv.i1273 = zext i8 %495 to i32, !dbg !6087
  %cmp.i1274 = icmp slt i32 %494, %conv.i1273, !dbg !6088
  br i1 %cmp.i1274, label %for.body.i1282, label %coeff_sign_flag_decode.exit1284, !dbg !6089

for.body.i1282:                                   ; preds = %for.cond.i1275
  %496 = load i32, i32* %ret.i1272, align 4, !dbg !6090
  %shl.i1276 = shl i32 %496, 1, !dbg !6091
  %497 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1269, align 8, !dbg !6092
  %HEVClc.i1277 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %497, i32 0, i32 4, !dbg !6093
  %498 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i1277, align 8, !dbg !6093
  %cc.i1278 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %498, i32 0, i32 4, !dbg !6094
  store %struct.CABACContext* %cc.i1278, %struct.CABACContext** %c.addr.i.i1266, align 8, !dbg !6095
  %499 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i.i1266, align 8, !dbg !6096
  %500 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %499, i64 0, i64 24, i64 32, i64 4) #5, !dbg !6097, !srcloc !3250
  %asmresult.i.i1279 = extractvalue { i32, i64 } %500, 0, !dbg !6097
  %asmresult2.i.i1280 = extractvalue { i32, i64 } %500, 1, !dbg !6097
  store i32 %asmresult.i.i1279, i32* %res.i.i1268, align 4, !dbg !6097
  store i64 %asmresult2.i.i1280, i64* %tmp.i.i1267, align 8, !dbg !6097
  %501 = load i32, i32* %res.i.i1268, align 4, !dbg !6098
  %or.i1281 = or i32 %shl.i1276, %501, !dbg !6099
  store i32 %or.i1281, i32* %ret.i1272, align 4, !dbg !6100
  %502 = load i32, i32* %i.i1271, align 4, !dbg !6101
  %inc.i1283 = add nsw i32 %502, 1, !dbg !6101
  store i32 %inc.i1283, i32* %i.i1271, align 4, !dbg !6101
  br label %for.cond.i1275, !dbg !6102, !llvm.loop !6072

coeff_sign_flag_decode.exit1284:                  ; preds = %for.cond.i1275
  %503 = load i32, i32* %ret.i1272, align 4, !dbg !6103
  %504 = load i8, i8* %nb_significant_coeff_flag, align 1, !dbg !6104
  %conv658 = zext i8 %504 to i32, !dbg !6104
  %sub659 = sub nsw i32 %conv658, 1, !dbg !6105
  %sub660 = sub nsw i32 16, %sub659, !dbg !6106
  %shl661 = shl i32 %503, %sub660, !dbg !6107
  %conv662 = trunc i32 %shl661 to i16, !dbg !6083
  store i16 %conv662, i16* %coeff_sign_flag, align 2, !dbg !6108
  br label %if.end663

if.end663:                                        ; preds = %coeff_sign_flag_decode.exit1284, %coeff_sign_flag_decode.exit
  store i32 0, i32* %m, align 4, !dbg !6109
  br label %for.cond664, !dbg !6110

for.cond664:                                      ; preds = %for.inc938, %if.end663
  %505 = load i32, i32* %m, align 4, !dbg !6111
  %506 = load i32, i32* %n_end, align 4, !dbg !6113
  %cmp665 = icmp slt i32 %505, %506, !dbg !6114
  br i1 %cmp665, label %for.body667, label %for.end940, !dbg !6115

for.body667:                                      ; preds = %for.cond664
  %507 = load i32, i32* %m, align 4, !dbg !6116
  %idxprom668 = sext i32 %507 to i64, !dbg !6117
  %arrayidx669 = getelementptr inbounds [16 x i8], [16 x i8]* %significant_coeff_flag_idx, i64 0, i64 %idxprom668, !dbg !6117
  %508 = load i8, i8* %arrayidx669, align 1, !dbg !6117
  %conv670 = zext i8 %508 to i32, !dbg !6117
  store i32 %conv670, i32* %n, align 4, !dbg !6118
  br label %do.body671, !dbg !6119, !llvm.loop !6120

do.body671:                                       ; preds = %for.body667
  %509 = load i32, i32* %x_cg, align 4, !dbg !6121
  %shl672 = shl i32 %509, 2, !dbg !6124
  %510 = load i32, i32* %n, align 4, !dbg !6125
  %idxprom673 = sext i32 %510 to i64, !dbg !6126
  %511 = load i8*, i8** %scan_x_off, align 8, !dbg !6126
  %arrayidx674 = getelementptr inbounds i8, i8* %511, i64 %idxprom673, !dbg !6126
  %512 = load i8, i8* %arrayidx674, align 1, !dbg !6126
  %conv675 = zext i8 %512 to i32, !dbg !6126
  %add676 = add nsw i32 %shl672, %conv675, !dbg !6127
  store i32 %add676, i32* %x_c, align 4, !dbg !6128
  %513 = load i32, i32* %y_cg, align 4, !dbg !6129
  %shl677 = shl i32 %513, 2, !dbg !6130
  %514 = load i32, i32* %n, align 4, !dbg !6131
  %idxprom678 = sext i32 %514 to i64, !dbg !6132
  %515 = load i8*, i8** %scan_y_off, align 8, !dbg !6132
  %arrayidx679 = getelementptr inbounds i8, i8* %515, i64 %idxprom678, !dbg !6132
  %516 = load i8, i8* %arrayidx679, align 1, !dbg !6132
  %conv680 = zext i8 %516 to i32, !dbg !6132
  %add681 = add nsw i32 %shl677, %conv680, !dbg !6133
  store i32 %add681, i32* %y_c, align 4, !dbg !6134
  br label %do.end682, !dbg !6135

do.end682:                                        ; preds = %do.body671
  %517 = load i32, i32* %m, align 4, !dbg !6136
  %cmp683 = icmp slt i32 %517, 8, !dbg !6137
  br i1 %cmp683, label %if.then685, label %if.else766, !dbg !6138

if.then685:                                       ; preds = %do.end682
  %518 = load i32, i32* %m, align 4, !dbg !6139
  %idxprom686 = sext i32 %518 to i64, !dbg !6140
  %arrayidx687 = getelementptr inbounds [8 x i8], [8 x i8]* %coeff_abs_level_greater1_flag, i64 0, i64 %idxprom686, !dbg !6140
  %519 = load i8, i8* %arrayidx687, align 1, !dbg !6140
  %conv688 = zext i8 %519 to i32, !dbg !6140
  %add689 = add nsw i32 1, %conv688, !dbg !6141
  %conv690 = sext i32 %add689 to i64, !dbg !6142
  store i64 %conv690, i64* %trans_coeff_level, align 8, !dbg !6143
  %520 = load i64, i64* %trans_coeff_level, align 8, !dbg !6144
  %521 = load i32, i32* %m, align 4, !dbg !6145
  %522 = load i32, i32* %first_greater1_coeff_idx, align 4, !dbg !6146
  %cmp691 = icmp eq i32 %521, %522, !dbg !6147
  %cond693 = select i1 %cmp691, i32 3, i32 2, !dbg !6148
  %conv694 = sext i32 %cond693 to i64, !dbg !6149
  %cmp695 = icmp eq i64 %520, %conv694, !dbg !6150
  br i1 %cmp695, label %if.then697, label %if.end765, !dbg !6151

if.then697:                                       ; preds = %if.then685
  call void @llvm.dbg.declare(metadata i32* %last_coeff_abs_level_remaining, metadata !6152, metadata !2708), !dbg !6153
  %523 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6154
  %524 = load i32, i32* %c_rice_param, align 4, !dbg !6155
  store %struct.HEVCContext* %523, %struct.HEVCContext** %s.addr.i1289, align 8, !dbg !6156
  store i32 %524, i32* %rc_rice_param.addr.i, align 4, !dbg !6156
  store i32 0, i32* %prefix.i, align 4, !dbg !4522
  store i32 0, i32* %suffix.i, align 4, !dbg !4523
  br label %while.cond.i1292, !dbg !6157

while.cond.i1292:                                 ; preds = %while.body.i1301, %if.then697
  %525 = load i32, i32* %prefix.i, align 4, !dbg !6158
  %cmp.i1291 = icmp slt i32 %525, 31, !dbg !6160
  br i1 %cmp.i1291, label %land.rhs.i1298, label %land.end.i1299, !dbg !6161

land.rhs.i1298:                                   ; preds = %while.cond.i1292
  %526 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1289, align 8, !dbg !6162
  %HEVClc.i1293 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %526, i32 0, i32 4, !dbg !6163
  %527 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i1293, align 8, !dbg !6163
  %cc.i1294 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %527, i32 0, i32 4, !dbg !6164
  store %struct.CABACContext* %cc.i1294, %struct.CABACContext** %c.addr.i.i1285, align 8, !dbg !6165
  %528 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i.i1285, align 8, !dbg !6166
  %529 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %528, i64 0, i64 24, i64 32, i64 4) #5, !dbg !6167, !srcloc !3250
  %asmresult.i.i1295 = extractvalue { i32, i64 } %529, 0, !dbg !6167
  %asmresult2.i.i1296 = extractvalue { i32, i64 } %529, 1, !dbg !6167
  store i32 %asmresult.i.i1295, i32* %res.i.i1287, align 4, !dbg !6167
  store i64 %asmresult2.i.i1296, i64* %tmp.i.i1286, align 8, !dbg !6167
  %530 = load i32, i32* %res.i.i1287, align 4, !dbg !6168
  %tobool.i1297 = icmp ne i32 %530, 0, !dbg !6169
  br label %land.end.i1299, !dbg !6156

land.end.i1299:                                   ; preds = %land.rhs.i1298, %while.cond.i1292
  %531 = phi i1 [ false, %while.cond.i1292 ], [ %tobool.i1297, %land.rhs.i1298 ], !dbg !6156
  br i1 %531, label %while.body.i1301, label %while.end.i1303, !dbg !6170

while.body.i1301:                                 ; preds = %land.end.i1299
  %532 = load i32, i32* %prefix.i, align 4, !dbg !6172
  %inc.i1300 = add nsw i32 %532, 1, !dbg !6172
  store i32 %inc.i1300, i32* %prefix.i, align 4, !dbg !6172
  br label %while.cond.i1292, !dbg !6173, !llvm.loop !6175

while.end.i1303:                                  ; preds = %land.end.i1299
  %533 = load i32, i32* %prefix.i, align 4, !dbg !6177
  %cmp1.i1302 = icmp slt i32 %533, 3, !dbg !6178
  br i1 %cmp1.i1302, label %if.then.i1304, label %if.else.i1311, !dbg !6179

if.then.i1304:                                    ; preds = %while.end.i1303
  store i32 0, i32* %i.i1290, align 4, !dbg !6180
  br label %for.cond.i1305, !dbg !6181

for.cond.i1305:                                   ; preds = %for.body.i1308, %if.then.i1304
  %534 = load i32, i32* %i.i1290, align 4, !dbg !6182
  %535 = load i32, i32* %rc_rice_param.addr.i, align 4, !dbg !6184
  %cmp2.i = icmp slt i32 %534, %535, !dbg !6185
  br i1 %cmp2.i, label %for.body.i1308, label %for.end.i, !dbg !6186

for.body.i1308:                                   ; preds = %for.cond.i1305
  %536 = load i32, i32* %suffix.i, align 4, !dbg !6187
  %shl.i1306 = shl i32 %536, 1, !dbg !6188
  %537 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1289, align 8, !dbg !6189
  %HEVClc3.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %537, i32 0, i32 4, !dbg !6190
  %538 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc3.i, align 8, !dbg !6190
  %cc4.i = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %538, i32 0, i32 4, !dbg !6191
  store %struct.CABACContext* %cc4.i, %struct.CABACContext** %c.addr.i30.i, align 8, !dbg !6192
  %539 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i30.i, align 8, !dbg !6193
  %540 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %539, i64 0, i64 24, i64 32, i64 4) #5, !dbg !6194, !srcloc !3250
  %asmresult.i33.i = extractvalue { i32, i64 } %540, 0, !dbg !6194
  %asmresult2.i34.i = extractvalue { i32, i64 } %540, 1, !dbg !6194
  store i32 %asmresult.i33.i, i32* %res.i32.i, align 4, !dbg !6194
  store i64 %asmresult2.i34.i, i64* %tmp.i31.i, align 8, !dbg !6194
  %541 = load i32, i32* %res.i32.i, align 4, !dbg !6195
  %or.i1307 = or i32 %shl.i1306, %541, !dbg !6196
  store i32 %or.i1307, i32* %suffix.i, align 4, !dbg !6197
  %542 = load i32, i32* %i.i1290, align 4, !dbg !6198
  %inc6.i = add nsw i32 %542, 1, !dbg !6198
  store i32 %inc6.i, i32* %i.i1290, align 4, !dbg !6198
  br label %for.cond.i1305, !dbg !6200, !llvm.loop !6201

for.end.i:                                        ; preds = %for.cond.i1305
  %543 = load i32, i32* %prefix.i, align 4, !dbg !6203
  %544 = load i32, i32* %rc_rice_param.addr.i, align 4, !dbg !6204
  %shl7.i = shl i32 %543, %544, !dbg !6205
  %545 = load i32, i32* %suffix.i, align 4, !dbg !6206
  %add.i1309 = add nsw i32 %shl7.i, %545, !dbg !6207
  store i32 %add.i1309, i32* %last_coeff_abs_level_remaining.i, align 4, !dbg !6208
  br label %if.end29.i, !dbg !6209

if.else.i1311:                                    ; preds = %while.end.i1303
  %546 = load i32, i32* %prefix.i, align 4, !dbg !6210
  %sub.i1310 = sub nsw i32 %546, 3, !dbg !6211
  store i32 %sub.i1310, i32* %prefix_minus3.i, align 4, !dbg !4526
  %547 = load i32, i32* %prefix.i, align 4, !dbg !6212
  %cmp8.i = icmp eq i32 %547, 31, !dbg !6214
  br i1 %cmp8.i, label %if.then11.i, label %lor.lhs.false.i, !dbg !6215

lor.lhs.false.i:                                  ; preds = %if.else.i1311
  %548 = load i32, i32* %prefix_minus3.i, align 4, !dbg !6216
  %549 = load i32, i32* %rc_rice_param.addr.i, align 4, !dbg !6218
  %add9.i = add nsw i32 %548, %549, !dbg !6219
  %cmp10.i = icmp sge i32 %add9.i, 31, !dbg !6220
  br i1 %cmp10.i, label %if.then11.i, label %if.end.i1312, !dbg !6221

if.then11.i:                                      ; preds = %lor.lhs.false.i, %if.else.i1311
  %550 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1289, align 8, !dbg !6222
  %avctx.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %550, i32 0, i32 1, !dbg !6224
  %551 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.i, align 8, !dbg !6224
  %552 = bitcast %struct.AVCodecContext* %551 to i8*, !dbg !6222
  %553 = load i32, i32* %prefix.i, align 4, !dbg !6225
  call void (i8*, i32, i8*, ...) @av_log(i8* %552, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i32 %553) #5, !dbg !6226
  store i32 0, i32* %retval.i1288, align 4, !dbg !6227
  br label %coeff_abs_level_remaining_decode.exit, !dbg !6227

if.end.i1312:                                     ; preds = %lor.lhs.false.i
  store i32 0, i32* %i.i1290, align 4, !dbg !6228
  br label %for.cond12.i, !dbg !6229

for.cond12.i:                                     ; preds = %for.body15.i, %if.end.i1312
  %554 = load i32, i32* %i.i1290, align 4, !dbg !6230
  %555 = load i32, i32* %prefix_minus3.i, align 4, !dbg !6232
  %556 = load i32, i32* %rc_rice_param.addr.i, align 4, !dbg !6233
  %add13.i = add nsw i32 %555, %556, !dbg !6234
  %cmp14.i = icmp slt i32 %554, %add13.i, !dbg !6235
  br i1 %cmp14.i, label %for.body15.i, label %for.end23.i, !dbg !6236

for.body15.i:                                     ; preds = %for.cond12.i
  %557 = load i32, i32* %suffix.i, align 4, !dbg !6237
  %shl16.i = shl i32 %557, 1, !dbg !6238
  %558 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1289, align 8, !dbg !6239
  %HEVClc17.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %558, i32 0, i32 4, !dbg !6240
  %559 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc17.i, align 8, !dbg !6240
  %cc18.i = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %559, i32 0, i32 4, !dbg !6241
  store %struct.CABACContext* %cc18.i, %struct.CABACContext** %c.addr.i35.i, align 8, !dbg !6242
  %560 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i35.i, align 8, !dbg !6243
  %561 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %560, i64 0, i64 24, i64 32, i64 4) #5, !dbg !6244, !srcloc !3250
  %asmresult.i38.i = extractvalue { i32, i64 } %561, 0, !dbg !6244
  %asmresult2.i39.i = extractvalue { i32, i64 } %561, 1, !dbg !6244
  store i32 %asmresult.i38.i, i32* %res.i37.i, align 4, !dbg !6244
  store i64 %asmresult2.i39.i, i64* %tmp.i36.i, align 8, !dbg !6244
  %562 = load i32, i32* %res.i37.i, align 4, !dbg !6245
  %or20.i = or i32 %shl16.i, %562, !dbg !6246
  store i32 %or20.i, i32* %suffix.i, align 4, !dbg !6247
  %563 = load i32, i32* %i.i1290, align 4, !dbg !6248
  %inc22.i = add nsw i32 %563, 1, !dbg !6248
  store i32 %inc22.i, i32* %i.i1290, align 4, !dbg !6248
  br label %for.cond12.i, !dbg !6250, !llvm.loop !6251

for.end23.i:                                      ; preds = %for.cond12.i
  %564 = load i32, i32* %prefix_minus3.i, align 4, !dbg !6253
  %shl24.i = shl i32 1, %564, !dbg !6254
  %add25.i = add nsw i32 %shl24.i, 3, !dbg !6255
  %sub26.i = sub nsw i32 %add25.i, 1, !dbg !6256
  %565 = load i32, i32* %rc_rice_param.addr.i, align 4, !dbg !6257
  %shl27.i = shl i32 %sub26.i, %565, !dbg !6258
  %566 = load i32, i32* %suffix.i, align 4, !dbg !6259
  %add28.i = add nsw i32 %shl27.i, %566, !dbg !6260
  store i32 %add28.i, i32* %last_coeff_abs_level_remaining.i, align 4, !dbg !6261
  br label %if.end29.i, !dbg !6156

if.end29.i:                                       ; preds = %for.end23.i, %for.end.i
  %567 = load i32, i32* %last_coeff_abs_level_remaining.i, align 4, !dbg !6262
  store i32 %567, i32* %retval.i1288, align 4, !dbg !6263
  br label %coeff_abs_level_remaining_decode.exit, !dbg !6263

coeff_abs_level_remaining_decode.exit:            ; preds = %if.then11.i, %if.end29.i
  %568 = load i32, i32* %retval.i1288, align 4, !dbg !6264
  store i32 %568, i32* %last_coeff_abs_level_remaining, align 4, !dbg !6153
  %569 = load i32, i32* %last_coeff_abs_level_remaining, align 4, !dbg !6265
  %conv699 = sext i32 %569 to i64, !dbg !6265
  %570 = load i64, i64* %trans_coeff_level, align 8, !dbg !6266
  %add700 = add nsw i64 %570, %conv699, !dbg !6266
  store i64 %add700, i64* %trans_coeff_level, align 8, !dbg !6266
  %571 = load i64, i64* %trans_coeff_level, align 8, !dbg !6267
  %572 = load i32, i32* %c_rice_param, align 4, !dbg !6269
  %shl701 = shl i32 3, %572, !dbg !6270
  %conv702 = sext i32 %shl701 to i64, !dbg !6271
  %cmp703 = icmp sgt i64 %571, %conv702, !dbg !6272
  br i1 %cmp703, label %if.then705, label %if.end723, !dbg !6273

if.then705:                                       ; preds = %coeff_abs_level_remaining_decode.exit
  %573 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6274
  %ps706 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %573, i32 0, i32 15, !dbg !6275
  %sps707 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps706, i32 0, i32 4, !dbg !6276
  %574 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps707, align 8, !dbg !6276
  %persistent_rice_adaptation_enabled_flag708 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %574, i32 0, i32 45, !dbg !6277
  %575 = load i32, i32* %persistent_rice_adaptation_enabled_flag708, align 4, !dbg !6277
  %tobool709 = icmp ne i32 %575, 0, !dbg !6274
  br i1 %tobool709, label %cond.true710, label %cond.false712, !dbg !6274

cond.true710:                                     ; preds = %if.then705
  %576 = load i32, i32* %c_rice_param, align 4, !dbg !6278
  %add711 = add nsw i32 %576, 1, !dbg !6280
  br label %cond.end721, !dbg !6281

cond.false712:                                    ; preds = %if.then705
  %577 = load i32, i32* %c_rice_param, align 4, !dbg !6282
  %add713 = add nsw i32 %577, 1, !dbg !6284
  %cmp714 = icmp sgt i32 %add713, 4, !dbg !6285
  br i1 %cmp714, label %cond.true716, label %cond.false717, !dbg !6286

cond.true716:                                     ; preds = %cond.false712
  br label %cond.end719, !dbg !6287

cond.false717:                                    ; preds = %cond.false712
  %578 = load i32, i32* %c_rice_param, align 4, !dbg !6289
  %add718 = add nsw i32 %578, 1, !dbg !6291
  br label %cond.end719, !dbg !6292

cond.end719:                                      ; preds = %cond.false717, %cond.true716
  %cond720 = phi i32 [ 4, %cond.true716 ], [ %add718, %cond.false717 ], !dbg !6293
  br label %cond.end721, !dbg !6295

cond.end721:                                      ; preds = %cond.end719, %cond.true710
  %cond722 = phi i32 [ %add711, %cond.true710 ], [ %cond720, %cond.end719 ], !dbg !6296
  store i32 %cond722, i32* %c_rice_param, align 4, !dbg !6298
  br label %if.end723, !dbg !6299

if.end723:                                        ; preds = %cond.end721, %coeff_abs_level_remaining_decode.exit
  %579 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6300
  %ps724 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %579, i32 0, i32 15, !dbg !6302
  %sps725 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps724, i32 0, i32 4, !dbg !6303
  %580 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps725, align 8, !dbg !6303
  %persistent_rice_adaptation_enabled_flag726 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %580, i32 0, i32 45, !dbg !6304
  %581 = load i32, i32* %persistent_rice_adaptation_enabled_flag726, align 4, !dbg !6304
  %tobool727 = icmp ne i32 %581, 0, !dbg !6300
  br i1 %tobool727, label %land.lhs.true728, label %if.end764, !dbg !6305

land.lhs.true728:                                 ; preds = %if.end723
  %582 = load i32, i32* %rice_init, align 4, !dbg !6306
  %tobool729 = icmp ne i32 %582, 0, !dbg !6306
  br i1 %tobool729, label %if.end764, label %if.then730, !dbg !6308

if.then730:                                       ; preds = %land.lhs.true728
  call void @llvm.dbg.declare(metadata i32* %c_rice_p_init, metadata !6309, metadata !2708), !dbg !6311
  %583 = load i32, i32* %sb_type, align 4, !dbg !6312
  %idxprom731 = sext i32 %583 to i64, !dbg !6313
  %584 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6313
  %stat_coeff732 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %584, i32 0, i32 1, !dbg !6314
  %arrayidx733 = getelementptr inbounds [4 x i8], [4 x i8]* %stat_coeff732, i64 0, i64 %idxprom731, !dbg !6313
  %585 = load i8, i8* %arrayidx733, align 1, !dbg !6313
  %conv734 = zext i8 %585 to i32, !dbg !6313
  %div735 = sdiv i32 %conv734, 4, !dbg !6315
  store i32 %div735, i32* %c_rice_p_init, align 4, !dbg !6311
  %586 = load i32, i32* %last_coeff_abs_level_remaining, align 4, !dbg !6316
  %587 = load i32, i32* %c_rice_p_init, align 4, !dbg !6318
  %shl736 = shl i32 3, %587, !dbg !6319
  %cmp737 = icmp sge i32 %586, %shl736, !dbg !6320
  br i1 %cmp737, label %if.then739, label %if.else744, !dbg !6321

if.then739:                                       ; preds = %if.then730
  %588 = load i32, i32* %sb_type, align 4, !dbg !6322
  %idxprom740 = sext i32 %588 to i64, !dbg !6323
  %589 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6323
  %stat_coeff741 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %589, i32 0, i32 1, !dbg !6324
  %arrayidx742 = getelementptr inbounds [4 x i8], [4 x i8]* %stat_coeff741, i64 0, i64 %idxprom740, !dbg !6323
  %590 = load i8, i8* %arrayidx742, align 1, !dbg !6325
  %inc743 = add i8 %590, 1, !dbg !6325
  store i8 %inc743, i8* %arrayidx742, align 1, !dbg !6325
  br label %if.end763, !dbg !6323

if.else744:                                       ; preds = %if.then730
  %591 = load i32, i32* %last_coeff_abs_level_remaining, align 4, !dbg !6326
  %mul745 = mul nsw i32 2, %591, !dbg !6328
  %592 = load i32, i32* %c_rice_p_init, align 4, !dbg !6329
  %shl746 = shl i32 1, %592, !dbg !6330
  %cmp747 = icmp slt i32 %mul745, %shl746, !dbg !6331
  br i1 %cmp747, label %if.then749, label %if.end762, !dbg !6332

if.then749:                                       ; preds = %if.else744
  %593 = load i32, i32* %sb_type, align 4, !dbg !6333
  %idxprom750 = sext i32 %593 to i64, !dbg !6335
  %594 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6335
  %stat_coeff751 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %594, i32 0, i32 1, !dbg !6336
  %arrayidx752 = getelementptr inbounds [4 x i8], [4 x i8]* %stat_coeff751, i64 0, i64 %idxprom750, !dbg !6335
  %595 = load i8, i8* %arrayidx752, align 1, !dbg !6335
  %conv753 = zext i8 %595 to i32, !dbg !6335
  %cmp754 = icmp sgt i32 %conv753, 0, !dbg !6337
  br i1 %cmp754, label %if.then756, label %if.end761, !dbg !6338

if.then756:                                       ; preds = %if.then749
  %596 = load i32, i32* %sb_type, align 4, !dbg !6339
  %idxprom757 = sext i32 %596 to i64, !dbg !6340
  %597 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6340
  %stat_coeff758 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %597, i32 0, i32 1, !dbg !6341
  %arrayidx759 = getelementptr inbounds [4 x i8], [4 x i8]* %stat_coeff758, i64 0, i64 %idxprom757, !dbg !6340
  %598 = load i8, i8* %arrayidx759, align 1, !dbg !6342
  %dec760 = add i8 %598, -1, !dbg !6342
  store i8 %dec760, i8* %arrayidx759, align 1, !dbg !6342
  br label %if.end761, !dbg !6340

if.end761:                                        ; preds = %if.then756, %if.then749
  br label %if.end762, !dbg !6343

if.end762:                                        ; preds = %if.end761, %if.else744
  br label %if.end763

if.end763:                                        ; preds = %if.end762, %if.then739
  store i32 1, i32* %rice_init, align 4, !dbg !6345
  br label %if.end764, !dbg !6346

if.end764:                                        ; preds = %if.end763, %land.lhs.true728, %if.end723
  br label %if.end765, !dbg !6347

if.end765:                                        ; preds = %if.end764, %if.then685
  br label %if.end836, !dbg !6348

if.else766:                                       ; preds = %do.end682
  call void @llvm.dbg.declare(metadata i32* %last_coeff_abs_level_remaining767, metadata !6349, metadata !2708), !dbg !6350
  %599 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6351
  %600 = load i32, i32* %c_rice_param, align 4, !dbg !6352
  store %struct.HEVCContext* %599, %struct.HEVCContext** %s.addr.i1323, align 8, !dbg !6353
  store i32 %600, i32* %rc_rice_param.addr.i1324, align 4, !dbg !6353
  store i32 0, i32* %prefix.i1325, align 4, !dbg !4495
  store i32 0, i32* %suffix.i1326, align 4, !dbg !4497
  br label %while.cond.i1331, !dbg !6354

while.cond.i1331:                                 ; preds = %while.body.i1340, %if.else766
  %601 = load i32, i32* %prefix.i1325, align 4, !dbg !6355
  %cmp.i1330 = icmp slt i32 %601, 31, !dbg !6356
  br i1 %cmp.i1330, label %land.rhs.i1337, label %land.end.i1338, !dbg !6357

land.rhs.i1337:                                   ; preds = %while.cond.i1331
  %602 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1323, align 8, !dbg !6358
  %HEVClc.i1332 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %602, i32 0, i32 4, !dbg !6359
  %603 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i1332, align 8, !dbg !6359
  %cc.i1333 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %603, i32 0, i32 4, !dbg !6360
  store %struct.CABACContext* %cc.i1333, %struct.CABACContext** %c.addr.i.i1319, align 8, !dbg !6361
  %604 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i.i1319, align 8, !dbg !6362
  %605 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %604, i64 0, i64 24, i64 32, i64 4) #5, !dbg !6363, !srcloc !3250
  %asmresult.i.i1334 = extractvalue { i32, i64 } %605, 0, !dbg !6363
  %asmresult2.i.i1335 = extractvalue { i32, i64 } %605, 1, !dbg !6363
  store i32 %asmresult.i.i1334, i32* %res.i.i1321, align 4, !dbg !6363
  store i64 %asmresult2.i.i1335, i64* %tmp.i.i1320, align 8, !dbg !6363
  %606 = load i32, i32* %res.i.i1321, align 4, !dbg !6364
  %tobool.i1336 = icmp ne i32 %606, 0, !dbg !6365
  br label %land.end.i1338, !dbg !6353

land.end.i1338:                                   ; preds = %land.rhs.i1337, %while.cond.i1331
  %607 = phi i1 [ false, %while.cond.i1331 ], [ %tobool.i1336, %land.rhs.i1337 ], !dbg !6353
  br i1 %607, label %while.body.i1340, label %while.end.i1342, !dbg !6366

while.body.i1340:                                 ; preds = %land.end.i1338
  %608 = load i32, i32* %prefix.i1325, align 4, !dbg !6367
  %inc.i1339 = add nsw i32 %608, 1, !dbg !6367
  store i32 %inc.i1339, i32* %prefix.i1325, align 4, !dbg !6367
  br label %while.cond.i1331, !dbg !6368, !llvm.loop !6175

while.end.i1342:                                  ; preds = %land.end.i1338
  %609 = load i32, i32* %prefix.i1325, align 4, !dbg !6369
  %cmp1.i1341 = icmp slt i32 %609, 3, !dbg !6370
  br i1 %cmp1.i1341, label %if.then.i1343, label %if.else.i1359, !dbg !6371

if.then.i1343:                                    ; preds = %while.end.i1342
  store i32 0, i32* %i.i1328, align 4, !dbg !6372
  br label %for.cond.i1345, !dbg !6373

for.cond.i1345:                                   ; preds = %for.body.i1352, %if.then.i1343
  %610 = load i32, i32* %i.i1328, align 4, !dbg !6374
  %611 = load i32, i32* %rc_rice_param.addr.i1324, align 4, !dbg !6375
  %cmp2.i1344 = icmp slt i32 %610, %611, !dbg !6376
  br i1 %cmp2.i1344, label %for.body.i1352, label %for.end.i1356, !dbg !6377

for.body.i1352:                                   ; preds = %for.cond.i1345
  %612 = load i32, i32* %suffix.i1326, align 4, !dbg !6378
  %shl.i1346 = shl i32 %612, 1, !dbg !6379
  %613 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1323, align 8, !dbg !6380
  %HEVClc3.i1347 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %613, i32 0, i32 4, !dbg !6381
  %614 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc3.i1347, align 8, !dbg !6381
  %cc4.i1348 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %614, i32 0, i32 4, !dbg !6382
  store %struct.CABACContext* %cc4.i1348, %struct.CABACContext** %c.addr.i30.i1316, align 8, !dbg !6383
  %615 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i30.i1316, align 8, !dbg !6384
  %616 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %615, i64 0, i64 24, i64 32, i64 4) #5, !dbg !6385, !srcloc !3250
  %asmresult.i33.i1349 = extractvalue { i32, i64 } %616, 0, !dbg !6385
  %asmresult2.i34.i1350 = extractvalue { i32, i64 } %616, 1, !dbg !6385
  store i32 %asmresult.i33.i1349, i32* %res.i32.i1318, align 4, !dbg !6385
  store i64 %asmresult2.i34.i1350, i64* %tmp.i31.i1317, align 8, !dbg !6385
  %617 = load i32, i32* %res.i32.i1318, align 4, !dbg !6386
  %or.i1351 = or i32 %shl.i1346, %617, !dbg !6387
  store i32 %or.i1351, i32* %suffix.i1326, align 4, !dbg !6388
  %618 = load i32, i32* %i.i1328, align 4, !dbg !6389
  %inc6.i1353 = add nsw i32 %618, 1, !dbg !6389
  store i32 %inc6.i1353, i32* %i.i1328, align 4, !dbg !6389
  br label %for.cond.i1345, !dbg !6390, !llvm.loop !6201

for.end.i1356:                                    ; preds = %for.cond.i1345
  %619 = load i32, i32* %prefix.i1325, align 4, !dbg !6391
  %620 = load i32, i32* %rc_rice_param.addr.i1324, align 4, !dbg !6392
  %shl7.i1354 = shl i32 %619, %620, !dbg !6393
  %621 = load i32, i32* %suffix.i1326, align 4, !dbg !6394
  %add.i1355 = add nsw i32 %shl7.i1354, %621, !dbg !6395
  store i32 %add.i1355, i32* %last_coeff_abs_level_remaining.i1327, align 4, !dbg !6396
  br label %if.end29.i1383, !dbg !6397

if.else.i1359:                                    ; preds = %while.end.i1342
  %622 = load i32, i32* %prefix.i1325, align 4, !dbg !6398
  %sub.i1357 = sub nsw i32 %622, 3, !dbg !6399
  store i32 %sub.i1357, i32* %prefix_minus3.i1329, align 4, !dbg !4503
  %623 = load i32, i32* %prefix.i1325, align 4, !dbg !6400
  %cmp8.i1358 = icmp eq i32 %623, 31, !dbg !6401
  br i1 %cmp8.i1358, label %if.then11.i1364, label %lor.lhs.false.i1362, !dbg !6402

lor.lhs.false.i1362:                              ; preds = %if.else.i1359
  %624 = load i32, i32* %prefix_minus3.i1329, align 4, !dbg !6403
  %625 = load i32, i32* %rc_rice_param.addr.i1324, align 4, !dbg !6404
  %add9.i1360 = add nsw i32 %624, %625, !dbg !6405
  %cmp10.i1361 = icmp sge i32 %add9.i1360, 31, !dbg !6406
  br i1 %cmp10.i1361, label %if.then11.i1364, label %if.end.i1365, !dbg !6407

if.then11.i1364:                                  ; preds = %lor.lhs.false.i1362, %if.else.i1359
  %626 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1323, align 8, !dbg !6408
  %avctx.i1363 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %626, i32 0, i32 1, !dbg !6409
  %627 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.i1363, align 8, !dbg !6409
  %628 = bitcast %struct.AVCodecContext* %627 to i8*, !dbg !6408
  %629 = load i32, i32* %prefix.i1325, align 4, !dbg !6410
  call void (i8*, i32, i8*, ...) @av_log(i8* %628, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i32 %629) #5, !dbg !6411
  store i32 0, i32* %retval.i1322, align 4, !dbg !6412
  br label %coeff_abs_level_remaining_decode.exit1384, !dbg !6412

if.end.i1365:                                     ; preds = %lor.lhs.false.i1362
  store i32 0, i32* %i.i1328, align 4, !dbg !6413
  br label %for.cond12.i1368, !dbg !6414

for.cond12.i1368:                                 ; preds = %for.body15.i1375, %if.end.i1365
  %630 = load i32, i32* %i.i1328, align 4, !dbg !6415
  %631 = load i32, i32* %prefix_minus3.i1329, align 4, !dbg !6416
  %632 = load i32, i32* %rc_rice_param.addr.i1324, align 4, !dbg !6417
  %add13.i1366 = add nsw i32 %631, %632, !dbg !6418
  %cmp14.i1367 = icmp slt i32 %630, %add13.i1366, !dbg !6419
  br i1 %cmp14.i1367, label %for.body15.i1375, label %for.end23.i1382, !dbg !6420

for.body15.i1375:                                 ; preds = %for.cond12.i1368
  %633 = load i32, i32* %suffix.i1326, align 4, !dbg !6421
  %shl16.i1369 = shl i32 %633, 1, !dbg !6422
  %634 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i1323, align 8, !dbg !6423
  %HEVClc17.i1370 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %634, i32 0, i32 4, !dbg !6424
  %635 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc17.i1370, align 8, !dbg !6424
  %cc18.i1371 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %635, i32 0, i32 4, !dbg !6425
  store %struct.CABACContext* %cc18.i1371, %struct.CABACContext** %c.addr.i35.i1313, align 8, !dbg !6426
  %636 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i35.i1313, align 8, !dbg !6427
  %637 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %636, i64 0, i64 24, i64 32, i64 4) #5, !dbg !6428, !srcloc !3250
  %asmresult.i38.i1372 = extractvalue { i32, i64 } %637, 0, !dbg !6428
  %asmresult2.i39.i1373 = extractvalue { i32, i64 } %637, 1, !dbg !6428
  store i32 %asmresult.i38.i1372, i32* %res.i37.i1315, align 4, !dbg !6428
  store i64 %asmresult2.i39.i1373, i64* %tmp.i36.i1314, align 8, !dbg !6428
  %638 = load i32, i32* %res.i37.i1315, align 4, !dbg !6429
  %or20.i1374 = or i32 %shl16.i1369, %638, !dbg !6430
  store i32 %or20.i1374, i32* %suffix.i1326, align 4, !dbg !6431
  %639 = load i32, i32* %i.i1328, align 4, !dbg !6432
  %inc22.i1376 = add nsw i32 %639, 1, !dbg !6432
  store i32 %inc22.i1376, i32* %i.i1328, align 4, !dbg !6432
  br label %for.cond12.i1368, !dbg !6433, !llvm.loop !6251

for.end23.i1382:                                  ; preds = %for.cond12.i1368
  %640 = load i32, i32* %prefix_minus3.i1329, align 4, !dbg !6434
  %shl24.i1377 = shl i32 1, %640, !dbg !6435
  %add25.i1378 = add nsw i32 %shl24.i1377, 3, !dbg !6436
  %sub26.i1379 = sub nsw i32 %add25.i1378, 1, !dbg !6437
  %641 = load i32, i32* %rc_rice_param.addr.i1324, align 4, !dbg !6438
  %shl27.i1380 = shl i32 %sub26.i1379, %641, !dbg !6439
  %642 = load i32, i32* %suffix.i1326, align 4, !dbg !6440
  %add28.i1381 = add nsw i32 %shl27.i1380, %642, !dbg !6441
  store i32 %add28.i1381, i32* %last_coeff_abs_level_remaining.i1327, align 4, !dbg !6442
  br label %if.end29.i1383, !dbg !6353

if.end29.i1383:                                   ; preds = %for.end23.i1382, %for.end.i1356
  %643 = load i32, i32* %last_coeff_abs_level_remaining.i1327, align 4, !dbg !6443
  store i32 %643, i32* %retval.i1322, align 4, !dbg !6444
  br label %coeff_abs_level_remaining_decode.exit1384, !dbg !6444

coeff_abs_level_remaining_decode.exit1384:        ; preds = %if.then11.i1364, %if.end29.i1383
  %644 = load i32, i32* %retval.i1322, align 4, !dbg !6445
  store i32 %644, i32* %last_coeff_abs_level_remaining767, align 4, !dbg !6350
  %645 = load i32, i32* %last_coeff_abs_level_remaining767, align 4, !dbg !6446
  %add769 = add nsw i32 1, %645, !dbg !6447
  %conv770 = sext i32 %add769 to i64, !dbg !6448
  store i64 %conv770, i64* %trans_coeff_level, align 8, !dbg !6449
  %646 = load i64, i64* %trans_coeff_level, align 8, !dbg !6450
  %647 = load i32, i32* %c_rice_param, align 4, !dbg !6452
  %shl771 = shl i32 3, %647, !dbg !6453
  %conv772 = sext i32 %shl771 to i64, !dbg !6454
  %cmp773 = icmp sgt i64 %646, %conv772, !dbg !6455
  br i1 %cmp773, label %if.then775, label %if.end793, !dbg !6456

if.then775:                                       ; preds = %coeff_abs_level_remaining_decode.exit1384
  %648 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6457
  %ps776 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %648, i32 0, i32 15, !dbg !6458
  %sps777 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps776, i32 0, i32 4, !dbg !6459
  %649 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps777, align 8, !dbg !6459
  %persistent_rice_adaptation_enabled_flag778 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %649, i32 0, i32 45, !dbg !6460
  %650 = load i32, i32* %persistent_rice_adaptation_enabled_flag778, align 4, !dbg !6460
  %tobool779 = icmp ne i32 %650, 0, !dbg !6457
  br i1 %tobool779, label %cond.true780, label %cond.false782, !dbg !6457

cond.true780:                                     ; preds = %if.then775
  %651 = load i32, i32* %c_rice_param, align 4, !dbg !6461
  %add781 = add nsw i32 %651, 1, !dbg !6463
  br label %cond.end791, !dbg !6464

cond.false782:                                    ; preds = %if.then775
  %652 = load i32, i32* %c_rice_param, align 4, !dbg !6465
  %add783 = add nsw i32 %652, 1, !dbg !6467
  %cmp784 = icmp sgt i32 %add783, 4, !dbg !6468
  br i1 %cmp784, label %cond.true786, label %cond.false787, !dbg !6469

cond.true786:                                     ; preds = %cond.false782
  br label %cond.end789, !dbg !6470

cond.false787:                                    ; preds = %cond.false782
  %653 = load i32, i32* %c_rice_param, align 4, !dbg !6472
  %add788 = add nsw i32 %653, 1, !dbg !6474
  br label %cond.end789, !dbg !6475

cond.end789:                                      ; preds = %cond.false787, %cond.true786
  %cond790 = phi i32 [ 4, %cond.true786 ], [ %add788, %cond.false787 ], !dbg !6476
  br label %cond.end791, !dbg !6478

cond.end791:                                      ; preds = %cond.end789, %cond.true780
  %cond792 = phi i32 [ %add781, %cond.true780 ], [ %cond790, %cond.end789 ], !dbg !6479
  store i32 %cond792, i32* %c_rice_param, align 4, !dbg !6481
  br label %if.end793, !dbg !6482

if.end793:                                        ; preds = %cond.end791, %coeff_abs_level_remaining_decode.exit1384
  %654 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6483
  %ps794 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %654, i32 0, i32 15, !dbg !6485
  %sps795 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps794, i32 0, i32 4, !dbg !6486
  %655 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps795, align 8, !dbg !6486
  %persistent_rice_adaptation_enabled_flag796 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %655, i32 0, i32 45, !dbg !6487
  %656 = load i32, i32* %persistent_rice_adaptation_enabled_flag796, align 4, !dbg !6487
  %tobool797 = icmp ne i32 %656, 0, !dbg !6483
  br i1 %tobool797, label %land.lhs.true798, label %if.end835, !dbg !6488

land.lhs.true798:                                 ; preds = %if.end793
  %657 = load i32, i32* %rice_init, align 4, !dbg !6489
  %tobool799 = icmp ne i32 %657, 0, !dbg !6489
  br i1 %tobool799, label %if.end835, label %if.then800, !dbg !6491

if.then800:                                       ; preds = %land.lhs.true798
  call void @llvm.dbg.declare(metadata i32* %c_rice_p_init801, metadata !6492, metadata !2708), !dbg !6494
  %658 = load i32, i32* %sb_type, align 4, !dbg !6495
  %idxprom802 = sext i32 %658 to i64, !dbg !6496
  %659 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6496
  %stat_coeff803 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %659, i32 0, i32 1, !dbg !6497
  %arrayidx804 = getelementptr inbounds [4 x i8], [4 x i8]* %stat_coeff803, i64 0, i64 %idxprom802, !dbg !6496
  %660 = load i8, i8* %arrayidx804, align 1, !dbg !6496
  %conv805 = zext i8 %660 to i32, !dbg !6496
  %div806 = sdiv i32 %conv805, 4, !dbg !6498
  store i32 %div806, i32* %c_rice_p_init801, align 4, !dbg !6494
  %661 = load i32, i32* %last_coeff_abs_level_remaining767, align 4, !dbg !6499
  %662 = load i32, i32* %c_rice_p_init801, align 4, !dbg !6501
  %shl807 = shl i32 3, %662, !dbg !6502
  %cmp808 = icmp sge i32 %661, %shl807, !dbg !6503
  br i1 %cmp808, label %if.then810, label %if.else815, !dbg !6504

if.then810:                                       ; preds = %if.then800
  %663 = load i32, i32* %sb_type, align 4, !dbg !6505
  %idxprom811 = sext i32 %663 to i64, !dbg !6506
  %664 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6506
  %stat_coeff812 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %664, i32 0, i32 1, !dbg !6507
  %arrayidx813 = getelementptr inbounds [4 x i8], [4 x i8]* %stat_coeff812, i64 0, i64 %idxprom811, !dbg !6506
  %665 = load i8, i8* %arrayidx813, align 1, !dbg !6508
  %inc814 = add i8 %665, 1, !dbg !6508
  store i8 %inc814, i8* %arrayidx813, align 1, !dbg !6508
  br label %if.end834, !dbg !6506

if.else815:                                       ; preds = %if.then800
  %666 = load i32, i32* %last_coeff_abs_level_remaining767, align 4, !dbg !6509
  %mul816 = mul nsw i32 2, %666, !dbg !6511
  %667 = load i32, i32* %c_rice_p_init801, align 4, !dbg !6512
  %shl817 = shl i32 1, %667, !dbg !6513
  %cmp818 = icmp slt i32 %mul816, %shl817, !dbg !6514
  br i1 %cmp818, label %if.then820, label %if.end833, !dbg !6515

if.then820:                                       ; preds = %if.else815
  %668 = load i32, i32* %sb_type, align 4, !dbg !6516
  %idxprom821 = sext i32 %668 to i64, !dbg !6518
  %669 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6518
  %stat_coeff822 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %669, i32 0, i32 1, !dbg !6519
  %arrayidx823 = getelementptr inbounds [4 x i8], [4 x i8]* %stat_coeff822, i64 0, i64 %idxprom821, !dbg !6518
  %670 = load i8, i8* %arrayidx823, align 1, !dbg !6518
  %conv824 = zext i8 %670 to i32, !dbg !6518
  %cmp825 = icmp sgt i32 %conv824, 0, !dbg !6520
  br i1 %cmp825, label %if.then827, label %if.end832, !dbg !6521

if.then827:                                       ; preds = %if.then820
  %671 = load i32, i32* %sb_type, align 4, !dbg !6522
  %idxprom828 = sext i32 %671 to i64, !dbg !6523
  %672 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6523
  %stat_coeff829 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %672, i32 0, i32 1, !dbg !6524
  %arrayidx830 = getelementptr inbounds [4 x i8], [4 x i8]* %stat_coeff829, i64 0, i64 %idxprom828, !dbg !6523
  %673 = load i8, i8* %arrayidx830, align 1, !dbg !6525
  %dec831 = add i8 %673, -1, !dbg !6525
  store i8 %dec831, i8* %arrayidx830, align 1, !dbg !6525
  br label %if.end832, !dbg !6523

if.end832:                                        ; preds = %if.then827, %if.then820
  br label %if.end833, !dbg !6526

if.end833:                                        ; preds = %if.end832, %if.else815
  br label %if.end834

if.end834:                                        ; preds = %if.end833, %if.then810
  store i32 1, i32* %rice_init, align 4, !dbg !6528
  br label %if.end835, !dbg !6529

if.end835:                                        ; preds = %if.end834, %land.lhs.true798, %if.end793
  br label %if.end836

if.end836:                                        ; preds = %if.end835, %if.end765
  %674 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6530
  %ps837 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %674, i32 0, i32 15, !dbg !6532
  %pps838 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps837, i32 0, i32 5, !dbg !6533
  %675 = load %struct.HEVCPPS*, %struct.HEVCPPS** %pps838, align 8, !dbg !6533
  %sign_data_hiding_flag839 = getelementptr inbounds %struct.HEVCPPS, %struct.HEVCPPS* %675, i32 0, i32 1, !dbg !6534
  %676 = load i8, i8* %sign_data_hiding_flag839, align 4, !dbg !6534
  %conv840 = zext i8 %676 to i32, !dbg !6530
  %tobool841 = icmp ne i32 %conv840, 0, !dbg !6530
  br i1 %tobool841, label %land.lhs.true842, label %if.end856, !dbg !6535

land.lhs.true842:                                 ; preds = %if.end836
  %677 = load i32, i32* %sign_hidden, align 4, !dbg !6536
  %tobool843 = icmp ne i32 %677, 0, !dbg !6536
  br i1 %tobool843, label %if.then844, label %if.end856, !dbg !6538

if.then844:                                       ; preds = %land.lhs.true842
  %678 = load i64, i64* %trans_coeff_level, align 8, !dbg !6539
  %679 = load i32, i32* %sum_abs, align 4, !dbg !6541
  %conv845 = sext i32 %679 to i64, !dbg !6541
  %add846 = add nsw i64 %conv845, %678, !dbg !6541
  %conv847 = trunc i64 %add846 to i32, !dbg !6541
  store i32 %conv847, i32* %sum_abs, align 4, !dbg !6541
  %680 = load i32, i32* %n, align 4, !dbg !6542
  %681 = load i32, i32* %first_nz_pos_in_cg, align 4, !dbg !6544
  %cmp848 = icmp eq i32 %680, %681, !dbg !6545
  br i1 %cmp848, label %land.lhs.true850, label %if.end855, !dbg !6546

land.lhs.true850:                                 ; preds = %if.then844
  %682 = load i32, i32* %sum_abs, align 4, !dbg !6547
  %and851 = and i32 %682, 1, !dbg !6549
  %tobool852 = icmp ne i32 %and851, 0, !dbg !6549
  br i1 %tobool852, label %if.then853, label %if.end855, !dbg !6550

if.then853:                                       ; preds = %land.lhs.true850
  %683 = load i64, i64* %trans_coeff_level, align 8, !dbg !6551
  %sub854 = sub nsw i64 0, %683, !dbg !6552
  store i64 %sub854, i64* %trans_coeff_level, align 8, !dbg !6553
  br label %if.end855, !dbg !6554

if.end855:                                        ; preds = %if.then853, %land.lhs.true850, %if.then844
  br label %if.end856, !dbg !6555

if.end856:                                        ; preds = %if.end855, %land.lhs.true842, %if.end836
  %684 = load i16, i16* %coeff_sign_flag, align 2, !dbg !6556
  %conv857 = zext i16 %684 to i32, !dbg !6556
  %shr858 = ashr i32 %conv857, 15, !dbg !6558
  %tobool859 = icmp ne i32 %shr858, 0, !dbg !6558
  br i1 %tobool859, label %if.then860, label %if.end862, !dbg !6559

if.then860:                                       ; preds = %if.end856
  %685 = load i64, i64* %trans_coeff_level, align 8, !dbg !6560
  %sub861 = sub nsw i64 0, %685, !dbg !6561
  store i64 %sub861, i64* %trans_coeff_level, align 8, !dbg !6562
  br label %if.end862, !dbg !6563

if.end862:                                        ; preds = %if.then860, %if.end856
  %686 = load i16, i16* %coeff_sign_flag, align 2, !dbg !6564
  %conv863 = zext i16 %686 to i32, !dbg !6564
  %shl864 = shl i32 %conv863, 1, !dbg !6564
  %conv865 = trunc i32 %shl864 to i16, !dbg !6564
  store i16 %conv865, i16* %coeff_sign_flag, align 2, !dbg !6564
  %687 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6565
  %cu866 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %687, i32 0, i32 20, !dbg !6567
  %cu_transquant_bypass_flag867 = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu866, i32 0, i32 6, !dbg !6568
  %688 = load i8, i8* %cu_transquant_bypass_flag867, align 2, !dbg !6568
  %tobool868 = icmp ne i8 %688, 0, !dbg !6565
  br i1 %tobool868, label %if.end932, label %if.then869, !dbg !6569

if.then869:                                       ; preds = %if.end862
  %689 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6570
  %ps870 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %689, i32 0, i32 15, !dbg !6573
  %sps871 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps870, i32 0, i32 4, !dbg !6574
  %690 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps871, align 8, !dbg !6574
  %scaling_list_enable_flag872 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %690, i32 0, i32 16, !dbg !6575
  %691 = load i8, i8* %scaling_list_enable_flag872, align 2, !dbg !6575
  %conv873 = zext i8 %691 to i32, !dbg !6570
  %tobool874 = icmp ne i32 %conv873, 0, !dbg !6570
  br i1 %tobool874, label %land.lhs.true875, label %if.end911, !dbg !6576

land.lhs.true875:                                 ; preds = %if.then869
  %692 = load i32, i32* %transform_skip_flag, align 4, !dbg !6577
  %tobool876 = icmp ne i32 %692, 0, !dbg !6577
  br i1 %tobool876, label %land.lhs.true877, label %if.then880, !dbg !6579

land.lhs.true877:                                 ; preds = %land.lhs.true875
  %693 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !6580
  %cmp878 = icmp sgt i32 %693, 2, !dbg !6582
  br i1 %cmp878, label %if.end911, label %if.then880, !dbg !6583

if.then880:                                       ; preds = %land.lhs.true877, %land.lhs.true875
  %694 = load i32, i32* %y_c, align 4, !dbg !6584
  %tobool881 = icmp ne i32 %694, 0, !dbg !6584
  br i1 %tobool881, label %if.then887, label %lor.lhs.false882, !dbg !6587

lor.lhs.false882:                                 ; preds = %if.then880
  %695 = load i32, i32* %x_c, align 4, !dbg !6588
  %tobool883 = icmp ne i32 %695, 0, !dbg !6588
  br i1 %tobool883, label %if.then887, label %lor.lhs.false884, !dbg !6590

lor.lhs.false884:                                 ; preds = %lor.lhs.false882
  %696 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !6591
  %cmp885 = icmp slt i32 %696, 4, !dbg !6593
  br i1 %cmp885, label %if.then887, label %if.else908, !dbg !6594

if.then887:                                       ; preds = %lor.lhs.false884, %lor.lhs.false882, %if.then880
  %697 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !6595
  switch i32 %697, label %sw.default901 [
    i32 3, label %sw.bb888
    i32 4, label %sw.bb891
    i32 5, label %sw.bb896
  ], !dbg !6597

sw.bb888:                                         ; preds = %if.then887
  %698 = load i32, i32* %y_c, align 4, !dbg !6598
  %shl889 = shl i32 %698, 3, !dbg !6600
  %699 = load i32, i32* %x_c, align 4, !dbg !6601
  %add890 = add nsw i32 %shl889, %699, !dbg !6602
  store i32 %add890, i32* %pos, align 4, !dbg !6603
  br label %sw.epilog904, !dbg !6604

sw.bb891:                                         ; preds = %if.then887
  %700 = load i32, i32* %y_c, align 4, !dbg !6605
  %shr892 = ashr i32 %700, 1, !dbg !6606
  %shl893 = shl i32 %shr892, 3, !dbg !6607
  %701 = load i32, i32* %x_c, align 4, !dbg !6608
  %shr894 = ashr i32 %701, 1, !dbg !6609
  %add895 = add nsw i32 %shl893, %shr894, !dbg !6610
  store i32 %add895, i32* %pos, align 4, !dbg !6611
  br label %sw.epilog904, !dbg !6612

sw.bb896:                                         ; preds = %if.then887
  %702 = load i32, i32* %y_c, align 4, !dbg !6613
  %shr897 = ashr i32 %702, 2, !dbg !6614
  %shl898 = shl i32 %shr897, 3, !dbg !6615
  %703 = load i32, i32* %x_c, align 4, !dbg !6616
  %shr899 = ashr i32 %703, 2, !dbg !6617
  %add900 = add nsw i32 %shl898, %shr899, !dbg !6618
  store i32 %add900, i32* %pos, align 4, !dbg !6619
  br label %sw.epilog904, !dbg !6620

sw.default901:                                    ; preds = %if.then887
  %704 = load i32, i32* %y_c, align 4, !dbg !6621
  %shl902 = shl i32 %704, 2, !dbg !6622
  %705 = load i32, i32* %x_c, align 4, !dbg !6623
  %add903 = add nsw i32 %shl902, %705, !dbg !6624
  store i32 %add903, i32* %pos, align 4, !dbg !6625
  br label %sw.epilog904, !dbg !6626

sw.epilog904:                                     ; preds = %sw.default901, %sw.bb896, %sw.bb891, %sw.bb888
  %706 = load i32, i32* %pos, align 4, !dbg !6627
  %idxprom905 = sext i32 %706 to i64, !dbg !6628
  %707 = load i8*, i8** %scale_matrix, align 8, !dbg !6628
  %arrayidx906 = getelementptr inbounds i8, i8* %707, i64 %idxprom905, !dbg !6628
  %708 = load i8, i8* %arrayidx906, align 1, !dbg !6628
  %conv907 = zext i8 %708 to i32, !dbg !6628
  store i32 %conv907, i32* %scale_m, align 4, !dbg !6629
  br label %if.end910, !dbg !6630

if.else908:                                       ; preds = %lor.lhs.false884
  %709 = load i8, i8* %dc_scale, align 1, !dbg !6631
  %conv909 = zext i8 %709 to i32, !dbg !6631
  store i32 %conv909, i32* %scale_m, align 4, !dbg !6633
  br label %if.end910

if.end910:                                        ; preds = %if.else908, %sw.epilog904
  br label %if.end911, !dbg !6634

if.end911:                                        ; preds = %if.end910, %land.lhs.true877, %if.then869
  %710 = load i64, i64* %trans_coeff_level, align 8, !dbg !6635
  %711 = load i32, i32* %scale, align 4, !dbg !6636
  %conv912 = sext i32 %711 to i64, !dbg !6637
  %mul913 = mul nsw i64 %710, %conv912, !dbg !6638
  %712 = load i32, i32* %scale_m, align 4, !dbg !6639
  %conv914 = sext i32 %712 to i64, !dbg !6640
  %mul915 = mul nsw i64 %mul913, %conv914, !dbg !6641
  %713 = load i32, i32* %add20, align 4, !dbg !6642
  %conv916 = sext i32 %713 to i64, !dbg !6642
  %add917 = add nsw i64 %mul915, %conv916, !dbg !6643
  %714 = load i32, i32* %shift, align 4, !dbg !6644
  %sh_prom = zext i32 %714 to i64, !dbg !6645
  %shr918 = ashr i64 %add917, %sh_prom, !dbg !6645
  store i64 %shr918, i64* %trans_coeff_level, align 8, !dbg !6646
  %715 = load i64, i64* %trans_coeff_level, align 8, !dbg !6647
  %cmp919 = icmp slt i64 %715, 0, !dbg !6649
  br i1 %cmp919, label %if.then921, label %if.else926, !dbg !6650

if.then921:                                       ; preds = %if.end911
  %716 = load i64, i64* %trans_coeff_level, align 8, !dbg !6651
  %neg = xor i64 %716, -1, !dbg !6654
  %and922 = and i64 %neg, 1152921504606814208, !dbg !6655
  %tobool923 = icmp ne i64 %and922, 0, !dbg !6655
  br i1 %tobool923, label %if.then924, label %if.end925, !dbg !6656

if.then924:                                       ; preds = %if.then921
  store i64 -32768, i64* %trans_coeff_level, align 8, !dbg !6657
  br label %if.end925, !dbg !6658

if.end925:                                        ; preds = %if.then924, %if.then921
  br label %if.end931, !dbg !6659

if.else926:                                       ; preds = %if.end911
  %717 = load i64, i64* %trans_coeff_level, align 8, !dbg !6660
  %and927 = and i64 %717, -32768, !dbg !6663
  %tobool928 = icmp ne i64 %and927, 0, !dbg !6663
  br i1 %tobool928, label %if.then929, label %if.end930, !dbg !6664

if.then929:                                       ; preds = %if.else926
  store i64 32767, i64* %trans_coeff_level, align 8, !dbg !6665
  br label %if.end930, !dbg !6666

if.end930:                                        ; preds = %if.then929, %if.else926
  br label %if.end931

if.end931:                                        ; preds = %if.end930, %if.end925
  br label %if.end932, !dbg !6667

if.end932:                                        ; preds = %if.end931, %if.end862
  %718 = load i64, i64* %trans_coeff_level, align 8, !dbg !6668
  %conv933 = trunc i64 %718 to i16, !dbg !6668
  %719 = load i32, i32* %y_c, align 4, !dbg !6669
  %720 = load i32, i32* %trafo_size, align 4, !dbg !6670
  %mul934 = mul nsw i32 %719, %720, !dbg !6671
  %721 = load i32, i32* %x_c, align 4, !dbg !6672
  %add935 = add nsw i32 %mul934, %721, !dbg !6673
  %idxprom936 = sext i32 %add935 to i64, !dbg !6674
  %722 = load i16*, i16** %coeffs, align 8, !dbg !6674
  %arrayidx937 = getelementptr inbounds i16, i16* %722, i64 %idxprom936, !dbg !6674
  store i16 %conv933, i16* %arrayidx937, align 2, !dbg !6675
  br label %for.inc938, !dbg !6676

for.inc938:                                       ; preds = %if.end932
  %723 = load i32, i32* %m, align 4, !dbg !6677
  %inc939 = add nsw i32 %723, 1, !dbg !6677
  store i32 %inc939, i32* %m, align 4, !dbg !6677
  br label %for.cond664, !dbg !6679, !llvm.loop !6680

for.end940:                                       ; preds = %for.cond664
  br label %if.end941, !dbg !6682

if.end941:                                        ; preds = %for.end940, %if.end515
  br label %for.inc942, !dbg !6683

for.inc942:                                       ; preds = %if.end941
  %724 = load i32, i32* %i, align 4, !dbg !6684
  %dec943 = add nsw i32 %724, -1, !dbg !6684
  store i32 %dec943, i32* %i, align 4, !dbg !6684
  br label %for.cond, !dbg !6686, !llvm.loop !6687

for.end944:                                       ; preds = %for.cond
  %725 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6689
  %cu945 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %725, i32 0, i32 20, !dbg !6691
  %cu_transquant_bypass_flag946 = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu945, i32 0, i32 6, !dbg !6692
  %726 = load i8, i8* %cu_transquant_bypass_flag946, align 2, !dbg !6692
  %tobool947 = icmp ne i8 %726, 0, !dbg !6689
  br i1 %tobool947, label %if.then948, label %if.else974, !dbg !6693

if.then948:                                       ; preds = %for.end944
  %727 = load i32, i32* %explicit_rdpcm_flag, align 4, !dbg !6694
  %tobool949 = icmp ne i32 %727, 0, !dbg !6694
  br i1 %tobool949, label %if.then961, label %lor.lhs.false950, !dbg !6697

lor.lhs.false950:                                 ; preds = %if.then948
  %728 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6698
  %ps951 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %728, i32 0, i32 15, !dbg !6700
  %sps952 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps951, i32 0, i32 4, !dbg !6701
  %729 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps952, align 8, !dbg !6701
  %implicit_rdpcm_enabled_flag953 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %729, i32 0, i32 40, !dbg !6702
  %730 = load i32, i32* %implicit_rdpcm_enabled_flag953, align 4, !dbg !6702
  %tobool954 = icmp ne i32 %730, 0, !dbg !6698
  br i1 %tobool954, label %land.lhs.true955, label %if.end973, !dbg !6703

land.lhs.true955:                                 ; preds = %lor.lhs.false950
  %731 = load i32, i32* %pred_mode_intra, align 4, !dbg !6704
  %cmp956 = icmp eq i32 %731, 10, !dbg !6705
  br i1 %cmp956, label %if.then961, label %lor.lhs.false958, !dbg !6706

lor.lhs.false958:                                 ; preds = %land.lhs.true955
  %732 = load i32, i32* %pred_mode_intra, align 4, !dbg !6707
  %cmp959 = icmp eq i32 %732, 26, !dbg !6708
  br i1 %cmp959, label %if.then961, label %if.end973, !dbg !6709

if.then961:                                       ; preds = %lor.lhs.false958, %land.lhs.true955, %if.then948
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !6711, metadata !2708), !dbg !6713
  %733 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6714
  %ps962 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %733, i32 0, i32 15, !dbg !6715
  %sps963 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps962, i32 0, i32 4, !dbg !6716
  %734 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps963, align 8, !dbg !6716
  %implicit_rdpcm_enabled_flag964 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %734, i32 0, i32 40, !dbg !6717
  %735 = load i32, i32* %implicit_rdpcm_enabled_flag964, align 4, !dbg !6717
  %tobool965 = icmp ne i32 %735, 0, !dbg !6714
  br i1 %tobool965, label %cond.true966, label %cond.false969, !dbg !6714

cond.true966:                                     ; preds = %if.then961
  %736 = load i32, i32* %pred_mode_intra, align 4, !dbg !6718
  %cmp967 = icmp eq i32 %736, 26, !dbg !6720
  %conv968 = zext i1 %cmp967 to i32, !dbg !6720
  br label %cond.end970, !dbg !6721

cond.false969:                                    ; preds = %if.then961
  %737 = load i32, i32* %explicit_rdpcm_dir_flag, align 4, !dbg !6722
  br label %cond.end970, !dbg !6724

cond.end970:                                      ; preds = %cond.false969, %cond.true966
  %cond971 = phi i32 [ %conv968, %cond.true966 ], [ %737, %cond.false969 ], !dbg !6725
  store i32 %cond971, i32* %mode, align 4, !dbg !6727
  %738 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6728
  %hevcdsp = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %738, i32 0, i32 40, !dbg !6729
  %transform_rdpcm = getelementptr inbounds %struct.HEVCDSPContext, %struct.HEVCDSPContext* %hevcdsp, i32 0, i32 3, !dbg !6730
  %739 = load void (i16*, i16, i32)*, void (i16*, i16, i32)** %transform_rdpcm, align 8, !dbg !6730
  %740 = load i16*, i16** %coeffs, align 8, !dbg !6731
  %741 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !6732
  %conv972 = trunc i32 %741 to i16, !dbg !6732
  %742 = load i32, i32* %mode, align 4, !dbg !6733
  call void %739(i16* %740, i16 signext %conv972, i32 %742), !dbg !6728
  br label %if.end973, !dbg !6734

if.end973:                                        ; preds = %cond.end970, %lor.lhs.false958, %lor.lhs.false950
  br label %if.end1115, !dbg !6735

if.else974:                                       ; preds = %for.end944
  %743 = load i32, i32* %transform_skip_flag, align 4, !dbg !6736
  %tobool975 = icmp ne i32 %743, 0, !dbg !6736
  br i1 %tobool975, label %if.then976, label %if.else1046, !dbg !6739

if.then976:                                       ; preds = %if.else974
  call void @llvm.dbg.declare(metadata i32* %rot, metadata !6740, metadata !2708), !dbg !6742
  %744 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6743
  %ps977 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %744, i32 0, i32 15, !dbg !6744
  %sps978 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps977, i32 0, i32 4, !dbg !6745
  %745 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps978, align 8, !dbg !6745
  %transform_skip_rotation_enabled_flag = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %745, i32 0, i32 38, !dbg !6746
  %746 = load i32, i32* %transform_skip_rotation_enabled_flag, align 4, !dbg !6746
  %tobool979 = icmp ne i32 %746, 0, !dbg !6743
  br i1 %tobool979, label %land.lhs.true980, label %land.end988, !dbg !6747

land.lhs.true980:                                 ; preds = %if.then976
  %747 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !6748
  %cmp981 = icmp eq i32 %747, 2, !dbg !6749
  br i1 %cmp981, label %land.rhs983, label %land.end988, !dbg !6750

land.rhs983:                                      ; preds = %land.lhs.true980
  %748 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6751
  %cu984 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %748, i32 0, i32 20, !dbg !6752
  %pred_mode985 = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu984, i32 0, i32 2, !dbg !6753
  %749 = load i32, i32* %pred_mode985, align 4, !dbg !6753
  %cmp986 = icmp eq i32 %749, 1, !dbg !6754
  br label %land.end988

land.end988:                                      ; preds = %land.rhs983, %land.lhs.true980, %if.then976
  %750 = phi i1 [ false, %land.lhs.true980 ], [ false, %if.then976 ], [ %cmp986, %land.rhs983 ]
  %land.ext = zext i1 %750 to i32, !dbg !6755
  store i32 %land.ext, i32* %rot, align 4, !dbg !6757
  %751 = load i32, i32* %rot, align 4, !dbg !6758
  %tobool989 = icmp ne i32 %751, 0, !dbg !6758
  br i1 %tobool989, label %if.then990, label %if.end1013, !dbg !6760

if.then990:                                       ; preds = %land.end988
  store i32 0, i32* %i, align 4, !dbg !6761
  br label %for.cond991, !dbg !6764

for.cond991:                                      ; preds = %for.inc1010, %if.then990
  %752 = load i32, i32* %i, align 4, !dbg !6765
  %cmp992 = icmp slt i32 %752, 8, !dbg !6768
  br i1 %cmp992, label %for.body994, label %for.end1012, !dbg !6769

for.body994:                                      ; preds = %for.cond991
  br label %do.body995, !dbg !6770, !llvm.loop !6771

do.body995:                                       ; preds = %for.body994
  call void @llvm.dbg.declare(metadata i16* %SWAP_tmp996, metadata !6772, metadata !2708), !dbg !6774
  %753 = load i32, i32* %i, align 4, !dbg !6775
  %sub997 = sub nsw i32 16, %753, !dbg !6777
  %sub998 = sub nsw i32 %sub997, 1, !dbg !6778
  %idxprom999 = sext i32 %sub998 to i64, !dbg !6779
  %754 = load i16*, i16** %coeffs, align 8, !dbg !6779
  %arrayidx1000 = getelementptr inbounds i16, i16* %754, i64 %idxprom999, !dbg !6779
  %755 = load i16, i16* %arrayidx1000, align 2, !dbg !6779
  store i16 %755, i16* %SWAP_tmp996, align 2, !dbg !6780
  %756 = load i32, i32* %i, align 4, !dbg !6781
  %idxprom1001 = sext i32 %756 to i64, !dbg !6782
  %757 = load i16*, i16** %coeffs, align 8, !dbg !6782
  %arrayidx1002 = getelementptr inbounds i16, i16* %757, i64 %idxprom1001, !dbg !6782
  %758 = load i16, i16* %arrayidx1002, align 2, !dbg !6782
  %759 = load i32, i32* %i, align 4, !dbg !6783
  %sub1003 = sub nsw i32 16, %759, !dbg !6784
  %sub1004 = sub nsw i32 %sub1003, 1, !dbg !6785
  %idxprom1005 = sext i32 %sub1004 to i64, !dbg !6786
  %760 = load i16*, i16** %coeffs, align 8, !dbg !6786
  %arrayidx1006 = getelementptr inbounds i16, i16* %760, i64 %idxprom1005, !dbg !6786
  store i16 %758, i16* %arrayidx1006, align 2, !dbg !6787
  %761 = load i16, i16* %SWAP_tmp996, align 2, !dbg !6788
  %762 = load i32, i32* %i, align 4, !dbg !6789
  %idxprom1007 = sext i32 %762 to i64, !dbg !6790
  %763 = load i16*, i16** %coeffs, align 8, !dbg !6790
  %arrayidx1008 = getelementptr inbounds i16, i16* %763, i64 %idxprom1007, !dbg !6790
  store i16 %761, i16* %arrayidx1008, align 2, !dbg !6791
  br label %do.end1009, !dbg !6792

do.end1009:                                       ; preds = %do.body995
  br label %for.inc1010, !dbg !6793

for.inc1010:                                      ; preds = %do.end1009
  %764 = load i32, i32* %i, align 4, !dbg !6795
  %inc1011 = add nsw i32 %764, 1, !dbg !6795
  store i32 %inc1011, i32* %i, align 4, !dbg !6795
  br label %for.cond991, !dbg !6797, !llvm.loop !6798

for.end1012:                                      ; preds = %for.cond991
  br label %if.end1013, !dbg !6800

if.end1013:                                       ; preds = %for.end1012, %land.end988
  %765 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6801
  %hevcdsp1014 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %765, i32 0, i32 40, !dbg !6802
  %dequant = getelementptr inbounds %struct.HEVCDSPContext, %struct.HEVCDSPContext* %hevcdsp1014, i32 0, i32 2, !dbg !6803
  %766 = load void (i16*, i16)*, void (i16*, i16)** %dequant, align 8, !dbg !6803
  %767 = load i16*, i16** %coeffs, align 8, !dbg !6804
  %768 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !6805
  %conv1015 = trunc i32 %768 to i16, !dbg !6805
  call void %766(i16* %767, i16 signext %conv1015), !dbg !6801
  %769 = load i32, i32* %explicit_rdpcm_flag, align 4, !dbg !6806
  %tobool1016 = icmp ne i32 %769, 0, !dbg !6806
  br i1 %tobool1016, label %if.then1033, label %lor.lhs.false1017, !dbg !6808

lor.lhs.false1017:                                ; preds = %if.end1013
  %770 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6809
  %ps1018 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %770, i32 0, i32 15, !dbg !6811
  %sps1019 = getelementptr inbounds %struct.HEVCParamSets, %struct.HEVCParamSets* %ps1018, i32 0, i32 4, !dbg !6812
  %771 = load %struct.HEVCSPS*, %struct.HEVCSPS** %sps1019, align 8, !dbg !6812
  %implicit_rdpcm_enabled_flag1020 = getelementptr inbounds %struct.HEVCSPS, %struct.HEVCSPS* %771, i32 0, i32 40, !dbg !6813
  %772 = load i32, i32* %implicit_rdpcm_enabled_flag1020, align 4, !dbg !6813
  %tobool1021 = icmp ne i32 %772, 0, !dbg !6809
  br i1 %tobool1021, label %land.lhs.true1022, label %if.end1045, !dbg !6814

land.lhs.true1022:                                ; preds = %lor.lhs.false1017
  %773 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6815
  %cu1023 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %773, i32 0, i32 20, !dbg !6816
  %pred_mode1024 = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu1023, i32 0, i32 2, !dbg !6817
  %774 = load i32, i32* %pred_mode1024, align 4, !dbg !6817
  %cmp1025 = icmp eq i32 %774, 1, !dbg !6818
  br i1 %cmp1025, label %land.lhs.true1027, label %if.end1045, !dbg !6819

land.lhs.true1027:                                ; preds = %land.lhs.true1022
  %775 = load i32, i32* %pred_mode_intra, align 4, !dbg !6820
  %cmp1028 = icmp eq i32 %775, 10, !dbg !6821
  br i1 %cmp1028, label %if.then1033, label %lor.lhs.false1030, !dbg !6822

lor.lhs.false1030:                                ; preds = %land.lhs.true1027
  %776 = load i32, i32* %pred_mode_intra, align 4, !dbg !6823
  %cmp1031 = icmp eq i32 %776, 26, !dbg !6824
  br i1 %cmp1031, label %if.then1033, label %if.end1045, !dbg !6825

if.then1033:                                      ; preds = %lor.lhs.false1030, %land.lhs.true1027, %if.end1013
  call void @llvm.dbg.declare(metadata i32* %mode1034, metadata !6827, metadata !2708), !dbg !6829
  %777 = load i32, i32* %explicit_rdpcm_flag, align 4, !dbg !6830
  %tobool1035 = icmp ne i32 %777, 0, !dbg !6830
  br i1 %tobool1035, label %cond.true1036, label %cond.false1037, !dbg !6830

cond.true1036:                                    ; preds = %if.then1033
  %778 = load i32, i32* %explicit_rdpcm_dir_flag, align 4, !dbg !6831
  br label %cond.end1040, !dbg !6833

cond.false1037:                                   ; preds = %if.then1033
  %779 = load i32, i32* %pred_mode_intra, align 4, !dbg !6834
  %cmp1038 = icmp eq i32 %779, 26, !dbg !6836
  %conv1039 = zext i1 %cmp1038 to i32, !dbg !6836
  br label %cond.end1040, !dbg !6837

cond.end1040:                                     ; preds = %cond.false1037, %cond.true1036
  %cond1041 = phi i32 [ %778, %cond.true1036 ], [ %conv1039, %cond.false1037 ], !dbg !6838
  store i32 %cond1041, i32* %mode1034, align 4, !dbg !6840
  %780 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6841
  %hevcdsp1042 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %780, i32 0, i32 40, !dbg !6842
  %transform_rdpcm1043 = getelementptr inbounds %struct.HEVCDSPContext, %struct.HEVCDSPContext* %hevcdsp1042, i32 0, i32 3, !dbg !6843
  %781 = load void (i16*, i16, i32)*, void (i16*, i16, i32)** %transform_rdpcm1043, align 8, !dbg !6843
  %782 = load i16*, i16** %coeffs, align 8, !dbg !6844
  %783 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !6845
  %conv1044 = trunc i32 %783 to i16, !dbg !6845
  %784 = load i32, i32* %mode1034, align 4, !dbg !6846
  call void %781(i16* %782, i16 signext %conv1044, i32 %784), !dbg !6841
  br label %if.end1045, !dbg !6847

if.end1045:                                       ; preds = %cond.end1040, %lor.lhs.false1030, %land.lhs.true1022, %lor.lhs.false1017
  br label %if.end1114, !dbg !6848

if.else1046:                                      ; preds = %if.else974
  %785 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6849
  %cu1047 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %785, i32 0, i32 20, !dbg !6852
  %pred_mode1048 = getelementptr inbounds %struct.CodingUnit, %struct.CodingUnit* %cu1047, i32 0, i32 2, !dbg !6853
  %786 = load i32, i32* %pred_mode1048, align 4, !dbg !6853
  %cmp1049 = icmp eq i32 %786, 1, !dbg !6854
  br i1 %cmp1049, label %land.lhs.true1051, label %if.else1059, !dbg !6855

land.lhs.true1051:                                ; preds = %if.else1046
  %787 = load i32, i32* %c_idx.addr, align 4, !dbg !6856
  %cmp1052 = icmp eq i32 %787, 0, !dbg !6858
  br i1 %cmp1052, label %land.lhs.true1054, label %if.else1059, !dbg !6859

land.lhs.true1054:                                ; preds = %land.lhs.true1051
  %788 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !6860
  %cmp1055 = icmp eq i32 %788, 2, !dbg !6862
  br i1 %cmp1055, label %if.then1057, label %if.else1059, !dbg !6863

if.then1057:                                      ; preds = %land.lhs.true1054
  %789 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6864
  %hevcdsp1058 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %789, i32 0, i32 40, !dbg !6866
  %transform_4x4_luma = getelementptr inbounds %struct.HEVCDSPContext, %struct.HEVCDSPContext* %hevcdsp1058, i32 0, i32 4, !dbg !6867
  %790 = load void (i16*)*, void (i16*)** %transform_4x4_luma, align 8, !dbg !6867
  %791 = load i16*, i16** %coeffs, align 8, !dbg !6868
  call void %790(i16* %791), !dbg !6864
  br label %if.end1113, !dbg !6869

if.else1059:                                      ; preds = %land.lhs.true1054, %land.lhs.true1051, %if.else1046
  call void @llvm.dbg.declare(metadata i32* %max_xy, metadata !6870, metadata !2708), !dbg !6872
  %792 = load i32, i32* %last_significant_coeff_x, align 4, !dbg !6873
  %793 = load i32, i32* %last_significant_coeff_y, align 4, !dbg !6874
  %cmp1060 = icmp sgt i32 %792, %793, !dbg !6875
  br i1 %cmp1060, label %cond.true1062, label %cond.false1063, !dbg !6876

cond.true1062:                                    ; preds = %if.else1059
  %794 = load i32, i32* %last_significant_coeff_x, align 4, !dbg !6877
  br label %cond.end1064, !dbg !6879

cond.false1063:                                   ; preds = %if.else1059
  %795 = load i32, i32* %last_significant_coeff_y, align 4, !dbg !6880
  br label %cond.end1064, !dbg !6882

cond.end1064:                                     ; preds = %cond.false1063, %cond.true1062
  %cond1065 = phi i32 [ %794, %cond.true1062 ], [ %795, %cond.false1063 ], !dbg !6883
  store i32 %cond1065, i32* %max_xy, align 4, !dbg !6885
  %796 = load i32, i32* %max_xy, align 4, !dbg !6886
  %cmp1066 = icmp eq i32 %796, 0, !dbg !6888
  br i1 %cmp1066, label %if.then1068, label %if.else1073, !dbg !6889

if.then1068:                                      ; preds = %cond.end1064
  %797 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !6890
  %sub1069 = sub nsw i32 %797, 2, !dbg !6891
  %idxprom1070 = sext i32 %sub1069 to i64, !dbg !6892
  %798 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6892
  %hevcdsp1071 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %798, i32 0, i32 40, !dbg !6893
  %idct_dc = getelementptr inbounds %struct.HEVCDSPContext, %struct.HEVCDSPContext* %hevcdsp1071, i32 0, i32 6, !dbg !6894
  %arrayidx1072 = getelementptr inbounds [4 x void (i16*)*], [4 x void (i16*)*]* %idct_dc, i64 0, i64 %idxprom1070, !dbg !6892
  %799 = load void (i16*)*, void (i16*)** %arrayidx1072, align 8, !dbg !6892
  %800 = load i16*, i16** %coeffs, align 8, !dbg !6895
  call void %799(i16* %800), !dbg !6892
  br label %if.end1112, !dbg !6892

if.else1073:                                      ; preds = %cond.end1064
  call void @llvm.dbg.declare(metadata i32* %col_limit, metadata !6896, metadata !2708), !dbg !6898
  %801 = load i32, i32* %last_significant_coeff_x, align 4, !dbg !6899
  %802 = load i32, i32* %last_significant_coeff_y, align 4, !dbg !6900
  %add1074 = add nsw i32 %801, %802, !dbg !6901
  %add1075 = add nsw i32 %add1074, 4, !dbg !6902
  store i32 %add1075, i32* %col_limit, align 4, !dbg !6898
  %803 = load i32, i32* %max_xy, align 4, !dbg !6903
  %cmp1076 = icmp slt i32 %803, 4, !dbg !6905
  br i1 %cmp1076, label %if.then1078, label %if.else1085, !dbg !6906

if.then1078:                                      ; preds = %if.else1073
  %804 = load i32, i32* %col_limit, align 4, !dbg !6907
  %cmp1079 = icmp sgt i32 4, %804, !dbg !6908
  br i1 %cmp1079, label %cond.true1081, label %cond.false1082, !dbg !6909

cond.true1081:                                    ; preds = %if.then1078
  %805 = load i32, i32* %col_limit, align 4, !dbg !6910
  br label %cond.end1083, !dbg !6912

cond.false1082:                                   ; preds = %if.then1078
  br label %cond.end1083, !dbg !6913

cond.end1083:                                     ; preds = %cond.false1082, %cond.true1081
  %cond1084 = phi i32 [ %805, %cond.true1081 ], [ 4, %cond.false1082 ], !dbg !6915
  store i32 %cond1084, i32* %col_limit, align 4, !dbg !6917
  br label %if.end1107, !dbg !6918

if.else1085:                                      ; preds = %if.else1073
  %806 = load i32, i32* %max_xy, align 4, !dbg !6919
  %cmp1086 = icmp slt i32 %806, 8, !dbg !6921
  br i1 %cmp1086, label %if.then1088, label %if.else1095, !dbg !6922

if.then1088:                                      ; preds = %if.else1085
  %807 = load i32, i32* %col_limit, align 4, !dbg !6923
  %cmp1089 = icmp sgt i32 8, %807, !dbg !6924
  br i1 %cmp1089, label %cond.true1091, label %cond.false1092, !dbg !6925

cond.true1091:                                    ; preds = %if.then1088
  %808 = load i32, i32* %col_limit, align 4, !dbg !6926
  br label %cond.end1093, !dbg !6928

cond.false1092:                                   ; preds = %if.then1088
  br label %cond.end1093, !dbg !6929

cond.end1093:                                     ; preds = %cond.false1092, %cond.true1091
  %cond1094 = phi i32 [ %808, %cond.true1091 ], [ 8, %cond.false1092 ], !dbg !6931
  store i32 %cond1094, i32* %col_limit, align 4, !dbg !6933
  br label %if.end1106, !dbg !6934

if.else1095:                                      ; preds = %if.else1085
  %809 = load i32, i32* %max_xy, align 4, !dbg !6935
  %cmp1096 = icmp slt i32 %809, 12, !dbg !6937
  br i1 %cmp1096, label %if.then1098, label %if.end1105, !dbg !6938

if.then1098:                                      ; preds = %if.else1095
  %810 = load i32, i32* %col_limit, align 4, !dbg !6939
  %cmp1099 = icmp sgt i32 24, %810, !dbg !6940
  br i1 %cmp1099, label %cond.true1101, label %cond.false1102, !dbg !6941

cond.true1101:                                    ; preds = %if.then1098
  %811 = load i32, i32* %col_limit, align 4, !dbg !6942
  br label %cond.end1103, !dbg !6944

cond.false1102:                                   ; preds = %if.then1098
  br label %cond.end1103, !dbg !6945

cond.end1103:                                     ; preds = %cond.false1102, %cond.true1101
  %cond1104 = phi i32 [ %811, %cond.true1101 ], [ 24, %cond.false1102 ], !dbg !6947
  store i32 %cond1104, i32* %col_limit, align 4, !dbg !6949
  br label %if.end1105, !dbg !6950

if.end1105:                                       ; preds = %cond.end1103, %if.else1095
  br label %if.end1106

if.end1106:                                       ; preds = %if.end1105, %cond.end1093
  br label %if.end1107

if.end1107:                                       ; preds = %if.end1106, %cond.end1083
  %812 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !6951
  %sub1108 = sub nsw i32 %812, 2, !dbg !6952
  %idxprom1109 = sext i32 %sub1108 to i64, !dbg !6953
  %813 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !6953
  %hevcdsp1110 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %813, i32 0, i32 40, !dbg !6954
  %idct = getelementptr inbounds %struct.HEVCDSPContext, %struct.HEVCDSPContext* %hevcdsp1110, i32 0, i32 5, !dbg !6955
  %arrayidx1111 = getelementptr inbounds [4 x void (i16*, i32)*], [4 x void (i16*, i32)*]* %idct, i64 0, i64 %idxprom1109, !dbg !6953
  %814 = load void (i16*, i32)*, void (i16*, i32)** %arrayidx1111, align 8, !dbg !6953
  %815 = load i16*, i16** %coeffs, align 8, !dbg !6956
  %816 = load i32, i32* %col_limit, align 4, !dbg !6957
  call void %814(i16* %815, i32 %816), !dbg !6953
  br label %if.end1112

if.end1112:                                       ; preds = %if.end1107, %if.then1068
  br label %if.end1113

if.end1113:                                       ; preds = %if.end1112, %if.then1057
  br label %if.end1114

if.end1114:                                       ; preds = %if.end1113, %if.end1045
  br label %if.end1115

if.end1115:                                       ; preds = %if.end1114, %if.end973
  %817 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6958
  %tu1116 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %817, i32 0, i32 8, !dbg !6960
  %cross_pf = getelementptr inbounds %struct.TransformUnit, %struct.TransformUnit* %tu1116, i32 0, i32 9, !dbg !6961
  %818 = load i8, i8* %cross_pf, align 8, !dbg !6961
  %tobool1117 = icmp ne i8 %818, 0, !dbg !6958
  br i1 %tobool1117, label %if.then1118, label %if.end1142, !dbg !6962

if.then1118:                                      ; preds = %if.end1115
  call void @llvm.dbg.declare(metadata i16** %coeffs_y, metadata !6963, metadata !2708), !dbg !6965
  %819 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6966
  %edge_emu_buffer1119 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %819, i32 0, i32 16, !dbg !6967
  %arraydecay1120 = getelementptr inbounds [11360 x i8], [11360 x i8]* %edge_emu_buffer1119, i32 0, i32 0, !dbg !6966
  %820 = bitcast i8* %arraydecay1120 to i16*, !dbg !6968
  store i16* %820, i16** %coeffs_y, align 8, !dbg !6965
  store i32 0, i32* %i, align 4, !dbg !6969
  br label %for.cond1121, !dbg !6971

for.cond1121:                                     ; preds = %for.inc1139, %if.then1118
  %821 = load i32, i32* %i, align 4, !dbg !6972
  %822 = load i32, i32* %trafo_size, align 4, !dbg !6975
  %823 = load i32, i32* %trafo_size, align 4, !dbg !6976
  %mul1122 = mul nsw i32 %822, %823, !dbg !6977
  %cmp1123 = icmp slt i32 %821, %mul1122, !dbg !6978
  br i1 %cmp1123, label %for.body1125, label %for.end1141, !dbg !6979

for.body1125:                                     ; preds = %for.cond1121
  %824 = load i32, i32* %i, align 4, !dbg !6980
  %idxprom1126 = sext i32 %824 to i64, !dbg !6982
  %825 = load i16*, i16** %coeffs, align 8, !dbg !6982
  %arrayidx1127 = getelementptr inbounds i16, i16* %825, i64 %idxprom1126, !dbg !6982
  %826 = load i16, i16* %arrayidx1127, align 2, !dbg !6982
  %conv1128 = sext i16 %826 to i32, !dbg !6982
  %827 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !6983
  %tu1129 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %827, i32 0, i32 8, !dbg !6984
  %res_scale_val = getelementptr inbounds %struct.TransformUnit, %struct.TransformUnit* %tu1129, i32 0, i32 1, !dbg !6985
  %828 = load i32, i32* %res_scale_val, align 4, !dbg !6985
  %829 = load i32, i32* %i, align 4, !dbg !6986
  %idxprom1130 = sext i32 %829 to i64, !dbg !6987
  %830 = load i16*, i16** %coeffs_y, align 8, !dbg !6987
  %arrayidx1131 = getelementptr inbounds i16, i16* %830, i64 %idxprom1130, !dbg !6987
  %831 = load i16, i16* %arrayidx1131, align 2, !dbg !6987
  %conv1132 = sext i16 %831 to i32, !dbg !6987
  %mul1133 = mul nsw i32 %828, %conv1132, !dbg !6988
  %shr1134 = ashr i32 %mul1133, 3, !dbg !6989
  %add1135 = add nsw i32 %conv1128, %shr1134, !dbg !6990
  %conv1136 = trunc i32 %add1135 to i16, !dbg !6982
  %832 = load i32, i32* %i, align 4, !dbg !6991
  %idxprom1137 = sext i32 %832 to i64, !dbg !6992
  %833 = load i16*, i16** %coeffs, align 8, !dbg !6992
  %arrayidx1138 = getelementptr inbounds i16, i16* %833, i64 %idxprom1137, !dbg !6992
  store i16 %conv1136, i16* %arrayidx1138, align 2, !dbg !6993
  br label %for.inc1139, !dbg !6994

for.inc1139:                                      ; preds = %for.body1125
  %834 = load i32, i32* %i, align 4, !dbg !6995
  %inc1140 = add nsw i32 %834, 1, !dbg !6995
  store i32 %inc1140, i32* %i, align 4, !dbg !6995
  br label %for.cond1121, !dbg !6997, !llvm.loop !6998

for.end1141:                                      ; preds = %for.cond1121
  br label %if.end1142, !dbg !7000

if.end1142:                                       ; preds = %for.end1141, %if.end1115
  %835 = load i32, i32* %log2_trafo_size.addr, align 4, !dbg !7001
  %sub1143 = sub nsw i32 %835, 2, !dbg !7002
  %idxprom1144 = sext i32 %sub1143 to i64, !dbg !7003
  %836 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7003
  %hevcdsp1145 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %836, i32 0, i32 40, !dbg !7004
  %add_residual = getelementptr inbounds %struct.HEVCDSPContext, %struct.HEVCDSPContext* %hevcdsp1145, i32 0, i32 1, !dbg !7005
  %arrayidx1146 = getelementptr inbounds [4 x void (i8*, i16*, i64)*], [4 x void (i8*, i16*, i64)*]* %add_residual, i64 0, i64 %idxprom1144, !dbg !7003
  %837 = load void (i8*, i16*, i64)*, void (i8*, i16*, i64)** %arrayidx1146, align 8, !dbg !7003
  %838 = load i8*, i8** %dst, align 8, !dbg !7006
  %839 = load i16*, i16** %coeffs, align 8, !dbg !7007
  %840 = load i64, i64* %stride, align 8, !dbg !7008
  call void %837(i8* %838, i16* %839, i64 %840), !dbg !7003
  ret void, !dbg !7009
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal i32 @hevc_transform_skip_flag_decode(%struct.HEVCContext* %s, i32 %c_idx) #0 !dbg !7010 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  %c_idx.addr = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !7011, metadata !2708), !dbg !7012
  store i32 %c_idx, i32* %c_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c_idx.addr, metadata !7013, metadata !2708), !dbg !7014
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7015
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !7016
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !7016
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !7017
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 32), align 16, !dbg !7018
  %3 = load i32, i32* %c_idx.addr, align 4, !dbg !7019
  %tobool = icmp ne i32 %3, 0, !dbg !7020
  %lnot = xor i1 %tobool, true, !dbg !7020
  %lnot1 = xor i1 %lnot, true, !dbg !7021
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7021
  %add = add nsw i32 %2, %lnot.ext, !dbg !7022
  %idxprom = sext i32 %add to i64, !dbg !7023
  %4 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7023
  %HEVClc2 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %4, i32 0, i32 4, !dbg !7024
  %5 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc2, align 8, !dbg !7024
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %5, i32 0, i32 0, !dbg !7025
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !7023
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !7026
  ret i32 %call, !dbg !7027
}

; Function Attrs: nounwind uwtable
define internal i32 @explicit_rdpcm_flag_decode(%struct.HEVCContext* %s, i32 %c_idx) #0 !dbg !7028 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  %c_idx.addr = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !7029, metadata !2708), !dbg !7030
  store i32 %c_idx, i32* %c_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c_idx.addr, metadata !7031, metadata !2708), !dbg !7032
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7033
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !7034
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !7034
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !7035
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 33), align 4, !dbg !7036
  %3 = load i32, i32* %c_idx.addr, align 4, !dbg !7037
  %tobool = icmp ne i32 %3, 0, !dbg !7038
  %lnot = xor i1 %tobool, true, !dbg !7038
  %lnot1 = xor i1 %lnot, true, !dbg !7039
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7039
  %add = add nsw i32 %2, %lnot.ext, !dbg !7040
  %idxprom = sext i32 %add to i64, !dbg !7041
  %4 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7041
  %HEVClc2 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %4, i32 0, i32 4, !dbg !7042
  %5 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc2, align 8, !dbg !7042
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %5, i32 0, i32 0, !dbg !7043
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !7041
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !7044
  ret i32 %call, !dbg !7045
}

; Function Attrs: nounwind uwtable
define internal i32 @explicit_rdpcm_dir_flag_decode(%struct.HEVCContext* %s, i32 %c_idx) #0 !dbg !7046 {
entry:
  %s.addr = alloca %struct.HEVCContext*, align 8
  %c_idx.addr = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !7047, metadata !2708), !dbg !7048
  store i32 %c_idx, i32* %c_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c_idx.addr, metadata !7049, metadata !2708), !dbg !7050
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7051
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !7052
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !7052
  %cc = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %1, i32 0, i32 4, !dbg !7053
  %2 = load i32, i32* getelementptr inbounds ([49 x i32], [49 x i32]* @elem_offset, i64 0, i64 34), align 8, !dbg !7054
  %3 = load i32, i32* %c_idx.addr, align 4, !dbg !7055
  %tobool = icmp ne i32 %3, 0, !dbg !7056
  %lnot = xor i1 %tobool, true, !dbg !7056
  %lnot1 = xor i1 %lnot, true, !dbg !7057
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7057
  %add = add nsw i32 %2, %lnot.ext, !dbg !7058
  %idxprom = sext i32 %add to i64, !dbg !7059
  %4 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7059
  %HEVClc2 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %4, i32 0, i32 4, !dbg !7060
  %5 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc2, align 8, !dbg !7060
  %cabac_state = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %5, i32 0, i32 0, !dbg !7061
  %arrayidx = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state, i64 0, i64 %idxprom, !dbg !7059
  %call = call i32 @get_cabac(%struct.CABACContext* %cc, i8* %arrayidx), !dbg !7062
  ret i32 %call, !dbg !7063
}

; Function Attrs: nounwind uwtable
define void @ff_hevc_hls_mvd_coding(%struct.HEVCContext* %s, i32 %x0, i32 %y0, i32 %log2_cb_size) #0 !dbg !7064 {
entry:
  %c.addr.i.i117 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i.i117, metadata !7067, metadata !2708), !dbg !7071
  %val.addr.i.i118 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i118, metadata !7076, metadata !2708), !dbg !7077
  %tmp.i.i119 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i.i119, metadata !7078, metadata !2708), !dbg !7079
  %s.addr.i120 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i120, metadata !7080, metadata !2708), !dbg !7081
  %c.addr.i19.i69 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i19.i69, metadata !7067, metadata !2708), !dbg !7082
  %val.addr.i.i70 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i70, metadata !7076, metadata !2708), !dbg !7086
  %tmp.i20.i71 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i20.i71, metadata !7078, metadata !2708), !dbg !7087
  %c.addr.i14.i72 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i14.i72, metadata !3220, metadata !2708), !dbg !7088
  %tmp.i15.i73 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i15.i73, metadata !3225, metadata !2708), !dbg !7090
  %res.i16.i74 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i16.i74, metadata !3229, metadata !2708), !dbg !7091
  %c.addr.i.i75 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i.i75, metadata !3220, metadata !2708), !dbg !7092
  %tmp.i.i76 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i.i76, metadata !3225, metadata !2708), !dbg !7095
  %res.i.i77 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i.i77, metadata !3229, metadata !2708), !dbg !7096
  %retval.i78 = alloca i32, align 4
  %s.addr.i79 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i79, metadata !7097, metadata !2708), !dbg !7098
  %ret.i80 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i80, metadata !7099, metadata !2708), !dbg !7100
  %k.i81 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %k.i81, metadata !7101, metadata !2708), !dbg !7102
  %c.addr.i.i61 = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i.i61, metadata !7067, metadata !2708), !dbg !7103
  %val.addr.i.i62 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i62, metadata !7076, metadata !2708), !dbg !7107
  %tmp.i.i63 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i.i63, metadata !7078, metadata !2708), !dbg !7108
  %s.addr.i64 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i64, metadata !7080, metadata !2708), !dbg !7109
  %c.addr.i19.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i19.i, metadata !7067, metadata !2708), !dbg !7110
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !7076, metadata !2708), !dbg !7113
  %tmp.i20.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i20.i, metadata !7078, metadata !2708), !dbg !7114
  %c.addr.i14.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i14.i, metadata !3220, metadata !2708), !dbg !7115
  %tmp.i15.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i15.i, metadata !3225, metadata !2708), !dbg !7117
  %res.i16.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i16.i, metadata !3229, metadata !2708), !dbg !7118
  %c.addr.i.i = alloca %struct.CABACContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr.i.i, metadata !3220, metadata !2708), !dbg !7119
  %tmp.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %tmp.i.i, metadata !3225, metadata !2708), !dbg !7121
  %res.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i.i, metadata !3229, metadata !2708), !dbg !7122
  %retval.i = alloca i32, align 4
  %s.addr.i58 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i58, metadata !7097, metadata !2708), !dbg !7123
  %ret.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret.i, metadata !7099, metadata !2708), !dbg !7124
  %k.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %k.i, metadata !7101, metadata !2708), !dbg !7125
  %s.addr.i51 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i51, metadata !7126, metadata !2708), !dbg !7128
  %s.addr.i44 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i44, metadata !7126, metadata !2708), !dbg !7131
  %s.addr.i37 = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i37, metadata !7134, metadata !2708), !dbg !7136
  %s.addr.i = alloca %struct.HEVCContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr.i, metadata !7134, metadata !2708), !dbg !7138
  %s.addr = alloca %struct.HEVCContext*, align 8
  %x0.addr = alloca i32, align 4
  %y0.addr = alloca i32, align 4
  %log2_cb_size.addr = alloca i32, align 4
  %lc = alloca %struct.HEVCLocalContext*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.HEVCContext* %s, %struct.HEVCContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HEVCContext** %s.addr, metadata !7140, metadata !2708), !dbg !7141
  store i32 %x0, i32* %x0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x0.addr, metadata !7142, metadata !2708), !dbg !7143
  store i32 %y0, i32* %y0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y0.addr, metadata !7144, metadata !2708), !dbg !7145
  store i32 %log2_cb_size, i32* %log2_cb_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %log2_cb_size.addr, metadata !7146, metadata !2708), !dbg !7147
  call void @llvm.dbg.declare(metadata %struct.HEVCLocalContext** %lc, metadata !7148, metadata !2708), !dbg !7149
  %0 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7150
  %HEVClc = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %0, i32 0, i32 4, !dbg !7151
  %1 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc, align 8, !dbg !7151
  store %struct.HEVCLocalContext* %1, %struct.HEVCLocalContext** %lc, align 8, !dbg !7149
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7152, metadata !2708), !dbg !7153
  %2 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7154
  store %struct.HEVCContext* %2, %struct.HEVCContext** %s.addr.i, align 8, !dbg !7155
  %3 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i, align 8, !dbg !7156
  %HEVClc.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %3, i32 0, i32 4, !dbg !7157
  %4 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i, align 8, !dbg !7157
  %cc.i = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %4, i32 0, i32 4, !dbg !7158
  %5 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i, align 8, !dbg !7159
  %HEVClc1.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %5, i32 0, i32 4, !dbg !7160
  %6 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1.i, align 8, !dbg !7160
  %cabac_state.i = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %6, i32 0, i32 0, !dbg !7161
  %arrayidx.i = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state.i, i64 0, i64 31, !dbg !7159
  %call.i = call i32 @get_cabac(%struct.CABACContext* %cc.i, i8* %arrayidx.i) #5, !dbg !7162
  store i32 %call.i, i32* %x, align 4, !dbg !7153
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7163, metadata !2708), !dbg !7164
  %7 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7165
  store %struct.HEVCContext* %7, %struct.HEVCContext** %s.addr.i37, align 8, !dbg !7166
  %8 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i37, align 8, !dbg !7167
  %HEVClc.i38 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %8, i32 0, i32 4, !dbg !7168
  %9 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i38, align 8, !dbg !7168
  %cc.i39 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %9, i32 0, i32 4, !dbg !7169
  %10 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i37, align 8, !dbg !7170
  %HEVClc1.i40 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %10, i32 0, i32 4, !dbg !7171
  %11 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1.i40, align 8, !dbg !7171
  %cabac_state.i41 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %11, i32 0, i32 0, !dbg !7172
  %arrayidx.i42 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state.i41, i64 0, i64 31, !dbg !7170
  %call.i43 = call i32 @get_cabac(%struct.CABACContext* %cc.i39, i8* %arrayidx.i42) #5, !dbg !7173
  store i32 %call.i43, i32* %y, align 4, !dbg !7164
  %12 = load i32, i32* %x, align 4, !dbg !7174
  %tobool = icmp ne i32 %12, 0, !dbg !7174
  br i1 %tobool, label %if.then, label %if.end, !dbg !7175

if.then:                                          ; preds = %entry
  %13 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7176
  store %struct.HEVCContext* %13, %struct.HEVCContext** %s.addr.i44, align 8, !dbg !7177
  %14 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i44, align 8, !dbg !7178
  %HEVClc.i45 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %14, i32 0, i32 4, !dbg !7179
  %15 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i45, align 8, !dbg !7179
  %cc.i46 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %15, i32 0, i32 4, !dbg !7180
  %16 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i44, align 8, !dbg !7181
  %HEVClc1.i47 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %16, i32 0, i32 4, !dbg !7182
  %17 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1.i47, align 8, !dbg !7182
  %cabac_state.i48 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %17, i32 0, i32 0, !dbg !7183
  %arrayidx.i49 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state.i48, i64 0, i64 34, !dbg !7181
  %call.i50 = call i32 @get_cabac(%struct.CABACContext* %cc.i46, i8* %arrayidx.i49) #5, !dbg !7184
  %18 = load i32, i32* %x, align 4, !dbg !7185
  %add = add nsw i32 %18, %call.i50, !dbg !7185
  store i32 %add, i32* %x, align 4, !dbg !7185
  br label %if.end, !dbg !7186

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %y, align 4, !dbg !7187
  %tobool3 = icmp ne i32 %19, 0, !dbg !7187
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !7188

if.then4:                                         ; preds = %if.end
  %20 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7189
  store %struct.HEVCContext* %20, %struct.HEVCContext** %s.addr.i51, align 8, !dbg !7190
  %21 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i51, align 8, !dbg !7191
  %HEVClc.i52 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %21, i32 0, i32 4, !dbg !7192
  %22 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i52, align 8, !dbg !7192
  %cc.i53 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %22, i32 0, i32 4, !dbg !7193
  %23 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i51, align 8, !dbg !7194
  %HEVClc1.i54 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %23, i32 0, i32 4, !dbg !7195
  %24 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc1.i54, align 8, !dbg !7195
  %cabac_state.i55 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %24, i32 0, i32 0, !dbg !7196
  %arrayidx.i56 = getelementptr inbounds [199 x i8], [199 x i8]* %cabac_state.i55, i64 0, i64 34, !dbg !7194
  %call.i57 = call i32 @get_cabac(%struct.CABACContext* %cc.i53, i8* %arrayidx.i56) #5, !dbg !7197
  %25 = load i32, i32* %y, align 4, !dbg !7198
  %add6 = add nsw i32 %25, %call.i57, !dbg !7198
  store i32 %add6, i32* %y, align 4, !dbg !7198
  br label %if.end7, !dbg !7199

if.end7:                                          ; preds = %if.then4, %if.end
  %26 = load i32, i32* %x, align 4, !dbg !7200
  switch i32 %26, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb10
    i32 0, label %sw.bb16
  ], !dbg !7201

sw.bb:                                            ; preds = %if.end7
  %27 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7202
  store %struct.HEVCContext* %27, %struct.HEVCContext** %s.addr.i58, align 8, !dbg !7203
  store i32 2, i32* %ret.i, align 4, !dbg !7124
  store i32 1, i32* %k.i, align 4, !dbg !7125
  br label %while.cond.i, !dbg !7204

while.cond.i:                                     ; preds = %while.body.i, %sw.bb
  %28 = load i32, i32* %k.i, align 4, !dbg !7205
  %cmp.i = icmp slt i32 %28, 31, !dbg !7207
  br i1 %cmp.i, label %land.rhs.i, label %land.end.i, !dbg !7208

land.rhs.i:                                       ; preds = %while.cond.i
  %29 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i58, align 8, !dbg !7209
  %HEVClc.i59 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %29, i32 0, i32 4, !dbg !7210
  %30 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i59, align 8, !dbg !7210
  %cc.i60 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %30, i32 0, i32 4, !dbg !7211
  store %struct.CABACContext* %cc.i60, %struct.CABACContext** %c.addr.i.i, align 8, !dbg !7212
  %31 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i.i, align 8, !dbg !7213
  %32 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %31, i64 0, i64 24, i64 32, i64 4) #5, !dbg !7214, !srcloc !3250
  %asmresult.i.i = extractvalue { i32, i64 } %32, 0, !dbg !7214
  %asmresult2.i.i = extractvalue { i32, i64 } %32, 1, !dbg !7214
  store i32 %asmresult.i.i, i32* %res.i.i, align 4, !dbg !7214
  store i64 %asmresult2.i.i, i64* %tmp.i.i, align 8, !dbg !7214
  %33 = load i32, i32* %res.i.i, align 4, !dbg !7215
  %tobool.i = icmp ne i32 %33, 0, !dbg !7216
  br label %land.end.i, !dbg !7203

land.end.i:                                       ; preds = %land.rhs.i, %while.cond.i
  %34 = phi i1 [ false, %while.cond.i ], [ %tobool.i, %land.rhs.i ], !dbg !7203
  br i1 %34, label %while.body.i, label %while.end.i, !dbg !7217

while.body.i:                                     ; preds = %land.end.i
  %35 = load i32, i32* %k.i, align 4, !dbg !7219
  %shl.i = shl i32 1, %35, !dbg !7221
  %36 = load i32, i32* %ret.i, align 4, !dbg !7222
  %add.i = add i32 %36, %shl.i, !dbg !7222
  store i32 %add.i, i32* %ret.i, align 4, !dbg !7222
  %37 = load i32, i32* %k.i, align 4, !dbg !7223
  %inc.i = add nsw i32 %37, 1, !dbg !7223
  store i32 %inc.i, i32* %k.i, align 4, !dbg !7223
  br label %while.cond.i, !dbg !7224, !llvm.loop !7226

while.end.i:                                      ; preds = %land.end.i
  %38 = load i32, i32* %k.i, align 4, !dbg !7228
  %cmp1.i = icmp eq i32 %38, 31, !dbg !7230
  br i1 %cmp1.i, label %if.then.i, label %if.end.i, !dbg !7231

if.then.i:                                        ; preds = %while.end.i
  %39 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i58, align 8, !dbg !7232
  %avctx.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %39, i32 0, i32 1, !dbg !7234
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.i, align 8, !dbg !7234
  %41 = bitcast %struct.AVCodecContext* %40 to i8*, !dbg !7232
  %42 = load i32, i32* %k.i, align 4, !dbg !7235
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i32 %42) #5, !dbg !7236
  store i32 0, i32* %retval.i, align 4, !dbg !7237
  br label %mvd_decode.exit, !dbg !7237

if.end.i:                                         ; preds = %while.end.i
  br label %while.cond2.i, !dbg !7238

while.cond2.i:                                    ; preds = %while.body4.i, %if.end.i
  %43 = load i32, i32* %k.i, align 4, !dbg !7239
  %dec.i = add nsw i32 %43, -1, !dbg !7239
  store i32 %dec.i, i32* %k.i, align 4, !dbg !7239
  %tobool3.i = icmp ne i32 %43, 0, !dbg !7240
  br i1 %tobool3.i, label %while.body4.i, label %while.end10.i, !dbg !7240

while.body4.i:                                    ; preds = %while.cond2.i
  %44 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i58, align 8, !dbg !7241
  %HEVClc5.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %44, i32 0, i32 4, !dbg !7242
  %45 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc5.i, align 8, !dbg !7242
  %cc6.i = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %45, i32 0, i32 4, !dbg !7243
  store %struct.CABACContext* %cc6.i, %struct.CABACContext** %c.addr.i14.i, align 8, !dbg !7244
  %46 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i14.i, align 8, !dbg !7245
  %47 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %46, i64 0, i64 24, i64 32, i64 4) #5, !dbg !7246, !srcloc !3250
  %asmresult.i17.i = extractvalue { i32, i64 } %47, 0, !dbg !7246
  %asmresult2.i18.i = extractvalue { i32, i64 } %47, 1, !dbg !7246
  store i32 %asmresult.i17.i, i32* %res.i16.i, align 4, !dbg !7246
  store i64 %asmresult2.i18.i, i64* %tmp.i15.i, align 8, !dbg !7246
  %48 = load i32, i32* %res.i16.i, align 4, !dbg !7247
  %49 = load i32, i32* %k.i, align 4, !dbg !7248
  %shl8.i = shl i32 %48, %49, !dbg !7249
  %50 = load i32, i32* %ret.i, align 4, !dbg !7250
  %add9.i = add nsw i32 %50, %shl8.i, !dbg !7250
  store i32 %add9.i, i32* %ret.i, align 4, !dbg !7250
  br label %while.cond2.i, !dbg !7251, !llvm.loop !7252

while.end10.i:                                    ; preds = %while.cond2.i
  %51 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i58, align 8, !dbg !7254
  %HEVClc11.i = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %51, i32 0, i32 4, !dbg !7255
  %52 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc11.i, align 8, !dbg !7255
  %cc12.i = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %52, i32 0, i32 4, !dbg !7256
  %53 = load i32, i32* %ret.i, align 4, !dbg !7257
  %sub.i = sub nsw i32 0, %53, !dbg !7258
  store %struct.CABACContext* %cc12.i, %struct.CABACContext** %c.addr.i19.i, align 8, !dbg !7259
  store i32 %sub.i, i32* %val.addr.i.i, align 4, !dbg !7259
  %54 = load i32, i32* %val.addr.i.i, align 4, !dbg !7260
  %55 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i19.i, align 8, !dbg !7261
  %56 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09xor           %edx, %ecx     \0A\09sub           %edx, %ecx     \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %edx     \0A\09bswap         %edx            \0A\09shrl            $$15, %edx     \0A\09addl          %edx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "={cx},=&r,r,i,i,i,i,0,~{eax},~{edx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %55, i64 0, i64 24, i64 32, i64 4, i32 %54) #5, !dbg !7260, !srcloc !7262
  %asmresult.i21.i = extractvalue { i32, i64 } %56, 0, !dbg !7260
  %asmresult1.i.i = extractvalue { i32, i64 } %56, 1, !dbg !7260
  store i32 %asmresult.i21.i, i32* %val.addr.i.i, align 4, !dbg !7260
  store i64 %asmresult1.i.i, i64* %tmp.i20.i, align 8, !dbg !7260
  %57 = load i32, i32* %val.addr.i.i, align 4, !dbg !7263
  store i32 %57, i32* %retval.i, align 4, !dbg !7264
  br label %mvd_decode.exit, !dbg !7264

mvd_decode.exit:                                  ; preds = %if.then.i, %while.end10.i
  %58 = load i32, i32* %retval.i, align 4, !dbg !7265
  %conv = trunc i32 %58 to i16, !dbg !7203
  %59 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !7266
  %pu = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %59, i32 0, i32 21, !dbg !7267
  %mvd = getelementptr inbounds %struct.PredictionUnit, %struct.PredictionUnit* %pu, i32 0, i32 3, !dbg !7268
  %x9 = getelementptr inbounds %struct.Mv, %struct.Mv* %mvd, i32 0, i32 0, !dbg !7269
  store i16 %conv, i16* %x9, align 4, !dbg !7270
  br label %sw.epilog, !dbg !7271

sw.bb10:                                          ; preds = %if.end7
  %60 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7272
  store %struct.HEVCContext* %60, %struct.HEVCContext** %s.addr.i64, align 8, !dbg !7273
  %61 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i64, align 8, !dbg !7274
  %HEVClc.i65 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %61, i32 0, i32 4, !dbg !7275
  %62 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i65, align 8, !dbg !7275
  %cc.i66 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %62, i32 0, i32 4, !dbg !7276
  store %struct.CABACContext* %cc.i66, %struct.CABACContext** %c.addr.i.i61, align 8, !dbg !7277
  store i32 -1, i32* %val.addr.i.i62, align 4, !dbg !7277
  %63 = load i32, i32* %val.addr.i.i62, align 4, !dbg !7278
  %64 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i.i61, align 8, !dbg !7279
  %65 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09xor           %edx, %ecx     \0A\09sub           %edx, %ecx     \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %edx     \0A\09bswap         %edx            \0A\09shrl            $$15, %edx     \0A\09addl          %edx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "={cx},=&r,r,i,i,i,i,0,~{eax},~{edx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %64, i64 0, i64 24, i64 32, i64 4, i32 %63) #5, !dbg !7278, !srcloc !7262
  %asmresult.i.i67 = extractvalue { i32, i64 } %65, 0, !dbg !7278
  %asmresult1.i.i68 = extractvalue { i32, i64 } %65, 1, !dbg !7278
  store i32 %asmresult.i.i67, i32* %val.addr.i.i62, align 4, !dbg !7278
  store i64 %asmresult1.i.i68, i64* %tmp.i.i63, align 8, !dbg !7278
  %66 = load i32, i32* %val.addr.i.i62, align 4, !dbg !7280
  %conv12 = trunc i32 %66 to i16, !dbg !7273
  %67 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !7281
  %pu13 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %67, i32 0, i32 21, !dbg !7282
  %mvd14 = getelementptr inbounds %struct.PredictionUnit, %struct.PredictionUnit* %pu13, i32 0, i32 3, !dbg !7283
  %x15 = getelementptr inbounds %struct.Mv, %struct.Mv* %mvd14, i32 0, i32 0, !dbg !7284
  store i16 %conv12, i16* %x15, align 4, !dbg !7285
  br label %sw.epilog, !dbg !7286

sw.bb16:                                          ; preds = %if.end7
  %68 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !7287
  %pu17 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %68, i32 0, i32 21, !dbg !7288
  %mvd18 = getelementptr inbounds %struct.PredictionUnit, %struct.PredictionUnit* %pu17, i32 0, i32 3, !dbg !7289
  %x19 = getelementptr inbounds %struct.Mv, %struct.Mv* %mvd18, i32 0, i32 0, !dbg !7290
  store i16 0, i16* %x19, align 4, !dbg !7291
  br label %sw.epilog, !dbg !7292

sw.epilog:                                        ; preds = %if.end7, %sw.bb16, %sw.bb10, %mvd_decode.exit
  %69 = load i32, i32* %y, align 4, !dbg !7293
  switch i32 %69, label %sw.epilog36 [
    i32 2, label %sw.bb20
    i32 1, label %sw.bb26
    i32 0, label %sw.bb32
  ], !dbg !7294

sw.bb20:                                          ; preds = %sw.epilog
  %70 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7295
  store %struct.HEVCContext* %70, %struct.HEVCContext** %s.addr.i79, align 8, !dbg !7296
  store i32 2, i32* %ret.i80, align 4, !dbg !7100
  store i32 1, i32* %k.i81, align 4, !dbg !7102
  br label %while.cond.i83, !dbg !7297

while.cond.i83:                                   ; preds = %while.body.i94, %sw.bb20
  %71 = load i32, i32* %k.i81, align 4, !dbg !7298
  %cmp.i82 = icmp slt i32 %71, 31, !dbg !7299
  br i1 %cmp.i82, label %land.rhs.i89, label %land.end.i90, !dbg !7300

land.rhs.i89:                                     ; preds = %while.cond.i83
  %72 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i79, align 8, !dbg !7301
  %HEVClc.i84 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %72, i32 0, i32 4, !dbg !7302
  %73 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i84, align 8, !dbg !7302
  %cc.i85 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %73, i32 0, i32 4, !dbg !7303
  store %struct.CABACContext* %cc.i85, %struct.CABACContext** %c.addr.i.i75, align 8, !dbg !7304
  %74 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i.i75, align 8, !dbg !7305
  %75 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %74, i64 0, i64 24, i64 32, i64 4) #5, !dbg !7306, !srcloc !3250
  %asmresult.i.i86 = extractvalue { i32, i64 } %75, 0, !dbg !7306
  %asmresult2.i.i87 = extractvalue { i32, i64 } %75, 1, !dbg !7306
  store i32 %asmresult.i.i86, i32* %res.i.i77, align 4, !dbg !7306
  store i64 %asmresult2.i.i87, i64* %tmp.i.i76, align 8, !dbg !7306
  %76 = load i32, i32* %res.i.i77, align 4, !dbg !7307
  %tobool.i88 = icmp ne i32 %76, 0, !dbg !7308
  br label %land.end.i90, !dbg !7296

land.end.i90:                                     ; preds = %land.rhs.i89, %while.cond.i83
  %77 = phi i1 [ false, %while.cond.i83 ], [ %tobool.i88, %land.rhs.i89 ], !dbg !7296
  br i1 %77, label %while.body.i94, label %while.end.i96, !dbg !7309

while.body.i94:                                   ; preds = %land.end.i90
  %78 = load i32, i32* %k.i81, align 4, !dbg !7310
  %shl.i91 = shl i32 1, %78, !dbg !7311
  %79 = load i32, i32* %ret.i80, align 4, !dbg !7312
  %add.i92 = add i32 %79, %shl.i91, !dbg !7312
  store i32 %add.i92, i32* %ret.i80, align 4, !dbg !7312
  %80 = load i32, i32* %k.i81, align 4, !dbg !7313
  %inc.i93 = add nsw i32 %80, 1, !dbg !7313
  store i32 %inc.i93, i32* %k.i81, align 4, !dbg !7313
  br label %while.cond.i83, !dbg !7314, !llvm.loop !7226

while.end.i96:                                    ; preds = %land.end.i90
  %81 = load i32, i32* %k.i81, align 4, !dbg !7315
  %cmp1.i95 = icmp eq i32 %81, 31, !dbg !7316
  br i1 %cmp1.i95, label %if.then.i98, label %if.end.i99, !dbg !7317

if.then.i98:                                      ; preds = %while.end.i96
  %82 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i79, align 8, !dbg !7318
  %avctx.i97 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %82, i32 0, i32 1, !dbg !7319
  %83 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.i97, align 8, !dbg !7319
  %84 = bitcast %struct.AVCodecContext* %83 to i8*, !dbg !7318
  %85 = load i32, i32* %k.i81, align 4, !dbg !7320
  call void (i8*, i32, i8*, ...) @av_log(i8* %84, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i32 %85) #5, !dbg !7321
  store i32 0, i32* %retval.i78, align 4, !dbg !7322
  br label %mvd_decode.exit116, !dbg !7322

if.end.i99:                                       ; preds = %while.end.i96
  br label %while.cond2.i102, !dbg !7323

while.cond2.i102:                                 ; preds = %while.body4.i109, %if.end.i99
  %86 = load i32, i32* %k.i81, align 4, !dbg !7324
  %dec.i100 = add nsw i32 %86, -1, !dbg !7324
  store i32 %dec.i100, i32* %k.i81, align 4, !dbg !7324
  %tobool3.i101 = icmp ne i32 %86, 0, !dbg !7325
  br i1 %tobool3.i101, label %while.body4.i109, label %while.end10.i115, !dbg !7325

while.body4.i109:                                 ; preds = %while.cond2.i102
  %87 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i79, align 8, !dbg !7326
  %HEVClc5.i103 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %87, i32 0, i32 4, !dbg !7327
  %88 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc5.i103, align 8, !dbg !7327
  %cc6.i104 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %88, i32 0, i32 4, !dbg !7328
  store %struct.CABACContext* %cc6.i104, %struct.CABACContext** %c.addr.i14.i72, align 8, !dbg !7329
  %89 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i14.i72, align 8, !dbg !7330
  %90 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09inc           %edx            \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %ecx     \0A\09bswap         %ecx            \0A\09shrl            $$15, %ecx     \0A\09addl          %ecx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "=&{dx},=&r,r,i,i,i,i,~{eax},~{ecx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %89, i64 0, i64 24, i64 32, i64 4) #5, !dbg !7331, !srcloc !3250
  %asmresult.i17.i105 = extractvalue { i32, i64 } %90, 0, !dbg !7331
  %asmresult2.i18.i106 = extractvalue { i32, i64 } %90, 1, !dbg !7331
  store i32 %asmresult.i17.i105, i32* %res.i16.i74, align 4, !dbg !7331
  store i64 %asmresult2.i18.i106, i64* %tmp.i15.i73, align 8, !dbg !7331
  %91 = load i32, i32* %res.i16.i74, align 4, !dbg !7332
  %92 = load i32, i32* %k.i81, align 4, !dbg !7333
  %shl8.i107 = shl i32 %91, %92, !dbg !7334
  %93 = load i32, i32* %ret.i80, align 4, !dbg !7335
  %add9.i108 = add nsw i32 %93, %shl8.i107, !dbg !7335
  store i32 %add9.i108, i32* %ret.i80, align 4, !dbg !7335
  br label %while.cond2.i102, !dbg !7336, !llvm.loop !7252

while.end10.i115:                                 ; preds = %while.cond2.i102
  %94 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i79, align 8, !dbg !7337
  %HEVClc11.i110 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %94, i32 0, i32 4, !dbg !7338
  %95 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc11.i110, align 8, !dbg !7338
  %cc12.i111 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %95, i32 0, i32 4, !dbg !7339
  %96 = load i32, i32* %ret.i80, align 4, !dbg !7340
  %sub.i112 = sub nsw i32 0, %96, !dbg !7341
  store %struct.CABACContext* %cc12.i111, %struct.CABACContext** %c.addr.i19.i69, align 8, !dbg !7342
  store i32 %sub.i112, i32* %val.addr.i.i70, align 4, !dbg !7342
  %97 = load i32, i32* %val.addr.i.i70, align 4, !dbg !7343
  %98 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i19.i69, align 8, !dbg !7344
  %99 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09xor           %edx, %ecx     \0A\09sub           %edx, %ecx     \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %edx     \0A\09bswap         %edx            \0A\09shrl            $$15, %edx     \0A\09addl          %edx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "={cx},=&r,r,i,i,i,i,0,~{eax},~{edx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %98, i64 0, i64 24, i64 32, i64 4, i32 %97) #5, !dbg !7343, !srcloc !7262
  %asmresult.i21.i113 = extractvalue { i32, i64 } %99, 0, !dbg !7343
  %asmresult1.i.i114 = extractvalue { i32, i64 } %99, 1, !dbg !7343
  store i32 %asmresult.i21.i113, i32* %val.addr.i.i70, align 4, !dbg !7343
  store i64 %asmresult1.i.i114, i64* %tmp.i20.i71, align 8, !dbg !7343
  %100 = load i32, i32* %val.addr.i.i70, align 4, !dbg !7345
  store i32 %100, i32* %retval.i78, align 4, !dbg !7346
  br label %mvd_decode.exit116, !dbg !7346

mvd_decode.exit116:                               ; preds = %if.then.i98, %while.end10.i115
  %101 = load i32, i32* %retval.i78, align 4, !dbg !7347
  %conv22 = trunc i32 %101 to i16, !dbg !7296
  %102 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !7348
  %pu23 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %102, i32 0, i32 21, !dbg !7349
  %mvd24 = getelementptr inbounds %struct.PredictionUnit, %struct.PredictionUnit* %pu23, i32 0, i32 3, !dbg !7350
  %y25 = getelementptr inbounds %struct.Mv, %struct.Mv* %mvd24, i32 0, i32 1, !dbg !7351
  store i16 %conv22, i16* %y25, align 2, !dbg !7352
  br label %sw.epilog36, !dbg !7353

sw.bb26:                                          ; preds = %sw.epilog
  %103 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr, align 8, !dbg !7354
  store %struct.HEVCContext* %103, %struct.HEVCContext** %s.addr.i120, align 8, !dbg !7355
  %104 = load %struct.HEVCContext*, %struct.HEVCContext** %s.addr.i120, align 8, !dbg !7356
  %HEVClc.i121 = getelementptr inbounds %struct.HEVCContext, %struct.HEVCContext* %104, i32 0, i32 4, !dbg !7357
  %105 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %HEVClc.i121, align 8, !dbg !7357
  %cc.i122 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %105, i32 0, i32 4, !dbg !7358
  store %struct.CABACContext* %cc.i122, %struct.CABACContext** %c.addr.i.i117, align 8, !dbg !7359
  store i32 -1, i32* %val.addr.i.i118, align 4, !dbg !7359
  %106 = load i32, i32* %val.addr.i.i118, align 4, !dbg !7360
  %107 = load %struct.CABACContext*, %struct.CABACContext** %c.addr.i.i117, align 8, !dbg !7361
  %108 = call { i32, i64 } asm sideeffect "movl        ${6:c}($2), ${1:k}       \0A\09movl        ${3:c}($2), %eax     \0A\09shl             $$17, ${1:k}       \0A\09add           %eax, %eax     \0A\09sub             ${1:k}, %eax     \0A\09cdq                            \0A\09and           %edx, ${1:k}       \0A\09add             ${1:k}, %eax     \0A\09xor           %edx, %ecx     \0A\09sub           %edx, %ecx     \0A\09test           %ax, %ax      \0A\09jnz              1f            \0A\09mov         ${4:c}($2), $1        \0A\09subl        $$0xFFFF, %eax     \0A\09movzwl         ($1), %edx     \0A\09bswap         %edx            \0A\09shrl            $$15, %edx     \0A\09addl          %edx, %eax     \0A\09cmp         ${5:c}($2), $1        \0A\09jge              1f            \0A\09addq   $$2, ${4:c}($2)   \0A\091:                             \0A\09movl          %eax, ${3:c}($2)   \0A\09", "={cx},=&r,r,i,i,i,i,0,~{eax},~{edx},~{memory},~{dirflag},~{fpsr},~{flags}"(%struct.CABACContext* %107, i64 0, i64 24, i64 32, i64 4, i32 %106) #5, !dbg !7360, !srcloc !7262
  %asmresult.i.i123 = extractvalue { i32, i64 } %108, 0, !dbg !7360
  %asmresult1.i.i124 = extractvalue { i32, i64 } %108, 1, !dbg !7360
  store i32 %asmresult.i.i123, i32* %val.addr.i.i118, align 4, !dbg !7360
  store i64 %asmresult1.i.i124, i64* %tmp.i.i119, align 8, !dbg !7360
  %109 = load i32, i32* %val.addr.i.i118, align 4, !dbg !7362
  %conv28 = trunc i32 %109 to i16, !dbg !7355
  %110 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !7363
  %pu29 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %110, i32 0, i32 21, !dbg !7364
  %mvd30 = getelementptr inbounds %struct.PredictionUnit, %struct.PredictionUnit* %pu29, i32 0, i32 3, !dbg !7365
  %y31 = getelementptr inbounds %struct.Mv, %struct.Mv* %mvd30, i32 0, i32 1, !dbg !7366
  store i16 %conv28, i16* %y31, align 2, !dbg !7367
  br label %sw.epilog36, !dbg !7368

sw.bb32:                                          ; preds = %sw.epilog
  %111 = load %struct.HEVCLocalContext*, %struct.HEVCLocalContext** %lc, align 8, !dbg !7369
  %pu33 = getelementptr inbounds %struct.HEVCLocalContext, %struct.HEVCLocalContext* %111, i32 0, i32 21, !dbg !7370
  %mvd34 = getelementptr inbounds %struct.PredictionUnit, %struct.PredictionUnit* %pu33, i32 0, i32 3, !dbg !7371
  %y35 = getelementptr inbounds %struct.Mv, %struct.Mv* %mvd34, i32 0, i32 1, !dbg !7372
  store i16 0, i16* %y35, align 2, !dbg !7373
  br label %sw.epilog36, !dbg !7374

sw.epilog36:                                      ; preds = %sw.epilog, %sw.bb32, %sw.bb26, %mvd_decode.exit116
  ret void, !dbg !7375
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !7376 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7379, metadata !2708), !dbg !7380
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7381, metadata !2708), !dbg !7382
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !7383, metadata !2708), !dbg !7384
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7385
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7386
  %1 = load i32, i32* %index, align 8, !dbg !7386
  store i32 %1, i32* %re_index, align 4, !dbg !7384
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !7387, metadata !2708), !dbg !7388
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !7389, metadata !2708), !dbg !7390
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7391
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !7392
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7392
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !7390
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !7393
  %5 = load i32, i32* %re_index, align 4, !dbg !7394
  %6 = load i32, i32* %n.addr, align 4, !dbg !7395
  %add = add i32 %5, %6, !dbg !7396
  %cmp = icmp ugt i32 %4, %add, !dbg !7397
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7398

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !7399
  %8 = load i32, i32* %n.addr, align 4, !dbg !7401
  %add1 = add i32 %7, %8, !dbg !7402
  br label %cond.end, !dbg !7403

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !7404
  br label %cond.end, !dbg !7406

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !7407
  store i32 %cond, i32* %re_index, align 4, !dbg !7409
  %10 = load i32, i32* %re_index, align 4, !dbg !7410
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7411
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !7412
  store i32 %10, i32* %index2, align 8, !dbg !7413
  ret void, !dbg !7414
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @align_get_bits(%struct.GetBitContext* %s) #4 !dbg !7415 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7418, metadata !2708), !dbg !7419
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7420, metadata !2708), !dbg !7421
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7422
  %call = call i32 @get_bits_count(%struct.GetBitContext* %0), !dbg !7423
  %sub = sub nsw i32 0, %call, !dbg !7424
  %and = and i32 %sub, 7, !dbg !7425
  store i32 %and, i32* %n, align 4, !dbg !7421
  %1 = load i32, i32* %n, align 4, !dbg !7426
  %tobool = icmp ne i32 %1, 0, !dbg !7426
  br i1 %tobool, label %if.then, label %if.end, !dbg !7428

if.then:                                          ; preds = %entry
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7429
  %3 = load i32, i32* %n, align 4, !dbg !7430
  call void @skip_bits(%struct.GetBitContext* %2, i32 %3), !dbg !7431
  br label %if.end, !dbg !7431

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7432
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !7433
  %5 = load i8*, i8** %buffer, align 8, !dbg !7433
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7434
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !7435
  %7 = load i32, i32* %index, align 8, !dbg !7435
  %shr = ashr i32 %7, 3, !dbg !7436
  %idx.ext = sext i32 %shr to i64, !dbg !7437
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7437
  ret i8* %add.ptr, !dbg !7438
}

declare i32 @ff_init_cabac_decoder(%struct.CABACContext*, i8*, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #4 !dbg !7439 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7444, metadata !2708), !dbg !7445
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7446
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7447
  %1 = load i32, i32* %index, align 8, !dbg !7447
  ret i32 %1, !dbg !7448
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #4 !dbg !7449 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7452, metadata !2708), !dbg !7453
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7454
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !7455
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !7455
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7456
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !7457
  %sub = sub nsw i32 %1, %call, !dbg !7458
  ret i32 %sub, !dbg !7459
}

; Function Attrs: nounwind uwtable
define internal i8* @skip_bytes(%struct.CABACContext* %c, i32 %n) #0 !dbg !7460 {
entry:
  %retval = alloca i8*, align 8
  %c.addr = alloca %struct.CABACContext*, align 8
  %n.addr = alloca i32, align 4
  %ptr = alloca i8*, align 8
  store %struct.CABACContext* %c, %struct.CABACContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr, metadata !7463, metadata !2708), !dbg !7464
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7465, metadata !2708), !dbg !7466
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !7467, metadata !2708), !dbg !7468
  %0 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7469
  %bytestream = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %0, i32 0, i32 4, !dbg !7470
  %1 = load i8*, i8** %bytestream, align 8, !dbg !7470
  store i8* %1, i8** %ptr, align 8, !dbg !7468
  %2 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7471
  %low = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %2, i32 0, i32 0, !dbg !7473
  %3 = load i32, i32* %low, align 8, !dbg !7473
  %and = and i32 %3, 1, !dbg !7474
  %tobool = icmp ne i32 %and, 0, !dbg !7474
  br i1 %tobool, label %if.then, label %if.end, !dbg !7475

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %ptr, align 8, !dbg !7476
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !7476
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !7476
  br label %if.end, !dbg !7477

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7478
  %low1 = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %5, i32 0, i32 0, !dbg !7480
  %6 = load i32, i32* %low1, align 8, !dbg !7480
  %and2 = and i32 %6, 511, !dbg !7481
  %tobool3 = icmp ne i32 %and2, 0, !dbg !7481
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !7482

if.then4:                                         ; preds = %if.end
  %7 = load i8*, i8** %ptr, align 8, !dbg !7483
  %incdec.ptr5 = getelementptr inbounds i8, i8* %7, i32 -1, !dbg !7483
  store i8* %incdec.ptr5, i8** %ptr, align 8, !dbg !7483
  br label %if.end6, !dbg !7484

if.end6:                                          ; preds = %if.then4, %if.end
  %8 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7485
  %bytestream_end = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %8, i32 0, i32 5, !dbg !7487
  %9 = load i8*, i8** %bytestream_end, align 8, !dbg !7487
  %10 = load i8*, i8** %ptr, align 8, !dbg !7488
  %sub.ptr.lhs.cast = ptrtoint i8* %9 to i64, !dbg !7489
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64, !dbg !7489
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7489
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !7490
  %11 = load i32, i32* %n.addr, align 4, !dbg !7491
  %cmp = icmp slt i32 %conv, %11, !dbg !7492
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !7493

if.then8:                                         ; preds = %if.end6
  store i8* null, i8** %retval, align 8, !dbg !7494
  br label %return, !dbg !7494

if.end9:                                          ; preds = %if.end6
  %12 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7495
  %13 = load i8*, i8** %ptr, align 8, !dbg !7497
  %14 = load i32, i32* %n.addr, align 4, !dbg !7498
  %idx.ext = sext i32 %14 to i64, !dbg !7499
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext, !dbg !7499
  %15 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7500
  %bytestream_end10 = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %15, i32 0, i32 5, !dbg !7501
  %16 = load i8*, i8** %bytestream_end10, align 8, !dbg !7501
  %17 = load i8*, i8** %ptr, align 8, !dbg !7502
  %sub.ptr.lhs.cast11 = ptrtoint i8* %16 to i64, !dbg !7503
  %sub.ptr.rhs.cast12 = ptrtoint i8* %17 to i64, !dbg !7503
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12, !dbg !7503
  %18 = load i32, i32* %n.addr, align 4, !dbg !7504
  %conv14 = sext i32 %18 to i64, !dbg !7504
  %sub = sub nsw i64 %sub.ptr.sub13, %conv14, !dbg !7505
  %conv15 = trunc i64 %sub to i32, !dbg !7500
  %call = call i32 @ff_init_cabac_decoder(%struct.CABACContext* %12, i8* %add.ptr, i32 %conv15), !dbg !7506
  %cmp16 = icmp slt i32 %call, 0, !dbg !7507
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !7508

if.then18:                                        ; preds = %if.end9
  store i8* null, i8** %retval, align 8, !dbg !7509
  br label %return, !dbg !7509

if.end19:                                         ; preds = %if.end9
  %19 = load i8*, i8** %ptr, align 8, !dbg !7510
  store i8* %19, i8** %retval, align 8, !dbg !7511
  br label %return, !dbg !7511

return:                                           ; preds = %if.end19, %if.then18, %if.then8
  %20 = load i8*, i8** %retval, align 8, !dbg !7512
  ret i8* %20, !dbg !7512
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @renorm_cabac_decoder_once(%struct.CABACContext* %c) #4 !dbg !7513 {
entry:
  %c.addr = alloca %struct.CABACContext*, align 8
  %shift = alloca i32, align 4
  store %struct.CABACContext* %c, %struct.CABACContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr, metadata !7516, metadata !2708), !dbg !7517
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !7518, metadata !2708), !dbg !7519
  %0 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7520
  %range = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %0, i32 0, i32 1, !dbg !7521
  %1 = load i32, i32* %range, align 4, !dbg !7521
  %sub = sub nsw i32 %1, 256, !dbg !7522
  %shr = lshr i32 %sub, 31, !dbg !7523
  store i32 %shr, i32* %shift, align 4, !dbg !7519
  %2 = load i32, i32* %shift, align 4, !dbg !7524
  %3 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7525
  %range1 = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %3, i32 0, i32 1, !dbg !7526
  %4 = load i32, i32* %range1, align 4, !dbg !7527
  %shl = shl i32 %4, %2, !dbg !7527
  store i32 %shl, i32* %range1, align 4, !dbg !7527
  %5 = load i32, i32* %shift, align 4, !dbg !7528
  %6 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7529
  %low = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %6, i32 0, i32 0, !dbg !7530
  %7 = load i32, i32* %low, align 8, !dbg !7531
  %shl2 = shl i32 %7, %5, !dbg !7531
  store i32 %shl2, i32* %low, align 8, !dbg !7531
  %8 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7532
  %low3 = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %8, i32 0, i32 0, !dbg !7534
  %9 = load i32, i32* %low3, align 8, !dbg !7534
  %and = and i32 %9, 65535, !dbg !7535
  %tobool = icmp ne i32 %and, 0, !dbg !7535
  br i1 %tobool, label %if.end, label %if.then, !dbg !7536

if.then:                                          ; preds = %entry
  %10 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7537
  call void @refill(%struct.CABACContext* %10), !dbg !7538
  br label %if.end, !dbg !7538

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7539
}

; Function Attrs: nounwind uwtable
define internal void @refill(%struct.CABACContext* %c) #0 !dbg !7540 {
entry:
  %c.addr = alloca %struct.CABACContext*, align 8
  store %struct.CABACContext* %c, %struct.CABACContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CABACContext** %c.addr, metadata !7541, metadata !2708), !dbg !7542
  %0 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7543
  %bytestream = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %0, i32 0, i32 4, !dbg !7544
  %1 = load i8*, i8** %bytestream, align 8, !dbg !7544
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !7543
  %2 = load i8, i8* %arrayidx, align 1, !dbg !7543
  %conv = zext i8 %2 to i32, !dbg !7543
  %shl = shl i32 %conv, 9, !dbg !7545
  %3 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7546
  %bytestream1 = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %3, i32 0, i32 4, !dbg !7547
  %4 = load i8*, i8** %bytestream1, align 8, !dbg !7547
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !7546
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !7546
  %conv3 = zext i8 %5 to i32, !dbg !7546
  %shl4 = shl i32 %conv3, 1, !dbg !7548
  %add = add nsw i32 %shl, %shl4, !dbg !7549
  %6 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7550
  %low = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %6, i32 0, i32 0, !dbg !7551
  %7 = load i32, i32* %low, align 8, !dbg !7552
  %add5 = add nsw i32 %7, %add, !dbg !7552
  store i32 %add5, i32* %low, align 8, !dbg !7552
  %8 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7553
  %low6 = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %8, i32 0, i32 0, !dbg !7554
  %9 = load i32, i32* %low6, align 8, !dbg !7555
  %sub = sub nsw i32 %9, 65535, !dbg !7555
  store i32 %sub, i32* %low6, align 8, !dbg !7555
  %10 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7556
  %bytestream7 = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %10, i32 0, i32 4, !dbg !7558
  %11 = load i8*, i8** %bytestream7, align 8, !dbg !7558
  %12 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7559
  %bytestream_end = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %12, i32 0, i32 5, !dbg !7560
  %13 = load i8*, i8** %bytestream_end, align 8, !dbg !7560
  %cmp = icmp ult i8* %11, %13, !dbg !7561
  br i1 %cmp, label %if.then, label %if.end, !dbg !7562

if.then:                                          ; preds = %entry
  %14 = load %struct.CABACContext*, %struct.CABACContext** %c.addr, align 8, !dbg !7563
  %bytestream9 = getelementptr inbounds %struct.CABACContext, %struct.CABACContext* %14, i32 0, i32 4, !dbg !7564
  %15 = load i8*, i8** %bytestream9, align 8, !dbg !7565
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 2, !dbg !7565
  store i8* %add.ptr, i8** %bytestream9, align 8, !dbg !7565
  br label %if.end, !dbg !7563

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7566
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2701, !2702}
!llvm.ident = !{!2703}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1042, globals: !1056)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--hevc_cabac.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878, !887, !893, !903, !909, !975, !1026, !1032, !1037}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PredMode", file: !888, line: 154, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/hevcdec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!889 = !{!890, !891, !892}
!890 = !DIEnumerator(name: "MODE_INTER", value: 0)
!891 = !DIEnumerator(name: "MODE_INTRA", value: 1)
!892 = !DIEnumerator(name: "MODE_SKIP", value: 2)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PartMode", file: !888, line: 143, size: 32, align: 32, elements: !894)
!894 = !{!895, !896, !897, !898, !899, !900, !901, !902}
!895 = !DIEnumerator(name: "PART_2Nx2N", value: 0)
!896 = !DIEnumerator(name: "PART_2NxN", value: 1)
!897 = !DIEnumerator(name: "PART_Nx2N", value: 2)
!898 = !DIEnumerator(name: "PART_NxN", value: 3)
!899 = !DIEnumerator(name: "PART_2NxnU", value: 4)
!900 = !DIEnumerator(name: "PART_2NxnD", value: 5)
!901 = !DIEnumerator(name: "PART_nLx2N", value: 6)
!902 = !DIEnumerator(name: "PART_nRx2N", value: 7)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "HEVCSliceType", file: !904, line: 95, size: 32, align: 32, elements: !905)
!904 = !DIFile(filename: "libavcodec/hevc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!905 = !{!906, !907, !908}
!906 = !DIEnumerator(name: "HEVC_SLICE_B", value: 0)
!907 = !DIEnumerator(name: "HEVC_SLICE_P", value: 1)
!908 = !DIEnumerator(name: "HEVC_SLICE_I", value: 2)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "HEVCNALUnitType", file: !904, line: 28, size: 32, align: 32, elements: !910)
!910 = !{!911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974}
!911 = !DIEnumerator(name: "HEVC_NAL_TRAIL_N", value: 0)
!912 = !DIEnumerator(name: "HEVC_NAL_TRAIL_R", value: 1)
!913 = !DIEnumerator(name: "HEVC_NAL_TSA_N", value: 2)
!914 = !DIEnumerator(name: "HEVC_NAL_TSA_R", value: 3)
!915 = !DIEnumerator(name: "HEVC_NAL_STSA_N", value: 4)
!916 = !DIEnumerator(name: "HEVC_NAL_STSA_R", value: 5)
!917 = !DIEnumerator(name: "HEVC_NAL_RADL_N", value: 6)
!918 = !DIEnumerator(name: "HEVC_NAL_RADL_R", value: 7)
!919 = !DIEnumerator(name: "HEVC_NAL_RASL_N", value: 8)
!920 = !DIEnumerator(name: "HEVC_NAL_RASL_R", value: 9)
!921 = !DIEnumerator(name: "HEVC_NAL_VCL_N10", value: 10)
!922 = !DIEnumerator(name: "HEVC_NAL_VCL_R11", value: 11)
!923 = !DIEnumerator(name: "HEVC_NAL_VCL_N12", value: 12)
!924 = !DIEnumerator(name: "HEVC_NAL_VCL_R13", value: 13)
!925 = !DIEnumerator(name: "HEVC_NAL_VCL_N14", value: 14)
!926 = !DIEnumerator(name: "HEVC_NAL_VCL_R15", value: 15)
!927 = !DIEnumerator(name: "HEVC_NAL_BLA_W_LP", value: 16)
!928 = !DIEnumerator(name: "HEVC_NAL_BLA_W_RADL", value: 17)
!929 = !DIEnumerator(name: "HEVC_NAL_BLA_N_LP", value: 18)
!930 = !DIEnumerator(name: "HEVC_NAL_IDR_W_RADL", value: 19)
!931 = !DIEnumerator(name: "HEVC_NAL_IDR_N_LP", value: 20)
!932 = !DIEnumerator(name: "HEVC_NAL_CRA_NUT", value: 21)
!933 = !DIEnumerator(name: "HEVC_NAL_IRAP_VCL22", value: 22)
!934 = !DIEnumerator(name: "HEVC_NAL_IRAP_VCL23", value: 23)
!935 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL24", value: 24)
!936 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL25", value: 25)
!937 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL26", value: 26)
!938 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL27", value: 27)
!939 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL28", value: 28)
!940 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL29", value: 29)
!941 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL30", value: 30)
!942 = !DIEnumerator(name: "HEVC_NAL_RSV_VCL31", value: 31)
!943 = !DIEnumerator(name: "HEVC_NAL_VPS", value: 32)
!944 = !DIEnumerator(name: "HEVC_NAL_SPS", value: 33)
!945 = !DIEnumerator(name: "HEVC_NAL_PPS", value: 34)
!946 = !DIEnumerator(name: "HEVC_NAL_AUD", value: 35)
!947 = !DIEnumerator(name: "HEVC_NAL_EOS_NUT", value: 36)
!948 = !DIEnumerator(name: "HEVC_NAL_EOB_NUT", value: 37)
!949 = !DIEnumerator(name: "HEVC_NAL_FD_NUT", value: 38)
!950 = !DIEnumerator(name: "HEVC_NAL_SEI_PREFIX", value: 39)
!951 = !DIEnumerator(name: "HEVC_NAL_SEI_SUFFIX", value: 40)
!952 = !DIEnumerator(name: "HEVC_NAL_RSV_NVCL41", value: 41)
!953 = !DIEnumerator(name: "HEVC_NAL_RSV_NVCL42", value: 42)
!954 = !DIEnumerator(name: "HEVC_NAL_RSV_NVCL43", value: 43)
!955 = !DIEnumerator(name: "HEVC_NAL_RSV_NVCL44", value: 44)
!956 = !DIEnumerator(name: "HEVC_NAL_RSV_NVCL45", value: 45)
!957 = !DIEnumerator(name: "HEVC_NAL_RSV_NVCL46", value: 46)
!958 = !DIEnumerator(name: "HEVC_NAL_RSV_NVCL47", value: 47)
!959 = !DIEnumerator(name: "HEVC_NAL_UNSPEC48", value: 48)
!960 = !DIEnumerator(name: "HEVC_NAL_UNSPEC49", value: 49)
!961 = !DIEnumerator(name: "HEVC_NAL_UNSPEC50", value: 50)
!962 = !DIEnumerator(name: "HEVC_NAL_UNSPEC51", value: 51)
!963 = !DIEnumerator(name: "HEVC_NAL_UNSPEC52", value: 52)
!964 = !DIEnumerator(name: "HEVC_NAL_UNSPEC53", value: 53)
!965 = !DIEnumerator(name: "HEVC_NAL_UNSPEC54", value: 54)
!966 = !DIEnumerator(name: "HEVC_NAL_UNSPEC55", value: 55)
!967 = !DIEnumerator(name: "HEVC_NAL_UNSPEC56", value: 56)
!968 = !DIEnumerator(name: "HEVC_NAL_UNSPEC57", value: 57)
!969 = !DIEnumerator(name: "HEVC_NAL_UNSPEC58", value: 58)
!970 = !DIEnumerator(name: "HEVC_NAL_UNSPEC59", value: 59)
!971 = !DIEnumerator(name: "HEVC_NAL_UNSPEC60", value: 60)
!972 = !DIEnumerator(name: "HEVC_NAL_UNSPEC61", value: 61)
!973 = !DIEnumerator(name: "HEVC_NAL_UNSPEC62", value: 62)
!974 = !DIEnumerator(name: "HEVC_NAL_UNSPEC63", value: 63)
!975 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SyntaxElement", file: !888, line: 91, size: 32, align: 32, elements: !976)
!976 = !{!977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025}
!977 = !DIEnumerator(name: "SAO_MERGE_FLAG", value: 0)
!978 = !DIEnumerator(name: "SAO_TYPE_IDX", value: 1)
!979 = !DIEnumerator(name: "SAO_EO_CLASS", value: 2)
!980 = !DIEnumerator(name: "SAO_BAND_POSITION", value: 3)
!981 = !DIEnumerator(name: "SAO_OFFSET_ABS", value: 4)
!982 = !DIEnumerator(name: "SAO_OFFSET_SIGN", value: 5)
!983 = !DIEnumerator(name: "END_OF_SLICE_FLAG", value: 6)
!984 = !DIEnumerator(name: "SPLIT_CODING_UNIT_FLAG", value: 7)
!985 = !DIEnumerator(name: "CU_TRANSQUANT_BYPASS_FLAG", value: 8)
!986 = !DIEnumerator(name: "SKIP_FLAG", value: 9)
!987 = !DIEnumerator(name: "CU_QP_DELTA", value: 10)
!988 = !DIEnumerator(name: "PRED_MODE_FLAG", value: 11)
!989 = !DIEnumerator(name: "PART_MODE", value: 12)
!990 = !DIEnumerator(name: "PCM_FLAG", value: 13)
!991 = !DIEnumerator(name: "PREV_INTRA_LUMA_PRED_FLAG", value: 14)
!992 = !DIEnumerator(name: "MPM_IDX", value: 15)
!993 = !DIEnumerator(name: "REM_INTRA_LUMA_PRED_MODE", value: 16)
!994 = !DIEnumerator(name: "INTRA_CHROMA_PRED_MODE", value: 17)
!995 = !DIEnumerator(name: "MERGE_FLAG", value: 18)
!996 = !DIEnumerator(name: "MERGE_IDX", value: 19)
!997 = !DIEnumerator(name: "INTER_PRED_IDC", value: 20)
!998 = !DIEnumerator(name: "REF_IDX_L0", value: 21)
!999 = !DIEnumerator(name: "REF_IDX_L1", value: 22)
!1000 = !DIEnumerator(name: "ABS_MVD_GREATER0_FLAG", value: 23)
!1001 = !DIEnumerator(name: "ABS_MVD_GREATER1_FLAG", value: 24)
!1002 = !DIEnumerator(name: "ABS_MVD_MINUS2", value: 25)
!1003 = !DIEnumerator(name: "MVD_SIGN_FLAG", value: 26)
!1004 = !DIEnumerator(name: "MVP_LX_FLAG", value: 27)
!1005 = !DIEnumerator(name: "NO_RESIDUAL_DATA_FLAG", value: 28)
!1006 = !DIEnumerator(name: "SPLIT_TRANSFORM_FLAG", value: 29)
!1007 = !DIEnumerator(name: "CBF_LUMA", value: 30)
!1008 = !DIEnumerator(name: "CBF_CB_CR", value: 31)
!1009 = !DIEnumerator(name: "TRANSFORM_SKIP_FLAG", value: 32)
!1010 = !DIEnumerator(name: "EXPLICIT_RDPCM_FLAG", value: 33)
!1011 = !DIEnumerator(name: "EXPLICIT_RDPCM_DIR_FLAG", value: 34)
!1012 = !DIEnumerator(name: "LAST_SIGNIFICANT_COEFF_X_PREFIX", value: 35)
!1013 = !DIEnumerator(name: "LAST_SIGNIFICANT_COEFF_Y_PREFIX", value: 36)
!1014 = !DIEnumerator(name: "LAST_SIGNIFICANT_COEFF_X_SUFFIX", value: 37)
!1015 = !DIEnumerator(name: "LAST_SIGNIFICANT_COEFF_Y_SUFFIX", value: 38)
!1016 = !DIEnumerator(name: "SIGNIFICANT_COEFF_GROUP_FLAG", value: 39)
!1017 = !DIEnumerator(name: "SIGNIFICANT_COEFF_FLAG", value: 40)
!1018 = !DIEnumerator(name: "COEFF_ABS_LEVEL_GREATER1_FLAG", value: 41)
!1019 = !DIEnumerator(name: "COEFF_ABS_LEVEL_GREATER2_FLAG", value: 42)
!1020 = !DIEnumerator(name: "COEFF_ABS_LEVEL_REMAINING", value: 43)
!1021 = !DIEnumerator(name: "COEFF_SIGN_FLAG", value: 44)
!1022 = !DIEnumerator(name: "LOG2_RES_SCALE_ABS", value: 45)
!1023 = !DIEnumerator(name: "RES_SCALE_SIGN_FLAG", value: 46)
!1024 = !DIEnumerator(name: "CU_CHROMA_QP_OFFSET_FLAG", value: 47)
!1025 = !DIEnumerator(name: "CU_CHROMA_QP_OFFSET_IDX", value: 48)
!1026 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SAOType", file: !888, line: 211, size: 32, align: 32, elements: !1027)
!1027 = !{!1028, !1029, !1030, !1031}
!1028 = !DIEnumerator(name: "SAO_NOT_APPLIED", value: 0)
!1029 = !DIEnumerator(name: "SAO_BAND", value: 1)
!1030 = !DIEnumerator(name: "SAO_EDGE", value: 2)
!1031 = !DIEnumerator(name: "SAO_APPLIED", value: 3)
!1032 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "InterPredIdc", file: !888, line: 160, size: 32, align: 32, elements: !1033)
!1033 = !{!1034, !1035, !1036}
!1034 = !DIEnumerator(name: "PRED_L0", value: 0)
!1035 = !DIEnumerator(name: "PRED_L1", value: 1)
!1036 = !DIEnumerator(name: "PRED_BI", value: 2)
!1037 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ScanType", file: !888, line: 225, size: 32, align: 32, elements: !1038)
!1038 = !{!1039, !1040, !1041}
!1039 = !DIEnumerator(name: "SCAN_DIAG", value: 0)
!1040 = !DIEnumerator(name: "SCAN_HORIZ", value: 1)
!1041 = !DIEnumerator(name: "SCAN_VERT", value: 2)
!1042 = !{!1043, !1044, !1045, !1049, !1052, !1054, !1055}
!1043 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!1044 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64, align: 64)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1047, line: 37, baseType: !1048)
!1047 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1048 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64, align: 64)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1047, line: 48, baseType: !1051)
!1051 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1047, line: 40, baseType: !1053)
!1053 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1047, line: 51, baseType: !1044)
!1056 = !{!1057, !2659, !2663, !2667, !2668, !2672, !2675, !2679, !2682, !2686, !2689, !2691, !2692, !2695, !2696, !2697, !2699, !2700}
!1057 = distinct !DIGlobalVariable(name: "level_scale", scope: !1058, file: !1059, line: 1060, type: !2658, isLocal: true, isDefinition: true, variable: [6 x i8]* @ff_hevc_hls_residual_coding.level_scale)
!1058 = distinct !DISubprogram(name: "ff_hevc_hls_residual_coding", scope: !1059, file: !1059, line: 1024, type: !1060, isLocal: false, isDefinition: true, scopeLine: 1027, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!1059 = !DIFile(filename: "libavcodec/hevc_cabac.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1060 = !DISubroutineType(types: !1061)
!1061 = !{null, !1062, !1043, !1043, !1043, !1037, !1043}
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64, align: 64)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCContext", file: !888, line: 487, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCContext", file: !888, line: 383, size: 94144, align: 64, elements: !1065)
!1065 = !{!1066, !1110, !1790, !1795, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1924, !1925, !2207, !2275, !2279, !2280, !2281, !2337, !2408, !2424, !2431, !2432, !2433, !2436, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2471, !2568, !2581, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2617, !2618, !2651, !2652, !2653, !2654, !2655, !2656}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1064, file: !888, line: 384, baseType: !1067, size: 64, align: 64)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64, align: 64)
!1068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1069)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !1070)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !1071)
!1071 = !{!1072, !1076, !1080, !1084, !1085, !1086, !1087, !1091, !1097, !1099, !1103}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1070, file: !4, line: 72, baseType: !1073, size: 64, align: 64)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64, align: 64)
!1074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1075)
!1075 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1070, file: !4, line: 78, baseType: !1077, size: 64, align: 64, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64, align: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!1073, !1054}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1070, file: !4, line: 85, baseType: !1081, size: 64, align: 64, offset: 128)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64, align: 64)
!1082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1083)
!1083 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1070, file: !4, line: 93, baseType: !1043, size: 32, align: 32, offset: 192)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1070, file: !4, line: 99, baseType: !1043, size: 32, align: 32, offset: 224)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1070, file: !4, line: 108, baseType: !1043, size: 32, align: 32, offset: 256)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1070, file: !4, line: 113, baseType: !1088, size: 64, align: 64, offset: 320)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64, align: 64)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!1054, !1054, !1054}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1070, file: !4, line: 123, baseType: !1092, size: 64, align: 64, offset: 384)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64, align: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!1095, !1095}
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64, align: 64)
!1096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1070)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1070, file: !4, line: 130, baseType: !1098, size: 32, align: 32, offset: 448)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1070, file: !4, line: 136, baseType: !1100, size: 64, align: 64, offset: 512)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64, align: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!1098, !1054}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1070, file: !4, line: 142, baseType: !1104, size: 64, align: 64, offset: 576)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64, align: 64)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!1043, !1107, !1054, !1073, !1043}
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64, align: 64)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64, align: 64)
!1109 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1064, file: !888, line: 385, baseType: !1111, size: 64, align: 64, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64, align: 64)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !1113)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !1114)
!1114 = !{!1115, !1116, !1117, !1118, !1388, !1389, !1390, !1391, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1544, !1548, !1549, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1728, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1113, file: !35, line: 1561, baseType: !1067, size: 64, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1113, file: !35, line: 1562, baseType: !1043, size: 32, align: 32, offset: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1113, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1113, file: !35, line: 1565, baseType: !1119, size: 64, align: 64, offset: 128)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64, align: 64)
!1120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1121)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1122)
!1122 = !{!1123, !1124, !1125, !1126, !1127, !1128, !1137, !1140, !1143, !1146, !1151, !1152, !1153, !1161, !1162, !1163, !1165, !1169, !1175, !1186, !1190, !1191, !1238, !1359, !1363, !1364, !1368, !1372, !1377, !1381, !1382, !1383}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1121, file: !35, line: 3475, baseType: !1073, size: 64, align: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1121, file: !35, line: 3480, baseType: !1073, size: 64, align: 64, offset: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1121, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1121, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1121, file: !35, line: 3487, baseType: !1043, size: 32, align: 32, offset: 192)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1121, file: !35, line: 3488, baseType: !1129, size: 64, align: 64, offset: 256)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64, align: 64)
!1130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1131)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1132, line: 61, baseType: !1133)
!1132 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1132, line: 58, size: 64, align: 32, elements: !1134)
!1134 = !{!1135, !1136}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1133, file: !1132, line: 59, baseType: !1043, size: 32, align: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1133, file: !1132, line: 60, baseType: !1043, size: 32, align: 32, offset: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1121, file: !35, line: 3489, baseType: !1138, size: 64, align: 64, offset: 320)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1121, file: !35, line: 3490, baseType: !1141, size: 64, align: 64, offset: 384)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64, align: 64)
!1142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1043)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1121, file: !35, line: 3491, baseType: !1144, size: 64, align: 64, offset: 448)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64, align: 64)
!1145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1121, file: !35, line: 3492, baseType: !1147, size: 64, align: 64, offset: 512)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64, align: 64)
!1148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1149)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1047, line: 55, baseType: !1150)
!1150 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1121, file: !35, line: 3493, baseType: !1050, size: 8, align: 8, offset: 576)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1121, file: !35, line: 3494, baseType: !1067, size: 64, align: 64, offset: 640)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1121, file: !35, line: 3495, baseType: !1154, size: 64, align: 64, offset: 704)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64, align: 64)
!1155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1158)
!1158 = !{!1159, !1160}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1157, file: !35, line: 3402, baseType: !1043, size: 32, align: 32)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1157, file: !35, line: 3403, baseType: !1073, size: 64, align: 64, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1121, file: !35, line: 3507, baseType: !1073, size: 64, align: 64, offset: 768)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1121, file: !35, line: 3516, baseType: !1043, size: 32, align: 32, offset: 832)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1121, file: !35, line: 3517, baseType: !1164, size: 64, align: 64, offset: 896)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64, align: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1121, file: !35, line: 3527, baseType: !1166, size: 64, align: 64, offset: 960)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64, align: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!1043, !1111}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1121, file: !35, line: 3535, baseType: !1170, size: 64, align: 64, offset: 1024)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64, align: 64)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!1043, !1111, !1173}
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64, align: 64)
!1174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1121, file: !35, line: 3541, baseType: !1176, size: 64, align: 64, offset: 1088)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64, align: 64)
!1177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1178)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1179)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1180, line: 223, size: 128, align: 64, elements: !1181)
!1180 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1181 = !{!1182, !1185}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1179, file: !1180, line: 224, baseType: !1183, size: 64, align: 64)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64, align: 64)
!1184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1050)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1179, file: !1180, line: 225, baseType: !1183, size: 64, align: 64, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1121, file: !35, line: 3549, baseType: !1187, size: 64, align: 64, offset: 1152)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64, align: 64)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{null, !1164}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1121, file: !35, line: 3551, baseType: !1166, size: 64, align: 64, offset: 1216)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1121, file: !35, line: 3552, baseType: !1192, size: 64, align: 64, offset: 1280)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64, align: 64)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!1043, !1111, !1049, !1043, !1195}
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64, align: 64)
!1196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1198)
!1198 = !{!1199, !1202, !1203, !1204, !1205, !1237}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1197, file: !35, line: 3921, baseType: !1200, size: 16, align: 16)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1047, line: 49, baseType: !1201)
!1201 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1197, file: !35, line: 3922, baseType: !1055, size: 32, align: 32, offset: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1197, file: !35, line: 3923, baseType: !1055, size: 32, align: 32, offset: 64)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1197, file: !35, line: 3924, baseType: !1044, size: 32, align: 32, offset: 96)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1197, file: !35, line: 3925, baseType: !1206, size: 64, align: 64, offset: 128)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64, align: 64)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64, align: 64)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1215, !1216, !1226, !1230, !1232, !1233, !1235, !1236}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1209, file: !35, line: 3886, baseType: !1043, size: 32, align: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1209, file: !35, line: 3887, baseType: !1043, size: 32, align: 32, offset: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1209, file: !35, line: 3888, baseType: !1043, size: 32, align: 32, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1209, file: !35, line: 3889, baseType: !1043, size: 32, align: 32, offset: 96)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1209, file: !35, line: 3890, baseType: !1043, size: 32, align: 32, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1209, file: !35, line: 3897, baseType: !1217, size: 768, align: 64, offset: 192)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1218)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1219)
!1219 = !{!1220, !1224}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1218, file: !35, line: 3855, baseType: !1221, size: 512, align: 64)
!1221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 512, align: 64, elements: !1222)
!1222 = !{!1223}
!1223 = !DISubrange(count: 8)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1218, file: !35, line: 3857, baseType: !1225, size: 256, align: 32, offset: 512)
!1225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 256, align: 32, elements: !1222)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1209, file: !35, line: 3903, baseType: !1227, size: 256, align: 64, offset: 960)
!1227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 256, align: 64, elements: !1228)
!1228 = !{!1229}
!1229 = !DISubrange(count: 4)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1209, file: !35, line: 3904, baseType: !1231, size: 128, align: 32, offset: 1216)
!1231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 128, align: 32, elements: !1228)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1209, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1209, file: !35, line: 3908, baseType: !1234, size: 64, align: 64, offset: 1408)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64, align: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1209, file: !35, line: 3915, baseType: !1234, size: 64, align: 64, offset: 1472)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1209, file: !35, line: 3917, baseType: !1043, size: 32, align: 32, offset: 1536)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1197, file: !35, line: 3926, baseType: !1052, size: 64, align: 64, offset: 192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1121, file: !35, line: 3564, baseType: !1239, size: 64, align: 64, offset: 1344)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64, align: 64)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!1043, !1111, !1242, !1276, !1358}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64, align: 64)
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1245)
!1245 = !{!1246, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1272, !1273, !1274, !1275}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1244, file: !35, line: 1451, baseType: !1247, size: 64, align: 64)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64, align: 64)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1249, line: 94, baseType: !1250)
!1249 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1249, line: 81, size: 192, align: 64, elements: !1251)
!1251 = !{!1252, !1256, !1257}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1250, file: !1249, line: 82, baseType: !1253, size: 64, align: 64)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64, align: 64)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1249, line: 73, baseType: !1255)
!1255 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1249, line: 73, flags: DIFlagFwdDecl)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1250, file: !1249, line: 89, baseType: !1049, size: 64, align: 64, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1250, file: !1249, line: 93, baseType: !1043, size: 32, align: 32, offset: 128)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1244, file: !35, line: 1461, baseType: !1052, size: 64, align: 64, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1244, file: !35, line: 1467, baseType: !1052, size: 64, align: 64, offset: 128)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1244, file: !35, line: 1468, baseType: !1049, size: 64, align: 64, offset: 192)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1244, file: !35, line: 1469, baseType: !1043, size: 32, align: 32, offset: 256)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1244, file: !35, line: 1470, baseType: !1043, size: 32, align: 32, offset: 288)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1244, file: !35, line: 1474, baseType: !1043, size: 32, align: 32, offset: 320)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1244, file: !35, line: 1479, baseType: !1265, size: 64, align: 64, offset: 384)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64, align: 64)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1268)
!1268 = !{!1269, !1270, !1271}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1267, file: !35, line: 1412, baseType: !1049, size: 64, align: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1267, file: !35, line: 1413, baseType: !1043, size: 32, align: 32, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1267, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1244, file: !35, line: 1480, baseType: !1043, size: 32, align: 32, offset: 448)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1244, file: !35, line: 1486, baseType: !1052, size: 64, align: 64, offset: 512)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1244, file: !35, line: 1488, baseType: !1052, size: 64, align: 64, offset: 576)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1244, file: !35, line: 1497, baseType: !1052, size: 64, align: 64, offset: 640)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64, align: 64)
!1277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1278)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1279)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1280)
!1280 = !{!1281, !1282, !1283, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1310, !1312, !1313, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1346, !1347, !1348, !1349, !1350, !1351, !1354, !1355, !1356, !1357}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1279, file: !758, line: 282, baseType: !1221, size: 512, align: 64)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1279, file: !758, line: 299, baseType: !1225, size: 256, align: 32, offset: 512)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1279, file: !758, line: 315, baseType: !1284, size: 64, align: 64, offset: 768)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64, align: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1279, file: !758, line: 326, baseType: !1043, size: 32, align: 32, offset: 832)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1279, file: !758, line: 326, baseType: !1043, size: 32, align: 32, offset: 864)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1279, file: !758, line: 334, baseType: !1043, size: 32, align: 32, offset: 896)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1279, file: !758, line: 341, baseType: !1043, size: 32, align: 32, offset: 928)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1279, file: !758, line: 346, baseType: !1043, size: 32, align: 32, offset: 960)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1279, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1279, file: !758, line: 356, baseType: !1131, size: 64, align: 32, offset: 1024)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1279, file: !758, line: 361, baseType: !1052, size: 64, align: 64, offset: 1088)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1279, file: !758, line: 369, baseType: !1052, size: 64, align: 64, offset: 1152)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1279, file: !758, line: 377, baseType: !1052, size: 64, align: 64, offset: 1216)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1279, file: !758, line: 382, baseType: !1043, size: 32, align: 32, offset: 1280)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1279, file: !758, line: 386, baseType: !1043, size: 32, align: 32, offset: 1312)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1279, file: !758, line: 391, baseType: !1043, size: 32, align: 32, offset: 1344)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1279, file: !758, line: 396, baseType: !1054, size: 64, align: 64, offset: 1408)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1279, file: !758, line: 403, baseType: !1300, size: 512, align: 64, offset: 1472)
!1300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1149, size: 512, align: 64, elements: !1222)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1279, file: !758, line: 410, baseType: !1043, size: 32, align: 32, offset: 1984)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1279, file: !758, line: 415, baseType: !1043, size: 32, align: 32, offset: 2016)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1279, file: !758, line: 420, baseType: !1043, size: 32, align: 32, offset: 2048)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1279, file: !758, line: 425, baseType: !1043, size: 32, align: 32, offset: 2080)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1279, file: !758, line: 435, baseType: !1052, size: 64, align: 64, offset: 2112)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1279, file: !758, line: 440, baseType: !1043, size: 32, align: 32, offset: 2176)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1279, file: !758, line: 445, baseType: !1149, size: 64, align: 64, offset: 2240)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1279, file: !758, line: 459, baseType: !1309, size: 512, align: 64, offset: 2304)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1247, size: 512, align: 64, elements: !1222)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1279, file: !758, line: 473, baseType: !1311, size: 64, align: 64, offset: 2816)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64, align: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1279, file: !758, line: 477, baseType: !1043, size: 32, align: 32, offset: 2880)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1279, file: !758, line: 479, baseType: !1314, size: 64, align: 64, offset: 2944)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64, align: 64)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64, align: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1322, !1327}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1317, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1317, file: !758, line: 203, baseType: !1049, size: 64, align: 64, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1317, file: !758, line: 204, baseType: !1043, size: 32, align: 32, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1317, file: !758, line: 205, baseType: !1323, size: 64, align: 64, offset: 192)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64, align: 64)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1325, line: 86, baseType: !1326)
!1325 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1326 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1325, line: 86, flags: DIFlagFwdDecl)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1317, file: !758, line: 206, baseType: !1247, size: 64, align: 64, offset: 256)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1279, file: !758, line: 480, baseType: !1043, size: 32, align: 32, offset: 3008)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1279, file: !758, line: 505, baseType: !1043, size: 32, align: 32, offset: 3040)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1279, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1279, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1279, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1279, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1279, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1279, file: !758, line: 532, baseType: !1052, size: 64, align: 64, offset: 3264)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1279, file: !758, line: 539, baseType: !1052, size: 64, align: 64, offset: 3328)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1279, file: !758, line: 547, baseType: !1052, size: 64, align: 64, offset: 3392)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1279, file: !758, line: 554, baseType: !1323, size: 64, align: 64, offset: 3456)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1279, file: !758, line: 563, baseType: !1043, size: 32, align: 32, offset: 3520)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1279, file: !758, line: 572, baseType: !1043, size: 32, align: 32, offset: 3552)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1279, file: !758, line: 581, baseType: !1043, size: 32, align: 32, offset: 3584)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1279, file: !758, line: 588, baseType: !1343, size: 64, align: 64, offset: 3648)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64, align: 64)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1047, line: 36, baseType: !1345)
!1345 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1279, file: !758, line: 593, baseType: !1043, size: 32, align: 32, offset: 3712)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1279, file: !758, line: 596, baseType: !1043, size: 32, align: 32, offset: 3744)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1279, file: !758, line: 599, baseType: !1247, size: 64, align: 64, offset: 3776)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1279, file: !758, line: 605, baseType: !1247, size: 64, align: 64, offset: 3840)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1279, file: !758, line: 616, baseType: !1247, size: 64, align: 64, offset: 3904)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1279, file: !758, line: 626, baseType: !1352, size: 64, align: 64, offset: 3968)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1353, line: 216, baseType: !1150)
!1353 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1279, file: !758, line: 627, baseType: !1352, size: 64, align: 64, offset: 4032)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1279, file: !758, line: 628, baseType: !1352, size: 64, align: 64, offset: 4096)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1279, file: !758, line: 629, baseType: !1352, size: 64, align: 64, offset: 4160)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1279, file: !758, line: 645, baseType: !1247, size: 64, align: 64, offset: 4224)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64, align: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1121, file: !35, line: 3566, baseType: !1360, size: 64, align: 64, offset: 1408)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64, align: 64)
!1361 = !DISubroutineType(types: !1362)
!1362 = !{!1043, !1111, !1054, !1358, !1242}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1121, file: !35, line: 3567, baseType: !1166, size: 64, align: 64, offset: 1472)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1121, file: !35, line: 3576, baseType: !1365, size: 64, align: 64, offset: 1536)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64, align: 64)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!1043, !1111, !1276}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1121, file: !35, line: 3577, baseType: !1369, size: 64, align: 64, offset: 1600)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64, align: 64)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{!1043, !1111, !1242}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1121, file: !35, line: 3584, baseType: !1373, size: 64, align: 64, offset: 1664)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64, align: 64)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{!1043, !1111, !1376}
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64, align: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1121, file: !35, line: 3589, baseType: !1378, size: 64, align: 64, offset: 1728)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64, align: 64)
!1379 = !DISubroutineType(types: !1380)
!1380 = !{null, !1111}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1121, file: !35, line: 3594, baseType: !1043, size: 32, align: 32, offset: 1792)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1121, file: !35, line: 3600, baseType: !1073, size: 64, align: 64, offset: 1856)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1121, file: !35, line: 3609, baseType: !1384, size: 64, align: 64, offset: 1920)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64, align: 64)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64, align: 64)
!1386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1387)
!1387 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1113, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1113, file: !35, line: 1581, baseType: !1044, size: 32, align: 32, offset: 224)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1113, file: !35, line: 1583, baseType: !1054, size: 64, align: 64, offset: 256)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1113, file: !35, line: 1591, baseType: !1392, size: 64, align: 64, offset: 320)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64, align: 64)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1180, line: 129, size: 1664, align: 64, elements: !1394)
!1394 = !{!1395, !1396, !1397, !1398, !1399, !1417, !1418, !1424, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1393, file: !1180, line: 136, baseType: !1043, size: 32, align: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1393, file: !1180, line: 151, baseType: !1043, size: 32, align: 32, offset: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1393, file: !1180, line: 157, baseType: !1043, size: 32, align: 32, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1393, file: !1180, line: 159, baseType: !1376, size: 64, align: 64, offset: 128)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1393, file: !1180, line: 161, baseType: !1400, size: 64, align: 64, offset: 192)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64, align: 64)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1180, line: 117, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1180, line: 100, size: 832, align: 64, elements: !1403)
!1403 = !{!1404, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1402, file: !1180, line: 105, baseType: !1405, size: 256, align: 64)
!1405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1406, size: 256, align: 64, elements: !1228)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64, align: 64)
!1407 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1249, line: 238, baseType: !1408)
!1408 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1249, line: 238, flags: DIFlagFwdDecl)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1402, file: !1180, line: 110, baseType: !1043, size: 32, align: 32, offset: 256)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1402, file: !1180, line: 111, baseType: !1043, size: 32, align: 32, offset: 288)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1402, file: !1180, line: 111, baseType: !1043, size: 32, align: 32, offset: 320)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1402, file: !1180, line: 112, baseType: !1225, size: 256, align: 32, offset: 352)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1402, file: !1180, line: 113, baseType: !1231, size: 128, align: 32, offset: 608)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1402, file: !1180, line: 114, baseType: !1043, size: 32, align: 32, offset: 736)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1402, file: !1180, line: 115, baseType: !1043, size: 32, align: 32, offset: 768)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1402, file: !1180, line: 116, baseType: !1043, size: 32, align: 32, offset: 800)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1393, file: !1180, line: 163, baseType: !1054, size: 64, align: 64, offset: 256)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1393, file: !1180, line: 165, baseType: !1419, size: 128, align: 64, offset: 320)
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1180, line: 122, baseType: !1420)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1180, line: 119, size: 128, align: 64, elements: !1421)
!1421 = !{!1422, !1423}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1420, file: !1180, line: 120, baseType: !1242, size: 64, align: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1420, file: !1180, line: 121, baseType: !1376, size: 64, align: 64, offset: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1393, file: !1180, line: 166, baseType: !1425, size: 128, align: 64, offset: 448)
!1425 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1180, line: 127, baseType: !1426)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1180, line: 124, size: 128, align: 64, elements: !1427)
!1427 = !{!1428, !1501}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1426, file: !1180, line: 125, baseType: !1429, size: 64, align: 64)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64, align: 64)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64, align: 64)
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !35, line: 5794, baseType: !1432)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !35, line: 5747, size: 512, align: 64, elements: !1433)
!1433 = !{!1434, !1435, !1459, !1463, !1464, !1498, !1499, !1500}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1432, file: !35, line: 5751, baseType: !1067, size: 64, align: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1432, file: !35, line: 5756, baseType: !1436, size: 64, align: 64, offset: 64)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64, align: 64)
!1437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !35, line: 5796, size: 512, align: 64, elements: !1439)
!1439 = !{!1440, !1441, !1444, !1445, !1446, !1450, !1454, !1458}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1438, file: !35, line: 5797, baseType: !1073, size: 64, align: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1438, file: !35, line: 5804, baseType: !1442, size: 64, align: 64, offset: 64)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64, align: 64)
!1443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1438, file: !35, line: 5815, baseType: !1067, size: 64, align: 64, offset: 128)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1438, file: !35, line: 5825, baseType: !1043, size: 32, align: 32, offset: 192)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1438, file: !35, line: 5826, baseType: !1447, size: 64, align: 64, offset: 256)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64, align: 64)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!1043, !1430}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1438, file: !35, line: 5827, baseType: !1451, size: 64, align: 64, offset: 320)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64, align: 64)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!1043, !1430, !1242}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1438, file: !35, line: 5828, baseType: !1455, size: 64, align: 64, offset: 384)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64, align: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{null, !1430}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1438, file: !35, line: 5829, baseType: !1455, size: 64, align: 64, offset: 448)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1432, file: !35, line: 5762, baseType: !1460, size: 64, align: 64, offset: 128)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64, align: 64)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !35, line: 5735, baseType: !1462)
!1462 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !35, line: 5735, flags: DIFlagFwdDecl)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1432, file: !35, line: 5768, baseType: !1054, size: 64, align: 64, offset: 192)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1432, file: !35, line: 5775, baseType: !1465, size: 64, align: 64, offset: 256)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64, align: 64)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !35, line: 4085, baseType: !1467)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !35, line: 3936, size: 1152, align: 64, elements: !1468)
!1468 = !{!1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1467, file: !35, line: 3940, baseType: !24, size: 32, align: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1467, file: !35, line: 3944, baseType: !34, size: 32, align: 32, offset: 32)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1467, file: !35, line: 3948, baseType: !1055, size: 32, align: 32, offset: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1467, file: !35, line: 3958, baseType: !1049, size: 64, align: 64, offset: 128)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1467, file: !35, line: 3962, baseType: !1043, size: 32, align: 32, offset: 192)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1467, file: !35, line: 3968, baseType: !1043, size: 32, align: 32, offset: 224)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1467, file: !35, line: 3973, baseType: !1052, size: 64, align: 64, offset: 256)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1467, file: !35, line: 3986, baseType: !1043, size: 32, align: 32, offset: 320)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1467, file: !35, line: 3999, baseType: !1043, size: 32, align: 32, offset: 352)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1467, file: !35, line: 4004, baseType: !1043, size: 32, align: 32, offset: 384)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1467, file: !35, line: 4005, baseType: !1043, size: 32, align: 32, offset: 416)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1467, file: !35, line: 4010, baseType: !1043, size: 32, align: 32, offset: 448)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1467, file: !35, line: 4011, baseType: !1043, size: 32, align: 32, offset: 480)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1467, file: !35, line: 4020, baseType: !1131, size: 64, align: 32, offset: 512)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1467, file: !35, line: 4025, baseType: !858, size: 32, align: 32, offset: 576)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1467, file: !35, line: 4030, baseType: !781, size: 32, align: 32, offset: 608)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1467, file: !35, line: 4031, baseType: !787, size: 32, align: 32, offset: 640)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1467, file: !35, line: 4032, baseType: !805, size: 32, align: 32, offset: 672)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1467, file: !35, line: 4033, baseType: !829, size: 32, align: 32, offset: 704)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1467, file: !35, line: 4034, baseType: !848, size: 32, align: 32, offset: 736)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1467, file: !35, line: 4039, baseType: !1043, size: 32, align: 32, offset: 768)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1467, file: !35, line: 4046, baseType: !1149, size: 64, align: 64, offset: 832)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1467, file: !35, line: 4050, baseType: !1043, size: 32, align: 32, offset: 896)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1467, file: !35, line: 4054, baseType: !1043, size: 32, align: 32, offset: 928)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1467, file: !35, line: 4061, baseType: !1043, size: 32, align: 32, offset: 960)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1467, file: !35, line: 4065, baseType: !1043, size: 32, align: 32, offset: 992)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1467, file: !35, line: 4073, baseType: !1043, size: 32, align: 32, offset: 1024)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1467, file: !35, line: 4080, baseType: !1043, size: 32, align: 32, offset: 1056)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1467, file: !35, line: 4084, baseType: !1043, size: 32, align: 32, offset: 1088)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1432, file: !35, line: 5781, baseType: !1465, size: 64, align: 64, offset: 320)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1432, file: !35, line: 5787, baseType: !1131, size: 64, align: 32, offset: 384)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1432, file: !35, line: 5793, baseType: !1131, size: 64, align: 32, offset: 448)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1426, file: !1180, line: 126, baseType: !1043, size: 32, align: 32, offset: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1393, file: !1180, line: 172, baseType: !1242, size: 64, align: 64, offset: 576)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1393, file: !1180, line: 177, baseType: !1049, size: 64, align: 64, offset: 640)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1393, file: !1180, line: 178, baseType: !1044, size: 32, align: 32, offset: 704)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1393, file: !1180, line: 180, baseType: !1054, size: 64, align: 64, offset: 768)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1393, file: !1180, line: 185, baseType: !1043, size: 32, align: 32, offset: 832)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1393, file: !1180, line: 190, baseType: !1054, size: 64, align: 64, offset: 896)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1393, file: !1180, line: 195, baseType: !1043, size: 32, align: 32, offset: 960)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1393, file: !1180, line: 200, baseType: !1242, size: 64, align: 64, offset: 1024)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1393, file: !1180, line: 201, baseType: !1043, size: 32, align: 32, offset: 1088)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1393, file: !1180, line: 202, baseType: !1376, size: 64, align: 64, offset: 1152)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1393, file: !1180, line: 203, baseType: !1043, size: 32, align: 32, offset: 1216)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1393, file: !1180, line: 205, baseType: !1043, size: 32, align: 32, offset: 1248)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1393, file: !1180, line: 206, baseType: !1043, size: 32, align: 32, offset: 1280)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1393, file: !1180, line: 209, baseType: !1352, size: 64, align: 64, offset: 1344)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1393, file: !1180, line: 212, baseType: !1352, size: 64, align: 64, offset: 1408)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1393, file: !1180, line: 213, baseType: !1376, size: 64, align: 64, offset: 1472)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1393, file: !1180, line: 215, baseType: !1043, size: 32, align: 32, offset: 1536)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1393, file: !1180, line: 217, baseType: !1043, size: 32, align: 32, offset: 1568)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1393, file: !1180, line: 220, baseType: !1043, size: 32, align: 32, offset: 1600)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1113, file: !35, line: 1598, baseType: !1054, size: 64, align: 64, offset: 384)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1113, file: !35, line: 1606, baseType: !1052, size: 64, align: 64, offset: 448)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1113, file: !35, line: 1614, baseType: !1043, size: 32, align: 32, offset: 512)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1113, file: !35, line: 1622, baseType: !1043, size: 32, align: 32, offset: 544)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1113, file: !35, line: 1628, baseType: !1043, size: 32, align: 32, offset: 576)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1113, file: !35, line: 1636, baseType: !1043, size: 32, align: 32, offset: 608)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1113, file: !35, line: 1643, baseType: !1043, size: 32, align: 32, offset: 640)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1113, file: !35, line: 1657, baseType: !1049, size: 64, align: 64, offset: 704)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1113, file: !35, line: 1658, baseType: !1043, size: 32, align: 32, offset: 768)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1113, file: !35, line: 1679, baseType: !1131, size: 64, align: 32, offset: 800)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1113, file: !35, line: 1688, baseType: !1043, size: 32, align: 32, offset: 864)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1113, file: !35, line: 1712, baseType: !1043, size: 32, align: 32, offset: 896)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1113, file: !35, line: 1729, baseType: !1043, size: 32, align: 32, offset: 928)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1113, file: !35, line: 1729, baseType: !1043, size: 32, align: 32, offset: 960)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1113, file: !35, line: 1744, baseType: !1043, size: 32, align: 32, offset: 992)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1113, file: !35, line: 1744, baseType: !1043, size: 32, align: 32, offset: 1024)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1113, file: !35, line: 1751, baseType: !1043, size: 32, align: 32, offset: 1056)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1113, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1113, file: !35, line: 1791, baseType: !1540, size: 64, align: 64, offset: 1152)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64, align: 64)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{null, !1543, !1276, !1358, !1043, !1043, !1043}
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64, align: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1113, file: !35, line: 1808, baseType: !1545, size: 64, align: 64, offset: 1216)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64, align: 64)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!494, !1543, !1138}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1113, file: !35, line: 1816, baseType: !1043, size: 32, align: 32, offset: 1280)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1113, file: !35, line: 1825, baseType: !1550, size: 32, align: 32, offset: 1312)
!1550 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1113, file: !35, line: 1830, baseType: !1043, size: 32, align: 32, offset: 1344)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1113, file: !35, line: 1838, baseType: !1550, size: 32, align: 32, offset: 1376)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1113, file: !35, line: 1846, baseType: !1043, size: 32, align: 32, offset: 1408)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1113, file: !35, line: 1851, baseType: !1043, size: 32, align: 32, offset: 1440)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1113, file: !35, line: 1861, baseType: !1550, size: 32, align: 32, offset: 1472)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1113, file: !35, line: 1868, baseType: !1550, size: 32, align: 32, offset: 1504)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1113, file: !35, line: 1875, baseType: !1550, size: 32, align: 32, offset: 1536)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1113, file: !35, line: 1882, baseType: !1550, size: 32, align: 32, offset: 1568)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1113, file: !35, line: 1889, baseType: !1550, size: 32, align: 32, offset: 1600)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1113, file: !35, line: 1896, baseType: !1550, size: 32, align: 32, offset: 1632)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1113, file: !35, line: 1903, baseType: !1550, size: 32, align: 32, offset: 1664)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1113, file: !35, line: 1910, baseType: !1043, size: 32, align: 32, offset: 1696)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1113, file: !35, line: 1915, baseType: !1043, size: 32, align: 32, offset: 1728)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1113, file: !35, line: 1926, baseType: !1358, size: 64, align: 64, offset: 1792)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1113, file: !35, line: 1935, baseType: !1131, size: 64, align: 32, offset: 1856)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1113, file: !35, line: 1942, baseType: !1043, size: 32, align: 32, offset: 1920)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1113, file: !35, line: 1948, baseType: !1043, size: 32, align: 32, offset: 1952)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1113, file: !35, line: 1954, baseType: !1043, size: 32, align: 32, offset: 1984)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1113, file: !35, line: 1960, baseType: !1043, size: 32, align: 32, offset: 2016)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1113, file: !35, line: 1984, baseType: !1043, size: 32, align: 32, offset: 2048)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1113, file: !35, line: 1991, baseType: !1043, size: 32, align: 32, offset: 2080)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1113, file: !35, line: 1996, baseType: !1043, size: 32, align: 32, offset: 2112)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1113, file: !35, line: 2004, baseType: !1043, size: 32, align: 32, offset: 2144)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1113, file: !35, line: 2011, baseType: !1043, size: 32, align: 32, offset: 2176)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1113, file: !35, line: 2018, baseType: !1043, size: 32, align: 32, offset: 2208)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1113, file: !35, line: 2027, baseType: !1043, size: 32, align: 32, offset: 2240)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1113, file: !35, line: 2034, baseType: !1043, size: 32, align: 32, offset: 2272)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1113, file: !35, line: 2044, baseType: !1043, size: 32, align: 32, offset: 2304)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1113, file: !35, line: 2054, baseType: !1580, size: 64, align: 64, offset: 2368)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64, align: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1113, file: !35, line: 2061, baseType: !1580, size: 64, align: 64, offset: 2432)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1113, file: !35, line: 2066, baseType: !1043, size: 32, align: 32, offset: 2496)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1113, file: !35, line: 2070, baseType: !1043, size: 32, align: 32, offset: 2528)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1113, file: !35, line: 2078, baseType: !1043, size: 32, align: 32, offset: 2560)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1113, file: !35, line: 2085, baseType: !1043, size: 32, align: 32, offset: 2592)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1113, file: !35, line: 2092, baseType: !1043, size: 32, align: 32, offset: 2624)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1113, file: !35, line: 2099, baseType: !1043, size: 32, align: 32, offset: 2656)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1113, file: !35, line: 2106, baseType: !1043, size: 32, align: 32, offset: 2688)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1113, file: !35, line: 2113, baseType: !1043, size: 32, align: 32, offset: 2720)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1113, file: !35, line: 2120, baseType: !1043, size: 32, align: 32, offset: 2752)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1113, file: !35, line: 2125, baseType: !1043, size: 32, align: 32, offset: 2784)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1113, file: !35, line: 2133, baseType: !1043, size: 32, align: 32, offset: 2816)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1113, file: !35, line: 2140, baseType: !1043, size: 32, align: 32, offset: 2848)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1113, file: !35, line: 2145, baseType: !1043, size: 32, align: 32, offset: 2880)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1113, file: !35, line: 2153, baseType: !1043, size: 32, align: 32, offset: 2912)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1113, file: !35, line: 2158, baseType: !1043, size: 32, align: 32, offset: 2944)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1113, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1113, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1113, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1113, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1113, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1113, file: !35, line: 2203, baseType: !1043, size: 32, align: 32, offset: 3136)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1113, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1113, file: !35, line: 2212, baseType: !1043, size: 32, align: 32, offset: 3200)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1113, file: !35, line: 2213, baseType: !1043, size: 32, align: 32, offset: 3232)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1113, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1113, file: !35, line: 2232, baseType: !1043, size: 32, align: 32, offset: 3296)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1113, file: !35, line: 2243, baseType: !1043, size: 32, align: 32, offset: 3328)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1113, file: !35, line: 2249, baseType: !1043, size: 32, align: 32, offset: 3360)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1113, file: !35, line: 2256, baseType: !1043, size: 32, align: 32, offset: 3392)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1113, file: !35, line: 2263, baseType: !1149, size: 64, align: 64, offset: 3456)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1113, file: !35, line: 2270, baseType: !1149, size: 64, align: 64, offset: 3520)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1113, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1113, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1113, file: !35, line: 2367, baseType: !1616, size: 64, align: 64, offset: 3648)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64, align: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!1043, !1543, !1376, !1043}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1113, file: !35, line: 2383, baseType: !1043, size: 32, align: 32, offset: 3712)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1113, file: !35, line: 2386, baseType: !1550, size: 32, align: 32, offset: 3744)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1113, file: !35, line: 2387, baseType: !1550, size: 32, align: 32, offset: 3776)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1113, file: !35, line: 2394, baseType: !1043, size: 32, align: 32, offset: 3808)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1113, file: !35, line: 2401, baseType: !1043, size: 32, align: 32, offset: 3840)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1113, file: !35, line: 2408, baseType: !1043, size: 32, align: 32, offset: 3872)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1113, file: !35, line: 2415, baseType: !1043, size: 32, align: 32, offset: 3904)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1113, file: !35, line: 2422, baseType: !1043, size: 32, align: 32, offset: 3936)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1113, file: !35, line: 2423, baseType: !1628, size: 64, align: 64, offset: 3968)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64, align: 64)
!1629 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !1630)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !1631)
!1631 = !{!1632, !1633, !1634, !1635}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1630, file: !35, line: 827, baseType: !1043, size: 32, align: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1630, file: !35, line: 828, baseType: !1043, size: 32, align: 32, offset: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1630, file: !35, line: 829, baseType: !1043, size: 32, align: 32, offset: 64)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1630, file: !35, line: 830, baseType: !1550, size: 32, align: 32, offset: 96)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1113, file: !35, line: 2430, baseType: !1052, size: 64, align: 64, offset: 4032)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1113, file: !35, line: 2437, baseType: !1052, size: 64, align: 64, offset: 4096)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1113, file: !35, line: 2444, baseType: !1550, size: 32, align: 32, offset: 4160)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1113, file: !35, line: 2451, baseType: !1550, size: 32, align: 32, offset: 4192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1113, file: !35, line: 2458, baseType: !1043, size: 32, align: 32, offset: 4224)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1113, file: !35, line: 2469, baseType: !1043, size: 32, align: 32, offset: 4256)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1113, file: !35, line: 2475, baseType: !1043, size: 32, align: 32, offset: 4288)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1113, file: !35, line: 2481, baseType: !1043, size: 32, align: 32, offset: 4320)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1113, file: !35, line: 2485, baseType: !1043, size: 32, align: 32, offset: 4352)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1113, file: !35, line: 2489, baseType: !1043, size: 32, align: 32, offset: 4384)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1113, file: !35, line: 2493, baseType: !1043, size: 32, align: 32, offset: 4416)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1113, file: !35, line: 2501, baseType: !1043, size: 32, align: 32, offset: 4448)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1113, file: !35, line: 2506, baseType: !1043, size: 32, align: 32, offset: 4480)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1113, file: !35, line: 2510, baseType: !1043, size: 32, align: 32, offset: 4512)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1113, file: !35, line: 2514, baseType: !1052, size: 64, align: 64, offset: 4544)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1113, file: !35, line: 2528, baseType: !1652, size: 64, align: 64, offset: 4608)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64, align: 64)
!1653 = !DISubroutineType(types: !1654)
!1654 = !{null, !1543, !1054, !1043, !1043}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1113, file: !35, line: 2534, baseType: !1043, size: 32, align: 32, offset: 4672)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1113, file: !35, line: 2545, baseType: !1043, size: 32, align: 32, offset: 4704)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1113, file: !35, line: 2547, baseType: !1043, size: 32, align: 32, offset: 4736)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1113, file: !35, line: 2549, baseType: !1043, size: 32, align: 32, offset: 4768)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1113, file: !35, line: 2551, baseType: !1043, size: 32, align: 32, offset: 4800)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1113, file: !35, line: 2553, baseType: !1043, size: 32, align: 32, offset: 4832)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1113, file: !35, line: 2555, baseType: !1043, size: 32, align: 32, offset: 4864)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1113, file: !35, line: 2557, baseType: !1043, size: 32, align: 32, offset: 4896)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1113, file: !35, line: 2559, baseType: !1043, size: 32, align: 32, offset: 4928)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1113, file: !35, line: 2563, baseType: !1043, size: 32, align: 32, offset: 4960)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1113, file: !35, line: 2571, baseType: !1234, size: 64, align: 64, offset: 4992)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1113, file: !35, line: 2579, baseType: !1234, size: 64, align: 64, offset: 5056)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1113, file: !35, line: 2586, baseType: !1043, size: 32, align: 32, offset: 5120)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1113, file: !35, line: 2615, baseType: !1043, size: 32, align: 32, offset: 5152)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1113, file: !35, line: 2627, baseType: !1043, size: 32, align: 32, offset: 5184)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1113, file: !35, line: 2637, baseType: !1043, size: 32, align: 32, offset: 5216)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1113, file: !35, line: 2681, baseType: !1043, size: 32, align: 32, offset: 5248)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1113, file: !35, line: 2709, baseType: !1052, size: 64, align: 64, offset: 5312)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1113, file: !35, line: 2716, baseType: !1674, size: 64, align: 64, offset: 5376)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64, align: 64)
!1675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !1677)
!1677 = !{!1678, !1679, !1680, !1681, !1682, !1683, !1684, !1688, !1692, !1693, !1694, !1695, !1701, !1702, !1703, !1704, !1705}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1676, file: !35, line: 3642, baseType: !1073, size: 64, align: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1676, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1676, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1676, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1676, file: !35, line: 3669, baseType: !1043, size: 32, align: 32, offset: 160)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1676, file: !35, line: 3682, baseType: !1373, size: 64, align: 64, offset: 192)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1676, file: !35, line: 3698, baseType: !1685, size: 64, align: 64, offset: 256)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64, align: 64)
!1686 = !DISubroutineType(types: !1687)
!1687 = !{!1043, !1111, !1183, !1055}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1676, file: !35, line: 3712, baseType: !1689, size: 64, align: 64, offset: 320)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64, align: 64)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{!1043, !1111, !1043, !1183, !1055}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1676, file: !35, line: 3726, baseType: !1685, size: 64, align: 64, offset: 384)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1676, file: !35, line: 3737, baseType: !1166, size: 64, align: 64, offset: 448)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1676, file: !35, line: 3746, baseType: !1043, size: 32, align: 32, offset: 512)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1676, file: !35, line: 3757, baseType: !1696, size: 64, align: 64, offset: 576)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64, align: 64)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{null, !1699}
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64, align: 64)
!1700 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1676, file: !35, line: 3766, baseType: !1166, size: 64, align: 64, offset: 640)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1676, file: !35, line: 3774, baseType: !1166, size: 64, align: 64, offset: 704)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1676, file: !35, line: 3780, baseType: !1043, size: 32, align: 32, offset: 768)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1676, file: !35, line: 3785, baseType: !1043, size: 32, align: 32, offset: 800)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1676, file: !35, line: 3795, baseType: !1706, size: 64, align: 64, offset: 832)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64, align: 64)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!1043, !1111, !1247}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1113, file: !35, line: 2728, baseType: !1054, size: 64, align: 64, offset: 5440)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1113, file: !35, line: 2735, baseType: !1300, size: 512, align: 64, offset: 5504)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1113, file: !35, line: 2742, baseType: !1043, size: 32, align: 32, offset: 6016)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1113, file: !35, line: 2755, baseType: !1043, size: 32, align: 32, offset: 6048)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1113, file: !35, line: 2776, baseType: !1043, size: 32, align: 32, offset: 6080)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1113, file: !35, line: 2783, baseType: !1043, size: 32, align: 32, offset: 6112)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1113, file: !35, line: 2791, baseType: !1043, size: 32, align: 32, offset: 6144)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1113, file: !35, line: 2802, baseType: !1376, size: 64, align: 64, offset: 6208)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1113, file: !35, line: 2811, baseType: !1043, size: 32, align: 32, offset: 6272)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1113, file: !35, line: 2821, baseType: !1043, size: 32, align: 32, offset: 6304)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1113, file: !35, line: 2830, baseType: !1043, size: 32, align: 32, offset: 6336)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1113, file: !35, line: 2840, baseType: !1043, size: 32, align: 32, offset: 6368)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1113, file: !35, line: 2851, baseType: !1722, size: 64, align: 64, offset: 6400)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64, align: 64)
!1723 = !DISubroutineType(types: !1724)
!1724 = !{!1043, !1543, !1725, !1054, !1358, !1043, !1043}
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64, align: 64)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!1043, !1543, !1054}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1113, file: !35, line: 2871, baseType: !1729, size: 64, align: 64, offset: 6464)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64, align: 64)
!1730 = !DISubroutineType(types: !1731)
!1731 = !{!1043, !1543, !1732, !1054, !1358, !1043}
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64, align: 64)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!1043, !1543, !1054, !1043, !1043}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1113, file: !35, line: 2878, baseType: !1043, size: 32, align: 32, offset: 6528)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1113, file: !35, line: 2885, baseType: !1043, size: 32, align: 32, offset: 6560)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1113, file: !35, line: 3005, baseType: !1043, size: 32, align: 32, offset: 6592)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1113, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1113, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1113, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1113, file: !35, line: 3037, baseType: !1049, size: 64, align: 64, offset: 6720)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1113, file: !35, line: 3038, baseType: !1043, size: 32, align: 32, offset: 6784)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1113, file: !35, line: 3050, baseType: !1149, size: 64, align: 64, offset: 6848)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1113, file: !35, line: 3065, baseType: !1043, size: 32, align: 32, offset: 6912)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1113, file: !35, line: 3083, baseType: !1043, size: 32, align: 32, offset: 6944)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1113, file: !35, line: 3092, baseType: !1131, size: 64, align: 32, offset: 6976)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1113, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1113, file: !35, line: 3106, baseType: !1131, size: 64, align: 32, offset: 7072)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1113, file: !35, line: 3113, baseType: !1750, size: 64, align: 64, offset: 7168)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64, align: 64)
!1751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1752)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !1753)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !1754)
!1754 = !{!1755, !1756, !1757, !1758, !1759, !1760, !1763}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1753, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1753, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1753, file: !35, line: 720, baseType: !1073, size: 64, align: 64, offset: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1753, file: !35, line: 724, baseType: !1073, size: 64, align: 64, offset: 128)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1753, file: !35, line: 728, baseType: !1043, size: 32, align: 32, offset: 192)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1753, file: !35, line: 734, baseType: !1761, size: 64, align: 64, offset: 256)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64, align: 64)
!1762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1073)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1753, file: !35, line: 739, baseType: !1764, size: 64, align: 64, offset: 320)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64, align: 64)
!1765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1157)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1113, file: !35, line: 3129, baseType: !1052, size: 64, align: 64, offset: 7232)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1113, file: !35, line: 3130, baseType: !1052, size: 64, align: 64, offset: 7296)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1113, file: !35, line: 3131, baseType: !1052, size: 64, align: 64, offset: 7360)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1113, file: !35, line: 3132, baseType: !1052, size: 64, align: 64, offset: 7424)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1113, file: !35, line: 3139, baseType: !1234, size: 64, align: 64, offset: 7488)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1113, file: !35, line: 3147, baseType: !1043, size: 32, align: 32, offset: 7552)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1113, file: !35, line: 3165, baseType: !1043, size: 32, align: 32, offset: 7584)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1113, file: !35, line: 3172, baseType: !1043, size: 32, align: 32, offset: 7616)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1113, file: !35, line: 3180, baseType: !1043, size: 32, align: 32, offset: 7648)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1113, file: !35, line: 3191, baseType: !1580, size: 64, align: 64, offset: 7680)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1113, file: !35, line: 3199, baseType: !1049, size: 64, align: 64, offset: 7744)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1113, file: !35, line: 3207, baseType: !1234, size: 64, align: 64, offset: 7808)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1113, file: !35, line: 3214, baseType: !1044, size: 32, align: 32, offset: 7872)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1113, file: !35, line: 3224, baseType: !1265, size: 64, align: 64, offset: 7936)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1113, file: !35, line: 3225, baseType: !1043, size: 32, align: 32, offset: 8000)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1113, file: !35, line: 3249, baseType: !1247, size: 64, align: 64, offset: 8064)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1113, file: !35, line: 3256, baseType: !1043, size: 32, align: 32, offset: 8128)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1113, file: !35, line: 3271, baseType: !1043, size: 32, align: 32, offset: 8160)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1113, file: !35, line: 3279, baseType: !1052, size: 64, align: 64, offset: 8192)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1113, file: !35, line: 3301, baseType: !1247, size: 64, align: 64, offset: 8256)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1113, file: !35, line: 3310, baseType: !1043, size: 32, align: 32, offset: 8320)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1113, file: !35, line: 3337, baseType: !1043, size: 32, align: 32, offset: 8352)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1113, file: !35, line: 3351, baseType: !1043, size: 32, align: 32, offset: 8384)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1113, file: !35, line: 3359, baseType: !1043, size: 32, align: 32, offset: 8416)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "sList", scope: !1064, file: !888, line: 387, baseType: !1791, size: 1024, align: 64, offset: 128)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1792, size: 1024, align: 64, elements: !1793)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64, align: 64)
!1793 = !{!1794}
!1794 = !DISubrange(count: 16)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "HEVClcList", scope: !1064, file: !888, line: 389, baseType: !1796, size: 1024, align: 64, offset: 1152)
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 1024, align: 64, elements: !1793)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64, align: 64)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCLocalContext", file: !888, line: 381, baseType: !1799)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCLocalContext", file: !888, line: 340, size: 251136, align: 256, elements: !1800)
!1800 = !{!1801, !1805, !1807, !1808, !1818, !1840, !1841, !1842, !1843, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1867, !1868, !1872, !1873, !1884, !1900, !1910}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "cabac_state", scope: !1799, file: !888, line: 341, baseType: !1802, size: 1592, align: 8)
!1802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 1592, align: 8, elements: !1803)
!1803 = !{!1804}
!1804 = !DISubrange(count: 199)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "stat_coeff", scope: !1799, file: !888, line: 343, baseType: !1806, size: 32, align: 8, offset: 1592)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 32, align: 8, elements: !1228)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "first_qp_group", scope: !1799, file: !888, line: 345, baseType: !1050, size: 8, align: 8, offset: 1624)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1799, file: !888, line: 347, baseType: !1809, size: 256, align: 64, offset: 1664)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1810, line: 70, baseType: !1811)
!1810 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1810, line: 61, size: 256, align: 64, elements: !1812)
!1812 = !{!1813, !1814, !1815, !1816, !1817}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1811, file: !1810, line: 62, baseType: !1183, size: 64, align: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1811, file: !1810, line: 62, baseType: !1183, size: 64, align: 64, offset: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1811, file: !1810, line: 67, baseType: !1043, size: 32, align: 32, offset: 128)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1811, file: !1810, line: 68, baseType: !1043, size: 32, align: 32, offset: 160)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1811, file: !1810, line: 69, baseType: !1043, size: 32, align: 32, offset: 192)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "cc", scope: !1799, file: !888, line: 348, baseType: !1819, size: 640, align: 64, offset: 1920)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "CABACContext", file: !1820, line: 51, baseType: !1821)
!1820 = !DIFile(filename: "libavcodec/cabac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CABACContext", file: !1820, line: 43, size: 640, align: 64, elements: !1822)
!1822 = !{!1823, !1824, !1825, !1826, !1827, !1828, !1829}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1821, file: !1820, line: 44, baseType: !1043, size: 32, align: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1821, file: !1820, line: 45, baseType: !1043, size: 32, align: 32, offset: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "outstanding_count", scope: !1821, file: !1820, line: 46, baseType: !1043, size: 32, align: 32, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "bytestream_start", scope: !1821, file: !1820, line: 47, baseType: !1183, size: 64, align: 64, offset: 128)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "bytestream", scope: !1821, file: !1820, line: 48, baseType: !1183, size: 64, align: 64, offset: 192)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "bytestream_end", scope: !1821, file: !1820, line: 49, baseType: !1183, size: 64, align: 64, offset: 256)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1821, file: !1820, line: 50, baseType: !1830, size: 320, align: 64, offset: 320)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !1831, line: 40, baseType: !1832)
!1831 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !1831, line: 35, size: 320, align: 64, elements: !1833)
!1833 = !{!1834, !1835, !1836, !1837, !1838, !1839}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !1832, file: !1831, line: 36, baseType: !1055, size: 32, align: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !1832, file: !1831, line: 37, baseType: !1043, size: 32, align: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1832, file: !1831, line: 38, baseType: !1049, size: 64, align: 64, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1832, file: !1831, line: 38, baseType: !1049, size: 64, align: 64, offset: 128)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1832, file: !1831, line: 38, baseType: !1049, size: 64, align: 64, offset: 192)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1832, file: !1831, line: 39, baseType: !1043, size: 32, align: 32, offset: 256)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "qp_y", scope: !1799, file: !888, line: 350, baseType: !1344, size: 8, align: 8, offset: 2560)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "curr_qp_y", scope: !1799, file: !888, line: 351, baseType: !1344, size: 8, align: 8, offset: 2568)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "qPy_pred", scope: !1799, file: !888, line: 353, baseType: !1043, size: 32, align: 32, offset: 2592)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "tu", scope: !1799, file: !888, line: 355, baseType: !1844, size: 224, align: 32, offset: 2624)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransformUnit", file: !888, line: 299, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TransformUnit", file: !888, line: 285, size: 224, align: 32, elements: !1846)
!1846 = !{!1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "cu_qp_delta", scope: !1845, file: !888, line: 286, baseType: !1043, size: 32, align: 32)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "res_scale_val", scope: !1845, file: !888, line: 288, baseType: !1043, size: 32, align: 32, offset: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "intra_pred_mode", scope: !1845, file: !888, line: 291, baseType: !1043, size: 32, align: 32, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "intra_pred_mode_c", scope: !1845, file: !888, line: 292, baseType: !1043, size: 32, align: 32, offset: 96)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_mode_c", scope: !1845, file: !888, line: 293, baseType: !1043, size: 32, align: 32, offset: 128)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "is_cu_qp_delta_coded", scope: !1845, file: !888, line: 294, baseType: !1050, size: 8, align: 8, offset: 160)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "is_cu_chroma_qp_offset_coded", scope: !1845, file: !888, line: 295, baseType: !1050, size: 8, align: 8, offset: 168)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "cu_qp_offset_cb", scope: !1845, file: !888, line: 296, baseType: !1344, size: 8, align: 8, offset: 176)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "cu_qp_offset_cr", scope: !1845, file: !888, line: 297, baseType: !1344, size: 8, align: 8, offset: 184)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "cross_pf", scope: !1845, file: !888, line: 298, baseType: !1050, size: 8, align: 8, offset: 192)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_left_flag", scope: !1799, file: !888, line: 357, baseType: !1050, size: 8, align: 8, offset: 2848)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_up_flag", scope: !1799, file: !888, line: 358, baseType: !1050, size: 8, align: 8, offset: 2856)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_up_right_flag", scope: !1799, file: !888, line: 359, baseType: !1050, size: 8, align: 8, offset: 2864)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_up_left_flag", scope: !1799, file: !888, line: 360, baseType: !1050, size: 8, align: 8, offset: 2872)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "end_of_tiles_x", scope: !1799, file: !888, line: 361, baseType: !1043, size: 32, align: 32, offset: 2880)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "end_of_tiles_y", scope: !1799, file: !888, line: 362, baseType: !1043, size: 32, align: 32, offset: 2912)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "edge_emu_buffer", scope: !1799, file: !888, line: 364, baseType: !1864, size: 90880, align: 8, offset: 3072)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 90880, align: 8, elements: !1865)
!1865 = !{!1866}
!1866 = !DISubrange(count: 11360)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "edge_emu_buffer2", scope: !1799, file: !888, line: 366, baseType: !1864, size: 90880, align: 8, offset: 93952)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1799, file: !888, line: 367, baseType: !1869, size: 65536, align: 16, offset: 184832)
!1869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1046, size: 65536, align: 16, elements: !1870)
!1870 = !{!1871}
!1871 = !DISubrange(count: 4096)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "ct_depth", scope: !1799, file: !888, line: 369, baseType: !1043, size: 32, align: 32, offset: 250368)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "cu", scope: !1799, file: !888, line: 370, baseType: !1874, size: 160, align: 32, offset: 250400)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "CodingUnit", file: !888, line: 253, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CodingUnit", file: !888, line: 242, size: 160, align: 32, elements: !1876)
!1876 = !{!1877, !1878, !1879, !1880, !1881, !1882, !1883}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1875, file: !888, line: 243, baseType: !1043, size: 32, align: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1875, file: !888, line: 244, baseType: !1043, size: 32, align: 32, offset: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "pred_mode", scope: !1875, file: !888, line: 246, baseType: !887, size: 32, align: 32, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "part_mode", scope: !1875, file: !888, line: 247, baseType: !893, size: 32, align: 32, offset: 96)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "intra_split_flag", scope: !1875, file: !888, line: 250, baseType: !1050, size: 8, align: 8, offset: 128)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "max_trafo_depth", scope: !1875, file: !888, line: 251, baseType: !1050, size: 8, align: 8, offset: 136)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "cu_transquant_bypass_flag", scope: !1875, file: !888, line: 252, baseType: !1050, size: 8, align: 8, offset: 144)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "pu", scope: !1799, file: !888, line: 371, baseType: !1885, size: 224, align: 32, offset: 250560)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "PredictionUnit", file: !888, line: 283, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PredictionUnit", file: !888, line: 275, size: 224, align: 32, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891, !1897, !1898, !1899}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "mpm_idx", scope: !1886, file: !888, line: 276, baseType: !1043, size: 32, align: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "rem_intra_luma_pred_mode", scope: !1886, file: !888, line: 277, baseType: !1043, size: 32, align: 32, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "intra_pred_mode", scope: !1886, file: !888, line: 278, baseType: !1806, size: 32, align: 8, offset: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "mvd", scope: !1886, file: !888, line: 279, baseType: !1892, size: 32, align: 16, offset: 96)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mv", file: !888, line: 258, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mv", file: !888, line: 255, size: 32, align: 16, elements: !1894)
!1894 = !{!1895, !1896}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1893, file: !888, line: 256, baseType: !1046, size: 16, align: 16)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1893, file: !888, line: 257, baseType: !1046, size: 16, align: 16, offset: 16)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "merge_flag", scope: !1886, file: !888, line: 280, baseType: !1050, size: 8, align: 8, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "intra_pred_mode_c", scope: !1886, file: !888, line: 281, baseType: !1806, size: 32, align: 8, offset: 136)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_mode_c", scope: !1886, file: !888, line: 282, baseType: !1806, size: 32, align: 8, offset: 168)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "na", scope: !1799, file: !888, line: 372, baseType: !1901, size: 192, align: 32, offset: 250784)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "NeighbourAvailable", file: !888, line: 273, baseType: !1902)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NeighbourAvailable", file: !888, line: 266, size: 192, align: 32, elements: !1903)
!1903 = !{!1904, !1905, !1906, !1907, !1908, !1909}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "cand_bottom_left", scope: !1902, file: !888, line: 267, baseType: !1043, size: 32, align: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "cand_left", scope: !1902, file: !888, line: 268, baseType: !1043, size: 32, align: 32, offset: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "cand_up", scope: !1902, file: !888, line: 269, baseType: !1043, size: 32, align: 32, offset: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "cand_up_left", scope: !1902, file: !888, line: 270, baseType: !1043, size: 32, align: 32, offset: 96)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "cand_up_right", scope: !1902, file: !888, line: 271, baseType: !1043, size: 32, align: 32, offset: 128)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "cand_up_right_sap", scope: !1902, file: !888, line: 272, baseType: !1043, size: 32, align: 32, offset: 160)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "boundary_flags", scope: !1799, file: !888, line: 380, baseType: !1043, size: 32, align: 32, offset: 250976)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "HEVClc", scope: !1064, file: !888, line: 390, baseType: !1797, size: 64, align: 64, offset: 2176)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "threads_type", scope: !1064, file: !888, line: 392, baseType: !1050, size: 8, align: 8, offset: 2240)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "threads_number", scope: !1064, file: !888, line: 393, baseType: !1050, size: 8, align: 8, offset: 2248)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1064, file: !888, line: 395, baseType: !1043, size: 32, align: 32, offset: 2272)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1064, file: !888, line: 396, baseType: !1043, size: 32, align: 32, offset: 2304)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "cabac_state", scope: !1064, file: !888, line: 398, baseType: !1049, size: 64, align: 64, offset: 2368)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "slice_initialized", scope: !1064, file: !888, line: 401, baseType: !1050, size: 8, align: 8, offset: 2432)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1064, file: !888, line: 403, baseType: !1376, size: 64, align: 64, offset: 2496)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "output_frame", scope: !1064, file: !888, line: 404, baseType: !1376, size: 64, align: 64, offset: 2560)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "sao_pixel_buffer_h", scope: !1064, file: !888, line: 405, baseType: !1921, size: 192, align: 64, offset: 2624)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 192, align: 64, elements: !1922)
!1922 = !{!1923}
!1923 = !DISubrange(count: 3)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "sao_pixel_buffer_v", scope: !1064, file: !888, line: 406, baseType: !1921, size: 192, align: 64, offset: 2816)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !1064, file: !888, line: 408, baseType: !1926, size: 6336, align: 64, offset: 3008)
!1926 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCParamSets", file: !1927, line: 408, baseType: !1928)
!1927 = !DIFile(filename: "libavcodec/hevc_ps.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCParamSets", file: !1927, line: 399, size: 6336, align: 64, elements: !1929)
!1929 = !{!1930, !1932, !1933, !1937, !1989, !2139}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "vps_list", scope: !1928, file: !1927, line: 400, baseType: !1931, size: 1024, align: 64)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1247, size: 1024, align: 64, elements: !1793)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "sps_list", scope: !1928, file: !1927, line: 401, baseType: !1931, size: 1024, align: 64, offset: 1024)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "pps_list", scope: !1928, file: !1927, line: 402, baseType: !1934, size: 4096, align: 64, offset: 2048)
!1934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1247, size: 4096, align: 64, elements: !1935)
!1935 = !{!1936}
!1936 = !DISubrange(count: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "vps", scope: !1928, file: !1927, line: 405, baseType: !1938, size: 64, align: 64, offset: 6144)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64, align: 64)
!1939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1940)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCVPS", file: !1927, line: 216, baseType: !1941)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCVPS", file: !1927, line: 195, size: 36544, align: 32, elements: !1942)
!1942 = !{!1943, !1944, !1945, !1946, !1973, !1974, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1988}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "vps_temporal_id_nesting_flag", scope: !1941, file: !1927, line: 196, baseType: !1050, size: 8, align: 8)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "vps_max_layers", scope: !1941, file: !1927, line: 197, baseType: !1043, size: 32, align: 32, offset: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "vps_max_sub_layers", scope: !1941, file: !1927, line: 198, baseType: !1043, size: 32, align: 32, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1941, file: !1927, line: 200, baseType: !1947, size: 2672, align: 8, offset: 96)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTL", file: !1927, line: 193, baseType: !1948)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTL", file: !1927, line: 187, size: 2672, align: 8, elements: !1949)
!1949 = !{!1950, !1966, !1970, !1972}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "general_ptl", scope: !1948, file: !1927, line: 188, baseType: !1951, size: 320, align: 8)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTLCommon", file: !1927, line: 185, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTLCommon", file: !1927, line: 175, size: 320, align: 8, elements: !1953)
!1953 = !{!1954, !1955, !1956, !1957, !1961, !1962, !1963, !1964, !1965}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "profile_space", scope: !1952, file: !1927, line: 176, baseType: !1050, size: 8, align: 8)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "tier_flag", scope: !1952, file: !1927, line: 177, baseType: !1050, size: 8, align: 8, offset: 8)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "profile_idc", scope: !1952, file: !1927, line: 178, baseType: !1050, size: 8, align: 8, offset: 16)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "profile_compatibility_flag", scope: !1952, file: !1927, line: 179, baseType: !1958, size: 256, align: 8, offset: 24)
!1958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 256, align: 8, elements: !1959)
!1959 = !{!1960}
!1960 = !DISubrange(count: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "level_idc", scope: !1952, file: !1927, line: 180, baseType: !1050, size: 8, align: 8, offset: 280)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "progressive_source_flag", scope: !1952, file: !1927, line: 181, baseType: !1050, size: 8, align: 8, offset: 288)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_source_flag", scope: !1952, file: !1927, line: 182, baseType: !1050, size: 8, align: 8, offset: 296)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "non_packed_constraint_flag", scope: !1952, file: !1927, line: 183, baseType: !1050, size: 8, align: 8, offset: 304)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "frame_only_constraint_flag", scope: !1952, file: !1927, line: 184, baseType: !1050, size: 8, align: 8, offset: 312)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "sub_layer_ptl", scope: !1948, file: !1927, line: 189, baseType: !1967, size: 2240, align: 8, offset: 320)
!1967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1951, size: 2240, align: 8, elements: !1968)
!1968 = !{!1969}
!1969 = !DISubrange(count: 7)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "sub_layer_profile_present_flag", scope: !1948, file: !1927, line: 191, baseType: !1971, size: 56, align: 8, offset: 2560)
!1971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 56, align: 8, elements: !1968)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "sub_layer_level_present_flag", scope: !1948, file: !1927, line: 192, baseType: !1971, size: 56, align: 8, offset: 2616)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "vps_sub_layer_ordering_info_present_flag", scope: !1941, file: !1927, line: 201, baseType: !1043, size: 32, align: 32, offset: 2784)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "vps_max_dec_pic_buffering", scope: !1941, file: !1927, line: 202, baseType: !1975, size: 224, align: 32, offset: 2816)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1044, size: 224, align: 32, elements: !1968)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "vps_num_reorder_pics", scope: !1941, file: !1927, line: 203, baseType: !1975, size: 224, align: 32, offset: 3040)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "vps_max_latency_increase", scope: !1941, file: !1927, line: 204, baseType: !1975, size: 224, align: 32, offset: 3264)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "vps_max_layer_id", scope: !1941, file: !1927, line: 205, baseType: !1043, size: 32, align: 32, offset: 3488)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "vps_num_layer_sets", scope: !1941, file: !1927, line: 206, baseType: !1043, size: 32, align: 32, offset: 3520)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "vps_timing_info_present_flag", scope: !1941, file: !1927, line: 207, baseType: !1050, size: 8, align: 8, offset: 3552)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "vps_num_units_in_tick", scope: !1941, file: !1927, line: 208, baseType: !1055, size: 32, align: 32, offset: 3584)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "vps_time_scale", scope: !1941, file: !1927, line: 209, baseType: !1055, size: 32, align: 32, offset: 3616)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "vps_poc_proportional_to_timing_flag", scope: !1941, file: !1927, line: 210, baseType: !1050, size: 8, align: 8, offset: 3648)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "vps_num_ticks_poc_diff_one", scope: !1941, file: !1927, line: 211, baseType: !1043, size: 32, align: 32, offset: 3680)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "vps_num_hrd_parameters", scope: !1941, file: !1927, line: 212, baseType: !1043, size: 32, align: 32, offset: 3712)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1941, file: !1927, line: 214, baseType: !1987, size: 32768, align: 8, offset: 3744)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 32768, align: 8, elements: !1870)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !1941, file: !1927, line: 215, baseType: !1043, size: 32, align: 32, offset: 36512)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "sps", scope: !1928, file: !1927, line: 406, baseType: !1990, size: 64, align: 64, offset: 6208)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64, align: 64)
!1991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1992)
!1992 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCSPS", file: !1927, line: 319, baseType: !1993)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCSPS", file: !1927, line: 225, size: 140544, align: 32, elements: !1994)
!1994 = !{!1995, !1996, !1997, !1998, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2021, !2022, !2059, !2060, !2061, !2073, !2074, !2086, !2087, !2088, !2089, !2091, !2092, !2093, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2135, !2136, !2137, !2138}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "vps_id", scope: !1993, file: !1927, line: 226, baseType: !1044, size: 32, align: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_format_idc", scope: !1993, file: !1927, line: 227, baseType: !1043, size: 32, align: 32, offset: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "separate_colour_plane_flag", scope: !1993, file: !1927, line: 228, baseType: !1050, size: 8, align: 8, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "output_window", scope: !1993, file: !1927, line: 230, baseType: !1999, size: 128, align: 32, offset: 96)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCWindow", file: !1927, line: 130, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCWindow", file: !1927, line: 125, size: 128, align: 32, elements: !2001)
!2001 = !{!2002, !2003, !2004, !2005}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "left_offset", scope: !2000, file: !1927, line: 126, baseType: !1044, size: 32, align: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "right_offset", scope: !2000, file: !1927, line: 127, baseType: !1044, size: 32, align: 32, offset: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "top_offset", scope: !2000, file: !1927, line: 128, baseType: !1044, size: 32, align: 32, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "bottom_offset", scope: !2000, file: !1927, line: 129, baseType: !1044, size: 32, align: 32, offset: 96)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "pic_conf_win", scope: !1993, file: !1927, line: 232, baseType: !1999, size: 128, align: 32, offset: 224)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth", scope: !1993, file: !1927, line: 234, baseType: !1043, size: 32, align: 32, offset: 352)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth_chroma", scope: !1993, file: !1927, line: 235, baseType: !1043, size: 32, align: 32, offset: 384)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_shift", scope: !1993, file: !1927, line: 236, baseType: !1043, size: 32, align: 32, offset: 416)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1993, file: !1927, line: 237, baseType: !494, size: 32, align: 32, offset: 448)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "log2_max_poc_lsb", scope: !1993, file: !1927, line: 239, baseType: !1044, size: 32, align: 32, offset: 480)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "pcm_enabled_flag", scope: !1993, file: !1927, line: 240, baseType: !1043, size: 32, align: 32, offset: 512)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "max_sub_layers", scope: !1993, file: !1927, line: 242, baseType: !1043, size: 32, align: 32, offset: 544)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_layer", scope: !1993, file: !1927, line: 247, baseType: !2015, size: 672, align: 32, offset: 576)
!2015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2016, size: 672, align: 32, elements: !1968)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1993, file: !1927, line: 243, size: 96, align: 32, elements: !2017)
!2017 = !{!2018, !2019, !2020}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "max_dec_pic_buffering", scope: !2016, file: !1927, line: 244, baseType: !1043, size: 32, align: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "num_reorder_pics", scope: !2016, file: !1927, line: 245, baseType: !1043, size: 32, align: 32, offset: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "max_latency_increase", scope: !2016, file: !1927, line: 246, baseType: !1043, size: 32, align: 32, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_id_nesting_flag", scope: !1993, file: !1927, line: 248, baseType: !1050, size: 8, align: 8, offset: 1248)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "vui", scope: !1993, file: !1927, line: 250, baseType: !2023, size: 1120, align: 32, offset: 1280)
!2023 = !DIDerivedType(tag: DW_TAG_typedef, name: "VUI", file: !1927, line: 173, baseType: !2024)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VUI", file: !1927, line: 132, size: 1120, align: 32, elements: !2025)
!2025 = !{!2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "sar", scope: !2024, file: !1927, line: 133, baseType: !1131, size: 64, align: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "overscan_info_present_flag", scope: !2024, file: !1927, line: 135, baseType: !1043, size: 32, align: 32, offset: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "overscan_appropriate_flag", scope: !2024, file: !1927, line: 136, baseType: !1043, size: 32, align: 32, offset: 96)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "video_signal_type_present_flag", scope: !2024, file: !1927, line: 138, baseType: !1043, size: 32, align: 32, offset: 128)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "video_format", scope: !2024, file: !1927, line: 139, baseType: !1043, size: 32, align: 32, offset: 160)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "video_full_range_flag", scope: !2024, file: !1927, line: 140, baseType: !1043, size: 32, align: 32, offset: 192)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "colour_description_present_flag", scope: !2024, file: !1927, line: 141, baseType: !1043, size: 32, align: 32, offset: 224)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "colour_primaries", scope: !2024, file: !1927, line: 142, baseType: !1050, size: 8, align: 8, offset: 256)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_characteristic", scope: !2024, file: !1927, line: 143, baseType: !1050, size: 8, align: 8, offset: 264)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "matrix_coeffs", scope: !2024, file: !1927, line: 144, baseType: !1050, size: 8, align: 8, offset: 272)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_loc_info_present_flag", scope: !2024, file: !1927, line: 146, baseType: !1043, size: 32, align: 32, offset: 288)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_loc_type_top_field", scope: !2024, file: !1927, line: 147, baseType: !1043, size: 32, align: 32, offset: 320)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_loc_type_bottom_field", scope: !2024, file: !1927, line: 148, baseType: !1043, size: 32, align: 32, offset: 352)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "neutra_chroma_indication_flag", scope: !2024, file: !1927, line: 149, baseType: !1043, size: 32, align: 32, offset: 384)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "field_seq_flag", scope: !2024, file: !1927, line: 151, baseType: !1043, size: 32, align: 32, offset: 416)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "frame_field_info_present_flag", scope: !2024, file: !1927, line: 152, baseType: !1043, size: 32, align: 32, offset: 448)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "default_display_window_flag", scope: !2024, file: !1927, line: 154, baseType: !1043, size: 32, align: 32, offset: 480)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "def_disp_win", scope: !2024, file: !1927, line: 155, baseType: !1999, size: 128, align: 32, offset: 512)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "vui_timing_info_present_flag", scope: !2024, file: !1927, line: 157, baseType: !1043, size: 32, align: 32, offset: 640)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "vui_num_units_in_tick", scope: !2024, file: !1927, line: 158, baseType: !1055, size: 32, align: 32, offset: 672)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "vui_time_scale", scope: !2024, file: !1927, line: 159, baseType: !1055, size: 32, align: 32, offset: 704)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "vui_poc_proportional_to_timing_flag", scope: !2024, file: !1927, line: 160, baseType: !1043, size: 32, align: 32, offset: 736)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "vui_num_ticks_poc_diff_one_minus1", scope: !2024, file: !1927, line: 161, baseType: !1043, size: 32, align: 32, offset: 768)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "vui_hrd_parameters_present_flag", scope: !2024, file: !1927, line: 162, baseType: !1043, size: 32, align: 32, offset: 800)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_restriction_flag", scope: !2024, file: !1927, line: 164, baseType: !1043, size: 32, align: 32, offset: 832)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "tiles_fixed_structure_flag", scope: !2024, file: !1927, line: 165, baseType: !1043, size: 32, align: 32, offset: 864)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "motion_vectors_over_pic_boundaries_flag", scope: !2024, file: !1927, line: 166, baseType: !1043, size: 32, align: 32, offset: 896)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "restricted_ref_pic_lists_flag", scope: !2024, file: !1927, line: 167, baseType: !1043, size: 32, align: 32, offset: 928)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "min_spatial_segmentation_idc", scope: !2024, file: !1927, line: 168, baseType: !1043, size: 32, align: 32, offset: 960)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "max_bytes_per_pic_denom", scope: !2024, file: !1927, line: 169, baseType: !1043, size: 32, align: 32, offset: 992)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "max_bits_per_min_cu_denom", scope: !2024, file: !1927, line: 170, baseType: !1043, size: 32, align: 32, offset: 1024)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "log2_max_mv_length_horizontal", scope: !2024, file: !1927, line: 171, baseType: !1043, size: 32, align: 32, offset: 1056)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "log2_max_mv_length_vertical", scope: !2024, file: !1927, line: 172, baseType: !1043, size: 32, align: 32, offset: 1088)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1993, file: !1927, line: 251, baseType: !1947, size: 2672, align: 8, offset: 2400)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_list_enable_flag", scope: !1993, file: !1927, line: 253, baseType: !1050, size: 8, align: 8, offset: 5072)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_list", scope: !1993, file: !1927, line: 254, baseType: !2062, size: 12384, align: 8, offset: 5080)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScalingList", file: !1927, line: 223, baseType: !2063)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScalingList", file: !1927, line: 218, size: 12384, align: 8, elements: !2064)
!2064 = !{!2065, !2069}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "sl", scope: !2063, file: !1927, line: 221, baseType: !2066, size: 12288, align: 8)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 12288, align: 8, elements: !2067)
!2067 = !{!1229, !2068, !1936}
!2068 = !DISubrange(count: 6)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "sl_dc", scope: !2063, file: !1927, line: 222, baseType: !2070, size: 96, align: 8, offset: 12288)
!2070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 96, align: 8, elements: !2071)
!2071 = !{!2072, !2068}
!2072 = !DISubrange(count: 2)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "nb_st_rps", scope: !1993, file: !1927, line: 256, baseType: !1044, size: 32, align: 32, offset: 17472)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "st_rps", scope: !1993, file: !1927, line: 257, baseType: !2075, size: 88064, align: 32, offset: 17504)
!2075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2076, size: 88064, align: 32, elements: !1935)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShortTermRPS", file: !1927, line: 40, baseType: !2077)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShortTermRPS", file: !1927, line: 34, size: 1376, align: 32, elements: !2078)
!2078 = !{!2079, !2080, !2081, !2082, !2085}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "num_negative_pics", scope: !2077, file: !1927, line: 35, baseType: !1044, size: 32, align: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "num_delta_pocs", scope: !2077, file: !1927, line: 36, baseType: !1043, size: 32, align: 32, offset: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "rps_idx_num_delta_pocs", scope: !2077, file: !1927, line: 37, baseType: !1043, size: 32, align: 32, offset: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "delta_poc", scope: !2077, file: !1927, line: 38, baseType: !2083, size: 1024, align: 32, offset: 96)
!2083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2084, size: 1024, align: 32, elements: !1959)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1047, line: 38, baseType: !1043)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2077, file: !1927, line: 39, baseType: !1958, size: 256, align: 8, offset: 1120)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "amp_enabled_flag", scope: !1993, file: !1927, line: 259, baseType: !1050, size: 8, align: 8, offset: 105568)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "sao_enabled", scope: !1993, file: !1927, line: 260, baseType: !1050, size: 8, align: 8, offset: 105576)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "long_term_ref_pics_present_flag", scope: !1993, file: !1927, line: 262, baseType: !1050, size: 8, align: 8, offset: 105584)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "lt_ref_pic_poc_lsb_sps", scope: !1993, file: !1927, line: 263, baseType: !2090, size: 512, align: 16, offset: 105600)
!2090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1200, size: 512, align: 16, elements: !1959)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "used_by_curr_pic_lt_sps_flag", scope: !1993, file: !1927, line: 264, baseType: !1958, size: 256, align: 8, offset: 106112)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "num_long_term_ref_pics_sps", scope: !1993, file: !1927, line: 265, baseType: !1050, size: 8, align: 8, offset: 106368)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "pcm", scope: !1993, file: !1927, line: 273, baseType: !2094, size: 128, align: 32, offset: 106400)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1993, file: !1927, line: 267, size: 128, align: 32, elements: !2095)
!2095 = !{!2096, !2097, !2098, !2099, !2100}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth", scope: !2094, file: !1927, line: 268, baseType: !1050, size: 8, align: 8)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth_chroma", scope: !2094, file: !1927, line: 269, baseType: !1050, size: 8, align: 8, offset: 8)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "log2_min_pcm_cb_size", scope: !2094, file: !1927, line: 270, baseType: !1044, size: 32, align: 32, offset: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "log2_max_pcm_cb_size", scope: !2094, file: !1927, line: 271, baseType: !1044, size: 32, align: 32, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "loop_filter_disable_flag", scope: !2094, file: !1927, line: 272, baseType: !1050, size: 8, align: 8, offset: 96)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "sps_temporal_mvp_enabled_flag", scope: !1993, file: !1927, line: 274, baseType: !1050, size: 8, align: 8, offset: 106528)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "sps_strong_intra_smoothing_enable_flag", scope: !1993, file: !1927, line: 275, baseType: !1050, size: 8, align: 8, offset: 106536)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "log2_min_cb_size", scope: !1993, file: !1927, line: 277, baseType: !1044, size: 32, align: 32, offset: 106560)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "log2_diff_max_min_coding_block_size", scope: !1993, file: !1927, line: 278, baseType: !1044, size: 32, align: 32, offset: 106592)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "log2_min_tb_size", scope: !1993, file: !1927, line: 279, baseType: !1044, size: 32, align: 32, offset: 106624)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "log2_max_trafo_size", scope: !1993, file: !1927, line: 280, baseType: !1044, size: 32, align: 32, offset: 106656)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "log2_ctb_size", scope: !1993, file: !1927, line: 281, baseType: !1044, size: 32, align: 32, offset: 106688)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "log2_min_pu_size", scope: !1993, file: !1927, line: 282, baseType: !1044, size: 32, align: 32, offset: 106720)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "max_transform_hierarchy_depth_inter", scope: !1993, file: !1927, line: 284, baseType: !1043, size: 32, align: 32, offset: 106752)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "max_transform_hierarchy_depth_intra", scope: !1993, file: !1927, line: 285, baseType: !1043, size: 32, align: 32, offset: 106784)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "sps_range_extension_flag", scope: !1993, file: !1927, line: 287, baseType: !1043, size: 32, align: 32, offset: 106816)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "transform_skip_rotation_enabled_flag", scope: !1993, file: !1927, line: 288, baseType: !1043, size: 32, align: 32, offset: 106848)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "transform_skip_context_enabled_flag", scope: !1993, file: !1927, line: 289, baseType: !1043, size: 32, align: 32, offset: 106880)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "implicit_rdpcm_enabled_flag", scope: !1993, file: !1927, line: 290, baseType: !1043, size: 32, align: 32, offset: 106912)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_rdpcm_enabled_flag", scope: !1993, file: !1927, line: 291, baseType: !1043, size: 32, align: 32, offset: 106944)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "extended_precision_processing_flag", scope: !1993, file: !1927, line: 292, baseType: !1043, size: 32, align: 32, offset: 106976)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "intra_smoothing_disabled_flag", scope: !1993, file: !1927, line: 293, baseType: !1043, size: 32, align: 32, offset: 107008)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "high_precision_offsets_enabled_flag", scope: !1993, file: !1927, line: 294, baseType: !1043, size: 32, align: 32, offset: 107040)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "persistent_rice_adaptation_enabled_flag", scope: !1993, file: !1927, line: 295, baseType: !1043, size: 32, align: 32, offset: 107072)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "cabac_bypass_alignment_enabled_flag", scope: !1993, file: !1927, line: 296, baseType: !1043, size: 32, align: 32, offset: 107104)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1993, file: !1927, line: 299, baseType: !1043, size: 32, align: 32, offset: 107136)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1993, file: !1927, line: 300, baseType: !1043, size: 32, align: 32, offset: 107168)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_width", scope: !1993, file: !1927, line: 301, baseType: !1043, size: 32, align: 32, offset: 107200)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_height", scope: !1993, file: !1927, line: 302, baseType: !1043, size: 32, align: 32, offset: 107232)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_size", scope: !1993, file: !1927, line: 303, baseType: !1043, size: 32, align: 32, offset: 107264)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "min_cb_width", scope: !1993, file: !1927, line: 304, baseType: !1043, size: 32, align: 32, offset: 107296)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "min_cb_height", scope: !1993, file: !1927, line: 305, baseType: !1043, size: 32, align: 32, offset: 107328)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "min_tb_width", scope: !1993, file: !1927, line: 306, baseType: !1043, size: 32, align: 32, offset: 107360)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "min_tb_height", scope: !1993, file: !1927, line: 307, baseType: !1043, size: 32, align: 32, offset: 107392)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "min_pu_width", scope: !1993, file: !1927, line: 308, baseType: !1043, size: 32, align: 32, offset: 107424)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "min_pu_height", scope: !1993, file: !1927, line: 309, baseType: !1043, size: 32, align: 32, offset: 107456)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "tb_mask", scope: !1993, file: !1927, line: 310, baseType: !1043, size: 32, align: 32, offset: 107488)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "hshift", scope: !1993, file: !1927, line: 312, baseType: !2134, size: 96, align: 32, offset: 107520)
!2134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 96, align: 32, elements: !1922)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "vshift", scope: !1993, file: !1927, line: 313, baseType: !2134, size: 96, align: 32, offset: 107616)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "qp_bd_offset", scope: !1993, file: !1927, line: 315, baseType: !1043, size: 32, align: 32, offset: 107712)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1993, file: !1927, line: 317, baseType: !1987, size: 32768, align: 8, offset: 107744)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !1993, file: !1927, line: 318, baseType: !1043, size: 32, align: 32, offset: 140512)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !1928, file: !1927, line: 407, baseType: !2140, size: 64, align: 64, offset: 6272)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64, align: 64)
!2141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2142)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCPPS", file: !1927, line: 397, baseType: !2143)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCPPS", file: !1927, line: 321, size: 46784, align: 64, elements: !2144)
!2144 = !{!2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2190, !2191, !2192, !2193, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "sps_id", scope: !2143, file: !1927, line: 322, baseType: !1044, size: 32, align: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "sign_data_hiding_flag", scope: !2143, file: !1927, line: 324, baseType: !1050, size: 8, align: 8, offset: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "cabac_init_present_flag", scope: !2143, file: !1927, line: 326, baseType: !1050, size: 8, align: 8, offset: 40)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "num_ref_idx_l0_default_active", scope: !2143, file: !1927, line: 328, baseType: !1043, size: 32, align: 32, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "num_ref_idx_l1_default_active", scope: !2143, file: !1927, line: 329, baseType: !1043, size: 32, align: 32, offset: 96)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "pic_init_qp_minus26", scope: !2143, file: !1927, line: 330, baseType: !1043, size: 32, align: 32, offset: 128)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "constrained_intra_pred_flag", scope: !2143, file: !1927, line: 332, baseType: !1050, size: 8, align: 8, offset: 160)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "transform_skip_enabled_flag", scope: !2143, file: !1927, line: 333, baseType: !1050, size: 8, align: 8, offset: 168)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "cu_qp_delta_enabled_flag", scope: !2143, file: !1927, line: 335, baseType: !1050, size: 8, align: 8, offset: 176)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "diff_cu_qp_delta_depth", scope: !2143, file: !1927, line: 336, baseType: !1043, size: 32, align: 32, offset: 192)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "cb_qp_offset", scope: !2143, file: !1927, line: 338, baseType: !1043, size: 32, align: 32, offset: 224)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "cr_qp_offset", scope: !2143, file: !1927, line: 339, baseType: !1043, size: 32, align: 32, offset: 256)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "pic_slice_level_chroma_qp_offsets_present_flag", scope: !2143, file: !1927, line: 340, baseType: !1050, size: 8, align: 8, offset: 288)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "weighted_pred_flag", scope: !2143, file: !1927, line: 341, baseType: !1050, size: 8, align: 8, offset: 296)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "weighted_bipred_flag", scope: !2143, file: !1927, line: 342, baseType: !1050, size: 8, align: 8, offset: 304)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "output_flag_present_flag", scope: !2143, file: !1927, line: 343, baseType: !1050, size: 8, align: 8, offset: 312)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "transquant_bypass_enable_flag", scope: !2143, file: !1927, line: 344, baseType: !1050, size: 8, align: 8, offset: 320)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "dependent_slice_segments_enabled_flag", scope: !2143, file: !1927, line: 346, baseType: !1050, size: 8, align: 8, offset: 328)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "tiles_enabled_flag", scope: !2143, file: !1927, line: 347, baseType: !1050, size: 8, align: 8, offset: 336)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "entropy_coding_sync_enabled_flag", scope: !2143, file: !1927, line: 348, baseType: !1050, size: 8, align: 8, offset: 344)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "num_tile_columns", scope: !2143, file: !1927, line: 350, baseType: !1043, size: 32, align: 32, offset: 352)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "num_tile_rows", scope: !2143, file: !1927, line: 351, baseType: !1043, size: 32, align: 32, offset: 384)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "uniform_spacing_flag", scope: !2143, file: !1927, line: 352, baseType: !1050, size: 8, align: 8, offset: 416)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "loop_filter_across_tiles_enabled_flag", scope: !2143, file: !1927, line: 353, baseType: !1050, size: 8, align: 8, offset: 424)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "seq_loop_filter_across_slices_enabled_flag", scope: !2143, file: !1927, line: 355, baseType: !1050, size: 8, align: 8, offset: 432)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "deblocking_filter_control_present_flag", scope: !2143, file: !1927, line: 357, baseType: !1050, size: 8, align: 8, offset: 440)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "deblocking_filter_override_enabled_flag", scope: !2143, file: !1927, line: 358, baseType: !1050, size: 8, align: 8, offset: 448)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "disable_dbf", scope: !2143, file: !1927, line: 359, baseType: !1050, size: 8, align: 8, offset: 456)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "beta_offset", scope: !2143, file: !1927, line: 360, baseType: !1043, size: 32, align: 32, offset: 480)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "tc_offset", scope: !2143, file: !1927, line: 361, baseType: !1043, size: 32, align: 32, offset: 512)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_list_data_present_flag", scope: !2143, file: !1927, line: 363, baseType: !1050, size: 8, align: 8, offset: 544)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_list", scope: !2143, file: !1927, line: 364, baseType: !2062, size: 12384, align: 8, offset: 552)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "lists_modification_present_flag", scope: !2143, file: !1927, line: 366, baseType: !1050, size: 8, align: 8, offset: 12936)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "log2_parallel_merge_level", scope: !2143, file: !1927, line: 367, baseType: !1043, size: 32, align: 32, offset: 12960)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "num_extra_slice_header_bits", scope: !2143, file: !1927, line: 368, baseType: !1043, size: 32, align: 32, offset: 12992)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "slice_header_extension_present_flag", scope: !2143, file: !1927, line: 369, baseType: !1050, size: 8, align: 8, offset: 13024)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "log2_max_transform_skip_block_size", scope: !2143, file: !1927, line: 370, baseType: !1050, size: 8, align: 8, offset: 13032)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "pps_range_extensions_flag", scope: !2143, file: !1927, line: 371, baseType: !1050, size: 8, align: 8, offset: 13040)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "cross_component_prediction_enabled_flag", scope: !2143, file: !1927, line: 372, baseType: !1050, size: 8, align: 8, offset: 13048)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qp_offset_list_enabled_flag", scope: !2143, file: !1927, line: 373, baseType: !1050, size: 8, align: 8, offset: 13056)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "diff_cu_chroma_qp_offset_depth", scope: !2143, file: !1927, line: 374, baseType: !1050, size: 8, align: 8, offset: 13064)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qp_offset_list_len_minus1", scope: !2143, file: !1927, line: 375, baseType: !1050, size: 8, align: 8, offset: 13072)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "cb_qp_offset_list", scope: !2143, file: !1927, line: 376, baseType: !2188, size: 48, align: 8, offset: 13080)
!2188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1344, size: 48, align: 8, elements: !2189)
!2189 = !{!2068}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "cr_qp_offset_list", scope: !2143, file: !1927, line: 377, baseType: !2188, size: 48, align: 8, offset: 13128)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "log2_sao_offset_scale_luma", scope: !2143, file: !1927, line: 378, baseType: !1050, size: 8, align: 8, offset: 13176)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "log2_sao_offset_scale_chroma", scope: !2143, file: !1927, line: 379, baseType: !1050, size: 8, align: 8, offset: 13184)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "column_width", scope: !2143, file: !1927, line: 382, baseType: !2194, size: 64, align: 64, offset: 13248)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64, align: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "row_height", scope: !2143, file: !1927, line: 383, baseType: !2194, size: 64, align: 64, offset: 13312)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "col_bd", scope: !2143, file: !1927, line: 384, baseType: !2194, size: 64, align: 64, offset: 13376)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "row_bd", scope: !2143, file: !1927, line: 385, baseType: !2194, size: 64, align: 64, offset: 13440)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "col_idxX", scope: !2143, file: !1927, line: 386, baseType: !1358, size: 64, align: 64, offset: 13504)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_addr_rs_to_ts", scope: !2143, file: !1927, line: 388, baseType: !1358, size: 64, align: 64, offset: 13568)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_addr_ts_to_rs", scope: !2143, file: !1927, line: 389, baseType: !1358, size: 64, align: 64, offset: 13632)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "tile_id", scope: !2143, file: !1927, line: 390, baseType: !1358, size: 64, align: 64, offset: 13696)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "tile_pos_rs", scope: !2143, file: !1927, line: 391, baseType: !1358, size: 64, align: 64, offset: 13760)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "min_tb_addr_zs", scope: !2143, file: !1927, line: 392, baseType: !1358, size: 64, align: 64, offset: 13824)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "min_tb_addr_zs_tab", scope: !2143, file: !1927, line: 393, baseType: !1358, size: 64, align: 64, offset: 13888)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2143, file: !1927, line: 395, baseType: !1987, size: 32768, align: 8, offset: 13952)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !2143, file: !1927, line: 396, baseType: !1043, size: 32, align: 32, offset: 46720)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "sei", scope: !1064, file: !888, line: 409, baseType: !2208, size: 1280, align: 64, offset: 9344)
!2208 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCSEI", file: !2209, line: 118, baseType: !2210)
!2209 = !DIFile(filename: "libavcodec/hevc_sei.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCSEI", file: !2209, line: 108, size: 1280, align: 64, elements: !2211)
!2211 = !{!2212, !2220, !2229, !2237, !2242, !2248, !2261, !2268, !2269}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "picture_hash", scope: !2210, file: !2209, line: 109, baseType: !2213, size: 392, align: 8)
!2213 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCSEIPictureHash", file: !2209, line: 64, baseType: !2214)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCSEIPictureHash", file: !2209, line: 61, size: 392, align: 8, elements: !2215)
!2215 = !{!2216, !2219}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "md5", scope: !2214, file: !2209, line: 62, baseType: !2217, size: 384, align: 8)
!2217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 384, align: 8, elements: !2218)
!2218 = !{!1923, !1794}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "is_md5", scope: !2214, file: !2209, line: 63, baseType: !1050, size: 8, align: 8, offset: 384)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "frame_packing", scope: !2210, file: !2209, line: 110, baseType: !2221, size: 160, align: 32, offset: 416)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCSEIFramePacking", file: !2209, line: 72, baseType: !2222)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCSEIFramePacking", file: !2209, line: 66, size: 160, align: 32, elements: !2223)
!2223 = !{!2224, !2225, !2226, !2227, !2228}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2222, file: !2209, line: 67, baseType: !1043, size: 32, align: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "arrangement_type", scope: !2222, file: !2209, line: 68, baseType: !1043, size: 32, align: 32, offset: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "content_interpretation_type", scope: !2222, file: !2209, line: 69, baseType: !1043, size: 32, align: 32, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "quincunx_subsampling", scope: !2222, file: !2209, line: 70, baseType: !1043, size: 32, align: 32, offset: 96)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "current_frame_is_frame0_flag", scope: !2222, file: !2209, line: 71, baseType: !1043, size: 32, align: 32, offset: 128)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "display_orientation", scope: !2210, file: !2209, line: 111, baseType: !2230, size: 128, align: 32, offset: 576)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCSEIDisplayOrientation", file: !2209, line: 78, baseType: !2231)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCSEIDisplayOrientation", file: !2209, line: 74, size: 128, align: 32, elements: !2232)
!2232 = !{!2233, !2234, !2235, !2236}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2231, file: !2209, line: 75, baseType: !1043, size: 32, align: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "anticlockwise_rotation", scope: !2231, file: !2209, line: 76, baseType: !1043, size: 32, align: 32, offset: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "hflip", scope: !2231, file: !2209, line: 77, baseType: !1043, size: 32, align: 32, offset: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "vflip", scope: !2231, file: !2209, line: 77, baseType: !1043, size: 32, align: 32, offset: 96)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "picture_timing", scope: !2210, file: !2209, line: 112, baseType: !2238, size: 32, align: 32, offset: 704)
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCSEIPictureTiming", file: !2209, line: 82, baseType: !2239)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCSEIPictureTiming", file: !2209, line: 80, size: 32, align: 32, elements: !2240)
!2240 = !{!2241}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "picture_struct", scope: !2239, file: !2209, line: 81, baseType: !1043, size: 32, align: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "a53_caption", scope: !2210, file: !2209, line: 113, baseType: !2243, size: 128, align: 64, offset: 768)
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCSEIA53Caption", file: !2209, line: 87, baseType: !2244)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCSEIA53Caption", file: !2209, line: 84, size: 128, align: 64, elements: !2245)
!2245 = !{!2246, !2247}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "a53_caption_size", scope: !2244, file: !2209, line: 85, baseType: !1043, size: 32, align: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "a53_caption", scope: !2244, file: !2209, line: 86, baseType: !1049, size: 64, align: 64, offset: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "mastering_display", scope: !2210, file: !2209, line: 114, baseType: !2249, size: 224, align: 32, offset: 896)
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCSEIMasteringDisplay", file: !2209, line: 95, baseType: !2250)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCSEIMasteringDisplay", file: !2209, line: 89, size: 224, align: 32, elements: !2251)
!2251 = !{!2252, !2253, !2256, !2259, !2260}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2250, file: !2209, line: 90, baseType: !1043, size: 32, align: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "display_primaries", scope: !2250, file: !2209, line: 91, baseType: !2254, size: 96, align: 16, offset: 32)
!2254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1200, size: 96, align: 16, elements: !2255)
!2255 = !{!1923, !2072}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !2250, file: !2209, line: 92, baseType: !2257, size: 32, align: 16, offset: 128)
!2257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1200, size: 32, align: 16, elements: !2258)
!2258 = !{!2072}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "max_luminance", scope: !2250, file: !2209, line: 93, baseType: !1055, size: 32, align: 32, offset: 160)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "min_luminance", scope: !2250, file: !2209, line: 94, baseType: !1055, size: 32, align: 32, offset: 192)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "content_light", scope: !2210, file: !2209, line: 115, baseType: !2262, size: 64, align: 32, offset: 1120)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCSEIContentLight", file: !2209, line: 101, baseType: !2263)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCSEIContentLight", file: !2209, line: 97, size: 64, align: 32, elements: !2264)
!2264 = !{!2265, !2266, !2267}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2263, file: !2209, line: 98, baseType: !1043, size: 32, align: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "max_content_light_level", scope: !2263, file: !2209, line: 99, baseType: !1200, size: 16, align: 16, offset: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "max_pic_average_light_level", scope: !2263, file: !2209, line: 100, baseType: !1200, size: 16, align: 16, offset: 48)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "active_seq_parameter_set_id", scope: !2210, file: !2209, line: 116, baseType: !1043, size: 32, align: 32, offset: 1184)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "alternative_transfer", scope: !2210, file: !2209, line: 117, baseType: !2270, size: 64, align: 32, offset: 1216)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCSEIAlternativeTransfer", file: !2209, line: 106, baseType: !2271)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCSEIAlternativeTransfer", file: !2209, line: 103, size: 64, align: 32, elements: !2272)
!2272 = !{!2273, !2274}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !2271, file: !2209, line: 104, baseType: !1043, size: 32, align: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_transfer_characteristics", scope: !2271, file: !2209, line: 105, baseType: !1043, size: 32, align: 32, offset: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "md5_ctx", scope: !1064, file: !888, line: 410, baseType: !2276, size: 64, align: 64, offset: 10624)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 64, align: 64)
!2277 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVMD5", file: !2278, line: 46, flags: DIFlagFwdDecl)
!2278 = !DIFile(filename: "./libavutil/md5.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "tab_mvf_pool", scope: !1064, file: !888, line: 412, baseType: !1406, size: 64, align: 64, offset: 10688)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "rpl_tab_pool", scope: !1064, file: !888, line: 413, baseType: !1406, size: 64, align: 64, offset: 10752)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "rps", scope: !1064, file: !888, line: 416, baseType: !2282, size: 10560, align: 64, offset: 10816)
!2282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2283, size: 10560, align: 64, elements: !2335)
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "RefPicList", file: !888, line: 236, baseType: !2284)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RefPicList", file: !888, line: 231, size: 2112, align: 64, elements: !2285)
!2285 = !{!2286, !2331, !2333, !2334}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2284, file: !888, line: 232, baseType: !2287, size: 1024, align: 64)
!2287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2288, size: 1024, align: 64, elements: !1793)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64, align: 64)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCFrame", file: !888, line: 311, size: 1024, align: 64, elements: !2290)
!2290 = !{!2291, !2292, !2301, !2311, !2313, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !2289, file: !888, line: 312, baseType: !1376, size: 64, align: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !2289, file: !888, line: 313, baseType: !2293, size: 256, align: 64, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadFrame", file: !2294, line: 40, baseType: !2295)
!2294 = !DIFile(filename: "libavcodec/thread.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThreadFrame", file: !2294, line: 34, size: 256, align: 64, elements: !2296)
!2296 = !{!2297, !2298, !2300}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2295, file: !2294, line: 35, baseType: !1376, size: 64, align: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2295, file: !2294, line: 36, baseType: !2299, size: 128, align: 64, offset: 64)
!2299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1111, size: 128, align: 64, elements: !2258)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !2295, file: !2294, line: 39, baseType: !1247, size: 64, align: 64, offset: 192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "tab_mvf", scope: !2289, file: !888, line: 314, baseType: !2302, size: 64, align: 64, offset: 320)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64, align: 64)
!2303 = !DIDerivedType(tag: DW_TAG_typedef, name: "MvField", file: !888, line: 264, baseType: !2304)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MvField", file: !888, line: 260, size: 96, align: 32, elements: !2305)
!2305 = !{!2306, !2308, !2310}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !2304, file: !888, line: 261, baseType: !2307, size: 64, align: 16)
!2307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 64, align: 16, elements: !2258)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "ref_idx", scope: !2304, file: !888, line: 262, baseType: !2309, size: 16, align: 8, offset: 64)
!2309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1344, size: 16, align: 8, elements: !2258)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "pred_flag", scope: !2304, file: !888, line: 263, baseType: !1344, size: 8, align: 8, offset: 80)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "refPicList", scope: !2289, file: !888, line: 315, baseType: !2312, size: 64, align: 64, offset: 384)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64, align: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "rpl_tab", scope: !2289, file: !888, line: 316, baseType: !2314, size: 64, align: 64, offset: 448)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64, align: 64)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64, align: 64)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "RefPicListTab", file: !888, line: 240, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RefPicListTab", file: !888, line: 238, size: 4224, align: 64, elements: !2318)
!2318 = !{!2319}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "refPicList", scope: !2317, file: !888, line: 239, baseType: !2320, size: 4224, align: 64)
!2320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2283, size: 4224, align: 64, elements: !2258)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "ctb_count", scope: !2289, file: !888, line: 317, baseType: !1043, size: 32, align: 32, offset: 512)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "poc", scope: !2289, file: !888, line: 318, baseType: !1043, size: 32, align: 32, offset: 544)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "collocated_ref", scope: !2289, file: !888, line: 319, baseType: !2288, size: 64, align: 64, offset: 576)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "tab_mvf_buf", scope: !2289, file: !888, line: 321, baseType: !1247, size: 64, align: 64, offset: 640)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "rpl_tab_buf", scope: !2289, file: !888, line: 322, baseType: !1247, size: 64, align: 64, offset: 704)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "rpl_buf", scope: !2289, file: !888, line: 323, baseType: !1247, size: 64, align: 64, offset: 768)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_buf", scope: !2289, file: !888, line: 325, baseType: !1247, size: 64, align: 64, offset: 832)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_picture_private", scope: !2289, file: !888, line: 326, baseType: !1054, size: 64, align: 64, offset: 896)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !2289, file: !888, line: 332, baseType: !1200, size: 16, align: 16, offset: 960)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2289, file: !888, line: 337, baseType: !1050, size: 8, align: 8, offset: 976)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2284, file: !888, line: 233, baseType: !2332, size: 512, align: 32, offset: 1024)
!2332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 512, align: 32, elements: !1793)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "isLongTerm", scope: !2284, file: !888, line: 234, baseType: !2332, size: 512, align: 32, offset: 1536)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "nb_refs", scope: !2284, file: !888, line: 235, baseType: !1043, size: 32, align: 32, offset: 2048)
!2335 = !{!2336}
!2336 = !DISubrange(count: 5)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "sh", scope: !1064, file: !888, line: 418, baseType: !2338, size: 8960, align: 64, offset: 21376)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "SliceHeader", file: !1927, line: 123, baseType: !2339)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SliceHeader", file: !1927, line: 48, size: 8960, align: 64, elements: !2340)
!2340 = !{!2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2356, !2357, !2365, !2368, !2370, !2371, !2372, !2374, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2398, !2401, !2402, !2403, !2404, !2405, !2406, !2407}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "pps_id", scope: !2339, file: !1927, line: 49, baseType: !1044, size: 32, align: 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "slice_segment_addr", scope: !2339, file: !1927, line: 52, baseType: !1044, size: 32, align: 32, offset: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "slice_addr", scope: !2339, file: !1927, line: 54, baseType: !1044, size: 32, align: 32, offset: 64)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "slice_type", scope: !2339, file: !1927, line: 56, baseType: !903, size: 32, align: 32, offset: 96)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "pic_order_cnt_lsb", scope: !2339, file: !1927, line: 58, baseType: !1043, size: 32, align: 32, offset: 128)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "first_slice_in_pic_flag", scope: !2339, file: !1927, line: 60, baseType: !1050, size: 8, align: 8, offset: 160)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "dependent_slice_segment_flag", scope: !2339, file: !1927, line: 61, baseType: !1050, size: 8, align: 8, offset: 168)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "pic_output_flag", scope: !2339, file: !1927, line: 62, baseType: !1050, size: 8, align: 8, offset: 176)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "colour_plane_id", scope: !2339, file: !1927, line: 63, baseType: !1050, size: 8, align: 8, offset: 184)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "short_term_ref_pic_set_sps_flag", scope: !2339, file: !1927, line: 66, baseType: !1043, size: 32, align: 32, offset: 192)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "short_term_ref_pic_set_size", scope: !2339, file: !1927, line: 67, baseType: !1043, size: 32, align: 32, offset: 224)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "slice_rps", scope: !2339, file: !1927, line: 68, baseType: !2076, size: 1376, align: 32, offset: 256)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "short_term_rps", scope: !2339, file: !1927, line: 69, baseType: !2354, size: 64, align: 64, offset: 1664)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64, align: 64)
!2355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2076)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "long_term_ref_pic_set_size", scope: !2339, file: !1927, line: 70, baseType: !1043, size: 32, align: 32, offset: 1728)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "long_term_rps", scope: !2339, file: !1927, line: 71, baseType: !2358, size: 1312, align: 32, offset: 1760)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "LongTermRPS", file: !1927, line: 46, baseType: !2359)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LongTermRPS", file: !1927, line: 42, size: 1312, align: 32, elements: !2360)
!2360 = !{!2361, !2363, !2364}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "poc", scope: !2359, file: !1927, line: 43, baseType: !2362, size: 1024, align: 32)
!2362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 1024, align: 32, elements: !1959)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2359, file: !1927, line: 44, baseType: !1958, size: 256, align: 8, offset: 1024)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "nb_refs", scope: !2359, file: !1927, line: 45, baseType: !1050, size: 8, align: 8, offset: 1280)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "list_entry_lx", scope: !2339, file: !1927, line: 72, baseType: !2366, size: 2048, align: 32, offset: 3072)
!2366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1044, size: 2048, align: 32, elements: !2367)
!2367 = !{!2072, !1960}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "rpl_modification_flag", scope: !2339, file: !1927, line: 74, baseType: !2369, size: 16, align: 8, offset: 5120)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 16, align: 8, elements: !2258)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "no_output_of_prior_pics_flag", scope: !2339, file: !1927, line: 75, baseType: !1050, size: 8, align: 8, offset: 5136)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "slice_temporal_mvp_enabled_flag", scope: !2339, file: !1927, line: 76, baseType: !1050, size: 8, align: 8, offset: 5144)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "nb_refs", scope: !2339, file: !1927, line: 78, baseType: !2373, size: 64, align: 32, offset: 5152)
!2373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1044, size: 64, align: 32, elements: !2258)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "slice_sample_adaptive_offset_flag", scope: !2339, file: !1927, line: 80, baseType: !2375, size: 24, align: 8, offset: 5216)
!2375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 24, align: 8, elements: !1922)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "mvd_l1_zero_flag", scope: !2339, file: !1927, line: 81, baseType: !1050, size: 8, align: 8, offset: 5240)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "cabac_init_flag", scope: !2339, file: !1927, line: 83, baseType: !1050, size: 8, align: 8, offset: 5248)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "disable_deblocking_filter_flag", scope: !2339, file: !1927, line: 84, baseType: !1050, size: 8, align: 8, offset: 5256)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "slice_loop_filter_across_slices_enabled_flag", scope: !2339, file: !1927, line: 85, baseType: !1050, size: 8, align: 8, offset: 5264)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "collocated_list", scope: !2339, file: !1927, line: 86, baseType: !1050, size: 8, align: 8, offset: 5272)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "collocated_ref_idx", scope: !2339, file: !1927, line: 88, baseType: !1044, size: 32, align: 32, offset: 5280)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "slice_qp_delta", scope: !2339, file: !1927, line: 90, baseType: !1043, size: 32, align: 32, offset: 5312)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "slice_cb_qp_offset", scope: !2339, file: !1927, line: 91, baseType: !1043, size: 32, align: 32, offset: 5344)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "slice_cr_qp_offset", scope: !2339, file: !1927, line: 92, baseType: !1043, size: 32, align: 32, offset: 5376)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "cu_chroma_qp_offset_enabled_flag", scope: !2339, file: !1927, line: 94, baseType: !1050, size: 8, align: 8, offset: 5408)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "beta_offset", scope: !2339, file: !1927, line: 96, baseType: !1043, size: 32, align: 32, offset: 5440)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "tc_offset", scope: !2339, file: !1927, line: 97, baseType: !1043, size: 32, align: 32, offset: 5472)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_merge_cand", scope: !2339, file: !1927, line: 99, baseType: !1044, size: 32, align: 32, offset: 5504)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "entry_point_offset", scope: !2339, file: !1927, line: 101, baseType: !2194, size: 64, align: 64, offset: 5568)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2339, file: !1927, line: 102, baseType: !1358, size: 64, align: 64, offset: 5632)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2339, file: !1927, line: 103, baseType: !1358, size: 64, align: 64, offset: 5696)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "num_entry_point_offsets", scope: !2339, file: !1927, line: 104, baseType: !1043, size: 32, align: 32, offset: 5760)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "slice_qp", scope: !2339, file: !1927, line: 106, baseType: !1344, size: 8, align: 8, offset: 5792)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "luma_log2_weight_denom", scope: !2339, file: !1927, line: 108, baseType: !1050, size: 8, align: 8, offset: 5800)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_log2_weight_denom", scope: !2339, file: !1927, line: 109, baseType: !1046, size: 16, align: 16, offset: 5808)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "luma_weight_l0", scope: !2339, file: !1927, line: 111, baseType: !2397, size: 256, align: 16, offset: 5824)
!2397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1046, size: 256, align: 16, elements: !1793)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_weight_l0", scope: !2339, file: !1927, line: 112, baseType: !2399, size: 512, align: 16, offset: 6080)
!2399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1046, size: 512, align: 16, elements: !2400)
!2400 = !{!1794, !2072}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_weight_l1", scope: !2339, file: !1927, line: 113, baseType: !2399, size: 512, align: 16, offset: 6592)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "luma_weight_l1", scope: !2339, file: !1927, line: 114, baseType: !2397, size: 256, align: 16, offset: 7104)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "luma_offset_l0", scope: !2339, file: !1927, line: 116, baseType: !2397, size: 256, align: 16, offset: 7360)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_offset_l0", scope: !2339, file: !1927, line: 117, baseType: !2399, size: 512, align: 16, offset: 7616)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "luma_offset_l1", scope: !2339, file: !1927, line: 119, baseType: !2397, size: 256, align: 16, offset: 8128)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_offset_l1", scope: !2339, file: !1927, line: 120, baseType: !2399, size: 512, align: 16, offset: 8384)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ctb_addr_rs", scope: !2339, file: !1927, line: 122, baseType: !1043, size: 32, align: 32, offset: 8896)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "sao", scope: !1064, file: !888, line: 419, baseType: !2409, size: 64, align: 64, offset: 30336)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64, align: 64)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "SAOParams", file: !2411, line: 43, baseType: !2412)
!2411 = !DIFile(filename: "libavcodec/hevcdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SAOParams", file: !2411, line: 32, size: 1184, align: 32, elements: !2413)
!2413 = !{!2414, !2417, !2418, !2419, !2420, !2423}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "offset_abs", scope: !2412, file: !2411, line: 33, baseType: !2415, size: 384, align: 32)
!2415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1043, size: 384, align: 32, elements: !2416)
!2416 = !{!1923, !1229}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "offset_sign", scope: !2412, file: !2411, line: 34, baseType: !2415, size: 384, align: 32, offset: 384)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "band_position", scope: !2412, file: !2411, line: 36, baseType: !2375, size: 24, align: 8, offset: 768)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "eo_class", scope: !2412, file: !2411, line: 38, baseType: !2134, size: 96, align: 32, offset: 800)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "offset_val", scope: !2412, file: !2411, line: 40, baseType: !2421, size: 240, align: 16, offset: 896)
!2421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1046, size: 240, align: 16, elements: !2422)
!2422 = !{!1923, !2336}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "type_idx", scope: !2412, file: !2411, line: 42, baseType: !2375, size: 24, align: 8, offset: 1136)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "deblock", scope: !1064, file: !888, line: 420, baseType: !2425, size: 64, align: 64, offset: 30400)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64, align: 64)
!2426 = !DIDerivedType(tag: DW_TAG_typedef, name: "DBParams", file: !888, line: 304, baseType: !2427)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DBParams", file: !888, line: 301, size: 64, align: 32, elements: !2428)
!2428 = !{!2429, !2430}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "beta_offset", scope: !2427, file: !888, line: 302, baseType: !1043, size: 32, align: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "tc_offset", scope: !2427, file: !888, line: 303, baseType: !1043, size: 32, align: 32, offset: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "nal_unit_type", scope: !1064, file: !888, line: 421, baseType: !909, size: 32, align: 32, offset: 30464)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_id", scope: !1064, file: !888, line: 422, baseType: !1043, size: 32, align: 32, offset: 30496)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1064, file: !888, line: 423, baseType: !2434, size: 64, align: 64, offset: 30528)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64, align: 64)
!2435 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCFrame", file: !888, line: 338, baseType: !2289)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "DPB", scope: !1064, file: !888, line: 424, baseType: !2437, size: 32768, align: 64, offset: 30592)
!2437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2435, size: 32768, align: 64, elements: !1959)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "poc", scope: !1064, file: !888, line: 425, baseType: !1043, size: 32, align: 32, offset: 63360)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "pocTid0", scope: !1064, file: !888, line: 426, baseType: !1043, size: 32, align: 32, offset: 63392)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "slice_idx", scope: !1064, file: !888, line: 427, baseType: !1043, size: 32, align: 32, offset: 63424)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "eos", scope: !1064, file: !888, line: 428, baseType: !1043, size: 32, align: 32, offset: 63456)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "last_eos", scope: !1064, file: !888, line: 429, baseType: !1043, size: 32, align: 32, offset: 63488)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "max_ra", scope: !1064, file: !888, line: 430, baseType: !1043, size: 32, align: 32, offset: 63520)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "bs_width", scope: !1064, file: !888, line: 431, baseType: !1043, size: 32, align: 32, offset: 63552)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "bs_height", scope: !1064, file: !888, line: 432, baseType: !1043, size: 32, align: 32, offset: 63584)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !1064, file: !888, line: 433, baseType: !1043, size: 32, align: 32, offset: 63616)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "is_decoded", scope: !1064, file: !888, line: 435, baseType: !1043, size: 32, align: 32, offset: 63648)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "no_rasl_output_flag", scope: !1064, file: !888, line: 436, baseType: !1043, size: 32, align: 32, offset: 63680)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "hpc", scope: !1064, file: !888, line: 438, baseType: !2450, size: 832, align: 64, offset: 63744)
!2450 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCPredContext", file: !2451, line: 41, baseType: !2452)
!2451 = !DIFile(filename: "libavcodec/hevcpred.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCPredContext", file: !2451, line: 31, size: 832, align: 64, elements: !2453)
!2453 = !{!2454, !2459, !2465, !2469}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "intra_pred", scope: !2452, file: !2451, line: 32, baseType: !2455, size: 256, align: 64)
!2455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2456, size: 256, align: 64, elements: !1228)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64, align: 64)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{null, !1792, !1043, !1043, !1043}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "pred_planar", scope: !2452, file: !2451, line: 34, baseType: !2460, size: 256, align: 64, offset: 256)
!2460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2461, size: 256, align: 64, elements: !1228)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64, align: 64)
!2462 = !DISubroutineType(types: !2463)
!2463 = !{null, !1049, !1183, !1183, !2464}
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1353, line: 149, baseType: !1053)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "pred_dc", scope: !2452, file: !2451, line: 36, baseType: !2466, size: 64, align: 64, offset: 512)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64, align: 64)
!2467 = !DISubroutineType(types: !2468)
!2468 = !{null, !1049, !1183, !1183, !2464, !1043, !1043}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "pred_angular", scope: !2452, file: !2451, line: 38, baseType: !2470, size: 256, align: 64, offset: 576)
!2470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2466, size: 256, align: 64, elements: !1228)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "hevcdsp", scope: !1064, file: !888, line: 439, baseType: !2472, size: 27904, align: 64, offset: 64576)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEVCDSPContext", file: !2411, line: 123, baseType: !2473)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HEVCDSPContext", file: !2411, line: 45, size: 27904, align: 64, elements: !2474)
!2474 = !{!2475, !2480, !2485, !2489, !2493, !2497, !2502, !2504, !2509, !2514, !2520, !2528, !2533, !2538, !2543, !2548, !2549, !2550, !2551, !2552, !2553, !2558, !2559, !2563, !2564, !2565, !2566, !2567}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "put_pcm", scope: !2473, file: !2411, line: 46, baseType: !2476, size: 64, align: 64)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64, align: 64)
!2477 = !DISubroutineType(types: !2478)
!2478 = !{null, !1049, !2464, !1043, !1043, !2479, !1043}
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64, align: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "add_residual", scope: !2473, file: !2411, line: 49, baseType: !2481, size: 256, align: 64, offset: 64)
!2481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2482, size: 256, align: 64, elements: !1228)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64, align: 64)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{null, !1049, !1045, !2464}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "dequant", scope: !2473, file: !2411, line: 51, baseType: !2486, size: 64, align: 64, offset: 320)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 64, align: 64)
!2487 = !DISubroutineType(types: !2488)
!2488 = !{null, !1045, !1046}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "transform_rdpcm", scope: !2473, file: !2411, line: 53, baseType: !2490, size: 64, align: 64, offset: 384)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64, align: 64)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{null, !1045, !1046, !1043}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "transform_4x4_luma", scope: !2473, file: !2411, line: 55, baseType: !2494, size: 64, align: 64, offset: 448)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64, align: 64)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{null, !1045}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "idct", scope: !2473, file: !2411, line: 57, baseType: !2498, size: 256, align: 64, offset: 512)
!2498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2499, size: 256, align: 64, elements: !1228)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64, align: 64)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{null, !1045, !1043}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "idct_dc", scope: !2473, file: !2411, line: 59, baseType: !2503, size: 256, align: 64, offset: 768)
!2503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2494, size: 256, align: 64, elements: !1228)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "sao_band_filter", scope: !2473, file: !2411, line: 61, baseType: !2505, size: 320, align: 64, offset: 1024)
!2505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2506, size: 320, align: 64, elements: !2335)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 64, align: 64)
!2507 = !DISubroutineType(types: !2508)
!2508 = !{null, !1049, !1049, !2464, !2464, !1045, !1043, !1043, !1043}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "sao_edge_filter", scope: !2473, file: !2411, line: 65, baseType: !2510, size: 320, align: 64, offset: 1344)
!2510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2511, size: 320, align: 64, elements: !2335)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64, align: 64)
!2512 = !DISubroutineType(types: !2513)
!2513 = !{null, !1049, !1049, !2464, !1045, !1043, !1043, !1043}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "sao_edge_restore", scope: !2473, file: !2411, line: 68, baseType: !2515, size: 128, align: 64, offset: 1664)
!2515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2516, size: 128, align: 64, elements: !2258)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64, align: 64)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{null, !1049, !1049, !2464, !2464, !2519, !1358, !1043, !1043, !1043, !1049, !1049, !1049}
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 64, align: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "put_hevc_qpel", scope: !2473, file: !2411, line: 72, baseType: !2521, size: 2560, align: 64, offset: 1792)
!2521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2522, size: 2560, align: 64, elements: !2526)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64, align: 64)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{null, !1045, !1049, !2464, !1043, !2525, !2525, !1043}
!2525 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !1047, line: 119, baseType: !1053)
!2526 = !{!2527, !2072, !2072}
!2527 = !DISubrange(count: 10)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "put_hevc_qpel_uni", scope: !2473, file: !2411, line: 74, baseType: !2529, size: 2560, align: 64, offset: 4352)
!2529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2530, size: 2560, align: 64, elements: !2526)
!2530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 64, align: 64)
!2531 = !DISubroutineType(types: !2532)
!2532 = !{null, !1049, !2464, !1049, !2464, !1043, !2525, !2525, !1043}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "put_hevc_qpel_uni_w", scope: !2473, file: !2411, line: 76, baseType: !2534, size: 2560, align: 64, offset: 6912)
!2534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2535, size: 2560, align: 64, elements: !2526)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64, align: 64)
!2536 = !DISubroutineType(types: !2537)
!2537 = !{null, !1049, !2464, !1049, !2464, !1043, !1043, !1043, !1043, !2525, !2525, !1043}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "put_hevc_qpel_bi", scope: !2473, file: !2411, line: 79, baseType: !2539, size: 2560, align: 64, offset: 9472)
!2539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2540, size: 2560, align: 64, elements: !2526)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64, align: 64)
!2541 = !DISubroutineType(types: !2542)
!2542 = !{null, !1049, !2464, !1049, !2464, !1045, !1043, !2525, !2525, !1043}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "put_hevc_qpel_bi_w", scope: !2473, file: !2411, line: 82, baseType: !2544, size: 2560, align: 64, offset: 12032)
!2544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2545, size: 2560, align: 64, elements: !2526)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 64, align: 64)
!2546 = !DISubroutineType(types: !2547)
!2547 = !{null, !1049, !2464, !1049, !2464, !1045, !1043, !1043, !1043, !1043, !1043, !1043, !2525, !2525, !1043}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "put_hevc_epel", scope: !2473, file: !2411, line: 86, baseType: !2521, size: 2560, align: 64, offset: 14592)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "put_hevc_epel_uni", scope: !2473, file: !2411, line: 89, baseType: !2529, size: 2560, align: 64, offset: 17152)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "put_hevc_epel_uni_w", scope: !2473, file: !2411, line: 91, baseType: !2534, size: 2560, align: 64, offset: 19712)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "put_hevc_epel_bi", scope: !2473, file: !2411, line: 93, baseType: !2539, size: 2560, align: 64, offset: 22272)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "put_hevc_epel_bi_w", scope: !2473, file: !2411, line: 96, baseType: !2544, size: 2560, align: 64, offset: 24832)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "hevc_h_loop_filter_luma", scope: !2473, file: !2411, line: 101, baseType: !2554, size: 64, align: 64, offset: 27392)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64, align: 64)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{null, !1049, !2464, !1043, !2557, !1049, !1049}
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64, align: 64)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "hevc_v_loop_filter_luma", scope: !2473, file: !2411, line: 104, baseType: !2554, size: 64, align: 64, offset: 27456)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "hevc_h_loop_filter_chroma", scope: !2473, file: !2411, line: 107, baseType: !2560, size: 64, align: 64, offset: 27520)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64, align: 64)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{null, !1049, !2464, !2557, !1049, !1049}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "hevc_v_loop_filter_chroma", scope: !2473, file: !2411, line: 109, baseType: !2560, size: 64, align: 64, offset: 27584)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "hevc_h_loop_filter_luma_c", scope: !2473, file: !2411, line: 111, baseType: !2554, size: 64, align: 64, offset: 27648)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "hevc_v_loop_filter_luma_c", scope: !2473, file: !2411, line: 114, baseType: !2554, size: 64, align: 64, offset: 27712)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "hevc_h_loop_filter_chroma_c", scope: !2473, file: !2411, line: 117, baseType: !2560, size: 64, align: 64, offset: 27776)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "hevc_v_loop_filter_chroma_c", scope: !2473, file: !2411, line: 120, baseType: !2560, size: 64, align: 64, offset: 27840)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "vdsp", scope: !1064, file: !888, line: 440, baseType: !2569, size: 128, align: 64, offset: 92480)
!2569 = !DIDerivedType(tag: DW_TAG_typedef, name: "VideoDSPContext", file: !2570, line: 77, baseType: !2571)
!2570 = !DIFile(filename: "libavcodec/videodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VideoDSPContext", file: !2570, line: 41, size: 128, align: 64, elements: !2572)
!2572 = !{!2573, !2577}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "emulated_edge_mc", scope: !2571, file: !2570, line: 63, baseType: !2574, size: 64, align: 64)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64, align: 64)
!2575 = !DISubroutineType(types: !2576)
!2576 = !{null, !1049, !1183, !2464, !2464, !1043, !1043, !1043, !1043, !1043, !1043}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "prefetch", scope: !2571, file: !2570, line: 76, baseType: !2578, size: 64, align: 64, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64, align: 64)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{null, !1049, !2464, !1043}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !1064, file: !888, line: 441, baseType: !2582, size: 128, align: 64, offset: 92608)
!2582 = !DIDerivedType(tag: DW_TAG_typedef, name: "BswapDSPContext", file: !2583, line: 27, baseType: !2584)
!2583 = !DIFile(filename: "libavcodec/bswapdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BswapDSPContext", file: !2583, line: 24, size: 128, align: 64, elements: !2585)
!2585 = !{!2586, !2593}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "bswap_buf", scope: !2584, file: !2583, line: 25, baseType: !2587, size: 64, align: 64)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 64, align: 64)
!2588 = !DISubroutineType(types: !2589)
!2589 = !{null, !2590, !2591, !1043}
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64, align: 64)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64, align: 64)
!2592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1055)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "bswap16_buf", scope: !2584, file: !2583, line: 26, baseType: !2594, size: 64, align: 64, offset: 64)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64, align: 64)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{null, !1580, !2597, !1043}
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64, align: 64)
!2598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1200)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "qp_y_tab", scope: !1064, file: !888, line: 442, baseType: !1343, size: 64, align: 64, offset: 92736)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "horizontal_bs", scope: !1064, file: !888, line: 443, baseType: !1049, size: 64, align: 64, offset: 92800)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "vertical_bs", scope: !1064, file: !888, line: 444, baseType: !1049, size: 64, align: 64, offset: 92864)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "tab_slice_address", scope: !1064, file: !888, line: 446, baseType: !2557, size: 64, align: 64, offset: 92928)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "skip_flag", scope: !1064, file: !888, line: 449, baseType: !1049, size: 64, align: 64, offset: 92992)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "tab_ct_depth", scope: !1064, file: !888, line: 450, baseType: !1049, size: 64, align: 64, offset: 93056)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "tab_ipm", scope: !1064, file: !888, line: 452, baseType: !1049, size: 64, align: 64, offset: 93120)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "cbf_luma", scope: !1064, file: !888, line: 454, baseType: !1049, size: 64, align: 64, offset: 93184)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "is_pcm", scope: !1064, file: !888, line: 455, baseType: !1049, size: 64, align: 64, offset: 93248)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "filter_slice_edges", scope: !1064, file: !888, line: 458, baseType: !1049, size: 64, align: 64, offset: 93312)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_buf", scope: !1064, file: !888, line: 461, baseType: !1049, size: 64, align: 64, offset: 93376)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_buf_size", scope: !1064, file: !888, line: 462, baseType: !1043, size: 32, align: 32, offset: 93440)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "seq_decode", scope: !1064, file: !888, line: 468, baseType: !1200, size: 16, align: 16, offset: 93472)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "seq_output", scope: !1064, file: !888, line: 469, baseType: !1200, size: 16, align: 16, offset: 93488)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "enable_parallel_tiles", scope: !1064, file: !888, line: 471, baseType: !1043, size: 32, align: 32, offset: 93504)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "wpp_err", scope: !1064, file: !888, line: 472, baseType: !2615, size: 32, align: 32, offset: 93536)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_int", file: !2616, line: 46, baseType: !1043)
!2616 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stdatomic.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1064, file: !888, line: 474, baseType: !1183, size: 64, align: 64, offset: 93568)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !1064, file: !888, line: 476, baseType: !2619, size: 320, align: 64, offset: 93632)
!2619 = !DIDerivedType(tag: DW_TAG_typedef, name: "H2645Packet", file: !2620, line: 81, baseType: !2621)
!2620 = !DIFile(filename: "libavcodec/h2645_parse.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "H2645Packet", file: !2620, line: 76, size: 320, align: 64, elements: !2622)
!2622 = !{!2623, !2641, !2649, !2650}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "nals", scope: !2621, file: !2620, line: 77, baseType: !2624, size: 64, align: 64)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 64, align: 64)
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "H2645NAL", file: !2620, line: 66, baseType: !2626)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "H2645NAL", file: !2620, line: 32, size: 832, align: 64, elements: !2627)
!2627 = !{!2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "rbsp_buffer", scope: !2626, file: !2620, line: 33, baseType: !1049, size: 64, align: 64)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2626, file: !2620, line: 35, baseType: !1043, size: 32, align: 32, offset: 64)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2626, file: !2620, line: 36, baseType: !1183, size: 64, align: 64, offset: 128)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "size_bits", scope: !2626, file: !2620, line: 42, baseType: !1043, size: 32, align: 32, offset: 192)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "raw_size", scope: !2626, file: !2620, line: 44, baseType: !1043, size: 32, align: 32, offset: 224)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "raw_data", scope: !2626, file: !2620, line: 45, baseType: !1183, size: 64, align: 64, offset: 256)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !2626, file: !2620, line: 47, baseType: !1809, size: 256, align: 64, offset: 320)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2626, file: !2620, line: 52, baseType: !1043, size: 32, align: 32, offset: 576)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_id", scope: !2626, file: !2620, line: 57, baseType: !1043, size: 32, align: 32, offset: 608)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "skipped_bytes", scope: !2626, file: !2620, line: 59, baseType: !1043, size: 32, align: 32, offset: 640)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "skipped_bytes_pos_size", scope: !2626, file: !2620, line: 60, baseType: !1043, size: 32, align: 32, offset: 672)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "skipped_bytes_pos", scope: !2626, file: !2620, line: 61, baseType: !1358, size: 64, align: 64, offset: 704)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "ref_idc", scope: !2626, file: !2620, line: 65, baseType: !1043, size: 32, align: 32, offset: 768)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "rbsp", scope: !2621, file: !2620, line: 78, baseType: !2642, size: 192, align: 64, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "H2645RBSP", file: !2620, line: 73, baseType: !2643)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "H2645RBSP", file: !2620, line: 68, size: 192, align: 64, elements: !2644)
!2644 = !{!2645, !2646, !2647, !2648}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "rbsp_buffer", scope: !2643, file: !2620, line: 69, baseType: !1049, size: 64, align: 64)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "rbsp_buffer_ref", scope: !2643, file: !2620, line: 70, baseType: !1247, size: 64, align: 64, offset: 64)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "rbsp_buffer_alloc_size", scope: !2643, file: !2620, line: 71, baseType: !1043, size: 32, align: 32, offset: 128)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "rbsp_buffer_size", scope: !2643, file: !2620, line: 72, baseType: !1043, size: 32, align: 32, offset: 160)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "nb_nals", scope: !2621, file: !2620, line: 79, baseType: !1043, size: 32, align: 32, offset: 256)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "nals_allocated", scope: !2621, file: !2620, line: 80, baseType: !1043, size: 32, align: 32, offset: 288)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "first_nal_type", scope: !1064, file: !888, line: 478, baseType: !909, size: 32, align: 32, offset: 93952)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "context_initialized", scope: !1064, file: !888, line: 480, baseType: !1050, size: 8, align: 8, offset: 93984)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "is_nalff", scope: !1064, file: !888, line: 481, baseType: !1043, size: 32, align: 32, offset: 94016)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "apply_defdispwin", scope: !1064, file: !888, line: 483, baseType: !1043, size: 32, align: 32, offset: 94048)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "nal_length_size", scope: !1064, file: !888, line: 485, baseType: !1043, size: 32, align: 32, offset: 94080)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "nuh_layer_id", scope: !1064, file: !888, line: 486, baseType: !1043, size: 32, align: 32, offset: 94112)
!2657 = !{}
!2658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1184, size: 48, align: 8, elements: !2189)
!2659 = distinct !DIGlobalVariable(name: "qp_c", scope: !1058, file: !1059, line: 1070, type: !2660, isLocal: true, isDefinition: true, variable: [14 x i32]* @ff_hevc_hls_residual_coding.qp_c)
!2660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1142, size: 448, align: 32, elements: !2661)
!2661 = !{!2662}
!2662 = !DISubrange(count: 14)
!2663 = distinct !DIGlobalVariable(name: "rem6", scope: !1058, file: !1059, line: 1071, type: !2664, isLocal: true, isDefinition: true, variable: [76 x i8]* @ff_hevc_hls_residual_coding.rem6)
!2664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1184, size: 608, align: 8, elements: !2665)
!2665 = !{!2666}
!2666 = !DISubrange(count: 76)
!2667 = distinct !DIGlobalVariable(name: "div6", scope: !1058, file: !1059, line: 1078, type: !2664, isLocal: true, isDefinition: true, variable: [76 x i8]* @ff_hevc_hls_residual_coding.div6)
!2668 = distinct !DIGlobalVariable(name: "ctx_idx_map", scope: !1058, file: !1059, line: 1267, type: !2669, isLocal: true, isDefinition: true, variable: [80 x i8]* @ff_hevc_hls_residual_coding.ctx_idx_map)
!2669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1184, size: 640, align: 8, elements: !2670)
!2670 = !{!2671}
!2671 = !DISubrange(count: 80)
!2672 = distinct !DIGlobalVariable(name: "init_values", scope: !0, file: !1059, line: 148, type: !2673, isLocal: true, isDefinition: true, variable: [3 x [199 x i8]]* @init_values)
!2673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1184, size: 4776, align: 8, elements: !2674)
!2674 = !{!1923, !1804}
!2675 = distinct !DIGlobalVariable(name: "elem_offset", scope: !0, file: !1059, line: 92, type: !2676, isLocal: true, isDefinition: true, variable: [49 x i32]* @elem_offset)
!2676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1142, size: 1568, align: 32, elements: !2677)
!2677 = !{!2678}
!2678 = !DISubrange(count: 49)
!2679 = distinct !DIGlobalVariable(name: "diag_scan4x4_inv", scope: !0, file: !1059, line: 432, type: !2680, isLocal: true, isDefinition: true, variable: [4 x [4 x i8]]* @diag_scan4x4_inv)
!2680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1184, size: 128, align: 8, elements: !2681)
!2681 = !{!1229, !1229}
!2682 = distinct !DIGlobalVariable(name: "scan_1x1", scope: !0, file: !1059, line: 382, type: !2683, isLocal: true, isDefinition: true, variable: [1 x i8]* @scan_1x1)
!2683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1184, size: 8, align: 8, elements: !2684)
!2684 = !{!2685}
!2685 = !DISubrange(count: 1)
!2686 = distinct !DIGlobalVariable(name: "diag_scan2x2_inv", scope: !0, file: !1059, line: 427, type: !2687, isLocal: true, isDefinition: true, variable: [2 x [2 x i8]]* @diag_scan2x2_inv)
!2687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1184, size: 32, align: 8, elements: !2688)
!2688 = !{!2072, !2072}
!2689 = distinct !DIGlobalVariable(name: "diag_scan2x2_x", scope: !0, file: !1059, line: 419, type: !2690, isLocal: true, isDefinition: true, variable: [4 x i8]* @diag_scan2x2_x)
!2690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1184, size: 32, align: 8, elements: !1228)
!2691 = distinct !DIGlobalVariable(name: "diag_scan2x2_y", scope: !0, file: !1059, line: 423, type: !2690, isLocal: true, isDefinition: true, variable: [4 x i8]* @diag_scan2x2_y)
!2692 = distinct !DIGlobalVariable(name: "diag_scan8x8_inv", scope: !0, file: !1059, line: 439, type: !2693, isLocal: true, isDefinition: true, variable: [8 x [8 x i8]]* @diag_scan8x8_inv)
!2693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1184, size: 512, align: 8, elements: !2694)
!2694 = !{!1223, !1223}
!2695 = distinct !DIGlobalVariable(name: "horiz_scan2x2_x", scope: !0, file: !1059, line: 386, type: !2690, isLocal: true, isDefinition: true, variable: [4 x i8]* @horiz_scan2x2_x)
!2696 = distinct !DIGlobalVariable(name: "horiz_scan2x2_y", scope: !0, file: !1059, line: 390, type: !2690, isLocal: true, isDefinition: true, variable: [4 x i8]* @horiz_scan2x2_y)
!2697 = distinct !DIGlobalVariable(name: "horiz_scan4x4_x", scope: !0, file: !1059, line: 394, type: !2698, isLocal: true, isDefinition: true, variable: [16 x i8]* @horiz_scan4x4_x)
!2698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1184, size: 128, align: 8, elements: !1793)
!2699 = distinct !DIGlobalVariable(name: "horiz_scan4x4_y", scope: !0, file: !1059, line: 401, type: !2698, isLocal: true, isDefinition: true, variable: [16 x i8]* @horiz_scan4x4_y)
!2700 = distinct !DIGlobalVariable(name: "horiz_scan8x8_inv", scope: !0, file: !1059, line: 408, type: !2693, isLocal: true, isDefinition: true, variable: [8 x [8 x i8]]* @horiz_scan8x8_inv)
!2701 = !{i32 2, !"Dwarf Version", i32 4}
!2702 = !{i32 2, !"Debug Info Version", i32 3}
!2703 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2704 = distinct !DISubprogram(name: "ff_hevc_save_states", scope: !1059, file: !1059, line: 450, type: !2705, isLocal: false, isDefinition: true, scopeLine: 451, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!2705 = !DISubroutineType(types: !2706)
!2706 = !{null, !1062, !1043}
!2707 = !DILocalVariable(name: "s", arg: 1, scope: !2704, file: !1059, line: 450, type: !1062)
!2708 = !DIExpression()
!2709 = !DILocation(line: 450, column: 39, scope: !2704)
!2710 = !DILocalVariable(name: "ctb_addr_ts", arg: 2, scope: !2704, file: !1059, line: 450, type: !1043)
!2711 = !DILocation(line: 450, column: 46, scope: !2704)
!2712 = !DILocation(line: 452, column: 9, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2704, file: !1059, line: 452, column: 9)
!2714 = !DILocation(line: 452, column: 12, scope: !2713)
!2715 = !DILocation(line: 452, column: 15, scope: !2713)
!2716 = !DILocation(line: 452, column: 20, scope: !2713)
!2717 = !DILocation(line: 452, column: 53, scope: !2713)
!2718 = !DILocation(line: 453, column: 10, scope: !2713)
!2719 = !DILocation(line: 453, column: 24, scope: !2713)
!2720 = !DILocation(line: 453, column: 27, scope: !2713)
!2721 = !DILocation(line: 453, column: 30, scope: !2713)
!2722 = !DILocation(line: 453, column: 35, scope: !2713)
!2723 = !DILocation(line: 453, column: 22, scope: !2713)
!2724 = !DILocation(line: 453, column: 45, scope: !2713)
!2725 = !DILocation(line: 453, column: 50, scope: !2713)
!2726 = !DILocation(line: 454, column: 11, scope: !2713)
!2727 = !DILocation(line: 454, column: 14, scope: !2713)
!2728 = !DILocation(line: 454, column: 17, scope: !2713)
!2729 = !DILocation(line: 454, column: 22, scope: !2713)
!2730 = !DILocation(line: 454, column: 32, scope: !2713)
!2731 = !DILocation(line: 454, column: 37, scope: !2713)
!2732 = !DILocation(line: 455, column: 11, scope: !2713)
!2733 = !DILocation(line: 455, column: 25, scope: !2713)
!2734 = !DILocation(line: 455, column: 28, scope: !2713)
!2735 = !DILocation(line: 455, column: 31, scope: !2713)
!2736 = !DILocation(line: 455, column: 36, scope: !2713)
!2737 = !DILocation(line: 455, column: 23, scope: !2713)
!2738 = !DILocation(line: 455, column: 46, scope: !2713)
!2739 = !DILocation(line: 452, column: 9, scope: !2740)
!2740 = !DILexicalBlockFile(scope: !2704, file: !1059, discriminator: 1)
!2741 = !DILocation(line: 456, column: 16, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2713, file: !1059, line: 455, column: 54)
!2743 = !DILocation(line: 456, column: 19, scope: !2742)
!2744 = !DILocation(line: 456, column: 32, scope: !2742)
!2745 = !DILocation(line: 456, column: 35, scope: !2742)
!2746 = !DILocation(line: 456, column: 43, scope: !2742)
!2747 = !DILocation(line: 456, column: 9, scope: !2742)
!2748 = !DILocation(line: 457, column: 5, scope: !2742)
!2749 = !DILocation(line: 458, column: 1, scope: !2704)
!2750 = distinct !DISubprogram(name: "ff_hevc_cabac_init", scope: !1059, file: !1059, line: 504, type: !2751, isLocal: false, isDefinition: true, scopeLine: 505, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{!1043, !1062, !1043}
!2753 = !DILocalVariable(name: "s", arg: 1, scope: !2750, file: !1059, line: 504, type: !1062)
!2754 = !DILocation(line: 504, column: 37, scope: !2750)
!2755 = !DILocalVariable(name: "ctb_addr_ts", arg: 2, scope: !2750, file: !1059, line: 504, type: !1043)
!2756 = !DILocation(line: 504, column: 44, scope: !2750)
!2757 = !DILocation(line: 506, column: 9, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2750, file: !1059, line: 506, column: 9)
!2759 = !DILocation(line: 506, column: 53, scope: !2758)
!2760 = !DILocation(line: 506, column: 56, scope: !2758)
!2761 = !DILocation(line: 506, column: 59, scope: !2758)
!2762 = !DILocation(line: 506, column: 24, scope: !2758)
!2763 = !DILocation(line: 506, column: 27, scope: !2758)
!2764 = !DILocation(line: 506, column: 30, scope: !2758)
!2765 = !DILocation(line: 506, column: 35, scope: !2758)
!2766 = !DILocation(line: 506, column: 21, scope: !2758)
!2767 = !DILocation(line: 506, column: 9, scope: !2750)
!2768 = !DILocalVariable(name: "ret", scope: !2769, file: !1059, line: 507, type: !1043)
!2769 = distinct !DILexicalBlock(scope: !2758, file: !1059, line: 506, column: 79)
!2770 = !DILocation(line: 507, column: 13, scope: !2769)
!2771 = !DILocation(line: 507, column: 38, scope: !2769)
!2772 = !DILocation(line: 507, column: 19, scope: !2769)
!2773 = !DILocation(line: 508, column: 13, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2769, file: !1059, line: 508, column: 13)
!2775 = !DILocation(line: 508, column: 17, scope: !2774)
!2776 = !DILocation(line: 508, column: 13, scope: !2769)
!2777 = !DILocation(line: 509, column: 20, scope: !2774)
!2778 = !DILocation(line: 509, column: 13, scope: !2774)
!2779 = !DILocation(line: 510, column: 13, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2769, file: !1059, line: 510, column: 13)
!2781 = !DILocation(line: 510, column: 16, scope: !2780)
!2782 = !DILocation(line: 510, column: 19, scope: !2780)
!2783 = !DILocation(line: 510, column: 48, scope: !2780)
!2784 = !DILocation(line: 510, column: 53, scope: !2780)
!2785 = !DILocation(line: 511, column: 14, scope: !2780)
!2786 = !DILocation(line: 511, column: 17, scope: !2780)
!2787 = !DILocation(line: 511, column: 20, scope: !2780)
!2788 = !DILocation(line: 511, column: 25, scope: !2780)
!2789 = !DILocation(line: 511, column: 44, scope: !2780)
!2790 = !DILocation(line: 512, column: 33, scope: !2780)
!2791 = !DILocation(line: 512, column: 14, scope: !2780)
!2792 = !DILocation(line: 512, column: 17, scope: !2780)
!2793 = !DILocation(line: 512, column: 20, scope: !2780)
!2794 = !DILocation(line: 512, column: 25, scope: !2780)
!2795 = !DILocation(line: 512, column: 68, scope: !2780)
!2796 = !DILocation(line: 512, column: 80, scope: !2780)
!2797 = !DILocation(line: 512, column: 49, scope: !2780)
!2798 = !DILocation(line: 512, column: 52, scope: !2780)
!2799 = !DILocation(line: 512, column: 55, scope: !2780)
!2800 = !DILocation(line: 512, column: 60, scope: !2780)
!2801 = !DILocation(line: 512, column: 46, scope: !2780)
!2802 = !DILocation(line: 510, column: 13, scope: !2803)
!2803 = !DILexicalBlockFile(scope: !2769, file: !1059, discriminator: 1)
!2804 = !DILocation(line: 513, column: 30, scope: !2780)
!2805 = !DILocation(line: 513, column: 13, scope: !2780)
!2806 = !DILocation(line: 515, column: 14, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2769, file: !1059, line: 515, column: 13)
!2808 = !DILocation(line: 515, column: 17, scope: !2807)
!2809 = !DILocation(line: 515, column: 20, scope: !2807)
!2810 = !DILocation(line: 515, column: 44, scope: !2807)
!2811 = !DILocation(line: 516, column: 13, scope: !2807)
!2812 = !DILocation(line: 516, column: 16, scope: !2807)
!2813 = !DILocation(line: 516, column: 19, scope: !2807)
!2814 = !DILocation(line: 516, column: 24, scope: !2807)
!2815 = !DILocation(line: 515, column: 13, scope: !2803)
!2816 = !DILocation(line: 517, column: 17, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2818, file: !1059, line: 517, column: 17)
!2818 = distinct !DILexicalBlock(scope: !2807, file: !1059, line: 516, column: 58)
!2819 = !DILocation(line: 517, column: 31, scope: !2817)
!2820 = !DILocation(line: 517, column: 34, scope: !2817)
!2821 = !DILocation(line: 517, column: 37, scope: !2817)
!2822 = !DILocation(line: 517, column: 42, scope: !2817)
!2823 = !DILocation(line: 517, column: 29, scope: !2817)
!2824 = !DILocation(line: 517, column: 52, scope: !2817)
!2825 = !DILocation(line: 517, column: 17, scope: !2818)
!2826 = !DILocation(line: 518, column: 21, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2828, file: !1059, line: 518, column: 21)
!2828 = distinct !DILexicalBlock(scope: !2817, file: !1059, line: 517, column: 58)
!2829 = !DILocation(line: 518, column: 24, scope: !2827)
!2830 = !DILocation(line: 518, column: 27, scope: !2827)
!2831 = !DILocation(line: 518, column: 32, scope: !2827)
!2832 = !DILocation(line: 518, column: 42, scope: !2827)
!2833 = !DILocation(line: 518, column: 21, scope: !2828)
!2834 = !DILocation(line: 519, column: 38, scope: !2827)
!2835 = !DILocation(line: 519, column: 21, scope: !2827)
!2836 = !DILocation(line: 520, column: 26, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2827, file: !1059, line: 520, column: 26)
!2838 = !DILocation(line: 520, column: 29, scope: !2837)
!2839 = !DILocation(line: 520, column: 32, scope: !2837)
!2840 = !DILocation(line: 520, column: 61, scope: !2837)
!2841 = !DILocation(line: 520, column: 26, scope: !2827)
!2842 = !DILocation(line: 521, column: 33, scope: !2837)
!2843 = !DILocation(line: 521, column: 21, scope: !2837)
!2844 = !DILocation(line: 522, column: 13, scope: !2828)
!2845 = !DILocation(line: 523, column: 9, scope: !2818)
!2846 = !DILocation(line: 524, column: 5, scope: !2769)
!2847 = !DILocation(line: 525, column: 13, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2849, file: !1059, line: 525, column: 13)
!2849 = distinct !DILexicalBlock(scope: !2758, file: !1059, line: 524, column: 12)
!2850 = !DILocation(line: 525, column: 16, scope: !2848)
!2851 = !DILocation(line: 525, column: 19, scope: !2848)
!2852 = !DILocation(line: 525, column: 24, scope: !2848)
!2853 = !DILocation(line: 525, column: 43, scope: !2848)
!2854 = !DILocation(line: 526, column: 32, scope: !2848)
!2855 = !DILocation(line: 526, column: 13, scope: !2848)
!2856 = !DILocation(line: 526, column: 16, scope: !2848)
!2857 = !DILocation(line: 526, column: 19, scope: !2848)
!2858 = !DILocation(line: 526, column: 24, scope: !2848)
!2859 = !DILocation(line: 526, column: 67, scope: !2848)
!2860 = !DILocation(line: 526, column: 79, scope: !2848)
!2861 = !DILocation(line: 526, column: 48, scope: !2848)
!2862 = !DILocation(line: 526, column: 51, scope: !2848)
!2863 = !DILocation(line: 526, column: 54, scope: !2848)
!2864 = !DILocation(line: 526, column: 59, scope: !2848)
!2865 = !DILocation(line: 526, column: 45, scope: !2848)
!2866 = !DILocation(line: 525, column: 13, scope: !2867)
!2867 = !DILexicalBlockFile(scope: !2849, file: !1059, discriminator: 1)
!2868 = !DILocalVariable(name: "ret", scope: !2869, file: !1059, line: 527, type: !1043)
!2869 = distinct !DILexicalBlock(scope: !2848, file: !1059, line: 526, column: 85)
!2870 = !DILocation(line: 527, column: 17, scope: !2869)
!2871 = !DILocation(line: 528, column: 17, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2869, file: !1059, line: 528, column: 17)
!2873 = !DILocation(line: 528, column: 20, scope: !2872)
!2874 = !DILocation(line: 528, column: 35, scope: !2872)
!2875 = !DILocation(line: 528, column: 17, scope: !2869)
!2876 = !DILocation(line: 529, column: 36, scope: !2872)
!2877 = !DILocation(line: 529, column: 39, scope: !2872)
!2878 = !DILocation(line: 529, column: 23, scope: !2872)
!2879 = !DILocation(line: 529, column: 21, scope: !2872)
!2880 = !DILocation(line: 529, column: 17, scope: !2872)
!2881 = !DILocation(line: 531, column: 42, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2872, file: !1059, line: 530, column: 18)
!2883 = !DILocation(line: 531, column: 23, scope: !2882)
!2884 = !DILocation(line: 531, column: 21, scope: !2882)
!2885 = !DILocation(line: 533, column: 17, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2869, file: !1059, line: 533, column: 17)
!2887 = !DILocation(line: 533, column: 21, scope: !2886)
!2888 = !DILocation(line: 533, column: 17, scope: !2869)
!2889 = !DILocation(line: 534, column: 24, scope: !2886)
!2890 = !DILocation(line: 534, column: 17, scope: !2886)
!2891 = !DILocation(line: 535, column: 30, scope: !2869)
!2892 = !DILocation(line: 535, column: 13, scope: !2869)
!2893 = !DILocation(line: 536, column: 9, scope: !2869)
!2894 = !DILocation(line: 537, column: 13, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2849, file: !1059, line: 537, column: 13)
!2896 = !DILocation(line: 537, column: 16, scope: !2895)
!2897 = !DILocation(line: 537, column: 19, scope: !2895)
!2898 = !DILocation(line: 537, column: 24, scope: !2895)
!2899 = !DILocation(line: 537, column: 13, scope: !2849)
!2900 = !DILocation(line: 538, column: 17, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2902, file: !1059, line: 538, column: 17)
!2902 = distinct !DILexicalBlock(scope: !2895, file: !1059, line: 537, column: 58)
!2903 = !DILocation(line: 538, column: 31, scope: !2901)
!2904 = !DILocation(line: 538, column: 34, scope: !2901)
!2905 = !DILocation(line: 538, column: 37, scope: !2901)
!2906 = !DILocation(line: 538, column: 42, scope: !2901)
!2907 = !DILocation(line: 538, column: 29, scope: !2901)
!2908 = !DILocation(line: 538, column: 52, scope: !2901)
!2909 = !DILocation(line: 538, column: 17, scope: !2902)
!2910 = !DILocalVariable(name: "ret", scope: !2911, file: !1059, line: 539, type: !1043)
!2911 = distinct !DILexicalBlock(scope: !2901, file: !1059, line: 538, column: 58)
!2912 = !DILocation(line: 539, column: 21, scope: !2911)
!2913 = !DILocation(line: 540, column: 38, scope: !2911)
!2914 = !DILocation(line: 540, column: 41, scope: !2911)
!2915 = !DILocation(line: 540, column: 49, scope: !2911)
!2916 = !DILocation(line: 540, column: 17, scope: !2911)
!2917 = !DILocation(line: 541, column: 21, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2911, file: !1059, line: 541, column: 21)
!2919 = !DILocation(line: 541, column: 24, scope: !2918)
!2920 = !DILocation(line: 541, column: 39, scope: !2918)
!2921 = !DILocation(line: 541, column: 21, scope: !2911)
!2922 = !DILocation(line: 542, column: 40, scope: !2918)
!2923 = !DILocation(line: 542, column: 43, scope: !2918)
!2924 = !DILocation(line: 542, column: 27, scope: !2918)
!2925 = !DILocation(line: 542, column: 25, scope: !2918)
!2926 = !DILocation(line: 542, column: 21, scope: !2918)
!2927 = !DILocation(line: 544, column: 46, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2918, file: !1059, line: 543, column: 22)
!2929 = !DILocation(line: 544, column: 27, scope: !2928)
!2930 = !DILocation(line: 544, column: 25, scope: !2928)
!2931 = !DILocation(line: 546, column: 21, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2911, file: !1059, line: 546, column: 21)
!2933 = !DILocation(line: 546, column: 25, scope: !2932)
!2934 = !DILocation(line: 546, column: 21, scope: !2911)
!2935 = !DILocation(line: 547, column: 28, scope: !2932)
!2936 = !DILocation(line: 547, column: 21, scope: !2932)
!2937 = !DILocation(line: 549, column: 21, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !2911, file: !1059, line: 549, column: 21)
!2939 = !DILocation(line: 549, column: 24, scope: !2938)
!2940 = !DILocation(line: 549, column: 27, scope: !2938)
!2941 = !DILocation(line: 549, column: 32, scope: !2938)
!2942 = !DILocation(line: 549, column: 42, scope: !2938)
!2943 = !DILocation(line: 549, column: 21, scope: !2911)
!2944 = !DILocation(line: 550, column: 38, scope: !2938)
!2945 = !DILocation(line: 550, column: 21, scope: !2938)
!2946 = !DILocation(line: 552, column: 33, scope: !2938)
!2947 = !DILocation(line: 552, column: 21, scope: !2938)
!2948 = !DILocation(line: 553, column: 13, scope: !2911)
!2949 = !DILocation(line: 554, column: 9, scope: !2902)
!2950 = !DILocation(line: 556, column: 5, scope: !2750)
!2951 = !DILocation(line: 557, column: 1, scope: !2750)
!2952 = distinct !DISubprogram(name: "cabac_init_decoder", scope: !1059, file: !1059, line: 470, type: !2953, isLocal: true, isDefinition: true, scopeLine: 471, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!1043, !1062}
!2955 = !DILocalVariable(name: "s", arg: 1, scope: !2952, file: !1059, line: 470, type: !1062)
!2956 = !DILocation(line: 470, column: 44, scope: !2952)
!2957 = !DILocalVariable(name: "gb", scope: !2952, file: !1059, line: 472, type: !2958)
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64, align: 64)
!2959 = !DILocation(line: 472, column: 20, scope: !2952)
!2960 = !DILocation(line: 472, column: 26, scope: !2952)
!2961 = !DILocation(line: 472, column: 29, scope: !2952)
!2962 = !DILocation(line: 472, column: 37, scope: !2952)
!2963 = !DILocation(line: 473, column: 15, scope: !2952)
!2964 = !DILocation(line: 473, column: 5, scope: !2952)
!2965 = !DILocation(line: 474, column: 20, scope: !2952)
!2966 = !DILocation(line: 474, column: 5, scope: !2952)
!2967 = !DILocation(line: 475, column: 35, scope: !2952)
!2968 = !DILocation(line: 475, column: 38, scope: !2952)
!2969 = !DILocation(line: 475, column: 46, scope: !2952)
!2970 = !DILocation(line: 476, column: 27, scope: !2952)
!2971 = !DILocation(line: 476, column: 31, scope: !2952)
!2972 = !DILocation(line: 476, column: 55, scope: !2952)
!2973 = !DILocation(line: 476, column: 40, scope: !2952)
!2974 = !DILocation(line: 476, column: 59, scope: !2952)
!2975 = !DILocation(line: 476, column: 38, scope: !2952)
!2976 = !DILocation(line: 477, column: 42, scope: !2952)
!2977 = !DILocation(line: 477, column: 28, scope: !2952)
!2978 = !DILocation(line: 477, column: 46, scope: !2952)
!2979 = !DILocation(line: 477, column: 51, scope: !2952)
!2980 = !DILocation(line: 475, column: 12, scope: !2952)
!2981 = !DILocation(line: 475, column: 5, scope: !2952)
!2982 = distinct !DISubprogram(name: "cabac_init_state", scope: !1059, file: !1059, line: 480, type: !2983, isLocal: true, isDefinition: true, scopeLine: 481, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!2983 = !DISubroutineType(types: !2984)
!2984 = !{null, !1062}
!2985 = !DILocalVariable(name: "a", arg: 1, scope: !2986, file: !2987, line: 127, type: !1043)
!2986 = distinct !DISubprogram(name: "av_clip_c", scope: !2987, file: !2987, line: 127, type: !2988, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!2987 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2988 = !DISubroutineType(types: !2989)
!2989 = !{!1043, !1043, !1043, !1043}
!2990 = !DILocation(line: 127, column: 87, scope: !2986, inlinedAt: !2991)
!2991 = distinct !DILocation(line: 492, column: 30, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2993, file: !1059, line: 488, column: 31)
!2993 = distinct !DILexicalBlock(scope: !2994, file: !1059, line: 488, column: 5)
!2994 = distinct !DILexicalBlock(scope: !2982, file: !1059, line: 488, column: 5)
!2995 = !DILocalVariable(name: "amin", arg: 2, scope: !2986, file: !2987, line: 127, type: !1043)
!2996 = !DILocation(line: 127, column: 94, scope: !2986, inlinedAt: !2991)
!2997 = !DILocalVariable(name: "amax", arg: 3, scope: !2986, file: !2987, line: 127, type: !1043)
!2998 = !DILocation(line: 127, column: 104, scope: !2986, inlinedAt: !2991)
!2999 = !DILocalVariable(name: "s", arg: 1, scope: !2982, file: !1059, line: 480, type: !1062)
!3000 = !DILocation(line: 480, column: 43, scope: !2982)
!3001 = !DILocalVariable(name: "init_type", scope: !2982, file: !1059, line: 482, type: !1043)
!3002 = !DILocation(line: 482, column: 9, scope: !2982)
!3003 = !DILocation(line: 482, column: 25, scope: !2982)
!3004 = !DILocation(line: 482, column: 28, scope: !2982)
!3005 = !DILocation(line: 482, column: 31, scope: !2982)
!3006 = !DILocation(line: 482, column: 23, scope: !2982)
!3007 = !DILocalVariable(name: "i", scope: !2982, file: !1059, line: 483, type: !1043)
!3008 = !DILocation(line: 483, column: 9, scope: !2982)
!3009 = !DILocation(line: 485, column: 9, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !2982, file: !1059, line: 485, column: 9)
!3011 = !DILocation(line: 485, column: 12, scope: !3010)
!3012 = !DILocation(line: 485, column: 15, scope: !3010)
!3013 = !DILocation(line: 485, column: 31, scope: !3010)
!3014 = !DILocation(line: 485, column: 34, scope: !3015)
!3015 = !DILexicalBlockFile(scope: !3010, file: !1059, discriminator: 1)
!3016 = !DILocation(line: 485, column: 37, scope: !3015)
!3017 = !DILocation(line: 485, column: 40, scope: !3015)
!3018 = !DILocation(line: 485, column: 51, scope: !3015)
!3019 = !DILocation(line: 485, column: 9, scope: !3015)
!3020 = !DILocation(line: 486, column: 19, scope: !3010)
!3021 = !DILocation(line: 486, column: 9, scope: !3010)
!3022 = !DILocation(line: 488, column: 12, scope: !2994)
!3023 = !DILocation(line: 488, column: 10, scope: !2994)
!3024 = !DILocation(line: 488, column: 17, scope: !3025)
!3025 = !DILexicalBlockFile(scope: !2993, file: !1059, discriminator: 1)
!3026 = !DILocation(line: 488, column: 19, scope: !3025)
!3027 = !DILocation(line: 488, column: 5, scope: !3025)
!3028 = !DILocalVariable(name: "init_value", scope: !2992, file: !1059, line: 489, type: !1043)
!3029 = !DILocation(line: 489, column: 13, scope: !2992)
!3030 = !DILocation(line: 489, column: 49, scope: !2992)
!3031 = !DILocation(line: 489, column: 26, scope: !2992)
!3032 = !DILocation(line: 489, column: 38, scope: !2992)
!3033 = !DILocalVariable(name: "m", scope: !2992, file: !1059, line: 490, type: !1043)
!3034 = !DILocation(line: 490, column: 13, scope: !2992)
!3035 = !DILocation(line: 490, column: 18, scope: !2992)
!3036 = !DILocation(line: 490, column: 29, scope: !2992)
!3037 = !DILocation(line: 490, column: 35, scope: !2992)
!3038 = !DILocation(line: 490, column: 39, scope: !2992)
!3039 = !DILocalVariable(name: "n", scope: !2992, file: !1059, line: 491, type: !1043)
!3040 = !DILocation(line: 491, column: 13, scope: !2992)
!3041 = !DILocation(line: 491, column: 19, scope: !2992)
!3042 = !DILocation(line: 491, column: 30, scope: !2992)
!3043 = !DILocation(line: 491, column: 36, scope: !2992)
!3044 = !DILocation(line: 491, column: 42, scope: !2992)
!3045 = !DILocalVariable(name: "pre", scope: !2992, file: !1059, line: 492, type: !1043)
!3046 = !DILocation(line: 492, column: 13, scope: !2992)
!3047 = !DILocation(line: 492, column: 26, scope: !2992)
!3048 = !DILocation(line: 492, column: 40, scope: !2992)
!3049 = !DILocation(line: 492, column: 43, scope: !2992)
!3050 = !DILocation(line: 492, column: 46, scope: !2992)
!3051 = !DILocation(line: 492, column: 30, scope: !2992)
!3052 = !DILocation(line: 132, column: 9, scope: !3053, inlinedAt: !2991)
!3053 = distinct !DILexicalBlock(scope: !2986, file: !2987, line: 132, column: 9)
!3054 = !DILocation(line: 132, column: 13, scope: !3053, inlinedAt: !2991)
!3055 = !DILocation(line: 132, column: 11, scope: !3053, inlinedAt: !2991)
!3056 = !DILocation(line: 132, column: 9, scope: !2986, inlinedAt: !2991)
!3057 = !DILocation(line: 132, column: 26, scope: !3058, inlinedAt: !2991)
!3058 = !DILexicalBlockFile(scope: !3053, file: !2987, discriminator: 1)
!3059 = !DILocation(line: 132, column: 19, scope: !3058, inlinedAt: !2991)
!3060 = !DILocation(line: 133, column: 14, scope: !3061, inlinedAt: !2991)
!3061 = distinct !DILexicalBlock(scope: !3053, file: !2987, line: 133, column: 14)
!3062 = !DILocation(line: 133, column: 18, scope: !3061, inlinedAt: !2991)
!3063 = !DILocation(line: 133, column: 16, scope: !3061, inlinedAt: !2991)
!3064 = !DILocation(line: 133, column: 14, scope: !3053, inlinedAt: !2991)
!3065 = !DILocation(line: 133, column: 31, scope: !3066, inlinedAt: !2991)
!3066 = !DILexicalBlockFile(scope: !3061, file: !2987, discriminator: 1)
!3067 = !DILocation(line: 133, column: 24, scope: !3066, inlinedAt: !2991)
!3068 = !DILocation(line: 134, column: 17, scope: !3061, inlinedAt: !2991)
!3069 = !DILocation(line: 134, column: 10, scope: !3061, inlinedAt: !2991)
!3070 = !DILocation(line: 135, column: 1, scope: !2986, inlinedAt: !2991)
!3071 = !DILocation(line: 492, column: 28, scope: !2992)
!3072 = !DILocation(line: 492, column: 64, scope: !2992)
!3073 = !DILocation(line: 492, column: 72, scope: !2992)
!3074 = !DILocation(line: 492, column: 70, scope: !2992)
!3075 = !DILocation(line: 492, column: 21, scope: !2992)
!3076 = !DILocation(line: 492, column: 75, scope: !2992)
!3077 = !DILocation(line: 494, column: 16, scope: !2992)
!3078 = !DILocation(line: 494, column: 20, scope: !2992)
!3079 = !DILocation(line: 494, column: 13, scope: !2992)
!3080 = !DILocation(line: 495, column: 13, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !2992, file: !1059, line: 495, column: 13)
!3082 = !DILocation(line: 495, column: 17, scope: !3081)
!3083 = !DILocation(line: 495, column: 13, scope: !2992)
!3084 = !DILocation(line: 496, column: 26, scope: !3081)
!3085 = !DILocation(line: 496, column: 30, scope: !3081)
!3086 = !DILocation(line: 496, column: 23, scope: !3081)
!3087 = !DILocation(line: 496, column: 17, scope: !3081)
!3088 = !DILocation(line: 496, column: 13, scope: !3081)
!3089 = !DILocation(line: 497, column: 37, scope: !2992)
!3090 = !DILocation(line: 497, column: 32, scope: !2992)
!3091 = !DILocation(line: 497, column: 9, scope: !2992)
!3092 = !DILocation(line: 497, column: 12, scope: !2992)
!3093 = !DILocation(line: 497, column: 20, scope: !2992)
!3094 = !DILocation(line: 497, column: 35, scope: !2992)
!3095 = !DILocation(line: 498, column: 5, scope: !2992)
!3096 = !DILocation(line: 488, column: 27, scope: !3097)
!3097 = !DILexicalBlockFile(scope: !2993, file: !1059, discriminator: 2)
!3098 = !DILocation(line: 488, column: 5, scope: !3097)
!3099 = distinct !{!3099, !3100}
!3100 = !DILocation(line: 488, column: 5, scope: !2982)
!3101 = !DILocation(line: 500, column: 12, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !2982, file: !1059, line: 500, column: 5)
!3103 = !DILocation(line: 500, column: 10, scope: !3102)
!3104 = !DILocation(line: 500, column: 17, scope: !3105)
!3105 = !DILexicalBlockFile(scope: !3106, file: !1059, discriminator: 1)
!3106 = distinct !DILexicalBlock(scope: !3102, file: !1059, line: 500, column: 5)
!3107 = !DILocation(line: 500, column: 19, scope: !3105)
!3108 = !DILocation(line: 500, column: 5, scope: !3105)
!3109 = !DILocation(line: 501, column: 31, scope: !3106)
!3110 = !DILocation(line: 501, column: 9, scope: !3106)
!3111 = !DILocation(line: 501, column: 12, scope: !3106)
!3112 = !DILocation(line: 501, column: 20, scope: !3106)
!3113 = !DILocation(line: 501, column: 34, scope: !3106)
!3114 = !DILocation(line: 500, column: 25, scope: !3115)
!3115 = !DILexicalBlockFile(scope: !3106, file: !1059, discriminator: 2)
!3116 = !DILocation(line: 500, column: 5, scope: !3115)
!3117 = distinct !{!3117, !3118}
!3118 = !DILocation(line: 500, column: 5, scope: !2982)
!3119 = !DILocation(line: 502, column: 1, scope: !2982)
!3120 = distinct !DISubprogram(name: "load_states", scope: !1059, file: !1059, line: 460, type: !2983, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3121 = !DILocalVariable(name: "s", arg: 1, scope: !3120, file: !1059, line: 460, type: !1062)
!3122 = !DILocation(line: 460, column: 38, scope: !3120)
!3123 = !DILocation(line: 462, column: 12, scope: !3120)
!3124 = !DILocation(line: 462, column: 15, scope: !3120)
!3125 = !DILocation(line: 462, column: 23, scope: !3120)
!3126 = !DILocation(line: 462, column: 5, scope: !3120)
!3127 = !DILocation(line: 462, column: 36, scope: !3120)
!3128 = !DILocation(line: 462, column: 39, scope: !3120)
!3129 = !DILocation(line: 463, column: 1, scope: !3120)
!3130 = distinct !DISubprogram(name: "cabac_reinit", scope: !1059, file: !1059, line: 465, type: !3131, isLocal: true, isDefinition: true, scopeLine: 466, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3131 = !DISubroutineType(types: !3132)
!3132 = !{!1043, !1797}
!3133 = !DILocalVariable(name: "lc", arg: 1, scope: !3130, file: !1059, line: 465, type: !1797)
!3134 = !DILocation(line: 465, column: 43, scope: !3130)
!3135 = !DILocation(line: 467, column: 24, scope: !3130)
!3136 = !DILocation(line: 467, column: 28, scope: !3130)
!3137 = !DILocation(line: 467, column: 12, scope: !3130)
!3138 = !DILocation(line: 467, column: 35, scope: !3130)
!3139 = !DILocation(line: 467, column: 5, scope: !3130)
!3140 = distinct !DISubprogram(name: "get_cabac_terminate", scope: !3141, file: !3141, line: 181, type: !3142, isLocal: true, isDefinition: true, scopeLine: 181, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3141 = !DIFile(filename: "libavcodec/cabac_functions.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3142 = !DISubroutineType(types: !3143)
!3143 = !{!1043, !3144}
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64, align: 64)
!3145 = !DILocalVariable(name: "c", arg: 1, scope: !3140, file: !3141, line: 181, type: !3144)
!3146 = !DILocation(line: 181, column: 70, scope: !3140)
!3147 = !DILocation(line: 182, column: 5, scope: !3140)
!3148 = !DILocation(line: 182, column: 8, scope: !3140)
!3149 = !DILocation(line: 182, column: 14, scope: !3140)
!3150 = !DILocation(line: 183, column: 8, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3140, file: !3141, line: 183, column: 8)
!3152 = !DILocation(line: 183, column: 11, scope: !3151)
!3153 = !DILocation(line: 183, column: 17, scope: !3151)
!3154 = !DILocation(line: 183, column: 20, scope: !3151)
!3155 = !DILocation(line: 183, column: 25, scope: !3151)
!3156 = !DILocation(line: 183, column: 15, scope: !3151)
!3157 = !DILocation(line: 183, column: 8, scope: !3140)
!3158 = !DILocation(line: 184, column: 35, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3151, file: !3141, line: 183, column: 35)
!3160 = !DILocation(line: 184, column: 9, scope: !3159)
!3161 = !DILocation(line: 185, column: 9, scope: !3159)
!3162 = !DILocation(line: 187, column: 16, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3151, file: !3141, line: 186, column: 10)
!3164 = !DILocation(line: 187, column: 19, scope: !3163)
!3165 = !DILocation(line: 187, column: 32, scope: !3163)
!3166 = !DILocation(line: 187, column: 35, scope: !3163)
!3167 = !DILocation(line: 187, column: 30, scope: !3163)
!3168 = !DILocation(line: 187, column: 9, scope: !3163)
!3169 = !DILocation(line: 189, column: 1, scope: !3140)
!3170 = distinct !DISubprogram(name: "ff_hevc_sao_merge_flag_decode", scope: !1059, file: !1059, line: 561, type: !2953, isLocal: false, isDefinition: true, scopeLine: 562, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3171 = !DILocalVariable(name: "s", arg: 1, scope: !3170, file: !1059, line: 561, type: !1062)
!3172 = !DILocation(line: 561, column: 48, scope: !3170)
!3173 = !DILocation(line: 563, column: 23, scope: !3170)
!3174 = !DILocation(line: 563, column: 26, scope: !3170)
!3175 = !DILocation(line: 563, column: 34, scope: !3170)
!3176 = !DILocation(line: 563, column: 62, scope: !3170)
!3177 = !DILocation(line: 563, column: 39, scope: !3170)
!3178 = !DILocation(line: 563, column: 42, scope: !3170)
!3179 = !DILocation(line: 563, column: 50, scope: !3170)
!3180 = !DILocation(line: 563, column: 12, scope: !3170)
!3181 = !DILocation(line: 563, column: 5, scope: !3170)
!3182 = distinct !DISubprogram(name: "get_cabac", scope: !3141, file: !3141, line: 138, type: !3183, isLocal: true, isDefinition: true, scopeLine: 138, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3183 = !DISubroutineType(types: !3184)
!3184 = !{!1043, !3144, !3185}
!3185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1049)
!3186 = !DILocalVariable(name: "c", arg: 1, scope: !3187, file: !3188, line: 178, type: !3144)
!3187 = distinct !DISubprogram(name: "get_cabac_inline_x86", scope: !3188, file: !3188, line: 178, type: !3183, isLocal: true, isDefinition: true, scopeLine: 180, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3188 = !DIFile(filename: "libavcodec/x86/cabac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3189 = !DILocation(line: 178, column: 85, scope: !3187, inlinedAt: !3190)
!3190 = distinct !DILocation(line: 139, column: 12, scope: !3182)
!3191 = !DILocalVariable(name: "state", arg: 2, scope: !3187, file: !3188, line: 179, type: !3185)
!3192 = !DILocation(line: 179, column: 65, scope: !3187, inlinedAt: !3190)
!3193 = !DILocalVariable(name: "bit", scope: !3187, file: !3188, line: 181, type: !1043)
!3194 = !DILocation(line: 181, column: 9, scope: !3187, inlinedAt: !3190)
!3195 = !DILocalVariable(name: "tmp", scope: !3187, file: !3188, line: 181, type: !1043)
!3196 = !DILocation(line: 181, column: 14, scope: !3187, inlinedAt: !3190)
!3197 = !DILocalVariable(name: "c", arg: 1, scope: !3182, file: !3141, line: 138, type: !3144)
!3198 = !DILocation(line: 138, column: 60, scope: !3182)
!3199 = !DILocalVariable(name: "state", arg: 2, scope: !3182, file: !3141, line: 138, type: !3185)
!3200 = !DILocation(line: 138, column: 79, scope: !3182)
!3201 = !DILocation(line: 139, column: 33, scope: !3182)
!3202 = !DILocation(line: 139, column: 35, scope: !3182)
!3203 = !DILocation(line: 139, column: 12, scope: !3182)
!3204 = !DILocation(line: 200, column: 29, scope: !3187, inlinedAt: !3190)
!3205 = !DILocation(line: 200, column: 32, scope: !3187, inlinedAt: !3190)
!3206 = !DILocation(line: 200, column: 44, scope: !3187, inlinedAt: !3190)
!3207 = !DILocation(line: 200, column: 47, scope: !3187, inlinedAt: !3190)
!3208 = !DILocation(line: 201, column: 15, scope: !3187, inlinedAt: !3190)
!3209 = !DILocation(line: 201, column: 27, scope: !3187, inlinedAt: !3190)
!3210 = !DILocation(line: 205, column: 16, scope: !3187, inlinedAt: !3190)
!3211 = !DILocation(line: 205, column: 19, scope: !3187, inlinedAt: !3190)
!3212 = !DILocation(line: 205, column: 29, scope: !3187, inlinedAt: !3190)
!3213 = !DILocation(line: 205, column: 32, scope: !3187, inlinedAt: !3190)
!3214 = !DILocation(line: 192, column: 5, scope: !3187, inlinedAt: !3190)
!3215 = !{i32 117480, i32 117547, i32 117617, i32 117686, i32 117763, i32 117833, i32 117872, i32 117911, i32 117951, i32 117988, i32 118026, i32 118065, i32 118104, i32 118144, i32 118210, i32 118279, i32 118351, i32 118422, i32 118490, i32 118556, i32 118626, i32 118698, i32 118771, i32 118841, i32 118910, i32 118980, i32 119048, i32 119119, i32 119190, i32 119260, i32 119331, i32 119402, i32 119464, i32 119535, i32 119605, i32 119675, i32 119746, i32 119818, i32 119888}
!3216 = !DILocation(line: 208, column: 12, scope: !3187, inlinedAt: !3190)
!3217 = !DILocation(line: 208, column: 16, scope: !3187, inlinedAt: !3190)
!3218 = !DILocation(line: 139, column: 5, scope: !3182)
!3219 = distinct !DISubprogram(name: "ff_hevc_sao_type_idx_decode", scope: !1059, file: !1059, line: 566, type: !2953, isLocal: false, isDefinition: true, scopeLine: 567, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3220 = !DILocalVariable(name: "c", arg: 1, scope: !3221, file: !3188, line: 260, type: !3144)
!3221 = distinct !DISubprogram(name: "get_cabac_bypass_x86", scope: !3188, file: !3188, line: 260, type: !3142, isLocal: true, isDefinition: true, scopeLine: 261, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3222 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !3223)
!3223 = distinct !DILocation(line: 571, column: 10, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3219, file: !1059, line: 571, column: 9)
!3225 = !DILocalVariable(name: "tmp", scope: !3221, file: !3188, line: 262, type: !3226)
!3226 = !DIDerivedType(tag: DW_TAG_typedef, name: "x86_reg", file: !3227, line: 39, baseType: !1052)
!3227 = !DIFile(filename: "./libavutil/x86/asm.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3228 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !3223)
!3229 = !DILocalVariable(name: "res", scope: !3221, file: !3188, line: 263, type: !1043)
!3230 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !3223)
!3231 = !DILocalVariable(name: "s", arg: 1, scope: !3219, file: !1059, line: 566, type: !1062)
!3232 = !DILocation(line: 566, column: 46, scope: !3219)
!3233 = !DILocation(line: 568, column: 21, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3219, file: !1059, line: 568, column: 9)
!3235 = !DILocation(line: 568, column: 24, scope: !3234)
!3236 = !DILocation(line: 568, column: 32, scope: !3234)
!3237 = !DILocation(line: 568, column: 60, scope: !3234)
!3238 = !DILocation(line: 568, column: 37, scope: !3234)
!3239 = !DILocation(line: 568, column: 40, scope: !3234)
!3240 = !DILocation(line: 568, column: 48, scope: !3234)
!3241 = !DILocation(line: 568, column: 10, scope: !3234)
!3242 = !DILocation(line: 568, column: 9, scope: !3219)
!3243 = !DILocation(line: 569, column: 9, scope: !3234)
!3244 = !DILocation(line: 571, column: 32, scope: !3224)
!3245 = !DILocation(line: 571, column: 35, scope: !3224)
!3246 = !DILocation(line: 571, column: 43, scope: !3224)
!3247 = !DILocation(line: 571, column: 10, scope: !3224)
!3248 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !3223)
!3249 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !3223)
!3250 = !{i32 123823, i32 123857, i32 123903, i32 123949, i32 123995, i32 124041, i32 124087, i32 124133, i32 124179, i32 124225, i32 124271, i32 124317, i32 124363, i32 124409, i32 124455, i32 124501, i32 124547, i32 124593, i32 124639, i32 124685, i32 124725, i32 124771, i32 124817}
!3251 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !3223)
!3252 = !DILocation(line: 571, column: 9, scope: !3219)
!3253 = !DILocation(line: 572, column: 9, scope: !3224)
!3254 = !DILocation(line: 573, column: 5, scope: !3219)
!3255 = !DILocation(line: 574, column: 1, scope: !3219)
!3256 = distinct !DISubprogram(name: "ff_hevc_sao_band_position_decode", scope: !1059, file: !1059, line: 576, type: !2953, isLocal: false, isDefinition: true, scopeLine: 577, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3257 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !3258)
!3258 = distinct !DILocation(line: 582, column: 32, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3260, file: !1059, line: 581, column: 5)
!3260 = distinct !DILexicalBlock(scope: !3256, file: !1059, line: 581, column: 5)
!3261 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !3258)
!3262 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !3258)
!3263 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !3264)
!3264 = distinct !DILocation(line: 579, column: 17, scope: !3256)
!3265 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !3264)
!3266 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !3264)
!3267 = !DILocalVariable(name: "s", arg: 1, scope: !3256, file: !1059, line: 576, type: !1062)
!3268 = !DILocation(line: 576, column: 51, scope: !3256)
!3269 = !DILocalVariable(name: "i", scope: !3256, file: !1059, line: 578, type: !1043)
!3270 = !DILocation(line: 578, column: 9, scope: !3256)
!3271 = !DILocalVariable(name: "value", scope: !3256, file: !1059, line: 579, type: !1043)
!3272 = !DILocation(line: 579, column: 9, scope: !3256)
!3273 = !DILocation(line: 579, column: 39, scope: !3256)
!3274 = !DILocation(line: 579, column: 42, scope: !3256)
!3275 = !DILocation(line: 579, column: 50, scope: !3256)
!3276 = !DILocation(line: 579, column: 17, scope: !3256)
!3277 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !3264)
!3278 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !3264)
!3279 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !3264)
!3280 = !DILocation(line: 581, column: 12, scope: !3260)
!3281 = !DILocation(line: 581, column: 10, scope: !3260)
!3282 = !DILocation(line: 581, column: 17, scope: !3283)
!3283 = !DILexicalBlockFile(scope: !3259, file: !1059, discriminator: 1)
!3284 = !DILocation(line: 581, column: 19, scope: !3283)
!3285 = !DILocation(line: 581, column: 5, scope: !3283)
!3286 = !DILocation(line: 582, column: 18, scope: !3259)
!3287 = !DILocation(line: 582, column: 24, scope: !3259)
!3288 = !DILocation(line: 582, column: 54, scope: !3259)
!3289 = !DILocation(line: 582, column: 57, scope: !3259)
!3290 = !DILocation(line: 582, column: 65, scope: !3259)
!3291 = !DILocation(line: 582, column: 32, scope: !3259)
!3292 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !3258)
!3293 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !3258)
!3294 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !3258)
!3295 = !DILocation(line: 582, column: 30, scope: !3259)
!3296 = !DILocation(line: 582, column: 15, scope: !3259)
!3297 = !DILocation(line: 582, column: 9, scope: !3259)
!3298 = !DILocation(line: 581, column: 25, scope: !3299)
!3299 = !DILexicalBlockFile(scope: !3259, file: !1059, discriminator: 2)
!3300 = !DILocation(line: 581, column: 5, scope: !3299)
!3301 = distinct !{!3301, !3302}
!3302 = !DILocation(line: 581, column: 5, scope: !3256)
!3303 = !DILocation(line: 583, column: 12, scope: !3256)
!3304 = !DILocation(line: 583, column: 5, scope: !3256)
!3305 = distinct !DISubprogram(name: "ff_hevc_sao_offset_abs_decode", scope: !1059, file: !1059, line: 586, type: !2953, isLocal: false, isDefinition: true, scopeLine: 587, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3306 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !3307)
!3307 = distinct !DILocation(line: 591, column: 26, scope: !3308)
!3308 = !DILexicalBlockFile(scope: !3305, file: !1059, discriminator: 2)
!3309 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !3307)
!3310 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !3307)
!3311 = !DILocalVariable(name: "s", arg: 1, scope: !3305, file: !1059, line: 586, type: !1062)
!3312 = !DILocation(line: 586, column: 48, scope: !3305)
!3313 = !DILocalVariable(name: "i", scope: !3305, file: !1059, line: 588, type: !1043)
!3314 = !DILocation(line: 588, column: 9, scope: !3305)
!3315 = !DILocalVariable(name: "length", scope: !3305, file: !1059, line: 589, type: !1043)
!3316 = !DILocation(line: 589, column: 9, scope: !3305)
!3317 = !DILocation(line: 589, column: 27, scope: !3305)
!3318 = !DILocation(line: 589, column: 30, scope: !3305)
!3319 = !DILocation(line: 589, column: 33, scope: !3305)
!3320 = !DILocation(line: 589, column: 38, scope: !3305)
!3321 = !DILocation(line: 589, column: 49, scope: !3305)
!3322 = !DILocation(line: 589, column: 26, scope: !3305)
!3323 = !DILocation(line: 589, column: 26, scope: !3324)
!3324 = !DILexicalBlockFile(scope: !3305, file: !1059, discriminator: 1)
!3325 = !DILocation(line: 589, column: 66, scope: !3308)
!3326 = !DILocation(line: 589, column: 69, scope: !3308)
!3327 = !DILocation(line: 589, column: 72, scope: !3308)
!3328 = !DILocation(line: 589, column: 77, scope: !3308)
!3329 = !DILocation(line: 589, column: 26, scope: !3308)
!3330 = !DILocation(line: 589, column: 26, scope: !3331)
!3331 = !DILexicalBlockFile(scope: !3305, file: !1059, discriminator: 3)
!3332 = !DILocation(line: 589, column: 89, scope: !3331)
!3333 = !DILocation(line: 589, column: 21, scope: !3331)
!3334 = !DILocation(line: 589, column: 95, scope: !3331)
!3335 = !DILocation(line: 589, column: 9, scope: !3331)
!3336 = !DILocation(line: 591, column: 5, scope: !3305)
!3337 = !DILocation(line: 591, column: 12, scope: !3324)
!3338 = !DILocation(line: 591, column: 16, scope: !3324)
!3339 = !DILocation(line: 591, column: 14, scope: !3324)
!3340 = !DILocation(line: 591, column: 23, scope: !3324)
!3341 = !DILocation(line: 591, column: 48, scope: !3308)
!3342 = !DILocation(line: 591, column: 51, scope: !3308)
!3343 = !DILocation(line: 591, column: 59, scope: !3308)
!3344 = !DILocation(line: 591, column: 26, scope: !3308)
!3345 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !3307)
!3346 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !3307)
!3347 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !3307)
!3348 = !DILocation(line: 591, column: 23, scope: !3308)
!3349 = !DILocation(line: 591, column: 5, scope: !3331)
!3350 = !DILocation(line: 592, column: 10, scope: !3305)
!3351 = !DILocation(line: 591, column: 5, scope: !3352)
!3352 = !DILexicalBlockFile(scope: !3305, file: !1059, discriminator: 4)
!3353 = distinct !{!3353, !3336}
!3354 = !DILocation(line: 593, column: 12, scope: !3305)
!3355 = !DILocation(line: 593, column: 5, scope: !3305)
!3356 = distinct !DISubprogram(name: "ff_hevc_sao_offset_sign_decode", scope: !1059, file: !1059, line: 596, type: !2953, isLocal: false, isDefinition: true, scopeLine: 597, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3357 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !3358)
!3358 = distinct !DILocation(line: 598, column: 12, scope: !3356)
!3359 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !3358)
!3360 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !3358)
!3361 = !DILocalVariable(name: "s", arg: 1, scope: !3356, file: !1059, line: 596, type: !1062)
!3362 = !DILocation(line: 596, column: 49, scope: !3356)
!3363 = !DILocation(line: 598, column: 34, scope: !3356)
!3364 = !DILocation(line: 598, column: 37, scope: !3356)
!3365 = !DILocation(line: 598, column: 45, scope: !3356)
!3366 = !DILocation(line: 598, column: 12, scope: !3356)
!3367 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !3358)
!3368 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !3358)
!3369 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !3358)
!3370 = !DILocation(line: 598, column: 5, scope: !3356)
!3371 = distinct !DISubprogram(name: "ff_hevc_sao_eo_class_decode", scope: !1059, file: !1059, line: 601, type: !2953, isLocal: false, isDefinition: true, scopeLine: 602, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3372 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !3373)
!3373 = distinct !DILocation(line: 604, column: 12, scope: !3371)
!3374 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !3373)
!3375 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !3373)
!3376 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !3377)
!3377 = distinct !DILocation(line: 603, column: 15, scope: !3371)
!3378 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !3377)
!3379 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !3377)
!3380 = !DILocalVariable(name: "s", arg: 1, scope: !3371, file: !1059, line: 601, type: !1062)
!3381 = !DILocation(line: 601, column: 46, scope: !3371)
!3382 = !DILocalVariable(name: "ret", scope: !3371, file: !1059, line: 603, type: !1043)
!3383 = !DILocation(line: 603, column: 9, scope: !3371)
!3384 = !DILocation(line: 603, column: 37, scope: !3371)
!3385 = !DILocation(line: 603, column: 40, scope: !3371)
!3386 = !DILocation(line: 603, column: 48, scope: !3371)
!3387 = !DILocation(line: 603, column: 15, scope: !3371)
!3388 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !3377)
!3389 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !3377)
!3390 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !3377)
!3391 = !DILocation(line: 603, column: 52, scope: !3371)
!3392 = !DILocation(line: 604, column: 34, scope: !3371)
!3393 = !DILocation(line: 604, column: 37, scope: !3371)
!3394 = !DILocation(line: 604, column: 45, scope: !3371)
!3395 = !DILocation(line: 604, column: 12, scope: !3371)
!3396 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !3373)
!3397 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !3373)
!3398 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !3373)
!3399 = !DILocation(line: 604, column: 9, scope: !3371)
!3400 = !DILocation(line: 605, column: 12, scope: !3371)
!3401 = !DILocation(line: 605, column: 5, scope: !3371)
!3402 = distinct !DISubprogram(name: "ff_hevc_end_of_slice_flag_decode", scope: !1059, file: !1059, line: 608, type: !2953, isLocal: false, isDefinition: true, scopeLine: 609, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3403 = !DILocalVariable(name: "s", arg: 1, scope: !3402, file: !1059, line: 608, type: !1062)
!3404 = !DILocation(line: 608, column: 51, scope: !3402)
!3405 = !DILocation(line: 610, column: 33, scope: !3402)
!3406 = !DILocation(line: 610, column: 36, scope: !3402)
!3407 = !DILocation(line: 610, column: 44, scope: !3402)
!3408 = !DILocation(line: 610, column: 12, scope: !3402)
!3409 = !DILocation(line: 610, column: 5, scope: !3402)
!3410 = distinct !DISubprogram(name: "ff_hevc_cu_transquant_bypass_flag_decode", scope: !1059, file: !1059, line: 613, type: !2953, isLocal: false, isDefinition: true, scopeLine: 614, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3411 = !DILocalVariable(name: "s", arg: 1, scope: !3410, file: !1059, line: 613, type: !1062)
!3412 = !DILocation(line: 613, column: 59, scope: !3410)
!3413 = !DILocation(line: 615, column: 23, scope: !3410)
!3414 = !DILocation(line: 615, column: 26, scope: !3410)
!3415 = !DILocation(line: 615, column: 34, scope: !3410)
!3416 = !DILocation(line: 615, column: 62, scope: !3410)
!3417 = !DILocation(line: 615, column: 39, scope: !3410)
!3418 = !DILocation(line: 615, column: 42, scope: !3410)
!3419 = !DILocation(line: 615, column: 50, scope: !3410)
!3420 = !DILocation(line: 615, column: 12, scope: !3410)
!3421 = !DILocation(line: 615, column: 5, scope: !3410)
!3422 = distinct !DISubprogram(name: "ff_hevc_skip_flag_decode", scope: !1059, file: !1059, line: 618, type: !3423, isLocal: false, isDefinition: true, scopeLine: 619, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3423 = !DISubroutineType(types: !3424)
!3424 = !{!1043, !1062, !1043, !1043, !1043, !1043}
!3425 = !DILocalVariable(name: "a", arg: 1, scope: !3426, file: !2987, line: 241, type: !1044)
!3426 = distinct !DISubprogram(name: "av_mod_uintp2_c", scope: !2987, file: !2987, line: 241, type: !3427, isLocal: true, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!1044, !1044, !1044}
!3429 = !DILocation(line: 241, column: 103, scope: !3426, inlinedAt: !3430)
!3430 = distinct !DILocation(line: 623, column: 15, scope: !3422)
!3431 = !DILocalVariable(name: "p", arg: 2, scope: !3426, file: !2987, line: 241, type: !1044)
!3432 = !DILocation(line: 241, column: 115, scope: !3426, inlinedAt: !3430)
!3433 = !DILocation(line: 241, column: 103, scope: !3426, inlinedAt: !3434)
!3434 = distinct !DILocation(line: 622, column: 15, scope: !3422)
!3435 = !DILocation(line: 241, column: 115, scope: !3426, inlinedAt: !3434)
!3436 = !DILocalVariable(name: "s", arg: 1, scope: !3422, file: !1059, line: 618, type: !1062)
!3437 = !DILocation(line: 618, column: 43, scope: !3422)
!3438 = !DILocalVariable(name: "x0", arg: 2, scope: !3422, file: !1059, line: 618, type: !1043)
!3439 = !DILocation(line: 618, column: 50, scope: !3422)
!3440 = !DILocalVariable(name: "y0", arg: 3, scope: !3422, file: !1059, line: 618, type: !1043)
!3441 = !DILocation(line: 618, column: 58, scope: !3422)
!3442 = !DILocalVariable(name: "x_cb", arg: 4, scope: !3422, file: !1059, line: 618, type: !1043)
!3443 = !DILocation(line: 618, column: 66, scope: !3422)
!3444 = !DILocalVariable(name: "y_cb", arg: 5, scope: !3422, file: !1059, line: 618, type: !1043)
!3445 = !DILocation(line: 618, column: 76, scope: !3422)
!3446 = !DILocalVariable(name: "min_cb_width", scope: !3422, file: !1059, line: 620, type: !1043)
!3447 = !DILocation(line: 620, column: 9, scope: !3422)
!3448 = !DILocation(line: 620, column: 24, scope: !3422)
!3449 = !DILocation(line: 620, column: 27, scope: !3422)
!3450 = !DILocation(line: 620, column: 30, scope: !3422)
!3451 = !DILocation(line: 620, column: 35, scope: !3422)
!3452 = !DILocalVariable(name: "inc", scope: !3422, file: !1059, line: 621, type: !1043)
!3453 = !DILocation(line: 621, column: 9, scope: !3422)
!3454 = !DILocalVariable(name: "x0b", scope: !3422, file: !1059, line: 622, type: !1043)
!3455 = !DILocation(line: 622, column: 9, scope: !3422)
!3456 = !DILocation(line: 622, column: 31, scope: !3422)
!3457 = !DILocation(line: 622, column: 35, scope: !3422)
!3458 = !DILocation(line: 622, column: 38, scope: !3422)
!3459 = !DILocation(line: 622, column: 41, scope: !3422)
!3460 = !DILocation(line: 622, column: 46, scope: !3422)
!3461 = !DILocation(line: 622, column: 15, scope: !3422)
!3462 = !DILocation(line: 243, column: 12, scope: !3426, inlinedAt: !3434)
!3463 = !DILocation(line: 243, column: 23, scope: !3426, inlinedAt: !3434)
!3464 = !DILocation(line: 243, column: 20, scope: !3426, inlinedAt: !3434)
!3465 = !DILocation(line: 243, column: 26, scope: !3426, inlinedAt: !3434)
!3466 = !DILocation(line: 243, column: 14, scope: !3426, inlinedAt: !3434)
!3467 = !DILocalVariable(name: "y0b", scope: !3422, file: !1059, line: 623, type: !1043)
!3468 = !DILocation(line: 623, column: 9, scope: !3422)
!3469 = !DILocation(line: 623, column: 31, scope: !3422)
!3470 = !DILocation(line: 623, column: 35, scope: !3422)
!3471 = !DILocation(line: 623, column: 38, scope: !3422)
!3472 = !DILocation(line: 623, column: 41, scope: !3422)
!3473 = !DILocation(line: 623, column: 46, scope: !3422)
!3474 = !DILocation(line: 623, column: 15, scope: !3422)
!3475 = !DILocation(line: 243, column: 12, scope: !3426, inlinedAt: !3430)
!3476 = !DILocation(line: 243, column: 23, scope: !3426, inlinedAt: !3430)
!3477 = !DILocation(line: 243, column: 20, scope: !3426, inlinedAt: !3430)
!3478 = !DILocation(line: 243, column: 26, scope: !3426, inlinedAt: !3430)
!3479 = !DILocation(line: 243, column: 14, scope: !3426, inlinedAt: !3430)
!3480 = !DILocation(line: 625, column: 9, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3422, file: !1059, line: 625, column: 9)
!3482 = !DILocation(line: 625, column: 12, scope: !3481)
!3483 = !DILocation(line: 625, column: 20, scope: !3481)
!3484 = !DILocation(line: 625, column: 34, scope: !3481)
!3485 = !DILocation(line: 625, column: 37, scope: !3486)
!3486 = !DILexicalBlockFile(scope: !3481, file: !1059, discriminator: 1)
!3487 = !DILocation(line: 625, column: 9, scope: !3486)
!3488 = !DILocation(line: 626, column: 34, scope: !3481)
!3489 = !DILocation(line: 626, column: 42, scope: !3481)
!3490 = !DILocation(line: 626, column: 40, scope: !3481)
!3491 = !DILocation(line: 626, column: 58, scope: !3481)
!3492 = !DILocation(line: 626, column: 63, scope: !3481)
!3493 = !DILocation(line: 626, column: 55, scope: !3481)
!3494 = !DILocation(line: 626, column: 18, scope: !3481)
!3495 = !DILocation(line: 626, column: 19, scope: !3481)
!3496 = !DILocation(line: 626, column: 22, scope: !3481)
!3497 = !DILocation(line: 626, column: 16, scope: !3481)
!3498 = !DILocation(line: 626, column: 15, scope: !3481)
!3499 = !DILocation(line: 626, column: 13, scope: !3481)
!3500 = !DILocation(line: 626, column: 9, scope: !3481)
!3501 = !DILocation(line: 627, column: 9, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3422, file: !1059, line: 627, column: 9)
!3503 = !DILocation(line: 627, column: 12, scope: !3502)
!3504 = !DILocation(line: 627, column: 20, scope: !3502)
!3505 = !DILocation(line: 627, column: 32, scope: !3502)
!3506 = !DILocation(line: 627, column: 35, scope: !3507)
!3507 = !DILexicalBlockFile(scope: !3502, file: !1059, discriminator: 1)
!3508 = !DILocation(line: 627, column: 9, scope: !3507)
!3509 = !DILocation(line: 628, column: 35, scope: !3502)
!3510 = !DILocation(line: 628, column: 40, scope: !3502)
!3511 = !DILocation(line: 628, column: 47, scope: !3502)
!3512 = !DILocation(line: 628, column: 45, scope: !3502)
!3513 = !DILocation(line: 628, column: 63, scope: !3502)
!3514 = !DILocation(line: 628, column: 60, scope: !3502)
!3515 = !DILocation(line: 628, column: 19, scope: !3502)
!3516 = !DILocation(line: 628, column: 20, scope: !3502)
!3517 = !DILocation(line: 628, column: 23, scope: !3502)
!3518 = !DILocation(line: 628, column: 17, scope: !3502)
!3519 = !DILocation(line: 628, column: 16, scope: !3502)
!3520 = !DILocation(line: 628, column: 13, scope: !3502)
!3521 = !DILocation(line: 628, column: 9, scope: !3502)
!3522 = !DILocation(line: 630, column: 23, scope: !3422)
!3523 = !DILocation(line: 630, column: 26, scope: !3422)
!3524 = !DILocation(line: 630, column: 34, scope: !3422)
!3525 = !DILocation(line: 630, column: 62, scope: !3422)
!3526 = !DILocation(line: 630, column: 87, scope: !3422)
!3527 = !DILocation(line: 630, column: 85, scope: !3422)
!3528 = !DILocation(line: 630, column: 39, scope: !3422)
!3529 = !DILocation(line: 630, column: 42, scope: !3422)
!3530 = !DILocation(line: 630, column: 50, scope: !3422)
!3531 = !DILocation(line: 630, column: 12, scope: !3422)
!3532 = !DILocation(line: 630, column: 5, scope: !3422)
!3533 = distinct !DISubprogram(name: "ff_hevc_cu_qp_delta_abs", scope: !1059, file: !1059, line: 633, type: !2953, isLocal: false, isDefinition: true, scopeLine: 634, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3534 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !3535)
!3535 = distinct !DILocation(line: 655, column: 27, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !1059, line: 643, column: 26)
!3537 = distinct !DILexicalBlock(scope: !3533, file: !1059, line: 643, column: 9)
!3538 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !3535)
!3539 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !3535)
!3540 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !3541)
!3541 = distinct !DILocation(line: 645, column: 26, scope: !3542)
!3542 = !DILexicalBlockFile(scope: !3536, file: !1059, discriminator: 2)
!3543 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !3541)
!3544 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !3541)
!3545 = !DILocalVariable(name: "s", arg: 1, scope: !3533, file: !1059, line: 633, type: !1062)
!3546 = !DILocation(line: 633, column: 42, scope: !3533)
!3547 = !DILocalVariable(name: "prefix_val", scope: !3533, file: !1059, line: 635, type: !1043)
!3548 = !DILocation(line: 635, column: 9, scope: !3533)
!3549 = !DILocalVariable(name: "suffix_val", scope: !3533, file: !1059, line: 636, type: !1043)
!3550 = !DILocation(line: 636, column: 9, scope: !3533)
!3551 = !DILocalVariable(name: "inc", scope: !3533, file: !1059, line: 637, type: !1043)
!3552 = !DILocation(line: 637, column: 9, scope: !3533)
!3553 = !DILocation(line: 639, column: 5, scope: !3533)
!3554 = !DILocation(line: 639, column: 12, scope: !3555)
!3555 = !DILexicalBlockFile(scope: !3533, file: !1059, discriminator: 1)
!3556 = !DILocation(line: 639, column: 23, scope: !3555)
!3557 = !DILocation(line: 639, column: 27, scope: !3555)
!3558 = !DILocation(line: 639, column: 41, scope: !3559)
!3559 = !DILexicalBlockFile(scope: !3533, file: !1059, discriminator: 2)
!3560 = !DILocation(line: 639, column: 44, scope: !3559)
!3561 = !DILocation(line: 639, column: 52, scope: !3559)
!3562 = !DILocation(line: 639, column: 80, scope: !3559)
!3563 = !DILocation(line: 639, column: 107, scope: !3559)
!3564 = !DILocation(line: 639, column: 105, scope: !3559)
!3565 = !DILocation(line: 639, column: 57, scope: !3559)
!3566 = !DILocation(line: 639, column: 60, scope: !3559)
!3567 = !DILocation(line: 639, column: 68, scope: !3559)
!3568 = !DILocation(line: 639, column: 30, scope: !3559)
!3569 = !DILocation(line: 639, column: 27, scope: !3559)
!3570 = !DILocation(line: 639, column: 5, scope: !3571)
!3571 = !DILexicalBlockFile(scope: !3533, file: !1059, discriminator: 3)
!3572 = !DILocation(line: 640, column: 19, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3533, file: !1059, line: 639, column: 114)
!3574 = !DILocation(line: 641, column: 13, scope: !3573)
!3575 = !DILocation(line: 639, column: 5, scope: !3576)
!3576 = !DILexicalBlockFile(scope: !3533, file: !1059, discriminator: 4)
!3577 = distinct !{!3577, !3553}
!3578 = !DILocation(line: 643, column: 9, scope: !3537)
!3579 = !DILocation(line: 643, column: 20, scope: !3537)
!3580 = !DILocation(line: 643, column: 9, scope: !3533)
!3581 = !DILocalVariable(name: "k", scope: !3536, file: !1059, line: 644, type: !1043)
!3582 = !DILocation(line: 644, column: 13, scope: !3536)
!3583 = !DILocation(line: 645, column: 9, scope: !3536)
!3584 = !DILocation(line: 645, column: 16, scope: !3585)
!3585 = !DILexicalBlockFile(scope: !3536, file: !1059, discriminator: 1)
!3586 = !DILocation(line: 645, column: 18, scope: !3585)
!3587 = !DILocation(line: 645, column: 23, scope: !3585)
!3588 = !DILocation(line: 645, column: 48, scope: !3542)
!3589 = !DILocation(line: 645, column: 51, scope: !3542)
!3590 = !DILocation(line: 645, column: 59, scope: !3542)
!3591 = !DILocation(line: 645, column: 26, scope: !3542)
!3592 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !3541)
!3593 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !3541)
!3594 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !3541)
!3595 = !DILocation(line: 645, column: 23, scope: !3542)
!3596 = !DILocation(line: 645, column: 9, scope: !3597)
!3597 = !DILexicalBlockFile(scope: !3536, file: !1059, discriminator: 3)
!3598 = !DILocation(line: 646, column: 32, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3536, file: !1059, line: 645, column: 64)
!3600 = !DILocation(line: 646, column: 29, scope: !3599)
!3601 = !DILocation(line: 646, column: 24, scope: !3599)
!3602 = !DILocation(line: 647, column: 14, scope: !3599)
!3603 = !DILocation(line: 645, column: 9, scope: !3604)
!3604 = !DILexicalBlockFile(scope: !3536, file: !1059, discriminator: 4)
!3605 = distinct !{!3605, !3583}
!3606 = !DILocation(line: 649, column: 13, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3536, file: !1059, line: 649, column: 13)
!3608 = !DILocation(line: 649, column: 15, scope: !3607)
!3609 = !DILocation(line: 649, column: 13, scope: !3536)
!3610 = !DILocation(line: 650, column: 20, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3607, file: !1059, line: 649, column: 22)
!3612 = !DILocation(line: 650, column: 23, scope: !3611)
!3613 = !DILocation(line: 650, column: 58, scope: !3611)
!3614 = !DILocation(line: 650, column: 13, scope: !3611)
!3615 = !DILocation(line: 651, column: 13, scope: !3611)
!3616 = !DILocation(line: 654, column: 9, scope: !3536)
!3617 = !DILocation(line: 654, column: 17, scope: !3585)
!3618 = !DILocation(line: 654, column: 9, scope: !3585)
!3619 = !DILocation(line: 655, column: 49, scope: !3536)
!3620 = !DILocation(line: 655, column: 52, scope: !3536)
!3621 = !DILocation(line: 655, column: 60, scope: !3536)
!3622 = !DILocation(line: 655, column: 27, scope: !3536)
!3623 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !3535)
!3624 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !3535)
!3625 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !3535)
!3626 = !DILocation(line: 655, column: 67, scope: !3536)
!3627 = !DILocation(line: 655, column: 64, scope: !3536)
!3628 = !DILocation(line: 655, column: 24, scope: !3536)
!3629 = !DILocation(line: 654, column: 9, scope: !3542)
!3630 = distinct !{!3630, !3616}
!3631 = !DILocation(line: 656, column: 5, scope: !3536)
!3632 = !DILocation(line: 657, column: 12, scope: !3533)
!3633 = !DILocation(line: 657, column: 25, scope: !3533)
!3634 = !DILocation(line: 657, column: 23, scope: !3533)
!3635 = !DILocation(line: 657, column: 5, scope: !3533)
!3636 = !DILocation(line: 658, column: 1, scope: !3533)
!3637 = distinct !DISubprogram(name: "ff_hevc_cu_qp_delta_sign_flag", scope: !1059, file: !1059, line: 660, type: !2953, isLocal: false, isDefinition: true, scopeLine: 661, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3638 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !3639)
!3639 = distinct !DILocation(line: 662, column: 12, scope: !3637)
!3640 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !3639)
!3641 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !3639)
!3642 = !DILocalVariable(name: "s", arg: 1, scope: !3637, file: !1059, line: 660, type: !1062)
!3643 = !DILocation(line: 660, column: 48, scope: !3637)
!3644 = !DILocation(line: 662, column: 34, scope: !3637)
!3645 = !DILocation(line: 662, column: 37, scope: !3637)
!3646 = !DILocation(line: 662, column: 45, scope: !3637)
!3647 = !DILocation(line: 662, column: 12, scope: !3637)
!3648 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !3639)
!3649 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !3639)
!3650 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !3639)
!3651 = !DILocation(line: 662, column: 5, scope: !3637)
!3652 = distinct !DISubprogram(name: "ff_hevc_cu_chroma_qp_offset_flag", scope: !1059, file: !1059, line: 665, type: !2953, isLocal: false, isDefinition: true, scopeLine: 666, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3653 = !DILocalVariable(name: "s", arg: 1, scope: !3652, file: !1059, line: 665, type: !1062)
!3654 = !DILocation(line: 665, column: 51, scope: !3652)
!3655 = !DILocation(line: 667, column: 23, scope: !3652)
!3656 = !DILocation(line: 667, column: 26, scope: !3652)
!3657 = !DILocation(line: 667, column: 34, scope: !3652)
!3658 = !DILocation(line: 667, column: 62, scope: !3652)
!3659 = !DILocation(line: 667, column: 39, scope: !3652)
!3660 = !DILocation(line: 667, column: 42, scope: !3652)
!3661 = !DILocation(line: 667, column: 50, scope: !3652)
!3662 = !DILocation(line: 667, column: 12, scope: !3652)
!3663 = !DILocation(line: 667, column: 5, scope: !3652)
!3664 = distinct !DISubprogram(name: "ff_hevc_cu_chroma_qp_offset_idx", scope: !1059, file: !1059, line: 670, type: !2953, isLocal: false, isDefinition: true, scopeLine: 671, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3665 = !DILocalVariable(name: "s", arg: 1, scope: !3664, file: !1059, line: 670, type: !1062)
!3666 = !DILocation(line: 670, column: 50, scope: !3664)
!3667 = !DILocalVariable(name: "c_max", scope: !3664, file: !1059, line: 672, type: !1043)
!3668 = !DILocation(line: 672, column: 9, scope: !3664)
!3669 = !DILocation(line: 672, column: 24, scope: !3664)
!3670 = !DILocation(line: 672, column: 27, scope: !3664)
!3671 = !DILocation(line: 672, column: 30, scope: !3664)
!3672 = !DILocation(line: 672, column: 35, scope: !3664)
!3673 = !DILocation(line: 672, column: 23, scope: !3664)
!3674 = !DILocation(line: 672, column: 21, scope: !3664)
!3675 = !DILocation(line: 672, column: 17, scope: !3664)
!3676 = !DILocation(line: 672, column: 17, scope: !3677)
!3677 = !DILexicalBlockFile(scope: !3664, file: !1059, discriminator: 1)
!3678 = !DILocation(line: 672, column: 78, scope: !3679)
!3679 = !DILexicalBlockFile(scope: !3664, file: !1059, discriminator: 2)
!3680 = !DILocation(line: 672, column: 81, scope: !3679)
!3681 = !DILocation(line: 672, column: 84, scope: !3679)
!3682 = !DILocation(line: 672, column: 89, scope: !3679)
!3683 = !DILocation(line: 672, column: 77, scope: !3679)
!3684 = !DILocation(line: 672, column: 17, scope: !3679)
!3685 = !DILocation(line: 672, column: 17, scope: !3686)
!3686 = !DILexicalBlockFile(scope: !3664, file: !1059, discriminator: 3)
!3687 = !DILocation(line: 672, column: 9, scope: !3686)
!3688 = !DILocalVariable(name: "i", scope: !3664, file: !1059, line: 673, type: !1043)
!3689 = !DILocation(line: 673, column: 9, scope: !3664)
!3690 = !DILocation(line: 675, column: 5, scope: !3664)
!3691 = !DILocation(line: 675, column: 12, scope: !3677)
!3692 = !DILocation(line: 675, column: 16, scope: !3677)
!3693 = !DILocation(line: 675, column: 14, scope: !3677)
!3694 = !DILocation(line: 675, column: 22, scope: !3677)
!3695 = !DILocation(line: 675, column: 36, scope: !3679)
!3696 = !DILocation(line: 675, column: 39, scope: !3679)
!3697 = !DILocation(line: 675, column: 47, scope: !3679)
!3698 = !DILocation(line: 675, column: 75, scope: !3679)
!3699 = !DILocation(line: 675, column: 52, scope: !3679)
!3700 = !DILocation(line: 675, column: 55, scope: !3679)
!3701 = !DILocation(line: 675, column: 63, scope: !3679)
!3702 = !DILocation(line: 675, column: 25, scope: !3679)
!3703 = !DILocation(line: 675, column: 22, scope: !3679)
!3704 = !DILocation(line: 675, column: 5, scope: !3686)
!3705 = !DILocation(line: 676, column: 10, scope: !3664)
!3706 = !DILocation(line: 675, column: 5, scope: !3707)
!3707 = !DILexicalBlockFile(scope: !3664, file: !1059, discriminator: 4)
!3708 = distinct !{!3708, !3690}
!3709 = !DILocation(line: 678, column: 12, scope: !3664)
!3710 = !DILocation(line: 678, column: 5, scope: !3664)
!3711 = distinct !DISubprogram(name: "ff_hevc_pred_mode_decode", scope: !1059, file: !1059, line: 681, type: !2953, isLocal: false, isDefinition: true, scopeLine: 682, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3712 = !DILocalVariable(name: "s", arg: 1, scope: !3711, file: !1059, line: 681, type: !1062)
!3713 = !DILocation(line: 681, column: 43, scope: !3711)
!3714 = !DILocation(line: 683, column: 23, scope: !3711)
!3715 = !DILocation(line: 683, column: 26, scope: !3711)
!3716 = !DILocation(line: 683, column: 34, scope: !3711)
!3717 = !DILocation(line: 683, column: 62, scope: !3711)
!3718 = !DILocation(line: 683, column: 39, scope: !3711)
!3719 = !DILocation(line: 683, column: 42, scope: !3711)
!3720 = !DILocation(line: 683, column: 50, scope: !3711)
!3721 = !DILocation(line: 683, column: 12, scope: !3711)
!3722 = !DILocation(line: 683, column: 5, scope: !3711)
!3723 = distinct !DISubprogram(name: "ff_hevc_split_coding_unit_flag_decode", scope: !1059, file: !1059, line: 686, type: !3724, isLocal: false, isDefinition: true, scopeLine: 687, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3724 = !DISubroutineType(types: !3725)
!3725 = !{!1043, !1062, !1043, !1043, !1043}
!3726 = !DILocation(line: 241, column: 103, scope: !3426, inlinedAt: !3727)
!3727 = distinct !DILocation(line: 690, column: 15, scope: !3723)
!3728 = !DILocation(line: 241, column: 115, scope: !3426, inlinedAt: !3727)
!3729 = !DILocation(line: 241, column: 103, scope: !3426, inlinedAt: !3730)
!3730 = distinct !DILocation(line: 689, column: 15, scope: !3723)
!3731 = !DILocation(line: 241, column: 115, scope: !3426, inlinedAt: !3730)
!3732 = !DILocalVariable(name: "s", arg: 1, scope: !3723, file: !1059, line: 686, type: !1062)
!3733 = !DILocation(line: 686, column: 56, scope: !3723)
!3734 = !DILocalVariable(name: "ct_depth", arg: 2, scope: !3723, file: !1059, line: 686, type: !1043)
!3735 = !DILocation(line: 686, column: 63, scope: !3723)
!3736 = !DILocalVariable(name: "x0", arg: 3, scope: !3723, file: !1059, line: 686, type: !1043)
!3737 = !DILocation(line: 686, column: 77, scope: !3723)
!3738 = !DILocalVariable(name: "y0", arg: 4, scope: !3723, file: !1059, line: 686, type: !1043)
!3739 = !DILocation(line: 686, column: 85, scope: !3723)
!3740 = !DILocalVariable(name: "inc", scope: !3723, file: !1059, line: 688, type: !1043)
!3741 = !DILocation(line: 688, column: 9, scope: !3723)
!3742 = !DILocalVariable(name: "depth_left", scope: !3723, file: !1059, line: 688, type: !1043)
!3743 = !DILocation(line: 688, column: 18, scope: !3723)
!3744 = !DILocalVariable(name: "depth_top", scope: !3723, file: !1059, line: 688, type: !1043)
!3745 = !DILocation(line: 688, column: 34, scope: !3723)
!3746 = !DILocalVariable(name: "x0b", scope: !3723, file: !1059, line: 689, type: !1043)
!3747 = !DILocation(line: 689, column: 9, scope: !3723)
!3748 = !DILocation(line: 689, column: 31, scope: !3723)
!3749 = !DILocation(line: 689, column: 35, scope: !3723)
!3750 = !DILocation(line: 689, column: 38, scope: !3723)
!3751 = !DILocation(line: 689, column: 41, scope: !3723)
!3752 = !DILocation(line: 689, column: 46, scope: !3723)
!3753 = !DILocation(line: 689, column: 15, scope: !3723)
!3754 = !DILocation(line: 243, column: 12, scope: !3426, inlinedAt: !3730)
!3755 = !DILocation(line: 243, column: 23, scope: !3426, inlinedAt: !3730)
!3756 = !DILocation(line: 243, column: 20, scope: !3426, inlinedAt: !3730)
!3757 = !DILocation(line: 243, column: 26, scope: !3426, inlinedAt: !3730)
!3758 = !DILocation(line: 243, column: 14, scope: !3426, inlinedAt: !3730)
!3759 = !DILocalVariable(name: "y0b", scope: !3723, file: !1059, line: 690, type: !1043)
!3760 = !DILocation(line: 690, column: 9, scope: !3723)
!3761 = !DILocation(line: 690, column: 31, scope: !3723)
!3762 = !DILocation(line: 690, column: 35, scope: !3723)
!3763 = !DILocation(line: 690, column: 38, scope: !3723)
!3764 = !DILocation(line: 690, column: 41, scope: !3723)
!3765 = !DILocation(line: 690, column: 46, scope: !3723)
!3766 = !DILocation(line: 690, column: 15, scope: !3723)
!3767 = !DILocation(line: 243, column: 12, scope: !3426, inlinedAt: !3727)
!3768 = !DILocation(line: 243, column: 23, scope: !3426, inlinedAt: !3727)
!3769 = !DILocation(line: 243, column: 20, scope: !3426, inlinedAt: !3727)
!3770 = !DILocation(line: 243, column: 26, scope: !3426, inlinedAt: !3727)
!3771 = !DILocation(line: 243, column: 14, scope: !3426, inlinedAt: !3727)
!3772 = !DILocalVariable(name: "x_cb", scope: !3723, file: !1059, line: 691, type: !1043)
!3773 = !DILocation(line: 691, column: 9, scope: !3723)
!3774 = !DILocation(line: 691, column: 16, scope: !3723)
!3775 = !DILocation(line: 691, column: 22, scope: !3723)
!3776 = !DILocation(line: 691, column: 25, scope: !3723)
!3777 = !DILocation(line: 691, column: 28, scope: !3723)
!3778 = !DILocation(line: 691, column: 33, scope: !3723)
!3779 = !DILocation(line: 691, column: 19, scope: !3723)
!3780 = !DILocalVariable(name: "y_cb", scope: !3723, file: !1059, line: 692, type: !1043)
!3781 = !DILocation(line: 692, column: 9, scope: !3723)
!3782 = !DILocation(line: 692, column: 16, scope: !3723)
!3783 = !DILocation(line: 692, column: 22, scope: !3723)
!3784 = !DILocation(line: 692, column: 25, scope: !3723)
!3785 = !DILocation(line: 692, column: 28, scope: !3723)
!3786 = !DILocation(line: 692, column: 33, scope: !3723)
!3787 = !DILocation(line: 692, column: 19, scope: !3723)
!3788 = !DILocation(line: 694, column: 9, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3723, file: !1059, line: 694, column: 9)
!3790 = !DILocation(line: 694, column: 12, scope: !3789)
!3791 = !DILocation(line: 694, column: 20, scope: !3789)
!3792 = !DILocation(line: 694, column: 34, scope: !3789)
!3793 = !DILocation(line: 694, column: 37, scope: !3794)
!3794 = !DILexicalBlockFile(scope: !3789, file: !1059, discriminator: 1)
!3795 = !DILocation(line: 694, column: 9, scope: !3794)
!3796 = !DILocation(line: 695, column: 39, scope: !3789)
!3797 = !DILocation(line: 695, column: 47, scope: !3789)
!3798 = !DILocation(line: 695, column: 50, scope: !3789)
!3799 = !DILocation(line: 695, column: 53, scope: !3789)
!3800 = !DILocation(line: 695, column: 58, scope: !3789)
!3801 = !DILocation(line: 695, column: 45, scope: !3789)
!3802 = !DILocation(line: 695, column: 73, scope: !3789)
!3803 = !DILocation(line: 695, column: 71, scope: !3789)
!3804 = !DILocation(line: 695, column: 78, scope: !3789)
!3805 = !DILocation(line: 695, column: 22, scope: !3789)
!3806 = !DILocation(line: 695, column: 25, scope: !3789)
!3807 = !DILocation(line: 695, column: 20, scope: !3789)
!3808 = !DILocation(line: 695, column: 9, scope: !3789)
!3809 = !DILocation(line: 696, column: 9, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3723, file: !1059, line: 696, column: 9)
!3811 = !DILocation(line: 696, column: 12, scope: !3810)
!3812 = !DILocation(line: 696, column: 20, scope: !3810)
!3813 = !DILocation(line: 696, column: 32, scope: !3810)
!3814 = !DILocation(line: 696, column: 35, scope: !3815)
!3815 = !DILexicalBlockFile(scope: !3810, file: !1059, discriminator: 1)
!3816 = !DILocation(line: 696, column: 9, scope: !3815)
!3817 = !DILocation(line: 697, column: 38, scope: !3810)
!3818 = !DILocation(line: 697, column: 43, scope: !3810)
!3819 = !DILocation(line: 697, column: 50, scope: !3810)
!3820 = !DILocation(line: 697, column: 53, scope: !3810)
!3821 = !DILocation(line: 697, column: 56, scope: !3810)
!3822 = !DILocation(line: 697, column: 61, scope: !3810)
!3823 = !DILocation(line: 697, column: 48, scope: !3810)
!3824 = !DILocation(line: 697, column: 76, scope: !3810)
!3825 = !DILocation(line: 697, column: 74, scope: !3810)
!3826 = !DILocation(line: 697, column: 21, scope: !3810)
!3827 = !DILocation(line: 697, column: 24, scope: !3810)
!3828 = !DILocation(line: 697, column: 19, scope: !3810)
!3829 = !DILocation(line: 697, column: 9, scope: !3810)
!3830 = !DILocation(line: 699, column: 13, scope: !3723)
!3831 = !DILocation(line: 699, column: 26, scope: !3723)
!3832 = !DILocation(line: 699, column: 24, scope: !3723)
!3833 = !DILocation(line: 699, column: 9, scope: !3723)
!3834 = !DILocation(line: 700, column: 13, scope: !3723)
!3835 = !DILocation(line: 700, column: 25, scope: !3723)
!3836 = !DILocation(line: 700, column: 23, scope: !3723)
!3837 = !DILocation(line: 700, column: 9, scope: !3723)
!3838 = !DILocation(line: 702, column: 23, scope: !3723)
!3839 = !DILocation(line: 702, column: 26, scope: !3723)
!3840 = !DILocation(line: 702, column: 34, scope: !3723)
!3841 = !DILocation(line: 702, column: 62, scope: !3723)
!3842 = !DILocation(line: 702, column: 100, scope: !3723)
!3843 = !DILocation(line: 702, column: 98, scope: !3723)
!3844 = !DILocation(line: 702, column: 39, scope: !3723)
!3845 = !DILocation(line: 702, column: 42, scope: !3723)
!3846 = !DILocation(line: 702, column: 50, scope: !3723)
!3847 = !DILocation(line: 702, column: 12, scope: !3723)
!3848 = !DILocation(line: 702, column: 5, scope: !3723)
!3849 = distinct !DISubprogram(name: "ff_hevc_part_mode_decode", scope: !1059, file: !1059, line: 705, type: !2751, isLocal: false, isDefinition: true, scopeLine: 706, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!3850 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !3851)
!3851 = distinct !DILocation(line: 737, column: 9, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3849, file: !1059, line: 737, column: 9)
!3853 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !3851)
!3854 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !3851)
!3855 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !3856)
!3856 = distinct !DILocation(line: 730, column: 13, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !1059, line: 730, column: 13)
!3858 = distinct !DILexicalBlock(scope: !3859, file: !1059, line: 727, column: 89)
!3859 = distinct !DILexicalBlock(scope: !3849, file: !1059, line: 727, column: 9)
!3860 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !3856)
!3861 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !3856)
!3862 = !DILocalVariable(name: "s", arg: 1, scope: !3849, file: !1059, line: 705, type: !1062)
!3863 = !DILocation(line: 705, column: 43, scope: !3849)
!3864 = !DILocalVariable(name: "log2_cb_size", arg: 2, scope: !3849, file: !1059, line: 705, type: !1043)
!3865 = !DILocation(line: 705, column: 50, scope: !3849)
!3866 = !DILocation(line: 707, column: 20, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3849, file: !1059, line: 707, column: 9)
!3868 = !DILocation(line: 707, column: 23, scope: !3867)
!3869 = !DILocation(line: 707, column: 31, scope: !3867)
!3870 = !DILocation(line: 707, column: 59, scope: !3867)
!3871 = !DILocation(line: 707, column: 36, scope: !3867)
!3872 = !DILocation(line: 707, column: 39, scope: !3867)
!3873 = !DILocation(line: 707, column: 47, scope: !3867)
!3874 = !DILocation(line: 707, column: 9, scope: !3867)
!3875 = !DILocation(line: 707, column: 9, scope: !3849)
!3876 = !DILocation(line: 708, column: 9, scope: !3867)
!3877 = !DILocation(line: 709, column: 9, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3849, file: !1059, line: 709, column: 9)
!3879 = !DILocation(line: 709, column: 25, scope: !3878)
!3880 = !DILocation(line: 709, column: 28, scope: !3878)
!3881 = !DILocation(line: 709, column: 31, scope: !3878)
!3882 = !DILocation(line: 709, column: 36, scope: !3878)
!3883 = !DILocation(line: 709, column: 22, scope: !3878)
!3884 = !DILocation(line: 709, column: 9, scope: !3849)
!3885 = !DILocation(line: 710, column: 13, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !1059, line: 710, column: 13)
!3887 = distinct !DILexicalBlock(scope: !3878, file: !1059, line: 709, column: 54)
!3888 = !DILocation(line: 710, column: 16, scope: !3886)
!3889 = !DILocation(line: 710, column: 24, scope: !3886)
!3890 = !DILocation(line: 710, column: 27, scope: !3886)
!3891 = !DILocation(line: 710, column: 37, scope: !3886)
!3892 = !DILocation(line: 710, column: 13, scope: !3887)
!3893 = !DILocation(line: 711, column: 13, scope: !3886)
!3894 = !DILocation(line: 712, column: 24, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3887, file: !1059, line: 712, column: 13)
!3896 = !DILocation(line: 712, column: 27, scope: !3895)
!3897 = !DILocation(line: 712, column: 35, scope: !3895)
!3898 = !DILocation(line: 712, column: 63, scope: !3895)
!3899 = !DILocation(line: 712, column: 86, scope: !3895)
!3900 = !DILocation(line: 712, column: 40, scope: !3895)
!3901 = !DILocation(line: 712, column: 43, scope: !3895)
!3902 = !DILocation(line: 712, column: 51, scope: !3895)
!3903 = !DILocation(line: 712, column: 13, scope: !3895)
!3904 = !DILocation(line: 712, column: 13, scope: !3887)
!3905 = !DILocation(line: 713, column: 13, scope: !3895)
!3906 = !DILocation(line: 714, column: 13, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3887, file: !1059, line: 714, column: 13)
!3908 = !DILocation(line: 714, column: 26, scope: !3907)
!3909 = !DILocation(line: 714, column: 13, scope: !3887)
!3910 = !DILocation(line: 715, column: 13, scope: !3907)
!3911 = !DILocation(line: 716, column: 24, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3887, file: !1059, line: 716, column: 13)
!3913 = !DILocation(line: 716, column: 27, scope: !3912)
!3914 = !DILocation(line: 716, column: 35, scope: !3912)
!3915 = !DILocation(line: 716, column: 63, scope: !3912)
!3916 = !DILocation(line: 716, column: 86, scope: !3912)
!3917 = !DILocation(line: 716, column: 40, scope: !3912)
!3918 = !DILocation(line: 716, column: 43, scope: !3912)
!3919 = !DILocation(line: 716, column: 51, scope: !3912)
!3920 = !DILocation(line: 716, column: 13, scope: !3912)
!3921 = !DILocation(line: 716, column: 13, scope: !3887)
!3922 = !DILocation(line: 717, column: 13, scope: !3912)
!3923 = !DILocation(line: 718, column: 9, scope: !3887)
!3924 = !DILocation(line: 721, column: 10, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3849, file: !1059, line: 721, column: 9)
!3926 = !DILocation(line: 721, column: 13, scope: !3925)
!3927 = !DILocation(line: 721, column: 16, scope: !3925)
!3928 = !DILocation(line: 721, column: 21, scope: !3925)
!3929 = !DILocation(line: 721, column: 9, scope: !3849)
!3930 = !DILocation(line: 722, column: 24, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !1059, line: 722, column: 13)
!3932 = distinct !DILexicalBlock(scope: !3925, file: !1059, line: 721, column: 39)
!3933 = !DILocation(line: 722, column: 27, scope: !3931)
!3934 = !DILocation(line: 722, column: 35, scope: !3931)
!3935 = !DILocation(line: 722, column: 63, scope: !3931)
!3936 = !DILocation(line: 722, column: 86, scope: !3931)
!3937 = !DILocation(line: 722, column: 40, scope: !3931)
!3938 = !DILocation(line: 722, column: 43, scope: !3931)
!3939 = !DILocation(line: 722, column: 51, scope: !3931)
!3940 = !DILocation(line: 722, column: 13, scope: !3931)
!3941 = !DILocation(line: 722, column: 13, scope: !3932)
!3942 = !DILocation(line: 723, column: 13, scope: !3931)
!3943 = !DILocation(line: 724, column: 9, scope: !3932)
!3944 = !DILocation(line: 727, column: 20, scope: !3859)
!3945 = !DILocation(line: 727, column: 23, scope: !3859)
!3946 = !DILocation(line: 727, column: 31, scope: !3859)
!3947 = !DILocation(line: 727, column: 59, scope: !3859)
!3948 = !DILocation(line: 727, column: 82, scope: !3859)
!3949 = !DILocation(line: 727, column: 36, scope: !3859)
!3950 = !DILocation(line: 727, column: 39, scope: !3859)
!3951 = !DILocation(line: 727, column: 47, scope: !3859)
!3952 = !DILocation(line: 727, column: 9, scope: !3859)
!3953 = !DILocation(line: 727, column: 9, scope: !3849)
!3954 = !DILocation(line: 728, column: 24, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3858, file: !1059, line: 728, column: 13)
!3956 = !DILocation(line: 728, column: 27, scope: !3955)
!3957 = !DILocation(line: 728, column: 35, scope: !3955)
!3958 = !DILocation(line: 728, column: 63, scope: !3955)
!3959 = !DILocation(line: 728, column: 86, scope: !3955)
!3960 = !DILocation(line: 728, column: 40, scope: !3955)
!3961 = !DILocation(line: 728, column: 43, scope: !3955)
!3962 = !DILocation(line: 728, column: 51, scope: !3955)
!3963 = !DILocation(line: 728, column: 13, scope: !3955)
!3964 = !DILocation(line: 728, column: 13, scope: !3858)
!3965 = !DILocation(line: 729, column: 13, scope: !3955)
!3966 = !DILocation(line: 730, column: 35, scope: !3857)
!3967 = !DILocation(line: 730, column: 38, scope: !3857)
!3968 = !DILocation(line: 730, column: 46, scope: !3857)
!3969 = !DILocation(line: 730, column: 13, scope: !3857)
!3970 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !3856)
!3971 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !3856)
!3972 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !3856)
!3973 = !DILocation(line: 730, column: 13, scope: !3858)
!3974 = !DILocation(line: 731, column: 13, scope: !3857)
!3975 = !DILocation(line: 732, column: 9, scope: !3858)
!3976 = !DILocation(line: 735, column: 20, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3849, file: !1059, line: 735, column: 9)
!3978 = !DILocation(line: 735, column: 23, scope: !3977)
!3979 = !DILocation(line: 735, column: 31, scope: !3977)
!3980 = !DILocation(line: 735, column: 59, scope: !3977)
!3981 = !DILocation(line: 735, column: 82, scope: !3977)
!3982 = !DILocation(line: 735, column: 36, scope: !3977)
!3983 = !DILocation(line: 735, column: 39, scope: !3977)
!3984 = !DILocation(line: 735, column: 47, scope: !3977)
!3985 = !DILocation(line: 735, column: 9, scope: !3977)
!3986 = !DILocation(line: 735, column: 9, scope: !3849)
!3987 = !DILocation(line: 736, column: 9, scope: !3977)
!3988 = !DILocation(line: 737, column: 31, scope: !3852)
!3989 = !DILocation(line: 737, column: 34, scope: !3852)
!3990 = !DILocation(line: 737, column: 42, scope: !3852)
!3991 = !DILocation(line: 737, column: 9, scope: !3852)
!3992 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !3851)
!3993 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !3851)
!3994 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !3851)
!3995 = !DILocation(line: 737, column: 9, scope: !3849)
!3996 = !DILocation(line: 738, column: 9, scope: !3852)
!3997 = !DILocation(line: 739, column: 5, scope: !3849)
!3998 = !DILocation(line: 740, column: 1, scope: !3849)
!3999 = distinct !DISubprogram(name: "ff_hevc_pcm_flag_decode", scope: !1059, file: !1059, line: 742, type: !2953, isLocal: false, isDefinition: true, scopeLine: 743, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4000 = !DILocalVariable(name: "s", arg: 1, scope: !3999, file: !1059, line: 742, type: !1062)
!4001 = !DILocation(line: 742, column: 42, scope: !3999)
!4002 = !DILocation(line: 744, column: 33, scope: !3999)
!4003 = !DILocation(line: 744, column: 36, scope: !3999)
!4004 = !DILocation(line: 744, column: 44, scope: !3999)
!4005 = !DILocation(line: 744, column: 12, scope: !3999)
!4006 = !DILocation(line: 744, column: 5, scope: !3999)
!4007 = distinct !DISubprogram(name: "ff_hevc_prev_intra_luma_pred_flag_decode", scope: !1059, file: !1059, line: 747, type: !2953, isLocal: false, isDefinition: true, scopeLine: 748, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4008 = !DILocalVariable(name: "s", arg: 1, scope: !4007, file: !1059, line: 747, type: !1062)
!4009 = !DILocation(line: 747, column: 59, scope: !4007)
!4010 = !DILocation(line: 749, column: 23, scope: !4007)
!4011 = !DILocation(line: 749, column: 26, scope: !4007)
!4012 = !DILocation(line: 749, column: 34, scope: !4007)
!4013 = !DILocation(line: 749, column: 62, scope: !4007)
!4014 = !DILocation(line: 749, column: 39, scope: !4007)
!4015 = !DILocation(line: 749, column: 42, scope: !4007)
!4016 = !DILocation(line: 749, column: 50, scope: !4007)
!4017 = !DILocation(line: 749, column: 12, scope: !4007)
!4018 = !DILocation(line: 749, column: 5, scope: !4007)
!4019 = distinct !DISubprogram(name: "ff_hevc_mpm_idx_decode", scope: !1059, file: !1059, line: 752, type: !2953, isLocal: false, isDefinition: true, scopeLine: 753, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4020 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4021)
!4021 = distinct !DILocation(line: 755, column: 21, scope: !4022)
!4022 = !DILexicalBlockFile(scope: !4019, file: !1059, discriminator: 2)
!4023 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4021)
!4024 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4021)
!4025 = !DILocalVariable(name: "s", arg: 1, scope: !4019, file: !1059, line: 752, type: !1062)
!4026 = !DILocation(line: 752, column: 41, scope: !4019)
!4027 = !DILocalVariable(name: "i", scope: !4019, file: !1059, line: 754, type: !1043)
!4028 = !DILocation(line: 754, column: 9, scope: !4019)
!4029 = !DILocation(line: 755, column: 5, scope: !4019)
!4030 = !DILocation(line: 755, column: 12, scope: !4031)
!4031 = !DILexicalBlockFile(scope: !4019, file: !1059, discriminator: 1)
!4032 = !DILocation(line: 755, column: 14, scope: !4031)
!4033 = !DILocation(line: 755, column: 18, scope: !4031)
!4034 = !DILocation(line: 755, column: 43, scope: !4022)
!4035 = !DILocation(line: 755, column: 46, scope: !4022)
!4036 = !DILocation(line: 755, column: 54, scope: !4022)
!4037 = !DILocation(line: 755, column: 21, scope: !4022)
!4038 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4021)
!4039 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4021)
!4040 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4021)
!4041 = !DILocation(line: 755, column: 18, scope: !4022)
!4042 = !DILocation(line: 755, column: 5, scope: !4043)
!4043 = !DILexicalBlockFile(scope: !4019, file: !1059, discriminator: 3)
!4044 = !DILocation(line: 756, column: 10, scope: !4019)
!4045 = !DILocation(line: 755, column: 5, scope: !4046)
!4046 = !DILexicalBlockFile(scope: !4019, file: !1059, discriminator: 4)
!4047 = distinct !{!4047, !4029}
!4048 = !DILocation(line: 757, column: 12, scope: !4019)
!4049 = !DILocation(line: 757, column: 5, scope: !4019)
!4050 = distinct !DISubprogram(name: "ff_hevc_rem_intra_luma_pred_mode_decode", scope: !1059, file: !1059, line: 760, type: !2953, isLocal: false, isDefinition: true, scopeLine: 761, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4051 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4052)
!4052 = distinct !DILocation(line: 766, column: 32, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4054, file: !1059, line: 765, column: 5)
!4054 = distinct !DILexicalBlock(scope: !4050, file: !1059, line: 765, column: 5)
!4055 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4052)
!4056 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4052)
!4057 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4058)
!4058 = distinct !DILocation(line: 763, column: 17, scope: !4050)
!4059 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4058)
!4060 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4058)
!4061 = !DILocalVariable(name: "s", arg: 1, scope: !4050, file: !1059, line: 760, type: !1062)
!4062 = !DILocation(line: 760, column: 58, scope: !4050)
!4063 = !DILocalVariable(name: "i", scope: !4050, file: !1059, line: 762, type: !1043)
!4064 = !DILocation(line: 762, column: 9, scope: !4050)
!4065 = !DILocalVariable(name: "value", scope: !4050, file: !1059, line: 763, type: !1043)
!4066 = !DILocation(line: 763, column: 9, scope: !4050)
!4067 = !DILocation(line: 763, column: 39, scope: !4050)
!4068 = !DILocation(line: 763, column: 42, scope: !4050)
!4069 = !DILocation(line: 763, column: 50, scope: !4050)
!4070 = !DILocation(line: 763, column: 17, scope: !4050)
!4071 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4058)
!4072 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4058)
!4073 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4058)
!4074 = !DILocation(line: 765, column: 12, scope: !4054)
!4075 = !DILocation(line: 765, column: 10, scope: !4054)
!4076 = !DILocation(line: 765, column: 17, scope: !4077)
!4077 = !DILexicalBlockFile(scope: !4053, file: !1059, discriminator: 1)
!4078 = !DILocation(line: 765, column: 19, scope: !4077)
!4079 = !DILocation(line: 765, column: 5, scope: !4077)
!4080 = !DILocation(line: 766, column: 18, scope: !4053)
!4081 = !DILocation(line: 766, column: 24, scope: !4053)
!4082 = !DILocation(line: 766, column: 54, scope: !4053)
!4083 = !DILocation(line: 766, column: 57, scope: !4053)
!4084 = !DILocation(line: 766, column: 65, scope: !4053)
!4085 = !DILocation(line: 766, column: 32, scope: !4053)
!4086 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4052)
!4087 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4052)
!4088 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4052)
!4089 = !DILocation(line: 766, column: 30, scope: !4053)
!4090 = !DILocation(line: 766, column: 15, scope: !4053)
!4091 = !DILocation(line: 766, column: 9, scope: !4053)
!4092 = !DILocation(line: 765, column: 25, scope: !4093)
!4093 = !DILexicalBlockFile(scope: !4053, file: !1059, discriminator: 2)
!4094 = !DILocation(line: 765, column: 5, scope: !4093)
!4095 = distinct !{!4095, !4096}
!4096 = !DILocation(line: 765, column: 5, scope: !4050)
!4097 = !DILocation(line: 767, column: 12, scope: !4050)
!4098 = !DILocation(line: 767, column: 5, scope: !4050)
!4099 = distinct !DISubprogram(name: "ff_hevc_intra_chroma_pred_mode_decode", scope: !1059, file: !1059, line: 770, type: !2953, isLocal: false, isDefinition: true, scopeLine: 771, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4100 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4101)
!4101 = distinct !DILocation(line: 777, column: 12, scope: !4099)
!4102 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4101)
!4103 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4101)
!4104 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4105)
!4105 = distinct !DILocation(line: 776, column: 11, scope: !4099)
!4106 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4105)
!4107 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4105)
!4108 = !DILocalVariable(name: "s", arg: 1, scope: !4099, file: !1059, line: 770, type: !1062)
!4109 = !DILocation(line: 770, column: 56, scope: !4099)
!4110 = !DILocalVariable(name: "ret", scope: !4099, file: !1059, line: 772, type: !1043)
!4111 = !DILocation(line: 772, column: 9, scope: !4099)
!4112 = !DILocation(line: 773, column: 21, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4099, file: !1059, line: 773, column: 9)
!4114 = !DILocation(line: 773, column: 24, scope: !4113)
!4115 = !DILocation(line: 773, column: 32, scope: !4113)
!4116 = !DILocation(line: 773, column: 60, scope: !4113)
!4117 = !DILocation(line: 773, column: 37, scope: !4113)
!4118 = !DILocation(line: 773, column: 40, scope: !4113)
!4119 = !DILocation(line: 773, column: 48, scope: !4113)
!4120 = !DILocation(line: 773, column: 10, scope: !4113)
!4121 = !DILocation(line: 773, column: 9, scope: !4099)
!4122 = !DILocation(line: 774, column: 9, scope: !4113)
!4123 = !DILocation(line: 776, column: 33, scope: !4099)
!4124 = !DILocation(line: 776, column: 36, scope: !4099)
!4125 = !DILocation(line: 776, column: 44, scope: !4099)
!4126 = !DILocation(line: 776, column: 11, scope: !4099)
!4127 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4105)
!4128 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4105)
!4129 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4105)
!4130 = !DILocation(line: 776, column: 48, scope: !4099)
!4131 = !DILocation(line: 776, column: 9, scope: !4099)
!4132 = !DILocation(line: 777, column: 34, scope: !4099)
!4133 = !DILocation(line: 777, column: 37, scope: !4099)
!4134 = !DILocation(line: 777, column: 45, scope: !4099)
!4135 = !DILocation(line: 777, column: 12, scope: !4099)
!4136 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4101)
!4137 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4101)
!4138 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4101)
!4139 = !DILocation(line: 777, column: 9, scope: !4099)
!4140 = !DILocation(line: 778, column: 12, scope: !4099)
!4141 = !DILocation(line: 778, column: 5, scope: !4099)
!4142 = !DILocation(line: 779, column: 1, scope: !4099)
!4143 = distinct !DISubprogram(name: "ff_hevc_merge_idx_decode", scope: !1059, file: !1059, line: 781, type: !2953, isLocal: false, isDefinition: true, scopeLine: 782, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4144 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4145)
!4145 = distinct !DILocation(line: 786, column: 50, scope: !4146)
!4146 = !DILexicalBlockFile(scope: !4147, file: !1059, discriminator: 2)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !1059, line: 785, column: 17)
!4148 = distinct !DILexicalBlock(scope: !4143, file: !1059, line: 785, column: 9)
!4149 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4145)
!4150 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4145)
!4151 = !DILocalVariable(name: "s", arg: 1, scope: !4143, file: !1059, line: 781, type: !1062)
!4152 = !DILocation(line: 781, column: 43, scope: !4143)
!4153 = !DILocalVariable(name: "i", scope: !4143, file: !1059, line: 783, type: !1043)
!4154 = !DILocation(line: 783, column: 9, scope: !4143)
!4155 = !DILocation(line: 783, column: 24, scope: !4143)
!4156 = !DILocation(line: 783, column: 27, scope: !4143)
!4157 = !DILocation(line: 783, column: 35, scope: !4143)
!4158 = !DILocation(line: 783, column: 63, scope: !4143)
!4159 = !DILocation(line: 783, column: 40, scope: !4143)
!4160 = !DILocation(line: 783, column: 43, scope: !4143)
!4161 = !DILocation(line: 783, column: 51, scope: !4143)
!4162 = !DILocation(line: 783, column: 13, scope: !4143)
!4163 = !DILocation(line: 785, column: 9, scope: !4148)
!4164 = !DILocation(line: 785, column: 11, scope: !4148)
!4165 = !DILocation(line: 785, column: 9, scope: !4143)
!4166 = !DILocation(line: 786, column: 9, scope: !4147)
!4167 = !DILocation(line: 786, column: 16, scope: !4168)
!4168 = !DILexicalBlockFile(scope: !4147, file: !1059, discriminator: 1)
!4169 = !DILocation(line: 786, column: 20, scope: !4168)
!4170 = !DILocation(line: 786, column: 23, scope: !4168)
!4171 = !DILocation(line: 786, column: 26, scope: !4168)
!4172 = !DILocation(line: 786, column: 44, scope: !4168)
!4173 = !DILocation(line: 786, column: 18, scope: !4168)
!4174 = !DILocation(line: 786, column: 47, scope: !4168)
!4175 = !DILocation(line: 786, column: 72, scope: !4146)
!4176 = !DILocation(line: 786, column: 75, scope: !4146)
!4177 = !DILocation(line: 786, column: 83, scope: !4146)
!4178 = !DILocation(line: 786, column: 50, scope: !4146)
!4179 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4145)
!4180 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4145)
!4181 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4145)
!4182 = !DILocation(line: 786, column: 47, scope: !4146)
!4183 = !DILocation(line: 786, column: 9, scope: !4184)
!4184 = !DILexicalBlockFile(scope: !4147, file: !1059, discriminator: 3)
!4185 = !DILocation(line: 787, column: 14, scope: !4147)
!4186 = !DILocation(line: 786, column: 9, scope: !4187)
!4187 = !DILexicalBlockFile(scope: !4147, file: !1059, discriminator: 4)
!4188 = distinct !{!4188, !4166}
!4189 = !DILocation(line: 788, column: 5, scope: !4147)
!4190 = !DILocation(line: 789, column: 12, scope: !4143)
!4191 = !DILocation(line: 789, column: 5, scope: !4143)
!4192 = distinct !DISubprogram(name: "ff_hevc_merge_flag_decode", scope: !1059, file: !1059, line: 792, type: !2953, isLocal: false, isDefinition: true, scopeLine: 793, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4193 = !DILocalVariable(name: "s", arg: 1, scope: !4192, file: !1059, line: 792, type: !1062)
!4194 = !DILocation(line: 792, column: 44, scope: !4192)
!4195 = !DILocation(line: 794, column: 23, scope: !4192)
!4196 = !DILocation(line: 794, column: 26, scope: !4192)
!4197 = !DILocation(line: 794, column: 34, scope: !4192)
!4198 = !DILocation(line: 794, column: 62, scope: !4192)
!4199 = !DILocation(line: 794, column: 39, scope: !4192)
!4200 = !DILocation(line: 794, column: 42, scope: !4192)
!4201 = !DILocation(line: 794, column: 50, scope: !4192)
!4202 = !DILocation(line: 794, column: 12, scope: !4192)
!4203 = !DILocation(line: 794, column: 5, scope: !4192)
!4204 = distinct !DISubprogram(name: "ff_hevc_inter_pred_idc_decode", scope: !1059, file: !1059, line: 797, type: !4205, isLocal: false, isDefinition: true, scopeLine: 798, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!1043, !1062, !1043, !1043}
!4207 = !DILocalVariable(name: "s", arg: 1, scope: !4204, file: !1059, line: 797, type: !1062)
!4208 = !DILocation(line: 797, column: 48, scope: !4204)
!4209 = !DILocalVariable(name: "nPbW", arg: 2, scope: !4204, file: !1059, line: 797, type: !1043)
!4210 = !DILocation(line: 797, column: 55, scope: !4204)
!4211 = !DILocalVariable(name: "nPbH", arg: 3, scope: !4204, file: !1059, line: 797, type: !1043)
!4212 = !DILocation(line: 797, column: 65, scope: !4204)
!4213 = !DILocation(line: 799, column: 9, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4204, file: !1059, line: 799, column: 9)
!4215 = !DILocation(line: 799, column: 16, scope: !4214)
!4216 = !DILocation(line: 799, column: 14, scope: !4214)
!4217 = !DILocation(line: 799, column: 21, scope: !4214)
!4218 = !DILocation(line: 799, column: 9, scope: !4204)
!4219 = !DILocation(line: 800, column: 27, scope: !4214)
!4220 = !DILocation(line: 800, column: 30, scope: !4214)
!4221 = !DILocation(line: 800, column: 38, scope: !4214)
!4222 = !DILocation(line: 800, column: 66, scope: !4214)
!4223 = !DILocation(line: 800, column: 94, scope: !4214)
!4224 = !DILocation(line: 800, column: 43, scope: !4214)
!4225 = !DILocation(line: 800, column: 46, scope: !4214)
!4226 = !DILocation(line: 800, column: 54, scope: !4214)
!4227 = !DILocation(line: 800, column: 16, scope: !4214)
!4228 = !DILocation(line: 800, column: 9, scope: !4214)
!4229 = !DILocation(line: 801, column: 20, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4204, file: !1059, line: 801, column: 9)
!4231 = !DILocation(line: 801, column: 23, scope: !4230)
!4232 = !DILocation(line: 801, column: 31, scope: !4230)
!4233 = !DILocation(line: 801, column: 59, scope: !4230)
!4234 = !DILocation(line: 801, column: 89, scope: !4230)
!4235 = !DILocation(line: 801, column: 92, scope: !4230)
!4236 = !DILocation(line: 801, column: 100, scope: !4230)
!4237 = !DILocation(line: 801, column: 87, scope: !4230)
!4238 = !DILocation(line: 801, column: 36, scope: !4230)
!4239 = !DILocation(line: 801, column: 39, scope: !4230)
!4240 = !DILocation(line: 801, column: 47, scope: !4230)
!4241 = !DILocation(line: 801, column: 9, scope: !4230)
!4242 = !DILocation(line: 801, column: 9, scope: !4204)
!4243 = !DILocation(line: 802, column: 9, scope: !4230)
!4244 = !DILocation(line: 804, column: 23, scope: !4204)
!4245 = !DILocation(line: 804, column: 26, scope: !4204)
!4246 = !DILocation(line: 804, column: 34, scope: !4204)
!4247 = !DILocation(line: 804, column: 62, scope: !4204)
!4248 = !DILocation(line: 804, column: 90, scope: !4204)
!4249 = !DILocation(line: 804, column: 39, scope: !4204)
!4250 = !DILocation(line: 804, column: 42, scope: !4204)
!4251 = !DILocation(line: 804, column: 50, scope: !4204)
!4252 = !DILocation(line: 804, column: 12, scope: !4204)
!4253 = !DILocation(line: 804, column: 5, scope: !4204)
!4254 = !DILocation(line: 805, column: 1, scope: !4204)
!4255 = distinct !DISubprogram(name: "ff_hevc_ref_idx_lx_decode", scope: !1059, file: !1059, line: 807, type: !2751, isLocal: false, isDefinition: true, scopeLine: 808, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4256 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4257)
!4257 = distinct !DILocation(line: 816, column: 27, scope: !4258)
!4258 = !DILexicalBlockFile(scope: !4259, file: !1059, discriminator: 2)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !1059, line: 815, column: 17)
!4260 = distinct !DILexicalBlock(scope: !4255, file: !1059, line: 815, column: 9)
!4261 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4257)
!4262 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4257)
!4263 = !DILocalVariable(name: "s", arg: 1, scope: !4255, file: !1059, line: 807, type: !1062)
!4264 = !DILocation(line: 807, column: 44, scope: !4255)
!4265 = !DILocalVariable(name: "num_ref_idx_lx", arg: 2, scope: !4255, file: !1059, line: 807, type: !1043)
!4266 = !DILocation(line: 807, column: 51, scope: !4255)
!4267 = !DILocalVariable(name: "i", scope: !4255, file: !1059, line: 809, type: !1043)
!4268 = !DILocation(line: 809, column: 9, scope: !4255)
!4269 = !DILocalVariable(name: "max", scope: !4255, file: !1059, line: 810, type: !1043)
!4270 = !DILocation(line: 810, column: 9, scope: !4255)
!4271 = !DILocation(line: 810, column: 15, scope: !4255)
!4272 = !DILocation(line: 810, column: 30, scope: !4255)
!4273 = !DILocalVariable(name: "max_ctx", scope: !4255, file: !1059, line: 811, type: !1043)
!4274 = !DILocation(line: 811, column: 9, scope: !4255)
!4275 = !DILocation(line: 811, column: 21, scope: !4255)
!4276 = !DILocation(line: 811, column: 26, scope: !4255)
!4277 = !DILocation(line: 811, column: 20, scope: !4255)
!4278 = !DILocation(line: 811, column: 20, scope: !4279)
!4279 = !DILexicalBlockFile(scope: !4255, file: !1059, discriminator: 1)
!4280 = !DILocation(line: 811, column: 41, scope: !4281)
!4281 = !DILexicalBlockFile(scope: !4255, file: !1059, discriminator: 2)
!4282 = !DILocation(line: 811, column: 20, scope: !4281)
!4283 = !DILocation(line: 811, column: 20, scope: !4284)
!4284 = !DILexicalBlockFile(scope: !4255, file: !1059, discriminator: 3)
!4285 = !DILocation(line: 811, column: 9, scope: !4284)
!4286 = !DILocation(line: 813, column: 5, scope: !4255)
!4287 = !DILocation(line: 813, column: 12, scope: !4279)
!4288 = !DILocation(line: 813, column: 16, scope: !4279)
!4289 = !DILocation(line: 813, column: 14, scope: !4279)
!4290 = !DILocation(line: 813, column: 24, scope: !4279)
!4291 = !DILocation(line: 813, column: 38, scope: !4281)
!4292 = !DILocation(line: 813, column: 41, scope: !4281)
!4293 = !DILocation(line: 813, column: 49, scope: !4281)
!4294 = !DILocation(line: 813, column: 77, scope: !4281)
!4295 = !DILocation(line: 813, column: 103, scope: !4281)
!4296 = !DILocation(line: 813, column: 101, scope: !4281)
!4297 = !DILocation(line: 813, column: 54, scope: !4281)
!4298 = !DILocation(line: 813, column: 57, scope: !4281)
!4299 = !DILocation(line: 813, column: 65, scope: !4281)
!4300 = !DILocation(line: 813, column: 27, scope: !4281)
!4301 = !DILocation(line: 813, column: 24, scope: !4281)
!4302 = !DILocation(line: 813, column: 5, scope: !4284)
!4303 = !DILocation(line: 814, column: 10, scope: !4255)
!4304 = !DILocation(line: 813, column: 5, scope: !4305)
!4305 = !DILexicalBlockFile(scope: !4255, file: !1059, discriminator: 4)
!4306 = distinct !{!4306, !4286}
!4307 = !DILocation(line: 815, column: 9, scope: !4260)
!4308 = !DILocation(line: 815, column: 11, scope: !4260)
!4309 = !DILocation(line: 815, column: 9, scope: !4255)
!4310 = !DILocation(line: 816, column: 9, scope: !4259)
!4311 = !DILocation(line: 816, column: 16, scope: !4312)
!4312 = !DILexicalBlockFile(scope: !4259, file: !1059, discriminator: 1)
!4313 = !DILocation(line: 816, column: 20, scope: !4312)
!4314 = !DILocation(line: 816, column: 18, scope: !4312)
!4315 = !DILocation(line: 816, column: 24, scope: !4312)
!4316 = !DILocation(line: 816, column: 49, scope: !4258)
!4317 = !DILocation(line: 816, column: 52, scope: !4258)
!4318 = !DILocation(line: 816, column: 60, scope: !4258)
!4319 = !DILocation(line: 816, column: 27, scope: !4258)
!4320 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4257)
!4321 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4257)
!4322 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4257)
!4323 = !DILocation(line: 816, column: 24, scope: !4258)
!4324 = !DILocation(line: 816, column: 9, scope: !4325)
!4325 = !DILexicalBlockFile(scope: !4259, file: !1059, discriminator: 3)
!4326 = !DILocation(line: 817, column: 14, scope: !4259)
!4327 = !DILocation(line: 816, column: 9, scope: !4328)
!4328 = !DILexicalBlockFile(scope: !4259, file: !1059, discriminator: 4)
!4329 = distinct !{!4329, !4310}
!4330 = !DILocation(line: 818, column: 5, scope: !4259)
!4331 = !DILocation(line: 820, column: 12, scope: !4255)
!4332 = !DILocation(line: 820, column: 5, scope: !4255)
!4333 = distinct !DISubprogram(name: "ff_hevc_mvp_lx_flag_decode", scope: !1059, file: !1059, line: 823, type: !2953, isLocal: false, isDefinition: true, scopeLine: 824, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4334 = !DILocalVariable(name: "s", arg: 1, scope: !4333, file: !1059, line: 823, type: !1062)
!4335 = !DILocation(line: 823, column: 45, scope: !4333)
!4336 = !DILocation(line: 825, column: 23, scope: !4333)
!4337 = !DILocation(line: 825, column: 26, scope: !4333)
!4338 = !DILocation(line: 825, column: 34, scope: !4333)
!4339 = !DILocation(line: 825, column: 62, scope: !4333)
!4340 = !DILocation(line: 825, column: 39, scope: !4333)
!4341 = !DILocation(line: 825, column: 42, scope: !4333)
!4342 = !DILocation(line: 825, column: 50, scope: !4333)
!4343 = !DILocation(line: 825, column: 12, scope: !4333)
!4344 = !DILocation(line: 825, column: 5, scope: !4333)
!4345 = distinct !DISubprogram(name: "ff_hevc_no_residual_syntax_flag_decode", scope: !1059, file: !1059, line: 828, type: !2953, isLocal: false, isDefinition: true, scopeLine: 829, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4346 = !DILocalVariable(name: "s", arg: 1, scope: !4345, file: !1059, line: 828, type: !1062)
!4347 = !DILocation(line: 828, column: 57, scope: !4345)
!4348 = !DILocation(line: 830, column: 23, scope: !4345)
!4349 = !DILocation(line: 830, column: 26, scope: !4345)
!4350 = !DILocation(line: 830, column: 34, scope: !4345)
!4351 = !DILocation(line: 830, column: 62, scope: !4345)
!4352 = !DILocation(line: 830, column: 39, scope: !4345)
!4353 = !DILocation(line: 830, column: 42, scope: !4345)
!4354 = !DILocation(line: 830, column: 50, scope: !4345)
!4355 = !DILocation(line: 830, column: 12, scope: !4345)
!4356 = !DILocation(line: 830, column: 5, scope: !4345)
!4357 = distinct !DISubprogram(name: "ff_hevc_split_transform_flag_decode", scope: !1059, file: !1059, line: 866, type: !2751, isLocal: false, isDefinition: true, scopeLine: 867, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4358 = !DILocalVariable(name: "s", arg: 1, scope: !4357, file: !1059, line: 866, type: !1062)
!4359 = !DILocation(line: 866, column: 54, scope: !4357)
!4360 = !DILocalVariable(name: "log2_trafo_size", arg: 2, scope: !4357, file: !1059, line: 866, type: !1043)
!4361 = !DILocation(line: 866, column: 61, scope: !4357)
!4362 = !DILocation(line: 868, column: 23, scope: !4357)
!4363 = !DILocation(line: 868, column: 26, scope: !4357)
!4364 = !DILocation(line: 868, column: 34, scope: !4357)
!4365 = !DILocation(line: 868, column: 62, scope: !4357)
!4366 = !DILocation(line: 868, column: 96, scope: !4357)
!4367 = !DILocation(line: 868, column: 102, scope: !4357)
!4368 = !DILocation(line: 868, column: 100, scope: !4357)
!4369 = !DILocation(line: 868, column: 39, scope: !4357)
!4370 = !DILocation(line: 868, column: 42, scope: !4357)
!4371 = !DILocation(line: 868, column: 50, scope: !4357)
!4372 = !DILocation(line: 868, column: 12, scope: !4357)
!4373 = !DILocation(line: 868, column: 5, scope: !4357)
!4374 = distinct !DISubprogram(name: "ff_hevc_cbf_cb_cr_decode", scope: !1059, file: !1059, line: 871, type: !2751, isLocal: false, isDefinition: true, scopeLine: 872, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4375 = !DILocalVariable(name: "s", arg: 1, scope: !4374, file: !1059, line: 871, type: !1062)
!4376 = !DILocation(line: 871, column: 43, scope: !4374)
!4377 = !DILocalVariable(name: "trafo_depth", arg: 2, scope: !4374, file: !1059, line: 871, type: !1043)
!4378 = !DILocation(line: 871, column: 50, scope: !4374)
!4379 = !DILocation(line: 873, column: 23, scope: !4374)
!4380 = !DILocation(line: 873, column: 26, scope: !4374)
!4381 = !DILocation(line: 873, column: 34, scope: !4374)
!4382 = !DILocation(line: 873, column: 62, scope: !4374)
!4383 = !DILocation(line: 873, column: 87, scope: !4374)
!4384 = !DILocation(line: 873, column: 85, scope: !4374)
!4385 = !DILocation(line: 873, column: 39, scope: !4374)
!4386 = !DILocation(line: 873, column: 42, scope: !4374)
!4387 = !DILocation(line: 873, column: 50, scope: !4374)
!4388 = !DILocation(line: 873, column: 12, scope: !4374)
!4389 = !DILocation(line: 873, column: 5, scope: !4374)
!4390 = distinct !DISubprogram(name: "ff_hevc_cbf_luma_decode", scope: !1059, file: !1059, line: 876, type: !2751, isLocal: false, isDefinition: true, scopeLine: 877, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4391 = !DILocalVariable(name: "s", arg: 1, scope: !4390, file: !1059, line: 876, type: !1062)
!4392 = !DILocation(line: 876, column: 42, scope: !4390)
!4393 = !DILocalVariable(name: "trafo_depth", arg: 2, scope: !4390, file: !1059, line: 876, type: !1043)
!4394 = !DILocation(line: 876, column: 49, scope: !4390)
!4395 = !DILocation(line: 878, column: 23, scope: !4390)
!4396 = !DILocation(line: 878, column: 26, scope: !4390)
!4397 = !DILocation(line: 878, column: 34, scope: !4390)
!4398 = !DILocation(line: 878, column: 62, scope: !4390)
!4399 = !DILocation(line: 878, column: 87, scope: !4390)
!4400 = !DILocation(line: 878, column: 86, scope: !4390)
!4401 = !DILocation(line: 878, column: 84, scope: !4390)
!4402 = !DILocation(line: 878, column: 39, scope: !4390)
!4403 = !DILocation(line: 878, column: 42, scope: !4390)
!4404 = !DILocation(line: 878, column: 50, scope: !4390)
!4405 = !DILocation(line: 878, column: 12, scope: !4390)
!4406 = !DILocation(line: 878, column: 5, scope: !4390)
!4407 = distinct !DISubprogram(name: "ff_hevc_log2_res_scale_abs", scope: !1059, file: !1059, line: 896, type: !2751, isLocal: false, isDefinition: true, scopeLine: 896, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4408 = !DILocalVariable(name: "s", arg: 1, scope: !4407, file: !1059, line: 896, type: !1062)
!4409 = !DILocation(line: 896, column: 45, scope: !4407)
!4410 = !DILocalVariable(name: "idx", arg: 2, scope: !4407, file: !1059, line: 896, type: !1043)
!4411 = !DILocation(line: 896, column: 52, scope: !4407)
!4412 = !DILocalVariable(name: "i", scope: !4407, file: !1059, line: 897, type: !1043)
!4413 = !DILocation(line: 897, column: 9, scope: !4407)
!4414 = !DILocation(line: 899, column: 5, scope: !4407)
!4415 = !DILocation(line: 899, column: 12, scope: !4416)
!4416 = !DILexicalBlockFile(scope: !4407, file: !1059, discriminator: 1)
!4417 = !DILocation(line: 899, column: 14, scope: !4416)
!4418 = !DILocation(line: 899, column: 18, scope: !4416)
!4419 = !DILocation(line: 899, column: 32, scope: !4420)
!4420 = !DILexicalBlockFile(scope: !4407, file: !1059, discriminator: 2)
!4421 = !DILocation(line: 899, column: 35, scope: !4420)
!4422 = !DILocation(line: 899, column: 43, scope: !4420)
!4423 = !DILocation(line: 899, column: 71, scope: !4420)
!4424 = !DILocation(line: 899, column: 109, scope: !4420)
!4425 = !DILocation(line: 899, column: 107, scope: !4420)
!4426 = !DILocation(line: 899, column: 103, scope: !4420)
!4427 = !DILocation(line: 899, column: 115, scope: !4420)
!4428 = !DILocation(line: 899, column: 113, scope: !4420)
!4429 = !DILocation(line: 899, column: 48, scope: !4420)
!4430 = !DILocation(line: 899, column: 51, scope: !4420)
!4431 = !DILocation(line: 899, column: 59, scope: !4420)
!4432 = !DILocation(line: 899, column: 21, scope: !4420)
!4433 = !DILocation(line: 899, column: 18, scope: !4420)
!4434 = !DILocation(line: 899, column: 5, scope: !4435)
!4435 = !DILexicalBlockFile(scope: !4407, file: !1059, discriminator: 3)
!4436 = !DILocation(line: 900, column: 10, scope: !4407)
!4437 = !DILocation(line: 899, column: 5, scope: !4438)
!4438 = !DILexicalBlockFile(scope: !4407, file: !1059, discriminator: 4)
!4439 = distinct !{!4439, !4414}
!4440 = !DILocation(line: 902, column: 12, scope: !4407)
!4441 = !DILocation(line: 902, column: 5, scope: !4407)
!4442 = distinct !DISubprogram(name: "ff_hevc_res_scale_sign_flag", scope: !1059, file: !1059, line: 905, type: !2751, isLocal: false, isDefinition: true, scopeLine: 905, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4443 = !DILocalVariable(name: "s", arg: 1, scope: !4442, file: !1059, line: 905, type: !1062)
!4444 = !DILocation(line: 905, column: 46, scope: !4442)
!4445 = !DILocalVariable(name: "idx", arg: 2, scope: !4442, file: !1059, line: 905, type: !1043)
!4446 = !DILocation(line: 905, column: 53, scope: !4442)
!4447 = !DILocation(line: 906, column: 23, scope: !4442)
!4448 = !DILocation(line: 906, column: 26, scope: !4442)
!4449 = !DILocation(line: 906, column: 34, scope: !4442)
!4450 = !DILocation(line: 906, column: 62, scope: !4442)
!4451 = !DILocation(line: 906, column: 97, scope: !4442)
!4452 = !DILocation(line: 906, column: 95, scope: !4442)
!4453 = !DILocation(line: 906, column: 39, scope: !4442)
!4454 = !DILocation(line: 906, column: 42, scope: !4442)
!4455 = !DILocation(line: 906, column: 50, scope: !4442)
!4456 = !DILocation(line: 906, column: 12, scope: !4442)
!4457 = !DILocation(line: 906, column: 5, scope: !4442)
!4458 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4459)
!4459 = distinct !DILocation(line: 1007, column: 38, scope: !4460, inlinedAt: !4465)
!4460 = distinct !DILexicalBlock(scope: !4461, file: !1059, line: 1006, column: 9)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !1059, line: 1006, column: 9)
!4462 = distinct !DILexicalBlock(scope: !4463, file: !1059, line: 998, column: 12)
!4463 = distinct !DILexicalBlock(scope: !4464, file: !1059, line: 994, column: 9)
!4464 = distinct !DISubprogram(name: "coeff_abs_level_remaining_decode", scope: !1059, file: !1059, line: 984, type: !2751, isLocal: true, isDefinition: true, scopeLine: 985, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4465 = distinct !DILocation(line: 1429, column: 58, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4467, file: !1059, line: 1428, column: 24)
!4467 = distinct !DILexicalBlock(scope: !4468, file: !1059, line: 1410, column: 21)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !1059, line: 1407, column: 41)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !1059, line: 1407, column: 13)
!4470 = distinct !DILexicalBlock(scope: !4471, file: !1059, line: 1407, column: 13)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !1059, line: 1347, column: 20)
!4472 = distinct !DILexicalBlock(scope: !4473, file: !1059, line: 1347, column: 13)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !1059, line: 1220, column: 44)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !1059, line: 1220, column: 5)
!4475 = distinct !DILexicalBlock(scope: !1058, file: !1059, line: 1220, column: 5)
!4476 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4459)
!4477 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4459)
!4478 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4479)
!4479 = distinct !DILocation(line: 996, column: 38, scope: !4480, inlinedAt: !4465)
!4480 = distinct !DILexicalBlock(scope: !4481, file: !1059, line: 995, column: 9)
!4481 = distinct !DILexicalBlock(scope: !4482, file: !1059, line: 995, column: 9)
!4482 = distinct !DILexicalBlock(scope: !4463, file: !1059, line: 994, column: 21)
!4483 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4479)
!4484 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4479)
!4485 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4486)
!4486 = distinct !DILocation(line: 991, column: 27, scope: !4487, inlinedAt: !4465)
!4487 = !DILexicalBlockFile(scope: !4464, file: !1059, discriminator: 2)
!4488 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4486)
!4489 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4486)
!4490 = !DILocalVariable(name: "s", arg: 1, scope: !4464, file: !1059, line: 984, type: !1062)
!4491 = !DILocation(line: 984, column: 96, scope: !4464, inlinedAt: !4465)
!4492 = !DILocalVariable(name: "rc_rice_param", arg: 2, scope: !4464, file: !1059, line: 984, type: !1043)
!4493 = !DILocation(line: 984, column: 103, scope: !4464, inlinedAt: !4465)
!4494 = !DILocalVariable(name: "prefix", scope: !4464, file: !1059, line: 986, type: !1043)
!4495 = !DILocation(line: 986, column: 9, scope: !4464, inlinedAt: !4465)
!4496 = !DILocalVariable(name: "suffix", scope: !4464, file: !1059, line: 987, type: !1043)
!4497 = !DILocation(line: 987, column: 9, scope: !4464, inlinedAt: !4465)
!4498 = !DILocalVariable(name: "last_coeff_abs_level_remaining", scope: !4464, file: !1059, line: 988, type: !1043)
!4499 = !DILocation(line: 988, column: 9, scope: !4464, inlinedAt: !4465)
!4500 = !DILocalVariable(name: "i", scope: !4464, file: !1059, line: 989, type: !1043)
!4501 = !DILocation(line: 989, column: 9, scope: !4464, inlinedAt: !4465)
!4502 = !DILocalVariable(name: "prefix_minus3", scope: !4462, file: !1059, line: 999, type: !1043)
!4503 = !DILocation(line: 999, column: 13, scope: !4462, inlinedAt: !4465)
!4504 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4505)
!4505 = distinct !DILocation(line: 1007, column: 38, scope: !4460, inlinedAt: !4506)
!4506 = distinct !DILocation(line: 1413, column: 62, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !1059, line: 1412, column: 89)
!4508 = distinct !DILexicalBlock(scope: !4509, file: !1059, line: 1412, column: 25)
!4509 = distinct !DILexicalBlock(scope: !4467, file: !1059, line: 1410, column: 28)
!4510 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4505)
!4511 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4505)
!4512 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4513)
!4513 = distinct !DILocation(line: 996, column: 38, scope: !4480, inlinedAt: !4506)
!4514 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4513)
!4515 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4513)
!4516 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4517)
!4517 = distinct !DILocation(line: 991, column: 27, scope: !4487, inlinedAt: !4506)
!4518 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4517)
!4519 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4517)
!4520 = !DILocation(line: 984, column: 96, scope: !4464, inlinedAt: !4506)
!4521 = !DILocation(line: 984, column: 103, scope: !4464, inlinedAt: !4506)
!4522 = !DILocation(line: 986, column: 9, scope: !4464, inlinedAt: !4506)
!4523 = !DILocation(line: 987, column: 9, scope: !4464, inlinedAt: !4506)
!4524 = !DILocation(line: 988, column: 9, scope: !4464, inlinedAt: !4506)
!4525 = !DILocation(line: 989, column: 9, scope: !4464, inlinedAt: !4506)
!4526 = !DILocation(line: 999, column: 13, scope: !4462, inlinedAt: !4506)
!4527 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4528)
!4528 = distinct !DILocation(line: 1020, column: 28, scope: !4529, inlinedAt: !4534)
!4529 = distinct !DILexicalBlock(scope: !4530, file: !1059, line: 1019, column: 5)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !1059, line: 1019, column: 5)
!4531 = distinct !DISubprogram(name: "coeff_sign_flag_decode", scope: !1059, file: !1059, line: 1014, type: !4532, isLocal: true, isDefinition: true, scopeLine: 1015, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4532 = !DISubroutineType(types: !4533)
!4533 = !{!1043, !1062, !1050}
!4534 = distinct !DILocation(line: 1404, column: 35, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !1059, line: 1403, column: 20)
!4536 = distinct !DILexicalBlock(scope: !4471, file: !1059, line: 1401, column: 17)
!4537 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4528)
!4538 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4528)
!4539 = !DILocalVariable(name: "s", arg: 1, scope: !4531, file: !1059, line: 1014, type: !1062)
!4540 = !DILocation(line: 1014, column: 86, scope: !4531, inlinedAt: !4534)
!4541 = !DILocalVariable(name: "nb", arg: 2, scope: !4531, file: !1059, line: 1014, type: !1050)
!4542 = !DILocation(line: 1014, column: 97, scope: !4531, inlinedAt: !4534)
!4543 = !DILocalVariable(name: "i", scope: !4531, file: !1059, line: 1016, type: !1043)
!4544 = !DILocation(line: 1016, column: 9, scope: !4531, inlinedAt: !4534)
!4545 = !DILocalVariable(name: "ret", scope: !4531, file: !1059, line: 1017, type: !1043)
!4546 = !DILocation(line: 1017, column: 9, scope: !4531, inlinedAt: !4534)
!4547 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4548)
!4548 = distinct !DILocation(line: 1020, column: 28, scope: !4529, inlinedAt: !4549)
!4549 = distinct !DILocation(line: 1402, column: 35, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4536, file: !1059, line: 1401, column: 69)
!4551 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4548)
!4552 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4548)
!4553 = !DILocation(line: 1014, column: 86, scope: !4531, inlinedAt: !4549)
!4554 = !DILocation(line: 1014, column: 97, scope: !4531, inlinedAt: !4549)
!4555 = !DILocation(line: 1016, column: 9, scope: !4531, inlinedAt: !4549)
!4556 = !DILocation(line: 1017, column: 9, scope: !4531, inlinedAt: !4549)
!4557 = !DILocalVariable(name: "s", arg: 1, scope: !4558, file: !1059, line: 976, type: !1062)
!4558 = distinct !DISubprogram(name: "coeff_abs_level_greater2_flag_decode", scope: !1059, file: !1059, line: 976, type: !4205, isLocal: true, isDefinition: true, scopeLine: 977, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4559 = !DILocation(line: 976, column: 100, scope: !4558, inlinedAt: !4560)
!4560 = distinct !DILocation(line: 1399, column: 76, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !1059, line: 1398, column: 49)
!4562 = distinct !DILexicalBlock(scope: !4471, file: !1059, line: 1398, column: 17)
!4563 = !DILocalVariable(name: "c_idx", arg: 2, scope: !4558, file: !1059, line: 976, type: !1043)
!4564 = !DILocation(line: 976, column: 107, scope: !4558, inlinedAt: !4560)
!4565 = !DILocalVariable(name: "inc", arg: 3, scope: !4558, file: !1059, line: 976, type: !1043)
!4566 = !DILocation(line: 976, column: 118, scope: !4558, inlinedAt: !4560)
!4567 = !DILocalVariable(name: "s", arg: 1, scope: !4568, file: !1059, line: 967, type: !1062)
!4568 = distinct !DISubprogram(name: "coeff_abs_level_greater1_flag_decode", scope: !1059, file: !1059, line: 967, type: !4205, isLocal: true, isDefinition: true, scopeLine: 968, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4569 = !DILocation(line: 967, column: 100, scope: !4568, inlinedAt: !4570)
!4570 = distinct !DILocation(line: 1378, column: 21, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4572, file: !1059, line: 1375, column: 59)
!4572 = distinct !DILexicalBlock(scope: !4573, file: !1059, line: 1375, column: 13)
!4573 = distinct !DILexicalBlock(scope: !4471, file: !1059, line: 1375, column: 13)
!4574 = !DILocalVariable(name: "c_idx", arg: 2, scope: !4568, file: !1059, line: 967, type: !1043)
!4575 = !DILocation(line: 967, column: 107, scope: !4568, inlinedAt: !4570)
!4576 = !DILocalVariable(name: "inc", arg: 3, scope: !4568, file: !1059, line: 967, type: !1043)
!4577 = !DILocation(line: 967, column: 118, scope: !4568, inlinedAt: !4570)
!4578 = !DILocalVariable(name: "s", arg: 1, scope: !4579, file: !1059, line: 962, type: !1062)
!4579 = distinct !DISubprogram(name: "significant_coeff_flag_decode_0", scope: !1059, file: !1059, line: 962, type: !4205, isLocal: true, isDefinition: true, scopeLine: 963, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4580 = !DILocation(line: 962, column: 95, scope: !4579, inlinedAt: !4581)
!4581 = distinct !DILocation(line: 1334, column: 21, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4583, file: !1059, line: 1334, column: 21)
!4583 = distinct !DILexicalBlock(scope: !4584, file: !1059, line: 1316, column: 47)
!4584 = distinct !DILexicalBlock(scope: !4585, file: !1059, line: 1316, column: 17)
!4585 = distinct !DILexicalBlock(scope: !4586, file: !1059, line: 1266, column: 69)
!4586 = distinct !DILexicalBlock(scope: !4473, file: !1059, line: 1266, column: 13)
!4587 = !DILocalVariable(name: "c_idx", arg: 2, scope: !4579, file: !1059, line: 962, type: !1043)
!4588 = !DILocation(line: 962, column: 102, scope: !4579, inlinedAt: !4581)
!4589 = !DILocalVariable(name: "offset", arg: 3, scope: !4579, file: !1059, line: 962, type: !1043)
!4590 = !DILocation(line: 962, column: 113, scope: !4579, inlinedAt: !4581)
!4591 = !DILocalVariable(name: "s", arg: 1, scope: !4592, file: !1059, line: 955, type: !1062)
!4592 = distinct !DISubprogram(name: "significant_coeff_flag_decode", scope: !1059, file: !1059, line: 955, type: !4593, isLocal: true, isDefinition: true, scopeLine: 957, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4593 = !DISubroutineType(types: !4594)
!4594 = !{!1043, !1062, !1043, !1043, !1043, !1183}
!4595 = !DILocation(line: 955, column: 93, scope: !4592, inlinedAt: !4596)
!4596 = distinct !DILocation(line: 1310, column: 21, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4598, file: !1059, line: 1310, column: 21)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !1059, line: 1307, column: 41)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !1059, line: 1307, column: 13)
!4600 = distinct !DILexicalBlock(scope: !4585, file: !1059, line: 1307, column: 13)
!4601 = !DILocalVariable(name: "x_c", arg: 2, scope: !4592, file: !1059, line: 955, type: !1043)
!4602 = !DILocation(line: 955, column: 100, scope: !4592, inlinedAt: !4596)
!4603 = !DILocalVariable(name: "y_c", arg: 3, scope: !4592, file: !1059, line: 955, type: !1043)
!4604 = !DILocation(line: 955, column: 109, scope: !4592, inlinedAt: !4596)
!4605 = !DILocalVariable(name: "offset", arg: 4, scope: !4592, file: !1059, line: 956, type: !1043)
!4606 = !DILocation(line: 956, column: 48, scope: !4592, inlinedAt: !4596)
!4607 = !DILocalVariable(name: "ctx_idx_map", arg: 5, scope: !4592, file: !1059, line: 956, type: !1183)
!4608 = !DILocation(line: 956, column: 71, scope: !4592, inlinedAt: !4596)
!4609 = !DILocalVariable(name: "inc", scope: !4592, file: !1059, line: 958, type: !1043)
!4610 = !DILocation(line: 958, column: 9, scope: !4592, inlinedAt: !4596)
!4611 = !DILocalVariable(name: "s", arg: 1, scope: !4612, file: !1059, line: 947, type: !1062)
!4612 = distinct !DISubprogram(name: "significant_coeff_group_flag_decode", scope: !1059, file: !1059, line: 947, type: !4205, isLocal: true, isDefinition: true, scopeLine: 948, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4613 = !DILocation(line: 947, column: 99, scope: !4612, inlinedAt: !4614)
!4614 = distinct !DILocation(line: 1243, column: 17, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !1059, line: 1235, column: 47)
!4616 = distinct !DILexicalBlock(scope: !4473, file: !1059, line: 1235, column: 13)
!4617 = !DILocalVariable(name: "c_idx", arg: 2, scope: !4612, file: !1059, line: 947, type: !1043)
!4618 = !DILocation(line: 947, column: 106, scope: !4612, inlinedAt: !4614)
!4619 = !DILocalVariable(name: "ctx_cg", arg: 3, scope: !4612, file: !1059, line: 947, type: !1043)
!4620 = !DILocation(line: 947, column: 117, scope: !4612, inlinedAt: !4614)
!4621 = !DILocalVariable(name: "inc", scope: !4612, file: !1059, line: 949, type: !1043)
!4622 = !DILocation(line: 949, column: 9, scope: !4612, inlinedAt: !4614)
!4623 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4624)
!4624 = distinct !DILocation(line: 943, column: 32, scope: !4625, inlinedAt: !4628)
!4625 = distinct !DILexicalBlock(scope: !4626, file: !1059, line: 942, column: 5)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !1059, line: 942, column: 5)
!4627 = distinct !DISubprogram(name: "last_significant_coeff_suffix_decode", scope: !1059, file: !1059, line: 935, type: !2751, isLocal: true, isDefinition: true, scopeLine: 937, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4628 = distinct !DILocation(line: 1164, column: 22, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !1059, line: 1163, column: 39)
!4630 = distinct !DILexicalBlock(scope: !1058, file: !1059, line: 1163, column: 9)
!4631 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4624)
!4632 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4624)
!4633 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4634)
!4634 = distinct !DILocation(line: 940, column: 17, scope: !4627, inlinedAt: !4628)
!4635 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4634)
!4636 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4634)
!4637 = !DILocalVariable(name: "s", arg: 1, scope: !4627, file: !1059, line: 935, type: !1062)
!4638 = !DILocation(line: 935, column: 100, scope: !4627, inlinedAt: !4628)
!4639 = !DILocalVariable(name: "last_significant_coeff_prefix", arg: 2, scope: !4627, file: !1059, line: 936, type: !1043)
!4640 = !DILocation(line: 936, column: 54, scope: !4627, inlinedAt: !4628)
!4641 = !DILocalVariable(name: "i", scope: !4627, file: !1059, line: 938, type: !1043)
!4642 = !DILocation(line: 938, column: 9, scope: !4627, inlinedAt: !4628)
!4643 = !DILocalVariable(name: "length", scope: !4627, file: !1059, line: 939, type: !1043)
!4644 = !DILocation(line: 939, column: 9, scope: !4627, inlinedAt: !4628)
!4645 = !DILocalVariable(name: "value", scope: !4627, file: !1059, line: 940, type: !1043)
!4646 = !DILocation(line: 940, column: 9, scope: !4627, inlinedAt: !4628)
!4647 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4648)
!4648 = distinct !DILocation(line: 943, column: 32, scope: !4625, inlinedAt: !4649)
!4649 = distinct !DILocation(line: 1157, column: 22, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !1059, line: 1156, column: 39)
!4651 = distinct !DILexicalBlock(scope: !1058, file: !1059, line: 1156, column: 9)
!4652 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4648)
!4653 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4648)
!4654 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !4655)
!4655 = distinct !DILocation(line: 940, column: 17, scope: !4627, inlinedAt: !4649)
!4656 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !4655)
!4657 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !4655)
!4658 = !DILocation(line: 935, column: 100, scope: !4627, inlinedAt: !4649)
!4659 = !DILocation(line: 936, column: 54, scope: !4627, inlinedAt: !4649)
!4660 = !DILocation(line: 938, column: 9, scope: !4627, inlinedAt: !4649)
!4661 = !DILocation(line: 939, column: 9, scope: !4627, inlinedAt: !4649)
!4662 = !DILocation(line: 940, column: 9, scope: !4627, inlinedAt: !4649)
!4663 = !DILocalVariable(name: "s", arg: 1, scope: !4664, file: !1059, line: 909, type: !1062)
!4664 = distinct !DISubprogram(name: "last_significant_coeff_xy_prefix_decode", scope: !1059, file: !1059, line: 909, type: !4665, isLocal: true, isDefinition: true, scopeLine: 911, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{null, !1062, !1043, !1043, !1358, !1358}
!4667 = !DILocation(line: 909, column: 104, scope: !4664, inlinedAt: !4668)
!4668 = distinct !DILocation(line: 1153, column: 5, scope: !1058)
!4669 = !DILocalVariable(name: "c_idx", arg: 2, scope: !4664, file: !1059, line: 909, type: !1043)
!4670 = !DILocation(line: 909, column: 111, scope: !4664, inlinedAt: !4668)
!4671 = !DILocalVariable(name: "log2_size", arg: 3, scope: !4664, file: !1059, line: 910, type: !1043)
!4672 = !DILocation(line: 910, column: 56, scope: !4664, inlinedAt: !4668)
!4673 = !DILocalVariable(name: "last_scx_prefix", arg: 4, scope: !4664, file: !1059, line: 910, type: !1358)
!4674 = !DILocation(line: 910, column: 72, scope: !4664, inlinedAt: !4668)
!4675 = !DILocalVariable(name: "last_scy_prefix", arg: 5, scope: !4664, file: !1059, line: 910, type: !1358)
!4676 = !DILocation(line: 910, column: 94, scope: !4664, inlinedAt: !4668)
!4677 = !DILocalVariable(name: "i", scope: !4664, file: !1059, line: 912, type: !1043)
!4678 = !DILocation(line: 912, column: 9, scope: !4664, inlinedAt: !4668)
!4679 = !DILocalVariable(name: "max", scope: !4664, file: !1059, line: 913, type: !1043)
!4680 = !DILocation(line: 913, column: 9, scope: !4664, inlinedAt: !4668)
!4681 = !DILocalVariable(name: "ctx_offset", scope: !4664, file: !1059, line: 914, type: !1043)
!4682 = !DILocation(line: 914, column: 9, scope: !4664, inlinedAt: !4668)
!4683 = !DILocalVariable(name: "ctx_shift", scope: !4664, file: !1059, line: 914, type: !1043)
!4684 = !DILocation(line: 914, column: 21, scope: !4664, inlinedAt: !4668)
!4685 = !DILocation(line: 127, column: 87, scope: !2986, inlinedAt: !4686)
!4686 = distinct !DILocation(line: 1103, column: 20, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4688, file: !1059, line: 1093, column: 16)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !1059, line: 1091, column: 13)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !1059, line: 1069, column: 44)
!4690 = distinct !DILexicalBlock(scope: !1058, file: !1059, line: 1069, column: 9)
!4691 = !DILocation(line: 127, column: 94, scope: !2986, inlinedAt: !4686)
!4692 = !DILocation(line: 127, column: 104, scope: !2986, inlinedAt: !4686)
!4693 = !DILocalVariable(name: "s", arg: 1, scope: !1058, file: !1059, line: 1024, type: !1062)
!4694 = !DILocation(line: 1024, column: 47, scope: !1058)
!4695 = !DILocalVariable(name: "x0", arg: 2, scope: !1058, file: !1059, line: 1024, type: !1043)
!4696 = !DILocation(line: 1024, column: 54, scope: !1058)
!4697 = !DILocalVariable(name: "y0", arg: 3, scope: !1058, file: !1059, line: 1024, type: !1043)
!4698 = !DILocation(line: 1024, column: 62, scope: !1058)
!4699 = !DILocalVariable(name: "log2_trafo_size", arg: 4, scope: !1058, file: !1059, line: 1025, type: !1043)
!4700 = !DILocation(line: 1025, column: 37, scope: !1058)
!4701 = !DILocalVariable(name: "scan_idx", arg: 5, scope: !1058, file: !1059, line: 1025, type: !1037)
!4702 = !DILocation(line: 1025, column: 68, scope: !1058)
!4703 = !DILocalVariable(name: "c_idx", arg: 6, scope: !1058, file: !1059, line: 1026, type: !1043)
!4704 = !DILocation(line: 1026, column: 37, scope: !1058)
!4705 = !DILocalVariable(name: "lc", scope: !1058, file: !1059, line: 1033, type: !1797)
!4706 = !DILocation(line: 1033, column: 23, scope: !1058)
!4707 = !DILocation(line: 1033, column: 28, scope: !1058)
!4708 = !DILocation(line: 1033, column: 31, scope: !1058)
!4709 = !DILocalVariable(name: "transform_skip_flag", scope: !1058, file: !1059, line: 1034, type: !1043)
!4710 = !DILocation(line: 1034, column: 9, scope: !1058)
!4711 = !DILocalVariable(name: "last_significant_coeff_x", scope: !1058, file: !1059, line: 1036, type: !1043)
!4712 = !DILocation(line: 1036, column: 9, scope: !1058)
!4713 = !DILocalVariable(name: "last_significant_coeff_y", scope: !1058, file: !1059, line: 1036, type: !1043)
!4714 = !DILocation(line: 1036, column: 35, scope: !1058)
!4715 = !DILocalVariable(name: "last_scan_pos", scope: !1058, file: !1059, line: 1037, type: !1043)
!4716 = !DILocation(line: 1037, column: 9, scope: !1058)
!4717 = !DILocalVariable(name: "n_end", scope: !1058, file: !1059, line: 1038, type: !1043)
!4718 = !DILocation(line: 1038, column: 9, scope: !1058)
!4719 = !DILocalVariable(name: "num_coeff", scope: !1058, file: !1059, line: 1039, type: !1043)
!4720 = !DILocation(line: 1039, column: 9, scope: !1058)
!4721 = !DILocalVariable(name: "greater1_ctx", scope: !1058, file: !1059, line: 1040, type: !1043)
!4722 = !DILocation(line: 1040, column: 9, scope: !1058)
!4723 = !DILocalVariable(name: "num_last_subset", scope: !1058, file: !1059, line: 1042, type: !1043)
!4724 = !DILocation(line: 1042, column: 9, scope: !1058)
!4725 = !DILocalVariable(name: "x_cg_last_sig", scope: !1058, file: !1059, line: 1043, type: !1043)
!4726 = !DILocation(line: 1043, column: 9, scope: !1058)
!4727 = !DILocalVariable(name: "y_cg_last_sig", scope: !1058, file: !1059, line: 1043, type: !1043)
!4728 = !DILocation(line: 1043, column: 24, scope: !1058)
!4729 = !DILocalVariable(name: "scan_x_cg", scope: !1058, file: !1059, line: 1045, type: !1183)
!4730 = !DILocation(line: 1045, column: 20, scope: !1058)
!4731 = !DILocalVariable(name: "scan_y_cg", scope: !1058, file: !1059, line: 1045, type: !1183)
!4732 = !DILocation(line: 1045, column: 32, scope: !1058)
!4733 = !DILocalVariable(name: "scan_x_off", scope: !1058, file: !1059, line: 1045, type: !1183)
!4734 = !DILocation(line: 1045, column: 44, scope: !1058)
!4735 = !DILocalVariable(name: "scan_y_off", scope: !1058, file: !1059, line: 1045, type: !1183)
!4736 = !DILocation(line: 1045, column: 57, scope: !1058)
!4737 = !DILocalVariable(name: "stride", scope: !1058, file: !1059, line: 1047, type: !2464)
!4738 = !DILocation(line: 1047, column: 15, scope: !1058)
!4739 = !DILocation(line: 1047, column: 43, scope: !1058)
!4740 = !DILocation(line: 1047, column: 24, scope: !1058)
!4741 = !DILocation(line: 1047, column: 27, scope: !1058)
!4742 = !DILocation(line: 1047, column: 34, scope: !1058)
!4743 = !DILocalVariable(name: "hshift", scope: !1058, file: !1059, line: 1048, type: !1043)
!4744 = !DILocation(line: 1048, column: 9, scope: !1058)
!4745 = !DILocation(line: 1048, column: 36, scope: !1058)
!4746 = !DILocation(line: 1048, column: 18, scope: !1058)
!4747 = !DILocation(line: 1048, column: 21, scope: !1058)
!4748 = !DILocation(line: 1048, column: 24, scope: !1058)
!4749 = !DILocation(line: 1048, column: 29, scope: !1058)
!4750 = !DILocalVariable(name: "vshift", scope: !1058, file: !1059, line: 1049, type: !1043)
!4751 = !DILocation(line: 1049, column: 9, scope: !1058)
!4752 = !DILocation(line: 1049, column: 36, scope: !1058)
!4753 = !DILocation(line: 1049, column: 18, scope: !1058)
!4754 = !DILocation(line: 1049, column: 21, scope: !1058)
!4755 = !DILocation(line: 1049, column: 24, scope: !1058)
!4756 = !DILocation(line: 1049, column: 29, scope: !1058)
!4757 = !DILocalVariable(name: "dst", scope: !1058, file: !1059, line: 1050, type: !1049)
!4758 = !DILocation(line: 1050, column: 14, scope: !1058)
!4759 = !DILocation(line: 1050, column: 44, scope: !1058)
!4760 = !DILocation(line: 1050, column: 50, scope: !1058)
!4761 = !DILocation(line: 1050, column: 47, scope: !1058)
!4762 = !DILocation(line: 1050, column: 43, scope: !1058)
!4763 = !DILocation(line: 1050, column: 60, scope: !1058)
!4764 = !DILocation(line: 1050, column: 58, scope: !1058)
!4765 = !DILocation(line: 1051, column: 45, scope: !1058)
!4766 = !DILocation(line: 1051, column: 51, scope: !1058)
!4767 = !DILocation(line: 1051, column: 48, scope: !1058)
!4768 = !DILocation(line: 1051, column: 62, scope: !1058)
!4769 = !DILocation(line: 1051, column: 65, scope: !1058)
!4770 = !DILocation(line: 1051, column: 68, scope: !1058)
!4771 = !DILocation(line: 1051, column: 73, scope: !1058)
!4772 = !DILocation(line: 1051, column: 59, scope: !1058)
!4773 = !DILocation(line: 1051, column: 43, scope: !1058)
!4774 = !DILocation(line: 1050, column: 67, scope: !1058)
!4775 = !DILocation(line: 1050, column: 36, scope: !1058)
!4776 = !DILocation(line: 1050, column: 21, scope: !1058)
!4777 = !DILocation(line: 1050, column: 24, scope: !1058)
!4778 = !DILocation(line: 1050, column: 31, scope: !1058)
!4779 = !DILocalVariable(name: "coeffs", scope: !1058, file: !1059, line: 1052, type: !1045)
!4780 = !DILocation(line: 1052, column: 14, scope: !1058)
!4781 = !DILocation(line: 1052, column: 34, scope: !1058)
!4782 = !DILocation(line: 1052, column: 42, scope: !4783)
!4783 = !DILexicalBlockFile(scope: !1058, file: !1059, discriminator: 1)
!4784 = !DILocation(line: 1052, column: 46, scope: !4783)
!4785 = !DILocation(line: 1052, column: 34, scope: !4783)
!4786 = !DILocation(line: 1052, column: 65, scope: !4787)
!4787 = !DILexicalBlockFile(scope: !1058, file: !1059, discriminator: 2)
!4788 = !DILocation(line: 1052, column: 69, scope: !4787)
!4789 = !DILocation(line: 1052, column: 34, scope: !4787)
!4790 = !DILocation(line: 1052, column: 34, scope: !4791)
!4791 = !DILexicalBlockFile(scope: !1058, file: !1059, discriminator: 3)
!4792 = !DILocation(line: 1052, column: 23, scope: !4791)
!4793 = !DILocation(line: 1052, column: 14, scope: !4791)
!4794 = !DILocalVariable(name: "significant_coeff_group_flag", scope: !1058, file: !1059, line: 1053, type: !4795)
!4795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 512, align: 8, elements: !2694)
!4796 = !DILocation(line: 1053, column: 13, scope: !1058)
!4797 = !DILocalVariable(name: "explicit_rdpcm_flag", scope: !1058, file: !1059, line: 1054, type: !1043)
!4798 = !DILocation(line: 1054, column: 9, scope: !1058)
!4799 = !DILocalVariable(name: "explicit_rdpcm_dir_flag", scope: !1058, file: !1059, line: 1055, type: !1043)
!4800 = !DILocation(line: 1055, column: 9, scope: !1058)
!4801 = !DILocalVariable(name: "trafo_size", scope: !1058, file: !1059, line: 1057, type: !1043)
!4802 = !DILocation(line: 1057, column: 9, scope: !1058)
!4803 = !DILocation(line: 1057, column: 27, scope: !1058)
!4804 = !DILocation(line: 1057, column: 24, scope: !1058)
!4805 = !DILocalVariable(name: "i", scope: !1058, file: !1059, line: 1058, type: !1043)
!4806 = !DILocation(line: 1058, column: 9, scope: !1058)
!4807 = !DILocalVariable(name: "qp", scope: !1058, file: !1059, line: 1059, type: !1043)
!4808 = !DILocation(line: 1059, column: 9, scope: !1058)
!4809 = !DILocalVariable(name: "shift", scope: !1058, file: !1059, line: 1059, type: !1043)
!4810 = !DILocation(line: 1059, column: 12, scope: !1058)
!4811 = !DILocalVariable(name: "add", scope: !1058, file: !1059, line: 1059, type: !1043)
!4812 = !DILocation(line: 1059, column: 18, scope: !1058)
!4813 = !DILocalVariable(name: "scale", scope: !1058, file: !1059, line: 1059, type: !1043)
!4814 = !DILocation(line: 1059, column: 22, scope: !1058)
!4815 = !DILocalVariable(name: "scale_m", scope: !1058, file: !1059, line: 1059, type: !1043)
!4816 = !DILocation(line: 1059, column: 28, scope: !1058)
!4817 = !DILocalVariable(name: "scale_matrix", scope: !1058, file: !1059, line: 1061, type: !1183)
!4818 = !DILocation(line: 1061, column: 20, scope: !1058)
!4819 = !DILocalVariable(name: "dc_scale", scope: !1058, file: !1059, line: 1062, type: !1050)
!4820 = !DILocation(line: 1062, column: 13, scope: !1058)
!4821 = !DILocalVariable(name: "pred_mode_intra", scope: !1058, file: !1059, line: 1063, type: !1043)
!4822 = !DILocation(line: 1063, column: 9, scope: !1058)
!4823 = !DILocation(line: 1063, column: 28, scope: !1058)
!4824 = !DILocation(line: 1063, column: 34, scope: !1058)
!4825 = !DILocation(line: 1063, column: 27, scope: !1058)
!4826 = !DILocation(line: 1063, column: 42, scope: !4783)
!4827 = !DILocation(line: 1063, column: 46, scope: !4783)
!4828 = !DILocation(line: 1063, column: 49, scope: !4783)
!4829 = !DILocation(line: 1063, column: 27, scope: !4783)
!4830 = !DILocation(line: 1064, column: 42, scope: !1058)
!4831 = !DILocation(line: 1064, column: 46, scope: !1058)
!4832 = !DILocation(line: 1064, column: 49, scope: !1058)
!4833 = !DILocation(line: 1063, column: 27, scope: !4787)
!4834 = !DILocation(line: 1063, column: 27, scope: !4791)
!4835 = !DILocation(line: 1063, column: 9, scope: !4791)
!4836 = !DILocation(line: 1066, column: 12, scope: !1058)
!4837 = !DILocation(line: 1066, column: 5, scope: !1058)
!4838 = !DILocation(line: 1066, column: 23, scope: !1058)
!4839 = !DILocation(line: 1066, column: 36, scope: !1058)
!4840 = !DILocation(line: 1066, column: 34, scope: !1058)
!4841 = !DILocation(line: 1066, column: 47, scope: !1058)
!4842 = !DILocation(line: 1069, column: 10, scope: !4690)
!4843 = !DILocation(line: 1069, column: 14, scope: !4690)
!4844 = !DILocation(line: 1069, column: 17, scope: !4690)
!4845 = !DILocation(line: 1069, column: 9, scope: !1058)
!4846 = !DILocalVariable(name: "qp_y", scope: !4689, file: !1059, line: 1084, type: !1043)
!4847 = !DILocation(line: 1084, column: 13, scope: !4689)
!4848 = !DILocation(line: 1084, column: 20, scope: !4689)
!4849 = !DILocation(line: 1084, column: 24, scope: !4689)
!4850 = !DILocation(line: 1086, column: 13, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4689, file: !1059, line: 1086, column: 13)
!4852 = !DILocation(line: 1086, column: 16, scope: !4851)
!4853 = !DILocation(line: 1086, column: 19, scope: !4851)
!4854 = !DILocation(line: 1086, column: 24, scope: !4851)
!4855 = !DILocation(line: 1086, column: 52, scope: !4851)
!4856 = !DILocation(line: 1087, column: 13, scope: !4851)
!4857 = !DILocation(line: 1087, column: 32, scope: !4851)
!4858 = !DILocation(line: 1087, column: 35, scope: !4851)
!4859 = !DILocation(line: 1087, column: 38, scope: !4851)
!4860 = !DILocation(line: 1087, column: 43, scope: !4851)
!4861 = !DILocation(line: 1087, column: 29, scope: !4851)
!4862 = !DILocation(line: 1086, column: 13, scope: !4863)
!4863 = !DILexicalBlockFile(scope: !4689, file: !1059, discriminator: 1)
!4864 = !DILocation(line: 1088, column: 67, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4851, file: !1059, line: 1087, column: 79)
!4866 = !DILocation(line: 1088, column: 70, scope: !4865)
!4867 = !DILocation(line: 1088, column: 35, scope: !4865)
!4868 = !DILocation(line: 1088, column: 33, scope: !4865)
!4869 = !DILocation(line: 1089, column: 9, scope: !4865)
!4870 = !DILocation(line: 1091, column: 13, scope: !4688)
!4871 = !DILocation(line: 1091, column: 19, scope: !4688)
!4872 = !DILocation(line: 1091, column: 13, scope: !4689)
!4873 = !DILocation(line: 1092, column: 18, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4688, file: !1059, line: 1091, column: 25)
!4875 = !DILocation(line: 1092, column: 25, scope: !4874)
!4876 = !DILocation(line: 1092, column: 28, scope: !4874)
!4877 = !DILocation(line: 1092, column: 31, scope: !4874)
!4878 = !DILocation(line: 1092, column: 36, scope: !4874)
!4879 = !DILocation(line: 1092, column: 23, scope: !4874)
!4880 = !DILocation(line: 1092, column: 16, scope: !4874)
!4881 = !DILocation(line: 1093, column: 9, scope: !4874)
!4882 = !DILocalVariable(name: "qp_i", scope: !4687, file: !1059, line: 1094, type: !1043)
!4883 = !DILocation(line: 1094, column: 17, scope: !4687)
!4884 = !DILocalVariable(name: "offset", scope: !4687, file: !1059, line: 1094, type: !1043)
!4885 = !DILocation(line: 1094, column: 23, scope: !4687)
!4886 = !DILocation(line: 1096, column: 17, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4687, file: !1059, line: 1096, column: 17)
!4888 = !DILocation(line: 1096, column: 23, scope: !4887)
!4889 = !DILocation(line: 1096, column: 17, scope: !4687)
!4890 = !DILocation(line: 1097, column: 26, scope: !4887)
!4891 = !DILocation(line: 1097, column: 29, scope: !4887)
!4892 = !DILocation(line: 1097, column: 32, scope: !4887)
!4893 = !DILocation(line: 1097, column: 37, scope: !4887)
!4894 = !DILocation(line: 1097, column: 52, scope: !4887)
!4895 = !DILocation(line: 1097, column: 55, scope: !4887)
!4896 = !DILocation(line: 1097, column: 58, scope: !4887)
!4897 = !DILocation(line: 1097, column: 50, scope: !4887)
!4898 = !DILocation(line: 1098, column: 26, scope: !4887)
!4899 = !DILocation(line: 1098, column: 30, scope: !4887)
!4900 = !DILocation(line: 1098, column: 33, scope: !4887)
!4901 = !DILocation(line: 1097, column: 77, scope: !4887)
!4902 = !DILocation(line: 1097, column: 24, scope: !4887)
!4903 = !DILocation(line: 1097, column: 17, scope: !4887)
!4904 = !DILocation(line: 1100, column: 26, scope: !4887)
!4905 = !DILocation(line: 1100, column: 29, scope: !4887)
!4906 = !DILocation(line: 1100, column: 32, scope: !4887)
!4907 = !DILocation(line: 1100, column: 37, scope: !4887)
!4908 = !DILocation(line: 1100, column: 52, scope: !4887)
!4909 = !DILocation(line: 1100, column: 55, scope: !4887)
!4910 = !DILocation(line: 1100, column: 58, scope: !4887)
!4911 = !DILocation(line: 1100, column: 50, scope: !4887)
!4912 = !DILocation(line: 1101, column: 26, scope: !4887)
!4913 = !DILocation(line: 1101, column: 30, scope: !4887)
!4914 = !DILocation(line: 1101, column: 33, scope: !4887)
!4915 = !DILocation(line: 1100, column: 77, scope: !4887)
!4916 = !DILocation(line: 1100, column: 24, scope: !4887)
!4917 = !DILocation(line: 1103, column: 30, scope: !4687)
!4918 = !DILocation(line: 1103, column: 37, scope: !4687)
!4919 = !DILocation(line: 1103, column: 35, scope: !4687)
!4920 = !DILocation(line: 1103, column: 47, scope: !4687)
!4921 = !DILocation(line: 1103, column: 50, scope: !4687)
!4922 = !DILocation(line: 1103, column: 53, scope: !4687)
!4923 = !DILocation(line: 1103, column: 58, scope: !4687)
!4924 = !DILocation(line: 1103, column: 45, scope: !4687)
!4925 = !DILocation(line: 1103, column: 20, scope: !4687)
!4926 = !DILocation(line: 132, column: 9, scope: !3053, inlinedAt: !4686)
!4927 = !DILocation(line: 132, column: 13, scope: !3053, inlinedAt: !4686)
!4928 = !DILocation(line: 132, column: 11, scope: !3053, inlinedAt: !4686)
!4929 = !DILocation(line: 132, column: 9, scope: !2986, inlinedAt: !4686)
!4930 = !DILocation(line: 132, column: 26, scope: !3058, inlinedAt: !4686)
!4931 = !DILocation(line: 132, column: 19, scope: !3058, inlinedAt: !4686)
!4932 = !DILocation(line: 133, column: 14, scope: !3061, inlinedAt: !4686)
!4933 = !DILocation(line: 133, column: 18, scope: !3061, inlinedAt: !4686)
!4934 = !DILocation(line: 133, column: 16, scope: !3061, inlinedAt: !4686)
!4935 = !DILocation(line: 133, column: 14, scope: !3053, inlinedAt: !4686)
!4936 = !DILocation(line: 133, column: 31, scope: !3066, inlinedAt: !4686)
!4937 = !DILocation(line: 133, column: 24, scope: !3066, inlinedAt: !4686)
!4938 = !DILocation(line: 134, column: 17, scope: !3061, inlinedAt: !4686)
!4939 = !DILocation(line: 134, column: 10, scope: !3061, inlinedAt: !4686)
!4940 = !DILocation(line: 135, column: 1, scope: !2986, inlinedAt: !4686)
!4941 = !DILocation(line: 1103, column: 18, scope: !4687)
!4942 = !DILocation(line: 1104, column: 17, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4687, file: !1059, line: 1104, column: 17)
!4944 = !DILocation(line: 1104, column: 20, scope: !4943)
!4945 = !DILocation(line: 1104, column: 23, scope: !4943)
!4946 = !DILocation(line: 1104, column: 28, scope: !4943)
!4947 = !DILocation(line: 1104, column: 46, scope: !4943)
!4948 = !DILocation(line: 1104, column: 17, scope: !4687)
!4949 = !DILocation(line: 1105, column: 21, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4951, file: !1059, line: 1105, column: 21)
!4951 = distinct !DILexicalBlock(scope: !4943, file: !1059, line: 1104, column: 52)
!4952 = !DILocation(line: 1105, column: 26, scope: !4950)
!4953 = !DILocation(line: 1105, column: 21, scope: !4951)
!4954 = !DILocation(line: 1106, column: 26, scope: !4950)
!4955 = !DILocation(line: 1106, column: 24, scope: !4950)
!4956 = !DILocation(line: 1106, column: 21, scope: !4950)
!4957 = !DILocation(line: 1107, column: 26, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4950, file: !1059, line: 1107, column: 26)
!4959 = !DILocation(line: 1107, column: 31, scope: !4958)
!4960 = !DILocation(line: 1107, column: 26, scope: !4950)
!4961 = !DILocation(line: 1108, column: 26, scope: !4958)
!4962 = !DILocation(line: 1108, column: 31, scope: !4958)
!4963 = !DILocation(line: 1108, column: 24, scope: !4958)
!4964 = !DILocation(line: 1108, column: 21, scope: !4958)
!4965 = !DILocation(line: 1110, column: 31, scope: !4958)
!4966 = !DILocation(line: 1110, column: 36, scope: !4958)
!4967 = !DILocation(line: 1110, column: 26, scope: !4958)
!4968 = !DILocation(line: 1110, column: 24, scope: !4958)
!4969 = !DILocation(line: 1111, column: 13, scope: !4951)
!4970 = !DILocation(line: 1112, column: 21, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4972, file: !1059, line: 1112, column: 21)
!4972 = distinct !DILexicalBlock(scope: !4943, file: !1059, line: 1111, column: 20)
!4973 = !DILocation(line: 1112, column: 26, scope: !4971)
!4974 = !DILocation(line: 1112, column: 21, scope: !4972)
!4975 = !DILocation(line: 1113, column: 24, scope: !4971)
!4976 = !DILocation(line: 1113, column: 21, scope: !4971)
!4977 = !DILocation(line: 1115, column: 26, scope: !4971)
!4978 = !DILocation(line: 1115, column: 24, scope: !4971)
!4979 = !DILocation(line: 1118, column: 19, scope: !4687)
!4980 = !DILocation(line: 1118, column: 22, scope: !4687)
!4981 = !DILocation(line: 1118, column: 25, scope: !4687)
!4982 = !DILocation(line: 1118, column: 30, scope: !4687)
!4983 = !DILocation(line: 1118, column: 16, scope: !4687)
!4984 = !DILocation(line: 1121, column: 17, scope: !4689)
!4985 = !DILocation(line: 1121, column: 20, scope: !4689)
!4986 = !DILocation(line: 1121, column: 23, scope: !4689)
!4987 = !DILocation(line: 1121, column: 28, scope: !4689)
!4988 = !DILocation(line: 1121, column: 40, scope: !4689)
!4989 = !DILocation(line: 1121, column: 38, scope: !4689)
!4990 = !DILocation(line: 1121, column: 56, scope: !4689)
!4991 = !DILocation(line: 1121, column: 15, scope: !4689)
!4992 = !DILocation(line: 1122, column: 21, scope: !4689)
!4993 = !DILocation(line: 1122, column: 26, scope: !4689)
!4994 = !DILocation(line: 1122, column: 17, scope: !4689)
!4995 = !DILocation(line: 1122, column: 13, scope: !4689)
!4996 = !DILocation(line: 1123, column: 34, scope: !4689)
!4997 = !DILocation(line: 1123, column: 29, scope: !4689)
!4998 = !DILocation(line: 1123, column: 17, scope: !4689)
!4999 = !DILocation(line: 1123, column: 48, scope: !4689)
!5000 = !DILocation(line: 1123, column: 43, scope: !4689)
!5001 = !DILocation(line: 1123, column: 42, scope: !4689)
!5002 = !DILocation(line: 1123, column: 39, scope: !4689)
!5003 = !DILocation(line: 1123, column: 15, scope: !4689)
!5004 = !DILocation(line: 1124, column: 17, scope: !4689)
!5005 = !DILocation(line: 1125, column: 18, scope: !4689)
!5006 = !DILocation(line: 1127, column: 13, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4689, file: !1059, line: 1127, column: 13)
!5008 = !DILocation(line: 1127, column: 16, scope: !5007)
!5009 = !DILocation(line: 1127, column: 19, scope: !5007)
!5010 = !DILocation(line: 1127, column: 24, scope: !5007)
!5011 = !DILocation(line: 1127, column: 49, scope: !5007)
!5012 = !DILocation(line: 1127, column: 54, scope: !5013)
!5013 = !DILexicalBlockFile(scope: !5007, file: !1059, discriminator: 1)
!5014 = !DILocation(line: 1127, column: 74, scope: !5013)
!5015 = !DILocation(line: 1127, column: 77, scope: !5016)
!5016 = !DILexicalBlockFile(scope: !5007, file: !1059, discriminator: 2)
!5017 = !DILocation(line: 1127, column: 93, scope: !5016)
!5018 = !DILocation(line: 1127, column: 13, scope: !5016)
!5019 = !DILocalVariable(name: "sl", scope: !5020, file: !1059, line: 1128, type: !5021)
!5020 = distinct !DILexicalBlock(scope: !5007, file: !1059, line: 1127, column: 99)
!5021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5022, size: 64, align: 64)
!5022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2062)
!5023 = !DILocation(line: 1128, column: 32, scope: !5020)
!5024 = !DILocation(line: 1128, column: 37, scope: !5020)
!5025 = !DILocation(line: 1128, column: 40, scope: !5020)
!5026 = !DILocation(line: 1128, column: 43, scope: !5020)
!5027 = !DILocation(line: 1128, column: 48, scope: !5020)
!5028 = !DILocation(line: 1129, column: 14, scope: !5020)
!5029 = !DILocation(line: 1129, column: 17, scope: !5020)
!5030 = !DILocation(line: 1129, column: 20, scope: !5020)
!5031 = !DILocation(line: 1129, column: 25, scope: !5020)
!5032 = !DILocation(line: 1128, column: 37, scope: !5033)
!5033 = !DILexicalBlockFile(scope: !5020, file: !1059, discriminator: 1)
!5034 = !DILocation(line: 1129, column: 41, scope: !5033)
!5035 = !DILocation(line: 1129, column: 44, scope: !5033)
!5036 = !DILocation(line: 1129, column: 47, scope: !5033)
!5037 = !DILocation(line: 1129, column: 52, scope: !5033)
!5038 = !DILocation(line: 1128, column: 37, scope: !5039)
!5039 = !DILexicalBlockFile(scope: !5020, file: !1059, discriminator: 2)
!5040 = !DILocation(line: 1128, column: 37, scope: !5041)
!5041 = !DILexicalBlockFile(scope: !5020, file: !1059, discriminator: 3)
!5042 = !DILocation(line: 1128, column: 32, scope: !5041)
!5043 = !DILocalVariable(name: "matrix_id", scope: !5020, file: !1059, line: 1130, type: !1043)
!5044 = !DILocation(line: 1130, column: 17, scope: !5020)
!5045 = !DILocation(line: 1130, column: 29, scope: !5020)
!5046 = !DILocation(line: 1130, column: 33, scope: !5020)
!5047 = !DILocation(line: 1130, column: 36, scope: !5020)
!5048 = !DILocation(line: 1130, column: 46, scope: !5020)
!5049 = !DILocation(line: 1132, column: 29, scope: !5020)
!5050 = !DILocation(line: 1132, column: 27, scope: !5020)
!5051 = !DILocation(line: 1132, column: 41, scope: !5020)
!5052 = !DILocation(line: 1132, column: 39, scope: !5020)
!5053 = !DILocation(line: 1132, column: 23, scope: !5020)
!5054 = !DILocation(line: 1134, column: 56, scope: !5020)
!5055 = !DILocation(line: 1134, column: 28, scope: !5020)
!5056 = !DILocation(line: 1134, column: 35, scope: !5020)
!5057 = !DILocation(line: 1134, column: 51, scope: !5020)
!5058 = !DILocation(line: 1134, column: 32, scope: !5020)
!5059 = !DILocation(line: 1134, column: 26, scope: !5020)
!5060 = !DILocation(line: 1135, column: 17, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5020, file: !1059, line: 1135, column: 17)
!5062 = !DILocation(line: 1135, column: 33, scope: !5061)
!5063 = !DILocation(line: 1135, column: 17, scope: !5020)
!5064 = !DILocation(line: 1136, column: 59, scope: !5061)
!5065 = !DILocation(line: 1136, column: 28, scope: !5061)
!5066 = !DILocation(line: 1136, column: 38, scope: !5061)
!5067 = !DILocation(line: 1136, column: 54, scope: !5061)
!5068 = !DILocation(line: 1136, column: 32, scope: !5061)
!5069 = !DILocation(line: 1136, column: 26, scope: !5061)
!5070 = !DILocation(line: 1136, column: 17, scope: !5061)
!5071 = !DILocation(line: 1137, column: 9, scope: !5020)
!5072 = !DILocation(line: 1138, column: 5, scope: !4689)
!5073 = !DILocation(line: 1139, column: 15, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !4690, file: !1059, line: 1138, column: 12)
!5075 = !DILocation(line: 1140, column: 13, scope: !5074)
!5076 = !DILocation(line: 1141, column: 15, scope: !5074)
!5077 = !DILocation(line: 1142, column: 18, scope: !5074)
!5078 = !DILocation(line: 1145, column: 9, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !1058, file: !1059, line: 1145, column: 9)
!5080 = !DILocation(line: 1145, column: 13, scope: !5079)
!5081 = !DILocation(line: 1145, column: 16, scope: !5079)
!5082 = !DILocation(line: 1145, column: 26, scope: !5079)
!5083 = !DILocation(line: 1145, column: 40, scope: !5079)
!5084 = !DILocation(line: 1145, column: 43, scope: !5085)
!5085 = !DILexicalBlockFile(scope: !5079, file: !1059, discriminator: 1)
!5086 = !DILocation(line: 1145, column: 46, scope: !5085)
!5087 = !DILocation(line: 1145, column: 49, scope: !5085)
!5088 = !DILocation(line: 1145, column: 54, scope: !5085)
!5089 = !DILocation(line: 1145, column: 82, scope: !5085)
!5090 = !DILocation(line: 1146, column: 10, scope: !5079)
!5091 = !DILocation(line: 1146, column: 30, scope: !5079)
!5092 = !DILocation(line: 1146, column: 33, scope: !5085)
!5093 = !DILocation(line: 1146, column: 37, scope: !5085)
!5094 = !DILocation(line: 1146, column: 40, scope: !5085)
!5095 = !DILocation(line: 1145, column: 9, scope: !4787)
!5096 = !DILocation(line: 1147, column: 58, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5079, file: !1059, line: 1146, column: 68)
!5098 = !DILocation(line: 1147, column: 61, scope: !5097)
!5099 = !DILocation(line: 1147, column: 31, scope: !5097)
!5100 = !DILocation(line: 1147, column: 29, scope: !5097)
!5101 = !DILocation(line: 1148, column: 13, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5097, file: !1059, line: 1148, column: 13)
!5103 = !DILocation(line: 1148, column: 13, scope: !5097)
!5104 = !DILocation(line: 1149, column: 70, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5102, file: !1059, line: 1148, column: 34)
!5106 = !DILocation(line: 1149, column: 73, scope: !5105)
!5107 = !DILocation(line: 1149, column: 39, scope: !5105)
!5108 = !DILocation(line: 1149, column: 37, scope: !5105)
!5109 = !DILocation(line: 1150, column: 9, scope: !5105)
!5110 = !DILocation(line: 1151, column: 5, scope: !5097)
!5111 = !DILocation(line: 1153, column: 45, scope: !1058)
!5112 = !DILocation(line: 1153, column: 48, scope: !1058)
!5113 = !DILocation(line: 1153, column: 55, scope: !1058)
!5114 = !DILocation(line: 1153, column: 5, scope: !1058)
!5115 = !DILocation(line: 913, column: 16, scope: !4664, inlinedAt: !4668)
!5116 = !DILocation(line: 913, column: 26, scope: !4664, inlinedAt: !4668)
!5117 = !DILocation(line: 913, column: 32, scope: !4664, inlinedAt: !4668)
!5118 = !DILocation(line: 916, column: 10, scope: !5119, inlinedAt: !4668)
!5119 = distinct !DILexicalBlock(scope: !4664, file: !1059, line: 916, column: 9)
!5120 = !DILocation(line: 916, column: 9, scope: !4664, inlinedAt: !4668)
!5121 = !DILocation(line: 917, column: 27, scope: !5122, inlinedAt: !4668)
!5122 = distinct !DILexicalBlock(scope: !5119, file: !1059, line: 916, column: 17)
!5123 = !DILocation(line: 917, column: 37, scope: !5122, inlinedAt: !4668)
!5124 = !DILocation(line: 917, column: 24, scope: !5122, inlinedAt: !4668)
!5125 = !DILocation(line: 917, column: 46, scope: !5122, inlinedAt: !4668)
!5126 = !DILocation(line: 917, column: 56, scope: !5122, inlinedAt: !4668)
!5127 = !DILocation(line: 917, column: 61, scope: !5122, inlinedAt: !4668)
!5128 = !DILocation(line: 917, column: 42, scope: !5122, inlinedAt: !4668)
!5129 = !DILocation(line: 917, column: 20, scope: !5122, inlinedAt: !4668)
!5130 = !DILocation(line: 918, column: 22, scope: !5122, inlinedAt: !4668)
!5131 = !DILocation(line: 918, column: 32, scope: !5122, inlinedAt: !4668)
!5132 = !DILocation(line: 918, column: 37, scope: !5122, inlinedAt: !4668)
!5133 = !DILocation(line: 918, column: 19, scope: !5122, inlinedAt: !4668)
!5134 = !DILocation(line: 919, column: 5, scope: !5122, inlinedAt: !4668)
!5135 = !DILocation(line: 920, column: 20, scope: !5136, inlinedAt: !4668)
!5136 = distinct !DILexicalBlock(scope: !5119, file: !1059, line: 919, column: 12)
!5137 = !DILocation(line: 921, column: 21, scope: !5136, inlinedAt: !4668)
!5138 = !DILocation(line: 921, column: 31, scope: !5136, inlinedAt: !4668)
!5139 = !DILocation(line: 921, column: 19, scope: !5136, inlinedAt: !4668)
!5140 = !DILocation(line: 923, column: 5, scope: !4664, inlinedAt: !4668)
!5141 = !DILocation(line: 923, column: 12, scope: !5142, inlinedAt: !4668)
!5142 = !DILexicalBlockFile(scope: !4664, file: !1059, discriminator: 1)
!5143 = !DILocation(line: 923, column: 16, scope: !5142, inlinedAt: !4668)
!5144 = !DILocation(line: 923, column: 14, scope: !5142, inlinedAt: !4668)
!5145 = !DILocation(line: 923, column: 20, scope: !5142, inlinedAt: !4668)
!5146 = !DILocation(line: 924, column: 23, scope: !4664, inlinedAt: !4668)
!5147 = !DILocation(line: 924, column: 26, scope: !4664, inlinedAt: !4668)
!5148 = !DILocation(line: 924, column: 34, scope: !4664, inlinedAt: !4668)
!5149 = !DILocation(line: 924, column: 110, scope: !4664, inlinedAt: !4668)
!5150 = !DILocation(line: 924, column: 115, scope: !4664, inlinedAt: !4668)
!5151 = !DILocation(line: 924, column: 112, scope: !4664, inlinedAt: !4668)
!5152 = !DILocation(line: 924, column: 107, scope: !4664, inlinedAt: !4668)
!5153 = !DILocation(line: 924, column: 128, scope: !4664, inlinedAt: !4668)
!5154 = !DILocation(line: 924, column: 126, scope: !4664, inlinedAt: !4668)
!5155 = !DILocation(line: 924, column: 39, scope: !4664, inlinedAt: !4668)
!5156 = !DILocation(line: 924, column: 42, scope: !4664, inlinedAt: !4668)
!5157 = !DILocation(line: 924, column: 50, scope: !4664, inlinedAt: !4668)
!5158 = !DILocation(line: 924, column: 12, scope: !4664, inlinedAt: !4668)
!5159 = !DILocation(line: 923, column: 20, scope: !5160, inlinedAt: !4668)
!5160 = !DILexicalBlockFile(scope: !4664, file: !1059, discriminator: 2)
!5161 = !DILocation(line: 923, column: 5, scope: !5162, inlinedAt: !4668)
!5162 = !DILexicalBlockFile(scope: !4664, file: !1059, discriminator: 3)
!5163 = !DILocation(line: 925, column: 10, scope: !4664, inlinedAt: !4668)
!5164 = !DILocation(line: 923, column: 5, scope: !5165, inlinedAt: !4668)
!5165 = !DILexicalBlockFile(scope: !4664, file: !1059, discriminator: 4)
!5166 = distinct !{!5166, !5167}
!5167 = !DILocation(line: 923, column: 5, scope: !4664)
!5168 = !DILocation(line: 926, column: 24, scope: !4664, inlinedAt: !4668)
!5169 = !DILocation(line: 926, column: 6, scope: !4664, inlinedAt: !4668)
!5170 = !DILocation(line: 926, column: 22, scope: !4664, inlinedAt: !4668)
!5171 = !DILocation(line: 928, column: 7, scope: !4664, inlinedAt: !4668)
!5172 = !DILocation(line: 929, column: 5, scope: !4664, inlinedAt: !4668)
!5173 = !DILocation(line: 929, column: 12, scope: !5142, inlinedAt: !4668)
!5174 = !DILocation(line: 929, column: 16, scope: !5142, inlinedAt: !4668)
!5175 = !DILocation(line: 929, column: 14, scope: !5142, inlinedAt: !4668)
!5176 = !DILocation(line: 929, column: 20, scope: !5142, inlinedAt: !4668)
!5177 = !DILocation(line: 930, column: 23, scope: !4664, inlinedAt: !4668)
!5178 = !DILocation(line: 930, column: 26, scope: !4664, inlinedAt: !4668)
!5179 = !DILocation(line: 930, column: 34, scope: !4664, inlinedAt: !4668)
!5180 = !DILocation(line: 930, column: 110, scope: !4664, inlinedAt: !4668)
!5181 = !DILocation(line: 930, column: 115, scope: !4664, inlinedAt: !4668)
!5182 = !DILocation(line: 930, column: 112, scope: !4664, inlinedAt: !4668)
!5183 = !DILocation(line: 930, column: 107, scope: !4664, inlinedAt: !4668)
!5184 = !DILocation(line: 930, column: 128, scope: !4664, inlinedAt: !4668)
!5185 = !DILocation(line: 930, column: 126, scope: !4664, inlinedAt: !4668)
!5186 = !DILocation(line: 930, column: 39, scope: !4664, inlinedAt: !4668)
!5187 = !DILocation(line: 930, column: 42, scope: !4664, inlinedAt: !4668)
!5188 = !DILocation(line: 930, column: 50, scope: !4664, inlinedAt: !4668)
!5189 = !DILocation(line: 930, column: 12, scope: !4664, inlinedAt: !4668)
!5190 = !DILocation(line: 929, column: 20, scope: !5160, inlinedAt: !4668)
!5191 = !DILocation(line: 929, column: 5, scope: !5162, inlinedAt: !4668)
!5192 = !DILocation(line: 931, column: 10, scope: !4664, inlinedAt: !4668)
!5193 = !DILocation(line: 929, column: 5, scope: !5165, inlinedAt: !4668)
!5194 = distinct !{!5194, !5195}
!5195 = !DILocation(line: 929, column: 5, scope: !4664)
!5196 = !DILocation(line: 932, column: 24, scope: !4664, inlinedAt: !4668)
!5197 = !DILocation(line: 932, column: 6, scope: !4664, inlinedAt: !4668)
!5198 = !DILocation(line: 932, column: 22, scope: !4664, inlinedAt: !4668)
!5199 = !DILocation(line: 1156, column: 9, scope: !4651)
!5200 = !DILocation(line: 1156, column: 34, scope: !4651)
!5201 = !DILocation(line: 1156, column: 9, scope: !1058)
!5202 = !DILocalVariable(name: "suffix", scope: !4650, file: !1059, line: 1157, type: !1043)
!5203 = !DILocation(line: 1157, column: 13, scope: !4650)
!5204 = !DILocation(line: 1157, column: 59, scope: !4650)
!5205 = !DILocation(line: 1157, column: 62, scope: !4650)
!5206 = !DILocation(line: 1157, column: 22, scope: !4650)
!5207 = !DILocation(line: 939, column: 19, scope: !4627, inlinedAt: !4649)
!5208 = !DILocation(line: 939, column: 49, scope: !4627, inlinedAt: !4649)
!5209 = !DILocation(line: 939, column: 55, scope: !4627, inlinedAt: !4649)
!5210 = !DILocation(line: 940, column: 39, scope: !4627, inlinedAt: !4649)
!5211 = !DILocation(line: 940, column: 42, scope: !4627, inlinedAt: !4649)
!5212 = !DILocation(line: 940, column: 50, scope: !4627, inlinedAt: !4649)
!5213 = !DILocation(line: 940, column: 17, scope: !4627, inlinedAt: !4649)
!5214 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4655)
!5215 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4655)
!5216 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4655)
!5217 = !DILocation(line: 942, column: 12, scope: !4626, inlinedAt: !4649)
!5218 = !DILocation(line: 942, column: 10, scope: !4626, inlinedAt: !4649)
!5219 = !DILocation(line: 942, column: 17, scope: !5220, inlinedAt: !4649)
!5220 = !DILexicalBlockFile(scope: !4625, file: !1059, discriminator: 1)
!5221 = !DILocation(line: 942, column: 21, scope: !5220, inlinedAt: !4649)
!5222 = !DILocation(line: 942, column: 19, scope: !5220, inlinedAt: !4649)
!5223 = !DILocation(line: 942, column: 5, scope: !5220, inlinedAt: !4649)
!5224 = !DILocation(line: 943, column: 18, scope: !4625, inlinedAt: !4649)
!5225 = !DILocation(line: 943, column: 24, scope: !4625, inlinedAt: !4649)
!5226 = !DILocation(line: 943, column: 54, scope: !4625, inlinedAt: !4649)
!5227 = !DILocation(line: 943, column: 57, scope: !4625, inlinedAt: !4649)
!5228 = !DILocation(line: 943, column: 65, scope: !4625, inlinedAt: !4649)
!5229 = !DILocation(line: 943, column: 32, scope: !4625, inlinedAt: !4649)
!5230 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4648)
!5231 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4648)
!5232 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4648)
!5233 = !DILocation(line: 943, column: 30, scope: !4625, inlinedAt: !4649)
!5234 = !DILocation(line: 943, column: 15, scope: !4625, inlinedAt: !4649)
!5235 = !DILocation(line: 942, column: 30, scope: !5236, inlinedAt: !4649)
!5236 = !DILexicalBlockFile(scope: !4625, file: !1059, discriminator: 2)
!5237 = !DILocation(line: 942, column: 5, scope: !5236, inlinedAt: !4649)
!5238 = distinct !{!5238, !5239}
!5239 = !DILocation(line: 942, column: 5, scope: !4627)
!5240 = !DILocation(line: 944, column: 12, scope: !4627, inlinedAt: !4649)
!5241 = !DILocation(line: 1158, column: 44, scope: !4650)
!5242 = !DILocation(line: 1158, column: 69, scope: !4650)
!5243 = !DILocation(line: 1158, column: 75, scope: !4650)
!5244 = !DILocation(line: 1158, column: 39, scope: !4650)
!5245 = !DILocation(line: 1159, column: 15, scope: !4650)
!5246 = !DILocation(line: 1159, column: 40, scope: !4650)
!5247 = !DILocation(line: 1159, column: 12, scope: !4650)
!5248 = !DILocation(line: 1158, column: 81, scope: !4650)
!5249 = !DILocation(line: 1160, column: 9, scope: !4650)
!5250 = !DILocation(line: 1159, column: 46, scope: !4650)
!5251 = !DILocation(line: 1158, column: 34, scope: !4650)
!5252 = !DILocation(line: 1161, column: 5, scope: !4650)
!5253 = !DILocation(line: 1163, column: 9, scope: !4630)
!5254 = !DILocation(line: 1163, column: 34, scope: !4630)
!5255 = !DILocation(line: 1163, column: 9, scope: !1058)
!5256 = !DILocalVariable(name: "suffix", scope: !4629, file: !1059, line: 1164, type: !1043)
!5257 = !DILocation(line: 1164, column: 13, scope: !4629)
!5258 = !DILocation(line: 1164, column: 59, scope: !4629)
!5259 = !DILocation(line: 1164, column: 62, scope: !4629)
!5260 = !DILocation(line: 1164, column: 22, scope: !4629)
!5261 = !DILocation(line: 939, column: 19, scope: !4627, inlinedAt: !4628)
!5262 = !DILocation(line: 939, column: 49, scope: !4627, inlinedAt: !4628)
!5263 = !DILocation(line: 939, column: 55, scope: !4627, inlinedAt: !4628)
!5264 = !DILocation(line: 940, column: 39, scope: !4627, inlinedAt: !4628)
!5265 = !DILocation(line: 940, column: 42, scope: !4627, inlinedAt: !4628)
!5266 = !DILocation(line: 940, column: 50, scope: !4627, inlinedAt: !4628)
!5267 = !DILocation(line: 940, column: 17, scope: !4627, inlinedAt: !4628)
!5268 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4634)
!5269 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4634)
!5270 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4634)
!5271 = !DILocation(line: 942, column: 12, scope: !4626, inlinedAt: !4628)
!5272 = !DILocation(line: 942, column: 10, scope: !4626, inlinedAt: !4628)
!5273 = !DILocation(line: 942, column: 17, scope: !5220, inlinedAt: !4628)
!5274 = !DILocation(line: 942, column: 21, scope: !5220, inlinedAt: !4628)
!5275 = !DILocation(line: 942, column: 19, scope: !5220, inlinedAt: !4628)
!5276 = !DILocation(line: 942, column: 5, scope: !5220, inlinedAt: !4628)
!5277 = !DILocation(line: 943, column: 18, scope: !4625, inlinedAt: !4628)
!5278 = !DILocation(line: 943, column: 24, scope: !4625, inlinedAt: !4628)
!5279 = !DILocation(line: 943, column: 54, scope: !4625, inlinedAt: !4628)
!5280 = !DILocation(line: 943, column: 57, scope: !4625, inlinedAt: !4628)
!5281 = !DILocation(line: 943, column: 65, scope: !4625, inlinedAt: !4628)
!5282 = !DILocation(line: 943, column: 32, scope: !4625, inlinedAt: !4628)
!5283 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4624)
!5284 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4624)
!5285 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4624)
!5286 = !DILocation(line: 943, column: 30, scope: !4625, inlinedAt: !4628)
!5287 = !DILocation(line: 943, column: 15, scope: !4625, inlinedAt: !4628)
!5288 = !DILocation(line: 942, column: 30, scope: !5236, inlinedAt: !4628)
!5289 = !DILocation(line: 942, column: 5, scope: !5236, inlinedAt: !4628)
!5290 = !DILocation(line: 944, column: 12, scope: !4627, inlinedAt: !4628)
!5291 = !DILocation(line: 1165, column: 44, scope: !4629)
!5292 = !DILocation(line: 1165, column: 69, scope: !4629)
!5293 = !DILocation(line: 1165, column: 75, scope: !4629)
!5294 = !DILocation(line: 1165, column: 39, scope: !4629)
!5295 = !DILocation(line: 1166, column: 15, scope: !4629)
!5296 = !DILocation(line: 1166, column: 40, scope: !4629)
!5297 = !DILocation(line: 1166, column: 12, scope: !4629)
!5298 = !DILocation(line: 1165, column: 81, scope: !4629)
!5299 = !DILocation(line: 1167, column: 9, scope: !4629)
!5300 = !DILocation(line: 1166, column: 46, scope: !4629)
!5301 = !DILocation(line: 1165, column: 34, scope: !4629)
!5302 = !DILocation(line: 1168, column: 5, scope: !4629)
!5303 = !DILocation(line: 1170, column: 9, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !1058, file: !1059, line: 1170, column: 9)
!5305 = !DILocation(line: 1170, column: 18, scope: !5304)
!5306 = !DILocation(line: 1170, column: 9, scope: !1058)
!5307 = !DILocation(line: 1171, column: 9, scope: !5304)
!5308 = distinct !{!5308, !5307}
!5309 = !DILocalVariable(name: "SWAP_tmp", scope: !5310, file: !1059, line: 1171, type: !1043)
!5310 = distinct !DILexicalBlock(scope: !5304, file: !1059, line: 1171, column: 11)
!5311 = !DILocation(line: 1171, column: 16, scope: !5310)
!5312 = !DILocation(line: 1171, column: 26, scope: !5313)
!5313 = !DILexicalBlockFile(scope: !5310, file: !1059, discriminator: 1)
!5314 = !DILocation(line: 1171, column: 16, scope: !5313)
!5315 = !DILocation(line: 1171, column: 78, scope: !5313)
!5316 = !DILocation(line: 1171, column: 76, scope: !5313)
!5317 = !DILocation(line: 1171, column: 130, scope: !5313)
!5318 = !DILocation(line: 1171, column: 128, scope: !5313)
!5319 = !DILocation(line: 1171, column: 139, scope: !5313)
!5320 = !DILocation(line: 1171, column: 139, scope: !5321)
!5321 = !DILexicalBlockFile(scope: !5310, file: !1059, discriminator: 2)
!5322 = !DILocation(line: 1173, column: 21, scope: !1058)
!5323 = !DILocation(line: 1173, column: 46, scope: !1058)
!5324 = !DILocation(line: 1173, column: 19, scope: !1058)
!5325 = !DILocation(line: 1174, column: 21, scope: !1058)
!5326 = !DILocation(line: 1174, column: 46, scope: !1058)
!5327 = !DILocation(line: 1174, column: 19, scope: !1058)
!5328 = !DILocation(line: 1176, column: 13, scope: !1058)
!5329 = !DILocation(line: 1176, column: 5, scope: !1058)
!5330 = !DILocalVariable(name: "last_x_c", scope: !5331, file: !1059, line: 1178, type: !1043)
!5331 = distinct !DILexicalBlock(scope: !5332, file: !1059, line: 1177, column: 21)
!5332 = distinct !DILexicalBlock(scope: !1058, file: !1059, line: 1176, column: 23)
!5333 = !DILocation(line: 1178, column: 13, scope: !5331)
!5334 = !DILocation(line: 1178, column: 24, scope: !5331)
!5335 = !DILocation(line: 1178, column: 49, scope: !5331)
!5336 = !DILocalVariable(name: "last_y_c", scope: !5331, file: !1059, line: 1179, type: !1043)
!5337 = !DILocation(line: 1179, column: 13, scope: !5331)
!5338 = !DILocation(line: 1179, column: 24, scope: !5331)
!5339 = !DILocation(line: 1179, column: 49, scope: !5331)
!5340 = !DILocation(line: 1181, column: 20, scope: !5331)
!5341 = !DILocation(line: 1182, column: 20, scope: !5331)
!5342 = !DILocation(line: 1183, column: 48, scope: !5331)
!5343 = !DILocation(line: 1183, column: 21, scope: !5331)
!5344 = !DILocation(line: 1183, column: 38, scope: !5331)
!5345 = !DILocation(line: 1183, column: 19, scope: !5331)
!5346 = !DILocation(line: 1184, column: 13, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5331, file: !1059, line: 1184, column: 13)
!5348 = !DILocation(line: 1184, column: 24, scope: !5347)
!5349 = !DILocation(line: 1184, column: 13, scope: !5331)
!5350 = !DILocation(line: 1185, column: 23, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5347, file: !1059, line: 1184, column: 30)
!5352 = !DILocation(line: 1186, column: 23, scope: !5351)
!5353 = !DILocation(line: 1187, column: 9, scope: !5351)
!5354 = !DILocation(line: 1187, column: 20, scope: !5355)
!5355 = !DILexicalBlockFile(scope: !5356, file: !1059, discriminator: 1)
!5356 = distinct !DILexicalBlock(scope: !5347, file: !1059, line: 1187, column: 20)
!5357 = !DILocation(line: 1187, column: 31, scope: !5355)
!5358 = !DILocation(line: 1188, column: 58, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5356, file: !1059, line: 1187, column: 37)
!5360 = !DILocation(line: 1188, column: 26, scope: !5359)
!5361 = !DILocation(line: 1188, column: 43, scope: !5359)
!5362 = !DILocation(line: 1188, column: 73, scope: !5359)
!5363 = !DILocation(line: 1188, column: 23, scope: !5359)
!5364 = !DILocation(line: 1189, column: 23, scope: !5359)
!5365 = !DILocation(line: 1190, column: 23, scope: !5359)
!5366 = !DILocation(line: 1191, column: 9, scope: !5359)
!5367 = !DILocation(line: 1191, column: 20, scope: !5368)
!5368 = !DILexicalBlockFile(scope: !5369, file: !1059, discriminator: 1)
!5369 = distinct !DILexicalBlock(scope: !5356, file: !1059, line: 1191, column: 20)
!5370 = !DILocation(line: 1191, column: 31, scope: !5368)
!5371 = !DILocation(line: 1192, column: 58, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5369, file: !1059, line: 1191, column: 38)
!5373 = !DILocation(line: 1192, column: 26, scope: !5372)
!5374 = !DILocation(line: 1192, column: 43, scope: !5372)
!5375 = !DILocation(line: 1192, column: 73, scope: !5372)
!5376 = !DILocation(line: 1192, column: 23, scope: !5372)
!5377 = !DILocation(line: 1193, column: 23, scope: !5372)
!5378 = !DILocation(line: 1194, column: 23, scope: !5372)
!5379 = !DILocation(line: 1195, column: 9, scope: !5372)
!5380 = !DILocation(line: 1196, column: 58, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5369, file: !1059, line: 1195, column: 16)
!5382 = !DILocation(line: 1196, column: 26, scope: !5381)
!5383 = !DILocation(line: 1196, column: 43, scope: !5381)
!5384 = !DILocation(line: 1196, column: 73, scope: !5381)
!5385 = !DILocation(line: 1196, column: 23, scope: !5381)
!5386 = !DILocation(line: 1197, column: 23, scope: !5381)
!5387 = !DILocation(line: 1198, column: 23, scope: !5381)
!5388 = !DILocation(line: 1200, column: 9, scope: !5331)
!5389 = !DILocation(line: 1203, column: 19, scope: !5332)
!5390 = !DILocation(line: 1204, column: 19, scope: !5332)
!5391 = !DILocation(line: 1205, column: 20, scope: !5332)
!5392 = !DILocation(line: 1206, column: 20, scope: !5332)
!5393 = !DILocation(line: 1207, column: 65, scope: !5332)
!5394 = !DILocation(line: 1207, column: 21, scope: !5332)
!5395 = !DILocation(line: 1207, column: 39, scope: !5332)
!5396 = !DILocation(line: 1207, column: 19, scope: !5332)
!5397 = !DILocation(line: 1208, column: 9, scope: !5332)
!5398 = !DILocation(line: 1210, column: 19, scope: !5332)
!5399 = !DILocation(line: 1211, column: 19, scope: !5332)
!5400 = !DILocation(line: 1212, column: 20, scope: !5332)
!5401 = !DILocation(line: 1213, column: 20, scope: !5332)
!5402 = !DILocation(line: 1214, column: 65, scope: !5332)
!5403 = !DILocation(line: 1214, column: 21, scope: !5332)
!5404 = !DILocation(line: 1214, column: 39, scope: !5332)
!5405 = !DILocation(line: 1214, column: 19, scope: !5332)
!5406 = !DILocation(line: 1215, column: 9, scope: !5332)
!5407 = !DILocation(line: 1217, column: 14, scope: !1058)
!5408 = !DILocation(line: 1218, column: 24, scope: !1058)
!5409 = !DILocation(line: 1218, column: 34, scope: !1058)
!5410 = !DILocation(line: 1218, column: 39, scope: !1058)
!5411 = !DILocation(line: 1218, column: 21, scope: !1058)
!5412 = !DILocation(line: 1220, column: 14, scope: !4475)
!5413 = !DILocation(line: 1220, column: 12, scope: !4475)
!5414 = !DILocation(line: 1220, column: 10, scope: !4475)
!5415 = !DILocation(line: 1220, column: 31, scope: !5416)
!5416 = !DILexicalBlockFile(scope: !4474, file: !1059, discriminator: 1)
!5417 = !DILocation(line: 1220, column: 33, scope: !5416)
!5418 = !DILocation(line: 1220, column: 5, scope: !5416)
!5419 = !DILocalVariable(name: "n", scope: !4473, file: !1059, line: 1221, type: !1043)
!5420 = !DILocation(line: 1221, column: 13, scope: !4473)
!5421 = !DILocalVariable(name: "m", scope: !4473, file: !1059, line: 1221, type: !1043)
!5422 = !DILocation(line: 1221, column: 16, scope: !4473)
!5423 = !DILocalVariable(name: "x_cg", scope: !4473, file: !1059, line: 1222, type: !1043)
!5424 = !DILocation(line: 1222, column: 13, scope: !4473)
!5425 = !DILocalVariable(name: "y_cg", scope: !4473, file: !1059, line: 1222, type: !1043)
!5426 = !DILocation(line: 1222, column: 19, scope: !4473)
!5427 = !DILocalVariable(name: "x_c", scope: !4473, file: !1059, line: 1222, type: !1043)
!5428 = !DILocation(line: 1222, column: 25, scope: !4473)
!5429 = !DILocalVariable(name: "y_c", scope: !4473, file: !1059, line: 1222, type: !1043)
!5430 = !DILocation(line: 1222, column: 30, scope: !4473)
!5431 = !DILocalVariable(name: "pos", scope: !4473, file: !1059, line: 1222, type: !1043)
!5432 = !DILocation(line: 1222, column: 35, scope: !4473)
!5433 = !DILocalVariable(name: "implicit_non_zero_coeff", scope: !4473, file: !1059, line: 1223, type: !1043)
!5434 = !DILocation(line: 1223, column: 13, scope: !4473)
!5435 = !DILocalVariable(name: "trans_coeff_level", scope: !4473, file: !1059, line: 1224, type: !1052)
!5436 = !DILocation(line: 1224, column: 17, scope: !4473)
!5437 = !DILocalVariable(name: "prev_sig", scope: !4473, file: !1059, line: 1225, type: !1043)
!5438 = !DILocation(line: 1225, column: 13, scope: !4473)
!5439 = !DILocalVariable(name: "offset", scope: !4473, file: !1059, line: 1226, type: !1043)
!5440 = !DILocation(line: 1226, column: 13, scope: !4473)
!5441 = !DILocation(line: 1226, column: 22, scope: !4473)
!5442 = !DILocation(line: 1226, column: 24, scope: !4473)
!5443 = !DILocalVariable(name: "rice_init", scope: !4473, file: !1059, line: 1227, type: !1043)
!5444 = !DILocation(line: 1227, column: 13, scope: !4473)
!5445 = !DILocalVariable(name: "significant_coeff_flag_idx", scope: !4473, file: !1059, line: 1229, type: !5446)
!5446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 128, align: 8, elements: !1793)
!5447 = !DILocation(line: 1229, column: 17, scope: !4473)
!5448 = !DILocalVariable(name: "nb_significant_coeff_flag", scope: !4473, file: !1059, line: 1230, type: !1050)
!5449 = !DILocation(line: 1230, column: 17, scope: !4473)
!5450 = !DILocation(line: 1232, column: 26, scope: !4473)
!5451 = !DILocation(line: 1232, column: 16, scope: !4473)
!5452 = !DILocation(line: 1232, column: 14, scope: !4473)
!5453 = !DILocation(line: 1233, column: 26, scope: !4473)
!5454 = !DILocation(line: 1233, column: 16, scope: !4473)
!5455 = !DILocation(line: 1233, column: 14, scope: !4473)
!5456 = !DILocation(line: 1235, column: 14, scope: !4616)
!5457 = !DILocation(line: 1235, column: 18, scope: !4616)
!5458 = !DILocation(line: 1235, column: 16, scope: !4616)
!5459 = !DILocation(line: 1235, column: 35, scope: !4616)
!5460 = !DILocation(line: 1235, column: 39, scope: !5461)
!5461 = !DILexicalBlockFile(scope: !4616, file: !1059, discriminator: 1)
!5462 = !DILocation(line: 1235, column: 41, scope: !5461)
!5463 = !DILocation(line: 1235, column: 13, scope: !5461)
!5464 = !DILocalVariable(name: "ctx_cg", scope: !4615, file: !1059, line: 1236, type: !1043)
!5465 = !DILocation(line: 1236, column: 17, scope: !4615)
!5466 = !DILocation(line: 1237, column: 17, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !4615, file: !1059, line: 1237, column: 17)
!5468 = !DILocation(line: 1237, column: 31, scope: !5467)
!5469 = !DILocation(line: 1237, column: 47, scope: !5467)
!5470 = !DILocation(line: 1237, column: 27, scope: !5467)
!5471 = !DILocation(line: 1237, column: 53, scope: !5467)
!5472 = !DILocation(line: 1237, column: 22, scope: !5467)
!5473 = !DILocation(line: 1237, column: 17, scope: !4615)
!5474 = !DILocation(line: 1238, column: 66, scope: !5467)
!5475 = !DILocation(line: 1238, column: 27, scope: !5467)
!5476 = !DILocation(line: 1238, column: 56, scope: !5467)
!5477 = !DILocation(line: 1238, column: 61, scope: !5467)
!5478 = !DILocation(line: 1238, column: 24, scope: !5467)
!5479 = !DILocation(line: 1238, column: 17, scope: !5467)
!5480 = !DILocation(line: 1239, column: 17, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !4615, file: !1059, line: 1239, column: 17)
!5482 = !DILocation(line: 1239, column: 31, scope: !5481)
!5483 = !DILocation(line: 1239, column: 47, scope: !5481)
!5484 = !DILocation(line: 1239, column: 27, scope: !5481)
!5485 = !DILocation(line: 1239, column: 53, scope: !5481)
!5486 = !DILocation(line: 1239, column: 22, scope: !5481)
!5487 = !DILocation(line: 1239, column: 17, scope: !4615)
!5488 = !DILocation(line: 1240, column: 62, scope: !5481)
!5489 = !DILocation(line: 1240, column: 67, scope: !5481)
!5490 = !DILocation(line: 1240, column: 27, scope: !5481)
!5491 = !DILocation(line: 1240, column: 56, scope: !5481)
!5492 = !DILocation(line: 1240, column: 24, scope: !5481)
!5493 = !DILocation(line: 1240, column: 17, scope: !5481)
!5494 = !DILocation(line: 1243, column: 53, scope: !4615)
!5495 = !DILocation(line: 1243, column: 56, scope: !4615)
!5496 = !DILocation(line: 1243, column: 63, scope: !4615)
!5497 = !DILocation(line: 1243, column: 17, scope: !4615)
!5498 = !DILocation(line: 951, column: 13, scope: !4612, inlinedAt: !4614)
!5499 = !DILocation(line: 951, column: 21, scope: !4612, inlinedAt: !4614)
!5500 = !DILocation(line: 951, column: 12, scope: !4612, inlinedAt: !4614)
!5501 = !DILocation(line: 951, column: 12, scope: !5502, inlinedAt: !4614)
!5502 = !DILexicalBlockFile(scope: !4612, file: !1059, discriminator: 1)
!5503 = !DILocation(line: 951, column: 36, scope: !5504, inlinedAt: !4614)
!5504 = !DILexicalBlockFile(scope: !4612, file: !1059, discriminator: 2)
!5505 = !DILocation(line: 951, column: 12, scope: !5504, inlinedAt: !4614)
!5506 = !DILocation(line: 951, column: 12, scope: !5507, inlinedAt: !4614)
!5507 = !DILexicalBlockFile(scope: !4612, file: !1059, discriminator: 3)
!5508 = !DILocation(line: 951, column: 48, scope: !5507, inlinedAt: !4614)
!5509 = !DILocation(line: 951, column: 53, scope: !5507, inlinedAt: !4614)
!5510 = !DILocation(line: 951, column: 45, scope: !5507, inlinedAt: !4614)
!5511 = !DILocation(line: 951, column: 9, scope: !5507, inlinedAt: !4614)
!5512 = !DILocation(line: 953, column: 23, scope: !4612, inlinedAt: !4614)
!5513 = !DILocation(line: 953, column: 26, scope: !4612, inlinedAt: !4614)
!5514 = !DILocation(line: 953, column: 34, scope: !4612, inlinedAt: !4614)
!5515 = !DILocation(line: 953, column: 106, scope: !4612, inlinedAt: !4614)
!5516 = !DILocation(line: 953, column: 104, scope: !4612, inlinedAt: !4614)
!5517 = !DILocation(line: 953, column: 39, scope: !4612, inlinedAt: !4614)
!5518 = !DILocation(line: 953, column: 42, scope: !4612, inlinedAt: !4614)
!5519 = !DILocation(line: 953, column: 50, scope: !4612, inlinedAt: !4614)
!5520 = !DILocation(line: 953, column: 12, scope: !4612, inlinedAt: !4614)
!5521 = !DILocation(line: 1242, column: 48, scope: !4615)
!5522 = !DILocation(line: 1242, column: 13, scope: !4615)
!5523 = !DILocation(line: 1242, column: 42, scope: !4615)
!5524 = !DILocation(line: 1242, column: 54, scope: !4615)
!5525 = !DILocation(line: 1244, column: 37, scope: !4615)
!5526 = !DILocation(line: 1245, column: 9, scope: !4615)
!5527 = !DILocation(line: 1247, column: 15, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !4616, file: !1059, line: 1245, column: 16)
!5529 = !DILocation(line: 1247, column: 23, scope: !5528)
!5530 = !DILocation(line: 1247, column: 20, scope: !5528)
!5531 = !DILocation(line: 1247, column: 37, scope: !5528)
!5532 = !DILocation(line: 1247, column: 40, scope: !5533)
!5533 = !DILexicalBlockFile(scope: !5528, file: !1059, discriminator: 1)
!5534 = !DILocation(line: 1247, column: 48, scope: !5533)
!5535 = !DILocation(line: 1247, column: 45, scope: !5533)
!5536 = !DILocation(line: 1247, column: 63, scope: !5533)
!5537 = !DILocation(line: 1248, column: 15, scope: !5528)
!5538 = !DILocation(line: 1248, column: 20, scope: !5528)
!5539 = !DILocation(line: 1248, column: 25, scope: !5528)
!5540 = !DILocation(line: 1248, column: 28, scope: !5533)
!5541 = !DILocation(line: 1248, column: 33, scope: !5533)
!5542 = !DILocation(line: 1247, column: 63, scope: !5543)
!5543 = !DILexicalBlockFile(scope: !5528, file: !1059, discriminator: 2)
!5544 = !DILocation(line: 1247, column: 63, scope: !5545)
!5545 = !DILexicalBlockFile(scope: !5528, file: !1059, discriminator: 3)
!5546 = !DILocation(line: 1247, column: 13, scope: !5545)
!5547 = !DILocation(line: 1246, column: 48, scope: !5528)
!5548 = !DILocation(line: 1246, column: 13, scope: !5528)
!5549 = !DILocation(line: 1246, column: 42, scope: !5528)
!5550 = !DILocation(line: 1246, column: 54, scope: !5528)
!5551 = !DILocation(line: 1251, column: 25, scope: !4473)
!5552 = !DILocation(line: 1251, column: 37, scope: !4473)
!5553 = !DILocation(line: 1251, column: 35, scope: !4473)
!5554 = !DILocation(line: 1251, column: 44, scope: !4473)
!5555 = !DILocation(line: 1251, column: 23, scope: !4473)
!5556 = !DILocation(line: 1253, column: 13, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !4473, file: !1059, line: 1253, column: 13)
!5558 = !DILocation(line: 1253, column: 18, scope: !5557)
!5559 = !DILocation(line: 1253, column: 15, scope: !5557)
!5560 = !DILocation(line: 1253, column: 13, scope: !4473)
!5561 = !DILocation(line: 1254, column: 21, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5557, file: !1059, line: 1253, column: 35)
!5563 = !DILocation(line: 1254, column: 35, scope: !5562)
!5564 = !DILocation(line: 1254, column: 19, scope: !5562)
!5565 = !DILocation(line: 1255, column: 45, scope: !5562)
!5566 = !DILocation(line: 1255, column: 13, scope: !5562)
!5567 = !DILocation(line: 1255, column: 43, scope: !5562)
!5568 = !DILocation(line: 1256, column: 39, scope: !5562)
!5569 = !DILocation(line: 1257, column: 9, scope: !5562)
!5570 = !DILocation(line: 1258, column: 19, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5557, file: !1059, line: 1257, column: 16)
!5572 = !DILocation(line: 1261, column: 13, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !4473, file: !1059, line: 1261, column: 13)
!5574 = !DILocation(line: 1261, column: 27, scope: !5573)
!5575 = !DILocation(line: 1261, column: 24, scope: !5573)
!5576 = !DILocation(line: 1261, column: 44, scope: !5573)
!5577 = !DILocation(line: 1261, column: 49, scope: !5573)
!5578 = !DILocation(line: 1261, column: 18, scope: !5573)
!5579 = !DILocation(line: 1261, column: 13, scope: !4473)
!5580 = !DILocation(line: 1262, column: 65, scope: !5573)
!5581 = !DILocation(line: 1262, column: 26, scope: !5573)
!5582 = !DILocation(line: 1262, column: 55, scope: !5573)
!5583 = !DILocation(line: 1262, column: 60, scope: !5573)
!5584 = !DILocation(line: 1262, column: 25, scope: !5573)
!5585 = !DILocation(line: 1262, column: 24, scope: !5573)
!5586 = !DILocation(line: 1262, column: 22, scope: !5573)
!5587 = !DILocation(line: 1262, column: 13, scope: !5573)
!5588 = !DILocation(line: 1263, column: 13, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !4473, file: !1059, line: 1263, column: 13)
!5590 = !DILocation(line: 1263, column: 27, scope: !5589)
!5591 = !DILocation(line: 1263, column: 24, scope: !5589)
!5592 = !DILocation(line: 1263, column: 44, scope: !5589)
!5593 = !DILocation(line: 1263, column: 49, scope: !5589)
!5594 = !DILocation(line: 1263, column: 18, scope: !5589)
!5595 = !DILocation(line: 1263, column: 13, scope: !4473)
!5596 = !DILocation(line: 1264, column: 63, scope: !5589)
!5597 = !DILocation(line: 1264, column: 68, scope: !5589)
!5598 = !DILocation(line: 1264, column: 28, scope: !5589)
!5599 = !DILocation(line: 1264, column: 57, scope: !5589)
!5600 = !DILocation(line: 1264, column: 27, scope: !5589)
!5601 = !DILocation(line: 1264, column: 26, scope: !5589)
!5602 = !DILocation(line: 1264, column: 73, scope: !5589)
!5603 = !DILocation(line: 1264, column: 22, scope: !5589)
!5604 = !DILocation(line: 1264, column: 13, scope: !5589)
!5605 = !DILocation(line: 1266, column: 48, scope: !4586)
!5606 = !DILocation(line: 1266, column: 13, scope: !4586)
!5607 = !DILocation(line: 1266, column: 42, scope: !4586)
!5608 = !DILocation(line: 1266, column: 54, scope: !4586)
!5609 = !DILocation(line: 1266, column: 57, scope: !5610)
!5610 = !DILexicalBlockFile(scope: !4586, file: !1059, discriminator: 1)
!5611 = !DILocation(line: 1266, column: 63, scope: !5610)
!5612 = !DILocation(line: 1266, column: 13, scope: !5610)
!5613 = !DILocalVariable(name: "ctx_idx_map_p", scope: !4585, file: !1059, line: 1274, type: !1183)
!5614 = !DILocation(line: 1274, column: 28, scope: !4585)
!5615 = !DILocalVariable(name: "scf_offset", scope: !4585, file: !1059, line: 1275, type: !1043)
!5616 = !DILocation(line: 1275, column: 17, scope: !4585)
!5617 = !DILocation(line: 1276, column: 17, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !4585, file: !1059, line: 1276, column: 17)
!5619 = !DILocation(line: 1276, column: 20, scope: !5618)
!5620 = !DILocation(line: 1276, column: 23, scope: !5618)
!5621 = !DILocation(line: 1276, column: 28, scope: !5618)
!5622 = !DILocation(line: 1276, column: 64, scope: !5618)
!5623 = !DILocation(line: 1277, column: 18, scope: !5618)
!5624 = !DILocation(line: 1277, column: 38, scope: !5618)
!5625 = !DILocation(line: 1277, column: 41, scope: !5626)
!5626 = !DILexicalBlockFile(scope: !5618, file: !1059, discriminator: 1)
!5627 = !DILocation(line: 1277, column: 45, scope: !5626)
!5628 = !DILocation(line: 1277, column: 48, scope: !5626)
!5629 = !DILocation(line: 1276, column: 17, scope: !5630)
!5630 = !DILexicalBlockFile(scope: !4585, file: !1059, discriminator: 1)
!5631 = !DILocation(line: 1278, column: 31, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5618, file: !1059, line: 1277, column: 76)
!5633 = !DILocation(line: 1279, column: 21, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5632, file: !1059, line: 1279, column: 21)
!5635 = !DILocation(line: 1279, column: 27, scope: !5634)
!5636 = !DILocation(line: 1279, column: 21, scope: !5632)
!5637 = !DILocation(line: 1280, column: 32, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5634, file: !1059, line: 1279, column: 33)
!5639 = !DILocation(line: 1281, column: 17, scope: !5638)
!5640 = !DILocation(line: 1282, column: 32, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5634, file: !1059, line: 1281, column: 24)
!5642 = !DILocation(line: 1284, column: 13, scope: !5632)
!5643 = !DILocation(line: 1285, column: 21, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !1059, line: 1285, column: 21)
!5645 = distinct !DILexicalBlock(scope: !5618, file: !1059, line: 1284, column: 20)
!5646 = !DILocation(line: 1285, column: 27, scope: !5644)
!5647 = !DILocation(line: 1285, column: 21, scope: !5645)
!5648 = !DILocation(line: 1286, column: 32, scope: !5644)
!5649 = !DILocation(line: 1286, column: 21, scope: !5644)
!5650 = !DILocation(line: 1287, column: 21, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5645, file: !1059, line: 1287, column: 21)
!5652 = !DILocation(line: 1287, column: 37, scope: !5651)
!5653 = !DILocation(line: 1287, column: 21, scope: !5645)
!5654 = !DILocation(line: 1288, column: 35, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5651, file: !1059, line: 1287, column: 43)
!5656 = !DILocation(line: 1289, column: 17, scope: !5655)
!5657 = !DILocation(line: 1290, column: 62, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5651, file: !1059, line: 1289, column: 24)
!5659 = !DILocation(line: 1290, column: 71, scope: !5658)
!5660 = !DILocation(line: 1290, column: 76, scope: !5658)
!5661 = !DILocation(line: 1290, column: 49, scope: !5658)
!5662 = !DILocation(line: 1290, column: 35, scope: !5658)
!5663 = !DILocation(line: 1291, column: 25, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5658, file: !1059, line: 1291, column: 25)
!5665 = !DILocation(line: 1291, column: 31, scope: !5664)
!5666 = !DILocation(line: 1291, column: 25, scope: !5658)
!5667 = !DILocation(line: 1292, column: 30, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !1059, line: 1292, column: 29)
!5669 = distinct !DILexicalBlock(scope: !5664, file: !1059, line: 1291, column: 37)
!5670 = !DILocation(line: 1292, column: 35, scope: !5668)
!5671 = !DILocation(line: 1292, column: 39, scope: !5668)
!5672 = !DILocation(line: 1292, column: 42, scope: !5673)
!5673 = !DILexicalBlockFile(scope: !5668, file: !1059, discriminator: 1)
!5674 = !DILocation(line: 1292, column: 47, scope: !5673)
!5675 = !DILocation(line: 1292, column: 29, scope: !5673)
!5676 = !DILocation(line: 1293, column: 40, scope: !5668)
!5677 = !DILocation(line: 1293, column: 29, scope: !5668)
!5678 = !DILocation(line: 1294, column: 29, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5669, file: !1059, line: 1294, column: 29)
!5680 = !DILocation(line: 1294, column: 45, scope: !5679)
!5681 = !DILocation(line: 1294, column: 29, scope: !5669)
!5682 = !DILocation(line: 1295, column: 44, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5679, file: !1059, line: 1294, column: 51)
!5684 = !DILocation(line: 1295, column: 53, scope: !5683)
!5685 = !DILocation(line: 1295, column: 43, scope: !5683)
!5686 = !DILocation(line: 1295, column: 40, scope: !5683)
!5687 = !DILocation(line: 1296, column: 25, scope: !5683)
!5688 = !DILocation(line: 1297, column: 40, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5679, file: !1059, line: 1296, column: 32)
!5690 = !DILocation(line: 1299, column: 21, scope: !5669)
!5691 = !DILocation(line: 1300, column: 29, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5693, file: !1059, line: 1300, column: 29)
!5693 = distinct !DILexicalBlock(scope: !5664, file: !1059, line: 1299, column: 28)
!5694 = !DILocation(line: 1300, column: 45, scope: !5692)
!5695 = !DILocation(line: 1300, column: 29, scope: !5693)
!5696 = !DILocation(line: 1301, column: 40, scope: !5692)
!5697 = !DILocation(line: 1301, column: 29, scope: !5692)
!5698 = !DILocation(line: 1303, column: 40, scope: !5692)
!5699 = !DILocation(line: 1307, column: 22, scope: !4600)
!5700 = !DILocation(line: 1307, column: 20, scope: !4600)
!5701 = !DILocation(line: 1307, column: 18, scope: !4600)
!5702 = !DILocation(line: 1307, column: 29, scope: !5703)
!5703 = !DILexicalBlockFile(scope: !4599, file: !1059, discriminator: 1)
!5704 = !DILocation(line: 1307, column: 31, scope: !5703)
!5705 = !DILocation(line: 1307, column: 13, scope: !5703)
!5706 = !DILocation(line: 1308, column: 34, scope: !4598)
!5707 = !DILocation(line: 1308, column: 23, scope: !4598)
!5708 = !DILocation(line: 1308, column: 21, scope: !4598)
!5709 = !DILocation(line: 1309, column: 34, scope: !4598)
!5710 = !DILocation(line: 1309, column: 23, scope: !4598)
!5711 = !DILocation(line: 1309, column: 21, scope: !4598)
!5712 = !DILocation(line: 1310, column: 51, scope: !4597)
!5713 = !DILocation(line: 1310, column: 54, scope: !4597)
!5714 = !DILocation(line: 1310, column: 59, scope: !4597)
!5715 = !DILocation(line: 1310, column: 64, scope: !4597)
!5716 = !DILocation(line: 1310, column: 76, scope: !4597)
!5717 = !DILocation(line: 1310, column: 21, scope: !4597)
!5718 = !DILocation(line: 958, column: 28, scope: !4592, inlinedAt: !4596)
!5719 = !DILocation(line: 958, column: 32, scope: !4592, inlinedAt: !4596)
!5720 = !DILocation(line: 958, column: 40, scope: !4592, inlinedAt: !4596)
!5721 = !DILocation(line: 958, column: 38, scope: !4592, inlinedAt: !4596)
!5722 = !DILocation(line: 958, column: 15, scope: !4592, inlinedAt: !4596)
!5723 = !DILocation(line: 958, column: 47, scope: !4592, inlinedAt: !4596)
!5724 = !DILocation(line: 958, column: 45, scope: !4592, inlinedAt: !4596)
!5725 = !DILocation(line: 959, column: 23, scope: !4592, inlinedAt: !4596)
!5726 = !DILocation(line: 959, column: 26, scope: !4592, inlinedAt: !4596)
!5727 = !DILocation(line: 959, column: 34, scope: !4592, inlinedAt: !4596)
!5728 = !DILocation(line: 959, column: 100, scope: !4592, inlinedAt: !4596)
!5729 = !DILocation(line: 959, column: 98, scope: !4592, inlinedAt: !4596)
!5730 = !DILocation(line: 959, column: 39, scope: !4592, inlinedAt: !4596)
!5731 = !DILocation(line: 959, column: 42, scope: !4592, inlinedAt: !4596)
!5732 = !DILocation(line: 959, column: 50, scope: !4592, inlinedAt: !4596)
!5733 = !DILocation(line: 959, column: 12, scope: !4592, inlinedAt: !4596)
!5734 = !DILocation(line: 1310, column: 21, scope: !4598)
!5735 = !DILocation(line: 1311, column: 77, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !4597, file: !1059, line: 1310, column: 92)
!5737 = !DILocation(line: 1311, column: 48, scope: !5736)
!5738 = !DILocation(line: 1311, column: 21, scope: !5736)
!5739 = !DILocation(line: 1311, column: 75, scope: !5736)
!5740 = !DILocation(line: 1312, column: 46, scope: !5736)
!5741 = !DILocation(line: 1313, column: 45, scope: !5736)
!5742 = !DILocation(line: 1314, column: 17, scope: !5736)
!5743 = !DILocation(line: 1315, column: 13, scope: !4598)
!5744 = !DILocation(line: 1307, column: 37, scope: !5745)
!5745 = !DILexicalBlockFile(scope: !4599, file: !1059, discriminator: 2)
!5746 = !DILocation(line: 1307, column: 13, scope: !5745)
!5747 = distinct !{!5747, !5748}
!5748 = !DILocation(line: 1307, column: 13, scope: !4585)
!5749 = !DILocation(line: 1316, column: 17, scope: !4584)
!5750 = !DILocation(line: 1316, column: 41, scope: !4584)
!5751 = !DILocation(line: 1316, column: 17, scope: !4585)
!5752 = !DILocation(line: 1317, column: 21, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !4583, file: !1059, line: 1317, column: 21)
!5754 = !DILocation(line: 1317, column: 24, scope: !5753)
!5755 = !DILocation(line: 1317, column: 27, scope: !5753)
!5756 = !DILocation(line: 1317, column: 32, scope: !5753)
!5757 = !DILocation(line: 1317, column: 68, scope: !5753)
!5758 = !DILocation(line: 1318, column: 22, scope: !5753)
!5759 = !DILocation(line: 1318, column: 42, scope: !5753)
!5760 = !DILocation(line: 1318, column: 45, scope: !5761)
!5761 = !DILexicalBlockFile(scope: !5753, file: !1059, discriminator: 1)
!5762 = !DILocation(line: 1318, column: 49, scope: !5761)
!5763 = !DILocation(line: 1318, column: 52, scope: !5761)
!5764 = !DILocation(line: 1317, column: 21, scope: !5765)
!5765 = !DILexicalBlockFile(scope: !4583, file: !1059, discriminator: 1)
!5766 = !DILocation(line: 1319, column: 25, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5768, file: !1059, line: 1319, column: 25)
!5768 = distinct !DILexicalBlock(scope: !5753, file: !1059, line: 1318, column: 80)
!5769 = !DILocation(line: 1319, column: 31, scope: !5767)
!5770 = !DILocation(line: 1319, column: 25, scope: !5768)
!5771 = !DILocation(line: 1320, column: 36, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5767, file: !1059, line: 1319, column: 37)
!5773 = !DILocation(line: 1321, column: 21, scope: !5772)
!5774 = !DILocation(line: 1322, column: 36, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5767, file: !1059, line: 1321, column: 28)
!5776 = !DILocation(line: 1324, column: 17, scope: !5768)
!5777 = !DILocation(line: 1325, column: 25, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5779, file: !1059, line: 1325, column: 25)
!5779 = distinct !DILexicalBlock(scope: !5753, file: !1059, line: 1324, column: 24)
!5780 = !DILocation(line: 1325, column: 27, scope: !5778)
!5781 = !DILocation(line: 1325, column: 25, scope: !5779)
!5782 = !DILocation(line: 1326, column: 29, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5784, file: !1059, line: 1326, column: 29)
!5784 = distinct !DILexicalBlock(scope: !5778, file: !1059, line: 1325, column: 33)
!5785 = !DILocation(line: 1326, column: 35, scope: !5783)
!5786 = !DILocation(line: 1326, column: 29, scope: !5784)
!5787 = !DILocation(line: 1327, column: 40, scope: !5783)
!5788 = !DILocation(line: 1327, column: 29, scope: !5783)
!5789 = !DILocation(line: 1329, column: 40, scope: !5783)
!5790 = !DILocation(line: 1330, column: 21, scope: !5784)
!5791 = !DILocation(line: 1331, column: 42, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5778, file: !1059, line: 1330, column: 28)
!5793 = !DILocation(line: 1331, column: 40, scope: !5792)
!5794 = !DILocation(line: 1331, column: 36, scope: !5792)
!5795 = !DILocation(line: 1334, column: 53, scope: !4582)
!5796 = !DILocation(line: 1334, column: 56, scope: !4582)
!5797 = !DILocation(line: 1334, column: 63, scope: !4582)
!5798 = !DILocation(line: 1334, column: 21, scope: !4582)
!5799 = !DILocation(line: 964, column: 23, scope: !4579, inlinedAt: !4581)
!5800 = !DILocation(line: 964, column: 26, scope: !4579, inlinedAt: !4581)
!5801 = !DILocation(line: 964, column: 34, scope: !4579, inlinedAt: !4581)
!5802 = !DILocation(line: 964, column: 100, scope: !4579, inlinedAt: !4581)
!5803 = !DILocation(line: 964, column: 98, scope: !4579, inlinedAt: !4581)
!5804 = !DILocation(line: 964, column: 39, scope: !4579, inlinedAt: !4581)
!5805 = !DILocation(line: 964, column: 42, scope: !4579, inlinedAt: !4581)
!5806 = !DILocation(line: 964, column: 50, scope: !4579, inlinedAt: !4581)
!5807 = !DILocation(line: 964, column: 12, scope: !4579, inlinedAt: !4581)
!5808 = !DILocation(line: 1334, column: 75, scope: !4582)
!5809 = !DILocation(line: 1334, column: 21, scope: !4583)
!5810 = !DILocation(line: 1335, column: 48, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !4582, file: !1059, line: 1334, column: 81)
!5812 = !DILocation(line: 1335, column: 21, scope: !5811)
!5813 = !DILocation(line: 1335, column: 75, scope: !5811)
!5814 = !DILocation(line: 1336, column: 46, scope: !5811)
!5815 = !DILocation(line: 1337, column: 17, scope: !5811)
!5816 = !DILocation(line: 1338, column: 13, scope: !4583)
!5817 = !DILocation(line: 1339, column: 44, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !4584, file: !1059, line: 1338, column: 20)
!5819 = !DILocation(line: 1339, column: 17, scope: !5818)
!5820 = !DILocation(line: 1339, column: 71, scope: !5818)
!5821 = !DILocation(line: 1340, column: 42, scope: !5818)
!5822 = !DILocation(line: 1342, column: 9, scope: !4585)
!5823 = !DILocation(line: 1344, column: 17, scope: !4473)
!5824 = !DILocation(line: 1344, column: 15, scope: !4473)
!5825 = !DILocation(line: 1347, column: 13, scope: !4472)
!5826 = !DILocation(line: 1347, column: 13, scope: !4473)
!5827 = !DILocalVariable(name: "first_nz_pos_in_cg", scope: !4471, file: !1059, line: 1348, type: !1043)
!5828 = !DILocation(line: 1348, column: 17, scope: !4471)
!5829 = !DILocalVariable(name: "last_nz_pos_in_cg", scope: !4471, file: !1059, line: 1349, type: !1043)
!5830 = !DILocation(line: 1349, column: 17, scope: !4471)
!5831 = !DILocalVariable(name: "c_rice_param", scope: !4471, file: !1059, line: 1350, type: !1043)
!5832 = !DILocation(line: 1350, column: 17, scope: !4471)
!5833 = !DILocalVariable(name: "first_greater1_coeff_idx", scope: !4471, file: !1059, line: 1351, type: !1043)
!5834 = !DILocation(line: 1351, column: 17, scope: !4471)
!5835 = !DILocalVariable(name: "coeff_abs_level_greater1_flag", scope: !4471, file: !1059, line: 1352, type: !5836)
!5836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1050, size: 64, align: 8, elements: !1222)
!5837 = !DILocation(line: 1352, column: 21, scope: !4471)
!5838 = !DILocalVariable(name: "coeff_sign_flag", scope: !4471, file: !1059, line: 1353, type: !1200)
!5839 = !DILocation(line: 1353, column: 22, scope: !4471)
!5840 = !DILocalVariable(name: "sum_abs", scope: !4471, file: !1059, line: 1354, type: !1043)
!5841 = !DILocation(line: 1354, column: 17, scope: !4471)
!5842 = !DILocalVariable(name: "sign_hidden", scope: !4471, file: !1059, line: 1355, type: !1043)
!5843 = !DILocation(line: 1355, column: 17, scope: !4471)
!5844 = !DILocalVariable(name: "sb_type", scope: !4471, file: !1059, line: 1356, type: !1043)
!5845 = !DILocation(line: 1356, column: 17, scope: !4471)
!5846 = !DILocalVariable(name: "ctx_set", scope: !4471, file: !1059, line: 1360, type: !1043)
!5847 = !DILocation(line: 1360, column: 17, scope: !4471)
!5848 = !DILocation(line: 1360, column: 28, scope: !4471)
!5849 = !DILocation(line: 1360, column: 30, scope: !4471)
!5850 = !DILocation(line: 1360, column: 34, scope: !4471)
!5851 = !DILocation(line: 1360, column: 37, scope: !5852)
!5852 = !DILexicalBlockFile(scope: !4471, file: !1059, discriminator: 1)
!5853 = !DILocation(line: 1360, column: 43, scope: !5852)
!5854 = !DILocation(line: 1360, column: 27, scope: !5855)
!5855 = !DILexicalBlockFile(scope: !4471, file: !1059, discriminator: 2)
!5856 = !DILocation(line: 1360, column: 17, scope: !5855)
!5857 = !DILocation(line: 1362, column: 17, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !4471, file: !1059, line: 1362, column: 17)
!5859 = !DILocation(line: 1362, column: 20, scope: !5858)
!5860 = !DILocation(line: 1362, column: 23, scope: !5858)
!5861 = !DILocation(line: 1362, column: 28, scope: !5858)
!5862 = !DILocation(line: 1362, column: 17, scope: !4471)
!5863 = !DILocation(line: 1363, column: 22, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5865, file: !1059, line: 1363, column: 21)
!5865 = distinct !DILexicalBlock(scope: !5858, file: !1059, line: 1362, column: 69)
!5866 = !DILocation(line: 1363, column: 42, scope: !5864)
!5867 = !DILocation(line: 1363, column: 46, scope: !5868)
!5868 = !DILexicalBlockFile(scope: !5864, file: !1059, discriminator: 1)
!5869 = !DILocation(line: 1363, column: 50, scope: !5868)
!5870 = !DILocation(line: 1363, column: 53, scope: !5868)
!5871 = !DILocation(line: 1363, column: 21, scope: !5868)
!5872 = !DILocation(line: 1364, column: 36, scope: !5864)
!5873 = !DILocation(line: 1364, column: 42, scope: !5864)
!5874 = !DILocation(line: 1364, column: 33, scope: !5864)
!5875 = !DILocation(line: 1364, column: 29, scope: !5864)
!5876 = !DILocation(line: 1364, column: 21, scope: !5864)
!5877 = !DILocation(line: 1366, column: 36, scope: !5864)
!5878 = !DILocation(line: 1366, column: 42, scope: !5864)
!5879 = !DILocation(line: 1366, column: 33, scope: !5864)
!5880 = !DILocation(line: 1366, column: 56, scope: !5864)
!5881 = !DILocation(line: 1366, column: 29, scope: !5864)
!5882 = !DILocation(line: 1367, column: 47, scope: !5865)
!5883 = !DILocation(line: 1367, column: 32, scope: !5865)
!5884 = !DILocation(line: 1367, column: 36, scope: !5865)
!5885 = !DILocation(line: 1367, column: 56, scope: !5865)
!5886 = !DILocation(line: 1367, column: 30, scope: !5865)
!5887 = !DILocation(line: 1368, column: 13, scope: !5865)
!5888 = !DILocation(line: 1370, column: 19, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !4471, file: !1059, line: 1370, column: 17)
!5890 = !DILocation(line: 1370, column: 24, scope: !5889)
!5891 = !DILocation(line: 1370, column: 21, scope: !5889)
!5892 = !DILocation(line: 1370, column: 41, scope: !5889)
!5893 = !DILocation(line: 1370, column: 44, scope: !5894)
!5894 = !DILexicalBlockFile(scope: !5889, file: !1059, discriminator: 1)
!5895 = !DILocation(line: 1370, column: 57, scope: !5894)
!5896 = !DILocation(line: 1370, column: 17, scope: !5894)
!5897 = !DILocation(line: 1371, column: 24, scope: !5889)
!5898 = !DILocation(line: 1371, column: 17, scope: !5889)
!5899 = !DILocation(line: 1372, column: 26, scope: !4471)
!5900 = !DILocation(line: 1373, column: 33, scope: !4471)
!5901 = !DILocation(line: 1373, column: 31, scope: !4471)
!5902 = !DILocation(line: 1375, column: 20, scope: !4573)
!5903 = !DILocation(line: 1375, column: 18, scope: !4573)
!5904 = !DILocation(line: 1375, column: 25, scope: !5905)
!5905 = !DILexicalBlockFile(scope: !4572, file: !1059, discriminator: 1)
!5906 = !DILocation(line: 1375, column: 30, scope: !5905)
!5907 = !DILocation(line: 1375, column: 36, scope: !5905)
!5908 = !DILocation(line: 1375, column: 30, scope: !5909)
!5909 = !DILexicalBlockFile(scope: !4572, file: !1059, discriminator: 2)
!5910 = !DILocation(line: 1375, column: 46, scope: !5911)
!5911 = !DILexicalBlockFile(scope: !4572, file: !1059, discriminator: 3)
!5912 = !DILocation(line: 1375, column: 30, scope: !5911)
!5913 = !DILocation(line: 1375, column: 30, scope: !5914)
!5914 = !DILexicalBlockFile(scope: !4572, file: !1059, discriminator: 4)
!5915 = !DILocation(line: 1375, column: 27, scope: !5914)
!5916 = !DILocation(line: 1375, column: 13, scope: !5914)
!5917 = !DILocalVariable(name: "inc", scope: !4571, file: !1059, line: 1376, type: !1043)
!5918 = !DILocation(line: 1376, column: 21, scope: !4571)
!5919 = !DILocation(line: 1376, column: 28, scope: !4571)
!5920 = !DILocation(line: 1376, column: 36, scope: !4571)
!5921 = !DILocation(line: 1376, column: 44, scope: !4571)
!5922 = !DILocation(line: 1376, column: 42, scope: !4571)
!5923 = !DILocation(line: 1378, column: 58, scope: !4571)
!5924 = !DILocation(line: 1378, column: 61, scope: !4571)
!5925 = !DILocation(line: 1378, column: 68, scope: !4571)
!5926 = !DILocation(line: 1378, column: 21, scope: !4571)
!5927 = !DILocation(line: 970, column: 9, scope: !5928, inlinedAt: !4570)
!5928 = distinct !DILexicalBlock(scope: !4568, file: !1059, line: 970, column: 9)
!5929 = !DILocation(line: 970, column: 15, scope: !5928, inlinedAt: !4570)
!5930 = !DILocation(line: 970, column: 9, scope: !4568, inlinedAt: !4570)
!5931 = !DILocation(line: 971, column: 13, scope: !5928, inlinedAt: !4570)
!5932 = !DILocation(line: 971, column: 9, scope: !5928, inlinedAt: !4570)
!5933 = !DILocation(line: 973, column: 23, scope: !4568, inlinedAt: !4570)
!5934 = !DILocation(line: 973, column: 26, scope: !4568, inlinedAt: !4570)
!5935 = !DILocation(line: 973, column: 34, scope: !4568, inlinedAt: !4570)
!5936 = !DILocation(line: 973, column: 107, scope: !4568, inlinedAt: !4570)
!5937 = !DILocation(line: 973, column: 105, scope: !4568, inlinedAt: !4570)
!5938 = !DILocation(line: 973, column: 39, scope: !4568, inlinedAt: !4570)
!5939 = !DILocation(line: 973, column: 42, scope: !4568, inlinedAt: !4570)
!5940 = !DILocation(line: 973, column: 50, scope: !4568, inlinedAt: !4570)
!5941 = !DILocation(line: 973, column: 12, scope: !4568, inlinedAt: !4570)
!5942 = !DILocation(line: 1377, column: 47, scope: !4571)
!5943 = !DILocation(line: 1377, column: 17, scope: !4571)
!5944 = !DILocation(line: 1377, column: 50, scope: !4571)
!5945 = !DILocation(line: 1379, column: 51, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !4571, file: !1059, line: 1379, column: 21)
!5947 = !DILocation(line: 1379, column: 21, scope: !5946)
!5948 = !DILocation(line: 1379, column: 21, scope: !4571)
!5949 = !DILocation(line: 1380, column: 34, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5946, file: !1059, line: 1379, column: 55)
!5951 = !DILocation(line: 1381, column: 25, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5950, file: !1059, line: 1381, column: 25)
!5953 = !DILocation(line: 1381, column: 50, scope: !5952)
!5954 = !DILocation(line: 1381, column: 25, scope: !5950)
!5955 = !DILocation(line: 1382, column: 52, scope: !5952)
!5956 = !DILocation(line: 1382, column: 50, scope: !5952)
!5957 = !DILocation(line: 1382, column: 25, scope: !5952)
!5958 = !DILocation(line: 1383, column: 17, scope: !5950)
!5959 = !DILocation(line: 1383, column: 28, scope: !5960)
!5960 = !DILexicalBlockFile(scope: !5961, file: !1059, discriminator: 1)
!5961 = distinct !DILexicalBlock(scope: !5946, file: !1059, line: 1383, column: 28)
!5962 = !DILocation(line: 1383, column: 41, scope: !5960)
!5963 = !DILocation(line: 1383, column: 45, scope: !5960)
!5964 = !DILocation(line: 1383, column: 48, scope: !5965)
!5965 = !DILexicalBlockFile(scope: !5961, file: !1059, discriminator: 2)
!5966 = !DILocation(line: 1383, column: 61, scope: !5965)
!5967 = !DILocation(line: 1383, column: 28, scope: !5965)
!5968 = !DILocation(line: 1384, column: 33, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5961, file: !1059, line: 1383, column: 66)
!5970 = !DILocation(line: 1385, column: 17, scope: !5969)
!5971 = !DILocation(line: 1386, column: 13, scope: !4571)
!5972 = !DILocation(line: 1375, column: 55, scope: !5973)
!5973 = !DILexicalBlockFile(scope: !4572, file: !1059, discriminator: 5)
!5974 = !DILocation(line: 1375, column: 13, scope: !5973)
!5975 = distinct !{!5975, !5976}
!5976 = !DILocation(line: 1375, column: 13, scope: !4471)
!5977 = !DILocation(line: 1387, column: 61, scope: !4471)
!5978 = !DILocation(line: 1387, column: 67, scope: !4471)
!5979 = !DILocation(line: 1387, column: 34, scope: !4471)
!5980 = !DILocation(line: 1387, column: 32, scope: !4471)
!5981 = !DILocation(line: 1389, column: 17, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !4471, file: !1059, line: 1389, column: 17)
!5983 = !DILocation(line: 1389, column: 21, scope: !5982)
!5984 = !DILocation(line: 1389, column: 24, scope: !5982)
!5985 = !DILocation(line: 1389, column: 50, scope: !5982)
!5986 = !DILocation(line: 1390, column: 18, scope: !5982)
!5987 = !DILocation(line: 1390, column: 22, scope: !5982)
!5988 = !DILocation(line: 1390, column: 25, scope: !5982)
!5989 = !DILocation(line: 1390, column: 35, scope: !5982)
!5990 = !DILocation(line: 1390, column: 49, scope: !5982)
!5991 = !DILocation(line: 1391, column: 18, scope: !5982)
!5992 = !DILocation(line: 1391, column: 21, scope: !5982)
!5993 = !DILocation(line: 1391, column: 24, scope: !5982)
!5994 = !DILocation(line: 1391, column: 29, scope: !5982)
!5995 = !DILocation(line: 1391, column: 57, scope: !5982)
!5996 = !DILocation(line: 1391, column: 60, scope: !5997)
!5997 = !DILexicalBlockFile(scope: !5982, file: !1059, discriminator: 1)
!5998 = !DILocation(line: 1391, column: 80, scope: !5997)
!5999 = !DILocation(line: 1392, column: 19, scope: !5982)
!6000 = !DILocation(line: 1392, column: 35, scope: !5982)
!6001 = !DILocation(line: 1392, column: 41, scope: !5982)
!6002 = !DILocation(line: 1392, column: 44, scope: !5997)
!6003 = !DILocation(line: 1392, column: 60, scope: !5997)
!6004 = !DILocation(line: 1392, column: 69, scope: !5997)
!6005 = !DILocation(line: 1393, column: 18, scope: !5982)
!6006 = !DILocation(line: 1389, column: 17, scope: !5852)
!6007 = !DILocation(line: 1394, column: 29, scope: !5982)
!6008 = !DILocation(line: 1394, column: 17, scope: !5982)
!6009 = !DILocation(line: 1396, column: 32, scope: !5982)
!6010 = !DILocation(line: 1396, column: 52, scope: !5982)
!6011 = !DILocation(line: 1396, column: 50, scope: !5982)
!6012 = !DILocation(line: 1396, column: 71, scope: !5982)
!6013 = !DILocation(line: 1396, column: 29, scope: !5982)
!6014 = !DILocation(line: 1398, column: 17, scope: !4562)
!6015 = !DILocation(line: 1398, column: 42, scope: !4562)
!6016 = !DILocation(line: 1398, column: 17, scope: !4471)
!6017 = !DILocation(line: 1399, column: 113, scope: !4561)
!6018 = !DILocation(line: 1399, column: 116, scope: !4561)
!6019 = !DILocation(line: 1399, column: 123, scope: !4561)
!6020 = !DILocation(line: 1399, column: 76, scope: !4561)
!6021 = !DILocation(line: 978, column: 9, scope: !6022, inlinedAt: !4560)
!6022 = distinct !DILexicalBlock(scope: !4558, file: !1059, line: 978, column: 9)
!6023 = !DILocation(line: 978, column: 15, scope: !6022, inlinedAt: !4560)
!6024 = !DILocation(line: 978, column: 9, scope: !4558, inlinedAt: !4560)
!6025 = !DILocation(line: 979, column: 13, scope: !6022, inlinedAt: !4560)
!6026 = !DILocation(line: 979, column: 9, scope: !6022, inlinedAt: !4560)
!6027 = !DILocation(line: 981, column: 23, scope: !4558, inlinedAt: !4560)
!6028 = !DILocation(line: 981, column: 26, scope: !4558, inlinedAt: !4560)
!6029 = !DILocation(line: 981, column: 34, scope: !4558, inlinedAt: !4560)
!6030 = !DILocation(line: 981, column: 107, scope: !4558, inlinedAt: !4560)
!6031 = !DILocation(line: 981, column: 105, scope: !4558, inlinedAt: !4560)
!6032 = !DILocation(line: 981, column: 39, scope: !4558, inlinedAt: !4560)
!6033 = !DILocation(line: 981, column: 42, scope: !4558, inlinedAt: !4560)
!6034 = !DILocation(line: 981, column: 50, scope: !4558, inlinedAt: !4560)
!6035 = !DILocation(line: 981, column: 12, scope: !4558, inlinedAt: !4560)
!6036 = !DILocation(line: 1399, column: 47, scope: !4561)
!6037 = !DILocation(line: 1399, column: 17, scope: !4561)
!6038 = !DILocation(line: 1399, column: 73, scope: !4561)
!6039 = !DILocation(line: 1400, column: 13, scope: !4561)
!6040 = !DILocation(line: 1401, column: 18, scope: !4536)
!6041 = !DILocation(line: 1401, column: 21, scope: !4536)
!6042 = !DILocation(line: 1401, column: 24, scope: !4536)
!6043 = !DILocation(line: 1401, column: 29, scope: !4536)
!6044 = !DILocation(line: 1401, column: 51, scope: !4536)
!6045 = !DILocation(line: 1401, column: 55, scope: !6046)
!6046 = !DILexicalBlockFile(scope: !4536, file: !1059, discriminator: 1)
!6047 = !DILocation(line: 1401, column: 17, scope: !6046)
!6048 = !DILocation(line: 1402, column: 58, scope: !4550)
!6049 = !DILocation(line: 1402, column: 61, scope: !4550)
!6050 = !DILocation(line: 1402, column: 35, scope: !4550)
!6051 = !DILocation(line: 1019, column: 12, scope: !4530, inlinedAt: !4549)
!6052 = !DILocation(line: 1019, column: 10, scope: !4530, inlinedAt: !4549)
!6053 = !DILocation(line: 1019, column: 17, scope: !6054, inlinedAt: !4549)
!6054 = !DILexicalBlockFile(scope: !4529, file: !1059, discriminator: 1)
!6055 = !DILocation(line: 1019, column: 21, scope: !6054, inlinedAt: !4549)
!6056 = !DILocation(line: 1019, column: 19, scope: !6054, inlinedAt: !4549)
!6057 = !DILocation(line: 1019, column: 5, scope: !6054, inlinedAt: !4549)
!6058 = !DILocation(line: 1020, column: 16, scope: !4529, inlinedAt: !4549)
!6059 = !DILocation(line: 1020, column: 20, scope: !4529, inlinedAt: !4549)
!6060 = !DILocation(line: 1020, column: 50, scope: !4529, inlinedAt: !4549)
!6061 = !DILocation(line: 1020, column: 53, scope: !4529, inlinedAt: !4549)
!6062 = !DILocation(line: 1020, column: 61, scope: !4529, inlinedAt: !4549)
!6063 = !DILocation(line: 1020, column: 28, scope: !4529, inlinedAt: !4549)
!6064 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4548)
!6065 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4548)
!6066 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4548)
!6067 = !DILocation(line: 1020, column: 26, scope: !4529, inlinedAt: !4549)
!6068 = !DILocation(line: 1020, column: 13, scope: !4529, inlinedAt: !4549)
!6069 = !DILocation(line: 1019, column: 26, scope: !6070, inlinedAt: !4549)
!6070 = !DILexicalBlockFile(scope: !4529, file: !1059, discriminator: 2)
!6071 = !DILocation(line: 1019, column: 5, scope: !6070, inlinedAt: !4549)
!6072 = distinct !{!6072, !6073}
!6073 = !DILocation(line: 1019, column: 5, scope: !4531)
!6074 = !DILocation(line: 1021, column: 12, scope: !4531, inlinedAt: !4549)
!6075 = !DILocation(line: 1402, column: 97, scope: !4550)
!6076 = !DILocation(line: 1402, column: 95, scope: !4550)
!6077 = !DILocation(line: 1402, column: 88, scope: !4550)
!6078 = !DILocation(line: 1402, column: 33, scope: !4550)
!6079 = !DILocation(line: 1403, column: 13, scope: !4550)
!6080 = !DILocation(line: 1404, column: 58, scope: !4535)
!6081 = !DILocation(line: 1404, column: 61, scope: !4535)
!6082 = !DILocation(line: 1404, column: 87, scope: !4535)
!6083 = !DILocation(line: 1404, column: 35, scope: !4535)
!6084 = !DILocation(line: 1019, column: 12, scope: !4530, inlinedAt: !4534)
!6085 = !DILocation(line: 1019, column: 10, scope: !4530, inlinedAt: !4534)
!6086 = !DILocation(line: 1019, column: 17, scope: !6054, inlinedAt: !4534)
!6087 = !DILocation(line: 1019, column: 21, scope: !6054, inlinedAt: !4534)
!6088 = !DILocation(line: 1019, column: 19, scope: !6054, inlinedAt: !4534)
!6089 = !DILocation(line: 1019, column: 5, scope: !6054, inlinedAt: !4534)
!6090 = !DILocation(line: 1020, column: 16, scope: !4529, inlinedAt: !4534)
!6091 = !DILocation(line: 1020, column: 20, scope: !4529, inlinedAt: !4534)
!6092 = !DILocation(line: 1020, column: 50, scope: !4529, inlinedAt: !4534)
!6093 = !DILocation(line: 1020, column: 53, scope: !4529, inlinedAt: !4534)
!6094 = !DILocation(line: 1020, column: 61, scope: !4529, inlinedAt: !4534)
!6095 = !DILocation(line: 1020, column: 28, scope: !4529, inlinedAt: !4534)
!6096 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4528)
!6097 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4528)
!6098 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4528)
!6099 = !DILocation(line: 1020, column: 26, scope: !4529, inlinedAt: !4534)
!6100 = !DILocation(line: 1020, column: 13, scope: !4529, inlinedAt: !4534)
!6101 = !DILocation(line: 1019, column: 26, scope: !6070, inlinedAt: !4534)
!6102 = !DILocation(line: 1019, column: 5, scope: !6070, inlinedAt: !4534)
!6103 = !DILocation(line: 1021, column: 12, scope: !4531, inlinedAt: !4534)
!6104 = !DILocation(line: 1404, column: 102, scope: !4535)
!6105 = !DILocation(line: 1404, column: 128, scope: !4535)
!6106 = !DILocation(line: 1404, column: 99, scope: !4535)
!6107 = !DILocation(line: 1404, column: 92, scope: !4535)
!6108 = !DILocation(line: 1404, column: 33, scope: !4535)
!6109 = !DILocation(line: 1407, column: 20, scope: !4470)
!6110 = !DILocation(line: 1407, column: 18, scope: !4470)
!6111 = !DILocation(line: 1407, column: 25, scope: !6112)
!6112 = !DILexicalBlockFile(scope: !4469, file: !1059, discriminator: 1)
!6113 = !DILocation(line: 1407, column: 29, scope: !6112)
!6114 = !DILocation(line: 1407, column: 27, scope: !6112)
!6115 = !DILocation(line: 1407, column: 13, scope: !6112)
!6116 = !DILocation(line: 1408, column: 48, scope: !4468)
!6117 = !DILocation(line: 1408, column: 21, scope: !4468)
!6118 = !DILocation(line: 1408, column: 19, scope: !4468)
!6119 = !DILocation(line: 1409, column: 17, scope: !4468)
!6120 = distinct !{!6120, !6119}
!6121 = !DILocation(line: 1409, column: 29, scope: !6122)
!6122 = !DILexicalBlockFile(scope: !6123, file: !1059, discriminator: 1)
!6123 = distinct !DILexicalBlock(scope: !4468, file: !1059, line: 1409, column: 20)
!6124 = !DILocation(line: 1409, column: 34, scope: !6122)
!6125 = !DILocation(line: 1409, column: 53, scope: !6122)
!6126 = !DILocation(line: 1409, column: 42, scope: !6122)
!6127 = !DILocation(line: 1409, column: 40, scope: !6122)
!6128 = !DILocation(line: 1409, column: 26, scope: !6122)
!6129 = !DILocation(line: 1409, column: 64, scope: !6122)
!6130 = !DILocation(line: 1409, column: 69, scope: !6122)
!6131 = !DILocation(line: 1409, column: 88, scope: !6122)
!6132 = !DILocation(line: 1409, column: 77, scope: !6122)
!6133 = !DILocation(line: 1409, column: 75, scope: !6122)
!6134 = !DILocation(line: 1409, column: 61, scope: !6122)
!6135 = !DILocation(line: 1409, column: 92, scope: !6122)
!6136 = !DILocation(line: 1410, column: 21, scope: !4467)
!6137 = !DILocation(line: 1410, column: 23, scope: !4467)
!6138 = !DILocation(line: 1410, column: 21, scope: !4468)
!6139 = !DILocation(line: 1411, column: 75, scope: !4509)
!6140 = !DILocation(line: 1411, column: 45, scope: !4509)
!6141 = !DILocation(line: 1411, column: 43, scope: !4509)
!6142 = !DILocation(line: 1411, column: 41, scope: !4509)
!6143 = !DILocation(line: 1411, column: 39, scope: !4509)
!6144 = !DILocation(line: 1412, column: 25, scope: !4508)
!6145 = !DILocation(line: 1412, column: 48, scope: !4508)
!6146 = !DILocation(line: 1412, column: 53, scope: !4508)
!6147 = !DILocation(line: 1412, column: 50, scope: !4508)
!6148 = !DILocation(line: 1412, column: 47, scope: !4508)
!6149 = !DILocation(line: 1412, column: 46, scope: !4508)
!6150 = !DILocation(line: 1412, column: 43, scope: !4508)
!6151 = !DILocation(line: 1412, column: 25, scope: !4509)
!6152 = !DILocalVariable(name: "last_coeff_abs_level_remaining", scope: !4507, file: !1059, line: 1413, type: !1043)
!6153 = !DILocation(line: 1413, column: 29, scope: !4507)
!6154 = !DILocation(line: 1413, column: 95, scope: !4507)
!6155 = !DILocation(line: 1413, column: 98, scope: !4507)
!6156 = !DILocation(line: 1413, column: 62, scope: !4507)
!6157 = !DILocation(line: 991, column: 5, scope: !4464, inlinedAt: !4506)
!6158 = !DILocation(line: 991, column: 12, scope: !6159, inlinedAt: !4506)
!6159 = !DILexicalBlockFile(scope: !4464, file: !1059, discriminator: 1)
!6160 = !DILocation(line: 991, column: 19, scope: !6159, inlinedAt: !4506)
!6161 = !DILocation(line: 991, column: 24, scope: !6159, inlinedAt: !4506)
!6162 = !DILocation(line: 991, column: 49, scope: !4487, inlinedAt: !4506)
!6163 = !DILocation(line: 991, column: 52, scope: !4487, inlinedAt: !4506)
!6164 = !DILocation(line: 991, column: 60, scope: !4487, inlinedAt: !4506)
!6165 = !DILocation(line: 991, column: 27, scope: !4487, inlinedAt: !4506)
!6166 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4517)
!6167 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4517)
!6168 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4517)
!6169 = !DILocation(line: 991, column: 24, scope: !4487, inlinedAt: !4506)
!6170 = !DILocation(line: 991, column: 5, scope: !6171, inlinedAt: !4506)
!6171 = !DILexicalBlockFile(scope: !4464, file: !1059, discriminator: 3)
!6172 = !DILocation(line: 992, column: 15, scope: !4464, inlinedAt: !4506)
!6173 = !DILocation(line: 991, column: 5, scope: !6174, inlinedAt: !4506)
!6174 = !DILexicalBlockFile(scope: !4464, file: !1059, discriminator: 4)
!6175 = distinct !{!6175, !6176}
!6176 = !DILocation(line: 991, column: 5, scope: !4464)
!6177 = !DILocation(line: 994, column: 9, scope: !4463, inlinedAt: !4506)
!6178 = !DILocation(line: 994, column: 16, scope: !4463, inlinedAt: !4506)
!6179 = !DILocation(line: 994, column: 9, scope: !4464, inlinedAt: !4506)
!6180 = !DILocation(line: 995, column: 16, scope: !4481, inlinedAt: !4506)
!6181 = !DILocation(line: 995, column: 14, scope: !4481, inlinedAt: !4506)
!6182 = !DILocation(line: 995, column: 21, scope: !6183, inlinedAt: !4506)
!6183 = !DILexicalBlockFile(scope: !4480, file: !1059, discriminator: 1)
!6184 = !DILocation(line: 995, column: 25, scope: !6183, inlinedAt: !4506)
!6185 = !DILocation(line: 995, column: 23, scope: !6183, inlinedAt: !4506)
!6186 = !DILocation(line: 995, column: 9, scope: !6183, inlinedAt: !4506)
!6187 = !DILocation(line: 996, column: 23, scope: !4480, inlinedAt: !4506)
!6188 = !DILocation(line: 996, column: 30, scope: !4480, inlinedAt: !4506)
!6189 = !DILocation(line: 996, column: 60, scope: !4480, inlinedAt: !4506)
!6190 = !DILocation(line: 996, column: 63, scope: !4480, inlinedAt: !4506)
!6191 = !DILocation(line: 996, column: 71, scope: !4480, inlinedAt: !4506)
!6192 = !DILocation(line: 996, column: 38, scope: !4480, inlinedAt: !4506)
!6193 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4513)
!6194 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4513)
!6195 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4513)
!6196 = !DILocation(line: 996, column: 36, scope: !4480, inlinedAt: !4506)
!6197 = !DILocation(line: 996, column: 20, scope: !4480, inlinedAt: !4506)
!6198 = !DILocation(line: 995, column: 41, scope: !6199, inlinedAt: !4506)
!6199 = !DILexicalBlockFile(scope: !4480, file: !1059, discriminator: 2)
!6200 = !DILocation(line: 995, column: 9, scope: !6199, inlinedAt: !4506)
!6201 = distinct !{!6201, !6202}
!6202 = !DILocation(line: 995, column: 9, scope: !4482)
!6203 = !DILocation(line: 997, column: 43, scope: !4482, inlinedAt: !4506)
!6204 = !DILocation(line: 997, column: 53, scope: !4482, inlinedAt: !4506)
!6205 = !DILocation(line: 997, column: 50, scope: !4482, inlinedAt: !4506)
!6206 = !DILocation(line: 997, column: 70, scope: !4482, inlinedAt: !4506)
!6207 = !DILocation(line: 997, column: 68, scope: !4482, inlinedAt: !4506)
!6208 = !DILocation(line: 997, column: 40, scope: !4482, inlinedAt: !4506)
!6209 = !DILocation(line: 998, column: 5, scope: !4482, inlinedAt: !4506)
!6210 = !DILocation(line: 999, column: 29, scope: !4462, inlinedAt: !4506)
!6211 = !DILocation(line: 999, column: 36, scope: !4462, inlinedAt: !4506)
!6212 = !DILocation(line: 1001, column: 13, scope: !6213, inlinedAt: !4506)
!6213 = distinct !DILexicalBlock(scope: !4462, file: !1059, line: 1001, column: 13)
!6214 = !DILocation(line: 1001, column: 20, scope: !6213, inlinedAt: !4506)
!6215 = !DILocation(line: 1001, column: 26, scope: !6213, inlinedAt: !4506)
!6216 = !DILocation(line: 1001, column: 29, scope: !6217, inlinedAt: !4506)
!6217 = !DILexicalBlockFile(scope: !6213, file: !1059, discriminator: 1)
!6218 = !DILocation(line: 1001, column: 45, scope: !6217, inlinedAt: !4506)
!6219 = !DILocation(line: 1001, column: 43, scope: !6217, inlinedAt: !4506)
!6220 = !DILocation(line: 1001, column: 59, scope: !6217, inlinedAt: !4506)
!6221 = !DILocation(line: 1001, column: 13, scope: !6217, inlinedAt: !4506)
!6222 = !DILocation(line: 1002, column: 20, scope: !6223, inlinedAt: !4506)
!6223 = distinct !DILexicalBlock(scope: !6213, file: !1059, line: 1001, column: 66)
!6224 = !DILocation(line: 1002, column: 23, scope: !6223, inlinedAt: !4506)
!6225 = !DILocation(line: 1002, column: 58, scope: !6223, inlinedAt: !4506)
!6226 = !DILocation(line: 1002, column: 13, scope: !6223, inlinedAt: !4506)
!6227 = !DILocation(line: 1003, column: 13, scope: !6223, inlinedAt: !4506)
!6228 = !DILocation(line: 1006, column: 16, scope: !4461, inlinedAt: !4506)
!6229 = !DILocation(line: 1006, column: 14, scope: !4461, inlinedAt: !4506)
!6230 = !DILocation(line: 1006, column: 21, scope: !6231, inlinedAt: !4506)
!6231 = !DILexicalBlockFile(scope: !4460, file: !1059, discriminator: 1)
!6232 = !DILocation(line: 1006, column: 25, scope: !6231, inlinedAt: !4506)
!6233 = !DILocation(line: 1006, column: 41, scope: !6231, inlinedAt: !4506)
!6234 = !DILocation(line: 1006, column: 39, scope: !6231, inlinedAt: !4506)
!6235 = !DILocation(line: 1006, column: 23, scope: !6231, inlinedAt: !4506)
!6236 = !DILocation(line: 1006, column: 9, scope: !6231, inlinedAt: !4506)
!6237 = !DILocation(line: 1007, column: 23, scope: !4460, inlinedAt: !4506)
!6238 = !DILocation(line: 1007, column: 30, scope: !4460, inlinedAt: !4506)
!6239 = !DILocation(line: 1007, column: 60, scope: !4460, inlinedAt: !4506)
!6240 = !DILocation(line: 1007, column: 63, scope: !4460, inlinedAt: !4506)
!6241 = !DILocation(line: 1007, column: 71, scope: !4460, inlinedAt: !4506)
!6242 = !DILocation(line: 1007, column: 38, scope: !4460, inlinedAt: !4506)
!6243 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4505)
!6244 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4505)
!6245 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4505)
!6246 = !DILocation(line: 1007, column: 36, scope: !4460, inlinedAt: !4506)
!6247 = !DILocation(line: 1007, column: 20, scope: !4460, inlinedAt: !4506)
!6248 = !DILocation(line: 1006, column: 57, scope: !6249, inlinedAt: !4506)
!6249 = !DILexicalBlockFile(scope: !4460, file: !1059, discriminator: 2)
!6250 = !DILocation(line: 1006, column: 9, scope: !6249, inlinedAt: !4506)
!6251 = distinct !{!6251, !6252}
!6252 = !DILocation(line: 1006, column: 9, scope: !4462)
!6253 = !DILocation(line: 1008, column: 50, scope: !4462, inlinedAt: !4506)
!6254 = !DILocation(line: 1008, column: 47, scope: !4462, inlinedAt: !4506)
!6255 = !DILocation(line: 1008, column: 65, scope: !4462, inlinedAt: !4506)
!6256 = !DILocation(line: 1008, column: 69, scope: !4462, inlinedAt: !4506)
!6257 = !DILocation(line: 1009, column: 50, scope: !4462, inlinedAt: !4506)
!6258 = !DILocation(line: 1009, column: 47, scope: !4462, inlinedAt: !4506)
!6259 = !DILocation(line: 1009, column: 67, scope: !4462, inlinedAt: !4506)
!6260 = !DILocation(line: 1009, column: 65, scope: !4462, inlinedAt: !4506)
!6261 = !DILocation(line: 1008, column: 40, scope: !4462, inlinedAt: !4506)
!6262 = !DILocation(line: 1011, column: 12, scope: !4464, inlinedAt: !4506)
!6263 = !DILocation(line: 1011, column: 5, scope: !4464, inlinedAt: !4506)
!6264 = !DILocation(line: 1012, column: 1, scope: !4464, inlinedAt: !4506)
!6265 = !DILocation(line: 1415, column: 46, scope: !4507)
!6266 = !DILocation(line: 1415, column: 43, scope: !4507)
!6267 = !DILocation(line: 1416, column: 29, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !4507, file: !1059, line: 1416, column: 29)
!6269 = !DILocation(line: 1416, column: 55, scope: !6268)
!6270 = !DILocation(line: 1416, column: 52, scope: !6268)
!6271 = !DILocation(line: 1416, column: 49, scope: !6268)
!6272 = !DILocation(line: 1416, column: 47, scope: !6268)
!6273 = !DILocation(line: 1416, column: 29, scope: !4507)
!6274 = !DILocation(line: 1417, column: 44, scope: !6268)
!6275 = !DILocation(line: 1417, column: 47, scope: !6268)
!6276 = !DILocation(line: 1417, column: 50, scope: !6268)
!6277 = !DILocation(line: 1417, column: 55, scope: !6268)
!6278 = !DILocation(line: 1417, column: 97, scope: !6279)
!6279 = !DILexicalBlockFile(scope: !6268, file: !1059, discriminator: 1)
!6280 = !DILocation(line: 1417, column: 110, scope: !6279)
!6281 = !DILocation(line: 1417, column: 44, scope: !6279)
!6282 = !DILocation(line: 1417, column: 118, scope: !6283)
!6283 = !DILexicalBlockFile(scope: !6268, file: !1059, discriminator: 2)
!6284 = !DILocation(line: 1417, column: 131, scope: !6283)
!6285 = !DILocation(line: 1417, column: 136, scope: !6283)
!6286 = !DILocation(line: 1417, column: 117, scope: !6283)
!6287 = !DILocation(line: 1417, column: 117, scope: !6288)
!6288 = !DILexicalBlockFile(scope: !6268, file: !1059, discriminator: 3)
!6289 = !DILocation(line: 1417, column: 151, scope: !6290)
!6290 = !DILexicalBlockFile(scope: !6268, file: !1059, discriminator: 4)
!6291 = !DILocation(line: 1417, column: 164, scope: !6290)
!6292 = !DILocation(line: 1417, column: 117, scope: !6290)
!6293 = !DILocation(line: 1417, column: 117, scope: !6294)
!6294 = !DILexicalBlockFile(scope: !6268, file: !1059, discriminator: 5)
!6295 = !DILocation(line: 1417, column: 44, scope: !6294)
!6296 = !DILocation(line: 1417, column: 44, scope: !6297)
!6297 = !DILexicalBlockFile(scope: !6268, file: !1059, discriminator: 6)
!6298 = !DILocation(line: 1417, column: 42, scope: !6297)
!6299 = !DILocation(line: 1417, column: 29, scope: !6297)
!6300 = !DILocation(line: 1418, column: 29, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !4507, file: !1059, line: 1418, column: 29)
!6302 = !DILocation(line: 1418, column: 32, scope: !6301)
!6303 = !DILocation(line: 1418, column: 35, scope: !6301)
!6304 = !DILocation(line: 1418, column: 40, scope: !6301)
!6305 = !DILocation(line: 1418, column: 80, scope: !6301)
!6306 = !DILocation(line: 1418, column: 84, scope: !6307)
!6307 = !DILexicalBlockFile(scope: !6301, file: !1059, discriminator: 1)
!6308 = !DILocation(line: 1418, column: 29, scope: !6307)
!6309 = !DILocalVariable(name: "c_rice_p_init", scope: !6310, file: !1059, line: 1419, type: !1043)
!6310 = distinct !DILexicalBlock(scope: !6301, file: !1059, line: 1418, column: 95)
!6311 = !DILocation(line: 1419, column: 33, scope: !6310)
!6312 = !DILocation(line: 1419, column: 64, scope: !6310)
!6313 = !DILocation(line: 1419, column: 49, scope: !6310)
!6314 = !DILocation(line: 1419, column: 53, scope: !6310)
!6315 = !DILocation(line: 1419, column: 73, scope: !6310)
!6316 = !DILocation(line: 1420, column: 33, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6310, file: !1059, line: 1420, column: 33)
!6318 = !DILocation(line: 1420, column: 73, scope: !6317)
!6319 = !DILocation(line: 1420, column: 70, scope: !6317)
!6320 = !DILocation(line: 1420, column: 64, scope: !6317)
!6321 = !DILocation(line: 1420, column: 33, scope: !6310)
!6322 = !DILocation(line: 1421, column: 48, scope: !6317)
!6323 = !DILocation(line: 1421, column: 33, scope: !6317)
!6324 = !DILocation(line: 1421, column: 37, scope: !6317)
!6325 = !DILocation(line: 1421, column: 56, scope: !6317)
!6326 = !DILocation(line: 1422, column: 42, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6317, file: !1059, line: 1422, column: 38)
!6328 = !DILocation(line: 1422, column: 40, scope: !6327)
!6329 = !DILocation(line: 1422, column: 81, scope: !6327)
!6330 = !DILocation(line: 1422, column: 78, scope: !6327)
!6331 = !DILocation(line: 1422, column: 73, scope: !6327)
!6332 = !DILocation(line: 1422, column: 38, scope: !6317)
!6333 = !DILocation(line: 1423, column: 52, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6327, file: !1059, line: 1423, column: 37)
!6335 = !DILocation(line: 1423, column: 37, scope: !6334)
!6336 = !DILocation(line: 1423, column: 41, scope: !6334)
!6337 = !DILocation(line: 1423, column: 61, scope: !6334)
!6338 = !DILocation(line: 1423, column: 37, scope: !6327)
!6339 = !DILocation(line: 1424, column: 52, scope: !6334)
!6340 = !DILocation(line: 1424, column: 37, scope: !6334)
!6341 = !DILocation(line: 1424, column: 41, scope: !6334)
!6342 = !DILocation(line: 1424, column: 60, scope: !6334)
!6343 = !DILocation(line: 1423, column: 63, scope: !6344)
!6344 = !DILexicalBlockFile(scope: !6334, file: !1059, discriminator: 1)
!6345 = !DILocation(line: 1425, column: 39, scope: !6310)
!6346 = !DILocation(line: 1426, column: 25, scope: !6310)
!6347 = !DILocation(line: 1427, column: 21, scope: !4507)
!6348 = !DILocation(line: 1428, column: 17, scope: !4509)
!6349 = !DILocalVariable(name: "last_coeff_abs_level_remaining", scope: !4466, file: !1059, line: 1429, type: !1043)
!6350 = !DILocation(line: 1429, column: 25, scope: !4466)
!6351 = !DILocation(line: 1429, column: 91, scope: !4466)
!6352 = !DILocation(line: 1429, column: 94, scope: !4466)
!6353 = !DILocation(line: 1429, column: 58, scope: !4466)
!6354 = !DILocation(line: 991, column: 5, scope: !4464, inlinedAt: !4465)
!6355 = !DILocation(line: 991, column: 12, scope: !6159, inlinedAt: !4465)
!6356 = !DILocation(line: 991, column: 19, scope: !6159, inlinedAt: !4465)
!6357 = !DILocation(line: 991, column: 24, scope: !6159, inlinedAt: !4465)
!6358 = !DILocation(line: 991, column: 49, scope: !4487, inlinedAt: !4465)
!6359 = !DILocation(line: 991, column: 52, scope: !4487, inlinedAt: !4465)
!6360 = !DILocation(line: 991, column: 60, scope: !4487, inlinedAt: !4465)
!6361 = !DILocation(line: 991, column: 27, scope: !4487, inlinedAt: !4465)
!6362 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4486)
!6363 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4486)
!6364 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4486)
!6365 = !DILocation(line: 991, column: 24, scope: !4487, inlinedAt: !4465)
!6366 = !DILocation(line: 991, column: 5, scope: !6171, inlinedAt: !4465)
!6367 = !DILocation(line: 992, column: 15, scope: !4464, inlinedAt: !4465)
!6368 = !DILocation(line: 991, column: 5, scope: !6174, inlinedAt: !4465)
!6369 = !DILocation(line: 994, column: 9, scope: !4463, inlinedAt: !4465)
!6370 = !DILocation(line: 994, column: 16, scope: !4463, inlinedAt: !4465)
!6371 = !DILocation(line: 994, column: 9, scope: !4464, inlinedAt: !4465)
!6372 = !DILocation(line: 995, column: 16, scope: !4481, inlinedAt: !4465)
!6373 = !DILocation(line: 995, column: 14, scope: !4481, inlinedAt: !4465)
!6374 = !DILocation(line: 995, column: 21, scope: !6183, inlinedAt: !4465)
!6375 = !DILocation(line: 995, column: 25, scope: !6183, inlinedAt: !4465)
!6376 = !DILocation(line: 995, column: 23, scope: !6183, inlinedAt: !4465)
!6377 = !DILocation(line: 995, column: 9, scope: !6183, inlinedAt: !4465)
!6378 = !DILocation(line: 996, column: 23, scope: !4480, inlinedAt: !4465)
!6379 = !DILocation(line: 996, column: 30, scope: !4480, inlinedAt: !4465)
!6380 = !DILocation(line: 996, column: 60, scope: !4480, inlinedAt: !4465)
!6381 = !DILocation(line: 996, column: 63, scope: !4480, inlinedAt: !4465)
!6382 = !DILocation(line: 996, column: 71, scope: !4480, inlinedAt: !4465)
!6383 = !DILocation(line: 996, column: 38, scope: !4480, inlinedAt: !4465)
!6384 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4479)
!6385 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4479)
!6386 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4479)
!6387 = !DILocation(line: 996, column: 36, scope: !4480, inlinedAt: !4465)
!6388 = !DILocation(line: 996, column: 20, scope: !4480, inlinedAt: !4465)
!6389 = !DILocation(line: 995, column: 41, scope: !6199, inlinedAt: !4465)
!6390 = !DILocation(line: 995, column: 9, scope: !6199, inlinedAt: !4465)
!6391 = !DILocation(line: 997, column: 43, scope: !4482, inlinedAt: !4465)
!6392 = !DILocation(line: 997, column: 53, scope: !4482, inlinedAt: !4465)
!6393 = !DILocation(line: 997, column: 50, scope: !4482, inlinedAt: !4465)
!6394 = !DILocation(line: 997, column: 70, scope: !4482, inlinedAt: !4465)
!6395 = !DILocation(line: 997, column: 68, scope: !4482, inlinedAt: !4465)
!6396 = !DILocation(line: 997, column: 40, scope: !4482, inlinedAt: !4465)
!6397 = !DILocation(line: 998, column: 5, scope: !4482, inlinedAt: !4465)
!6398 = !DILocation(line: 999, column: 29, scope: !4462, inlinedAt: !4465)
!6399 = !DILocation(line: 999, column: 36, scope: !4462, inlinedAt: !4465)
!6400 = !DILocation(line: 1001, column: 13, scope: !6213, inlinedAt: !4465)
!6401 = !DILocation(line: 1001, column: 20, scope: !6213, inlinedAt: !4465)
!6402 = !DILocation(line: 1001, column: 26, scope: !6213, inlinedAt: !4465)
!6403 = !DILocation(line: 1001, column: 29, scope: !6217, inlinedAt: !4465)
!6404 = !DILocation(line: 1001, column: 45, scope: !6217, inlinedAt: !4465)
!6405 = !DILocation(line: 1001, column: 43, scope: !6217, inlinedAt: !4465)
!6406 = !DILocation(line: 1001, column: 59, scope: !6217, inlinedAt: !4465)
!6407 = !DILocation(line: 1001, column: 13, scope: !6217, inlinedAt: !4465)
!6408 = !DILocation(line: 1002, column: 20, scope: !6223, inlinedAt: !4465)
!6409 = !DILocation(line: 1002, column: 23, scope: !6223, inlinedAt: !4465)
!6410 = !DILocation(line: 1002, column: 58, scope: !6223, inlinedAt: !4465)
!6411 = !DILocation(line: 1002, column: 13, scope: !6223, inlinedAt: !4465)
!6412 = !DILocation(line: 1003, column: 13, scope: !6223, inlinedAt: !4465)
!6413 = !DILocation(line: 1006, column: 16, scope: !4461, inlinedAt: !4465)
!6414 = !DILocation(line: 1006, column: 14, scope: !4461, inlinedAt: !4465)
!6415 = !DILocation(line: 1006, column: 21, scope: !6231, inlinedAt: !4465)
!6416 = !DILocation(line: 1006, column: 25, scope: !6231, inlinedAt: !4465)
!6417 = !DILocation(line: 1006, column: 41, scope: !6231, inlinedAt: !4465)
!6418 = !DILocation(line: 1006, column: 39, scope: !6231, inlinedAt: !4465)
!6419 = !DILocation(line: 1006, column: 23, scope: !6231, inlinedAt: !4465)
!6420 = !DILocation(line: 1006, column: 9, scope: !6231, inlinedAt: !4465)
!6421 = !DILocation(line: 1007, column: 23, scope: !4460, inlinedAt: !4465)
!6422 = !DILocation(line: 1007, column: 30, scope: !4460, inlinedAt: !4465)
!6423 = !DILocation(line: 1007, column: 60, scope: !4460, inlinedAt: !4465)
!6424 = !DILocation(line: 1007, column: 63, scope: !4460, inlinedAt: !4465)
!6425 = !DILocation(line: 1007, column: 71, scope: !4460, inlinedAt: !4465)
!6426 = !DILocation(line: 1007, column: 38, scope: !4460, inlinedAt: !4465)
!6427 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !4459)
!6428 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !4459)
!6429 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !4459)
!6430 = !DILocation(line: 1007, column: 36, scope: !4460, inlinedAt: !4465)
!6431 = !DILocation(line: 1007, column: 20, scope: !4460, inlinedAt: !4465)
!6432 = !DILocation(line: 1006, column: 57, scope: !6249, inlinedAt: !4465)
!6433 = !DILocation(line: 1006, column: 9, scope: !6249, inlinedAt: !4465)
!6434 = !DILocation(line: 1008, column: 50, scope: !4462, inlinedAt: !4465)
!6435 = !DILocation(line: 1008, column: 47, scope: !4462, inlinedAt: !4465)
!6436 = !DILocation(line: 1008, column: 65, scope: !4462, inlinedAt: !4465)
!6437 = !DILocation(line: 1008, column: 69, scope: !4462, inlinedAt: !4465)
!6438 = !DILocation(line: 1009, column: 50, scope: !4462, inlinedAt: !4465)
!6439 = !DILocation(line: 1009, column: 47, scope: !4462, inlinedAt: !4465)
!6440 = !DILocation(line: 1009, column: 67, scope: !4462, inlinedAt: !4465)
!6441 = !DILocation(line: 1009, column: 65, scope: !4462, inlinedAt: !4465)
!6442 = !DILocation(line: 1008, column: 40, scope: !4462, inlinedAt: !4465)
!6443 = !DILocation(line: 1011, column: 12, scope: !4464, inlinedAt: !4465)
!6444 = !DILocation(line: 1011, column: 5, scope: !4464, inlinedAt: !4465)
!6445 = !DILocation(line: 1012, column: 1, scope: !4464, inlinedAt: !4465)
!6446 = !DILocation(line: 1431, column: 45, scope: !4466)
!6447 = !DILocation(line: 1431, column: 43, scope: !4466)
!6448 = !DILocation(line: 1431, column: 41, scope: !4466)
!6449 = !DILocation(line: 1431, column: 39, scope: !4466)
!6450 = !DILocation(line: 1432, column: 25, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !4466, file: !1059, line: 1432, column: 25)
!6452 = !DILocation(line: 1432, column: 51, scope: !6451)
!6453 = !DILocation(line: 1432, column: 48, scope: !6451)
!6454 = !DILocation(line: 1432, column: 45, scope: !6451)
!6455 = !DILocation(line: 1432, column: 43, scope: !6451)
!6456 = !DILocation(line: 1432, column: 25, scope: !4466)
!6457 = !DILocation(line: 1433, column: 40, scope: !6451)
!6458 = !DILocation(line: 1433, column: 43, scope: !6451)
!6459 = !DILocation(line: 1433, column: 46, scope: !6451)
!6460 = !DILocation(line: 1433, column: 51, scope: !6451)
!6461 = !DILocation(line: 1433, column: 93, scope: !6462)
!6462 = !DILexicalBlockFile(scope: !6451, file: !1059, discriminator: 1)
!6463 = !DILocation(line: 1433, column: 106, scope: !6462)
!6464 = !DILocation(line: 1433, column: 40, scope: !6462)
!6465 = !DILocation(line: 1433, column: 114, scope: !6466)
!6466 = !DILexicalBlockFile(scope: !6451, file: !1059, discriminator: 2)
!6467 = !DILocation(line: 1433, column: 127, scope: !6466)
!6468 = !DILocation(line: 1433, column: 132, scope: !6466)
!6469 = !DILocation(line: 1433, column: 113, scope: !6466)
!6470 = !DILocation(line: 1433, column: 113, scope: !6471)
!6471 = !DILexicalBlockFile(scope: !6451, file: !1059, discriminator: 3)
!6472 = !DILocation(line: 1433, column: 147, scope: !6473)
!6473 = !DILexicalBlockFile(scope: !6451, file: !1059, discriminator: 4)
!6474 = !DILocation(line: 1433, column: 160, scope: !6473)
!6475 = !DILocation(line: 1433, column: 113, scope: !6473)
!6476 = !DILocation(line: 1433, column: 113, scope: !6477)
!6477 = !DILexicalBlockFile(scope: !6451, file: !1059, discriminator: 5)
!6478 = !DILocation(line: 1433, column: 40, scope: !6477)
!6479 = !DILocation(line: 1433, column: 40, scope: !6480)
!6480 = !DILexicalBlockFile(scope: !6451, file: !1059, discriminator: 6)
!6481 = !DILocation(line: 1433, column: 38, scope: !6480)
!6482 = !DILocation(line: 1433, column: 25, scope: !6480)
!6483 = !DILocation(line: 1434, column: 25, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !4466, file: !1059, line: 1434, column: 25)
!6485 = !DILocation(line: 1434, column: 28, scope: !6484)
!6486 = !DILocation(line: 1434, column: 31, scope: !6484)
!6487 = !DILocation(line: 1434, column: 36, scope: !6484)
!6488 = !DILocation(line: 1434, column: 76, scope: !6484)
!6489 = !DILocation(line: 1434, column: 80, scope: !6490)
!6490 = !DILexicalBlockFile(scope: !6484, file: !1059, discriminator: 1)
!6491 = !DILocation(line: 1434, column: 25, scope: !6490)
!6492 = !DILocalVariable(name: "c_rice_p_init", scope: !6493, file: !1059, line: 1435, type: !1043)
!6493 = distinct !DILexicalBlock(scope: !6484, file: !1059, line: 1434, column: 91)
!6494 = !DILocation(line: 1435, column: 29, scope: !6493)
!6495 = !DILocation(line: 1435, column: 60, scope: !6493)
!6496 = !DILocation(line: 1435, column: 45, scope: !6493)
!6497 = !DILocation(line: 1435, column: 49, scope: !6493)
!6498 = !DILocation(line: 1435, column: 69, scope: !6493)
!6499 = !DILocation(line: 1436, column: 29, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6493, file: !1059, line: 1436, column: 29)
!6501 = !DILocation(line: 1436, column: 69, scope: !6500)
!6502 = !DILocation(line: 1436, column: 66, scope: !6500)
!6503 = !DILocation(line: 1436, column: 60, scope: !6500)
!6504 = !DILocation(line: 1436, column: 29, scope: !6493)
!6505 = !DILocation(line: 1437, column: 44, scope: !6500)
!6506 = !DILocation(line: 1437, column: 29, scope: !6500)
!6507 = !DILocation(line: 1437, column: 33, scope: !6500)
!6508 = !DILocation(line: 1437, column: 52, scope: !6500)
!6509 = !DILocation(line: 1438, column: 38, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6500, file: !1059, line: 1438, column: 34)
!6511 = !DILocation(line: 1438, column: 36, scope: !6510)
!6512 = !DILocation(line: 1438, column: 77, scope: !6510)
!6513 = !DILocation(line: 1438, column: 74, scope: !6510)
!6514 = !DILocation(line: 1438, column: 69, scope: !6510)
!6515 = !DILocation(line: 1438, column: 34, scope: !6500)
!6516 = !DILocation(line: 1439, column: 48, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6510, file: !1059, line: 1439, column: 33)
!6518 = !DILocation(line: 1439, column: 33, scope: !6517)
!6519 = !DILocation(line: 1439, column: 37, scope: !6517)
!6520 = !DILocation(line: 1439, column: 57, scope: !6517)
!6521 = !DILocation(line: 1439, column: 33, scope: !6510)
!6522 = !DILocation(line: 1440, column: 48, scope: !6517)
!6523 = !DILocation(line: 1440, column: 33, scope: !6517)
!6524 = !DILocation(line: 1440, column: 37, scope: !6517)
!6525 = !DILocation(line: 1440, column: 56, scope: !6517)
!6526 = !DILocation(line: 1439, column: 59, scope: !6527)
!6527 = !DILexicalBlockFile(scope: !6517, file: !1059, discriminator: 1)
!6528 = !DILocation(line: 1441, column: 35, scope: !6493)
!6529 = !DILocation(line: 1442, column: 21, scope: !6493)
!6530 = !DILocation(line: 1444, column: 21, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !4468, file: !1059, line: 1444, column: 21)
!6532 = !DILocation(line: 1444, column: 24, scope: !6531)
!6533 = !DILocation(line: 1444, column: 27, scope: !6531)
!6534 = !DILocation(line: 1444, column: 32, scope: !6531)
!6535 = !DILocation(line: 1444, column: 54, scope: !6531)
!6536 = !DILocation(line: 1444, column: 57, scope: !6537)
!6537 = !DILexicalBlockFile(scope: !6531, file: !1059, discriminator: 1)
!6538 = !DILocation(line: 1444, column: 21, scope: !6537)
!6539 = !DILocation(line: 1445, column: 32, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6531, file: !1059, line: 1444, column: 70)
!6541 = !DILocation(line: 1445, column: 29, scope: !6540)
!6542 = !DILocation(line: 1446, column: 25, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6540, file: !1059, line: 1446, column: 25)
!6544 = !DILocation(line: 1446, column: 30, scope: !6543)
!6545 = !DILocation(line: 1446, column: 27, scope: !6543)
!6546 = !DILocation(line: 1446, column: 49, scope: !6543)
!6547 = !DILocation(line: 1446, column: 53, scope: !6548)
!6548 = !DILexicalBlockFile(scope: !6543, file: !1059, discriminator: 1)
!6549 = !DILocation(line: 1446, column: 60, scope: !6548)
!6550 = !DILocation(line: 1446, column: 25, scope: !6548)
!6551 = !DILocation(line: 1447, column: 46, scope: !6543)
!6552 = !DILocation(line: 1447, column: 45, scope: !6543)
!6553 = !DILocation(line: 1447, column: 43, scope: !6543)
!6554 = !DILocation(line: 1447, column: 25, scope: !6543)
!6555 = !DILocation(line: 1448, column: 17, scope: !6540)
!6556 = !DILocation(line: 1449, column: 21, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !4468, file: !1059, line: 1449, column: 21)
!6558 = !DILocation(line: 1449, column: 37, scope: !6557)
!6559 = !DILocation(line: 1449, column: 21, scope: !4468)
!6560 = !DILocation(line: 1450, column: 42, scope: !6557)
!6561 = !DILocation(line: 1450, column: 41, scope: !6557)
!6562 = !DILocation(line: 1450, column: 39, scope: !6557)
!6563 = !DILocation(line: 1450, column: 21, scope: !6557)
!6564 = !DILocation(line: 1451, column: 33, scope: !4468)
!6565 = !DILocation(line: 1452, column: 21, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !4468, file: !1059, line: 1452, column: 20)
!6567 = !DILocation(line: 1452, column: 25, scope: !6566)
!6568 = !DILocation(line: 1452, column: 28, scope: !6566)
!6569 = !DILocation(line: 1452, column: 20, scope: !4468)
!6570 = !DILocation(line: 1453, column: 25, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6572, file: !1059, line: 1453, column: 25)
!6572 = distinct !DILexicalBlock(scope: !6566, file: !1059, line: 1452, column: 55)
!6573 = !DILocation(line: 1453, column: 28, scope: !6571)
!6574 = !DILocation(line: 1453, column: 31, scope: !6571)
!6575 = !DILocation(line: 1453, column: 36, scope: !6571)
!6576 = !DILocation(line: 1453, column: 61, scope: !6571)
!6577 = !DILocation(line: 1453, column: 66, scope: !6578)
!6578 = !DILexicalBlockFile(scope: !6571, file: !1059, discriminator: 1)
!6579 = !DILocation(line: 1453, column: 86, scope: !6578)
!6580 = !DILocation(line: 1453, column: 89, scope: !6581)
!6581 = !DILexicalBlockFile(scope: !6571, file: !1059, discriminator: 2)
!6582 = !DILocation(line: 1453, column: 105, scope: !6581)
!6583 = !DILocation(line: 1453, column: 25, scope: !6581)
!6584 = !DILocation(line: 1454, column: 28, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6586, file: !1059, line: 1454, column: 28)
!6586 = distinct !DILexicalBlock(scope: !6571, file: !1059, line: 1453, column: 111)
!6587 = !DILocation(line: 1454, column: 32, scope: !6585)
!6588 = !DILocation(line: 1454, column: 35, scope: !6589)
!6589 = !DILexicalBlockFile(scope: !6585, file: !1059, discriminator: 1)
!6590 = !DILocation(line: 1454, column: 39, scope: !6589)
!6591 = !DILocation(line: 1454, column: 42, scope: !6592)
!6592 = !DILexicalBlockFile(scope: !6585, file: !1059, discriminator: 2)
!6593 = !DILocation(line: 1454, column: 58, scope: !6592)
!6594 = !DILocation(line: 1454, column: 28, scope: !6592)
!6595 = !DILocation(line: 1455, column: 36, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6585, file: !1059, line: 1454, column: 63)
!6597 = !DILocation(line: 1455, column: 29, scope: !6596)
!6598 = !DILocation(line: 1456, column: 48, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6596, file: !1059, line: 1455, column: 53)
!6600 = !DILocation(line: 1456, column: 52, scope: !6599)
!6601 = !DILocation(line: 1456, column: 60, scope: !6599)
!6602 = !DILocation(line: 1456, column: 58, scope: !6599)
!6603 = !DILocation(line: 1456, column: 45, scope: !6599)
!6604 = !DILocation(line: 1456, column: 65, scope: !6599)
!6605 = !DILocation(line: 1457, column: 49, scope: !6599)
!6606 = !DILocation(line: 1457, column: 53, scope: !6599)
!6607 = !DILocation(line: 1457, column: 59, scope: !6599)
!6608 = !DILocation(line: 1457, column: 68, scope: !6599)
!6609 = !DILocation(line: 1457, column: 72, scope: !6599)
!6610 = !DILocation(line: 1457, column: 65, scope: !6599)
!6611 = !DILocation(line: 1457, column: 45, scope: !6599)
!6612 = !DILocation(line: 1457, column: 79, scope: !6599)
!6613 = !DILocation(line: 1458, column: 49, scope: !6599)
!6614 = !DILocation(line: 1458, column: 53, scope: !6599)
!6615 = !DILocation(line: 1458, column: 59, scope: !6599)
!6616 = !DILocation(line: 1458, column: 68, scope: !6599)
!6617 = !DILocation(line: 1458, column: 72, scope: !6599)
!6618 = !DILocation(line: 1458, column: 65, scope: !6599)
!6619 = !DILocation(line: 1458, column: 45, scope: !6599)
!6620 = !DILocation(line: 1458, column: 79, scope: !6599)
!6621 = !DILocation(line: 1459, column: 49, scope: !6599)
!6622 = !DILocation(line: 1459, column: 53, scope: !6599)
!6623 = !DILocation(line: 1459, column: 61, scope: !6599)
!6624 = !DILocation(line: 1459, column: 59, scope: !6599)
!6625 = !DILocation(line: 1459, column: 46, scope: !6599)
!6626 = !DILocation(line: 1459, column: 66, scope: !6599)
!6627 = !DILocation(line: 1461, column: 52, scope: !6596)
!6628 = !DILocation(line: 1461, column: 39, scope: !6596)
!6629 = !DILocation(line: 1461, column: 37, scope: !6596)
!6630 = !DILocation(line: 1462, column: 25, scope: !6596)
!6631 = !DILocation(line: 1463, column: 39, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6585, file: !1059, line: 1462, column: 32)
!6633 = !DILocation(line: 1463, column: 37, scope: !6632)
!6634 = !DILocation(line: 1465, column: 21, scope: !6586)
!6635 = !DILocation(line: 1466, column: 42, scope: !6572)
!6636 = !DILocation(line: 1466, column: 71, scope: !6572)
!6637 = !DILocation(line: 1466, column: 62, scope: !6572)
!6638 = !DILocation(line: 1466, column: 60, scope: !6572)
!6639 = !DILocation(line: 1466, column: 88, scope: !6572)
!6640 = !DILocation(line: 1466, column: 79, scope: !6572)
!6641 = !DILocation(line: 1466, column: 77, scope: !6572)
!6642 = !DILocation(line: 1466, column: 98, scope: !6572)
!6643 = !DILocation(line: 1466, column: 96, scope: !6572)
!6644 = !DILocation(line: 1466, column: 106, scope: !6572)
!6645 = !DILocation(line: 1466, column: 103, scope: !6572)
!6646 = !DILocation(line: 1466, column: 39, scope: !6572)
!6647 = !DILocation(line: 1467, column: 24, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6572, file: !1059, line: 1467, column: 24)
!6649 = !DILocation(line: 1467, column: 42, scope: !6648)
!6650 = !DILocation(line: 1467, column: 24, scope: !6572)
!6651 = !DILocation(line: 1468, column: 30, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6653, file: !1059, line: 1468, column: 28)
!6653 = distinct !DILexicalBlock(scope: !6648, file: !1059, line: 1467, column: 47)
!6654 = !DILocation(line: 1468, column: 29, scope: !6652)
!6655 = !DILocation(line: 1468, column: 49, scope: !6652)
!6656 = !DILocation(line: 1468, column: 28, scope: !6653)
!6657 = !DILocation(line: 1469, column: 47, scope: !6652)
!6658 = !DILocation(line: 1469, column: 29, scope: !6652)
!6659 = !DILocation(line: 1470, column: 21, scope: !6653)
!6660 = !DILocation(line: 1471, column: 28, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !1059, line: 1471, column: 28)
!6662 = distinct !DILexicalBlock(scope: !6648, file: !1059, line: 1470, column: 28)
!6663 = !DILocation(line: 1471, column: 46, scope: !6661)
!6664 = !DILocation(line: 1471, column: 28, scope: !6662)
!6665 = !DILocation(line: 1472, column: 47, scope: !6661)
!6666 = !DILocation(line: 1472, column: 29, scope: !6661)
!6667 = !DILocation(line: 1474, column: 17, scope: !6572)
!6668 = !DILocation(line: 1475, column: 50, scope: !4468)
!6669 = !DILocation(line: 1475, column: 24, scope: !4468)
!6670 = !DILocation(line: 1475, column: 30, scope: !4468)
!6671 = !DILocation(line: 1475, column: 28, scope: !4468)
!6672 = !DILocation(line: 1475, column: 43, scope: !4468)
!6673 = !DILocation(line: 1475, column: 41, scope: !4468)
!6674 = !DILocation(line: 1475, column: 17, scope: !4468)
!6675 = !DILocation(line: 1475, column: 48, scope: !4468)
!6676 = !DILocation(line: 1476, column: 13, scope: !4468)
!6677 = !DILocation(line: 1407, column: 37, scope: !6678)
!6678 = !DILexicalBlockFile(scope: !4469, file: !1059, discriminator: 2)
!6679 = !DILocation(line: 1407, column: 13, scope: !6678)
!6680 = distinct !{!6680, !6681}
!6681 = !DILocation(line: 1407, column: 13, scope: !4471)
!6682 = !DILocation(line: 1477, column: 9, scope: !4471)
!6683 = !DILocation(line: 1478, column: 5, scope: !4473)
!6684 = !DILocation(line: 1220, column: 40, scope: !6685)
!6685 = !DILexicalBlockFile(scope: !4474, file: !1059, discriminator: 2)
!6686 = !DILocation(line: 1220, column: 5, scope: !6685)
!6687 = distinct !{!6687, !6688}
!6688 = !DILocation(line: 1220, column: 5, scope: !1058)
!6689 = !DILocation(line: 1480, column: 9, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !1058, file: !1059, line: 1480, column: 9)
!6691 = !DILocation(line: 1480, column: 13, scope: !6690)
!6692 = !DILocation(line: 1480, column: 16, scope: !6690)
!6693 = !DILocation(line: 1480, column: 9, scope: !1058)
!6694 = !DILocation(line: 1481, column: 13, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6696, file: !1059, line: 1481, column: 13)
!6696 = distinct !DILexicalBlock(scope: !6690, file: !1059, line: 1480, column: 43)
!6697 = !DILocation(line: 1481, column: 33, scope: !6695)
!6698 = !DILocation(line: 1481, column: 37, scope: !6699)
!6699 = !DILexicalBlockFile(scope: !6695, file: !1059, discriminator: 1)
!6700 = !DILocation(line: 1481, column: 40, scope: !6699)
!6701 = !DILocation(line: 1481, column: 43, scope: !6699)
!6702 = !DILocation(line: 1481, column: 48, scope: !6699)
!6703 = !DILocation(line: 1481, column: 76, scope: !6699)
!6704 = !DILocation(line: 1482, column: 38, scope: !6695)
!6705 = !DILocation(line: 1482, column: 54, scope: !6695)
!6706 = !DILocation(line: 1482, column: 60, scope: !6695)
!6707 = !DILocation(line: 1482, column: 63, scope: !6699)
!6708 = !DILocation(line: 1482, column: 79, scope: !6699)
!6709 = !DILocation(line: 1481, column: 13, scope: !6710)
!6710 = !DILexicalBlockFile(scope: !6696, file: !1059, discriminator: 2)
!6711 = !DILocalVariable(name: "mode", scope: !6712, file: !1059, line: 1483, type: !1043)
!6712 = distinct !DILexicalBlock(scope: !6695, file: !1059, line: 1482, column: 88)
!6713 = !DILocation(line: 1483, column: 17, scope: !6712)
!6714 = !DILocation(line: 1483, column: 24, scope: !6712)
!6715 = !DILocation(line: 1483, column: 27, scope: !6712)
!6716 = !DILocation(line: 1483, column: 30, scope: !6712)
!6717 = !DILocation(line: 1483, column: 35, scope: !6712)
!6718 = !DILocation(line: 1483, column: 66, scope: !6719)
!6719 = !DILexicalBlockFile(scope: !6712, file: !1059, discriminator: 1)
!6720 = !DILocation(line: 1483, column: 82, scope: !6719)
!6721 = !DILocation(line: 1483, column: 24, scope: !6719)
!6722 = !DILocation(line: 1483, column: 91, scope: !6723)
!6723 = !DILexicalBlockFile(scope: !6712, file: !1059, discriminator: 2)
!6724 = !DILocation(line: 1483, column: 24, scope: !6723)
!6725 = !DILocation(line: 1483, column: 24, scope: !6726)
!6726 = !DILexicalBlockFile(scope: !6712, file: !1059, discriminator: 3)
!6727 = !DILocation(line: 1483, column: 17, scope: !6726)
!6728 = !DILocation(line: 1485, column: 13, scope: !6712)
!6729 = !DILocation(line: 1485, column: 16, scope: !6712)
!6730 = !DILocation(line: 1485, column: 24, scope: !6712)
!6731 = !DILocation(line: 1485, column: 40, scope: !6712)
!6732 = !DILocation(line: 1485, column: 48, scope: !6712)
!6733 = !DILocation(line: 1485, column: 65, scope: !6712)
!6734 = !DILocation(line: 1486, column: 9, scope: !6712)
!6735 = !DILocation(line: 1487, column: 5, scope: !6696)
!6736 = !DILocation(line: 1488, column: 13, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !1059, line: 1488, column: 13)
!6738 = distinct !DILexicalBlock(scope: !6690, file: !1059, line: 1487, column: 12)
!6739 = !DILocation(line: 1488, column: 13, scope: !6738)
!6740 = !DILocalVariable(name: "rot", scope: !6741, file: !1059, line: 1489, type: !1043)
!6741 = distinct !DILexicalBlock(scope: !6737, file: !1059, line: 1488, column: 34)
!6742 = !DILocation(line: 1489, column: 17, scope: !6741)
!6743 = !DILocation(line: 1489, column: 23, scope: !6741)
!6744 = !DILocation(line: 1489, column: 26, scope: !6741)
!6745 = !DILocation(line: 1489, column: 29, scope: !6741)
!6746 = !DILocation(line: 1489, column: 34, scope: !6741)
!6747 = !DILocation(line: 1489, column: 71, scope: !6741)
!6748 = !DILocation(line: 1490, column: 23, scope: !6741)
!6749 = !DILocation(line: 1490, column: 39, scope: !6741)
!6750 = !DILocation(line: 1490, column: 44, scope: !6741)
!6751 = !DILocation(line: 1491, column: 23, scope: !6741)
!6752 = !DILocation(line: 1491, column: 27, scope: !6741)
!6753 = !DILocation(line: 1491, column: 30, scope: !6741)
!6754 = !DILocation(line: 1491, column: 40, scope: !6741)
!6755 = !DILocation(line: 1490, column: 44, scope: !6756)
!6756 = !DILexicalBlockFile(scope: !6741, file: !1059, discriminator: 1)
!6757 = !DILocation(line: 1489, column: 17, scope: !6756)
!6758 = !DILocation(line: 1492, column: 17, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6741, file: !1059, line: 1492, column: 17)
!6760 = !DILocation(line: 1492, column: 17, scope: !6741)
!6761 = !DILocation(line: 1493, column: 24, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6763, file: !1059, line: 1493, column: 17)
!6763 = distinct !DILexicalBlock(scope: !6759, file: !1059, line: 1492, column: 22)
!6764 = !DILocation(line: 1493, column: 22, scope: !6762)
!6765 = !DILocation(line: 1493, column: 29, scope: !6766)
!6766 = !DILexicalBlockFile(scope: !6767, file: !1059, discriminator: 1)
!6767 = distinct !DILexicalBlock(scope: !6762, file: !1059, line: 1493, column: 17)
!6768 = !DILocation(line: 1493, column: 31, scope: !6766)
!6769 = !DILocation(line: 1493, column: 17, scope: !6766)
!6770 = !DILocation(line: 1494, column: 21, scope: !6767)
!6771 = distinct !{!6771, !6770}
!6772 = !DILocalVariable(name: "SWAP_tmp", scope: !6773, file: !1059, line: 1494, type: !1046)
!6773 = distinct !DILexicalBlock(scope: !6767, file: !1059, line: 1494, column: 23)
!6774 = !DILocation(line: 1494, column: 32, scope: !6773)
!6775 = !DILocation(line: 1494, column: 54, scope: !6776)
!6776 = !DILexicalBlockFile(scope: !6773, file: !1059, discriminator: 1)
!6777 = !DILocation(line: 1494, column: 52, scope: !6776)
!6778 = !DILocation(line: 1494, column: 56, scope: !6776)
!6779 = !DILocation(line: 1494, column: 42, scope: !6776)
!6780 = !DILocation(line: 1494, column: 32, scope: !6776)
!6781 = !DILocation(line: 1494, column: 89, scope: !6776)
!6782 = !DILocation(line: 1494, column: 82, scope: !6776)
!6783 = !DILocation(line: 1494, column: 74, scope: !6776)
!6784 = !DILocation(line: 1494, column: 72, scope: !6776)
!6785 = !DILocation(line: 1494, column: 76, scope: !6776)
!6786 = !DILocation(line: 1494, column: 62, scope: !6776)
!6787 = !DILocation(line: 1494, column: 80, scope: !6776)
!6788 = !DILocation(line: 1494, column: 104, scope: !6776)
!6789 = !DILocation(line: 1494, column: 100, scope: !6776)
!6790 = !DILocation(line: 1494, column: 93, scope: !6776)
!6791 = !DILocation(line: 1494, column: 102, scope: !6776)
!6792 = !DILocation(line: 1494, column: 113, scope: !6776)
!6793 = !DILocation(line: 1494, column: 113, scope: !6794)
!6794 = !DILexicalBlockFile(scope: !6773, file: !1059, discriminator: 2)
!6795 = !DILocation(line: 1493, column: 37, scope: !6796)
!6796 = !DILexicalBlockFile(scope: !6767, file: !1059, discriminator: 2)
!6797 = !DILocation(line: 1493, column: 17, scope: !6796)
!6798 = distinct !{!6798, !6799}
!6799 = !DILocation(line: 1493, column: 17, scope: !6763)
!6800 = !DILocation(line: 1495, column: 13, scope: !6763)
!6801 = !DILocation(line: 1497, column: 13, scope: !6741)
!6802 = !DILocation(line: 1497, column: 16, scope: !6741)
!6803 = !DILocation(line: 1497, column: 24, scope: !6741)
!6804 = !DILocation(line: 1497, column: 32, scope: !6741)
!6805 = !DILocation(line: 1497, column: 40, scope: !6741)
!6806 = !DILocation(line: 1499, column: 17, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6741, file: !1059, line: 1499, column: 17)
!6808 = !DILocation(line: 1499, column: 37, scope: !6807)
!6809 = !DILocation(line: 1499, column: 41, scope: !6810)
!6810 = !DILexicalBlockFile(scope: !6807, file: !1059, discriminator: 1)
!6811 = !DILocation(line: 1499, column: 44, scope: !6810)
!6812 = !DILocation(line: 1499, column: 47, scope: !6810)
!6813 = !DILocation(line: 1499, column: 52, scope: !6810)
!6814 = !DILocation(line: 1499, column: 80, scope: !6810)
!6815 = !DILocation(line: 1500, column: 41, scope: !6807)
!6816 = !DILocation(line: 1500, column: 45, scope: !6807)
!6817 = !DILocation(line: 1500, column: 48, scope: !6807)
!6818 = !DILocation(line: 1500, column: 58, scope: !6807)
!6819 = !DILocation(line: 1500, column: 72, scope: !6807)
!6820 = !DILocation(line: 1501, column: 42, scope: !6807)
!6821 = !DILocation(line: 1501, column: 58, scope: !6807)
!6822 = !DILocation(line: 1501, column: 64, scope: !6807)
!6823 = !DILocation(line: 1501, column: 67, scope: !6810)
!6824 = !DILocation(line: 1501, column: 83, scope: !6810)
!6825 = !DILocation(line: 1499, column: 17, scope: !6826)
!6826 = !DILexicalBlockFile(scope: !6741, file: !1059, discriminator: 2)
!6827 = !DILocalVariable(name: "mode", scope: !6828, file: !1059, line: 1502, type: !1043)
!6828 = distinct !DILexicalBlock(scope: !6807, file: !1059, line: 1501, column: 92)
!6829 = !DILocation(line: 1502, column: 21, scope: !6828)
!6830 = !DILocation(line: 1502, column: 28, scope: !6828)
!6831 = !DILocation(line: 1502, column: 50, scope: !6832)
!6832 = !DILexicalBlockFile(scope: !6828, file: !1059, discriminator: 1)
!6833 = !DILocation(line: 1502, column: 28, scope: !6832)
!6834 = !DILocation(line: 1502, column: 77, scope: !6835)
!6835 = !DILexicalBlockFile(scope: !6828, file: !1059, discriminator: 2)
!6836 = !DILocation(line: 1502, column: 93, scope: !6835)
!6837 = !DILocation(line: 1502, column: 28, scope: !6835)
!6838 = !DILocation(line: 1502, column: 28, scope: !6839)
!6839 = !DILexicalBlockFile(scope: !6828, file: !1059, discriminator: 3)
!6840 = !DILocation(line: 1502, column: 21, scope: !6839)
!6841 = !DILocation(line: 1504, column: 17, scope: !6828)
!6842 = !DILocation(line: 1504, column: 20, scope: !6828)
!6843 = !DILocation(line: 1504, column: 28, scope: !6828)
!6844 = !DILocation(line: 1504, column: 44, scope: !6828)
!6845 = !DILocation(line: 1504, column: 52, scope: !6828)
!6846 = !DILocation(line: 1504, column: 69, scope: !6828)
!6847 = !DILocation(line: 1505, column: 13, scope: !6828)
!6848 = !DILocation(line: 1506, column: 9, scope: !6741)
!6849 = !DILocation(line: 1506, column: 20, scope: !6850)
!6850 = !DILexicalBlockFile(scope: !6851, file: !1059, discriminator: 1)
!6851 = distinct !DILexicalBlock(scope: !6737, file: !1059, line: 1506, column: 20)
!6852 = !DILocation(line: 1506, column: 24, scope: !6850)
!6853 = !DILocation(line: 1506, column: 27, scope: !6850)
!6854 = !DILocation(line: 1506, column: 37, scope: !6850)
!6855 = !DILocation(line: 1506, column: 51, scope: !6850)
!6856 = !DILocation(line: 1506, column: 54, scope: !6857)
!6857 = !DILexicalBlockFile(scope: !6851, file: !1059, discriminator: 2)
!6858 = !DILocation(line: 1506, column: 60, scope: !6857)
!6859 = !DILocation(line: 1506, column: 65, scope: !6857)
!6860 = !DILocation(line: 1506, column: 68, scope: !6861)
!6861 = !DILexicalBlockFile(scope: !6851, file: !1059, discriminator: 3)
!6862 = !DILocation(line: 1506, column: 84, scope: !6861)
!6863 = !DILocation(line: 1506, column: 20, scope: !6861)
!6864 = !DILocation(line: 1507, column: 13, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6851, file: !1059, line: 1506, column: 90)
!6866 = !DILocation(line: 1507, column: 16, scope: !6865)
!6867 = !DILocation(line: 1507, column: 24, scope: !6865)
!6868 = !DILocation(line: 1507, column: 43, scope: !6865)
!6869 = !DILocation(line: 1508, column: 9, scope: !6865)
!6870 = !DILocalVariable(name: "max_xy", scope: !6871, file: !1059, line: 1509, type: !1043)
!6871 = distinct !DILexicalBlock(scope: !6851, file: !1059, line: 1508, column: 16)
!6872 = !DILocation(line: 1509, column: 17, scope: !6871)
!6873 = !DILocation(line: 1509, column: 28, scope: !6871)
!6874 = !DILocation(line: 1509, column: 57, scope: !6871)
!6875 = !DILocation(line: 1509, column: 54, scope: !6871)
!6876 = !DILocation(line: 1509, column: 27, scope: !6871)
!6877 = !DILocation(line: 1509, column: 86, scope: !6878)
!6878 = !DILexicalBlockFile(scope: !6871, file: !1059, discriminator: 1)
!6879 = !DILocation(line: 1509, column: 27, scope: !6878)
!6880 = !DILocation(line: 1509, column: 115, scope: !6881)
!6881 = !DILexicalBlockFile(scope: !6871, file: !1059, discriminator: 2)
!6882 = !DILocation(line: 1509, column: 27, scope: !6881)
!6883 = !DILocation(line: 1509, column: 27, scope: !6884)
!6884 = !DILexicalBlockFile(scope: !6871, file: !1059, discriminator: 3)
!6885 = !DILocation(line: 1509, column: 17, scope: !6884)
!6886 = !DILocation(line: 1510, column: 17, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6871, file: !1059, line: 1510, column: 17)
!6888 = !DILocation(line: 1510, column: 24, scope: !6887)
!6889 = !DILocation(line: 1510, column: 17, scope: !6871)
!6890 = !DILocation(line: 1511, column: 36, scope: !6887)
!6891 = !DILocation(line: 1511, column: 52, scope: !6887)
!6892 = !DILocation(line: 1511, column: 17, scope: !6887)
!6893 = !DILocation(line: 1511, column: 20, scope: !6887)
!6894 = !DILocation(line: 1511, column: 28, scope: !6887)
!6895 = !DILocation(line: 1511, column: 57, scope: !6887)
!6896 = !DILocalVariable(name: "col_limit", scope: !6897, file: !1059, line: 1513, type: !1043)
!6897 = distinct !DILexicalBlock(scope: !6887, file: !1059, line: 1512, column: 18)
!6898 = !DILocation(line: 1513, column: 21, scope: !6897)
!6899 = !DILocation(line: 1513, column: 33, scope: !6897)
!6900 = !DILocation(line: 1513, column: 60, scope: !6897)
!6901 = !DILocation(line: 1513, column: 58, scope: !6897)
!6902 = !DILocation(line: 1513, column: 85, scope: !6897)
!6903 = !DILocation(line: 1514, column: 21, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6897, file: !1059, line: 1514, column: 21)
!6905 = !DILocation(line: 1514, column: 28, scope: !6904)
!6906 = !DILocation(line: 1514, column: 21, scope: !6897)
!6907 = !DILocation(line: 1515, column: 41, scope: !6904)
!6908 = !DILocation(line: 1515, column: 38, scope: !6904)
!6909 = !DILocation(line: 1515, column: 34, scope: !6904)
!6910 = !DILocation(line: 1515, column: 55, scope: !6911)
!6911 = !DILexicalBlockFile(scope: !6904, file: !1059, discriminator: 1)
!6912 = !DILocation(line: 1515, column: 34, scope: !6911)
!6913 = !DILocation(line: 1515, column: 34, scope: !6914)
!6914 = !DILexicalBlockFile(scope: !6904, file: !1059, discriminator: 2)
!6915 = !DILocation(line: 1515, column: 34, scope: !6916)
!6916 = !DILexicalBlockFile(scope: !6904, file: !1059, discriminator: 3)
!6917 = !DILocation(line: 1515, column: 31, scope: !6916)
!6918 = !DILocation(line: 1515, column: 21, scope: !6916)
!6919 = !DILocation(line: 1516, column: 26, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6904, file: !1059, line: 1516, column: 26)
!6921 = !DILocation(line: 1516, column: 33, scope: !6920)
!6922 = !DILocation(line: 1516, column: 26, scope: !6904)
!6923 = !DILocation(line: 1517, column: 41, scope: !6920)
!6924 = !DILocation(line: 1517, column: 38, scope: !6920)
!6925 = !DILocation(line: 1517, column: 34, scope: !6920)
!6926 = !DILocation(line: 1517, column: 55, scope: !6927)
!6927 = !DILexicalBlockFile(scope: !6920, file: !1059, discriminator: 1)
!6928 = !DILocation(line: 1517, column: 34, scope: !6927)
!6929 = !DILocation(line: 1517, column: 34, scope: !6930)
!6930 = !DILexicalBlockFile(scope: !6920, file: !1059, discriminator: 2)
!6931 = !DILocation(line: 1517, column: 34, scope: !6932)
!6932 = !DILexicalBlockFile(scope: !6920, file: !1059, discriminator: 3)
!6933 = !DILocation(line: 1517, column: 31, scope: !6932)
!6934 = !DILocation(line: 1517, column: 21, scope: !6932)
!6935 = !DILocation(line: 1518, column: 26, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6920, file: !1059, line: 1518, column: 26)
!6937 = !DILocation(line: 1518, column: 33, scope: !6936)
!6938 = !DILocation(line: 1518, column: 26, scope: !6920)
!6939 = !DILocation(line: 1519, column: 42, scope: !6936)
!6940 = !DILocation(line: 1519, column: 39, scope: !6936)
!6941 = !DILocation(line: 1519, column: 34, scope: !6936)
!6942 = !DILocation(line: 1519, column: 56, scope: !6943)
!6943 = !DILexicalBlockFile(scope: !6936, file: !1059, discriminator: 1)
!6944 = !DILocation(line: 1519, column: 34, scope: !6943)
!6945 = !DILocation(line: 1519, column: 34, scope: !6946)
!6946 = !DILexicalBlockFile(scope: !6936, file: !1059, discriminator: 2)
!6947 = !DILocation(line: 1519, column: 34, scope: !6948)
!6948 = !DILexicalBlockFile(scope: !6936, file: !1059, discriminator: 3)
!6949 = !DILocation(line: 1519, column: 31, scope: !6948)
!6950 = !DILocation(line: 1519, column: 21, scope: !6948)
!6951 = !DILocation(line: 1520, column: 33, scope: !6897)
!6952 = !DILocation(line: 1520, column: 49, scope: !6897)
!6953 = !DILocation(line: 1520, column: 17, scope: !6897)
!6954 = !DILocation(line: 1520, column: 20, scope: !6897)
!6955 = !DILocation(line: 1520, column: 28, scope: !6897)
!6956 = !DILocation(line: 1520, column: 54, scope: !6897)
!6957 = !DILocation(line: 1520, column: 62, scope: !6897)
!6958 = !DILocation(line: 1524, column: 9, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !1058, file: !1059, line: 1524, column: 9)
!6960 = !DILocation(line: 1524, column: 13, scope: !6959)
!6961 = !DILocation(line: 1524, column: 16, scope: !6959)
!6962 = !DILocation(line: 1524, column: 9, scope: !1058)
!6963 = !DILocalVariable(name: "coeffs_y", scope: !6964, file: !1059, line: 1525, type: !1045)
!6964 = distinct !DILexicalBlock(scope: !6959, file: !1059, line: 1524, column: 26)
!6965 = !DILocation(line: 1525, column: 18, scope: !6964)
!6966 = !DILocation(line: 1525, column: 39, scope: !6964)
!6967 = !DILocation(line: 1525, column: 43, scope: !6964)
!6968 = !DILocation(line: 1525, column: 29, scope: !6964)
!6969 = !DILocation(line: 1527, column: 16, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6964, file: !1059, line: 1527, column: 9)
!6971 = !DILocation(line: 1527, column: 14, scope: !6970)
!6972 = !DILocation(line: 1527, column: 21, scope: !6973)
!6973 = !DILexicalBlockFile(scope: !6974, file: !1059, discriminator: 1)
!6974 = distinct !DILexicalBlock(scope: !6970, file: !1059, line: 1527, column: 9)
!6975 = !DILocation(line: 1527, column: 26, scope: !6973)
!6976 = !DILocation(line: 1527, column: 39, scope: !6973)
!6977 = !DILocation(line: 1527, column: 37, scope: !6973)
!6978 = !DILocation(line: 1527, column: 23, scope: !6973)
!6979 = !DILocation(line: 1527, column: 9, scope: !6973)
!6980 = !DILocation(line: 1528, column: 32, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6974, file: !1059, line: 1527, column: 57)
!6982 = !DILocation(line: 1528, column: 25, scope: !6981)
!6983 = !DILocation(line: 1528, column: 39, scope: !6981)
!6984 = !DILocation(line: 1528, column: 43, scope: !6981)
!6985 = !DILocation(line: 1528, column: 46, scope: !6981)
!6986 = !DILocation(line: 1528, column: 71, scope: !6981)
!6987 = !DILocation(line: 1528, column: 62, scope: !6981)
!6988 = !DILocation(line: 1528, column: 60, scope: !6981)
!6989 = !DILocation(line: 1528, column: 75, scope: !6981)
!6990 = !DILocation(line: 1528, column: 35, scope: !6981)
!6991 = !DILocation(line: 1528, column: 20, scope: !6981)
!6992 = !DILocation(line: 1528, column: 13, scope: !6981)
!6993 = !DILocation(line: 1528, column: 23, scope: !6981)
!6994 = !DILocation(line: 1529, column: 9, scope: !6981)
!6995 = !DILocation(line: 1527, column: 53, scope: !6996)
!6996 = !DILexicalBlockFile(scope: !6974, file: !1059, discriminator: 2)
!6997 = !DILocation(line: 1527, column: 9, scope: !6996)
!6998 = distinct !{!6998, !6999}
!6999 = !DILocation(line: 1527, column: 9, scope: !6964)
!7000 = !DILocation(line: 1530, column: 5, scope: !6964)
!7001 = !DILocation(line: 1531, column: 29, scope: !1058)
!7002 = !DILocation(line: 1531, column: 44, scope: !1058)
!7003 = !DILocation(line: 1531, column: 5, scope: !1058)
!7004 = !DILocation(line: 1531, column: 8, scope: !1058)
!7005 = !DILocation(line: 1531, column: 16, scope: !1058)
!7006 = !DILocation(line: 1531, column: 48, scope: !1058)
!7007 = !DILocation(line: 1531, column: 53, scope: !1058)
!7008 = !DILocation(line: 1531, column: 61, scope: !1058)
!7009 = !DILocation(line: 1532, column: 1, scope: !1058)
!7010 = distinct !DISubprogram(name: "hevc_transform_skip_flag_decode", scope: !1059, file: !1059, line: 881, type: !2751, isLocal: true, isDefinition: true, scopeLine: 882, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7011 = !DILocalVariable(name: "s", arg: 1, scope: !7010, file: !1059, line: 881, type: !1062)
!7012 = !DILocation(line: 881, column: 57, scope: !7010)
!7013 = !DILocalVariable(name: "c_idx", arg: 2, scope: !7010, file: !1059, line: 881, type: !1043)
!7014 = !DILocation(line: 881, column: 64, scope: !7010)
!7015 = !DILocation(line: 883, column: 23, scope: !7010)
!7016 = !DILocation(line: 883, column: 26, scope: !7010)
!7017 = !DILocation(line: 883, column: 34, scope: !7010)
!7018 = !DILocation(line: 883, column: 62, scope: !7010)
!7019 = !DILocation(line: 883, column: 99, scope: !7010)
!7020 = !DILocation(line: 883, column: 98, scope: !7010)
!7021 = !DILocation(line: 883, column: 97, scope: !7010)
!7022 = !DILocation(line: 883, column: 95, scope: !7010)
!7023 = !DILocation(line: 883, column: 39, scope: !7010)
!7024 = !DILocation(line: 883, column: 42, scope: !7010)
!7025 = !DILocation(line: 883, column: 50, scope: !7010)
!7026 = !DILocation(line: 883, column: 12, scope: !7010)
!7027 = !DILocation(line: 883, column: 5, scope: !7010)
!7028 = distinct !DISubprogram(name: "explicit_rdpcm_flag_decode", scope: !1059, file: !1059, line: 886, type: !2751, isLocal: true, isDefinition: true, scopeLine: 887, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7029 = !DILocalVariable(name: "s", arg: 1, scope: !7028, file: !1059, line: 886, type: !1062)
!7030 = !DILocation(line: 886, column: 52, scope: !7028)
!7031 = !DILocalVariable(name: "c_idx", arg: 2, scope: !7028, file: !1059, line: 886, type: !1043)
!7032 = !DILocation(line: 886, column: 59, scope: !7028)
!7033 = !DILocation(line: 888, column: 23, scope: !7028)
!7034 = !DILocation(line: 888, column: 26, scope: !7028)
!7035 = !DILocation(line: 888, column: 34, scope: !7028)
!7036 = !DILocation(line: 888, column: 62, scope: !7028)
!7037 = !DILocation(line: 888, column: 99, scope: !7028)
!7038 = !DILocation(line: 888, column: 98, scope: !7028)
!7039 = !DILocation(line: 888, column: 97, scope: !7028)
!7040 = !DILocation(line: 888, column: 95, scope: !7028)
!7041 = !DILocation(line: 888, column: 39, scope: !7028)
!7042 = !DILocation(line: 888, column: 42, scope: !7028)
!7043 = !DILocation(line: 888, column: 50, scope: !7028)
!7044 = !DILocation(line: 888, column: 12, scope: !7028)
!7045 = !DILocation(line: 888, column: 5, scope: !7028)
!7046 = distinct !DISubprogram(name: "explicit_rdpcm_dir_flag_decode", scope: !1059, file: !1059, line: 891, type: !2751, isLocal: true, isDefinition: true, scopeLine: 892, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7047 = !DILocalVariable(name: "s", arg: 1, scope: !7046, file: !1059, line: 891, type: !1062)
!7048 = !DILocation(line: 891, column: 56, scope: !7046)
!7049 = !DILocalVariable(name: "c_idx", arg: 2, scope: !7046, file: !1059, line: 891, type: !1043)
!7050 = !DILocation(line: 891, column: 63, scope: !7046)
!7051 = !DILocation(line: 893, column: 23, scope: !7046)
!7052 = !DILocation(line: 893, column: 26, scope: !7046)
!7053 = !DILocation(line: 893, column: 34, scope: !7046)
!7054 = !DILocation(line: 893, column: 62, scope: !7046)
!7055 = !DILocation(line: 893, column: 103, scope: !7046)
!7056 = !DILocation(line: 893, column: 102, scope: !7046)
!7057 = !DILocation(line: 893, column: 101, scope: !7046)
!7058 = !DILocation(line: 893, column: 99, scope: !7046)
!7059 = !DILocation(line: 893, column: 39, scope: !7046)
!7060 = !DILocation(line: 893, column: 42, scope: !7046)
!7061 = !DILocation(line: 893, column: 50, scope: !7046)
!7062 = !DILocation(line: 893, column: 12, scope: !7046)
!7063 = !DILocation(line: 893, column: 5, scope: !7046)
!7064 = distinct !DISubprogram(name: "ff_hevc_hls_mvd_coding", scope: !1059, file: !1059, line: 1534, type: !7065, isLocal: false, isDefinition: true, scopeLine: 1535, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7065 = !DISubroutineType(types: !7066)
!7066 = !{null, !1062, !1043, !1043, !1043}
!7067 = !DILocalVariable(name: "c", arg: 1, scope: !7068, file: !3188, line: 214, type: !3144)
!7068 = distinct !DISubprogram(name: "get_cabac_bypass_sign_x86", scope: !3188, file: !3188, line: 214, type: !7069, isLocal: true, isDefinition: true, scopeLine: 215, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7069 = !DISubroutineType(types: !7070)
!7070 = !{!1043, !3144, !1043}
!7071 = !DILocation(line: 214, column: 90, scope: !7068, inlinedAt: !7072)
!7072 = distinct !DILocation(line: 863, column: 12, scope: !7073, inlinedAt: !7074)
!7073 = distinct !DISubprogram(name: "mvd_sign_flag_decode", scope: !1059, file: !1059, line: 861, type: !2953, isLocal: true, isDefinition: true, scopeLine: 862, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7074 = distinct !DILocation(line: 1553, column: 28, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7064, file: !1059, line: 1551, column: 16)
!7076 = !DILocalVariable(name: "val", arg: 2, scope: !7068, file: !3188, line: 214, type: !1043)
!7077 = !DILocation(line: 214, column: 97, scope: !7068, inlinedAt: !7072)
!7078 = !DILocalVariable(name: "tmp", scope: !7068, file: !3188, line: 216, type: !3226)
!7079 = !DILocation(line: 216, column: 13, scope: !7068, inlinedAt: !7072)
!7080 = !DILocalVariable(name: "s", arg: 1, scope: !7073, file: !1059, line: 861, type: !1062)
!7081 = !DILocation(line: 861, column: 84, scope: !7073, inlinedAt: !7074)
!7082 = !DILocation(line: 214, column: 90, scope: !7068, inlinedAt: !7083)
!7083 = distinct !DILocation(line: 858, column: 12, scope: !7084, inlinedAt: !7085)
!7084 = distinct !DISubprogram(name: "mvd_decode", scope: !1059, file: !1059, line: 843, type: !2953, isLocal: true, isDefinition: true, scopeLine: 844, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7085 = distinct !DILocation(line: 1552, column: 28, scope: !7075)
!7086 = !DILocation(line: 214, column: 97, scope: !7068, inlinedAt: !7083)
!7087 = !DILocation(line: 216, column: 13, scope: !7068, inlinedAt: !7083)
!7088 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !7089)
!7089 = distinct !DILocation(line: 857, column: 16, scope: !7084, inlinedAt: !7085)
!7090 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !7089)
!7091 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !7089)
!7092 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !7093)
!7093 = distinct !DILocation(line: 848, column: 22, scope: !7094, inlinedAt: !7085)
!7094 = !DILexicalBlockFile(scope: !7084, file: !1059, discriminator: 2)
!7095 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !7093)
!7096 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !7093)
!7097 = !DILocalVariable(name: "s", arg: 1, scope: !7084, file: !1059, line: 843, type: !1062)
!7098 = !DILocation(line: 843, column: 74, scope: !7084, inlinedAt: !7085)
!7099 = !DILocalVariable(name: "ret", scope: !7084, file: !1059, line: 845, type: !1043)
!7100 = !DILocation(line: 845, column: 9, scope: !7084, inlinedAt: !7085)
!7101 = !DILocalVariable(name: "k", scope: !7084, file: !1059, line: 846, type: !1043)
!7102 = !DILocation(line: 846, column: 9, scope: !7084, inlinedAt: !7085)
!7103 = !DILocation(line: 214, column: 90, scope: !7068, inlinedAt: !7104)
!7104 = distinct !DILocation(line: 863, column: 12, scope: !7073, inlinedAt: !7105)
!7105 = distinct !DILocation(line: 1547, column: 28, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7064, file: !1059, line: 1545, column: 16)
!7107 = !DILocation(line: 214, column: 97, scope: !7068, inlinedAt: !7104)
!7108 = !DILocation(line: 216, column: 13, scope: !7068, inlinedAt: !7104)
!7109 = !DILocation(line: 861, column: 84, scope: !7073, inlinedAt: !7105)
!7110 = !DILocation(line: 214, column: 90, scope: !7068, inlinedAt: !7111)
!7111 = distinct !DILocation(line: 858, column: 12, scope: !7084, inlinedAt: !7112)
!7112 = distinct !DILocation(line: 1546, column: 28, scope: !7106)
!7113 = !DILocation(line: 214, column: 97, scope: !7068, inlinedAt: !7111)
!7114 = !DILocation(line: 216, column: 13, scope: !7068, inlinedAt: !7111)
!7115 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !7116)
!7116 = distinct !DILocation(line: 857, column: 16, scope: !7084, inlinedAt: !7112)
!7117 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !7116)
!7118 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !7116)
!7119 = !DILocation(line: 260, column: 85, scope: !3221, inlinedAt: !7120)
!7120 = distinct !DILocation(line: 848, column: 22, scope: !7094, inlinedAt: !7112)
!7121 = !DILocation(line: 262, column: 13, scope: !3221, inlinedAt: !7120)
!7122 = !DILocation(line: 263, column: 9, scope: !3221, inlinedAt: !7120)
!7123 = !DILocation(line: 843, column: 74, scope: !7084, inlinedAt: !7112)
!7124 = !DILocation(line: 845, column: 9, scope: !7084, inlinedAt: !7112)
!7125 = !DILocation(line: 846, column: 9, scope: !7084, inlinedAt: !7112)
!7126 = !DILocalVariable(name: "s", arg: 1, scope: !7127, file: !1059, line: 838, type: !1062)
!7127 = distinct !DISubprogram(name: "abs_mvd_greater1_flag_decode", scope: !1059, file: !1059, line: 838, type: !2953, isLocal: true, isDefinition: true, scopeLine: 839, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7128 = !DILocation(line: 838, column: 92, scope: !7127, inlinedAt: !7129)
!7129 = distinct !DILocation(line: 1543, column: 14, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7064, file: !1059, line: 1542, column: 9)
!7131 = !DILocation(line: 838, column: 92, scope: !7127, inlinedAt: !7132)
!7132 = distinct !DILocation(line: 1541, column: 14, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7064, file: !1059, line: 1540, column: 9)
!7134 = !DILocalVariable(name: "s", arg: 1, scope: !7135, file: !1059, line: 833, type: !1062)
!7135 = distinct !DISubprogram(name: "abs_mvd_greater0_flag_decode", scope: !1059, file: !1059, line: 833, type: !2953, isLocal: true, isDefinition: true, scopeLine: 834, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7136 = !DILocation(line: 833, column: 92, scope: !7135, inlinedAt: !7137)
!7137 = distinct !DILocation(line: 1538, column: 13, scope: !7064)
!7138 = !DILocation(line: 833, column: 92, scope: !7135, inlinedAt: !7139)
!7139 = distinct !DILocation(line: 1537, column: 13, scope: !7064)
!7140 = !DILocalVariable(name: "s", arg: 1, scope: !7064, file: !1059, line: 1534, type: !1062)
!7141 = !DILocation(line: 1534, column: 42, scope: !7064)
!7142 = !DILocalVariable(name: "x0", arg: 2, scope: !7064, file: !1059, line: 1534, type: !1043)
!7143 = !DILocation(line: 1534, column: 49, scope: !7064)
!7144 = !DILocalVariable(name: "y0", arg: 3, scope: !7064, file: !1059, line: 1534, type: !1043)
!7145 = !DILocation(line: 1534, column: 57, scope: !7064)
!7146 = !DILocalVariable(name: "log2_cb_size", arg: 4, scope: !7064, file: !1059, line: 1534, type: !1043)
!7147 = !DILocation(line: 1534, column: 65, scope: !7064)
!7148 = !DILocalVariable(name: "lc", scope: !7064, file: !1059, line: 1536, type: !1797)
!7149 = !DILocation(line: 1536, column: 23, scope: !7064)
!7150 = !DILocation(line: 1536, column: 28, scope: !7064)
!7151 = !DILocation(line: 1536, column: 31, scope: !7064)
!7152 = !DILocalVariable(name: "x", scope: !7064, file: !1059, line: 1537, type: !1043)
!7153 = !DILocation(line: 1537, column: 9, scope: !7064)
!7154 = !DILocation(line: 1537, column: 42, scope: !7064)
!7155 = !DILocation(line: 1537, column: 13, scope: !7064)
!7156 = !DILocation(line: 835, column: 23, scope: !7135, inlinedAt: !7139)
!7157 = !DILocation(line: 835, column: 26, scope: !7135, inlinedAt: !7139)
!7158 = !DILocation(line: 835, column: 34, scope: !7135, inlinedAt: !7139)
!7159 = !DILocation(line: 835, column: 39, scope: !7135, inlinedAt: !7139)
!7160 = !DILocation(line: 835, column: 42, scope: !7135, inlinedAt: !7139)
!7161 = !DILocation(line: 835, column: 50, scope: !7135, inlinedAt: !7139)
!7162 = !DILocation(line: 835, column: 12, scope: !7135, inlinedAt: !7139)
!7163 = !DILocalVariable(name: "y", scope: !7064, file: !1059, line: 1538, type: !1043)
!7164 = !DILocation(line: 1538, column: 9, scope: !7064)
!7165 = !DILocation(line: 1538, column: 42, scope: !7064)
!7166 = !DILocation(line: 1538, column: 13, scope: !7064)
!7167 = !DILocation(line: 835, column: 23, scope: !7135, inlinedAt: !7137)
!7168 = !DILocation(line: 835, column: 26, scope: !7135, inlinedAt: !7137)
!7169 = !DILocation(line: 835, column: 34, scope: !7135, inlinedAt: !7137)
!7170 = !DILocation(line: 835, column: 39, scope: !7135, inlinedAt: !7137)
!7171 = !DILocation(line: 835, column: 42, scope: !7135, inlinedAt: !7137)
!7172 = !DILocation(line: 835, column: 50, scope: !7135, inlinedAt: !7137)
!7173 = !DILocation(line: 835, column: 12, scope: !7135, inlinedAt: !7137)
!7174 = !DILocation(line: 1540, column: 9, scope: !7133)
!7175 = !DILocation(line: 1540, column: 9, scope: !7064)
!7176 = !DILocation(line: 1541, column: 43, scope: !7133)
!7177 = !DILocation(line: 1541, column: 14, scope: !7133)
!7178 = !DILocation(line: 840, column: 23, scope: !7127, inlinedAt: !7132)
!7179 = !DILocation(line: 840, column: 26, scope: !7127, inlinedAt: !7132)
!7180 = !DILocation(line: 840, column: 34, scope: !7127, inlinedAt: !7132)
!7181 = !DILocation(line: 840, column: 39, scope: !7127, inlinedAt: !7132)
!7182 = !DILocation(line: 840, column: 42, scope: !7127, inlinedAt: !7132)
!7183 = !DILocation(line: 840, column: 50, scope: !7127, inlinedAt: !7132)
!7184 = !DILocation(line: 840, column: 12, scope: !7127, inlinedAt: !7132)
!7185 = !DILocation(line: 1541, column: 11, scope: !7133)
!7186 = !DILocation(line: 1541, column: 9, scope: !7133)
!7187 = !DILocation(line: 1542, column: 9, scope: !7130)
!7188 = !DILocation(line: 1542, column: 9, scope: !7064)
!7189 = !DILocation(line: 1543, column: 43, scope: !7130)
!7190 = !DILocation(line: 1543, column: 14, scope: !7130)
!7191 = !DILocation(line: 840, column: 23, scope: !7127, inlinedAt: !7129)
!7192 = !DILocation(line: 840, column: 26, scope: !7127, inlinedAt: !7129)
!7193 = !DILocation(line: 840, column: 34, scope: !7127, inlinedAt: !7129)
!7194 = !DILocation(line: 840, column: 39, scope: !7127, inlinedAt: !7129)
!7195 = !DILocation(line: 840, column: 42, scope: !7127, inlinedAt: !7129)
!7196 = !DILocation(line: 840, column: 50, scope: !7127, inlinedAt: !7129)
!7197 = !DILocation(line: 840, column: 12, scope: !7127, inlinedAt: !7129)
!7198 = !DILocation(line: 1543, column: 11, scope: !7130)
!7199 = !DILocation(line: 1543, column: 9, scope: !7130)
!7200 = !DILocation(line: 1545, column: 13, scope: !7064)
!7201 = !DILocation(line: 1545, column: 5, scope: !7064)
!7202 = !DILocation(line: 1546, column: 39, scope: !7106)
!7203 = !DILocation(line: 1546, column: 28, scope: !7106)
!7204 = !DILocation(line: 848, column: 5, scope: !7084, inlinedAt: !7112)
!7205 = !DILocation(line: 848, column: 12, scope: !7206, inlinedAt: !7112)
!7206 = !DILexicalBlockFile(scope: !7084, file: !1059, discriminator: 1)
!7207 = !DILocation(line: 848, column: 14, scope: !7206, inlinedAt: !7112)
!7208 = !DILocation(line: 848, column: 19, scope: !7206, inlinedAt: !7112)
!7209 = !DILocation(line: 848, column: 44, scope: !7094, inlinedAt: !7112)
!7210 = !DILocation(line: 848, column: 47, scope: !7094, inlinedAt: !7112)
!7211 = !DILocation(line: 848, column: 55, scope: !7094, inlinedAt: !7112)
!7212 = !DILocation(line: 848, column: 22, scope: !7094, inlinedAt: !7112)
!7213 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !7120)
!7214 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !7120)
!7215 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !7120)
!7216 = !DILocation(line: 848, column: 19, scope: !7094, inlinedAt: !7112)
!7217 = !DILocation(line: 848, column: 5, scope: !7218, inlinedAt: !7112)
!7218 = !DILexicalBlockFile(scope: !7084, file: !1059, discriminator: 3)
!7219 = !DILocation(line: 849, column: 22, scope: !7220, inlinedAt: !7112)
!7220 = distinct !DILexicalBlock(scope: !7084, file: !1059, line: 848, column: 60)
!7221 = !DILocation(line: 849, column: 19, scope: !7220, inlinedAt: !7112)
!7222 = !DILocation(line: 849, column: 13, scope: !7220, inlinedAt: !7112)
!7223 = !DILocation(line: 850, column: 10, scope: !7220, inlinedAt: !7112)
!7224 = !DILocation(line: 848, column: 5, scope: !7225, inlinedAt: !7112)
!7225 = !DILexicalBlockFile(scope: !7084, file: !1059, discriminator: 4)
!7226 = distinct !{!7226, !7227}
!7227 = !DILocation(line: 848, column: 5, scope: !7084)
!7228 = !DILocation(line: 852, column: 9, scope: !7229, inlinedAt: !7112)
!7229 = distinct !DILexicalBlock(scope: !7084, file: !1059, line: 852, column: 9)
!7230 = !DILocation(line: 852, column: 11, scope: !7229, inlinedAt: !7112)
!7231 = !DILocation(line: 852, column: 9, scope: !7084, inlinedAt: !7112)
!7232 = !DILocation(line: 853, column: 16, scope: !7233, inlinedAt: !7112)
!7233 = distinct !DILexicalBlock(scope: !7229, file: !1059, line: 852, column: 18)
!7234 = !DILocation(line: 853, column: 19, scope: !7233, inlinedAt: !7112)
!7235 = !DILocation(line: 853, column: 54, scope: !7233, inlinedAt: !7112)
!7236 = !DILocation(line: 853, column: 9, scope: !7233, inlinedAt: !7112)
!7237 = !DILocation(line: 854, column: 9, scope: !7233, inlinedAt: !7112)
!7238 = !DILocation(line: 856, column: 5, scope: !7084, inlinedAt: !7112)
!7239 = !DILocation(line: 856, column: 13, scope: !7206, inlinedAt: !7112)
!7240 = !DILocation(line: 856, column: 5, scope: !7206, inlinedAt: !7112)
!7241 = !DILocation(line: 857, column: 38, scope: !7084, inlinedAt: !7112)
!7242 = !DILocation(line: 857, column: 41, scope: !7084, inlinedAt: !7112)
!7243 = !DILocation(line: 857, column: 49, scope: !7084, inlinedAt: !7112)
!7244 = !DILocation(line: 857, column: 16, scope: !7084, inlinedAt: !7112)
!7245 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !7116)
!7246 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !7116)
!7247 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !7116)
!7248 = !DILocation(line: 857, column: 56, scope: !7084, inlinedAt: !7112)
!7249 = !DILocation(line: 857, column: 53, scope: !7084, inlinedAt: !7112)
!7250 = !DILocation(line: 857, column: 13, scope: !7084, inlinedAt: !7112)
!7251 = !DILocation(line: 856, column: 5, scope: !7094, inlinedAt: !7112)
!7252 = distinct !{!7252, !7253}
!7253 = !DILocation(line: 856, column: 5, scope: !7084)
!7254 = !DILocation(line: 858, column: 39, scope: !7084, inlinedAt: !7112)
!7255 = !DILocation(line: 858, column: 42, scope: !7084, inlinedAt: !7112)
!7256 = !DILocation(line: 858, column: 50, scope: !7084, inlinedAt: !7112)
!7257 = !DILocation(line: 858, column: 55, scope: !7084, inlinedAt: !7112)
!7258 = !DILocation(line: 858, column: 54, scope: !7084, inlinedAt: !7112)
!7259 = !DILocation(line: 858, column: 12, scope: !7084, inlinedAt: !7112)
!7260 = !DILocation(line: 217, column: 5, scope: !7068, inlinedAt: !7111)
!7261 = !DILocation(line: 249, column: 15, scope: !7068, inlinedAt: !7111)
!7262 = !{i32 121016, i32 121050, i32 121096, i32 121142, i32 121188, i32 121234, i32 121280, i32 121326, i32 121372, i32 121418, i32 121464, i32 121510, i32 121556, i32 121602, i32 121648, i32 121694, i32 121740, i32 121786, i32 121837, i32 121883, i32 121929, i32 121969, i32 122016, i32 122062}
!7263 = !DILocation(line: 256, column: 12, scope: !7068, inlinedAt: !7111)
!7264 = !DILocation(line: 858, column: 5, scope: !7084, inlinedAt: !7112)
!7265 = !DILocation(line: 859, column: 1, scope: !7084, inlinedAt: !7112)
!7266 = !DILocation(line: 1546, column: 13, scope: !7106)
!7267 = !DILocation(line: 1546, column: 17, scope: !7106)
!7268 = !DILocation(line: 1546, column: 20, scope: !7106)
!7269 = !DILocation(line: 1546, column: 24, scope: !7106)
!7270 = !DILocation(line: 1546, column: 26, scope: !7106)
!7271 = !DILocation(line: 1546, column: 43, scope: !7106)
!7272 = !DILocation(line: 1547, column: 49, scope: !7106)
!7273 = !DILocation(line: 1547, column: 28, scope: !7106)
!7274 = !DILocation(line: 863, column: 39, scope: !7073, inlinedAt: !7105)
!7275 = !DILocation(line: 863, column: 42, scope: !7073, inlinedAt: !7105)
!7276 = !DILocation(line: 863, column: 50, scope: !7073, inlinedAt: !7105)
!7277 = !DILocation(line: 863, column: 12, scope: !7073, inlinedAt: !7105)
!7278 = !DILocation(line: 217, column: 5, scope: !7068, inlinedAt: !7104)
!7279 = !DILocation(line: 249, column: 15, scope: !7068, inlinedAt: !7104)
!7280 = !DILocation(line: 256, column: 12, scope: !7068, inlinedAt: !7104)
!7281 = !DILocation(line: 1547, column: 13, scope: !7106)
!7282 = !DILocation(line: 1547, column: 17, scope: !7106)
!7283 = !DILocation(line: 1547, column: 20, scope: !7106)
!7284 = !DILocation(line: 1547, column: 24, scope: !7106)
!7285 = !DILocation(line: 1547, column: 26, scope: !7106)
!7286 = !DILocation(line: 1547, column: 53, scope: !7106)
!7287 = !DILocation(line: 1548, column: 13, scope: !7106)
!7288 = !DILocation(line: 1548, column: 17, scope: !7106)
!7289 = !DILocation(line: 1548, column: 20, scope: !7106)
!7290 = !DILocation(line: 1548, column: 24, scope: !7106)
!7291 = !DILocation(line: 1548, column: 26, scope: !7106)
!7292 = !DILocation(line: 1548, column: 31, scope: !7106)
!7293 = !DILocation(line: 1551, column: 13, scope: !7064)
!7294 = !DILocation(line: 1551, column: 5, scope: !7064)
!7295 = !DILocation(line: 1552, column: 39, scope: !7075)
!7296 = !DILocation(line: 1552, column: 28, scope: !7075)
!7297 = !DILocation(line: 848, column: 5, scope: !7084, inlinedAt: !7085)
!7298 = !DILocation(line: 848, column: 12, scope: !7206, inlinedAt: !7085)
!7299 = !DILocation(line: 848, column: 14, scope: !7206, inlinedAt: !7085)
!7300 = !DILocation(line: 848, column: 19, scope: !7206, inlinedAt: !7085)
!7301 = !DILocation(line: 848, column: 44, scope: !7094, inlinedAt: !7085)
!7302 = !DILocation(line: 848, column: 47, scope: !7094, inlinedAt: !7085)
!7303 = !DILocation(line: 848, column: 55, scope: !7094, inlinedAt: !7085)
!7304 = !DILocation(line: 848, column: 22, scope: !7094, inlinedAt: !7085)
!7305 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !7093)
!7306 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !7093)
!7307 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !7093)
!7308 = !DILocation(line: 848, column: 19, scope: !7094, inlinedAt: !7085)
!7309 = !DILocation(line: 848, column: 5, scope: !7218, inlinedAt: !7085)
!7310 = !DILocation(line: 849, column: 22, scope: !7220, inlinedAt: !7085)
!7311 = !DILocation(line: 849, column: 19, scope: !7220, inlinedAt: !7085)
!7312 = !DILocation(line: 849, column: 13, scope: !7220, inlinedAt: !7085)
!7313 = !DILocation(line: 850, column: 10, scope: !7220, inlinedAt: !7085)
!7314 = !DILocation(line: 848, column: 5, scope: !7225, inlinedAt: !7085)
!7315 = !DILocation(line: 852, column: 9, scope: !7229, inlinedAt: !7085)
!7316 = !DILocation(line: 852, column: 11, scope: !7229, inlinedAt: !7085)
!7317 = !DILocation(line: 852, column: 9, scope: !7084, inlinedAt: !7085)
!7318 = !DILocation(line: 853, column: 16, scope: !7233, inlinedAt: !7085)
!7319 = !DILocation(line: 853, column: 19, scope: !7233, inlinedAt: !7085)
!7320 = !DILocation(line: 853, column: 54, scope: !7233, inlinedAt: !7085)
!7321 = !DILocation(line: 853, column: 9, scope: !7233, inlinedAt: !7085)
!7322 = !DILocation(line: 854, column: 9, scope: !7233, inlinedAt: !7085)
!7323 = !DILocation(line: 856, column: 5, scope: !7084, inlinedAt: !7085)
!7324 = !DILocation(line: 856, column: 13, scope: !7206, inlinedAt: !7085)
!7325 = !DILocation(line: 856, column: 5, scope: !7206, inlinedAt: !7085)
!7326 = !DILocation(line: 857, column: 38, scope: !7084, inlinedAt: !7085)
!7327 = !DILocation(line: 857, column: 41, scope: !7084, inlinedAt: !7085)
!7328 = !DILocation(line: 857, column: 49, scope: !7084, inlinedAt: !7085)
!7329 = !DILocation(line: 857, column: 16, scope: !7084, inlinedAt: !7085)
!7330 = !DILocation(line: 289, column: 15, scope: !3221, inlinedAt: !7089)
!7331 = !DILocation(line: 264, column: 5, scope: !3221, inlinedAt: !7089)
!7332 = !DILocation(line: 296, column: 12, scope: !3221, inlinedAt: !7089)
!7333 = !DILocation(line: 857, column: 56, scope: !7084, inlinedAt: !7085)
!7334 = !DILocation(line: 857, column: 53, scope: !7084, inlinedAt: !7085)
!7335 = !DILocation(line: 857, column: 13, scope: !7084, inlinedAt: !7085)
!7336 = !DILocation(line: 856, column: 5, scope: !7094, inlinedAt: !7085)
!7337 = !DILocation(line: 858, column: 39, scope: !7084, inlinedAt: !7085)
!7338 = !DILocation(line: 858, column: 42, scope: !7084, inlinedAt: !7085)
!7339 = !DILocation(line: 858, column: 50, scope: !7084, inlinedAt: !7085)
!7340 = !DILocation(line: 858, column: 55, scope: !7084, inlinedAt: !7085)
!7341 = !DILocation(line: 858, column: 54, scope: !7084, inlinedAt: !7085)
!7342 = !DILocation(line: 858, column: 12, scope: !7084, inlinedAt: !7085)
!7343 = !DILocation(line: 217, column: 5, scope: !7068, inlinedAt: !7083)
!7344 = !DILocation(line: 249, column: 15, scope: !7068, inlinedAt: !7083)
!7345 = !DILocation(line: 256, column: 12, scope: !7068, inlinedAt: !7083)
!7346 = !DILocation(line: 858, column: 5, scope: !7084, inlinedAt: !7085)
!7347 = !DILocation(line: 859, column: 1, scope: !7084, inlinedAt: !7085)
!7348 = !DILocation(line: 1552, column: 13, scope: !7075)
!7349 = !DILocation(line: 1552, column: 17, scope: !7075)
!7350 = !DILocation(line: 1552, column: 20, scope: !7075)
!7351 = !DILocation(line: 1552, column: 24, scope: !7075)
!7352 = !DILocation(line: 1552, column: 26, scope: !7075)
!7353 = !DILocation(line: 1552, column: 43, scope: !7075)
!7354 = !DILocation(line: 1553, column: 49, scope: !7075)
!7355 = !DILocation(line: 1553, column: 28, scope: !7075)
!7356 = !DILocation(line: 863, column: 39, scope: !7073, inlinedAt: !7074)
!7357 = !DILocation(line: 863, column: 42, scope: !7073, inlinedAt: !7074)
!7358 = !DILocation(line: 863, column: 50, scope: !7073, inlinedAt: !7074)
!7359 = !DILocation(line: 863, column: 12, scope: !7073, inlinedAt: !7074)
!7360 = !DILocation(line: 217, column: 5, scope: !7068, inlinedAt: !7072)
!7361 = !DILocation(line: 249, column: 15, scope: !7068, inlinedAt: !7072)
!7362 = !DILocation(line: 256, column: 12, scope: !7068, inlinedAt: !7072)
!7363 = !DILocation(line: 1553, column: 13, scope: !7075)
!7364 = !DILocation(line: 1553, column: 17, scope: !7075)
!7365 = !DILocation(line: 1553, column: 20, scope: !7075)
!7366 = !DILocation(line: 1553, column: 24, scope: !7075)
!7367 = !DILocation(line: 1553, column: 26, scope: !7075)
!7368 = !DILocation(line: 1553, column: 53, scope: !7075)
!7369 = !DILocation(line: 1554, column: 13, scope: !7075)
!7370 = !DILocation(line: 1554, column: 17, scope: !7075)
!7371 = !DILocation(line: 1554, column: 20, scope: !7075)
!7372 = !DILocation(line: 1554, column: 24, scope: !7075)
!7373 = !DILocation(line: 1554, column: 26, scope: !7075)
!7374 = !DILocation(line: 1554, column: 31, scope: !7075)
!7375 = !DILocation(line: 1556, column: 1, scope: !7064)
!7376 = distinct !DISubprogram(name: "skip_bits", scope: !1810, file: !1810, line: 460, type: !7377, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7377 = !DISubroutineType(types: !7378)
!7378 = !{null, !2958, !1043}
!7379 = !DILocalVariable(name: "s", arg: 1, scope: !7376, file: !1810, line: 460, type: !2958)
!7380 = !DILocation(line: 460, column: 45, scope: !7376)
!7381 = !DILocalVariable(name: "n", arg: 2, scope: !7376, file: !1810, line: 460, type: !1043)
!7382 = !DILocation(line: 460, column: 52, scope: !7376)
!7383 = !DILocalVariable(name: "re_index", scope: !7376, file: !1810, line: 481, type: !1044)
!7384 = !DILocation(line: 481, column: 18, scope: !7376)
!7385 = !DILocation(line: 481, column: 30, scope: !7376)
!7386 = !DILocation(line: 481, column: 34, scope: !7376)
!7387 = !DILocalVariable(name: "re_cache", scope: !7376, file: !1810, line: 481, type: !1044)
!7388 = !DILocation(line: 481, column: 78, scope: !7376)
!7389 = !DILocalVariable(name: "re_size_plus8", scope: !7376, file: !1810, line: 481, type: !1044)
!7390 = !DILocation(line: 481, column: 101, scope: !7376)
!7391 = !DILocation(line: 481, column: 118, scope: !7376)
!7392 = !DILocation(line: 481, column: 122, scope: !7376)
!7393 = !DILocation(line: 482, column: 18, scope: !7376)
!7394 = !DILocation(line: 482, column: 36, scope: !7376)
!7395 = !DILocation(line: 482, column: 48, scope: !7376)
!7396 = !DILocation(line: 482, column: 45, scope: !7376)
!7397 = !DILocation(line: 482, column: 33, scope: !7376)
!7398 = !DILocation(line: 482, column: 17, scope: !7376)
!7399 = !DILocation(line: 482, column: 55, scope: !7400)
!7400 = !DILexicalBlockFile(scope: !7376, file: !1810, discriminator: 1)
!7401 = !DILocation(line: 482, column: 67, scope: !7400)
!7402 = !DILocation(line: 482, column: 64, scope: !7400)
!7403 = !DILocation(line: 482, column: 17, scope: !7400)
!7404 = !DILocation(line: 482, column: 74, scope: !7405)
!7405 = !DILexicalBlockFile(scope: !7376, file: !1810, discriminator: 2)
!7406 = !DILocation(line: 482, column: 17, scope: !7405)
!7407 = !DILocation(line: 482, column: 17, scope: !7408)
!7408 = !DILexicalBlockFile(scope: !7376, file: !1810, discriminator: 3)
!7409 = !DILocation(line: 482, column: 14, scope: !7408)
!7410 = !DILocation(line: 483, column: 18, scope: !7376)
!7411 = !DILocation(line: 483, column: 6, scope: !7376)
!7412 = !DILocation(line: 483, column: 10, scope: !7376)
!7413 = !DILocation(line: 483, column: 16, scope: !7376)
!7414 = !DILocation(line: 485, column: 1, scope: !7376)
!7415 = distinct !DISubprogram(name: "align_get_bits", scope: !1810, file: !1810, line: 658, type: !7416, isLocal: true, isDefinition: true, scopeLine: 659, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7416 = !DISubroutineType(types: !7417)
!7417 = !{!1183, !2958}
!7418 = !DILocalVariable(name: "s", arg: 1, scope: !7415, file: !1810, line: 658, type: !2958)
!7419 = !DILocation(line: 658, column: 60, scope: !7415)
!7420 = !DILocalVariable(name: "n", scope: !7415, file: !1810, line: 660, type: !1043)
!7421 = !DILocation(line: 660, column: 9, scope: !7415)
!7422 = !DILocation(line: 660, column: 29, scope: !7415)
!7423 = !DILocation(line: 660, column: 14, scope: !7415)
!7424 = !DILocation(line: 660, column: 13, scope: !7415)
!7425 = !DILocation(line: 660, column: 32, scope: !7415)
!7426 = !DILocation(line: 661, column: 9, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7415, file: !1810, line: 661, column: 9)
!7428 = !DILocation(line: 661, column: 9, scope: !7415)
!7429 = !DILocation(line: 662, column: 19, scope: !7427)
!7430 = !DILocation(line: 662, column: 22, scope: !7427)
!7431 = !DILocation(line: 662, column: 9, scope: !7427)
!7432 = !DILocation(line: 663, column: 12, scope: !7415)
!7433 = !DILocation(line: 663, column: 15, scope: !7415)
!7434 = !DILocation(line: 663, column: 25, scope: !7415)
!7435 = !DILocation(line: 663, column: 28, scope: !7415)
!7436 = !DILocation(line: 663, column: 34, scope: !7415)
!7437 = !DILocation(line: 663, column: 22, scope: !7415)
!7438 = !DILocation(line: 663, column: 5, scope: !7415)
!7439 = distinct !DISubprogram(name: "get_bits_count", scope: !1810, file: !1810, line: 219, type: !7440, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7440 = !DISubroutineType(types: !7441)
!7441 = !{!1043, !7442}
!7442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7443, size: 64, align: 64)
!7443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1809)
!7444 = !DILocalVariable(name: "s", arg: 1, scope: !7439, file: !1810, line: 219, type: !7442)
!7445 = !DILocation(line: 219, column: 55, scope: !7439)
!7446 = !DILocation(line: 224, column: 12, scope: !7439)
!7447 = !DILocation(line: 224, column: 15, scope: !7439)
!7448 = !DILocation(line: 224, column: 5, scope: !7439)
!7449 = distinct !DISubprogram(name: "get_bits_left", scope: !1810, file: !1810, line: 814, type: !7450, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7450 = !DISubroutineType(types: !7451)
!7451 = !{!1043, !2958}
!7452 = !DILocalVariable(name: "gb", arg: 1, scope: !7449, file: !1810, line: 814, type: !2958)
!7453 = !DILocation(line: 814, column: 48, scope: !7449)
!7454 = !DILocation(line: 816, column: 12, scope: !7449)
!7455 = !DILocation(line: 816, column: 16, scope: !7449)
!7456 = !DILocation(line: 816, column: 46, scope: !7449)
!7457 = !DILocation(line: 816, column: 31, scope: !7449)
!7458 = !DILocation(line: 816, column: 29, scope: !7449)
!7459 = !DILocation(line: 816, column: 5, scope: !7449)
!7460 = distinct !DISubprogram(name: "skip_bytes", scope: !3141, file: !3141, line: 197, type: !7461, isLocal: true, isDefinition: true, scopeLine: 197, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7461 = !DISubroutineType(types: !7462)
!7462 = !{!1183, !3144, !1043}
!7463 = !DILocalVariable(name: "c", arg: 1, scope: !7460, file: !3141, line: 197, type: !3144)
!7464 = !DILocation(line: 197, column: 72, scope: !7460)
!7465 = !DILocalVariable(name: "n", arg: 2, scope: !7460, file: !3141, line: 197, type: !1043)
!7466 = !DILocation(line: 197, column: 79, scope: !7460)
!7467 = !DILocalVariable(name: "ptr", scope: !7460, file: !3141, line: 198, type: !1183)
!7468 = !DILocation(line: 198, column: 20, scope: !7460)
!7469 = !DILocation(line: 198, column: 26, scope: !7460)
!7470 = !DILocation(line: 198, column: 29, scope: !7460)
!7471 = !DILocation(line: 200, column: 9, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7460, file: !3141, line: 200, column: 9)
!7473 = !DILocation(line: 200, column: 12, scope: !7472)
!7474 = !DILocation(line: 200, column: 16, scope: !7472)
!7475 = !DILocation(line: 200, column: 9, scope: !7460)
!7476 = !DILocation(line: 201, column: 12, scope: !7472)
!7477 = !DILocation(line: 201, column: 9, scope: !7472)
!7478 = !DILocation(line: 203, column: 9, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7460, file: !3141, line: 203, column: 9)
!7480 = !DILocation(line: 203, column: 12, scope: !7479)
!7481 = !DILocation(line: 203, column: 16, scope: !7479)
!7482 = !DILocation(line: 203, column: 9, scope: !7460)
!7483 = !DILocation(line: 204, column: 12, scope: !7479)
!7484 = !DILocation(line: 204, column: 9, scope: !7479)
!7485 = !DILocation(line: 206, column: 16, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7460, file: !3141, line: 206, column: 9)
!7487 = !DILocation(line: 206, column: 19, scope: !7486)
!7488 = !DILocation(line: 206, column: 36, scope: !7486)
!7489 = !DILocation(line: 206, column: 34, scope: !7486)
!7490 = !DILocation(line: 206, column: 9, scope: !7486)
!7491 = !DILocation(line: 206, column: 43, scope: !7486)
!7492 = !DILocation(line: 206, column: 41, scope: !7486)
!7493 = !DILocation(line: 206, column: 9, scope: !7460)
!7494 = !DILocation(line: 207, column: 9, scope: !7486)
!7495 = !DILocation(line: 208, column: 31, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7460, file: !3141, line: 208, column: 9)
!7497 = !DILocation(line: 208, column: 34, scope: !7496)
!7498 = !DILocation(line: 208, column: 40, scope: !7496)
!7499 = !DILocation(line: 208, column: 38, scope: !7496)
!7500 = !DILocation(line: 208, column: 43, scope: !7496)
!7501 = !DILocation(line: 208, column: 46, scope: !7496)
!7502 = !DILocation(line: 208, column: 63, scope: !7496)
!7503 = !DILocation(line: 208, column: 61, scope: !7496)
!7504 = !DILocation(line: 208, column: 69, scope: !7496)
!7505 = !DILocation(line: 208, column: 67, scope: !7496)
!7506 = !DILocation(line: 208, column: 9, scope: !7496)
!7507 = !DILocation(line: 208, column: 72, scope: !7496)
!7508 = !DILocation(line: 208, column: 9, scope: !7460)
!7509 = !DILocation(line: 209, column: 9, scope: !7496)
!7510 = !DILocation(line: 211, column: 12, scope: !7460)
!7511 = !DILocation(line: 211, column: 5, scope: !7460)
!7512 = !DILocation(line: 212, column: 1, scope: !7460)
!7513 = distinct !DISubprogram(name: "renorm_cabac_decoder_once", scope: !3141, file: !3141, line: 73, type: !7514, isLocal: true, isDefinition: true, scopeLine: 73, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7514 = !DISubroutineType(types: !7515)
!7515 = !{null, !3144}
!7516 = !DILocalVariable(name: "c", arg: 1, scope: !7513, file: !3141, line: 73, type: !3144)
!7517 = !DILocation(line: 73, column: 60, scope: !7513)
!7518 = !DILocalVariable(name: "shift", scope: !7513, file: !3141, line: 74, type: !1043)
!7519 = !DILocation(line: 74, column: 9, scope: !7513)
!7520 = !DILocation(line: 74, column: 27, scope: !7513)
!7521 = !DILocation(line: 74, column: 30, scope: !7513)
!7522 = !DILocation(line: 74, column: 36, scope: !7513)
!7523 = !DILocation(line: 74, column: 44, scope: !7513)
!7524 = !DILocation(line: 75, column: 17, scope: !7513)
!7525 = !DILocation(line: 75, column: 5, scope: !7513)
!7526 = !DILocation(line: 75, column: 8, scope: !7513)
!7527 = !DILocation(line: 75, column: 13, scope: !7513)
!7528 = !DILocation(line: 76, column: 16, scope: !7513)
!7529 = !DILocation(line: 76, column: 5, scope: !7513)
!7530 = !DILocation(line: 76, column: 8, scope: !7513)
!7531 = !DILocation(line: 76, column: 12, scope: !7513)
!7532 = !DILocation(line: 77, column: 10, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7513, file: !3141, line: 77, column: 8)
!7534 = !DILocation(line: 77, column: 13, scope: !7533)
!7535 = !DILocation(line: 77, column: 17, scope: !7533)
!7536 = !DILocation(line: 77, column: 8, scope: !7513)
!7537 = !DILocation(line: 78, column: 16, scope: !7533)
!7538 = !DILocation(line: 78, column: 9, scope: !7533)
!7539 = !DILocation(line: 79, column: 1, scope: !7513)
!7540 = distinct !DISubprogram(name: "refill", scope: !3141, file: !3141, line: 58, type: !7514, isLocal: true, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2657)
!7541 = !DILocalVariable(name: "c", arg: 1, scope: !7540, file: !3141, line: 58, type: !3144)
!7542 = !DILocation(line: 58, column: 34, scope: !7540)
!7543 = !DILocation(line: 60, column: 19, scope: !7540)
!7544 = !DILocation(line: 60, column: 22, scope: !7540)
!7545 = !DILocation(line: 60, column: 35, scope: !7540)
!7546 = !DILocation(line: 60, column: 43, scope: !7540)
!7547 = !DILocation(line: 60, column: 46, scope: !7540)
!7548 = !DILocation(line: 60, column: 59, scope: !7540)
!7549 = !DILocation(line: 60, column: 40, scope: !7540)
!7550 = !DILocation(line: 60, column: 9, scope: !7540)
!7551 = !DILocation(line: 60, column: 12, scope: !7540)
!7552 = !DILocation(line: 60, column: 15, scope: !7540)
!7553 = !DILocation(line: 64, column: 5, scope: !7540)
!7554 = !DILocation(line: 64, column: 8, scope: !7540)
!7555 = !DILocation(line: 64, column: 12, scope: !7540)
!7556 = !DILocation(line: 66, column: 9, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7540, file: !3141, line: 66, column: 9)
!7558 = !DILocation(line: 66, column: 12, scope: !7557)
!7559 = !DILocation(line: 66, column: 25, scope: !7557)
!7560 = !DILocation(line: 66, column: 28, scope: !7557)
!7561 = !DILocation(line: 66, column: 23, scope: !7557)
!7562 = !DILocation(line: 66, column: 9, scope: !7540)
!7563 = !DILocation(line: 68, column: 9, scope: !7557)
!7564 = !DILocation(line: 68, column: 12, scope: !7557)
!7565 = !DILocation(line: 68, column: 23, scope: !7557)
!7566 = !DILocation(line: 69, column: 1, scope: !7540)
