; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a/[inter]libavfilter--aeval.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a/[inter]libavfilter--aeval.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVFilterPad = type { i8*, i32, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)*, %struct.AVFrame* (%struct.AVFilterLink*, i32)*, i32 (%struct.AVFilterLink*, %struct.AVFrame*)*, i32 (%struct.AVFilterLink*)*, i32 (%struct.AVFilterLink*)*, i32 (%struct.AVFilterLink*)*, i32, i32 }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVFilterLink = type { %struct.AVFilterContext*, %struct.AVFilterPad*, %struct.AVFilterContext*, %struct.AVFilterPad*, i32, i32, i32, %struct.AVRational, i64, i32, i32, %struct.AVRational, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts*, i32, i32, %struct.AVFilterGraph*, i64, i64, i32, %struct.AVRational, %struct.AVFrame*, i32, i32, i32, i32, i32, i64, i64, i8*, i32, %struct.AVBufferRef*, [61440 x i8] }
%struct.AVFilterContext = type { %struct.AVClass*, %struct.AVFilter*, i8*, %struct.AVFilterPad*, %struct.AVFilterLink**, i32, %struct.AVFilterPad*, %struct.AVFilterLink**, i32, i8*, %struct.AVFilterGraph*, i32, %struct.AVFilterInternal*, %struct.AVFilterCommand*, i8*, i8*, double*, i32, %struct.AVBufferRef*, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVFilter = type { i8*, i8*, %struct.AVFilterPad*, %struct.AVFilterPad*, %struct.AVClass*, i32, i32 (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)*, void (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*)*, i32, i32, %struct.AVFilter*, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)*, i32 (%struct.AVFilterContext*, i8*)*, i32 (%struct.AVFilterContext*)* }
%struct.AVFilterInternal = type { i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)* }
%struct.AVFilterCommand = type { double, i8*, i8*, i32, %struct.AVFilterCommand* }
%struct.AVFilterFormats = type { i32, i32*, i32, %struct.AVFilterFormats*** }
%struct.AVFilterChannelLayouts = type { i64*, i32, i8, i8, i32, %struct.AVFilterChannelLayouts*** }
%struct.AVFilterGraph = type { %struct.AVClass*, %struct.AVFilterContext**, i32, i8*, i8*, i32, i32, %struct.AVFilterGraphInternal*, i8*, i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i8*, %struct.AVFilterLink**, i32, i32 }
%struct.AVFilterGraphInternal = type { i8*, i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)*, %struct.FFFrameQueueGlobal }
%struct.FFFrameQueueGlobal = type { i8 }
%struct.EvalContext = type { %struct.AVClass*, i8*, i32, i64, i8*, i32, i32, i32, i64, %struct.AVExpr**, i8*, i32, i64, i64, [6 x double], double*, i64 }
%struct.AVExpr = type opaque

@.str = private unnamed_addr constant [9 x i8] c"aevalsrc\00", align 1
@.str.1 = private unnamed_addr constant [53 x i8] c"Generate an audio signal generated by an expression.\00", align 1
@aevalsrc_outputs = internal constant [2 x %struct.AVFilterPad] [%struct.AVFilterPad { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i32 1, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* @request_frame, i32 (%struct.AVFilterLink*)* @config_props, i32 0, i32 0 }, %struct.AVFilterPad zeroinitializer], align 16
@aevalsrc_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([10 x %struct.AVOption], [10 x %struct.AVOption]* bitcast (<{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption }>* @aevalsrc_options to [10 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 7, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_asrc_aevalsrc = global %struct.AVFilter { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i32 0, i32 0), %struct.AVFilterPad* null, %struct.AVFilterPad* getelementptr inbounds ([2 x %struct.AVFilterPad], [2 x %struct.AVFilterPad]* @aevalsrc_outputs, i32 0, i32 0), %struct.AVClass* @aevalsrc_class, i32 0, i32 (%struct.AVFilterContext*)* null, i32 (%struct.AVFilterContext*)* @init, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)* null, void (%struct.AVFilterContext*)* @uninit, i32 (%struct.AVFilterContext*)* @query_formats, i32 168, i32 0, %struct.AVFilter* null, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)* null, i32 (%struct.AVFilterContext*, i8*)* null, i32 (%struct.AVFilterContext*)* null }, align 8
@.str.2 = private unnamed_addr constant [6 x i8] c"aeval\00", align 1
@.str.3 = private unnamed_addr constant [57 x i8] c"Filter audio signal according to a specified expression.\00", align 1
@aeval_inputs = internal constant [2 x %struct.AVFilterPad] [%struct.AVFilterPad { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i32 1, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* @filter_frame, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 0, i32 0 }, %struct.AVFilterPad zeroinitializer], align 16
@aeval_outputs = internal constant [2 x %struct.AVFilterPad] [%struct.AVFilterPad { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i32 1, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* @aeval_config_output, i32 0, i32 0 }, %struct.AVFilterPad zeroinitializer], align 16
@aeval_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([4 x %struct.AVOption], [4 x %struct.AVOption]* bitcast (<{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption }>* @aeval_options to [4 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 7, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_af_aeval = global %struct.AVFilter { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3, i32 0, i32 0), %struct.AVFilterPad* getelementptr inbounds ([2 x %struct.AVFilterPad], [2 x %struct.AVFilterPad]* @aeval_inputs, i32 0, i32 0), %struct.AVFilterPad* getelementptr inbounds ([2 x %struct.AVFilterPad], [2 x %struct.AVFilterPad]* @aeval_outputs, i32 0, i32 0), %struct.AVClass* @aeval_class, i32 0, i32 (%struct.AVFilterContext*)* null, i32 (%struct.AVFilterContext*)* @init, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)* null, void (%struct.AVFilterContext*)* @uninit, i32 (%struct.AVFilterContext*)* @aeval_query_formats, i32 168, i32 0, %struct.AVFilter* null, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)* null, i32 (%struct.AVFilterContext*, i8*)* null, i32 (%struct.AVFilterContext*)* null }, align 8
@.str.4 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"sample_rate:%d chlayout:%s duration:%ld\0A\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"exprs\00", align 1
@.str.7 = private unnamed_addr constant [51 x i8] c"set the '|'-separated list of channels expressions\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"nb_samples\00", align 1
@.str.9 = private unnamed_addr constant [46 x i8] c"set the number of samples per requested frame\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"sample_rate\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"set the sample rate\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"44100\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"duration\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"set audio duration\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"channel_layout\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"set channel layout\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@aevalsrc_options = internal constant <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption }> <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7, i32 0, i32 0), i32 72, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65544, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.9, i32 0, i32 0), i32 80, i32 1, %union.anon { i64 1024 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 65544, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.9, i32 0, i32 0), i32 80, i32 1, %union.anon { i64 1024 }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 65544, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i32 0, i32 0), i32 8, i32 5, { i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 65544, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i32 0, i32 0), i32 8, i32 5, { i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0) }, double -1.280000e+02, double 1.270000e+02, i32 65544, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i32 0, i32 0), i32 88, i32 15, %union.anon { i64 -1 }, double -1.000000e+00, double 0x43E0000000000000, i32 65544, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i32 0, i32 0), i32 88, i32 15, %union.anon { i64 -1 }, double -1.000000e+00, double 0x43E0000000000000, i32 65544, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i32 0, i32 0), i32 32, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65544, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i32 0, i32 0), i32 32, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65544, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@.str.22 = private unnamed_addr constant [5 x i8] c"same\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"Invalid number of channels '%d' provided\0A\00", align 1
@.str.24 = private unnamed_addr constant [36 x i8] c"Channels expressions list is empty\0A\00", align 1
@aeval_func1 = internal constant [2 x double (i8*, double)*] [double (i8*, double)* @val, double (i8*, double)* null], align 16
@aeval_func1_names = internal constant [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i32 0, i32 0), i8* null], align 16
@.str.25 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@var_names = internal constant [7 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), i8* null], align 16
@.str.26 = private unnamed_addr constant [148 x i8] c"Mismatch between the specified number of channel expressions '%d' and the number of expected output channels '%d' for the specified channel layout\0A\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"val\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"ch\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"nb_in_channels\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"nb_out_channels\00", align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@query_formats.sample_fmts = internal constant [2 x i32] [i32 9, i32 -1], align 4
@aeval_options = internal constant <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption }> <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7, i32 0, i32 0), i32 72, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65544, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i32 0, i32 0), i32 32, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65544, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i32 0, i32 0), i32 32, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65544, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@aeval_query_formats.sample_fmts = internal constant [2 x i32] [i32 9, i32 -1], align 4

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @init(%struct.AVFilterContext* %ctx) #0 !dbg !653 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %eval = alloca %struct.EvalContext*, align 8
  %ret = alloca i32, align 4
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !654, metadata !655), !dbg !656
  call void @llvm.dbg.declare(metadata %struct.EvalContext** %eval, metadata !657, metadata !655), !dbg !687
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !688
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !689
  %1 = load i8*, i8** %priv, align 8, !dbg !689
  %2 = bitcast i8* %1 to %struct.EvalContext*, !dbg !688
  store %struct.EvalContext* %2, %struct.EvalContext** %eval, align 8, !dbg !687
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !690, metadata !655), !dbg !691
  store i32 0, i32* %ret, align 4, !dbg !691
  %3 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !692
  %chlayout_str = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %3, i32 0, i32 4, !dbg !694
  %4 = load i8*, i8** %chlayout_str, align 8, !dbg !694
  %tobool = icmp ne i8* %4, null, !dbg !692
  br i1 %tobool, label %if.then, label %if.else16, !dbg !695

if.then:                                          ; preds = %entry
  %5 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !696
  %chlayout_str1 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %5, i32 0, i32 4, !dbg !699
  %6 = load i8*, i8** %chlayout_str1, align 8, !dbg !699
  %call = call i32 @strcmp(i8* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0)) #8, !dbg !700
  %tobool2 = icmp ne i32 %call, 0, !dbg !700
  br i1 %tobool2, label %if.else, label %land.lhs.true, !dbg !701

land.lhs.true:                                    ; preds = %if.then
  %7 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !702
  %filter = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %7, i32 0, i32 1, !dbg !704
  %8 = load %struct.AVFilter*, %struct.AVFilter** %filter, align 8, !dbg !704
  %name = getelementptr inbounds %struct.AVFilter, %struct.AVFilter* %8, i32 0, i32 0, !dbg !705
  %9 = load i8*, i8** %name, align 8, !dbg !705
  %call3 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0)) #8, !dbg !706
  %tobool4 = icmp ne i32 %call3, 0, !dbg !706
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !707

if.then5:                                         ; preds = %land.lhs.true
  %10 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !708
  %same_chlayout = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %10, i32 0, i32 7, !dbg !710
  store i32 1, i32* %same_chlayout, align 8, !dbg !711
  br label %if.end15, !dbg !712

if.else:                                          ; preds = %land.lhs.true, %if.then
  %11 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !713
  %chlayout = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %11, i32 0, i32 3, !dbg !715
  %12 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !716
  %chlayout_str6 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %12, i32 0, i32 4, !dbg !717
  %13 = load i8*, i8** %chlayout_str6, align 8, !dbg !717
  %14 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !718
  %15 = bitcast %struct.AVFilterContext* %14 to i8*, !dbg !718
  %call7 = call i32 @ff_parse_channel_layout(i64* %chlayout, i32* null, i8* %13, i8* %15), !dbg !719
  store i32 %call7, i32* %ret, align 4, !dbg !720
  %16 = load i32, i32* %ret, align 4, !dbg !721
  %cmp = icmp slt i32 %16, 0, !dbg !723
  br i1 %cmp, label %if.then8, label %if.end, !dbg !724

if.then8:                                         ; preds = %if.else
  %17 = load i32, i32* %ret, align 4, !dbg !725
  store i32 %17, i32* %retval, align 4, !dbg !726
  br label %return, !dbg !726

if.end:                                           ; preds = %if.else
  %18 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !727
  %19 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !728
  %chlayout9 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %19, i32 0, i32 3, !dbg !729
  %20 = load i64, i64* %chlayout9, align 8, !dbg !729
  %call10 = call i32 @av_get_channel_layout_nb_channels(i64 %20), !dbg !730
  %call11 = call i32 @parse_channel_expressions(%struct.AVFilterContext* %18, i32 %call10), !dbg !731
  store i32 %call11, i32* %ret, align 4, !dbg !733
  %21 = load i32, i32* %ret, align 4, !dbg !734
  %cmp12 = icmp slt i32 %21, 0, !dbg !736
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !737

if.then13:                                        ; preds = %if.end
  %22 = load i32, i32* %ret, align 4, !dbg !738
  store i32 %22, i32* %retval, align 4, !dbg !739
  br label %return, !dbg !739

if.end14:                                         ; preds = %if.end
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then5
  br label %if.end31, !dbg !740

if.else16:                                        ; preds = %entry
  %23 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !741
  %call17 = call i32 @parse_channel_expressions(%struct.AVFilterContext* %23, i32 -1), !dbg !744
  store i32 %call17, i32* %ret, align 4, !dbg !745
  %cmp18 = icmp slt i32 %call17, 0, !dbg !746
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !747

if.then19:                                        ; preds = %if.else16
  %24 = load i32, i32* %ret, align 4, !dbg !748
  store i32 %24, i32* %retval, align 4, !dbg !749
  br label %return, !dbg !749

if.end20:                                         ; preds = %if.else16
  %25 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !750
  %nb_channels = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %25, i32 0, i32 5, !dbg !751
  %26 = load i32, i32* %nb_channels, align 8, !dbg !751
  %call21 = call i64 @av_get_default_channel_layout(i32 %26), !dbg !752
  %27 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !753
  %chlayout22 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %27, i32 0, i32 3, !dbg !754
  store i64 %call21, i64* %chlayout22, align 8, !dbg !755
  %28 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !756
  %chlayout23 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %28, i32 0, i32 3, !dbg !758
  %29 = load i64, i64* %chlayout23, align 8, !dbg !758
  %tobool24 = icmp ne i64 %29, 0, !dbg !756
  br i1 %tobool24, label %if.end30, label %land.lhs.true25, !dbg !759

land.lhs.true25:                                  ; preds = %if.end20
  %30 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !760
  %nb_channels26 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %30, i32 0, i32 5, !dbg !762
  %31 = load i32, i32* %nb_channels26, align 8, !dbg !762
  %cmp27 = icmp sle i32 %31, 0, !dbg !763
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !764

if.then28:                                        ; preds = %land.lhs.true25
  %32 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !765
  %33 = bitcast %struct.AVFilterContext* %32 to i8*, !dbg !765
  %34 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !767
  %nb_channels29 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %34, i32 0, i32 5, !dbg !768
  %35 = load i32, i32* %nb_channels29, align 8, !dbg !768
  call void (i8*, i32, i8*, ...) @av_log(i8* %33, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0), i32 %35), !dbg !769
  store i32 -22, i32* %retval, align 4, !dbg !770
  br label %return, !dbg !770

if.end30:                                         ; preds = %land.lhs.true25, %if.end20
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end15
  %36 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !771
  %sample_rate_str = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %36, i32 0, i32 1, !dbg !773
  %37 = load i8*, i8** %sample_rate_str, align 8, !dbg !773
  %tobool32 = icmp ne i8* %37, null, !dbg !771
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !774

if.then33:                                        ; preds = %if.end31
  %38 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !775
  %sample_rate = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %38, i32 0, i32 2, !dbg !777
  %39 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !778
  %sample_rate_str34 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %39, i32 0, i32 1, !dbg !779
  %40 = load i8*, i8** %sample_rate_str34, align 8, !dbg !779
  %41 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !780
  %42 = bitcast %struct.AVFilterContext* %41 to i8*, !dbg !780
  %call35 = call i32 @ff_parse_sample_rate(i32* %sample_rate, i8* %40, i8* %42), !dbg !781
  store i32 %call35, i32* %ret, align 4, !dbg !782
  %tobool36 = icmp ne i32 %call35, 0, !dbg !782
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !783

if.then37:                                        ; preds = %if.then33
  %43 = load i32, i32* %ret, align 4, !dbg !784
  store i32 %43, i32* %retval, align 4, !dbg !785
  br label %return, !dbg !785

if.end38:                                         ; preds = %if.then33
  br label %if.end39, !dbg !786

if.end39:                                         ; preds = %if.end38, %if.end31
  %44 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !788
  %n = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %44, i32 0, i32 13, !dbg !789
  store i64 0, i64* %n, align 8, !dbg !790
  %45 = load i32, i32* %ret, align 4, !dbg !791
  store i32 %45, i32* %retval, align 4, !dbg !792
  br label %return, !dbg !792

return:                                           ; preds = %if.end39, %if.then37, %if.then28, %if.then19, %if.then13, %if.then8
  %46 = load i32, i32* %retval, align 4, !dbg !793
  ret i32 %46, !dbg !793
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @uninit(%struct.AVFilterContext* %ctx) #0 !dbg !794 {
entry:
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %eval = alloca %struct.EvalContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !795, metadata !655), !dbg !796
  call void @llvm.dbg.declare(metadata %struct.EvalContext** %eval, metadata !797, metadata !655), !dbg !798
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !799
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !800
  %1 = load i8*, i8** %priv, align 8, !dbg !800
  %2 = bitcast i8* %1 to %struct.EvalContext*, !dbg !799
  store %struct.EvalContext* %2, %struct.EvalContext** %eval, align 8, !dbg !798
  call void @llvm.dbg.declare(metadata i32* %i, metadata !801, metadata !655), !dbg !802
  store i32 0, i32* %i, align 4, !dbg !803
  br label %for.cond, !dbg !805

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !806
  %4 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !809
  %nb_channels = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %4, i32 0, i32 5, !dbg !810
  %5 = load i32, i32* %nb_channels, align 8, !dbg !810
  %cmp = icmp slt i32 %3, %5, !dbg !811
  br i1 %cmp, label %for.body, label %for.end, !dbg !812

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !813
  %idxprom = sext i32 %6 to i64, !dbg !815
  %7 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !815
  %expr = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %7, i32 0, i32 9, !dbg !816
  %8 = load %struct.AVExpr**, %struct.AVExpr*** %expr, align 8, !dbg !816
  %arrayidx = getelementptr inbounds %struct.AVExpr*, %struct.AVExpr** %8, i64 %idxprom, !dbg !815
  %9 = load %struct.AVExpr*, %struct.AVExpr** %arrayidx, align 8, !dbg !815
  call void @av_expr_free(%struct.AVExpr* %9), !dbg !817
  %10 = load i32, i32* %i, align 4, !dbg !818
  %idxprom1 = sext i32 %10 to i64, !dbg !819
  %11 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !819
  %expr2 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %11, i32 0, i32 9, !dbg !820
  %12 = load %struct.AVExpr**, %struct.AVExpr*** %expr2, align 8, !dbg !820
  %arrayidx3 = getelementptr inbounds %struct.AVExpr*, %struct.AVExpr** %12, i64 %idxprom1, !dbg !819
  store %struct.AVExpr* null, %struct.AVExpr** %arrayidx3, align 8, !dbg !821
  br label %for.inc, !dbg !822

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !823
  %inc = add nsw i32 %13, 1, !dbg !823
  store i32 %inc, i32* %i, align 4, !dbg !823
  br label %for.cond, !dbg !825, !llvm.loop !826

for.end:                                          ; preds = %for.cond
  %14 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !828
  %expr4 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %14, i32 0, i32 9, !dbg !829
  %15 = bitcast %struct.AVExpr*** %expr4 to i8*, !dbg !830
  call void @av_freep(i8* %15), !dbg !831
  %16 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !832
  %channel_values = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %16, i32 0, i32 15, !dbg !833
  %17 = bitcast double** %channel_values to i8*, !dbg !834
  call void @av_freep(i8* %17), !dbg !835
  ret void, !dbg !836
}

; Function Attrs: nounwind uwtable
define internal i32 @query_formats(%struct.AVFilterContext* %ctx) #1 !dbg !637 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %eval = alloca %struct.EvalContext*, align 8
  %chlayouts = alloca [2 x i64], align 16
  %sample_rates = alloca [2 x i32], align 4
  %formats = alloca %struct.AVFilterFormats*, align 8
  %layouts = alloca %struct.AVFilterChannelLayouts*, align 8
  %ret = alloca i32, align 4
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !837, metadata !655), !dbg !838
  call void @llvm.dbg.declare(metadata %struct.EvalContext** %eval, metadata !839, metadata !655), !dbg !840
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !841
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !842
  %1 = load i8*, i8** %priv, align 8, !dbg !842
  %2 = bitcast i8* %1 to %struct.EvalContext*, !dbg !841
  store %struct.EvalContext* %2, %struct.EvalContext** %eval, align 8, !dbg !840
  call void @llvm.dbg.declare(metadata [2 x i64]* %chlayouts, metadata !843, metadata !655), !dbg !845
  %arrayinit.begin = getelementptr inbounds [2 x i64], [2 x i64]* %chlayouts, i64 0, i64 0, !dbg !846
  %3 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !847
  %chlayout = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %3, i32 0, i32 3, !dbg !848
  %4 = load i64, i64* %chlayout, align 8, !dbg !848
  %tobool = icmp ne i64 %4, 0, !dbg !847
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !847

cond.true:                                        ; preds = %entry
  %5 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !849
  %chlayout1 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %5, i32 0, i32 3, !dbg !851
  %6 = load i64, i64* %chlayout1, align 8, !dbg !851
  br label %cond.end, !dbg !852

cond.false:                                       ; preds = %entry
  %7 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !853
  %nb_channels = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %7, i32 0, i32 5, !dbg !855
  %8 = load i32, i32* %nb_channels, align 8, !dbg !855
  %conv = sext i32 %8 to i64, !dbg !856
  %or = or i64 -9223372036854775808, %conv, !dbg !857
  br label %cond.end, !dbg !858

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %or, %cond.false ], !dbg !859
  store i64 %cond, i64* %arrayinit.begin, align 8, !dbg !861
  %arrayinit.element = getelementptr inbounds i64, i64* %arrayinit.begin, i64 1, !dbg !861
  store i64 -1, i64* %arrayinit.element, align 8, !dbg !861
  call void @llvm.dbg.declare(metadata [2 x i32]* %sample_rates, metadata !862, metadata !655), !dbg !864
  %arrayinit.begin2 = getelementptr inbounds [2 x i32], [2 x i32]* %sample_rates, i64 0, i64 0, !dbg !865
  %9 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !866
  %sample_rate = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %9, i32 0, i32 2, !dbg !867
  %10 = load i32, i32* %sample_rate, align 8, !dbg !867
  store i32 %10, i32* %arrayinit.begin2, align 4, !dbg !865
  %arrayinit.element3 = getelementptr inbounds i32, i32* %arrayinit.begin2, i64 1, !dbg !865
  store i32 -1, i32* %arrayinit.element3, align 4, !dbg !865
  call void @llvm.dbg.declare(metadata %struct.AVFilterFormats** %formats, metadata !868, metadata !655), !dbg !869
  call void @llvm.dbg.declare(metadata %struct.AVFilterChannelLayouts** %layouts, metadata !870, metadata !655), !dbg !873
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !874, metadata !655), !dbg !875
  %call = call %struct.AVFilterFormats* @ff_make_format_list(i32* getelementptr inbounds ([2 x i32], [2 x i32]* @query_formats.sample_fmts, i32 0, i32 0)), !dbg !876
  store %struct.AVFilterFormats* %call, %struct.AVFilterFormats** %formats, align 8, !dbg !877
  %11 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %formats, align 8, !dbg !878
  %tobool4 = icmp ne %struct.AVFilterFormats* %11, null, !dbg !878
  br i1 %tobool4, label %if.end, label %if.then, !dbg !880

if.then:                                          ; preds = %cond.end
  store i32 -12, i32* %retval, align 4, !dbg !881
  br label %return, !dbg !881

if.end:                                           ; preds = %cond.end
  %12 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !882
  %13 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %formats, align 8, !dbg !883
  %call5 = call i32 @ff_set_common_formats(%struct.AVFilterContext* %12, %struct.AVFilterFormats* %13), !dbg !884
  store i32 %call5, i32* %ret, align 4, !dbg !885
  %14 = load i32, i32* %ret, align 4, !dbg !886
  %cmp = icmp slt i32 %14, 0, !dbg !888
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !889

if.then7:                                         ; preds = %if.end
  %15 = load i32, i32* %ret, align 4, !dbg !890
  store i32 %15, i32* %retval, align 4, !dbg !891
  br label %return, !dbg !891

if.end8:                                          ; preds = %if.end
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %chlayouts, i32 0, i32 0, !dbg !892
  %call9 = call %struct.AVFilterChannelLayouts* @avfilter_make_format64_list(i64* %arraydecay), !dbg !893
  store %struct.AVFilterChannelLayouts* %call9, %struct.AVFilterChannelLayouts** %layouts, align 8, !dbg !894
  %16 = load %struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts** %layouts, align 8, !dbg !895
  %tobool10 = icmp ne %struct.AVFilterChannelLayouts* %16, null, !dbg !895
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !897

if.then11:                                        ; preds = %if.end8
  store i32 -12, i32* %retval, align 4, !dbg !898
  br label %return, !dbg !898

if.end12:                                         ; preds = %if.end8
  %17 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !899
  %18 = load %struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts** %layouts, align 8, !dbg !900
  %call13 = call i32 @ff_set_common_channel_layouts(%struct.AVFilterContext* %17, %struct.AVFilterChannelLayouts* %18), !dbg !901
  store i32 %call13, i32* %ret, align 4, !dbg !902
  %19 = load i32, i32* %ret, align 4, !dbg !903
  %cmp14 = icmp slt i32 %19, 0, !dbg !905
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !906

if.then16:                                        ; preds = %if.end12
  %20 = load i32, i32* %ret, align 4, !dbg !907
  store i32 %20, i32* %retval, align 4, !dbg !908
  br label %return, !dbg !908

if.end17:                                         ; preds = %if.end12
  %arraydecay18 = getelementptr inbounds [2 x i32], [2 x i32]* %sample_rates, i32 0, i32 0, !dbg !909
  %call19 = call %struct.AVFilterFormats* @ff_make_format_list(i32* %arraydecay18), !dbg !910
  store %struct.AVFilterFormats* %call19, %struct.AVFilterFormats** %formats, align 8, !dbg !911
  %21 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %formats, align 8, !dbg !912
  %tobool20 = icmp ne %struct.AVFilterFormats* %21, null, !dbg !912
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !914

if.then21:                                        ; preds = %if.end17
  store i32 -12, i32* %retval, align 4, !dbg !915
  br label %return, !dbg !915

if.end22:                                         ; preds = %if.end17
  %22 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !916
  %23 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %formats, align 8, !dbg !917
  %call23 = call i32 @ff_set_common_samplerates(%struct.AVFilterContext* %22, %struct.AVFilterFormats* %23), !dbg !918
  store i32 %call23, i32* %retval, align 4, !dbg !919
  br label %return, !dbg !919

return:                                           ; preds = %if.end22, %if.then21, %if.then16, %if.then11, %if.then7, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !920
  ret i32 %24, !dbg !920
}

; Function Attrs: nounwind uwtable
define internal i32 @aeval_query_formats(%struct.AVFilterContext* %ctx) #1 !dbg !649 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %formats = alloca %struct.AVFilterFormats*, align 8
  %layouts = alloca %struct.AVFilterChannelLayouts*, align 8
  %inlink = alloca %struct.AVFilterLink*, align 8
  %outlink = alloca %struct.AVFilterLink*, align 8
  %eval = alloca %struct.EvalContext*, align 8
  %ret = alloca i32, align 4
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !921, metadata !655), !dbg !922
  call void @llvm.dbg.declare(metadata %struct.AVFilterFormats** %formats, metadata !923, metadata !655), !dbg !924
  store %struct.AVFilterFormats* null, %struct.AVFilterFormats** %formats, align 8, !dbg !924
  call void @llvm.dbg.declare(metadata %struct.AVFilterChannelLayouts** %layouts, metadata !925, metadata !655), !dbg !926
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %inlink, metadata !927, metadata !655), !dbg !928
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !929
  %inputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 4, !dbg !930
  %1 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %inputs, align 8, !dbg !930
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %1, i64 0, !dbg !929
  %2 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !929
  store %struct.AVFilterLink* %2, %struct.AVFilterLink** %inlink, align 8, !dbg !928
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink, metadata !931, metadata !655), !dbg !932
  %3 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !933
  %outputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %3, i32 0, i32 7, !dbg !934
  %4 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %outputs, align 8, !dbg !934
  %arrayidx1 = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %4, i64 0, !dbg !933
  %5 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx1, align 8, !dbg !933
  store %struct.AVFilterLink* %5, %struct.AVFilterLink** %outlink, align 8, !dbg !932
  call void @llvm.dbg.declare(metadata %struct.EvalContext** %eval, metadata !935, metadata !655), !dbg !936
  %6 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !937
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %6, i32 0, i32 9, !dbg !938
  %7 = load i8*, i8** %priv, align 8, !dbg !938
  %8 = bitcast i8* %7 to %struct.EvalContext*, !dbg !937
  store %struct.EvalContext* %8, %struct.EvalContext** %eval, align 8, !dbg !936
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !939, metadata !655), !dbg !940
  %call = call %struct.AVFilterChannelLayouts* @ff_all_channel_counts(), !dbg !941
  store %struct.AVFilterChannelLayouts* %call, %struct.AVFilterChannelLayouts** %layouts, align 8, !dbg !942
  %9 = load %struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts** %layouts, align 8, !dbg !943
  %10 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !945
  %out_channel_layouts = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %10, i32 0, i32 17, !dbg !946
  %call2 = call i32 @ff_channel_layouts_ref(%struct.AVFilterChannelLayouts* %9, %struct.AVFilterChannelLayouts** %out_channel_layouts), !dbg !947
  store i32 %call2, i32* %ret, align 4, !dbg !948
  %cmp = icmp slt i32 %call2, 0, !dbg !949
  br i1 %cmp, label %if.then, label %if.end, !dbg !950

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %ret, align 4, !dbg !951
  store i32 %11, i32* %retval, align 4, !dbg !952
  br label %return, !dbg !952

if.end:                                           ; preds = %entry
  %12 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !953
  %same_chlayout = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %12, i32 0, i32 7, !dbg !955
  %13 = load i32, i32* %same_chlayout, align 8, !dbg !955
  %tobool = icmp ne i32 %13, 0, !dbg !953
  br i1 %tobool, label %if.then3, label %if.else, !dbg !956

if.then3:                                         ; preds = %if.end
  %call4 = call %struct.AVFilterChannelLayouts* @ff_all_channel_counts(), !dbg !957
  store %struct.AVFilterChannelLayouts* %call4, %struct.AVFilterChannelLayouts** %layouts, align 8, !dbg !959
  %14 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !960
  %15 = load %struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts** %layouts, align 8, !dbg !962
  %call5 = call i32 @ff_set_common_channel_layouts(%struct.AVFilterContext* %14, %struct.AVFilterChannelLayouts* %15), !dbg !963
  store i32 %call5, i32* %ret, align 4, !dbg !964
  %cmp6 = icmp slt i32 %call5, 0, !dbg !965
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !966

if.then7:                                         ; preds = %if.then3
  %16 = load i32, i32* %ret, align 4, !dbg !967
  store i32 %16, i32* %retval, align 4, !dbg !968
  br label %return, !dbg !968

if.end8:                                          ; preds = %if.then3
  br label %if.end21, !dbg !969

if.else:                                          ; preds = %if.end
  store %struct.AVFilterChannelLayouts* null, %struct.AVFilterChannelLayouts** %layouts, align 8, !dbg !970
  %17 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !972
  %out_channel_layout = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %17, i32 0, i32 16, !dbg !974
  %18 = load i64, i64* %out_channel_layout, align 8, !dbg !974
  %tobool9 = icmp ne i64 %18, 0, !dbg !972
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !972

cond.true:                                        ; preds = %if.else
  %19 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !975
  %out_channel_layout10 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %19, i32 0, i32 16, !dbg !977
  %20 = load i64, i64* %out_channel_layout10, align 8, !dbg !977
  br label %cond.end, !dbg !978

cond.false:                                       ; preds = %if.else
  %21 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !979
  %nb_channels = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %21, i32 0, i32 5, !dbg !980
  %22 = load i32, i32* %nb_channels, align 8, !dbg !980
  %conv = sext i32 %22 to i64, !dbg !981
  %or = or i64 -9223372036854775808, %conv, !dbg !982
  br label %cond.end, !dbg !983

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %20, %cond.true ], [ %or, %cond.false ], !dbg !985
  %call11 = call i32 @ff_add_channel_layout(%struct.AVFilterChannelLayouts** %layouts, i64 %cond), !dbg !987
  store i32 %call11, i32* %ret, align 4, !dbg !988
  %cmp12 = icmp slt i32 %call11, 0, !dbg !989
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !990

if.then14:                                        ; preds = %cond.end
  %23 = load i32, i32* %ret, align 4, !dbg !991
  store i32 %23, i32* %retval, align 4, !dbg !992
  br label %return, !dbg !992

if.end15:                                         ; preds = %cond.end
  %24 = load %struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts** %layouts, align 8, !dbg !993
  %25 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !995
  %in_channel_layouts = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %25, i32 0, i32 16, !dbg !996
  %call16 = call i32 @ff_channel_layouts_ref(%struct.AVFilterChannelLayouts* %24, %struct.AVFilterChannelLayouts** %in_channel_layouts), !dbg !997
  store i32 %call16, i32* %ret, align 4, !dbg !998
  %cmp17 = icmp slt i32 %call16, 0, !dbg !999
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !1000

if.then19:                                        ; preds = %if.end15
  %26 = load i32, i32* %ret, align 4, !dbg !1001
  store i32 %26, i32* %retval, align 4, !dbg !1002
  br label %return, !dbg !1002

if.end20:                                         ; preds = %if.end15
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end8
  %call22 = call %struct.AVFilterFormats* @ff_make_format_list(i32* getelementptr inbounds ([2 x i32], [2 x i32]* @aeval_query_formats.sample_fmts, i32 0, i32 0)), !dbg !1003
  store %struct.AVFilterFormats* %call22, %struct.AVFilterFormats** %formats, align 8, !dbg !1004
  %27 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1005
  %28 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %formats, align 8, !dbg !1007
  %call23 = call i32 @ff_set_common_formats(%struct.AVFilterContext* %27, %struct.AVFilterFormats* %28), !dbg !1008
  store i32 %call23, i32* %ret, align 4, !dbg !1009
  %cmp24 = icmp slt i32 %call23, 0, !dbg !1010
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !1011

if.then26:                                        ; preds = %if.end21
  %29 = load i32, i32* %ret, align 4, !dbg !1012
  store i32 %29, i32* %retval, align 4, !dbg !1013
  br label %return, !dbg !1013

if.end27:                                         ; preds = %if.end21
  %call28 = call %struct.AVFilterFormats* @ff_all_samplerates(), !dbg !1014
  store %struct.AVFilterFormats* %call28, %struct.AVFilterFormats** %formats, align 8, !dbg !1015
  %30 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1016
  %31 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %formats, align 8, !dbg !1017
  %call29 = call i32 @ff_set_common_samplerates(%struct.AVFilterContext* %30, %struct.AVFilterFormats* %31), !dbg !1018
  store i32 %call29, i32* %retval, align 4, !dbg !1019
  br label %return, !dbg !1019

return:                                           ; preds = %if.end27, %if.then26, %if.then19, %if.then14, %if.then7, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !1020
  ret i32 %32, !dbg !1020
}

; Function Attrs: nounwind uwtable
define internal i32 @request_frame(%struct.AVFilterLink* %outlink) #1 !dbg !1021 {
entry:
  %retval = alloca i32, align 4
  %outlink.addr = alloca %struct.AVFilterLink*, align 8
  %eval = alloca %struct.EvalContext*, align 8
  %samplesref = alloca %struct.AVFrame*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %t = alloca i64, align 8
  %nb_samples = alloca i32, align 4
  store %struct.AVFilterLink* %outlink, %struct.AVFilterLink** %outlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink.addr, metadata !1022, metadata !655), !dbg !1023
  call void @llvm.dbg.declare(metadata %struct.EvalContext** %eval, metadata !1024, metadata !655), !dbg !1025
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1026
  %src = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 0, !dbg !1027
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %src, align 8, !dbg !1027
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %1, i32 0, i32 9, !dbg !1028
  %2 = load i8*, i8** %priv, align 8, !dbg !1028
  %3 = bitcast i8* %2 to %struct.EvalContext*, !dbg !1026
  store %struct.EvalContext* %3, %struct.EvalContext** %eval, align 8, !dbg !1025
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %samplesref, metadata !1029, metadata !655), !dbg !1030
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1031, metadata !655), !dbg !1032
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1033, metadata !655), !dbg !1034
  call void @llvm.dbg.declare(metadata i64* %t, metadata !1035, metadata !655), !dbg !1036
  %4 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1037
  %n = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %4, i32 0, i32 13, !dbg !1038
  %5 = load i64, i64* %n, align 8, !dbg !1038
  %6 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1039
  %sample_rate = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %6, i32 0, i32 2, !dbg !1040
  %7 = load i32, i32* %sample_rate, align 8, !dbg !1040
  %conv = sext i32 %7 to i64, !dbg !1039
  %call = call i64 @av_rescale(i64 %5, i64 1000000, i64 %conv) #2, !dbg !1041
  store i64 %call, i64* %t, align 8, !dbg !1036
  call void @llvm.dbg.declare(metadata i32* %nb_samples, metadata !1042, metadata !655), !dbg !1043
  %8 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1044
  %duration = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %8, i32 0, i32 12, !dbg !1046
  %9 = load i64, i64* %duration, align 8, !dbg !1046
  %cmp = icmp sge i64 %9, 0, !dbg !1047
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1048

land.lhs.true:                                    ; preds = %entry
  %10 = load i64, i64* %t, align 8, !dbg !1049
  %11 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1051
  %duration2 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %11, i32 0, i32 12, !dbg !1052
  %12 = load i64, i64* %duration2, align 8, !dbg !1052
  %cmp3 = icmp sge i64 %10, %12, !dbg !1053
  br i1 %cmp3, label %if.then, label %if.end, !dbg !1054

if.then:                                          ; preds = %land.lhs.true
  store i32 -541478725, i32* %retval, align 4, !dbg !1055
  br label %return, !dbg !1055

if.end:                                           ; preds = %land.lhs.true, %entry
  %13 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1056
  %duration5 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %13, i32 0, i32 12, !dbg !1058
  %14 = load i64, i64* %duration5, align 8, !dbg !1058
  %cmp6 = icmp sge i64 %14, 0, !dbg !1059
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !1060

if.then8:                                         ; preds = %if.end
  %15 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1061
  %nb_samples9 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %15, i32 0, i32 11, !dbg !1063
  %16 = load i32, i32* %nb_samples9, align 8, !dbg !1063
  %conv10 = sext i32 %16 to i64, !dbg !1064
  %17 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1065
  %duration11 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %17, i32 0, i32 12, !dbg !1066
  %18 = load i64, i64* %duration11, align 8, !dbg !1066
  %19 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1067
  %sample_rate12 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %19, i32 0, i32 2, !dbg !1068
  %20 = load i32, i32* %sample_rate12, align 8, !dbg !1068
  %conv13 = sext i32 %20 to i64, !dbg !1067
  %call14 = call i64 @av_rescale(i64 %18, i64 %conv13, i64 1000000) #2, !dbg !1069
  %21 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1070
  %pts = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %21, i32 0, i32 8, !dbg !1071
  %22 = load i64, i64* %pts, align 8, !dbg !1071
  %sub = sub nsw i64 %call14, %22, !dbg !1072
  %cmp15 = icmp sgt i64 %conv10, %sub, !dbg !1073
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !1064

cond.true:                                        ; preds = %if.then8
  %23 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1074
  %duration17 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %23, i32 0, i32 12, !dbg !1076
  %24 = load i64, i64* %duration17, align 8, !dbg !1076
  %25 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1077
  %sample_rate18 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %25, i32 0, i32 2, !dbg !1078
  %26 = load i32, i32* %sample_rate18, align 8, !dbg !1078
  %conv19 = sext i32 %26 to i64, !dbg !1077
  %call20 = call i64 @av_rescale(i64 %24, i64 %conv19, i64 1000000) #2, !dbg !1079
  %27 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1080
  %pts21 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %27, i32 0, i32 8, !dbg !1081
  %28 = load i64, i64* %pts21, align 8, !dbg !1081
  %sub22 = sub nsw i64 %call20, %28, !dbg !1082
  br label %cond.end, !dbg !1083

cond.false:                                       ; preds = %if.then8
  %29 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1084
  %nb_samples23 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %29, i32 0, i32 11, !dbg !1086
  %30 = load i32, i32* %nb_samples23, align 8, !dbg !1086
  %conv24 = sext i32 %30 to i64, !dbg !1087
  br label %cond.end, !dbg !1088

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub22, %cond.true ], [ %conv24, %cond.false ], !dbg !1089
  %conv25 = trunc i64 %cond to i32, !dbg !1091
  store i32 %conv25, i32* %nb_samples, align 4, !dbg !1092
  %31 = load i32, i32* %nb_samples, align 4, !dbg !1093
  %tobool = icmp ne i32 %31, 0, !dbg !1093
  br i1 %tobool, label %if.end27, label %if.then26, !dbg !1095

if.then26:                                        ; preds = %cond.end
  store i32 -541478725, i32* %retval, align 4, !dbg !1096
  br label %return, !dbg !1096

if.end27:                                         ; preds = %cond.end
  br label %if.end29, !dbg !1097

if.else:                                          ; preds = %if.end
  %32 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1098
  %nb_samples28 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %32, i32 0, i32 11, !dbg !1100
  %33 = load i32, i32* %nb_samples28, align 8, !dbg !1100
  store i32 %33, i32* %nb_samples, align 4, !dbg !1101
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.end27
  %34 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1102
  %35 = load i32, i32* %nb_samples, align 4, !dbg !1103
  %call30 = call %struct.AVFrame* @ff_get_audio_buffer(%struct.AVFilterLink* %34, i32 %35), !dbg !1104
  store %struct.AVFrame* %call30, %struct.AVFrame** %samplesref, align 8, !dbg !1105
  %36 = load %struct.AVFrame*, %struct.AVFrame** %samplesref, align 8, !dbg !1106
  %tobool31 = icmp ne %struct.AVFrame* %36, null, !dbg !1106
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !1108

if.then32:                                        ; preds = %if.end29
  store i32 -12, i32* %retval, align 4, !dbg !1109
  br label %return, !dbg !1109

if.end33:                                         ; preds = %if.end29
  store i32 0, i32* %i, align 4, !dbg !1110
  br label %for.cond, !dbg !1112

for.cond:                                         ; preds = %for.inc53, %if.end33
  %37 = load i32, i32* %i, align 4, !dbg !1113
  %38 = load i32, i32* %nb_samples, align 4, !dbg !1116
  %cmp34 = icmp slt i32 %37, %38, !dbg !1117
  br i1 %cmp34, label %for.body, label %for.end57, !dbg !1118

for.body:                                         ; preds = %for.cond
  %39 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1119
  %n36 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %39, i32 0, i32 13, !dbg !1121
  %40 = load i64, i64* %n36, align 8, !dbg !1121
  %conv37 = uitofp i64 %40 to double, !dbg !1119
  %41 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1122
  %var_values = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %41, i32 0, i32 14, !dbg !1123
  %arrayidx = getelementptr inbounds [6 x double], [6 x double]* %var_values, i64 0, i64 1, !dbg !1122
  store double %conv37, double* %arrayidx, align 8, !dbg !1124
  %42 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1125
  %var_values38 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %42, i32 0, i32 14, !dbg !1126
  %arrayidx39 = getelementptr inbounds [6 x double], [6 x double]* %var_values38, i64 0, i64 1, !dbg !1125
  %43 = load double, double* %arrayidx39, align 8, !dbg !1125
  %mul = fmul double %43, 1.000000e+00, !dbg !1127
  %44 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1128
  %sample_rate40 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %44, i32 0, i32 2, !dbg !1129
  %45 = load i32, i32* %sample_rate40, align 8, !dbg !1129
  %conv41 = sitofp i32 %45 to double, !dbg !1128
  %div = fdiv double %mul, %conv41, !dbg !1130
  %46 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1131
  %var_values42 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %46, i32 0, i32 14, !dbg !1132
  %arrayidx43 = getelementptr inbounds [6 x double], [6 x double]* %var_values42, i64 0, i64 4, !dbg !1131
  store double %div, double* %arrayidx43, align 8, !dbg !1133
  store i32 0, i32* %j, align 4, !dbg !1134
  br label %for.cond44, !dbg !1136

for.cond44:                                       ; preds = %for.inc, %for.body
  %47 = load i32, i32* %j, align 4, !dbg !1137
  %48 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1140
  %nb_channels = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %48, i32 0, i32 5, !dbg !1141
  %49 = load i32, i32* %nb_channels, align 8, !dbg !1141
  %cmp45 = icmp slt i32 %47, %49, !dbg !1142
  br i1 %cmp45, label %for.body47, label %for.end, !dbg !1143

for.body47:                                       ; preds = %for.cond44
  %50 = load i32, i32* %j, align 4, !dbg !1144
  %idxprom = sext i32 %50 to i64, !dbg !1146
  %51 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1146
  %expr = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %51, i32 0, i32 9, !dbg !1147
  %52 = load %struct.AVExpr**, %struct.AVExpr*** %expr, align 8, !dbg !1147
  %arrayidx48 = getelementptr inbounds %struct.AVExpr*, %struct.AVExpr** %52, i64 %idxprom, !dbg !1146
  %53 = load %struct.AVExpr*, %struct.AVExpr** %arrayidx48, align 8, !dbg !1146
  %54 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1148
  %var_values49 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %54, i32 0, i32 14, !dbg !1149
  %arraydecay = getelementptr inbounds [6 x double], [6 x double]* %var_values49, i32 0, i32 0, !dbg !1148
  %call50 = call double @av_expr_eval(%struct.AVExpr* %53, double* %arraydecay, i8* null), !dbg !1150
  %55 = load i32, i32* %j, align 4, !dbg !1151
  %idxprom51 = sext i32 %55 to i64, !dbg !1152
  %56 = load %struct.AVFrame*, %struct.AVFrame** %samplesref, align 8, !dbg !1152
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %56, i32 0, i32 2, !dbg !1153
  %57 = load i8**, i8*** %extended_data, align 8, !dbg !1153
  %arrayidx52 = getelementptr inbounds i8*, i8** %57, i64 %idxprom51, !dbg !1152
  %58 = load i8*, i8** %arrayidx52, align 8, !dbg !1152
  %59 = bitcast i8* %58 to double*, !dbg !1154
  %60 = load i32, i32* %i, align 4, !dbg !1155
  %idx.ext = sext i32 %60 to i64, !dbg !1156
  %add.ptr = getelementptr inbounds double, double* %59, i64 %idx.ext, !dbg !1156
  store double %call50, double* %add.ptr, align 8, !dbg !1157
  br label %for.inc, !dbg !1158

for.inc:                                          ; preds = %for.body47
  %61 = load i32, i32* %j, align 4, !dbg !1159
  %inc = add nsw i32 %61, 1, !dbg !1159
  store i32 %inc, i32* %j, align 4, !dbg !1159
  br label %for.cond44, !dbg !1161, !llvm.loop !1162

for.end:                                          ; preds = %for.cond44
  br label %for.inc53, !dbg !1164

for.inc53:                                        ; preds = %for.end
  %62 = load i32, i32* %i, align 4, !dbg !1165
  %inc54 = add nsw i32 %62, 1, !dbg !1165
  store i32 %inc54, i32* %i, align 4, !dbg !1165
  %63 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1167
  %n55 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %63, i32 0, i32 13, !dbg !1168
  %64 = load i64, i64* %n55, align 8, !dbg !1169
  %inc56 = add i64 %64, 1, !dbg !1169
  store i64 %inc56, i64* %n55, align 8, !dbg !1169
  br label %for.cond, !dbg !1170, !llvm.loop !1171

for.end57:                                        ; preds = %for.cond
  %65 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1173
  %pts58 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %65, i32 0, i32 8, !dbg !1174
  %66 = load i64, i64* %pts58, align 8, !dbg !1174
  %67 = load %struct.AVFrame*, %struct.AVFrame** %samplesref, align 8, !dbg !1175
  %pts59 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %67, i32 0, i32 10, !dbg !1176
  store i64 %66, i64* %pts59, align 8, !dbg !1177
  %68 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1178
  %sample_rate60 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %68, i32 0, i32 2, !dbg !1179
  %69 = load i32, i32* %sample_rate60, align 8, !dbg !1179
  %70 = load %struct.AVFrame*, %struct.AVFrame** %samplesref, align 8, !dbg !1180
  %sample_rate61 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %70, i32 0, i32 23, !dbg !1181
  store i32 %69, i32* %sample_rate61, align 8, !dbg !1182
  %71 = load i32, i32* %nb_samples, align 4, !dbg !1183
  %conv62 = sext i32 %71 to i64, !dbg !1183
  %72 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1184
  %pts63 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %72, i32 0, i32 8, !dbg !1185
  %73 = load i64, i64* %pts63, align 8, !dbg !1186
  %add = add nsw i64 %73, %conv62, !dbg !1186
  store i64 %add, i64* %pts63, align 8, !dbg !1186
  %74 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1187
  %75 = load %struct.AVFrame*, %struct.AVFrame** %samplesref, align 8, !dbg !1188
  %call64 = call i32 @ff_filter_frame(%struct.AVFilterLink* %74, %struct.AVFrame* %75), !dbg !1189
  store i32 %call64, i32* %retval, align 4, !dbg !1190
  br label %return, !dbg !1190

return:                                           ; preds = %for.end57, %if.then32, %if.then26, %if.then
  %76 = load i32, i32* %retval, align 4, !dbg !1191
  ret i32 %76, !dbg !1191
}

; Function Attrs: nounwind uwtable
define internal i32 @config_props(%struct.AVFilterLink* %outlink) #1 !dbg !1192 {
entry:
  %outlink.addr = alloca %struct.AVFilterLink*, align 8
  %eval = alloca %struct.EvalContext*, align 8
  %buf = alloca [128 x i8], align 16
  %.compoundliteral = alloca %struct.AVRational, align 4
  store %struct.AVFilterLink* %outlink, %struct.AVFilterLink** %outlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink.addr, metadata !1193, metadata !655), !dbg !1194
  call void @llvm.dbg.declare(metadata %struct.EvalContext** %eval, metadata !1195, metadata !655), !dbg !1196
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1197
  %src = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 0, !dbg !1198
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %src, align 8, !dbg !1198
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %1, i32 0, i32 9, !dbg !1199
  %2 = load i8*, i8** %priv, align 8, !dbg !1199
  %3 = bitcast i8* %2 to %struct.EvalContext*, !dbg !1197
  store %struct.EvalContext* %3, %struct.EvalContext** %eval, align 8, !dbg !1196
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !1200, metadata !655), !dbg !1204
  %4 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1205
  %time_base = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %4, i32 0, i32 11, !dbg !1206
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !1207
  store i32 1, i32* %num, align 4, !dbg !1207
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !1207
  %5 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1208
  %sample_rate = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %5, i32 0, i32 2, !dbg !1209
  %6 = load i32, i32* %sample_rate, align 8, !dbg !1209
  store i32 %6, i32* %den, align 4, !dbg !1207
  %7 = bitcast %struct.AVRational* %time_base to i8*, !dbg !1210
  %8 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !1210
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 8, i32 4, i1 false), !dbg !1210
  %9 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1211
  %sample_rate1 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %9, i32 0, i32 2, !dbg !1212
  %10 = load i32, i32* %sample_rate1, align 8, !dbg !1212
  %11 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1213
  %sample_rate2 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %11, i32 0, i32 9, !dbg !1214
  store i32 %10, i32* %sample_rate2, align 8, !dbg !1215
  %12 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1216
  %sample_rate3 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %12, i32 0, i32 2, !dbg !1217
  %13 = load i32, i32* %sample_rate3, align 8, !dbg !1217
  %conv = sitofp i32 %13 to double, !dbg !1216
  %14 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1218
  %var_values = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %14, i32 0, i32 14, !dbg !1219
  %arrayidx = getelementptr inbounds [6 x double], [6 x double]* %var_values, i64 0, i64 5, !dbg !1218
  store double %conv, double* %arrayidx, align 8, !dbg !1220
  %15 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1221
  %var_values4 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %15, i32 0, i32 14, !dbg !1222
  %arrayidx5 = getelementptr inbounds [6 x double], [6 x double]* %var_values4, i64 0, i64 2, !dbg !1221
  store double 0x7FF8000000000000, double* %arrayidx5, align 8, !dbg !1223
  %16 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1224
  %channels = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %16, i32 0, i32 29, !dbg !1225
  %17 = load i32, i32* %channels, align 4, !dbg !1225
  %conv6 = sitofp i32 %17 to double, !dbg !1224
  %18 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1226
  %var_values7 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %18, i32 0, i32 14, !dbg !1227
  %arrayidx8 = getelementptr inbounds [6 x double], [6 x double]* %var_values7, i64 0, i64 3, !dbg !1226
  store double %conv6, double* %arrayidx8, align 8, !dbg !1228
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !1229
  %19 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1230
  %chlayout = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %19, i32 0, i32 3, !dbg !1231
  %20 = load i64, i64* %chlayout, align 8, !dbg !1231
  call void @av_get_channel_layout_string(i8* %arraydecay, i32 128, i32 0, i64 %20), !dbg !1232
  %21 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1233
  %src9 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %21, i32 0, i32 0, !dbg !1234
  %22 = load %struct.AVFilterContext*, %struct.AVFilterContext** %src9, align 8, !dbg !1234
  %23 = bitcast %struct.AVFilterContext* %22 to i8*, !dbg !1233
  %24 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1235
  %sample_rate10 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %24, i32 0, i32 2, !dbg !1236
  %25 = load i32, i32* %sample_rate10, align 8, !dbg !1236
  %arraydecay11 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0, !dbg !1237
  %26 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1238
  %duration = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %26, i32 0, i32 12, !dbg !1239
  %27 = load i64, i64* %duration, align 8, !dbg !1239
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 40, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i32 0, i32 0), i32 %25, i8* %arraydecay11, i64 %27), !dbg !1240
  ret i32 0, !dbg !1241
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nounwind readnone
declare i64 @av_rescale(i64, i64, i64) #3

declare %struct.AVFrame* @ff_get_audio_buffer(%struct.AVFilterLink*, i32) #4

declare double @av_expr_eval(%struct.AVExpr*, double*, i8*) #4

declare i32 @ff_filter_frame(%struct.AVFilterLink*, %struct.AVFrame*) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

declare void @av_get_channel_layout_string(i8*, i32, i32, i64) #4

declare void @av_log(i8*, i32, i8*, ...) #4

declare i8* @av_default_item_name(i8*) #4

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #6

declare i32 @ff_parse_channel_layout(i64*, i32*, i8*, i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @parse_channel_expressions(%struct.AVFilterContext* %ctx, i32 %expected_nb_channels) #1 !dbg !1242 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %expected_nb_channels.addr = alloca i32, align 4
  %eval = alloca %struct.EvalContext*, align 8
  %args1 = alloca i8*, align 8
  %expr = alloca i8*, align 8
  %last_expr = alloca i8*, align 8
  %buf = alloca i8*, align 8
  %func1 = alloca double (i8*, double)**, align 8
  %func1_names = alloca i8**, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !1245, metadata !655), !dbg !1246
  store i32 %expected_nb_channels, i32* %expected_nb_channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %expected_nb_channels.addr, metadata !1247, metadata !655), !dbg !1248
  call void @llvm.dbg.declare(metadata %struct.EvalContext** %eval, metadata !1249, metadata !655), !dbg !1250
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1251
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !1252
  %1 = load i8*, i8** %priv, align 8, !dbg !1252
  %2 = bitcast i8* %1 to %struct.EvalContext*, !dbg !1251
  store %struct.EvalContext* %2, %struct.EvalContext** %eval, align 8, !dbg !1250
  call void @llvm.dbg.declare(metadata i8** %args1, metadata !1253, metadata !655), !dbg !1254
  %3 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1255
  %exprs = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %3, i32 0, i32 10, !dbg !1256
  %4 = load i8*, i8** %exprs, align 8, !dbg !1256
  %call = call noalias i8* @av_strdup(i8* %4), !dbg !1257
  store i8* %call, i8** %args1, align 8, !dbg !1254
  call void @llvm.dbg.declare(metadata i8** %expr, metadata !1258, metadata !655), !dbg !1259
  call void @llvm.dbg.declare(metadata i8** %last_expr, metadata !1260, metadata !655), !dbg !1261
  store i8* null, i8** %last_expr, align 8, !dbg !1261
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !1262, metadata !655), !dbg !1263
  call void @llvm.dbg.declare(metadata double (i8*, double)*** %func1, metadata !1264, metadata !655), !dbg !1266
  store double (i8*, double)** null, double (i8*, double)*** %func1, align 8, !dbg !1266
  call void @llvm.dbg.declare(metadata i8*** %func1_names, metadata !1267, metadata !655), !dbg !1269
  store i8** null, i8*** %func1_names, align 8, !dbg !1269
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1270, metadata !655), !dbg !1271
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1272, metadata !655), !dbg !1273
  store i32 0, i32* %ret, align 4, !dbg !1273
  %5 = load i8*, i8** %args1, align 8, !dbg !1274
  %tobool = icmp ne i8* %5, null, !dbg !1274
  br i1 %tobool, label %if.end, label %if.then, !dbg !1276

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !1277
  br label %return, !dbg !1277

if.end:                                           ; preds = %entry
  %6 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1278
  %exprs1 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %6, i32 0, i32 10, !dbg !1280
  %7 = load i8*, i8** %exprs1, align 8, !dbg !1280
  %tobool2 = icmp ne i8* %7, null, !dbg !1278
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !1281

if.then3:                                         ; preds = %if.end
  %8 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1282
  %9 = bitcast %struct.AVFilterContext* %8 to i8*, !dbg !1282
  call void (i8*, i32, i8*, ...) @av_log(i8* %9, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.24, i32 0, i32 0)), !dbg !1284
  store i32 -22, i32* %retval, align 4, !dbg !1285
  br label %return, !dbg !1285

if.end4:                                          ; preds = %if.end
  %10 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1286
  %filter = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %10, i32 0, i32 1, !dbg !1288
  %11 = load %struct.AVFilter*, %struct.AVFilter** %filter, align 8, !dbg !1288
  %name = getelementptr inbounds %struct.AVFilter, %struct.AVFilter* %11, i32 0, i32 0, !dbg !1289
  %12 = load i8*, i8** %name, align 8, !dbg !1289
  %call5 = call i32 @strcmp(i8* %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0)) #8, !dbg !1290
  %tobool6 = icmp ne i32 %call5, 0, !dbg !1290
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !1291

if.then7:                                         ; preds = %if.end4
  store double (i8*, double)** getelementptr inbounds ([2 x double (i8*, double)*], [2 x double (i8*, double)*]* @aeval_func1, i32 0, i32 0), double (i8*, double)*** %func1, align 8, !dbg !1292
  store i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @aeval_func1_names, i32 0, i32 0), i8*** %func1_names, align 8, !dbg !1294
  br label %if.end8, !dbg !1295

if.end8:                                          ; preds = %if.then7, %if.end4
  store i32 0, i32* %i, align 4, !dbg !1296
  br label %for.cond, !dbg !1298

for.cond:                                         ; preds = %for.inc, %if.end8
  %13 = load i32, i32* %i, align 4, !dbg !1299
  %14 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1302
  %nb_channels = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %14, i32 0, i32 5, !dbg !1303
  %15 = load i32, i32* %nb_channels, align 8, !dbg !1303
  %cmp = icmp slt i32 %13, %15, !dbg !1304
  br i1 %cmp, label %for.body, label %for.end, !dbg !1305

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !1306
  %idxprom = sext i32 %16 to i64, !dbg !1308
  %17 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1308
  %expr9 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %17, i32 0, i32 9, !dbg !1309
  %18 = load %struct.AVExpr**, %struct.AVExpr*** %expr9, align 8, !dbg !1309
  %arrayidx = getelementptr inbounds %struct.AVExpr*, %struct.AVExpr** %18, i64 %idxprom, !dbg !1308
  %19 = load %struct.AVExpr*, %struct.AVExpr** %arrayidx, align 8, !dbg !1308
  call void @av_expr_free(%struct.AVExpr* %19), !dbg !1310
  %20 = load i32, i32* %i, align 4, !dbg !1311
  %idxprom10 = sext i32 %20 to i64, !dbg !1312
  %21 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1312
  %expr11 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %21, i32 0, i32 9, !dbg !1313
  %22 = load %struct.AVExpr**, %struct.AVExpr*** %expr11, align 8, !dbg !1313
  %arrayidx12 = getelementptr inbounds %struct.AVExpr*, %struct.AVExpr** %22, i64 %idxprom10, !dbg !1312
  store %struct.AVExpr* null, %struct.AVExpr** %arrayidx12, align 8, !dbg !1314
  br label %for.inc, !dbg !1315

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !1316
  %inc = add nsw i32 %23, 1, !dbg !1316
  store i32 %inc, i32* %i, align 4, !dbg !1316
  br label %for.cond, !dbg !1318, !llvm.loop !1319

for.end:                                          ; preds = %for.cond
  %24 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1321
  %expr13 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %24, i32 0, i32 9, !dbg !1322
  %25 = bitcast %struct.AVExpr*** %expr13 to i8*, !dbg !1323
  call void @av_freep(i8* %25), !dbg !1324
  %26 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1325
  %nb_channels14 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %26, i32 0, i32 5, !dbg !1326
  store i32 0, i32* %nb_channels14, align 8, !dbg !1327
  %27 = load i8*, i8** %args1, align 8, !dbg !1328
  store i8* %27, i8** %buf, align 8, !dbg !1329
  br label %while.cond, !dbg !1330

while.cond:                                       ; preds = %do.end, %for.end
  %28 = load i8*, i8** %buf, align 8, !dbg !1331
  %call15 = call i8* @av_strtok(i8* %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8** %buf), !dbg !1333
  store i8* %call15, i8** %expr, align 8, !dbg !1334
  %tobool16 = icmp ne i8* %call15, null, !dbg !1335
  br i1 %tobool16, label %while.body, label %while.end, !dbg !1335

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !1336, !llvm.loop !1338

do.body:                                          ; preds = %while.body
  %29 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1339
  %expr17 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %29, i32 0, i32 9, !dbg !1343
  %30 = bitcast %struct.AVExpr*** %expr17 to i8**, !dbg !1344
  %31 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1345
  %nb_channels18 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %31, i32 0, i32 5, !dbg !1346
  %call19 = call i8* @av_dynarray2_add(i8** %30, i32* %nb_channels18, i64 8, i8* null), !dbg !1347
  %tobool20 = icmp ne i8* %call19, null, !dbg !1347
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !1348

if.then21:                                        ; preds = %do.body
  store i32 -12, i32* %ret, align 4, !dbg !1349
  br label %end, !dbg !1352

if.end22:                                         ; preds = %do.body
  %32 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1353
  %nb_channels23 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %32, i32 0, i32 5, !dbg !1355
  %33 = load i32, i32* %nb_channels23, align 8, !dbg !1355
  %sub = sub nsw i32 %33, 1, !dbg !1356
  %idxprom24 = sext i32 %sub to i64, !dbg !1357
  %34 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1357
  %expr25 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %34, i32 0, i32 9, !dbg !1358
  %35 = load %struct.AVExpr**, %struct.AVExpr*** %expr25, align 8, !dbg !1358
  %arrayidx26 = getelementptr inbounds %struct.AVExpr*, %struct.AVExpr** %35, i64 %idxprom24, !dbg !1357
  store %struct.AVExpr* null, %struct.AVExpr** %arrayidx26, align 8, !dbg !1359
  %36 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1360
  %nb_channels27 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %36, i32 0, i32 5, !dbg !1361
  %37 = load i32, i32* %nb_channels27, align 8, !dbg !1361
  %sub28 = sub nsw i32 %37, 1, !dbg !1362
  %idxprom29 = sext i32 %sub28 to i64, !dbg !1363
  %38 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1363
  %expr30 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %38, i32 0, i32 9, !dbg !1364
  %39 = load %struct.AVExpr**, %struct.AVExpr*** %expr30, align 8, !dbg !1364
  %arrayidx31 = getelementptr inbounds %struct.AVExpr*, %struct.AVExpr** %39, i64 %idxprom29, !dbg !1363
  %40 = load i8*, i8** %expr, align 8, !dbg !1365
  %41 = load i8**, i8*** %func1_names, align 8, !dbg !1366
  %42 = load double (i8*, double)**, double (i8*, double)*** %func1, align 8, !dbg !1367
  %43 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1368
  %44 = bitcast %struct.AVFilterContext* %43 to i8*, !dbg !1368
  %call32 = call i32 @av_expr_parse(%struct.AVExpr** %arrayidx31, i8* %40, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @var_names, i32 0, i32 0), i8** %41, double (i8*, double)** %42, i8** null, double (i8*, double, double)** null, i32 0, i8* %44), !dbg !1369
  store i32 %call32, i32* %ret, align 4, !dbg !1370
  %45 = load i32, i32* %ret, align 4, !dbg !1371
  %cmp33 = icmp slt i32 %45, 0, !dbg !1372
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !1371

if.then34:                                        ; preds = %if.end22
  br label %end, !dbg !1373

if.end35:                                         ; preds = %if.end22
  br label %do.end, !dbg !1376

do.end:                                           ; preds = %if.end35
  %46 = load i8*, i8** %expr, align 8, !dbg !1378
  store i8* %46, i8** %last_expr, align 8, !dbg !1379
  br label %while.cond, !dbg !1380, !llvm.loop !1382

while.end:                                        ; preds = %while.cond
  %47 = load i32, i32* %expected_nb_channels.addr, align 4, !dbg !1383
  %48 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1385
  %nb_channels36 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %48, i32 0, i32 5, !dbg !1386
  %49 = load i32, i32* %nb_channels36, align 8, !dbg !1386
  %cmp37 = icmp sgt i32 %47, %49, !dbg !1387
  br i1 %cmp37, label %if.then38, label %if.end68, !dbg !1388

if.then38:                                        ; preds = %while.end
  %50 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1389
  %nb_channels39 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %50, i32 0, i32 5, !dbg !1391
  %51 = load i32, i32* %nb_channels39, align 8, !dbg !1391
  store i32 %51, i32* %i, align 4, !dbg !1392
  br label %for.cond40, !dbg !1393

for.cond40:                                       ; preds = %for.inc65, %if.then38
  %52 = load i32, i32* %i, align 4, !dbg !1394
  %53 = load i32, i32* %expected_nb_channels.addr, align 4, !dbg !1397
  %cmp41 = icmp slt i32 %52, %53, !dbg !1398
  br i1 %cmp41, label %for.body42, label %for.end67, !dbg !1399

for.body42:                                       ; preds = %for.cond40
  br label %do.body43, !dbg !1400, !llvm.loop !1401

do.body43:                                        ; preds = %for.body42
  %54 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1402
  %expr44 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %54, i32 0, i32 9, !dbg !1406
  %55 = bitcast %struct.AVExpr*** %expr44 to i8**, !dbg !1407
  %56 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1408
  %nb_channels45 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %56, i32 0, i32 5, !dbg !1409
  %call46 = call i8* @av_dynarray2_add(i8** %55, i32* %nb_channels45, i64 8, i8* null), !dbg !1410
  %tobool47 = icmp ne i8* %call46, null, !dbg !1410
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !1411

if.then48:                                        ; preds = %do.body43
  store i32 -12, i32* %ret, align 4, !dbg !1412
  br label %end, !dbg !1415

if.end49:                                         ; preds = %do.body43
  %57 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1416
  %nb_channels50 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %57, i32 0, i32 5, !dbg !1418
  %58 = load i32, i32* %nb_channels50, align 8, !dbg !1418
  %sub51 = sub nsw i32 %58, 1, !dbg !1419
  %idxprom52 = sext i32 %sub51 to i64, !dbg !1420
  %59 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1420
  %expr53 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %59, i32 0, i32 9, !dbg !1421
  %60 = load %struct.AVExpr**, %struct.AVExpr*** %expr53, align 8, !dbg !1421
  %arrayidx54 = getelementptr inbounds %struct.AVExpr*, %struct.AVExpr** %60, i64 %idxprom52, !dbg !1420
  store %struct.AVExpr* null, %struct.AVExpr** %arrayidx54, align 8, !dbg !1422
  %61 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1423
  %nb_channels55 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %61, i32 0, i32 5, !dbg !1424
  %62 = load i32, i32* %nb_channels55, align 8, !dbg !1424
  %sub56 = sub nsw i32 %62, 1, !dbg !1425
  %idxprom57 = sext i32 %sub56 to i64, !dbg !1426
  %63 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1426
  %expr58 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %63, i32 0, i32 9, !dbg !1427
  %64 = load %struct.AVExpr**, %struct.AVExpr*** %expr58, align 8, !dbg !1427
  %arrayidx59 = getelementptr inbounds %struct.AVExpr*, %struct.AVExpr** %64, i64 %idxprom57, !dbg !1426
  %65 = load i8*, i8** %last_expr, align 8, !dbg !1428
  %66 = load i8**, i8*** %func1_names, align 8, !dbg !1429
  %67 = load double (i8*, double)**, double (i8*, double)*** %func1, align 8, !dbg !1430
  %68 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1431
  %69 = bitcast %struct.AVFilterContext* %68 to i8*, !dbg !1431
  %call60 = call i32 @av_expr_parse(%struct.AVExpr** %arrayidx59, i8* %65, i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @var_names, i32 0, i32 0), i8** %66, double (i8*, double)** %67, i8** null, double (i8*, double, double)** null, i32 0, i8* %69), !dbg !1432
  store i32 %call60, i32* %ret, align 4, !dbg !1433
  %70 = load i32, i32* %ret, align 4, !dbg !1434
  %cmp61 = icmp slt i32 %70, 0, !dbg !1435
  br i1 %cmp61, label %if.then62, label %if.end63, !dbg !1434

if.then62:                                        ; preds = %if.end49
  br label %end, !dbg !1436

if.end63:                                         ; preds = %if.end49
  br label %do.end64, !dbg !1439

do.end64:                                         ; preds = %if.end63
  br label %for.inc65, !dbg !1441

for.inc65:                                        ; preds = %do.end64
  %71 = load i32, i32* %i, align 4, !dbg !1443
  %inc66 = add nsw i32 %71, 1, !dbg !1443
  store i32 %inc66, i32* %i, align 4, !dbg !1443
  br label %for.cond40, !dbg !1445, !llvm.loop !1446

for.end67:                                        ; preds = %for.cond40
  br label %if.end68, !dbg !1448

if.end68:                                         ; preds = %for.end67, %while.end
  %72 = load i32, i32* %expected_nb_channels.addr, align 4, !dbg !1450
  %cmp69 = icmp sgt i32 %72, 0, !dbg !1452
  br i1 %cmp69, label %land.lhs.true, label %if.end74, !dbg !1453

land.lhs.true:                                    ; preds = %if.end68
  %73 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1454
  %nb_channels70 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %73, i32 0, i32 5, !dbg !1456
  %74 = load i32, i32* %nb_channels70, align 8, !dbg !1456
  %75 = load i32, i32* %expected_nb_channels.addr, align 4, !dbg !1457
  %cmp71 = icmp ne i32 %74, %75, !dbg !1458
  br i1 %cmp71, label %if.then72, label %if.end74, !dbg !1459

if.then72:                                        ; preds = %land.lhs.true
  %76 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1460
  %77 = bitcast %struct.AVFilterContext* %76 to i8*, !dbg !1460
  %78 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1462
  %nb_channels73 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %78, i32 0, i32 5, !dbg !1463
  %79 = load i32, i32* %nb_channels73, align 8, !dbg !1463
  %80 = load i32, i32* %expected_nb_channels.addr, align 4, !dbg !1464
  call void (i8*, i32, i8*, ...) @av_log(i8* %77, i32 16, i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.26, i32 0, i32 0), i32 %79, i32 %80), !dbg !1465
  store i32 -22, i32* %ret, align 4, !dbg !1466
  br label %end, !dbg !1467

if.end74:                                         ; preds = %land.lhs.true, %if.end68
  br label %end, !dbg !1468

end:                                              ; preds = %if.end74, %if.then72, %if.then62, %if.then48, %if.then34, %if.then21
  %81 = load i8*, i8** %args1, align 8, !dbg !1470
  call void @av_free(i8* %81), !dbg !1471
  %82 = load i32, i32* %ret, align 4, !dbg !1472
  store i32 %82, i32* %retval, align 4, !dbg !1473
  br label %return, !dbg !1473

return:                                           ; preds = %end, %if.then3, %if.then
  %83 = load i32, i32* %retval, align 4, !dbg !1474
  ret i32 %83, !dbg !1474
}

declare i32 @av_get_channel_layout_nb_channels(i64) #4

declare i64 @av_get_default_channel_layout(i32) #4

declare i32 @ff_parse_sample_rate(i32*, i8*, i8*) #4

declare noalias i8* @av_strdup(i8*) #4

declare void @av_expr_free(%struct.AVExpr*) #4

declare void @av_freep(i8*) #4

declare i8* @av_strtok(i8*, i8*, i8**) #4

declare i8* @av_dynarray2_add(i8**, i32*, i64, i8*) #4

declare i32 @av_expr_parse(%struct.AVExpr**, i8*, i8**, i8**, double (i8*, double)**, i8**, double (i8*, double, double)**, i32, i8*) #4

declare void @av_free(i8*) #4

; Function Attrs: nounwind uwtable
define internal double @val(i8* %priv, double %ch) #1 !dbg !1475 {
entry:
  %priv.addr = alloca i8*, align 8
  %ch.addr = alloca double, align 8
  %eval = alloca %struct.EvalContext*, align 8
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !1476, metadata !655), !dbg !1477
  store double %ch, double* %ch.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ch.addr, metadata !1478, metadata !655), !dbg !1479
  call void @llvm.dbg.declare(metadata %struct.EvalContext** %eval, metadata !1480, metadata !655), !dbg !1481
  %0 = load i8*, i8** %priv.addr, align 8, !dbg !1482
  %1 = bitcast i8* %0 to %struct.EvalContext*, !dbg !1482
  store %struct.EvalContext* %1, %struct.EvalContext** %eval, align 8, !dbg !1481
  %2 = load double, double* %ch.addr, align 8, !dbg !1483
  %conv = fptosi double %2 to i32, !dbg !1484
  %3 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1485
  %nb_in_channels = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %3, i32 0, i32 6, !dbg !1486
  %4 = load i32, i32* %nb_in_channels, align 4, !dbg !1486
  %sub = sub nsw i32 %4, 1, !dbg !1487
  %cmp = icmp sgt i32 %conv, %sub, !dbg !1488
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !1489

cond.true:                                        ; preds = %entry
  %5 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1490
  %nb_in_channels2 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %5, i32 0, i32 6, !dbg !1492
  %6 = load i32, i32* %nb_in_channels2, align 4, !dbg !1492
  %sub3 = sub nsw i32 %6, 1, !dbg !1493
  br label %cond.end, !dbg !1494

cond.false:                                       ; preds = %entry
  %7 = load double, double* %ch.addr, align 8, !dbg !1495
  %conv4 = fptosi double %7 to i32, !dbg !1497
  br label %cond.end, !dbg !1498

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub3, %cond.true ], [ %conv4, %cond.false ], !dbg !1499
  %idxprom = sext i32 %cond to i64, !dbg !1501
  %8 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1501
  %channel_values = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %8, i32 0, i32 15, !dbg !1502
  %9 = load double*, double** %channel_values, align 8, !dbg !1502
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom, !dbg !1501
  %10 = load double, double* %arrayidx, align 8, !dbg !1501
  ret double %10, !dbg !1503
}

declare %struct.AVFilterFormats* @ff_make_format_list(i32*) #4

declare i32 @ff_set_common_formats(%struct.AVFilterContext*, %struct.AVFilterFormats*) #4

declare %struct.AVFilterChannelLayouts* @avfilter_make_format64_list(i64*) #4

declare i32 @ff_set_common_channel_layouts(%struct.AVFilterContext*, %struct.AVFilterChannelLayouts*) #4

declare i32 @ff_set_common_samplerates(%struct.AVFilterContext*, %struct.AVFilterFormats*) #4

; Function Attrs: nounwind uwtable
define internal i32 @filter_frame(%struct.AVFilterLink* %inlink, %struct.AVFrame* %in) #1 !dbg !1504 {
entry:
  %retval = alloca i32, align 4
  %inlink.addr = alloca %struct.AVFilterLink*, align 8
  %in.addr = alloca %struct.AVFrame*, align 8
  %eval = alloca %struct.EvalContext*, align 8
  %outlink = alloca %struct.AVFilterLink*, align 8
  %nb_samples = alloca i32, align 4
  %out = alloca %struct.AVFrame*, align 8
  %t0 = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.AVFilterLink* %inlink, %struct.AVFilterLink** %inlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %inlink.addr, metadata !1505, metadata !655), !dbg !1506
  store %struct.AVFrame* %in, %struct.AVFrame** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %in.addr, metadata !1507, metadata !655), !dbg !1508
  call void @llvm.dbg.declare(metadata %struct.EvalContext** %eval, metadata !1509, metadata !655), !dbg !1510
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1511
  %dst = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 2, !dbg !1512
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %dst, align 8, !dbg !1512
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %1, i32 0, i32 9, !dbg !1513
  %2 = load i8*, i8** %priv, align 8, !dbg !1513
  %3 = bitcast i8* %2 to %struct.EvalContext*, !dbg !1511
  store %struct.EvalContext* %3, %struct.EvalContext** %eval, align 8, !dbg !1510
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink, metadata !1514, metadata !655), !dbg !1515
  %4 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1516
  %dst1 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %4, i32 0, i32 2, !dbg !1517
  %5 = load %struct.AVFilterContext*, %struct.AVFilterContext** %dst1, align 8, !dbg !1517
  %outputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %5, i32 0, i32 7, !dbg !1518
  %6 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %outputs, align 8, !dbg !1518
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %6, i64 0, !dbg !1516
  %7 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !1516
  store %struct.AVFilterLink* %7, %struct.AVFilterLink** %outlink, align 8, !dbg !1515
  call void @llvm.dbg.declare(metadata i32* %nb_samples, metadata !1519, metadata !655), !dbg !1520
  %8 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1521
  %nb_samples2 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %8, i32 0, i32 5, !dbg !1522
  %9 = load i32, i32* %nb_samples2, align 8, !dbg !1522
  store i32 %9, i32* %nb_samples, align 4, !dbg !1520
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out, metadata !1523, metadata !655), !dbg !1524
  call void @llvm.dbg.declare(metadata double* %t0, metadata !1525, metadata !655), !dbg !1526
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1527, metadata !655), !dbg !1528
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1529, metadata !655), !dbg !1530
  %10 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1531
  %11 = load i32, i32* %nb_samples, align 4, !dbg !1532
  %call = call %struct.AVFrame* @ff_get_audio_buffer(%struct.AVFilterLink* %10, i32 %11), !dbg !1533
  store %struct.AVFrame* %call, %struct.AVFrame** %out, align 8, !dbg !1534
  %12 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1535
  %tobool = icmp ne %struct.AVFrame* %12, null, !dbg !1535
  br i1 %tobool, label %if.end, label %if.then, !dbg !1537

if.then:                                          ; preds = %entry
  call void @av_frame_free(%struct.AVFrame** %in.addr), !dbg !1538
  store i32 -12, i32* %retval, align 4, !dbg !1540
  br label %return, !dbg !1540

if.end:                                           ; preds = %entry
  %13 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1541
  %14 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1542
  %call3 = call i32 @av_frame_copy_props(%struct.AVFrame* %13, %struct.AVFrame* %14), !dbg !1543
  %15 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1544
  %pts = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %15, i32 0, i32 10, !dbg !1545
  %16 = load i64, i64* %pts, align 8, !dbg !1545
  %cmp = icmp eq i64 %16, -9223372036854775808, !dbg !1546
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !1547

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !1548

cond.false:                                       ; preds = %if.end
  %17 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1550
  %pts4 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %17, i32 0, i32 10, !dbg !1552
  %18 = load i64, i64* %pts4, align 8, !dbg !1552
  %conv = sitofp i64 %18 to double, !dbg !1553
  %19 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1554
  %time_base = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %19, i32 0, i32 11, !dbg !1555
  %20 = bitcast %struct.AVRational* %time_base to i64*, !dbg !1556
  %21 = load i64, i64* %20, align 8, !dbg !1556
  %call5 = call double @av_q2d(i64 %21), !dbg !1556
  %mul = fmul double %conv, %call5, !dbg !1557
  br label %cond.end, !dbg !1553

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 0x7FF8000000000000, %cond.true ], [ %mul, %cond.false ], !dbg !1558
  store double %cond, double* %t0, align 8, !dbg !1560
  store i32 0, i32* %i, align 4, !dbg !1561
  br label %for.cond, !dbg !1563

for.cond:                                         ; preds = %for.inc42, %cond.end
  %22 = load i32, i32* %i, align 4, !dbg !1564
  %23 = load i32, i32* %nb_samples, align 4, !dbg !1567
  %cmp6 = icmp slt i32 %22, %23, !dbg !1568
  br i1 %cmp6, label %for.body, label %for.end46, !dbg !1569

for.body:                                         ; preds = %for.cond
  %24 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1570
  %n = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %24, i32 0, i32 13, !dbg !1572
  %25 = load i64, i64* %n, align 8, !dbg !1572
  %conv8 = uitofp i64 %25 to double, !dbg !1570
  %26 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1573
  %var_values = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %26, i32 0, i32 14, !dbg !1574
  %arrayidx9 = getelementptr inbounds [6 x double], [6 x double]* %var_values, i64 0, i64 1, !dbg !1573
  store double %conv8, double* %arrayidx9, align 8, !dbg !1575
  %27 = load double, double* %t0, align 8, !dbg !1576
  %28 = load i32, i32* %i, align 4, !dbg !1577
  %conv10 = sitofp i32 %28 to double, !dbg !1577
  %mul11 = fmul double %conv10, 1.000000e+00, !dbg !1578
  %29 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1579
  %sample_rate = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %29, i32 0, i32 9, !dbg !1580
  %30 = load i32, i32* %sample_rate, align 8, !dbg !1580
  %conv12 = sitofp i32 %30 to double, !dbg !1579
  %div = fdiv double %mul11, %conv12, !dbg !1581
  %add = fadd double %27, %div, !dbg !1582
  %31 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1583
  %var_values13 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %31, i32 0, i32 14, !dbg !1584
  %arrayidx14 = getelementptr inbounds [6 x double], [6 x double]* %var_values13, i64 0, i64 4, !dbg !1583
  store double %add, double* %arrayidx14, align 8, !dbg !1585
  store i32 0, i32* %j, align 4, !dbg !1586
  br label %for.cond15, !dbg !1588

for.cond15:                                       ; preds = %for.inc, %for.body
  %32 = load i32, i32* %j, align 4, !dbg !1589
  %33 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !1592
  %channels = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %33, i32 0, i32 29, !dbg !1593
  %34 = load i32, i32* %channels, align 4, !dbg !1593
  %cmp16 = icmp slt i32 %32, %34, !dbg !1594
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !1595

for.body18:                                       ; preds = %for.cond15
  %35 = load i32, i32* %j, align 4, !dbg !1596
  %idxprom = sext i32 %35 to i64, !dbg !1597
  %36 = load %struct.AVFrame*, %struct.AVFrame** %in.addr, align 8, !dbg !1597
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %36, i32 0, i32 2, !dbg !1598
  %37 = load i8**, i8*** %extended_data, align 8, !dbg !1598
  %arrayidx19 = getelementptr inbounds i8*, i8** %37, i64 %idxprom, !dbg !1597
  %38 = load i8*, i8** %arrayidx19, align 8, !dbg !1597
  %39 = bitcast i8* %38 to double*, !dbg !1599
  %40 = load i32, i32* %i, align 4, !dbg !1600
  %idx.ext = sext i32 %40 to i64, !dbg !1601
  %add.ptr = getelementptr inbounds double, double* %39, i64 %idx.ext, !dbg !1601
  %41 = load double, double* %add.ptr, align 8, !dbg !1602
  %42 = load i32, i32* %j, align 4, !dbg !1603
  %idxprom20 = sext i32 %42 to i64, !dbg !1604
  %43 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1604
  %channel_values = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %43, i32 0, i32 15, !dbg !1605
  %44 = load double*, double** %channel_values, align 8, !dbg !1605
  %arrayidx21 = getelementptr inbounds double, double* %44, i64 %idxprom20, !dbg !1604
  store double %41, double* %arrayidx21, align 8, !dbg !1606
  br label %for.inc, !dbg !1604

for.inc:                                          ; preds = %for.body18
  %45 = load i32, i32* %j, align 4, !dbg !1607
  %inc = add nsw i32 %45, 1, !dbg !1607
  store i32 %inc, i32* %j, align 4, !dbg !1607
  br label %for.cond15, !dbg !1609, !llvm.loop !1610

for.end:                                          ; preds = %for.cond15
  store i32 0, i32* %j, align 4, !dbg !1612
  br label %for.cond22, !dbg !1614

for.cond22:                                       ; preds = %for.inc39, %for.end
  %46 = load i32, i32* %j, align 4, !dbg !1615
  %47 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1618
  %channels23 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %47, i32 0, i32 29, !dbg !1619
  %48 = load i32, i32* %channels23, align 4, !dbg !1619
  %cmp24 = icmp slt i32 %46, %48, !dbg !1620
  br i1 %cmp24, label %for.body26, label %for.end41, !dbg !1621

for.body26:                                       ; preds = %for.cond22
  %49 = load i32, i32* %j, align 4, !dbg !1622
  %conv27 = sitofp i32 %49 to double, !dbg !1622
  %50 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1624
  %var_values28 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %50, i32 0, i32 14, !dbg !1625
  %arrayidx29 = getelementptr inbounds [6 x double], [6 x double]* %var_values28, i64 0, i64 0, !dbg !1624
  store double %conv27, double* %arrayidx29, align 8, !dbg !1626
  %51 = load i32, i32* %j, align 4, !dbg !1627
  %idxprom30 = sext i32 %51 to i64, !dbg !1628
  %52 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1628
  %expr = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %52, i32 0, i32 9, !dbg !1629
  %53 = load %struct.AVExpr**, %struct.AVExpr*** %expr, align 8, !dbg !1629
  %arrayidx31 = getelementptr inbounds %struct.AVExpr*, %struct.AVExpr** %53, i64 %idxprom30, !dbg !1628
  %54 = load %struct.AVExpr*, %struct.AVExpr** %arrayidx31, align 8, !dbg !1628
  %55 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1630
  %var_values32 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %55, i32 0, i32 14, !dbg !1631
  %arraydecay = getelementptr inbounds [6 x double], [6 x double]* %var_values32, i32 0, i32 0, !dbg !1630
  %56 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1632
  %57 = bitcast %struct.EvalContext* %56 to i8*, !dbg !1632
  %call33 = call double @av_expr_eval(%struct.AVExpr* %54, double* %arraydecay, i8* %57), !dbg !1633
  %58 = load i32, i32* %j, align 4, !dbg !1634
  %idxprom34 = sext i32 %58 to i64, !dbg !1635
  %59 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1635
  %extended_data35 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %59, i32 0, i32 2, !dbg !1636
  %60 = load i8**, i8*** %extended_data35, align 8, !dbg !1636
  %arrayidx36 = getelementptr inbounds i8*, i8** %60, i64 %idxprom34, !dbg !1635
  %61 = load i8*, i8** %arrayidx36, align 8, !dbg !1635
  %62 = bitcast i8* %61 to double*, !dbg !1637
  %63 = load i32, i32* %i, align 4, !dbg !1638
  %idx.ext37 = sext i32 %63 to i64, !dbg !1639
  %add.ptr38 = getelementptr inbounds double, double* %62, i64 %idx.ext37, !dbg !1639
  store double %call33, double* %add.ptr38, align 8, !dbg !1640
  br label %for.inc39, !dbg !1641

for.inc39:                                        ; preds = %for.body26
  %64 = load i32, i32* %j, align 4, !dbg !1642
  %inc40 = add nsw i32 %64, 1, !dbg !1642
  store i32 %inc40, i32* %j, align 4, !dbg !1642
  br label %for.cond22, !dbg !1644, !llvm.loop !1645

for.end41:                                        ; preds = %for.cond22
  br label %for.inc42, !dbg !1647

for.inc42:                                        ; preds = %for.end41
  %65 = load i32, i32* %i, align 4, !dbg !1648
  %inc43 = add nsw i32 %65, 1, !dbg !1648
  store i32 %inc43, i32* %i, align 4, !dbg !1648
  %66 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1650
  %n44 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %66, i32 0, i32 13, !dbg !1651
  %67 = load i64, i64* %n44, align 8, !dbg !1652
  %inc45 = add i64 %67, 1, !dbg !1652
  store i64 %inc45, i64* %n44, align 8, !dbg !1652
  br label %for.cond, !dbg !1653, !llvm.loop !1654

for.end46:                                        ; preds = %for.cond
  call void @av_frame_free(%struct.AVFrame** %in.addr), !dbg !1656
  %68 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !1657
  %69 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !1658
  %call47 = call i32 @ff_filter_frame(%struct.AVFilterLink* %68, %struct.AVFrame* %69), !dbg !1659
  store i32 %call47, i32* %retval, align 4, !dbg !1660
  br label %return, !dbg !1660

return:                                           ; preds = %for.end46, %if.then
  %70 = load i32, i32* %retval, align 4, !dbg !1661
  ret i32 %70, !dbg !1661
}

declare void @av_frame_free(%struct.AVFrame**) #4

declare i32 @av_frame_copy_props(%struct.AVFrame*, %struct.AVFrame*) #4

; Function Attrs: inlinehint nounwind uwtable
define internal double @av_q2d(i64 %a.coerce) #7 !dbg !1662 {
entry:
  %a = alloca %struct.AVRational, align 4
  %0 = bitcast %struct.AVRational* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %a, metadata !1665, metadata !655), !dbg !1666
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 0, !dbg !1667
  %1 = load i32, i32* %num, align 4, !dbg !1667
  %conv = sitofp i32 %1 to double, !dbg !1668
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 1, !dbg !1669
  %2 = load i32, i32* %den, align 4, !dbg !1669
  %conv1 = sitofp i32 %2 to double, !dbg !1670
  %div = fdiv double %conv, %conv1, !dbg !1671
  ret double %div, !dbg !1672
}

; Function Attrs: nounwind uwtable
define internal i32 @aeval_config_output(%struct.AVFilterLink* %outlink) #1 !dbg !1673 {
entry:
  %retval = alloca i32, align 4
  %outlink.addr = alloca %struct.AVFilterLink*, align 8
  %ctx = alloca %struct.AVFilterContext*, align 8
  %eval = alloca %struct.EvalContext*, align 8
  %inlink = alloca %struct.AVFilterLink*, align 8
  %ret = alloca i32, align 4
  store %struct.AVFilterLink* %outlink, %struct.AVFilterLink** %outlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink.addr, metadata !1674, metadata !655), !dbg !1675
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx, metadata !1676, metadata !655), !dbg !1677
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1678
  %src = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 0, !dbg !1679
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %src, align 8, !dbg !1679
  store %struct.AVFilterContext* %1, %struct.AVFilterContext** %ctx, align 8, !dbg !1677
  call void @llvm.dbg.declare(metadata %struct.EvalContext** %eval, metadata !1680, metadata !655), !dbg !1681
  %2 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !1682
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %2, i32 0, i32 9, !dbg !1683
  %3 = load i8*, i8** %priv, align 8, !dbg !1683
  %4 = bitcast i8* %3 to %struct.EvalContext*, !dbg !1682
  store %struct.EvalContext* %4, %struct.EvalContext** %eval, align 8, !dbg !1681
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %inlink, metadata !1684, metadata !655), !dbg !1685
  %5 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !1686
  %inputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %5, i32 0, i32 4, !dbg !1687
  %6 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %inputs, align 8, !dbg !1687
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %6, i64 0, !dbg !1686
  %7 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !1686
  store %struct.AVFilterLink* %7, %struct.AVFilterLink** %inlink, align 8, !dbg !1685
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1688, metadata !655), !dbg !1689
  %8 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1690
  %same_chlayout = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %8, i32 0, i32 7, !dbg !1692
  %9 = load i32, i32* %same_chlayout, align 8, !dbg !1692
  %tobool = icmp ne i32 %9, 0, !dbg !1690
  br i1 %tobool, label %if.then, label %if.end2, !dbg !1693

if.then:                                          ; preds = %entry
  %10 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !1694
  %channel_layout = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %10, i32 0, i32 8, !dbg !1696
  %11 = load i64, i64* %channel_layout, align 8, !dbg !1696
  %12 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1697
  %chlayout = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %12, i32 0, i32 3, !dbg !1698
  store i64 %11, i64* %chlayout, align 8, !dbg !1699
  %13 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !1700
  %14 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !1702
  %channels = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %14, i32 0, i32 29, !dbg !1703
  %15 = load i32, i32* %channels, align 4, !dbg !1703
  %call = call i32 @parse_channel_expressions(%struct.AVFilterContext* %13, i32 %15), !dbg !1704
  store i32 %call, i32* %ret, align 4, !dbg !1705
  %cmp = icmp slt i32 %call, 0, !dbg !1706
  br i1 %cmp, label %if.then1, label %if.end, !dbg !1707

if.then1:                                         ; preds = %if.then
  %16 = load i32, i32* %ret, align 4, !dbg !1708
  store i32 %16, i32* %retval, align 4, !dbg !1709
  br label %return, !dbg !1709

if.end:                                           ; preds = %if.then
  br label %if.end2, !dbg !1710

if.end2:                                          ; preds = %if.end, %entry
  %17 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1711
  %n = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %17, i32 0, i32 13, !dbg !1712
  store i64 0, i64* %n, align 8, !dbg !1713
  %18 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !1714
  %channels3 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %18, i32 0, i32 29, !dbg !1715
  %19 = load i32, i32* %channels3, align 4, !dbg !1715
  %conv = sitofp i32 %19 to double, !dbg !1714
  %20 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1716
  %var_values = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %20, i32 0, i32 14, !dbg !1717
  %arrayidx4 = getelementptr inbounds [6 x double], [6 x double]* %var_values, i64 0, i64 2, !dbg !1716
  store double %conv, double* %arrayidx4, align 8, !dbg !1718
  %conv5 = fptosi double %conv to i32, !dbg !1716
  %21 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1719
  %nb_in_channels = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %21, i32 0, i32 6, !dbg !1720
  store i32 %conv5, i32* %nb_in_channels, align 4, !dbg !1721
  %22 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1722
  %channels6 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %22, i32 0, i32 29, !dbg !1723
  %23 = load i32, i32* %channels6, align 4, !dbg !1723
  %conv7 = sitofp i32 %23 to double, !dbg !1722
  %24 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1724
  %var_values8 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %24, i32 0, i32 14, !dbg !1725
  %arrayidx9 = getelementptr inbounds [6 x double], [6 x double]* %var_values8, i64 0, i64 3, !dbg !1724
  store double %conv7, double* %arrayidx9, align 8, !dbg !1726
  %25 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !1727
  %sample_rate = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %25, i32 0, i32 9, !dbg !1728
  %26 = load i32, i32* %sample_rate, align 8, !dbg !1728
  %conv10 = sitofp i32 %26 to double, !dbg !1727
  %27 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1729
  %var_values11 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %27, i32 0, i32 14, !dbg !1730
  %arrayidx12 = getelementptr inbounds [6 x double], [6 x double]* %var_values11, i64 0, i64 5, !dbg !1729
  store double %conv10, double* %arrayidx12, align 8, !dbg !1731
  %28 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1732
  %var_values13 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %28, i32 0, i32 14, !dbg !1733
  %arrayidx14 = getelementptr inbounds [6 x double], [6 x double]* %var_values13, i64 0, i64 4, !dbg !1732
  store double 0x7FF8000000000000, double* %arrayidx14, align 8, !dbg !1734
  %29 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1735
  %channel_values = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %29, i32 0, i32 15, !dbg !1736
  %30 = load double*, double** %channel_values, align 8, !dbg !1736
  %31 = bitcast double* %30 to i8*, !dbg !1735
  %32 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !1737
  %channels15 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %32, i32 0, i32 29, !dbg !1738
  %33 = load i32, i32* %channels15, align 4, !dbg !1738
  %conv16 = sext i32 %33 to i64, !dbg !1737
  %call17 = call i8* @av_realloc_f(i8* %31, i64 %conv16, i64 8), !dbg !1739
  %34 = bitcast i8* %call17 to double*, !dbg !1739
  %35 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1740
  %channel_values18 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %35, i32 0, i32 15, !dbg !1741
  store double* %34, double** %channel_values18, align 8, !dbg !1742
  %36 = load %struct.EvalContext*, %struct.EvalContext** %eval, align 8, !dbg !1743
  %channel_values19 = getelementptr inbounds %struct.EvalContext, %struct.EvalContext* %36, i32 0, i32 15, !dbg !1745
  %37 = load double*, double** %channel_values19, align 8, !dbg !1745
  %tobool20 = icmp ne double* %37, null, !dbg !1743
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !1746

if.then21:                                        ; preds = %if.end2
  store i32 -12, i32* %retval, align 4, !dbg !1747
  br label %return, !dbg !1747

if.end22:                                         ; preds = %if.end2
  store i32 0, i32* %retval, align 4, !dbg !1748
  br label %return, !dbg !1748

return:                                           ; preds = %if.end22, %if.then21, %if.then1
  %38 = load i32, i32* %retval, align 4, !dbg !1749
  ret i32 %38, !dbg !1749
}

declare i8* @av_realloc_f(i8*, i64, i64) #4

declare %struct.AVFilterChannelLayouts* @ff_all_channel_counts() #4

declare i32 @ff_channel_layouts_ref(%struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts**) #4

declare i32 @ff_add_channel_layout(%struct.AVFilterChannelLayouts**, i64) #4

declare %struct.AVFilterFormats* @ff_all_samplerates() #4

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!650, !651}
!llvm.ident = !{!652}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !607, globals: !609)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a/[inter]libavfilter--aeval.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!2 = !{!3, !13, !23, !47, !54, !72, !96, !115, !125, !147, !168, !580, !590}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !14)
!14 = !{!15, !16, !17, !18, !19, !20, !21, !22}
!15 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!16 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!17 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!18 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!19 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!20 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!21 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!22 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !24, line: 48, size: 32, align: 32, elements: !25)
!24 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!25 = !{!26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46}
!26 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!27 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!28 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!29 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!30 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!31 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!32 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!33 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!34 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!35 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!36 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!37 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!38 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!39 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!40 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!41 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!42 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!43 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!44 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!45 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!46 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !48, line: 516, size: 32, align: 32, elements: !49)
!48 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!49 = !{!50, !51, !52, !53}
!50 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!51 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!52 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!53 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !48, line: 440, size: 32, align: 32, elements: !55)
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71}
!56 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!57 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!58 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!59 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!60 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!61 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!62 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!63 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!64 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!65 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!66 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!67 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!68 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!69 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!70 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!71 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !48, line: 464, size: 32, align: 32, elements: !73)
!73 = !{!74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95}
!74 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!75 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!76 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!77 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!78 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!79 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!80 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!81 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!82 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!83 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!84 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!85 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!86 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!87 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!88 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!89 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!90 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!91 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!92 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!93 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!94 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!95 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !48, line: 493, size: 32, align: 32, elements: !97)
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114}
!98 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!99 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!100 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!101 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!102 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!103 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!104 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!105 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!106 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!107 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!108 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!109 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!110 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!111 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!112 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!113 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!114 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !48, line: 538, size: 32, align: 32, elements: !116)
!116 = !{!117, !118, !119, !120, !121, !122, !123, !124}
!117 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!118 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!119 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!120 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!121 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!122 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!123 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!124 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !126, line: 221, size: 32, align: 32, elements: !127)
!126 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!127 = !{!128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146}
!128 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!129 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!130 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!131 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!132 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!133 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!134 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!135 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!136 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!137 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!138 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!139 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!140 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!141 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!142 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!143 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!144 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!145 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!146 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !148, line: 29, size: 32, align: 32, elements: !149)
!148 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!149 = !{!150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167}
!150 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!151 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!152 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!153 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!154 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!155 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!156 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!157 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!158 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!159 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!160 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!161 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!162 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!163 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!164 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!165 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!166 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!167 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !170, file: !169, line: 503, size: 32, align: 32, elements: !576)
!169 = !DIFile(filename: "libavfilter/avfilter.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterLink", file: !169, line: 439, size: 493504, align: 64, elements: !171)
!171 = !{!172, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !537, !538, !539, !540, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !170, file: !169, line: 440, baseType: !173, size: 64, align: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64, align: 64)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterContext", file: !169, line: 67, baseType: !175)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterContext", file: !169, line: 338, size: 1344, align: 64, elements: !176)
!176 = !{!177, !264, !437, !438, !440, !442, !444, !445, !446, !447, !448, !488, !489, !495, !504, !505, !506, !508, !509, !510, !511, !512}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !175, file: !169, line: 339, baseType: !178, size: 64, align: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64, align: 64)
!179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !148, line: 143, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !148, line: 67, size: 640, align: 64, elements: !182)
!182 = !{!183, !187, !192, !223, !224, !225, !226, !230, !236, !238, !242}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !181, file: !148, line: 72, baseType: !184, size: 64, align: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64)
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !181, file: !148, line: 78, baseType: !188, size: 64, align: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64, align: 64)
!189 = !DISubroutineType(types: !190)
!190 = !{!184, !191}
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !181, file: !148, line: 85, baseType: !193, size: 64, align: 64, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64, align: 64)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !126, line: 246, size: 512, align: 64, elements: !196)
!196 = !{!197, !198, !199, !201, !202, !219, !220, !221, !222}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !195, file: !126, line: 247, baseType: !184, size: 64, align: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !195, file: !126, line: 253, baseType: !184, size: 64, align: 64, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !195, file: !126, line: 259, baseType: !200, size: 32, align: 32, offset: 128)
!200 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !195, file: !126, line: 260, baseType: !125, size: 32, align: 32, offset: 160)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !195, file: !126, line: 271, baseType: !203, size: 64, align: 64, offset: 192)
!203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !195, file: !126, line: 265, size: 64, align: 64, elements: !204)
!204 = !{!205, !209, !211, !212}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !203, file: !126, line: 266, baseType: !206, size: 64, align: 64)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !207, line: 197, baseType: !208)
!207 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!208 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !203, file: !126, line: 267, baseType: !210, size: 64, align: 64)
!210 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !203, file: !126, line: 268, baseType: !184, size: 64, align: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !203, file: !126, line: 270, baseType: !213, size: 64, align: 32)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !214, line: 61, baseType: !215)
!214 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !214, line: 58, size: 64, align: 32, elements: !216)
!216 = !{!217, !218}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !215, file: !214, line: 59, baseType: !200, size: 32, align: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !215, file: !214, line: 60, baseType: !200, size: 32, align: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !195, file: !126, line: 272, baseType: !210, size: 64, align: 64, offset: 256)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !195, file: !126, line: 273, baseType: !210, size: 64, align: 64, offset: 320)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !195, file: !126, line: 275, baseType: !200, size: 32, align: 32, offset: 384)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !195, file: !126, line: 300, baseType: !184, size: 64, align: 64, offset: 448)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !181, file: !148, line: 93, baseType: !200, size: 32, align: 32, offset: 192)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !181, file: !148, line: 99, baseType: !200, size: 32, align: 32, offset: 224)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !181, file: !148, line: 108, baseType: !200, size: 32, align: 32, offset: 256)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !181, file: !148, line: 113, baseType: !227, size: 64, align: 64, offset: 320)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64, align: 64)
!228 = !DISubroutineType(types: !229)
!229 = !{!191, !191, !191}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !181, file: !148, line: 123, baseType: !231, size: 64, align: 64, offset: 384)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64, align: 64)
!232 = !DISubroutineType(types: !233)
!233 = !{!234, !234}
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64, align: 64)
!235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !181, file: !148, line: 130, baseType: !237, size: 32, align: 32, offset: 448)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !148, line: 48, baseType: !147)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !181, file: !148, line: 136, baseType: !239, size: 64, align: 64, offset: 512)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{!237, !191}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !181, file: !148, line: 142, baseType: !243, size: 64, align: 64, offset: 576)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64, align: 64)
!244 = !DISubroutineType(types: !245)
!245 = !{!200, !246, !191, !184, !200}
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64, align: 64)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !126, line: 329, size: 128, align: 64, elements: !249)
!249 = !{!250, !262, !263}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !248, file: !126, line: 360, baseType: !251, size: 64, align: 64)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64, align: 64)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !126, line: 324, baseType: !254)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !126, line: 306, size: 384, align: 64, elements: !255)
!255 = !{!256, !257, !258, !259, !260, !261}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !254, file: !126, line: 307, baseType: !184, size: 64, align: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !254, file: !126, line: 313, baseType: !210, size: 64, align: 64, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !254, file: !126, line: 313, baseType: !210, size: 64, align: 64, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !254, file: !126, line: 318, baseType: !210, size: 64, align: 64, offset: 192)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !254, file: !126, line: 318, baseType: !210, size: 64, align: 64, offset: 256)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !254, file: !126, line: 323, baseType: !200, size: 32, align: 32, offset: 320)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !248, file: !126, line: 364, baseType: !200, size: 32, align: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !248, file: !126, line: 368, baseType: !200, size: 32, align: 32, offset: 96)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !175, file: !169, line: 341, baseType: !265, size: 64, align: 64, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64, align: 64)
!266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilter", file: !169, line: 328, baseType: !268)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilter", file: !169, line: 144, size: 1024, align: 64, elements: !269)
!269 = !{!270, !271, !272, !405, !406, !407, !408, !412, !413, !418, !422, !423, !424, !425, !427, !432, !436}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !268, file: !169, line: 148, baseType: !184, size: 64, align: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !268, file: !169, line: 155, baseType: !184, size: 64, align: 64, offset: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !268, file: !169, line: 164, baseType: !273, size: 64, align: 64, offset: 128)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64, align: 64)
!274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterPad", file: !169, line: 69, baseType: !276)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterPad", file: !277, line: 54, size: 576, align: 64, elements: !278)
!277 = !DIFile(filename: "libavfilter/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!278 = !{!279, !280, !281, !389, !393, !397, !401, !402, !403, !404}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !276, file: !277, line: 60, baseType: !184, size: 64, align: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !276, file: !277, line: 65, baseType: !3, size: 32, align: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "get_video_buffer", scope: !276, file: !277, line: 73, baseType: !282, size: 64, align: 64, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64, align: 64)
!283 = !DISubroutineType(types: !284)
!284 = !{!285, !387, !200, !200}
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64, align: 64)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !24, line: 646, baseType: !287)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !24, line: 268, size: 4288, align: 64, elements: !288)
!288 = !{!289, !297, !299, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !319, !320, !321, !322, !323, !324, !325, !326, !339, !341, !342, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !375, !376, !377, !378, !379, !380, !383, !384, !385, !386}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !287, file: !24, line: 282, baseType: !290, size: 512, align: 64)
!290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 512, align: 64, elements: !295)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64, align: 64)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !293, line: 48, baseType: !294)
!293 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!294 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!295 = !{!296}
!296 = !DISubrange(count: 8)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !287, file: !24, line: 299, baseType: !298, size: 256, align: 32, offset: 512)
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 256, align: 32, elements: !295)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !287, file: !24, line: 315, baseType: !300, size: 64, align: 64, offset: 768)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64, align: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !287, file: !24, line: 326, baseType: !200, size: 32, align: 32, offset: 832)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !287, file: !24, line: 326, baseType: !200, size: 32, align: 32, offset: 864)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !287, file: !24, line: 334, baseType: !200, size: 32, align: 32, offset: 896)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !287, file: !24, line: 341, baseType: !200, size: 32, align: 32, offset: 928)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !287, file: !24, line: 346, baseType: !200, size: 32, align: 32, offset: 960)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !287, file: !24, line: 351, baseType: !13, size: 32, align: 32, offset: 992)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !287, file: !24, line: 356, baseType: !213, size: 64, align: 32, offset: 1024)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !287, file: !24, line: 361, baseType: !206, size: 64, align: 64, offset: 1088)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !287, file: !24, line: 369, baseType: !206, size: 64, align: 64, offset: 1152)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !287, file: !24, line: 377, baseType: !206, size: 64, align: 64, offset: 1216)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !287, file: !24, line: 382, baseType: !200, size: 32, align: 32, offset: 1280)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !287, file: !24, line: 386, baseType: !200, size: 32, align: 32, offset: 1312)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !287, file: !24, line: 391, baseType: !200, size: 32, align: 32, offset: 1344)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !287, file: !24, line: 396, baseType: !191, size: 64, align: 64, offset: 1408)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !287, file: !24, line: 403, baseType: !316, size: 512, align: 64, offset: 1472)
!316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 512, align: 64, elements: !295)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !293, line: 55, baseType: !318)
!318 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !287, file: !24, line: 410, baseType: !200, size: 32, align: 32, offset: 1984)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !287, file: !24, line: 415, baseType: !200, size: 32, align: 32, offset: 2016)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !287, file: !24, line: 420, baseType: !200, size: 32, align: 32, offset: 2048)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !287, file: !24, line: 425, baseType: !200, size: 32, align: 32, offset: 2080)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !287, file: !24, line: 435, baseType: !206, size: 64, align: 64, offset: 2112)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !287, file: !24, line: 440, baseType: !200, size: 32, align: 32, offset: 2176)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !287, file: !24, line: 445, baseType: !317, size: 64, align: 64, offset: 2240)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !287, file: !24, line: 459, baseType: !327, size: 512, align: 64, offset: 2304)
!327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 512, align: 64, elements: !295)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64, align: 64)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !330, line: 94, baseType: !331)
!330 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !330, line: 81, size: 192, align: 64, elements: !332)
!332 = !{!333, !337, !338}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !331, file: !330, line: 82, baseType: !334, size: 64, align: 64)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64, align: 64)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !330, line: 73, baseType: !336)
!336 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !330, line: 73, flags: DIFlagFwdDecl)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !331, file: !330, line: 89, baseType: !291, size: 64, align: 64, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !331, file: !330, line: 93, baseType: !200, size: 32, align: 32, offset: 128)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !287, file: !24, line: 473, baseType: !340, size: 64, align: 64, offset: 2816)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64, align: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !287, file: !24, line: 477, baseType: !200, size: 32, align: 32, offset: 2880)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !287, file: !24, line: 479, baseType: !343, size: 64, align: 64, offset: 2944)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64, align: 64)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64, align: 64)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !24, line: 207, baseType: !346)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !24, line: 201, size: 320, align: 64, elements: !347)
!347 = !{!348, !349, !350, !351, !356}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !346, file: !24, line: 202, baseType: !23, size: 32, align: 32)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !346, file: !24, line: 203, baseType: !291, size: 64, align: 64, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !346, file: !24, line: 204, baseType: !200, size: 32, align: 32, offset: 128)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !346, file: !24, line: 205, baseType: !352, size: 64, align: 64, offset: 192)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64, align: 64)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !354, line: 86, baseType: !355)
!354 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!355 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !354, line: 86, flags: DIFlagFwdDecl)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !346, file: !24, line: 206, baseType: !328, size: 64, align: 64, offset: 256)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !287, file: !24, line: 480, baseType: !200, size: 32, align: 32, offset: 3008)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !287, file: !24, line: 505, baseType: !200, size: 32, align: 32, offset: 3040)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !287, file: !24, line: 512, baseType: !47, size: 32, align: 32, offset: 3072)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !287, file: !24, line: 514, baseType: !54, size: 32, align: 32, offset: 3104)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !287, file: !24, line: 516, baseType: !72, size: 32, align: 32, offset: 3136)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !287, file: !24, line: 523, baseType: !96, size: 32, align: 32, offset: 3168)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !287, file: !24, line: 525, baseType: !115, size: 32, align: 32, offset: 3200)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !287, file: !24, line: 532, baseType: !206, size: 64, align: 64, offset: 3264)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !287, file: !24, line: 539, baseType: !206, size: 64, align: 64, offset: 3328)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !287, file: !24, line: 547, baseType: !206, size: 64, align: 64, offset: 3392)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !287, file: !24, line: 554, baseType: !352, size: 64, align: 64, offset: 3456)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !287, file: !24, line: 563, baseType: !200, size: 32, align: 32, offset: 3520)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !287, file: !24, line: 572, baseType: !200, size: 32, align: 32, offset: 3552)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !287, file: !24, line: 581, baseType: !200, size: 32, align: 32, offset: 3584)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !287, file: !24, line: 588, baseType: !372, size: 64, align: 64, offset: 3648)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !207, line: 194, baseType: !374)
!374 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !287, file: !24, line: 593, baseType: !200, size: 32, align: 32, offset: 3712)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !287, file: !24, line: 596, baseType: !200, size: 32, align: 32, offset: 3744)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !287, file: !24, line: 599, baseType: !328, size: 64, align: 64, offset: 3776)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !287, file: !24, line: 605, baseType: !328, size: 64, align: 64, offset: 3840)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !287, file: !24, line: 616, baseType: !328, size: 64, align: 64, offset: 3904)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !287, file: !24, line: 626, baseType: !381, size: 64, align: 64, offset: 3968)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !382, line: 216, baseType: !318)
!382 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!383 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !287, file: !24, line: 627, baseType: !381, size: 64, align: 64, offset: 4032)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !287, file: !24, line: 628, baseType: !381, size: 64, align: 64, offset: 4096)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !287, file: !24, line: 629, baseType: !381, size: 64, align: 64, offset: 4160)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !287, file: !24, line: 645, baseType: !328, size: 64, align: 64, offset: 4224)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64, align: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterLink", file: !169, line: 68, baseType: !170)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "get_audio_buffer", scope: !276, file: !277, line: 81, baseType: !390, size: 64, align: 64, offset: 192)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64, align: 64)
!391 = !DISubroutineType(types: !392)
!392 = !{!285, !387, !200}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "filter_frame", scope: !276, file: !277, line: 93, baseType: !394, size: 64, align: 64, offset: 256)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64, align: 64)
!395 = !DISubroutineType(types: !396)
!396 = !{!200, !387, !285}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "poll_frame", scope: !276, file: !277, line: 104, baseType: !398, size: 64, align: 64, offset: 320)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64, align: 64)
!399 = !DISubroutineType(types: !400)
!400 = !{!200, !387}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "request_frame", scope: !276, file: !277, line: 113, baseType: !398, size: 64, align: 64, offset: 384)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "config_props", scope: !276, file: !277, line: 129, baseType: !398, size: 64, align: 64, offset: 448)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "needs_fifo", scope: !276, file: !277, line: 137, baseType: !200, size: 32, align: 32, offset: 512)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "needs_writable", scope: !276, file: !277, line: 145, baseType: !200, size: 32, align: 32, offset: 544)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !268, file: !169, line: 172, baseType: !273, size: 64, align: 64, offset: 192)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !268, file: !169, line: 182, baseType: !178, size: 64, align: 64, offset: 256)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !268, file: !169, line: 187, baseType: !200, size: 32, align: 32, offset: 320)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "preinit", scope: !268, file: !169, line: 210, baseType: !409, size: 64, align: 64, offset: 384)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64, align: 64)
!410 = !DISubroutineType(types: !411)
!411 = !{!200, !173}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !268, file: !169, line: 233, baseType: !409, size: 64, align: 64, offset: 448)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "init_dict", scope: !268, file: !169, line: 246, baseType: !414, size: 64, align: 64, offset: 512)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64, align: 64)
!415 = !DISubroutineType(types: !416)
!416 = !{!200, !173, !417}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64, align: 64)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !268, file: !169, line: 258, baseType: !419, size: 64, align: 64, offset: 576)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64, align: 64)
!420 = !DISubroutineType(types: !421)
!421 = !{null, !173}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "query_formats", scope: !268, file: !169, line: 282, baseType: !409, size: 64, align: 64, offset: 640)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !268, file: !169, line: 284, baseType: !200, size: 32, align: 32, offset: 704)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "flags_internal", scope: !268, file: !169, line: 286, baseType: !200, size: 32, align: 32, offset: 736)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !268, file: !169, line: 292, baseType: !426, size: 64, align: 64, offset: 768)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64, align: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "process_command", scope: !268, file: !169, line: 306, baseType: !428, size: 64, align: 64, offset: 832)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64, align: 64)
!429 = !DISubroutineType(types: !430)
!430 = !{!200, !173, !184, !184, !431, !200, !200}
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64, align: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "init_opaque", scope: !268, file: !169, line: 313, baseType: !433, size: 64, align: 64, offset: 896)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64, align: 64)
!434 = !DISubroutineType(types: !435)
!435 = !{!200, !173, !191}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !268, file: !169, line: 327, baseType: !409, size: 64, align: 64, offset: 960)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !175, file: !169, line: 343, baseType: !431, size: 64, align: 64, offset: 128)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "input_pads", scope: !175, file: !169, line: 345, baseType: !439, size: 64, align: 64, offset: 192)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64, align: 64)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !175, file: !169, line: 346, baseType: !441, size: 64, align: 64, offset: 256)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64, align: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inputs", scope: !175, file: !169, line: 347, baseType: !443, size: 32, align: 32, offset: 320)
!443 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "output_pads", scope: !175, file: !169, line: 349, baseType: !439, size: 64, align: 64, offset: 384)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !175, file: !169, line: 350, baseType: !441, size: 64, align: 64, offset: 448)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "nb_outputs", scope: !175, file: !169, line: 351, baseType: !443, size: 32, align: 32, offset: 512)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !175, file: !169, line: 353, baseType: !191, size: 64, align: 64, offset: 576)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !175, file: !169, line: 355, baseType: !449, size: 64, align: 64, offset: 640)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64, align: 64)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterGraph", file: !169, line: 840, size: 768, align: 64, elements: !451)
!451 = !{!452, !453, !455, !456, !457, !458, !459, !460, !482, !483, !484, !485, !486, !487}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !450, file: !169, line: 841, baseType: !178, size: 64, align: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !450, file: !169, line: 842, baseType: !454, size: 64, align: 64, offset: 64)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64, align: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "nb_filters", scope: !450, file: !169, line: 843, baseType: !443, size: 32, align: 32, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "scale_sws_opts", scope: !450, file: !169, line: 845, baseType: !431, size: 64, align: 64, offset: 192)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "resample_lavr_opts", scope: !450, file: !169, line: 847, baseType: !431, size: 64, align: 64, offset: 256)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !450, file: !169, line: 862, baseType: !200, size: 32, align: 32, offset: 320)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "nb_threads", scope: !450, file: !169, line: 869, baseType: !200, size: 32, align: 32, offset: 352)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !450, file: !169, line: 874, baseType: !461, size: 64, align: 64, offset: 384)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64, align: 64)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterGraphInternal", file: !169, line: 809, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterGraphInternal", file: !277, line: 148, size: 192, align: 64, elements: !464)
!464 = !{!465, !466, !476}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !463, file: !277, line: 149, baseType: !191, size: 64, align: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "thread_execute", scope: !463, file: !277, line: 150, baseType: !467, size: 64, align: 64, offset: 64)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64, align: 64)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "avfilter_execute_func", file: !169, line: 837, baseType: !469)
!469 = !DISubroutineType(types: !470)
!470 = !{!200, !173, !471, !191, !475, !200}
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64, align: 64)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "avfilter_action_func", file: !169, line: 823, baseType: !473)
!473 = !DISubroutineType(types: !474)
!474 = !{!200, !173, !191, !200, !200}
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64, align: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "frame_queues", scope: !463, file: !277, line: 151, baseType: !477, size: 8, align: 8, offset: 128)
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFFrameQueueGlobal", file: !478, line: 48, baseType: !479)
!478 = !DIFile(filename: "libavfilter/framequeue.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFFrameQueueGlobal", file: !478, line: 46, size: 8, align: 8, elements: !480)
!480 = !{!481}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !479, file: !478, line: 47, baseType: !186, size: 8, align: 8)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !450, file: !169, line: 881, baseType: !191, size: 64, align: 64, offset: 448)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !450, file: !169, line: 895, baseType: !467, size: 64, align: 64, offset: 512)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "aresample_swr_opts", scope: !450, file: !169, line: 897, baseType: !431, size: 64, align: 64, offset: 576)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "sink_links", scope: !450, file: !169, line: 906, baseType: !441, size: 64, align: 64, offset: 640)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "sink_links_count", scope: !450, file: !169, line: 907, baseType: !200, size: 32, align: 32, offset: 704)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "disable_auto_convert", scope: !450, file: !169, line: 909, baseType: !443, size: 32, align: 32, offset: 736)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !175, file: !169, line: 373, baseType: !200, size: 32, align: 32, offset: 704)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !175, file: !169, line: 378, baseType: !490, size: 64, align: 64, offset: 768)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64, align: 64)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterInternal", file: !169, line: 335, baseType: !492)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterInternal", file: !277, line: 154, size: 64, align: 64, elements: !493)
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !492, file: !277, line: 155, baseType: !467, size: 64, align: 64)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "command_queue", scope: !175, file: !169, line: 380, baseType: !496, size: 64, align: 64, offset: 832)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64, align: 64)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterCommand", file: !277, line: 38, size: 320, align: 64, elements: !498)
!498 = !{!499, !500, !501, !502, !503}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !497, file: !277, line: 39, baseType: !210, size: 64, align: 64)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !497, file: !277, line: 40, baseType: !431, size: 64, align: 64, offset: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !497, file: !277, line: 41, baseType: !431, size: 64, align: 64, offset: 128)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !497, file: !277, line: 42, baseType: !200, size: 32, align: 32, offset: 192)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !497, file: !277, line: 43, baseType: !496, size: 64, align: 64, offset: 256)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "enable_str", scope: !175, file: !169, line: 382, baseType: !431, size: 64, align: 64, offset: 896)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !175, file: !169, line: 383, baseType: !191, size: 64, align: 64, offset: 960)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "var_values", scope: !175, file: !169, line: 384, baseType: !507, size: 64, align: 64, offset: 1024)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64, align: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "is_disabled", scope: !175, file: !169, line: 385, baseType: !200, size: 32, align: 32, offset: 1088)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !175, file: !169, line: 394, baseType: !328, size: 64, align: 64, offset: 1152)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "nb_threads", scope: !175, file: !169, line: 401, baseType: !200, size: 32, align: 32, offset: 1216)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !175, file: !169, line: 408, baseType: !443, size: 32, align: 32, offset: 1248)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !175, file: !169, line: 424, baseType: !200, size: 32, align: 32, offset: 1280)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "srcpad", scope: !170, file: !169, line: 441, baseType: !439, size: 64, align: 64, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !170, file: !169, line: 443, baseType: !173, size: 64, align: 64, offset: 128)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "dstpad", scope: !170, file: !169, line: 444, baseType: !439, size: 64, align: 64, offset: 192)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !170, file: !169, line: 446, baseType: !3, size: 32, align: 32, offset: 256)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !170, file: !169, line: 449, baseType: !200, size: 32, align: 32, offset: 288)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !170, file: !169, line: 450, baseType: !200, size: 32, align: 32, offset: 320)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !170, file: !169, line: 451, baseType: !213, size: 64, align: 32, offset: 352)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !170, file: !169, line: 453, baseType: !317, size: 64, align: 64, offset: 448)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !170, file: !169, line: 454, baseType: !200, size: 32, align: 32, offset: 512)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !170, file: !169, line: 456, baseType: !200, size: 32, align: 32, offset: 544)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !170, file: !169, line: 465, baseType: !213, size: 64, align: 32, offset: 576)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "in_formats", scope: !170, file: !169, line: 481, baseType: !525, size: 64, align: 64, offset: 640)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64, align: 64)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterFormats", file: !169, line: 70, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterFormats", file: !528, line: 64, size: 256, align: 64, elements: !529)
!528 = !DIFile(filename: "libavfilter/formats.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!529 = !{!530, !531, !532, !533}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "nb_formats", scope: !527, file: !528, line: 65, baseType: !443, size: 32, align: 32)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "formats", scope: !527, file: !528, line: 66, baseType: !475, size: 64, align: 64, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !527, file: !528, line: 68, baseType: !443, size: 32, align: 32, offset: 128)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !527, file: !528, line: 69, baseType: !534, size: 64, align: 64, offset: 192)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64, align: 64)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64, align: 64)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64, align: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "out_formats", scope: !170, file: !169, line: 482, baseType: !525, size: 64, align: 64, offset: 704)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "in_samplerates", scope: !170, file: !169, line: 488, baseType: !525, size: 64, align: 64, offset: 768)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "out_samplerates", scope: !170, file: !169, line: 489, baseType: !525, size: 64, align: 64, offset: 832)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "in_channel_layouts", scope: !170, file: !169, line: 490, baseType: !541, size: 64, align: 64, offset: 896)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64, align: 64)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterChannelLayouts", file: !528, line: 85, size: 256, align: 64, elements: !543)
!543 = !{!544, !546, !547, !548, !549, !550}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !542, file: !528, line: 86, baseType: !545, size: 64, align: 64)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64, align: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "nb_channel_layouts", scope: !542, file: !528, line: 87, baseType: !200, size: 32, align: 32, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "all_layouts", scope: !542, file: !528, line: 88, baseType: !186, size: 8, align: 8, offset: 96)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "all_counts", scope: !542, file: !528, line: 89, baseType: !186, size: 8, align: 8, offset: 104)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !542, file: !528, line: 91, baseType: !443, size: 32, align: 32, offset: 128)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !542, file: !528, line: 92, baseType: !551, size: 64, align: 64, offset: 192)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64, align: 64)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64, align: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "out_channel_layouts", scope: !170, file: !169, line: 491, baseType: !541, size: 64, align: 64, offset: 960)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "request_samples", scope: !170, file: !169, line: 500, baseType: !200, size: 32, align: 32, offset: 1024)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !170, file: !169, line: 507, baseType: !168, size: 32, align: 32, offset: 1056)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !170, file: !169, line: 512, baseType: !449, size: 64, align: 64, offset: 1088)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "current_pts", scope: !170, file: !169, line: 518, baseType: !206, size: 64, align: 64, offset: 1152)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "current_pts_us", scope: !170, file: !169, line: 524, baseType: !206, size: 64, align: 64, offset: 1216)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "age_index", scope: !170, file: !169, line: 529, baseType: !200, size: 32, align: 32, offset: 1280)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate", scope: !170, file: !169, line: 542, baseType: !213, size: 64, align: 32, offset: 1312)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "partial_buf", scope: !170, file: !169, line: 547, baseType: !285, size: 64, align: 64, offset: 1408)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "partial_buf_size", scope: !170, file: !169, line: 553, baseType: !200, size: 32, align: 32, offset: 1472)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "min_samples", scope: !170, file: !169, line: 562, baseType: !200, size: 32, align: 32, offset: 1504)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "max_samples", scope: !170, file: !169, line: 568, baseType: !200, size: 32, align: 32, offset: 1536)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !170, file: !169, line: 573, baseType: !200, size: 32, align: 32, offset: 1568)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !170, file: !169, line: 578, baseType: !443, size: 32, align: 32, offset: 1600)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count_in", scope: !170, file: !169, line: 583, baseType: !206, size: 64, align: 64, offset: 1664)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count_out", scope: !170, file: !169, line: 583, baseType: !206, size: 64, align: 64, offset: 1728)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "frame_pool", scope: !170, file: !169, line: 588, baseType: !191, size: 64, align: 64, offset: 1792)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "frame_wanted_out", scope: !170, file: !169, line: 595, baseType: !200, size: 32, align: 32, offset: 1856)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !170, file: !169, line: 601, baseType: !328, size: 64, align: 64, offset: 1920)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !170, file: !169, line: 610, baseType: !573, size: 491520, align: 8, offset: 1984)
!573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 491520, align: 8, elements: !574)
!574 = !{!575}
!575 = !DISubrange(count: 61440)
!576 = !{!577, !578, !579}
!577 = !DIEnumerator(name: "AVLINK_UNINIT", value: 0)
!578 = !DIEnumerator(name: "AVLINK_STARTINIT", value: 1)
!579 = !DIEnumerator(name: "AVLINK_INIT", value: 2)
!580 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "var_name", file: !581, line: 46, size: 32, align: 32, elements: !582)
!581 = !DIFile(filename: "libavfilter/aeval.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!582 = !{!583, !584, !585, !586, !587, !588, !589}
!583 = !DIEnumerator(name: "VAR_CH", value: 0)
!584 = !DIEnumerator(name: "VAR_N", value: 1)
!585 = !DIEnumerator(name: "VAR_NB_IN_CHANNELS", value: 2)
!586 = !DIEnumerator(name: "VAR_NB_OUT_CHANNELS", value: 3)
!587 = !DIEnumerator(name: "VAR_T", value: 4)
!588 = !DIEnumerator(name: "VAR_S", value: 5)
!589 = !DIEnumerator(name: "VAR_VARS_NB", value: 6)
!590 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !591, line: 58, size: 32, align: 32, elements: !592)
!591 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!592 = !{!593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606}
!593 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!594 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!595 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!596 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!597 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!598 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!599 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!600 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!601 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!602 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!603 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!604 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!605 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!606 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!607 = !{!200, !443, !210, !191, !507, !608, !206}
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!609 = !{!610, !611, !612, !616, !617, !623, !629, !632, !636, !641, !642, !643, !644, !648}
!610 = distinct !DIGlobalVariable(name: "ff_asrc_aevalsrc", scope: !0, file: !581, line: 325, type: !267, isLocal: false, isDefinition: true, variable: %struct.AVFilter* @ff_asrc_aevalsrc)
!611 = distinct !DIGlobalVariable(name: "ff_af_aeval", scope: !0, file: !581, line: 478, type: !267, isLocal: false, isDefinition: true, variable: %struct.AVFilter* @ff_af_aeval)
!612 = distinct !DIGlobalVariable(name: "aevalsrc_outputs", scope: !0, file: !581, line: 315, type: !613, isLocal: true, isDefinition: true, variable: [2 x %struct.AVFilterPad]* @aevalsrc_outputs)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 1152, align: 64, elements: !614)
!614 = !{!615}
!615 = !DISubrange(count: 2)
!616 = distinct !DIGlobalVariable(name: "aevalsrc_class", scope: !0, file: !581, line: 101, type: !179, isLocal: true, isDefinition: true, variable: %struct.AVClass* @aevalsrc_class)
!617 = distinct !DIGlobalVariable(name: "aevalsrc_options", scope: !0, file: !581, line: 88, type: !618, isLocal: true, isDefinition: true, variable: <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption }>* @aevalsrc_options)
!618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 5120, align: 64, elements: !621)
!619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !620)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !126, line: 301, baseType: !195)
!621 = !{!622}
!622 = !DISubrange(count: 10)
!623 = distinct !DIGlobalVariable(name: "aeval_func1", scope: !0, file: !581, line: 82, type: !624, isLocal: true, isDefinition: true, variable: [2 x double (i8*, double)*]* @aeval_func1)
!624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !625, size: 128, align: 64, elements: !614)
!625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !626)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64, align: 64)
!627 = !DISubroutineType(types: !628)
!628 = !{!210, !191, !210}
!629 = distinct !DIGlobalVariable(name: "aeval_func1_names", scope: !0, file: !581, line: 83, type: !630, isLocal: true, isDefinition: true, variable: [2 x i8*]* @aeval_func1_names)
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 128, align: 64, elements: !614)
!631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!632 = distinct !DIGlobalVariable(name: "var_names", scope: !0, file: !581, line: 36, type: !633, isLocal: true, isDefinition: true, variable: [7 x i8*]* @var_names)
!633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 448, align: 64, elements: !634)
!634 = !{!635}
!635 = !DISubrange(count: 7)
!636 = distinct !DIGlobalVariable(name: "sample_fmts", scope: !637, file: !581, line: 247, type: !639, isLocal: true, isDefinition: true, variable: [2 x i32]* @query_formats.sample_fmts)
!637 = distinct !DISubprogram(name: "query_formats", scope: !581, file: !581, line: 244, type: !410, isLocal: true, isDefinition: true, scopeLine: 245, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !638)
!638 = !{}
!639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !640, size: 64, align: 32, elements: !614)
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !590)
!641 = distinct !DIGlobalVariable(name: "aeval_inputs", scope: !0, file: !581, line: 460, type: !613, isLocal: true, isDefinition: true, variable: [2 x %struct.AVFilterPad]* @aeval_inputs)
!642 = distinct !DIGlobalVariable(name: "aeval_outputs", scope: !0, file: !581, line: 469, type: !613, isLocal: true, isDefinition: true, variable: [2 x %struct.AVFilterPad]* @aeval_outputs)
!643 = distinct !DIGlobalVariable(name: "aeval_class", scope: !0, file: !581, line: 349, type: !179, isLocal: true, isDefinition: true, variable: %struct.AVClass* @aeval_class)
!644 = distinct !DIGlobalVariable(name: "aeval_options", scope: !0, file: !581, line: 342, type: !645, isLocal: true, isDefinition: true, variable: <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption }>* @aeval_options)
!645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 2048, align: 64, elements: !646)
!646 = !{!647}
!647 = !DISubrange(count: 4)
!648 = distinct !DIGlobalVariable(name: "sample_fmts", scope: !649, file: !581, line: 358, type: !639, isLocal: true, isDefinition: true, variable: [2 x i32]* @aeval_query_formats.sample_fmts)
!649 = distinct !DISubprogram(name: "aeval_query_formats", scope: !581, file: !581, line: 351, type: !410, isLocal: true, isDefinition: true, scopeLine: 352, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !638)
!650 = !{i32 2, !"Dwarf Version", i32 4}
!651 = !{i32 2, !"Debug Info Version", i32 3}
!652 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!653 = distinct !DISubprogram(name: "init", scope: !581, file: !581, line: 172, type: !410, isLocal: true, isDefinition: true, scopeLine: 173, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !638)
!654 = !DILocalVariable(name: "ctx", arg: 1, scope: !653, file: !581, line: 172, type: !173)
!655 = !DIExpression()
!656 = !DILocation(line: 172, column: 56, scope: !653)
!657 = !DILocalVariable(name: "eval", scope: !653, file: !581, line: 174, type: !658)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64, align: 64)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "EvalContext", file: !581, line: 74, baseType: !660)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvalContext", file: !581, line: 56, size: 1344, align: 64, elements: !661)
!661 = !{!662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !677, !678, !679, !680, !681, !685, !686}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !660, file: !581, line: 57, baseType: !178, size: 64, align: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate_str", scope: !660, file: !581, line: 58, baseType: !431, size: 64, align: 64, offset: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !660, file: !581, line: 59, baseType: !200, size: 32, align: 32, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "chlayout", scope: !660, file: !581, line: 60, baseType: !206, size: 64, align: 64, offset: 192)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "chlayout_str", scope: !660, file: !581, line: 61, baseType: !431, size: 64, align: 64, offset: 256)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "nb_channels", scope: !660, file: !581, line: 62, baseType: !200, size: 32, align: 32, offset: 320)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "nb_in_channels", scope: !660, file: !581, line: 63, baseType: !200, size: 32, align: 32, offset: 352)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "same_chlayout", scope: !660, file: !581, line: 64, baseType: !200, size: 32, align: 32, offset: 384)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !660, file: !581, line: 65, baseType: !206, size: 64, align: 64, offset: 448)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !660, file: !581, line: 66, baseType: !672, size: 64, align: 64, offset: 512)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64, align: 64)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64, align: 64)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVExpr", file: !675, line: 31, baseType: !676)
!675 = !DIFile(filename: "./libavutil/eval.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!676 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVExpr", file: !675, line: 31, flags: DIFlagFwdDecl)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "exprs", scope: !660, file: !581, line: 67, baseType: !431, size: 64, align: 64, offset: 576)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !660, file: !581, line: 68, baseType: !200, size: 32, align: 32, offset: 640)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !660, file: !581, line: 69, baseType: !206, size: 64, align: 64, offset: 704)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !660, file: !581, line: 70, baseType: !317, size: 64, align: 64, offset: 768)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "var_values", scope: !660, file: !581, line: 71, baseType: !682, size: 384, align: 64, offset: 832)
!682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 384, align: 64, elements: !683)
!683 = !{!684}
!684 = !DISubrange(count: 6)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "channel_values", scope: !660, file: !581, line: 72, baseType: !507, size: 64, align: 64, offset: 1216)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "out_channel_layout", scope: !660, file: !581, line: 73, baseType: !206, size: 64, align: 64, offset: 1280)
!687 = !DILocation(line: 174, column: 18, scope: !653)
!688 = !DILocation(line: 174, column: 25, scope: !653)
!689 = !DILocation(line: 174, column: 30, scope: !653)
!690 = !DILocalVariable(name: "ret", scope: !653, file: !581, line: 175, type: !200)
!691 = !DILocation(line: 175, column: 9, scope: !653)
!692 = !DILocation(line: 177, column: 9, scope: !693)
!693 = distinct !DILexicalBlock(scope: !653, file: !581, line: 177, column: 9)
!694 = !DILocation(line: 177, column: 15, scope: !693)
!695 = !DILocation(line: 177, column: 9, scope: !653)
!696 = !DILocation(line: 178, column: 21, scope: !697)
!697 = distinct !DILexicalBlock(scope: !698, file: !581, line: 178, column: 13)
!698 = distinct !DILexicalBlock(scope: !693, file: !581, line: 177, column: 29)
!699 = !DILocation(line: 178, column: 27, scope: !697)
!700 = !DILocation(line: 178, column: 14, scope: !697)
!701 = !DILocation(line: 178, column: 49, scope: !697)
!702 = !DILocation(line: 178, column: 60, scope: !703)
!703 = !DILexicalBlockFile(scope: !697, file: !581, discriminator: 1)
!704 = !DILocation(line: 178, column: 65, scope: !703)
!705 = !DILocation(line: 178, column: 73, scope: !703)
!706 = !DILocation(line: 178, column: 53, scope: !703)
!707 = !DILocation(line: 178, column: 13, scope: !703)
!708 = !DILocation(line: 179, column: 13, scope: !709)
!709 = distinct !DILexicalBlock(scope: !697, file: !581, line: 178, column: 89)
!710 = !DILocation(line: 179, column: 19, scope: !709)
!711 = !DILocation(line: 179, column: 33, scope: !709)
!712 = !DILocation(line: 180, column: 9, scope: !709)
!713 = !DILocation(line: 181, column: 44, scope: !714)
!714 = distinct !DILexicalBlock(scope: !697, file: !581, line: 180, column: 16)
!715 = !DILocation(line: 181, column: 50, scope: !714)
!716 = !DILocation(line: 181, column: 65, scope: !714)
!717 = !DILocation(line: 181, column: 71, scope: !714)
!718 = !DILocation(line: 181, column: 85, scope: !714)
!719 = !DILocation(line: 181, column: 19, scope: !714)
!720 = !DILocation(line: 181, column: 17, scope: !714)
!721 = !DILocation(line: 182, column: 17, scope: !722)
!722 = distinct !DILexicalBlock(scope: !714, file: !581, line: 182, column: 17)
!723 = !DILocation(line: 182, column: 21, scope: !722)
!724 = !DILocation(line: 182, column: 17, scope: !714)
!725 = !DILocation(line: 183, column: 24, scope: !722)
!726 = !DILocation(line: 183, column: 17, scope: !722)
!727 = !DILocation(line: 185, column: 45, scope: !714)
!728 = !DILocation(line: 185, column: 84, scope: !714)
!729 = !DILocation(line: 185, column: 90, scope: !714)
!730 = !DILocation(line: 185, column: 50, scope: !714)
!731 = !DILocation(line: 185, column: 19, scope: !732)
!732 = !DILexicalBlockFile(scope: !714, file: !581, discriminator: 1)
!733 = !DILocation(line: 185, column: 17, scope: !714)
!734 = !DILocation(line: 186, column: 17, scope: !735)
!735 = distinct !DILexicalBlock(scope: !714, file: !581, line: 186, column: 17)
!736 = !DILocation(line: 186, column: 21, scope: !735)
!737 = !DILocation(line: 186, column: 17, scope: !714)
!738 = !DILocation(line: 187, column: 24, scope: !735)
!739 = !DILocation(line: 187, column: 17, scope: !735)
!740 = !DILocation(line: 189, column: 5, scope: !698)
!741 = !DILocation(line: 191, column: 46, scope: !742)
!742 = distinct !DILexicalBlock(scope: !743, file: !581, line: 191, column: 13)
!743 = distinct !DILexicalBlock(scope: !693, file: !581, line: 189, column: 12)
!744 = !DILocation(line: 191, column: 20, scope: !742)
!745 = !DILocation(line: 191, column: 18, scope: !742)
!746 = !DILocation(line: 191, column: 56, scope: !742)
!747 = !DILocation(line: 191, column: 13, scope: !743)
!748 = !DILocation(line: 192, column: 20, scope: !742)
!749 = !DILocation(line: 192, column: 13, scope: !742)
!750 = !DILocation(line: 194, column: 56, scope: !743)
!751 = !DILocation(line: 194, column: 62, scope: !743)
!752 = !DILocation(line: 194, column: 26, scope: !743)
!753 = !DILocation(line: 194, column: 9, scope: !743)
!754 = !DILocation(line: 194, column: 15, scope: !743)
!755 = !DILocation(line: 194, column: 24, scope: !743)
!756 = !DILocation(line: 195, column: 14, scope: !757)
!757 = distinct !DILexicalBlock(scope: !743, file: !581, line: 195, column: 13)
!758 = !DILocation(line: 195, column: 20, scope: !757)
!759 = !DILocation(line: 195, column: 29, scope: !757)
!760 = !DILocation(line: 195, column: 32, scope: !761)
!761 = !DILexicalBlockFile(scope: !757, file: !581, discriminator: 1)
!762 = !DILocation(line: 195, column: 38, scope: !761)
!763 = !DILocation(line: 195, column: 50, scope: !761)
!764 = !DILocation(line: 195, column: 13, scope: !761)
!765 = !DILocation(line: 196, column: 20, scope: !766)
!766 = distinct !DILexicalBlock(scope: !757, file: !581, line: 195, column: 56)
!767 = !DILocation(line: 197, column: 20, scope: !766)
!768 = !DILocation(line: 197, column: 26, scope: !766)
!769 = !DILocation(line: 196, column: 13, scope: !766)
!770 = !DILocation(line: 198, column: 13, scope: !766)
!771 = !DILocation(line: 202, column: 9, scope: !772)
!772 = distinct !DILexicalBlock(scope: !653, file: !581, line: 202, column: 9)
!773 = !DILocation(line: 202, column: 15, scope: !772)
!774 = !DILocation(line: 202, column: 9, scope: !653)
!775 = !DILocation(line: 203, column: 42, scope: !776)
!776 = distinct !DILexicalBlock(scope: !772, file: !581, line: 203, column: 13)
!777 = !DILocation(line: 203, column: 48, scope: !776)
!778 = !DILocation(line: 203, column: 61, scope: !776)
!779 = !DILocation(line: 203, column: 67, scope: !776)
!780 = !DILocation(line: 203, column: 84, scope: !776)
!781 = !DILocation(line: 203, column: 20, scope: !776)
!782 = !DILocation(line: 203, column: 18, scope: !776)
!783 = !DILocation(line: 203, column: 13, scope: !772)
!784 = !DILocation(line: 204, column: 20, scope: !776)
!785 = !DILocation(line: 204, column: 13, scope: !776)
!786 = !DILocation(line: 203, column: 88, scope: !787)
!787 = !DILexicalBlockFile(scope: !776, file: !581, discriminator: 1)
!788 = !DILocation(line: 205, column: 5, scope: !653)
!789 = !DILocation(line: 205, column: 11, scope: !653)
!790 = !DILocation(line: 205, column: 13, scope: !653)
!791 = !DILocation(line: 207, column: 12, scope: !653)
!792 = !DILocation(line: 207, column: 5, scope: !653)
!793 = !DILocation(line: 208, column: 1, scope: !653)
!794 = distinct !DISubprogram(name: "uninit", scope: !581, file: !581, line: 210, type: !420, isLocal: true, isDefinition: true, scopeLine: 211, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !638)
!795 = !DILocalVariable(name: "ctx", arg: 1, scope: !794, file: !581, line: 210, type: !173)
!796 = !DILocation(line: 210, column: 59, scope: !794)
!797 = !DILocalVariable(name: "eval", scope: !794, file: !581, line: 212, type: !658)
!798 = !DILocation(line: 212, column: 18, scope: !794)
!799 = !DILocation(line: 212, column: 25, scope: !794)
!800 = !DILocation(line: 212, column: 30, scope: !794)
!801 = !DILocalVariable(name: "i", scope: !794, file: !581, line: 213, type: !200)
!802 = !DILocation(line: 213, column: 9, scope: !794)
!803 = !DILocation(line: 215, column: 12, scope: !804)
!804 = distinct !DILexicalBlock(scope: !794, file: !581, line: 215, column: 5)
!805 = !DILocation(line: 215, column: 10, scope: !804)
!806 = !DILocation(line: 215, column: 17, scope: !807)
!807 = !DILexicalBlockFile(scope: !808, file: !581, discriminator: 1)
!808 = distinct !DILexicalBlock(scope: !804, file: !581, line: 215, column: 5)
!809 = !DILocation(line: 215, column: 21, scope: !807)
!810 = !DILocation(line: 215, column: 27, scope: !807)
!811 = !DILocation(line: 215, column: 19, scope: !807)
!812 = !DILocation(line: 215, column: 5, scope: !807)
!813 = !DILocation(line: 216, column: 33, scope: !814)
!814 = distinct !DILexicalBlock(scope: !808, file: !581, line: 215, column: 45)
!815 = !DILocation(line: 216, column: 22, scope: !814)
!816 = !DILocation(line: 216, column: 28, scope: !814)
!817 = !DILocation(line: 216, column: 9, scope: !814)
!818 = !DILocation(line: 217, column: 20, scope: !814)
!819 = !DILocation(line: 217, column: 9, scope: !814)
!820 = !DILocation(line: 217, column: 15, scope: !814)
!821 = !DILocation(line: 217, column: 23, scope: !814)
!822 = !DILocation(line: 218, column: 5, scope: !814)
!823 = !DILocation(line: 215, column: 41, scope: !824)
!824 = !DILexicalBlockFile(scope: !808, file: !581, discriminator: 2)
!825 = !DILocation(line: 215, column: 5, scope: !824)
!826 = distinct !{!826, !827}
!827 = !DILocation(line: 215, column: 5, scope: !794)
!828 = !DILocation(line: 219, column: 15, scope: !794)
!829 = !DILocation(line: 219, column: 21, scope: !794)
!830 = !DILocation(line: 219, column: 14, scope: !794)
!831 = !DILocation(line: 219, column: 5, scope: !794)
!832 = !DILocation(line: 220, column: 15, scope: !794)
!833 = !DILocation(line: 220, column: 21, scope: !794)
!834 = !DILocation(line: 220, column: 14, scope: !794)
!835 = !DILocation(line: 220, column: 5, scope: !794)
!836 = !DILocation(line: 221, column: 1, scope: !794)
!837 = !DILocalVariable(name: "ctx", arg: 1, scope: !637, file: !581, line: 244, type: !173)
!838 = !DILocation(line: 244, column: 43, scope: !637)
!839 = !DILocalVariable(name: "eval", scope: !637, file: !581, line: 246, type: !658)
!840 = !DILocation(line: 246, column: 18, scope: !637)
!841 = !DILocation(line: 246, column: 25, scope: !637)
!842 = !DILocation(line: 246, column: 30, scope: !637)
!843 = !DILocalVariable(name: "chlayouts", scope: !637, file: !581, line: 248, type: !844)
!844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 128, align: 64, elements: !614)
!845 = !DILocation(line: 248, column: 13, scope: !637)
!846 = !DILocation(line: 248, column: 27, scope: !637)
!847 = !DILocation(line: 248, column: 29, scope: !637)
!848 = !DILocation(line: 248, column: 35, scope: !637)
!849 = !DILocation(line: 248, column: 46, scope: !850)
!850 = !DILexicalBlockFile(scope: !637, file: !581, discriminator: 1)
!851 = !DILocation(line: 248, column: 52, scope: !850)
!852 = !DILocation(line: 248, column: 29, scope: !850)
!853 = !DILocation(line: 248, column: 89, scope: !854)
!854 = !DILexicalBlockFile(scope: !637, file: !581, discriminator: 2)
!855 = !DILocation(line: 248, column: 95, scope: !854)
!856 = !DILocation(line: 248, column: 88, scope: !854)
!857 = !DILocation(line: 248, column: 86, scope: !854)
!858 = !DILocation(line: 248, column: 29, scope: !854)
!859 = !DILocation(line: 248, column: 29, scope: !860)
!860 = !DILexicalBlockFile(scope: !637, file: !581, discriminator: 3)
!861 = !DILocation(line: 248, column: 27, scope: !860)
!862 = !DILocalVariable(name: "sample_rates", scope: !637, file: !581, line: 249, type: !863)
!863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 64, align: 32, elements: !614)
!864 = !DILocation(line: 249, column: 9, scope: !637)
!865 = !DILocation(line: 249, column: 26, scope: !637)
!866 = !DILocation(line: 249, column: 28, scope: !637)
!867 = !DILocation(line: 249, column: 34, scope: !637)
!868 = !DILocalVariable(name: "formats", scope: !637, file: !581, line: 250, type: !525)
!869 = !DILocation(line: 250, column: 22, scope: !637)
!870 = !DILocalVariable(name: "layouts", scope: !637, file: !581, line: 251, type: !871)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64, align: 64)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterChannelLayouts", file: !528, line: 93, baseType: !542)
!873 = !DILocation(line: 251, column: 29, scope: !637)
!874 = !DILocalVariable(name: "ret", scope: !637, file: !581, line: 252, type: !200)
!875 = !DILocation(line: 252, column: 9, scope: !637)
!876 = !DILocation(line: 254, column: 15, scope: !637)
!877 = !DILocation(line: 254, column: 13, scope: !637)
!878 = !DILocation(line: 255, column: 10, scope: !879)
!879 = distinct !DILexicalBlock(scope: !637, file: !581, line: 255, column: 9)
!880 = !DILocation(line: 255, column: 9, scope: !637)
!881 = !DILocation(line: 256, column: 9, scope: !879)
!882 = !DILocation(line: 257, column: 34, scope: !637)
!883 = !DILocation(line: 257, column: 39, scope: !637)
!884 = !DILocation(line: 257, column: 11, scope: !637)
!885 = !DILocation(line: 257, column: 9, scope: !637)
!886 = !DILocation(line: 258, column: 9, scope: !887)
!887 = distinct !DILexicalBlock(scope: !637, file: !581, line: 258, column: 9)
!888 = !DILocation(line: 258, column: 13, scope: !887)
!889 = !DILocation(line: 258, column: 9, scope: !637)
!890 = !DILocation(line: 259, column: 16, scope: !887)
!891 = !DILocation(line: 259, column: 9, scope: !887)
!892 = !DILocation(line: 261, column: 43, scope: !637)
!893 = !DILocation(line: 261, column: 15, scope: !637)
!894 = !DILocation(line: 261, column: 13, scope: !637)
!895 = !DILocation(line: 262, column: 10, scope: !896)
!896 = distinct !DILexicalBlock(scope: !637, file: !581, line: 262, column: 9)
!897 = !DILocation(line: 262, column: 9, scope: !637)
!898 = !DILocation(line: 263, column: 9, scope: !896)
!899 = !DILocation(line: 264, column: 41, scope: !637)
!900 = !DILocation(line: 264, column: 46, scope: !637)
!901 = !DILocation(line: 264, column: 11, scope: !637)
!902 = !DILocation(line: 264, column: 9, scope: !637)
!903 = !DILocation(line: 265, column: 9, scope: !904)
!904 = distinct !DILexicalBlock(scope: !637, file: !581, line: 265, column: 9)
!905 = !DILocation(line: 265, column: 13, scope: !904)
!906 = !DILocation(line: 265, column: 9, scope: !637)
!907 = !DILocation(line: 266, column: 16, scope: !904)
!908 = !DILocation(line: 266, column: 9, scope: !904)
!909 = !DILocation(line: 268, column: 35, scope: !637)
!910 = !DILocation(line: 268, column: 15, scope: !637)
!911 = !DILocation(line: 268, column: 13, scope: !637)
!912 = !DILocation(line: 269, column: 10, scope: !913)
!913 = distinct !DILexicalBlock(scope: !637, file: !581, line: 269, column: 9)
!914 = !DILocation(line: 269, column: 9, scope: !637)
!915 = !DILocation(line: 270, column: 9, scope: !913)
!916 = !DILocation(line: 271, column: 38, scope: !637)
!917 = !DILocation(line: 271, column: 43, scope: !637)
!918 = !DILocation(line: 271, column: 12, scope: !637)
!919 = !DILocation(line: 271, column: 5, scope: !637)
!920 = !DILocation(line: 272, column: 1, scope: !637)
!921 = !DILocalVariable(name: "ctx", arg: 1, scope: !649, file: !581, line: 351, type: !173)
!922 = !DILocation(line: 351, column: 49, scope: !649)
!923 = !DILocalVariable(name: "formats", scope: !649, file: !581, line: 353, type: !525)
!924 = !DILocation(line: 353, column: 22, scope: !649)
!925 = !DILocalVariable(name: "layouts", scope: !649, file: !581, line: 354, type: !871)
!926 = !DILocation(line: 354, column: 29, scope: !649)
!927 = !DILocalVariable(name: "inlink", scope: !649, file: !581, line: 355, type: !387)
!928 = !DILocation(line: 355, column: 19, scope: !649)
!929 = !DILocation(line: 355, column: 28, scope: !649)
!930 = !DILocation(line: 355, column: 33, scope: !649)
!931 = !DILocalVariable(name: "outlink", scope: !649, file: !581, line: 356, type: !387)
!932 = !DILocation(line: 356, column: 19, scope: !649)
!933 = !DILocation(line: 356, column: 29, scope: !649)
!934 = !DILocation(line: 356, column: 34, scope: !649)
!935 = !DILocalVariable(name: "eval", scope: !649, file: !581, line: 357, type: !658)
!936 = !DILocation(line: 357, column: 18, scope: !649)
!937 = !DILocation(line: 357, column: 25, scope: !649)
!938 = !DILocation(line: 357, column: 30, scope: !649)
!939 = !DILocalVariable(name: "ret", scope: !649, file: !581, line: 361, type: !200)
!940 = !DILocation(line: 361, column: 9, scope: !649)
!941 = !DILocation(line: 364, column: 15, scope: !649)
!942 = !DILocation(line: 364, column: 13, scope: !649)
!943 = !DILocation(line: 365, column: 39, scope: !944)
!944 = distinct !DILexicalBlock(scope: !649, file: !581, line: 365, column: 9)
!945 = !DILocation(line: 365, column: 49, scope: !944)
!946 = !DILocation(line: 365, column: 57, scope: !944)
!947 = !DILocation(line: 365, column: 16, scope: !944)
!948 = !DILocation(line: 365, column: 14, scope: !944)
!949 = !DILocation(line: 365, column: 79, scope: !944)
!950 = !DILocation(line: 365, column: 9, scope: !649)
!951 = !DILocation(line: 366, column: 16, scope: !944)
!952 = !DILocation(line: 366, column: 9, scope: !944)
!953 = !DILocation(line: 368, column: 9, scope: !954)
!954 = distinct !DILexicalBlock(scope: !649, file: !581, line: 368, column: 9)
!955 = !DILocation(line: 368, column: 15, scope: !954)
!956 = !DILocation(line: 368, column: 9, scope: !649)
!957 = !DILocation(line: 369, column: 19, scope: !958)
!958 = distinct !DILexicalBlock(scope: !954, file: !581, line: 368, column: 30)
!959 = !DILocation(line: 369, column: 17, scope: !958)
!960 = !DILocation(line: 370, column: 50, scope: !961)
!961 = distinct !DILexicalBlock(scope: !958, file: !581, line: 370, column: 13)
!962 = !DILocation(line: 370, column: 55, scope: !961)
!963 = !DILocation(line: 370, column: 20, scope: !961)
!964 = !DILocation(line: 370, column: 18, scope: !961)
!965 = !DILocation(line: 370, column: 65, scope: !961)
!966 = !DILocation(line: 370, column: 13, scope: !958)
!967 = !DILocation(line: 371, column: 20, scope: !961)
!968 = !DILocation(line: 371, column: 13, scope: !961)
!969 = !DILocation(line: 372, column: 5, scope: !958)
!970 = !DILocation(line: 374, column: 17, scope: !971)
!971 = distinct !DILexicalBlock(scope: !954, file: !581, line: 372, column: 12)
!972 = !DILocation(line: 376, column: 31, scope: !973)
!973 = distinct !DILexicalBlock(scope: !971, file: !581, line: 375, column: 13)
!974 = !DILocation(line: 376, column: 37, scope: !973)
!975 = !DILocation(line: 376, column: 58, scope: !976)
!976 = !DILexicalBlockFile(scope: !973, file: !581, discriminator: 1)
!977 = !DILocation(line: 376, column: 64, scope: !976)
!978 = !DILocation(line: 376, column: 31, scope: !976)
!979 = !DILocation(line: 377, column: 57, scope: !973)
!980 = !DILocation(line: 377, column: 63, scope: !973)
!981 = !DILocation(line: 377, column: 56, scope: !973)
!982 = !DILocation(line: 377, column: 54, scope: !973)
!983 = !DILocation(line: 376, column: 31, scope: !984)
!984 = !DILexicalBlockFile(scope: !973, file: !581, discriminator: 2)
!985 = !DILocation(line: 376, column: 31, scope: !986)
!986 = !DILexicalBlockFile(scope: !973, file: !581, discriminator: 3)
!987 = !DILocation(line: 375, column: 20, scope: !973)
!988 = !DILocation(line: 375, column: 18, scope: !973)
!989 = !DILocation(line: 377, column: 79, scope: !976)
!990 = !DILocation(line: 375, column: 13, scope: !971)
!991 = !DILocation(line: 378, column: 20, scope: !973)
!992 = !DILocation(line: 378, column: 13, scope: !973)
!993 = !DILocation(line: 379, column: 43, scope: !994)
!994 = distinct !DILexicalBlock(scope: !971, file: !581, line: 379, column: 13)
!995 = !DILocation(line: 379, column: 53, scope: !994)
!996 = !DILocation(line: 379, column: 62, scope: !994)
!997 = !DILocation(line: 379, column: 20, scope: !994)
!998 = !DILocation(line: 379, column: 18, scope: !994)
!999 = !DILocation(line: 379, column: 83, scope: !994)
!1000 = !DILocation(line: 379, column: 13, scope: !971)
!1001 = !DILocation(line: 380, column: 20, scope: !994)
!1002 = !DILocation(line: 380, column: 13, scope: !994)
!1003 = !DILocation(line: 383, column: 15, scope: !649)
!1004 = !DILocation(line: 383, column: 13, scope: !649)
!1005 = !DILocation(line: 384, column: 38, scope: !1006)
!1006 = distinct !DILexicalBlock(scope: !649, file: !581, line: 384, column: 9)
!1007 = !DILocation(line: 384, column: 43, scope: !1006)
!1008 = !DILocation(line: 384, column: 16, scope: !1006)
!1009 = !DILocation(line: 384, column: 14, scope: !1006)
!1010 = !DILocation(line: 384, column: 53, scope: !1006)
!1011 = !DILocation(line: 384, column: 9, scope: !649)
!1012 = !DILocation(line: 385, column: 16, scope: !1006)
!1013 = !DILocation(line: 385, column: 9, scope: !1006)
!1014 = !DILocation(line: 387, column: 15, scope: !649)
!1015 = !DILocation(line: 387, column: 13, scope: !649)
!1016 = !DILocation(line: 388, column: 38, scope: !649)
!1017 = !DILocation(line: 388, column: 43, scope: !649)
!1018 = !DILocation(line: 388, column: 12, scope: !649)
!1019 = !DILocation(line: 388, column: 5, scope: !649)
!1020 = !DILocation(line: 389, column: 1, scope: !649)
!1021 = distinct !DISubprogram(name: "request_frame", scope: !581, file: !581, line: 274, type: !399, isLocal: true, isDefinition: true, scopeLine: 275, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !638)
!1022 = !DILocalVariable(name: "outlink", arg: 1, scope: !1021, file: !581, line: 274, type: !387)
!1023 = !DILocation(line: 274, column: 40, scope: !1021)
!1024 = !DILocalVariable(name: "eval", scope: !1021, file: !581, line: 276, type: !658)
!1025 = !DILocation(line: 276, column: 18, scope: !1021)
!1026 = !DILocation(line: 276, column: 25, scope: !1021)
!1027 = !DILocation(line: 276, column: 34, scope: !1021)
!1028 = !DILocation(line: 276, column: 39, scope: !1021)
!1029 = !DILocalVariable(name: "samplesref", scope: !1021, file: !581, line: 277, type: !285)
!1030 = !DILocation(line: 277, column: 14, scope: !1021)
!1031 = !DILocalVariable(name: "i", scope: !1021, file: !581, line: 278, type: !200)
!1032 = !DILocation(line: 278, column: 9, scope: !1021)
!1033 = !DILocalVariable(name: "j", scope: !1021, file: !581, line: 278, type: !200)
!1034 = !DILocation(line: 278, column: 12, scope: !1021)
!1035 = !DILocalVariable(name: "t", scope: !1021, file: !581, line: 279, type: !206)
!1036 = !DILocation(line: 279, column: 13, scope: !1021)
!1037 = !DILocation(line: 279, column: 28, scope: !1021)
!1038 = !DILocation(line: 279, column: 34, scope: !1021)
!1039 = !DILocation(line: 279, column: 46, scope: !1021)
!1040 = !DILocation(line: 279, column: 52, scope: !1021)
!1041 = !DILocation(line: 279, column: 17, scope: !1021)
!1042 = !DILocalVariable(name: "nb_samples", scope: !1021, file: !581, line: 280, type: !200)
!1043 = !DILocation(line: 280, column: 9, scope: !1021)
!1044 = !DILocation(line: 282, column: 9, scope: !1045)
!1045 = distinct !DILexicalBlock(scope: !1021, file: !581, line: 282, column: 9)
!1046 = !DILocation(line: 282, column: 15, scope: !1045)
!1047 = !DILocation(line: 282, column: 24, scope: !1045)
!1048 = !DILocation(line: 282, column: 29, scope: !1045)
!1049 = !DILocation(line: 282, column: 32, scope: !1050)
!1050 = !DILexicalBlockFile(scope: !1045, file: !581, discriminator: 1)
!1051 = !DILocation(line: 282, column: 37, scope: !1050)
!1052 = !DILocation(line: 282, column: 43, scope: !1050)
!1053 = !DILocation(line: 282, column: 34, scope: !1050)
!1054 = !DILocation(line: 282, column: 9, scope: !1050)
!1055 = !DILocation(line: 283, column: 9, scope: !1045)
!1056 = !DILocation(line: 285, column: 9, scope: !1057)
!1057 = distinct !DILexicalBlock(scope: !1021, file: !581, line: 285, column: 9)
!1058 = !DILocation(line: 285, column: 15, scope: !1057)
!1059 = !DILocation(line: 285, column: 24, scope: !1057)
!1060 = !DILocation(line: 285, column: 9, scope: !1021)
!1061 = !DILocation(line: 286, column: 24, scope: !1062)
!1062 = distinct !DILexicalBlock(scope: !1057, file: !581, line: 285, column: 30)
!1063 = !DILocation(line: 286, column: 30, scope: !1062)
!1064 = !DILocation(line: 286, column: 23, scope: !1062)
!1065 = !DILocation(line: 286, column: 56, scope: !1062)
!1066 = !DILocation(line: 286, column: 62, scope: !1062)
!1067 = !DILocation(line: 286, column: 72, scope: !1062)
!1068 = !DILocation(line: 286, column: 78, scope: !1062)
!1069 = !DILocation(line: 286, column: 45, scope: !1062)
!1070 = !DILocation(line: 286, column: 102, scope: !1062)
!1071 = !DILocation(line: 286, column: 108, scope: !1062)
!1072 = !DILocation(line: 286, column: 100, scope: !1062)
!1073 = !DILocation(line: 286, column: 42, scope: !1062)
!1074 = !DILocation(line: 286, column: 127, scope: !1075)
!1075 = !DILexicalBlockFile(scope: !1062, file: !581, discriminator: 1)
!1076 = !DILocation(line: 286, column: 133, scope: !1075)
!1077 = !DILocation(line: 286, column: 143, scope: !1075)
!1078 = !DILocation(line: 286, column: 149, scope: !1075)
!1079 = !DILocation(line: 286, column: 116, scope: !1075)
!1080 = !DILocation(line: 286, column: 173, scope: !1075)
!1081 = !DILocation(line: 286, column: 179, scope: !1075)
!1082 = !DILocation(line: 286, column: 171, scope: !1075)
!1083 = !DILocation(line: 286, column: 23, scope: !1075)
!1084 = !DILocation(line: 286, column: 187, scope: !1085)
!1085 = !DILexicalBlockFile(scope: !1062, file: !581, discriminator: 2)
!1086 = !DILocation(line: 286, column: 193, scope: !1085)
!1087 = !DILocation(line: 286, column: 186, scope: !1085)
!1088 = !DILocation(line: 286, column: 23, scope: !1085)
!1089 = !DILocation(line: 286, column: 23, scope: !1090)
!1090 = !DILexicalBlockFile(scope: !1062, file: !581, discriminator: 3)
!1091 = !DILocation(line: 286, column: 22, scope: !1090)
!1092 = !DILocation(line: 286, column: 20, scope: !1090)
!1093 = !DILocation(line: 287, column: 14, scope: !1094)
!1094 = distinct !DILexicalBlock(scope: !1062, file: !581, line: 287, column: 13)
!1095 = !DILocation(line: 287, column: 13, scope: !1062)
!1096 = !DILocation(line: 288, column: 13, scope: !1094)
!1097 = !DILocation(line: 289, column: 5, scope: !1062)
!1098 = !DILocation(line: 290, column: 22, scope: !1099)
!1099 = distinct !DILexicalBlock(scope: !1057, file: !581, line: 289, column: 12)
!1100 = !DILocation(line: 290, column: 28, scope: !1099)
!1101 = !DILocation(line: 290, column: 20, scope: !1099)
!1102 = !DILocation(line: 292, column: 38, scope: !1021)
!1103 = !DILocation(line: 292, column: 47, scope: !1021)
!1104 = !DILocation(line: 292, column: 18, scope: !1021)
!1105 = !DILocation(line: 292, column: 16, scope: !1021)
!1106 = !DILocation(line: 293, column: 10, scope: !1107)
!1107 = distinct !DILexicalBlock(scope: !1021, file: !581, line: 293, column: 9)
!1108 = !DILocation(line: 293, column: 9, scope: !1021)
!1109 = !DILocation(line: 294, column: 9, scope: !1107)
!1110 = !DILocation(line: 297, column: 12, scope: !1111)
!1111 = distinct !DILexicalBlock(scope: !1021, file: !581, line: 297, column: 5)
!1112 = !DILocation(line: 297, column: 10, scope: !1111)
!1113 = !DILocation(line: 297, column: 17, scope: !1114)
!1114 = !DILexicalBlockFile(scope: !1115, file: !581, discriminator: 1)
!1115 = distinct !DILexicalBlock(scope: !1111, file: !581, line: 297, column: 5)
!1116 = !DILocation(line: 297, column: 21, scope: !1114)
!1117 = !DILocation(line: 297, column: 19, scope: !1114)
!1118 = !DILocation(line: 297, column: 5, scope: !1114)
!1119 = !DILocation(line: 298, column: 35, scope: !1120)
!1120 = distinct !DILexicalBlock(scope: !1115, file: !581, line: 297, column: 49)
!1121 = !DILocation(line: 298, column: 41, scope: !1120)
!1122 = !DILocation(line: 298, column: 9, scope: !1120)
!1123 = !DILocation(line: 298, column: 15, scope: !1120)
!1124 = !DILocation(line: 298, column: 33, scope: !1120)
!1125 = !DILocation(line: 299, column: 35, scope: !1120)
!1126 = !DILocation(line: 299, column: 41, scope: !1120)
!1127 = !DILocation(line: 299, column: 59, scope: !1120)
!1128 = !DILocation(line: 299, column: 71, scope: !1120)
!1129 = !DILocation(line: 299, column: 77, scope: !1120)
!1130 = !DILocation(line: 299, column: 70, scope: !1120)
!1131 = !DILocation(line: 299, column: 9, scope: !1120)
!1132 = !DILocation(line: 299, column: 15, scope: !1120)
!1133 = !DILocation(line: 299, column: 33, scope: !1120)
!1134 = !DILocation(line: 301, column: 16, scope: !1135)
!1135 = distinct !DILexicalBlock(scope: !1120, file: !581, line: 301, column: 9)
!1136 = !DILocation(line: 301, column: 14, scope: !1135)
!1137 = !DILocation(line: 301, column: 21, scope: !1138)
!1138 = !DILexicalBlockFile(scope: !1139, file: !581, discriminator: 1)
!1139 = distinct !DILexicalBlock(scope: !1135, file: !581, line: 301, column: 9)
!1140 = !DILocation(line: 301, column: 25, scope: !1138)
!1141 = !DILocation(line: 301, column: 31, scope: !1138)
!1142 = !DILocation(line: 301, column: 23, scope: !1138)
!1143 = !DILocation(line: 301, column: 9, scope: !1138)
!1144 = !DILocation(line: 303, column: 41, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1139, file: !581, line: 301, column: 49)
!1146 = !DILocation(line: 303, column: 30, scope: !1145)
!1147 = !DILocation(line: 303, column: 36, scope: !1145)
!1148 = !DILocation(line: 303, column: 45, scope: !1145)
!1149 = !DILocation(line: 303, column: 51, scope: !1145)
!1150 = !DILocation(line: 303, column: 17, scope: !1145)
!1151 = !DILocation(line: 302, column: 52, scope: !1145)
!1152 = !DILocation(line: 302, column: 26, scope: !1145)
!1153 = !DILocation(line: 302, column: 38, scope: !1145)
!1154 = !DILocation(line: 302, column: 15, scope: !1145)
!1155 = !DILocation(line: 302, column: 57, scope: !1145)
!1156 = !DILocation(line: 302, column: 55, scope: !1145)
!1157 = !DILocation(line: 302, column: 60, scope: !1145)
!1158 = !DILocation(line: 304, column: 9, scope: !1145)
!1159 = !DILocation(line: 301, column: 45, scope: !1160)
!1160 = !DILexicalBlockFile(scope: !1139, file: !581, discriminator: 2)
!1161 = !DILocation(line: 301, column: 9, scope: !1160)
!1162 = distinct !{!1162, !1163}
!1163 = !DILocation(line: 301, column: 9, scope: !1120)
!1164 = !DILocation(line: 305, column: 5, scope: !1120)
!1165 = !DILocation(line: 297, column: 34, scope: !1166)
!1166 = !DILexicalBlockFile(scope: !1115, file: !581, discriminator: 2)
!1167 = !DILocation(line: 297, column: 38, scope: !1166)
!1168 = !DILocation(line: 297, column: 44, scope: !1166)
!1169 = !DILocation(line: 297, column: 45, scope: !1166)
!1170 = !DILocation(line: 297, column: 5, scope: !1166)
!1171 = distinct !{!1171, !1172}
!1172 = !DILocation(line: 297, column: 5, scope: !1021)
!1173 = !DILocation(line: 307, column: 23, scope: !1021)
!1174 = !DILocation(line: 307, column: 29, scope: !1021)
!1175 = !DILocation(line: 307, column: 5, scope: !1021)
!1176 = !DILocation(line: 307, column: 17, scope: !1021)
!1177 = !DILocation(line: 307, column: 21, scope: !1021)
!1178 = !DILocation(line: 308, column: 31, scope: !1021)
!1179 = !DILocation(line: 308, column: 37, scope: !1021)
!1180 = !DILocation(line: 308, column: 5, scope: !1021)
!1181 = !DILocation(line: 308, column: 17, scope: !1021)
!1182 = !DILocation(line: 308, column: 29, scope: !1021)
!1183 = !DILocation(line: 309, column: 18, scope: !1021)
!1184 = !DILocation(line: 309, column: 5, scope: !1021)
!1185 = !DILocation(line: 309, column: 11, scope: !1021)
!1186 = !DILocation(line: 309, column: 15, scope: !1021)
!1187 = !DILocation(line: 311, column: 28, scope: !1021)
!1188 = !DILocation(line: 311, column: 37, scope: !1021)
!1189 = !DILocation(line: 311, column: 12, scope: !1021)
!1190 = !DILocation(line: 311, column: 5, scope: !1021)
!1191 = !DILocation(line: 312, column: 1, scope: !1021)
!1192 = distinct !DISubprogram(name: "config_props", scope: !581, file: !581, line: 223, type: !399, isLocal: true, isDefinition: true, scopeLine: 224, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !638)
!1193 = !DILocalVariable(name: "outlink", arg: 1, scope: !1192, file: !581, line: 223, type: !387)
!1194 = !DILocation(line: 223, column: 39, scope: !1192)
!1195 = !DILocalVariable(name: "eval", scope: !1192, file: !581, line: 225, type: !658)
!1196 = !DILocation(line: 225, column: 18, scope: !1192)
!1197 = !DILocation(line: 225, column: 25, scope: !1192)
!1198 = !DILocation(line: 225, column: 34, scope: !1192)
!1199 = !DILocation(line: 225, column: 39, scope: !1192)
!1200 = !DILocalVariable(name: "buf", scope: !1192, file: !581, line: 226, type: !1201)
!1201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 1024, align: 8, elements: !1202)
!1202 = !{!1203}
!1203 = !DISubrange(count: 128)
!1204 = !DILocation(line: 226, column: 10, scope: !1192)
!1205 = !DILocation(line: 228, column: 5, scope: !1192)
!1206 = !DILocation(line: 228, column: 14, scope: !1192)
!1207 = !DILocation(line: 228, column: 38, scope: !1192)
!1208 = !DILocation(line: 228, column: 42, scope: !1192)
!1209 = !DILocation(line: 228, column: 48, scope: !1192)
!1210 = !DILocation(line: 228, column: 26, scope: !1192)
!1211 = !DILocation(line: 229, column: 28, scope: !1192)
!1212 = !DILocation(line: 229, column: 34, scope: !1192)
!1213 = !DILocation(line: 229, column: 5, scope: !1192)
!1214 = !DILocation(line: 229, column: 14, scope: !1192)
!1215 = !DILocation(line: 229, column: 26, scope: !1192)
!1216 = !DILocation(line: 231, column: 31, scope: !1192)
!1217 = !DILocation(line: 231, column: 37, scope: !1192)
!1218 = !DILocation(line: 231, column: 5, scope: !1192)
!1219 = !DILocation(line: 231, column: 11, scope: !1192)
!1220 = !DILocation(line: 231, column: 29, scope: !1192)
!1221 = !DILocation(line: 232, column: 5, scope: !1192)
!1222 = !DILocation(line: 232, column: 11, scope: !1192)
!1223 = !DILocation(line: 232, column: 42, scope: !1192)
!1224 = !DILocation(line: 233, column: 45, scope: !1192)
!1225 = !DILocation(line: 233, column: 54, scope: !1192)
!1226 = !DILocation(line: 233, column: 5, scope: !1192)
!1227 = !DILocation(line: 233, column: 11, scope: !1192)
!1228 = !DILocation(line: 233, column: 43, scope: !1192)
!1229 = !DILocation(line: 235, column: 34, scope: !1192)
!1230 = !DILocation(line: 235, column: 55, scope: !1192)
!1231 = !DILocation(line: 235, column: 61, scope: !1192)
!1232 = !DILocation(line: 235, column: 5, scope: !1192)
!1233 = !DILocation(line: 237, column: 12, scope: !1192)
!1234 = !DILocation(line: 237, column: 21, scope: !1192)
!1235 = !DILocation(line: 239, column: 12, scope: !1192)
!1236 = !DILocation(line: 239, column: 18, scope: !1192)
!1237 = !DILocation(line: 239, column: 31, scope: !1192)
!1238 = !DILocation(line: 239, column: 36, scope: !1192)
!1239 = !DILocation(line: 239, column: 42, scope: !1192)
!1240 = !DILocation(line: 237, column: 5, scope: !1192)
!1241 = !DILocation(line: 241, column: 5, scope: !1192)
!1242 = distinct !DISubprogram(name: "parse_channel_expressions", scope: !581, file: !581, line: 103, type: !1243, isLocal: true, isDefinition: true, scopeLine: 105, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !638)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{!200, !173, !200}
!1245 = !DILocalVariable(name: "ctx", arg: 1, scope: !1242, file: !581, line: 103, type: !173)
!1246 = !DILocation(line: 103, column: 55, scope: !1242)
!1247 = !DILocalVariable(name: "expected_nb_channels", arg: 2, scope: !1242, file: !581, line: 104, type: !200)
!1248 = !DILocation(line: 104, column: 42, scope: !1242)
!1249 = !DILocalVariable(name: "eval", scope: !1242, file: !581, line: 106, type: !658)
!1250 = !DILocation(line: 106, column: 18, scope: !1242)
!1251 = !DILocation(line: 106, column: 25, scope: !1242)
!1252 = !DILocation(line: 106, column: 30, scope: !1242)
!1253 = !DILocalVariable(name: "args1", scope: !1242, file: !581, line: 107, type: !431)
!1254 = !DILocation(line: 107, column: 11, scope: !1242)
!1255 = !DILocation(line: 107, column: 29, scope: !1242)
!1256 = !DILocation(line: 107, column: 35, scope: !1242)
!1257 = !DILocation(line: 107, column: 19, scope: !1242)
!1258 = !DILocalVariable(name: "expr", scope: !1242, file: !581, line: 108, type: !431)
!1259 = !DILocation(line: 108, column: 11, scope: !1242)
!1260 = !DILocalVariable(name: "last_expr", scope: !1242, file: !581, line: 108, type: !431)
!1261 = !DILocation(line: 108, column: 18, scope: !1242)
!1262 = !DILocalVariable(name: "buf", scope: !1242, file: !581, line: 108, type: !431)
!1263 = !DILocation(line: 108, column: 36, scope: !1242)
!1264 = !DILocalVariable(name: "func1", scope: !1242, file: !581, line: 109, type: !1265)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64, align: 64)
!1266 = !DILocation(line: 109, column: 22, scope: !1242)
!1267 = !DILocalVariable(name: "func1_names", scope: !1242, file: !581, line: 110, type: !1268)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64, align: 64)
!1269 = !DILocation(line: 110, column: 25, scope: !1242)
!1270 = !DILocalVariable(name: "i", scope: !1242, file: !581, line: 111, type: !200)
!1271 = !DILocation(line: 111, column: 9, scope: !1242)
!1272 = !DILocalVariable(name: "ret", scope: !1242, file: !581, line: 111, type: !200)
!1273 = !DILocation(line: 111, column: 12, scope: !1242)
!1274 = !DILocation(line: 113, column: 10, scope: !1275)
!1275 = distinct !DILexicalBlock(scope: !1242, file: !581, line: 113, column: 9)
!1276 = !DILocation(line: 113, column: 9, scope: !1242)
!1277 = !DILocation(line: 114, column: 9, scope: !1275)
!1278 = !DILocation(line: 116, column: 10, scope: !1279)
!1279 = distinct !DILexicalBlock(scope: !1242, file: !581, line: 116, column: 9)
!1280 = !DILocation(line: 116, column: 16, scope: !1279)
!1281 = !DILocation(line: 116, column: 9, scope: !1242)
!1282 = !DILocation(line: 117, column: 16, scope: !1283)
!1283 = distinct !DILexicalBlock(scope: !1279, file: !581, line: 116, column: 23)
!1284 = !DILocation(line: 117, column: 9, scope: !1283)
!1285 = !DILocation(line: 118, column: 9, scope: !1283)
!1286 = !DILocation(line: 121, column: 17, scope: !1287)
!1287 = distinct !DILexicalBlock(scope: !1242, file: !581, line: 121, column: 9)
!1288 = !DILocation(line: 121, column: 22, scope: !1287)
!1289 = !DILocation(line: 121, column: 30, scope: !1287)
!1290 = !DILocation(line: 121, column: 10, scope: !1287)
!1291 = !DILocation(line: 121, column: 9, scope: !1242)
!1292 = !DILocation(line: 122, column: 15, scope: !1293)
!1293 = distinct !DILexicalBlock(scope: !1287, file: !581, line: 121, column: 46)
!1294 = !DILocation(line: 123, column: 21, scope: !1293)
!1295 = !DILocation(line: 124, column: 5, scope: !1293)
!1296 = !DILocation(line: 141, column: 12, scope: !1297)
!1297 = distinct !DILexicalBlock(scope: !1242, file: !581, line: 141, column: 5)
!1298 = !DILocation(line: 141, column: 10, scope: !1297)
!1299 = !DILocation(line: 141, column: 17, scope: !1300)
!1300 = !DILexicalBlockFile(scope: !1301, file: !581, discriminator: 1)
!1301 = distinct !DILexicalBlock(scope: !1297, file: !581, line: 141, column: 5)
!1302 = !DILocation(line: 141, column: 21, scope: !1300)
!1303 = !DILocation(line: 141, column: 27, scope: !1300)
!1304 = !DILocation(line: 141, column: 19, scope: !1300)
!1305 = !DILocation(line: 141, column: 5, scope: !1300)
!1306 = !DILocation(line: 142, column: 33, scope: !1307)
!1307 = distinct !DILexicalBlock(scope: !1301, file: !581, line: 141, column: 45)
!1308 = !DILocation(line: 142, column: 22, scope: !1307)
!1309 = !DILocation(line: 142, column: 28, scope: !1307)
!1310 = !DILocation(line: 142, column: 9, scope: !1307)
!1311 = !DILocation(line: 143, column: 20, scope: !1307)
!1312 = !DILocation(line: 143, column: 9, scope: !1307)
!1313 = !DILocation(line: 143, column: 15, scope: !1307)
!1314 = !DILocation(line: 143, column: 23, scope: !1307)
!1315 = !DILocation(line: 144, column: 5, scope: !1307)
!1316 = !DILocation(line: 141, column: 41, scope: !1317)
!1317 = !DILexicalBlockFile(scope: !1301, file: !581, discriminator: 2)
!1318 = !DILocation(line: 141, column: 5, scope: !1317)
!1319 = distinct !{!1319, !1320}
!1320 = !DILocation(line: 141, column: 5, scope: !1242)
!1321 = !DILocation(line: 145, column: 15, scope: !1242)
!1322 = !DILocation(line: 145, column: 21, scope: !1242)
!1323 = !DILocation(line: 145, column: 14, scope: !1242)
!1324 = !DILocation(line: 145, column: 5, scope: !1242)
!1325 = !DILocation(line: 146, column: 5, scope: !1242)
!1326 = !DILocation(line: 146, column: 11, scope: !1242)
!1327 = !DILocation(line: 146, column: 23, scope: !1242)
!1328 = !DILocation(line: 148, column: 11, scope: !1242)
!1329 = !DILocation(line: 148, column: 9, scope: !1242)
!1330 = !DILocation(line: 149, column: 5, scope: !1242)
!1331 = !DILocation(line: 149, column: 29, scope: !1332)
!1332 = !DILexicalBlockFile(scope: !1242, file: !581, discriminator: 1)
!1333 = !DILocation(line: 149, column: 19, scope: !1332)
!1334 = !DILocation(line: 149, column: 17, scope: !1332)
!1335 = !DILocation(line: 149, column: 5, scope: !1332)
!1336 = !DILocation(line: 150, column: 9, scope: !1337)
!1337 = distinct !DILexicalBlock(scope: !1242, file: !581, line: 149, column: 46)
!1338 = distinct !{!1338, !1336}
!1339 = !DILocation(line: 150, column: 46, scope: !1340)
!1340 = !DILexicalBlockFile(scope: !1341, file: !581, discriminator: 1)
!1341 = distinct !DILexicalBlock(scope: !1342, file: !581, line: 150, column: 18)
!1342 = distinct !DILexicalBlock(scope: !1337, file: !581, line: 150, column: 12)
!1343 = !DILocation(line: 150, column: 52, scope: !1340)
!1344 = !DILocation(line: 150, column: 36, scope: !1340)
!1345 = !DILocation(line: 150, column: 59, scope: !1340)
!1346 = !DILocation(line: 150, column: 65, scope: !1340)
!1347 = !DILocation(line: 150, column: 19, scope: !1340)
!1348 = !DILocation(line: 150, column: 18, scope: !1340)
!1349 = !DILocation(line: 150, column: 17, scope: !1350)
!1350 = !DILexicalBlockFile(scope: !1351, file: !581, discriminator: 2)
!1351 = distinct !DILexicalBlock(scope: !1341, file: !581, line: 150, column: 11)
!1352 = !DILocation(line: 150, column: 12, scope: !1350)
!1353 = !DILocation(line: 150, column: 35, scope: !1354)
!1354 = !DILexicalBlockFile(scope: !1342, file: !581, discriminator: 3)
!1355 = !DILocation(line: 150, column: 41, scope: !1354)
!1356 = !DILocation(line: 150, column: 52, scope: !1354)
!1357 = !DILocation(line: 150, column: 24, scope: !1354)
!1358 = !DILocation(line: 150, column: 30, scope: !1354)
!1359 = !DILocation(line: 150, column: 56, scope: !1354)
!1360 = !DILocation(line: 150, column: 42, scope: !1354)
!1361 = !DILocation(line: 150, column: 48, scope: !1354)
!1362 = !DILocation(line: 150, column: 60, scope: !1354)
!1363 = !DILocation(line: 150, column: 31, scope: !1354)
!1364 = !DILocation(line: 150, column: 37, scope: !1354)
!1365 = !DILocation(line: 150, column: 66, scope: !1354)
!1366 = !DILocation(line: 150, column: 83, scope: !1354)
!1367 = !DILocation(line: 150, column: 96, scope: !1354)
!1368 = !DILocation(line: 150, column: 13, scope: !1354)
!1369 = !DILocation(line: 150, column: 16, scope: !1354)
!1370 = !DILocation(line: 150, column: 14, scope: !1354)
!1371 = !DILocation(line: 150, column: 23, scope: !1354)
!1372 = !DILocation(line: 150, column: 27, scope: !1354)
!1373 = !DILocation(line: 150, column: 32, scope: !1374)
!1374 = !DILexicalBlockFile(scope: !1375, file: !581, discriminator: 4)
!1375 = distinct !DILexicalBlock(scope: !1342, file: !581, line: 150, column: 23)
!1376 = !DILocation(line: 150, column: 42, scope: !1377)
!1377 = !DILexicalBlockFile(scope: !1342, file: !581, discriminator: 5)
!1378 = !DILocation(line: 151, column: 21, scope: !1337)
!1379 = !DILocation(line: 151, column: 19, scope: !1337)
!1380 = !DILocation(line: 149, column: 5, scope: !1381)
!1381 = !DILexicalBlockFile(scope: !1242, file: !581, discriminator: 2)
!1382 = distinct !{!1382, !1330}
!1383 = !DILocation(line: 154, column: 9, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1242, file: !581, line: 154, column: 9)
!1385 = !DILocation(line: 154, column: 32, scope: !1384)
!1386 = !DILocation(line: 154, column: 38, scope: !1384)
!1387 = !DILocation(line: 154, column: 30, scope: !1384)
!1388 = !DILocation(line: 154, column: 9, scope: !1242)
!1389 = !DILocation(line: 155, column: 18, scope: !1390)
!1390 = distinct !DILexicalBlock(scope: !1384, file: !581, line: 155, column: 9)
!1391 = !DILocation(line: 155, column: 24, scope: !1390)
!1392 = !DILocation(line: 155, column: 16, scope: !1390)
!1393 = !DILocation(line: 155, column: 14, scope: !1390)
!1394 = !DILocation(line: 155, column: 37, scope: !1395)
!1395 = !DILexicalBlockFile(scope: !1396, file: !581, discriminator: 1)
!1396 = distinct !DILexicalBlock(scope: !1390, file: !581, line: 155, column: 9)
!1397 = !DILocation(line: 155, column: 41, scope: !1395)
!1398 = !DILocation(line: 155, column: 39, scope: !1395)
!1399 = !DILocation(line: 155, column: 9, scope: !1395)
!1400 = !DILocation(line: 156, column: 13, scope: !1396)
!1401 = distinct !{!1401, !1400}
!1402 = !DILocation(line: 156, column: 50, scope: !1403)
!1403 = !DILexicalBlockFile(scope: !1404, file: !581, discriminator: 1)
!1404 = distinct !DILexicalBlock(scope: !1405, file: !581, line: 156, column: 22)
!1405 = distinct !DILexicalBlock(scope: !1396, file: !581, line: 156, column: 16)
!1406 = !DILocation(line: 156, column: 56, scope: !1403)
!1407 = !DILocation(line: 156, column: 40, scope: !1403)
!1408 = !DILocation(line: 156, column: 63, scope: !1403)
!1409 = !DILocation(line: 156, column: 69, scope: !1403)
!1410 = !DILocation(line: 156, column: 23, scope: !1403)
!1411 = !DILocation(line: 156, column: 22, scope: !1403)
!1412 = !DILocation(line: 156, column: 21, scope: !1413)
!1413 = !DILexicalBlockFile(scope: !1414, file: !581, discriminator: 2)
!1414 = distinct !DILexicalBlock(scope: !1404, file: !581, line: 156, column: 15)
!1415 = !DILocation(line: 156, column: 16, scope: !1413)
!1416 = !DILocation(line: 156, column: 39, scope: !1417)
!1417 = !DILexicalBlockFile(scope: !1405, file: !581, discriminator: 3)
!1418 = !DILocation(line: 156, column: 45, scope: !1417)
!1419 = !DILocation(line: 156, column: 56, scope: !1417)
!1420 = !DILocation(line: 156, column: 28, scope: !1417)
!1421 = !DILocation(line: 156, column: 34, scope: !1417)
!1422 = !DILocation(line: 156, column: 60, scope: !1417)
!1423 = !DILocation(line: 156, column: 46, scope: !1417)
!1424 = !DILocation(line: 156, column: 52, scope: !1417)
!1425 = !DILocation(line: 156, column: 64, scope: !1417)
!1426 = !DILocation(line: 156, column: 35, scope: !1417)
!1427 = !DILocation(line: 156, column: 41, scope: !1417)
!1428 = !DILocation(line: 156, column: 70, scope: !1417)
!1429 = !DILocation(line: 156, column: 92, scope: !1417)
!1430 = !DILocation(line: 156, column: 105, scope: !1417)
!1431 = !DILocation(line: 156, column: 17, scope: !1417)
!1432 = !DILocation(line: 156, column: 20, scope: !1417)
!1433 = !DILocation(line: 156, column: 18, scope: !1417)
!1434 = !DILocation(line: 156, column: 27, scope: !1417)
!1435 = !DILocation(line: 156, column: 31, scope: !1417)
!1436 = !DILocation(line: 156, column: 36, scope: !1437)
!1437 = !DILexicalBlockFile(scope: !1438, file: !581, discriminator: 4)
!1438 = distinct !DILexicalBlock(scope: !1405, file: !581, line: 156, column: 27)
!1439 = !DILocation(line: 156, column: 46, scope: !1440)
!1440 = !DILexicalBlockFile(scope: !1405, file: !581, discriminator: 5)
!1441 = !DILocation(line: 156, column: 46, scope: !1442)
!1442 = !DILexicalBlockFile(scope: !1405, file: !581, discriminator: 6)
!1443 = !DILocation(line: 155, column: 64, scope: !1444)
!1444 = !DILexicalBlockFile(scope: !1396, file: !581, discriminator: 2)
!1445 = !DILocation(line: 155, column: 9, scope: !1444)
!1446 = distinct !{!1446, !1447}
!1447 = !DILocation(line: 155, column: 9, scope: !1384)
!1448 = !DILocation(line: 156, column: 56, scope: !1449)
!1449 = !DILexicalBlockFile(scope: !1390, file: !581, discriminator: 7)
!1450 = !DILocation(line: 158, column: 9, scope: !1451)
!1451 = distinct !DILexicalBlock(scope: !1242, file: !581, line: 158, column: 9)
!1452 = !DILocation(line: 158, column: 30, scope: !1451)
!1453 = !DILocation(line: 158, column: 34, scope: !1451)
!1454 = !DILocation(line: 158, column: 37, scope: !1455)
!1455 = !DILexicalBlockFile(scope: !1451, file: !581, discriminator: 1)
!1456 = !DILocation(line: 158, column: 43, scope: !1455)
!1457 = !DILocation(line: 158, column: 58, scope: !1455)
!1458 = !DILocation(line: 158, column: 55, scope: !1455)
!1459 = !DILocation(line: 158, column: 9, scope: !1455)
!1460 = !DILocation(line: 159, column: 16, scope: !1461)
!1461 = distinct !DILexicalBlock(scope: !1451, file: !581, line: 158, column: 80)
!1462 = !DILocation(line: 162, column: 16, scope: !1461)
!1463 = !DILocation(line: 162, column: 22, scope: !1461)
!1464 = !DILocation(line: 162, column: 35, scope: !1461)
!1465 = !DILocation(line: 159, column: 9, scope: !1461)
!1466 = !DILocation(line: 163, column: 13, scope: !1461)
!1467 = !DILocation(line: 164, column: 9, scope: !1461)
!1468 = !DILocation(line: 158, column: 58, scope: !1469)
!1469 = !DILexicalBlockFile(scope: !1451, file: !581, discriminator: 2)
!1470 = !DILocation(line: 168, column: 13, scope: !1242)
!1471 = !DILocation(line: 168, column: 5, scope: !1242)
!1472 = !DILocation(line: 169, column: 12, scope: !1242)
!1473 = !DILocation(line: 169, column: 5, scope: !1242)
!1474 = !DILocation(line: 170, column: 1, scope: !1242)
!1475 = distinct !DISubprogram(name: "val", scope: !581, file: !581, line: 76, type: !627, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !638)
!1476 = !DILocalVariable(name: "priv", arg: 1, scope: !1475, file: !581, line: 76, type: !191)
!1477 = !DILocation(line: 76, column: 25, scope: !1475)
!1478 = !DILocalVariable(name: "ch", arg: 2, scope: !1475, file: !581, line: 76, type: !210)
!1479 = !DILocation(line: 76, column: 38, scope: !1475)
!1480 = !DILocalVariable(name: "eval", scope: !1475, file: !581, line: 78, type: !658)
!1481 = !DILocation(line: 78, column: 18, scope: !1475)
!1482 = !DILocation(line: 78, column: 25, scope: !1475)
!1483 = !DILocation(line: 79, column: 40, scope: !1475)
!1484 = !DILocation(line: 79, column: 35, scope: !1475)
!1485 = !DILocation(line: 79, column: 47, scope: !1475)
!1486 = !DILocation(line: 79, column: 53, scope: !1475)
!1487 = !DILocation(line: 79, column: 67, scope: !1475)
!1488 = !DILocation(line: 79, column: 44, scope: !1475)
!1489 = !DILocation(line: 79, column: 34, scope: !1475)
!1490 = !DILocation(line: 79, column: 74, scope: !1491)
!1491 = !DILexicalBlockFile(scope: !1475, file: !581, discriminator: 1)
!1492 = !DILocation(line: 79, column: 80, scope: !1491)
!1493 = !DILocation(line: 79, column: 94, scope: !1491)
!1494 = !DILocation(line: 79, column: 34, scope: !1491)
!1495 = !DILocation(line: 79, column: 106, scope: !1496)
!1496 = !DILexicalBlockFile(scope: !1475, file: !581, discriminator: 2)
!1497 = !DILocation(line: 79, column: 101, scope: !1496)
!1498 = !DILocation(line: 79, column: 34, scope: !1496)
!1499 = !DILocation(line: 79, column: 34, scope: !1500)
!1500 = !DILexicalBlockFile(scope: !1475, file: !581, discriminator: 3)
!1501 = !DILocation(line: 79, column: 12, scope: !1500)
!1502 = !DILocation(line: 79, column: 18, scope: !1500)
!1503 = !DILocation(line: 79, column: 5, scope: !1500)
!1504 = distinct !DISubprogram(name: "filter_frame", scope: !581, file: !581, line: 421, type: !395, isLocal: true, isDefinition: true, scopeLine: 422, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !638)
!1505 = !DILocalVariable(name: "inlink", arg: 1, scope: !1504, file: !581, line: 421, type: !387)
!1506 = !DILocation(line: 421, column: 39, scope: !1504)
!1507 = !DILocalVariable(name: "in", arg: 2, scope: !1504, file: !581, line: 421, type: !285)
!1508 = !DILocation(line: 421, column: 56, scope: !1504)
!1509 = !DILocalVariable(name: "eval", scope: !1504, file: !581, line: 423, type: !658)
!1510 = !DILocation(line: 423, column: 18, scope: !1504)
!1511 = !DILocation(line: 423, column: 25, scope: !1504)
!1512 = !DILocation(line: 423, column: 33, scope: !1504)
!1513 = !DILocation(line: 423, column: 38, scope: !1504)
!1514 = !DILocalVariable(name: "outlink", scope: !1504, file: !581, line: 424, type: !387)
!1515 = !DILocation(line: 424, column: 19, scope: !1504)
!1516 = !DILocation(line: 424, column: 29, scope: !1504)
!1517 = !DILocation(line: 424, column: 37, scope: !1504)
!1518 = !DILocation(line: 424, column: 42, scope: !1504)
!1519 = !DILocalVariable(name: "nb_samples", scope: !1504, file: !581, line: 425, type: !200)
!1520 = !DILocation(line: 425, column: 9, scope: !1504)
!1521 = !DILocation(line: 425, column: 22, scope: !1504)
!1522 = !DILocation(line: 425, column: 26, scope: !1504)
!1523 = !DILocalVariable(name: "out", scope: !1504, file: !581, line: 426, type: !285)
!1524 = !DILocation(line: 426, column: 14, scope: !1504)
!1525 = !DILocalVariable(name: "t0", scope: !1504, file: !581, line: 427, type: !210)
!1526 = !DILocation(line: 427, column: 12, scope: !1504)
!1527 = !DILocalVariable(name: "i", scope: !1504, file: !581, line: 428, type: !200)
!1528 = !DILocation(line: 428, column: 9, scope: !1504)
!1529 = !DILocalVariable(name: "j", scope: !1504, file: !581, line: 428, type: !200)
!1530 = !DILocation(line: 428, column: 12, scope: !1504)
!1531 = !DILocation(line: 430, column: 31, scope: !1504)
!1532 = !DILocation(line: 430, column: 40, scope: !1504)
!1533 = !DILocation(line: 430, column: 11, scope: !1504)
!1534 = !DILocation(line: 430, column: 9, scope: !1504)
!1535 = !DILocation(line: 431, column: 10, scope: !1536)
!1536 = distinct !DILexicalBlock(scope: !1504, file: !581, line: 431, column: 9)
!1537 = !DILocation(line: 431, column: 9, scope: !1504)
!1538 = !DILocation(line: 432, column: 9, scope: !1539)
!1539 = distinct !DILexicalBlock(scope: !1536, file: !581, line: 431, column: 15)
!1540 = !DILocation(line: 433, column: 9, scope: !1539)
!1541 = !DILocation(line: 435, column: 25, scope: !1504)
!1542 = !DILocation(line: 435, column: 30, scope: !1504)
!1543 = !DILocation(line: 435, column: 5, scope: !1504)
!1544 = !DILocation(line: 437, column: 12, scope: !1504)
!1545 = !DILocation(line: 437, column: 16, scope: !1504)
!1546 = !DILocation(line: 437, column: 21, scope: !1504)
!1547 = !DILocation(line: 437, column: 11, scope: !1504)
!1548 = !DILocation(line: 437, column: 11, scope: !1549)
!1549 = !DILexicalBlockFile(scope: !1504, file: !581, discriminator: 1)
!1550 = !DILocation(line: 437, column: 20, scope: !1551)
!1551 = !DILexicalBlockFile(scope: !1504, file: !581, discriminator: 2)
!1552 = !DILocation(line: 437, column: 24, scope: !1551)
!1553 = !DILocation(line: 437, column: 11, scope: !1551)
!1554 = !DILocation(line: 437, column: 36, scope: !1551)
!1555 = !DILocation(line: 437, column: 44, scope: !1551)
!1556 = !DILocation(line: 437, column: 29, scope: !1551)
!1557 = !DILocation(line: 437, column: 28, scope: !1551)
!1558 = !DILocation(line: 437, column: 11, scope: !1559)
!1559 = !DILexicalBlockFile(scope: !1504, file: !581, discriminator: 3)
!1560 = !DILocation(line: 437, column: 8, scope: !1559)
!1561 = !DILocation(line: 440, column: 12, scope: !1562)
!1562 = distinct !DILexicalBlock(scope: !1504, file: !581, line: 440, column: 5)
!1563 = !DILocation(line: 440, column: 10, scope: !1562)
!1564 = !DILocation(line: 440, column: 17, scope: !1565)
!1565 = !DILexicalBlockFile(scope: !1566, file: !581, discriminator: 1)
!1566 = distinct !DILexicalBlock(scope: !1562, file: !581, line: 440, column: 5)
!1567 = !DILocation(line: 440, column: 21, scope: !1565)
!1568 = !DILocation(line: 440, column: 19, scope: !1565)
!1569 = !DILocation(line: 440, column: 5, scope: !1565)
!1570 = !DILocation(line: 441, column: 35, scope: !1571)
!1571 = distinct !DILexicalBlock(scope: !1566, file: !581, line: 440, column: 49)
!1572 = !DILocation(line: 441, column: 41, scope: !1571)
!1573 = !DILocation(line: 441, column: 9, scope: !1571)
!1574 = !DILocation(line: 441, column: 15, scope: !1571)
!1575 = !DILocation(line: 441, column: 33, scope: !1571)
!1576 = !DILocation(line: 442, column: 35, scope: !1571)
!1577 = !DILocation(line: 442, column: 40, scope: !1571)
!1578 = !DILocation(line: 442, column: 42, scope: !1571)
!1579 = !DILocation(line: 442, column: 54, scope: !1571)
!1580 = !DILocation(line: 442, column: 62, scope: !1571)
!1581 = !DILocation(line: 442, column: 53, scope: !1571)
!1582 = !DILocation(line: 442, column: 38, scope: !1571)
!1583 = !DILocation(line: 442, column: 9, scope: !1571)
!1584 = !DILocation(line: 442, column: 15, scope: !1571)
!1585 = !DILocation(line: 442, column: 33, scope: !1571)
!1586 = !DILocation(line: 444, column: 16, scope: !1587)
!1587 = distinct !DILexicalBlock(scope: !1571, file: !581, line: 444, column: 9)
!1588 = !DILocation(line: 444, column: 14, scope: !1587)
!1589 = !DILocation(line: 444, column: 21, scope: !1590)
!1590 = !DILexicalBlockFile(scope: !1591, file: !581, discriminator: 1)
!1591 = distinct !DILexicalBlock(scope: !1587, file: !581, line: 444, column: 9)
!1592 = !DILocation(line: 444, column: 25, scope: !1590)
!1593 = !DILocation(line: 444, column: 33, scope: !1590)
!1594 = !DILocation(line: 444, column: 23, scope: !1590)
!1595 = !DILocation(line: 444, column: 9, scope: !1590)
!1596 = !DILocation(line: 445, column: 70, scope: !1591)
!1597 = !DILocation(line: 445, column: 52, scope: !1591)
!1598 = !DILocation(line: 445, column: 56, scope: !1591)
!1599 = !DILocation(line: 445, column: 41, scope: !1591)
!1600 = !DILocation(line: 445, column: 75, scope: !1591)
!1601 = !DILocation(line: 445, column: 73, scope: !1591)
!1602 = !DILocation(line: 445, column: 39, scope: !1591)
!1603 = !DILocation(line: 445, column: 34, scope: !1591)
!1604 = !DILocation(line: 445, column: 13, scope: !1591)
!1605 = !DILocation(line: 445, column: 19, scope: !1591)
!1606 = !DILocation(line: 445, column: 37, scope: !1591)
!1607 = !DILocation(line: 444, column: 44, scope: !1608)
!1608 = !DILexicalBlockFile(scope: !1591, file: !581, discriminator: 2)
!1609 = !DILocation(line: 444, column: 9, scope: !1608)
!1610 = distinct !{!1610, !1611}
!1611 = !DILocation(line: 444, column: 9, scope: !1571)
!1612 = !DILocation(line: 447, column: 16, scope: !1613)
!1613 = distinct !DILexicalBlock(scope: !1571, file: !581, line: 447, column: 9)
!1614 = !DILocation(line: 447, column: 14, scope: !1613)
!1615 = !DILocation(line: 447, column: 21, scope: !1616)
!1616 = !DILexicalBlockFile(scope: !1617, file: !581, discriminator: 1)
!1617 = distinct !DILexicalBlock(scope: !1613, file: !581, line: 447, column: 9)
!1618 = !DILocation(line: 447, column: 25, scope: !1616)
!1619 = !DILocation(line: 447, column: 34, scope: !1616)
!1620 = !DILocation(line: 447, column: 23, scope: !1616)
!1621 = !DILocation(line: 447, column: 9, scope: !1616)
!1622 = !DILocation(line: 448, column: 40, scope: !1623)
!1623 = distinct !DILexicalBlock(scope: !1617, file: !581, line: 447, column: 49)
!1624 = !DILocation(line: 448, column: 13, scope: !1623)
!1625 = !DILocation(line: 448, column: 19, scope: !1623)
!1626 = !DILocation(line: 448, column: 38, scope: !1623)
!1627 = !DILocation(line: 450, column: 41, scope: !1623)
!1628 = !DILocation(line: 450, column: 30, scope: !1623)
!1629 = !DILocation(line: 450, column: 36, scope: !1623)
!1630 = !DILocation(line: 450, column: 45, scope: !1623)
!1631 = !DILocation(line: 450, column: 51, scope: !1623)
!1632 = !DILocation(line: 450, column: 63, scope: !1623)
!1633 = !DILocation(line: 450, column: 17, scope: !1623)
!1634 = !DILocation(line: 449, column: 45, scope: !1623)
!1635 = !DILocation(line: 449, column: 26, scope: !1623)
!1636 = !DILocation(line: 449, column: 31, scope: !1623)
!1637 = !DILocation(line: 449, column: 15, scope: !1623)
!1638 = !DILocation(line: 449, column: 50, scope: !1623)
!1639 = !DILocation(line: 449, column: 48, scope: !1623)
!1640 = !DILocation(line: 449, column: 53, scope: !1623)
!1641 = !DILocation(line: 451, column: 9, scope: !1623)
!1642 = !DILocation(line: 447, column: 45, scope: !1643)
!1643 = !DILexicalBlockFile(scope: !1617, file: !581, discriminator: 2)
!1644 = !DILocation(line: 447, column: 9, scope: !1643)
!1645 = distinct !{!1645, !1646}
!1646 = !DILocation(line: 447, column: 9, scope: !1571)
!1647 = !DILocation(line: 452, column: 5, scope: !1571)
!1648 = !DILocation(line: 440, column: 34, scope: !1649)
!1649 = !DILexicalBlockFile(scope: !1566, file: !581, discriminator: 2)
!1650 = !DILocation(line: 440, column: 38, scope: !1649)
!1651 = !DILocation(line: 440, column: 44, scope: !1649)
!1652 = !DILocation(line: 440, column: 45, scope: !1649)
!1653 = !DILocation(line: 440, column: 5, scope: !1649)
!1654 = distinct !{!1654, !1655}
!1655 = !DILocation(line: 440, column: 5, scope: !1504)
!1656 = !DILocation(line: 454, column: 5, scope: !1504)
!1657 = !DILocation(line: 455, column: 28, scope: !1504)
!1658 = !DILocation(line: 455, column: 37, scope: !1504)
!1659 = !DILocation(line: 455, column: 12, scope: !1504)
!1660 = !DILocation(line: 455, column: 5, scope: !1504)
!1661 = !DILocation(line: 456, column: 1, scope: !1504)
!1662 = distinct !DISubprogram(name: "av_q2d", scope: !214, file: !214, line: 104, type: !1663, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !638)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{!210, !213}
!1665 = !DILocalVariable(name: "a", arg: 1, scope: !1662, file: !214, line: 104, type: !213)
!1666 = !DILocation(line: 104, column: 40, scope: !1662)
!1667 = !DILocation(line: 105, column: 14, scope: !1662)
!1668 = !DILocation(line: 105, column: 12, scope: !1662)
!1669 = !DILocation(line: 105, column: 31, scope: !1662)
!1670 = !DILocation(line: 105, column: 20, scope: !1662)
!1671 = !DILocation(line: 105, column: 18, scope: !1662)
!1672 = !DILocation(line: 105, column: 5, scope: !1662)
!1673 = distinct !DISubprogram(name: "aeval_config_output", scope: !581, file: !581, line: 391, type: !399, isLocal: true, isDefinition: true, scopeLine: 392, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !638)
!1674 = !DILocalVariable(name: "outlink", arg: 1, scope: !1673, file: !581, line: 391, type: !387)
!1675 = !DILocation(line: 391, column: 46, scope: !1673)
!1676 = !DILocalVariable(name: "ctx", scope: !1673, file: !581, line: 393, type: !173)
!1677 = !DILocation(line: 393, column: 22, scope: !1673)
!1678 = !DILocation(line: 393, column: 28, scope: !1673)
!1679 = !DILocation(line: 393, column: 37, scope: !1673)
!1680 = !DILocalVariable(name: "eval", scope: !1673, file: !581, line: 394, type: !658)
!1681 = !DILocation(line: 394, column: 18, scope: !1673)
!1682 = !DILocation(line: 394, column: 25, scope: !1673)
!1683 = !DILocation(line: 394, column: 30, scope: !1673)
!1684 = !DILocalVariable(name: "inlink", scope: !1673, file: !581, line: 395, type: !387)
!1685 = !DILocation(line: 395, column: 19, scope: !1673)
!1686 = !DILocation(line: 395, column: 28, scope: !1673)
!1687 = !DILocation(line: 395, column: 33, scope: !1673)
!1688 = !DILocalVariable(name: "ret", scope: !1673, file: !581, line: 396, type: !200)
!1689 = !DILocation(line: 396, column: 9, scope: !1673)
!1690 = !DILocation(line: 398, column: 9, scope: !1691)
!1691 = distinct !DILexicalBlock(scope: !1673, file: !581, line: 398, column: 9)
!1692 = !DILocation(line: 398, column: 15, scope: !1691)
!1693 = !DILocation(line: 398, column: 9, scope: !1673)
!1694 = !DILocation(line: 399, column: 26, scope: !1695)
!1695 = distinct !DILexicalBlock(scope: !1691, file: !581, line: 398, column: 30)
!1696 = !DILocation(line: 399, column: 34, scope: !1695)
!1697 = !DILocation(line: 399, column: 9, scope: !1695)
!1698 = !DILocation(line: 399, column: 15, scope: !1695)
!1699 = !DILocation(line: 399, column: 24, scope: !1695)
!1700 = !DILocation(line: 401, column: 46, scope: !1701)
!1701 = distinct !DILexicalBlock(scope: !1695, file: !581, line: 401, column: 13)
!1702 = !DILocation(line: 401, column: 51, scope: !1701)
!1703 = !DILocation(line: 401, column: 59, scope: !1701)
!1704 = !DILocation(line: 401, column: 20, scope: !1701)
!1705 = !DILocation(line: 401, column: 18, scope: !1701)
!1706 = !DILocation(line: 401, column: 70, scope: !1701)
!1707 = !DILocation(line: 401, column: 13, scope: !1695)
!1708 = !DILocation(line: 402, column: 20, scope: !1701)
!1709 = !DILocation(line: 402, column: 13, scope: !1701)
!1710 = !DILocation(line: 403, column: 5, scope: !1695)
!1711 = !DILocation(line: 405, column: 5, scope: !1673)
!1712 = !DILocation(line: 405, column: 11, scope: !1673)
!1713 = !DILocation(line: 405, column: 13, scope: !1673)
!1714 = !DILocation(line: 406, column: 67, scope: !1673)
!1715 = !DILocation(line: 406, column: 75, scope: !1673)
!1716 = !DILocation(line: 406, column: 28, scope: !1673)
!1717 = !DILocation(line: 406, column: 34, scope: !1673)
!1718 = !DILocation(line: 406, column: 65, scope: !1673)
!1719 = !DILocation(line: 406, column: 5, scope: !1673)
!1720 = !DILocation(line: 406, column: 11, scope: !1673)
!1721 = !DILocation(line: 406, column: 26, scope: !1673)
!1722 = !DILocation(line: 407, column: 45, scope: !1673)
!1723 = !DILocation(line: 407, column: 54, scope: !1673)
!1724 = !DILocation(line: 407, column: 5, scope: !1673)
!1725 = !DILocation(line: 407, column: 11, scope: !1673)
!1726 = !DILocation(line: 407, column: 43, scope: !1673)
!1727 = !DILocation(line: 408, column: 31, scope: !1673)
!1728 = !DILocation(line: 408, column: 39, scope: !1673)
!1729 = !DILocation(line: 408, column: 5, scope: !1673)
!1730 = !DILocation(line: 408, column: 11, scope: !1673)
!1731 = !DILocation(line: 408, column: 29, scope: !1673)
!1732 = !DILocation(line: 409, column: 5, scope: !1673)
!1733 = !DILocation(line: 409, column: 11, scope: !1673)
!1734 = !DILocation(line: 409, column: 29, scope: !1673)
!1735 = !DILocation(line: 411, column: 41, scope: !1673)
!1736 = !DILocation(line: 411, column: 47, scope: !1673)
!1737 = !DILocation(line: 412, column: 41, scope: !1673)
!1738 = !DILocation(line: 412, column: 49, scope: !1673)
!1739 = !DILocation(line: 411, column: 28, scope: !1673)
!1740 = !DILocation(line: 411, column: 5, scope: !1673)
!1741 = !DILocation(line: 411, column: 11, scope: !1673)
!1742 = !DILocation(line: 411, column: 26, scope: !1673)
!1743 = !DILocation(line: 413, column: 10, scope: !1744)
!1744 = distinct !DILexicalBlock(scope: !1673, file: !581, line: 413, column: 9)
!1745 = !DILocation(line: 413, column: 16, scope: !1744)
!1746 = !DILocation(line: 413, column: 9, scope: !1673)
!1747 = !DILocation(line: 414, column: 9, scope: !1744)
!1748 = !DILocation(line: 416, column: 5, scope: !1673)
!1749 = !DILocation(line: 417, column: 1, scope: !1673)
